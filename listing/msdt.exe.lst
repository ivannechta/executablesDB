jmp loc_1001885  +
add ch dl +
add eax [eax] +
mov edi esi +
or edx [esp+ebp*8] +
push esp  +
fcom  qword ptr [ecx] +
mov ecx 38140024h +
retn 0AB9Fh  +
***
xor esp ecx +
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+28h] +
xor ecx ecx +
cmp eax ecx +
jz loc_100A6B3  +
mov edx [ebp+0Ch] +
sub edx ecx +
jz loc_100A6A1  +
dec edx  +
jnz loc_100A6B3  +
mov cl [ebp+10h] +
mov [eax+28h] cl +
mov ecx [ebp+14h] +
mov [eax+10h] ecx +
mov ecx [ebp+18h] +
mov [eax+14h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+18h] ecx +
mov ecx [ebp+20h] +
mov dword ptr [eax+24h] 1 +
jmp loc_100A6B0  +
mov [eax+24h] ecx +
mov [eax+28h] cl +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
mov ecx [eax] +
or ecx [eax+4] +
jz loc_100A6CF  +
xor eax eax +
jmp loc_100A6DF  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventRegister  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jnz loc_100A700  +
xor eax eax +
jmp loc_100A70F  +
push ecx  +
push eax  +
call ds:EventUnregister  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventWrite  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101C9EA  +
test byte ptr [ebp+8] 1 +
jz loc_100A754  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
mov [ebp+var_4] ebx +
mov [ebp+ExitCode] ebx +
mov [ebp+var_C] ebx +
call ds:HeapSetInformation  +
push offset dword_104E090  +
push offset unk_104E098  +
push offset loc_100A665  +
push offset dword_100183C  +
call sub_100A6BC  +
cmp dword_104E0BC ebx +
jz loc_100A7F1  +
mov al byte_104E0C0 +
cmp al 4 +
jnb loc_100A7B0  +
cmp al bl +
jnz loc_100A7F1  +
mov ecx dword_104E0AC +
mov edx 80010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_100A7F1  +
mov ecx dword_104E0B4 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_104E0B0 +
jnz loc_100A7F1  +
cmp eax ecx +
jnz loc_100A7F1  +
push offset dword_1001850  +
push dword_104E094  +
push dword_104E090  +
call sub_100A719  +
mov eax [ebp+arg_0] +
push esi  +
mov dword_104E138 eax +
call sub_102610B  +
mov esi eax +
cmp esi ebx +
jge loc_100A80D  +
push esi  +
push 50h  +
jmp loc_100A8EB  +
push offset aEnablediagnost  +
push offset aSoftwarePolici  +
call sub_101551F  +
mov esi eax +
cmp esi ebx +
jge loc_100A82A  +
push esi  +
push 56h  +
jmp loc_100A8EB  +
mov uID 197h +
call sub_103001C  +
mov esi eax +
cmp esi ebx +
jge loc_100A847  +
push esi  +
push 5Ah  +
jmp loc_100A8EB  +
push 2  +
push ebx  +
mov uID 192h +
call ds:CoInitializeEx  +
mov esi eax +
cmp esi ebx +
jge loc_100A868  +
push esi  +
push 61h  +
jmp loc_100A8EB  +
mov ecx dword_104E188 +
call sub_1028B9C  +
mov esi eax +
cmp esi ebx +
jge loc_100A87E  +
push esi  +
push 64h  +
jmp loc_100A8EB  +
cmp esi edi +
jz loc_100A935  +
mov ecx dword_104E188 +
lea eax [ebp+var_C] +
push eax  +
call sub_1027467  +
mov esi eax +
cmp esi ebx +
jge loc_100A8A0  +
push esi  +
push 6Eh  +
jmp loc_100A8EB  +
push [ebp+var_C]  +
call sub_1035781  +
mov esi eax +
cmp esi ebx +
jge loc_100A8B3  +
push esi  +
push 71h  +
jmp loc_100A8EB  +
cmp esi edi +
jz loc_100A935  +
mov ecx dword_104E188 +
lea eax [ebp+var_4] +
push eax  +
call sub_1026701  +
mov esi eax +
cmp esi ebx +
jge loc_100A8D1  +
push esi  +
push 78h  +
jmp loc_100A8EB  +
mov ecx [ebp+var_4] +
mov uID 190h +
mov eax [ecx] +
call dword ptr [eax]  +
mov esi eax +
cmp esi ebx +
jge loc_100A935  +
push esi  +
push 7Ch  +
push offset aWwinmain  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_4] ebx +
jnz loc_100A92C  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax ebx +
jz loc_100A923  +
mov dword ptr [eax] offset off_1001890 +
mov [eax+4] ebx +
mov [eax+8] ebx +
mov [eax+0Ch] ebx +
mov [eax+10h] ebx +
jmp loc_100A925  +
xor eax eax +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100A945  +
mov ecx [ebp+var_4] +
push esi  +
call sub_101CBEB  +
mov ecx [ebp+var_4] +
cmp ecx ebx +
jz loc_100A945  +
mov eax [ecx] +
push edi  +
call dword ptr [eax+4]  +
mov [ebp+var_4] ebx +
call sub_102669D  +
call sub_1030C52  +
call sub_1035449  +
call sub_102F6A9  +
push offset dword_104E090  +
call sub_100A6E8  +
mov eax hHandle +
pop esi  +
cmp eax ebx +
jz loc_100A99E  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
mov [ebp+ExitCode] eax +
cmp eax ebx +
jnz loc_100A99E  +
lea eax [ebp+ExitCode] +
push eax  +
push hHandle  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_100A99E  +
mov eax [ebp+ExitCode] +
cmp eax 0FFFFFFFFh +
jz loc_100A99E  +
mov dword_104E004 eax +
mov eax dword_104E004 +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
push offset aRichedit50w  +
push 200804h  +
mov esi ecx +
call ds:??0CCBase@DirectUI@@QAE@KPBG@Z  +
mov dword ptr [esi] offset off_1001960 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+8] 0 +
push edi  +
mov edi ecx +
jnz loc_100AA1B  +
mov eax [esi+0Ch] +
cmp eax 1 +
jnz loc_100AA06  +
cmp dword ptr [esi+10h] 0 +
jnz loc_100AA1B  +
movzx eax word ptr [esi+18h] +
cmp eax 0Dh +
jz loc_100AA00  +
cmp eax 1Bh +
jnz loc_100AA1B  +
mov byte ptr [esi+4] 1 +
jmp loc_100AA1B  +
test eax eax +
jnz loc_100AA1B  +
cmp dword ptr [esi+10h] 5 +
jnz loc_100AA1B  +
push esi  +
mov byte ptr [esi+4] 1 +
call ds:?OnInput@Element@DirectUI@@UAEXPAUInputEvent@2@@Z  +
cmp byte ptr [esi+4] 0 +
jnz loc_100AA2A  +
push esi  +
mov ecx edi +
call ds:?OnInput@CCBase@DirectUI@@UAEXPAUInputEvent@2@@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
call ds:?CreateHWND@CCBase@DirectUI@@UAEPAUHWND__@@PAU3@@Z  +
push 0  +
mov esi eax +
push offset aExplorer  +
push esi  +
call ds:SetWindowTheme  +
mov eax 10000h +
push eax  +
push eax  +
push 1036h  +
push esi  +
call ds:SendMessageW  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp-1Ch] ebx +
lea edi [ebp-18h] +
stos   +
stos   +
stos   +
mov eax [ecx] +
mov [ebp-0Ch] ecx +
call dword ptr [eax+0A0h]  +
mov [ebp-4] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-4]  +
call ds:GetClientRect  +
mov esi ds:SendMessageW +
push ebx  +
push ebx  +
push 101Fh  +
push dword ptr [ebp-4]  +
call esi  +
push ebx  +
push ebx  +
push 1200h  +
push eax  +
call esi  +
mov edi eax +
cmp edi ebx +
jbe loc_100AB10  +
push 2  +
call ds:GetSystemMetrics  +
mov ecx [ebp+8] +
sub ecx eax +
xor edx edx +
mov eax ecx +
div  edi +
cmp edi ebx +
jbe loc_100AB10  +
movzx eax ax +
mov [ebp-8] eax +
push dword ptr [ebp-8]  +
push ebx  +
push 101Eh  +
push dword ptr [ebp-4]  +
call esi  +
inc ebx  +
cmp ebx edi +
jb loc_100AAFD  +
push dword ptr [ebp+10h]  +
mov ecx [ebp-0Ch] +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:?OnAdjustWindowSize@HWNDHost@DirectUI@@UAEHHHI@Z  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
call ds:?GetMultiline@Edit@DirectUI@@QAE_NXZ  +
movzx eax al +
neg eax  +
sbb eax eax +
xor esi esi +
push esi  +
push esi  +
push esi  +
push dword ptr [ebp+8]  +
and eax 200F84h +
push esi  +
push esi  +
push esi  +
push esi  +
add eax 50000080h +
push eax  +
push esi  +
push offset aEdit  +
mov ecx edi +
call ds:?GetThemedBorder@Edit@DirectUI@@QAE_NXZ  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 200h +
push eax  +
call ds:CreateWindowExW  +
mov edi eax +
cmp edi esi +
jz loc_100AB89  +
push edi  +
call ds:?AttachCtrlSubclassProc@HWNDHost@DirectUI@@KGXPAUHWND__@@@Z  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0CCListView@DirectUI@@QAE@XZ  +
mov dword ptr [esi] offset off_1001A78 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0ClassInfoBase@DirectUI@@QAE@XZ  +
mov dword ptr [esi] offset off_1001B58 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0ClassInfoBase@DirectUI@@QAE@XZ  +
mov dword ptr [esi] offset off_1001BA8 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0ClassInfoBase@DirectUI@@QAE@XZ  +
mov dword ptr [esi] offset off_1001BF8 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call [ebp+arg_4]  +
xor ecx ecx +
cmp [ebp+arg_0] eax +
setz cl  +
mov al cl +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0Edit@DirectUI@@QAE@XZ  +
and dword ptr [esi+0C4h] 0 +
mov dword ptr [esi] offset off_1001C48 +
mov eax esi +
pop esi  +
retn   +
***
mov eax dword_104E154 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0C4h] +
test eax eax +
jz loc_100ACA7  +
push 0  +
push 0  +
push 9E5h  +
push eax  +
call ds:PostMessageW  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:?OnNotify@Edit@DirectUI@@UAE_NIIJPAJ@Z  +
pop esi  +
pop ebp  +
retn 10h  +
***
call __EH_prolog3  +
push 0C8h  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100ACF2  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100AC59  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push ds:?DirectionProp@Element@DirectUI@@SGPBUPropertyInfo@2@XZ  +
mov edi ecx +
push esi  +
call sub_100AC3E  +
test al al +
jz loc_100AD26  +
mov eax [esi+4] +
and eax 3 +
cmp eax [ebp+0Ch] +
jz loc_100AD38  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
call ds:?OnPropertyChanged@CCBase@DirectUI@@UAEXPBUPropertyInfo@2@HPAVValue@2@1@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
jmp ds:?GetClassInfoPtr@CCBase@DirectUI@@SGPAUIClassInfo@2@XZ  +
***
jmp ds:?GetClassInfoPtr@HWNDElement@DirectUI@@SGPAUIClassInfo@2@XZ  +
***
jmp ds:?GetClassInfoPtr@Edit@DirectUI@@SGPAUIClassInfo@2@XZ  +
***
call __EH_prolog3  +
push 0D4h  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100AD91  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100AB96  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+48h]  +
push esi  +
call sub_100AC1E  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
push 8  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100ADEA  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100ABB0  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 8  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100AE21  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100ABCA  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 8  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100AE58  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100ABE4  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1CCBase@DirectUI@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100AE80  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1ClassInfoBase@DirectUI@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100AEA7  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
push 0D4h  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100AEE0  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100A9AE  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1Edit@DirectUI@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100AF08  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
call sub_100ACC5  +
mov esi eax +
test esi esi +
jz loc_100AF54  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@Edit@DirectUI@@QAEJIPAVElement@2@PAK@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100AF48  +
mov [edi] esi +
jmp loc_100AF59  +
push 0  +
mov ecx esi +
call ds:?Destroy@Element@DirectUI@@QAEJ_N@Z  +
jmp loc_100AF59  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
mov ebx 8007000Eh +
call sub_100AD64  +
mov esi eax +
test esi esi +
jz loc_100AFB5  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@CCListView@DirectUI@@QAEJIPAVElement@2@PAK@Z  +
mov ebx eax +
mov ecx esi +
test ebx ebx +
jge loc_100AFA8  +
push 1  +
call ds:?Destroy@Element@DirectUI@@QAEJ_N@Z  +
jmp loc_100AFB5  +
push 50000008h  +
call ds:?SetWinStyle@CCBase@DirectUI@@QAEJH@Z  +
mov [edi] esi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ecx  +
call sub_100AD9E  +
and dword_104E148 0 +
retn   +
***
mov edi edi +
push ecx  +
call sub_100AD9E  +
and dword_104E150 0 +
retn   +
***
mov edi edi +
push ecx  +
call sub_100AD9E  +
and dword_104E154 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
and dword ptr [edi] 0 +
call sub_100ADC0  +
mov esi eax +
test esi esi +
jz loc_100B044  +
push [ebp+arg_10]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@ClassInfoBase@DirectUI@@QAEJPAUHINSTANCE__@@PBG_NPBQBUPropertyInfo@2@I@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100B03C  +
mov [edi] esi +
jmp loc_100B049  +
push esi  +
call sub_100AD9E  +
jmp loc_100B049  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
and dword ptr [edi] 0 +
call sub_100ADF7  +
mov esi eax +
test esi esi +
jz loc_100B099  +
push [ebp+arg_10]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@ClassInfoBase@DirectUI@@QAEJPAUHINSTANCE__@@PBG_NPBQBUPropertyInfo@2@I@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100B091  +
mov [edi] esi +
jmp loc_100B09E  +
push esi  +
call sub_100AD9E  +
jmp loc_100B09E  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
and dword ptr [edi] 0 +
call sub_100AE2E  +
mov esi eax +
test esi esi +
jz loc_100B0EE  +
push [ebp+arg_10]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@ClassInfoBase@DirectUI@@QAEJPAUHINSTANCE__@@PBG_NPBQBUPropertyInfo@2@I@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100B0E6  +
mov [edi] esi +
jmp loc_100B0F3  +
push esi  +
call sub_100AD9E  +
jmp loc_100B0F3  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
call sub_100AEB3  +
mov esi eax +
test esi esi +
jz loc_100B141  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@CCBase@DirectUI@@QAEJIPAVElement@2@PAK@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100B135  +
mov [edi] esi +
jmp loc_100B146  +
push 0  +
mov ecx esi +
call ds:?Destroy@Element@DirectUI@@QAEJ_N@Z  +
jmp loc_100B146  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 3  +
call sub_100AF67  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ds:?GetClassInfoPtr@CCBase@DirectUI@@SGPAUIClassInfo@2@XZ +
xor edi edi +
call esi  +
test eax eax +
jnz loc_100B196  +
call ds:?Register@CCBase@DirectUI@@SGJXZ  +
mov edi eax +
jmp loc_100B19E  +
call esi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx]  +
test edi edi +
jl loc_100B238  +
call ds:?GetFactoryLock@Element@DirectUI@@SGPAU_RTL_CRITICAL_SECTION@@XZ  +
push eax  +
lea ecx [ebp-14h] +
call ds:??0CritSecLock@DirectUI@@QAE@PAU_RTL_CRITICAL_SECTION@@@Z  +
and dword ptr [ebp-4] 0 +
call esi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+10h]  +
push eax  +
call ds:?ClassExist@ClassInfoBase@DirectUI@@SG_NPAPAUIClassInfo@2@PBQBUPropertyInfo@2@IPAU32@PAUHINSTANCE__@@PBG_N@Z  +
test al al +
jnz loc_100B221  +
and dword_104E148 0 +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100B002  +
mov edi eax +
test edi edi +
jl loc_100B22B  +
mov esi [ebp+14h] +
mov ecx esi +
call ds:?Register@ClassInfoBase@DirectUI@@QAEJXZ  +
mov edi eax +
test edi edi +
jl loc_100B218  +
mov dword_104E148 esi +
jmp loc_100B22B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_100B22B  +
mov eax [ebp-10h] +
mov dword_104E148 eax +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ds:??1CritSecLock@DirectUI@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov esi ds:?GetClassInfoPtr@HWNDElement@DirectUI@@SGPAUIClassInfo@2@XZ +
xor edi edi +
call esi  +
test eax eax +
jnz loc_100B26B  +
call ds:?Register@HWNDElement@DirectUI@@SGJXZ  +
mov edi eax +
jmp loc_100B273  +
call esi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx]  +
test edi edi +
jl loc_100B30D  +
call ds:?GetFactoryLock@Element@DirectUI@@SGPAU_RTL_CRITICAL_SECTION@@XZ  +
push eax  +
lea ecx [ebp-14h] +
call ds:??0CritSecLock@DirectUI@@QAE@PAU_RTL_CRITICAL_SECTION@@@Z  +
and dword ptr [ebp-4] 0 +
call esi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+10h]  +
push eax  +
call ds:?ClassExist@ClassInfoBase@DirectUI@@SG_NPAPAUIClassInfo@2@PBQBUPropertyInfo@2@IPAU32@PAUHINSTANCE__@@PBG_N@Z  +
test al al +
jnz loc_100B2F6  +
and dword_104E150 0 +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100B057  +
mov edi eax +
test edi edi +
jl loc_100B300  +
mov esi [ebp+14h] +
mov ecx esi +
call ds:?Register@ClassInfoBase@DirectUI@@QAEJXZ  +
mov edi eax +
test edi edi +
jl loc_100B2ED  +
mov dword_104E150 esi +
jmp loc_100B300  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_100B300  +
mov eax [ebp-10h] +
mov dword_104E150 eax +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ds:??1CritSecLock@DirectUI@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov esi ds:?GetClassInfoPtr@Edit@DirectUI@@SGPAUIClassInfo@2@XZ +
xor edi edi +
call esi  +
test eax eax +
jnz loc_100B340  +
call ds:?Register@Edit@DirectUI@@SGJXZ  +
mov edi eax +
jmp loc_100B348  +
call esi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx]  +
test edi edi +
jl loc_100B3E2  +
call ds:?GetFactoryLock@Element@DirectUI@@SGPAU_RTL_CRITICAL_SECTION@@XZ  +
push eax  +
lea ecx [ebp-14h] +
call ds:??0CritSecLock@DirectUI@@QAE@PAU_RTL_CRITICAL_SECTION@@@Z  +
and dword ptr [ebp-4] 0 +
call esi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+10h]  +
push eax  +
call ds:?ClassExist@ClassInfoBase@DirectUI@@SG_NPAPAUIClassInfo@2@PBQBUPropertyInfo@2@IPAU32@PAUHINSTANCE__@@PBG_N@Z  +
test al al +
jnz loc_100B3CB  +
and dword_104E154 0 +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100B0AC  +
mov edi eax +
test edi edi +
jl loc_100B3D5  +
mov esi [ebp+14h] +
mov ecx esi +
call ds:?Register@ClassInfoBase@DirectUI@@QAEJXZ  +
mov edi eax +
test edi edi +
jl loc_100B3C2  +
mov dword_104E154 esi +
jmp loc_100B3D5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_100B3D5  +
mov eax [ebp-10h] +
mov dword_104E154 eax +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ds:??1CritSecLock@DirectUI@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 3  +
call sub_100AF14  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 3  +
call sub_100B101  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_100B154  +
***
xor ecx ecx +
mov dword_104E14C eax +
cmp eax ecx +
jz loc_100B466  +
push ecx  +
push ecx  +
push ecx  +
push offset aCcrichedit  +
push 1000000h  +
call sub_100B172  +
retn   +
mov eax 80004005h +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push offset aMsdtlistview  +
push 1000000h  +
call sub_100B247  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push offset aMsdtedit  +
push 1000000h  +
call sub_100B31C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_100B40F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_100B3F1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp esi ebx +
jz loc_100B571  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
cmp eax ebx +
jge loc_100B515  +
push eax  +
push 1D5h  +
jmp loc_100B529  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+28h]  +
cmp eax ebx +
jge loc_100B53F  +
push eax  +
push 1D8h  +
push offset aBrowsersinkOna  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100B554  +
cmp [edi+28h] ebx +
jz loc_100B554  +
push [ebp+var_4]  +
mov ecx [edi+28h] +
push [ebp+var_8]  +
mov eax [ecx] +
call dword ptr [eax]  +
mov [ebp+var_C] eax +
mov esi ds:SysFreeString +
cmp [ebp+var_4] ebx +
jz loc_100B567  +
push [ebp+var_4]  +
call esi  +
mov [ebp+var_4] ebx +
cmp [ebp+var_8] ebx +
jz loc_100B571  +
push [ebp+var_8]  +
call esi  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0HWNDHost@DirectUI@@QAE@XZ  +
and dword ptr [esi+0C4h] 0 +
and dword ptr [esi+0C8h] 0 +
mov dword ptr [esi] offset off_1001D98 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_1001E64  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_1001E74  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_1001E84  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0ClassInfoBase@DirectUI@@QAE@XZ  +
mov dword ptr [esi] offset off_1001E98 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor ebx ebx +
push 4  +
pop ecx  +
mov edi offset dword_10094A4 +
xor eax eax +
cmps   +
jnz loc_100B63F  +
mov eax [ebp+10h] +
jmp loc_100B653  +
mov esi [ebp+0Ch] +
push 4  +
xor eax eax +
mov eax [ebp+10h] +
pop ecx  +
mov edi offset dword_1009494 +
cmps   +
jnz loc_100B657  +
mov [eax] edx +
jmp loc_100B65E  +
and [eax] ebx +
mov ebx 80004002h +
cmp dword ptr [eax] 0 +
jz loc_100B669  +
mov eax [edx] +
push edx  +
call dword ptr [eax+4]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+24h] +
push esi  +
test eax eax +
jnz loc_100B693  +
mov eax 8000FFFFh +
push eax  +
mov esi eax +
push 233h  +
jmp loc_100B6A8  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jge loc_100B6BC  +
push esi  +
push 237h  +
push offset aBrowsersinkTra  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push Destination  +
xor esi esi +
mov [ebp+var_4] esi +
call ds:TlsGetValue  +
mov edi eax +
cmp edi esi +
jz loc_100B81F  +
cmp [ebp+nCode] esi +
jl loc_100B81A  +
cmp [edi+0C4h] esi +
jz loc_100B81A  +
mov esi [ebp+arg_8] +
mov eax [esi+4] +
cmp eax 100h +
jb loc_100B805  +
cmp eax 109h +
ja loc_100B805  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+7Ch]  +
test al al +
jz loc_100B805  +
mov eax 106h +
cmp [esi+4] eax +
jnz loc_100B76D  +
mov ecx [esi+8] +
cmp ecx 26h +
jz loc_100B76D  +
cmp ecx 28h +
jz loc_100B76D  +
cmp ecx 25h +
jz loc_100B76D  +
cmp ecx 27h +
jz loc_100B76D  +
lea edx [ebp+var_4] +
push edx  +
push dword ptr [esi+0Ch]  +
push ecx  +
push eax  +
mov ecx edi +
call ds:?GetDisplayNode@Element@DirectUI@@QAEPAUHGADGET__@@XZ  +
push eax  +
call ds:ForwardGadgetMessage  +
test eax eax +
jnz loc_100B7FE  +
mov eax [esi+8] +
cmp eax 74h +
jz loc_100B805  +
mov ebx ds:GetKeyState +
cmp eax 4Eh +
jz loc_100B78E  +
cmp eax 4Ch +
jz loc_100B78E  +
cmp eax 4Fh +
jnz loc_100B79C  +
push 11h  +
call ebx  +
mov ecx 8000h +
test ax cx +
jnz loc_100B805  +
mov ecx [edi+0C4h] +
push esi  +
call sub_100B677  +
cmp dword ptr [esi+8] 9 +
mov [ebp+arg_8] eax +
jnz loc_100B7F8  +
cmp dword_104E008 0 +
jnz loc_100B7EB  +
test eax eax +
jz loc_100B7EB  +
push 10h  +
call ebx  +
mov ecx 8000h +
test ax cx +
jz loc_100B7D4  +
mov ecx [edi+0D0h] +
jmp loc_100B7DA  +
mov ecx [edi+0CCh] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
mov dword_104E008 1 +
jmp loc_100B7F8  +
xor ecx ecx +
test eax eax +
setz cl  +
mov dword_104E008 ecx +
cmp [ebp+arg_8] 0 +
jnz loc_100B805  +
xor eax eax +
mov [esi+4] eax +
jmp loc_100B822  +
push esi  +
push [ebp+wParam]  +
push [ebp+nCode]  +
push dword ptr [edi+0C8h]  +
call ds:CallNextHookEx  +
jmp loc_100B822  +
push [ebp+arg_8]  +
jmp loc_100B806  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ds:GetFocus  +
mov ebx eax +
xor edi edi +
call ds:GetGadgetFocus  +
mov [ebp-4] eax +
mov eax [esi+0C4h] +
test eax eax +
jz loc_100B85A  +
mov edi [eax+1Ch] +
test ebx ebx +
jnz loc_100B884  +
mov ecx esi +
call ds:?GetDisplayNode@Element@DirectUI@@QAEPAUHGADGET__@@XZ  +
cmp [ebp-4] eax +
jnz loc_100B8A8  +
lea eax [ebp-8] +
push eax  +
push ebx  +
push ebx  +
push 8  +
mov ecx esi +
call ds:?GetDisplayNode@Element@DirectUI@@QAEPAUHGADGET__@@XZ  +
push eax  +
call ds:ForwardGadgetMessage  +
jmp loc_100B8A8  +
cmp ebx edi +
jz loc_100B894  +
push ebx  +
push edi  +
call ds:IsChild  +
test eax eax +
jz loc_100B8A8  +
mov ecx esi +
call ds:?GetDisplayNode@Element@DirectUI@@QAEPAUHGADGET__@@XZ  +
cmp [ebp-4] eax +
jz loc_100B8A8  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
jmp ds:?GetClassInfoPtr@HWNDHost@DirectUI@@SGPAUIClassInfo@2@XZ  +
***
call __EH_prolog3  +
push 0D4h  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100B902  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100B580  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 8  +
call sub_100ABFE  +
mov esi eax +
mov [ebp-10h] esi +
test esi esi +
jz loc_100B939  +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100B602  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
and [ebp-14h] edi +
and [ebp-4] edi +
and [ebp-10h] edi +
mov eax [ebp+8] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_100B9CA  +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jge loc_100B9A6  +
push eax  +
push 1A8h  +
push offset aBrowsersinkOnc  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100B9CA  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-14h]  +
call sub_100B5A8  +
test eax eax +
jge loc_100B9BE  +
push eax  +
push 1ABh  +
jmp loc_100B990  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_100B4E0  +
mov edi eax +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_100B9DB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_100B9EC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp Destination 0 +
push esi  +
push edi  +
jnz loc_100BA66  +
call ds:TlsAlloc  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100BA4D  +
call ds:GetLastError  +
test eax eax +
jle loc_100BA2C  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 314h  +
push offset aWebbrowserCrea  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100BB16  +
push 0  +
push esi  +
push offset Destination  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_100BA66  +
push esi  +
call ds:TlsFree  +
call sub_100B8D5  +
mov esi eax +
test esi esi +
jnz loc_100BA7E  +
mov edi 8007000Eh +
push edi  +
push 31Fh  +
jmp loc_100BAE9  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@HWNDHost@DirectUI@@QAEJIIPAVElement@2@PAK@Z  +
mov edi eax +
test edi edi +
jge loc_100BAA0  +
push edi  +
push 322h  +
jmp loc_100BAE9  +
push esi  +
push Destination  +
call ds:TlsSetValue  +
call ds:GetCurrentThreadId  +
push eax  +
push 0  +
push offset fn  +
push 3  +
call ds:SetWindowsHookExW  +
mov [esi+0C8h] eax +
test eax eax +
jnz loc_100BAFF  +
call ds:GetLastError  +
test eax eax +
jle loc_100BAE1  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 32Dh  +
push offset aWebbrowserCrea  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100BB08  +
mov eax [ebp+arg_10] +
mov [eax] esi +
xor esi esi +
xor edi edi +
test esi esi +
jz loc_100BB16  +
push 1  +
mov ecx esi +
call ds:?Destroy@Element@DirectUI@@QAEJ_N@Z  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi ds:VariantInit +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov edi ecx +
call esi  +
lea eax [ebp+var_20] +
push eax  +
call esi  +
lea eax [ebp+var_30] +
push eax  +
call esi  +
push offset word_1001F48  +
lea eax [ebp+var_30] +
push eax  +
call sub_1014F71  +
mov esi eax +
test esi esi +
jge loc_100BB63  +
push esi  +
push 3C5h  +
jmp loc_100BBAC  +
push [ebp+arg_0]  +
lea eax [ebp+var_20] +
push eax  +
call sub_1014F71  +
mov esi eax +
test esi esi +
jge loc_100BB7D  +
push esi  +
push 3C8h  +
jmp loc_100BBAC  +
mov eax [edi+0C4h] +
mov eax [eax+20h] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push edx  +
lea edx [ebp+var_30] +
push edx  +
lea edx [ebp+pvarg] +
push edx  +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+0D0h]  +
mov esi eax +
test esi esi +
jge loc_100BBC0  +
push esi  +
push 3D0h  +
push offset aWebbrowserLoad  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov edi ds:VariantClear +
lea eax [ebp+pvarg] +
push eax  +
call edi  +
lea eax [ebp+var_20] +
push eax  +
call edi  +
lea eax [ebp+var_30] +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
call __EH_prolog3  +
and dword ptr [ebp-14h] 0 +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
mov eax [ecx+0C4h] +
mov eax [eax+20h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+48h]  +
test eax eax +
jge loc_100BC34  +
push eax  +
push 44Fh  +
push offset aWebbrowserSetu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100BC5E  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-14h]  +
call sub_100B5E4  +
test eax eax +
jge loc_100BC4C  +
push eax  +
push 452h  +
jmp loc_100BC1E  +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_100BC6F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_100BC80  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+14h]  +
mov edi ecx +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
call ds:?OnPropertyChanged@HWNDHost@DirectUI@@UAEXPBUPropertyInfo@2@HPAVValue@2@1@Z  +
push ds:?KeyFocusedProp@Element@DirectUI@@SGPBUPropertyInfo@2@XZ  +
push esi  +
call sub_100AC3E  +
test al al +
jz loc_100BCD6  +
mov eax [esi+4] +
and eax 3 +
cmp eax [ebp+0Ch] +
jnz loc_100BCD6  +
mov ecx [ebp+14h] +
call ds:?GetBool@Value@DirectUI@@QAE_NXZ  +
test al al +
jz loc_100BCD6  +
mov ecx edi +
call sub_100BBE5  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ecx  +
call sub_100AD9E  +
and dword_104E15C 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
and dword ptr [edi] 0 +
call sub_100B90F  +
mov esi eax +
test esi esi +
jz loc_100BD38  +
push [ebp+arg_10]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?Initialize@ClassInfoBase@DirectUI@@QAEJPAUHINSTANCE__@@PBG_NPBQBUPropertyInfo@2@I@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100BD30  +
mov [edi] esi +
jmp loc_100BD3D  +
push esi  +
call sub_100AD9E  +
jmp loc_100BD3D  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_100BD5F  +
mov eax 80070057h +
jmp locret_100BDC0  +
mov ecx [eax] +
and [ebp+var_4] 0 +
and [ebp+arg_0] 0 +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push offset dword_1001F70  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_100BDA3  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_100BDA3  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100BDB0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100BDBD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_100BDDD  +
mov eax 80070057h +
jmp locret_100BE3B  +
mov ecx [eax] +
and [ebp+var_4] 0 +
and [ebp+arg_0] 0 +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push offset dword_1001F70  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_100BE1E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_100BE1E  +
mov eax [ebp+arg_0] +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100BE2B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100BE38  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 3  +
push 7  +
call sub_100B9FB  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
cmp dword ptr [ebp+0Ch] 0FFFFEA78h +
mov [ebp-4] esi +
jz loc_100BECC  +
cmp dword ptr [ebp+0Ch] 0FFFFFDA8h +
jz loc_100BE89  +
mov esi 80004001h +
jmp loc_100BEE9  +
mov eax [ebp+1Ch] +
cmp dword ptr [eax+8] 1 +
jnz loc_100BEE9  +
mov eax [eax] +
mov eax [eax+8] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push offset dword_10094C4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_100BEDC  +
push dword ptr [ebp-4]  +
mov ecx [ebp+8] +
call sub_100B958  +
mov ecx [ebp+20h] +
neg eax  +
sbb eax eax +
neg eax  +
movzx eax ax +
push 0Bh  +
pop edx  +
mov [ecx] dx +
mov [ecx+8] ax +
jmp loc_100BEDC  +
mov eax [ebp+20h] +
push 3  +
pop ecx  +
mov [eax] cx +
mov dword ptr [eax+8] 40008710h +
mov eax [ebp-4] +
cmp eax esi +
jz loc_100BEE9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 24h  +
***
mov eax ecx +
xor ecx ecx +
mov dword ptr [eax] offset off_1001F80 +
mov [eax+14h] ecx +
mov [eax+20h] ecx +
mov [eax+24h] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+28h] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+1Ch] ecx +
mov [eax+18h] ecx +
retn   +
***
mov eax 80004001h +
retn 10h  +
***
mov eax 80004001h +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+20h] +
and dword ptr [eax] 0 +
xor eax eax +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 41840000h +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov eax 80004001h +
retn 4  +
***
mov eax 80004001h +
retn 1Ch  +
***
mov eax 80004001h +
retn 20h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov eax 80004001h +
retn 8  +
***
cmp dword ptr [ecx+0Ch] 0 +
jz locret_100BFEC  +
push dword ptr [ecx+10h]  +
mov eax [ecx+14h] +
and dword ptr [ecx+0Ch] 0 +
push offset dword_10094D4  +
push eax  +
call sub_100BDC9  +
test eax eax +
jge locret_100BFEC  +
push eax  +
push 0E7h  +
push offset aBrowsersinkClo  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov eax [esi+20h] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jnz loc_100C037  +
mov edi 8000FFFFh +
push edi  +
push 201h  +
push offset aBrowsersinkSin  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C09C  +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
cmp edi 1 +
jnz loc_100C04D  +
mov edi 80004005h +
cmp edi ebx +
jge loc_100C059  +
push edi  +
push 208h  +
jmp loc_100C021  +
lea ebx [esi+14h] +
push ebx  +
push dword ptr [ebp-10h]  +
call sub_100B5C6  +
mov edi eax +
test edi edi +
jge loc_100C073  +
push edi  +
push 20Bh  +
jmp loc_100C021  +
mov ebx [ebx] +
lea eax [esi+10h] +
push eax  +
push offset dword_10094D4  +
push esi  +
push ebx  +
call sub_100BD4B  +
mov edi eax +
test edi edi +
jge loc_100C093  +
push edi  +
push 20Eh  +
jmp loc_100C021  +
mov dword ptr [esi+0Ch] 1 +
xor edi edi +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_100C0AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0C4h] +
test eax eax +
jz loc_100C0EF  +
and dword ptr [eax+8] 0 +
and dword ptr [eax+28h] 0 +
mov ecx [esi+0C4h] +
call sub_100BFB3  +
mov eax [esi+0C4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+0C4h] 0 +
add esi 0C8h +
mov eax [esi] +
test eax eax +
jz loc_100C105  +
push eax  +
call ds:UnhookWindowsHookEx  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ds:?GetClassInfoPtr@HWNDHost@DirectUI@@SGPAUIClassInfo@2@XZ +
xor edi edi +
call esi  +
test eax eax +
jnz loc_100C130  +
call ds:?Register@HWNDHost@DirectUI@@SGJXZ  +
mov edi eax +
jmp loc_100C138  +
call esi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx]  +
test edi edi +
jl loc_100C1D2  +
call ds:?GetFactoryLock@Element@DirectUI@@SGPAU_RTL_CRITICAL_SECTION@@XZ  +
push eax  +
lea ecx [ebp-14h] +
call ds:??0CritSecLock@DirectUI@@QAE@PAU_RTL_CRITICAL_SECTION@@@Z  +
and dword ptr [ebp-4] 0 +
call esi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+10h]  +
push eax  +
call ds:?ClassExist@ClassInfoBase@DirectUI@@SG_NPAPAUIClassInfo@2@PBQBUPropertyInfo@2@IPAU32@PAUHINSTANCE__@@PBG_N@Z  +
test al al +
jnz loc_100C1BB  +
and dword_104E15C 0 +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100BCF6  +
mov edi eax +
test edi edi +
jl loc_100C1C5  +
mov esi [ebp+14h] +
mov ecx esi +
call ds:?Register@ClassInfoBase@DirectUI@@QAEJXZ  +
mov edi eax +
test edi edi +
jl loc_100C1B2  +
mov dword_104E15C esi +
jmp loc_100C1C5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_100C1C5  +
mov eax [ebp-10h] +
mov dword_104E15C eax +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ds:??1CritSecLock@DirectUI@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001F80 +
mov dword ptr [ebp-4] 2 +
mov dword ptr [esi+18h] 1 +
call sub_100BFB3  +
mov eax [esi+24h] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_100C21C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+20h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_100C22D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jz loc_100C23E  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
mov [ebp-24h] edi +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov [ebp-30h] ebx +
mov [ebp-34h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 5 +
mov [ebp-28h] ebx +
mov [ebp-10h] ebx +
cmp [ebp+8] ebx +
jnz loc_100C2A4  +
mov esi 80070057h +
push esi  +
push 113h  +
push offset aBrowsersinkIni  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C4FA  +
call AtlAxWinInit  +
test eax eax +
jnz loc_100C2BA  +
mov esi 80004005h +
push esi  +
push 11Bh  +
jmp loc_100C28B  +
lea eax [ebp-10h] +
push eax  +
push offset rclsid  +
call ds:StringFromCLSID  +
mov esi eax +
cmp esi ebx +
jge loc_100C2EE  +
push esi  +
push 11Fh  +
push offset aBrowsersinkIni  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C4F6  +
push edi  +
push offset dword_1009524  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-10h]  +
call AtlAxCreateControlEx  +
mov esi eax +
cmp esi ebx +
jge loc_100C316  +
push esi  +
push 129h  +
jmp loc_100C2D5  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea ebx [edi+20h] +
push ebx  +
push offset dword_1009514  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C335  +
push esi  +
push 12Ch  +
jmp loc_100C2D5  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
push offset dword_1009504  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C354  +
push esi  +
push 131h  +
jmp loc_100C2D5  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [edi+24h] +
push edx  +
push offset dword_10094F4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C375  +
push esi  +
push 136h  +
jmp loc_100C2D5  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push offset dword_10017F8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C397  +
push esi  +
push 13Bh  +
jmp loc_100C2D5  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push offset dword_10017E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C3B9  +
push esi  +
push 140h  +
jmp loc_100C2D5  +
mov eax [ebp-30h] +
mov ecx [eax] +
add edi 1Ch +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_100C3D7  +
push esi  +
push 146h  +
jmp loc_100C2D5  +
push 0FFFFFFECh  +
push dword ptr [edi]  +
call ds:GetWindowLongW  +
or eax 2000h +
push eax  +
push 0FFFFFFECh  +
push dword ptr [edi]  +
call ds:SetWindowLongW  +
mov eax [ebp-2Ch] +
push dword ptr [ebp-24h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jge loc_100C40E  +
push esi  +
push 152h  +
jmp loc_100C2D5  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push offset dword_10094E4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100C42F  +
push esi  +
push 158h  +
jmp loc_100C2D5  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jge loc_100C44D  +
push esi  +
push 15Bh  +
jmp loc_100C2D5  +
or dword ptr [ebp-20h] 14h +
mov eax [ebp-14h] +
push dword ptr [ebp-20h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jge loc_100C46E  +
push esi  +
push 160h  +
jmp loc_100C2D5  +
mov eax [ebx] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+100h]  +
xor esi esi +
cmp eax esi +
mov edi offset aBrowsersinkIni +
jge loc_100C49C  +
push eax  +
push 166h  +
push edi  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
push offset aAboutBlank  +
call ds:SysAllocString  +
mov [ebp-28h] eax +
cmp eax esi +
jnz loc_100C4BF  +
mov esi 8007000Eh +
push esi  +
push 16Dh  +
push edi  +
jmp loc_100C290  +
mov ebx [ebx] +
mov ecx [ebx] +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
push ebx  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jge loc_100C4DE  +
push esi  +
push 170h  +
push edi  +
jmp loc_100C2DA  +
mov ecx [ebp-24h] +
call sub_100BFF2  +
mov esi eax +
test esi esi +
jge loc_100C4F4  +
push esi  +
push 173h  +
jmp loc_100C4D8  +
xor esi esi +
test esi esi +
jge loc_100C502  +
mov ecx [ebp-24h] +
call sub_100BFB3  +
xor edi edi +
cmp [ebp-28h] edi +
jz loc_100C512  +
push dword ptr [ebp-28h]  +
call ds:SysFreeString  +
cmp [ebp-10h] edi +
jz loc_100C523  +
push dword ptr [ebp-10h]  +
call ds:CoTaskMemFree  +
mov [ebp-10h] edi +
mov eax [ebp-14h] +
mov byte ptr [ebp-4] 4 +
cmp eax edi +
jz loc_100C534  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-2Ch] +
mov byte ptr [ebp-4] 3 +
cmp eax edi +
jz loc_100C545  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-34h] +
mov byte ptr [ebp-4] 2 +
cmp eax edi +
jz loc_100C556  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-30h] +
mov byte ptr [ebp-4] 1 +
cmp eax edi +
jz loc_100C567  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 0 +
cmp eax edi +
jz loc_100C578  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-1Ch] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax edi +
jz loc_100C589  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D98 +
and dword ptr [ebp-4] 0 +
call sub_100C0BA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ds:??1HWNDHost@DirectUI@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 2Ch  +
mov esi ecx +
call sub_10361AF  +
pop ecx  +
test eax eax +
jz loc_100C5ED  +
mov ecx eax +
call sub_100BEF5  +
jmp loc_100C5EF  +
xor eax eax +
mov [esi+0C4h] eax +
test eax eax +
jnz loc_100C61A  +
mov edi 8007000Eh +
push edi  +
push 393h  +
push offset aWebbrowserInit  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C65F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+0C4h] +
push [ebp+arg_0]  +
mov [eax+8] esi +
mov ecx [esi+0C4h] +
call sub_100C249  +
mov edi eax +
test edi edi +
jge loc_100C659  +
push edi  +
push 399h  +
push offset aWebbrowserInit  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C65B  +
xor edi edi +
test edi edi +
jge loc_100C666  +
mov ecx esi +
call sub_100C0BA  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_100BE44  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C1E1  +
test [ebp+arg_0] 1 +
jz loc_100C69D  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C598  +
test byte ptr [ebp+8] 1 +
jz loc_100C6C3  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push offset aWebbrowser  +
push 1000000h  +
call sub_100C10C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
mov esi ecx +
xor edi edi +
call sub_100C5CF  +
test eax eax +
jge loc_100C71C  +
push eax  +
push 370h  +
push offset aWebbrowserCr_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C725  +
mov eax [esi+0C4h] +
mov edi [eax+1Ch] +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_100C75A  +
cmp [esi+18h] eax +
jnz loc_100C75A  +
push 1  +
mov ecx esi +
call sub_100C683  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0TaskPage@DirectUI@@QAE@XZ  +
xor eax eax +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov dword ptr [esi] offset off_10020A8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov dword ptr [esi+28h] 37h +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+28h] eax +
pop ebp  +
retn 4  +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
mov edi ecx +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov esi ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z +
push eax  +
push 481h  +
mov ecx edi +
call esi  +
test eax eax +
jge loc_100C80A  +
mov eax 80004005h +
push eax  +
push 0BEh  +
push offset aWizardpageSeth  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_100C817  +
push [ebp+arg_0]  +
mov ecx edi +
push eax  +
push 47Eh  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
xor ebx ebx +
mov [ebp+lpMem] ebx +
call dword ptr [eax+6Ch]  +
mov esi eax +
cmp esi ebx +
jz loc_100C894  +
push 200h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_100C868  +
push 8007000Eh  +
push 0E9h  +
jmp loc_100C87E  +
push 100h  +
push ebx  +
push esi  +
call sub_10301CE  +
test eax eax +
jge loc_100C894  +
push eax  +
push 0ECh  +
push offset aWizardpageSetu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100C8DC  +
mov esi ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z +
push ebx  +
push 2  +
mov ebx 48Ch +
push ebx  +
mov ecx edi +
call esi  +
push 0  +
push 10h  +
push ebx  +
mov ecx edi +
call esi  +
mov eax [edi] +
push 12h  +
mov ecx edi +
call dword ptr [eax+64h]  +
push eax  +
push 48Ah  +
mov ecx edi +
call esi  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+68h]  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push 48Bh  +
mov ecx edi +
call esi  +
cmp [ebp+lpMem] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz locret_100C8F7  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_100C92C  +
push esi  +
push 244h  +
push offset aWizardpageGetp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
xor edi edi +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
test eax eax +
jnz loc_100C96A  +
mov edi 80004005h +
jmp loc_100C96F  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov edi ecx +
call sub_100C8FE  +
mov esi eax +
test esi esi +
jge loc_100C9A1  +
push esi  +
push 2B7h  +
jmp loc_100C9B6  +
mov ecx [ebp+var_4] +
push edi  +
call sub_1013F20  +
mov esi eax +
test esi esi +
jge loc_100C9CA  +
push esi  +
push 2BAh  +
push offset aWizardpageCrea  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push edi  +
xor edi edi +
and [ebp+var_4] edi +
test eax eax +
jnz loc_100CA0B  +
lea eax [ebp+var_4] +
push eax  +
call sub_1031307  +
mov edi eax +
test edi edi +
jge loc_100C9FF  +
push edi  +
push 2DEh  +
jmp loc_100CA31  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_100CA45  +
push 1  +
push 0  +
push 0  +
push eax  +
push offset Operation  +
push 0  +
call ds:ShellExecuteW  +
cmp eax 20h +
jg loc_100CA45  +
mov eax 80004005h +
push eax  +
mov edi eax +
push 2EEh  +
push offset aWizardpageLaun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
push 0  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
test esi esi +
jge loc_100CA70  +
push esi  +
push 311h  +
jmp loc_100CA87  +
mov ecx [ebp+arg_0] +
push 0FFFFFFFDh  +
call ds:?SetLayoutPos@Element@DirectUI@@QAEJH@Z  +
mov esi eax +
test esi esi +
jge loc_100CA9B  +
push esi  +
push 314h  +
push offset aWizardpageHide  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_100CACF  +
push esi  +
push 336h  +
jmp loc_100CAE5  +
push [ebp+var_4]  +
mov ecx edi +
call sub_100CA51  +
mov esi eax +
test esi esi +
jge loc_100CAF9  +
push esi  +
push 339h  +
push offset aWizardpageHi_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_100CB2B  +
push esi  +
push 35Ch  +
jmp loc_100CB5C  +
mov ecx [ebp+var_4] +
push 1  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
test esi esi +
jge loc_100CB44  +
push esi  +
push 35Fh  +
jmp loc_100CB5C  +
push [ebp+arg_4]  +
mov ecx [ebp+var_4] +
call ds:?SetLayoutPos@Element@DirectUI@@QAEJH@Z  +
mov esi eax +
test esi esi +
jge loc_100CB70  +
push esi  +
push 362h  +
push offset aWizardpageShow  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jz loc_100CBA3  +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
call ds:?SetAccName@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
test esi esi +
jge loc_100CBA3  +
push esi  +
push 3D9h  +
jmp loc_100CBE1  +
cmp [ebp+arg_8] 0 +
jz loc_100CBC3  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
call ds:?SetAccValue@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
test esi esi +
jge loc_100CBC3  +
push esi  +
push 3DEh  +
jmp loc_100CBE1  +
cmp [ebp+arg_C] 0 +
jz loc_100CBF5  +
push [ebp+arg_C]  +
mov ecx [ebp+arg_0] +
call ds:?SetAccDesc@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
test esi esi +
jge loc_100CBF5  +
push esi  +
push 3E3h  +
push offset aWizardpageSeta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_100CC29  +
push esi  +
push 40Fh  +
jmp loc_100CC7B  +
cmp [ebp+var_4] 0 +
jnz loc_100CC3C  +
mov esi 8000FFFFh +
push esi  +
push 410h  +
jmp loc_100CC7B  +
cmp [ebp+arg_4] 0 +
jz loc_100CC5C  +
push [ebp+arg_4]  +
mov ecx [ebp+var_4] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
test esi esi +
jge loc_100CC5C  +
push esi  +
push 414h  +
jmp loc_100CC7B  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
call sub_100CB7C  +
mov esi eax +
test esi esi +
jge loc_100CC8F  +
push esi  +
push 418h  +
push offset aWizardpageSetn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 1 +
mov ecx [ebp+arg_0] +
setz al  +
movzx eax al +
push esi  +
push eax  +
call ds:?SetTooltip@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
test esi esi +
jge loc_100CCC4  +
push esi  +
push 43Bh  +
jmp loc_100CCDE  +
mov ecx [ebp+arg_0] +
push 1F4h  +
call ds:?SetTooltipMaxWidth@Element@DirectUI@@QAEJH@Z  +
mov esi eax +
test esi esi +
jge loc_100CCF2  +
push esi  +
push 43Eh  +
push offset aWizardpageEnab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_100CD26  +
push esi  +
push 461h  +
jmp loc_100CD3F  +
push [ebp+arg_4]  +
mov ecx edi +
push [ebp+var_4]  +
call sub_100CC9C  +
mov esi eax +
test esi esi +
jge loc_100CD53  +
push esi  +
push 464h  +
push offset aWizardpageEn_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
mov edi ds:GetProcessHeap +
push 200h  +
push 0  +
mov [ebp+var_4] ecx +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_100CDAC  +
mov eax 8007000Eh +
push eax  +
push 484h  +
push offset aWizardpageClos  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_8] eax +
call sub_1014247  +
add esp 14h +
jmp loc_100CE1C  +
push 100h  +
push ebx  +
push 154h  +
call sub_10301CE  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_100CDDF  +
push eax  +
push 487h  +
push offset aWizardpageClos  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100CE10  +
mov ecx [ebp+var_4] +
push esi  +
mov esi ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z +
push 12h  +
push 10h  +
push 48Ah  +
call esi  +
mov ecx [ebp+var_4] +
push 1  +
push 0  +
push 48Bh  +
call esi  +
mov ecx [ebp+var_4] +
push ebx  +
push 10h  +
push 48Ch  +
call esi  +
pop esi  +
push ebx  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn   +
***
push 471h  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100CE5D  +
mov eax [ebp+arg_0] +
jb loc_100CE54  +
cmp eax 0FFFFFFFFh +
ja loc_100CE5D  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100CE68  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [esi+4] +
and dword ptr [eax] 0 +
push eax  +
mov [esi] ecx +
call ds:?StartDefer@Element@DirectUI@@QAEXPAK@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_100CEB0  +
mov ecx [esi] +
push eax  +
call ds:?EndDefer@Element@DirectUI@@QAEXK@Z  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+uID] 0 +
push esi  +
mov [ebp+var_4] ecx +
jnz loc_100CF05  +
push offset word_1001F48  +
call sub_100C7C0  +
mov esi eax +
test esi esi +
jge loc_100CF87  +
push esi  +
push 8Ah  +
push offset aWizardpageSe_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100CF87  +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
push 800h  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_100CF30  +
mov esi 8007000Eh +
push esi  +
push 8Fh  +
jmp loc_100CF61  +
push 400h  +
push edi  +
push [ebp+uID]  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_100CF4C  +
push esi  +
push 92h  +
jmp loc_100CF61  +
mov ecx [ebp+var_4] +
push edi  +
call sub_100C7C0  +
mov esi eax +
test esi esi +
jge loc_100CF75  +
push esi  +
push 95h  +
push offset aWizardpageSe_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test edi edi +
jz loc_100CF85  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
call sub_100C97C  +
test eax eax +
jge loc_100CFB6  +
push eax  +
push 11Fh  +
push offset aWizardpageOn_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or eax 0FFFFFFFFh +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_100C8FE  +
test eax eax +
jge loc_100CFE1  +
push eax  +
push 13Fh  +
jmp loc_100CFF4  +
mov ecx [ebp+var_4] +
push esi  +
call sub_1013B02  +
test eax eax +
jge loc_100D008  +
push eax  +
push 142h  +
push offset aWizardpageOnwi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_104E188 +
mov eax [eax+0D4h] +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
test eax eax +
jz loc_100D038  +
push 1  +
push eax  +
call ds:EnableWindow  +
lea eax [ebp+var_4] +
push eax  +
call ds:GetTickCount64  +
sub eax [esi+30h] +
sbb edx [esi+34h] +
push edx  +
push eax  +
call sub_100CE3F  +
pop esi  +
test eax eax +
jl loc_100D063  +
mov eax [ebp+var_4] +
mov ecx dword_104E188 +
mov [ecx+0ACh] eax +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
and [ebp+var_C] 0 +
and [ebp+var_10] 0 +
and [ebp+var_8] 0 +
sub eax 9DFh +
push esi  +
mov [ebp+var_1] 0 +
jz loc_100D1F3  +
dec eax  +
jz loc_100D191  +
dec eax  +
jz loc_100D132  +
dec eax  +
jz loc_100D0BB  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:?OnMessage@TaskPage@DirectUI@@MAE_NIIJPAJ@Z  +
mov [ebp+var_1] al +
jmp loc_100D11D  +
lea eax [ebp+var_8] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_100D0E6  +
push esi  +
push 20Fh  +
push offset aWizardpageOnme  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100D0F5  +
push [ebp+arg_8]  +
mov ecx [ebp+var_8] +
call sub_10130BB  +
mov [ebp+var_1] 1 +
test esi esi +
jge loc_100D11D  +
lea eax [ebp+var_8] +
push eax  +
call sub_101235B  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100D11D  +
push esi  +
mov uID 19Ch +
call sub_10130BB  +
mov [ebp+var_1] 1 +
mov eax [ebp+var_10] +
pop esi  +
test eax eax +
jz loc_100D12B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al [ebp+var_1] +
leave   +
retn 10h  +
lea eax [ebp+var_8] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_100D149  +
push esi  +
push 1FCh  +
jmp loc_100D0D0  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_C] +
push eax  +
push 2Ah  +
call sub_1013447  +
mov esi eax +
test esi esi +
jge loc_100D168  +
push esi  +
push 202h  +
jmp loc_100D0D0  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+60h] ecx +
push [ebp+var_C]  +
mov ecx [ebp+var_8] +
call sub_1012A3E  +
mov esi eax +
test esi esi +
jge loc_100D0F1  +
push esi  +
push 206h  +
jmp loc_100D0D0  +
lea eax [ebp+var_8] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_100D1AB  +
push esi  +
push 1E2h  +
jmp loc_100D0D0  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_C] +
push eax  +
push 2Ch  +
call sub_1013447  +
mov esi eax +
test esi esi +
jge loc_100D1CA  +
push esi  +
push 1E8h  +
jmp loc_100D0D0  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [eax+38h] ecx +
push [ebp+var_C]  +
mov ecx [ebp+var_8] +
call sub_1012A3E  +
mov esi eax +
test esi esi +
jge loc_100D0F1  +
push esi  +
push 1ECh  +
jmp loc_100D0D0  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_8]  +
call sub_101484F  +
mov esi eax +
test esi esi +
jge loc_100D210  +
push esi  +
push 1C4h  +
jmp loc_100D0D0  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_10]  +
call sub_101E653  +
mov esi eax +
test esi esi +
jge loc_100D22D  +
push esi  +
push 1C9h  +
jmp loc_100D0D0  +
lea eax [ebp+var_8] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_100D247  +
push esi  +
push 1CFh  +
jmp loc_100D0D0  +
push [ebp+var_C]  +
mov ecx [ebp+var_8] +
call sub_1012A3E  +
mov esi eax +
test esi esi +
jge loc_100D0F1  +
push esi  +
push 1D2h  +
jmp loc_100D0D0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
xor edi edi +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
test eax eax +
jnz loc_100D2A6  +
mov eax 8000FFFFh +
push eax  +
mov edi eax +
push 292h  +
jmp loc_100D2DC  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+0A0h]  +
test eax eax +
jz loc_100D2C0  +
cmp eax 0FFFFFFFFh +
jz loc_100D2C0  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_100D2F0  +
call ds:GetLastError  +
test eax eax +
jle loc_100D2D4  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 295h  +
push offset aWizardpageGetn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
xor esi esi +
push eax  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call sub_1031307  +
mov edi eax +
cmp edi esi +
jge loc_100D33C  +
push edi  +
push 386h  +
push offset aWizardpageLoad  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100D40B  +
mov ecx [ebp+var_4] +
push ebx  +
mov ebx [ebp+arg_4] +
mov dword ptr [ebx] 1 +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_100D392  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
push eax  +
call sub_10305F2  +
mov edi eax +
cmp edi esi +
jl loc_100D392  +
push esi  +
push esi  +
push esi  +
push [ebp+var_8]  +
call ds:?CreateGraphic@Value@DirectUI@@SGPAV12@PAUHICON__@@_N11@Z  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
cmp eax esi +
jnz loc_100D38E  +
mov eax 8000FFFFh +
push eax  +
mov edi eax +
push 394h  +
jmp loc_100D3F6  +
mov [ebx] esi +
jmp loc_100D40A  +
mov eax dword_104E138 +
push 40h  +
push esi  +
push esi  +
push 1  +
push 6Bh  +
push eax  +
call ds:LoadImageW  +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_100D3DA  +
cmp eax 0FFFFFFFFh +
jz loc_100D3DA  +
mov edi [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push eax  +
mov [edi] esi +
call ds:?CreateGraphic@Value@DirectUI@@SGPAV12@PAUHICON__@@_N11@Z  +
mov [edi] eax +
cmp eax esi +
jnz loc_100D3D6  +
mov eax 8000FFFFh +
push eax  +
mov edi eax +
push 3ABh  +
jmp loc_100D3F6  +
xor edi edi +
jmp loc_100D40A  +
call ds:GetLastError  +
cmp eax esi +
jle loc_100D3EE  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 3A6h  +
push offset aWizardpageLoad  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
jmp sub_100CE97  +
***
call __EH_prolog3  +
mov esi ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-14h] +
call sub_100CE71  +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100C825  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+70h]  +
push eax  +
mov ecx esi +
call sub_100CEC2  +
call ds:GetTickCount64  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
mov [esi+30h] eax +
mov [esi+34h] edx +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset aBtnprivacy  +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_100D4A5  +
push esi  +
push 361h  +
jmp loc_100D4C5  +
cmp [ebp+arg_0] 1 +
mov ecx [ebp+var_4] +
setz al  +
movzx eax al +
push eax  +
call ds:?SetEnabled@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
test esi esi +
jge loc_100D4D9  +
push esi  +
push 364h  +
push offset aIntropageEnabl  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
retn   +
***
retn   +
***
mov edi edi +
push esi  +
push hObject  +
mov esi ecx +
call ds:ResetEvent  +
test eax eax +
jnz loc_100D53A  +
call ds:GetLastError  +
test eax eax +
jle loc_100D530  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_100D53A  +
push eax  +
push 4E7h  +
jmp loc_100D599  +
mov eax [esi+50h] +
test eax eax +
jz loc_100D5AF  +
mov ecx [eax] +
push 2  +
push hWnd  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jge loc_100D55B  +
push eax  +
push 4EEh  +
jmp loc_100D599  +
mov eax [esi+50h] +
mov ecx [eax] +
push 0  +
push 1  +
push 0  +
push 0  +
push hWnd  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jge loc_100D57E  +
push eax  +
push 4F1h  +
jmp loc_100D599  +
mov eax [esi+50h] +
mov ecx [eax] +
push 0  +
push hWnd  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jge loc_100D5AF  +
push eax  +
push 4F4h  +
push offset aProgresspageOn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100D5BB  +
push 37h  +
mov ecx esi +
call sub_100C7A3  +
inc dword ptr [esi+54h]  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push 9DCh  +
push dword ptr [ebp+8]  +
call ds:PostMessageW  +
pop ebp  +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1015C13  +
test [ebp+arg_0] 1 +
jz loc_100D609  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+2Ch] +
test eax eax +
jnz locret_100D621  +
mov eax Handles +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push offset aDetails  +
call sub_100C938  +
test eax eax +
jge loc_100D64B  +
push eax  +
push 0BF5h  +
jmp loc_100D662  +
mov ecx [ebp+var_4] +
push offset aAboutBlank  +
call sub_100BB23  +
test eax eax +
jge loc_100D676  +
push eax  +
push 0BF8h  +
push offset aDetailspageOnk  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_4] +
push eax  +
mov eax [ebp+arg_4] +
call dword ptr [eax]  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov eax [eax] +
sub eax [ecx] +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_100D6BA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [edi+0Ch] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
and dword ptr [eax+8] 0 +
and dword ptr [eax+0Ch] 0 +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
mov [eax+4] ecx +
mov dword ptr [eax+10h] 5 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hWnd] 0 +
push esi  +
push edi  +
lea eax [ebp+hWnd] +
push eax  +
push offset aCbauto  +
mov esi ecx +
or edi 0FFFFFFFFh +
call sub_100D26C  +
test eax eax +
jge loc_100D731  +
push eax  +
push 143h  +
push offset aIntropageOnwiz  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100D75C  +
push 0  +
push 1  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov ecx dword_104E188 +
dec eax  +
neg eax  +
sbb eax eax +
neg eax  +
mov [ecx+2Ch] eax +
mov ecx esi +
call sub_100CF93  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C767  +
mov ecx [ebp+arg_0] +
xor eax eax +
mov [esi+48h] ecx +
mov ecx [ebp+arg_8] +
mov [esi+4Ch] ecx +
mov ecx [ebp+arg_4] +
mov [esi+3Ch] eax +
mov [esi+38h] eax +
mov [esi+40h] eax +
mov [esi+50h] eax +
mov [esi+54h] eax +
mov dword ptr [esi] offset off_1002440 +
mov dword ptr [esi+4] offset off_1003D8C +
mov [esi+44h] ecx +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax offset aProgresspage +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002440 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax [esi+38h] +
mov ebx ds:DeleteTimerQueueTimer +
xor edi edi +
mov [ebp-4] edi +
cmp eax edi +
jz loc_100D7F3  +
push edi  +
push eax  +
push edi  +
call ebx  +
mov [esi+38h] edi +
mov eax [esi+3Ch] +
cmp eax edi +
jz loc_100D802  +
push edi  +
push eax  +
push edi  +
call ebx  +
mov [esi+3Ch] edi +
mov eax [esi+50h] +
cmp eax edi +
jz loc_100D812  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+50h] edi +
mov eax [esi+4Ch] +
cmp eax edi +
jz loc_100D823  +
push eax  +
call ds:SysFreeString  +
mov [esi+4Ch] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ds:??1TaskPage@DirectUI@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E188 +
cmp dword ptr [eax+0A4h] 29h +
push esi  +
mov esi [ebp+8] +
jnz loc_100D89D  +
mov eax [esi+4] +
mov ecx [esi] +
cmp ecx [eax+54h] +
jnz loc_100D89D  +
push hObject  +
call ds:SetEvent  +
test eax eax +
jnz loc_100D89D  +
call ds:GetLastError  +
test eax eax +
jle loc_100D881  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_100D89D  +
push eax  +
push 652h  +
push offset aProgresspageSh  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test esi esi +
jz loc_100D8B1  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
test edi edi +
jnz loc_100D8DF  +
push 80070057h  +
push 6BBh  +
jmp loc_100D974  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp+0Ch] eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_100D98E  +
lea eax [ebp-4] +
push eax  +
push offset aConsentlink  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_100D918  +
push eax  +
push 6C6h  +
jmp loc_100D974  +
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-4] +
jnz loc_100D93A  +
mov eax dword_104E0EC +
mov [esi+2Ch] eax +
call sub_100C97C  +
test eax eax +
jge loc_100D98A  +
push eax  +
push 6CCh  +
jmp loc_100D974  +
lea eax [ebp-4] +
push eax  +
push offset aSkiplink  +
call sub_100C938  +
test eax eax +
jge loc_100D954  +
push eax  +
push 6D3h  +
jmp loc_100D974  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_100D98E  +
mov eax dword_104E0F0 +
mov ecx esi +
mov [esi+2Ch] eax +
call sub_100C97C  +
test eax eax +
jge loc_100D98A  +
push eax  +
push 6DCh  +
push offset aConsentpageOnl  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100D98E  +
mov byte ptr [edi+8] 1 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100D9AF  +
cmp ecx 7FFFFFFFh +
jbe loc_100D9B4  +
mov eax 80070057h +
test eax eax +
jl loc_100D9FF  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_100D9EF  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_100D9EA  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_100D9EA  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100D9D2  +
pop edi  +
test esi esi +
jnz loc_100D9F6  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1C] ecx +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebp+var_10] esi +
mov [ebp+var_18] esi +
cmp edi esi +
jnz loc_100DA40  +
mov eax 80070057h +
push eax  +
mov ebx eax +
push 0A29h  +
jmp loc_100DB02  +
lea eax [ebp+var_C] +
push eax  +
mov [edi] esi +
call sub_100C8FE  +
mov ebx eax +
cmp ebx esi +
jge loc_100DA5C  +
push ebx  +
push 0A2Eh  +
jmp loc_100DB02  +
mov ecx [ebp+var_C] +
lea eax [ebp+var_8] +
push eax  +
call sub_10123F8  +
mov ebx eax +
cmp ebx esi +
jge loc_100DA79  +
push ebx  +
push 0A31h  +
jmp loc_100DB02  +
mov ecx [ebp+var_8] +
call sub_1016182  +
mov [ebp+var_14] eax +
mov [ebp+arg_0] esi +
cmp eax esi +
jbe loc_100DB1E  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1016BE8  +
mov ebx eax +
cmp ebx esi +
jl loc_100DAF4  +
mov eax [ebp+var_4] +
cmp [eax+30h] esi +
jz loc_100DADB  +
lea eax [ebp+var_10] +
push eax  +
call sub_102E866  +
mov ebx eax +
cmp ebx esi +
jl loc_100DAFC  +
cmp [ebp+var_10] esi +
jnz loc_100DADB  +
mov eax dword_104E188 +
cmp [eax] esi +
jnz loc_100DADB  +
mov ecx [ebp+var_4] +
push esi  +
call sub_1015CD6  +
mov [ebp+var_18] 1 +
jmp loc_100DAE7  +
mov ecx [ebp+var_4] +
call sub_1030FBE  +
test eax eax +
jnz loc_100DB18  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_14] +
jb loc_100DA8F  +
jmp loc_100DB1E  +
push ebx  +
push 0A37h  +
jmp loc_100DB02  +
push ebx  +
push 0A3Eh  +
push offset aCustomizepageR  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100DB54  +
mov dword ptr [edi] 1 +
cmp [ebp+var_14] esi +
jz loc_100DB35  +
cmp [ebp+var_18] esi +
jnz loc_100DB35  +
mov eax dword_104E188 +
cmp [eax+0B4h] esi +
jbe loc_100DB3B  +
mov dword ptr [edi] 1 +
mov ecx [ebp+var_1C] +
push 2  +
cmp [edi] esi +
jz loc_100DB48  +
push 2  +
jmp loc_100DB49  +
push esi  +
push 48Bh  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_10] +
push eax  +
mov ebx ecx +
mov [ebp+var_10] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
call sub_100C8FE  +
mov esi eax +
cmp esi edi +
jge loc_100DB9A  +
push esi  +
push 0AFDh  +
jmp loc_100DC78  +
mov ecx [ebp+var_10] +
lea eax [ebp+var_8] +
push eax  +
call sub_10123F8  +
mov esi eax +
cmp esi edi +
jge loc_100DBB7  +
push esi  +
push 0B00h  +
jmp loc_100DC78  +
mov ecx [ebp+var_8] +
mov [ebp+var_4] edi +
call sub_1016182  +
test eax eax +
jbe loc_100DC61  +
mov eax [ebx+38h] +
mov ecx [ebp+var_4] +
cmp [eax+ecx*4] edi +
jz loc_100DC4D  +
lea eax [ebp+var_C] +
push eax  +
push ecx  +
mov ecx [ebp+var_8] +
call sub_1016BE8  +
mov esi eax +
cmp esi edi +
jl loc_100DC93  +
mov eax [ebp+var_C] +
cmp [eax+30h] edi +
jz loc_100DC15  +
lea eax [ebp+var_14] +
push eax  +
call sub_102E866  +
mov esi eax +
cmp esi edi +
jl loc_100DC9B  +
cmp [ebp+var_14] edi +
jnz loc_100DC15  +
mov eax dword_104E188 +
cmp [eax] edi +
jz loc_100DC4D  +
mov eax [ebx+38h] +
mov ecx [ebp+var_4] +
mov ecx [eax+ecx*4] +
mov eax [ecx] +
call dword ptr [eax+0A0h]  +
mov esi eax +
cmp esi edi +
jz loc_100DCA3  +
cmp esi 0FFFFFFFFh +
jz loc_100DCA3  +
mov ecx [ebp+var_C] +
call sub_1030FBE  +
neg eax  +
sbb eax eax +
push edi  +
neg eax  +
push eax  +
push 0F1h  +
push esi  +
call ds:SendMessageW  +
mov ecx [ebp+var_8] +
inc [ebp+var_4]  +
call sub_1016182  +
cmp [ebp+var_4] eax +
jb loc_100DBCA  +
lea eax [ebp+var_18] +
push eax  +
mov ecx ebx +
call sub_100DA08  +
mov esi eax +
cmp esi edi +
jge loc_100DC8C  +
push esi  +
push 0B26h  +
push offset aCustomizepageS  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
push esi  +
push 0B0Fh  +
jmp loc_100DC78  +
push esi  +
push 0B16h  +
jmp loc_100DC78  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100DCB7  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 0B1Fh  +
jmp loc_100DC78  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp [ebx+48h] edi +
jnz loc_100DD53  +
lea eax [ebp+var_8] +
push eax  +
call sub_100C8FE  +
mov esi eax +
cmp esi edi +
jge loc_100DCF7  +
push esi  +
push 0B4Eh  +
jmp loc_100DD66  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
call sub_10123F8  +
mov esi eax +
cmp esi edi +
jge loc_100DD11  +
push esi  +
push 0B51h  +
jmp loc_100DD66  +
mov ecx [ebp+var_4] +
call sub_1016182  +
test eax eax +
jbe loc_100DD53  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1016BE8  +
mov esi eax +
test esi esi +
jl loc_100DD81  +
mov ecx [ebp+var_C] +
call sub_1015CCD  +
mov ecx [ebp+var_C] +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
call sub_1015CD6  +
mov ecx [ebp+var_4] +
inc edi  +
call sub_1016182  +
cmp edi eax +
jb loc_100DD1D  +
mov ecx ebx +
call sub_100DB62  +
mov esi eax +
test esi esi +
jge loc_100DD7A  +
push esi  +
push 0B5Fh  +
push offset aCustomizepag_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
push esi  +
push 0B55h  +
jmp loc_100DD66  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100DDA4  +
cmp ecx 7FFFFFFFh +
jbe loc_100DDA9  +
mov eax 80070057h +
test eax eax +
jl loc_100DDE6  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100DDD6  +
cmp eax esi +
ja loc_100DDD6  +
jnz loc_100DDE1  +
jmp loc_100DDDB  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
push 58h  +
mov eax offset dword_10486FC +
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
push 38h  +
lea eax [ebp-60h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-64h] ebx +
call memset  +
add esp 0Ch +
mov ecx esi +
mov [ebp-18h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-28h] +
call sub_100CE71  +
lea eax [ebp-18h] +
push eax  +
mov [ebp-4] ebx +
call sub_1031307  +
cmp eax ebx +
jge loc_100DE5B  +
push eax  +
push 85h  +
push offset aIntropageOnlis  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E03B  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov edi [ebp+0Ch] +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_100E03B  +
lea eax [ebp-10h] +
push eax  +
push offset aLinkprivacy  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_100DE97  +
push eax  +
push 8Eh  +
jmp loc_100DE42  +
***
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-10h] +
jnz loc_100DEB6  +
push ebx  +
call sub_100C9D5  +
cmp eax ebx +
jge loc_100E0D0  +
push eax  +
push 92h  +
jmp loc_100DE42  +
***
lea eax [ebp-10h] +
push eax  +
push offset aLinkadvanced  +
call sub_100C938  +
cmp eax ebx +
jge loc_100DED3  +
push eax  +
push 9Ch  +
jmp loc_100DE42  +
***
mov eax [edi] +
cmp eax [ebp-10h] +
jnz loc_100E04F  +
lea eax [ebp-14h] +
push eax  +
call sub_102E866  +
cmp eax ebx +
jge loc_100DEF6  +
push eax  +
push 0A0h  +
jmp loc_100DE42  +
***
push offset aAdvancedlinkpa  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100DF11  +
push eax  +
push 0A6h  +
jmp loc_100DE42  +
***
xor edi edi +
inc edi  +
push edi  +
push offset aAdvancedpane  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_100DF3B  +
push eax  +
push 0A9h  +
push offset aIntropageOnlis  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_100DE4E  +
***
push offset aPackagelist  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100DF53  +
push eax  +
push 0ACh  +
jmp loc_100DF2B  +
***
lea eax [ebp-10h] +
push eax  +
push offset aCbauto  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_100DF6F  +
push eax  +
push 0AFh  +
jmp loc_100DF2B  +
***
cmp [ebp-14h] ebx +
jnz loc_100DF99  +
mov eax dword_104E188 +
cmp [eax] ebx +
jnz loc_100DF99  +
lea eax [ebp-10h] +
push eax  +
push offset aLinkadmin  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_100DFB4  +
push eax  +
push 0BAh  +
jmp loc_100DF2B  +
***
push offset aAdminpane  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100DFB4  +
push eax  +
push 0B7h  +
jmp loc_100DF2B  +
***
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov edi offset aPublisherpane +
test eax eax +
jz loc_100DFDE  +
push 1  +
push edi  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_100DFDE  +
push eax  +
push 0BFh  +
jmp loc_100DE42  +
***
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
test eax eax +
jz loc_100E02C  +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 6 +
jnz loc_100E02C  +
push 1  +
push offset aPrivacypublish  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_100E015  +
push eax  +
push 0C5h  +
jmp loc_100DE42  +
***
push edi  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100E02C  +
push eax  +
push 0C8h  +
jmp loc_100DE42  +
***
mov ecx [ebp-10h] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
mov eax [ebp+0Ch] +
mov byte ptr [eax+8] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_100CE97  +
call __EH_epilog3  +
retn 8  +
***
lea eax [ebp-10h] +
push eax  +
push offset aLinkadmin  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_100E06E  +
push eax  +
push 0D5h  +
jmp loc_100DE42  +
***
mov eax [edi] +
cmp eax [ebp-10h] +
jnz loc_100E0D9  +
lea eax [ebp-14h] +
push eax  +
call sub_102E866  +
cmp eax ebx +
jge loc_100E08D  +
push eax  +
push 0D9h  +
jmp loc_100DE42  +
***
cmp [ebp-14h] ebx +
jnz loc_100E0D0  +
mov eax dword_104E188 +
cmp [eax] ebx +
jnz loc_100E0D0  +
call sub_101C4D4  +
cmp eax ebx +
jge loc_100E0AF  +
push eax  +
push 0DDh  +
jmp loc_100DE42  +
***
jnz loc_100E0D0  +
push ebx  +
push 5  +
push 471h  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov eax dword_104E188 +
mov dword ptr [eax+0A8h] 4 +
mov byte ptr [edi+8] 1 +
jmp loc_100E03B  +
***
lea eax [ebp-10h] +
push eax  +
push offset aLinkprivacypub  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_100E0F8  +
push eax  +
push 0F1h  +
jmp loc_100DE42  +
***
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-10h] +
jnz loc_100E192  +
push offset aPublisherpane  +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100E11E  +
push eax  +
push 0F5h  +
jmp loc_100DE42  +
***
push offset aPrivacypublish  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100E139  +
push eax  +
push 0F8h  +
jmp loc_100DE42  +
***
push offset aAdvancedpane  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_100E154  +
push eax  +
push 0FBh  +
jmp loc_100DE42  +
***
push 4  +
push offset aPackagelist  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_100E171  +
push eax  +
push 0FEh  +
jmp loc_100DE42  +
***
push 1  +
push offset aAdvancedlinkpa  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_100E0D0  +
push eax  +
push 101h  +
jmp loc_100DE42  +
***
lea eax [ebp-10h] +
push eax  +
push offset aBtnprivacy  +
call sub_100C938  +
cmp eax ebx +
jge loc_100E1AF  +
push eax  +
push 108h  +
jmp loc_100DE42  +
***
mov eax [edi] +
cmp eax [ebp-10h] +
jnz loc_100E03B  +
lea eax [ebp-1Ch] +
push eax  +
push offset aLstview  +
mov ecx esi +
call sub_100D26C  +
cmp eax ebx +
jge loc_100E1D9  +
push eax  +
push 10Ch  +
jmp loc_100DE42  +
***
mov edi ds:SendMessageW +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword ptr [ebp-1Ch]  +
call edi  +
cmp eax 0FFFFFFFFh +
jz loc_100E034  +
mov [ebp-60h] eax +
lea eax [ebp-64h] +
push eax  +
push ebx  +
push 104Bh  +
push dword ptr [ebp-1Ch]  +
mov dword ptr [ebp-64h] 4 +
call edi  +
test eax eax +
jz loc_100E034  +
mov ecx [ebp-44h] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
push eax  +
mov ecx esi +
call sub_100C9D5  +
cmp eax ebx +
jge loc_100E034  +
push eax  +
push 119h  +
jmp loc_100DE42  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_1031307  +
test eax eax +
jge loc_100E275  +
push eax  +
push 329h  +
push offset aIntropageOnget  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E2F9  +
mov ecx [ebp+var_4] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+18h] +
cmp eax [ecx+7Ch] +
jnb loc_100E2F8  +
test eax eax +
jl loc_100E2F8  +
mov [ecx+80h] eax +
test byte ptr [esi+0Ch] 1 +
mov ecx [ecx+78h] +
push edi  +
mov edi [ecx+eax*4] +
mov eax [edi] +
mov ecx edi +
jz loc_100E2BA  +
call dword ptr [eax+0Ch]  +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100D999  +
test eax eax +
jge loc_100E2F7  +
push eax  +
push 336h  +
jmp loc_100E2E3  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_100E2F7  +
push eax  +
push 33Eh  +
push offset aIntropageOnget  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
xor eax eax +
leave   +
retn 4  +
***
push 54h  +
mov eax offset dword_1048724 +
call __EH_prolog3  +
mov ebx ecx +
xor edi edi +
push 38h  +
lea eax [ebp-5Ch] +
push edi  +
push eax  +
mov [ebp-14h] edi +
mov [ebp-10h] edi +
mov [ebp-60h] edi +
call memset  +
add esp 0Ch +
mov ecx ebx +
mov [ebp-18h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-24h] +
call sub_100CE71  +
lea eax [ebp-18h] +
push eax  +
mov [ebp-4] edi +
call sub_1031307  +
cmp eax edi +
jge loc_100E36F  +
push eax  +
push 3B1h  +
push offset aPackagecontent  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E42A  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov esi [ebp+0Ch] +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
lea eax [esi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_100E42A  +
lea eax [ebp-14h] +
push eax  +
push offset aBtnprivacy  +
mov ecx ebx +
call sub_100C938  +
cmp eax edi +
jge loc_100E3AB  +
push eax  +
push 3B7h  +
jmp loc_100E356  +
***
mov eax [esi] +
cmp eax [ebp-14h] +
jnz loc_100E42A  +
lea eax [ebp-10h] +
push eax  +
push offset aLstview  +
mov ecx ebx +
call sub_100D26C  +
cmp eax edi +
jge loc_100E3CE  +
push eax  +
push 3BBh  +
jmp loc_100E356  +
***
mov esi ds:SendMessageW +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_100E423  +
mov [ebp-5Ch] eax +
lea eax [ebp-60h] +
push eax  +
push edi  +
push 104Bh  +
push dword ptr [ebp-10h]  +
mov dword ptr [ebp-60h] 4 +
call esi  +
test eax eax +
jz loc_100E423  +
mov ecx [ebp-40h] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
push eax  +
mov ecx ebx +
call sub_100C9D5  +
cmp eax edi +
jge loc_100E423  +
push eax  +
push 3C8h  +
jmp loc_100E356  +
***
mov eax [ebp+0Ch] +
mov byte ptr [eax+8] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100CE97  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D7BB  +
test byte ptr [ebp+8] 1 +
jz loc_100E45D  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-20h] +
call sub_100CE71  +
mov [ebp-4] ebx +
cmp [esi+40h] ebx +
jz loc_100E4A0  +
xor edi edi +
jmp loc_100E64E  +
mov eax dword_104E188 +
mov edi [eax+0A4h] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
cmp eax edi +
jnz loc_100E4F0  +
mov eax [esi+50h] +
cmp eax ebx +
jz loc_100E4F0  +
mov ecx [eax] +
push 1  +
push hWnd  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
cmp edi ebx +
jge loc_100E4F0  +
push edi  +
push 527h  +
push offset aProgresspageSe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E64E  +
lea eax [ebp-10h] +
push eax  +
mov ebx offset aProgress +
push ebx  +
mov ecx esi +
call sub_100D26C  +
mov edi eax +
test edi edi +
jge loc_100E50F  +
push edi  +
push 52Fh  +
jmp loc_100E4D7  +
push 50000008h  +
push 0FFFFFFF0h  +
push dword ptr [ebp-10h]  +
call ds:SetWindowLongW  +
push 23h  +
push 1  +
push 40Ah  +
push dword ptr [ebp-10h]  +
call ds:SendMessageW  +
lea eax [ebp-14h] +
push eax  +
push offset aPage  +
mov ecx esi +
call sub_100C938  +
mov edi eax +
test edi edi +
jge loc_100E54F  +
push edi  +
push 53Ch  +
jmp loc_100E4D7  +
mov ecx [ebp-14h] +
push 1  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
mov edi eax +
test edi edi +
jge loc_100E56B  +
push edi  +
push 53Fh  +
jmp loc_100E4D7  +
lea eax [ebp-14h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_100C938  +
mov edi eax +
test edi edi +
jge loc_100E588  +
push edi  +
push 542h  +
jmp loc_100E4D7  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_100E618  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_100E5CD  +
mov edi 8007000Eh +
push edi  +
push 548h  +
push offset aProgresspageSe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E63A  +
mov eax dword_104E188 +
mov eax [eax+58h] +
neg eax  +
sbb eax eax +
push 400h  +
and eax 2710h +
add eax 162h +
push ebx  +
push eax  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_100E5FD  +
push edi  +
push 54Eh  +
jmp loc_100E5B7  +
push ebx  +
call ds:SysAllocString  +
mov [esi+4Ch] eax +
test eax eax +
jnz loc_100E61B  +
mov edi 8007000Eh +
push edi  +
push 551h  +
jmp loc_100E5B7  +
mov ebx [ebp-18h] +
push dword ptr [esi+4Ch]  +
mov ecx esi +
call sub_100C7C0  +
mov edi eax +
test edi edi +
jge loc_100E633  +
push edi  +
push 555h  +
jmp loc_100E5B7  +
mov dword ptr [esi+40h] 1 +
test ebx ebx +
jz loc_100E64E  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_100CE97  +
mov eax edi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-0Dh] bl +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
mov eax [ebp+8] +
sub eax 9DCh +
mov [ebp-4] ebx +
jz loc_100E802  +
dec eax  +
mov ecx esi +
jz loc_100E7C0  +
dec eax  +
jz loc_100E741  +
sub eax 5 +
jz loc_100E725  +
sub eax 3 +
jz loc_100E6CD  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D06C  +
mov [ebp-0Dh] al +
jmp loc_100E92E  +
mov eax dword_104E188 +
mov edi [eax+0A4h] +
mov eax [esi] +
call dword ptr [eax+58h]  +
cmp eax edi +
jnz loc_100E7B7  +
mov esi [esi+50h] +
cmp esi ebx +
jz loc_100E7B7  +
mov eax [esi] +
push 1  +
push hWnd  +
push esi  +
call dword ptr [eax+28h]  +
cmp eax ebx +
jge loc_100E7B7  +
push eax  +
push 5F2h  +
push offset aProgresspage_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E92E  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
push offset aTxtsubprogress  +
call sub_100CC01  +
cmp eax ebx +
jge loc_100E7B7  +
push eax  +
push 5D1h  +
jmp loc_100E70C  +
push ebx  +
push ebx  +
push ebx  +
mov edi offset asc_10027A4 +
push edi  +
push offset aTxtprogress  +
call sub_100CC01  +
cmp eax ebx +
jge loc_100E760  +
push eax  +
push 5DDh  +
jmp loc_100E70C  +
push ebx  +
push ebx  +
push ebx  +
push edi  +
push offset aTxtsubprogress  +
mov ecx esi +
call sub_100CC01  +
cmp eax ebx +
jge loc_100E77C  +
push eax  +
push 5E0h  +
jmp loc_100E70C  +
cmp [esi+40h] ebx +
jz loc_100E79A  +
push dword ptr [ebp+10h]  +
mov ecx esi +
call sub_100C7C0  +
cmp eax ebx +
jge loc_100E79A  +
push eax  +
push 5E4h  +
jmp loc_100E70C  +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_100E7AB  +
push eax  +
call ds:SysFreeString  +
mov [esi+4Ch] ebx +
push dword ptr [ebp+10h]  +
call ds:SysAllocString  +
mov [esi+4Ch] eax +
mov byte ptr [ebp-0Dh] 1 +
jmp loc_100E92E  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
push offset aTxtprogress  +
call sub_100CC01  +
cmp eax ebx +
jge loc_100E7DF  +
push eax  +
push 5C2h  +
jmp loc_100E70C  +
push ebx  +
push ebx  +
push ebx  +
push offset asc_10027A4  +
push offset aTxtsubprogress  +
mov ecx esi +
call sub_100CC01  +
cmp eax ebx +
jge loc_100E7B7  +
push eax  +
push 5C5h  +
jmp loc_100E70C  +
push hObject  +
call ds:ResetEvent  +
test eax eax +
jnz loc_100E835  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100E828  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jge loc_100E835  +
push eax  +
push 58Fh  +
jmp loc_100E70C  +
lea edi [esi+3Ch] +
mov eax [edi] +
cmp eax ebx +
jz loc_100E883  +
push ebx  +
push eax  +
push ebx  +
call ds:DeleteTimerQueueTimer  +
test eax eax +
jz loc_100E84F  +
xor eax eax +
jmp loc_100E863  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100E863  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [edi] ebx +
jge loc_100E883  +
push eax  +
push 59Ah  +
push offset aProgresspage_0  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
push 8  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+10h] eax +
cmp eax ebx +
jnz loc_100E8BA  +
push 8007000Eh  +
push 5A1h  +
push offset aProgresspage_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100E918  +
push ebx  +
push ebx  +
push 2EEh  +
push eax  +
push offset loc_100D83A  +
mov [eax+4] esi +
mov ecx [esi+54h] +
push ebx  +
push edi  +
mov [eax] ecx +
call ds:CreateTimerQueueTimer  +
test eax eax +
jnz loc_100E8FB  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100E8F1  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jge loc_100E8FB  +
push eax  +
push 5AEh  +
jmp loc_100E8A4  +
mov ecx esi +
mov [ebp+10h] ebx +
call sub_100E469  +
cmp eax ebx +
jge loc_100E914  +
push eax  +
push 5B6h  +
jmp loc_100E70C  +
mov byte ptr [ebp-0Dh] 1 +
cmp [ebp+10h] ebx +
jz loc_100E92E  +
push dword ptr [ebp+10h]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
mov al [ebp-0Dh] +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
or dword ptr [ebp-18h] 0FFFFFFFFh +
xor edi edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-20h] +
call sub_100CE71  +
push 400h  +
push edi  +
mov [ebp-4] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jnz loc_100E9AF  +
push 8007000Eh  +
push 678h  +
push offset aConsentpageOns  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100EA5F  +
mov ecx [esi+38h] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [esi+38h] +
mov edi eax +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx esi +
mov [ebp-14h] eax +
call sub_100D422  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push 80h  +
push ebx  +
call sub_1014418  +
test eax eax +
jge loc_100E9E7  +
push eax  +
push 683h  +
jmp loc_100E996  +
push ebx  +
mov ecx esi +
call sub_100C7C0  +
test eax eax +
jge loc_100E9FB  +
push eax  +
push 686h  +
jmp loc_100E996  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-14h]  +
push 200h  +
push ebx  +
call sub_1014418  +
test eax eax +
jge loc_100EA1C  +
push eax  +
push 689h  +
jmp loc_100E996  +
push dword ptr [ebp-10h]  +
mov edi offset aTxtconsdescrip +
push edi  +
mov ecx esi +
call sub_100CCFE  +
test eax eax +
jge loc_100EA3B  +
push eax  +
push 68Ch  +
jmp loc_100E996  +
push dword ptr [ebp-14h]  +
mov ecx esi +
push 0  +
push dword ptr [ebp-14h]  +
push ebx  +
push edi  +
call sub_100CC01  +
test eax eax +
jge loc_100EA5B  +
push eax  +
push 694h  +
jmp loc_100E996  +
and dword ptr [ebp-18h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_100CE97  +
mov eax [ebp-18h] +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-14h] +
call sub_100CE71  +
mov ecx [esi+60h] +
mov eax [ecx] +
and dword ptr [ebp-4] 0 +
mov edi [ecx+40h] +
call dword ptr [eax+8]  +
mov ebx ds:SysAllocString +
push eax  +
call ebx  +
mov ecx [esi+60h] +
mov [esi+38h] eax +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push eax  +
call ebx  +
mov [esi+3Ch] eax +
test edi edi +
jz loc_100EAEA  +
push dword ptr [edi]  +
call ebx  +
mov [esi+40h] eax +
push dword ptr [edi+4]  +
call ebx  +
mov [esi+44h] eax +
push dword ptr [edi+8]  +
call ebx  +
mov [esi+48h] eax +
mov eax [edi+0Ch] +
mov [esi+4Ch] eax +
mov eax [edi+10h] +
and dword ptr [edi+0Ch] 0 +
mov [esi+58h] eax +
mov ecx esi +
call sub_10224A1  +
test edi edi +
jz loc_100EB03  +
push dword ptr [esi+4Ch]  +
mov ecx edi +
call sub_100D6A4  +
and dword ptr [esi+4Ch] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
push 10h  +
mov eax offset __ehhandler$?x_ismbbtype_l@@YAHPAUlocaleinfo_struct@@IHH@Z +
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-10h] 0 +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100CE71  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov edi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
mov [ebp-14h] eax +
lea eax [ebp-14h] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_100EBFA  +
lea eax [ebp-10h] +
push eax  +
push offset aLinkerror  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_100EB91  +
push eax  +
push 7A2h  +
push offset aErrorpageOnlis  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100EBFA  +
mov eax [ebp-10h] +
cmp [edi] eax +
jnz loc_100EBFA  +
push eax  +
mov ecx esi +
call sub_100CA51  +
test eax eax +
jge loc_100EBAC  +
push eax  +
push 7A6h  +
jmp loc_100EB7B  +
***
lea eax [ebp-10h] +
push eax  +
push offset aErrordetails  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_100EBC8  +
push eax  +
push 7A9h  +
jmp loc_100EB7B  +
***
mov ecx [ebp-10h] +
push 1  +
call ds:?SetLayoutPos@Element@DirectUI@@QAEJH@Z  +
test eax eax +
jge loc_100EBDF  +
push eax  +
push 7ACh  +
jmp loc_100EB7B  +
***
mov ecx [ebp-10h] +
push 1  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
test eax eax +
jge loc_100EBF6  +
push eax  +
push 7AFh  +
jmp loc_100EB7B  +
***
mov byte ptr [edi+8] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100CE97  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_C] +
xor edi edi +
mov ebx 100h +
push eax  +
mov [ebp+var_8] ecx +
mov [ebp+nSize] ebx +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_100EC5F  +
push esi  +
push 7DAh  +
push offset aErrorpageSetup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100EF39  +
push 200h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_100EC89  +
mov esi 8007000Eh +
push esi  +
push 7DCh  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push dword ptr [ecx+40h]  +
push offset a0x08x  +
push ebx  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi edi +
jge loc_100ECAF  +
push esi  +
push 7E2h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aTxterrorcode  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100ECD3  +
push esi  +
push 7E5h  +
jmp loc_100EF0F  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpBuffer]  +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_100ED0A  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100ECF9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi edi +
jge loc_100ED0A  +
push esi  +
push 7EBh  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aTxtuser  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100ED2E  +
push esi  +
push 7EEh  +
jmp loc_100EF0F  +
mov eax uID +
push ebx  +
push [ebp+lpBuffer]  +
add eax 14h +
push eax  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jge loc_100ED51  +
push esi  +
push 7F8h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aTxtsource  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100ED75  +
push esi  +
push 7FBh  +
jmp loc_100EF0F  +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 9 +
jnz loc_100EDC6  +
push ebx  +
push [ebp+lpBuffer]  +
push 168h  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jge loc_100EDA2  +
push esi  +
push 808h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aTxtpath  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100EE17  +
push esi  +
push 80Bh  +
jmp loc_100EF0F  +
mov ecx [ebp+var_C] +
cmp [ecx+7Ch] edi +
jbe loc_100EE1A  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_8] +
push eax  +
push edi  +
push edi  +
push eax  +
mov ebx offset aTxtpath +
push ebx  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100EDF6  +
push esi  +
push 810h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push 1  +
push ebx  +
call sub_100CCFE  +
mov esi eax +
cmp esi edi +
jge loc_100EE12  +
push esi  +
push 813h  +
jmp loc_100EF0F  +
mov ebx 100h +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_10] eax +
cmp eax edi +
jz loc_100EE90  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 24h  +
push [ebp+lpBuffer]  +
call sub_1014418  +
mov esi eax +
cmp esi edi +
jge loc_100EE46  +
push esi  +
push 820h  +
jmp loc_100EF0F  +
push [ebp+var_10]  +
mov ecx [ebp+var_8] +
push edi  +
push [ebp+var_10]  +
mov ebx offset aTxtpackage +
push [ebp+lpBuffer]  +
push ebx  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100EE6F  +
push esi  +
push 823h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push 1  +
push ebx  +
call sub_100CCFE  +
mov esi eax +
cmp esi edi +
jge loc_100EE8B  +
push esi  +
push 826h  +
jmp loc_100EF0F  +
mov ebx 100h +
lea eax [ebp+var_1C] +
push eax  +
push edi  +
call sub_1036BFB  +
test eax eax +
jz loc_100EEAB  +
mov esi 80004005h +
push esi  +
push 82Eh  +
jmp loc_100EF0F  +
mov eax [ebp+var_1C] +
sub eax edi +
jz loc_100EED3  +
dec eax  +
jz loc_100EECC  +
dec eax  +
jz loc_100EEC5  +
mov esi 80004005h +
push esi  +
push 83Dh  +
jmp loc_100EF0F  +
mov eax 16Bh +
jmp loc_100EED8  +
mov eax 16Ah +
jmp loc_100EED8  +
mov eax 169h +
push ebx  +
push [ebp+lpBuffer]  +
push eax  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jge loc_100EEF0  +
push esi  +
push 841h  +
jmp loc_100EF0F  +
mov ecx [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aTxtcontext  +
call sub_100CC01  +
mov esi eax +
cmp esi edi +
jge loc_100EF23  +
push esi  +
push 844h  +
push offset aErrorpageSetup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpBuffer] edi +
jz loc_100EF39  +
push [ebp+lpBuffer]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor esi esi +
push 1800h  +
push esi  +
mov ebx ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] esi +
mov [ebp+var_8] esi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_100EF9A  +
mov esi 8007000Eh +
push esi  +
push 923h  +
push offset aCustomizepageA  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F20B  +
mov ecx [ebp+arg_8] +
call sub_1030F9A  +
mov ecx eax +
mov [ebp+var_18] ecx +
mov [ebp+var_C] esi +
call sub_1015C82  +
test eax eax +
jbe loc_100F1F9  +
mov eax [ebp+arg_C] +
shl eax 2 +
mov [ebp+arg_8] eax +
push edi  +
push [ebp+var_C]  +
mov ecx [ebp+var_18] +
call sub_1015C8B  +
and [ebp+arg_C] 0 +
mov edi eax +
cmp dword ptr [edi+30h] 0 +
jz loc_100F009  +
lea eax [ebp+var_10] +
push eax  +
call sub_102E866  +
mov esi eax +
test esi esi +
jl loc_100F18C  +
cmp [ebp+var_10] 0 +
jnz loc_100F009  +
mov eax dword_104E188 +
cmp dword ptr [eax] 0 +
jnz loc_100F009  +
mov [ebp+arg_C] 1 +
mov eax offset aChecklistshiel +
jmp loc_100F00E  +
mov eax offset aChecklistitemi +
lea ecx [ebp+var_8] +
push ecx  +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov esi eax +
test esi esi +
jl loc_100F194  +
push offset aTxtsubname  +
call StrToID  +
mov ecx [ebp+var_8] +
movzx eax ax +
push eax  +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov ecx [ebp+arg_8] +
mov edx [ebx+38h] +
mov [ecx+edx] eax +
mov eax [ebx+38h] +
cmp dword ptr [ecx+eax] 0 +
jz loc_100F19C  +
lea eax [ebp+var_14] +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
push 80h  +
push [ebp+lpMem]  +
call sub_1014418  +
mov esi eax +
test esi esi +
jl loc_100F1A9  +
mov eax [ebx+38h] +
mov ecx [ebp+arg_8] +
push [ebp+lpMem]  +
mov ecx [ecx+eax] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
test esi esi +
jl loc_100F1B1  +
cmp [ebp+var_14] 0 +
mov eax [edi] +
mov ecx edi +
jz loc_100F0D3  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push 0C00h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_100F0EE  +
push esi  +
push 958h  +
jmp loc_100F1E4  +
call dword ptr [eax+0Ch]  +
push eax  +
push 0C00h  +
push [ebp+lpMem]  +
call sub_100D999  +
mov esi eax +
test esi esi +
jl loc_100F1B9  +
push [ebp+lpMem]  +
mov eax [edi] +
push 0  +
mov ecx edi +
call dword ptr [eax+8]  +
mov edi [ebp+arg_8] +
push eax  +
mov eax [ebx+38h] +
push dword ptr [edi+eax]  +
mov ecx ebx +
call sub_100CB7C  +
mov esi eax +
test esi esi +
jl loc_100F1C1  +
mov eax [ebx+38h] +
push 1  +
push dword ptr [edi+eax]  +
mov ecx ebx +
call sub_100CC9C  +
mov esi eax +
test esi esi +
jl loc_100F1C9  +
cmp [ebp+arg_C] 0 +
jz loc_100F13B  +
mov eax [ebx+38h] +
and dword ptr [edi+eax] 0 +
push offset aEntrypointlist  +
call StrToID  +
mov ecx [ebp+arg_4] +
movzx eax ax +
push eax  +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
test eax eax +
jz loc_100F1D1  +
push [ebp+var_8]  +
mov ecx eax +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
test esi esi +
jl loc_100F1DE  +
mov ecx [ebp+var_8] +
mov eax [ebx+3Ch] +
inc [ebp+var_C]  +
mov [edi+eax] ecx +
mov ecx [ebp+var_18] +
add edi 4 +
mov [ebp+arg_8] edi +
call sub_1015C82  +
cmp [ebp+var_C] eax +
jb loc_100EFC1  +
jmp loc_100F1F8  +
push esi  +
push 931h  +
jmp loc_100F1E4  +
push esi  +
push 93Eh  +
jmp loc_100F1E4  +
mov esi 8000FFFFh +
push esi  +
push 942h  +
jmp loc_100F1E4  +
push esi  +
push 94Ch  +
jmp loc_100F1E4  +
push esi  +
push 94Fh  +
jmp loc_100F1E4  +
push esi  +
push 95Bh  +
jmp loc_100F1E4  +
push esi  +
push 963h  +
jmp loc_100F1E4  +
push esi  +
push 966h  +
jmp loc_100F1E4  +
mov esi 8000FFFFh +
push esi  +
push 972h  +
jmp loc_100F1E4  +
push esi  +
push 975h  +
push offset aCustomizepageA  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
xor edi edi +
push eax  +
mov esi ecx +
or ebx 0FFFFFFFFh +
mov [ebp+var_4] edi +
call sub_100DA08  +
cmp eax edi +
jge loc_100F254  +
push eax  +
push 9F9h  +
push offset aCustomizepageO  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F270  +
cmp [ebp+var_4] edi +
jnz loc_100F261  +
or ebx 0FFFFFFFFh +
cmp [ebp+var_4] edi +
jz loc_100F270  +
mov ecx esi +
mov [esi+2Ch] edi +
call sub_100CF93  +
mov ebx eax +
mov [esi+48h] edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp-8] edi +
mov [ebp-10h] edi +
mov [ebp-0Ch] edi +
mov [ebp-4] edi +
cmp ebx edi +
jnz loc_100F2AD  +
push 80070057h  +
push 0A85h  +
jmp loc_100F4B9  +
lea eax [ebp-10h] +
push eax  +
call sub_100C8FE  +
cmp eax edi +
jge loc_100F2C5  +
push eax  +
push 0A88h  +
jmp loc_100F4B9  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp+0Ch] eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebx+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_100F399  +
lea eax [ebp-4] +
push eax  +
push offset aLinkdetails  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_100F301  +
push eax  +
push 0A8Fh  +
jmp loc_100F4B9  +
mov eax [ebx] +
cmp eax [ebp-4] +
jnz loc_100F33C  +
push 29h  +
mov ecx esi +
call sub_100C7A3  +
mov eax dword_104E10C +
mov ecx esi +
mov [esi+2Ch] eax +
call sub_100C97C  +
cmp eax edi +
jge loc_100F32F  +
push eax  +
push 0A96h  +
jmp loc_100F4B9  +
mov dword ptr [esi+48h] 1 +
mov byte ptr [ebx+8] 1 +
jmp loc_100F3A5  +
mov ecx [ebp-10h] +
lea eax [ebp-8] +
push eax  +
call sub_10123F8  +
cmp eax edi +
jge loc_100F357  +
push eax  +
push 0AA2h  +
jmp loc_100F4B9  +
mov ecx [ebp-8] +
call sub_1016182  +
test eax eax +
jbe loc_100F374  +
mov edx [ebx] +
mov ecx [esi+38h] +
cmp edx [ecx] +
jz loc_100F3AC  +
inc edi  +
add ecx 4 +
cmp edi eax +
jb loc_100F368  +
mov ecx [ebp-8] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
xor edx edx +
mov [ebp+0Ch] eax +
test eax eax +
jbe loc_100F399  +
mov ecx [esi+40h] +
mov edi [ebx] +
mov eax ecx +
cmp edi [eax] +
jz loc_100F3F8  +
inc edx  +
add eax 4 +
cmp edx [ebp+0Ch] +
jb loc_100F38C  +
push ebx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call ds:?OnListenedEvent@TaskPage@DirectUI@@MAEXPAVElement@2@PAUEvent@2@@Z  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov ecx [ebp-8] +
lea eax [ebp-0Ch] +
push eax  +
push edi  +
call sub_1016BE8  +
test eax eax +
jge loc_100F3C8  +
push eax  +
push 0AABh  +
jmp loc_100F4B9  +
mov ecx [ebp-0Ch] +
call sub_1030FBE  +
mov ecx [ebp-0Ch] +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
call sub_1015CD6  +
mov ecx esi +
mov byte ptr [ebx+8] 1 +
call sub_100DB62  +
test eax eax +
jge loc_100F3A5  +
push eax  +
push 0AB1h  +
jmp loc_100F4B9  +
mov edi edx +
shl edi 2 +
mov ecx [ecx+edi] +
call ds:?GetSelected@Element@DirectUI@@QAE_NXZ  +
neg al  +
sbb al al +
inc al  +
movzx eax al +
push eax  +
mov eax [esi+40h] +
mov ecx [eax+edi] +
call ds:?SetSelected@Element@DirectUI@@QAEJ_N@Z  +
test eax eax +
jge loc_100F42B  +
push eax  +
push 0ABEh  +
jmp loc_100F4B9  +
push offset aClipped  +
call StrToID  +
movzx eax ax +
push eax  +
mov eax [esi+44h] +
mov ecx [eax+edi] +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov [ebp-4] eax +
test eax eax +
jnz loc_100F458  +
push 8000FFFFh  +
push 0AC0h  +
jmp loc_100F4B9  +
mov ecx eax +
call ds:?GetVisible@Element@DirectUI@@QAE_NXZ  +
mov ecx [ebp-4] +
test al al +
jz loc_100F47B  +
push 0FFFFFFFDh  +
call ds:?SetLayoutPos@Element@DirectUI@@QAEJH@Z  +
test eax eax +
jge loc_100F48F  +
push eax  +
push 0AC7h  +
jmp loc_100F4B9  +
push 1  +
call ds:?SetLayoutPos@Element@DirectUI@@QAEJH@Z  +
test eax eax +
jge loc_100F48F  +
push eax  +
push 0ACAh  +
jmp loc_100F4B9  +
mov ecx [ebp-4] +
call ds:?GetVisible@Element@DirectUI@@QAE_NXZ  +
mov ecx [ebp-4] +
neg al  +
sbb al al +
inc al  +
movzx eax al +
push eax  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
test eax eax +
jge loc_100F336  +
push eax  +
push 0ACEh  +
push offset aCustomizepag_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F3A5  +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-14h] edi +
mov [ebp-18h] edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-20h] +
call sub_100CE71  +
lea eax [ebp-14h] +
push eax  +
push offset aDetails  +
mov ecx esi +
mov [ebp-4] edi +
call sub_100C938  +
cmp eax edi +
jge loc_100F535  +
push eax  +
push 0B83h  +
push offset aDetailspageOns  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F5C3  +
lea eax [ebp-18h] +
push eax  +
push offset aForward  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_100F551  +
push eax  +
push 0B86h  +
jmp loc_100F51C  +
lea eax [ebp-10h] +
push eax  +
push offset aBackward  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_100F56D  +
push eax  +
push 0B89h  +
jmp loc_100F51C  +
mov ecx [ebp-14h] +
mov eax [ebp-10h] +
mov edx [ebp-18h] +
mov [ecx+0CCh] edx +
mov [ecx+0D0h] eax +
mov ecx esi +
call sub_100D422  +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 0Bh +
jnz loc_100F5AD  +
mov ecx esi +
call sub_100CD60  +
cmp eax edi +
jge loc_100F5AD  +
push eax  +
push 0B94h  +
jmp loc_100F51C  +
push edi  +
push edi  +
push 9E8h  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
cmp dword ptr [ebp+8] 9E8h +
mov [ebp-4] ebx +
mov ecx esi +
jz loc_100F621  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D06C  +
mov bl al +
jmp loc_100F670  +
lea eax [ebp-10h] +
push eax  +
push offset aDetails  +
call sub_100C938  +
cmp eax ebx +
jge loc_100F64F  +
push eax  +
push 0BCAh  +
push offset aDetailspageOnm  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F670  +
mov eax dword_104E188 +
push dword ptr [eax+0BCh]  +
mov ecx [ebp-10h] +
call sub_100BB23  +
cmp eax ebx +
jge loc_100F66E  +
push eax  +
push 0BCDh  +
jmp loc_100F639  +
mov bl 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
mov al bl +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
xor ebx ebx +
push 38h  +
lea eax [ebp-38h] +
push ebx  +
push eax  +
xor esi esi +
mov [ebp-3Ch] ebx +
call memset  +
add esp 0Ch +
cmp dword ptr [ebp+8] 4Eh +
jnz loc_100F77C  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
cmp ecx 0FFFFFF62h +
jz loc_100F753  +
cmp ecx 0FFFFFF9Bh +
jnz loc_100F77C  +
cmp dword ptr [eax+1Ch] 8 +
jnz loc_100F77C  +
mov esi ds:SendMessageW +
push edi  +
mov edi [eax] +
push ebx  +
push ebx  +
push 1032h  +
push edi  +
call esi  +
cmp eax 1 +
jnz loc_100F742  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push edi  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_100F742  +
mov [ebp-38h] eax +
lea eax [ebp-3Ch] +
push eax  +
push ebx  +
push 104Bh  +
push edi  +
mov dword ptr [ebp-3Ch] 4 +
call esi  +
test eax eax +
jz loc_100F742  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
cmp eax ebx +
jz loc_100F742  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100F72D  +
sub eax edx +
sar eax 1 +
jz loc_100F742  +
xor eax eax +
inc eax  +
jmp loc_100F744  +
xor eax eax +
mov ecx [ebp+18h] +
push eax  +
call sub_100D47E  +
xor esi esi +
inc esi  +
pop edi  +
jmp loc_100F77C  +
mov ecx [ebp+18h] +
push eax  +
call sub_100E23F  +
xor esi esi +
inc esi  +
cmp eax ebx +
jge loc_100F77C  +
push eax  +
push 302h  +
push offset aIntropageNotif  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
push 0Ch  +
mov eax offset dword_104874C +
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
mov ecx esi +
mov [ebp-4] edi +
call sub_100D422  +
lea eax [esi+50h] +
cmp [eax] edi +
jnz loc_100F7D0  +
push eax  +
push offset dword_1002A6C  +
push 1  +
push edi  +
push offset dword_1009544  +
call ds:CoCreateInstance  +
lea eax [ebp-10h] +
push eax  +
push offset aPage  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_100F803  +
push eax  +
push 48Dh  +
push offset aProgresspage_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100F998  +
cmp [esi+44h] edi +
jnz loc_100F8EC  +
mov ecx [ebp-10h] +
push edi  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
cmp eax edi +
jge loc_100F822  +
push eax  +
push 491h  +
jmp loc_100F7EA  +
***
push edi  +
push edi  +
push edi  +
push offset asc_10027A4  +
push offset aTxtsubprogress  +
mov ecx esi +
call sub_100CC01  +
cmp eax edi +
jge loc_100F842  +
push eax  +
push 494h  +
jmp loc_100F7EA  +
***
lea ebx [esi+38h] +
mov eax [ebx] +
cmp eax edi +
jz loc_100F890  +
push edi  +
push eax  +
push edi  +
call ds:DeleteTimerQueueTimer  +
test eax eax +
jz loc_100F85C  +
xor eax eax +
jmp loc_100F870  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100F870  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
mov [ebx] edi +
jge loc_100F890  +
push eax  +
push 49Ch  +
push offset aProgresspage_1  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
push edi  +
push edi  +
push 1F4h  +
mov ecx esi +
mov [esi+40h] edi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
push offset loc_100D5C4  +
push edi  +
push ebx  +
call ds:CreateTimerQueueTimer  +
test eax eax +
jnz loc_100F8D7  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100F8CA  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
jge loc_100F8D7  +
push eax  +
push 4A8h  +
jmp loc_100F7EA  +
***
mov eax [esi+3Ch] +
cmp eax edi +
jz loc_100F918  +
push edi  +
push eax  +
push edi  +
call ds:DeleteTimerQueueTimer  +
mov [esi+3Ch] edi +
jmp loc_100F918  +
mov ecx esi +
call sub_100E469  +
cmp eax edi +
jge loc_100F902  +
push eax  +
push 4B8h  +
jmp loc_100F7EA  +
***
push edi  +
push edi  +
push 9E6h  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
mov eax [esi+48h] +
mov ebx ds:SetEvent +
mov [esi+44h] edi +
cmp eax edi +
jz loc_100F952  +
push eax  +
call ebx  +
test eax eax +
jnz loc_100F952  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100F945  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
jge loc_100F952  +
push eax  +
push 4C1h  +
jmp loc_100F7EA  +
***
push hObject  +
call ebx  +
test eax eax +
jnz loc_100F981  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100F974  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
jge loc_100F981  +
push eax  +
push 4C5h  +
jmp loc_100F7EA  +
***
push dword_104E00C  +
mov ecx esi +
call sub_100C7A3  +
mov dword_104E00C 37h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
push dword ptr [esi+40h]  +
mov [ebp-4] edi +
push uID  +
call sub_10349A1  +
cmp eax edi +
jge loc_100F9F3  +
push eax  +
push 751h  +
jmp loc_100FAD8  +
lea eax [ebp-10h] +
push eax  +
push offset aTxtpath  +
mov ecx esi +
call sub_100D26C  +
cmp eax edi +
jge loc_100FA12  +
push eax  +
push 757h  +
jmp loc_100FAD8  +
push edi  +
mov edi ds:SendMessageW +
push 1  +
mov ebx 0CFh +
push ebx  +
push dword ptr [ebp-10h]  +
call edi  +
lea eax [ebp-10h] +
push eax  +
push offset aTxterrorcode  +
mov ecx esi +
call sub_100D26C  +
test eax eax +
jge loc_100FA45  +
push eax  +
push 75Ch  +
jmp loc_100FAD8  +
push 0  +
push 1  +
push ebx  +
push dword ptr [ebp-10h]  +
call edi  +
mov ecx esi +
call sub_100D422  +
mov eax dword_104E188 +
mov eax [eax+90h] +
xor edi edi +
cmp eax edi +
jnz loc_100FA6A  +
mov eax [esi+3Ch] +
push edi  +
push edi  +
push edi  +
push eax  +
push offset aErrortext  +
mov ecx esi +
call sub_100CC01  +
cmp eax edi +
jge loc_100FA86  +
push eax  +
push 766h  +
jmp loc_100FAD8  +
push dword ptr [esi+38h]  +
mov ecx esi +
call sub_100C7C0  +
cmp eax edi +
jge loc_100FA9C  +
push eax  +
push 769h  +
jmp loc_100FAD8  +
mov ecx esi +
call sub_100EC13  +
cmp eax edi +
jge loc_100FAAF  +
push eax  +
push 76Ch  +
jmp loc_100FAD8  +
push offset aErrordetails  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_100FAC7  +
push eax  +
push 76Fh  +
jmp loc_100FAD8  +
mov ecx esi +
call sub_100CD60  +
cmp eax edi +
jge loc_100FAEC  +
push eax  +
push 772h  +
push offset aErrorpageOnset  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push 1800h  +
push ebx  +
mov esi ecx +
mov [ebp+var_8] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
call ds:GetProcessHeap  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_100FB63  +
mov ebx 8007000Eh +
push ebx  +
push 86Bh  +
push offset aCustomizepag_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100FFFD  +
lea eax [ebp+var_1C] +
push eax  +
push offset aEntrypoint  +
mov ecx esi +
call sub_100C938  +
mov ebx eax +
test ebx ebx +
jge loc_100FB98  +
push ebx  +
push 871h  +
push offset aCustomizepag_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_100FFEB  +
mov ecx [ebp+var_1C] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov ebx eax +
test ebx ebx +
jge loc_100FBAF  +
push ebx  +
push 874h  +
jmp loc_100FB7F  +
mov eax [esi+38h] +
test eax eax +
jz loc_100FBCA  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+38h] 0 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_100FBE5  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+3Ch] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_100FC00  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+40h] 0 +
mov eax [esi+44h] +
test eax eax +
jz loc_100FC1B  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+44h] 0 +
mov ecx [ebp+arg_4] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
shl eax 2 +
push eax  +
push 8  +
mov [ebp+dwBytes] eax +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [esi+40h] eax +
test eax eax +
jnz loc_100FC4C  +
mov ebx 8007000Eh +
push ebx  +
push 885h  +
jmp loc_100FB7F  +
push [ebp+dwBytes]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [esi+44h] eax +
test eax eax +
jnz loc_100FC71  +
mov ebx 8007000Eh +
push ebx  +
push 887h  +
jmp loc_100FB7F  +
mov ecx [ebp+arg_4] +
call sub_1016182  +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [esi+38h] eax +
test eax eax +
jnz loc_100FC9F  +
mov ebx 8007000Eh +
push ebx  +
push 88Ah  +
jmp loc_100FB7F  +
mov ecx [ebp+arg_4] +
call sub_1016182  +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
xor edi edi +
mov [esi+3Ch] eax +
cmp eax edi +
jnz loc_100FCCF  +
mov ebx 8007000Eh +
push ebx  +
push 88Dh  +
jmp loc_100FB7F  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_100FCEB  +
push edi  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_100D6C8  +
mov [ebp+arg_4] eax +
jmp loc_100FCEE  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_4] edi +
jnz loc_100FD03  +
mov ebx 8007000Eh +
push ebx  +
push 890h  +
jmp loc_100FB7F  +
mov ecx [ebp+arg_4] +
call sub_10173DA  +
test eax eax +
jz loc_100FFE1  +
mov [ebp+dwBytes] edi +
jmp loc_100FD1A  +
xor edi edi +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_4] +
push eax  +
call sub_101746C  +
mov ebx eax +
cmp ebx edi +
jl loc_100FF3D  +
mov ecx [ebp+var_4] +
call sub_1030F9A  +
mov ecx eax +
call sub_1015C82  +
test eax eax +
jz loc_100FF28  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aChecklistid  +
mov [ebp+var_8] edi +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov ebx eax +
cmp ebx edi +
jl loc_100FF48  +
push [ebp+var_18]  +
mov ecx esi +
push [ebp+var_4]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_100EF45  +
mov ebx eax +
cmp ebx edi +
jl loc_100FF50  +
push offset aExpandobutton  +
call StrToID  +
mov ecx [ebp+var_8] +
mov edi ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z +
movzx eax ax +
push eax  +
call edi  +
mov ecx [ebp+dwBytes] +
mov edx [esi+40h] +
mov [ecx+edx] eax +
mov eax [esi+40h] +
cmp dword ptr [ecx+eax] 0 +
jz loc_100FF58  +
mov ecx [ebp+var_8] +
push 0  +
call ds:?SetSelected@Element@DirectUI@@QAEJ_N@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100FF65  +
mov ecx [ebp+var_4] +
call sub_1030F9A  +
mov ecx eax +
call sub_1015C82  +
add [ebp+var_18] eax +
push offset aTxtname  +
call StrToID  +
mov ecx [ebp+var_8] +
movzx eax ax +
push eax  +
call edi  +
mov edi eax +
test edi edi +
jz loc_100FF6D  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+8]  +
push eax  +
push edi  +
mov ecx esi +
call sub_100CB7C  +
mov ebx eax +
test ebx ebx +
jl loc_100FF7A  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push 80h  +
push [ebp+lpMem]  +
call sub_1014418  +
mov ebx eax +
test ebx ebx +
jl loc_100FF82  +
push [ebp+lpMem]  +
mov ecx edi +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100FF8A  +
push [ebp+var_10]  +
mov ecx esi +
push edi  +
call sub_100CC9C  +
mov ebx eax +
test ebx ebx +
jl loc_100FF92  +
push offset aTxtdescription  +
call StrToID  +
mov ecx [ebp+var_8] +
movzx eax ax +
push eax  +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov edi eax +
test edi edi +
jz loc_100FF9A  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push eax  +
push 80h  +
push [ebp+lpMem]  +
call sub_1014418  +
mov ebx eax +
test ebx ebx +
jl loc_100FFA7  +
push [ebp+lpMem]  +
mov ecx edi +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100FFAF  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+0Ch]  +
push eax  +
push edi  +
mov ecx esi +
call sub_100CB7C  +
mov ebx eax +
test ebx ebx +
jl loc_100FFB7  +
push [ebp+var_10]  +
mov ecx esi +
push edi  +
call sub_100CC9C  +
mov ebx eax +
test ebx ebx +
jl loc_100FFBF  +
push [ebp+var_8]  +
mov ecx [ebp+var_1C] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov ebx eax +
test ebx ebx +
jl loc_100FFC7  +
mov edx [ebp+dwBytes] +
mov eax [esi+44h] +
mov ecx [ebp+var_8] +
add [ebp+dwBytes] 4 +
mov [edx+eax] ecx +
mov ecx [ebp+arg_4] +
call sub_10173DA  +
test eax eax +
jnz loc_100FD18  +
jmp loc_100FFE1  +
push ebx  +
push 898h  +
jmp loc_100FFCD  +
push ebx  +
push 8AAh  +
jmp loc_100FFCD  +
push ebx  +
push 8B0h  +
jmp loc_100FFCD  +
mov ebx 8000FFFFh +
push ebx  +
push 8B4h  +
jmp loc_100FFCD  +
push ebx  +
push 8B7h  +
jmp loc_100FFCD  +
mov ebx 8000FFFFh +
push ebx  +
push 8C0h  +
jmp loc_100FFCD  +
push ebx  +
push 8C3h  +
jmp loc_100FFCD  +
push ebx  +
push 8CDh  +
jmp loc_100FFCD  +
push ebx  +
push 8D0h  +
jmp loc_100FFCD  +
push ebx  +
push 8D3h  +
jmp loc_100FFCD  +
mov ebx 8000FFFFh +
push ebx  +
push 8DBh  +
jmp loc_100FFCD  +
push ebx  +
push 8E2h  +
jmp loc_100FFCD  +
push ebx  +
push 8E5h  +
jmp loc_100FFCD  +
push ebx  +
push 8E8h  +
jmp loc_100FFCD  +
push ebx  +
push 8EBh  +
jmp loc_100FFCD  +
push ebx  +
push 8EEh  +
push offset aCustomizepag_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+arg_4] +
push 1  +
call sub_100D5EF  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-10h] edi +
mov [ebp-14h] edi +
mov [ebp-18h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-24h] +
call sub_100CE71  +
mov ecx esi +
mov [ebp-4] edi +
call sub_100D422  +
lea eax [ebp-14h] +
push eax  +
mov ecx esi +
call sub_100C8FE  +
cmp eax edi +
jge loc_101006E  +
push eax  +
push 9A1h  +
push offset aCustomizepag_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10100F8  +
mov ecx [ebp-14h] +
lea eax [ebp-18h] +
push eax  +
call sub_10123F8  +
cmp eax edi +
jge loc_1010086  +
push eax  +
push 9A4h  +
jmp loc_1010055  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
cmp eax edi +
jge loc_101009D  +
push eax  +
push 9A7h  +
jmp loc_1010055  +
push dword ptr [ebp-18h]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
call sub_100FB05  +
cmp eax edi +
jge loc_10100B6  +
push eax  +
push 9ADh  +
jmp loc_1010055  +
mov ecx esi +
call sub_100DCC6  +
cmp eax edi +
jge loc_10100C9  +
push eax  +
push 9B0h  +
jmp loc_1010055  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
call sub_100DA08  +
cmp eax edi +
jge loc_10100E3  +
push eax  +
push 9B3h  +
jmp loc_1010055  +
mov eax dword_104E188 +
push 37h  +
mov ecx esi +
mov dword ptr [eax+34h] 1 +
call sub_100C7A3  +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_1010108  +
call ds:?Destroy@DUIXmlParser@DirectUI@@QAEXXZ  +
mov [ebp-10h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0DCh +
push ebx  +
push edi  +
xor ebx ebx +
push 38h  +
lea eax [ebp+var_70] +
push ebx  +
push eax  +
mov [ebp+var_18] ecx +
mov [ebp+hWnd] ebx +
mov [ebp+hicon] ebx +
mov [ebp+var_74] ebx +
call memset  +
add esp 0Ch +
push 0Ah  +
xor eax eax +
pop ecx  +
mov [ebp+lParam] ebx +
lea edi [ebp+var_9C] +
stos   +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
stos   +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+flags] 21h +
mov [ebp+var_20] ebx +
mov [ebp+var_C] ebx +
call sub_1031307  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_10101A3  +
push eax  +
push 214h  +
push offset aIntropageSetup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1010617  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax ebx +
jnz loc_10101CD  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 216h  +
jmp loc_10101EB  +
mov ecx [ebp+var_18] +
lea eax [ebp+hWnd] +
push eax  +
push offset aLstview  +
call sub_100D26C  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_1010204  +
push eax  +
push 219h  +
push offset aIntropageSetup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10105FF  +
mov edi ds:GetWindowLongW +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call edi  +
test eax 400000h +
jz loc_101021F  +
mov [ebp+flags] 2021h +
push esi  +
mov esi ds:SendMessageW +
mov eax 10420h +
push eax  +
push eax  +
push 1036h  +
push [ebp+hWnd]  +
call esi  +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 108Eh  +
push [ebp+hWnd]  +
call esi  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call edi  +
or eax 4 +
push eax  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetClientRect  +
test eax eax +
jnz loc_1010293  +
call ds:GetLastError  +
test eax eax +
jle loc_1010281  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1010293  +
push eax  +
push 22Ch  +
jmp loc_10105EB  +
mov edi [ebp+lpBuffer] +
push 104h  +
push edi  +
push 82h  +
call sub_10301CE  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_10102B8  +
push eax  +
push 232h  +
jmp loc_10105EB  +
and [ebp+wParam] 0 +
lea eax [ebp+lParam] +
push eax  +
lea eax [ebp+wParam] +
mov [ebp+var_94] edi +
push eax  +
mov edi 1061h +
push edi  +
push [ebp+hWnd]  +
mov [ebp+lParam] 0Eh +
call esi  +
push 104h  +
push [ebp+lpBuffer]  +
push 83h  +
call sub_10301CE  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101030C  +
push eax  +
push 23Eh  +
jmp loc_10105EB  +
mov eax [ebp+lpBuffer] +
mov [ebp+var_94] eax +
lea eax [ebp+lParam] +
push eax  +
lea eax [ebp+wParam] +
push eax  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+wParam] ebx +
call esi  +
mov edi ds:GetSystemMetrics +
and [ebp+var_70] 0 +
and [ebp+var_6C] 0 +
push ebx  +
push ebx  +
push [ebp+flags]  +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
call ds:ImageList_Create  +
mov [ebp+himl] eax +
test eax eax +
jz loc_10105CE  +
cmp eax 0FFFFFFFFh +
jz loc_10105CE  +
push 0  +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
push ebx  +
push 6Bh  +
push dword_104E138  +
call ds:LoadImageW  +
mov [ebp+hicon] eax +
test eax eax +
jz loc_10105AF  +
cmp eax 0FFFFFFFFh +
jz loc_10105AF  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+himl]  +
call ds:ImageList_ReplaceIcon  +
push [ebp+himl]  +
mov [ebp+flags] ebx +
push ebx  +
push 1003h  +
push [ebp+hWnd]  +
call esi  +
mov ecx [ebp+var_C] +
mov eax [ecx+7Ch] +
xor edi edi +
test eax eax +
jbe loc_101050D  +
mov [ebp+var_70] eax +
mov [ebp+var_74] 7 +
mov eax ecx +
mov eax [eax+78h] +
mov ebx edi +
mov [ecx+80h] edi +
shl ebx 2 +
mov ecx [ebx+eax] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_1010481  +
push 0  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101041A  +
call ds:GetLastError  +
test eax eax +
jle loc_101040F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101054F  +
mov eax [ebp+var_C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ebx+eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_1010458  +
call ds:GetLastError  +
test eax eax +
jle loc_101044D  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1010568  +
lea eax [ebp+hicon] +
push eax  +
push [ebp+var_28]  +
call sub_10304C4  +
test eax eax +
jl loc_1010481  +
push [ebp+hicon]  +
push 0FFFFFFFFh  +
push [ebp+himl]  +
call ds:ImageList_ReplaceIcon  +
mov eax [ebp+flags] +
inc [ebp+flags]  +
mov [ebp+var_58] eax +
jmp loc_1010485  +
and [ebp+var_58] 0 +
and [ebp+var_6C] 0 +
mov eax [ebp+var_C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [ebx+eax] +
mov [ebp+var_54] eax +
mov eax [ebp+var_C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ebx+eax] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov [ebp+var_60] eax +
lea eax [ebp+var_74] +
push eax  +
push 0  +
push 104Dh  +
push [ebp+hWnd]  +
call esi  +
and [ebp+var_54] 0 +
mov [ebp+var_70] eax +
xor eax eax +
inc eax  +
mov [ebp+var_74] eax +
mov [ebp+var_6C] eax +
mov eax [ebp+var_C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ebx [ebx+eax] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
mov [ebp+var_60] eax +
lea eax [ebp+var_74] +
push eax  +
push 0  +
push 104Ch  +
push [ebp+hWnd]  +
call esi  +
mov ecx [ebp+var_C] +
mov eax [ecx+7Ch] +
inc edi  +
cmp edi eax +
jb loc_10103C2  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_DC] +
push eax  +
push 0  +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_CC] ebx +
mov [ebp+var_D0] ebx +
call esi  +
mov ecx [ebp+var_18] +
lea eax [ebp+var_20] +
push eax  +
push offset aLstview  +
call sub_100C938  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1010572  +
push eax  +
push 298h  +
jmp loc_10105EB  +
push [ebp+var_4]  +
push 273h  +
push offset aIntropageSetup  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_10105F6  +
push [ebp+var_4]  +
push 276h  +
jmp loc_1010557  +
push [ebp+var_18]  +
mov ecx [ebp+var_20] +
push offset loc_100F68B  +
call ds:?SetNotifyHandler@CCBase@DirectUI@@QAEXP6GHIIJPAJPAX@Z1@Z  +
mov ecx [ebp+var_20] +
mov eax [ecx] +
push 0  +
push [ebp+Rect.bottom]  +
push [ebp+Rect.right]  +
call dword ptr [eax+0BCh]  +
mov ecx [ebp+var_18] +
push 0  +
call sub_100D47E  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_10105FE  +
push eax  +
push 2A3h  +
jmp loc_10105EB  +
call ds:GetLastError  +
test eax eax +
jle loc_10105C3  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_4] eax +
push 25Ch  +
jmp loc_10105EB  +
call ds:GetLastError  +
test eax eax +
jle loc_10105E2  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_4] eax +
push 250h  +
push offset aIntropageSetup  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
pop esi  +
cmp [ebp+lpBuffer] 0 +
jz loc_1010617  +
push [ebp+lpBuffer]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-14h] +
call sub_100CE71  +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call sub_100D422  +
mov ecx esi +
call sub_1010121  +
test eax eax +
jge loc_1010670  +
push eax  +
push 387h  +
push offset aPackageconte_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_4] +
push eax  +
mov ebx ecx +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_10106D8  +
push esi  +
push 16Fh  +
push offset aIntropageLoadi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1010A7D  +
push 100h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_1010702  +
mov esi 8007000Eh +
push esi  +
push 171h  +
jmp loc_1010A51  +
lea eax [ebp+var_18] +
push eax  +
push offset aTxtmainname  +
mov ecx ebx +
call sub_100C938  +
test eax eax +
jge loc_101071D  +
xor esi esi +
jmp loc_1010A65  +
lea eax [ebp+var_1C] +
push eax  +
push offset aTxtmaindescrip  +
mov ecx ebx +
call sub_100C938  +
mov esi eax +
cmp esi edi +
jge loc_101073E  +
push esi  +
push 17Dh  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
mov edi 80h +
push edi  +
push [ebp+lpBuffer]  +
call sub_1014418  +
mov esi eax +
test esi esi +
jge loc_101076A  +
push esi  +
push 184h  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+8]  +
push eax  +
push [ebp+lpBuffer]  +
mov ecx ebx +
push offset aTxtmainname  +
call sub_100CC01  +
mov esi eax +
test esi esi +
jge loc_101079E  +
push esi  +
push 18Bh  +
jmp loc_1010A51  +
push [ebp+var_8]  +
mov ecx ebx +
push [ebp+var_18]  +
call sub_100CC9C  +
mov esi eax +
test esi esi +
jge loc_10107BC  +
push esi  +
push 18Eh  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push eax  +
push edi  +
push [ebp+lpBuffer]  +
call sub_1014418  +
mov esi eax +
test esi esi +
jge loc_10107E3  +
push esi  +
push 195h  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+0Ch]  +
push eax  +
push [ebp+lpBuffer]  +
mov ecx ebx +
push offset aTxtmaindescrip  +
call sub_100CC01  +
mov esi eax +
test esi esi +
jge loc_1010817  +
push esi  +
push 19Dh  +
jmp loc_1010A51  +
push [ebp+var_8]  +
mov ecx ebx +
push [ebp+var_1C]  +
call sub_100CC9C  +
mov esi eax +
test esi esi +
jge loc_1010835  +
push esi  +
push 1A0h  +
jmp loc_1010A51  +
lea eax [ebp+var_10] +
push eax  +
push offset aPic  +
mov ecx ebx +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_1010856  +
push esi  +
push 1A6h  +
jmp loc_1010A51  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
mov ecx ebx +
call sub_100D2FD  +
mov esi eax +
test esi esi +
jge loc_1010876  +
push esi  +
push 1A9h  +
jmp loc_1010A51  +
push [ebp+var_14]  +
mov ecx [ebp+var_10] +
push 1  +
push ds:?ContentProp@Element@DirectUI@@SGPBUPropertyInfo@2@XZ  +
call ds:?SetValue@Element@DirectUI@@QAEJP6GPBUPropertyInfo@2@XZHPAVValue@2@@Z  +
mov esi eax +
test esi esi +
jge loc_101089B  +
push esi  +
push 1ACh  +
jmp loc_1010A51  +
mov eax [ebp+var_8] +
push edi  +
mov edi [ebp+lpBuffer] +
neg eax  +
sbb eax eax +
push edi  +
add eax 8Eh +
push eax  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_10108C3  +
push esi  +
push 1B2h  +
jmp loc_1010A51  +
push 0  +
push 0  +
push edi  +
push [ebp+var_10]  +
mov ecx ebx +
call sub_100CB7C  +
mov esi eax +
test esi esi +
jge loc_10108E3  +
push esi  +
push 1B5h  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
push eax  +
push 4Ch  +
push edi  +
call sub_1014418  +
mov esi eax +
test esi esi +
jge loc_1010909  +
push esi  +
push 1B8h  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+20h]  +
push eax  +
push edi  +
mov edi offset aTxtpublisherna +
push edi  +
mov ecx ebx +
call sub_100CC01  +
mov esi eax +
test esi esi +
jge loc_101093C  +
push esi  +
push 1C0h  +
jmp loc_1010A51  +
push [ebp+var_8]  +
mov ecx ebx +
push edi  +
call sub_100CCFE  +
mov esi eax +
test esi esi +
jge loc_1010958  +
push esi  +
push 1C3h  +
jmp loc_1010A51  +
push offset aPrivacypublish  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_1010975  +
push esi  +
push 1C9h  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
test eax eax +
jz loc_10109F8  +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 6 +
jnz loc_10109F8  +
push offset aPublisherpane  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_10109AC  +
push esi  +
push 1D1h  +
jmp loc_1010A51  +
push offset aPrivacypane  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_10109C9  +
push esi  +
push 1D4h  +
jmp loc_1010A51  +
push offset aAdvancedlinksp  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_10109E3  +
push esi  +
push 1D7h  +
jmp loc_1010A51  +
mov ecx ebx +
call sub_1010121  +
mov esi eax +
test esi esi +
jge loc_1010A65  +
push esi  +
push 1DAh  +
jmp loc_1010A51  +
push offset aPackagelist  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_1010A12  +
push esi  +
push 1DDh  +
jmp loc_1010A51  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_1010A39  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1010A29  +
sub eax edx +
sar eax 1 +
jnz loc_1010A65  +
push offset aPrivacypane  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_1010A65  +
push esi  +
push 1E2h  +
push offset aIntropageLoadi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor edi edi +
cmp [ebp+lpBuffer] edi +
jz loc_1010A7D  +
push [ebp+lpBuffer]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_14] +
cmp ecx edi +
jz loc_1010A8A  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-10h] edi +
mov [ebp-14h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100CE71  +
mov ecx esi +
mov [ebp-4] edi +
call sub_100D422  +
mov ecx esi +
call sub_1010689  +
cmp eax edi +
jge loc_1010AD8  +
push eax  +
push 38h  +
jmp loc_1010B7A  +
lea eax [ebp-10h] +
push eax  +
push offset aCbauto  +
mov ecx esi +
call sub_100D26C  +
cmp eax edi +
jge loc_1010AF4  +
push eax  +
push 3Bh  +
jmp loc_1010B7A  +
mov eax dword_104E188 +
mov eax [eax+2Ch] +
xor ecx ecx +
cmp eax edi +
setz cl  +
push edi  +
push ecx  +
push 0F1h  +
push dword ptr [ebp-10h]  +
call ds:SendMessageW  +
mov eax dword_104E188 +
cmp [eax+1Ch] edi +
jnz loc_1010B32  +
push offset aAdvancedpane  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_1010B8E  +
push eax  +
push 48h  +
jmp loc_1010B7A  +
lea eax [ebp-14h] +
push eax  +
call sub_102E866  +
cmp eax edi +
jge loc_1010B44  +
push eax  +
push 4Bh  +
jmp loc_1010B7A  +
push offset aAdvancedlinkpa  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_1010B59  +
push eax  +
push 51h  +
jmp loc_1010B7A  +
cmp [ebp-14h] edi +
jnz loc_1010B67  +
mov eax dword_104E188 +
cmp [eax] edi +
jz loc_1010B8E  +
push offset aAdminpane  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_1010B8E  +
push eax  +
push 58h  +
push offset aIntropageOnset  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 800h  +
mov ebx ecx +
push edi  +
mov [ebp+var_14] ebx +
xor esi esi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_4] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_1010C02  +
mov esi 8007000Eh +
push esi  +
push 97h  +
push offset aFinallinkspage  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1010E40  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+88h]  +
test eax eax +
jz loc_1010E2F  +
lea eax [ebp+var_8] +
push eax  +
push offset aLinks  +
mov ecx ebx +
call sub_100C938  +
mov esi eax +
cmp esi edi +
jge loc_1010C35  +
push esi  +
push 9Eh  +
jmp loc_1010E1B  +
mov ecx [ebp+var_8] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov esi eax +
cmp esi edi +
jge loc_1010C4F  +
push esi  +
push 0A1h  +
jmp loc_1010E1B  +
mov ecx [ebp+arg_0] +
mov ebx ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z +
lea eax [ebp+var_10] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aLinkspacer  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_1010C77  +
push esi  +
push 0A7h  +
jmp loc_1010E1B  +
push [ebp+var_10]  +
mov ecx [ebp+var_8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010C94  +
push esi  +
push 0AAh  +
jmp loc_1010E1B  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aCommandlink  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_1010CB6  +
push esi  +
push 0B0h  +
jmp loc_1010E1B  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
call dword ptr [eax+8Ch]  +
mov ecx [ebp+var_4] +
push eax  +
call ds:?SetID@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010CDC  +
push esi  +
push 0B3h  +
jmp loc_1010E1B  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
push 400h  +
push [ebp+lpBuffer]  +
call dword ptr [eax+94h]  +
push eax  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jge loc_1010D06  +
push esi  +
push 0B6h  +
jmp loc_1010E1B  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_4] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010D23  +
push esi  +
push 0B9h  +
jmp loc_1010E1B  +
push [ebp+var_4]  +
mov ecx [ebp+var_8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010D40  +
push esi  +
push 0BCh  +
jmp loc_1010E1B  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_10] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aLinkspacer  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_1010D62  +
push esi  +
push 0C2h  +
jmp loc_1010E1B  +
push [ebp+var_10]  +
mov ecx [ebp+var_8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010D7F  +
push esi  +
push 0C5h  +
jmp loc_1010E1B  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aCommandlink  +
call ebx  +
mov esi eax +
cmp esi edi +
jge loc_1010D9E  +
push esi  +
push 0CBh  +
jmp loc_1010E1B  +
mov ebx [ebp+var_14] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+90h]  +
mov ecx [ebp+var_4] +
push eax  +
call ds:?SetID@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010DC3  +
push esi  +
push 0CEh  +
jmp loc_1010E1B  +
mov eax [ebx] +
push 400h  +
push [ebp+lpBuffer]  +
mov ecx ebx +
call dword ptr [eax+98h]  +
push eax  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jge loc_1010DE9  +
push esi  +
push 0D1h  +
jmp loc_1010E1B  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_4] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010E03  +
push esi  +
push 0D4h  +
jmp loc_1010E1B  +
push [ebp+var_4]  +
mov ecx [ebp+var_8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jge loc_1010E2F  +
push esi  +
push 0D7h  +
push offset aFinallinkspage  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpBuffer]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor ebx ebx +
push 800h  +
push ebx  +
mov [ebp-18h] ecx +
mov [ebp-10h] ebx +
mov [ebp-4] ebx +
mov [ebp-8] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax ebx +
jnz loc_1010EA4  +
mov esi 8007000Eh +
push esi  +
push 1BAh  +
push offset aFinallinkspa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101105E  +
push offset aTxtresult  +
call StrToID  +
mov ecx [ebp+8] +
mov esi ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z +
movzx eax ax +
push eax  +
call esi  +
mov [ebp-14h] eax +
cmp eax ebx +
jnz loc_1010ED1  +
mov esi 8000FFFFh +
push esi  +
push 1BDh  +
jmp loc_1010EF6  +
push offset aRcpic  +
call StrToID  +
mov ecx [ebp+8] +
movzx eax ax +
push eax  +
call esi  +
mov [ebp+8] eax +
cmp eax ebx +
jnz loc_1010F0F  +
mov esi 8000FFFFh +
push esi  +
push 1C0h  +
push offset aFinallinkspa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101104D  +
push edi  +
mov edi [ebp+0Ch] +
mov ecx edi +
call sub_1015C55  +
dec eax  +
jz loc_1010F52  +
dec eax  +
jz loc_1010F52  +
dec eax  +
jz loc_1010F42  +
dec eax  +
jz loc_1010F39  +
dec eax  +
jnz loc_1010F60  +
mov dword ptr [ebp-4] 75h +
mov dword ptr [ebp-8] offset aFailicon +
jmp loc_1010F60  +
mov dword ptr [ebp-4] 74h +
jmp loc_1010F49  +
mov dword ptr [ebp-4] 77h +
mov dword ptr [ebp-8] offset aCheckicon +
jmp loc_1010F60  +
mov dword ptr [ebp-8] offset aWarningicon +
mov dword ptr [ebp-4] 76h +
push 400h  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-4]  +
call sub_10301CE  +
mov esi eax +
cmp esi ebx +
jge loc_1010F81  +
push esi  +
push 1E6h  +
jmp loc_1011038  +
push dword ptr [ebp-0Ch]  +
mov ecx [ebp-14h] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi ebx +
jge loc_1010F9E  +
push esi  +
push 1E9h  +
jmp loc_1011038  +
mov eax [edi] +
push ebx  +
push dword ptr [ebp-0Ch]  +
mov ecx edi +
call dword ptr [eax+8]  +
mov ecx [ebp-18h] +
push eax  +
push dword ptr [ebp-14h]  +
call sub_100CB7C  +
mov esi eax +
cmp esi ebx +
jge loc_1010FC3  +
push esi  +
push 1ECh  +
jmp loc_1011038  +
mov ecx [ebp+10h] +
lea eax [ebp-10h] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-8]  +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov esi eax +
cmp esi ebx +
jge loc_1010FE4  +
push esi  +
push 1F2h  +
jmp loc_1011038  +
mov eax [edi] +
push ebx  +
push dword ptr [ebp-0Ch]  +
mov ecx edi +
call dword ptr [eax+8]  +
mov ecx [ebp-18h] +
push eax  +
push dword ptr [ebp-10h]  +
call sub_100CB7C  +
mov esi eax +
cmp esi ebx +
jge loc_1011009  +
push esi  +
push 1F8h  +
jmp loc_1011038  +
mov ecx [ebp+8] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov esi eax +
cmp esi ebx +
jge loc_1011020  +
push esi  +
push 1FBh  +
jmp loc_1011038  +
push dword ptr [ebp-10h]  +
mov ecx [ebp+8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi ebx +
jge loc_101104C  +
push esi  +
push 1FEh  +
push offset aFinallinkspa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
push dword ptr [ebp-0Ch]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+8Ch]  +
push eax  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov esi eax +
test esi esi +
jz loc_10110A6  +
mov ecx esi +
call ds:?GetVisible@Element@DirectUI@@QAE_NXZ  +
test al al +
jnz loc_10110A6  +
xor esi esi +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov edi 143h +
mov [ebp-4] esi +
call sub_101C0E6  +
cmp eax esi +
jge loc_10110E8  +
push eax  +
push 311h  +
push offset aFinalelevation  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp-4] +
cmp ecx esi +
jz loc_10110F6  +
call sub_101246D  +
mov esi eax +
mov ecx esi +
call sub_1016F0F  +
test eax eax +
jz loc_1011106  +
mov edi 2861h +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+7Ch] +
test eax eax +
jz loc_1011154  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+7Ch] 0 +
mov eax [ebp+arg_0] +
mov [esi+7Ch] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx ecx +
test esi esi +
jnz loc_1011194  +
push 80070057h  +
push 226h  +
push offset aFinallinkspa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10111F7  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp+0Ch] eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [esi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_10111F7  +
push edi  +
push offset aLinkresolved  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov edi ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z +
mov ecx eax +
call edi  +
cmp [esi] eax +
jnz loc_10111FD  +
push 0  +
push 5  +
push 471h  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov eax dword_104E188 +
mov dword ptr [eax+0A8h] 2 +
mov byte ptr [esi+8] 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aLinkescalate  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call edi  +
cmp [esi] eax +
jnz loc_10112B4  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
push 3  +
pop edi  +
cmp eax edi +
jnz loc_1011260  +
push dword_104E0E8  +
call ds:SetEvent  +
test eax eax +
jnz loc_1011293  +
call ds:GetLastError  +
test eax eax +
jle loc_1011253  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1011293  +
push eax  +
push 23Fh  +
jmp loc_10113E3  +
push dword_104E0E4  +
call ds:SetEvent  +
test eax eax +
jnz loc_1011293  +
call ds:GetLastError  +
test eax eax +
jle loc_1011286  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1011293  +
push eax  +
push 245h  +
jmp loc_10113E3  +
push 0  +
push 5  +
push 471h  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov eax dword_104E188 +
mov [eax+0A8h] edi +
jmp loc_10111F2  +
***
push offset aLinkelevate  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call edi  +
cmp [esi] eax +
jnz loc_101131E  +
mov eax dword_104E188 +
xor edi edi +
inc edi  +
mov [eax+4Ch] edi +
call sub_101C4D4  +
test eax eax +
jge loc_10112F1  +
push eax  +
push 259h  +
jmp loc_1011384  +
cmp eax edi +
jz loc_10111F2  +
push 0  +
push 5  +
push 471h  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov eax dword_104E188 +
mov dword ptr [eax+0A8h] 4 +
jmp loc_10111F2  +
***
push offset aLinkcontinue  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call edi  +
cmp [esi] eax +
jnz loc_1011391  +
mov eax dword_104E188 +
xor edi edi +
inc edi  +
mov [eax+54h] edi +
mov eax dword_104E188 +
mov [eax+50h] edi +
mov eax dword_104E188 +
cmp dword ptr [eax+2Ch] 0 +
mov ecx ebx +
jz loc_1011360  +
push 14h  +
jmp loc_101136A  +
mov eax dword_104E0D4 +
mov [ebx+2Ch] eax +
push 29h  +
call sub_100C7A3  +
mov ecx ebx +
call sub_100C97C  +
test eax eax +
jge loc_10111F2  +
push eax  +
push 279h  +
push offset aFinallinkspa_1  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_10113EF  +
push offset aLinkdetails  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call edi  +
cmp [esi] eax +
jnz loc_10111F6  +
mov eax dword_104E108 +
push 29h  +
mov ecx ebx +
mov [ebx+2Ch] eax +
call sub_100C7A3  +
mov ecx ebx +
mov dword_104E00C 16h +
call sub_100C97C  +
test eax eax +
jge loc_10111F2  +
push eax  +
push 287h  +
push offset aFinallinkspa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10111F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
and [ebp-4] edi +
test esi esi +
jnz loc_1011435  +
push 80070057h  +
push 340h  +
push offset aFinalelevati_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101148F  +
mov ecx esi +
call sub_101777E  +
test eax eax +
jnz loc_101148F  +
cmp [esi+1Ch] edi +
jnz loc_101148F  +
mov eax dword_104E188 +
xor edi edi +
inc edi  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_101148F  +
mov ecx esi +
call sub_1030F9A  +
mov esi eax +
mov ecx esi +
xor edi edi +
call sub_1015C82  +
test eax eax +
jbe loc_101148C  +
push edi  +
mov ecx esi +
call sub_1015C8B  +
cmp dword ptr [eax+30h] 0 +
jnz loc_1011485  +
mov ecx esi +
inc edi  +
call sub_1015C82  +
cmp edi eax +
jb loc_1011469  +
jmp loc_101148C  +
mov dword ptr [ebp-4] 1 +
mov edi [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push offset aTxtresult  +
mov [ebp-8] ecx +
mov [ebp-4] ebx +
call StrToID  +
mov ecx [ebp+8] +
mov edi ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z +
movzx eax ax +
push eax  +
call edi  +
cmp eax ebx +
jnz loc_10114EF  +
mov esi 8000FFFFh +
push esi  +
push 37Eh  +
push offset aFinalelevati_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1011660  +
push ebx  +
mov ecx eax +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
cmp esi ebx +
jge loc_1011506  +
push esi  +
push 381h  +
jmp loc_10114D6  +
***
push offset aRcpic  +
call StrToID  +
mov ecx [ebp+8] +
movzx eax ax +
push eax  +
call edi  +
mov [ebp+8] eax +
cmp eax ebx +
jnz loc_101152D  +
mov esi 8000FFFFh +
push esi  +
push 384h  +
jmp loc_10114D6  +
***
mov ecx [ebp+0Ch] +
call sub_1030F9A  +
mov esi eax +
mov ecx esi +
xor edi edi +
call sub_1015C82  +
test eax eax +
jbe loc_101155D  +
push edi  +
mov ecx esi +
call sub_1015C8B  +
cmp [eax+30h] ebx +
jnz loc_101157C  +
mov ecx esi +
inc edi  +
call sub_1015C82  +
cmp edi eax +
jb loc_1011544  +
mov ecx [ebp+8] +
push ebx  +
call ds:?SetVisible@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
cmp esi ebx +
jge loc_1011660  +
push esi  +
push 394h  +
jmp loc_10114D6  +
***
push 800h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jnz loc_10115A5  +
mov esi 8007000Eh +
push esi  +
push 399h  +
jmp loc_1011639  +
push 400h  +
push edi  +
push 18Fh  +
call sub_10301CE  +
mov esi eax +
cmp esi ebx +
jge loc_10115C3  +
push esi  +
push 39Ch  +
jmp loc_1011639  +
mov ecx [ebp+10h] +
lea eax [ebp-4] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push offset aShieldicon  +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov esi eax +
cmp esi ebx +
jge loc_10115E6  +
push esi  +
push 3A2h  +
jmp loc_1011639  +
mov ecx [ebp+0Ch] +
mov eax [ecx] +
push ebx  +
push edi  +
call dword ptr [eax+8]  +
mov ecx [ebp-8] +
push eax  +
push dword ptr [ebp-4]  +
call sub_100CB7C  +
mov esi eax +
cmp esi ebx +
jge loc_101160A  +
push esi  +
push 3A8h  +
jmp loc_1011639  +
mov ecx [ebp+8] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov esi eax +
cmp esi ebx +
jge loc_1011621  +
push esi  +
push 3ABh  +
jmp loc_1011639  +
push dword ptr [ebp-4]  +
mov ecx [ebp+8] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi ebx +
jge loc_101164D  +
push esi  +
push 3AEh  +
push offset aFinalelevati_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp edi ebx +
jz loc_1011660  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test dword ptr [ecx] 10000000h +
jz loc_1011680  +
mov eax [ecx+4] +
jmp loc_1011683  +
lea eax [ecx+4] +
mov ecx [ebp+arg_0] +
lea eax [eax+ecx*4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
cmp eax [ebp+dwBytes] +
push edi  +
sbb edi edi +
and edi [ebp+dwBytes] +
lea eax [ebp+dwBytes] +
push eax  +
push 4  +
mov esi ecx +
pop ecx  +
mov eax edi +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
test eax eax +
jl loc_101170A  +
push [ebp+dwBytes]  +
call sub_1011111  +
mov [ebp+dwBytes] eax +
test eax eax +
jz loc_1011705  +
mov eax [esi] +
push ebx  +
lea ebx [esi+4] +
test eax 10000000h +
jz loc_10116DB  +
mov ecx [ebx] +
jmp loc_10116DD  +
mov ecx ebx +
and eax 0FFFFFFFh +
shl eax 2 +
push eax  +
push ecx  +
push [ebp+dwBytes]  +
call memcpy  +
mov eax [ebp+dwBytes] +
or dword ptr [esi] 10000000h +
add esp 0Ch +
mov [ebx] eax +
mov [esi+8] edi +
xor eax eax +
pop ebx  +
jmp loc_101170A  +
mov eax 8007000Eh +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ebp+10h]  +
mov esi [ebp+8] +
push esi  +
call dword ptr [eax+4]  +
test eax eax +
jl loc_1011739  +
mov ecx [esi+4] +
mov edx [ebp+0Ch] +
lea ecx [ecx+edx*4] +
mov edx [ebp+14h] +
mov [edx] ecx +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
lea eax [ecx+eax*4+4] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 10h  +
***
pop eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
test eax eax +
jz loc_10117BC  +
push eax  +
call sub_100AC1E  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
test eax eax +
jl loc_1011805  +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnb loc_1011808  +
mov eax [ebp+arg_4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 1800h  +
mov ebx ecx +
push edi  +
mov [ebp+var_10] ebx +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] edi +
mov [ebp+var_24] edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_28] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_1011876  +
mov esi 8007000Eh +
push esi  +
push 103h  +
push offset aFinallinkspa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1011CD5  +
lea eax [ebp+var_18] +
push eax  +
push offset aEntrypoint  +
mov ecx ebx +
call sub_100C938  +
mov esi eax +
cmp esi edi +
jge loc_10118AB  +
push esi  +
push 109h  +
push offset aFinallinkspa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1011CC4  +
mov ecx [ebp+var_18] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov esi eax +
cmp esi edi +
jge loc_10118C2  +
push esi  +
push 10Ch  +
jmp loc_1011892  +
lea eax [ebp+var_24] +
push eax  +
push offset aHeaderentrypoi  +
mov ecx ebx +
call sub_100C938  +
mov esi eax +
cmp esi edi +
jge loc_10118E0  +
push esi  +
push 112h  +
jmp loc_1011892  +
mov ecx [ebp+var_24] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
mov esi eax +
cmp esi edi +
jge loc_10118F7  +
push esi  +
push 115h  +
jmp loc_1011892  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_1011914  +
push 1  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_100D6C8  +
mov [ebp+arg_4] eax +
jmp loc_1011917  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_4] edi +
jnz loc_101192C  +
mov esi 8007000Eh +
push esi  +
push 118h  +
jmp loc_1011892  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
cmp eax 8 +
jz loc_101194B  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
mov [ebp+var_1C] 1 +
cmp eax 9 +
jnz loc_101194E  +
mov [ebp+var_1C] edi +
mov ecx [ebp+arg_4] +
call sub_10173DA  +
test eax eax +
jz loc_1011BC1  +
cmp [ebp+var_1C] edi +
jz loc_1011BB8  +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_4] +
push eax  +
call sub_101746C  +
mov esi eax +
cmp esi edi +
jl loc_1011BE2  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1C] +
cmp eax [ecx+2Ch] +
jz loc_1011BA8  +
call sub_1030F9A  +
mov ecx eax +
call sub_1015C82  +
test eax eax +
jz loc_1011BA8  +
push [ebp+var_4]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+7Ch]  +
test eax eax +
jz loc_1011BA8  +
mov eax [ebx] +
mov ecx ebx +
mov [ebp+var_C] edi +
call dword ptr [eax+74h]  +
mov ebx eax +
cmp [ebp+var_14] edi +
jnz loc_1011A4D  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_20] +
push eax  +
push edi  +
push edi  +
push edi  +
push offset aRcheader  +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011BED  +
mov eax [ebp+var_4] +
mov ecx [eax+2Ch] +
mov eax dword_104E188 +
mov eax [eax+58h] +
neg eax  +
sbb eax eax +
and eax 2710h +
neg ecx  +
sbb ecx ecx +
push 400h  +
push [ebp+lpBuffer]  +
add ecx 18Dh +
add eax ecx +
push eax  +
call sub_10301CE  +
mov esi eax +
cmp esi edi +
jl loc_1011BF8  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_20] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011C03  +
push [ebp+var_20]  +
mov ecx [ebp+var_24] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011C0E  +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push edi  +
push edi  +
push ebx  +
call ds:?CreateElement@DUIXmlParser@DirectUI@@QAEJPBGPAVElement@2@1PAKPAPAV32@@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011C19  +
push offset aTxtname  +
call StrToID  +
mov ecx [ebp+var_C] +
movzx eax ax +
push eax  +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov ebx eax +
cmp ebx edi +
jz loc_1011C24  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
push edi  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_10] +
push eax  +
push ebx  +
call sub_100CB7C  +
mov esi eax +
cmp esi edi +
jl loc_1011C31  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_28] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push 80h  +
push [ebp+lpBuffer]  +
call sub_1014418  +
mov esi eax +
cmp esi edi +
jl loc_1011C39  +
push [ebp+lpBuffer]  +
mov ecx ebx +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011C41  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
cmp [ebp+var_28] edi +
jz loc_1011B45  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push offset aSS_0  +
push 0C00h  +
push [ebp+lpBuffer]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
cmp esi edi +
jl loc_1011C49  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_10] +
push eax  +
push ebx  +
call sub_100CB7C  +
mov esi eax +
cmp esi edi +
jge loc_1011B5E  +
push esi  +
push 16Fh  +
jmp loc_1011CA6  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_10] +
push eax  +
push edi  +
push edi  +
push ebx  +
call sub_100CB7C  +
mov esi eax +
cmp esi edi +
jl loc_1011C51  +
push 1  +
push ebx  +
mov ebx [ebp+var_10] +
mov ecx ebx +
call sub_100CC9C  +
mov esi eax +
cmp esi edi +
jl loc_1011C59  +
push [ebp+var_C]  +
mov ecx [ebp+var_18] +
call ds:?Add@Element@DirectUI@@QAEJPAV12@@Z  +
mov esi eax +
cmp esi edi +
jl loc_1011C61  +
push [ebp+arg_0]  +
mov eax [ebx] +
push [ebp+var_4]  +
mov ecx ebx +
push [ebp+var_C]  +
call dword ptr [eax+78h]  +
mov esi eax +
cmp esi edi +
jl loc_1011C69  +
inc [ebp+var_14]  +
mov ecx [ebp+arg_4] +
call sub_10173DA  +
test eax eax +
jnz loc_101195E  +
cmp [ebp+var_14] edi +
jnz loc_1011C8D  +
push offset aRcbox  +
mov ecx ebx +
call sub_100CAA7  +
mov esi eax +
cmp esi edi +
jge loc_1011C71  +
push esi  +
push 186h  +
jmp loc_1011CA6  +
push esi  +
push 121h  +
jmp loc_1011CA6  +
push esi  +
push 133h  +
jmp loc_1011CA6  +
push esi  +
push 13Ah  +
jmp loc_1011CA6  +
push esi  +
push 13Dh  +
jmp loc_1011CA6  +
push esi  +
push 140h  +
jmp loc_1011CA6  +
push esi  +
push 149h  +
jmp loc_1011CA6  +
mov esi 8000FFFFh +
push esi  +
push 150h  +
jmp loc_1011CA6  +
push esi  +
push 153h  +
jmp loc_1011CA6  +
push esi  +
push 15Dh  +
jmp loc_1011CA6  +
push esi  +
push 160h  +
jmp loc_1011CA6  +
push esi  +
push 16Ch  +
jmp loc_1011CA6  +
push esi  +
push 172h  +
jmp loc_1011CA6  +
push esi  +
push 176h  +
jmp loc_1011CA6  +
push esi  +
push 179h  +
jmp loc_1011CA6  +
push esi  +
push 17Ch  +
jmp loc_1011CA6  +
push 1  +
push offset aLinks  +
mov ecx ebx +
call sub_100CB06  +
mov esi eax +
cmp esi edi +
jge loc_1011CBA  +
push esi  +
push 189h  +
jmp loc_1011CA6  +
push [ebp+var_18]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+80h]  +
mov esi eax +
cmp esi edi +
jge loc_1011CBA  +
push esi  +
push 18Ch  +
push offset aFinallinkspa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+arg_4] +
push 1  +
call sub_100D5EF  +
push [ebp+lpBuffer]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
test dword ptr [ecx] 10000000h +
jz loc_1011D0B  +
test byte ptr dword_104E168 1 +
jnz loc_1011D05  +
or dword_104E168 1 +
mov dword_104E164 offset off_1002E54 +
mov eax offset dword_104E164 +
retn   +
test byte ptr dword_104E168 2 +
jnz loc_1011D25  +
or dword_104E168 2 +
mov dword_104E160 offset off_1002E64 +
mov eax offset dword_104E160 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
cmp eax [edi+8] +
jbe loc_1011D99  +
push eax  +
lea esi [edi+4] +
push esi  +
call sub_10117DE  +
mov ebx eax +
lea eax [ebp+8] +
push eax  +
push 4  +
pop ecx  +
mov eax ebx +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
mov [ebp-4] eax +
test eax eax +
jl loc_1011D96  +
mov eax [esi] +
push dword ptr [ebp+8]  +
test eax eax +
jz loc_1011D8B  +
push eax  +
call sub_1011743  +
test eax eax +
jnz loc_1011D87  +
mov eax 8007000Eh +
jmp loc_1011D9C  +
mov [esi] eax +
jmp loc_1011D96  +
call sub_1011111  +
mov [esi] eax +
test eax eax +
jz loc_1011D80  +
mov [edi+8] ebx +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov [ebp-14h] edi +
mov [ebp-18h] edi +
mov [ebp-1Ch] edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-24h] +
call sub_100CE71  +
mov ecx esi +
mov [ebp-4] edi +
call sub_100D422  +
mov ecx esi +
call sub_100CD60  +
cmp eax edi +
jge loc_1011DF0  +
push eax  +
push 39h  +
jmp loc_1011F50  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+84h]  +
test eax eax +
jnz loc_1011E16  +
push offset aFinalsubtext  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_1011E7C  +
push eax  +
push 40h  +
jmp loc_1011F50  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp-14h] ebx +
cmp ebx edi +
jnz loc_1011E3E  +
push 8007000Eh  +
push 42h  +
jmp loc_1011F50  +
mov eax [esi] +
push 400h  +
push ebx  +
mov ecx esi +
call dword ptr [eax+84h]  +
push eax  +
call sub_10301CE  +
cmp eax edi +
jge loc_1011E60  +
push eax  +
push 45h  +
jmp loc_1011F50  +
push edi  +
push edi  +
push edi  +
push ebx  +
push offset aFinalsubtext  +
mov ecx esi +
call sub_100CC01  +
cmp eax edi +
jge loc_1011E7C  +
push eax  +
push 48h  +
jmp loc_1011F50  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
cmp eax edi +
jge loc_1011E93  +
push eax  +
push 4Ch  +
jmp loc_1011F50  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_1010BA7  +
cmp eax edi +
jge loc_1011EA9  +
push eax  +
push 4Fh  +
jmp loc_1011F50  +
push offset aLinkelevate  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
cmp eax edi +
jz loc_1011EE4  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+0A0h]  +
push 1  +
push edi  +
push 160Ch  +
push eax  +
call ds:SendMessageW  +
lea eax [ebp-18h] +
push eax  +
call sub_101C0E6  +
cmp eax edi +
jge loc_1011EF6  +
push eax  +
push 58h  +
jmp loc_1011F50  +
mov ecx [ebp-18h] +
call sub_101246D  +
mov ebx eax +
lea eax [ebp-1Ch] +
push eax  +
call sub_102E866  +
cmp eax edi +
jge loc_1011F12  +
push eax  +
push 5Dh  +
jmp loc_1011F50  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
cmp eax 8 +
jz loc_1011F2A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
cmp eax 9 +
jnz loc_1011F36  +
mov eax dword_104E188 +
mov dword ptr [eax+30h] 1 +
mov eax dword_104E188 +
push ebx  +
mov [eax+34h] edi +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_1011811  +
cmp eax edi +
jge loc_1011F64  +
push eax  +
push 6Ch  +
push offset aFinallinkspa_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_1011F74  +
call ds:?Destroy@DUIXmlParser@DirectUI@@QAEXXZ  +
mov [ebp-10h] edi +
cmp [ebp-14h] edi +
jz loc_1011F8A  +
push dword ptr [ebp-14h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx dword_104E188 +
push 0  +
call sub_1011131  +
mov ecx esi +
call sub_1011DA8  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push dword_104E110  +
mov esi ecx +
call ds:SetEvent  +
test eax eax +
jnz loc_1012010  +
call ds:GetLastError  +
test eax eax +
jle loc_1011FF2  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1012010  +
push eax  +
push 2EAh  +
push offset aFinalwerreport  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1012017  +
mov ecx esi +
call sub_1011DA8  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
test dword ptr [esi] 10000000h +
jnz loc_1012040  +
cmp [ebp+dwBytes] 2 +
jbe loc_1012040  +
push [ebp+dwBytes]  +
call sub_1011692  +
jmp loc_1012050  +
call sub_1011CE3  +
push [ebp+dwBytes]  +
mov edx [eax] +
push esi  +
mov ecx eax +
call dword ptr [edx+4]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1011CE3  +
mov edx [eax] +
push esi  +
mov ecx eax +
call dword ptr [edx]  +
and dword ptr [esi] 0E0000000h +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101205A  +
test [ebp+arg_0] 1 +
jz loc_1012092  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
push ebx  +
push esi  +
push 0Ch  +
mov ebx ecx +
call sub_100ABFE  +
mov esi eax +
test esi esi +
jnz loc_10120C5  +
mov eax 8007000Eh +
jmp loc_101214F  +
and dword ptr [esi] 0F0000000h +
mov eax [esi] +
mov ecx [ebx] +
and eax 8FFFFFFFh +
push edi  +
and ecx 20000000h +
or ecx eax +
mov [esi] ecx +
xor eax eax +
lea edi [esi+4] +
stos   +
stos   +
mov eax [ebx] +
mov edi 0FFFFFFFh +
and eax edi +
push eax  +
mov ecx esi +
call sub_1012020  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101213E  +
mov eax [ebx] +
lea ecx [edi+1] +
test eax ecx +
jz loc_101210C  +
mov edx [ebx+4] +
jmp loc_101210F  +
lea edx [ebx+4] +
test edx edx +
jz loc_101212F  +
test [esi] ecx +
jz loc_101211C  +
mov ecx [esi+4] +
jmp loc_101211F  +
lea ecx [esi+4] +
and eax edi +
shl eax 2 +
push eax  +
push edx  +
push ecx  +
call memcpy  +
add esp 0Ch +
mov eax [esi] +
xor eax [ebx] +
and eax edi +
xor [esi] eax +
mov eax [ebp+arg_0] +
mov [eax] esi +
jmp loc_101214B  +
mov ecx esi +
call sub_101205A  +
push esi  +
call sub_100AC1E  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1012078  +
pop ebp  +
jmp sub_100AC1E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_101209E  +
mov ecx [ebp+arg_0] +
test eax eax +
jl loc_1012191  +
mov edx [ebp+var_4] +
mov [ecx] edx +
jmp locret_1012194  +
and dword ptr [ecx] 0 +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov ecx [ebp+8] +
push edi  +
lea eax [ebp-14h] +
xor edi edi +
push eax  +
mov [ebp-8] edi +
mov [ebp-14h] edi +
call ds:?GetChildren@Element@DirectUI@@QAEPAV?$DynamicArray@PAVElement@DirectUI@@$0A@@2@PAPAVValue@2@@Z  +
cmp eax edi +
jnz loc_10121E6  +
mov eax 8000FFFFh +
push eax  +
mov [ebp-4] eax +
push 3DAh  +
push offset aFinalelevati_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1012331  +
lea ecx [ebp-8] +
push ecx  +
mov ecx eax +
call sub_1012174  +
cmp eax edi +
mov [ebp-4] eax +
jge loc_1012200  +
push eax  +
push 3DDh  +
jmp loc_10121CD  +
***
mov ecx [ebp+8] +
call ds:?RemoveAll@Element@DirectUI@@QAEJXZ  +
cmp eax edi +
mov [ebp-4] eax +
jge loc_1012218  +
push eax  +
push 3E0h  +
jmp loc_10121CD  +
***
mov eax [ebp-8] +
push esi  +
mov esi [eax] +
and esi 0FFFFFFFh +
mov eax esi +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-10h] eax +
cmp eax edi +
jnz loc_1012267  +
mov eax 8007000Eh +
push eax  +
push 3E5h  +
push offset aFinalelevati_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1012318  +
mov [ebp-0Ch] edi +
cmp esi edi +
mov edi ds:?Add@Element@DirectUI@@QAEJPAV12@@Z +
push ebx  +
jbe loc_10122C6  +
push dword ptr [ebp-0Ch]  +
mov ecx [ebp-8] +
call sub_101166E  +
mov ebx [eax] +
push offset aRcpic  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov ecx eax +
call ds:?GetVisible@Element@DirectUI@@QAE_NXZ  +
test al al +
jz loc_10122BE  +
mov ecx [ebp+8] +
push ebx  +
call edi  +
mov [ebp-4] eax +
test eax eax +
jl loc_10122F3  +
mov eax [ebp-10h] +
mov ecx [ebp-0Ch] +
mov dword ptr [eax+ecx*4] 1 +
inc dword ptr [ebp-0Ch]  +
cmp [ebp-0Ch] esi +
jb loc_1012275  +
xor ebx ebx +
test esi esi +
jbe loc_1012317  +
mov eax [ebp-10h] +
cmp dword ptr [eax+ebx*4] 0 +
jnz loc_10122EC  +
mov ecx [ebp-8] +
push ebx  +
call sub_101166E  +
push dword ptr [eax]  +
mov ecx [ebp+8] +
call edi  +
mov [ebp-4] eax +
test eax eax +
jl loc_10122FB  +
inc ebx  +
cmp ebx esi +
jb loc_10122CC  +
jmp loc_1012317  +
push eax  +
push 3F0h  +
jmp loc_1012303  +
push dword ptr [ebp-4]  +
push 3FEh  +
push offset aFinalelevati_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
xor edi edi +
pop esi  +
cmp [ebp-10h] edi +
jz loc_1012331  +
push dword ptr [ebp-10h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp-14h] +
cmp ecx edi +
jz loc_1012341  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
mov [ebp-14h] edi +
cmp [ebp-8] edi +
pop edi  +
jz loc_101234F  +
push dword ptr [ebp-8]  +
call sub_101215A  +
mov eax [ebp-4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E16C +
push esi  +
xor esi esi +
test eax eax +
jnz loc_101238C  +
mov eax 8000FFFFh +
push eax  +
push 3Ah  +
push offset aPagemanagerIns  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1012391  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+8] ebx +
jz loc_10123D7  +
push edi  +
xor edi edi +
mov eax [esi+8] +
add eax edi +
cmp [eax] ebx +
jz loc_10123CB  +
mov eax [eax] +
cmp eax ebx +
jz loc_10123C5  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx+18h]  +
mov eax [esi+8] +
mov [edi+eax] ebx +
add edi 4 +
cmp edi 0D8h +
jb loc_10123AD  +
pop edi  +
mov eax [esi+8] +
cmp eax ebx +
jz loc_10123F0  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+8] ebx +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1012418  +
mov eax 80070057h +
push eax  +
push 0D9h  +
jmp loc_1012446  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov esi eax +
test esi esi +
jge loc_101242F  +
push esi  +
push 0DCh  +
jmp loc_1012448  +
mov ecx [ebp+var_4] +
call sub_101246D  +
test eax eax +
jnz loc_101245E  +
mov eax 8000FFFFh +
push eax  +
push 0DFh  +
mov esi eax +
push offset aPagemanagerGet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1012460  +
mov [edi] eax +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ecx+4] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
cmp eax 29h +
jnz loc_10124BC  +
cmp [ebp+arg_4] 0 +
jz loc_1012498  +
mov eax 9DEh +
jmp loc_10124A7  +
mov eax [ebp+arg_8] +
neg eax  +
sbb eax eax +
and eax 6 +
add eax 9DDh +
push [ebp+wParam]  +
mov ecx esi +
push 0  +
push eax  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:SendMessageW  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+wParam] 0 +
jnz loc_10124F1  +
push 80070057h  +
push 22Fh  +
push offset aPagemanagerCon  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101250B  +
push [ebp+wParam]  +
mov ecx [ecx+4] +
push 0  +
push 9E0h  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+wParam] 0 +
jnz loc_101253F  +
push 80070057h  +
push 258h  +
push offset aPagemanagerPau  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1012559  +
push [ebp+wParam]  +
mov ecx [ecx+4] +
push 0  +
push 9E1h  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
push esi  +
call sub_100CE28  +
mov esi eax +
test esi esi +
jge loc_101258B  +
push esi  +
push 2B5h  +
push offset aPagemanagerQui  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+wParam]  +
mov ecx [ecx+4] +
push 0  +
push 9DFh  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi [ecx+4] +
mov eax [esi] +
push edi  +
mov ecx esi +
xor edi edi +
call dword ptr [eax+58h]  +
cmp eax 29h +
jz loc_10125F4  +
mov eax 8000FFFFh +
push eax  +
push 338h  +
push offset aPagemanagerInt  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_10125FC  +
push edi  +
mov ecx esi +
call sub_100C7A3  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi [ecx+4] +
mov eax [esi] +
push edi  +
mov ecx esi +
xor edi edi +
call dword ptr [eax+58h]  +
cmp eax 29h +
jz loc_101263E  +
mov eax 8000FFFFh +
push eax  +
push 35Ah  +
push offset aPagemanagerRet  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1012647  +
push 1Eh  +
mov ecx esi +
call sub_100C7A3  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
mov dword ptr [esi] offset off_1003008 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
mov dword ptr [esi] offset off_1003090 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
mov dword ptr [esi] offset off_1003118 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101F4C0  +
mov dword ptr [esi] offset off_10031A0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
mov dword ptr [esi] offset off_1003228 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
mov dword ptr [esi] offset off_10032B0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax [ecx+0D0h] +
cmp eax 2 +
jz loc_1012729  +
cmp eax 3 +
jz loc_1012729  +
cmp eax 1 +
jz loc_1012729  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
***
retn   +
***
mov eax offset aRadiopage +
retn   +
***
pop eax  +
retn   +
***
mov eax offset aCommandlinkp_2 +
retn   +
***
pop eax  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
retn   +
***
inc eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
and dword ptr [esi+58h] 0 +
mov dword ptr [esi] offset off_10033B8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
pop eax  +
retn   +
***
cmp dword ptr [ecx+58h] 0 +
jz loc_10127DF  +
cmp dword ptr [ecx+48h] 0 +
mov eax offset aFlushlink +
jz locret_10127E4  +
mov eax offset aLinkinteractio +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
retn   +
***
mov eax 12Dh +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10127A1  +
and dword ptr [esi+60h] 0 +
mov dword ptr [esi] offset off_10034B8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov eax 80004005h +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
and dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_1003540 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
xor eax eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov [esi+40h] eax +
mov [esi+44h] eax +
mov [esi+48h] eax +
mov dword ptr [esi] offset off_10035D0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov dword ptr [esi+28h] 37h +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
push edi  +
mov edi ds:HeapFree +
mov dword ptr [esi] offset off_10035D0 +
mov dword ptr [esi+4] offset off_1003D8C +
test eax eax +
jz loc_1012905  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+38h] 0 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_1012918  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+3Ch] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_101292B  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+40h] 0 +
mov eax [esi+44h] +
test eax eax +
jz loc_101293E  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+44h] 0 +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp ds:??1TaskPage@DirectUI@@UAE@XZ  +
***
mov eax 138h +
retn   +
***
pop eax  +
retn   +
***
retn   +
***
mov eax [ecx+28h] +
cmp eax 37h +
jnz locret_1012978  +
push 29h  +
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10128D2  +
test byte ptr [ebp+8] 1 +
jz loc_1012998  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
and dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_1003670 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101239D  +
test [ebp+arg_0] 1 +
jz loc_10129F6  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi] 37h +
mov [esi+4] ecx +
mov eax [ecx] +
call dword ptr [eax+58h]  +
mov ecx dword_104E188 +
mov [ecx+0A4h] eax +
xor eax eax +
mov [esi+10h] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
xor ebx ebx +
call ds:??BTaskPage@DirectUI@@QAEPAU_PSP@@XZ  +
push eax  +
push ebx  +
push 465h  +
push dword ptr [esi+0Ch]  +
call ds:SendMessageW  +
test eax eax +
jnz loc_1012A8C  +
mov eax 80004005h +
push eax  +
push 17Ah  +
push offset aPagemanagerSwi  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_1012AA2  +
mov [esi+4] edi +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
mov ecx dword_104E188 +
mov [ecx+0A4h] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
push edi  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov ecx [ebp+arg_0] +
mov [esi+0Ch] eax +
push dword_104E138  +
call ds:?DUICreatePropertySheetPage@TaskPage@DirectUI@@QAEJPAUHINSTANCE__@@@Z  +
mov edi eax +
test edi edi +
jge loc_1012AE2  +
push edi  +
push 1A6h  +
jmp loc_1012B23  +
mov ecx [ebp+arg_0] +
call ds:??BTaskPage@DirectUI@@QAEPAU_PSP@@XZ  +
push eax  +
push 0  +
push 467h  +
push dword ptr [esi+0Ch]  +
call ds:SendMessageW  +
test eax eax +
jnz loc_1012B0D  +
mov edi 80004005h +
push edi  +
push 1B4h  +
jmp loc_1012B23  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1012A3E  +
mov edi eax +
test edi edi +
jge loc_1012B37  +
push edi  +
push 1B8h  +
push offset aPagemanagerAdd  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+4] +
xor ebx ebx +
mov [ebp+var_C] ebx +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
call dword ptr [eax+58h]  +
cmp eax 29h +
jz loc_1012B7B  +
mov eax 8000FFFFh +
push eax  +
mov [ebp+var_4] eax +
push 2F5h  +
jmp loc_1012BD8  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_1012B98  +
push 1Ah  +
mov ecx esi +
call sub_100C7A3  +
jmp loc_1012C23  +
lea eax [ebp+var_8] +
push eax  +
mov ecx edi +
call sub_10123F8  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_1012BB2  +
push eax  +
push 301h  +
jmp loc_1012BD8  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_1012BC2  +
push 2  +
jmp loc_1012B8C  +
lea eax [ebp+var_C] +
push eax  +
call sub_102E866  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_1012BEE  +
push eax  +
push 307h  +
push offset aPagemanagerNor  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1012C23  +
push 8  +
mov ecx esi +
call sub_100C7A3  +
cmp [ebp+var_C] ebx +
jnz loc_1012C13  +
mov eax dword_104E188 +
cmp [eax] ebx +
jnz loc_1012C13  +
cmp [eax+5Ch] ebx +
jz loc_1012C13  +
push 9  +
mov ecx esi +
call sub_100C7A3  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
mov ecx dword_104E188 +
mov [ecx+68h] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003758 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 12Fh +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_10037F8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 147h +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003890 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 133h +
retn   +
***
pop eax  +
retn   +
***
mov eax dword_104E188 +
cmp dword ptr [eax+34h] 0 +
jz loc_1012CFC  +
push 14h  +
pop eax  +
retn   +
cmp dword ptr [eax+30h] 0 +
jz loc_1012D06  +
mov eax [eax+68h] +
retn   +
push 2  +
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003920 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_10039B8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 140h +
retn   +
***
pop eax  +
retn   +
***
mov eax offset aExpandolistnor +
retn   +
***
xor eax eax +
inc eax  +
retn 4  +
***
xor eax eax +
retn 4  +
***
mov eax [ecx] +
call dword ptr [eax+58h]  +
sub eax 3 +
neg eax  +
sbb eax eax +
and eax 0FFFFD7B4h +
add eax 284Ch +
retn   +
***
mov eax dword_104E188 +
mov eax [eax+64h] +
retn   +
***
mov eax offset aLinkresolved +
retn   +
***
mov eax offset aLinkescalate +
retn   +
***
mov eax 2841h +
retn   +
***
mov eax 2840h +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003AA0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov eax 145h +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003B38 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax dword_104E188 +
mov eax [eax+60h] +
neg eax  +
sbb eax eax +
and eax 2710h +
add eax 12Eh +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003BD0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 14Ah +
retn   +
***
pop eax  +
retn   +
***
mov eax 115h +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
mov dword ptr [esi] offset off_1003C68 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 12Ch +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012D43  +
mov dword ptr [esi] offset off_1003CF0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1022870  +
test byte ptr [ebp+8] 1 +
jz loc_1012F4A  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C767  +
mov eax [ebp+arg_0] +
mov [esi+40h] eax +
mov eax [ebp+arg_8] +
mov [esi+38h] eax +
mov eax [ebp+arg_4] +
mov [esi+3Ch] eax +
mov dword ptr [esi] offset off_1003D98 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
pop eax  +
retn   +
***
pop eax  +
retn   +
***
call __EH_prolog3  +
mov ebx ds:GetProcessHeap +
and dword ptr [ebp-10h] 0 +
push 0D8h  +
push 8  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1012FFB  +
mov eax 8007000Eh +
push eax  +
push 5Fh  +
push offset aPagemanagerC_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-10h] eax +
call sub_1014247  +
add esp 14h +
jmp loc_101308D  +
push 14h  +
call sub_10361AF  +
pop ecx  +
mov [ebp-14h] eax +
and dword ptr [ebp-4] 0 +
mov esi [ebp+8] +
test eax eax +
jz loc_101301B  +
push esi  +
mov ecx eax +
call sub_1012A02  +
jmp loc_101301D  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_104E16C eax +
test eax eax +
jnz loc_101304B  +
mov eax 8007000Eh +
push eax  +
push 62h  +
push offset aPagemanagerC_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-10h] eax +
call sub_1014247  +
add esp 14h +
jmp loc_101307D  +
mov [eax+8] edi +
mov eax [esi] +
mov ecx esi +
xor edi edi +
call dword ptr [eax+58h]  +
mov ecx dword_104E16C +
mov [ecx] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
mov ecx dword_104E16C +
mov ecx [ecx+8] +
mov [ecx+eax*4] esi +
mov eax [ebp+0Ch] +
mov ecx dword_104E16C +
mov [eax] ecx +
test edi edi +
jz loc_101308D  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 8  +
***
mov ecx dword_104E16C +
test ecx ecx +
jz locret_10130B5  +
push 1  +
call sub_10129DC  +
and dword_104E16C 0 +
retn   +
***
call __EH_prolog3_GS  +
mov ebx ds:GetProcessHeap +
xor eax eax +
push 800h  +
push eax  +
mov [ebp-814h] ecx +
mov [ebp-810h] ax +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1013117  +
push 8007000Eh  +
push 286h  +
push offset aPagemanagerErr  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10131D4  +
xor eax eax +
mov [edi] ax +
mov esi 400h +
push esi  +
lea eax [ebp-810h] +
push eax  +
push 1B8h  +
call sub_10301CE  +
test eax eax +
jge loc_101313F  +
push eax  +
push 28Ah  +
jmp loc_10131B0  +
push esi  +
push edi  +
push uID  +
call sub_10301CE  +
test eax eax +
jge loc_1013158  +
push eax  +
push 28Dh  +
jmp loc_10131B0  +
push 48h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-818h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_1013182  +
push edi  +
lea eax [ebp-810h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1012F56  +
jmp loc_1013184  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jnz loc_1013198  +
push 8007000Eh  +
push 290h  +
jmp loc_10131B0  +
mov ecx [ebp-814h] +
push eax  +
xor edi edi +
call sub_1012AB0  +
test eax eax +
jge loc_10131D4  +
push eax  +
push 295h  +
push offset aPagemanagerErr  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test edi edi +
jz loc_10131D4  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
call sub_1036615  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012D43  +
mov dword ptr [esi] offset off_1003E48 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax dword_104E188 +
mov eax [eax+0D4h] +
neg eax  +
sbb eax eax +
and eax 3 +
add eax 149h +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012D43  +
mov dword ptr [esi] offset off_1003EE8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
pop eax  +
retn   +
***
mov eax dword_104E188 +
cmp dword ptr [eax+64h] 0 +
mov eax offset aLinkescalate +
jnz locret_1013265  +
mov eax offset aLinkresolved +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1013227  +
mov dword ptr [esi] offset off_1003F88 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax 144h +
retn   +
***
pop eax  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012F10  +
mov dword ptr [esi] offset off_1004028 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax 141h +
retn   +
***
pop eax  +
retn   +
***
mov eax 284Eh +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012D43  +
mov dword ptr [esi] offset off_10040C8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax 2860h +
retn   +
***
pop eax  +
retn   +
***
mov eax 284Fh +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012F10  +
mov dword ptr [esi] offset off_1004168 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax 136h +
retn   +
***
mov eax dword_104E188 +
mov eax [eax+64h] +
neg eax  +
sbb eax eax +
and eax 284Dh +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012D43  +
mov dword ptr [esi] offset off_1004208 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
mov eax 14Bh +
retn   +
***
pop eax  +
retn   +
***
retn   +
***
retn   +
***
mov eax dword_104E188 +
mov eax [eax+64h] +
neg eax  +
sbb eax eax +
add eax 2841h +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1012EDA  +
mov dword ptr [esi] offset off_10042A8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 148h +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1TaskPage@DirectUI@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_101343B  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov esi [ebp+8] +
mov ecx [ecx+8] +
mov eax esi +
shl eax 2 +
mov [ebp+8] eax +
add eax ecx +
xor ebx ebx +
cmp [eax] ebx +
jz loc_10134BF  +
mov eax [eax] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+60h]  +
mov edi eax +
cmp edi ebx +
jge loc_101349F  +
push edi  +
push 489h  +
push offset aPagemanagerTyp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1013AF3  +
cmp esi 29h +
jnz loc_1013AF3  +
mov eax [ebp-10h] +
mov ecx [eax+8] +
mov ecx [ecx+0A4h] +
mov eax [eax+10h] +
mov [ecx+48h] eax +
jmp loc_1013AF3  +
push 1Ch  +
pop edi  +
cmp esi edi +
jg loc_10137CC  +
jz loc_10137A6  +
push 0Ah  +
pop edi  +
cmp esi edi +
jg loc_1013675  +
jz loc_101364F  +
sub esi ebx +
jz loc_1013620  +
sub esi 3 +
jz loc_10135FA  +
dec esi  +
jz loc_10135D4  +
dec esi  +
dec esi  +
jz loc_10135AE  +
dec esi  +
jz loc_101358C  +
dec esi  +
jz loc_1013538  +
dec esi  +
jnz loc_1013959  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 0Eh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1013380  +
jmp loc_1013A39  +
mov eax dword_104E188 +
push 38h  +
cmp [eax+58h] ebx +
jz loc_1013568  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 0Ch +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10132FF  +
jmp loc_1013A39  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 0Dh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101333E  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] edi +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101326B  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 9 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1013227  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 0Bh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10132C0  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 7 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012D43  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1Eh +
cmp ecx ebx +
jz loc_101363F  +
call sub_1012EDA  +
jmp loc_1013641  +
xor eax eax +
mov ecx dword_104E0DC +
mov [eax+2Ch] ecx +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 8 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10131E1  +
jmp loc_1013A39  +
sub esi 14h +
jz loc_1013780  +
push 2  +
pop edi  +
sub esi edi +
jz loc_101375A  +
dec esi  +
jz loc_1013734  +
dec esi  +
jz loc_101370E  +
dec esi  +
jz loc_10136E8  +
dec esi  +
jz loc_10136C2  +
dec esi  +
jnz loc_1013959  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] edi +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012C6F  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 5 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012D0F  +
jmp loc_1013A39  +
push 40h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 3 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10129A4  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012C30  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1Bh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10133E1  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 4 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012CAE  +
jmp loc_1013A39  +
push 50h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 6 +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101289A  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 19h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012DF8  +
jmp loc_1013A39  +
cmp esi 2Fh +
jg loc_1013939  +
jz loc_1013913  +
sub esi 1Dh +
jz loc_10138ED  +
dec esi  +
jz loc_10138CB  +
sub esi 0Bh +
jz loc_10138A1  +
dec esi  +
jz loc_101387B  +
dec esi  +
dec esi  +
jz loc_1013855  +
dec esi  +
jz loc_101382F  +
dec esi  +
jnz loc_1013959  +
push 60h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 12h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012671  +
jmp loc_1013A39  +
push 60h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 11h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012651  +
jmp loc_1013A39  +
push 40h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 0Fh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012862  +
jmp loc_1013A39  +
push 68h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 10h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101281D  +
jmp loc_1013A39  +
push 58h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1013A37  +
mov eax [ebp-10h] +
push ebx  +
push ebx  +
push dword ptr [eax+10h]  +
call sub_100D767  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] edi +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012E90  +
jmp loc_1013A39  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1Ah +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012E40  +
jmp loc_1013A39  +
push 58h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 13h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_1012691  +
jmp loc_1013A39  +
sub esi 30h +
jz loc_1013A15  +
dec esi  +
jz loc_10139F3  +
dec esi  +
jz loc_10139D4  +
dec esi  +
jz loc_10139B5  +
dec esi  +
jz loc_101398F  +
dec esi  +
jz loc_1013969  +
mov edi 80070057h +
push edi  +
push 4FCh  +
jmp loc_1013486  +
push 68h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1Dh +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101FE75  +
jmp loc_1013A39  +
push 60h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 18h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10127A1  +
jmp loc_1013A39  +
push 58h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 17h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10126F1  +
jmp loc_1013A39  +
push 60h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 16h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10126D1  +
jmp loc_1013A39  +
push 80h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 15h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_10126B1  +
jmp loc_1013A39  +
push 80h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 14h +
cmp ecx ebx +
jz loc_1013A37  +
call sub_101F4C0  +
jmp loc_1013A39  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov esi eax +
cmp esi ebx +
jnz loc_1013A53  +
mov edi 8007000Eh +
push edi  +
push 4FEh  +
jmp loc_1013486  +
push dword_104E138  +
mov ecx esi +
call ds:?DUICreatePropertySheetPage@TaskPage@DirectUI@@QAEJPAUHINSTANCE__@@@Z  +
mov edi eax +
cmp edi ebx +
jge loc_1013A83  +
push edi  +
push 504h  +
push offset aPagemanagerTyp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1013AE6  +
mov ecx esi +
call ds:??BTaskPage@DirectUI@@QAEPAU_PSP@@XZ  +
mov edi eax +
mov eax [ebp-10h] +
cmp [eax+0Ch] ebx +
jnz loc_1013AA4  +
mov ecx [eax+4] +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov ecx [ebp-10h] +
mov [ecx+0Ch] eax +
mov eax [ebp-10h] +
push edi  +
push ebx  +
push 467h  +
push dword ptr [eax+0Ch]  +
call ds:SendMessageW  +
mov edi eax +
neg edi  +
sbb edi edi +
and edi 7FFFBFFBh +
add edi 80004005h +
jns loc_1013AD3  +
push edi  +
push 510h  +
jmp loc_1013A6D  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov [eax] esi +
mov eax [ebp-10h] +
mov eax [eax+8] +
mov [ecx+eax] esi +
xor esi esi +
cmp esi ebx +
jz loc_1013AF3  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
push dword ptr [esi]  +
call sub_1013447  +
mov edi eax +
test edi edi +
jge loc_1013B29  +
push edi  +
push 11Dh  +
jmp loc_1013B4B  +
mov ecx [ebp+arg_0] +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push [ebp+var_4]  +
mov ecx esi +
mov [esi+0Ch] eax +
call sub_1012A3E  +
mov edi eax +
test edi edi +
jge loc_1013B5F  +
push edi  +
push 122h  +
push offset aPagemanagerSet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea eax [ebp+var_C] +
push eax  +
mov ebx ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
call sub_1031307  +
mov edi eax +
cmp edi esi +
jge loc_1013BA1  +
push edi  +
push 383h  +
jmp loc_1013EF3  +
lea eax [ebp+var_8] +
push eax  +
call sub_102E866  +
mov edi eax +
cmp edi esi +
jge loc_1013BBB  +
push edi  +
push 386h  +
jmp loc_1013EF3  +
mov ecx [ebx+4] +
mov eax [ecx] +
mov edi [ebx] +
call dword ptr [eax+54h]  +
mov esi eax +
cmp esi 37h +
jnz loc_1013D02  +
cmp edi 17h +
jg loc_1013C18  +
jz loc_1013C43  +
test edi edi +
jz loc_1013C43  +
cmp edi 5 +
jz loc_1013C10  +
cmp edi 7 +
jz loc_1013C10  +
jle loc_1013E65  +
cmp edi 9 +
jle loc_1013BFE  +
cmp edi 14h +
jz loc_1013C05  +
cmp edi 15h +
jnz loc_1013E65  +
push 16h  +
jmp loc_1013DEF  +
mov eax [ebx+10h] +
cmp eax dword_104E10C +
jz loc_1013BFE  +
push 2  +
pop esi  +
jmp loc_1013D40  +
sub edi 19h +
jz loc_1013CF0  +
dec edi  +
jz loc_1013CDE  +
dec edi  +
jz loc_1013CF0  +
dec edi  +
dec edi  +
jz loc_1013CCA  +
dec edi  +
jz loc_1013CB7  +
sub edi 0Bh +
jnz loc_1013D3B  +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 0Ch +
jnz loc_1013C58  +
push 18h  +
jmp loc_1013DEF  +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+40h]  +
test eax eax +
jz loc_1013C6B  +
push 17h  +
jmp loc_1013DEF  +
lea eax [ebp+var_4] +
push eax  +
mov ecx ebx +
call sub_10123F8  +
mov edi eax +
test edi edi +
jge loc_1013C87  +
push edi  +
push 3B0h  +
jmp loc_1013EF3  +
mov ecx [ebp+var_4] +
call sub_1016D57  +
test eax eax +
jz loc_1013CA7  +
cmp [ebp+var_8] 0 +
jnz loc_1013CA7  +
mov eax dword_104E188 +
cmp dword ptr [eax] 0 +
jz loc_1013C10  +
mov ecx [ebp+var_4] +
call sub_1016DF2  +
test eax eax +
jz loc_1013C10  +
mov eax dword_104E188 +
mov esi [eax+2Ch] +
neg esi  +
sbb esi esi +
and esi 12h +
inc esi  +
inc esi  +
jmp loc_1013D02  +
mov eax dword_104E188 +
mov esi [eax+3Ch] +
neg esi  +
sbb esi esi +
and esi 6 +
add esi 17h +
jmp loc_1013D02  +
mov eax [ebx+10h] +
cmp eax dword_104E108 +
jnz loc_1013CF0  +
push 19h  +
jmp loc_1013DEF  +
mov eax dword_104E188 +
mov esi [eax+8] +
neg esi  +
sbb esi esi +
and esi 0FFFFFFFDh +
add esi 1Bh +
cmp esi 14h +
jnz loc_1013D36  +
lea eax [ebp+var_4] +
push eax  +
mov ecx ebx +
call sub_10123F8  +
mov edi eax +
test edi edi +
jge loc_1013D23  +
push edi  +
push 3E2h  +
jmp loc_1013EF3  +
mov ecx [ebp+var_4] +
call sub_1017024  +
test eax eax +
jnz loc_1013E65  +
push 2  +
pop esi  +
cmp esi 1 +
jl loc_1013D61  +
cmp esi 0Bh +
jg loc_1013D61  +
mov edi dword_104E188 +
mov ecx edi +
call sub_1012711  +
test eax eax +
jz loc_1013D58  +
push 1Ah  +
jmp loc_1013DEF  +
cmp dword ptr [edi+24h] 0 +
jz loc_1013D61  +
push 1Ch  +
pop esi  +
cmp esi 2 +
jnz loc_1013E65  +
lea eax [ebp+var_4] +
push eax  +
mov ecx ebx +
call sub_10123F8  +
mov edi eax +
test edi edi +
jge loc_1013D86  +
push edi  +
push 3F9h  +
jmp loc_1013EF3  +
mov esi [ebp+var_4] +
mov ecx esi +
call sub_1016116  +
test eax eax +
jnz loc_1013DB8  +
mov eax dword_104E188 +
xor ecx ecx +
cmp [ebp+var_8] ecx +
jnz loc_1013DAD  +
cmp [eax] ecx +
jnz loc_1013DAD  +
cmp [eax+5Ch] ecx +
jz loc_1013DAD  +
push 9  +
jmp loc_1013DAF  +
push 8  +
pop esi  +
mov [eax+68h] esi +
jmp loc_1013E65  +
mov ecx esi +
call sub_1017B6D  +
test eax eax +
jz loc_1013DFA  +
mov eax dword_104E188 +
cmp dword ptr [eax+58h] 0 +
jnz loc_1013DF6  +
cmp dword ptr [eax+0D4h] 0 +
jnz loc_1013DF6  +
mov ecx esi +
call sub_101709D  +
test eax eax +
jnz loc_1013DF2  +
mov ecx esi +
call sub_1016F0F  +
test eax eax +
jnz loc_1013DF2  +
push 4  +
pop esi  +
jmp loc_1013E65  +
push 3  +
jmp loc_1013DEF  +
push 0Ah  +
jmp loc_1013DEF  +
mov ecx esi +
call sub_1016CBA  +
xor edi edi +
test eax eax +
jz loc_1013E2E  +
cmp [ebp+var_8] edi +
jnz loc_1013E2E  +
mov eax dword_104E188 +
cmp [eax] edi +
jnz loc_1013E2E  +
mov ecx esi +
call sub_1016E5F  +
test eax eax +
jz loc_1013E2E  +
mov eax dword_104E188 +
cmp [eax+2Ch] edi +
jnz loc_1013E2E  +
push 7  +
jmp loc_1013DEF  +
mov ecx esi +
call sub_1016CBA  +
test eax eax +
jz loc_1013E4B  +
cmp [ebp+var_8] edi +
jnz loc_1013E4B  +
mov eax dword_104E188 +
cmp [eax] edi +
jnz loc_1013E4B  +
push 6  +
jmp loc_1013DEF  +
mov eax dword_104E188 +
cmp [eax+58h] edi +
jnz loc_1013DF6  +
mov ecx esi +
call sub_1016F0F  +
mov esi eax +
neg esi  +
sbb esi esi +
add esi 4 +
mov eax dword_104E188 +
cmp dword ptr [eax+0D0h] 0Ch +
jnz loc_1013E80  +
mov esi [eax+8] +
neg esi  +
sbb esi esi +
and esi 0FFFFFFFDh +
add esi 1Bh +
cmp esi 37h +
jnz loc_1013E92  +
mov edi 80070057h +
push edi  +
push 440h  +
jmp loc_1013EF3  +
cmp esi 29h +
jnz loc_1013EA2  +
mov ecx [ebx+4] +
mov eax [ecx] +
call dword ptr [eax+5Ch]  +
mov [ebx+10h] eax +
lea eax [ebp+var_10] +
push eax  +
push esi  +
mov ecx ebx +
call sub_1013447  +
mov edi eax +
test edi edi +
jge loc_1013EBC  +
push edi  +
push 44Eh  +
jmp loc_1013EF3  +
mov ecx [ebp+var_10] +
mov [ebx+4] ecx +
call ds:??BTaskPage@DirectUI@@QAEPAU_PSP@@XZ  +
push eax  +
push 0FFFFFFFFh  +
push 465h  +
push dword ptr [ebx+0Ch]  +
call ds:SendMessageW  +
mov edi eax +
neg edi  +
sbb edi edi +
and edi 7FFFBFFBh +
add edi 80004005h +
jns loc_1013F09  +
push edi  +
push 45Ch  +
push offset aPagemanagerCre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1013F14  +
mov eax dword_104E188 +
mov [eax+0A4h] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi ecx +
mov ecx edi +
call dword ptr [eax+58h]  +
cmp eax 28h +
jge loc_1013F41  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
mov [esi] eax +
mov ecx edi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov ecx esi +
mov [esi+0Ch] eax +
call sub_1013B6C  +
mov esi eax +
test esi esi +
jge loc_1013F73  +
push esi  +
push 14Ch  +
push offset aPagemanagerS_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+4] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
cmp eax 29h +
jnz loc_1013FBB  +
push esi  +
mov ecx edi +
call sub_1013F20  +
test eax eax +
jge loc_1013FBB  +
push eax  +
push 1E0h  +
push offset aPagemanagerPro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1013FD3  +
mov esi ds:towlower +
sub eax edx +
sar eax 1 +
dec eax  +
movzx ebx ax +
movzx eax bx +
lea edi [edi+eax*2] +
movzx eax word ptr [edi] +
push eax  +
call esi  +
movzx eax ax +
pop ecx  +
mov [ebp+arg_0] eax +
test bx bx +
jz loc_1014025  +
add ebx 0FFFFh +
dec edi  +
dec edi  +
movzx eax word ptr [edi] +
push eax  +
call esi  +
pop ecx  +
mov ecx [ebp+arg_0] +
imul ecx ecx +
movzx eax ax +
add eax ecx +
mov [ebp+arg_0] eax +
test bx bx +
jnz loc_1014003  +
mov ecx eax +
imul eax eax +
imul ecx ecx +
add ecx 3039h +
shr ecx 10h +
inc eax  +
and eax 0FFFF0000h +
or ecx eax +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
mov [eax] ecx +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_10140B1  +
cmp [ebp+arg_4] ebx +
jz loc_10140B1  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1014071  +
mov ecx [ebp+arg_4] +
sub eax edx +
sar eax 1 +
lea edx [ecx+2] +
push esi  +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1014086  +
sub ecx edx +
sar ecx 1 +
pop esi  +
cmp ecx eax +
ja loc_10140B1  +
push [ebp+arg_4]  +
sub eax ecx +
lea eax [edi+eax*2] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10140B1  +
xor ebx ebx +
inc ebx  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10140F3  +
cmp [ebp+arg_4] eax +
jz loc_10140EF  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_10140EF  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10140D2  +
test esi esi +
jnz loc_10140FB  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1014109  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+90h] +
test eax eax +
jz loc_101413E  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+90h] 0 +
mov eax [ebp+arg_0] +
mov [esi+90h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_101416A  +
cmp edx esi +
jbe loc_101416F  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_1014187  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_102A2B0  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_1014189  +
xor ecx ecx +
test eax eax +
jl loc_10141A0  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_10140BE  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10141C1  +
cmp ecx 7FFFFFFFh +
jbe loc_10141C6  +
mov eax 80070057h +
test eax eax +
jl loc_1014202  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_10141F5  +
cmp eax esi +
ja loc_10141F5  +
jnz loc_10141FD  +
mov [esi+edi] bl +
jmp loc_10141FD  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_101422D  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_101422D  +
call sub_102A2B0  +
jmp loc_1014232  +
mov eax 80070057h +
test eax eax +
jge loc_101423D  +
test edi edi +
jz loc_101423D  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call sub_10141AB  +
test eax eax +
jl loc_1014295  +
lea eax [ebp+var_404] +
push eax  +
push offset aS_2  +
push [ebp+arg_0]  +
push 81h  +
call ds:DbgPrintEx  +
add esp 10h +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
xor ebx ebx +
push ebx  +
push [ebp+lpSubKey]  +
mov [ebp+phkResult] ebx +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call ds:RegOpenKeyExW  +
mov edi eax +
cmp edi ebx +
jge loc_10142EF  +
push edi  +
push 0EAh  +
push offset aDwzregreadvalu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014359  +
cmp [ebp+phkResult] ebx +
jnz loc_10142F9  +
xor edi edi +
inc edi  +
jmp loc_1014367  +
push esi  +
mov esi [ebp+arg_14] +
mov eax [esi] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
mov eax [ebp+arg_10] +
push dword ptr [eax]  +
push [ebp+lpType]  +
push ebx  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jle loc_1014329  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi ebx +
jge loc_101434B  +
push edi  +
push 0FEh  +
push offset aDwzregreadvalu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014358  +
mov eax [ebp+lpType] +
cmp dword ptr [eax] 4 +
jz loc_1014358  +
mov eax [ebp+cbData] +
mov [esi] eax +
pop esi  +
cmp [ebp+phkResult] ebx +
jz loc_1014367  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+phkResult] +
push eax  +
push ebx  +
push 2001Fh  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+lpSubKey]  +
mov [ebp+phkResult] ebx +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
cmp eax ebx +
mov edi 0FFFFh +
mov esi 80070000h +
jle loc_10143AE  +
and eax edi +
or eax esi +
mov ebx eax +
test ebx ebx +
jge loc_10143BC  +
push ebx  +
push 13Dh  +
jmp loc_10143E7  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jle loc_10143DB  +
and eax edi +
or eax esi +
mov ebx eax +
test ebx ebx +
jge loc_10143FB  +
push ebx  +
push 146h  +
push offset aDwzregwriteval  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+phkResult] 0 +
jz loc_101440A  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call sub_100D999  +
mov esi eax +
test esi esi +
jl loc_101443F  +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
jmp loc_1014530  +
cmp esi 8007007Ah +
jnz loc_1014449  +
xor esi esi +
test esi esi +
jge loc_101446C  +
push esi  +
push 180h  +
push offset aDwzstrtruncate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014530  +
push edi  +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1014494  +
mov esi 8007000Eh +
push esi  +
push 185h  +
jmp loc_10144FC  +
push 100h  +
push edi  +
push 97h  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_10144B2  +
push esi  +
push 18Bh  +
jmp loc_10144FC  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10144B7  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx [ebp+arg_4] +
jbe loc_10144DA  +
mov esi 80004005h +
push esi  +
push 194h  +
jmp loc_10144FC  +
mov ecx [ebp+arg_4] +
push edi  +
push [ebp+arg_4]  +
sub ecx eax +
xor eax eax +
push ebx  +
mov [ebx+ecx*2-2] ax +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_1014512  +
push esi  +
push 19Dh  +
push offset aDwzstrtruncate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101451B  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
test edi edi +
jz loc_101452F  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+arg_0] esi +
jnz loc_1014575  +
mov eax 80070057h +
push eax  +
push 1C7h  +
mov edi eax +
push offset aDwzstrcpy  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014617  +
cmp [ebp+arg_4] esi +
jnz loc_1014587  +
mov eax 80070057h +
push eax  +
push 1C8h  +
jmp loc_101455A  +
lea eax [ebp+var_4] +
push eax  +
push 400h  +
push [ebp+arg_4]  +
call sub_101420B  +
mov edi eax +
cmp edi esi +
jge loc_10145A6  +
push edi  +
push 1CBh  +
jmp loc_101455C  +
mov edi [ebp+var_4] +
push ebx  +
mov ebx ds:GetProcessHeap +
lea eax [edi+edi+2] +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_10145D2  +
mov edi 8007000Eh +
push edi  +
push 1CEh  +
jmp loc_10145E9  +
push [ebp+arg_4]  +
inc edi  +
push edi  +
push esi  +
call sub_100D999  +
mov edi eax +
test edi edi +
jge loc_10145FF  +
push edi  +
push 1D1h  +
push offset aDwzstrcpy  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014606  +
mov eax [ebp+arg_0] +
mov [eax] esi +
xor esi esi +
test esi esi +
jz loc_1014616  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp dword ptr [ebp+arg_0] ebx +
jnz loc_1014660  +
mov eax 80070057h +
push eax  +
push 207h  +
push offset aDwzstrcat  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014788  +
cmp [ebp+arg_4] ebx +
jnz loc_1014672  +
mov eax 80070057h +
push eax  +
push 208h  +
jmp loc_1014645  +
cmp [ebp+arg_C] ebx +
jnz loc_1014684  +
mov eax 80070057h +
push eax  +
push 209h  +
jmp loc_1014645  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
mov esi 800h +
push esi  +
push dword ptr [ebp+arg_0]  +
call sub_101420B  +
mov edi eax +
cmp edi ebx +
jge loc_10146A5  +
push edi  +
push 20Ch  +
jmp loc_10146D9  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call sub_101420B  +
mov edi eax +
cmp edi ebx +
jge loc_10146C0  +
push edi  +
push 20Fh  +
jmp loc_10146D9  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
lea edi [ecx+eax+2] +
cmp edi esi +
jbe loc_10146F2  +
mov edi 8007006Fh +
push edi  +
push 215h  +
push offset aDwzstrcat  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014787  +
lea eax [edi+edi] +
push eax  +
push ebx  +
mov ebx ds:GetProcessHeap +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1014719  +
mov edi 8007000Eh +
push edi  +
push 219h  +
jmp loc_101475A  +
cmp [ebp+arg_8] 0 +
push [ebp+arg_4]  +
jnz loc_1014737  +
push dword ptr [ebp+arg_0]  +
push offset aSS_1  +
push edi  +
push esi  +
call sub_100DD8E  +
add esp 14h +
jmp loc_101474E  +
movzx eax [ebp+arg_8] +
push eax  +
push dword ptr [ebp+arg_0]  +
push offset aSCS  +
push edi  +
push esi  +
call sub_100DD8E  +
add esp 18h +
mov edi eax +
test edi edi +
jge loc_1014770  +
push edi  +
push 221h  +
push offset aDwzstrcat  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014777  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor esi esi +
test esi esi +
jz loc_1014787  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10147CB  +
mov eax 80070057h +
push eax  +
push 254h  +
push offset aDwzstrtok  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014842  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_10147E2  +
mov eax 80070057h +
push eax  +
mov ebx eax +
push 255h  +
jmp loc_10147FF  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push esi  +
call sub_101420B  +
mov ebx eax +
xor ecx ecx +
cmp ebx ecx +
jge loc_1014815  +
push ebx  +
push 258h  +
push offset aDwzstrtok  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014841  +
cmp ecx [ebp+var_4] +
jnb loc_101483C  +
mov ax [esi+ecx*2] +
cmp ax [ebp+arg_4] +
jz loc_101482C  +
inc ecx  +
cmp ecx [ebp+var_4] +
jb loc_101481A  +
jmp loc_1014839  +
lea eax [esi+ecx*2] +
xor edx edx +
mov [eax] dx +
add eax 2 +
mov [edi] eax +
cmp ecx [ebp+var_4] +
jnz loc_1014841  +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_C] 0FFFFFFFFh +
push esi  +
push edi  +
xor edi edi +
mov [ebp+ppv] edi +
mov [ebp+var_8] edi +
cmp [ebp+arg_0] edi +
jnz loc_1014890  +
mov eax 80070057h +
push eax  +
push 292h  +
push offset aDwzxmlcreate  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101495B  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_10148AA  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 293h  +
jmp loc_1014939  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 15h  +
push edi  +
push offset stru_1009474  +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi edi +
jge loc_10148CF  +
push esi  +
push 29Bh  +
jmp loc_1014939  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov esi eax +
cmp esi edi +
jge loc_10148EA  +
push esi  +
push 29Eh  +
jmp loc_1014939  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_1014907  +
mov esi 8007000Eh +
push esi  +
push 2A1h  +
jmp loc_1014939  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+104h]  +
mov esi eax +
cmp esi edi +
jge loc_1014928  +
push esi  +
push 2A4h  +
jmp loc_1014939  +
cmp word ptr [ebp+var_C] di +
jnz loc_101494F  +
mov esi 80004005h +
push esi  +
push 2A5h  +
push offset aDwzxmlcreate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101495A  +
mov eax [ebp+ppv] +
mov [ebx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
pop ebx  +
mov eax [ebp+ppv] +
cmp eax edi +
jz loc_101496B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] edi +
cmp [ebp+var_8] edi +
jz loc_1014979  +
push [ebp+var_8]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor edi edi +
push eax  +
mov [ebp+ppv] edi +
call ds:VariantInit  +
cmp [ebp+arg_0] edi +
jnz loc_10149BB  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 2D5h  +
jmp loc_1014A74  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_10149D4  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 2D6h  +
jmp loc_1014A74  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 15h  +
push edi  +
push offset stru_1009474  +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi edi +
jge loc_10149F9  +
push esi  +
push 2E1h  +
jmp loc_1014A74  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov esi eax +
cmp esi edi +
jge loc_1014A14  +
push esi  +
push 2E4h  +
jmp loc_1014A74  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax edi +
jnz loc_1014A31  +
mov esi 8007000Eh +
push esi  +
push 2E7h  +
jmp loc_1014A74  +
push 8  +
pop eax  +
lea edx [ebp+var_8] +
push edx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov esi eax +
test esi esi +
jge loc_1014A62  +
push esi  +
push 2ECh  +
jmp loc_1014A74  +
cmp word ptr [ebp+var_8] 0 +
jnz loc_1014A8A  +
mov esi 80004005h +
push esi  +
push 2EDh  +
push offset aDwzxmlload  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014A95  +
mov eax [ebp+ppv] +
mov [ebx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_1014AAC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
push esi  +
test eax eax +
jnz loc_1014AEF  +
mov eax 80070057h +
push eax  +
push 31Ah  +
push offset aDwzxmlgetrootn  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014B57  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_1014B04  +
mov eax 80070057h +
push eax  +
push 31Bh  +
jmp loc_1014B40  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov esi eax +
test esi esi +
jge loc_1014B1F  +
push esi  +
push 31Eh  +
jmp loc_1014B42  +
cmp esi 1 +
jz loc_1014B35  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014B35  +
mov [edi] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1014B56  +
mov eax 80004005h +
push eax  +
push 322h  +
mov esi eax +
push offset aDwzxmlgetrootn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014B64  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
push esi  +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jnz loc_1014BA7  +
mov eax 80070057h +
push eax  +
push 388h  +
push offset aDwzxmlgetnode  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014C77  +
cmp [ebp+arg_C] eax +
jnz loc_1014BB9  +
mov eax 80070057h +
push eax  +
push 389h  +
jmp loc_1014B8C  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi eax +
jnz loc_1014BEE  +
cmp edi eax +
jnz loc_1014BEE  +
mov eax 80070057h +
push eax  +
push 38Dh  +
push offset aDwzxmlgetnode  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014C76  +
push ebx  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov ebx eax +
test ebx ebx +
jnz loc_1014C0B  +
mov eax 8007000Eh +
push eax  +
push 391h  +
jmp loc_1014C54  +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
test esi esi +
jz loc_1014C19  +
mov eax [esi] +
push esi  +
jmp loc_1014C1C  +
mov eax [edi] +
push edi  +
call dword ptr [eax+94h]  +
mov esi eax +
test esi esi +
jge loc_1014C30  +
push esi  +
push 39Dh  +
jmp loc_1014C56  +
cmp esi 1 +
jz loc_1014C49  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014C49  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1014C6A  +
mov eax 80004005h +
push eax  +
push 3A1h  +
mov esi eax +
push offset aDwzxmlgetnode  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test ebx ebx +
jz loc_1014C75  +
push ebx  +
call ds:SysFreeString  +
pop ebx  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014C84  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
push esi  +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jnz loc_1014CC7  +
mov eax 80070057h +
push eax  +
push 3D4h  +
push offset aDwzxmlgetnodes  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014D7E  +
cmp [ebp+arg_C] eax +
jnz loc_1014CD9  +
mov eax 80070057h +
push eax  +
push 3D5h  +
jmp loc_1014CAC  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi eax +
jnz loc_1014D0B  +
cmp edi eax +
jnz loc_1014D0B  +
mov eax 80070057h +
push eax  +
push 3D9h  +
push offset aDwzxmlgetnodes  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014D7D  +
push ebx  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov ebx eax +
test ebx ebx +
jnz loc_1014D2A  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 3DDh  +
jmp loc_1014D4D  +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
test esi esi +
jz loc_1014D38  +
mov eax [esi] +
push esi  +
jmp loc_1014D3B  +
mov eax [edi] +
push edi  +
call dword ptr [eax+90h]  +
mov esi eax +
test esi esi +
jge loc_1014D63  +
push esi  +
push 3E5h  +
push offset aDwzxmlgetnodes  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1014D71  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
test ebx ebx +
jz loc_1014D7C  +
push ebx  +
call ds:SysFreeString  +
pop ebx  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014D8B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
push esi  +
test eax eax +
jnz loc_1014DCC  +
mov eax 80070057h +
push eax  +
push 411h  +
push offset aDwzxmlnextnode  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014E31  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_1014DE1  +
mov eax 80070057h +
push eax  +
push 412h  +
jmp loc_1014E1A  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jge loc_1014DF9  +
push esi  +
push 415h  +
jmp loc_1014E1C  +
cmp esi 1 +
jz loc_1014E0F  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014E0F  +
mov [edi] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1014E30  +
mov eax 80004005h +
push eax  +
push 419h  +
mov esi eax +
push offset aDwzxmlnextnode  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014E3E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
xor eax eax +
push edi  +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] eax +
jnz loc_1014E83  +
mov eax 80070057h +
push eax  +
push 4B8h  +
push offset aDwzxmlgetattri  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014F4A  +
cmp [ebp+arg_4] eax +
jnz loc_1014E95  +
mov eax 80070057h +
push eax  +
push 4B9h  +
jmp loc_1014E68  +
mov edi [ebp+arg_0] +
cmp edi eax +
jnz loc_1014EA9  +
mov eax 80070057h +
push eax  +
push 4BAh  +
jmp loc_1014E68  +
push ebx  +
push esi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push [ebp+arg_4]  +
mov esi ds:SysAllocString +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_1014ED3  +
mov eax 8007000Eh +
push eax  +
push 4BFh  +
jmp loc_1014F27  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1009454  +
push edi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jge loc_1014EEF  +
push edi  +
push 4C2h  +
jmp loc_1014F29  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov edi eax +
test edi edi +
jge loc_1014F0E  +
push edi  +
push 4C8h  +
jmp loc_1014F29  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
call esi  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
test eax eax +
jnz loc_1014F3D  +
mov eax 8007000Eh +
push eax  +
push 4CBh  +
mov edi eax +
push offset aDwzxmlgetattri  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test ebx ebx +
jz loc_1014F48  +
push ebx  +
call ds:SysFreeString  +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1014F5B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
push esi  +
xor edi edi +
call ds:VariantClear  +
push [ebp+arg_4]  +
call ds:SysAllocString  +
mov [esi+8] eax +
cmp [ebp+arg_4] edi +
jz loc_1014FBC  +
cmp eax edi +
jnz loc_1014FBC  +
mov eax 8007000Eh +
push eax  +
push 538h  +
push offset aAssignvariants  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1014FC2  +
push 8  +
pop eax  +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
cmp [ebp+arg_0] edi +
jnz loc_101500F  +
mov eax 80070057h +
push eax  +
push 564h  +
push offset aDwzgetsingleno  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_10150E2  +
cmp [ebp+arg_C] edi +
jnz loc_1015021  +
mov eax 80070057h +
push eax  +
push 565h  +
jmp loc_1014FF4  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1014C90  +
mov ebx [ebp+var_8] +
mov esi eax +
cmp esi edi +
jge loc_1015059  +
push esi  +
push 568h  +
push offset aDwzgetsingleno  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10150D7  +
mov eax [ebx] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
mov esi eax +
test esi esi +
jge loc_1015071  +
push esi  +
push 56Bh  +
jmp loc_1015043  +
mov eax [ebp+var_C] +
sub eax 0 +
jz loc_10150CA  +
dec eax  +
jz loc_101508B  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 57Ah  +
jmp loc_1015043  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_1014D97  +
mov esi eax +
test esi esi +
jge loc_10150BA  +
push esi  +
push 57Eh  +
push offset aDwzgetsingleno  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
mov edi [ebp+var_4] +
add esp 14h +
jmp loc_10150CD  +
mov edi [ebp+var_4] +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
jmp loc_10150CD  +
xor esi esi +
inc esi  +
test edi edi +
jz loc_10150D7  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
test ebx ebx +
jz loc_10150E1  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push [ebp+arg_4]  +
mov esi ds:SysAllocString +
call esi  +
cmp [ebp+arg_4] 0 +
mov ebx eax +
jnz loc_101512D  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 5B6h  +
jmp loc_10151EF  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+0BCh]  +
mov edi eax +
test edi edi +
jge loc_101514F  +
push edi  +
push 5B9h  +
jmp loc_10151EF  +
cmp [ebp+arg_8] 0 +
jz loc_1015192  +
test ebx ebx +
jz loc_1015160  +
push ebx  +
call ds:SysFreeString  +
push [ebp+arg_8]  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_101517A  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 5BFh  +
jmp loc_10151EF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov edi eax +
test edi edi +
jge loc_1015192  +
push edi  +
push 5C2h  +
jmp loc_10151EF  +
cmp [ebp+arg_C] 0 +
jz loc_1015205  +
cmp [ebp+arg_10] 0 +
jz loc_1015205  +
test ebx ebx +
jz loc_10151A9  +
push ebx  +
call ds:SysFreeString  +
push [ebp+arg_C]  +
call esi  +
push [ebp+arg_10]  +
mov ebx eax +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov edi eax +
test edi edi +
jge loc_10151CA  +
push edi  +
push 5CCh  +
jmp loc_10151EF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
push eax  +
movs   +
call dword ptr [ecx+0B4h]  +
mov edi eax +
test edi edi +
jge loc_1015205  +
push edi  +
push 5CFh  +
push offset aDwzxmlcreateel  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1015211  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_14] +
and [ebp+var_4] 0 +
mov [ecx] eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1015222  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
test ebx ebx +
jz loc_101522D  +
push ebx  +
call ds:SysFreeString  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push off_104E010  +
mov esi ds:SysAllocString +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_101527D  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 601h  +
jmp loc_10152C4  +
push 8  +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call esi  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_101529F  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 605h  +
jmp loc_10152C4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
push eax  +
movs   +
call dword ptr [ecx+140h]  +
mov esi eax +
test esi esi +
jge loc_10152D8  +
push esi  +
push 608h  +
push offset aDwzxmlsetselec  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
test ebx ebx +
jz loc_10152ED  +
push ebx  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_101532E  +
mov eax 80070057h +
push eax  +
push 695h  +
push offset aDwzstringtrim  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_101543C  +
cmp [ebp+arg_4] 0 +
jnz loc_1015341  +
mov eax 80070057h +
push eax  +
push 696h  +
jmp loc_1015313  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1015346  +
push esi  +
sub eax edx +
sar eax 1 +
push 0  +
pop ecx  +
jz loc_101537B  +
movzx edx word ptr [ebx+ecx*2] +
push 20h  +
pop esi  +
cmp si dx +
jz loc_1015376  +
push 0Ah  +
pop esi  +
cmp si dx +
jz loc_1015376  +
push 9  +
pop esi  +
cmp si dx +
jnz loc_101537B  +
inc ecx  +
cmp ecx eax +
jb loc_101535A  +
lea ebx [ebx+ecx*2] +
mov eax ebx +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1015383  +
sub eax ecx +
push edi  +
sar eax 1 +
lea edi [eax+1] +
lea eax [edi+edi] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_10153BD  +
mov eax 8007000Eh +
push eax  +
mov ebx eax +
push 6A5h  +
jmp loc_10153D6  +
push ebx  +
push edi  +
xor eax eax +
push esi  +
mov [esi] ax +
call sub_100D999  +
mov ebx eax +
test ebx ebx +
jge loc_10153EC  +
push ebx  +
push 6A9h  +
push offset aDwzstringtrim  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1015426  +
lea eax [edi-1] +
test eax eax +
jbe loc_1015419  +
lea ecx [esi+eax*2-2] +
movzx edx word ptr [ecx] +
push 20h  +
pop edi  +
cmp di dx +
jz loc_1015412  +
push 0Ah  +
pop edi  +
cmp di dx +
jz loc_1015412  +
push 9  +
pop edi  +
cmp di dx +
jnz loc_1015419  +
dec eax  +
dec ecx  +
dec ecx  +
test eax eax +
ja loc_10153F7  +
xor ecx ecx +
mov [esi+eax*2] cx +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor esi esi +
pop edi  +
test esi esi +
jz loc_101543B  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_54] eax +
push 1  +
lea eax [ebp+var_50] +
xor ebx ebx +
push eax  +
lea eax [ebp+var_48] +
push eax  +
mov byte ptr [ebp+var_50] bl +
mov byte ptr [ebp+var_50+1] bl +
mov byte ptr [ebp+var_50+2] bl +
mov byte ptr [ebp+var_50+3] bl +
mov [ebp+var_4C] bl +
mov [ebp+var_4B] 2 +
call ds:RtlInitializeSid  +
cmp eax ebx +
mov edi 80070000h +
jge loc_10154C6  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov esi eax +
cmp esi ebx +
jle loc_10154A8  +
and esi 0FFFFh +
or esi edi +
cmp esi ebx +
jge loc_10154C6  +
push esi  +
push 6E1h  +
push offset aDwzisphysicall  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1015507  +
push ebx  +
lea eax [ebp+var_48] +
push eax  +
call ds:RtlSubAuthoritySid  +
push [ebp+var_54]  +
mov dword ptr [eax] 1 +
lea eax [ebp+var_48] +
push eax  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_1015505  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10154FA  +
and eax 0FFFFh +
or eax edi +
mov esi eax +
cmp esi ebx +
jge loc_1015507  +
mov eax [ebp+var_54] +
mov [eax] ebx +
xor esi esi +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push edi  +
push 4  +
pop eax  +
xor ebx ebx +
xor edi edi +
mov [ebp+Type] eax +
mov [ebp+var_C] eax +
inc ebx  +
lea eax [ebp+var_8] +
mov [ebp+var_8] ebx +
mov [ebp+var_10] eax +
mov [ebp+lpMem] edi +
cmp [ebp+lpSubKey] edi +
jnz loc_101556D  +
mov eax 80070057h +
push eax  +
push 716h  +
push offset aCheckgrouppoli  +
push offset aDwzErrorSDHr0x  +
push ebx  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101562C  +
cmp [ebp+lpValueName] edi +
jnz loc_101557F  +
mov eax 80070057h +
push eax  +
push 717h  +
jmp loc_1015553  +
push esi  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+lpValueName]  +
lea eax [ebp+Type] +
push eax  +
push [ebp+lpSubKey]  +
push 80000002h  +
call sub_10142A6  +
cmp eax edi +
mov esi offset aCheckgrouppoli +
jge loc_10155BA  +
push eax  +
push 723h  +
push esi  +
push offset aDwzIgnoredSDHr  +
push ebx  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_8] edi +
jnz loc_1015613  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_10155E8  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 726h  +
jmp loc_1015604  +
push 400h  +
push eax  +
push 186h  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_1015634  +
push edi  +
push 729h  +
push esi  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
jz loc_101562B  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
push [ebp+lpMem]  +
mov ecx dword_104E188 +
call sub_1014115  +
mov eax 80070005h +
push eax  +
push 72Fh  +
push esi  +
push offset aDwzErrorSDHr0x  +
push ebx  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101562B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1015697  +
mov eax 80070057h +
push eax  +
push 34h  +
push offset aGettextfromnod  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015705  +
cmp [ebp+arg_4] ebx +
jnz loc_10156A6  +
mov eax 80070057h +
push eax  +
push 35h  +
jmp loc_101567F  +
cmp [ebp+arg_8] ebx +
jnz loc_10156B5  +
mov eax 80070057h +
push eax  +
push 36h  +
jmp loc_101567F  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
push [ebp+arg_0]  +
call sub_1014B70  +
mov edi [ebp+var_4] +
mov esi eax +
cmp esi ebx +
jge loc_10156D4  +
push esi  +
push 3Dh  +
jmp loc_10156E6  +
push [ebp+arg_8]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+68h]  +
mov esi eax +
cmp esi ebx +
jge loc_10156FA  +
push esi  +
push 40h  +
push offset aGettextfromnod  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp edi ebx +
jz loc_1015704  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor edi edi +
push eax  +
mov [ebp+var_4] edi +
call ds:VariantInit  +
cmp [ebp+arg_8] edi +
jnz loc_1015757  +
mov eax 80070057h +
push eax  +
push 4FAh  +
push offset aDwzxmlsetattri  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015825  +
cmp [ebp+arg_4] edi +
jnz loc_1015769  +
mov eax 80070057h +
push eax  +
push 4FBh  +
jmp loc_101573C  +
mov ebx [ebp+arg_0] +
cmp ebx edi +
jnz loc_101577D  +
mov eax 80070057h +
push eax  +
push 4FCh  +
jmp loc_101573C  +
push [ebp+arg_4]  +
mov esi ds:SysAllocString +
call esi  +
mov [ebp+arg_4] eax +
cmp eax edi +
jnz loc_101579E  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 4FFh  +
jmp loc_10157F5  +
push [ebp+arg_8]  +
call esi  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_10157B9  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 502h  +
jmp loc_10157F5  +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
cmp esi edi +
jge loc_10157D1  +
push esi  +
push 505h  +
jmp loc_10157F5  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+0B4h]  +
mov esi eax +
test esi esi +
jge loc_1015809  +
push esi  +
push 50Bh  +
push offset aDwzxmlsetattri  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+arg_4] 0 +
mov edi ds:SysFreeString +
jz loc_101581A  +
push [ebp+arg_4]  +
call edi  +
cmp [ebp+var_4] 0 +
jz loc_1015825  +
push [ebp+var_4]  +
call edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ds:SysAllocString +
mov esi ecx +
mov dword ptr [esi] offset off_100459C +
call edi  +
push [ebp+arg_4]  +
mov [esi+4] eax +
call edi  +
push [ebp+arg_8]  +
mov [esi+8] eax +
call edi  +
mov [esi+0Ch] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
push edi  +
mov edi ds:SysFreeString +
mov dword ptr [esi] offset off_100459C +
test eax eax +
jz loc_1015897  +
push eax  +
call edi  +
and dword ptr [esi+4] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_10158A5  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10158B3  +
push eax  +
call edi  +
and dword ptr [esi+0Ch] 0 +
pop edi  +
pop esi  +
retn   +
***
retn   +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+10h]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jbe loc_1015915  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
mov edx ecx +
mov eax edi +
cmp edi [ebp+arg_4] +
jnb loc_101590C  +
mov esi [edx] +
test esi esi +
jnz loc_10158FA  +
cmp [ecx+eax*4] esi +
jnz loc_1015902  +
inc eax  +
cmp eax [ebp+arg_4] +
jb loc_10158F1  +
jmp loc_101590C  +
lea eax [ecx+eax*4] +
mov esi [eax] +
mov [edx] esi +
and dword ptr [eax] 0 +
inc edi  +
add edx 4 +
dec ebx  +
jnz loc_10158E8  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
cmp [ebp+arg_4] eax +
jbe loc_1015929  +
cmp dword ptr [ecx+eax*4] 0 +
jz loc_1015929  +
inc eax  +
cmp eax [ebp+arg_4] +
jb loc_101591D  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+10h] +
retn   +
***
mov eax [ecx+14h] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor ebx ebx +
mov esi ecx +
test edi edi +
jnz loc_1015969  +
mov eax 8000FFFFh +
push eax  +
push 332h  +
jmp loc_1015980  +
mov eax [esi] +
call dword ptr [eax+14h]  +
mov ecx [ebp+8] +
cmp ecx eax +
jb loc_1015998  +
mov eax 8002000Bh +
push eax  +
push 336h  +
push offset aRootcausecolle  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_10159A9  +
mov eax [esi+8] +
mov eax [eax+ecx*4] +
test eax eax +
jnz loc_10159A7  +
mov ebx 80004003h +
mov [edi] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor edi edi +
call dword ptr [eax+18h]  +
mov ecx [ebp+8] +
cmp ecx eax +
jb loc_10159F1  +
mov eax 8002000Bh +
push eax  +
push 364h  +
push offset aRootcausecol_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015A05  +
mov eax [esi+0Ch] +
mov eax [eax+ecx*4] +
test eax eax +
jnz loc_1015A00  +
mov edi 80004003h +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
xor ebx ebx +
cmp [esi+24h] edi +
jbe loc_1015A3C  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
test eax eax +
jnz loc_1015A39  +
inc edi  +
cmp edi [esi+24h] +
jb loc_1015A22  +
jmp loc_1015A3C  +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ebx ebx +
xor edi edi +
cmp [esi+24h] ebx +
jbe loc_1015A6A  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
add ebx eax +
inc edi  +
cmp edi [esi+24h] +
jb loc_1015A57  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ebx ebx +
xor edi edi +
cmp [esi+24h] ebx +
jbe loc_1015A98  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
add ebx eax +
inc edi  +
cmp edi [esi+24h] +
jb loc_1015A85  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp-4] edi +
mov [ebp-8] edi +
cmp [ebp+0Ch] edi +
jnz loc_1015AE2  +
mov eax 80070057h +
push eax  +
push 90Bh  +
push offset aMetarootcausec  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015B63  +
mov eax [esi] +
push ebx  +
call dword ptr [eax+14h]  +
mov ebx [ebp+8] +
cmp ebx eax +
jb loc_1015B13  +
mov eax 8002000Bh +
push eax  +
push 90Fh  +
push offset aMetarootcausec  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015B62  +
cmp [esi+24h] edi +
jbe loc_1015B4F  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
cmp ebx eax +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
jb loc_1015B3C  +
call dword ptr [eax+14h]  +
sub ebx eax +
inc edi  +
cmp edi [esi+24h] +
jb loc_1015B18  +
jmp loc_1015B4F  +
lea edx [ebp-8] +
push edx  +
push ebx  +
call dword ptr [eax+8]  +
mov [ebp-4] eax +
test eax eax +
jge loc_1015B4F  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-8] +
test eax eax +
jnz loc_1015B5D  +
mov dword ptr [ebp-4] 80004003h +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
pop ebx  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
mov [ebp-4] edi +
mov [ebp-8] edi +
call dword ptr [eax+18h]  +
mov ebx [ebp+8] +
cmp ebx eax +
jb loc_1015BB5  +
mov eax 8002000Bh +
push eax  +
push 953h  +
push offset aMetarootcaus_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1015C04  +
cmp [esi+24h] edi +
jbe loc_1015BF1  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp ebx eax +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
jb loc_1015BDE  +
call dword ptr [eax+18h]  +
sub ebx eax +
inc edi  +
cmp edi [esi+24h] +
jb loc_1015BBA  +
jmp loc_1015BF1  +
lea edx [ebp-8] +
push edx  +
push ebx  +
call dword ptr [eax+0Ch]  +
mov [ebp-4] eax +
test eax eax +
jge loc_1015BF1  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-8] +
test eax eax +
jnz loc_1015BFF  +
mov dword ptr [ebp-4] 80004003h +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
mov edi ds:HeapFree +
test eax eax +
jz loc_1015C39  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1015C4C  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0Ch] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
cmp [ecx+2Ch] eax +
jz loc_1015C60  +
push 3  +
jmp loc_1015C70  +
cmp [ecx+28h] eax +
jz loc_1015C69  +
xor eax eax +
inc eax  +
retn   +
cmp [ecx+20h] eax +
jz loc_1015C72  +
push 2  +
pop eax  +
retn   +
mov eax [ecx+1Ch] +
neg eax  +
sbb eax eax +
add eax 5 +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
cmp eax [ecx+0Ch] +
jb loc_1015CBB  +
push 8002000Bh  +
push 0DAEh  +
push offset aResolutionsGet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1015CC1  +
mov ecx [ecx+8] +
mov esi [ecx+eax*4] +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+24h] eax +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov ebx ecx +
test eax eax +
jnz loc_1015D1A  +
mov esi 80070057h +
push esi  +
push 0E58h  +
jmp loc_1015D54  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Extensionpoin  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jge loc_1015D3A  +
push esi  +
push 0E5Eh  +
jmp loc_1015D54  +
cmp esi 1 +
jz loc_1015D77  +
lea eax [ebp+var_4] +
push eax  +
call sub_1015448  +
mov esi eax +
test esi esi +
jge loc_1015D6A  +
push esi  +
push 0E64h  +
push offset aResolutionPhys  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1015D79  +
cmp [ebp+var_4] 0 +
jnz loc_1015D77  +
mov dword ptr [ebx+30h] 1 +
xor esi esi +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1015D86  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
xor edx edx +
xor eax eax +
cmp [ecx+28h] edx +
jz loc_1015D9F  +
push 2  +
pop eax  +
cmp [ecx+2Ch] edx +
jz loc_1015DA7  +
push 4  +
pop eax  +
cmp [ecx+18h] edx +
jz loc_1015DAF  +
push 6  +
pop eax  +
cmp [ecx+30h] edx +
jz locret_1015DCD  +
mov ecx eax +
sub ecx edx +
jz loc_1015DCA  +
dec ecx  +
dec ecx  +
jz loc_1015DC6  +
dec ecx  +
dec ecx  +
jnz locret_1015DCD  +
push 5  +
pop eax  +
retn   +
push 3  +
pop eax  +
retn   +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_1015DF3  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jl loc_1015E0F  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
jmp loc_1015E1A  +
mov eax [ebp+arg_4] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ecx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysAllocString  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysAllocString  +
mov [esi+4] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysAllocString  +
mov [esi+8] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+30h] +
test eax eax +
jz loc_1015EB3  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+30h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+30h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+34h] +
test eax eax +
jz loc_1015EEC  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+34h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+34h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+30h] +
test eax eax +
jz loc_1015F1C  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+30h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+30h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1015877  +
test byte ptr [ebp+8] 1 +
jz loc_1015F4C  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov dword ptr [esi] offset off_10046E4 +
cmp [esi+8] edi +
jz loc_1015F97  +
xor ebx ebx +
cmp [esi+10h] edi +
jbe loc_1015F97  +
mov eax [esi+8] +
lea eax [eax+ebx*4] +
cmp [eax] edi +
jz loc_1015F91  +
mov eax [eax] +
cmp eax edi +
jz loc_1015F8B  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+8] +
mov [eax+ebx*4] edi +
inc ebx  +
cmp ebx [esi+10h] +
jb loc_1015F73  +
mov eax [esi+8] +
cmp eax edi +
jz loc_1015FB0  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+8] edi +
cmp [esi+0Ch] edi +
jz loc_1015FE0  +
xor ebx ebx +
cmp [esi+14h] edi +
jbe loc_1015FE0  +
mov eax [esi+0Ch] +
lea eax [eax+ebx*4] +
cmp [eax] edi +
jz loc_1015FDA  +
mov eax [eax] +
cmp eax edi +
jz loc_1015FD4  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+0Ch] +
mov [eax+ebx*4] edi +
inc ebx  +
cmp ebx [esi+14h] +
jb loc_1015FBC  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1015FF9  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+0Ch] edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ecx+18h] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_8] +
xor edi edi +
push eax  +
mov [ebp+lpMem] edi +
mov [ebp+var_8] edi +
call sub_1031307  +
mov ebx eax +
cmp ebx edi +
jge loc_1016055  +
push ebx  +
push 23Fh  +
push offset aRootcausecol_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10160F1  +
mov eax [ebp+var_8] +
cmp [eax+7Ch] edi +
jbe loc_10160F1  +
push esi  +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov esi [eax+edi*4] +
cmp esi [ebp+arg_0] +
jz loc_10160C3  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1031471  +
mov ebx eax +
test ebx ebx +
jl loc_10160CE  +
mov eax [esi+30h] +
test eax eax +
jz loc_10160A7  +
push [ebp+arg_4]  +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1033AEB  +
mov ebx eax +
test ebx ebx +
jl loc_10160D6  +
push [ebp+lpMem]  +
mov ecx esi +
call sub_1015F02  +
cmp [ebp+lpMem] 0 +
jz loc_10160C3  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and [ebp+lpMem] 0 +
mov eax [ebp+var_8] +
inc edi  +
cmp edi [eax+7Ch] +
jb loc_1016062  +
jmp loc_10160F0  +
push ebx  +
push 24Fh  +
jmp loc_10160DC  +
push ebx  +
push 256h  +
push offset aRootcausecol_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
cmp [ebp+lpMem] 0 +
jz loc_1016109  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016176  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_101615C  +
mov eax [ebp+var_4] +
mov eax [eax+18h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_101614E  +
inc ebx  +
mov eax [esi] +
mov ecx esi +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_1016131  +
jmp loc_1016176  +
push eax  +
push 2CBh  +
push offset aRootcausecol_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor ebx ebx +
xor edi edi +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_10161DE  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_10161C4  +
mov eax [ebp+var_4] +
mov eax [eax+18h] +
add edi [eax+0Ch] +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_101619D  +
jmp loc_10161DE  +
push eax  +
push 30Ch  +
push offset aRootcausecol_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016262  +
push edi  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1016247  +
mov eax [ebp+var_4] +
mov ecx [eax+18h] +
xor edi edi +
cmp [ecx+0Ch] edi +
jbe loc_1016239  +
push edi  +
call sub_1015C8B  +
mov dword ptr [eax+24h] 1 +
mov eax [ebp+var_4] +
mov ecx [eax+18h] +
inc edi  +
cmp edi [ecx+0Ch] +
jb loc_1016220  +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_1016203  +
jmp loc_1016261  +
push eax  +
push 390h  +
push offset aRootcausecol_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
xor ebx ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_10162D7  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax edi +
jl loc_10162BD  +
mov eax [ebp+var_8] +
cmp [eax+1Ch] edi +
jz loc_10162AF  +
cmp [eax+20h] edi +
jnz loc_10162AF  +
cmp [eax+28h] edi +
jnz loc_10162AF  +
inc [ebp+var_4]  +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_101628A  +
jmp loc_10162D7  +
push eax  +
push 3E1h  +
push offset aRootcausecol_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ecx+4] eax +
mov [eax+6Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor eax eax +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov [ebp+var_10] eax +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
mov [esi+1Ch] eax +
cmp edi eax +
jz loc_1016526  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test eax eax +
jz loc_1016526  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ebx eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
add ebx eax +
mov eax ebx +
shl eax 2 +
push eax  +
push 8  +
mov [ebp+var_C] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1016371  +
mov eax 8007000Eh +
push eax  +
push 437h  +
jmp loc_101650D  +
mov eax [esi] +
and [ebp+arg_0] 0 +
mov ecx esi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016446  +
mov ebx [ebp+arg_0] +
mov eax [esi+8] +
shl ebx 2 +
mov eax [ebx+eax] +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_1016502  +
mov eax [edi] +
and [ebp+var_8] 0 +
mov ecx edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016415  +
mov eax [edi+8] +
mov ecx [ebp+var_8] +
mov eax [eax+ecx*4] +
mov [ebp+var_18] eax +
test eax eax +
jz loc_1016406  +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_18] +
mov [ebp+var_14] eax +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov cx [eax] +
mov edx [ebp+var_14] +
cmp cx [edx] +
jnz loc_10163F9  +
test cx cx +
jz loc_10163F5  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_10163F9  +
add edx 4 +
add eax 4 +
mov [ebp+var_14] edx +
test cx cx +
jnz loc_10163CD  +
xor eax eax +
jmp loc_10163FE  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10164C4  +
mov eax [edi] +
inc [ebp+var_8]  +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp [ebp+var_8] eax +
jb loc_10163AA  +
mov eax [esi+8] +
mov eax [ebx+eax] +
mov ecx [ebp+var_4] +
mov [ebx+ecx] eax +
mov eax [esi+8] +
and dword ptr [ebx+eax] 0 +
xor eax eax +
inc eax  +
mov [esi+1Ch] eax +
mov dword_104E004 eax +
mov eax [esi] +
inc [ebp+arg_0]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+arg_0] eax +
jb loc_1016384  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
and [ebp+arg_0] 0 +
mov ebx eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_101649B  +
mov edx [ebp+arg_0] +
mov eax [edi+8] +
shl edx 2 +
cmp dword ptr [edx+eax] 0 +
jz loc_101648C  +
mov eax [edx+eax] +
mov ecx [ebp+var_4] +
lea ecx [ecx+ebx*4] +
mov [ecx] eax +
mov [eax+38h] esi +
mov eax [ecx] +
mov dword ptr [eax+24h] 1 +
mov eax [edi+8] +
and dword ptr [edx+eax] 0 +
inc ebx  +
mov eax [edi] +
inc [ebp+arg_0]  +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp [ebp+arg_0] eax +
jb loc_101645E  +
mov eax [esi+8] +
test eax eax +
jz loc_10164B6  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+8] 0 +
mov eax [ebp+var_4] +
mov [esi+8] eax +
mov [esi+10h] ebx +
jmp loc_1016583  +
mov eax [edi+8] +
mov ecx [ebp+var_8] +
and dword ptr [eax+ecx*4] 0 +
mov eax [esi+8] +
add eax ebx +
cmp dword ptr [eax] 0 +
jz loc_10164ED  +
mov eax [eax] +
test eax eax +
jz loc_10164E6  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+8] +
and dword ptr [ebx+eax] 0 +
mov eax [ebp+var_18] +
mov ecx [ebp+var_4] +
mov [ebx+ecx] eax +
and dword ptr [eax+24h] 0 +
mov [eax+38h] esi +
jmp loc_1016433  +
mov eax 8000FFFFh +
push eax  +
push 440h  +
push offset aRootcausecol_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_10] eax +
call sub_1014247  +
add esp 14h +
jmp loc_101654D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
xor ecx ecx +
cmp ecx eax +
sbb eax eax +
neg eax  +
mov [esi+1Ch] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016583  +
mov dword_104E004 1 +
mov ebx [ebp+var_4] +
xor edi edi +
cmp ebx edi +
jz loc_1016583  +
cmp [ebp+var_C] edi +
jbe loc_1016573  +
lea esi [ebx+edi*4] +
mov ecx [esi] +
test ecx ecx +
jz loc_101656D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi] 0 +
inc edi  +
cmp edi [ebp+var_C] +
jb loc_101655B  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and [ebp+var_C] 0 +
and [ebp+var_20] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
test edi edi +
jz loc_1016898  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_1016898  +
mov eax [edi] +
push ebx  +
mov ecx edi +
call dword ptr [eax+18h]  +
mov ebx eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
add ebx eax +
mov eax ebx +
shl eax 2 +
push eax  +
push 8  +
mov [ebp+var_14] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1016602  +
mov eax 8007000Eh +
push eax  +
push 4B2h  +
jmp loc_10168AC  +
mov eax [esi] +
and [ebp+arg_0] 0 +
mov ecx esi +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_10166CC  +
mov ebx [ebp+arg_0] +
mov eax [esi+0Ch] +
shl ebx 2 +
mov eax [ebx+eax] +
mov [ebp+var_10] eax +
test eax eax +
jz loc_10167D3  +
mov eax [edi] +
and [ebp+var_4] 0 +
mov ecx edi +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_10166A6  +
mov eax [edi+0Ch] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx*4] +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_1016697  +
mov ecx [ebp+var_10] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_1C] +
mov [ebp+var_18] eax +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov cx [eax] +
mov edx [ebp+var_18] +
cmp cx [edx] +
jnz loc_101668A  +
test cx cx +
jz loc_1016686  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_101668A  +
add edx 4 +
add eax 4 +
mov [ebp+var_18] edx +
test cx cx +
jnz loc_101665E  +
xor eax eax +
jmp loc_101668F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1016799  +
mov eax [edi] +
inc [ebp+var_4]  +
mov ecx edi +
call dword ptr [eax+18h]  +
cmp [ebp+var_4] eax +
jb loc_101663B  +
mov eax [esi+0Ch] +
mov eax [ebx+eax] +
mov ecx [ebp+var_8] +
mov [ebx+ecx] eax +
mov eax [esi+0Ch] +
and dword ptr [ebx+eax] 0 +
mov eax [esi] +
inc [ebp+arg_0]  +
mov ecx esi +
call dword ptr [eax+18h]  +
cmp [ebp+arg_0] eax +
jb loc_1016615  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
and [ebp+arg_0] 0 +
mov ebx eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_1016716  +
mov ecx [ebp+arg_0] +
mov eax [edi+0Ch] +
shl ecx 2 +
cmp dword ptr [ecx+eax] 0 +
jz loc_1016707  +
mov eax [ecx+eax] +
mov edx [ebp+var_8] +
mov [edx+ebx*4] eax +
mov [eax+38h] esi +
mov eax [edi+0Ch] +
and dword ptr [ecx+eax] 0 +
inc ebx  +
mov eax [edi] +
inc [ebp+arg_0]  +
mov ecx edi +
call dword ptr [eax+18h]  +
cmp [ebp+arg_0] eax +
jb loc_10166E4  +
xor edi edi +
mov [ebp+var_1C] ebx +
mov [ebp+arg_0] edi +
cmp ebx edi +
jbe loc_1016827  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
lea eax [ecx+eax*4] +
mov edi [eax] +
mov [ebp+var_18] eax +
mov [ebp+var_10] edi +
test edi edi +
jz loc_10168A1  +
mov eax [esi] +
and [ebp+var_4] 0 +
mov ecx esi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016816  +
mov eax [esi+8] +
mov ecx [ebp+var_4] +
mov ebx [eax+ecx*4] +
test ebx ebx +
jz loc_10167EF  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+4]  +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+4]  +
mov cx [eax] +
cmp cx [edi] +
jnz loc_10167E3  +
test cx cx +
jz loc_1016795  +
mov cx [eax+2] +
cmp cx [edi+2] +
jnz loc_10167E3  +
add eax 4 +
add edi 4 +
test cx cx +
jnz loc_1016773  +
xor eax eax +
jmp loc_10167E8  +
mov eax [edi+0Ch] +
mov ecx [ebp+var_4] +
and dword ptr [eax+ecx*4] 0 +
mov eax [esi+0Ch] +
add eax ebx +
cmp dword ptr [eax] 0 +
jz loc_10167C2  +
mov eax [eax] +
test eax eax +
jz loc_10167BB  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+0Ch] +
and dword ptr [ebx+eax] 0 +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_8] +
mov [ebx+ecx] eax +
mov [eax+38h] esi +
jmp loc_10166B9  +
mov eax 8000FFFFh +
push eax  +
push 4BBh  +
jmp loc_10168AC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1016804  +
mov edi [ebp+var_10] +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_1016752  +
jmp loc_1016816  +
mov edi [ebp+var_18] +
mov ecx [edi] +
test ecx ecx +
jz loc_1016816  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [edi] 0 +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_1C] +
jb loc_1016726  +
xor edi edi +
mov ebx [ebp+var_8] +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_1C]  +
mov ecx esi +
push ebx  +
call sub_10158D1  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_1016852  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+0Ch] edi +
mov eax [ebp+var_20] +
mov [esi+0Ch] ebx +
mov [ebp+var_8] edi +
mov [ebp+var_14] edi +
mov [esi+14h] eax +
mov ebx [ebp+var_8] +
xor esi esi +
cmp ebx esi +
jz loc_1016897  +
cmp [ebp+var_14] esi +
jbe loc_1016887  +
lea edi [ebx+esi*4] +
mov ecx [edi] +
test ecx ecx +
jz loc_1016881  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [edi] 0 +
inc esi  +
cmp esi [ebp+var_14] +
jb loc_101686F  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov eax 8000FFFFh +
push eax  +
push 4EDh  +
push offset aRootcausecol_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_C] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1016861  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_24] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_1C] ecx +
mov [ebp+var_24] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
mov [ebp+var_20] edi +
mov [ebp+var_28] edi +
mov [ebp+var_10] edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
call sub_101484F  +
mov esi eax +
cmp esi edi +
jge loc_101690E  +
push esi  +
push 56Fh  +
jmp loc_1016961  +
lea eax [ebp+var_18] +
push eax  +
push edi  +
push [ebp+var_24]  +
push offset aRootcausesRoot  +
call sub_1014C90  +
mov esi eax +
cmp esi edi +
jge loc_101692E  +
push esi  +
push 572h  +
jmp loc_1016961  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_1016949  +
push esi  +
push 575h  +
jmp loc_1016961  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_28]  +
call sub_1015DFA  +
mov esi eax +
cmp esi edi +
jge loc_101697A  +
push esi  +
push 578h  +
push offset aRootcausecol_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016B8C  +
mov [ebp+arg_0] edi +
cmp [ebp+var_20] edi +
jbe loc_1016B8C  +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_18]  +
call sub_1014D97  +
mov esi eax +
cmp esi edi +
jl loc_1016B49  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset a_Id  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_1016B51  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_1016B59  +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_10169E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset a_Status  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_1016B61  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_1016B69  +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
xor ebx ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016AF6  +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
lea edx [ebp+var_8] +
push edx  +
push ebx  +
call dword ptr [eax+8]  +
mov esi eax +
cmp esi edi +
jl loc_1016B71  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_10] +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_1016A73  +
cmp dx di +
jz loc_1016A6F  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_1016A73  +
add ecx 4 +
add eax 4 +
cmp dx di +
jnz loc_1016A4D  +
xor eax eax +
jmp loc_1016A78  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_1016AE5  +
push offset aFixed  +
push [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016AA2  +
mov eax [ebp+var_8] +
mov dword ptr [eax+1Ch] 1 +
mov eax [ebp+var_8] +
mov [eax+28h] edi +
jmp loc_1016AE5  +
push offset aNotFixed  +
push [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016AC4  +
mov eax [ebp+var_8] +
mov [eax+28h] edi +
mov eax [ebp+var_8] +
mov [eax+1Ch] edi +
jmp loc_1016AE5  +
push offset aDetected  +
push [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016AE5  +
mov ecx [ebp+var_8] +
inc eax  +
mov [ecx+1Ch] eax +
mov ecx [ebp+var_8] +
mov [ecx+28h] eax +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_1016A2B  +
cmp [ebp+var_10] edi +
jz loc_1016B07  +
push [ebp+var_10]  +
call ds:SysFreeString  +
mov [ebp+var_10] edi +
cmp [ebp+var_4] edi +
jz loc_1016B18  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_1016B28  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1016B38  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_20] +
jb loc_1016987  +
jmp loc_1016B8B  +
push esi  +
push 583h  +
jmp loc_1016B77  +
push esi  +
push 586h  +
jmp loc_1016B77  +
push esi  +
push 589h  +
jmp loc_1016B77  +
push esi  +
push 58Eh  +
jmp loc_1016B77  +
push esi  +
push 591h  +
jmp loc_1016B77  +
push esi  +
push 598h  +
push offset aRootcausecol_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
cmp [ebp+var_10] edi +
jz loc_1016B9D  +
push [ebp+var_10]  +
call ds:SysFreeString  +
mov [ebp+var_10] edi +
cmp [ebp+var_4] edi +
jz loc_1016BAE  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_1016BBE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
mov eax [ebp+var_18] +
cmp eax edi +
jz loc_1016BCE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] edi +
mov eax [ebp+var_24] +
cmp eax edi +
jz loc_1016BDB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
cmp [ebp+arg_4] edi +
jnz loc_1016C27  +
mov eax 80070057h +
push eax  +
push 677h  +
push offset aRootcausecol_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1016CAC  +
push ebx  +
call sub_1016182  +
mov ebx [ebp+arg_0] +
cmp ebx eax +
jb loc_1016C44  +
mov eax 80028CA1h +
push eax  +
mov [ebp+var_4] eax +
push 67Bh  +
jmp loc_1016C85  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016CAB  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1016C7F  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
mov ecx [ecx+0Ch] +
cmp ebx ecx +
jb loc_1016C9B  +
mov eax [esi] +
sub ebx ecx +
mov ecx esi +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_1016C4F  +
jmp loc_1016CAB  +
push eax  +
push 680h  +
push offset aRootcausecol_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016CAB  +
mov eax [eax+18h] +
push ebx  +
mov ecx eax +
call sub_1015C8B  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016D4B  +
push edi  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
jl loc_1016D30  +
mov eax [ebp+var_8] +
cmp [eax+1Ch] ebx +
jnz loc_1016D1F  +
mov ecx [eax+18h] +
xor edi edi +
cmp [ecx+0Ch] ebx +
jbe loc_1016D1F  +
push edi  +
call sub_1015C8B  +
cmp [eax+30h] ebx +
jnz loc_1016D18  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
inc edi  +
cmp edi [ecx+0Ch] +
jb loc_1016CFF  +
jmp loc_1016D1F  +
mov [ebp+var_C] 1 +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_1016CDB  +
jmp loc_1016D4A  +
push eax  +
push 6B2h  +
push offset aRootcauseco_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax [ebp+var_C] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016DE6  +
mov [ebp+var_C] 1 +
push edi  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
jl loc_1016DC6  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
xor edi edi +
cmp [ecx+0Ch] ebx +
jbe loc_1016DB5  +
push edi  +
call sub_1015C8B  +
cmp [eax+30h] ebx +
jz loc_1016DE2  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
inc edi  +
cmp edi [ecx+0Ch] +
jb loc_1016D9E  +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_1016D7F  +
jmp loc_1016DE5  +
push eax  +
push 6E9h  +
push offset aRootcauseco_11  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016DE5  +
mov [ebp+var_C] ebx +
pop edi  +
mov eax [ebp+var_C] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
xor esi esi +
and [ebp+var_4] esi +
push eax  +
mov edi ecx +
call sub_102E866  +
test eax eax +
jge loc_1016E2A  +
push eax  +
push 713h  +
push offset aRootcauseco_12  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016E54  +
mov ecx edi +
call sub_1016182  +
xor ecx ecx +
cmp ecx eax +
sbb esi esi +
neg esi  +
cmp [ebp+var_4] ecx +
jnz loc_1016E54  +
mov eax dword_104E188 +
cmp [eax] ecx +
jnz loc_1016E54  +
mov ecx edi +
call sub_1016D57  +
test eax eax +
jz loc_1016E54  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016F03  +
push ebx  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax edi +
jl loc_1016EDF  +
mov eax [ebp+var_8] +
cmp [eax+1Ch] edi +
jnz loc_1016ECE  +
mov ecx [eax+18h] +
xor ebx ebx +
cmp [ecx+0Ch] edi +
jbe loc_1016ECE  +
push ebx  +
call sub_1015C8B  +
cmp [eax+28h] edi +
jz loc_1016EB8  +
cmp [eax+34h] edi +
jz loc_1016EC2  +
cmp [eax+30h] edi +
jnz loc_1016EC2  +
cmp [eax+20h] edi +
jz loc_1016EFB  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
inc ebx  +
cmp ebx [ecx+0Ch] +
jb loc_1016EA8  +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_1016E84  +
jmp loc_1016F02  +
push eax  +
push 73Fh  +
push offset aRootcauseco_13  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016F02  +
mov [ebp+var_C] 1 +
pop ebx  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
xor edi edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1016F7F  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
jl loc_1016F60  +
mov eax [ebp+var_8] +
cmp [eax+1Ch] ebx +
jnz loc_1016F52  +
cmp [eax+20h] ebx +
jz loc_1016F7C  +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx esi +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_1016F2E  +
jmp loc_1016F7F  +
push eax  +
push 77Bh  +
push offset aRootcauseco_14  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1016F7F  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017018  +
push edi  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
jl loc_1016FF4  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
xor edi edi +
cmp [ecx+0Ch] ebx +
jbe loc_1016FE3  +
push edi  +
call sub_1015C8B  +
cmp [eax+20h] ebx +
jnz loc_1017010  +
mov eax [ebp+var_8] +
mov ecx [eax+18h] +
inc edi  +
cmp edi [ecx+0Ch] +
jb loc_1016FCC  +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_1016FAD  +
jmp loc_1017017  +
push eax  +
push 7B1h  +
push offset aRootcauseco_15  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017017  +
mov [ebp+var_C] 1 +
pop edi  +
mov eax [ebp+var_C] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
call dword ptr [eax+14h]  +
mov edi eax +
mov eax [esi] +
neg edi  +
sbb edi edi +
xor ebx ebx +
mov ecx esi +
inc edi  +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017091  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1017072  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+24h] 0 +
jz loc_101708E  +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_101704B  +
jmp loc_1017091  +
push eax  +
push 7DDh  +
push offset aRootcauseco_16  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017091  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017102  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_10170E3  +
mov ecx [ebp+var_4] +
call sub_1015C55  +
cmp eax 4 +
jz loc_10170FF  +
mov eax [esi] +
mov ecx esi +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_10170B8  +
jmp loc_1017102  +
push eax  +
push 806h  +
push offset aRootcauseco_17  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017102  +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ecx+24h] +
xor eax eax +
test esi esi +
jbe loc_1017147  +
mov edx [ecx+20h] +
push edi  +
mov edi [ebp+0Ch] +
push ebx  +
mov ebx [edx] +
cmp edi [ebx+4] +
jz loc_1017136  +
inc eax  +
add edx 4 +
cmp eax esi +
jb loc_1017125  +
jmp loc_1017145  +
mov ecx [ecx+20h] +
mov ecx [ecx+eax*4] +
mov eax [ecx] +
push edi  +
push dword ptr [ebp+8]  +
call dword ptr [eax+10h]  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+8] +
push edi  +
xor edi edi +
mov [ebp-8] ecx +
mov [ebp-4] edi +
mov [ebp-14h] edi +
mov [ebp-10h] edi +
mov [ebp-0Ch] edi +
cmp ebx edi +
jz loc_101728D  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_101717C  +
sub eax edx +
sar eax 1 +
jz loc_101728D  +
push esi  +
lea eax [ebp-10h] +
push eax  +
push 20h  +
push ebx  +
call sub_1014795  +
cmp eax edi +
mov [ebp-4] eax +
jl loc_1017253  +
xor esi esi +
inc esi  +
cmp eax esi +
jnz loc_10171B2  +
mov [ebp-14h] esi +
lea eax [ebp-0Ch] +
push eax  +
push 2Bh  +
push ebx  +
call sub_1014795  +
mov [ebp-4] eax +
cmp eax esi +
jnz loc_10171CC  +
mov dword ptr [ebp-4] 80004005h +
cmp [ebp-4] edi +
jl loc_101725B  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10171DA  +
sub eax edx +
sar eax 1 +
jz loc_1017245  +
mov eax [ebp-0Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10171F0  +
sub eax edx +
sar eax 1 +
jz loc_1017245  +
mov eax [ebp-8] +
cmp [eax+24h] edi +
jbe loc_1017245  +
mov eax [ebp-8] +
mov eax [eax+20h] +
mov esi [eax+edi*4] +
mov ecx [esi+4] +
mov eax [ecx] +
push ebx  +
call dword ptr [eax+4]  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1017232  +
mov eax [ebp-8] +
inc edi  +
cmp edi [eax+24h] +
jb loc_1017208  +
jmp loc_1017243  +
push dword ptr [ebp-0Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
mov [ebp-4] eax +
test eax eax +
jl loc_1017270  +
xor edi edi +
mov ebx [ebp-10h] +
cmp [ebp-14h] edi +
jz loc_1017191  +
jmp loc_101728C  +
push eax  +
push 9E3h  +
jmp loc_1017278  +
push dword ptr [ebp-4]  +
push 9F1h  +
push offset aMetarootcaus_1  +
push offset aDwzErrorSDHr0x  +
push esi  +
jmp loc_1017284  +
push dword ptr [ebp-4]  +
push 9FEh  +
push offset aMetarootcaus_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
xor eax eax +
mov esi ecx +
push edi  +
mov edi ds:HeapAlloc +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
mov dword ptr [esi+10h] 5 +
cmp [esi+8] eax +
jnz loc_10172F3  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
shl eax 2 +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov [esi+8] eax +
test eax eax +
jnz loc_10172F3  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 0A3Fh  +
jmp loc_10173BF  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1017325  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
shl eax 2 +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_1017325  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 0A45h  +
jmp loc_10173BF  +
mov ecx [esi] +
mov eax [ecx] +
xor edi edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017345  +
mov eax [esi+8] +
and dword ptr [eax+edi*4] 0 +
mov ecx [esi] +
mov eax [ecx] +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_1017332  +
mov ecx [esi] +
mov eax [ecx] +
xor edi edi +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_101736C  +
mov ecx [esi+0Ch] +
xor eax eax +
cmp [esi+4] eax +
setz al  +
mov [ecx+edi*4] eax +
mov ecx [esi] +
mov eax [ecx] +
inc edi  +
call dword ptr [eax+18h]  +
cmp edi eax +
jb loc_1017352  +
cmp dword ptr [esi+4] 0 +
jnz loc_10173AA  +
mov ecx [esi] +
mov eax [ecx] +
xor edi edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_10173AA  +
mov ecx [esi] +
mov eax [ecx] +
lea edx [ebp+var_8] +
push edx  +
push edi  +
call dword ptr [eax+8]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10173B9  +
mov ecx [ebp+var_8] +
mov eax [esi+8] +
mov ecx [ecx+24h] +
mov [eax+edi*4] ecx +
mov ecx [esi] +
mov eax [ecx] +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_101737F  +
mov dword ptr [esi+10h] 5 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push eax  +
push 0A59h  +
push offset aRootcauseitera  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10173B1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
cmp dword ptr [esi+8] 0 +
jnz loc_1017412  +
call sub_101729B  +
test eax eax +
jge loc_1017412  +
push eax  +
push 0A81h  +
push offset aRootcauseite_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017461  +
mov ecx [esi] +
mov eax [ecx] +
push edi  +
xor edi edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017435  +
mov eax [esi+8] +
cmp dword ptr [eax+edi*4] 0 +
jz loc_1017459  +
mov ecx [esi] +
mov eax [ecx] +
inc edi  +
call dword ptr [eax+14h]  +
cmp edi eax +
jb loc_1017420  +
mov ecx [esi] +
mov eax [ecx] +
xor edi edi +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_1017460  +
mov eax [esi+0Ch] +
cmp dword ptr [eax+edi*4] 0 +
jz loc_1017459  +
mov ecx [esi] +
mov eax [ecx] +
inc edi  +
call dword ptr [eax+18h]  +
cmp edi eax +
jb loc_1017442  +
jmp loc_1017460  +
mov [ebp+var_4] 1 +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_4] edi +
call sub_10173DA  +
test eax eax +
jnz loc_10174AA  +
mov edi 80004005h +
push edi  +
push 0AB6h  +
push offset aRootcauseite_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10176C3  +
push ebx  +
cmp [esi+4] edi +
jnz loc_10175C6  +
mov ecx [esi] +
mov eax [ecx] +
xor ebx ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_10174D5  +
mov eax [esi+8] +
mov ecx [esi] +
cmp [eax+ebx*4] edi +
mov eax [ecx] +
jz loc_10174E5  +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_10174C1  +
mov edi 80004005h +
push edi  +
push 0AC5h  +
jmp loc_10176AE  +
push [ebp+arg_0]  +
push ebx  +
call dword ptr [eax+8]  +
mov edi eax +
test edi edi +
jge loc_10174FD  +
push edi  +
push 0ABDh  +
jmp loc_10176AE  +
mov eax [esi+8] +
mov dword ptr [eax+ebx*4] 1 +
jmp loc_10176C2  +
mov ecx [esi] +
mov eax [ecx] +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+var_C] edi +
xor ebx ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_101758F  +
mov ecx [esi] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
call dword ptr [eax+8]  +
mov edi eax +
test edi edi +
jl loc_1017660  +
mov eax [esi+8] +
cmp dword ptr [eax+ebx*4] 0 +
jnz loc_1017575  +
mov ecx [ebp+var_4] +
call sub_1015C55  +
cmp [esi+10h] eax +
jnz loc_1017575  +
cmp [ebp+var_8] 0FFFFFFFFh +
mov eax [ecx] +
jz loc_101756C  +
call dword ptr [eax+4]  +
push eax  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_1017575  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
mov [ebp+var_8] ebx +
call dword ptr [eax+4]  +
mov [ebp+var_C] eax +
mov ecx [esi] +
mov eax [ecx] +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_1017520  +
mov ebx [ebp+var_8] +
cmp ebx 0FFFFFFFFh +
jnz loc_1017668  +
xor edi edi +
mov eax [esi+10h] +
dec eax  +
jz loc_10175BF  +
dec eax  +
jz loc_10175B6  +
dec eax  +
dec eax  +
jz loc_10175AD  +
dec eax  +
jz loc_10175A4  +
mov [esi+10h] edi +
jmp loc_10175C6  +
mov dword ptr [esi+10h] 1 +
jmp loc_10175C6  +
mov dword ptr [esi+10h] 3 +
jmp loc_10175C6  +
mov dword ptr [esi+10h] 4 +
jmp loc_10175C6  +
mov dword ptr [esi+10h] 2 +
cmp [esi+10h] edi +
jnz loc_101750C  +
mov ecx [esi] +
mov eax [ecx] +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+var_C] edi +
xor ebx ebx +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_10176A3  +
mov ecx [esi] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
call dword ptr [eax+0Ch]  +
mov edi eax +
test edi edi +
jl loc_1017687  +
mov eax [esi+0Ch] +
cmp dword ptr [eax+ebx*4] 0 +
jnz loc_1017632  +
cmp [ebp+var_8] 0FFFFFFFFh +
mov ecx [ebp+var_4] +
mov eax [ecx] +
jz loc_1017629  +
call dword ptr [eax+4]  +
push eax  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_1017632  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
mov [ebp+var_8] ebx +
call dword ptr [eax+4]  +
mov [ebp+var_C] eax +
mov ecx [esi] +
mov eax [ecx] +
inc ebx  +
call dword ptr [eax+18h]  +
cmp ebx eax +
jb loc_10175E7  +
mov ebx [ebp+var_8] +
cmp ebx 0FFFFFFFFh +
jz loc_10176A3  +
mov ecx [esi] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
call dword ptr [eax+0Ch]  +
mov edi eax +
test edi edi +
jge loc_101768F  +
push edi  +
push 0B22h  +
jmp loc_10176AE  +
push edi  +
push 0AD4h  +
jmp loc_10176AE  +
mov ecx [esi] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
call dword ptr [eax+8]  +
mov edi eax +
test edi edi +
jge loc_1017682  +
push edi  +
push 0AE6h  +
jmp loc_10176AE  +
mov eax [esi+8] +
jmp loc_1017692  +
push edi  +
push 0B10h  +
jmp loc_10176AE  +
mov eax [esi+0Ch] +
mov dword ptr [eax+ebx*4] 1 +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
jmp loc_10176C2  +
mov edi 80004005h +
push edi  +
push 0B2Eh  +
push offset aRootcauseite_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101583D  +
mov ecx [ebp+arg_C] +
mov dword ptr [esi+10h] offset off_10046E0 +
xor eax eax +
mov [esi+14h] eax +
mov [esi+38h] eax +
mov [esi+20h] eax +
mov [esi+1Ch] eax +
mov [esi+24h] eax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov dword ptr [esi] offset off_1004AB4 +
mov dword ptr [esi+10h] offset off_10046E0 +
mov [esi+18h] ecx +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+18h] +
push edi  +
xor edi edi +
xor ebx ebx +
cmp [ecx+0Ch] edi +
jbe loc_1017773  +
push edi  +
call sub_1015C8B  +
push eax  +
call sub_10345B6  +
mov ebx eax +
test ebx ebx +
jl loc_1017759  +
mov ecx [esi+18h] +
inc edi  +
cmp edi [ecx+0Ch] +
jb loc_101773C  +
jmp loc_1017773  +
push ebx  +
push 0B9Ah  +
push offset aRootcauseSqmre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ecx+18h] +
push edi  +
xor edi edi +
mov [ebp+var_4] 1 +
cmp [esi+0Ch] edi +
jbe loc_10177B7  +
push edi  +
mov ecx esi +
call sub_1015C8B  +
cmp dword ptr [eax+34h] 0 +
jz loc_10177AB  +
cmp dword ptr [eax+20h] 0 +
jz loc_10177B3  +
inc edi  +
cmp edi [esi+0Ch] +
jb loc_1017797  +
jmp loc_10177B7  +
and [ebp+var_4] 0 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esi] offset off_10046E0 +
cmp [esi+0Ch] ebx +
jbe loc_10177FD  +
mov eax [esi+8] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_10177F7  +
mov eax [eax] +
cmp eax ebx +
jz loc_10177F1  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+8] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+0Ch] +
jb loc_10177D9  +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1017816  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+8] ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101583D  +
mov dword ptr [esi+10h] offset off_10046E0 +
xor eax eax +
mov [esi+14h] eax +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov [esi+24h] eax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+18h] eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov [esi+40h] eax +
mov dword ptr [esi] offset off_1004AE0 +
mov dword ptr [esi+10h] offset off_10046E0 +
mov dword ptr [esi+34h] 1 +
mov eax dword_104E188 +
mov eax [eax+0B4h] +
mov [esi+44h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
mov edi ds:SysFreeString +
test eax eax +
jz loc_10178A5  +
push eax  +
call edi  +
and dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_10178B3  +
push eax  +
call edi  +
and dword ptr [esi+4] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_10178C1  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10178D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+0Ch] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101788D  +
test [ebp+arg_0] 1 +
jz loc_10178F4  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi] +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [esi+0Ch] ebx +
call sub_1016182  +
mov edi ds:GetProcessHeap +
mov [esi+8] eax +
mov eax [esi+4] +
cmp eax ebx +
jz loc_101793C  +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:HeapFree  +
mov [esi+4] ebx +
mov eax [esi+8] +
shl eax 2 +
push eax  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [esi+4] eax +
cmp eax ebx +
jnz loc_1017965  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 0ED0h  +
jmp loc_101799E  +
xor edi edi +
cmp [esi+8] ebx +
jbe loc_10179B2  +
mov ecx [esi] +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call sub_1016BE8  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_1017998  +
mov ecx [ebp+var_8] +
xor eax eax +
cmp [ecx+24h] ebx +
mov ecx [esi+4] +
setz al  +
mov [ecx+edi*4] eax +
inc edi  +
cmp edi [esi+8] +
jb loc_101796C  +
jmp loc_10179B2  +
push eax  +
push 0ED7h  +
push offset aResolutionorde  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+4] edi +
jnz loc_10179F1  +
call sub_1017900  +
cmp eax edi +
jge loc_10179F1  +
push eax  +
push 0EFCh  +
push offset aResolutionor_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017A0E  +
mov eax [esi+8] +
xor ecx ecx +
cmp eax edi +
jbe loc_1017A0E  +
mov esi [esi+4] +
cmp [esi] edi +
jz loc_1017A0B  +
inc ecx  +
add esi 4 +
cmp ecx eax +
jb loc_10179FD  +
jmp loc_1017A0E  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push esi  +
mov esi ecx +
call sub_10179BF  +
test eax eax +
jnz loc_1017A53  +
mov eax 80004005h +
push eax  +
push 0F28h  +
push offset aResolutionor_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1017AA1  +
push ebx  +
push edi  +
jmp loc_1017A92  +
xor edi edi +
cmp [esi+8] edi +
jbe loc_1017A8F  +
mov eax [esi+4] +
cmp dword ptr [eax+edi*4] 0 +
jnz loc_1017A89  +
mov ecx [esi] +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call sub_1016BE8  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1017AA9  +
mov ebx [ebp+var_8] +
mov ecx ebx +
call sub_1015D93  +
cmp eax [esi+0Ch] +
jz loc_1017AC5  +
inc edi  +
cmp edi [esi+8] +
jb loc_1017A5E  +
inc dword ptr [esi+0Ch]  +
cmp dword ptr [esi+0Ch] 7 +
jb loc_1017A57  +
mov [ebp+var_4] 80004005h +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 4  +
push eax  +
push 0F2Fh  +
push offset aResolutionor_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017A9F  +
mov eax [esi+4] +
mov dword ptr [eax+edi*4] 1 +
mov eax [ebp+arg_0] +
mov [eax] ebx +
jmp loc_1017A9F  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1004AE0 +
mov dword ptr [esi+10h] offset off_10046E0 +
mov ecx [esi+40h] +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_1017B0F  +
push 1  +
call sub_10178DA  +
and dword ptr [esi+40h] 0 +
mov ecx esi +
call sub_1015877  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1017ADB  +
test byte ptr [ebp+8] 1 +
jz loc_1017B3B  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1015F58  +
test byte ptr [ebp+8] 1 +
jz loc_1017B61  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_8] 1 +
mov [ebp+var_4] edi +
cmp [esi+18h] edi +
jnz loc_1017BEC  +
mov eax [esi] +
push ebx  +
xor ebx ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017BEB  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax edi +
jl loc_1017BCC  +
mov ecx [ebp+var_4] +
cmp [ecx+20h] edi +
jz loc_1017BB9  +
call sub_101777E  +
test eax eax +
jz loc_1017BE8  +
mov ecx [ebp+var_4] +
cmp [ecx+1Ch] edi +
jz loc_1017BE8  +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_1017B95  +
jmp loc_1017BEB  +
push eax  +
push 282h  +
push offset aRootcauseco_18  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017BEB  +
mov [ebp+var_8] edi +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor ebx ebx +
xor edi edi +
mov [ebp+var_4] ebx +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1017C5B  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1017C4D  +
cmp [ebp+var_4] 0 +
jz loc_1017C4D  +
push [ebp+var_4]  +
call sub_1034482  +
mov edi eax +
test edi edi +
jl loc_1017CAD  +
mov ecx [ebp+var_4] +
call sub_1017729  +
mov edi eax +
test edi edi +
jge loc_1017C4F  +
push edi  +
push 535h  +
jmp loc_1017C92  +
xor edi edi +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+14h]  +
cmp ebx eax +
jb loc_1017C13  +
mov eax [esi] +
mov ecx esi +
xor ebx ebx +
call dword ptr [eax+18h]  +
test eax eax +
jbe loc_1017CA6  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1017CB5  +
cmp [ebp+var_4] 0 +
jz loc_1017CB5  +
push [ebp+var_4]  +
call sub_1034482  +
mov edi eax +
test edi edi +
jge loc_1017CB7  +
push edi  +
push 543h  +
push offset aRootcauseco_19  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push edi  +
push 532h  +
jmp loc_1017C92  +
xor edi edi +
mov eax [esi] +
mov ecx esi +
inc ebx  +
call dword ptr [eax+18h]  +
cmp ebx eax +
jb loc_1017C68  +
jmp loc_1017CA6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 800h  +
mov esi ecx +
push edi  +
mov [ebp-0Ch] esi +
mov [ebp-10h] edi +
mov [ebp-14h] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp-8] ebx +
test ebx ebx +
jnz loc_1017D22  +
mov edi 8007000Eh +
push edi  +
push 5E5h  +
push offset aRootcauseco_20  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017E46  +
xor eax eax +
mov [ebx] ax +
mov ecx [esi+4] +
test ecx ecx +
jnz loc_1017D38  +
mov eax [ebp+8] +
and [eax] edi +
jmp loc_1017E34  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
mov esi 400h +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1017D5B  +
push edi  +
push 5F1h  +
jmp loc_1017E18  +
push offset asc_1004BAC  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1017D78  +
push edi  +
push 5F4h  +
jmp loc_1017E18  +
mov ecx [ebp-0Ch] +
and dword ptr [ebp-4] 0 +
call sub_1016182  +
test eax eax +
jbe loc_1017E2E  +
mov ecx [ebp-0Ch] +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-4]  +
call sub_1016BE8  +
mov edi eax +
test edi edi +
jl loc_1017E02  +
mov ebx [ebp-14h] +
cmp dword ptr [ebx+20h] 0 +
jz loc_1017DE2  +
cmp dword ptr [ebp-10h] 0 +
jz loc_1017DC4  +
push offset asc_1004BA8  +
push esi  +
push dword ptr [ebp-8]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_1017E0A  +
mov eax [ebx] +
mov ecx ebx +
mov dword ptr [ebp-10h] 1 +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push dword ptr [ebp-8]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_1017E12  +
mov ecx [ebp-0Ch] +
inc dword ptr [ebp-4]  +
call sub_1016182  +
cmp [ebp-4] eax +
jb loc_1017D8C  +
cmp dword ptr [ebp-10h] 0 +
jz loc_1017E2E  +
mov eax [ebp+8] +
mov ecx [ebp-8] +
mov [eax] ecx +
jmp loc_1017E46  +
push edi  +
push 5F8h  +
jmp loc_1017E18  +
push edi  +
push 600h  +
jmp loc_1017E18  +
push edi  +
push 606h  +
push offset aRootcauseco_20  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1017E34  +
mov eax [ebp+8] +
and dword ptr [eax] 0 +
push dword ptr [ebp-8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
xor edi edi +
mov [ebp-4] ecx +
mov [ebp-0Ch] edi +
mov [ebp-10h] edi +
mov [ebp-8] edi +
lea eax [ebp-0Ch] +
push eax  +
push 2Ch  +
push ebx  +
call sub_1014795  +
cmp eax edi +
mov [ebp+8] eax +
jl loc_1017F0F  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1017E91  +
mov [ebp-10h] ecx +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1017E96  +
sub eax edx +
sar eax 1 +
jz loc_1017EFF  +
mov ecx [ebp-4] +
call sub_1016182  +
test eax eax +
jbe loc_1017EFF  +
mov ecx [ebp-4] +
lea eax [ebp-8] +
push eax  +
push edi  +
call sub_1016BE8  +
mov [ebp+8] eax +
test eax eax +
jl loc_1017F17  +
mov esi [ebp-8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
push eax  +
push ebx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1017EED  +
mov ecx [ebp-4] +
inc edi  +
call sub_1016182  +
cmp edi eax +
jb loc_1017EB2  +
jmp loc_1017EFF  +
mov ecx dword_104E188 +
xor eax eax +
inc eax  +
mov [ecx+14h] eax +
mov [esi+20h] eax +
mov [esi+1Ch] eax +
mov ebx [ebp-0Ch] +
xor edi edi +
cmp [ebp-10h] edi +
jz loc_1017E70  +
jmp loc_1017F31  +
push eax  +
push 63Bh  +
jmp loc_1017F1D  +
push eax  +
push 644h  +
push offset aRootcauseco_21  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 800h  +
push edi  +
mov esi ecx +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jnz loc_1017F95  +
mov eax 8007000Eh +
push eax  +
push 82Fh  +
push offset aRootcauseco_22  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_101802B  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_8] edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1018010  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push [ebp+var_8]  +
mov ecx esi +
call dword ptr [eax+8]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1018035  +
mov edi [ebp+var_C] +
cmp dword ptr [edi+1Ch] 0 +
jnz loc_1018001  +
mov ecx [edi+30h] +
test ecx ecx +
jz loc_1018001  +
mov eax offset word_1001F48 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1017FF8  +
test dx dx +
jz loc_1017FF4  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1017FF8  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1017FD2  +
xor eax eax +
jmp loc_1017FFD  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_101803D  +
mov eax [esi] +
inc [ebp+var_8]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_8] eax +
jb loc_1017FA8  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
xor ebx ebx +
test ebx ebx +
jz loc_101802B  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push eax  +
push 834h  +
jmp loc_1018058  +
push dword ptr [edi+30h]  +
push 400h  +
push ebx  +
call sub_1014151  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1018010  +
push eax  +
push 840h  +
push offset aRootcauseco_22  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1018017  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1004C20 +
xor ebx ebx +
mov [ebp-4] ebx +
cmp [esi+20h] ebx +
jz loc_10180CB  +
xor edi edi +
cmp [esi+24h] ebx +
jbe loc_10180CB  +
mov eax [esi+20h] +
mov ecx [eax+edi*4] +
call sub_1017BF8  +
mov eax [esi+20h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_10180C5  +
mov eax [eax] +
cmp eax ebx +
jz loc_10180BF  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx+4]  +
mov eax [esi+20h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+24h] +
jb loc_101809B  +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_10180E4  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+20h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1015F58  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor ebx ebx +
push 1000h  +
mov edi ecx +
push ebx  +
mov [ebp-14h] edi +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
test eax eax +
jnz loc_1018154  +
mov eax 8007000Eh +
push eax  +
push 995h  +
push offset aMetarootcaus_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_1018234  +
xor ecx ecx +
and [ebp-8] ecx +
mov [eax] cx +
cmp [edi+24h] ecx +
jbe loc_1018220  +
mov edi 800h +
mov eax [ebp-14h] +
mov eax [eax+20h] +
mov ecx [ebp-8] +
mov ecx [eax+ecx*4] +
mov eax [ecx] +
lea edx [ebp-4] +
push edx  +
call dword ptr [eax+1Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_10181F4  +
cmp dword ptr [ebp-4] 0 +
jz loc_10181D6  +
cmp dword ptr [ebp-10h] 0 +
jz loc_10181A5  +
push offset asc_10027A4  +
push edi  +
push dword ptr [ebp-0Ch]  +
call sub_1014151  +
mov ebx eax +
test ebx ebx +
jl loc_10181FC  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-10h] 1 +
push edi  +
push dword ptr [ebp-0Ch]  +
call sub_1014151  +
mov ebx eax +
test ebx ebx +
jl loc_1018204  +
cmp dword ptr [ebp-4] 0 +
jz loc_10181D6  +
push dword ptr [ebp-4]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
and dword ptr [ebp-4] 0 +
inc dword ptr [ebp-8]  +
mov eax [ebp-14h] +
mov ecx [ebp-8] +
cmp ecx [eax+24h] +
jb loc_101816A  +
cmp dword ptr [ebp-10h] 0 +
jz loc_1018220  +
mov eax [ebp+8] +
mov ecx [ebp-0Ch] +
mov [eax] ecx +
jmp loc_1018234  +
push ebx  +
push 99Dh  +
jmp loc_101820A  +
push ebx  +
push 9A2h  +
jmp loc_101820A  +
push ebx  +
push 9A8h  +
push offset aMetarootcaus_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1018226  +
mov eax [ebp+8] +
and dword ptr [eax] 0 +
push dword ptr [ebp-0Ch]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
cmp dword ptr [ebp-4] 0 +
jz loc_1018248  +
push dword ptr [ebp-4]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10177C3  +
test [ebp+arg_0] 1 +
jz loc_1018270  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+arg_0]  +
mov edi ecx +
push ebx  +
push offset a_ResolutionsRe  +
mov [ebp+var_34] edi +
mov [ebp+var_3C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_38] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_44] ebx +
call sub_1014C90  +
mov esi eax +
cmp esi ebx +
jge loc_10182F2  +
push esi  +
push 0CB1h  +
push offset aResolutionsIni  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10188FA  +
mov eax [ebp+var_3C] +
mov ecx [eax] +
lea edx [ebp+var_44] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_101830D  +
push esi  +
push 0CB4h  +
jmp loc_10182D9  +
mov eax [ebp+var_44] +
mov [edi+0Ch] eax +
shl eax 2 +
push eax  +
push 8  +
mov [edi+8] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [edi+8] eax +
cmp eax ebx +
jnz loc_101833F  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 0CBBh  +
jmp loc_10182D9  +
cmp [ebp+var_44] ebx +
mov [ebp+var_40] ebx +
jle loc_10188FA  +
xor edi edi +
inc edi  +
mov eax [ebp+var_8] +
xor ebx ebx +
cmp eax ebx +
jz loc_1018360  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1018370  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_3C]  +
call sub_1014D97  +
mov esi eax +
cmp esi ebx +
jl loc_101882B  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_8]  +
push offset a_Id  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_1018841  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_8]  +
push offset a_Displayinform  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_1018849  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_8]  +
push offset a_Displayinfo_0  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_1018851  +
push 48h  +
call sub_10361AF  +
pop ecx  +
cmp eax ebx +
jz loc_10183F5  +
push [ebp+var_20]  +
mov ecx eax +
push [ebp+var_1C]  +
push [ebp+var_18]  +
call sub_101781F  +
jmp loc_10183F7  +
xor eax eax +
mov ecx [ebp+var_34] +
mov ebx [ebp+var_40] +
mov edx [ecx+8] +
shl ebx 2 +
mov [ebx+edx] eax +
mov eax [ecx+8] +
add eax ebx +
cmp dword ptr [eax] 0 +
jz loc_1018859  +
mov eax [eax] +
mov esi [ebp+var_34] +
push dword ptr [esi+4]  +
lea ecx [eax+10h] +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [esi+8] +
mov eax [ebx+eax] +
mov ecx [ebp+arg_4] +
lea edx [ebp+var_4] +
push edx  +
mov [eax+3Ch] ecx +
mov eax [ebp+var_8] +
mov ecx [eax] +
push offset a_ScriptRequire  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jnz loc_10184E5  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jl loc_1018868  +
push offset aTrue  +
push [ebp+var_24]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018485  +
mov eax [ebp+var_34] +
mov eax [eax+8] +
mov eax [ebx+eax] +
mov [eax+2Ch] edi +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+var_8]  +
push offset a_ScriptRequi_0  +
call sub_1015665  +
mov esi eax +
test esi esi +
jl loc_1018870  +
push offset aTrue  +
push [ebp+var_2C]  +
call ds:_wcsicmp  +
test eax eax +
mov eax [ebp+var_34] +
mov eax [eax+8] +
pop ecx  +
pop ecx  +
jnz loc_10184C5  +
mov eax [ebx+eax] +
mov [eax+30h] edi +
jmp loc_10186FA  +
push [ebp+var_8]  +
mov ecx [ebx+eax] +
call sub_1015CF3  +
mov esi eax +
test esi esi +
jge loc_10186FA  +
push esi  +
push 0CF5h  +
jmp loc_10188E5  +
cmp esi edi +
jnz loc_10186FA  +
mov esi [ebp+var_34] +
mov eax [esi+8] +
mov eax [ebx+eax] +
push 14h  +
mov [eax+18h] edi +
call sub_10361AF  +
pop ecx  +
xor ecx ecx +
cmp eax ecx +
jz loc_1018514  +
mov [eax] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
jmp loc_1018516  +
xor eax eax +
mov [ebp+arg_0] eax +
cmp eax ecx +
jz loc_1018878  +
mov edx [esi+8] +
mov edx [ebx+edx] +
mov [edx+40h] eax +
mov eax [ebp+var_4] +
cmp eax ecx +
jz loc_101853B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_0  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jl loc_1018887  +
jnz loc_1018573  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jl loc_101888F  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1018584  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_1  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jl loc_1018897  +
jnz loc_10185D2  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_30] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jl loc_101889F  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_30]  +
call sub_1030712  +
mov esi eax +
test esi esi +
jl loc_10188A7  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10185E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_2  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jl loc_10188AF  +
mov ecx [ebp+arg_0] +
xor eax eax +
test esi esi +
setz al  +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1018620  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_3  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jl loc_10188B7  +
jnz loc_1018658  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_38] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jl loc_10188BF  +
cmp [ebp+var_10] 0 +
jz loc_101869E  +
push [ebp+arg_8]  +
lea eax [ebp+lpMem] +
push [ebp+var_10]  +
push eax  +
call sub_1033AEB  +
mov esi eax +
test esi esi +
jl loc_10188C7  +
push [ebp+lpMem]  +
mov ecx [ebp+arg_0] +
call sub_1015E37  +
cmp [ebp+lpMem] 0 +
jz loc_101869E  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and [ebp+lpMem] 0 +
cmp [ebp+var_14] 0 +
jz loc_10186E4  +
push [ebp+arg_8]  +
lea eax [ebp+lpMem] +
push [ebp+var_14]  +
push eax  +
call sub_1033AEB  +
mov esi eax +
test esi esi +
jl loc_10188CF  +
push [ebp+lpMem]  +
mov ecx [ebp+arg_0] +
call sub_1015E54  +
cmp [ebp+lpMem] 0 +
jz loc_10186E4  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and [ebp+lpMem] 0 +
push [ebp+var_38]  +
mov ecx [ebp+arg_0] +
call sub_1015E72  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
call sub_100D6A4  +
test esi esi +
jl loc_10188D7  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_8]  +
push offset a_Requiresconse  +
call sub_1015665  +
mov esi eax +
test esi esi +
jl loc_10188DF  +
push offset aTrue  +
push [ebp+var_28]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101873D  +
mov eax [ebp+var_34] +
mov eax [eax+8] +
mov eax [ebx+eax] +
mov [eax+28h] edi +
cmp [ebp+lpMem] 0 +
jz loc_1018759  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and [ebp+lpMem] 0 +
cmp [ebp+var_18] 0 +
jz loc_101876C  +
push [ebp+var_18]  +
call ds:SysFreeString  +
and [ebp+var_18] 0 +
cmp [ebp+var_1C] 0 +
jz loc_101877F  +
push [ebp+var_1C]  +
call ds:SysFreeString  +
and [ebp+var_1C] 0 +
cmp [ebp+var_20] 0 +
jz loc_1018792  +
push [ebp+var_20]  +
call ds:SysFreeString  +
and [ebp+var_20] 0 +
cmp [ebp+var_24] 0 +
jz loc_10187A5  +
push [ebp+var_24]  +
call ds:SysFreeString  +
and [ebp+var_24] 0 +
cmp [ebp+var_28] 0 +
jz loc_10187B8  +
push [ebp+var_28]  +
call ds:SysFreeString  +
and [ebp+var_28] 0 +
cmp [ebp+var_2C] 0 +
jz loc_10187CB  +
push [ebp+var_2C]  +
call ds:SysFreeString  +
and [ebp+var_2C] 0 +
cmp [ebp+var_10] 0 +
jz loc_10187DE  +
push [ebp+var_10]  +
call ds:SysFreeString  +
and [ebp+var_10] 0 +
cmp [ebp+var_30] 0 +
jz loc_10187F1  +
push [ebp+var_30]  +
call ds:SysFreeString  +
and [ebp+var_30] 0 +
cmp [ebp+var_14] 0 +
jz loc_1018804  +
push [ebp+var_14]  +
call ds:SysFreeString  +
and [ebp+var_14] 0 +
cmp [ebp+var_38] 0 +
jz loc_1018817  +
push [ebp+var_38]  +
call ds:SysFreeString  +
and [ebp+var_38] 0 +
inc [ebp+var_40]  +
mov eax [ebp+var_40] +
cmp eax [ebp+var_44] +
jl loc_101834E  +
jmp loc_10188F8  +
push esi  +
push 0CC5h  +
push offset aResolutionsIni  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_10182E5  +
push esi  +
push 0CC8h  +
jmp loc_1018831  +
push esi  +
push 0CCBh  +
jmp loc_1018831  +
push esi  +
push 0CCEh  +
jmp loc_1018831  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 0CD1h  +
jmp loc_10188E5  +
push esi  +
push 0CE1h  +
jmp loc_10188E5  +
push esi  +
push 0CEBh  +
jmp loc_10188E5  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 0D01h  +
jmp loc_10188E5  +
push esi  +
push 0D0Ah  +
jmp loc_10188E5  +
push esi  +
push 0D0Dh  +
jmp loc_10188E5  +
push esi  +
push 0D15h  +
jmp loc_10188E5  +
push esi  +
push 0D18h  +
jmp loc_10188E5  +
push esi  +
push 0D1Bh  +
jmp loc_10188E5  +
push esi  +
push 0D23h  +
jmp loc_10188E5  +
push esi  +
push 0D2Bh  +
jmp loc_10188E5  +
push esi  +
push 0D2Eh  +
jmp loc_10188E5  +
push esi  +
push 0D37h  +
jmp loc_10188E5  +
push esi  +
push 0D42h  +
jmp loc_10188E5  +
push esi  +
push 0D4Bh  +
jmp loc_10188E5  +
push esi  +
push 0D51h  +
push offset aResolutionsIni  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
xor ebx ebx +
mov eax [ebp+var_3C] +
cmp eax ebx +
jz loc_101890A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_101891A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_101892A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
cmp [ebp+lpMem] ebx +
jz loc_1018943  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] ebx +
mov edi ds:SysFreeString +
cmp [ebp+var_18] ebx +
jz loc_1018956  +
push [ebp+var_18]  +
call edi  +
mov [ebp+var_18] ebx +
cmp [ebp+var_1C] ebx +
jz loc_1018963  +
push [ebp+var_1C]  +
call edi  +
mov [ebp+var_1C] ebx +
cmp [ebp+var_20] ebx +
jz loc_1018970  +
push [ebp+var_20]  +
call edi  +
mov [ebp+var_20] ebx +
cmp [ebp+var_24] ebx +
jz loc_101897D  +
push [ebp+var_24]  +
call edi  +
mov [ebp+var_24] ebx +
cmp [ebp+var_28] ebx +
jz loc_101898A  +
push [ebp+var_28]  +
call edi  +
mov [ebp+var_28] ebx +
cmp [ebp+var_2C] ebx +
jz loc_1018997  +
push [ebp+var_2C]  +
call edi  +
mov [ebp+var_2C] ebx +
cmp [ebp+var_10] ebx +
jz loc_10189A4  +
push [ebp+var_10]  +
call edi  +
mov [ebp+var_10] ebx +
cmp [ebp+var_30] ebx +
jz loc_10189B1  +
push [ebp+var_30]  +
call edi  +
mov [ebp+var_30] ebx +
cmp [ebp+var_14] ebx +
jz loc_10189BE  +
push [ebp+var_14]  +
call edi  +
mov [ebp+var_14] ebx +
cmp [ebp+var_38] ebx +
jz loc_10189C8  +
push [ebp+var_38]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1018073  +
test byte ptr [ebp+8] 1 +
jz loc_10189F0  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_38] +
push eax  +
push [ebp+arg_0]  +
mov ebx ecx +
mov [ebp+var_30] ebx +
mov [ebp+var_38] edi +
mov [ebp+var_34] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edi +
mov [ebp+var_24] edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_28] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_2C] edi +
call sub_101484F  +
mov esi eax +
cmp esi edi +
jge loc_1018A66  +
push esi  +
push 0FDh  +
push offset aRootcauseco_23  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1018F53  +
lea eax [ebp+var_34] +
push eax  +
push edi  +
push [ebp+var_38]  +
push offset aRootcausesRoot  +
call sub_1014C90  +
mov esi eax +
cmp esi edi +
jge loc_1018A86  +
push esi  +
push 107h  +
jmp loc_1018A4D  +
mov eax [ebp+var_34] +
mov ecx [eax] +
lea edx [ebp+var_2C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_1018AA1  +
push esi  +
push 10Ah  +
jmp loc_1018A4D  +
mov eax [ebp+var_2C] +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebx+8] eax +
cmp eax edi +
jnz loc_1018ACD  +
mov esi 8007000Eh +
push esi  +
push 110h  +
jmp loc_1018A4D  +
mov eax [ebp+var_2C] +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebx+0Ch] eax +
cmp eax edi +
jnz loc_1018AF6  +
mov esi 8007000Eh +
push esi  +
push 113h  +
jmp loc_1018A4D  +
mov eax [ebp+var_2C] +
cmp eax edi +
mov [ebx+10h] eax +
mov [ebx+14h] eax +
mov [ebp+arg_0] edi +
jle loc_1018F31  +
mov eax [ebp+var_C] +
mov esi ds:SysFreeString +
cmp eax edi +
jz loc_1018B20  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1018B30  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1018B40  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
cmp [ebp+var_1C] edi +
jz loc_1018B4D  +
push [ebp+var_1C]  +
call esi  +
mov [ebp+var_1C] edi +
cmp [ebp+var_20] edi +
jz loc_1018B5A  +
push [ebp+var_20]  +
call esi  +
mov [ebp+var_20] edi +
cmp [ebp+var_24] edi +
jz loc_1018B67  +
push [ebp+var_24]  +
call esi  +
mov [ebp+var_24] edi +
cmp [ebp+var_4] edi +
jz loc_1018B74  +
push [ebp+var_4]  +
call esi  +
mov [ebp+var_4] edi +
cmp [ebp+var_14] edi +
jz loc_1018B81  +
push [ebp+var_14]  +
call esi  +
mov [ebp+var_14] edi +
cmp [ebp+var_28] edi +
jz loc_1018B8E  +
push [ebp+var_28]  +
call esi  +
mov [ebp+var_28] edi +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_34]  +
call sub_1014D97  +
mov esi eax +
cmp esi edi +
jl loc_1019016  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_C]  +
push offset a_Id  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jl loc_1019021  +
push [ebp+var_1C]  +
mov ecx [ebx+4] +
call sub_1031CF5  +
test eax eax +
jnz loc_1018F1F  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_C]  +
push offset a_Status  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jl loc_101902C  +
mov esi ds:_wcsicmp +
push offset aNotChecked  +
push [ebp+var_14]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018F1F  +
push offset aNotDetected  +
push [ebp+var_14]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018C1C  +
mov eax [ebx+0Ch] +
jmp loc_1018C1F  +
mov eax [ebx+8] +
mov [ebp+var_3C] eax +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_C]  +
push offset a_Displayinform  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jl loc_1019037  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+var_C]  +
push offset a_Displayinfo_0  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jl loc_1019042  +
push 10h  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_1018C74  +
mov [eax+4] edi +
mov dword ptr [eax] offset off_10046E0 +
mov esi eax +
mov [ebp+var_40] eax +
jmp loc_1018C79  +
xor esi esi +
mov [ebp+var_40] esi +
cmp esi edi +
jz loc_101904D  +
push dword ptr [ebx+4]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax]  +
push 3Ch  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_1018CA9  +
push esi  +
push [ebp+var_24]  +
mov ecx eax +
push [ebp+var_20]  +
push [ebp+var_1C]  +
call sub_10176D0  +
jmp loc_1018CAB  +
xor eax eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_3C] +
lea ebx [edx+ecx*4] +
mov [ebx] eax +
cmp eax edi +
jz loc_101905D  +
mov ecx [ebp+var_30] +
mov [eax+38h] ecx +
push offset aNotDetected  +
push [ebp+var_14]  +
call ds:_wcsicmp  +
pop ecx  +
test eax eax +
mov eax [ebx] +
pop ecx  +
jnz loc_1018CE3  +
mov dword ptr [eax+2Ch] 1 +
jmp loc_1018CEA  +
mov dword ptr [eax+28h] 1 +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_C]  +
push offset a_Verifiable  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jl loc_101906D  +
push offset aFalse  +
push [ebp+var_28]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018D22  +
mov eax [ebx] +
mov dword ptr [eax+20h] 1 +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push offset a_Parameters  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_1019078  +
push [ebp+var_10]  +
mov ecx [ebp+var_40] +
push dword ptr [ebx]  +
push [ebp+var_C]  +
call sub_101827C  +
mov esi eax +
cmp esi edi +
jl loc_1019083  +
mov eax [ebx] +
mov edx [ebp+var_30] +
push dword ptr [edx+4]  +
lea ecx [eax+10h] +
mov eax [ecx] +
call dword ptr [eax]  +
push offset aNotDetected  +
push [ebp+var_14]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018F1F  +
mov ecx [ebp+var_30] +
push [ebp+var_10]  +
mov eax [ecx+4] +
push eax  +
call sub_1016016  +
mov esi eax +
cmp esi edi +
jl loc_101908E  +
cmp [ebp+var_10] edi +
jz loc_1018E6F  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1018DB4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_ParameterName  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_1019099  +
jnz loc_1018E07  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_10190A4  +
push [ebp+var_4]  +
mov ecx [ebx] +
call sub_1015E90  +
cmp [ebp+var_4] edi +
jz loc_1018E07  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
cmp [ebp+var_10] edi +
jz loc_1018E6F  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1018E1C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_ParameterNa_0  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_10190AF  +
jnz loc_1018E6F  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_10190BA  +
push [ebp+var_4]  +
mov ecx [ebx] +
call sub_1015EC9  +
cmp [ebp+var_4] edi +
jz loc_1018E6F  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1018E7F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Extensionpo_4  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_10190C5  +
jnz loc_1018F1F  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_10190D0  +
push [ebp+var_10]  +
lea eax [ebp+lpMem] +
push [ebp+var_4]  +
push eax  +
call sub_1033AEB  +
mov esi eax +
cmp esi edi +
jl loc_10190DB  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1018ED6  +
sub eax edx +
sar eax 1 +
cmp eax 28h +
jnb loc_1018F06  +
mov eax dword_104E188 +
mov dword ptr [eax+14h] 1 +
push [ebp+lpMem]  +
mov ecx dword_104E188 +
call sub_1011131  +
mov [ebp+lpMem] edi +
cmp [ebp+lpMem] edi +
jz loc_1018F1F  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
inc [ebp+arg_0]  +
mov eax [ebp+var_2C] +
cmp [ebp+arg_0] eax +
mov ebx [ebp+var_30] +
jl loc_1018B0A  +
lea ecx [ebx+10h] +
push ecx  +
push eax  +
push dword ptr [ebx+8]  +
mov ecx ebx +
call sub_10158D1  +
lea eax [ebx+14h] +
push eax  +
push [ebp+var_2C]  +
mov ecx ebx +
push dword ptr [ebx+0Ch]  +
call sub_10158D1  +
xor esi esi +
mov eax [ebp+var_38] +
cmp eax edi +
jz loc_1018F63  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_38] edi +
mov eax [ebp+var_34] +
cmp eax edi +
jz loc_1018F73  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_34] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1018F83  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1018F93  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1018FA3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
cmp [ebp+lpMem] edi +
jz loc_1018FBC  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
mov ebx ds:SysFreeString +
cmp [ebp+var_1C] edi +
jz loc_1018FCF  +
push [ebp+var_1C]  +
call ebx  +
mov [ebp+var_1C] edi +
cmp [ebp+var_20] edi +
jz loc_1018FDC  +
push [ebp+var_20]  +
call ebx  +
mov [ebp+var_20] edi +
cmp [ebp+var_24] edi +
jz loc_1018FE9  +
push [ebp+var_24]  +
call ebx  +
mov [ebp+var_24] edi +
cmp [ebp+var_4] edi +
jz loc_1018FF6  +
push [ebp+var_4]  +
call ebx  +
mov [ebp+var_4] edi +
cmp [ebp+var_14] edi +
jz loc_1019003  +
push [ebp+var_14]  +
call ebx  +
mov [ebp+var_14] edi +
cmp [ebp+var_28] edi +
jz loc_101900D  +
push [ebp+var_28]  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push esi  +
push 128h  +
jmp loc_1018A4D  +
push esi  +
push 12Bh  +
jmp loc_1018A4D  +
push esi  +
push 135h  +
jmp loc_1018A4D  +
push esi  +
push 148h  +
jmp loc_1018A4D  +
push esi  +
push 14Bh  +
jmp loc_1018A4D  +
mov esi 8007000Eh +
push esi  +
push 14Eh  +
jmp loc_1018A4D  +
mov esi 8007000Eh +
push esi  +
push 153h  +
jmp loc_1018A4D  +
push esi  +
push 164h  +
jmp loc_1018A4D  +
push esi  +
push 16Bh  +
jmp loc_1018A4D  +
push esi  +
push 175h  +
jmp loc_1018A4D  +
push esi  +
push 185h  +
jmp loc_1018A4D  +
push esi  +
push 191h  +
jmp loc_1018A4D  +
push esi  +
push 195h  +
jmp loc_1018A4D  +
push esi  +
push 1A7h  +
jmp loc_1018A4D  +
push esi  +
push 1ABh  +
jmp loc_1018A4D  +
push esi  +
push 1BAh  +
jmp loc_1018A4D  +
push esi  +
push 1BDh  +
jmp loc_1018A4D  +
push esi  +
push 1C3h  +
jmp loc_1018A4D  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1004AB4 +
mov dword ptr [esi+10h] offset off_10046E0 +
mov ecx [esi+18h] +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_101911F  +
push 1  +
call sub_1018256  +
and dword ptr [esi+18h] 0 +
mov eax [esi+30h] +
mov edi ds:SysFreeString +
test eax eax +
jz loc_1019133  +
push eax  +
call edi  +
and dword ptr [esi+30h] 0 +
mov eax [esi+34h] +
test eax eax +
jz loc_1019141  +
push eax  +
call edi  +
and dword ptr [esi+34h] 0 +
mov ecx esi +
call sub_1015877  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10190EB  +
test byte ptr [ebp+8] 1 +
jz loc_101916D  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push dword ptr [ebp+0Ch]  +
call sub_102C2C7  +
mov esi eax +
test esi esi +
jge loc_1019197  +
push esi  +
push 0D6h  +
jmp loc_10191B3  +
cmp dword ptr [ebp+10h] 0 +
jz loc_10191C7  +
push 1  +
push dword ptr [ebp+10h]  +
call sub_102C2C7  +
mov esi eax +
test esi esi +
jge loc_10191C7  +
push esi  +
push 0DAh  +
push offset aEnginecallback  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_10191ED  +
push eax  +
call ds:SafeArrayDestroy  +
and dword ptr [esi+4] 0 +
mov eax [ebp+arg_0] +
mov [esi+4] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+rgIndices] 0 +
and [ebp+rgsabound.lLbound] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+rgsabound] +
xor edi edi +
push eax  +
inc edi  +
push edi  +
push 8  +
mov [ebp+rgsabound.cElements] edi +
call ds:SafeArrayCreate  +
mov esi eax +
test esi esi +
jnz loc_101924D  +
mov eax 8007000Eh +
push eax  +
push 449h  +
push offset aEnginecallba_0  +
push offset aDwzErrorSDHr0x  +
push edi  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_101928E  +
push [ebp+pv]  +
lea eax [ebp+rgIndices] +
push eax  +
push esi  +
call ds:SafeArrayPutElement  +
mov ebx eax +
test ebx ebx +
jge loc_101927C  +
push ebx  +
push 44Fh  +
push offset aEnginecallba_0  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_1019283  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor esi esi +
test esi esi +
jz loc_101928E  +
push esi  +
call ds:SafeArrayDestroy  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx+0CCh] +
mov eax [esi] +
test eax eax +
jz loc_10192B8  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor ebx ebx +
push 4  +
pop ecx  +
mov esi offset dword_1009554 +
xor eax eax +
cmps   +
jz loc_10192F9  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_10094A4 +
xor eax eax +
cmps   +
jnz loc_1019309  +
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1019313  +
mov eax [ebp+10h] +
mov [eax] ebx +
mov ebx 80004002h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
lea eax [ebp+var_14] +
xor ebx ebx +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
call sub_101484F  +
mov esi eax +
cmp esi ebx +
jge loc_1019356  +
push esi  +
push 181h  +
jmp loc_1019391  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_14]  +
call sub_1014ABA  +
mov esi eax +
cmp esi ebx +
jge loc_1019370  +
push esi  +
push 184h  +
jmp loc_1019391  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Id  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_10193AA  +
push esi  +
push 18Ah  +
push offset aEnginecallba_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10196FA  +
push edi  +
xor edi edi +
inc edi  +
cmp esi edi +
jnz loc_10193BF  +
mov esi 80004005h +
push esi  +
push 18Dh  +
jmp loc_101940A  +
mov eax [ebp+var_4] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi ebx +
jge loc_10193D9  +
push esi  +
push 191h  +
jmp loc_101940A  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10193E9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_5  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101941A  +
push esi  +
push 198h  +
push offset aEnginecallba_1  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_10196D7  +
mov edi [ebp+arg_8] +
jnz loc_1019426  +
mov dword ptr [edi+4] 1 +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1019436  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_6  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101945C  +
push esi  +
push 19Fh  +
jmp loc_10196CB  +
jnz loc_1019465  +
mov dword ptr [edi+1Ch] 1 +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1019475  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Dynamic  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101949B  +
push esi  +
push 1ABh  +
jmp loc_10196CB  +
cmp esi 1 +
jnz loc_10194B0  +
mov esi 80004005h +
push esi  +
push 1AEh  +
jmp loc_10196CB  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi ebx +
jge loc_10194CE  +
push esi  +
push 1B5h  +
jmp loc_10196CB  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10194DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
push offset aTrue  +
push [ebp+var_10]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10194F4  +
mov [edi] ebx +
mov eax dword_104E188 +
cmp [eax+7Ch] ebx +
jz loc_1019520  +
mov eax [ebp+arg_4] +
push offset aSecuritybounda  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1019520  +
mov dword ptr [edi+18h] 1 +
jmp loc_10196F9  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_7  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_1019546  +
push esi  +
push 1C9h  +
jmp loc_10196CB  +
jnz loc_10195A2  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_10195A2  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1019567  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1019585  +
push esi  +
push 1CEh  +
jmp loc_10196CB  +
push offset aTextinteractio  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10195A2  +
inc eax  +
mov [edi+8] eax +
jmp loc_1019693  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10195B2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_8  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_10195D8  +
push esi  +
push 1DFh  +
jmp loc_10196CB  +
jnz loc_10195F5  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_10195F5  +
mov dword ptr [edi+14h] 1 +
jmp loc_10196F9  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1019605  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionpo_9  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101962B  +
push esi  +
push 1EBh  +
jmp loc_10196CB  +
jnz loc_101969A  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_101969A  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_101964C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
cmp [ebp+var_C] ebx +
jz loc_101965D  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1019678  +
push esi  +
push 1F1h  +
jmp loc_10196CB  +
push offset aTextinteractio  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101969A  +
inc eax  +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov [edi] ebx +
mov [edi+4] eax +
jmp loc_10196F9  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10196AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Extensionp_10  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_10196E1  +
push esi  +
push 203h  +
push offset aEnginecallba_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10196F9  +
jnz loc_10196F9  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_10196F9  +
mov dword ptr [edi+10h] 1 +
pop edi  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_101970A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_101971A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_101972A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
cmp [ebp+var_10] ebx +
jz loc_101973B  +
push [ebp+var_10]  +
call ds:SysFreeString  +
mov [ebp+var_10] ebx +
cmp [ebp+var_C] ebx +
jz loc_1019749  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi ecx +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_101977A  +
push esi  +
push 239h  +
jmp loc_1019840  +
cmp esi 1 +
jnz loc_1019789  +
mov esi 80004005h +
jmp loc_1019854  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_10197A3  +
push esi  +
push 240h  +
jmp loc_1019840  +
push [ebp+wParam]  +
mov ecx [ebp+var_4] +
call sub_1012594  +
push 0FFFFFFFFh  +
push 0  +
push offset Handles  +
push 1Ah  +
call ds:WaitForMultipleObjects  +
cmp eax 4 +
jz loc_1019822  +
cmp eax 19h +
jz loc_10197D6  +
mov eax 80004005h +
push eax  +
push 25Dh  +
jmp loc_101983E  +
call sub_101AB9B  +
mov esi eax +
test esi esi +
jge loc_10197E9  +
push esi  +
push 24Fh  +
jmp loc_1019840  +
push hEvent  +
call ds:SetEvent  +
test eax eax +
jnz loc_101981B  +
call ds:GetLastError  +
test eax eax +
jle loc_101980D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_101981B  +
push esi  +
push 252h  +
jmp loc_1019840  +
mov esi 80004004h +
jmp loc_1019854  +
mov ecx [edi+4] +
mov eax [ebp+arg_4] +
mov [eax] ecx +
and dword ptr [edi+4] 0 +
cmp dword ptr [eax] 0 +
jnz loc_1019854  +
mov eax 80004005h +
push eax  +
push 268h  +
mov esi eax +
push offset aEnginecallba_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+psa] +
push esi  +
xor esi esi +
and [ebp+rgIndices] esi +
and [ebp+pv] esi +
test eax eax +
jz loc_10198F2  +
push edi  +
xor edi edi +
inc edi  +
cmp [eax] di +
ja loc_10198F1  +
lea ecx [ebp+pv] +
push ecx  +
lea ecx [ebp+rgIndices] +
push ecx  +
push eax  +
call ds:SafeArrayGetElement  +
mov esi eax +
test esi esi +
jge loc_101989E  +
push esi  +
push 349h  +
jmp loc_10198B1  +
cmp [ebp+pv] 0 +
jnz loc_10198C6  +
mov eax 8000FFFFh +
push eax  +
mov esi eax +
push 34Ah  +
push offset aEnginecallba_3  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_10198E2  +
push offset aRemote  +
push [ebp+pv]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10198E2  +
mov eax dword_104E188 +
mov [eax+38h] edi +
cmp [ebp+pv] 0 +
jz loc_10198F1  +
push [ebp+pv]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+psa] +
push esi  +
xor esi esi +
and [ebp+rgIndices] esi +
and [ebp+pv] esi +
test eax eax +
jz loc_101998F  +
push edi  +
xor edi edi +
inc edi  +
cmp [eax] di +
ja loc_101998E  +
lea ecx [ebp+pv] +
push ecx  +
lea ecx [ebp+rgIndices] +
push ecx  +
push eax  +
call ds:SafeArrayGetElement  +
mov esi eax +
test esi esi +
jge loc_101993B  +
push esi  +
push 37Eh  +
jmp loc_101994E  +
cmp [ebp+pv] 0 +
jnz loc_1019963  +
mov eax 8000FFFFh +
push eax  +
mov esi eax +
push 37Fh  +
push offset aEnginecallba_4  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101997F  +
push offset aLater  +
push [ebp+pv]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101997F  +
mov eax dword_104E188 +
mov [eax+20h] edi +
cmp [ebp+pv] 0 +
jz loc_101998E  +
push [ebp+pv]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E188 +
push esi  +
push edi  +
push dword ptr [eax+7Ch]  +
mov edi ecx +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jnz loc_10199DB  +
mov eax 8007000Eh +
push eax  +
push 3A8h  +
push offset aEnginecallba_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1019A0D  +
push [ebp+arg_0]  +
mov ecx edi +
push esi  +
call sub_10191FF  +
mov edi eax +
test edi edi +
jge loc_1019A06  +
push edi  +
push 3ABh  +
push offset aEnginecallba_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push esi  +
call ds:SysFreeString  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E188 +
push esi  +
push edi  +
push dword ptr [eax+74h]  +
mov edi ecx +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jnz loc_1019A5A  +
mov eax 8007000Eh +
push eax  +
push 3CFh  +
push offset aEnginecallba_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1019A8C  +
push [ebp+arg_0]  +
mov ecx edi +
push esi  +
call sub_10191FF  +
mov edi eax +
test edi edi +
jge loc_1019A85  +
push edi  +
push 3D2h  +
push offset aEnginecallba_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push esi  +
call ds:SysFreeString  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_100534C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor eax eax +
mov ebx 208h +
push ebx  +
push eax  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1019B03  +
mov eax 8007000Eh +
push eax  +
push 302h  +
push offset aEnginecallba_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_1019BD7  +
cmp [ebp+arg_4] 0 +
jz loc_1019B32  +
push dword ptr [ebp+arg_0]  +
push 104h  +
push eax  +
call sub_100D999  +
mov ebx eax +
test ebx ebx +
jge loc_1019B25  +
push ebx  +
push 306h  +
jmp loc_1019B92  +
mov eax [ebp+arg_C] +
mov ecx [ebp+lpMem] +
mov [eax] ecx +
jmp loc_1019BD7  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1019B50  +
mov eax 8007000Eh +
push eax  +
mov ebx eax +
push 311h  +
jmp loc_1019B92  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_8]  +
call sub_1013FC3  +
mov ebx eax +
test ebx ebx +
jge loc_1019B6A  +
push ebx  +
push 314h  +
jmp loc_1019B92  +
push [ebp+var_C]  +
mov edi [ebp+lpMem] +
push dword ptr [ebp+arg_0]  +
push offset aSU  +
push 104h  +
push edi  +
call sub_100DD8E  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jge loc_1019BA8  +
push ebx  +
push 317h  +
push offset aEnginecallba_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019BB1  +
mov eax [ebp+arg_C] +
and [ebp+lpMem] 0 +
mov [eax] edi +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_1019BC7  +
push [ebp+lpMem]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp [ebp+var_8] 0 +
jz loc_1019BD7  +
push [ebp+var_8]  +
push 0  +
call esi  +
push eax  +
call edi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_C] ecx +
call sub_1031307  +
mov edi eax +
test edi edi +
jge loc_1019C23  +
push edi  +
push 3F9h  +
push offset aEnginecallba_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019D9E  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1019C62  +
mov edi 8007000Eh +
push edi  +
push 3FBh  +
push offset aEnginecallba_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019D86  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+7Ch] 2 +
jnb loc_1019C78  +
mov edi 80004005h +
push edi  +
push 3FFh  +
jmp loc_1019C49  +
push ebx  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_4] +
xor ebx ebx +
inc ebx  +
mov [eax+80h] ebx +
mov eax [eax+78h] +
mov ecx [eax+4] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+10h]  +
push eax  +
mov esi 400h +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1019CC1  +
push edi  +
push 407h  +
push offset aEnginecallba_8  +
push offset aDwzErrorSDHr0x  +
push ebx  +
jmp loc_1019D43  +
mov eax [ebp+var_4] +
push 2  +
pop ebx  +
cmp [eax+7Ch] ebx +
jbe loc_1019D0D  +
push offset asc_1005388  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_1019D29  +
mov eax [ebp+var_4] +
mov [eax+80h] ebx +
mov eax [eax+78h] +
mov ecx [eax+ebx*4] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_1019D31  +
mov eax [ebp+var_4] +
inc ebx  +
cmp ebx [eax+7Ch] +
jb loc_1019CCC  +
push [ebp+lpMem]  +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jnz loc_1019D4D  +
mov edi 8007000Eh +
push edi  +
push 415h  +
jmp loc_1019D65  +
push edi  +
push 40Bh  +
jmp loc_1019D37  +
push edi  +
push 411h  +
push offset aEnginecallba_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019D84  +
push [ebp+arg_0]  +
mov ecx [ebp+var_C] +
push esi  +
call sub_10191FF  +
mov edi eax +
test edi edi +
jge loc_1019D79  +
push edi  +
push 41Bh  +
push offset aEnginecallba_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test esi esi +
jz loc_1019D84  +
push esi  +
call ds:SysFreeString  +
pop esi  +
pop ebx  +
cmp [ebp+lpMem] 0 +
jz loc_1019D9E  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+var_8] +
push eax  +
mov edi ecx +
mov [ebp+var_C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1019DF0  +
push esi  +
push 295h  +
push offset aEnginecallba_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019E94  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call sub_1019AAB  +
mov esi eax +
cmp esi ebx +
jge loc_1019E12  +
push esi  +
push 298h  +
jmp loc_1019E5B  +
lea eax [ebp+var_C] +
push eax  +
call sub_102517C  +
mov esi eax +
cmp esi ebx +
jge loc_1019E29  +
push esi  +
push 29Bh  +
jmp loc_1019E5B  +
mov eax [ebp+var_8] +
mov ecx [eax+80h] +
mov eax [eax+78h] +
mov ecx [eax+ecx*4] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push [ebp+arg_4]  +
mov ecx [ebp+var_C] +
push [ebp+arg_0]  +
push [ebp+lpMem]  +
push eax  +
call sub_10259D1  +
mov esi eax +
cmp esi ebx +
jge loc_1019E71  +
push esi  +
push 2A2h  +
push offset aEnginecallba_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019E7E  +
mov ecx [ebp+arg_8] +
xor eax eax +
cmp esi 1 +
setnz al  +
mov [ecx] eax +
cmp [ebp+lpMem] ebx +
jz loc_1019E94  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_8] +
push eax  +
mov ebx ecx +
mov [ebp+var_C] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_8] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_1019EE8  +
push esi  +
push 2CDh  +
push offset aEnginecallb_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1019F7A  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_C]  +
mov ecx ebx +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1019AAB  +
mov esi eax +
cmp esi edi +
jge loc_1019F0A  +
push esi  +
push 2D0h  +
jmp loc_1019F50  +
lea eax [ebp+var_C] +
push eax  +
call sub_102517C  +
mov esi eax +
cmp esi edi +
jge loc_1019F21  +
push esi  +
push 2D3h  +
jmp loc_1019F50  +
mov eax [ebp+var_8] +
mov ecx [eax+80h] +
mov eax [eax+78h] +
mov ecx [eax+ecx*4] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push [ebp+arg_4]  +
mov ecx [ebp+var_C] +
push [ebp+lpMem]  +
push eax  +
call sub_1025B38  +
mov esi eax +
cmp esi edi +
jge loc_1019F64  +
push esi  +
push 2D9h  +
push offset aEnginecallb_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] edi +
jz loc_1019F7A  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov edi [ebp+8] +
mov [ebp-0Ch] eax +
mov [ebp-4] eax +
mov [ebp-8] eax +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp+0Ch]  +
xor ebx ebx +
inc ebx  +
mov ecx edi +
mov [ebp-2Ch] ebx +
call sub_1019321  +
mov esi eax +
test esi esi +
jge loc_1019FCF  +
push esi  +
push 4Fh  +
jmp loc_101A146  +
cmp dword ptr [ebp-24h] 0 +
jz loc_1019FF1  +
lea eax [ebp-4] +
push eax  +
mov ecx edi +
call sub_1019BE5  +
mov esi eax +
test esi esi +
jge loc_1019FEE  +
push esi  +
push 57h  +
jmp loc_101A146  +
mov [ebp-0Ch] ebx +
cmp dword ptr [ebp-20h] 0 +
jz loc_101A013  +
lea eax [ebp-4] +
push eax  +
mov ecx edi +
call sub_1019A1A  +
mov esi eax +
test esi esi +
jge loc_101A010  +
push esi  +
push 61h  +
jmp loc_101A146  +
mov [ebp-0Ch] ebx +
cmp dword ptr [ebp-14h] 0 +
jz loc_101A035  +
lea eax [ebp-4] +
push eax  +
mov ecx edi +
call sub_101999B  +
mov esi eax +
test esi esi +
jge loc_101A032  +
push esi  +
push 6Bh  +
jmp loc_101A146  +
mov [ebp-0Ch] ebx +
cmp dword ptr [ebp-0Ch] 0 +
mov edi 198h +
jnz loc_101A0D2  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
push dword ptr [ebp-2Ch]  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp-8]  +
mov uID edi +
call sub_1019DAA  +
mov esi eax +
test esi esi +
jge loc_101A071  +
push esi  +
push 7Bh  +
jmp loc_101A146  +
cmp dword ptr [ebp-0Ch] 0 +
mov uID 196h +
jnz loc_101A0D2  +
cmp dword ptr [ebp-28h] 0 +
jz loc_101A097  +
mov esi 0C000157Dh +
push esi  +
push 85h  +
jmp loc_101A146  +
push dword ptr [ebp-8]  +
mov ecx dword_104E188 +
call sub_101929C  +
mov ecx [ebp+8] +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_1019756  +
mov esi eax +
test esi esi +
jge loc_101A0C5  +
push esi  +
push 8Fh  +
jmp loc_101A146  +
mov ecx dword_104E188 +
push 0  +
call sub_101929C  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_101A10A  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
push dword ptr [ebp-2Ch]  +
mov uID edi +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
call sub_1019EA2  +
mov esi eax +
test esi esi +
jge loc_101A100  +
push esi  +
push 9Eh  +
jmp loc_101A146  +
mov uID 196h +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_101A129  +
push dword ptr [ebp-4]  +
mov ecx [ebp+8] +
call sub_10198FE  +
mov esi eax +
test esi esi +
jge loc_101A129  +
push esi  +
push 0A4h  +
jmp loc_101A146  +
cmp dword ptr [ebp-18h] 0 +
jz loc_101A15B  +
push dword ptr [ebp-4]  +
mov ecx [ebp+8] +
call sub_1019861  +
mov esi eax +
test esi esi +
jge loc_101A15B  +
push esi  +
push 0A9h  +
push offset aEnginecallb_11  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_101A167  +
mov eax [ebp-4] +
mov ecx [ebp+10h] +
and dword ptr [ebp-4] 0 +
mov [ecx] eax +
cmp dword ptr [ebp-8] 0 +
jz loc_101A17A  +
push dword ptr [ebp-8]  +
call ds:SysFreeString  +
and dword ptr [ebp-8] 0 +
mov eax [ebp+8] +
mov eax [eax+4] +
mov edi ds:SafeArrayDestroy +
test eax eax +
jz loc_101A194  +
push eax  +
call edi  +
mov eax [ebp+8] +
and dword ptr [eax+4] 0 +
cmp dword ptr [ebp-4] 0 +
jz loc_101A19F  +
push dword ptr [ebp-4]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax dword_104E174 +
test eax eax +
jz locret_101A1C4  +
push eax  +
call sub_10361ED  +
and dword_104E174 0 +
pop ecx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
and dword ptr [esi] 0 +
and dword ptr [esi+8] 0 +
test ecx ecx +
jz loc_101A1E8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_101A225  +
push esi  +
push 31Dh  +
push offset aSdengineCons_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101A230  +
push [ebp+wParam]  +
mov ecx [ebp+var_4] +
call sub_10124C6  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_101A272  +
push esi  +
push 33Bh  +
push offset aSdenginePauseu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101A27D  +
push [ebp+wParam]  +
mov ecx [ebp+var_4] +
call sub_1012514  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1015DD3  +
test [ebp+arg_0] 1 +
jz loc_101A2A3  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E174 +
push esi  +
xor esi esi +
test eax eax +
jnz loc_101A2E3  +
mov eax 8000FFFFh +
push eax  +
push 5D5h  +
push offset aSdengineGeteng  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101A2E8  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax ecx +
xor ecx ecx +
mov [eax+4] ecx +
mov dword ptr [eax] offset off_10046E4 +
mov [eax+10h] ecx +
mov [eax+8] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+0Ch] ecx +
mov [eax+14h] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A2FF  +
mov eax [ebp+arg_0] +
mov [esi+20h] eax +
mov eax [ebp+arg_4] +
mov [esi+24h] eax +
mov dword ptr [esi] offset off_1004C20 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+14h] +
test eax eax +
jz loc_101A368  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+14h] 0 +
mov eax [esi+10h] +
mov [esi+14h] eax +
mov eax [ebp+arg_0] +
mov [esi+10h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+14h] +
test eax eax +
jz loc_101A394  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+14h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
test eax eax +
jz loc_101A3B5  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+1Ch] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+1Ch] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+24h] +
test eax eax +
jz loc_101A3E5  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+24h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+24h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jz loc_101A442  +
mov eax [ebp+arg_0] +
push esi  +
mov si [edx] +
cmp si [eax] +
jnz loc_101A431  +
test si si +
jz loc_101A42D  +
mov si [edx+2] +
cmp si [eax+2] +
jnz loc_101A431  +
add edx 4 +
add eax 4 +
test si si +
jnz loc_101A40B  +
xor eax eax +
jmp loc_101A436  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop esi  +
test eax eax +
jz loc_101A442  +
mov dword ptr [ecx+58h] 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push esi  +
mov esi ecx +
jz loc_101A472  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A472  +
mov dword ptr [esi+58h] 1 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and dword ptr [ecx+8] 0 +
and dword ptr [ecx+4] 0 +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_4] +
push edi  +
mov [ecx+10h] eax +
xor eax eax +
mov dword ptr [ecx] offset off_1005454 +
lea edi [ecx+14h] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax ecx +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
push edi  +
mov edi ds:CloseHandle +
mov dword ptr [esi] offset off_1005454 +
test eax eax +
jz loc_101A4D7  +
cmp eax 0FFFFFFFFh +
jz loc_101A4D7  +
push eax  +
call edi  +
and dword ptr [esi+4] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_101A4EA  +
cmp eax 0FFFFFFFFh +
jz loc_101A4EA  +
push eax  +
call edi  +
and dword ptr [esi+8] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_101A4FD  +
cmp eax 0FFFFFFFFh +
jz loc_101A4FD  +
push eax  +
call edi  +
and dword ptr [esi+24h] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101A47C  +
mov dword ptr [esi] offset off_1005468 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A1CA  +
test [ebp+arg_0] 1 +
jz loc_101A543  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx dword_104E170 +
test ecx ecx +
jz locret_101A567  +
push 1  +
call sub_101A529  +
and dword_104E170 0 +
retn   +
***
mov eax dword_104E170 +
test eax eax +
jz locret_101A5B7  +
push esi  +
xor esi esi +
cmp [eax] esi +
jbe loc_101A5B6  +
mov eax [eax+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov ecx [eax+esi*4] +
push 0  +
call sub_101A34F  +
mov eax dword_104E170 +
mov eax [eax+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov ecx [eax+esi*4] +
call sub_101A37E  +
mov eax dword_104E170 +
inc esi  +
cmp esi [eax] +
jb loc_101A57D  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
call ds:SetDllDirectoryW  +
mov edi 80070000h +
test eax eax +
jnz loc_101A608  +
call ds:GetLastError  +
test eax eax +
jle loc_101A5E6  +
and eax 0FFFFh +
or eax edi +
mov esi eax +
test esi esi +
jge loc_101A608  +
push esi  +
push 3EFh  +
push offset aSdengineResolv  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101A685  +
push ebx  +
mov ebx [ebp+arg_0] +
lea ecx [ebx+10h] +
call sub_10158C4  +
push eax  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101A63E  +
call ds:GetLastError  +
test eax eax +
jle loc_101A630  +
and eax 0FFFFh +
or eax edi +
mov esi eax +
test esi esi +
jge loc_101A63E  +
push esi  +
push 3F2h  +
jmp loc_101A670  +
cmp dword_104E17C 0 +
jz loc_101A64E  +
mov esi 80004004h +
jmp loc_101A66A  +
mov eax [ebx+14h] +
mov edi [eax+10h] +
mov esi [edi] +
mov eax [ebx] +
mov ecx ebx +
add esi 4Ch +
call dword ptr [eax+4]  +
push eax  +
push edi  +
call dword ptr [esi]  +
mov esi eax +
test esi esi +
jge loc_101A684  +
push esi  +
push 3F5h  +
push offset aSdengineResolv  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
xor esi esi +
mov [ebp+var_4] ecx +
cmp [edi+28h] ebx +
jnz loc_101A6B8  +
mov dword ptr [eax] 1 +
jmp loc_101A7A0  +
cmp [eax] ebx +
jnz loc_101A7A0  +
cmp [edi+34h] ebx +
jnz loc_101A6D7  +
mov ecx dword_104E188 +
cmp [ecx+2Ch] ebx +
jnz loc_101A6D7  +
mov [eax] ebx +
jmp loc_101A7A0  +
call sub_102C3AC  +
mov esi eax +
cmp esi ebx +
jge loc_101A6EA  +
push esi  +
push 4ACh  +
jmp loc_101A734  +
cmp esi 1 +
jz loc_101A7A0  +
mov ecx [ebp+var_4] +
push edi  +
call sub_101A1EF  +
mov esi eax +
cmp esi ebx +
jge loc_101A70A  +
push esi  +
push 4B8h  +
jmp loc_101A734  +
push 0FFFFFFFFh  +
push ebx  +
push offset Handles  +
push 1Ah  +
call ds:WaitForMultipleObjects  +
sub eax 7 +
jz loc_101A798  +
dec eax  +
jz loc_101A794  +
sub eax 11h +
jz loc_101A74A  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 4D5h  +
push offset aSdengineConsen  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101A7A0  +
push hEvent  +
xor edi edi +
inc edi  +
mov dword_104E17C edi +
call ds:SetEvent  +
test eax eax +
jz loc_101A767  +
xor esi esi +
jmp loc_101A7A0  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101A77B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jge loc_101A7A0  +
push esi  +
push 4CFh  +
push offset aSdengineConsen  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_101A740  +
xor eax eax +
jmp loc_101A79B  +
xor eax eax +
inc eax  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
xor esi esi +
mov [ebp+var_4] ecx +
cmp [edi+18h] ebx +
jz loc_101A885  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_101A7E9  +
push esi  +
push 504h  +
push offset aSdengineTrypau  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_101A83C  +
xor ebx ebx +
inc ebx  +
cmp esi ebx +
jz loc_101A88A  +
mov ecx [ebp+var_4] +
push edi  +
call sub_101A23C  +
mov esi eax +
test esi esi +
jge loc_101A80B  +
push esi  +
push 50Dh  +
jmp loc_101A831  +
push 0FFFFFFFFh  +
push 0  +
push offset Handles  +
push 1Ah  +
call ds:WaitForMultipleObjects  +
cmp eax 12h +
jz loc_101A885  +
cmp eax 19h +
jz loc_101A846  +
mov esi 80004005h +
push esi  +
push 528h  +
push offset aSdengineTrypau  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_101A88A  +
push hEvent  +
mov dword_104E17C ebx +
call ds:SetEvent  +
test eax eax +
jnz loc_101A87E  +
call ds:GetLastError  +
test eax eax +
jle loc_101A870  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_101A87E  +
push esi  +
push 51Dh  +
jmp loc_101A831  +
mov esi 80004004h +
jmp loc_101A88A  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov ebx [edi] +
xor edx edx +
xor esi esi +
mov [ebp+var_8] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_4] edx +
cmp dword_104E17C edx +
jz loc_101A8E2  +
mov eax 80004004h +
push eax  +
push 553h  +
push offset aSdengineVerify  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101AAF4  +
mov eax [ebp+arg_0] +
cmp eax edx +
jz loc_101A9D4  +
cmp ebx edx +
jbe loc_101A9D4  +
mov ecx [eax+14h] +
mov eax [edi+4] +
mov eax [eax+20h] +
mov edi [eax] +
mov [ebp+arg_0] edi +
mov edi [edi+4] +
cmp ecx edi +
jz loc_101A917  +
inc edx  +
add eax 4 +
cmp edx ebx +
jb loc_101A8FE  +
jmp loc_101A9D1  +
mov ebx ds:SetDllDirectoryW +
push 0  +
mov [ebp+var_C] edx +
call ebx  +
test eax eax +
jnz loc_101A94D  +
call ds:GetLastError  +
test eax eax +
jle loc_101A93C  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_101A94D  +
push esi  +
push 56Bh  +
jmp loc_101AB3A  +
mov ecx [ebp+arg_0] +
call sub_10158C4  +
push eax  +
call ebx  +
test eax eax +
jnz loc_101A981  +
call ds:GetLastError  +
test eax eax +
jle loc_101A970  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_101A981  +
push esi  +
push 56Eh  +
jmp loc_101AB3A  +
mov eax [edi+10h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jge loc_101A9A1  +
push esi  +
push 571h  +
jmp loc_101AB3A  +
push [ebp+var_4]  +
mov ecx [ebp+arg_0] +
call sub_10168CA  +
mov esi eax +
cmp esi ebx +
jge loc_101A9BD  +
push esi  +
push 577h  +
jmp loc_101AB3A  +
cmp [ebp+var_4] ebx +
jz loc_101A9CE  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] ebx +
mov [edi+64h] ebx +
mov edi [ebp+var_8] +
and [ebp+arg_0] 0 +
cmp dword ptr [edi] 0 +
jbe loc_101AAD0  +
cmp dword_104E17C 0 +
jnz loc_101AB0C  +
mov eax [edi+4] +
mov eax [eax+20h] +
mov ecx [ebp+arg_0] +
mov edi [eax+ecx*4] +
mov eax [edi] +
mov ebx [edi+4] +
mov ecx edi +
call dword ptr [eax+14h]  +
test eax eax +
jz loc_101AABD  +
cmp dword ptr [ebx+68h] 0 +
jz loc_101AABD  +
mov eax [ebp+var_C] +
cmp eax [ebp+arg_0] +
jz loc_101AABD  +
push 0  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101AA4C  +
call ds:GetLastError  +
test eax eax +
jle loc_101AA42  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_101AB1C  +
mov ecx edi +
call sub_10158C4  +
push eax  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101AA7C  +
call ds:GetLastError  +
test eax eax +
jle loc_101AA72  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_101AB24  +
mov eax [ebx+10h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
test esi esi +
jl loc_101AB2C  +
push [ebp+var_4]  +
mov ecx edi +
call sub_10168CA  +
mov esi eax +
xor edi edi +
cmp esi edi +
jl loc_101AB34  +
cmp [ebp+var_4] edi +
jz loc_101AABA  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov [ebx+64h] edi +
inc [ebp+arg_0]  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov edi eax +
cmp ecx [eax] +
jb loc_101A9E1  +
mov ecx [edi+4] +
call sub_1017B6D  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_104E004 eax +
cmp esi 803C0102h +
jz loc_101AAF2  +
cmp esi 803C0101h +
jnz loc_101AAF4  +
xor esi esi +
cmp [ebp+var_4] 0 +
jz loc_101AB03  +
push [ebp+var_4]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax 80004004h +
push eax  +
push 587h  +
jmp loc_101A8C7  +
push esi  +
push 597h  +
jmp loc_101AB3A  +
push esi  +
push 59Ah  +
jmp loc_101AB3A  +
push esi  +
push 59Dh  +
jmp loc_101AB3A  +
push esi  +
push 5A3h  +
push offset aSdengineVerify  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101AAE2  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
cmp [edi] esi +
jbe loc_101AB93  +
mov eax [edi+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov eax [eax+esi*4] +
cmp dword ptr [eax+10h] 0 +
jz loc_101AB8E  +
mov eax [edi+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov eax [eax+esi*4] +
mov eax [eax+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
inc esi  +
cmp esi [edi] +
jb loc_101AB61  +
pop edi  +
pop esi  +
retn   +
***
mov ecx dword_104E170 +
mov dword_104E17C 1 +
test ecx ecx +
jz loc_101ABB4  +
call sub_101AB55  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
push [ebp+arg_0]  +
call sub_101A44B  +
mov eax [esi+4] +
test eax eax +
jz loc_101ABE1  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+4] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+4] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
push [ebp+arg_0]  +
call sub_101A3FB  +
mov eax [esi+8] +
test eax eax +
jz loc_101AC1C  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+8] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+8] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+0Ch]  +
push [ebp+arg_0]  +
call sub_101A3FB  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_101AC57  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+0Ch] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+0Ch] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+20h]  +
push [ebp+arg_0]  +
call sub_101A3FB  +
mov eax [esi+20h] +
test eax eax +
jz loc_101AC92  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+20h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+20h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+34h]  +
push [ebp+arg_0]  +
call sub_101A3FB  +
mov eax [esi+34h] +
test eax eax +
jz loc_101ACCD  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+34h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+34h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A4B2  +
test byte ptr [ebp+8] 1 +
jz loc_101ACFD  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
mov [ebp+var_24] edi +
cmp eax edi +
jnz loc_101AD4B  +
mov ebx 8000FFFFh +
push ebx  +
push 163h  +
jmp loc_101AEBA  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1009564  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AD6A  +
push ebx  +
push 168h  +
jmp loc_101AEBA  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AD88  +
push ebx  +
push 16Eh  +
jmp loc_101AEBA  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_18]  +
call sub_101484F  +
mov ebx eax +
cmp ebx edi +
jge loc_101ADA5  +
push ebx  +
push 171h  +
jmp loc_101AEBA  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Diagnosticide  +
push eax  +
call dword ptr [ecx+94h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101ADCB  +
push ebx  +
push 177h  +
jmp loc_101AEBA  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101ADE9  +
push ebx  +
push 17Ah  +
jmp loc_101AEBA  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_101ADF9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
push [ebp+var_10]  +
mov ecx esi +
call sub_101ABBC  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset a_Diagnostici_0  +
push eax  +
call dword ptr [ecx+94h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AE29  +
push ebx  +
push 181h  +
jmp loc_101AEBA  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AE44  +
push ebx  +
push 184h  +
jmp loc_101AEBA  +
push [ebp+var_1C]  +
mov ecx esi +
call sub_101ACA8  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AE6D  +
push ebx  +
push 189h  +
jmp loc_101AEBA  +
push [ebp+var_14]  +
mov ecx esi +
call sub_101AC6D  +
test byte ptr [ebp+var_24] 1 +
jz loc_101AE93  +
cmp dword_104E014 edi +
jz loc_101AE93  +
mov eax dword_104E188 +
mov dword ptr [eax+48h] 1 +
jmp loc_101AEA1  +
mov eax dword_104E188 +
mov dword_104E014 edi +
mov [eax+48h] edi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov ebx eax +
cmp ebx edi +
jge loc_101AED0  +
push ebx  +
push 199h  +
push offset aSdengineLoadid  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101AEDA  +
push [ebp+var_20]  +
mov ecx esi +
call sub_101A3CB  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_101AEEA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_101AEFA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_101AF0A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov esi ds:SysFreeString +
cmp [ebp+var_10] edi +
jz loc_101AF1D  +
push [ebp+var_10]  +
call esi  +
mov [ebp+var_10] edi +
cmp [ebp+var_14] edi +
jz loc_101AF2A  +
push [ebp+var_14]  +
call esi  +
mov [ebp+var_14] edi +
cmp [ebp+var_18] edi +
jz loc_101AF37  +
push [ebp+var_18]  +
call esi  +
mov [ebp+var_18] edi +
cmp [ebp+var_1C] edi +
jz loc_101AF44  +
push [ebp+var_1C]  +
call esi  +
mov [ebp+var_1C] edi +
cmp [ebp+var_20] edi +
jz loc_101AF4E  +
push [ebp+var_20]  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
xor esi esi +
mov ebx ecx +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call sub_101484F  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_101AF92  +
push eax  +
push 1D1h  +
jmp loc_101B050  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push [ebp+var_C]  +
push offset a_Displayinform  +
call sub_1014B70  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_101AFB6  +
push eax  +
push 1D7h  +
jmp loc_101B050  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_101AFD2  +
push eax  +
push 1DAh  +
jmp loc_101B050  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_101AFE2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebx+8] +
mov esi [ebp+arg_4] +
mov [eax+80h] esi +
mov eax [eax+78h] +
push [ebp+var_4]  +
mov edi esi +
shl edi 2 +
mov ecx [eax+edi] +
call sub_101ABF7  +
cmp [ebp+var_4] 0 +
jz loc_101B014  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push [ebp+var_C]  +
push offset a_Displayinfo_0  +
call sub_1014B70  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_101B036  +
push eax  +
push 1E4h  +
jmp loc_101B050  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_101B066  +
push eax  +
push 1E7h  +
push offset aSdengineLoadin  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101B0A1  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_101B077  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebx+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
push [ebp+var_4]  +
mov ecx [eax+edi] +
call sub_101AC32  +
cmp [ebp+var_4] 0 +
jz loc_101B0B4  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jz loc_101B0B4  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_101B0C8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_C] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_101B0D5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push edi  +
xor edi edi +
lea eax [ebp+var_18] +
push eax  +
mov [ebp+var_4] ecx +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
call sub_1031307  +
mov ebx eax +
cmp ebx edi +
jge loc_101B12D  +
push ebx  +
push 41Ch  +
push offset aSdengineReso_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101B293  +
push esi  +
mov esi [ebp+arg_0] +
cmp [esi+30h] edi +
jz loc_101B15F  +
lea eax [ebp+var_C] +
push eax  +
call sub_102E866  +
mov ebx eax +
cmp ebx edi +
jge loc_101B14D  +
push ebx  +
push 420h  +
jmp loc_101B18C  +
cmp [ebp+var_C] edi +
jnz loc_101B15F  +
mov eax dword_104E188 +
cmp [eax] edi +
jz loc_101B292  +
cmp dword_104E17C edi +
jz loc_101B173  +
mov [ebp+var_8] 1 +
jmp loc_101B292  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
push esi  +
call sub_101A7AE  +
mov ebx eax +
cmp ebx edi +
jge loc_101B19A  +
push ebx  +
push 430h  +
push offset aSdengineReso_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_101B1EA  +
xor edi edi +
inc edi  +
cmp ebx edi +
jnz loc_101B1A8  +
xor ebx ebx +
jmp loc_101B270  +
cmp [ebp+var_10] 0 +
jz loc_101B1F7  +
mov eax dword_104E188 +
mov [eax+14h] edi +
mov [esi+20h] edi +
mov [esi+1Ch] edi +
cmp [ebp+arg_4] 0 +
jz loc_101B281  +
mov ecx [ebp+var_4] +
push esi  +
call sub_101A898  +
mov ebx eax +
test ebx ebx +
jge loc_101B275  +
push ebx  +
push 46Bh  +
push offset aSdengineReso_0  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101B292  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call sub_101A692  +
mov ebx eax +
test ebx ebx +
jge loc_101B212  +
push ebx  +
push 444h  +
jmp loc_101B1DF  +
cmp ebx edi +
jz loc_101B270  +
cmp [ebp+var_14] 0 +
jnz loc_101B222  +
and dword ptr [esi+34h] 0 +
jmp loc_101B1BC  +
mov eax dword_104E188 +
mov ecx [ebp+var_4] +
mov [eax+14h] edi +
push esi  +
mov [esi+20h] edi +
call sub_101A5BD  +
mov ebx eax +
xor eax eax +
test ebx ebx +
setnl al  +
mov [esi+1Ch] eax +
cmp ebx 803C0102h +
jz loc_101B252  +
cmp ebx 803C0101h +
jnz loc_101B254  +
xor ebx ebx +
test ebx ebx +
jge loc_101B263  +
push ebx  +
push 45Dh  +
jmp loc_101B1DF  +
cmp dword_104E17C 0 +
jz loc_101B1BC  +
mov [ebp+var_8] edi +
jmp loc_101B292  +
mov eax [esi+3Ch] +
cmp dword ptr [eax+1Ch] 0 +
jz loc_101B281  +
mov [esi+38h] edi +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
call sub_101626B  +
mov ecx [ebp+var_18] +
mov [ecx+70h] eax +
pop esi  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
mov [ebp+ppv] esi +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+lpMem] esi +
cmp dword_104E17C esi +
jz loc_101B2D6  +
mov [ebp+var_4] 80004004h +
jmp loc_101B5AC  +
push esi  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101B31B  +
call ds:GetLastError  +
cmp eax esi +
jle loc_101B2F5  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax esi +
mov [ebp+var_4] eax +
jge loc_101B31B  +
push eax  +
push 604h  +
push offset aSdengineLoadpa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101B5AC  +
mov eax [ebx+8] +
mov esi [ebp+uID] +
push edi  +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov edi esi +
shl edi 2 +
mov ecx [edi+eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101B366  +
call ds:GetLastError  +
test eax eax +
jle loc_101B357  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B366  +
push eax  +
push 608h  +
jmp loc_101B38B  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1009574  +
push 15h  +
push 0  +
push offset stru_1009584  +
call ds:CoCreateInstance  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B3A4  +
push eax  +
push 613h  +
push offset aSdengineLoadpa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101B5AB  +
mov eax [ebx+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
push [ebp+ppv]  +
mov ecx [eax+edi] +
call sub_101A34F  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_101B3E0  +
test esi esi +
jnz loc_101B3E0  +
mov eax dword_104E188 +
mov eax [eax+9Ch] +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_101B420  +
mov eax [ebx+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov eax [eax+edi] +
cmp dword ptr [eax+5Ch] 0 +
jz loc_101B40E  +
mov eax [ebx+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov eax [eax+edi] +
mov eax [eax+30h] +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_101B420  +
test esi esi +
jnz loc_101B420  +
mov eax dword_104E188 +
mov eax [eax+0C8h] +
mov [ebp+var_C] eax +
mov eax [ebx+8] +
push [ebp+var_C]  +
mov [eax+80h] esi +
mov eax [eax+78h] +
mov ecx [edi+eax] +
mov eax [ebp+ppv] +
mov eax [eax] +
push dword_104E174  +
mov [ebp+uID] eax +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push [ebp+ppv]  +
mov eax [ebp+uID] +
call dword ptr [eax+1Ch]  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B470  +
add eax 7FF4FF00h +
mov [ebp+uID] 78h +
cmp eax 9 +
ja loc_101B485  +
mov [ebp+uID] 7Ah +
jmp loc_101B485  +
cmp eax 3C0105h +
jnz loc_101B4D7  +
mov [ebp+var_4] 803C0108h +
mov [ebp+uID] 79h +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_101B4B3  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 641h  +
jmp loc_101B57F  +
push 100h  +
push eax  +
push [ebp+uID]  +
call sub_10301CE  +
test eax eax +
jl loc_101B4D7  +
push [ebp+lpMem]  +
mov ecx dword_104E188 +
call sub_1014115  +
and [ebp+lpMem] 0 +
cmp [ebp+var_4] 0 +
jge loc_101B4EA  +
push [ebp+var_4]  +
push 64Ah  +
jmp loc_101B57F  +
mov eax [ebx+8] +
mov [eax+80h] esi +
mov eax [eax+78h] +
push dword ptr [edi+eax]  +
mov ecx ebx +
call sub_101AD09  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B50F  +
push eax  +
push 64Dh  +
jmp loc_101B57F  +
cmp [ebp+arg_4] 0 +
jz loc_101B53B  +
mov ecx [ebx+8] +
mov eax [ecx] +
call dword ptr [eax+40h]  +
test eax eax +
jz loc_101B593  +
mov eax 80004005h +
push eax  +
mov uID 19Dh +
mov [ebp+var_4] eax +
push 656h  +
jmp loc_101B57F  +
lea eax [ebp+var_14] +
push eax  +
call sub_102517C  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B553  +
push eax  +
push 65Dh  +
jmp loc_101B57F  +
mov ebx [ebx+8] +
mov eax [ebx+78h] +
mov [ebx+80h] esi +
mov edi [edi+eax] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_14] +
push eax  +
call sub_102521C  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101B593  +
push eax  +
push 660h  +
push offset aSdengineLoadpa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
jz loc_101B5AB  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
mov eax [ecx] +
push edi  +
xor ebx ebx +
call dword ptr [eax+40h]  +
xor edi edi +
cmp [esi] ebx +
jbe loc_101B602  +
push 1  +
push edi  +
mov ecx esi +
call sub_101B2A8  +
mov ebx eax +
test ebx ebx +
jl loc_101B5E8  +
inc edi  +
cmp edi [esi] +
jb loc_101B5D1  +
jmp loc_101B602  +
push ebx  +
push 689h  +
push offset aSdengineReload  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-2Ch] esi +
xor eax eax +
lea ebx [esi+8] +
push ebx  +
mov [ebp-14h] eax +
mov [ebp-24h] eax +
mov [ebp-20h] eax +
mov [ebp-10h] eax +
mov [ebp-18h] eax +
mov [ebp-1Ch] eax +
mov [ebp-34h] eax +
call sub_1031307  +
mov edi eax +
test edi edi +
jge loc_101B654  +
push edi  +
push 0BBh  +
push offset aSdengineInitia  +
jmp loc_101B959  +
mov eax [ebx] +
mov eax [eax+7Ch] +
mov [esi] eax +
cmp eax 10h +
ja loc_101B664  +
test eax eax +
jnz loc_101B671  +
mov edi 80070057h +
push edi  +
push 0C1h  +
jmp loc_101B64A  +
cmp dword_104E174 0 +
jnz loc_101B6B2  +
push 8  +
call sub_10361AF  +
pop ecx  +
mov [ebp-28h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_101B696  +
mov ecx eax +
call ??0DNameNode@@IAE@XZ  +
jmp loc_101B698  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_104E174 eax +
test eax eax +
jnz loc_101B6B2  +
mov edi 8007000Eh +
push edi  +
push 0C6h  +
jmp loc_101B64A  +
lea eax [ebp-34h] +
push eax  +
call sub_102517C  +
mov edi eax +
test edi edi +
jge loc_101B6C9  +
push edi  +
push 0CAh  +
jmp loc_101B64A  +
xor ebx ebx +
mov [ebp-28h] ebx +
cmp [esi] ebx +
jbe loc_101B968  +
mov esi offset aSdengineInitia +
jmp loc_101B6E0  +
mov ebx [ebp-28h] +
mov ecx [ebp-2Ch] +
push 0  +
push ebx  +
call sub_101B2A8  +
mov edi eax +
test edi edi +
jl loc_101B90A  +
mov eax [ebp-2Ch] +
add eax 8 +
mov eax [eax] +
mov [eax+80h] ebx +
mov eax [eax+78h] +
mov ebx [eax+ebx*4] +
mov eax [ebx+10h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
push offset dword_1009564  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_101B912  +
mov eax [ebp-24h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
test edi edi +
jl loc_101B91A  +
push dword ptr [ebp-28h]  +
mov ecx [ebp-2Ch] +
push dword ptr [ebp-14h]  +
call sub_101AF5C  +
mov edi eax +
test edi edi +
jl loc_101B922  +
mov eax [ebp-24h] +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov edi eax +
test edi edi +
jl loc_101B92A  +
mov al [ebp-30h] +
test al 1 +
jz loc_101B788  +
test al 4 +
jnz loc_101B779  +
test al 8 +
jnz loc_101B788  +
test al 10h +
jnz loc_101B781  +
test al 20h +
jnz loc_101B788  +
xor ecx ecx +
xor eax eax +
inc ecx  +
jmp loc_101B78D  +
xor ecx ecx +
inc ecx  +
mov eax ecx +
mov [ebx+54h] eax +
test byte ptr [ebp-30h] 0Ah +
jz loc_101B79E  +
mov eax dword_104E188 +
mov [eax+18h] ecx +
test byte ptr [ebp-30h] 2 +
jz loc_101B7AC  +
mov eax dword_104E188 +
mov [eax+5Ch] ecx +
mov eax [ebp-24h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
test edi edi +
jl loc_101B932  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-1Ch]  +
call sub_101484F  +
mov edi eax +
test edi edi +
jl loc_101B93A  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+18h]  +
test eax eax +
jnz loc_101B837  +
mov eax [ebp-20h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push offset a_Extensionp_11  +
push eax  +
call dword ptr [ecx+94h]  +
mov edi eax +
test edi edi +
jl loc_101B942  +
jnz loc_101B826  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov edi eax +
test edi edi +
jl loc_101B94A  +
push dword ptr [ebp-18h]  +
mov ecx ebx +
call sub_101A39B  +
mov eax [ebp-10h] +
test eax eax +
jz loc_101B837  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-10h] 0 +
mov eax [ebp-20h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push offset a_Extensionp_12  +
push eax  +
call dword ptr [ecx+94h]  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_101B952  +
jnz loc_101B866  +
mov eax dword_104E188 +
mov dword ptr [eax+58h] 1 +
cmp [ebp-28h] ebx +
jnz loc_101B892  +
push offset a_Extensionp_13  +
push dword ptr [ebp-20h]  +
call sub_1026D0A  +
cmp eax ebx +
jge loc_101B892  +
push eax  +
push 128h  +
push esi  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
xor edi edi +
cmp [ebp-18h] ebx +
jz loc_101B8A5  +
push dword ptr [ebp-18h]  +
call ds:SysFreeString  +
mov [ebp-18h] ebx +
cmp [ebp-1Ch] ebx +
jz loc_101B8B6  +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
mov [ebp-1Ch] ebx +
cmp [ebp-14h] ebx +
jz loc_101B8C7  +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
mov [ebp-14h] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_101B8D7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov eax [ebp-24h] +
cmp eax ebx +
jz loc_101B8E7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-24h] ebx +
mov eax [ebp-10h] +
cmp eax ebx +
jz loc_101B8F7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10h] ebx +
inc dword ptr [ebp-28h]  +
mov eax [ebp-2Ch] +
mov ecx [ebp-28h] +
cmp ecx [eax] +
jb loc_101B6DD  +
jmp loc_101B968  +
push edi  +
push 0CEh  +
jmp loc_101B958  +
push edi  +
push 0D8h  +
jmp loc_101B958  +
push edi  +
push 0DBh  +
jmp loc_101B958  +
push edi  +
push 0E1h  +
jmp loc_101B958  +
push edi  +
push 0E7h  +
jmp loc_101B958  +
push edi  +
push 108h  +
jmp loc_101B958  +
push edi  +
push 10Bh  +
jmp loc_101B958  +
push edi  +
push 10Fh  +
jmp loc_101B958  +
push edi  +
push 113h  +
jmp loc_101B958  +
push edi  +
push 11Bh  +
push esi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor esi esi +
cmp [ebp-14h] esi +
jz loc_101B97B  +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
mov [ebp-14h] esi +
cmp [ebp-18h] esi +
jz loc_101B98C  +
push dword ptr [ebp-18h]  +
call ds:SysFreeString  +
mov [ebp-18h] esi +
cmp [ebp-1Ch] esi +
jz loc_101B99D  +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
mov [ebp-1Ch] esi +
mov eax [ebp-20h] +
cmp eax esi +
jz loc_101B9AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] esi +
mov eax [ebp-10h] +
cmp eax esi +
jz loc_101B9BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10h] esi +
mov eax [ebp-24h] +
cmp eax esi +
jz loc_101B9CA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_28] +
push eax  +
mov ebx ecx +
mov [ebp+var_8] edi +
mov [ebp+var_1C] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_20] edi +
mov [ebp+var_14] edi +
mov [ebp+var_18] edi +
mov [ebp+var_28] edi +
call sub_1031307  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_101BA27  +
push eax  +
push 217h  +
push offset aSdengineDiagno  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
jmp loc_101BE7F  +
mov eax dword_104E188 +
cmp [eax+10h] edi +
jz loc_101BA99  +
cmp [eax+7Ch] edi +
jnz loc_101BA99  +
push 28h  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_101BA56  +
mov ecx dword_104E188 +
push dword ptr [ecx+78h]  +
mov ecx eax +
call sub_101A505  +
mov esi eax +
jmp loc_101BA58  +
xor esi esi +
xor eax eax +
cmp esi edi +
setnz al  +
mov [ebp+var_20] esi +
mov [ebp+var_14] eax +
cmp eax edi +
jz loc_101BA99  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
xor ecx ecx +
cmp eax edi +
setz cl  +
mov [ebp+var_4] eax +
mov [ebp+var_14] ecx +
cmp ecx edi +
jz loc_101BA99  +
mov eax [esi] +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx esi +
call dword ptr [eax+8]  +
xor ecx ecx +
cmp eax edi +
setz cl  +
mov [ebp+var_4] eax +
mov [ebp+var_14] ecx +
mov eax [ebx] +
shl eax 5 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_101BAC8  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 230h  +
jmp loc_101BA11  +
cmp [ebx] edi +
jbe loc_101BD3B  +
push 20h  +
call sub_10361AF  +
pop ecx  +
test eax eax +
jz loc_101BAE5  +
mov ecx eax +
call sub_101A2FF  +
jmp loc_101BAE7  +
xor eax eax +
mov ecx [ebp+lpMem] +
mov esi edi +
shl esi 2 +
add ecx esi +
mov [ebp+var_10] ecx +
mov [ecx] eax +
test eax eax +
jz loc_101BD59  +
mov eax [ebx+8] +
xor edx edx +
inc edx  +
mov [eax+84h] edx +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [esi+eax] +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
and dword ptr [eax+68h] 0 +
cmp dword ptr [ecx+5Ch] 0 +
jz loc_101BD32  +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
cmp dword ptr [eax+60h] 0 +
jnz loc_101BB71  +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
push edx  +
push edi  +
mov ecx ebx +
mov [eax+60h] edx +
call sub_101B2A8  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BD6C  +
push 0  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101BB9C  +
call ds:GetLastError  +
test eax eax +
jle loc_101BB91  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BD77  +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [esi+eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
call ds:SetDllDirectoryW  +
test eax eax +
jnz loc_101BBDA  +
call ds:GetLastError  +
test eax eax +
jle loc_101BBCF  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BD84  +
cmp dword_104E17C 0 +
jnz loc_101BD91  +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
mov eax [eax+10h] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
mov ecx eax +
mov eax [ebx+8] +
xor edx edx +
test ecx ecx +
setnl dl  +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
mov [ebp+var_4] ecx +
mov [eax+68h] edx +
cmp ecx 803C0102h +
jz loc_101BC31  +
cmp ecx 803C0101h +
jnz loc_101BC35  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jl loc_101BD9D  +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [eax+esi] +
call sub_101A37E  +
mov eax [ebx+8] +
mov ecx [ebp+var_10] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
mov eax [eax+6Ch] +
mov [ebp+var_24] eax +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ecx] +
push dword ptr [eax+esi]  +
mov edx [ecx] +
call dword ptr [edx]  +
cmp [ebp+var_8] 0 +
jz loc_101BC9E  +
mov eax [ebp+var_10] +
push [ebp+var_8]  +
mov ecx [eax] +
call sub_10189FC  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BDAA  +
mov eax [ebp+var_10] +
push [ebp+var_24]  +
mov ecx [eax] +
call sub_10162FB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BDB5  +
mov eax [ebp+var_10] +
push [ebp+var_24]  +
mov ecx [eax] +
call sub_1016592  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101BDC0  +
mov eax dword_104E188 +
cmp dword ptr [eax+0B4h] 0 +
jbe loc_101BCEF  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
test eax eax +
jnz loc_101BCEF  +
xor ecx ecx +
inc ecx  +
jmp loc_101BCF1  +
xor ecx ecx +
mov eax [ebx+8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov eax [eax+esi] +
mov [eax+64h] ecx +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
add [ebp+var_1C] eax +
mov eax dword_104E188 +
cmp dword ptr [eax+38h] 0 +
jnz loc_101BDCB  +
cmp [ebp+var_8] 0 +
jz loc_101BD32  +
push [ebp+var_8]  +
call ds:SysFreeString  +
and [ebp+var_8] 0 +
inc edi  +
cmp edi [ebx] +
jb loc_101BAD0  +
mov ecx [ebx+4] +
xor esi esi +
inc esi  +
test ecx ecx +
jz loc_101BDD7  +
mov eax [ecx] +
push esi  +
call dword ptr [eax+4]  +
xor edi edi +
mov [ebx+4] edi +
jmp loc_101BDD9  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 234h  +
jmp loc_101BA11  +
push eax  +
push 24Bh  +
jmp loc_101BA11  +
push [ebp+var_4]  +
push 252h  +
jmp loc_101BA11  +
push [ebp+var_4]  +
push 256h  +
jmp loc_101BA11  +
mov [ebp+var_4] 80004004h +
jmp loc_101BE82  +
push [ebp+var_4]  +
push 264h  +
jmp loc_101BA11  +
push eax  +
push 279h  +
jmp loc_101BA11  +
push eax  +
push 280h  +
jmp loc_101BA11  +
push eax  +
push 283h  +
jmp loc_101BA11  +
mov [ebp+var_4] 1 +
jmp loc_101BE82  +
xor edi edi +
push 28h  +
call sub_10361AF  +
pop ecx  +
cmp eax edi +
jz loc_101BDF3  +
push dword ptr [ebx]  +
mov ecx eax +
push [ebp+lpMem]  +
call sub_101A324  +
jmp loc_101BDF5  +
xor eax eax +
mov [ebx+4] eax +
cmp eax edi +
jnz loc_101BE1A  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_4] eax +
push 2A1h  +
push offset aSdengineDiagno  +
push offset aDwzErrorSDHr0x  +
push esi  +
jmp loc_101BA1D  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_28] +
mov [ebp+lpMem] edi +
mov [ecx+74h] eax +
cmp eax edi +
jnz loc_101BE4F  +
push esi  +
push edi  +
call sub_1032BFB  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_101BE40  +
push eax  +
push 2A8h  +
jmp loc_101BE0A  +
mov [ebp+var_4] esi +
mov dword_104E004 2 +
jmp loc_101BE82  +
cmp [ebp+var_18] edi +
jz loc_101BE82  +
mov ecx [ebx+4] +
push [ebp+var_18]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
cmp eax edi +
mov [ebp+var_4] eax +
jge loc_101BE82  +
push eax  +
push 2B2h  +
push offset aSdengineDiagno  +
push offset aDwzIgnoredSDHr  +
push esi  +
call sub_1014247  +
mov [ebp+var_4] edi +
add esp 14h +
mov eax dword_104E188 +
mov esi [ebp+var_20] +
xor edi edi +
mov [eax+10h] edi +
cmp [ebp+var_14] edi +
jz loc_101BE9B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp esi edi +
jz loc_101BEA7  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
cmp [ebp+lpMem] edi +
jz loc_101BEDE  +
cmp dword ptr [ebx] 0 +
jbe loc_101BECC  +
mov eax [ebp+lpMem] +
lea esi [eax+edi*4] +
mov ecx [esi] +
test ecx ecx +
jz loc_101BEC7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
and dword ptr [esi] 0 +
inc edi  +
cmp edi [ebx] +
jb loc_101BEB1  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor esi esi +
cmp [ebp+var_8] esi +
jz loc_101BEF1  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] esi +
cmp [ebp+var_18] esi +
jz loc_101BF07  +
push [ebp+var_18]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_104E188 +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
mov eax [eax+58h] +
neg eax  +
sbb eax eax +
and eax 2710h +
push edi  +
add eax 15Eh +
mov ebx ecx +
push eax  +
mov [ebp+var_14] ebx +
mov [ebp+var_18] esi +
mov [ebp+var_C] esi +
mov [ebp+var_10] esi +
call sub_102C200  +
mov edi eax +
cmp edi esi +
jge loc_101BF62  +
push edi  +
push 37Eh  +
jmp loc_101C0B0  +
mov ebx [ebx+4] +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_1C] ebx +
call sub_102E866  +
mov edi eax +
cmp edi esi +
jge loc_101BF82  +
push edi  +
push 383h  +
jmp loc_101C0B0  +
push 10h  +
call sub_10361AF  +
pop ecx  +
cmp eax esi +
jz loc_101BF9D  +
mov [eax] ebx +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov ebx eax +
jmp loc_101BF9F  +
xor ebx ebx +
mov [ebp+var_18] ebx +
cmp ebx esi +
jnz loc_101C04D  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 386h  +
jmp loc_101C0B0  +
lea eax [ebp+var_4] +
push eax  +
mov ecx ebx +
call sub_1017A18  +
mov edi eax +
cmp edi esi +
jl loc_101C08B  +
mov ecx [ebp+var_4] +
mov eax [ecx+3Ch] +
cmp [eax+24h] esi +
jnz loc_101C04D  +
cmp [ebp+arg_0] esi +
jz loc_101C016  +
call sub_1015CCD  +
test eax eax +
jnz loc_101C04D  +
mov ecx [ebp+var_4] +
cmp [ecx+30h] esi +
jz loc_101C00E  +
cmp [ebp+var_8] esi +
jnz loc_101C00E  +
mov eax dword_104E188 +
cmp [eax] esi +
jnz loc_101C00E  +
cmp [eax+50h] esi +
jnz loc_101C00E  +
cmp [eax+54h] esi +
jz loc_101C0C4  +
mov eax [ecx+3Ch] +
cmp [eax+1Ch] esi +
jnz loc_101C04D  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
push ecx  +
mov ecx [ebp+var_14] +
call sub_101B0E1  +
mov edi eax +
cmp edi esi +
jl loc_101C093  +
mov [ebp+var_10] 1 +
cmp [ebp+var_C] esi +
jnz loc_101C0C4  +
cmp [ebp+arg_0] esi +
jz loc_101C04D  +
mov ecx [ebp+var_1C] +
call sub_1017B6D  +
test eax eax +
jnz loc_101C0C4  +
mov ecx ebx +
call sub_10179BF  +
test eax eax +
jnz loc_101BFBC  +
mov eax dword_104E188 +
cmp [eax+2Ch] esi +
jnz loc_101C073  +
cmp [ebp+var_10] esi +
jnz loc_101C0C4  +
cmp dword_104E018 esi +
jz loc_101C0C4  +
push 163h  +
call sub_102C200  +
mov edi eax +
cmp edi esi +
jge loc_101C09B  +
push edi  +
push 3C6h  +
jmp loc_101C0B0  +
push edi  +
push 38Ah  +
jmp loc_101C0B0  +
push edi  +
push 3B4h  +
jmp loc_101C0B0  +
mov ecx [ebp+var_14] +
push esi  +
call sub_101A898  +
mov edi eax +
cmp edi esi +
jge loc_101C0C4  +
push edi  +
push 3C9h  +
push offset aSdengineResolv  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+var_18] +
mov dword_104E018 esi +
cmp ecx esi +
jz loc_101C0D8  +
push 1  +
call sub_101A289  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E170 +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
xor esi esi +
cmp eax ebx +
jnz loc_101C172  +
cmp dword_104E178 ebx +
jnz loc_101C18D  +
push 0Ch  +
call sub_10361AF  +
pop ecx  +
cmp eax ebx +
jz loc_101C127  +
mov [eax] ebx +
mov dword_104E174 ebx +
mov [eax+8] ebx +
mov [eax+4] ebx +
mov esi eax +
jmp loc_101C129  +
xor esi esi +
cmp esi ebx +
jnz loc_101C14D  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 59h  +
push offset aSdengineInstan  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101C177  +
mov ecx esi +
call sub_101B60D  +
mov edi eax +
cmp edi ebx +
jge loc_101C15F  +
push edi  +
push 5Ch  +
jmp loc_101C137  +
mov eax esi +
mov dword_104E170 eax +
xor esi esi +
mov dword_104E178 1 +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
cmp esi ebx +
jz loc_101C184  +
push 1  +
mov ecx esi +
call sub_101A529  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov eax 8000FFFFh +
push eax  +
push 63h  +
push offset aSdengineInstan  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101C184  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jge loc_101C1D0  +
push eax  +
push 0A7h  +
jmp loc_101C1E1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
test eax eax +
jge loc_101C1F5  +
push eax  +
push 0AAh  +
push offset aPipethread  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_101C214  +
mov eax [ebp+8] +
mov hWnd eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
call ds:CoInitializeEx  +
test eax eax +
jge loc_101C249  +
push eax  +
push 1E6h  +
push offset aCancelthread  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101C254  +
call sub_101AB9B  +
call ds:CoUninitialize  +
xor eax eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 1  +
push 1000000h  +
push [ebp+arg_0]  +
call InitProcessPriv  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+6Ch] +
test eax eax +
jz loc_101C2A1  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+6Ch] 0 +
mov eax [ebp+arg_0] +
mov [esi+6Ch] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+70h] +
test eax eax +
jz loc_101C2D4  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+70h] 0 +
mov eax [ebp+arg_0] +
mov [esi+70h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+74h] +
test eax eax +
jz loc_101C307  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+74h] 0 +
mov eax [ebp+arg_0] +
mov [esi+74h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0BCh] +
test eax eax +
jz loc_101C340  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+0BCh] 0 +
mov eax [ebp+arg_0] +
mov [esi+0BCh] eax +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx+40h] eax +
jz locret_101C365  +
cmp [ecx+44h] eax +
jz locret_101C365  +
cmp [ecx+48h] eax +
jz locret_101C365  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
call sub_101A47C  +
mov dword ptr [esi] offset off_10056FC +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C767  +
mov eax [ebp+arg_0] +
mov [esi+38h] eax +
mov dword ptr [esi] offset off_1005710 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax 14Dh +
retn   +
***
pop eax  +
retn   +
***
push 2  +
pop eax  +
cmp [ecx+38h] eax +
jz loc_101C3E5  +
xor eax eax +
or eax 10h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 68h  +
xor esi esi +
push esi  +
push offset Handles  +
mov [ebp+var_4] ecx +
call memset  +
mov edi ds:CreateEventW +
add esp 0Ch +
xor ebx ebx +
push esi  +
push esi  +
push esi  +
push esi  +
call edi  +
mov Handles[ebx] eax +
cmp eax esi +
jz loc_101C480  +
cmp eax 0FFFFFFFFh +
jz loc_101C480  +
add ebx 4 +
cmp ebx 68h +
jb loc_101C415  +
push esi  +
push esi  +
push esi  +
push esi  +
call edi  +
mov hObject eax +
cmp eax esi +
jz loc_101C49B  +
cmp eax 0FFFFFFFFh +
jz loc_101C49B  +
push esi  +
push esi  +
push esi  +
push offset sub_102DA5C  +
push esi  +
push esi  +
call ds:CreateThread  +
mov ecx [ebp+var_4] +
mov [ecx+10h] eax +
cmp eax esi +
jz loc_101C465  +
cmp eax 0FFFFFFFFh +
jnz loc_101C4C8  +
call ds:GetLastError  +
cmp eax esi +
jle loc_101C479  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 42h  +
jmp loc_101C4B4  +
call ds:GetLastError  +
cmp eax esi +
jle loc_101C494  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 35h  +
jmp loc_101C4B4  +
call ds:GetLastError  +
cmp eax esi +
jle loc_101C4AF  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 39h  +
push offset aModeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 254h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push esi  +
push eax  +
mov [ebp+lpMem] esi +
mov [ebp+ExecInfo.cbSize] esi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push esi  +
mov [ebp+lpParameter] esi +
call ds:GetModuleFileNameW  +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jnz loc_101C54F  +
call ds:GetLastError  +
cmp eax esi +
jle loc_101C541  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jge loc_101C54F  +
push esi  +
push 0CFh  +
jmp loc_101C56D  +
mov ecx dword_104E188 +
lea eax [ebp+lpMem] +
push eax  +
call sub_1027948  +
mov esi eax +
test esi esi +
jge loc_101C586  +
push esi  +
push 0D2h  +
push offset aModeElevate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101C6B3  +
lea eax [ebp+Filename] +
mov [ebp+ExecInfo.lpFile] eax +
mov eax [ebp+lpMem] +
mov [ebp+ExecInfo.lpParameters] eax +
mov eax dword_104E188 +
mov [ebp+ExecInfo.lpVerb] offset aRunas +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] 440h +
mov [ebp+ExecInfo.nShow] 1 +
mov eax [eax+14h] +
mov [ebp+var_218] eax +
test eax eax +
jz loc_101C626  +
push 28h  +
call sub_10361AF  +
pop ecx  +
test eax eax +
jz loc_101C5FB  +
mov edx dword_104E188 +
mov esi [edx+7Ch] +
mov edx [edx+78h] +
push esi  +
push edx  +
mov ecx eax +
call sub_101C36B  +
jmp loc_101C5FD  +
xor eax eax +
mov [ebp+lpParameter] eax +
test eax eax +
jnz loc_101C614  +
mov esi 8007000Eh +
push esi  +
push 0E7h  +
jmp loc_101C68F  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+4]  +
test eax eax +
jz loc_101C626  +
and [ebp+var_218] 0 +
lea eax [ebp+ExecInfo] +
push eax  +
call ds:ShellExecuteExW  +
test eax eax +
jz loc_101C6ED  +
xor esi esi +
mov eax [ebp+ExecInfo.hProcess] +
xor edx edx +
mov hHandle eax +
cmp [ebp+var_218] edx +
jz loc_101C6A3  +
mov ecx [ebp+lpParameter] +
push edx  +
push edx  +
push ecx  +
push offset StartAddress  +
push edx  +
push edx  +
mov [ecx+8] eax +
call ds:CreateThread  +
mov dword_104E180 eax +
test eax eax +
jz loc_101C679  +
cmp eax 0FFFFFFFFh +
jnz loc_101C6B3  +
call ds:GetLastError  +
test eax eax +
jle loc_101C687  +
and eax ebx +
or eax edi +
mov esi eax +
push esi  +
push 0FCh  +
push offset aModeElevate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+lpParameter] +
test ecx ecx +
jz loc_101C6B3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp esi 800704C7h +
jnz loc_101C6BE  +
xor esi esi +
inc esi  +
cmp [ebp+lpMem] 0 +
jz loc_101C6DC  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
call ds:GetLastError  +
test eax eax +
jle loc_101C6FB  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jge loc_101C63D  +
push esi  +
push 0F1h  +
jmp loc_101C68F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 30h  +
lea eax [ebp-48h] +
push edi  +
push eax  +
mov ebx ecx +
mov [ebp-4Ch] edi +
call memset  +
add esp 0Ch +
lea eax [ebp-4] +
push eax  +
mov [ebp-10h] edi +
mov [ebp-18h] edi +
mov [ebp-0Ch] edi +
mov [ebp-14h] edi +
mov [ebp-4] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_101C770  +
push esi  +
push 136h  +
push offset aModeDisplaywiz  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101C9DC  +
push 98h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-8] eax +
cmp eax edi +
jnz loc_101C797  +
mov esi 8007000Eh +
push esi  +
push 138h  +
jmp loc_101C7B2  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push 4Ch  +
push eax  +
call sub_1014418  +
mov esi eax +
cmp esi edi +
jge loc_101C7C3  +
push esi  +
push 13Eh  +
push offset aModeDisplaywiz  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_101C8A3  +
xor edi edi +
inc edi  +
push edi  +
push 8  +
call sub_101C25E  +
mov esi eax +
test esi esi +
jge loc_101C7DF  +
push esi  +
push 144h  +
jmp loc_101C898  +
push 2  +
mov [ebx+8] edi +
call InitThread  +
mov esi eax +
test esi esi +
jge loc_101C7FA  +
push esi  +
push 148h  +
jmp loc_101C898  +
mov [ebx+4] edi +
call sub_100B43D  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jge loc_101C815  +
push esi  +
push 14Fh  +
jmp loc_101C898  +
push ebx  +
call ds:OleInitialize  +
mov esi eax +
cmp esi ebx +
jge loc_101C82A  +
push esi  +
push 155h  +
jmp loc_101C898  +
call sub_100C6CF  +
mov esi eax +
cmp esi ebx +
jge loc_101C83D  +
push esi  +
push 158h  +
jmp loc_101C898  +
call sub_100B471  +
mov esi eax +
cmp esi ebx +
jge loc_101C850  +
push esi  +
push 15Bh  +
jmp loc_101C898  +
call sub_100B48B  +
mov esi eax +
cmp esi ebx +
jge loc_101C863  +
push esi  +
push 15Eh  +
jmp loc_101C898  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1012FAB  +
mov esi eax +
cmp esi ebx +
jge loc_101C87D  +
push esi  +
push 164h  +
jmp loc_101C898  +
push dword_104E138  +
mov ecx [ebp+8] +
call ds:?DUICreatePropertySheetPage@TaskPage@DirectUI@@QAEJPAUHINSTANCE__@@@Z  +
mov esi eax +
cmp esi ebx +
jge loc_101C8B0  +
push esi  +
push 167h  +
push offset aModeDisplaywiz  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101C9C4  +
mov ecx [ebp+8] +
call ds:??BTaskPage@DirectUI@@QAEPAU_PSP@@XZ  +
mov [ebp-10h] eax +
mov eax dword_104E188 +
push dword ptr [eax+0D4h]  +
call ds:IsWindow  +
test eax eax +
jnz loc_101C8DC  +
mov eax dword_104E188 +
mov [eax+0D4h] ebx +
mov eax dword_104E138 +
mov ecx [ebp-4] +
mov [ebp-40h] eax +
mov eax dword_104E188 +
mov dword ptr [ebp-4Ch] 34h +
mov eax [eax+0D4h] +
mov [ebp-44h] eax +
mov dword ptr [ebp-48h] 4100h +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_101C92E  +
mov ecx [ebp-4] +
lea eax [ebp-0Ch] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
push eax  +
call sub_10305F2  +
mov esi eax +
cmp esi ebx +
jl loc_101C92E  +
mov eax [ebp-0Ch] +
or dword ptr [ebp-48h] 2 +
mov [ebp-3Ch] eax +
mov ecx [ebp-4] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_101C93E  +
cmp esi ebx +
jge loc_101C94B  +
xor esi esi +
or dword ptr [ebp-48h] 4 +
mov dword ptr [ebp-3Ch] 6Bh +
lea eax [ebp-10h] +
mov [ebp-2Ch] eax +
mov eax [ebp-8] +
mov [ebp-30h] ebx +
mov [ebp-34h] edi +
mov [ebp-38h] eax +
mov dword ptr [ebp-28h] offset loc_101C201 +
cmp dword_104E0BC ebx +
jz loc_101C9BA  +
mov al byte_104E0C0 +
cmp al 4 +
jnb loc_101C979  +
test al al +
jnz loc_101C9BA  +
mov ecx dword_104E0AC +
mov edx 80010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_101C9BA  +
mov ecx dword_104E0B4 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_104E0B0 +
jnz loc_101C9BA  +
cmp eax ecx +
jnz loc_101C9BA  +
push offset dword_1001860  +
push dword_104E094  +
push dword_104E090  +
call sub_100A719  +
lea eax [ebp-4Ch] +
push eax  +
call ds:PropertySheetW  +
cmp dword ptr [ebp-8] 0 +
jz loc_101C9DC  +
push dword ptr [ebp-8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
push offset sub_101C21F  +
push ebx  +
push ebx  +
mov [ebp+var_8] ecx +
mov dword ptr [ecx] offset off_1001890 +
call ds:CreateThread  +
mov esi ds:WaitForSingleObject +
mov edi ds:CloseHandle +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_101CA33  +
cmp eax 0FFFFFFFFh +
jz loc_101CA33  +
push 0FFFFFFFFh  +
push eax  +
call esi  +
push [ebp+hObject]  +
call edi  +
jmp loc_101CA61  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101CA47  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 20Ah  +
push offset aModeMode  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax dword_104E180 +
cmp eax ebx +
jz loc_101CA86  +
push 0FFFFFFFFh  +
push eax  +
call esi  +
mov eax dword_104E180 +
cmp eax ebx +
jz loc_101CA86  +
cmp eax 0FFFFFFFFh +
jz loc_101CA86  +
push eax  +
call edi  +
mov dword_104E180 ebx +
mov eax hEvent +
cmp eax ebx +
jz loc_101CAA5  +
push eax  +
call ds:SetEvent  +
mov eax [ebp+var_8] +
mov eax [eax+10h] +
cmp eax ebx +
jz loc_101CAA5  +
push 0FFFFFFFFh  +
push eax  +
call esi  +
mov eax [ebp+var_8] +
mov eax [eax+10h] +
cmp eax ebx +
jz loc_101CABD  +
cmp eax 0FFFFFFFFh +
jz loc_101CABD  +
push eax  +
call edi  +
mov eax [ebp+var_8] +
mov [eax+10h] ebx +
call sub_103474F  +
call sub_101A54F  +
call sub_1030C52  +
mov [ebp+hObject] ebx +
mov esi [ebp+hObject] +
lea esi Handles[esi] +
mov eax [esi] +
cmp eax ebx +
jz loc_101CAE8  +
cmp eax 0FFFFFFFFh +
jz loc_101CAE8  +
push eax  +
call edi  +
mov [esi] ebx +
add [ebp+hObject] 4 +
cmp [ebp+hObject] 68h +
jb loc_101CACF  +
mov eax hObject +
cmp eax ebx +
jz loc_101CB09  +
cmp eax 0FFFFFFFFh +
jz loc_101CB09  +
push eax  +
call edi  +
mov hObject ebx +
call sub_101309D  +
mov esi [ebp+var_8] +
cmp [esi+4] ebx +
jz loc_101CB1B  +
call UnInitThread  +
cmp [esi+8] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz locret_101CB2D  +
push 1000000h  +
call UnInitProcessPriv  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
mov [esi+4] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [ebp-4] eax +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_10057E8 +
call sub_103773B  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10057E8 +
and dword ptr [ebp-4] 0 +
lea eax [esi+14h] +
push eax  +
call sub_1037AB3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_101C9EA  +
call __EH_epilog3  +
retn   +
***
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov eax 14Eh +
retn   +
***
pop eax  +
retn   +
***
call __EH_prolog3_GS  +
mov ebx ds:GetProcessHeap +
xor eax eax +
mov edi 800h +
push edi  +
push eax  +
mov [ebp-81Ch] ecx +
mov [ebp-810h] ax +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-814h] eax +
test eax eax +
jnz loc_101CC4E  +
mov eax 8007000Eh +
push eax  +
push 68h  +
push offset aModeError  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101CD79  +
xor ecx ecx +
push edi  +
push ecx  +
mov [eax] cx +
call ebx  +
push eax  +
call esi  +
mov [ebp-818h] eax +
test eax eax +
jnz loc_101CC73  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 6Bh  +
jmp loc_101CD3C  +
mov ecx [ebp-814h] +
xor eax eax +
mov [ecx] ax +
mov esi 400h +
push esi  +
lea eax [ebp-810h] +
push eax  +
push 1B8h  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_101CCA3  +
push edi  +
push 6Fh  +
jmp loc_101CD3C  +
push esi  +
push dword ptr [ebp-814h]  +
push uID  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_101CCC0  +
push edi  +
push 72h  +
jmp loc_101CD3C  +
push esi  +
push dword ptr [ebp-818h]  +
push 132h  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_101CCDC  +
push edi  +
push 75h  +
jmp loc_101CD3C  +
push 48h  +
call sub_10361AF  +
pop ecx  +
mov [ebp-820h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_101CD0B  +
push dword ptr [ebp-814h]  +
lea ecx [ebp-810h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx eax +
call sub_1012F56  +
jmp loc_101CD0D  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jnz loc_101CD21  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 7Ch  +
jmp loc_101CD3C  +
push dword ptr [ebp-818h]  +
mov ecx [ebp-81Ch] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+8]  +
mov edi eax +
test edi edi +
jge loc_101CD50  +
push edi  +
push 7Fh  +
push offset aModeError  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp-818h] 0 +
mov esi ds:HeapFree +
jz loc_101CD6C  +
push dword ptr [ebp-818h]  +
push 0  +
call ebx  +
push eax  +
call esi  +
push dword ptr [ebp-814h]  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov eax edi +
call sub_1036615  +
retn 4  +
***
push 1Ch  +
mov eax offset dword_1048A98 +
call __EH_prolog3  +
mov [ebp-24h] ecx +
xor ebx ebx +
lea eax [ebp-18h] +
push eax  +
mov [ebp-28h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_101CDD8  +
push esi  +
push 256h  +
push offset aDefaultmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101D223  +
lea eax [ebp-1Ch] +
push eax  +
call sub_102E866  +
mov esi eax +
cmp esi ebx +
jge loc_101CDEF  +
push esi  +
push 259h  +
jmp loc_101CDBF  +
***
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_101CE20  +
cmp [ebp-1Ch] ebx +
jnz loc_101CE20  +
mov eax dword_104E188 +
cmp [eax] ebx +
jnz loc_101CE20  +
call sub_101C4D4  +
mov esi eax +
cmp esi ebx +
jge loc_101D223  +
push esi  +
push 261h  +
jmp loc_101CDBF  +
***
mov ecx [ebp-24h] +
call sub_101C3EE  +
mov esi eax +
cmp esi ebx +
jge loc_101CE36  +
push esi  +
push 268h  +
jmp loc_101CDBF  +
***
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-20h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_101CE53  +
call sub_1012EDA  +
mov edi eax +
jmp loc_101CE55  +
xor edi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-20h] edi +
cmp edi ebx +
jnz loc_101CE72  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 26Bh  +
jmp loc_101CDBF  +
***
mov esi dword_104E188 +
mov eax [esi+0D0h] +
cmp eax 4 +
mov ebx ds:GetProcessHeap +
jl loc_101CEA0  +
cmp eax 6 +
jle loc_101CEFD  +
cmp eax 8 +
jle loc_101CF31  +
cmp eax 0Ah +
jz loc_101CF31  +
mov ecx esi +
call sub_101C353  +
test eax eax +
jz loc_101D16A  +
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
test eax eax +
jz loc_101D16A  +
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov ecx offset aMicrosoftCorpo +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_101D086  +
test dx dx +
jz loc_101CEF6  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_101D086  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_101CECC  +
xor eax eax +
jmp loc_101D08B  +
lea eax [ebp-28h] +
push eax  +
mov uID 196h +
call sub_101C0E6  +
mov esi eax +
test esi esi +
jge loc_101CF21  +
push esi  +
push 276h  +
jmp loc_101CDBF  +
***
mov esi dword_104E188 +
mov uID 190h +
mov ecx esi +
call sub_101C353  +
test eax eax +
jz loc_101D047  +
mov esi [esi+0D0h] +
cmp esi 5 +
jz loc_101D047  +
cmp esi 6 +
jz loc_101D047  +
push 800h  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_101CF81  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 284h  +
jmp loc_101D1EC  +
push 400h  +
push eax  +
xor ecx ecx +
push 165h  +
mov [eax] cx +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_101CFA7  +
push esi  +
push 288h  +
jmp loc_101D1EC  +
push dword ptr [ebp-10h]  +
call ds:SysAllocString  +
mov [ebp-14h] eax +
test eax eax +
jnz loc_101CFC9  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 28Bh  +
jmp loc_101D1EC  +
push dword ptr [ebp-10h]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [edi] +
and dword ptr [ebp-10h] 0 +
xor esi esi +
inc esi  +
push esi  +
mov ecx edi +
call dword ptr [eax+18h]  +
push 58h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-20h] ecx +
mov [ebp-4] esi +
test ecx ecx +
jz loc_101D00B  +
push dword ptr [ebp-14h]  +
push esi  +
push dword_104E12C  +
call sub_100D767  +
jmp loc_101D00D  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-20h] eax +
test eax eax +
jnz loc_101D03E  +
mov eax 8007000Eh +
push eax  +
push 295h  +
push offset aDefaultmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101D214  +
and dword ptr [ebp-14h] 0 +
jmp loc_101D172  +
push dword_104E0D8  +
call ds:SetEvent  +
test eax eax +
jnz loc_101D07C  +
call ds:GetLastError  +
test eax eax +
jle loc_101D06B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_101D07C  +
push esi  +
push 29Eh  +
jmp loc_101CDBF  +
***
mov eax dword_104E0DC +
jmp loc_101D16F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_101D16A  +
push 800h  +
push eax  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_101D0BB  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 2A8h  +
jmp loc_101D1EC  +
push 400h  +
push eax  +
xor ecx ecx +
push 160h  +
mov [eax] cx +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_101D0E1  +
push esi  +
push 2ACh  +
jmp loc_101D1EC  +
push dword ptr [ebp-10h]  +
call ds:SysAllocString  +
xor esi esi +
mov [ebp-14h] eax +
cmp eax esi +
jnz loc_101D105  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 2AFh  +
jmp loc_101D1EC  +
push dword ptr [ebp-10h]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [edi] +
push 1  +
mov ecx edi +
mov [ebp-10h] esi +
call dword ptr [eax+18h]  +
push 58h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-20h] ecx +
mov dword ptr [ebp-4] 2 +
cmp ecx esi +
jz loc_101D148  +
push dword ptr [ebp-14h]  +
push 1  +
push dword_104E104  +
call sub_100D767  +
jmp loc_101D14A  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-20h] eax +
cmp eax esi +
jnz loc_101D165  +
mov eax 8007000Eh +
push eax  +
push 2B9h  +
jmp loc_101D023  +
***
mov [ebp-14h] esi +
jmp loc_101D172  +
mov eax dword_104E104 +
mov [edi+2Ch] eax +
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
mov eax dword_104E188 +
jz loc_101D1A8  +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_101D1A8  +
cmp dword ptr [eax] 0 +
jnz loc_101D1A8  +
call sub_101C4D4  +
mov esi eax +
test esi esi +
jge loc_101D223  +
push esi  +
push 2CBh  +
jmp loc_101CDBF  +
***
cmp dword ptr [eax+0D0h] 6 +
jnz loc_101D1CA  +
mov ecx [ebp-18h] +
call sub_1030C6F  +
mov esi eax +
test esi esi +
jge loc_101D1CA  +
push esi  +
push 2D6h  +
jmp loc_101CDBF  +
***
mov ecx [ebp-18h] +
mov edi [ebp-24h] +
mov eax [ecx] +
mov esi [edi] +
call dword ptr [eax+8]  +
push eax  +
push dword ptr [ebp-20h]  +
mov ecx edi +
call dword ptr [esi+8]  +
mov esi eax +
test esi esi +
jge loc_101D223  +
push esi  +
push 2DAh  +
push offset aDefaultmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp-10h] 0 +
jz loc_101D223  +
push dword ptr [ebp-10h]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp dword ptr [ebp-14h] 0 +
jz loc_101D223  +
push dword ptr [ebp-14h]  +
call ds:SysFreeString  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
push 14h  +
mov eax offset word_1048AC2 +
call __EH_prolog3  +
mov edi ecx +
push offset aDisablequeryre  +
xor ebx ebx +
push offset aSoftwarePoli_0  +
mov [ebp-20h] ebx +
mov [ebp-18h] ebx +
call sub_101551F  +
mov esi eax +
cmp esi ebx +
jge loc_101D27A  +
push esi  +
push 301h  +
push offset aSupportmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101D495  +
push 800h  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov [ebp-14h] eax +
test eax eax +
jnz loc_101D2BA  +
mov esi 8007000Eh +
push esi  +
push 303h  +
push offset aSupportmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101D47D  +
lea eax [ebp-18h] +
push eax  +
call sub_1031307  +
mov esi eax +
test esi esi +
jge loc_101D2D1  +
push esi  +
push 306h  +
jmp loc_101D2A1  +
***
lea eax [ebp-20h] +
push eax  +
call sub_102E866  +
mov esi eax +
test esi esi +
jge loc_101D2E8  +
push esi  +
push 309h  +
jmp loc_101D2A1  +
***
cmp dword ptr [ebp-20h] 0 +
jnz loc_101D30F  +
mov eax dword_104E188 +
cmp dword ptr [eax] 0 +
jnz loc_101D30F  +
call sub_101C4D4  +
mov esi eax +
test esi esi +
jge loc_101D47D  +
push esi  +
push 30Dh  +
jmp loc_101D2A1  +
***
mov ecx edi +
call sub_101C3EE  +
mov esi eax +
test esi esi +
jge loc_101D327  +
push esi  +
push 316h  +
jmp loc_101D2A1  +
***
mov eax dword_104E188 +
mov eax [eax+6Ch] +
lea ecx [edi+14h] +
push ecx  +
push eax  +
call sub_1037FEE  +
mov esi eax +
test esi esi +
jge loc_101D34A  +
push esi  +
push 31Bh  +
jmp loc_101D2A1  +
***
push dword ptr [edi+2Ch]  +
mov ecx [ebp-18h] +
call sub_101A3CB  +
push dword ptr [edi+30h]  +
mov ecx [ebp-18h] +
call sub_101A39B  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_101D387  +
mov esi 8007000Eh +
push esi  +
push 320h  +
jmp loc_101D451  +
push dword ptr [edi+28h]  +
mov ebx 400h +
push ebx  +
push eax  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_101D3A7  +
push esi  +
push 323h  +
jmp loc_101D451  +
push dword ptr [ebp-10h]  +
mov ecx dword_104E188 +
call sub_101C2B1  +
xor esi esi +
push 38h  +
mov [ebp-10h] esi +
call sub_10361AF  +
pop ecx  +
mov [ebp-1Ch] eax +
mov [ebp-4] esi +
cmp eax esi +
jz loc_101D3D8  +
mov ecx eax +
call sub_1012E40  +
mov [ebp-1Ch] eax +
jmp loc_101D3DB  +
mov [ebp-1Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-1Ch] esi +
jnz loc_101D3F4  +
mov esi 8007000Eh +
push esi  +
push 32Ch  +
jmp loc_101D2A1  +
***
mov ecx dword_104E188 +
push ebx  +
push dword ptr [ebp-14h]  +
lea eax [edi+14h] +
push 0FAh  +
mov [ecx+0D8h] eax +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_101D422  +
push esi  +
push 331h  +
jmp loc_101D2A1  +
***
push dword ptr [ebp-14h]  +
mov eax [edi] +
push dword ptr [ebp-1Ch]  +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jge loc_101D440  +
push esi  +
push 334h  +
jmp loc_101D2A1  +
***
call sub_1033EA3  +
mov esi eax +
test esi esi +
jge loc_101D47D  +
push esi  +
push 337h  +
push offset aSupportmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp-10h] 0 +
jz loc_101D47D  +
push dword ptr [ebp-10h]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp dword ptr [ebp-14h] 0 +
jz loc_101D495  +
push dword ptr [ebp-14h]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101CB72  +
test byte ptr [ebp+8] 1 +
jz loc_101D4BC  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 228h  +
mov eax offset byte_1048AEF +
call __EH_prolog3_GS  +
mov edi ds:GetProcessHeap +
xor ebx ebx +
push 200h  +
push ebx  +
mov [ebp-230h] ecx +
mov [ebp-228h] ebx +
mov [ebp-220h] ebx +
mov [ebp-234h] ebx +
mov [ebp-21Ch] ebx +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-224h] eax +
cmp eax ebx +
jnz loc_101D528  +
mov esi 8007000Eh +
push esi  +
push 37Dh  +
jmp loc_101D782  +
push 208h  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov [ebp-21Ch] eax +
cmp eax ebx +
jnz loc_101D54D  +
mov esi 8007000Eh +
push esi  +
push 37Eh  +
jmp loc_101D782  +
lea eax [ebp-234h] +
push eax  +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_101D56A  +
push esi  +
push 381h  +
jmp loc_101D782  +
mov ecx [ebp-230h] +
call sub_101C3EE  +
mov esi eax +
cmp esi ebx +
jge loc_101D586  +
push esi  +
push 384h  +
jmp loc_101D782  +
push 38h  +
mov uID 192h +
call sub_10361AF  +
pop ecx  +
mov [ebp-22Ch] eax +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_101D5B4  +
mov ecx eax +
call sub_1012CAE  +
mov [ebp-22Ch] eax +
jmp loc_101D5BA  +
mov [ebp-22Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-22Ch] ebx +
jnz loc_101D5D6  +
mov esi 8007000Eh +
push esi  +
push 38Ch  +
jmp loc_101D782  +
push dword_104E198  +
mov ebx 100h +
push ebx  +
lea eax [ebp-218h] +
push eax  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_101D5FF  +
push esi  +
push 38Fh  +
jmp loc_101D782  +
push offset asc_10017E4  +
push ebx  +
lea eax [ebp-218h] +
push eax  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_101D622  +
push esi  +
push 392h  +
jmp loc_101D782  +
push offset aResults_xml  +
push ebx  +
lea eax [ebp-218h] +
push eax  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_101D645  +
push esi  +
push 395h  +
jmp loc_101D782  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
call sub_1014986  +
mov esi eax +
test esi esi +
jge loc_101D669  +
push esi  +
push 398h  +
jmp loc_101D782  +
lea eax [ebp-220h] +
push eax  +
push dword ptr [ebp-228h]  +
push offset aDiagnosticre_1  +
call sub_1025FE5  +
mov esi eax +
test esi esi +
jge loc_101D691  +
push esi  +
push 39Eh  +
jmp loc_101D782  +
push dword_104E198  +
mov edi 104h +
push edi  +
push dword ptr [ebp-21Ch]  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_101D6B9  +
push esi  +
push 3A4h  +
jmp loc_101D782  +
push offset asc_10017E4  +
push edi  +
push dword ptr [ebp-21Ch]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_101D6DB  +
push esi  +
push 3A7h  +
jmp loc_101D782  +
push offset aResultreport_x  +
push edi  +
push dword ptr [ebp-21Ch]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_101D6FD  +
push esi  +
push 3AAh  +
jmp loc_101D782  +
push dword ptr [ebp-21Ch]  +
mov ecx dword_104E188 +
call sub_101C317  +
and dword ptr [ebp-21Ch] 0 +
push edi  +
lea eax [ebp-218h] +
push eax  +
push 0FEh  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_101D735  +
push esi  +
push 3B3h  +
jmp loc_101D782  +
push dword ptr [ebp-220h]  +
lea eax [ebp-218h] +
push eax  +
push ebx  +
push dword ptr [ebp-224h]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_101D75F  +
push esi  +
push 3B6h  +
jmp loc_101D782  +
push dword ptr [ebp-224h]  +
mov ecx [ebp-230h] +
push dword ptr [ebp-22Ch]  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jge loc_101D796  +
push esi  +
push 3B9h  +
push offset aDetailsmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp-228h] +
xor ebx ebx +
cmp eax ebx +
jz loc_101D7AE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-228h] ebx +
cmp [ebp-220h] ebx +
jz loc_101D7C8  +
push dword ptr [ebp-220h]  +
call ds:SysFreeString  +
mov [ebp-220h] ebx +
mov edi ds:HeapFree +
cmp [ebp-224h] ebx +
jz loc_101D7E6  +
push dword ptr [ebp-224h]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
cmp [ebp-21Ch] ebx +
jz loc_101D7FE  +
push dword ptr [ebp-21Ch]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax esi +
call sub_1036615  +
retn   +
***
push 220h  +
mov eax offset byte_1048B29 +
call __EH_prolog3_GS  +
xor ebx ebx +
push offset aDisablequeryre  +
push offset aSoftwarePoli_0  +
mov [ebp-22Ch] ecx +
mov [ebp-220h] ebx +
mov [ebp-21Ch] ebx +
mov [ebp-224h] ebx +
call sub_101551F  +
mov esi eax +
cmp esi ebx +
jge loc_101D854  +
push esi  +
push 3E7h  +
jmp loc_101DA35  +
mov ecx [ebp-22Ch] +
call sub_101C3EE  +
mov esi eax +
cmp esi ebx +
jge loc_101D870  +
push esi  +
push 3EAh  +
jmp loc_101DA35  +
push 58h  +
mov uID 192h +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-228h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_101D8A7  +
push ebx  +
push 1  +
push dword_104E100  +
call sub_100D767  +
mov [ebp-228h] eax +
jmp loc_101D8AD  +
mov [ebp-228h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-228h] ebx +
jnz loc_101D8C9  +
mov esi 8007000Eh +
push esi  +
push 3EFh  +
jmp loc_101DA35  +
push offset aResults_xml  +
push dword_104E198  +
mov edi 104h +
push offset aSS_2  +
lea eax [ebp-218h] +
push edi  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jge loc_101D8FF  +
push esi  +
push 3FAh  +
jmp loc_101DA35  +
lea eax [ebp-220h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
call sub_1014986  +
mov esi eax +
cmp esi ebx +
jge loc_101D923  +
push esi  +
push 3FDh  +
jmp loc_101DA35  +
lea eax [ebp-21Ch] +
push eax  +
push dword ptr [ebp-220h]  +
push offset aDiagnosticresu  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_101D94B  +
push esi  +
push 406h  +
jmp loc_101DA35  +
push dword ptr [ebp-21Ch]  +
lea eax [ebp-224h] +
push eax  +
call sub_101453D  +
mov esi eax +
cmp esi ebx +
jge loc_101D96E  +
push esi  +
push 409h  +
jmp loc_101DA35  +
cmp [ebp-21Ch] ebx +
jz loc_101D988  +
push dword ptr [ebp-21Ch]  +
call ds:SysFreeString  +
mov [ebp-21Ch] ebx +
push dword ptr [ebp-224h]  +
mov ecx dword_104E188 +
call sub_101C2E4  +
lea eax [ebp-21Ch] +
push eax  +
push dword ptr [ebp-220h]  +
push offset aDiagnosticre_2  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_101D9BE  +
push esi  +
push 413h  +
jmp loc_101DA35  +
jnz loc_101D9F1  +
push dword ptr [ebp-21Ch]  +
lea eax [ebp-224h] +
push eax  +
call sub_101453D  +
mov esi eax +
cmp esi ebx +
jge loc_101D9E0  +
push esi  +
push 416h  +
jmp loc_101DA35  +
push dword ptr [ebp-224h]  +
mov ecx dword_104E188 +
call sub_101C27E  +
push edi  +
lea eax [ebp-218h] +
push eax  +
push 0FAh  +
call sub_10301CE  +
mov esi eax +
cmp esi ebx +
jge loc_101DA11  +
push esi  +
push 41Ch  +
jmp loc_101DA35  +
mov ecx [ebp-22Ch] +
mov eax [ecx] +
lea edx [ebp-218h] +
push edx  +
push dword ptr [ebp-228h]  +
call dword ptr [eax+8]  +
mov esi eax +
cmp esi ebx +
jge loc_101DA49  +
push esi  +
push 41Fh  +
push offset aUploadmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp-220h] +
cmp eax ebx +
jz loc_101DA5F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-220h] ebx +
cmp [ebp-21Ch] ebx +
jz loc_101DA73  +
push dword ptr [ebp-21Ch]  +
call ds:SysFreeString  +
mov eax esi +
call sub_1036615  +
retn   +
***
push 220h  +
mov eax offset dword_1048B70 +
call __EH_prolog3_GS  +
xor ebx ebx +
mov [ebp-22Ch] ecx +
mov [ebp-224h] ebx +
mov [ebp-220h] ebx +
mov [ebp-21Ch] ebx +
call sub_101C3EE  +
mov esi eax +
cmp esi ebx +
jge loc_101DABF  +
push esi  +
push 446h  +
jmp loc_101DC0C  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-224h] +
push eax  +
call sub_1029746  +
mov esi eax +
cmp esi ebx +
jge loc_101DAE3  +
push esi  +
push 449h  +
jmp loc_101DC0C  +
cmp [ebp-21Ch] ebx +
jle loc_101DB38  +
cmp dword ptr [ebp-21Ch] 3 +
jg loc_101DB38  +
push 40h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-228h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_101DB18  +
push dword ptr [ebp-21Ch]  +
call sub_101C390  +
jmp loc_101DB1A  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov edi eax +
cmp eax ebx +
jnz loc_101DBC9  +
mov esi 8007000Eh +
push esi  +
push 453h  +
jmp loc_101DC0C  +
lea eax [ebp-220h] +
push eax  +
call sub_1037B6C  +
xor edi edi +
mov esi eax +
inc edi  +
cmp esi 80070005h +
jnz loc_101DB59  +
mov [ebp-220h] edi +
xor esi esi +
cmp esi ebx +
jge loc_101DB73  +
push esi  +
push 463h  +
push offset aBadidmodeRun  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_101DC18  +
cmp [ebp-220h] ebx +
jnz loc_101DBB2  +
push 38h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-228h] ecx +
mov [ebp-4] edi +
cmp ecx ebx +
jz loc_101DB99  +
call near ptr dword_101CBA8+4  +
jmp loc_101DB9B  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov edi eax +
cmp eax ebx +
jnz loc_101DBC9  +
mov esi 8007000Eh +
push esi  +
push 467h  +
jmp loc_101DC0C  +
mov esi 80070057h +
push esi  +
mov uID 199h +
push 472h  +
jmp loc_101DB63  +
***
push 104h  +
lea eax [ebp-218h] +
push eax  +
push 0FFh  +
call sub_10301CE  +
mov esi eax +
cmp esi ebx +
jge loc_101DBED  +
push esi  +
push 476h  +
jmp loc_101DC0C  +
mov ecx [ebp-22Ch] +
mov eax [ecx] +
lea edx [ebp-218h] +
push edx  +
push edi  +
call dword ptr [eax+8]  +
mov esi eax +
cmp esi ebx +
jge loc_101DC20  +
push esi  +
push 479h  +
push offset aBadidmodeRun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
call sub_1036615  +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
xor esi esi +
test edx edx +
jnz loc_101DC52  +
mov eax 80070057h +
push eax  +
push 294h  +
jmp loc_101DC65  +
mov eax [ebp+arg_0] +
cmp eax [ecx+50h] +
jb loc_101DC7D  +
mov eax 80004005h +
push eax  +
push 298h  +
push offset aInteractivityp  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101DC85  +
mov ecx [ecx+54h] +
mov eax [ecx+eax*4] +
mov [edx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
and [ebp+var_C] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx esi +
or ebx 0FFFFFFFFh +
call dword ptr [eax+78h]  +
test eax eax +
jge loc_101DCCE  +
push eax  +
push 2D1h  +
jmp loc_101DD10  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
test eax eax +
jge loc_101DCE3  +
push eax  +
push 2D4h  +
jmp loc_101DD10  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_C] +
push eax  +
call sub_101A2AF  +
test eax eax +
jge loc_101DCFB  +
push eax  +
push 2D7h  +
jmp loc_101DD10  +
push [ebp+var_8]  +
mov ecx [ebp+var_C] +
call sub_10191D3  +
test eax eax +
jge loc_101DD26  +
push eax  +
push 2DAh  +
push offset aInteractivit_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101DD2F  +
mov ecx esi +
call sub_100CF93  +
mov ebx eax +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+hWnd] 0 +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
or [ebp+lParam] 0FFFFFFFFh +
lea eax [ebp+hWnd] +
push eax  +
push [ebp+arg_0]  +
call sub_100D26C  +
mov esi eax +
test esi esi +
jge loc_101DD84  +
push esi  +
push 447h  +
push offset aInteractivit_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101DD98  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1602h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi] +
xor edi edi +
mov [ebp-10h] edi +
mov [ebp-8] edi +
mov [ebp-4] edi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_101DDD4  +
mov dword ptr [ebp-0Ch] offset aFileedit +
cmp [esi+6Ch] edi +
jnz loc_101DDDB  +
mov dword ptr [ebp-0Ch] offset aEdit +
push ebx  +
mov [ebp-14h] edi +
lea eax [ebp-18h] +
xor edi edi +
push eax  +
inc edi  +
push edi  +
push 8  +
mov [ebp-18h] edi +
call ds:SafeArrayCreate  +
mov ebx eax +
test ebx ebx +
jnz loc_101DE07  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 69Ch  +
jmp loc_101DE76  +
push dword ptr [ebp-0Ch]  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
lea ecx [ebp-4] +
push ecx  +
mov ecx eax +
call ds:?GetContentString@Element@DirectUI@@QAEPBGPAPAVValue@2@@Z  +
mov ecx [ebp-4] +
call ds:?GetString@Value@DirectUI@@QAEPBGXZ  +
test eax eax +
jnz loc_101DE41  +
mov eax offset word_1001F48 +
push eax  +
call ds:SysAllocString  +
mov [ebp-8] eax +
test eax eax +
jnz loc_101DE5E  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 6ABh  +
jmp loc_101DE76  +
push eax  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
call ds:SafeArrayPutElement  +
mov esi eax +
test esi esi +
jge loc_101DE8B  +
push esi  +
push 6B1h  +
push offset aEditpageGetuse  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101DE90  +
mov eax [ebp+8] +
mov [eax] ebx +
mov ecx [ebp-4] +
pop ebx  +
test ecx ecx +
jz loc_101DEA2  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-8] 0 +
jz loc_101DEB1  +
push dword ptr [ebp-8]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push offset aCl1  +
mov esi ecx +
call sub_101DD3A  +
test eax eax +
jge loc_101DED9  +
push eax  +
push 9E2h  +
jmp loc_101DF07  +
push offset aCl2  +
mov ecx esi +
call sub_101DD3A  +
test eax eax +
jge loc_101DEF1  +
push eax  +
push 9E5h  +
jmp loc_101DF07  +
push offset aCl3  +
mov ecx esi +
call sub_101DD3A  +
test eax eax +
jge loc_101DF1B  +
push eax  +
push 9E8h  +
push offset aCommandlinkp_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
xor ebx ebx +
push edi  +
mov edi ds:SysFreeString +
mov [ebp+hWnd] ebx +
cmp eax ebx +
jz loc_101DF47  +
push eax  +
call edi  +
mov [esi+38h] ebx +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_101DF54  +
push eax  +
call edi  +
mov [esi+3Ch] ebx +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_101DF61  +
push eax  +
call edi  +
mov [esi+48h] ebx +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_101DF6E  +
push eax  +
call edi  +
mov [esi+40h] ebx +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_101DF7B  +
push eax  +
call edi  +
mov [esi+44h] ebx +
push 0FFFFFFFFh  +
push offset aEdit  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_101DF97  +
push edi  +
push 0B15h  +
jmp loc_101DFCF  +
push 0FFFFFFFFh  +
push offset aEditricheula  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_101DFB3  +
push edi  +
push 0B18h  +
jmp loc_101DFCF  +
lea eax [ebp+hWnd] +
push eax  +
push offset aCbeula  +
mov ecx esi +
call sub_100D26C  +
mov edi eax +
cmp edi ebx +
jge loc_101DFE5  +
push edi  +
push 0B1Bh  +
push offset aEulapageResetu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101DFF5  +
push ebx  +
push ebx  +
push 0F1h  +
push [ebp+hWnd]  +
call ds:PostMessageW  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push edi  +
lea eax [ebp+hWnd] +
push eax  +
xor ebx ebx +
push offset aCbeula  +
mov [ebp+rgIndices] ebx +
mov [ebp+hWnd] ebx +
call sub_100D26C  +
mov edi eax +
cmp edi ebx +
jge loc_101E046  +
push edi  +
push 0B44h  +
push offset aEulapageGetuse  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101E0F5  +
push esi  +
push ebx  +
push ebx  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_101E068  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
jmp loc_101E0F4  +
push offset aAccept  +
mov [ebp+rgsabound.lLbound] ebx +
mov [ebp+rgsabound.cElements] esi +
call ds:SysAllocString  +
mov [ebp+pv] eax +
cmp eax ebx +
jnz loc_101E08F  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0B56h  +
jmp loc_101E0CB  +
lea eax [ebp+rgsabound] +
push eax  +
push esi  +
push 8  +
call ds:SafeArrayCreate  +
mov ebx eax +
test ebx ebx +
jnz loc_101E0B1  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0B59h  +
jmp loc_101E0CB  +
push [ebp+pv]  +
lea eax [ebp+rgIndices] +
push eax  +
push ebx  +
call ds:SafeArrayPutElement  +
mov edi eax +
test edi edi +
jge loc_101E0E0  +
push edi  +
push 0B5Ch  +
push offset aEulapageGetuse  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
jmp loc_101E0E5  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
cmp [ebp+pv] 0 +
jz loc_101E0F4  +
push [ebp+pv]  +
call ds:SysFreeString  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp-8] +
push eax  +
push 1  +
xor esi esi +
push 8  +
mov [ebp-4] esi +
mov [ebp-8] esi +
call ds:SafeArrayCreate  +
cmp eax esi +
jnz loc_101E147  +
mov eax 8007000Eh +
push eax  +
push 0E57h  +
push offset aInteractivityt  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101E14C  +
mov ecx [ebp+8] +
mov [ecx] eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
xor eax eax +
push esi  +
mov ebx ecx +
mov ecx [ebp+arg_0] +
inc eax  +
xor esi esi +
push edi  +
mov [ebp+var_8] eax +
mov edi ecx +
test ecx ecx +
jnz loc_101E197  +
mov ecx 8000FFFFh +
push ecx  +
push 0F1Fh  +
push offset aInteractivityu  +
push offset aDwzErrorSDHr0x  +
mov [ebp+var_4] ecx +
push eax  +
jmp loc_101E222  +
movzx eax word ptr [ecx] +
jmp loc_101E1C8  +
cmp ax 22h +
jnz loc_101E1AD  +
xor eax eax +
test esi esi +
setz al  +
mov esi eax +
jmp loc_101E1C3  +
test esi esi +
jnz loc_101E1C3  +
cmp ax 20h +
jz loc_101E1CF  +
cmp ax 9 +
jz loc_101E1CF  +
cmp ax 0Ah +
jz loc_101E1CF  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_101E19C  +
jmp loc_101E1D3  +
and [ebp+var_8] 0 +
mov esi ds:SysAllocString +
xor eax eax +
push ecx  +
mov [edi] ax +
call esi  +
mov [ebx+5Ch] eax +
test eax eax +
jnz loc_101E1F5  +
mov eax 8007000Eh +
push eax  +
push 0F3Ah  +
jmp loc_101E213  +
cmp [ebp+var_8] 0 +
jnz loc_101E22A  +
add edi 2 +
push edi  +
call esi  +
mov [ebx+60h] eax +
test eax eax +
jnz loc_101E22A  +
mov eax 8007000Eh +
push eax  +
push 0F40h  +
push offset aInteractivityu  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
inc ebx  +
mov [ebp-8] esi +
mov [ebp-0Ch] esi +
mov [ebp-10h] ebx +
mov eax offset aRun +
cmp [ecx+64h] esi +
jnz loc_101E260  +
mov eax offset aNotrun +
push eax  +
call ds:SysAllocString  +
mov [ebp-4] eax +
cmp eax esi +
jnz loc_101E290  +
mov eax 8007000Eh +
push eax  +
push 0FF2h  +
push offset aInteractivit_2  +
push offset aDwzErrorSDHr0x  +
push ebx  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_101E2F1  +
push edi  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
push 8  +
call ds:SafeArrayCreate  +
mov edi eax +
cmp edi esi +
jnz loc_101E2B3  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 0FF5h  +
jmp loc_101E2CD  +
push dword ptr [ebp-4]  +
lea eax [ebp-8] +
push eax  +
push edi  +
call ds:SafeArrayPutElement  +
mov esi eax +
test esi esi +
jge loc_101E2E2  +
push esi  +
push 0FF8h  +
push offset aInteractivit_2  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_101E2E7  +
mov eax [ebp+8] +
mov [eax] edi +
push dword ptr [ebp-4]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_10361DD  +
pop ecx  +
mov [esi] eax +
jmp loc_101E338  +
mov eax offset loc_101E335 +
retn   +
mov esi [ebp-14h] +
cmp dword ptr [esi] 0 +
setnz al  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
xor ecx ecx +
push 8  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_10361DD  +
pop ecx  +
mov [esi] eax +
jmp loc_101E385  +
mov eax offset loc_101E382 +
retn   +
mov esi [ebp-14h] +
cmp dword ptr [esi] 0 +
setnz al  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_0] +
cmp ax 74h +
jnz loc_101E3AA  +
push 9  +
pop eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ebp+8] eax +
push offset dword_10494E4  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101E40A  +
cmp eax 0Ch +
jz loc_101E403  +
cmp eax 16h +
jz loc_101E3FC  +
cmp eax 22h +
jz loc_101E3FC  +
cmp eax 50h +
jz loc_101E40A  +
push 80004005h  +
call loc_101E3B3  +
push 80070057h  +
jmp loc_101E3F7  +
push 8007000Eh  +
jmp loc_101E3F7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ecx+4] +
jb loc_101E42A  +
push 80070057h  +
call loc_101E3B3  +
mov ecx [ecx] +
lea eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memcpy_s  +
add esp 10h +
push eax  +
call sub_101E3D2  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memmove_s  +
add esp 10h +
push eax  +
call sub_101E3D2  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call _wcslwr_s  +
pop ecx  +
pop ecx  +
push eax  +
call sub_101E3D2  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
shl eax 2 +
push eax  +
push [ebp+arg_4]  +
push eax  +
push [ebp+arg_0]  +
call sub_101E45E  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
shl eax 3 +
push eax  +
push [ebp+arg_4]  +
push eax  +
push [ebp+arg_0]  +
call sub_101E45E  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:wcsncmp  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101E484  +
mov eax [ebp+arg_0] +
pop ecx  +
pop ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:wcstol  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+arg_0]  +
call ds:iswdigit  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101E58C  +
sub eax edx +
sar eax 1 +
add eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
push [ebp+arg_8]  +
call sub_101583D  +
xor eax eax +
mov dword ptr [esi] offset off_1005DAC +
mov [esi+10h] eax +
mov [esi+14h] eax +
cmp [ebp+arg_C] eax +
jz loc_101E5DA  +
push [ebp+arg_C]  +
call ds:SysAllocString  +
mov [esi+10h] eax +
mov eax [ebp+arg_10] +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_1005DAC +
test eax eax +
jz loc_101E609  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+10h] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_101E620  +
cmp eax 0FFFFFFFFh +
jz loc_101E620  +
push eax  +
call ds:ImageList_Destroy  +
and dword ptr [esi+14h] 0 +
mov ecx esi +
pop esi  +
jmp sub_1015877  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101E5EC  +
test byte ptr [ebp+8] 1 +
jz loc_101E647  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_28] ebx +
call sub_1014ABA  +
mov esi eax +
cmp esi ebx +
jge loc_101E698  +
push esi  +
push 6Ah  +
jmp loc_101E923  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_101E6B3  +
push esi  +
push 6Dh  +
jmp loc_101E923  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_10]  +
push ebx  +
push offset a_ChoicesChoice  +
call sub_1014C90  +
mov esi eax +
cmp esi ebx +
jge loc_101E6D3  +
push esi  +
push 73h  +
jmp loc_101E923  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E6EE  +
push esi  +
push 76h  +
jmp loc_101E923  +
mov edi ds:_wcsicmp +
push offset aSingleresponse  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E774  +
cmp [ebp+var_4] ebx +
jle loc_101E754  +
cmp [ebp+var_4] 4 +
jg loc_101E75A  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push offset a_Extensionp_14  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E735  +
push esi  +
push 82h  +
jmp loc_101E923  +
cmp esi 1 +
jz loc_101E74D  +
cmp [ebp+var_4] 2 +
jz loc_101E746  +
cmp [ebp+var_4] 3 +
jnz loc_101E74D  +
push 2Eh  +
jmp loc_101E8AC  +
push 2Dh  +
jmp loc_101E8AC  +
cmp [ebp+var_4] 4 +
jle loc_101E764  +
push 32h  +
mov [ebp+var_14] ebx +
jmp loc_101E8AC  +
mov esi 8000FFFFh +
push esi  +
push 8Fh  +
jmp loc_101E923  +
push offset aMultiplerespon  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E7BA  +
cmp [ebp+var_4] ebx +
jle loc_101E796  +
cmp [ebp+var_4] 4 +
jg loc_101E79C  +
push 2Fh  +
jmp loc_101E8AC  +
cmp [ebp+var_4] 4 +
jle loc_101E7AA  +
push 32h  +
mov [ebp+var_14] 1 +
jmp loc_101E8AC  +
mov esi 8000FFFFh +
push esi  +
push 0A0h  +
jmp loc_101E923  +
push offset aTextinteractio  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E886  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Extensionp_15  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E7F4  +
push esi  +
push 0A7h  +
jmp loc_101E923  +
jnz loc_101E7FD  +
push 33h  +
jmp loc_101E8AC  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_101E80D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Extensionp_16  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E833  +
push esi  +
push 0AFh  +
jmp loc_101E923  +
jnz loc_101E86A  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E853  +
push esi  +
push 0B6h  +
jmp loc_101E923  +
push offset aMulti  +
push [ebp+var_20]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E86A  +
mov [ebp+var_14] 1 +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_101E87A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov edi [ebp+var_14] +
neg edi  +
sbb edi edi +
add edi 31h +
jmp loc_101E8AD  +
push offset aPauseinteracti  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E89A  +
push 34h  +
jmp loc_101E8AC  +
push offset aLaunchuiintera  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E918  +
push 35h  +
pop edi  +
lea eax [ebp+var_28] +
push eax  +
call sub_101235B  +
mov esi eax +
cmp esi ebx +
jge loc_101E8C4  +
push esi  +
push 0CAh  +
jmp loc_101E923  +
mov ecx [ebp+var_28] +
lea eax [ebp+var_18] +
push eax  +
push edi  +
call sub_1013447  +
mov esi eax +
cmp esi ebx +
jge loc_101E8DF  +
push esi  +
push 0CDh  +
jmp loc_101E923  +
cmp edi 32h +
jnz loc_101E8F2  +
mov ecx [ebp+var_18] +
xor eax eax +
cmp [ebp+var_14] ebx +
setz al  +
mov [ecx+58h] eax +
mov ecx [ebp+var_18] +
push [ebp+arg_0]  +
mov eax [ecx] +
call dword ptr [eax+74h]  +
mov esi eax +
cmp esi ebx +
jge loc_101E90B  +
push esi  +
push 0D7h  +
jmp loc_101E923  +
mov eax [ebp+var_18] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+var_18] ebx +
jmp loc_101E937  +
mov esi 80070057h +
push esi  +
push 0C6h  +
push offset aInteractivityd  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_101E947  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_101E957  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_24] +
cmp eax ebx +
jz loc_101E967  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_24] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_101E977  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov edi ds:SysFreeString +
cmp [ebp+var_C] ebx +
jz loc_101E98A  +
push [ebp+var_C]  +
call edi  +
mov [ebp+var_C] ebx +
cmp [ebp+var_20] ebx +
jz loc_101E994  +
push [ebp+var_20]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
xor eax eax +
push esi  +
push edi  +
mov [ebp+lParam] eax +
mov [ebp+var_4] eax +
mov [ebp+hicon] eax +
lea edi [ebp+var_2C] +
stos   +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
push 21h  +
lea edi [ebp+var_14] +
stos   +
stos   +
pop esi  +
stos   +
push 3  +
pop eax  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
mov ebx ecx +
mov [ebp+var_10] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
mov [ebp+var_C] eax +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_101E9F3  +
mov esi 2021h +
mov eax [ebx+10h] +
test eax eax +
jz loc_101EA9E  +
lea ecx [ebp+hicon] +
push ecx  +
push eax  +
call sub_10304C4  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101EA26  +
push eax  +
push 115h  +
push offset aInteractivityc  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_101EAFE  +
xor edi edi +
inc edi  +
push edi  +
push edi  +
push esi  +
mov esi ds:GetSystemMetrics +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
call ds:ImageList_Create  +
mov [ebx+14h] eax +
test eax eax +
jz loc_101EAD6  +
cmp eax 0FFFFFFFFh +
jz loc_101EAD6  +
push [ebp+hicon]  +
push 0FFFFFFFFh  +
push eax  +
call ds:ImageList_ReplaceIcon  +
cmp eax 0FFFFFFFFh +
jnz loc_101EA8A  +
mov eax 80004005h +
push eax  +
push 121h  +
push offset aInteractivityc  +
push offset aDwzErrorSDHr0x  +
push edi  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_101EAB8  +
mov eax [ebx+14h] +
mov [ebp+lParam] eax +
lea esi [ebp+var_18] +
lea edi [ebp+var_2C] +
movs   +
movs   +
movs   +
movs   +
and [ebp+var_1C] 0 +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1602h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp [ebp+var_4] 0 +
jge loc_101EACC  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1602h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
call ds:GetLastError  +
test eax eax +
jle loc_101EAEA  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 11Dh  +
push offset aInteractivityc  +
push offset aDwzErrorSDHr0x  +
mov [ebp+var_4] eax +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101EAB2  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C767  +
xor eax eax +
mov [esi+50h] eax +
mov [esi+54h] eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov [esi+48h] eax +
mov [esi+40h] eax +
mov [esi+44h] eax +
mov [esi+4Ch] eax +
mov dword ptr [esi] offset off_1005F90 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1005F90 +
mov dword ptr [esi+4] offset off_1003D8C +
xor ebx ebx +
xor edi edi +
mov [ebp-4] ebx +
cmp [esi+50h] ebx +
jbe loc_101EB95  +
mov eax [esi+54h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_101EB8F  +
mov eax [eax] +
cmp eax ebx +
jz loc_101EB89  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+54h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+50h] +
jb loc_101EB71  +
mov eax [esi+54h] +
cmp eax ebx +
jz loc_101EBAE  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+54h] ebx +
mov eax [esi+38h] +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_101EBC1  +
push eax  +
call edi  +
mov [esi+38h] ebx +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_101EBCE  +
push eax  +
call edi  +
mov [esi+3Ch] ebx +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_101EBDB  +
push eax  +
call edi  +
mov [esi+48h] ebx +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_101EBE8  +
push eax  +
call edi  +
mov [esi+40h] ebx +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_101EBF5  +
push eax  +
call edi  +
mov [esi+44h] ebx +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_101EC05  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+4Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ds:??1TaskPage@DirectUI@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-24h] ecx +
xor edi edi +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+8]  +
mov [ebp-2Ch] edi +
mov [ebp-38h] edi +
mov [ebp-28h] edi +
mov [ebp-34h] edi +
mov [ebp-18h] edi +
mov [ebp-40h] edi +
mov [ebp-1Ch] edi +
mov [ebp-20h] edi +
mov [ebp-10h] edi +
mov [ebp-30h] edi +
mov [ebp-3Ch] edi +
mov [ebp-14h] edi +
call sub_1014ABA  +
mov esi eax +
cmp esi edi +
jge loc_101EC6E  +
push esi  +
push 1C1h  +
jmp loc_101F216  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-2Ch]  +
push offset a_Displayinform  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jge loc_101EC90  +
push esi  +
push 1C4h  +
jmp loc_101F216  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-2Ch]  +
push offset a_Displayinfo_0  +
call sub_1015665  +
mov esi eax +
cmp esi edi +
jge loc_101ECB2  +
push esi  +
push 1C7h  +
jmp loc_101F216  +
push dword ptr [ebp-1Ch]  +
mov ebx ds:SysAllocString +
call ebx  +
mov esi [ebp-24h] +
mov [esi+38h] eax +
cmp eax edi +
jnz loc_101ECD7  +
mov eax 8007000Eh +
push eax  +
push 1CAh  +
jmp loc_101F214  +
push dword ptr [ebp-20h]  +
call ebx  +
mov [esi+3Ch] eax +
cmp eax edi +
jnz loc_101ECF3  +
mov eax 8007000Eh +
push eax  +
push 1CDh  +
jmp loc_101F214  +
cmp [ebp-1Ch] edi +
jz loc_101ED04  +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
mov [ebp-1Ch] edi +
cmp [ebp-20h] edi +
jz loc_101ED15  +
push dword ptr [ebp-20h]  +
call ds:SysFreeString  +
mov [ebp-20h] edi +
mov eax esi +
add eax 4Ch +
push eax  +
push dword ptr [ebp-2Ch]  +
push edi  +
push offset a_Parameters  +
call sub_1014B70  +
mov esi eax +
cmp esi edi +
jge loc_101ED3A  +
push esi  +
push 1D3h  +
jmp loc_101F216  +
mov eax [ebp-2Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push offset a_Extensionpo_0  +
push eax  +
call dword ptr [ecx+94h]  +
test eax eax +
jnz loc_101EE19  +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_101EE29  +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_101ED7D  +
push esi  +
push 1DBh  +
jmp loc_101F216  +
push dword ptr [ebp-10h]  +
call ebx  +
mov ecx [ebp-24h] +
mov [ecx+40h] eax +
cmp eax edi +
jnz loc_101ED9C  +
mov eax 8007000Eh +
push eax  +
push 1DEh  +
jmp loc_101F214  +
cmp [ebp-10h] edi +
jz loc_101EDAD  +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
mov [ebp-10h] edi +
mov eax [ebp-24h] +
push dword ptr [eax+4Ch]  +
push dword ptr [eax+40h]  +
lea eax [ebp-14h] +
push eax  +
call sub_1033AEB  +
mov esi eax +
cmp esi edi +
jge loc_101EDD0  +
push esi  +
push 1E5h  +
jmp loc_101F216  +
mov esi [ebp-24h] +
mov eax [esi+40h] +
cmp eax edi +
jz loc_101EDE4  +
push eax  +
call ds:SysFreeString  +
mov [esi+40h] edi +
push dword ptr [ebp-14h]  +
call ebx  +
mov [esi+40h] eax +
cmp eax edi +
jnz loc_101EE00  +
mov eax 8007000Eh +
push eax  +
push 1E9h  +
jmp loc_101F214  +
cmp [ebp-14h] edi +
jz loc_101EE19  +
push dword ptr [ebp-14h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_101EE29  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
mov eax [ebp-2Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push offset a_Extensionpo_1  +
push eax  +
call dword ptr [ecx+94h]  +
test eax eax +
jnz loc_101EF16  +
mov eax [ebp-18h] +
test eax eax +
jz loc_101EF27  +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jge loc_101EE6C  +
push esi  +
push 1F5h  +
jmp loc_101F216  +
push dword ptr [ebp-10h]  +
call ebx  +
mov [ebp-3Ch] eax +
test eax eax +
jnz loc_101EE88  +
mov eax 8007000Eh +
push eax  +
push 1F8h  +
jmp loc_101F214  +
cmp [ebp-10h] edi +
jz loc_101EE99  +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
and [ebp-10h] edi +
mov edi [ebp-24h] +
add edi 44h +
push edi  +
push dword ptr [ebp-3Ch]  +
call sub_1030712  +
test eax eax +
jl loc_101EEFB  +
mov eax [ebp-24h] +
add eax 4Ch +
push dword ptr [eax]  +
lea eax [ebp-14h] +
push dword ptr [edi]  +
push eax  +
call sub_1033AEB  +
mov esi eax +
test esi esi +
jge loc_101EED0  +
push esi  +
push 203h  +
jmp loc_101F216  +
mov eax [edi] +
test eax eax +
jz loc_101EEE0  +
push eax  +
call ds:SysFreeString  +
and dword ptr [edi] 0 +
push dword ptr [ebp-14h]  +
call ebx  +
mov [edi] eax +
test eax eax +
jnz loc_101EEFB  +
mov eax 8007000Eh +
push eax  +
push 207h  +
jmp loc_101F214  +
xor esi esi +
cmp [ebp-14h] esi +
jz loc_101EF16  +
push dword ptr [ebp-14h]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp-14h] esi +
mov eax [ebp-18h] +
test eax eax +
jz loc_101EF27  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-18h] 0 +
mov eax [ebp-2Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push offset a_Extensionpo_3  +
push eax  +
call dword ptr [ecx+94h]  +
test eax eax +
jnz loc_101EFAD  +
mov eax [ebp-18h] +
test eax eax +
jz loc_101EFC1  +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
xor edi edi +
cmp esi edi +
jge loc_101EF64  +
push esi  +
push 214h  +
jmp loc_101F216  +
push dword ptr [ebp-10h]  +
call ebx  +
mov ecx [ebp-24h] +
mov [ecx+48h] eax +
cmp eax edi +
jnz loc_101EF83  +
mov eax 8007000Eh +
push eax  +
push 217h  +
jmp loc_101F214  +
cmp [ebp-10h] edi +
jz loc_101EF94  +
push dword ptr [ebp-10h]  +
call ds:SysFreeString  +
mov [ebp-10h] edi +
cmp [ebp-14h] edi +
jz loc_101EFAD  +
push dword ptr [ebp-14h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_101EFC3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
jmp loc_101EFC3  +
xor ebx ebx +
lea eax [ebp-38h] +
push eax  +
push dword ptr [ebp-2Ch]  +
push ebx  +
push offset a_ChoicesChoice  +
call sub_1014C90  +
mov esi eax +
cmp esi ebx +
jge loc_101EFE6  +
push esi  +
push 222h  +
jmp loc_101F216  +
mov eax [ebp-38h] +
mov ecx [eax] +
lea edx [ebp-40h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_101F004  +
push esi  +
push 225h  +
jmp loc_101F216  +
mov eax [ebp-40h] +
mov edi [ebp-24h] +
mov [edi+50h] eax +
cmp eax ebx +
jz loc_101F03B  +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [edi+54h] eax +
cmp eax ebx +
jnz loc_101F03B  +
mov eax 8007000Eh +
push eax  +
push 22Fh  +
jmp loc_101F214  +
mov [ebp+8] ebx +
cmp [edi+50h] ebx +
jbe loc_101F22A  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp-38h]  +
call sub_1014D97  +
mov esi eax +
cmp esi ebx +
jl loc_101F1D1  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-28h]  +
push offset a_Displayinform  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_101F1D9  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-28h]  +
push offset a_Displayinfo_0  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_101F1E1  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-28h]  +
push offset a_Value  +
call sub_1015665  +
mov esi eax +
cmp esi ebx +
jl loc_101F1E9  +
mov eax [ebp-28h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push offset a_Extensionp_11  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jl loc_101F1F1  +
cmp esi 1 +
jz loc_101F0E9  +
mov eax [ebp-34h] +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi ebx +
jl loc_101F1F9  +
mov eax [ebp-34h] +
cmp eax ebx +
jz loc_101F0F9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-34h] ebx +
mov eax [ebp-28h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push offset a_Extensionp_17  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jl loc_101F201  +
xor eax eax +
cmp esi ebx +
setz al  +
push 1Ch  +
mov edi eax +
call sub_10361AF  +
pop ecx  +
mov [ebp-44h] eax +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_101F149  +
push edi  +
push dword ptr [ebp-30h]  +
mov ecx eax +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
call sub_101E5A5  +
jmp loc_101F14B  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax ebx +
jz loc_101F209  +
mov ecx [ebp-24h] +
mov ecx [ecx+54h] +
mov edx [ebp+8] +
mov edi ds:SysFreeString +
mov [ecx+edx*4] eax +
cmp [ebp-1Ch] ebx +
jz loc_101F176  +
push dword ptr [ebp-1Ch]  +
call edi  +
mov [ebp-1Ch] ebx +
cmp [ebp-20h] ebx +
jz loc_101F183  +
push dword ptr [ebp-20h]  +
call edi  +
mov [ebp-20h] ebx +
cmp [ebp-10h] ebx +
jz loc_101F190  +
push dword ptr [ebp-10h]  +
call edi  +
mov [ebp-10h] ebx +
cmp [ebp-30h] ebx +
jz loc_101F19D  +
push dword ptr [ebp-30h]  +
call edi  +
mov [ebp-30h] ebx +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_101F1AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] ebx +
mov eax [ebp-34h] +
cmp eax ebx +
jz loc_101F1BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-34h] ebx +
inc dword ptr [ebp+8]  +
mov eax [ebp-24h] +
mov ecx [ebp+8] +
cmp ecx [eax+50h] +
jb loc_101F047  +
jmp loc_101F22A  +
push esi  +
push 237h  +
jmp loc_101F216  +
push esi  +
push 23Ah  +
jmp loc_101F216  +
push esi  +
push 23Dh  +
jmp loc_101F216  +
push esi  +
push 240h  +
jmp loc_101F216  +
push esi  +
push 246h  +
jmp loc_101F216  +
push esi  +
push 24Ah  +
jmp loc_101F216  +
push esi  +
push 252h  +
jmp loc_101F216  +
mov eax 8007000Eh +
push eax  +
push 256h  +
mov esi eax +
push offset aInteractivit_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor edi edi +
cmp [ebp-14h] edi +
jz loc_101F245  +
push dword ptr [ebp-14h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp-14h] edi +
cmp [ebp-1Ch] edi +
mov edi ds:SysFreeString +
jz loc_101F25C  +
push dword ptr [ebp-1Ch]  +
call edi  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
jmp loc_101F25E  +
xor ebx ebx +
cmp [ebp-20h] ebx +
jz loc_101F26B  +
push dword ptr [ebp-20h]  +
call edi  +
mov [ebp-20h] ebx +
cmp [ebp-10h] ebx +
jz loc_101F278  +
push dword ptr [ebp-10h]  +
call edi  +
mov [ebp-10h] ebx +
cmp [ebp-30h] ebx +
jz loc_101F285  +
push dword ptr [ebp-30h]  +
call edi  +
mov [ebp-30h] ebx +
cmp [ebp-3Ch] ebx +
jz loc_101F28F  +
push dword ptr [ebp-3Ch]  +
call edi  +
mov eax [ebp-38h] +
cmp eax ebx +
jz loc_101F29F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-38h] ebx +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_101F2AF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] ebx +
mov eax [ebp-2Ch] +
cmp eax ebx +
jz loc_101F2BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-2Ch] ebx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_101F2CF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-34h] +
cmp eax ebx +
jz loc_101F2DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [edi+4] +
push eax  +
mov esi ecx +
call sub_100D67F  +
test al al +
jz loc_101F39D  +
lea eax [ebp+var_4] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+80h]  +
push eax  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_101F33C  +
push eax  +
push 370h  +
jmp loc_101F381  +
mov eax [edi] +
cmp eax [ebp+var_4] +
jnz loc_101F39D  +
mov esi [esi+40h] +
cmp word ptr [esi] 68h +
jnz loc_101F371  +
push 1  +
push 0  +
push 0  +
push esi  +
push offset Operation  +
push 0  +
call ds:ShellExecuteW  +
cmp eax 20h +
jg loc_101F397  +
push 80004005h  +
push 381h  +
jmp loc_101F381  +
push esi  +
call sub_102E12E  +
test eax eax +
jge loc_101F397  +
push eax  +
push 388h  +
push offset aInteractivit_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101F3A9  +
mov byte ptr [edi+8] 1 +
jmp loc_101F3A9  +
push edi  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:?OnListenedEvent@TaskPage@DirectUI@@MAEXPAVElement@2@PAUEvent@2@@Z  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ebx ebx +
xor edi edi +
cmp [esi+50h] ebx +
jbe loc_101F3E8  +
mov eax [esi+54h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_101F3E2  +
mov eax [eax] +
cmp eax ebx +
jz loc_101F3DC  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+54h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+50h] +
jb loc_101F3C4  +
mov eax [esi+54h] +
mov [esi+50h] ebx +
cmp eax ebx +
jz loc_101F404  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+54h] ebx +
mov eax [esi+38h] +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_101F417  +
push eax  +
call edi  +
mov [esi+38h] ebx +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_101F424  +
push eax  +
call edi  +
mov [esi+3Ch] ebx +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_101F431  +
push eax  +
call edi  +
mov [esi+48h] ebx +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_101F43E  +
push eax  +
call edi  +
mov [esi+40h] ebx +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_101F44B  +
push eax  +
call edi  +
mov [esi+44h] ebx +
push 1  +
push offset aRtf  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_101F467  +
push edi  +
push 3BBh  +
jmp loc_101F49D  +
push 0FFFFFFFFh  +
push offset aTxtdescription  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_101F483  +
push edi  +
push 3BEh  +
jmp loc_101F49D  +
push 3  +
push offset aLinkcontainer  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_101F4B3  +
push edi  +
push 3C4h  +
push offset aInteractivit_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101F4B5  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
xor eax eax +
mov [esi+68h] eax +
mov [esi+58h] eax +
mov [esi+5Ch] eax +
mov [esi+60h] eax +
mov [esi+64h] eax +
mov [esi+70h] eax +
mov [esi+6Ch] eax +
mov [esi+74h] eax +
mov [esi+78h] eax +
mov dword ptr [esi] offset off_10060E0 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
mov [ebp-220h] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov [ebp-214h] eax +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp-238h] ebx +
lea edi [ebp-234h] +
stos   +
stos   +
stos   +
stos   +
mov esi ecx +
stos   +
mov eax [esi] +
mov [ebp-218h] ebx +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_101F573  +
mov dword ptr [ebp-210h] offset aFileedit +
cmp [esi+6Ch] ebx +
jnz loc_101F57D  +
mov dword ptr [ebp-210h] offset aEdit +
mov edi [ebp-214h] +
cmp edi ebx +
jnz loc_101F596  +
push 80070057h  +
push 601h  +
jmp loc_101F6DE  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp-21Ch] eax +
lea eax [ebp-21Ch] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_101F71D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_101F71D  +
lea eax [ebp-218h] +
push eax  +
push offset aBrowse  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_101F5ED  +
push eax  +
push 605h  +
jmp loc_101F6DE  +
mov ecx [edi] +
cmp ecx [ebp-218h] +
jnz loc_101F71D  +
xor ecx ecx +
mov [ebp-20Ch] cx +
cmp [esi+70h] ebx +
jz loc_101F632  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call sub_102E025  +
cmp eax ebx +
jge loc_101F68E  +
push eax  +
push 60Fh  +
jmp loc_101F6DE  +
cmp [esi+6Ch] ebx +
jz loc_101F666  +
push dword ptr [esi+78h]  +
lea eax [ebp-20Ch] +
push dword ptr [esi+60h]  +
mov ecx esi +
push dword ptr [esi+64h]  +
push 104h  +
push eax  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call sub_102E2DF  +
cmp eax ebx +
jge loc_101F68E  +
push eax  +
push 618h  +
jmp loc_101F6DE  +
cmp [esi+74h] ebx +
jz loc_101F68C  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call sub_102E1CE  +
cmp eax ebx +
jge loc_101F68E  +
push eax  +
push 61Bh  +
jmp loc_101F6DE  +
cmp eax ebx +
jnz loc_101F717  +
push dword ptr [ebp-210h]  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov edi eax +
cmp edi ebx +
jnz loc_101F6C5  +
push 8000FFFFh  +
push 623h  +
jmp loc_101F6DE  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx edi +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
cmp eax ebx +
jge loc_101F6F4  +
push eax  +
push 626h  +
push offset aEditpageOnlist  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101F72B  +
lea eax [ebp-238h] +
mov [ebp-238h] edi +
mov edi [esi] +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
mov ecx esi +
call dword ptr [edi+10h]  +
mov edi [ebp-214h] +
mov byte ptr [edi+8] 1 +
jmp loc_101F72B  +
push edi  +
push dword ptr [ebp-220h]  +
mov ecx esi +
call sub_101F2EB  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_101F3B4  +
mov esi eax +
test esi esi +
jge loc_101F75A  +
push esi  +
push 8DBh  +
jmp loc_101F774  +
push 1  +
push offset aCl3  +
mov ecx edi +
call sub_100CB06  +
mov esi eax +
test esi esi +
jge loc_101F788  +
push esi  +
push 8DEh  +
push offset aCommandlinkp_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
lea eax [esi+4] +
push eax  +
mov edi ecx +
call sub_100D67F  +
test al al +
jz loc_101F86B  +
lea eax [ebp-4] +
push eax  +
push offset aCl1  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_101F7DD  +
push eax  +
push 96Eh  +
jmp loc_101F834  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_101F7EC  +
and dword ptr [edi+58h] 0 +
mov byte ptr [esi+8] 1 +
lea eax [ebp-4] +
push eax  +
push offset aCl2  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_101F808  +
push eax  +
push 976h  +
jmp loc_101F834  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_101F81A  +
mov dword ptr [edi+58h] 1 +
mov byte ptr [esi+8] 1 +
lea eax [ebp-4] +
push eax  +
push offset aCl3  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_101F84A  +
push eax  +
push 97Eh  +
push offset aCommandlinkpag  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101F876  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_101F85C  +
mov dword ptr [edi+58h] 2 +
mov byte ptr [esi+8] 1 +
cmp byte ptr [esi+8] 0 +
jz loc_101F86B  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+48h]  +
jmp loc_101F876  +
push esi  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_101F2EB  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor eax eax +
push edi  +
mov [ebp+var_4] eax +
mov [ebp+rgIndices] eax +
mov [ebp+rgsabound.lLbound] eax +
lea eax [ebp+rgsabound] +
xor edi edi +
push eax  +
inc edi  +
push edi  +
push 8  +
mov esi ecx +
mov [ebp+rgsabound.cElements] edi +
call ds:SafeArrayCreate  +
mov ebx eax +
test ebx ebx +
jnz loc_101F8BF  +
mov esi 8007000Eh +
push esi  +
push 9B7h  +
jmp loc_101F8FB  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [esi+58h]  +
mov ecx esi +
call sub_101DC36  +
mov esi eax +
test esi esi +
jge loc_101F8DB  +
push esi  +
push 9BDh  +
jmp loc_101F8FB  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
lea eax [ebp+rgIndices] +
push eax  +
push ebx  +
call ds:SafeArrayPutElement  +
mov esi eax +
test esi esi +
jge loc_101F910  +
push esi  +
push 9C0h  +
push offset aCommandlinkp_0  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_101F915  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
lea eax [esi+4] +
push eax  +
mov ebx ecx +
call sub_100D67F  +
test al al +
jz loc_101F9C0  +
lea eax [ebp-4] +
push eax  +
push offset aCbeula  +
mov ecx ebx +
call sub_100C938  +
test eax eax +
jge loc_101F97E  +
push eax  +
push 0BFBh  +
push offset aEulapageOnlist  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101F9CB  +
mov ecx [ebp-4] +
cmp [esi] ecx +
jnz loc_101F9C0  +
mov eax [ecx] +
push 0  +
push 0  +
push 0F0h  +
call dword ptr [eax+0A0h]  +
push eax  +
call ds:SendMessageW  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
neg eax  +
sbb eax eax +
push 2  +
and eax 2 +
push eax  +
push 48Bh  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov byte ptr [esi+8] 1 +
jmp loc_101F9CB  +
push esi  +
push dword ptr [ebp+8]  +
mov ecx ebx +
call sub_101F2EB  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hWnd] +
xor ebx ebx +
push eax  +
mov esi ecx +
push offset aLstview  +
mov [ebp+var_1C] esi +
mov [ebp+hWnd] ebx +
mov [ebp+rgIndices] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_18] ebx +
call sub_100D26C  +
mov edi eax +
cmp edi ebx +
jge loc_101FA27  +
push edi  +
push 0CF3h  +
push offset aListviewpageGe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101FB58  +
cmp [esi+58h] ebx +
jz loc_101FB61  +
mov [ebp+rgsabound.lLbound] ebx +
lea eax [ebp+rgsabound] +
xor ebx ebx +
push eax  +
inc ebx  +
push ebx  +
push 8  +
mov [ebp+rgsabound.cElements] ebx +
call ds:SafeArrayCreate  +
mov [ebp+psa] eax +
test eax eax +
jnz loc_101FA72  +
mov eax 8007000Eh +
push eax  +
push 0CFCh  +
mov edi eax +
push offset aListviewpageGe  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_101FB49  +
mov esi ds:SendMessageW +
push 0  +
push 0  +
push 1032h  +
push [ebp+hWnd]  +
call esi  +
cmp eax ebx +
jz loc_101FA97  +
mov eax 80004005h +
push eax  +
push 0D03h  +
jmp loc_101FA58  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_101FAB7  +
mov eax 80004005h +
push eax  +
push 0D09h  +
jmp loc_101FA58  +
lea ecx [ebp+var_18] +
push ecx  +
mov ecx [ebp+var_1C] +
push eax  +
call sub_101DC36  +
mov edi eax +
test edi edi +
jge loc_101FAD2  +
push edi  +
push 0D0Dh  +
jmp loc_101FA5A  +
mov ecx [ebp+var_18] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
call ds:SysAllocString  +
mov esi eax +
mov [ebp+var_C] esi +
test esi esi +
jnz loc_101FAF9  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0D10h  +
jmp loc_101FB13  +
push esi  +
lea eax [ebp+rgIndices] +
push eax  +
push [ebp+psa]  +
call ds:SafeArrayPutElement  +
mov edi eax +
test edi edi +
jge loc_101FB23  +
push edi  +
push 0D16h  +
push offset aListviewpageGe  +
push offset aDwzErrorSDHr0x  +
push ebx  +
jmp loc_101FC94  +
push esi  +
call ds:SysFreeString  +
and [ebp+var_C] 0 +
mov ecx [ebp+psa] +
mov eax [ebp+arg_0] +
and [ebp+psa] 0 +
mov [eax] ecx +
cmp [ebp+var_C] 0 +
jz loc_101FB49  +
push [ebp+var_C]  +
call ds:SysFreeString  +
cmp [ebp+psa] 0 +
jz loc_101FB58  +
push [ebp+psa]  +
call ds:SafeArrayDestroy  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov esi ds:SendMessageW +
push ebx  +
push ebx  +
push 1004h  +
push [ebp+hWnd]  +
call esi  +
xor ebx ebx +
mov [ebp+psa] eax +
mov [ebp+wParam] ebx +
test eax eax +
jle loc_101FB9E  +
push 0F000h  +
push ebx  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
shr eax 0Ch +
dec eax  +
jz loc_101FB98  +
inc [ebp+wParam]  +
inc ebx  +
cmp ebx [ebp+psa] +
jl loc_101FB7F  +
mov eax [ebp+wParam] +
and [ebp+rgsabound.lLbound] 0 +
mov [ebp+rgsabound.cElements] eax +
lea eax [ebp+rgsabound] +
push eax  +
push 1  +
push 8  +
call ds:SafeArrayCreate  +
xor ecx ecx +
mov [ebp+psa] eax +
cmp eax ecx +
jnz loc_101FBDD  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0D2Bh  +
push offset aListviewpageGe  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_101FA65  +
mov ebx [ebp+var_1C] +
cmp [ebx+50h] ecx +
mov [ebp+rgIndices] ecx +
mov [ebp+wParam] ecx +
jle loc_101FB2E  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
shr eax 0Ch +
dec eax  +
jz loc_101FC58  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_101DC36  +
mov edi eax +
test edi edi +
jl loc_101FC68  +
mov ecx [ebp+var_18] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
call ds:SysAllocString  +
mov ebx eax +
mov [ebp+var_C] ebx +
test ebx ebx +
jz loc_101FC73  +
push ebx  +
lea eax [ebp+rgIndices] +
push eax  +
push [ebp+psa]  +
call ds:SafeArrayPutElement  +
mov edi eax +
test edi edi +
jl loc_101FC82  +
inc [ebp+rgIndices]  +
push ebx  +
call ds:SysFreeString  +
and [ebp+var_C] 0 +
mov ebx [ebp+var_1C] +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebx+50h] +
jl loc_101FBEF  +
jmp loc_101FB2E  +
push edi  +
push 0D35h  +
jmp loc_101FBCC  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0D38h  +
jmp loc_101FC88  +
push edi  +
push 0D3Eh  +
push offset aListviewpageGe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101FB3A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+18h] +
cmp eax [ecx+50h] +
jnb loc_101FD4A  +
test eax eax +
jl loc_101FD4A  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call sub_101DC36  +
test eax eax +
jge loc_101FCDE  +
push eax  +
push 0DBEh  +
jmp loc_101FD36  +
test byte ptr [esi+0Ch] 1 +
jz loc_101FD04  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100D999  +
test eax eax +
jge loc_101FD4A  +
push eax  +
push 0DC5h  +
jmp loc_101FD36  +
push edi  +
mov edi [ebp+var_4] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100DD8E  +
add esp 14h +
pop edi  +
test eax eax +
jge loc_101FD4A  +
push eax  +
push 0DCDh  +
push offset aListviewpageOn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-8] 0 +
push ebx  +
push esi  +
push dword ptr [ebp+8]  +
mov ebx ecx +
call sub_101EC1C  +
mov esi eax +
test esi esi +
jge loc_101FD7F  +
push esi  +
push 0DF1h  +
jmp loc_101FDBA  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1014ABA  +
mov esi eax +
test esi esi +
jge loc_101FD99  +
push esi  +
push 0DF4h  +
jmp loc_101FDBA  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push offset a_Extensionpo_2  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jge loc_101FDD0  +
push esi  +
push 0DFAh  +
push offset aInteractivit_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101FDD9  +
jnz loc_101FDD9  +
mov dword ptr [ebx+58h] 1 +
mov eax [ebp-4] +
test eax eax +
jz loc_101FDEA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-8] +
test eax eax +
jz loc_101FDF7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_101F3B4  +
mov esi eax +
test esi esi +
jge loc_101FE1D  +
push esi  +
push 0E78h  +
jmp loc_101FE51  +
push 4  +
push offset aRtf  +
mov ecx edi +
call sub_100CB06  +
mov esi eax +
test esi esi +
jge loc_101FE39  +
push esi  +
push 0E7Bh  +
jmp loc_101FE51  +
push offset aFlushlinkconta  +
mov ecx edi +
call sub_100CAA7  +
mov esi eax +
test esi esi +
jge loc_101FE67  +
push esi  +
push 0E7Eh  +
push offset aInteractivi_13  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_101FE6B  +
and dword ptr [edi+58h] 0 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101EB0D  +
xor eax eax +
mov [esi+58h] eax +
mov [esi+5Ch] eax +
mov [esi+60h] eax +
mov dword ptr [esi] offset off_10062D8 +
mov dword ptr [esi+4] offset off_1003D8C +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
pop eax  +
retn   +
***
mov eax 400h +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+58h] +
push edi  +
mov edi ds:SysFreeString +
mov dword ptr [esi] offset off_10062D8 +
mov dword ptr [esi+4] offset off_1003D8C +
test eax eax +
jz loc_101FEE6  +
push eax  +
call edi  +
and dword ptr [esi+58h] 0 +
mov eax [esi+5Ch] +
test eax eax +
jz loc_101FEF4  +
push eax  +
call edi  +
and dword ptr [esi+5Ch] 0 +
mov eax [esi+60h] +
test eax eax +
jz loc_101FF02  +
push eax  +
call edi  +
and dword ptr [esi+60h] 0 +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_101EB47  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
xor edi edi +
push 800h  +
mov esi ecx +
push edi  +
mov [ebp-14h] esi +
mov [ebp-8] edi +
mov [ebp-10h] edi +
mov [ebp-4] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax edi +
jnz loc_101FF68  +
mov esi 8007000Eh +
push esi  +
push 0EC7h  +
push offset aInteractivit_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10200E7  +
push dword ptr [ebp+8]  +
mov ecx esi +
mov [esi+64h] edi +
call sub_101EC1C  +
mov esi eax +
cmp esi edi +
jge loc_101FF83  +
push esi  +
push 0ECCh  +
jmp loc_101FFD6  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1014ABA  +
mov esi eax +
cmp esi edi +
jge loc_101FF9D  +
push esi  +
push 0ECFh  +
jmp loc_101FFD6  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-10h]  +
push edi  +
push offset a_Commandline  +
call sub_1014B70  +
mov esi eax +
cmp esi edi +
jge loc_101FFBD  +
push esi  +
push 0ED2h  +
jmp loc_101FFD6  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_101FFEF  +
push esi  +
push 0ED5h  +
push offset aInteractivit_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10200D6  +
push ebx  +
push dword ptr [ebp-4]  +
mov ebx 400h +
push ebx  +
push dword ptr [ebp-0Ch]  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jge loc_1020012  +
push esi  +
push 0EDBh  +
jmp loc_10200C1  +
cmp [ebp-4] edi +
jz loc_1020023  +
push dword ptr [ebp-4]  +
call ds:SysFreeString  +
mov [ebp-4] edi +
mov eax [ebp-8] +
cmp eax edi +
jz loc_1020033  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-8] edi +
push dword ptr [ebp-0Ch]  +
mov ecx [ebp-14h] +
call sub_101E158  +
mov esi eax +
cmp esi edi +
jge loc_102004C  +
push esi  +
push 0EE1h  +
jmp loc_10200C1  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push offset a_Extensionp_18  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jge loc_102006F  +
push esi  +
push 0EE7h  +
jmp loc_10200C1  +
jnz loc_10200D5  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_102008C  +
push esi  +
push 0EEBh  +
jmp loc_10200C1  +
push dword ptr [ebp-4]  +
push ebx  +
push dword ptr [ebp-0Ch]  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jge loc_10200A6  +
push esi  +
push 0EEEh  +
jmp loc_10200C1  +
mov eax [ebp-14h] +
add eax 58h +
push eax  +
push dword ptr [ebp-0Ch]  +
call sub_1030712  +
mov esi eax +
cmp esi edi +
jge loc_10200D5  +
push esi  +
push 0EF1h  +
push offset aInteractivit_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
push dword ptr [ebp-0Ch]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp-4] edi +
jz loc_10200F8  +
push dword ptr [ebp-4]  +
call ds:SysFreeString  +
mov [ebp-4] edi +
mov eax [ebp-8] +
cmp eax edi +
jz loc_1020108  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-8] edi +
mov eax [ebp-10h] +
cmp eax edi +
jz loc_1020115  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and dword ptr [ebp-18h] 0 +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp-14h] +
stos   +
stos   +
stos   +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov edi [ebp+0Ch] +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
lea eax [edi+4] +
push eax  +
mov esi ecx +
call sub_100D67F  +
test al al +
jz loc_10201F0  +
lea eax [ebp-4] +
push eax  +
push offset aBtnlaunchui  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_1020187  +
push eax  +
push 0FA9h  +
push offset aInteractivit_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_10201E6  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_10201F0  +
xor ebx ebx +
inc ebx  +
push ebx  +
mov [esi+64h] ebx +
mov [edi+8] bl +
xor edi edi +
push edi  +
push dword ptr [esi+60h]  +
push dword ptr [esi+5Ch]  +
push edi  +
push edi  +
call ds:ShellExecuteW  +
cmp eax 20h +
mov ecx esi +
jg loc_10201C7  +
push ebx  +
push offset aTxtuierror  +
call sub_100CB06  +
cmp eax edi +
jge loc_10201FB  +
push eax  +
push 0FBCh  +
jmp loc_10201DB  +
push offset aTxtuierror  +
call sub_100CAA7  +
cmp eax edi +
jge loc_10201FB  +
push eax  +
push 0FBFh  +
push offset aInteractivit_7  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_10201FB  +
push edi  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_101F2EB  +
cmp dword ptr [ebp-18h] 0 +
mov esi ds:CloseHandle +
jz loc_1020212  +
cmp dword ptr [ebp-18h] 0FFFFFFFFh +
jz loc_1020212  +
push dword ptr [ebp-18h]  +
call esi  +
cmp dword ptr [ebp-14h] 0 +
jz loc_1020223  +
cmp dword ptr [ebp-14h] 0FFFFFFFFh +
jz loc_1020223  +
push dword ptr [ebp-14h]  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
call sub_101F3B4  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_102024C  +
push eax  +
push 101Bh  +
jmp loc_1020265  +
push offset aTxtuierror  +
mov ecx esi +
call sub_100CAA7  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_102027B  +
push eax  +
push 101Eh  +
push offset aInteractivit_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10202B1  +
mov eax [esi+58h] +
push edi  +
mov edi ds:SysFreeString +
test eax eax +
jz loc_1020290  +
push eax  +
call edi  +
and dword ptr [esi+58h] 0 +
mov eax [esi+5Ch] +
test eax eax +
jz loc_102029E  +
push eax  +
call edi  +
and dword ptr [esi+5Ch] 0 +
mov eax [esi+60h] +
test eax eax +
jz loc_10202AC  +
push eax  +
call edi  +
and dword ptr [esi+60h] 0 +
and dword ptr [esi+64h] 0 +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jnz loc_10202EE  +
push 80004005h  +
call loc_101E3B3  +
mov ecx [eax+4] +
mov ebx [ebp+arg_8] +
mov esi [ebp+arg_4] +
sub ecx ebx +
sar ecx 1 +
lea ecx [esi+ecx*2] +
mov [eax+4] ecx +
mov ecx [eax+8] +
sub ecx ebx +
sar ecx 1 +
lea ecx [esi+ecx*2] +
mov [eax+8] ecx +
cmp [eax] edi +
jbe loc_1020344  +
mov ecx [eax+10h] +
lea edx [ecx+edi*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_102033F  +
cmp dword ptr [edx+4] 0 +
jz loc_102033F  +
sub ecx ebx +
sar ecx 1 +
lea ecx [esi+ecx*2] +
mov [edx] ecx +
mov ecx [eax+10h] +
lea ecx [ecx+edi*8+4] +
mov edx [ecx] +
sub edx ebx +
sar edx 1 +
lea edx [esi+edx*2] +
mov [ecx] edx +
inc edi  +
cmp edi [eax] +
jb loc_1020312  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
mov [esi+24h] edi +
mov [esi] edi +
lea ebx [esi+10h] +
push dword ptr [ebx]  +
call sub_10361ED  +
pop ecx  +
mov [ebx] edi +
mov edi [ebp+arg_4] +
push edi  +
mov ecx ebx +
call sub_101E34B  +
test al al +
jnz loc_1020381  +
xor eax eax +
jmp loc_10203C4  +
mov [esi] edi +
lea edi [esi+0Ch] +
push dword ptr [edi]  +
call sub_10361ED  +
and dword ptr [edi] 0 +
pop ecx  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_101E2FE  +
test al al +
jz loc_102037D  +
mov eax [ebp+arg_0] +
shl eax 2 +
push eax  +
push 0  +
push dword ptr [edi]  +
call memset  +
mov eax [esi] +
shl eax 3 +
push eax  +
push 0  +
push dword ptr [ebx]  +
call memset  +
xor eax eax +
add esp 18h +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+24h] +
test eax eax +
jnz loc_10203DE  +
pop esi  +
retn   +
push eax  +
lea ecx [esi+14h] +
call sub_101E413  +
mov eax [eax] +
dec dword ptr [esi+24h]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
movzx edx word ptr [eax] +
cmp edx [ebp+arg_4] +
jz loc_1020409  +
xor eax eax +
jmp loc_1020411  +
add eax 2 +
mov [ecx] eax +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov ebx ecx +
movzx ecx word ptr [eax] +
push edi  +
cmp cx 5Ch +
jnz loc_102044A  +
add eax 2 +
mov [esi] eax +
movzx eax word ptr [eax] +
push eax  +
mov ecx ebx +
call sub_101E398  +
mov edi [ebp+arg_4] +
mov [edi] ax +
jmp loc_1020450  +
mov edi [ebp+arg_4] +
mov [edi] cx +
add dword ptr [esi] 2 +
push 2Dh  +
push esi  +
mov ecx ebx +
call sub_10203F3  +
test eax eax +
jnz loc_102046E  +
mov ax [edi] +
mov ecx [ebp+arg_8] +
mov [ecx] ax +
xor eax eax +
jmp loc_10204A5  +
mov eax [esi] +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_102049C  +
cmp cx 5Dh +
jz loc_102049C  +
mov eax [ebp+arg_8] +
mov [eax] cx +
add dword ptr [esi] 2 +
mov ax [eax] +
cmp ax [edi] +
jnb loc_102046A  +
mov dword ptr [ebx] 8 +
mov eax 0FFFFFFFFh +
jmp loc_10204A5  +
mov dword ptr [ebx] 4 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ecx+4] +
jb loc_10204C8  +
push 80070057h  +
call loc_101E3B3  +
mov ecx [ecx] +
lea eax [ecx+eax*8] +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jz locret_10204E4  +
push eax  +
call ds:free  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov edx [esi+8] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi edx +
jbe loc_1020579  +
cmp dword ptr [esi] 0 +
mov eax [esi+0Ch] +
jnz loc_1020526  +
cmp eax edi +
jbe loc_102050C  +
mov edi eax +
push 8  +
push edi  +
call ds:calloc  +
pop ecx  +
pop ecx  +
mov [esi] eax +
test eax eax +
jnz loc_1020521  +
xor al al +
jmp loc_102057B  +
mov [esi+8] edi +
jmp loc_1020579  +
test eax eax +
jnz loc_1020545  +
mov eax [esi+4] +
shr eax 3 +
cmp eax 4 +
jnb loc_102053A  +
push 4  +
pop eax  +
jmp loc_1020545  +
mov ecx 400h +
cmp eax ecx +
jbe loc_1020545  +
mov eax ecx +
add eax edx +
mov ebx eax +
cmp edi eax +
jb loc_102054F  +
mov ebx edi +
push 8  +
push ebx  +
call ds:calloc  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_102051D  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push edi  +
call sub_101E4C7  +
push dword ptr [esi]  +
call ds:free  +
pop ecx  +
mov [esi] edi +
mov [esi+8] ebx +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov edx [esi+8] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi edx +
jbe loc_1020616  +
cmp dword ptr [esi] 0 +
mov eax [esi+0Ch] +
jnz loc_10205C3  +
cmp eax edi +
jbe loc_10205A9  +
mov edi eax +
push 4  +
push edi  +
call ds:calloc  +
pop ecx  +
pop ecx  +
mov [esi] eax +
test eax eax +
jnz loc_10205BE  +
xor al al +
jmp loc_1020618  +
mov [esi+8] edi +
jmp loc_1020616  +
test eax eax +
jnz loc_10205E2  +
mov eax [esi+4] +
shr eax 3 +
cmp eax 4 +
jnb loc_10205D7  +
push 4  +
pop eax  +
jmp loc_10205E2  +
mov ecx 400h +
cmp eax ecx +
jbe loc_10205E2  +
mov eax ecx +
add eax edx +
mov ebx eax +
cmp edi eax +
jb loc_10205EC  +
mov ebx edi +
push 4  +
push ebx  +
call ds:calloc  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_10205BA  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push edi  +
call sub_101E4A3  +
push dword ptr [esi]  +
call ds:free  +
pop ecx  +
mov [esi] edi +
mov [esi+8] ebx +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101EB47  +
test [ebp+arg_0] 1 +
jz loc_1020646  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
xor eax eax +
mov [ebp+wParam] esi +
lea edi [ebp+var_18] +
stos   +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov ebx ecx +
mov [ebp+var_10] esi +
mov [ebp+dwBytes] esi +
mov [ebp+var_14] esi +
mov [ebp+var_4] esi +
mov [ebp+lpMem] esi +
call sub_10307E0  +
cmp eax esi +
mov edi ds:SysFreeString +
mov [ebp+arg_4] eax +
jge loc_102069D  +
push eax  +
push 3EFh  +
jmp loc_102076F  +
push dword ptr [ebx+4Ch]  +
lea eax [ebp+lpMem] +
push [ebp+var_4]  +
push eax  +
call sub_1033AEB  +
cmp eax esi +
mov [ebp+arg_4] eax +
jge loc_10206BE  +
push eax  +
push 3F5h  +
jmp loc_102076F  +
cmp [ebp+var_4] esi +
jz loc_10206CB  +
push [ebp+var_4]  +
call edi  +
mov [ebp+var_4] esi +
push [ebp+lpMem]  +
call ds:SysAllocString  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_10206EB  +
mov eax 8007000Eh +
push eax  +
push 3F9h  +
jmp loc_102076C  +
push 7Bh  +
pop ecx  +
mov [ebp+wParam] esi +
mov [ebp+var_18] 4B0h +
cmp cx [eax] +
jnz loc_1020788  +
lea ecx [ebp+dwBytes] +
push ecx  +
push 100000h  +
push eax  +
call sub_101420B  +
cmp eax esi +
mov [ebp+arg_4] eax +
jge loc_102071F  +
push eax  +
push 407h  +
jmp loc_102076F  +
push [ebp+dwBytes]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+var_10] ebx +
cmp ebx esi +
jnz loc_1020747  +
mov eax 8007000Eh +
push eax  +
push 40Ah  +
jmp loc_102076C  +
push 0FFFFFFFFh  +
push [ebp+var_4]  +
lea eax [ebp+var_14] +
push [ebp+dwBytes]  +
push ebx  +
push eax  +
call ds:wcstombs_s  +
add esp 14h +
test eax eax +
jnz loc_1020785  +
mov eax 80004004h +
push eax  +
push 414h  +
mov [ebp+arg_4] eax +
push offset aInteractivi_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102079B  +
push ebx  +
jmp loc_1020789  +
push eax  +
lea eax [ebp+wParam] +
push eax  +
push 461h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp [ebp+var_4] esi +
jz loc_10207A8  +
push [ebp+var_4]  +
call edi  +
mov [ebp+var_4] esi +
mov edi ds:HeapFree +
cmp [ebp+lpMem] esi +
jz loc_10207C3  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [ebp+lpMem] esi +
cmp [ebp+var_10] esi +
jz loc_10207D5  +
push [ebp+var_10]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+14h] +
call sub_10204D6  +
push dword ptr [esi+10h]  +
call sub_10361ED  +
and dword ptr [esi+10h] 0 +
push dword ptr [esi+0Ch]  +
call sub_10361ED  +
and dword ptr [esi+0Ch] 0 +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_34] eax +
lea eax [ebp+rgsabound] +
xor ebx ebx +
push eax  +
xor edi edi +
inc ebx  +
push ebx  +
mov esi ecx +
push 8  +
mov [ebp+var_1C] esi +
mov [ebp+rgIndices] edi +
mov [ebp+hWnd] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_28] edi +
mov [ebp+rgsabound.lLbound] edi +
mov [ebp+rgsabound.cElements] ebx +
call ds:SafeArrayCreate  +
mov [ebp+psa] eax +
cmp eax edi +
jnz loc_1020878  +
mov esi 8007000Eh +
push esi  +
push 79Eh  +
push offset aRadiobuttonpag  +
push offset aDwzErrorSDHr0x  +
push ebx  +
jmp loc_10209C6  +
mov [ebp+var_24] edi +
mov ebx offset aRbD +
cmp [esi+50h] edi +
jbe loc_10208DB  +
mov eax [ebp+var_24] +
inc eax  +
push eax  +
push ebx  +
mov [ebp+var_30] eax +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi edi +
jl loc_10208FD  +
mov ecx [ebp+var_1C] +
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_100D26C  +
mov esi eax +
cmp esi edi +
jl loc_1020908  +
push edi  +
push edi  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov ecx [ebp+var_1C] +
cmp eax 1 +
jz loc_1020913  +
mov eax [ebp+var_30] +
mov [ebp+var_24] eax +
cmp eax [ecx+50h] +
jb loc_1020885  +
push 1  +
push ebx  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi edi +
jge loc_102095B  +
push esi  +
push 7C7h  +
jmp loc_10209BA  +
push esi  +
push 7A9h  +
jmp loc_10209BA  +
push esi  +
push 7ACh  +
jmp loc_10209BA  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+var_24]  +
call sub_101DC36  +
mov esi eax +
cmp esi edi +
jge loc_1020930  +
push esi  +
push 7B0h  +
jmp loc_10209BA  +
mov ecx [ebp+var_2C] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push edi  +
push edi  +
push 0F1h  +
push [ebp+hWnd]  +
mov esi eax +
call ds:SendMessageW  +
cmp esi edi +
jnz loc_102099F  +
mov esi 80004005h +
push esi  +
push 7D6h  +
jmp loc_10209BA  +
mov ecx [ebp+var_1C] +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_100C938  +
mov esi eax +
cmp esi edi +
jge loc_1020979  +
push esi  +
push 7CAh  +
jmp loc_10209BA  +
mov ecx [ebp+var_28] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
mov ecx [ebp+var_1C] +
push 2  +
push edi  +
push 48Bh  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov esi 80004005h +
push esi  +
push 7D1h  +
jmp loc_10209BA  +
mov ebx [ebp+psa] +
push esi  +
lea eax [ebp+rgIndices] +
push eax  +
push ebx  +
call ds:SafeArrayPutElement  +
mov esi eax +
cmp esi edi +
jge loc_10209D0  +
push esi  +
push 7DAh  +
push offset aRadiobuttonpag  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10209D5  +
mov eax [ebp+var_34] +
mov [eax] ebx +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push esi  +
xor esi esi +
cmp [ebp+arg_0] 9E7h +
push edi  +
mov edi ecx +
mov [ebp+var_19] 0 +
mov [ebp+hWnd] esi +
jz loc_1020A2F  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100D06C  +
mov [ebp+var_19] al +
jmp loc_1020AC8  +
xor eax eax +
push ebx  +
cmp [edi+50h] esi +
jbe loc_1020AAC  +
lea ebx [eax+1] +
push ebx  +
push offset aRbD  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1020A85  +
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
mov ecx edi +
call sub_100D26C  +
test eax eax +
jl loc_1020A8D  +
push 0  +
push 0  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax 1 +
jz loc_1020AA9  +
mov eax ebx +
cmp eax [edi+50h] +
jb loc_1020A37  +
jmp loc_1020AAC  +
push eax  +
push 814h  +
jmp loc_1020A93  +
push eax  +
push 817h  +
push offset aRadiobuttonp_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1020AC7  +
xor esi esi +
inc esi  +
neg esi  +
sbb esi esi +
push 2  +
and esi 2 +
push esi  +
push 48Bh  +
mov ecx edi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov [ebp+var_19] 1 +
pop ebx  +
mov ecx [ebp+var_4] +
mov al [ebp+var_19] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
mov [ebp-2Ch] eax +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
xor ebx ebx +
lea eax [edi+4] +
push eax  +
mov esi ecx +
mov [ebp-24h] ebx +
mov [ebp-28h] ebx +
mov [ebp-20h] ebx +
call sub_100D67F  +
test al al +
jz loc_1020B6A  +
mov [ebp-1Ch] ebx +
cmp [esi+50h] ebx +
jbe loc_1020B6A  +
mov ebx [ebp-1Ch] +
inc ebx  +
push ebx  +
push offset aRbD  +
lea eax [ebp-18h] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1020B9E  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jl loc_1020BA6  +
mov eax [edi] +
cmp eax [ebp-24h] +
jz loc_1020BBD  +
mov [ebp-1Ch] ebx +
cmp ebx [esi+50h] +
jb loc_1020B2C  +
push edi  +
push dword ptr [ebp-2Ch]  +
mov ecx esi +
call sub_101F2EB  +
push 0  +
push 0  +
push 9E7h  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
push eax  +
push 85Ah  +
jmp loc_1020BAC  +
push eax  +
push 85Dh  +
push offset aRadiobuttonp_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_1020C59  +
xor ebx ebx +
inc ebx  +
cmp dword ptr [esi+58h] 0 +
jz loc_1020BCC  +
and dword ptr [esi+58h] 0 +
jmp loc_1020BE0  +
push 2  +
push 2  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov [ebp-20h] ebx +
cmp dword ptr [ebp-20h] 0 +
mov [edi+8] bl +
jz loc_1020B6A  +
xor edi edi +
cmp [esi+50h] edi +
jbe loc_1020B75  +
cmp [ebp-1Ch] edi +
jz loc_1020C35  +
lea eax [edi+1] +
push eax  +
push offset aRbD  +
lea eax [ebp-18h] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1020C40  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov ecx esi +
call sub_100D26C  +
test eax eax +
jl loc_1020C48  +
push 0  +
push 0  +
push 0F1h  +
push dword ptr [ebp-28h]  +
call ds:PostMessageW  +
inc edi  +
cmp edi [esi+50h] +
jb loc_1020BF0  +
jmp loc_1020B75  +
***
push eax  +
push 882h  +
jmp loc_1020C4E  +
push eax  +
push 885h  +
push offset aRadiobuttonp_1  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_1020B8D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
xor eax eax +
cmp [esi+50h] eax +
jbe loc_1020CDE  +
push edi  +
lea edi [eax+1] +
push edi  +
push offset aRbD  +
lea eax [ebp-18h] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1020CBB  +
lea eax [ebp-18h] +
push eax  +
mov ecx esi +
call sub_101DD3A  +
test eax eax +
jl loc_1020CC3  +
mov eax edi +
cmp eax [esi+50h] +
jb loc_1020C88  +
jmp loc_1020CDD  +
push eax  +
push 8B8h  +
jmp loc_1020CC9  +
push eax  +
push 8BBh  +
push offset aRadiobuttonp_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [ebp+var_34] eax +
xor esi esi +
xor eax eax +
mov [ebp+psa] ebx +
mov [ebp+rgIndices] ebx +
mov [ebp+hWnd] ebx +
mov [ebp+var_30] ebx +
cmp [edi+50h] ebx +
jbe loc_1020D79  +
inc eax  +
push eax  +
push offset aCbD  +
mov [ebp+var_2C] eax +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jl loc_1020DA7  +
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
mov ecx edi +
call sub_100D26C  +
mov esi eax +
cmp esi ebx +
jl loc_1020DC6  +
push ebx  +
push ebx  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax 1 +
jnz loc_1020D71  +
inc [ebp+psa]  +
mov eax [ebp+var_2C] +
cmp eax [edi+50h] +
jb loc_1020D26  +
mov eax [ebp+psa] +
mov [ebp+rgsabound.cElements] eax +
lea eax [ebp+rgsabound] +
push eax  +
push 1  +
push 8  +
mov [ebp+rgsabound.lLbound] ebx +
call ds:SafeArrayCreate  +
mov [ebp+psa] eax +
cmp eax ebx +
jnz loc_1020DCE  +
mov esi 8007000Eh +
push esi  +
push 0AA1h  +
jmp loc_1020EB9  +
push esi  +
push 0A93h  +
push offset aCheckboxpageGe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1020E88  +
push esi  +
push 0A96h  +
jmp loc_1020DAD  +
mov [ebp+var_24] ebx +
cmp [edi+50h] ebx +
jbe loc_1020E6F  +
mov eax [ebp+var_24] +
inc eax  +
push eax  +
push offset aCbD  +
mov [ebp+var_2C] eax +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jl loc_1020E9B  +
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
mov ecx edi +
call sub_100D26C  +
mov esi eax +
cmp esi ebx +
jl loc_1020EA3  +
push ebx  +
push ebx  +
push 0F0h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax 1 +
jnz loc_1020E60  +
lea eax [ebp+var_30] +
push eax  +
push [ebp+var_24]  +
mov ecx edi +
call sub_101DC36  +
mov esi eax +
cmp esi ebx +
jl loc_1020EAB  +
mov ecx [ebp+var_30] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
lea eax [ebp+rgIndices] +
push eax  +
push [ebp+psa]  +
call ds:SafeArrayPutElement  +
mov esi eax +
cmp esi ebx +
jl loc_1020EB3  +
inc [ebp+rgIndices]  +
mov eax [ebp+var_2C] +
mov [ebp+var_24] eax +
cmp eax [edi+50h] +
jb loc_1020DDA  +
mov ecx [ebp+psa] +
mov eax [ebp+var_34] +
mov [eax] ecx +
mov [ebp+psa] ebx +
cmp [ebp+psa] ebx +
jz loc_1020E88  +
push [ebp+psa]  +
call ds:SafeArrayDestroy  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
push esi  +
push 0AACh  +
jmp loc_1020EB9  +
push esi  +
push 0AAFh  +
jmp loc_1020EB9  +
push esi  +
push 0AB3h  +
jmp loc_1020EB9  +
push esi  +
push 0ABBh  +
push offset aCheckboxpageGe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1020E7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
xor eax eax +
cmp [esi+50h] eax +
jbe loc_1020F47  +
push edi  +
lea edi [eax+1] +
push edi  +
push offset aCbD  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1020F24  +
lea eax [ebp+var_18] +
push eax  +
mov ecx esi +
call sub_101DD3A  +
test eax eax +
jl loc_1020F2C  +
mov eax edi +
cmp eax [esi+50h] +
jb loc_1020EF1  +
jmp loc_1020F46  +
push eax  +
push 0AEBh  +
jmp loc_1020F32  +
push eax  +
push 0AEEh  +
push offset aCheckboxpageOn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1036539  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
mov [ebp-18h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-24h] +
call sub_100CE71  +
push 200h  +
push ebx  +
mov [ebp-4] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp-1Ch] edi +
cmp edi ebx +
jnz loc_1020FC2  +
push 8007000Eh  +
push 0B84h  +
push offset aEulapageOnseta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1021093  +
mov ecx esi +
call sub_100D422  +
push offset aRtf  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_1020FF8  +
push eax  +
push 0B90h  +
push offset aEulapageOnseta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10211EE  +
push 100h  +
push edi  +
push 153h  +
call sub_10301CE  +
cmp eax ebx +
jge loc_1021014  +
push eax  +
push 0B93h  +
jmp loc_1020FDF  +
push edi  +
mov ecx esi +
call sub_100C7C0  +
cmp eax ebx +
jge loc_1021028  +
push eax  +
push 0B99h  +
jmp loc_1020FDF  +
push offset aTxtdescription  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_1021040  +
push eax  +
push 0B9Ch  +
jmp loc_1020FDF  +
mov edi offset aEditricheula +
cmp [esi+48h] ebx +
jz loc_10210EB  +
lea eax [ebp-10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_100D26C  +
cmp eax ebx +
jge loc_1021069  +
push eax  +
push 0BA4h  +
jmp loc_1020FDF  +
push dword ptr [esi+48h]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
call sub_1020652  +
cmp eax ebx +
jge loc_10210A7  +
push eax  +
push ebx  +
push 9E2h  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
or ebx 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100CE97  +
mov eax ebx +
call __EH_epilog3  +
retn   +
cmp [esi+48h] ebx +
jz loc_10210EB  +
cmp eax ebx +
jl loc_10210EB  +
push offset aEdit  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_10210CB  +
push eax  +
push 0BB2h  +
jmp loc_1020FDF  +
push 4  +
push edi  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
mov [ebp-14h] eax +
jge loc_1021189  +
push eax  +
push 0BB5h  +
jmp loc_1020FDF  +
push edi  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_1021102  +
push eax  +
push 0BB8h  +
jmp loc_1020FDF  +
push 4  +
mov edi offset aEdit +
push edi  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_1021120  +
push eax  +
push 0BBBh  +
jmp loc_1020FDF  +
push edi  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov [ebp-14h] eax +
cmp eax ebx +
jnz loc_1021150  +
push 8000FFFFh  +
push 0BBEh  +
jmp loc_1020FDF  +
lea eax [ebp-10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_100D26C  +
cmp eax ebx +
jge loc_102116B  +
push eax  +
push 0BC1h  +
jmp loc_1020FDF  +
push dword ptr [esi+3Ch]  +
mov ecx [ebp-14h] +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
cmp eax ebx +
mov [ebp-14h] eax +
jge loc_1021189  +
push eax  +
push 0BC4h  +
jmp loc_1020FDF  +
mov edi ds:SendMessageW +
push ebx  +
push 0FFFFFFFFh  +
push 0B1h  +
push dword ptr [ebp-10h]  +
call edi  +
push ebx  +
push 1  +
push 0CFh  +
push dword ptr [ebp-10h]  +
call edi  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
call ds:ShowScrollBar  +
lea eax [ebp-18h] +
push eax  +
push offset aCbeula  +
mov ecx esi +
call sub_100C938  +
cmp [ebp-14h] ebx +
jge loc_10211D6  +
push dword ptr [ebp-14h]  +
push 0BCFh  +
jmp loc_1020FDF  +
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
push 2  +
push ebx  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
push dword ptr [ebp-1Ch]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_1021093  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
cmp dword ptr [ebp+8] 4Eh +
push edi  +
jnz loc_102123B  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
cmp ecx 0FFFFFF62h +
jz loc_102127B  +
cmp ecx 0FFFFFF9Bh +
jz loc_1021244  +
cmp ecx 0FFFFFFF9h +
jbe loc_102123B  +
cmp ecx 0FFFFFFFEh +
ja loc_102123B  +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi [ebp+18h] +
cmp [edi+58h] esi +
jz loc_102123B  +
cmp dword ptr [eax+1Ch] 8 +
jnz loc_102123B  +
push esi  +
push esi  +
push 1032h  +
push dword ptr [eax]  +
call ds:SendMessageW  +
cmp eax 1 +
jnz loc_1021269  +
push 2  +
pop esi  +
push 2  +
push esi  +
push 48Bh  +
mov ecx edi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
jmp loc_1021238  +
***
mov ecx [ebp+18h] +
push eax  +
call sub_101FCA6  +
cmp eax esi +
jge loc_1021238  +
push eax  +
push 0D93h  +
push offset aListviewpageNo  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102123B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101FEBF  +
test byte ptr [ebp+8] 1 +
jz loc_10212C3  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
xor ecx ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov dword ptr [eax+1Ch] 1 +
mov [eax] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov esi ecx +
cmp eax 0FFFFFFFFh +
jz loc_1021308  +
mov [esi+0Ch] eax +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1021329  +
mov eax [esi] +
test eax eax +
jz loc_102131F  +
push eax  +
call ds:free  +
and [esi] edi +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
jmp loc_1021357  +
cmp edi [esi+8] +
ja loc_1021337  +
mov eax [esi+4] +
cmp edi eax +
jbe loc_1021354  +
jmp loc_1021344  +
push edi  +
call sub_10204EA  +
test al al +
jz loc_1021359  +
mov eax [esi+4] +
mov ecx edi +
sub ecx eax +
push ecx  +
mov ecx [esi] +
lea eax [ecx+eax*8] +
push eax  +
call nullsub_1  +
mov [esi+4] edi +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov esi ecx +
cmp eax 0FFFFFFFFh +
jz loc_1021378  +
mov [esi+0Ch] eax +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1021399  +
mov eax [esi] +
test eax eax +
jz loc_102138F  +
push eax  +
call ds:free  +
and [esi] edi +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
jmp loc_10213C7  +
cmp edi [esi+8] +
ja loc_10213A7  +
mov eax [esi+4] +
cmp edi eax +
jbe loc_10213C4  +
jmp loc_10213B4  +
push edi  +
call sub_1020587  +
test al al +
jz loc_10213C9  +
mov eax [esi+4] +
mov ecx edi +
sub ecx eax +
push ecx  +
mov ecx [esi] +
lea eax [ecx+eax*4] +
push eax  +
call nullsub_1  +
mov [esi+4] edi +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
or dword ptr [ebp-20h] 0FFFFFFFFh +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-18h] edi +
mov [ebp-10h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-28h] +
call sub_100CE71  +
mov eax [esi] +
mov ecx esi +
mov [ebp-4] edi +
call dword ptr [eax+7Ch]  +
add eax eax +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-14h] eax +
cmp eax edi +
jnz loc_1021445  +
push 8007000Eh  +
push 2FDh  +
push offset aInteractivi_11  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102168A  +
mov ecx esi +
call sub_100D422  +
mov ebx offset aRtf +
cmp [esi+48h] edi +
jz loc_10214E8  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_1021489  +
push eax  +
push 303h  +
push offset aInteractivi_11  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1021679  +
mov ecx [ebp-18h] +
mov eax [ecx] +
call dword ptr [eax+0A0h]  +
cmp eax edi +
jz loc_10214CC  +
cmp eax 0FFFFFFFFh +
jz loc_10214CC  +
push dword ptr [esi+48h]  +
mov ecx esi +
push eax  +
call sub_1020652  +
mov [ebp-1Ch] eax +
cmp [esi+48h] edi +
jz loc_10214E8  +
cmp eax edi +
jl loc_10214E8  +
push offset aTxtdescription  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_10214FF  +
push eax  +
push 313h  +
jmp loc_1021470  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10214E0  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 309h  +
jmp loc_1021470  +
push ebx  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_10214FF  +
push eax  +
push 319h  +
jmp loc_1021470  +
mov eax [esi+40h] +
cmp eax edi +
jz loc_10215BD  +
cmp [esi+44h] edi +
jz loc_10215BD  +
mov ebx ds:_wcsnicmp +
push 7  +
push offset aHttp  +
push eax  +
call ebx  +
add esp 0Ch +
test eax eax +
jz loc_1021550  +
push 8  +
push offset aHttps  +
push dword ptr [esi+40h]  +
call ebx  +
add esp 0Ch +
test eax eax +
jz loc_1021550  +
push 9  +
push offset aMshelp  +
push dword ptr [esi+40h]  +
call ebx  +
add esp 0Ch +
test eax eax +
jnz loc_10215BD  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+44h]  +
push 48h  +
push dword ptr [ebp-14h]  +
call sub_1014418  +
cmp eax edi +
jge loc_1021570  +
push eax  +
push 32Bh  +
jmp loc_1021470  +
push dword ptr [esi+44h]  +
mov eax [esi] +
push edi  +
push edi  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call dword ptr [eax+80h]  +
push eax  +
mov ecx esi +
call sub_100CC01  +
cmp eax edi +
jge loc_1021599  +
push eax  +
push 333h  +
jmp loc_1021470  +
push dword ptr [ebp-10h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+80h]  +
push eax  +
mov ecx esi +
call sub_100CCFE  +
cmp eax edi +
jge loc_10215D8  +
push eax  +
push 336h  +
jmp loc_1021470  +
push offset aLinkcontainer  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_10215D8  +
push eax  +
push 321h  +
jmp loc_1021470  +
mov ebx [ebp-14h] +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+38h]  +
push 80h  +
push ebx  +
call sub_1014418  +
cmp eax edi +
jge loc_10215FC  +
push eax  +
push 33Ah  +
jmp loc_1021470  +
push ebx  +
mov ecx esi +
call sub_100C7C0  +
cmp eax edi +
jge loc_1021613  +
push eax  +
push 33Dh  +
jmp loc_1021470  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+3Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+7Ch]  +
push eax  +
push ebx  +
call sub_1014418  +
cmp eax edi +
jge loc_1021637  +
push eax  +
push 340h  +
jmp loc_1021470  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push offset aTxtdescription  +
call sub_100CCFE  +
cmp eax edi +
jge loc_1021655  +
push eax  +
push 343h  +
jmp loc_1021470  +
push dword ptr [esi+3Ch]  +
mov ecx esi +
push edi  +
push edi  +
push ebx  +
push offset aTxtdescription  +
call sub_100CC01  +
cmp eax edi +
jge loc_1021676  +
push eax  +
push 346h  +
jmp loc_1021470  +
mov [ebp-20h] edi +
push dword ptr [ebp-14h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_100CE97  +
mov eax [ebp-20h] +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_10204D6  +
test [ebp+arg_0] 1 +
jz loc_10216C1  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
call dword ptr [eax+84h]  +
xor ebx ebx +
test eax eax +
jz loc_10216FE  +
push 0FFFFFFFFh  +
push offset aBrowse  +
mov ecx esi +
call sub_100CB06  +
mov edi eax +
cmp edi ebx +
jge loc_10216FE  +
push edi  +
push 6D4h  +
jmp loc_1021768  +
mov eax [esi+58h] +
mov edi ds:SysFreeString +
mov [esi+70h] ebx +
mov [esi+6Ch] ebx +
mov [esi+74h] ebx +
mov [esi+78h] ebx +
cmp eax ebx +
jz loc_102171D  +
push eax  +
call edi  +
mov [esi+58h] ebx +
mov ecx [esi+68h] +
cmp ecx ebx +
jz loc_102172E  +
push 1  +
call sub_10216A4  +
mov [esi+68h] ebx +
mov eax [esi+5Ch] +
cmp eax ebx +
jz loc_102173B  +
push eax  +
call edi  +
mov [esi+5Ch] ebx +
mov eax [esi+60h] +
cmp eax ebx +
jz loc_1021748  +
push eax  +
call edi  +
mov [esi+60h] ebx +
mov eax [esi+64h] +
cmp eax ebx +
jz loc_1021755  +
push eax  +
call edi  +
mov [esi+64h] ebx +
mov ecx esi +
call sub_101F3B4  +
mov edi eax +
cmp edi ebx +
jge loc_102177C  +
push edi  +
push 6E4h  +
push offset aEditpageResetu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 38h  +
mov eax offset byte_1048C5F +
call __EH_prolog3_GS  +
xor esi esi +
mov ebx ecx +
mov [ebp-30h] esi +
mov [ebp-34h] esi +
mov [ebp-2Ch] esi +
mov [ebp-24h] esi +
mov [ebp-38h] esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-44h] +
call sub_100CE71  +
push 1800h  +
push esi  +
mov [ebp-4] esi +
call ds:GetProcessHeap  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp-20h] eax +
test eax eax +
jnz loc_10217F7  +
push 8007000Eh  +
push 70Ch  +
push offset aRadiobuttonp_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1021ACF  +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [ebp-28h] eax +
test eax eax +
jnz loc_1021831  +
push 8007000Eh  +
push 70Dh  +
push offset aRadiobuttonp_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1021AA9  +
mov ecx ebx +
call sub_10213D4  +
mov eax [ebx+50h] +
and dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebx+58h] 1 +
mov edi offset aRadiobuttonp_3 +
test eax eax +
jbe loc_10219D4  +
mov eax [ebp-1Ch] +
inc eax  +
push eax  +
push offset aRbD  +
mov [ebp-3Ch] eax +
lea eax [ebp-18h] +
push 4  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1021A4D  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100D26C  +
test eax eax +
jl loc_1021A59  +
lea eax [ebp-30h] +
push eax  +
push dword ptr [ebp-1Ch]  +
mov ecx ebx +
call sub_101DC36  +
test eax eax +
jl loc_1021A61  +
test esi esi +
mov esi [ebp-30h] +
jnz loc_10218CB  +
cmp dword ptr [esi+18h] 0 +
jz loc_10218CB  +
push 0  +
push 1  +
push 0F1h  +
push dword ptr [ebp-24h]  +
call ds:PostMessageW  +
mov dword ptr [ebp-2Ch] 1 +
jmp loc_10218DD  +
push 0  +
push 0  +
push 0F1h  +
push dword ptr [ebp-24h]  +
call ds:PostMessageW  +
lea eax [ebp-34h] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push 100h  +
push dword ptr [ebp-28h]  +
call sub_1014418  +
test eax eax +
jl loc_1021A69  +
cmp dword ptr [ebp-34h] 0 +
mov eax [esi] +
mov ecx esi +
jz loc_1021938  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push 0C00h  +
push dword ptr [ebp-20h]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_1021951  +
push eax  +
push 73Ch  +
jmp loc_1021A53  +
call dword ptr [eax+0Ch]  +
push eax  +
push 0C00h  +
push dword ptr [ebp-20h]  +
call sub_100D999  +
test eax eax +
jl loc_1021A71  +
push dword ptr [ebp-20h]  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push dword ptr [ebp-28h]  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CC01  +
test eax eax +
jl loc_1021A79  +
push 1  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CB06  +
test eax eax +
jl loc_1021A81  +
push 1  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CCFE  +
test eax eax +
jl loc_1021A89  +
push dword ptr [ebp-24h]  +
mov ecx esi +
call sub_101E9A2  +
test eax eax +
jge loc_10219C2  +
push eax  +
push 754h  +
push edi  +
push offset aDwzWarningSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp-3Ch] +
mov esi [ebp-2Ch] +
mov [ebp-1Ch] eax +
cmp eax [ebx+50h] +
jb loc_1021853  +
mov eax [ebx+50h] +
cmp eax 4 +
jnb loc_1021A1A  +
inc eax  +
mov [ebp-1Ch] eax +
push dword ptr [ebp-1Ch]  +
lea eax [ebp-18h] +
push offset aRbD  +
push 4  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1021A91  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CAA7  +
test eax eax +
jl loc_1021A99  +
inc dword ptr [ebp-1Ch]  +
cmp dword ptr [ebp-1Ch] 5 +
jb loc_10219E0  +
neg esi  +
sbb esi esi +
push 2  +
and esi 2 +
push esi  +
push 48Bh  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
lea eax [ebp-38h] +
push eax  +
push offset aRb1  +
mov ecx ebx +
call sub_100C938  +
test eax eax +
jge loc_1021AA1  +
push eax  +
push 769h  +
jmp loc_1021A53  +
push eax  +
push 71Bh  +
push edi  +
jmp loc_102181D  +
***
push eax  +
push 71Eh  +
jmp loc_1021A53  +
***
push eax  +
push 721h  +
jmp loc_1021A53  +
***
push eax  +
push 733h  +
jmp loc_1021A53  +
***
push eax  +
push 742h  +
jmp loc_1021A53  +
***
push eax  +
push 74Bh  +
jmp loc_1021A53  +
***
push eax  +
push 74Eh  +
jmp loc_1021A53  +
***
push eax  +
push 751h  +
jmp loc_1021A53  +
***
push eax  +
push 75Ah  +
jmp loc_1021A53  +
***
push eax  +
push 75Dh  +
jmp loc_1021A53  +
***
mov ecx [ebp-38h] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
push dword ptr [ebp-20h]  +
mov edi ds:GetProcessHeap +
push 0  +
call edi  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp dword ptr [ebp-28h] 0 +
jz loc_1021ACF  +
push dword ptr [ebp-28h]  +
push 0  +
call edi  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-44h] +
call sub_100CE97  +
xor eax eax +
call sub_1036615  +
retn   +
***
push 34h  +
mov eax offset byte_1048C91 +
call __EH_prolog3  +
mov ebx ecx +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-18h] esi +
mov [ebp-24h] esi +
mov [ebp-28h] esi +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-40h] offset aCl1 +
mov dword ptr [ebp-3Ch] offset aCl2 +
mov dword ptr [ebp-38h] offset aCl3 +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-34h] +
call sub_100CE71  +
mov edi ds:GetProcessHeap +
push 1800h  +
push esi  +
mov [ebp-4] esi +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-1Ch] eax +
test eax eax +
jnz loc_1021B6F  +
push 8007000Eh  +
push 906h  +
push offset aCommandlinkp_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1021D51  +
push 200h  +
push 0  +
call edi  +
push eax  +
call esi  +
mov [ebp-14h] eax +
test eax eax +
jnz loc_1021B96  +
push 8007000Eh  +
push 907h  +
push offset aCommandlinkp_4  +
jmp loc_1021D1C  +
mov ecx ebx +
call sub_10213D4  +
mov eax [ebx+50h] +
and dword ptr [ebp-10h] 0 +
mov edi offset aCommandlinkp_4 +
test eax eax +
jbe loc_1021CFF  +
mov esi [ebp-10h] +
mov eax [ebp+esi*4-40h] +
lea ecx [ebp-18h] +
push ecx  +
push eax  +
mov ecx ebx +
call sub_100C938  +
test eax eax +
jl loc_1021D65  +
lea eax [ebp-20h] +
push eax  +
push esi  +
mov ecx ebx +
call sub_101DC36  +
test eax eax +
jl loc_1021D6D  +
mov esi [ebp-20h] +
lea eax [ebp-24h] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push 80h  +
push dword ptr [ebp-14h]  +
call sub_1014418  +
test eax eax +
jl loc_1021D75  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push 0C00h  +
push dword ptr [ebp-1Ch]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jl loc_1021D7D  +
push dword ptr [ebp-1Ch]  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push dword ptr [ebp-14h]  +
mov eax [ebp-10h] +
push dword ptr [ebp+eax*4-40h]  +
mov ecx ebx +
call sub_100CC01  +
test eax eax +
jl loc_1021D85  +
lea eax [ebp-28h] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push eax  +
push 100h  +
push dword ptr [ebp-14h]  +
call sub_1014418  +
test eax eax +
jl loc_1021D8D  +
push dword ptr [ebp-14h]  +
mov ecx [ebp-18h] +
call ds:?SetNote@CCCommandLink@DirectUI@@QAEJPBG@Z  +
test eax eax +
jl loc_1021D95  +
cmp dword ptr [ebp-24h] 0 +
jnz loc_1021C9C  +
cmp dword ptr [ebp-28h] 0 +
jnz loc_1021C9C  +
xor eax eax +
jmp loc_1021C9F  +
xor eax eax +
inc eax  +
push eax  +
push dword ptr [ebp-18h]  +
mov ecx ebx +
call sub_100CC9C  +
test eax eax +
jl loc_1021DA0  +
lea eax [ebp-2Ch] +
push eax  +
mov eax [ebp-10h] +
push dword ptr [ebp+eax*4-40h]  +
mov ecx ebx +
call sub_100D26C  +
test eax eax +
jl loc_1021DAB  +
push dword ptr [ebp-2Ch]  +
mov ecx esi +
call sub_101E9A2  +
test eax eax +
jge loc_1021CF0  +
push eax  +
push 93Dh  +
push edi  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebx+50h] +
jb loc_1021BB1  +
cmp dword ptr [ebx+50h] 2 +
jnz loc_1021D2B  +
push offset aCl3  +
mov ecx ebx +
call sub_100CAA7  +
test eax eax +
jge loc_1021D2B  +
push eax  +
push 945h  +
push edi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-1Ch]  +
mov edi ds:GetProcessHeap +
push 0  +
call edi  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp dword ptr [ebp-14h] 0 +
jz loc_1021D51  +
push dword ptr [ebp-14h]  +
push 0  +
call edi  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
push eax  +
push 90Dh  +
jmp loc_1021D1B  +
***
push eax  +
push 910h  +
jmp loc_1021D1B  +
***
push eax  +
push 917h  +
jmp loc_1021D1B  +
***
push eax  +
push 91Fh  +
jmp loc_1021D1B  +
***
push eax  +
push 927h  +
jmp loc_1021D1B  +
***
push eax  +
push 92Eh  +
jmp loc_1021D1B  +
***
push eax  +
push 931h  +
jmp loc_1021D1B  +
***
push eax  +
push 937h  +
jmp loc_1021D1B  +
***
push eax  +
push 93Ah  +
jmp loc_1021D1B  +
***
call __EH_prolog3_GS  +
xor esi esi +
mov ebx ecx +
mov [ebp-28h] esi +
mov [ebp-2Ch] esi +
mov [ebp-24h] esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-38h] +
call sub_100CE71  +
mov edi ds:GetProcessHeap +
push 1800h  +
push esi  +
mov [ebp-4] esi +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-20h] eax +
test eax eax +
jnz loc_1021E27  +
push 8007000Eh  +
push 0A0Fh  +
push offset aCheckboxpage_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1022085  +
push 200h  +
push 0  +
call edi  +
push eax  +
call esi  +
mov [ebp-1Ch] eax +
test eax eax +
jnz loc_1021E4E  +
push 8007000Eh  +
push 0A10h  +
push offset aCheckboxpage_0  +
jmp loc_1022050  +
mov ecx ebx +
call sub_10213D4  +
mov eax [ebx+50h] +
xor esi esi +
mov edi offset aCheckboxpage_0 +
test eax eax +
jbe loc_1021FC3  +
lea eax [esi+1] +
push eax  +
push offset aCbD  +
mov [ebp-30h] eax +
lea eax [ebp-18h] +
push 4  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1022001  +
lea eax [ebp-28h] +
push eax  +
push esi  +
mov ecx ebx +
call sub_101DC36  +
test eax eax +
jl loc_1022009  +
mov esi [ebp-28h] +
lea eax [ebp-2Ch] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push 100h  +
push dword ptr [ebp-1Ch]  +
call sub_1014418  +
test eax eax +
jl loc_1022011  +
cmp dword ptr [ebp-2Ch] 0 +
mov eax [esi] +
mov ecx esi +
jz loc_1021EFB  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push offset aSS  +
push 0C00h  +
push dword ptr [ebp-20h]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_1021F14  +
push eax  +
push 0A30h  +
jmp loc_102204F  +
call dword ptr [eax+0Ch]  +
push eax  +
push 0C00h  +
push dword ptr [ebp-20h]  +
call sub_100D999  +
test eax eax +
jl loc_1022019  +
push dword ptr [ebp-20h]  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+8]  +
push eax  +
push dword ptr [ebp-1Ch]  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CC01  +
test eax eax +
jl loc_1022021  +
push 1  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CB06  +
test eax eax +
jl loc_1022029  +
push 1  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CCFE  +
test eax eax +
jl loc_1022031  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100D26C  +
test eax eax +
jl loc_1022039  +
mov eax [esi+18h] +
xor ecx ecx +
test eax eax +
setnz cl  +
push 0  +
push ecx  +
push 0F1h  +
push dword ptr [ebp-24h]  +
call ds:PostMessageW  +
push dword ptr [ebp-24h]  +
mov ecx esi +
call sub_101E9A2  +
test eax eax +
jge loc_1021FB7  +
push eax  +
push 0A51h  +
push edi  +
push offset aDwzWarningSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
mov esi [ebp-30h] +
cmp esi [ebx+50h] +
jb loc_1021E67  +
mov eax [ebx+50h] +
cmp eax 4 +
jnb loc_102205F  +
lea esi [eax+1] +
push esi  +
push offset aCbD  +
lea eax [ebp-18h] +
push 4  +
push eax  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jl loc_1022041  +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_100CAA7  +
test eax eax +
jl loc_1022049  +
inc esi  +
cmp esi 5 +
jb loc_1021FD2  +
jmp loc_102205F  +
push eax  +
push 0A19h  +
jmp loc_102204F  +
push eax  +
push 0A1Ch  +
jmp loc_102204F  +
push eax  +
push 0A23h  +
jmp loc_102204F  +
push eax  +
push 0A36h  +
jmp loc_102204F  +
push eax  +
push 0A3Fh  +
jmp loc_102204F  +
push eax  +
push 0A42h  +
jmp loc_102204F  +
push eax  +
push 0A45h  +
jmp loc_102204F  +
push eax  +
push 0A48h  +
jmp loc_102204F  +
push eax  +
push 0A59h  +
jmp loc_102204F  +
push eax  +
push 0A5Ch  +
push edi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-20h]  +
mov edi ds:GetProcessHeap +
push 0  +
call edi  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_1022085  +
push dword ptr [ebp-1Ch]  +
push 0  +
call edi  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-38h] +
call sub_100CE97  +
xor eax eax +
call sub_1036615  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-18h] esi +
or dword ptr [ebp-34h] 0FFFFFFFFh +
xor ebx ebx +
push 38h  +
lea eax [ebp-84h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
mov [ebp-20h] ebx +
mov [ebp-88h] ebx +
call memset  +
add esp 0Ch +
push 0Ah  +
xor eax eax +
pop ecx  +
mov [ebp-0B4h] ebx +
lea edi [ebp-0B0h] +
stos   +
mov [ebp-4Ch] ebx +
lea edi [ebp-48h] +
stos   +
stos   +
mov ecx esi +
mov [ebp-1Ch] ebx +
mov dword ptr [ebp-14h] 10420h +
mov dword ptr [ebp-30h] 21h +
mov [ebp-2Ch] ebx +
mov [ebp-28h] ebx +
stos   +
mov [ebp-24h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-3Ch] +
call sub_100CE71  +
lea eax [ebp-2Ch] +
push eax  +
mov edi offset aLstview +
push edi  +
mov ecx esi +
mov [ebp-4] ebx +
call sub_100C938  +
cmp eax ebx +
jge loc_1022154  +
push eax  +
push 0C3Ch  +
push offset aListviewpage_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102243E  +
cmp [esi+58h] ebx +
jnz loc_1022160  +
mov dword ptr [ebp-14h] 10424h +
lea eax [ebp-10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_100D26C  +
cmp eax ebx +
jge loc_1022178  +
push eax  +
push 0C46h  +
jmp loc_102213B  +
push 0FFFFFFECh  +
push dword ptr [ebp-10h]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_1022191  +
mov dword ptr [ebp-30h] 2021h +
mov edi ds:GetSystemMetrics +
mov esi ds:SendMessageW +
cmp dword_104E064 ebx +
jz loc_10221FC  +
lea eax [ebp-4Ch] +
push eax  +
push dword ptr [ebp-10h]  +
call ds:GetClientRect  +
push 2  +
mov dword ptr [ebp-0B4h] 0Ah +
mov [ebp-0A0h] ebx +
call edi  +
mov ecx [ebp-44h] +
push ebx  +
push 1  +
push 108Eh  +
push dword ptr [ebp-10h]  +
sub ecx eax +
mov [ebp-0ACh] ecx +
call esi  +
lea eax [ebp-0B4h] +
push eax  +
lea eax [ebp-0A0h] +
push eax  +
push 1061h  +
push dword ptr [ebp-10h]  +
call esi  +
mov dword_104E064 ebx +
push dword ptr [ebp-14h]  +
push 10424h  +
push 1036h  +
push dword ptr [ebp-10h]  +
call esi  +
push 0FFFFFFF0h  +
push dword ptr [ebp-10h]  +
call ds:GetWindowLongW  +
or eax 4000h +
push eax  +
push 0FFFFFFF0h  +
push dword ptr [ebp-10h]  +
call ds:SetWindowLongW  +
push ebx  +
push ebx  +
push 1009h  +
push dword ptr [ebp-10h]  +
call esi  +
mov eax [ebp-18h] +
mov eax [eax+50h] +
mov [ebp-84h] ebx +
mov [ebp-80h] ebx +
mov [ebp-14h] ebx +
cmp eax ebx +
jbe loc_10223CB  +
mov ecx [ebp-18h] +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-14h]  +
mov dword ptr [ebp-88h] 1 +
mov [ebp-6Ch] ebx +
call sub_101DC36  +
cmp eax ebx +
jl loc_1022453  +
mov ecx [ebp-1Ch] +
mov edx [ecx+10h] +
cmp edx ebx +
jz loc_102228B  +
lea eax [ebp-28h] +
push eax  +
push edx  +
call sub_10304C4  +
mov ecx [ebp-1Ch] +
cmp [ecx+10h] ebx +
jz loc_1022337  +
cmp eax ebx +
jl loc_1022337  +
cmp [ebp-20h] ebx +
jnz loc_102231C  +
push 1  +
push 2  +
push dword ptr [ebp-30h]  +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
call ds:ImageList_Create  +
mov [ebp-20h] eax +
cmp eax ebx +
jz loc_102247D  +
cmp eax 0FFFFFFFFh +
jz loc_102247D  +
push eax  +
push 1  +
push 1003h  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax ebx +
jz loc_10222E4  +
push eax  +
call ds:ImageList_Destroy  +
push ebx  +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
push 1  +
push 6Dh  +
push dword_104E138  +
call ds:LoadImageW  +
cmp eax ebx +
jz loc_102245E  +
cmp eax 0FFFFFFFFh +
jz loc_102245E  +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [ebp-20h]  +
call ds:ImageList_ReplaceIcon  +
push dword ptr [ebp-28h]  +
or dword ptr [ebp-88h] 2 +
push 0FFFFFFFFh  +
push dword ptr [ebp-20h]  +
call ds:ImageList_ReplaceIcon  +
mov ecx [ebp-1Ch] +
mov [ebp-6Ch] eax +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov [ebp-74h] eax +
lea eax [ebp-88h] +
push eax  +
push ebx  +
push 104Dh  +
push dword ptr [ebp-10h]  +
call esi  +
mov eax [ebp-18h] +
cmp [eax+58h] ebx +
jz loc_102237E  +
cmp [ebp-24h] ebx +
jnz loc_10223B3  +
mov eax [ebp-1Ch] +
cmp [eax+18h] ebx +
jz loc_10223B3  +
push 2  +
pop eax  +
mov dword ptr [ebp-24h] 1 +
mov [ebp-0E0h] eax +
mov [ebp-0E4h] eax +
jmp loc_102239F  +
mov eax [ebp-1Ch] +
xor ecx ecx +
mov dword ptr [ebp-0E0h] 0F000h +
mov eax [eax+18h] +
cmp eax ebx +
setnz cl  +
inc ecx  +
shl ecx 0Ch +
mov [ebp-0E4h] ecx +
lea eax [ebp-0F0h] +
push eax  +
push dword ptr [ebp-14h]  +
push 102Bh  +
push dword ptr [ebp-10h]  +
call esi  +
inc dword ptr [ebp-84h]  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-18h] +
mov ecx [ebp-14h] +
cmp ecx [eax+50h] +
jb loc_1022250  +
push dword ptr [ebp-18h]  +
mov ecx [ebp-2Ch] +
push offset loc_1021209  +
call ds:?SetNotifyHandler@CCBase@DirectUI@@QAEXP6GHIIJPAJPAX@Z1@Z  +
xor eax eax +
inc eax  +
mov [ebp-0E0h] eax +
mov [ebp-0E4h] eax +
lea eax [ebp-0F0h] +
push eax  +
push ebx  +
push 102Bh  +
push dword ptr [ebp-10h]  +
call esi  +
mov esi [ebp-18h] +
mov ecx esi +
call sub_10213D4  +
mov [ebp-34h] eax +
cmp [esi+58h] ebx +
jz loc_102243E  +
push 0FFFFFFF0h  +
push dword ptr [ebp-10h]  +
call ds:GetWindowLongW  +
or eax 4 +
push eax  +
push 0FFFFFFF0h  +
push dword ptr [ebp-10h]  +
call ds:SetWindowLongW  +
cmp [ebp-24h] ebx +
jnz loc_102243E  +
push 2  +
push ebx  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-3Ch] +
call sub_100CE97  +
mov eax [ebp-34h] +
call __EH_epilog3  +
retn   +
push eax  +
push 0C6Dh  +
jmp loc_102213B  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1022472  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 0C99h  +
jmp loc_102213B  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1022491  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 0C84h  +
jmp loc_102213B  +
***
call __EH_prolog3  +
mov esi ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
mov edi offset aFlushlinkconta +
push edi  +
mov ecx esi +
call sub_100CAA7  +
test eax eax +
jge loc_10224DF  +
push eax  +
push 0E22h  +
jmp loc_1022547  +
mov ecx esi +
call sub_10213D4  +
lea eax [ebp-10h] +
push eax  +
push offset aLinkinteractio  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_1022502  +
push eax  +
push 0E27h  +
jmp loc_1022547  +
mov ecx [ebp-10h] +
call ds:?GetVisible@Element@DirectUI@@QAE_NXZ  +
test al al +
jz loc_102255B  +
cmp dword ptr [esi+58h] 0 +
jz loc_102255B  +
cmp dword ptr [esi+48h] 0 +
jnz loc_102255B  +
push offset aLinkcontainer  +
mov ecx esi +
call sub_100CAA7  +
test eax eax +
jge loc_1022533  +
push eax  +
push 0E2Bh  +
jmp loc_1022547  +
push 1  +
push edi  +
mov ecx esi +
call sub_100CB06  +
test eax eax +
jge loc_102255B  +
push eax  +
push 0E2Eh  +
push offset aInteractivi_12  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
xor edi edi +
mov [ebp-1Ch] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-24h] +
call sub_100CE71  +
mov ebx ds:GetProcessHeap +
push 800h  +
push edi  +
mov [ebp-4] edi +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-10h] eax +
cmp eax edi +
jnz loc_10225DB  +
push 8007000Eh  +
push 0F63h  +
push offset aInteractivi_14  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10226E3  +
push 64h  +
push edi  +
call ebx  +
push eax  +
call esi  +
mov [ebp-14h] eax +
cmp eax edi +
jnz loc_10225F9  +
push 8007000Eh  +
push 0F64h  +
jmp loc_10226B2  +
mov esi [ebp-18h] +
mov ecx esi +
call sub_10213D4  +
push offset aTxtuierror  +
mov ecx esi +
call sub_100CAA7  +
cmp eax edi +
jge loc_102261E  +
push eax  +
push 0F69h  +
jmp loc_10226B2  +
mov eax [esi+58h] +
cmp eax edi +
jnz loc_1022643  +
push 400h  +
push dword ptr [ebp-10h]  +
push 18Bh  +
call sub_10301CE  +
cmp eax edi +
jge loc_102265D  +
push eax  +
push 0F70h  +
jmp loc_10226B2  +
push eax  +
push 400h  +
push dword ptr [ebp-10h]  +
call sub_100D999  +
cmp eax edi +
jge loc_102265D  +
push eax  +
push 0F73h  +
jmp loc_10226B2  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-10h]  +
push 32h  +
push dword ptr [ebp-14h]  +
call sub_1014418  +
cmp eax edi +
jge loc_102267A  +
push eax  +
push 0F77h  +
jmp loc_10226B2  +
mov ecx [ebp-18h] +
push edi  +
push edi  +
push dword ptr [ebp-10h]  +
mov esi offset aBtnlaunchui +
push dword ptr [ebp-14h]  +
push esi  +
call sub_100CC01  +
cmp eax edi +
jge loc_102269C  +
push eax  +
push 0F7Ah  +
jmp loc_10226B2  +
push dword ptr [ebp-1Ch]  +
mov ecx [ebp-18h] +
push esi  +
call sub_100CCFE  +
cmp eax edi +
jge loc_10226C6  +
push eax  +
push 0F7Dh  +
push offset aInteractivi_14  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov esi ds:HeapFree +
cmp [ebp-14h] edi +
jz loc_10226DA  +
push dword ptr [ebp-14h]  +
push edi  +
call ebx  +
push eax  +
call esi  +
push dword ptr [ebp-10h]  +
push edi  +
call ebx  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor edi edi +
mov [esi+0Ch] edi +
mov [ebp-4] edi +
mov [esi+10h] edi +
lea ecx [esi+14h] +
mov [ecx] edi +
mov [ecx+4] edi +
mov [ecx+8] edi +
mov [ecx+0Ch] edi +
push 0FFFFFFFFh  +
push dword ptr [ebp+8]  +
mov byte ptr [ebp-4] 2 +
mov [esi] edi +
mov [esi+24h] edi +
call sub_1021364  +
mov [esi+4] edi +
mov [esi+8] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
push 0  +
lea ecx [esi+4] +
call sub_10212F4  +
and dword ptr [esi+18h] 0 +
and dword ptr [esi+14h] 0 +
and dword ptr [esi] 0 +
mov dword ptr [esi+1Ch] 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
push 0FFFFFFFFh  +
inc eax  +
lea edi [esi+4] +
push eax  +
mov ecx edi +
call sub_10212F4  +
test al al +
jnz loc_10227A1  +
mov dword ptr [esi] 1 +
or eax 0FFFFFFFFh +
jmp loc_10227B6  +
mov eax [esi+8] +
dec eax  +
push eax  +
mov ecx edi +
call sub_10204B1  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [esi+8] +
dec eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
inc dword ptr [esi+24h]  +
mov eax [esi+24h] +
cmp [esi+18h] eax +
ja loc_10227EE  +
push 0FFFFFFFFh  +
lea eax [eax+eax+2] +
push eax  +
lea ecx [esi+14h] +
call sub_1021364  +
test al al +
jnz loc_10227EE  +
dec dword ptr [esi+24h]  +
xor eax eax +
jmp loc_1022801  +
push dword ptr [esi+24h]  +
lea ecx [esi+14h] +
call sub_101E413  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
push 0FFFFFFFFh  +
push dword ptr [esi]  +
lea ecx [edi+4] +
call sub_10212F4  +
mov eax [esi+4] +
mov [edi+14h] eax +
mov eax [esi+8] +
mov [edi+18h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1022778  +
mov edi eax +
test edi edi +
jl loc_1022865  +
push edi  +
lea ecx [esi+4] +
call sub_10204B1  +
mov ecx [esi+18h] +
mov [eax+4] ecx +
inc dword ptr [esi+18h]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+58h] +
xor ebx ebx +
push edi  +
mov edi ds:SysFreeString +
mov dword ptr [esi] offset off_10060E0 +
mov dword ptr [esi+4] offset off_1003D8C +
cmp eax ebx +
jz loc_1022899  +
push eax  +
call edi  +
mov [esi+58h] ebx +
mov eax [esi+5Ch] +
cmp eax ebx +
jz loc_10228A6  +
push eax  +
call edi  +
mov [esi+5Ch] ebx +
mov eax [esi+60h] +
cmp eax ebx +
jz loc_10228B3  +
push eax  +
call edi  +
mov [esi+60h] ebx +
mov eax [esi+64h] +
cmp eax ebx +
jz loc_10228C0  +
push eax  +
call edi  +
mov [esi+64h] ebx +
mov ecx [esi+68h] +
cmp ecx ebx +
jz loc_10228D1  +
push 1  +
call sub_10216A4  +
mov [esi+68h] ebx +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_101EB47  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
test edx edx +
jz loc_1022965  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1022965  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1022906  +
and dword ptr [eax] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov [ebp+arg_4] edx +
jnz loc_1022944  +
push edx  +
call sub_101E581  +
mov edi eax +
inc edi  +
inc edi  +
push edi  +
call ds:__imp_malloc  +
mov ebx eax +
pop ecx  +
mov [ebp+arg_4] ebx +
test ebx ebx +
jz loc_1022965  +
push edi  +
push [ebp+arg_0]  +
push edi  +
push ebx  +
call sub_101E438  +
add esp 10h +
shr edi 1 +
push edi  +
push ebx  +
call sub_101E52B  +
mov ecx [ebp+var_4] +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+18h]  +
mov ecx esi +
call sub_1020350  +
test eax eax +
mov eax [ebp+arg_4] +
jnz loc_102296E  +
***
cmp eax [ebp+8] +
jz loc_1022965  +
push eax  +
call ds:free  +
pop ecx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov ebx [ebp+arg_4] +
xor edi edi +
mov [ebp+var_8] eax +
***
call sub_10227C1  +
jmp loc_1022E51  +
mov ecx esi +
call sub_10203D0  +
mov ebx eax +
jmp loc_1022E51  +
lea eax [edi+1] +
push eax  +
mov ecx esi +
call sub_10227C1  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
mov edi [eax+4] +
jmp loc_1022976  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-0Ch] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-0Ch] +
push dword ptr [ecx+eax*4]  +
jmp loc_1022A04  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-10h] eax +
call sub_10204B1  +
mov ecx esi +
mov [ebp-0Ch] eax +
call sub_10203D0  +
mov ecx [ebp-0Ch] +
mov ecx [ecx+4] +
mov edx [ebp-10h] +
mov [edx+ecx*4] eax +
jmp loc_1022E51  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-10h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-10h] +
mov [ecx+eax*4] ebx +
jmp loc_1022E51  +
mov ecx [ebp-4] +
mov ebx [esi+0Ch] +
push edi  +
add ecx 4 +
call sub_10204B1  +
mov eax [eax+4] +
mov ebx [ebx+eax*4] +
jmp loc_1022E51  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-10h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [esi+24h] +
mov edx [ebp-10h] +
mov [edx+eax*4] ecx +
jmp loc_1022E51  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-10h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-10h] +
mov eax [ecx+eax*4] +
mov [esi+24h] eax +
jmp loc_1022E51  +
mov eax [esi+0Ch] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-10h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-10h] +
cmp ebx [ecx+eax*4] +
jnz loc_1022E51  +
mov ecx esi +
call sub_10203D0  +
mov edi eax +
jmp loc_1022976  +
mov ebx [ebp-8] +
add ebx 2 +
xor edi edi +
mov [ebp-8] ebx +
cmp [ebx] di +
jz loc_1022E57  +
mov [esi+24h] edi +
jmp loc_1022976  +
cmp word ptr [ebx] 0 +
jz loc_1022B28  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
movzx edx word ptr [ebx] +
add eax 8 +
mov [ebp-10h] eax +
xor eax eax +
mov ecx edx +
and ecx 7 +
inc eax  +
shl eax cl +
mov ecx [ebp-10h] +
shr edx 3 +
movzx ecx word ptr [ecx+edx*2] +
test eax ecx +
jz loc_1022B28  +
jmp loc_1022BBE  +
cmp word ptr [ebx] 0 +
jz loc_1022B28  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
movzx edx word ptr [ebx] +
add eax 8 +
mov [ebp-10h] eax +
xor eax eax +
mov ecx edx +
and ecx 7 +
inc eax  +
shl eax cl +
mov ecx [ebp-10h] +
shr edx 3 +
movzx ecx word ptr [ecx+edx*2] +
test eax ecx +
jnz loc_1022B28  +
add edi 5 +
inc ebx  +
inc ebx  +
jmp loc_1022976  +
cmp word ptr [ebx] 0 +
jz loc_1022B28  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
mov eax [eax+4] +
inc edi  +
mov [ebp-0Ch] eax +
cmp edi eax +
jnb loc_1022B28  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
movzx ecx word ptr [ebx] +
cmp ecx [eax+4] +
jb loc_1022C18  +
mov ecx [ebp-4] +
lea eax [edi+1] +
push eax  +
add ecx 4 +
call sub_10204B1  +
movzx ecx word ptr [ebx] +
cmp ecx [eax+4] +
jbe loc_1022C24  +
inc edi  +
inc edi  +
cmp edi [ebp-0Ch] +
jb loc_1022BED  +
jmp loc_1022B28  +
mov edi [ebp-0Ch] +
inc ebx  +
inc ebx  +
jmp loc_1022976  +
cmp word ptr [ebx] 0 +
jz loc_1022B28  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
mov eax [eax+4] +
inc edi  +
mov [ebp-10h] eax +
cmp edi eax +
jnb loc_1022BC1  +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
call sub_10204B1  +
movzx ecx word ptr [ebx] +
cmp ecx [eax+4] +
jb loc_1022C82  +
mov ecx [ebp-4] +
lea eax [edi+1] +
push eax  +
add ecx 4 +
call sub_10204B1  +
movzx ecx word ptr [ebx] +
cmp ecx [eax+4] +
jbe loc_1022B28  +
inc edi  +
inc edi  +
cmp edi [ebp-10h] +
jb loc_1022C53  +
jmp loc_1022BC1  +
mov eax [ebp-4] +
cmp dword ptr [eax+1Ch] 0 +
mov ecx [esi+10h] +
push edi  +
jz loc_1022D03  +
mov [ebp-14h] ecx +
lea ecx [eax+4] +
call sub_10204B1  +
mov ecx [ebp-4] +
mov [ebp-0Ch] eax +
mov eax [esi+10h] +
push edi  +
add ecx 4 +
mov [ebp-18h] eax +
call sub_10204B1  +
mov ecx [ebp-4] +
mov [ebp-10h] eax +
mov eax [esi+10h] +
push edi  +
add ecx 4 +
mov [ebp-20h] eax +
call sub_10204B1  +
mov ecx [ebp-0Ch] +
mov ecx [ecx+4] +
mov edx [ebp-14h] +
mov ecx [edx+ecx*8+4] +
mov edx [ebp-18h] +
mov [ebp-1Ch] eax +
mov eax [ebp-10h] +
mov eax [eax+4] +
sub ecx [edx+eax*8] +
mov eax [ebp-1Ch] +
mov eax [eax+4] +
sar ecx 1 +
push ecx  +
mov ecx [ebp-20h] +
push dword ptr [ecx+eax*8]  +
push ebx  +
call sub_101E4EB  +
jmp loc_1022D69  +
mov [ebp-18h] ecx +
lea ecx [eax+4] +
call sub_10204B1  +
mov ecx [ebp-4] +
mov [ebp-1Ch] eax +
mov eax [esi+10h] +
push edi  +
add ecx 4 +
mov [ebp-14h] eax +
call sub_10204B1  +
mov ecx [ebp-4] +
mov [ebp-20h] eax +
mov eax [esi+10h] +
push edi  +
add ecx 4 +
mov [ebp-0Ch] eax +
call sub_10204B1  +
mov ecx [ebp-1Ch] +
mov ecx [ecx+4] +
mov edx [ebp-18h] +
mov ecx [edx+ecx*8+4] +
mov edx [ebp-14h] +
mov [ebp-10h] eax +
mov eax [ebp-20h] +
mov eax [eax+4] +
sub ecx [edx+eax*8] +
mov eax [ebp-10h] +
mov eax [eax+4] +
sar ecx 1 +
push ecx  +
mov ecx [ebp-0Ch] +
push dword ptr [ecx+eax*8]  +
push ebx  +
call sub_101E50B  +
neg eax  +
sbb eax eax +
inc eax  +
test eax eax +
jz loc_1022B28  +
mov eax [esi+10h] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-1Ch] eax +
call sub_10204B1  +
mov ecx [ebp-4] +
mov [ebp-20h] eax +
mov eax [esi+10h] +
push edi  +
add ecx 4 +
mov [ebp-18h] eax +
call sub_10204B1  +
mov ecx [ebp-20h] +
mov ecx [ecx+4] +
mov edx [ebp-1Ch] +
mov ecx [edx+ecx*8+4] +
mov eax [eax+4] +
mov edx [ebp-18h] +
sub ecx [edx+eax*8] +
sar ecx 1 +
lea ebx [ebx+ecx*2] +
jmp loc_1022E51  +
mov eax [esi+10h] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-20h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-20h] +
push dword ptr [ecx+eax*8]  +
mov ecx esi +
call sub_10227C1  +
mov eax [esi+10h] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-20h] eax +
call sub_10204B1  +
mov eax [eax+4] +
mov ecx [ebp-20h] +
push dword ptr [ecx+eax*8+4]  +
jmp loc_1022A04  +
mov eax [esi+10h] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-1Ch] eax +
call sub_10204B1  +
mov ecx esi +
mov [ebp-20h] eax +
call sub_10203D0  +
mov ecx [ebp-20h] +
mov ecx [ecx+4] +
mov edx [ebp-1Ch] +
mov [edx+ecx*8+4] eax +
mov eax [esi+10h] +
mov ecx [ebp-4] +
push edi  +
add ecx 4 +
mov [ebp-1Ch] eax +
call sub_10204B1  +
mov ecx esi +
mov [ebp-20h] eax +
call sub_10203D0  +
mov ecx [ebp-20h] +
mov ecx [ecx+4] +
mov edx [ebp-1Ch] +
mov [edx+ecx*8] eax +
inc edi  +
jmp loc_1022976  +
***
mov ecx [ebp-4] +
mov [esi+8] ebx +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_1022E6F  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push esi  +
call sub_10202D3  +
mov eax [ebp+10h] +
test eax eax +
jz loc_1022E83  +
sub ebx [ebp+0Ch] +
mov ecx [ebp+8] +
sar ebx 1 +
lea ecx [ecx+ebx*2] +
mov [eax] ecx +
mov eax [ebp+0Ch] +
jmp loc_1022958  +
mov ecx [ebp-4] +
mov [esi+8] ebx +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_1022EA3  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push esi  +
call sub_10202D3  +
mov eax [ebp+10h] +
test eax eax +
jz loc_1022EB7  +
sub ebx [ebp+0Ch] +
mov ecx [ebp+8] +
sar ebx 1 +
lea ecx [ecx+ebx*2] +
mov [eax] ecx +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jz loc_1022EC7  +
push eax  +
call ds:free  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_1022967  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi ecx +
mov [ebp+var_8] eax +
mov eax [esi+8] +
mov [ebp+var_1C] eax +
mov eax [esi+14h] +
mov [ebp+var_18] eax +
mov eax [esi+18h] +
push 0Eh  +
mov [ebp+var_14] eax +
call sub_1022778  +
mov ebx eax +
mov [ebp+var_10] ebx +
test ebx ebx +
jge loc_1022F98  +
or eax 0FFFFFFFFh +
jmp loc_1023081  +
push 10h  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_1022F90  +
lea ecx [esi+4] +
push eax  +
add ebx 4 +
call sub_10204B1  +
push 0Fh  +
mov ecx esi +
mov [eax+4] ebx +
call sub_1022778  +
test eax eax +
jl loc_1022F90  +
push 0Dh  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1022F90  +
push [ebp+arg_4]  +
mov ecx esi +
push edi  +
call sub_10240B2  +
mov ebx eax +
test ebx ebx +
jge loc_1022FF7  +
cmp dword ptr [esi] 0 +
jnz loc_1022F90  +
push esi  +
lea ecx [ebp+var_1C] +
call sub_102280B  +
mov eax ebx +
jmp loc_1023081  +
push 0Dh  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_1022F90  +
push [ebp+var_4]  +
lea ecx [esi+4] +
lea ebx [eax+1] +
call sub_10204B1  +
push 7Ch  +
push edi  +
mov ecx esi +
mov [eax+4] ebx +
call sub_10203F3  +
test eax eax +
jnz loc_1023041  +
push esi  +
lea ecx [ebp+var_1C] +
call sub_102280B  +
push [ebp+arg_4]  +
mov eax [ebp+var_8] +
push edi  +
mov ecx esi +
mov [edi] eax +
call sub_10240B2  +
jmp loc_1023081  +
lea eax [ebp+arg_0+3] +
push eax  +
push edi  +
mov ecx esi +
call sub_1022F59  +
push [ebp+var_C]  +
mov edi [esi+8] +
lea ecx [esi+4] +
mov ebx eax +
call sub_10204B1  +
push [ebp+var_4]  +
lea ecx [esi+4] +
mov [eax+4] edi +
call sub_10204B1  +
mov [eax+4] ebx +
test ebx ebx +
jl loc_1022FE2  +
mov eax [ebp+arg_4] +
mov cl byte ptr [ebp+arg_0+3] +
or [eax] cl +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
push 16h  +
mov edi ecx +
call sub_102283A  +
push 17h  +
mov ecx edi +
mov [ebp+var_4] eax +
call sub_102283A  +
push 10h  +
mov ecx edi +
mov [ebp+var_8] eax +
call sub_1022778  +
mov [ebp+var_10] eax +
test eax eax +
jge loc_10230C6  +
or eax 0FFFFFFFFh +
jmp loc_10231DE  +
push 18h  +
mov ecx edi +
call sub_1022778  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_10230BE  +
push ebx  +
push esi  +
push [ebp+var_4]  +
lea esi [edi+4] +
mov ecx esi +
call sub_10204B1  +
push [ebp+var_C]  +
mov ecx esi +
mov ebx eax +
call sub_10204B1  +
mov ecx [ebx+4] +
mov [eax+4] ecx +
push 19h  +
mov ecx edi +
call sub_1022778  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_10231C4  +
push [ebp+var_8]  +
mov ecx esi +
call sub_10204B1  +
push [ebp+var_C]  +
mov ecx esi +
mov ebx eax +
call sub_10204B1  +
mov ecx [ebx+4] +
mov [eax+4] ecx +
push 0Dh  +
mov ecx edi +
call sub_1022778  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_10231C4  +
push [ebp+arg_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_10239E8  +
mov ebx eax +
test ebx ebx +
jl loc_10231DC  +
push [ebp+var_10]  +
mov ecx esi +
call sub_10204B1  +
push 18h  +
mov ecx edi +
mov [eax+4] ebx +
call sub_1022778  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_10231C4  +
push [ebp+var_4]  +
mov ecx esi +
call sub_10204B1  +
push [ebp+arg_4]  +
mov ecx esi +
mov ebx eax +
call sub_10204B1  +
mov ecx [ebx+4] +
mov [eax+4] ecx +
push 19h  +
mov ecx edi +
call sub_1022778  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_10231C4  +
push [ebp+var_8]  +
mov ecx esi +
call sub_10204B1  +
push [ebp+arg_4]  +
mov ecx esi +
mov ebx eax +
call sub_10204B1  +
mov ecx [ebx+4] +
mov [eax+4] ecx +
push 11h  +
mov ecx edi +
call sub_1022778  +
test eax eax +
jge loc_10231C9  +
or eax 0FFFFFFFFh +
jmp loc_10231DC  +
push [ebp+var_C]  +
mov ecx esi +
lea edi [eax+1] +
call sub_10204B1  +
mov [eax+4] edi +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
cmp [ebp+arg_4] eax +
push esi  +
setnz al  +
mov esi ecx +
add eax 7 +
push eax  +
call sub_1022778  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_1023213  +
or eax 0FFFFFFFFh +
jmp loc_102329B  +
push ebx  +
push edi  +
jmp loc_1023278  +
cmp ax 5Dh +
jz loc_1023285  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push ecx  +
mov ecx esi +
call sub_102041A  +
test eax eax +
jnz loc_10232A0  +
push eax  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_10232A0  +
push 0  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_10] eax +
test eax eax +
jl loc_10232A0  +
movzx eax word ptr [ebp+arg_4] +
lea edi [esi+4] +
push ebx  +
mov ecx edi +
mov [ebp+var_C] eax +
call sub_10204B1  +
mov ecx [ebp+var_C] +
push [ebp+var_10]  +
movzx ebx word ptr [ebp+var_4] +
mov [eax+4] ecx +
mov ecx edi +
call sub_10204B1  +
mov [eax+4] ebx +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
movzx eax word ptr [eax] +
test ax ax +
jnz loc_1023217  +
push [ebp+var_8]  +
mov edi [esi+8] +
lea ecx [esi+4] +
call sub_10204B1  +
mov [eax+4] edi +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_1023299  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov edi offset aEdit +
mov [ebp-10h] ebx +
mov [ebp-14h] edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100CE71  +
mov ecx esi +
mov [ebp-4] ebx +
call sub_10213D4  +
cmp [esi+6Ch] ebx +
jnz loc_102332A  +
cmp [esi+74h] ebx +
jnz loc_102332A  +
cmp [esi+70h] ebx +
jnz loc_102332A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_102332A  +
push offset aBrowse  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_102332A  +
push eax  +
push 576h  +
push offset aEditpageOnseta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1023454  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_102336F  +
cmp [esi+6Ch] ebx +
jz loc_102336F  +
mov ebx offset aFileedit +
push edi  +
mov ecx esi +
mov [ebp-14h] ebx +
call sub_100CAA7  +
test eax eax +
jge loc_1023359  +
push eax  +
push 57Dh  +
jmp loc_1023311  +
push 1  +
push ebx  +
mov ecx esi +
call sub_100CB06  +
test eax eax +
jge loc_10233B1  +
push eax  +
push 580h  +
jmp loc_1023311  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_10233B3  +
push offset aFileedit  +
mov ecx esi +
call sub_100CAA7  +
cmp eax ebx +
jge loc_1023398  +
push eax  +
push 583h  +
jmp loc_1023311  +
push 1  +
push edi  +
mov ecx esi +
call sub_100CB06  +
cmp eax ebx +
jge loc_10233B3  +
push eax  +
push 586h  +
jmp loc_1023311  +
xor ebx ebx +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_100D26C  +
cmp eax ebx +
jge loc_10233D0  +
push eax  +
push 58Ah  +
jmp loc_1023311  +
mov eax [esi+68h] +
cmp eax ebx +
jz loc_102341E  +
push 100h  +
lea ecx [ebp-44h] +
call sub_10226FC  +
mov eax [esi+5Ch] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jnz loc_10233F4  +
mov eax offset word_1001F48 +
mov ecx [esi+68h] +
push ebx  +
lea edx [ebp-44h] +
push edx  +
push eax  +
call sub_10228E0  +
test eax eax +
jnz loc_1023416  +
push 2  +
push ebx  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
lea ecx [ebp-44h] +
call sub_10207E4  +
mov edi ds:SendMessageW +
push 0FFFFFFFFh  +
push ebx  +
push 0B1h  +
push dword ptr [ebp-10h]  +
call edi  +
mov esi [esi+5Ch] +
cmp esi ebx +
jnz loc_102343D  +
mov esi offset word_1001F48 +
push esi  +
push ebx  +
push 0C2h  +
push dword ptr [ebp-10h]  +
call edi  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
call ds:ShowScrollBar  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [esi] +
or ebx 0FFFFFFFFh +
call dword ptr [eax+84h]  +
xor edi edi +
test eax eax +
jz loc_1023496  +
mov eax offset aFileedit +
cmp [esi+6Ch] edi +
jnz loc_102349B  +
mov eax offset aEdit +
mov [ebp-10h] edi +
cmp [esi+68h] edi +
jz loc_102354E  +
push eax  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
cmp eax edi +
jnz loc_10234E5  +
push 8000FFFFh  +
push 5C4h  +
push offset aEditpageOnwizn  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1023557  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx eax +
call ds:?GetContentString@Element@DirectUI@@QAEPBGPAPAVValue@2@@Z  +
mov ecx [ebp-10h] +
call ds:?GetString@Value@DirectUI@@QAEPBGXZ  +
mov ebx eax +
cmp ebx edi +
jz loc_102354E  +
push 100h  +
lea ecx [ebp-38h] +
call sub_10226FC  +
mov ecx [esi+68h] +
push edi  +
lea eax [ebp-38h] +
push eax  +
push ebx  +
mov [ebp-4] edi +
call sub_10228E0  +
test eax eax +
jnz loc_1023542  +
push 2  +
push edi  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
or ebx 0FFFFFFFFh +
lea ecx [ebp-38h] +
mov [ebp-4] ebx +
call sub_10207E4  +
jmp loc_1023557  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-38h] +
call sub_10207E4  +
mov ecx esi +
call sub_101DC9C  +
mov ebx eax +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_1023564  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
mov eax ebx +
call __EH_epilog3  +
retn   +
***
push 2Ch  +
mov eax offset byte_1048D87 +
call __EH_prolog3  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp-10h] ebx +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_102359A  +
mov eax offset aFileedit +
cmp [esi+6Ch] ebx +
jnz loc_102359F  +
mov eax offset aEdit +
cmp [esi+68h] ebx +
jz loc_102362A  +
push eax  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov ecx [ebp+0Ch] +
cmp [ecx] eax +
jnz loc_102362A  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx eax +
call ds:?GetContentString@Element@DirectUI@@QAEPBGPAPAVValue@2@@Z  +
mov ecx [ebp-10h] +
call ds:?GetString@Value@DirectUI@@QAEPBGXZ  +
mov edi eax +
cmp edi ebx +
jz loc_102361A  +
push 100h  +
lea ecx [ebp-38h] +
call sub_10226FC  +
mov ecx [esi+68h] +
push ebx  +
lea eax [ebp-38h] +
push eax  +
push edi  +
mov [ebp-4] ebx +
call sub_10228E0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-38h] +
mov edi eax +
call sub_10207E4  +
cmp edi ebx +
jz loc_102361A  +
push 2  +
push 2  +
jmp loc_102361D  +
push 2  +
push ebx  +
push 48Bh  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_1023637  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
cmp word ptr [eax] 0 +
mov esi ecx +
jnz loc_102365D  +
or eax 0FFFFFFFFh +
jmp loc_102369C  +
push ebx  +
mov ebx [ebp+arg_4] +
push ebx  +
push edi  +
call sub_1022F59  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_102369B  +
lea eax [ebp+arg_0+3] +
push eax  +
push edi  +
mov ecx esi +
mov byte ptr [ebp+arg_0+3] 1 +
call sub_1023644  +
xor eax eax +
cmp [esi] eax +
jz loc_102368A  +
or eax 0FFFFFFFFh +
jmp loc_102369B  +
cmp [ebx] al +
jz loc_1023696  +
cmp byte ptr [ebp+arg_0+3] al +
jz loc_1023696  +
xor eax eax +
inc eax  +
mov [ebx] al +
mov eax [ebp+arg_4] +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push 1Fh  +
mov esi ecx +
call sub_1022778  +
mov edi eax +
mov [ebp+var_10] edi +
test edi edi +
jge loc_10236CB  +
or eax 0FFFFFFFFh +
jmp loc_10237DA  +
push ebx  +
lea ebx [esi+4] +
push edi  +
mov ecx ebx +
call sub_10204B1  +
mov ecx [esi+14h] +
mov [eax+4] ecx +
push 1  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_10237B7  +
push eax  +
mov ecx ebx +
call sub_10204B1  +
mov ecx [esi+14h] +
mov [eax+4] ecx +
inc dword ptr [esi+14h]  +
push 10h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_8] eax +
test eax eax +
jl loc_10237B7  +
push 20h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10237B7  +
push edi  +
mov ecx ebx +
call sub_10204B1  +
push [ebp+var_4]  +
mov ecx ebx +
mov edi eax +
call sub_10204B1  +
mov ecx [edi+4] +
mov [eax+4] ecx +
push 11h  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_10237B7  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_1023644  +
mov edi eax +
test edi edi +
jge loc_1023783  +
cmp dword ptr [esi] 0 +
jnz loc_10237B7  +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp word ptr [eax] 7Dh +
jnz loc_10237A0  +
push 0  +
mov ecx esi +
call sub_1022778  +
mov edi eax +
test edi edi +
jl loc_10237B7  +
push [ebp+var_8]  +
mov ecx ebx +
call sub_10204B1  +
push 7Dh  +
push [ebp+arg_0]  +
mov ecx esi +
mov [eax+4] edi +
call sub_10203F3  +
test eax eax +
jnz loc_10237A8  +
mov dword ptr [esi] 2 +
jmp loc_10237B7  +
push 2  +
mov ecx esi +
call sub_1022778  +
mov edi eax +
test edi edi +
jge loc_10237BC  +
or eax 0FFFFFFFFh +
jmp loc_10237D9  +
push [ebp+var_C]  +
mov ecx ebx +
call sub_10204B1  +
push edi  +
mov ecx ebx +
mov esi eax +
call sub_10204B1  +
mov ecx [esi+4] +
mov [eax+4] ecx +
mov eax [ebp+var_10] +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 10h  +
mov esi ecx +
call sub_1022778  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1023801  +
or eax 0FFFFFFFFh +
jmp loc_102386C  +
push 11h  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_10237FC  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push [ebp+arg_4]  +
mov ecx esi +
push ebx  +
call sub_1023644  +
mov edi eax +
test edi edi +
jge loc_1023840  +
cmp dword ptr [esi] 0 +
jnz loc_1023862  +
mov eax [ebx] +
cmp word ptr [eax] 29h +
jnz loc_102385C  +
push 0  +
mov ecx esi +
call sub_1022778  +
mov edi eax +
test edi edi +
jl loc_1023862  +
push [ebp+var_4]  +
lea ecx [esi+4] +
call sub_10204B1  +
push 29h  +
push ebx  +
mov ecx esi +
mov [eax+4] edi +
call sub_10203F3  +
test eax eax +
jnz loc_1023867  +
mov dword ptr [esi] 3 +
or eax 0FFFFFFFFh +
jmp loc_102386A  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 5Dh  +
push edi  +
mov esi ecx +
mov byte ptr [eax] 0 +
call sub_10203F3  +
test eax eax +
jz loc_102389F  +
mov dword ptr [esi] 6 +
or eax 0FFFFFFFFh +
jmp loc_10238F2  +
push ebx  +
push 5Eh  +
push edi  +
mov ecx esi +
xor ebx ebx +
call sub_10203F3  +
test eax eax +
jz loc_10238B1  +
inc ebx  +
push 5Dh  +
push edi  +
mov ecx esi +
call sub_10203F3  +
test eax eax +
jz loc_10238C7  +
mov dword ptr [esi] 6 +
jmp loc_10238EA  +
push ebx  +
push edi  +
mov ecx esi +
call sub_10231E8  +
mov ebx eax +
test ebx ebx +
jl loc_10238EF  +
push 5Dh  +
push edi  +
mov ecx esi +
call sub_10203F3  +
test eax eax +
jnz loc_10238EF  +
mov dword ptr [esi] 4 +
or eax 0FFFFFFFFh +
jmp loc_10238F1  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_1023917  +
push 0Ah  +
pop eax  +
jmp loc_10239DD  +
push esi  +
call sub_102274E  +
mov eax [ebp+arg_4] +
mov [edi+1Ch] eax +
test eax eax +
jnz loc_102395A  +
push ebx  +
call sub_101E581  +
mov esi eax +
inc esi  +
inc esi  +
push esi  +
call ds:__imp_malloc  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_10239C8  +
push esi  +
push [ebp+arg_0]  +
push esi  +
push ebx  +
call sub_101E438  +
add esp 10h +
shr esi 1 +
push esi  +
push ebx  +
call sub_101E52B  +
push 10h  +
mov ecx edi +
mov [ebp+var_8] ebx +
call sub_1022778  +
mov esi eax +
test esi esi +
jl loc_10239C8  +
mov eax [ebp+var_8] +
cmp word ptr [eax] 5Eh +
mov ecx edi +
jnz loc_1023988  +
push 1Ch  +
call sub_1022778  +
test eax eax +
jl loc_10239C8  +
add [ebp+var_8] 2 +
jmp loc_1023993  +
push 1Dh  +
call sub_1022778  +
test eax eax +
jl loc_10239C8  +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
mov ecx edi +
mov [ebp+var_1] 1 +
call sub_1023644  +
cmp dword ptr [edi] 0 +
jnz loc_10239CD  +
push esi  +
lea ecx [edi+4] +
call sub_10204B1  +
push 1Eh  +
mov ecx edi +
mov dword ptr [eax+4] 2 +
call sub_1022778  +
test eax eax +
jge loc_10239CD  +
xor eax eax +
inc eax  +
jmp loc_10239DC  +
cmp ebx [ebp+arg_0] +
jz loc_10239DA  +
push ebx  +
call ds:free  +
pop ecx  +
mov eax [edi] +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 7Bh  +
push edi  +
mov esi ecx +
call sub_10203F3  +
mov ecx esi +
test eax eax +
jz loc_1023A10  +
push [ebp+arg_4]  +
push edi  +
call sub_10236A7  +
jmp loc_1023ACF  +
push 28h  +
push edi  +
call sub_10203F3  +
mov ecx esi +
test eax eax +
jz loc_1023A2C  +
push [ebp+arg_4]  +
push edi  +
call sub_10237E5  +
jmp loc_1023ACF  +
push 5Bh  +
push edi  +
call sub_10203F3  +
mov ecx esi +
test eax eax +
jz loc_1023A48  +
push [ebp+arg_4]  +
push edi  +
call sub_1023876  +
jmp loc_1023ACF  +
push ebx  +
push 5Ch  +
push edi  +
call sub_10203F3  +
test eax eax +
jz loc_1023AE6  +
mov eax [edi] +
movzx eax word ptr [eax] +
push eax  +
call sub_101E569  +
mov ecx esi +
test eax eax +
jnz loc_1023AA1  +
push [ebp+arg_4]  +
push edi  +
call sub_102442B  +
test eax eax +
jge loc_1023ACE  +
cmp dword ptr [esi] 0 +
jnz loc_1023ACB  +
push 3  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_1023ACB  +
push ebx  +
lea ecx [esi+4] +
call sub_10204B1  +
mov ecx [edi] +
movzx ecx word ptr [ecx] +
mov [eax+4] ecx +
jmp loc_1023B8D  +
mov eax [ebp+arg_4] +
push 1Bh  +
mov byte ptr [eax] 0 +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_1023ACB  +
push 0Ah  +
push edi  +
push dword ptr [edi]  +
call sub_101E549  +
mov edi eax +
cmp edi [esi+14h] +
jb loc_1023AD5  +
mov dword ptr [esi] 7 +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
push ebx  +
lea ecx [esi+4] +
call sub_10204B1  +
mov [eax+4] edi +
jmp loc_1023B90  +
push 21h  +
push edi  +
mov ecx esi +
call sub_10203F3  +
test eax eax +
jz loc_1023B01  +
push [ebp+arg_4]  +
mov ecx esi +
push edi  +
call sub_102308D  +
jmp loc_1023ACE  +
mov eax [edi] +
movzx ecx word ptr [eax] +
cmp cx 7Dh +
jz loc_1023ACB  +
cmp cx 5Dh +
jz loc_1023ACB  +
cmp cx 29h +
jz loc_1023ACB  +
test cx cx +
jz loc_1023ACB  +
cmp cx 2Eh +
jnz loc_1023B34  +
push 4  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_1023ACB  +
jmp loc_1023B87  +
cmp cx 24h +
jnz loc_1023B63  +
cmp word ptr [eax+2] 0 +
jnz loc_1023B63  +
push 3  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_1023ACB  +
push ebx  +
lea ecx [esi+4] +
call sub_10204B1  +
and dword ptr [eax+4] 0 +
jmp loc_1023B87  +
push 3  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_1023ACB  +
push ebx  +
lea ecx [esi+4] +
call sub_10204B1  +
mov ecx [edi] +
movzx ecx word ptr [ecx] +
mov [eax+4] ecx +
mov eax [ebp+arg_4] +
mov byte ptr [eax] 0 +
add dword ptr [edi] 2 +
mov eax ebx +
jmp loc_1023ACE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp-34h] +
mov edi ecx +
push eax  +
mov [ebp-20h] edi +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-0Ch] ebx +
mov [ebp-8] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-24h] ebx +
call ds:VariantInit  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_101EC1C  +
mov esi eax +
cmp esi ebx +
jge loc_1023BEB  +
push esi  +
push 4A1h  +
jmp loc_1023FBD  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1014ABA  +
mov esi eax +
cmp esi ebx +
jge loc_1023C08  +
push esi  +
push 4A4h  +
jmp loc_1023FBD  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp-14h]  +
push ebx  +
push offset a_Regularexpres  +
call sub_1014B70  +
mov esi eax +
cmp esi ebx +
jge loc_1023C2B  +
push esi  +
push 4A7h  +
jmp loc_1023FBD  +
mov eax [ebp-4] +
mov ecx [eax] +
add edi 58h +
push edi  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi ebx +
jge loc_1023C49  +
push esi  +
push 4AAh  +
jmp loc_1023FBD  +
push offset word_1001F48  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023C6B  +
mov eax [edi] +
cmp eax ebx +
jz loc_1023C6B  +
push eax  +
call ds:SysFreeString  +
mov [edi] ebx +
cmp [edi] ebx +
jz loc_1023CC1  +
push 20h  +
call sub_10361AF  +
pop ecx  +
cmp eax ebx +
jz loc_1023C84  +
mov ecx eax +
call sub_10212CF  +
jmp loc_1023C86  +
xor eax eax +
mov ecx [ebp-20h] +
mov [ecx+68h] eax +
cmp eax ebx +
jnz loc_1023CA2  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 4B3h  +
jmp loc_1023FBD  +
push 1  +
push dword ptr [edi]  +
mov ecx eax +
call sub_10238FD  +
test eax eax +
jz loc_1023CC1  +
mov esi 80004005h +
push esi  +
push 4B7h  +
jmp loc_1023FBD  +
mov eax [ebp-4] +
cmp eax ebx +
jz loc_1023CD1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-4] ebx +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push offset a_Extensionp_17  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jge loc_1023CF7  +
push esi  +
push 4C1h  +
jmp loc_1023FBD  +
mov ebx ds:SysAllocString +
test esi esi +
jnz loc_1023D92  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jge loc_1023D23  +
push esi  +
push 4C5h  +
jmp loc_1023FBD  +
mov edi [ebp-20h] +
add edi 5Ch +
push edi  +
push dword ptr [ebp-1Ch]  +
call sub_1030712  +
mov esi eax +
test esi esi +
jge loc_1023D43  +
push esi  +
push 4C8h  +
jmp loc_1023FBD  +
mov eax [ebp-20h] +
push dword ptr [eax+4Ch]  +
lea eax [ebp-24h] +
push dword ptr [edi]  +
push eax  +
call sub_1033AEB  +
mov esi eax +
test esi esi +
jge loc_1023D65  +
push esi  +
push 4CEh  +
jmp loc_1023FBD  +
mov eax [edi] +
test eax eax +
jz loc_1023D75  +
push eax  +
call ds:SysFreeString  +
and dword ptr [edi] 0 +
push dword ptr [ebp-24h]  +
call ebx  +
mov [edi] eax +
test eax eax +
jnz loc_1023D92  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 4D2h  +
jmp loc_1023FBD  +
mov eax [ebp-4] +
test eax eax +
jz loc_1023DA3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-4] 0 +
mov edi [ebp-20h] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+84h]  +
test eax eax +
jz loc_1024012  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push offset a_Extensionp_19  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jge loc_1023DDE  +
push esi  +
push 4DBh  +
jmp loc_1023FBD  +
jnz loc_1024012  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
test esi esi +
jge loc_1023E02  +
push esi  +
push 4E2h  +
jmp loc_1023FBD  +
push offset aComputer  +
push dword ptr [ebp-0Ch]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023E22  +
mov dword ptr [edi+70h] 1 +
jmp loc_1024012  +
push offset aFile  +
push dword ptr [ebp-0Ch]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023FF7  +
mov eax [ebp-18h] +
lea edx [ebp-10h] +
push edx  +
push offset dword_1009454  +
mov dword ptr [edi+6Ch] 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_1023E63  +
push esi  +
push 4ECh  +
jmp loc_1023FBD  +
push offset aFiltertext  +
call ebx  +
mov [ebp-8] eax +
test eax eax +
jnz loc_1023E83  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 4EFh  +
jmp loc_1023FBD  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push dword ptr [ebp-8]  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov esi eax +
test esi esi +
jge loc_1023EA7  +
push esi  +
push 4F2h  +
jmp loc_1023FBD  +
cmp dword ptr [ebp-2Ch] 0 +
jz loc_1023EE0  +
mov eax [ebp-2Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023EB3  +
sub eax edx +
sar eax 1 +
jz loc_1023EE0  +
lea eax [edi+64h] +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_1030712  +
mov esi eax +
test esi esi +
jge loc_1023EE0  +
push esi  +
push 4FBh  +
jmp loc_1023FBD  +
lea eax [ebp-34h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-8]  +
call ds:SysFreeString  +
push offset aFilterextensio  +
call ebx  +
mov [ebp-8] eax +
test eax eax +
jnz loc_1023F13  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 502h  +
jmp loc_1023FBD  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push dword ptr [ebp-8]  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov esi eax +
test esi esi +
jge loc_1023F37  +
push esi  +
push 505h  +
jmp loc_1023FBD  +
cmp dword ptr [ebp-2Ch] 0 +
jz loc_1023F6E  +
mov eax [ebp-2Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023F43  +
sub eax edx +
sar eax 1 +
jz loc_1023F6E  +
push dword ptr [ebp-2Ch]  +
call ebx  +
mov [edi+60h] eax +
test eax eax +
jnz loc_1023F6E  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 50Ch  +
jmp loc_1023FBD  +
lea eax [ebp-34h] +
push eax  +
call ds:VariantClear  +
push dword ptr [ebp-8]  +
call ds:SysFreeString  +
push offset aFilemustexist  +
call ebx  +
mov [ebp-8] eax +
test eax eax +
jnz loc_1023F9E  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 516h  +
jmp loc_1023FBD  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
push dword ptr [ebp-8]  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov esi eax +
test esi esi +
jge loc_1023FD3  +
push esi  +
push 519h  +
push offset aEditpageInitia  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1024012  +
cmp dword ptr [ebp-2Ch] 0 +
jz loc_1023FF0  +
push offset aTrue_0  +
push dword ptr [ebp-2Ch]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023FF0  +
inc eax  +
jmp loc_1023FF2  +
xor eax eax +
mov [edi+78h] eax +
jmp loc_1024012  +
push offset aFolder  +
push dword ptr [ebp-0Ch]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1024012  +
mov dword ptr [edi+74h] 1 +
lea eax [ebp-34h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-4] +
xor edi edi +
cmp eax edi +
jz loc_102402E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-4] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_102403E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
mov eax [ebp-10h] +
cmp eax edi +
jz loc_102404E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10h] edi +
mov eax [ebp-14h] +
cmp eax edi +
jz loc_102405E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] edi +
cmp [ebp-0Ch] edi +
jz loc_102406F  +
push dword ptr [ebp-0Ch]  +
call ds:SysFreeString  +
mov [ebp-0Ch] edi +
cmp [ebp-8] edi +
jz loc_102407D  +
push dword ptr [ebp-8]  +
call ds:SysFreeString  +
cmp [ebp-1Ch] edi +
jz loc_102408E  +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
mov [ebp-1Ch] edi +
cmp [ebp-24h] edi +
jz loc_10240A4  +
push dword ptr [ebp-24h]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov [ebp+var_28] eax +
mov eax [esi+14h] +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_24] eax +
mov eax [esi+18h] +
mov [ebp+var_20] eax +
mov eax [ebx] +
push ebx  +
mov [ebp+var_8] eax +
call sub_10239E8  +
mov edi eax +
mov [ebp+var_C] edi +
test edi edi +
jl loc_102441F  +
push 2Ah  +
push ebx  +
mov ecx esi +
call sub_10203F3  +
mov ecx esi +
test eax eax +
jz loc_1024269  +
push 3Fh  +
push ebx  +
call sub_10203F3  +
mov edi eax +
neg edi  +
sbb edi edi +
neg edi  +
add edi 12h +
push esi  +
lea ecx [ebp+var_28] +
call sub_102280B  +
mov eax [ebp+var_8] +
mov [ebx] eax +
cmp edi 13h +
jz loc_102437A  +
cmp edi 0Ah +
jz loc_102437A  +
cmp edi 0Ch +
jz loc_102437A  +
push 14h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_102438A  +
push 16h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_10] eax +
test eax eax +
jl loc_102438A  +
push 0Eh  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_102438A  +
push 10h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_18] eax +
test eax eax +
jl loc_102438A  +
push 0Fh  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_102438A  +
push 15h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_1C] eax +
test eax eax +
jl loc_102438A  +
push 0Dh  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_8] eax +
test eax eax +
jl loc_102438A  +
push [ebp+var_4]  +
lea ebx [esi+4] +
mov ecx ebx +
call sub_10204B1  +
mov ecx [esi+18h] +
push [ebp+var_4]  +
mov [eax+4] ecx +
inc dword ptr [esi+18h]  +
mov ecx ebx +
call sub_10204B1  +
push [ebp+var_10]  +
mov ecx ebx +
mov [ebp+var_14] eax +
call sub_10204B1  +
mov ecx [ebp+var_14] +
mov ecx [ecx+4] +
push [ebp+var_18]  +
mov [eax+4] ecx +
mov eax [ebp+var_8] +
inc eax  +
mov ecx ebx +
mov [ebp+var_18] eax +
call sub_10204B1  +
mov ecx [ebp+var_18] +
push [ebp+var_4]  +
mov [eax+4] ecx +
lea ebx [esi+4] +
mov ecx ebx +
call sub_10204B1  +
push [ebp+var_1C]  +
mov ecx ebx +
mov [ebp+var_18] eax +
call sub_10204B1  +
mov ecx [ebp+var_18] +
mov ecx [ecx+4] +
mov [eax+4] ecx +
mov eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
mov byte ptr [eax] 0 +
call sub_10239E8  +
test eax eax +
jl loc_102441F  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_10242BF  +
cmp edi 12h +
jz loc_10243B7  +
cmp edi 9 +
jnz loc_10242C4  +
jmp loc_10243B7  +
push 2Bh  +
push ebx  +
call sub_10203F3  +
push 3Fh  +
mov ecx esi +
push ebx  +
test eax eax +
jz loc_1024295  +
call sub_10203F3  +
mov edi eax +
mov eax [ebp+var_24] +
neg edi  +
sbb edi edi +
neg edi  +
add edi 9 +
mov [esi+14h] eax +
jmp loc_102411F  +
call sub_10203F3  +
test eax eax +
jz loc_10242B8  +
push 3Fh  +
push ebx  +
mov ecx esi +
call sub_10203F3  +
mov edi eax +
neg edi  +
sbb edi edi +
neg edi  +
add edi 0Bh +
jmp loc_1024116  +
mov eax edi +
jmp loc_102441F  +
cmp edi 9 +
jz loc_10242C7  +
mov byte ptr [eax] 1 +
mov eax [ebp+arg_0] +
add dword ptr [eax] 2 +
push 1Ah  +
mov ecx esi +
call sub_1022778  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_102438A  +
push 16h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+var_1C] eax +
test eax eax +
jl loc_102438A  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_10204B1  +
push [ebp+arg_4]  +
mov ecx ebx +
mov [ebp+arg_0] eax +
call sub_10204B1  +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
push [ebp+var_4]  +
mov [eax+4] ecx +
mov ecx ebx +
call sub_10204B1  +
push [ebp+var_1C]  +
mov ecx ebx +
mov [ebp+arg_4] eax +
call sub_10204B1  +
mov ecx [ebp+arg_4] +
mov ecx [ecx+4] +
mov [eax+4] ecx +
cmp edi 0Bh +
jz loc_1024355  +
push 0Dh  +
mov ecx esi +
call sub_1022778  +
test eax eax +
jl loc_102438A  +
push eax  +
mov ecx ebx +
call sub_10204B1  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
push [ebp+var_8]  +
mov esi [esi+8] +
mov ecx ebx +
call sub_10204B1  +
mov [eax+4] esi +
cmp edi 9 +
jnz loc_1024372  +
mov eax [ebp+var_C] +
jmp loc_102441F  +
mov eax [ebp+var_4] +
jmp loc_102441F  +
push 10h  +
mov ecx esi +
call sub_1022778  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_1024392  +
or eax 0FFFFFFFFh +
jmp loc_102441F  +
mov eax [ebp+arg_4] +
push eax  +
push ebx  +
mov ecx esi +
mov byte ptr [eax] 0 +
call sub_10239E8  +
test eax eax +
jl loc_102441F  +
mov ecx [ebp+arg_4] +
cmp byte ptr [ecx] 0 +
jz loc_10243BF  +
cmp edi 13h +
jz loc_10243B7  +
cmp edi 0Ah +
jnz loc_10243BF  +
mov dword ptr [esi] 9 +
jmp loc_102438A  +
mov byte ptr [ecx] 1 +
add dword ptr [ebx] 4 +
cmp edi 13h +
jz loc_10243E2  +
cmp edi 0Ah +
jz loc_10243E2  +
push [ebp+arg_0]  +
lea ecx [esi+4] +
lea ebx [eax+1] +
call sub_10204B1  +
mov [eax+4] ebx +
jmp loc_1024414  +
push 0Dh  +
mov ecx esi +
call sub_1022778  +
mov ebx eax +
test ebx ebx +
jl loc_102438A  +
push [ebp+arg_0]  +
lea ecx [esi+4] +
mov [ebp+arg_4] ecx +
lea esi [ebx+1] +
call sub_10204B1  +
mov ecx [ebp+arg_4] +
push ebx  +
mov [eax+4] esi +
call sub_10204B1  +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov eax [ebp+var_C] +
cmp edi 0Ah +
jz loc_102441F  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_104E03C +
push esi  +
push edi  +
mov edi ecx +
mov ecx offset off_104E03C +
test eax eax +
jz loc_1024458  +
mov esi [ebp+arg_0] +
mov edx [esi] +
movzx edx word ptr [edx] +
cmp dx [eax] +
jz loc_1024461  +
add ecx 4 +
mov eax [ecx] +
test eax eax +
jnz loc_102444A  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ecx] +
push [ebp+arg_4]  +
inc eax  +
inc eax  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_10240B2  +
test eax eax +
jge loc_1024482  +
mov dword ptr [edi] 5 +
jmp loc_102445B  +
add dword ptr [esi] 2 +
jmp loc_102445B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ecx ecx +
mov esi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_22C] ecx +
lea edi [ebp+var_228] +
stos   +
stos   +
stos   +
stos   +
mov [ebp+hObject] ecx +
xor eax eax +
lea edi [ebp-23Ch] +
stos   +
stos   +
stos   +
push 800h  +
push ecx  +
mov [ebp+var_210] ecx +
mov [ebp+hFile] ecx +
stos   +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1024506  +
mov esi 8007000Eh +
push esi  +
push 3Bh  +
jmp loc_1024724  +
push esi  +
push offset a_PipeS  +
lea eax [ebp+FileName] +
push 104h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102452E  +
push esi  +
push 3Eh  +
jmp loc_1024724  +
push ebx  +
mov ebx [ebp+lpMem] +
mov edi 400h +
push edi  +
push ebx  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_102454F  +
push esi  +
push 41h  +
jmp loc_1024724  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
push ebx  +
call sub_101420B  +
mov esi eax +
xor edi edi +
cmp esi edi +
jge loc_102456D  +
push esi  +
push 44h  +
jmp loc_1024724  +
push 2  +
pop eax  +
cmp [ebp+var_210] eax +
jnb loc_1024587  +
xor ecx ecx +
mov [ebx+2] cx +
mov [ebx] cx +
mov [ebp+var_210] eax +
push edi  +
push 40000000h  +
push 3  +
push edi  +
push edi  +
push 0C0000000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov [ebp+hFile] eax +
cmp eax edi +
jz loc_102470B  +
cmp eax 0FFFFFFFFh +
jz loc_102470B  +
mov esi ds:CreateEventW +
push edi  +
push edi  +
push 1  +
push edi  +
call esi  +
mov [ebp-230h] eax +
cmp eax edi +
jz loc_10246F0  +
cmp eax 0FFFFFFFFh +
jz loc_10246F0  +
push edi  +
push edi  +
push 1  +
push edi  +
call esi  +
mov [ebp+hHandle] eax +
cmp eax edi +
jz loc_10246D5  +
cmp eax 0FFFFFFFFh +
jz loc_10246D5  +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov eax [ebp+var_210] +
add eax eax +
push eax  +
push ebx  +
push [ebp+hFile]  +
call ds:WriteFile  +
mov edi ds:GetLastError +
mov ebx 80070000h +
test eax eax +
jnz loc_1024653  +
call edi  +
cmp eax 3E5h +
jz loc_1024653  +
call edi  +
test eax eax +
jle loc_1024645  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jge loc_1024653  +
push esi  +
push 6Bh  +
jmp loc_1024724  +
lea eax [ebp+var_22C] +
push eax  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 4  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hFile]  +
call ds:ReadFile  +
mov [ebp+var_210] eax +
test eax eax +
jnz loc_1024689  +
call edi  +
cmp eax 3E5h +
jnz loc_10246BD  +
xor esi esi +
cmp [ebp+var_210] esi +
jnz loc_1024738  +
push 1F4h  +
push [ebp+hHandle]  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_1024738  +
mov esi 80004005h +
push esi  +
push 80h  +
jmp loc_1024724  +
call edi  +
test eax eax +
jle loc_10246CA  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jge loc_1024697  +
push esi  +
push 77h  +
jmp loc_1024724  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10246E9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 5Fh  +
jmp loc_1024724  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1024704  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 5Ch  +
jmp loc_1024724  +
call ds:GetLastError  +
cmp eax edi +
jle loc_102471F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 59h  +
push offset aCplUsepipe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp-230h] 0 +
mov edi ds:CloseHandle +
jz loc_1024762  +
cmp dword ptr [ebp-230h] 0FFFFFFFFh +
jz loc_1024762  +
push dword ptr [ebp-230h]  +
call edi  +
xor ebx ebx +
mov [ebp-230h] ebx +
jmp loc_1024764  +
xor ebx ebx +
cmp [ebp+hHandle] ebx +
jz loc_1024783  +
cmp [ebp+hHandle] 0FFFFFFFFh +
jz loc_1024783  +
push [ebp+hHandle]  +
call edi  +
mov [ebp+hHandle] ebx +
cmp [ebp+hFile] ebx +
jz loc_102479C  +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_102479C  +
push [ebp+hFile]  +
call edi  +
cmp [ebp+lpMem] ebx +
jz loc_10247B8  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+ExecInfo.cbSize] 0 +
push esi  +
mov esi [ebp+arg_0] +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
mov eax esi +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024808  +
sub eax edx +
sar eax 1 +
jz loc_1024848  +
push esi  +
push offset aNameMicrosoft_  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_1024840  +
push esi  +
push 0B2h  +
jmp loc_10248BA  +
lea eax [ebp+var_20C] +
jmp loc_102484D  +
mov eax offset aNameMicrosof_0 +
mov [ebp+ExecInfo.lpParameters] eax +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] 400h +
mov [ebp+ExecInfo.lpVerb] offset Operation +
mov [ebp+ExecInfo.lpFile] offset aControl_exe +
mov [ebp+ExecInfo.nShow] 1 +
call ds:ShellExecuteExW  +
test eax eax +
jz loc_102489A  +
xor esi esi +
jmp loc_10248CE  +
call ds:GetLastError  +
test eax eax +
jle loc_10248AE  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_10248CE  +
push esi  +
push 0C1h  +
push offset aCplUsecommandl  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea eax [ebp+var_C] +
mov [ebp+var_C] esi +
push eax  +
mov [ebp+lpMem] esi +
mov [ebp+var_8] esi +
mov uID 19Bh +
call sub_1031307  +
mov edi eax +
cmp edi esi +
mov ebx 80010000h +
jge loc_1024923  +
push edi  +
push 0E4h  +
jmp loc_1024A7C  +
mov ecx [ebp+var_C] +
push 1  +
call sub_10316AF  +
push 800h  +
push esi  +
mov [ebp+var_8] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_102495A  +
mov edi 8007000Eh +
push edi  +
push 0E8h  +
jmp loc_1024A7C  +
cmp [ebp+var_8] 0 +
mov esi offset word_1001F48 +
jnz loc_102496F  +
push esi  +
call ds:SysAllocString  +
mov [ebp+var_8] eax +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
test eax eax +
jnz loc_102497D  +
mov eax esi +
push [ebp+var_8]  +
mov esi 400h +
push 2Bh  +
push eax  +
push offset aSCS  +
push esi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov edi eax +
add esp 18h +
test edi edi +
jge loc_10249AA  +
push edi  +
push 0FEh  +
jmp loc_1024A7C  +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_10249F8  +
push offset asc_1005388  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10249D5  +
push edi  +
push 106h  +
jmp loc_1024A7C  +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10249F8  +
push edi  +
push 109h  +
jmp loc_1024A7C  +
cmp dword_104E0BC 0 +
jz loc_1024A4A  +
mov al byte_104E0C0 +
cmp al 4 +
jnb loc_1024A0E  +
test al al +
jnz loc_1024A4A  +
mov ecx dword_104E0AC +
and ecx ebx +
xor eax eax +
or eax ecx +
jz loc_1024A4A  +
mov ecx dword_104E0B4 +
mov eax ecx +
xor edx edx +
and eax ebx +
cmp edx dword_104E0B0 +
jnz loc_1024A4A  +
cmp eax ecx +
jnz loc_1024A4A  +
push offset dword_1001870  +
push dword_104E094  +
push dword_104E090  +
call sub_100A719  +
mov eax dword_104E188 +
mov eax [eax+0B8h] +
test eax eax +
jz loc_1024A68  +
push [ebp+lpMem]  +
push eax  +
call sub_102448C  +
mov edi eax +
test edi edi +
jge loc_1024A90  +
push [ebp+lpMem]  +
call sub_10247D0  +
mov edi eax +
test edi edi +
jge loc_1024A90  +
push edi  +
push 119h  +
push offset aCplCommunicate  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor esi esi +
cmp dword_104E0BC esi +
jz loc_1024AE3  +
mov al byte_104E0C0 +
cmp al 4 +
jnb loc_1024AA7  +
test al al +
jnz loc_1024AE3  +
mov ecx dword_104E0AC +
and ecx ebx +
xor eax eax +
or eax ecx +
jz loc_1024AE3  +
mov ecx dword_104E0B4 +
mov eax ecx +
xor edx edx +
and eax ebx +
cmp edx dword_104E0B0 +
jnz loc_1024AE3  +
cmp eax ecx +
jnz loc_1024AE3  +
push offset loc_1001880  +
push dword_104E094  +
push dword_104E090  +
call sub_100A719  +
cmp [ebp+lpMem] esi +
jz loc_1024AF9  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_8] esi +
jz loc_1024B07  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1024B27  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_1024B38  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1024B13  +
test [ebp+arg_0] 1 +
jz loc_1024B59  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
inc ebx  +
mov [ebp+var_10] ecx +
mov [ebp+var_8] esi +
mov [ebp+pv] esi +
mov [ebp+rgIndices] esi +
cmp [edi] bx +
jbe loc_1024BAC  +
mov esi 80070057h +
push esi  +
push 251h  +
push offset aAnswersSetvalu  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_1024CB8  +
push offset aValue  +
call ds:SysAllocString  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1024BCE  +
mov esi 8007000Eh +
push esi  +
push 255h  +
jmp loc_1024C96  +
and [ebp+rgIndices] esi +
cmp [edi+10h] esi +
jbe loc_1024CA9  +
mov eax [ebp+var_10] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0BCh]  +
mov esi eax +
test esi esi +
jl loc_1024C6B  +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+rgIndices] +
push eax  +
push edi  +
call ds:SafeArrayGetElement  +
mov esi eax +
test esi esi +
jl loc_1024C73  +
cmp [ebp+pv] 0 +
jz loc_1024C7B  +
mov eax [ebp+var_8] +
push [ebp+pv]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
test esi esi +
jl loc_1024C88  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 0  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jl loc_1024C90  +
cmp [ebp+pv] 0 +
jz loc_1024C49  +
push [ebp+pv]  +
call ds:SysFreeString  +
and [ebp+pv] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1024C5A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
inc [ebp+rgIndices]  +
mov eax [ebp+rgIndices] +
cmp eax [edi+10h] +
jb loc_1024BDA  +
jmp loc_1024CA9  +
push esi  +
push 25Ch  +
jmp loc_1024C96  +
push esi  +
push 25Fh  +
jmp loc_1024C96  +
mov esi 8000FFFFh +
push esi  +
push 260h  +
jmp loc_1024C96  +
push esi  +
push 263h  +
jmp loc_1024C96  +
push esi  +
push 266h  +
push offset aAnswersSetvalu  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
cmp [ebp+arg_4] 0 +
jz loc_1024CB8  +
push [ebp+arg_4]  +
call ds:SysFreeString  +
cmp [ebp+pv] 0 +
jz loc_1024CCB  +
push [ebp+pv]  +
call ds:SysFreeString  +
and [ebp+pv] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1024CD8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push edi  +
xor edi edi +
lea edx [ebp+var_10] +
push edx  +
push eax  +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_18] edi +
mov [ebp+rgIndices] edi +
mov [ebp+psa] edi +
mov [ebp+pv] edi +
call dword ptr [ecx+30h]  +
mov esi eax +
cmp esi edi +
jge loc_1024D22  +
push esi  +
push 29Ah  +
jmp loc_1024E50  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_1024D40  +
push esi  +
push 29Dh  +
jmp loc_1024E50  +
mov eax [ebp+var_18] +
mov [ebp+rgsabound.cElements] eax +
lea eax [ebp+rgsabound] +
push eax  +
push 1  +
push 8  +
mov [ebp+rgsabound.lLbound] edi +
call ds:SafeArrayCreate  +
mov [ebp+psa] eax +
cmp eax edi +
jnz loc_1024D70  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 2A6h  +
jmp loc_1024E50  +
cmp [ebp+var_18] edi +
mov [ebp+rgIndices] edi +
jle loc_1024DEB  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_10]  +
call sub_1014D97  +
mov esi eax +
cmp esi edi +
jl loc_1024E3A  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_1024E42  +
push [ebp+pv]  +
lea eax [ebp+rgIndices] +
push eax  +
push [ebp+psa]  +
call ds:SafeArrayPutElement  +
mov esi eax +
cmp esi edi +
jl loc_1024E4A  +
cmp [ebp+pv] edi +
jz loc_1024DD0  +
push [ebp+pv]  +
call ds:SysFreeString  +
mov [ebp+pv] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_1024DE0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
inc [ebp+rgIndices]  +
mov eax [ebp+rgIndices] +
cmp eax [ebp+var_18] +
jl loc_1024D78  +
mov ecx [ebp+psa] +
mov eax [ebp+arg_4] +
mov [eax] ecx +
mov [ebp+psa] edi +
cmp [ebp+pv] edi +
jz loc_1024E07  +
push [ebp+pv]  +
call ds:SysFreeString  +
mov [ebp+pv] edi +
cmp [ebp+psa] edi +
jz loc_1024E15  +
push [ebp+psa]  +
call ds:SafeArrayDestroy  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1024E25  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_1024E32  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
push esi  +
push 2AAh  +
jmp loc_1024E50  +
push esi  +
push 2ADh  +
jmp loc_1024E50  +
push esi  +
push 2B0h  +
push offset aAnswersGetvalu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1024DF6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+pvarg] +
push eax  +
mov edi ecx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
call ds:VariantInit  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push dword ptr [edi]  +
push [ebp+arg_0]  +
call sub_1014FCF  +
mov esi eax +
cmp esi ebx +
jge loc_1024EC4  +
push esi  +
push 2EFh  +
push offset aAnswersCreaten  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025001  +
cmp esi 1 +
jnz loc_1024ED6  +
mov esi 80070057h +
push esi  +
push 2F2h  +
jmp loc_1024EAB  +
push [ebp+arg_4]  +
mov ebx ds:SysAllocString +
call ebx  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_1024EFA  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 2F9h  +
jmp loc_1024FBC  +
mov eax [edi] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0BCh]  +
mov esi eax +
test esi esi +
jge loc_1024F1D  +
push esi  +
push 2FCh  +
jmp loc_1024FBC  +
cmp [ebp+arg_8] 0 +
jz loc_1024F9F  +
push offset aId  +
call ebx  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_1024F40  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 303h  +
jmp loc_1024FBC  +
push [ebp+arg_8]  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
test esi esi +
jge loc_1024F5A  +
push esi  +
push 306h  +
jmp loc_1024FBC  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0B4h]  +
mov esi eax +
test esi esi +
jge loc_1024F83  +
push esi  +
push 309h  +
jmp loc_1024FBC  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push 0  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_1024F9F  +
push esi  +
push 30Ch  +
jmp loc_1024FBC  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1009424  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_1024FD2  +
push esi  +
push 315h  +
push offset aAnswersCreaten  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1024FE3  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
cmp [ebp+arg_0] 0 +
mov edi ds:SysFreeString +
jz loc_1024FF4  +
push [ebp+arg_0]  +
call edi  +
cmp [ebp+var_C] 0 +
jz loc_1024FFF  +
push [ebp+var_C]  +
call edi  +
xor ebx ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1025011  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1025021  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1025031  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call ds:VariantInit  +
mov esi ds:SysAllocString +
push offset aId  +
call esi  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_102508C  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 34Ch  +
jmp loc_1025126  +
push offset aPackage  +
call esi  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_10250A9  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 352h  +
jmp loc_1025126  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+0BCh]  +
mov esi eax +
cmp esi ebx +
jge loc_10250CA  +
push esi  +
push 355h  +
jmp loc_1025126  +
push [ebp+arg_8]  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
cmp esi ebx +
jge loc_10250E4  +
push esi  +
push 358h  +
jmp loc_1025126  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0B4h]  +
mov esi eax +
cmp esi ebx +
jge loc_102510D  +
push esi  +
push 35Bh  +
jmp loc_1025126  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi ebx +
jge loc_102513A  +
push esi  +
push 35Eh  +
push offset aAnswersCreatep  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_102514A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov edi ds:SysFreeString +
cmp [ebp+var_C] ebx +
jz loc_102515A  +
push [ebp+var_C]  +
call edi  +
cmp [ebp+var_8] ebx +
jz loc_1025164  +
push [ebp+var_8]  +
call edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_104E184 +
push esi  +
push edi  +
xor edi edi +
and [ebp+var_4] edi +
test eax eax +
jnz loc_10251FD  +
lea eax [ebp+var_4] +
push eax  +
push offset aPackages  +
call sub_101484F  +
mov edi eax +
test edi edi +
jge loc_10251AB  +
push edi  +
push 70h  +
jmp loc_10251D2  +
push 8  +
call sub_10361AF  +
pop ecx  +
test eax eax +
jz loc_10251C2  +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
mov esi eax +
jmp loc_10251C4  +
xor esi esi +
test esi esi +
jnz loc_10251E8  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 73h  +
push offset aAnswersInstanc  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025202  +
mov eax [ebp+var_4] +
mov [esi] eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
mov dword_104E184 eax +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_102520F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
mov esi ecx +
push dword ptr [esi]  +
push offset aPackages_0  +
call sub_1014B70  +
mov edi eax +
test edi edi +
jge loc_102524A  +
push edi  +
push 0A3h  +
jmp loc_1025265  +
push [ebp+arg_0]  +
mov ecx esi +
push dword ptr [esi]  +
push [ebp+var_4]  +
call sub_1025049  +
mov edi eax +
test edi edi +
jge loc_1025279  +
push edi  +
push 0A6h  +
push offset aAnswersAddpack  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1025286  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 800h  +
mov ebx ecx +
push edi  +
mov [ebp+var_1C] ebx +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_18] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_10252F2  +
mov esi 8007000Eh +
push esi  +
push 124h  +
push offset aAnswersAddcatc  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10254B1  +
push [ebp+arg_0]  +
push offset aPackagesIntera  +
push 400h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi edi +
jge loc_1025319  +
push esi  +
push 127h  +
jmp loc_102547E  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push dword ptr [ebx]  +
push [ebp+lpMem]  +
call sub_1014FCF  +
mov esi eax +
cmp esi edi +
jge loc_1025339  +
push esi  +
push 12Ah  +
jmp loc_102547E  +
jz loc_1025492  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
mov ecx ebx +
push offset aInteraction  +
push offset aPackages_0  +
call sub_1024E6B  +
mov esi eax +
cmp esi edi +
jge loc_1025368  +
push esi  +
push 134h  +
jmp loc_102547E  +
cmp [ebp+arg_4] edi +
jz loc_1025492  +
mov ecx [ebp+arg_4] +
mov eax offset word_1001F48 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_102539F  +
cmp dx di +
jz loc_102539B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_102539F  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_1025379  +
xor eax eax +
jmp loc_10253A4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jz loc_1025492  +
push [ebp+arg_4]  +
mov ebx [ebp+lpMem] +
push 400h  +
push ebx  +
call sub_100D999  +
mov esi eax +
cmp esi edi +
jge loc_10253CE  +
push esi  +
push 13Eh  +
jmp loc_102547E  +
push offset aValue  +
call ds:SysAllocString  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_10253F0  +
mov esi 8007000Eh +
push esi  +
push 143h  +
jmp loc_102547E  +
lea eax [ebp+var_14] +
push eax  +
push 2Ch  +
push ebx  +
call sub_1014795  +
mov esi eax +
cmp esi edi +
jl loc_1025468  +
xor eax eax +
inc eax  +
cmp esi eax +
jnz loc_102540C  +
mov [ebp+var_18] eax +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1025411  +
sub eax edx +
sar eax 1 +
jz loc_102545E  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1025431  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+var_1C] +
push edi  +
push edi  +
push ebx  +
push [ebp+var_8]  +
push dword ptr [eax]  +
call sub_10150EF  +
mov esi eax +
cmp esi edi +
jl loc_1025470  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push edi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi edi +
jl loc_1025478  +
mov ebx [ebp+var_14] +
cmp [ebp+var_18] edi +
jz loc_10253F0  +
jmp loc_1025492  +
push esi  +
push 147h  +
jmp loc_102547E  +
push esi  +
push 157h  +
jmp loc_102547E  +
push esi  +
push 15Ah  +
push offset aAnswersAddcatc  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_8] edi +
jz loc_10254B1  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_10254BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov edi 203h +
push edi  +
mov ebx offset aPackagesPackag +
push ebx  +
call sub_101420B  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_1025514  +
push eax  +
push 1D0h  +
push offset aAnswersGetpack  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10255C1  +
push esi  +
mov esi [ebp+var_4] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push dword ptr [ebp+arg_0]  +
call sub_101420B  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_1025548  +
push eax  +
push 1D4h  +
push offset aAnswersGetpack  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10255C0  +
add esi [ebp+var_4] +
lea eax [esi+esi] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1025574  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_8] eax +
push 1D8h  +
jmp loc_102558F  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push edi  +
call sub_100DD8E  +
add esp 10h +
mov [ebp+var_8] eax +
test eax eax +
jge loc_10255A5  +
push eax  +
push 1DFh  +
push offset aAnswersGetpack  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10255AC  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor edi edi +
test edi edi +
jz loc_10255C0  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov edi 203h +
push edi  +
push offset aPackagesPack_0  +
call sub_101420B  +
mov ebx eax +
test ebx ebx +
jge loc_1025614  +
push ebx  +
push 211h  +
push offset aAnswersGetinte  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10256E1  +
push esi  +
mov esi [ebp+var_4] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push dword ptr [ebp+arg_0]  +
call sub_101420B  +
mov ebx eax +
test ebx ebx +
jge loc_1025633  +
push ebx  +
push 215h  +
jmp loc_102564F  +
add esi [ebp+var_4] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push [ebp+arg_4]  +
call sub_101420B  +
mov ebx eax +
test ebx ebx +
jge loc_1025665  +
push ebx  +
push 219h  +
push offset aAnswersGetinte  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10256E0  +
add esi [ebp+var_4] +
lea eax [esi+esi] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_102568E  +
mov ebx 8007000Eh +
push ebx  +
push 21Dh  +
jmp loc_10256AF  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push offset aPackagesPack_0  +
push esi  +
push edi  +
call sub_100DD8E  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jge loc_10256C5  +
push ebx  +
push 225h  +
push offset aAnswersGetinte  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10256CC  +
mov eax [ebp+arg_8] +
mov [eax] edi +
xor edi edi +
test edi edi +
jz loc_10256E0  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+lpMem] +
add ebx 8 +
mov eax [ebx] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
xor ecx ecx +
mov [ebp+var_14] edi +
mov [ebp+var_18] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_24] ebx +
cmp eax ebx +
jz loc_10259C3  +
mov eax [eax] +
inc ecx  +
cmp eax ebx +
jnz loc_1025727  +
cmp ecx edi +
jz loc_10259C3  +
mov eax [ebp+arg_4] +
mov eax [eax+30h] +
cmp eax edi +
jnz loc_1025773  +
lea eax [ebp+var_4] +
push eax  +
push offset aAnswers  +
call sub_101484F  +
mov esi eax +
cmp esi edi +
jge loc_102578B  +
push esi  +
push 3A1h  +
push offset aAnswersLoadsup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025975  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_101484F  +
mov esi eax +
cmp esi edi +
jge loc_102578B  +
push esi  +
push 3A4h  +
jmp loc_102575A  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_4]  +
call sub_1014ABA  +
mov esi eax +
cmp esi edi +
jge loc_10257A5  +
push esi  +
push 3A8h  +
jmp loc_102575A  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_10257CC  +
mov esi 8007000Eh +
push esi  +
push 3AAh  +
jmp loc_10257F2  +
mov esi [ebx] +
cmp esi ebx +
jnz loc_102580E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov esi eax +
cmp esi edi +
jge loc_1025954  +
push esi  +
push 3EDh  +
push offset aAnswersLoadsup  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102595F  +
mov esi [ebp+var_20] +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_102581E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_102582E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [esi] +
mov [ebp+var_20] eax +
lea eax [ebp+var_C] +
push eax  +
mov ebx esi +
push dword ptr [ebx+8]  +
push offset aId  +
push edi  +
push offset aInteraction  +
push [ebp+var_4]  +
call sub_10150EF  +
mov esi eax +
cmp esi edi +
jl loc_1025912  +
push dword ptr [ebx+0Ch]  +
mov ebx [ebp+lpMem] +
push 400h  +
push ebx  +
call sub_100D999  +
mov esi eax +
cmp esi edi +
jl loc_102591D  +
lea eax [ebp+var_18] +
push eax  +
push 2Ch  +
push ebx  +
call sub_1014795  +
mov esi eax +
cmp esi edi +
jl loc_1025928  +
xor eax eax +
inc eax  +
cmp esi eax +
jnz loc_1025894  +
mov [ebp+var_1C] eax +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1025899  +
sub eax edx +
sar eax 1 +
jz loc_10258E6  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_10258B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push edi  +
push ebx  +
push offset aValue  +
push [ebp+var_4]  +
call sub_10150EF  +
mov esi eax +
cmp esi edi +
jl loc_1025933  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push edi  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi edi +
jl loc_102593E  +
mov ebx [ebp+var_18] +
cmp [ebp+var_1C] edi +
jz loc_1025874  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push edi  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi edi +
jl loc_1025949  +
mov eax [ebp+var_24] +
cmp [ebp+var_20] eax +
jnz loc_102580B  +
jmp loc_10257D2  +
push esi  +
push 3C0h  +
jmp loc_10257F2  +
push esi  +
push 3C6h  +
jmp loc_10257F2  +
push esi  +
push 3CCh  +
jmp loc_10257F2  +
push esi  +
push 3DCh  +
jmp loc_10257F2  +
push esi  +
push 3DFh  +
jmp loc_10257F2  +
push esi  +
push 3E9h  +
jmp loc_10257F2  +
push [ebp+var_14]  +
mov ecx [ebp+arg_4] +
call sub_1015F02  +
cmp [ebp+lpMem] edi +
jz loc_1025975  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1025985  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1025995  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_10259A5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_10259B5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+var_14] edi +
jz loc_10259C3  +
push [ebp+var_14]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_4]  +
xor ebx ebx +
push [ebp+arg_0]  +
mov edi ecx +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
call sub_10255CF  +
mov esi eax +
cmp esi ebx +
jge loc_1025A05  +
push esi  +
push 0D2h  +
jmp loc_1025AEB  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push dword ptr [edi]  +
push [ebp+lpMem]  +
call sub_1014FCF  +
mov esi eax +
cmp esi ebx +
jge loc_1025A25  +
push esi  +
push 0D5h  +
jmp loc_1025AEB  +
jnz loc_1025A49  +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+var_8]  +
call sub_1024CE6  +
mov esi eax +
cmp esi ebx +
jge loc_1025B04  +
push esi  +
push 0D9h  +
jmp loc_1025AEB  +
cmp dword ptr [ebp+arg_8] ebx +
jz loc_1025B01  +
cmp [ebp+lpMem] ebx +
jz loc_1025A68  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push 800h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1025A8F  +
mov esi 8007000Eh +
push esi  +
push 0E5h  +
jmp loc_1025AEB  +
push dword ptr [ebp+arg_8]  +
push offset aPackagesIntera  +
push 400h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jge loc_1025AB3  +
push esi  +
push 0E8h  +
jmp loc_1025AEB  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push dword ptr [edi]  +
push [ebp+lpMem]  +
call sub_1014FCF  +
mov esi eax +
cmp esi ebx +
jge loc_1025AD0  +
push esi  +
push 0EBh  +
jmp loc_1025AEB  +
jnz loc_1025B01  +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+var_8]  +
call sub_1024CE6  +
mov esi eax +
cmp esi ebx +
jge loc_1025B04  +
push esi  +
push 0EFh  +
push offset aAnswersGetansw  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025B04  +
xor esi esi +
inc esi  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1025B14  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
cmp [ebp+lpMem] ebx +
jz loc_1025B2A  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+psa] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
mov edi ecx +
push [ebp+arg_0]  +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
mov [ebp+psa] ebx +
call sub_10259D1  +
mov esi eax +
cmp esi ebx +
jge loc_1025B85  +
push esi  +
push 18Fh  +
push offset aAnswersSetansw  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025C1E  +
cmp esi 1 +
jnz loc_1025C1E  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_10254CC  +
mov esi eax +
cmp esi ebx +
jge loc_1025BAA  +
push esi  +
push 198h  +
jmp loc_1025BE7  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
mov ecx edi +
push offset aInteraction  +
push [ebp+lpMem]  +
call sub_1024E6B  +
mov esi eax +
cmp esi ebx +
jge loc_1025BCE  +
push esi  +
push 19Bh  +
jmp loc_1025BE7  +
push [ebp+arg_8]  +
mov ecx edi +
push [ebp+var_8]  +
call sub_1024B65  +
mov esi eax +
cmp esi ebx +
jge loc_1025BFB  +
push esi  +
push 19Eh  +
push offset aAnswersSetansw  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] ebx +
jz loc_1025C11  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1025C1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+psa] ebx +
jz loc_1025C2C  +
push [ebp+psa]  +
call ds:SafeArrayDestroy  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax ecx +
xor ecx ecx +
mov [eax+6Ch] ecx +
mov [eax+70h] ecx +
mov [eax+74h] ecx +
mov [eax+0B8h] ecx +
mov [eax+80h] ecx +
mov [eax+84h] ecx +
mov [eax+88h] ecx +
mov [eax+8Ch] ecx +
mov [eax+7Ch] ecx +
mov [eax+78h] ecx +
mov [eax+0BCh] ecx +
mov [eax+0C0h] ecx +
mov [eax+90h] ecx +
mov [eax+98h] ecx +
mov [eax+0C4h] ecx +
mov [eax+9Ch] ecx +
mov [eax+0C8h] ecx +
mov [eax+94h] ecx +
mov [eax+0CCh] ecx +
mov [eax+0A0h] ecx +
mov [eax+0A8h] ecx +
mov [eax+0ACh] ecx +
mov [eax+0D4h] ecx +
mov [eax+18h] ecx +
mov [eax+5Ch] ecx +
mov [eax] ecx +
mov [eax+2Ch] ecx +
mov [eax+34h] ecx +
mov [eax+30h] ecx +
mov [eax+1Ch] ecx +
mov [eax+0B0h] ecx +
mov [eax+0B4h] ecx +
mov [eax+0D0h] ecx +
mov [eax+20h] ecx +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
mov [eax+38h] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+3Ch] ecx +
mov [eax+58h] ecx +
mov [eax+40h] ecx +
mov [eax+44h] ecx +
mov [eax+4Ch] ecx +
mov [eax+50h] ecx +
mov [eax+54h] ecx +
mov [eax+60h] ecx +
inc ecx  +
mov dword ptr [eax+0A4h] 37h +
mov [eax+64h] ecx +
mov [eax+48h] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10292A6  +
test [ebp+arg_0] 1 +
jz loc_1025D43  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] 1 +
jnz loc_1025D6C  +
mov dword ptr [ecx+0D0h] 2 +
jmp loc_1025DED  +
cmp [ebp+arg_0] 2 +
jnz loc_1025DB8  +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
movzx ecx word ptr [eax] +
cmp cx 2Dh +
jz loc_1025D87  +
cmp cx 2Fh +
jnz loc_1025D89  +
inc eax  +
inc eax  +
push offset a?  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1025DB8  +
push offset aMshelpWindows?  +
call sub_102E12E  +
mov esi eax +
test esi esi +
jge loc_1025DB3  +
push esi  +
push 240h  +
jmp loc_1025DD9  +
xor esi esi +
inc esi  +
jmp loc_1025DED  +
mov eax [ebp+arg_0] +
and eax 80000001h +
jns loc_1025DC7  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
cmp eax 1 +
jz loc_1025DED  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 249h  +
push offset aConfigurationC  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_1014986  +
mov esi eax +
test esi esi +
jge loc_1025E26  +
push esi  +
push 661h  +
jmp loc_1025E5F  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_4]  +
call sub_1014ABA  +
mov esi eax +
test esi esi +
jge loc_1025E40  +
push esi  +
push 664h  +
jmp loc_1025E5F  +
mov eax [ebp+var_8] +
mov ecx [eax] +
add edi 0C8h +
push edi  +
push eax  +
call dword ptr [ecx+88h]  +
mov esi eax +
test esi esi +
jge loc_1025E73  +
push esi  +
push 667h  +
push offset aConfigurationL  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1025E84  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1025E91  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
push 4  +
pop eax  +
mov [ebp+Type] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_4] +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aAllowskipfirst  +
lea eax [ebp+Type] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
mov edi ecx +
mov [ebp+var_4] 1 +
call sub_10142A6  +
test eax eax +
jge loc_1025EFD  +
push eax  +
push 72Fh  +
push offset aConfiguratio_0  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
xor eax eax +
cmp [ebp+var_4] eax +
setnz al  +
mov [edi+40h] eax +
xor eax eax +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
xor esi esi +
push 208h  +
push esi  +
mov [ebp+var_4] esi +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi esi +
jnz loc_1025F5F  +
mov eax 8007000Eh +
push eax  +
push 758h  +
push offset aConfiguratio_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1025FD6  +
push esi  +
push edi  +
mov esi 103h +
push esi  +
push [ebp+lpFileName]  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1025F97  +
call ds:GetLastError  +
test eax eax +
jle loc_1025F88  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1025FBF  +
push eax  +
push 75Dh  +
jmp loc_1025FA9  +
cmp eax esi +
jbe loc_1025FBF  +
mov eax 80028016h +
push eax  +
mov [ebp+var_4] eax +
push 760h  +
push offset aConfiguratio_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1025FC6  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor edi edi +
test edi edi +
jz loc_1025FD6  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_8] edi +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
call sub_1014FCF  +
mov esi eax +
cmp esi edi +
jge loc_1026014  +
push esi  +
push 976h  +
jmp loc_102602F  +
jnz loc_1026045  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_1026045  +
push esi  +
push 979h  +
push offset aConfigurationT  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1026050  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
jz loc_1026061  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_102606E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_1026095  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+18h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+18h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
test eax eax +
jz loc_10260C5  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+38h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+38h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
test eax eax +
jz loc_10260F5  +
push eax  +
call ds:SysFreeString  +
and dword ptr [esi+28h] 0 +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi+28h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0DCh  +
call sub_10361AF  +
pop ecx  +
test eax eax +
jz loc_102612D  +
mov ecx eax +
call sub_1025C3A  +
jmp loc_102612F  +
xor eax eax +
push esi  +
mov dword_104E188 eax +
test eax eax +
jnz loc_1026157  +
mov esi 8007000Eh +
push esi  +
push 33h  +
push offset aConfigurationI  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1026190  +
mov ecx eax +
call sub_1025E9E  +
mov esi eax +
test esi esi +
jge loc_1026169  +
push esi  +
push 39h  +
jmp loc_1026141  +
push offset aMicrosoft  +
lea eax [ebp+var_4] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_1026182  +
push esi  +
push 3Ch  +
jmp loc_1026141  +
push [ebp+var_4]  +
mov ecx dword_104E188 +
call sub_101C27E  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
mov esi ecx +
xor eax eax +
push edi  +
mov edi ds:HeapFree +
cmp [esi+80h] eax +
jz loc_10261FB  +
mov [ebp+var_4] eax +
cmp [esi+0B0h] eax +
jbe loc_10261FB  +
mov eax [esi+80h] +
mov ecx [ebp+var_4] +
lea eax [eax+ecx*4] +
cmp dword ptr [eax] 0 +
jz loc_10261ED  +
push dword ptr [eax]  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov eax [esi+80h] +
mov ecx [ebp+var_4] +
and dword ptr [eax+ecx*4] 0 +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [esi+0B0h] +
jb loc_10261C6  +
mov eax [esi+80h] +
test eax eax +
jz loc_1026214  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+80h] 0 +
mov eax [esi+6Ch] +
test eax eax +
jz loc_1026227  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+6Ch] 0 +
mov eax [esi+70h] +
test eax eax +
jz loc_102623A  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+70h] 0 +
mov eax [esi+74h] +
test eax eax +
jz loc_102624D  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+74h] 0 +
mov eax [esi+0B8h] +
test eax eax +
jz loc_1026266  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0B8h] 0 +
mov eax [esi+84h] +
test eax eax +
jz loc_102627F  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+84h] 0 +
mov eax [esi+88h] +
test eax eax +
jz loc_1026298  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+88h] 0 +
mov eax [esi+8Ch] +
test eax eax +
jz loc_10262B1  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+8Ch] 0 +
mov eax [esi+7Ch] +
test eax eax +
jz loc_10262C4  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+7Ch] 0 +
mov eax [esi+78h] +
test eax eax +
jz loc_10262D7  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+78h] 0 +
mov eax [esi+0BCh] +
test eax eax +
jz loc_10262F0  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0BCh] 0 +
mov eax [esi+0C0h] +
test eax eax +
jz loc_1026309  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0C0h] 0 +
mov eax [esi+0C4h] +
test eax eax +
jz loc_1026322  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+0C4h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_102633B  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+90h] 0 +
mov eax [esi+94h] +
test eax eax +
jz loc_1026354  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+94h] 0 +
mov eax [esi+98h] +
test eax eax +
jz loc_102636D  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+98h] 0 +
mov ebx ds:SysFreeString +
lea edi [esi+0C8h] +
mov eax [edi] +
test eax eax +
jz loc_1026385  +
push eax  +
call ebx  +
and dword ptr [edi] 0 +
lea edi [esi+9Ch] +
mov eax [edi] +
test eax eax +
jz loc_1026397  +
push eax  +
call ebx  +
and dword ptr [edi] 0 +
lea edi [esi+0CCh] +
mov eax [edi] +
test eax eax +
jz loc_10263A9  +
push eax  +
call ebx  +
and dword ptr [edi] 0 +
add esi 0A0h +
mov ecx [esi] +
test ecx ecx +
jz loc_10263BF  +
push 1  +
call sub_1025D29  +
and dword ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102619A  +
test [ebp+arg_0] 1 +
jz loc_10263E3  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_102641B  +
push esi  +
push 4F4h  +
jmp loc_102645C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_CfgAnswers  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jge loc_102643E  +
push esi  +
push 4F7h  +
jmp loc_102645C  +
jnz loc_102648C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov esi eax +
cmp esi edi +
jge loc_1026472  +
push esi  +
push 4FAh  +
push offset aConfiguratio_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102648C  +
mov ecx [ebp+var_C] +
mov eax [ebp+arg_4] +
mov [ecx+80h] eax +
mov ecx [ecx+78h] +
push [ebp+var_4]  +
mov ecx [ecx+eax*4] +
call sub_1015F02  +
cmp [ebp+var_4] edi +
jz loc_102649D  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_10264AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
mov edi ecx +
push offset aSupportpackage  +
mov dword ptr [edi+0D0h] 1 +
call sub_1025FE5  +
mov esi eax +
test esi esi +
jge loc_10264F8  +
push esi  +
push 526h  +
jmp loc_102664A  +
jnz loc_1026543  +
lea esi [edi+6Ch] +
mov eax [esi] +
test eax eax +
jz loc_1026516  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
push [ebp+var_4]  +
push esi  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_1026530  +
push esi  +
push 52Bh  +
jmp loc_102664A  +
cmp [ebp+var_4] 0 +
jz loc_1026543  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push offset aSupportpacka_0  +
call sub_1025FE5  +
mov esi eax +
test esi esi +
jge loc_1026563  +
push esi  +
push 534h  +
jmp loc_102664A  +
jnz loc_1026595  +
push [ebp+var_4]  +
lea eax [edi+74h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_1026582  +
push esi  +
push 537h  +
jmp loc_102664A  +
cmp [ebp+var_4] 0 +
jz loc_1026595  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push offset aSupportpacka_1  +
push ebx  +
call dword ptr [eax+94h]  +
mov esi eax +
test esi esi +
jge loc_10265B8  +
push esi  +
push 540h  +
jmp loc_102664A  +
jnz loc_10265C1  +
mov dword ptr [edi+38h] 1 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10265D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push offset aSupportpacka_2  +
push ebx  +
call dword ptr [eax+94h]  +
mov esi eax +
test esi esi +
jge loc_10265F2  +
push esi  +
push 54Bh  +
jmp loc_102664A  +
jnz loc_10265FB  +
mov dword ptr [edi+60h] 1 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_102660C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push offset aSupportpacka_3  +
push ebx  +
call dword ptr [eax+94h]  +
mov esi eax +
test esi esi +
jge loc_102662C  +
push esi  +
push 556h  +
jmp loc_102664A  +
jnz loc_102666D  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov esi eax +
test esi esi +
jge loc_1026660  +
push esi  +
push 559h  +
push offset aConfiguratio_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102666F  +
mov eax [ebp+var_4] +
and [ebp+var_4] 0 +
mov [edi+9Ch] eax +
xor esi esi +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1026680  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
cmp [ebp+var_4] 0 +
jz loc_102668F  +
push [ebp+var_4]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_102517C  +
mov esi eax +
test esi esi +
jge loc_10266D1  +
push esi  +
push 0E8h  +
push offset aConfigurationD  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx dword_104E188 +
test ecx ecx +
jz loc_10266E9  +
push 1  +
call sub_10263C9  +
and dword_104E188 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_10266F7  +
push 1  +
call sub_1024B3F  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov eax [ecx+0D0h] +
xor esi esi +
cmp eax esi +
jle loc_10267FE  +
cmp eax 3 +
jle loc_10267C5  +
cmp eax 0Ah +
jle loc_10267A1  +
cmp eax 0Bh +
jz loc_1026781  +
cmp eax 0Ch +
jz loc_1026761  +
cmp eax 0Dh +
jnz loc_10267FE  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax esi +
jz loc_10267C1  +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov [eax+10h] esi +
mov dword ptr [eax] offset off_1006E08 +
jmp loc_10267E6  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax esi +
jz loc_10267C1  +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov [eax+10h] esi +
mov dword ptr [eax] offset off_1006DFC +
jmp loc_10267E6  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax esi +
jz loc_10267C1  +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov [eax+10h] esi +
mov dword ptr [eax] offset off_1006DF0 +
jmp loc_10267E6  +
push 14h  +
call sub_10361AF  +
pop ecx  +
cmp eax esi +
jz loc_10267C1  +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov [eax+10h] esi +
mov dword ptr [eax] offset off_1006DE4 +
jmp loc_10267E6  +
xor eax eax +
jmp loc_10267E6  +
push 40h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov [ebp-4] esi +
cmp ecx esi +
jz loc_10267E0  +
call sub_101CB34  +
jmp loc_10267E2  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax esi +
jnz loc_10267F7  +
mov eax 8007000Eh +
push eax  +
push 28Dh  +
jmp loc_1026809  +
mov ecx [ebp+8] +
mov [ecx] eax +
jmp loc_102681F  +
mov eax 8000FFFFh +
push eax  +
push 28Ah  +
push offset aConfiguratio_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+lpSrc] ebx +
mov [ebp+var_8] ebx +
call sub_1031307  +
mov edi ds:SysFreeString +
mov esi eax +
cmp esi ebx +
jge loc_1026864  +
push esi  +
push 39Fh  +
jmp loc_1026BFF  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_102688E  +
mov esi 8007000Eh +
push esi  +
push 3A1h  +
jmp loc_1026BFF  +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageconf  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jz loc_10268B9  +
mov esi 80070057h +
cmp esi ebx +
jge loc_10268B9  +
push esi  +
push 3AAh  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi ebx +
jge loc_10268DA  +
push esi  +
push 3B0h  +
jmp loc_1026BFF  +
cmp [ebp+lpSrc] ebx +
jz loc_10268E7  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+lpMem]  +
call sub_1030712  +
mov esi eax +
cmp esi ebx +
jge loc_1026904  +
push esi  +
push 3B5h  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101ABF7  +
cmp [ebp+lpSrc] ebx +
jz loc_102691C  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_0  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jz loc_1026947  +
mov esi 80070057h +
cmp esi ebx +
jge loc_1026947  +
push esi  +
push 3C1h  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi ebx +
jge loc_1026968  +
push esi  +
push 3C7h  +
jmp loc_1026BFF  +
cmp [ebp+lpSrc] ebx +
jz loc_1026975  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+lpMem]  +
call sub_1030712  +
mov esi eax +
cmp esi ebx +
jge loc_1026992  +
push esi  +
push 3CCh  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101AC32  +
cmp [ebp+lpSrc] ebx +
jz loc_10269AA  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_1  +
call sub_1025FE5  +
cmp eax ebx +
jnz loc_10269EB  +
mov esi ds:_wcsnicmp +
push 7  +
push offset aHttp  +
push [ebp+lpSrc]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_10269FB  +
push 8  +
push offset aHttps  +
push [ebp+lpSrc]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_10269FB  +
mov esi 80070057h +
push esi  +
push 3DBh  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101A3CB  +
cmp [ebp+lpSrc] ebx +
jz loc_1026A13  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_2  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jz loc_1026A3E  +
mov esi 80070057h +
cmp esi ebx +
jge loc_1026A3E  +
push esi  +
push 3E7h  +
jmp loc_1026BFF  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101AC6D  +
cmp [ebp+lpSrc] ebx +
jz loc_1026A56  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_3  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jz loc_1026A81  +
mov esi 80070057h +
cmp esi ebx +
jge loc_1026A81  +
push esi  +
push 3F3h  +
jmp loc_1026BFF  +
push offset aTrue  +
push [ebp+lpSrc]  +
call ds:_wcsicmp  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
mov ecx [ebp+var_8] +
inc eax  +
mov [ecx+54h] eax +
cmp [ebp+lpSrc] ebx +
jz loc_1026AA9  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_4  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_1026ACB  +
push esi  +
push 3FCh  +
jmp loc_1026BFF  +
jnz loc_1026AE5  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101ACA8  +
cmp [ebp+lpSrc] ebx +
jz loc_1026AE5  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_5  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_1026B07  +
push esi  +
push 406h  +
jmp loc_1026BFF  +
jnz loc_1026B21  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_101ABBC  +
cmp [ebp+lpSrc] ebx +
jz loc_1026B21  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_6  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_1026B43  +
push esi  +
push 410h  +
jmp loc_1026BFF  +
jnz loc_1026B7E  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi ebx +
jge loc_1026B66  +
push esi  +
push 416h  +
jmp loc_1026BFF  +
cmp [ebp+lpSrc] ebx +
jz loc_1026B73  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
push [ebp+lpMem]  +
mov ecx [ebp+var_8] +
call sub_101A39B  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
test eax eax +
jnz loc_1026C2D  +
cmp [ebp+lpSrc] ebx +
jz loc_1026B9B  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+arg_0]  +
push offset aCfgPackageco_7  +
call sub_1025FE5  +
mov esi eax +
cmp esi ebx +
jge loc_1026BBA  +
push esi  +
push 424h  +
jmp loc_1026BFF  +
jnz loc_1026C20  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi ebx +
jge loc_1026BDA  +
push esi  +
push 42Bh  +
jmp loc_1026BFF  +
cmp [ebp+lpSrc] ebx +
jz loc_1026BE7  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+lpMem]  +
call sub_1030712  +
mov esi eax +
cmp esi ebx +
jge loc_1026C15  +
push esi  +
push 430h  +
push offset aConfiguratio_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1026C2D  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_8] +
call sub_10260AB  +
cmp [ebp+lpSrc] ebx +
jz loc_1026C3A  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
cmp [ebp+lpSrc] ebx +
jz loc_1026C3A  +
push [ebp+lpSrc]  +
call edi  +
mov [ebp+lpSrc] ebx +
cmp [ebp+lpMem] ebx +
jz loc_1026C50  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi ecx +
jz loc_1026CAC  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_102607B  +
mov eax [edi+98h] +
test eax eax +
jz loc_1026C9F  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [edi+98h] 0 +
mov eax [esi+2Ch] +
mov [edi+98h] eax +
and dword ptr [esi+2Ch] 0 +
push dword ptr [esi]  +
mov ecx ebx +
call sub_101ABF7  +
push dword ptr [esi+14h]  +
mov ecx ebx +
call sub_101AC32  +
mov eax [esi+28h] +
mov [ebx+54h] eax +
push dword ptr [esi+10h]  +
mov ecx ebx +
call sub_101AC6D  +
push dword ptr [esi+4]  +
mov ecx ebx +
call sub_101A3CB  +
push dword ptr [esi+20h]  +
mov ecx ebx +
call sub_10260DB  +
push dword ptr [esi+1Ch]  +
mov ecx ebx +
call sub_10260AB  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_1026CFC  +
push esi  +
mov ecx ebx +
call sub_101A39B  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_18] +
push eax  +
mov [ebp+lpMem] edi +
mov [ebp+lpSrc] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_14] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_20] edi +
mov [ebp+var_24] edi +
mov [ebp+var_18] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_1026D5F  +
push esi  +
push 58Dh  +
push offset aConfiguratio_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1026FF7  +
push ebx  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+lpMem] ebx +
cmp ebx edi +
jnz loc_1026D8C  +
mov esi 8007000Eh +
push esi  +
push 58Fh  +
jmp loc_1026EAE  +
push [ebp+arg_4]  +
call ds:SysAllocString  +
mov [ebp+var_1C] eax +
cmp eax edi +
jnz loc_1026DAC  +
mov esi 8007000Eh +
push esi  +
push 592h  +
jmp loc_1026EAE  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push [ebp+var_1C]  +
push eax  +
call dword ptr [ecx+90h]  +
mov esi eax +
cmp esi edi +
jge loc_1026DD0  +
push esi  +
push 598h  +
jmp loc_1026EAE  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_1026DEE  +
push esi  +
push 59Bh  +
jmp loc_1026EAE  +
cmp [ebp+var_20] edi +
jz loc_1026FE6  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+var_20]  +
call sub_1015DFA  +
mov esi eax +
cmp esi edi +
jge loc_1026E14  +
push esi  +
push 59Fh  +
jmp loc_1026EAE  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1026E24  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+lpSrc] edi +
jz loc_1026E35  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jge loc_1026E50  +
push esi  +
push 5A8h  +
jmp loc_1026EAE  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+lpSrc] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_1026E6B  +
push esi  +
push 5ABh  +
jmp loc_1026EAE  +
push [ebp+lpSrc]  +
push 104h  +
push ebx  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jge loc_1026E87  +
push esi  +
push 5B1h  +
jmp loc_1026EAE  +
cmp [ebp+lpSrc] edi +
jz loc_1026E98  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
lea eax [ebp+lpSrc] +
push eax  +
push ebx  +
call sub_1030712  +
mov esi eax +
cmp esi edi +
jge loc_1026EBF  +
push esi  +
push 5B6h  +
push offset aConfiguratio_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_1027093  +
push [ebp+lpSrc]  +
mov ecx [ebp+var_18] +
call sub_10260DB  +
xor ebx ebx +
inc ebx  +
mov [ebp+arg_4] ebx +
cmp [ebp+var_24] ebx +
jbe loc_1026FC5  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1026EE9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+lpSrc] edi +
jz loc_1026EFA  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
cmp [ebp+var_14] edi +
jz loc_1026F0B  +
push [ebp+var_14]  +
call ds:SysFreeString  +
mov [ebp+var_14] edi +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jl loc_1027062  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+lpSrc] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jl loc_102706A  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jl loc_1027072  +
cmp [ebp+lpSrc] edi +
jz loc_1026F64  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
lea eax [ebp+lpSrc] +
push eax  +
push [ebp+lpMem]  +
call sub_1030712  +
mov esi eax +
cmp esi edi +
jl loc_102707A  +
mov ecx [ebp+var_18] +
push edi  +
call sub_10316AF  +
push [ebp+lpSrc]  +
mov [ebp+var_14] eax +
push 2Bh  +
push eax  +
push offset aSCS  +
push 400h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 18h +
cmp esi edi +
jl loc_1027082  +
push [ebp+lpMem]  +
mov ecx [ebp+var_18] +
call sub_10260DB  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_24] +
jb loc_1026ED9  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1026FD5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+lpSrc] edi +
jz loc_1026FE6  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1026FF6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
pop ebx  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1027007  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1027017  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
cmp [ebp+lpSrc] edi +
jz loc_1027028  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
cmp [ebp+var_1C] edi +
jz loc_1027036  +
push [ebp+var_1C]  +
call ds:SysFreeString  +
cmp [ebp+var_14] edi +
jz loc_1027044  +
push [ebp+var_14]  +
call ds:SysFreeString  +
cmp [ebp+lpMem] edi +
jz loc_102705A  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
push esi  +
push 5C0h  +
jmp loc_1027088  +
push esi  +
push 5C3h  +
jmp loc_1027088  +
push esi  +
push 5C9h  +
jmp loc_1027088  +
push esi  +
push 5CEh  +
jmp loc_1027088  +
push esi  +
push 5D9h  +
push offset aConfiguratio_6  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_1026FF6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
call sub_102517C  +
mov esi eax +
cmp esi ebx +
jge loc_10270EB  +
push esi  +
push 690h  +
push offset aConfiguratio_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1027236  +
cmp [ebp+arg_0] ebx +
jz loc_1027236  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_10270FA  +
sub eax edx +
sar eax 1 +
jz loc_1027236  +
push edi  +
push 800h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
cmp edi ebx +
jnz loc_1027147  +
mov esi 8007000Eh +
push esi  +
push 696h  +
push offset aConfiguratio_7  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_1027215  +
push [ebp+arg_0]  +
push 400h  +
push edi  +
call sub_100D999  +
mov esi eax +
cmp esi ebx +
jge loc_1027163  +
push esi  +
push 699h  +
jmp loc_1027136  +
xor ebx ebx +
mov [ebp+var_4] edi +
inc ebx  +
lea eax [ebp+var_C] +
push eax  +
push 20h  +
push [ebp+var_4]  +
call sub_1014795  +
mov esi eax +
test esi esi +
jl loc_10271E7  +
cmp esi ebx +
jnz loc_1027184  +
mov [ebp+var_10] ebx +
mov edi [ebp+var_4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102718C  +
sub eax edx +
sar eax 1 +
jz loc_10271D9  +
lea eax [ebp+var_4] +
push eax  +
push 3Dh  +
push edi  +
call sub_1014795  +
mov esi eax +
test esi esi +
jl loc_10271EF  +
cmp esi ebx +
jz loc_10271FF  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10271B7  +
sub eax edx +
sar eax 1 +
jz loc_10271FF  +
push [ebp+var_4]  +
mov ecx [ebp+var_8] +
push edi  +
call sub_1025293  +
mov esi eax +
test esi esi +
jl loc_10271F7  +
cmp [ebp+var_10] 0 +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jz loc_1027169  +
jmp loc_102721D  +
push esi  +
push 69Fh  +
jmp loc_102720A  +
push esi  +
push 6ACh  +
jmp loc_102720A  +
push esi  +
push 6B9h  +
jmp loc_102720A  +
mov esi 80070057h +
push esi  +
push 6B5h  +
push offset aConfiguratio_7  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
pop edi  +
jz loc_1027236  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 26Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov dword ptr [ebp+lpPathName] eax +
mov eax [ebp+arg_4] +
xor esi esi +
push 24Ch  +
mov [ebp+var_268] eax +
lea eax [ebp+FindFileData.ftCreationTime] +
push esi  +
push eax  +
mov [ebp+FindFileData.dwFileAttributes] esi +
call memset  +
add esp 0Ch +
mov ebx 208h +
push ebx  +
push esi  +
mov [ebp+var_25C] esi +
mov esi ds:GetProcessHeap +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_10272DC  +
mov eax 8007000Eh +
push eax  +
push 6E4h  +
push offset aConfigurationF  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_258] eax +
call sub_1014247  +
add esp 14h +
jmp loc_102744B  +
push offset aDiagcfg  +
push dword ptr [ebp+lpPathName]  +
push offset aS_S  +
push 104h  +
push eax  +
call sub_100DD8E  +
add esp 14h +
mov [ebp+var_258] eax +
test eax eax +
jge loc_102730F  +
push eax  +
push 6E7h  +
jmp loc_102740F  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpMem]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_10273EF  +
cmp eax 0FFFFFFFFh +
jz loc_10273EF  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov edi eax +
xor ebx ebx +
mov [ebp+var_25C] edi +
cmp edi ebx +
jnz loc_1027365  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_258] eax +
push 6ECh  +
jmp loc_102740F  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+lpPathName]  +
push offset aSS_2  +
push 104h  +
push edi  +
call sub_100DD8E  +
add esp 14h +
cmp eax ebx +
mov [ebp+var_258] eax +
jge loc_1027397  +
push eax  +
push 6F4h  +
jmp loc_102740F  +
push dword ptr [ebp+lpPathName]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jz loc_10273C9  +
mov [ebp+var_258] ebx +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov eax [ebp+var_268] +
mov [eax] edi +
mov [ebp+var_25C] ebx +
jmp loc_1027423  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10273DD  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_258] eax +
jge loc_10273AD  +
push eax  +
push 6FAh  +
jmp loc_102740F  +
call ds:GetLastError  +
test eax eax +
jle loc_1027403  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_258] eax +
push 6EAh  +
push offset aConfigurationF  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpMem]  +
xor ebx ebx +
push ebx  +
call esi  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp+var_25C] ebx +
jz loc_102744B  +
push [ebp+var_25C]  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_258] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_4] ecx +
call sub_1031307  +
mov edi eax +
test edi edi +
jge loc_10274A4  +
push edi  +
push 789h  +
push offset aConfigurationG  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1027906  +
push ebx  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_10274E3  +
mov edi 8007000Eh +
push edi  +
push 78Bh  +
push offset aConfigurationG  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10278F1  +
xor eax eax +
mov [ebx] ax +
mov eax [ebp+var_4] +
cmp dword ptr [eax+84h] 0 +
push esi  +
mov esi 400h +
jz loc_1027559  +
push offset aCab  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027517  +
push edi  +
push 793h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+84h]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027538  +
push edi  +
push 796h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 799h  +
jmp loc_10278DC  +
mov ecx [eax+0D0h] +
dec ecx  +
cmp ecx 0Ch +
ja loc_10278D1  +
jmp ds:off_102790F[ecx*4]  +
push offset aId_0  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102758D  +
push edi  +
push 79Fh  +
jmp loc_10278DC  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7A2h  +
jmp loc_10278DC  +
push offset aCab  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10275CF  +
push edi  +
push 7A8h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+84h]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10275F0  +
push edi  +
push 7ABh  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7AEh  +
jmp loc_10278DC  +
push offset aPath  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102762E  +
push edi  +
push 7B5h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+8Ch]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102764F  +
push edi  +
push 7B8h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7BBh  +
jmp loc_10278DC  +
push offset aPath  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102768D  +
push edi  +
push 7C0h  +
jmp loc_10278DC  +
mov eax [ebp+var_8] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10276BA  +
push edi  +
push 7C6h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7C9h  +
jmp loc_10278DC  +
cmp dword ptr [eax+6Ch] 0 +
jz loc_10277F8  +
push offset aSp  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027702  +
push edi  +
push 7D6h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+6Ch]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7D9h  +
jmp loc_10278DC  +
push offset aUp  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027741  +
push edi  +
push 7E2h  +
jmp loc_10278DC  +
push dword_104E198  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102775F  +
push edi  +
push 7E5h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7E8h  +
jmp loc_10278DC  +
push offset aDt  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102779D  +
push edi  +
push 7EDh  +
jmp loc_10278DC  +
push dword_104E198  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277BB  +
push edi  +
push 7F0h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7F3h  +
jmp loc_10278DC  +
push offset aBadid  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10277F5  +
push edi  +
push 7F8h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+0C0h] 0 +
jz loc_102785F  +
push offset aParam  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102781E  +
push edi  +
push 806h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+0C0h]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102783F  +
push edi  +
push 809h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102785C  +
push edi  +
push 80Ch  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+0C4h] 0 +
jz loc_10278BA  +
push offset aAf  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027882  +
push edi  +
push 814h  +
jmp loc_10278DC  +
mov eax [ebp+var_4] +
push dword ptr [eax+0C4h]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10278A0  +
push edi  +
push 817h  +
jmp loc_10278DC  +
push offset asc_1007508  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_10278BA  +
push edi  +
push 81Ah  +
jmp loc_10278DC  +
push [ebp+arg_0]  +
push ebx  +
call sub_1013FC3  +
mov edi eax +
test edi edi +
jge loc_10278F0  +
push edi  +
push 821h  +
jmp loc_10278DC  +
mov edi 8000FFFFh +
push edi  +
push 7FDh  +
push offset aConfigurationG  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
test ebx ebx +
jz loc_1027905  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_28] eax +
xor esi esi +
xor eax eax +
mov [ebp+rguid.Data1] esi +
lea edi [ebp+rguid.Data2] +
stos   +
stos   +
stos   +
lea eax [ebp+var_24] +
push eax  +
mov ebx ecx +
mov [ebp+lpsz] esi +
mov [ebp+var_20] esi +
mov [ebp+var_24] esi +
call sub_1031307  +
mov edi eax +
cmp edi esi +
jge loc_10279A9  +
push edi  +
push 84Ch  +
push offset aConfiguratio_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10280EA  +
push 800h  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_10279D3  +
mov edi 8007000Eh +
push edi  +
push 84Eh  +
jmp loc_1028092  +
xor ecx ecx +
mov [eax] cx +
cmp [ebx+84h] esi +
jz loc_1027A45  +
push offset aCab  +
mov esi 400h +
push esi  +
push eax  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027A02  +
push edi  +
push 854h  +
jmp loc_1028092  +
push dword ptr [ebx+84h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027A22  +
push edi  +
push 857h  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027DF7  +
push edi  +
push 85Ah  +
jmp loc_1028092  +
mov eax [ebx+0D0h] +
dec eax  +
cmp eax 9 +
ja loc_1028087  +
mov esi 400h +
jmp ds:off_1028100[eax*4]  +
push offset aId_0  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027A80  +
push edi  +
push 863h  +
jmp loc_1028092  +
mov ecx [ebp+var_24] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CB1  +
push edi  +
push 866h  +
jmp loc_1028092  +
push offset aCab  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027AC6  +
push edi  +
push 86Ch  +
jmp loc_1028092  +
push dword ptr [ebx+84h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027AE6  +
push edi  +
push 86Fh  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CB1  +
push edi  +
push 872h  +
jmp loc_1028092  +
push offset aPath  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027B28  +
push edi  +
push 879h  +
jmp loc_1028092  +
push dword ptr [ebx+8Ch]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027B48  +
push edi  +
push 87Ch  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CB1  +
push edi  +
push 87Fh  +
jmp loc_1028092  +
push offset aPath  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027B8A  +
push edi  +
push 884h  +
jmp loc_1028092  +
mov eax [ebp+var_24] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027BB9  +
push edi  +
push 88Ah  +
jmp loc_1028092  +
mov eax [ebp+var_24] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
test eax eax +
jz loc_1027C10  +
mov ecx eax +
lea edi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_1027BD6  +
sub ecx edi +
sar ecx 1 +
cmp ecx 1 +
jbe loc_1027C10  +
cmp word ptr [eax+ecx*2-2] 5Ch +
jnz loc_1027C10  +
push offset asc_10017E4  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027C10  +
push edi  +
push 89Ah  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CB1  +
push edi  +
push 89Fh  +
jmp loc_1028092  +
push offset aDci  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027C52  +
push edi  +
push 8A4h  +
jmp loc_1028092  +
push dword ptr [ebx+74h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027C6F  +
push edi  +
push 8A7h  +
jmp loc_1028092  +
cmp dword ptr [ebx+6Ch] 0 +
jz loc_1027CB1  +
push offset aSp  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027C94  +
push edi  +
push 8B1h  +
jmp loc_1028092  +
push dword ptr [ebx+6Ch]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CB1  +
push edi  +
push 8B4h  +
jmp loc_1028092  +
cmp dword ptr [ebx+0B8h] 0 +
jz loc_1027CF9  +
push offset aContext  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CD9  +
push edi  +
push 8C2h  +
jmp loc_1028092  +
push dword ptr [ebx+0B8h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027CF9  +
push edi  +
push 8C5h  +
jmp loc_1028092  +
cmp dword ptr [ebx+24h] 0 +
jz loc_1027D1E  +
push offset aDisconnectedYe  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027D1E  +
push edi  +
push 8D0h  +
jmp loc_1028092  +
cmp dword ptr [ebx+14h] 0 +
jz loc_1027DF7  +
push offset aElev  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027D47  +
push edi  +
push 8D5h  +
jmp loc_1028092  +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpsz] eax +
test eax eax +
jnz loc_1027D72  +
mov edi 8007000Eh +
push edi  +
push 8DAh  +
jmp loc_1028092  +
lea eax [ebp+rguid] +
push eax  +
call ds:UuidCreate  +
test eax eax +
jz loc_1027D97  +
cmp eax 720h +
jz loc_1027D97  +
mov edi 80004005h +
push edi  +
push 8DFh  +
jmp loc_1028092  +
push 100h  +
push [ebp+lpsz]  +
lea eax [ebp+rguid] +
push eax  +
call ds:StringFromGUID2  +
test eax eax +
jnz loc_1027DBD  +
mov edi 80004005h +
push edi  +
push 8E4h  +
jmp loc_1028092  +
push [ebp+lpsz]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027DDA  +
push edi  +
push 8E8h  +
jmp loc_1028092  +
push [ebp+lpsz]  +
lea eax [ebx+78h] +
push eax  +
call sub_101453D  +
mov edi eax +
test edi edi +
jge loc_1027DF7  +
push edi  +
push 8EBh  +
jmp loc_1028092  +
mov ecx ebx +
call sub_101C353  +
test eax eax +
jnz loc_1027E07  +
cmp [ebx+4Ch] eax +
jz loc_1027E4B  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_1027E2C  +
push offset aSkipForce  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027E4B  +
push edi  +
push 8F5h  +
jmp loc_1028092  +
push offset aSkipYes  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027E4B  +
push edi  +
push 8FBh  +
jmp loc_1028092  +
cmp dword ptr [ebx+2Ch] 0 +
jz loc_1027E70  +
push offset aCustomYes  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027E70  +
push edi  +
push 901h  +
jmp loc_1028092  +
cmp dword ptr [ebx+0C0h] 0 +
jz loc_1027ED7  +
push offset aParam  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027E98  +
push edi  +
push 909h  +
jmp loc_1028092  +
push dword ptr [ebx+0C0h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027EB8  +
push edi  +
push 90Ch  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027ED7  +
push edi  +
push 90Fh  +
jmp loc_1028092  +
cmp dword ptr [ebx+0C4h] 0 +
jz loc_1027F3E  +
push offset aAf  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027EFF  +
push edi  +
push 917h  +
jmp loc_1028092  +
push dword ptr [ebx+0C4h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027F1F  +
push edi  +
push 91Ah  +
jmp loc_1028092  +
push offset asc_1007508  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027F3E  +
push edi  +
push 91Dh  +
jmp loc_1028092  +
cmp dword ptr [ebx+0D4h] 0 +
jz loc_1027FDE  +
push offset aModal  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027F6A  +
push edi  +
push 925h  +
jmp loc_1028092  +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
test eax eax +
jnz loc_1027F95  +
mov edi 8007000Eh +
push edi  +
push 927h  +
jmp loc_1028092  +
push dword ptr [ebx+0D4h]  +
push offset aU  +
push 100h  +
push [ebp+var_20]  +
call sub_100DD8E  +
mov edi eax +
add esp 10h +
test edi edi +
jge loc_1027FC1  +
push edi  +
push 92Ah  +
jmp loc_1028092  +
push [ebp+var_20]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1027FDE  +
push edi  +
push 92Dh  +
jmp loc_1028092  +
cmp dword ptr [ebx+94h] 0 +
jz loc_1028023  +
push offset aEp  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1028006  +
push edi  +
push 932h  +
jmp loc_1028092  +
push dword ptr [ebx+94h]  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1028023  +
push edi  +
push 935h  +
jmp loc_1028092  +
cmp dword ptr [ebx+64h] 0 +
jnz loc_1028061  +
push offset aMoreoptions  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1028045  +
push edi  +
push 93Dh  +
jmp loc_1028092  +
push offset aFalse  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_1028061  +
push edi  +
push 940h  +
jmp loc_1028092  +
push offset aElevatedYes  +
push esi  +
mov esi [ebp+lpMem] +
push esi  +
call sub_1014151  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jge loc_1028080  +
push edi  +
push 947h  +
jmp loc_1028092  +
mov eax [ebp+var_28] +
mov [eax] esi +
jmp loc_10280BE  +
mov edi 80004005h +
push edi  +
push 8BAh  +
push offset aConfiguratio_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
xor ebx ebx +
add esp 14h +
cmp [ebp+lpMem] ebx +
jz loc_10280BE  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpsz] ebx +
jz loc_10280D4  +
push [ebp+lpsz]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_20] ebx +
jz loc_10280EA  +
push [ebp+var_20]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
test ebx ebx +
jnz loc_1028152  +
mov edi 80070057h +
push edi  +
push 9A5h  +
jmp loc_102816D  +
lea eax [ebp+var_4] +
push eax  +
push 104h  +
push ebx  +
call sub_101420B  +
mov edi eax +
test edi edi +
jge loc_1028183  +
push edi  +
push 9A8h  +
push offset aConfigurationS  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10281CB  +
push esi  +
mov esi [ebp+var_4] +
dec esi  +
jz loc_10281A8  +
cmp word ptr [ebx+esi*2] 5Ch +
jz loc_1028196  +
dec esi  +
jnz loc_102818A  +
jmp loc_10281A4  +
inc esi  +
movzx eax word ptr [ebx+esi*2] +
mov [ebp+var_8] eax +
xor eax eax +
mov [ebx+esi*2] ax +
test esi esi +
ja loc_10281B5  +
mov edi 80004005h +
push edi  +
push 9BCh  +
jmp loc_10281F3  +
push ebx  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jz loc_10281D3  +
xor edi edi +
mov ax word ptr [ebp+var_8] +
mov [ebx+esi*2] ax +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
call ds:GetLastError  +
test eax eax +
jle loc_10281E7  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_10281C2  +
push edi  +
push 9C0h  +
push offset aConfigurationS  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10281CA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_28] +
mov [ebp+lpSrc] edi +
mov [ebp+var_10] edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_24] edi +
mov [ebp+var_28] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_20] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_34] edi +
mov uID 191h +
push eax  +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] edi +
mov [ebp+lpPathName] edi +
mov [ebp+var_38] edi +
mov [ebx] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_102826E  +
push esi  +
push 2C8h  +
jmp loc_1028784  +
push 208h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_18] eax +
cmp eax edi +
jnz loc_1028298  +
mov esi 8007000Eh +
push esi  +
push 2CAh  +
jmp loc_1028784  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+lpFileName]  +
call sub_1025F12  +
mov esi eax +
cmp esi edi +
jge loc_10282B5  +
push esi  +
push 2CDh  +
jmp loc_1028784  +
push [ebp+lpMem]  +
mov eax [ebp+var_1C] +
add eax 8Ch +
push eax  +
call sub_101453D  +
mov esi eax +
cmp esi edi +
jge loc_10282D7  +
push esi  +
push 2D0h  +
jmp loc_1028784  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+lpMem]  +
call sub_1014986  +
mov esi eax +
cmp esi edi +
jge loc_10282F4  +
push esi  +
push 2D3h  +
jmp loc_1028784  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset aSupportpacka_4  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jge loc_102831A  +
push esi  +
push 2D6h  +
jmp loc_1028784  +
jnz loc_1028343  +
push [ebp+var_10]  +
mov ecx [ebp+var_1C] +
call sub_10264B7  +
mov esi eax +
cmp esi edi +
jge loc_1028338  +
push esi  +
push 2D9h  +
jmp loc_1028784  +
mov dword ptr [ebx] 1 +
jmp loc_102879C  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1028353  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
push offset aWindirDiagnost  +
mov ebx 104h +
push ebx  +
push [ebp+var_18]  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jge loc_1028377  +
push esi  +
push 2E4h  +
jmp loc_1028784  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_18]  +
call sub_1025F12  +
mov esi eax +
cmp esi edi +
jge loc_1028394  +
push esi  +
push 2E7h  +
jmp loc_1028784  +
lea eax [ebp+var_34] +
push eax  +
push ebx  +
push [ebp+var_20]  +
call sub_101420B  +
mov esi eax +
cmp esi edi +
jge loc_10283B2  +
push esi  +
push 2EDh  +
jmp loc_1028784  +
mov eax [ebp+var_34] +
dec eax  +
push eax  +
push [ebp+var_20]  +
push [ebp+lpFileName]  +
call ds:_wcsnicmp  +
mov ebx [ebp+var_1C] +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebx+4] eax +
cmp [ebp+arg_4] edi +
jz loc_10283EA  +
cmp eax edi +
jnz loc_10283EA  +
mov esi 80070005h +
push esi  +
push 2F3h  +
jmp loc_1028784  +
cmp [ebp+lpMem] edi +
jz loc_1028403  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
push offset aXmlnsCfgHttpWw  +
push [ebp+var_10]  +
call sub_1015245  +
mov esi eax +
cmp esi edi +
jge loc_1028421  +
push esi  +
push 2FDh  +
jmp loc_1028784  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset aCfgPackageco_8  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jge loc_1028447  +
push esi  +
push 303h  +
jmp loc_1028784  +
jnz loc_1028450  +
mov dword ptr [ebx+24h] 1 +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1028460  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_1028480  +
push [ebp+var_10]  +
mov ecx ebx +
call sub_102682E  +
mov esi eax +
cmp esi edi +
jge loc_1028480  +
push esi  +
push 30Fh  +
jmp loc_1028784  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push offset aCfgPackageco_9  +
push eax  +
call dword ptr [ecx+90h]  +
mov esi eax +
cmp esi edi +
jge loc_10284A6  +
push esi  +
push 316h  +
jmp loc_1028784  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_10284C4  +
push esi  +
push 319h  +
jmp loc_1028784  +
cmp [ebp+var_24] edi +
jz loc_102873F  +
push 208h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpPathName] eax +
cmp eax edi +
jnz loc_10284F7  +
mov esi 8007000Eh +
push esi  +
push 320h  +
jmp loc_1028784  +
push eax  +
push 104h  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jnz loc_102852C  +
call ds:GetLastError  +
cmp eax edi +
jle loc_102851B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi edi +
jge loc_102852C  +
push esi  +
push 323h  +
jmp loc_1028784  +
push [ebp+lpFileName]  +
mov ecx ebx +
call sub_102812D  +
mov esi eax +
cmp esi edi +
jge loc_1028547  +
push esi  +
push 326h  +
jmp loc_1028784  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+var_24]  +
mov [ebp+var_38] 1 +
call sub_1015DFA  +
mov esi eax +
cmp esi edi +
jge loc_102856B  +
push esi  +
push 32Bh  +
jmp loc_1028784  +
push [ebp+var_2C]  +
mov ecx [ebp+var_28] +
mov dword ptr [ebx+0D0h] 7 +
call sub_10311A1  +
mov esi eax +
cmp esi edi +
jge loc_1028591  +
push esi  +
push 330h  +
jmp loc_1028784  +
cmp [ebp+var_24] 10h +
jle loc_10285A7  +
mov esi 80070057h +
push esi  +
push 334h  +
jmp loc_1028784  +
xor ebx ebx +
cmp [ebp+var_2C] edi +
jbe loc_10286A6  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_10285C2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp [ebp+lpSrc] edi +
jz loc_10285D3  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
cmp [ebp+lpMem] edi +
jz loc_10285EC  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jl loc_102870F  +
lea eax [ebp+lpSrc] +
push eax  +
push offset aPath_0  +
push [ebp+var_4]  +
call sub_1014E4A  +
mov esi eax +
cmp esi edi +
jl loc_1028717  +
push [ebp+lpSrc]  +
push 104h  +
push [ebp+var_18]  +
call sub_102EF8F  +
mov esi eax +
cmp esi edi +
jl loc_102871F  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+var_18]  +
call sub_1025F12  +
mov esi eax +
cmp esi edi +
jl loc_1028727  +
mov eax [ebp+var_28] +
push [ebp+lpMem]  +
mov [eax+80h] ebx +
mov eax [eax+78h] +
mov ecx [eax+ebx*4] +
call sub_102607B  +
mov ecx [ebp+var_1C] +
push ebx  +
push [ebp+var_4]  +
call sub_10263EF  +
mov esi eax +
cmp esi edi +
jl loc_102872F  +
mov eax [ebp+var_28] +
mov [eax+80h] ebx +
mov eax [eax+78h] +
push [ebp+var_4]  +
mov ecx [eax+ebx*4] +
call sub_1031DA2  +
mov esi eax +
cmp esi edi +
jl loc_1028737  +
inc ebx  +
cmp ebx [ebp+var_2C] +
jb loc_10285B2  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_10286B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp [ebp+lpSrc] edi +
jz loc_10286C7  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
cmp [ebp+lpMem] edi +
jz loc_10286E0  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
push [ebp+lpPathName]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jnz loc_102873F  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1028701  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi edi +
jge loc_102873F  +
push esi  +
push 362h  +
jmp loc_1028784  +
push esi  +
push 33Dh  +
jmp loc_1028784  +
push esi  +
push 340h  +
jmp loc_1028784  +
push esi  +
push 346h  +
jmp loc_1028784  +
push esi  +
push 349h  +
jmp loc_1028784  +
push esi  +
push 351h  +
jmp loc_1028784  +
push esi  +
push 357h  +
jmp loc_1028784  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_102874F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
push offset aCfgPackagec_10  +
push [ebp+var_10]  +
call sub_1026D0A  +
mov esi eax +
cmp esi edi +
jge loc_102876A  +
push esi  +
push 367h  +
jmp loc_1028784  +
cmp [ebp+var_38] 1 +
jz loc_102879A  +
mov eax [ebp+var_1C] +
mov esi 80070057h +
push esi  +
mov [eax+0D0h] edi +
push 36Dh  +
push offset aConfiguratio_9  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102879C  +
xor esi esi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_10287AC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_10287BC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_10287CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
cmp [ebp+lpSrc] edi +
jz loc_10287DD  +
push [ebp+lpSrc]  +
call ds:SysFreeString  +
mov [ebp+lpSrc] edi +
cmp [ebp+lpMem] edi +
jz loc_10287F7  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
mov ebx ds:HeapFree +
push eax  +
call ebx  +
jmp loc_10287FD  +
mov ebx ds:HeapFree +
cmp [ebp+var_18] edi +
jz loc_102880F  +
push [ebp+var_18]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
cmp [ebp+var_20] edi +
jz loc_1028821  +
push [ebp+var_20]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
cmp [ebp+lpPathName] edi +
jz loc_1028833  +
push [ebp+lpPathName]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
push 2Ch  +
lea eax [ebp-40h] +
push ebx  +
push eax  +
mov [ebp-44h] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp-10h] +
mov [ebp-10h] ebx +
mov dword ptr [esi+0D0h] 0Ah +
mov [ebp-14h] ebx +
push eax  +
mov uID 199h +
call sub_1031307  +
mov edi eax +
cmp edi ebx +
jge loc_10288A3  +
push edi  +
push 462h  +
push offset aConfigurati_11  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_10289ED  +
push dword ptr [ebp+8]  +
mov ecx [ebp-10h] +
call sub_101ABBC  +
cmp [esi+0A0h] ebx +
jnz loc_10288EE  +
push 0Ch  +
call sub_10361AF  +
pop ecx  +
mov [ebp-14h] eax +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_10288D1  +
mov ecx eax +
call sub_1029294  +
jmp loc_10288D3  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi+0A0h] eax +
cmp eax ebx +
jnz loc_10288EE  +
mov edi 8007000Eh +
push edi  +
push 468h  +
jmp loc_1028892  +
mov ecx [esi+0A0h] +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1029BEA  +
mov edi eax +
cmp edi ebx +
jge loc_102890E  +
push edi  +
push 46Fh  +
jmp loc_1028892  +
xor ebx ebx +
inc ebx  +
cmp edi ebx +
jz loc_10289F5  +
push 0  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_1026C5E  +
mov edi eax +
test edi edi +
jge loc_102893A  +
push edi  +
push 478h  +
jmp loc_10289E2  +
mov edi ds:_wcsnicmp +
push 7  +
push offset aHttp  +
push dword ptr [ebp-3Ch]  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_102899A  +
push 8  +
push offset aHttps  +
push dword ptr [ebp-3Ch]  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_102899A  +
lea eax [ebp-14h] +
push eax  +
push ebx  +
push 0  +
push dword ptr [ebp-3Ch]  +
mov ecx esi +
call sub_102820E  +
mov edi eax +
test edi edi +
jge loc_1028985  +
push edi  +
push 48Dh  +
jmp loc_10289E2  +
cmp dword ptr [esi+0D0h] 4 +
jnz loc_10289F5  +
mov dword ptr [esi+0D0h] 0Ah +
jmp loc_10289F5  +
mov ecx [ebp-10h] +
push ebx  +
mov dword ptr [esi+0D0h] 9 +
mov [esi+4] ebx +
call sub_10311A1  +
mov eax [ebp-10h] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov edi [eax] +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_101ABBC  +
push ebx  +
lea eax [ebp-44h] +
push eax  +
push edi  +
mov ecx esi +
call sub_1026C5E  +
mov edi eax +
test edi edi +
jge loc_10289F5  +
push edi  +
push 486h  +
push offset aConfigurati_11  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
lea eax [ebp-44h] +
push eax  +
call sub_10292E3  +
mov eax edi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea eax [edi+84h] +
push eax  +
push [ebp+lpFileName]  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
call sub_1025F12  +
mov esi eax +
cmp esi ebx +
jge loc_1028A59  +
push esi  +
push 610h  +
push offset aConfigurati_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1028B8E  +
lea eax [ebp+var_8] +
push eax  +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1028A70  +
push esi  +
push 613h  +
jmp loc_1028A40  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpFileName] eax +
cmp eax ebx +
jnz loc_1028A9A  +
mov esi 8007000Eh +
push esi  +
push 615h  +
jmp loc_1028B2E  +
push 104h  +
push eax  +
push offset aCabpkg  +
mov uID 197h +
call sub_102FEEB  +
mov esi eax +
cmp esi ebx +
jge loc_1028AC2  +
push esi  +
push 61Ch  +
jmp loc_1028B2E  +
push [ebp+lpFileName]  +
push dword ptr [edi+84h]  +
call sub_102E6EB  +
mov esi eax +
cmp esi ebx +
jge loc_1028ADE  +
push esi  +
push 622h  +
jmp loc_1028B2E  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+lpFileName]  +
call sub_1027243  +
test eax eax +
jnz loc_1028B18  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_4]  +
mov ecx edi +
call sub_102820E  +
mov esi eax +
cmp esi ebx +
jge loc_1028B0C  +
push esi  +
push 62Eh  +
jmp loc_1028B2E  +
mov dword ptr [edi+0D0h] 6 +
jmp loc_1028B64  +
mov ecx [ebp+var_8] +
push 1  +
call sub_10311A1  +
mov esi eax +
cmp esi ebx +
jge loc_1028B44  +
push esi  +
push 636h  +
push offset aConfigurati_10  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1028B64  +
mov eax [ebp+var_8] +
push [ebp+lpFileName]  +
mov [eax+80h] ebx +
mov eax [eax+78h] +
mov ecx [eax] +
call sub_102607B  +
mov dword ptr [edi+0D0h] 5 +
mov edi ds:HeapFree +
cmp [ebp+lpFileName] ebx +
jz loc_1028B7C  +
push [ebp+lpFileName]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
cmp [ebp+var_4] ebx +
jz loc_1028B8E  +
push [ebp+var_4]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp+var_10] +
push eax  +
mov edi ecx +
mov [ebp+hMem] ebx +
mov [ebp+lpFileName] ebx +
mov [ebp+pNumArgs] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_10] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1028BF1  +
push esi  +
push 121h  +
push offset aConfigurationP  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1029274  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax ebx +
jnz loc_1028C2F  +
mov esi 8007000Eh +
push esi  +
push 123h  +
push offset aConfigurationP  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102924E  +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
push eax  +
push [ebp+pNumArgs]  +
mov ecx edi +
mov [ebp+hMem] eax +
call sub_1025D4F  +
mov esi eax +
cmp esi ebx +
jge loc_1028C5C  +
push esi  +
push 128h  +
jmp loc_1028C16  +
cmp esi 1 +
jz loc_102924E  +
cmp dword ptr [edi+0D0h] 2 +
jz loc_102924E  +
mov ecx [ebp+pNumArgs] +
xor eax eax +
inc eax  +
dec ecx  +
cmp ecx eax +
mov [ebp+var_20] eax +
jle loc_102920D  +
mov ebx [ebp+hMem] +
add ebx 8 +
mov uID 192h +
mov eax [ebx-4] +
movzx ecx word ptr [eax] +
mov [ebp+var_4] eax +
cmp cx 2Dh +
jz loc_1028CA9  +
cmp cx 2Fh +
jnz loc_1028CAE  +
inc eax  +
inc eax  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+lpFileName] esi +
jz loc_1028CC9  +
push [ebp+lpFileName]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpFileName] esi +
mov esi ds:_wcsicmp +
push offset aId_1  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028D00  +
push dword ptr [ebx]  +
inc [ebp+var_8]  +
mov ecx edi +
call sub_1028841  +
mov esi eax +
test esi esi +
jge loc_1028DFA  +
push esi  +
push 141h  +
jmp loc_1029222  +
push offset aPath_1  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028E0B  +
inc [ebp+var_8]  +
lea eax [ebp+lpFileName] +
push eax  +
push dword ptr [ebx]  +
call sub_1025F12  +
mov esi eax +
test esi esi +
jl loc_102919D  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_10291A5  +
test al 10h +
jz loc_1028D5B  +
mov ecx [ebp+var_10] +
push 1  +
call sub_10311A1  +
mov esi eax +
test esi esi +
jl loc_10291C3  +
push [ebp+lpFileName]  +
jmp loc_1028DBB  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpBuffer]  +
mov esi 104h +
push esi  +
push [ebp+lpFileName]  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_10291DB  +
cmp eax esi +
ja loc_10291DB  +
mov eax [ebp+FilePart] +
cmp eax [ebp+lpBuffer] +
jbe loc_10291DB  +
xor ecx ecx +
push offset a_diagpkg  +
mov [eax-2] cx +
push [ebp+FilePart]  +
call sub_1014057  +
test eax eax +
jz loc_1028DDE  +
mov ecx [ebp+var_10] +
push 1  +
call sub_10311A1  +
mov esi eax +
test esi esi +
jl loc_10291CB  +
push [ebp+lpBuffer]  +
mov eax [ebp+var_10] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov ecx [eax] +
call sub_102607B  +
mov dword ptr [edi+0D0h] 4 +
jmp loc_102916F  +
lea eax [ebp+var_2C] +
push eax  +
push 1  +
push 1  +
push [ebp+lpFileName]  +
mov ecx edi +
call sub_102820E  +
mov esi eax +
test esi esi +
jl loc_10291D3  +
cmp esi 1 +
jnz loc_102916F  +
mov [ebp+var_24] esi +
jmp loc_102916F  +
push offset aCab_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028E46  +
inc [ebp+var_8]  +
cmp [ebp+var_8] 1 +
jg loc_102918D  +
push dword ptr [ebx]  +
mov ecx edi +
call sub_1028A0D  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 193h  +
jmp loc_1029222  +
push offset aDci_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028E80  +
mov dword ptr [edi+0D0h] 3 +
push dword ptr [ebx]  +
lea eax [edi+74h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 19Ch  +
jmp loc_1029222  +
push offset aSp_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028EDA  +
inc [ebp+var_8]  +
lea esi [edi+6Ch] +
mov eax [esi] +
test eax eax +
jz loc_1028EAF  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
push dword ptr [ebx]  +
push esi  +
call sub_101453D  +
mov esi eax +
test esi esi +
jl loc_10291E8  +
xor eax eax +
cmp dword ptr [edi+0D0h] 3 +
setz al  +
inc eax  +
inc eax  +
mov [edi+0D0h] eax +
jmp loc_102916F  +
push offset aContext_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028F0D  +
push dword ptr [ebx]  +
lea eax [edi+0B8h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1B1h  +
jmp loc_1029222  +
push offset aParam_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028F53  +
push dword ptr [ebx]  +
lea eax [edi+0C0h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jl loc_10291F0  +
push dword ptr [ebx]  +
mov ecx edi +
call sub_10270A5  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1B7h  +
jmp loc_1029222  +
push offset aAf_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028F9D  +
lea eax [edi+0C4h] +
push eax  +
push dword ptr [ebx]  +
call sub_1025F12  +
mov esi eax +
test esi esi +
jl loc_10291F8  +
push dword ptr [edi+0C4h]  +
mov ecx edi +
call sub_1025DF9  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1BDh  +
jmp loc_1029222  +
push offset aElevated  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028FB8  +
mov dword ptr [edi] 1 +
jmp loc_102916F  +
push offset aAdvanced  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028FD4  +
mov dword ptr [edi+1Ch] 1 +
jmp loc_102916F  +
push offset aDisconnected  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1028FF0  +
mov dword ptr [edi+24h] 1 +
jmp loc_102916F  +
push offset aCustom  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102900C  +
mov dword ptr [edi+2Ch] 1 +
jmp loc_102916F  +
push offset aSkip  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029042  +
mov dword ptr [edi+44h] 1 +
push offset aForce  +
push dword ptr [ebx]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102916F  +
mov dword ptr [edi+40h] 1 +
jmp loc_102916F  +
push offset aDt_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029080  +
inc [ebp+var_8]  +
push offset dword_104E198  +
mov dword ptr [edi+0D0h] 0Bh +
push dword ptr [ebx]  +
call sub_1025F12  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1DBh  +
jmp loc_1029222  +
push offset aUp_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10290BE  +
inc [ebp+var_8]  +
push offset dword_104E198  +
mov dword ptr [edi+0D0h] 0Ch +
push dword ptr [ebx]  +
call sub_1025F12  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1E2h  +
jmp loc_1029222  +
push offset aElev_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10290F5  +
mov dword ptr [edi+10h] 1 +
push dword ptr [ebx]  +
lea eax [edi+78h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1EAh  +
jmp loc_1029222  +
push offset aModal_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029116  +
push dword ptr [ebx]  +
call ds:_wtol  +
pop ecx  +
mov [edi+0D4h] eax +
jmp loc_102916F  +
push offset aEp_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029145  +
push dword ptr [ebx]  +
lea eax [edi+94h] +
push eax  +
call sub_101453D  +
mov esi eax +
test esi esi +
jge loc_102916F  +
push esi  +
push 1EFh  +
jmp loc_1029222  +
push offset aMoreoptions_0  +
push [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029200  +
push offset aFalse  +
push dword ptr [ebx]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1029200  +
and [edi+64h] eax +
add [ebp+var_20] 2 +
mov eax [ebp+pNumArgs] +
add ebx 8 +
dec eax  +
cmp [ebp+var_20] eax +
jl loc_1028C8A  +
cmp [ebp+var_8] 1 +
jle loc_102920D  +
mov esi 80070057h +
push esi  +
push 1FBh  +
jmp loc_1029222  +
push esi  +
push 151h  +
jmp loc_1029222  +
call ds:GetLastError  +
test eax eax +
jle loc_10291B9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 156h  +
jmp loc_1029222  +
push esi  +
push 15Bh  +
jmp loc_1029222  +
push esi  +
push 173h  +
jmp loc_1029222  +
push esi  +
push 17Fh  +
jmp loc_1029222  +
mov esi 80028016h +
push esi  +
push 16Dh  +
jmp loc_1029222  +
push esi  +
push 1A5h  +
jmp loc_1029222  +
push esi  +
push 1B4h  +
jmp loc_1029222  +
push esi  +
push 1BAh  +
jmp loc_1029222  +
mov esi 80070057h +
push esi  +
push 1F5h  +
jmp loc_1029222  +
lea eax [ebp+var_30] +
push eax  +
call sub_102517C  +
mov esi eax +
test esi esi +
jge loc_1029236  +
push esi  +
push 1FFh  +
push offset aConfigurationP  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpFileName] 0 +
jz loc_102924E  +
push [ebp+lpFileName]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor ebx ebx +
cmp [ebp+lpBuffer] ebx +
jz loc_1029266  +
push [ebp+lpBuffer]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hMem] ebx +
jz loc_1029274  +
push [ebp+hMem]  +
call ds:LocalFree  +
test esi esi +
jl loc_1029288  +
cmp [ebp+var_24] 0 +
jz loc_1029288  +
mov dword ptr [edi+0D0h] 0Dh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax ecx +
xor ecx ecx +
mov [eax+8] ecx +
mov [eax+4] ecx +
mov [eax] ecx +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_10292DC  +
push eax  +
call ds:FreeLibrary  +
test eax eax +
jz loc_10292C1  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
push offset aProblemUnloadi  +
push 38h  +
push offset aProviderProvid  +
push offset aDwzDebugSDS  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1029395  +
mov eax [esi+14h] +
push edi  +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_102930B  +
push eax  +
call edi  +
mov [esi+14h] ebx +
mov eax [esi] +
cmp eax ebx +
jz loc_1029316  +
push eax  +
call edi  +
mov [esi] ebx +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1029323  +
push eax  +
call edi  +
mov [esi+0Ch] ebx +
mov eax [esi+4] +
cmp eax ebx +
jz loc_1029330  +
push eax  +
call edi  +
mov [esi+4] ebx +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_102933D  +
push eax  +
call edi  +
mov [esi+10h] ebx +
mov eax [esi+8] +
cmp eax ebx +
jz loc_102934A  +
push eax  +
call edi  +
mov [esi+8] ebx +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_1029357  +
push eax  +
call edi  +
mov [esi+18h] ebx +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_1029364  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
mov eax [esi+2Ch] +
mov edi ds:HeapFree +
cmp eax ebx +
jz loc_102937F  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [esi+2Ch] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_1029394  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [esi+20h] ebx +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
lea edx [ebp+psa] +
push edx  +
xor esi esi +
push eax  +
mov [ebp+psa] esi +
mov [ebp+ppvData] esi +
call dword ptr [ecx+30h]  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_10293CE  +
push eax  +
push 1BCh  +
jmp loc_102940C  +
cmp [ebp+psa] esi +
jz loc_1029492  +
lea eax [ebp+ppvData] +
push eax  +
push [ebp+psa]  +
call ds:SafeArrayAccessData  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_10293F3  +
push eax  +
push 1C0h  +
jmp loc_102940C  +
mov eax [ebp+psa] +
mov eax [eax+10h] +
cmp eax 14h +
jz loc_1029422  +
mov eax 80070057h +
push eax  +
mov [ebp+arg_0] eax +
push 1CDh  +
push offset aProviderGetpub  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1029492  +
push ebx  +
push edi  +
mov edi ds:GetProcessHeap +
push 14h  +
push esi  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx esi +
jnz loc_1029460  +
mov eax 8007000Eh +
push eax  +
push 1D1h  +
push offset aProviderGetpub  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+arg_0] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1029490  +
xor eax eax +
mov ecx [ebp+ppvData] +
mov cl [eax+ecx] +
mov [eax+ebx] cl +
inc eax  +
cmp eax 14h +
jb loc_1029462  +
mov esi [ebp+arg_4] +
mov eax [esi+2Ch] +
test eax eax +
jz loc_102948B  +
push eax  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
and dword ptr [esi+2Ch] 0 +
mov [esi+2Ch] ebx +
xor esi esi +
pop edi  +
pop ebx  +
cmp [ebp+ppvData] esi +
jz loc_10294A0  +
push [ebp+psa]  +
call ds:SafeArrayUnaccessData  +
cmp [ebp+psa] esi +
pop esi  +
jz loc_10294AF  +
push [ebp+psa]  +
call ds:SafeArrayDestroy  +
mov eax [ebp+arg_0] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push esi  +
lea edx [ebp+var_C] +
xor ebx ebx +
push edx  +
push eax  +
mov [ebp+rgIndices] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_C] ebx +
call dword ptr [ecx+3Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_10294EB  +
push esi  +
push 20Ch  +
jmp loc_102950E  +
mov eax [ebp+var_C] +
cmp eax ebx +
jnz loc_10294FD  +
mov eax [ebp+arg_4] +
mov [eax+20h] ebx +
jmp loc_10295D5  +
cmp word ptr [eax] 1 +
jbe loc_1029527  +
mov esi 80070057h +
push esi  +
push 215h  +
push offset aProviderGetkey  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10295D5  +
mov [ebp+rgIndices] ebx +
cmp [eax+10h] ebx +
jbe loc_10295D5  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+pv] +
push ecx  +
lea ecx [ebp+rgIndices] +
push ecx  +
push eax  +
call ds:SafeArrayGetElement  +
mov esi eax +
cmp esi ebx +
jl loc_10295A5  +
cmp [ebp+pv] ebx +
jz loc_10295AD  +
lea eax [edi+20h] +
cmp [ebp+rgIndices] ebx +
jbe loc_1029575  +
mov ecx [eax] +
push eax  +
push 2Bh  +
push [ebp+pv]  +
push ecx  +
call sub_1014624  +
mov esi eax +
cmp esi ebx +
jge loc_1029584  +
push esi  +
push 227h  +
jmp loc_10295C0  +
push [ebp+pv]  +
push eax  +
call sub_101453D  +
mov esi eax +
cmp esi ebx +
jl loc_10295BA  +
cmp [ebp+pv] ebx +
jz loc_1029595  +
push [ebp+pv]  +
call ds:SysFreeString  +
mov [ebp+pv] ebx +
inc [ebp+rgIndices]  +
mov eax [ebp+var_C] +
mov ecx [ebp+rgIndices] +
cmp ecx [eax+10h] +
jb loc_1029537  +
jmp loc_10295D4  +
push esi  +
push 21Ah  +
jmp loc_10295C0  +
mov esi 8000FFFFh +
push esi  +
push 21Bh  +
jmp loc_10295C0  +
push esi  +
push 22Dh  +
push offset aProviderGetkey  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
cmp [ebp+pv] ebx +
jz loc_10295E3  +
push [ebp+pv]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10094B4  +
push offset loc_10095C4  +
call dword ptr [ecx+8]  +
mov esi eax +
test esi esi +
jge loc_102961F  +
push esi  +
push 293h  +
jmp loc_102965D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10094A4  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_1029641  +
push esi  +
push 299h  +
jmp loc_102965D  +
push [ebp+arg_0]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push offset loc_1009594  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_1029671  +
push esi  +
push 29Eh  +
push offset aProviderGetmet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1029682  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_102968F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10094B4  +
push offset dword_10095D4  +
call dword ptr [ecx+8]  +
mov esi eax +
test esi esi +
jge loc_10296CA  +
push esi  +
push 2C7h  +
jmp loc_1029708  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10094A4  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_10296EC  +
push esi  +
push 2CDh  +
jmp loc_1029708  +
push [ebp+arg_0]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push offset dword_10095A4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_102971C  +
push esi  +
push 2D2h  +
push offset aProviderGetm_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_102972D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_102973A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
push 4  +
pop eax  +
mov [ebp+Type] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_4] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
mov esi offset aEnablequeryrem +
push esi  +
lea eax [ebp+Type] +
push eax  +
push offset aSoftwarePoli_0  +
mov edi 80000002h +
push edi  +
mov [ebp+var_4] 1 +
call sub_10142A6  +
mov ebx offset aDwzIgnoredSDHr +
test eax eax +
jge loc_10297AE  +
push eax  +
push 307h  +
push offset aProviderBwcon  +
push ebx  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_4] 0 +
jnz loc_10297CA  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10298C9  +
mov dword ptr [eax] 1 +
jmp loc_10298C9  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push offset aSoftwareMicros  +
push edi  +
call sub_10142A6  +
test eax eax +
jge loc_10297FC  +
push eax  +
push 31Fh  +
push offset aProviderBwcon  +
push ebx  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_4] 0 +
jnz loc_1029818  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10298C9  +
mov dword ptr [eax] 2 +
jmp loc_10298C9  +
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aDefaultqueryre  +
lea eax [ebp+Type] +
push eax  +
push offset aSoftwareMicr_1  +
push edi  +
call sub_10142A6  +
xor edi edi +
inc edi  +
test eax eax +
jge loc_1029854  +
push eax  +
push 339h  +
push offset aProviderBwcon  +
push ebx  +
push edi  +
call sub_1014247  +
add esp 14h +
xor eax eax +
cmp [ebp+var_4] edi +
mov [ebp+var_4] 2 +
setz al  +
mov [ebp+var_14] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push offset aSoftwareMicros  +
push 80000001h  +
call sub_10142A6  +
test eax eax +
jge loc_102989B  +
push eax  +
push 349h  +
push offset aProviderBwcon  +
push ebx  +
push edi  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_4] edi +
jz loc_10298AC  +
cmp [ebp+var_4] 0 +
jz loc_10298B1  +
cmp [ebp+var_14] 0 +
jz loc_10298B1  +
mov eax [ebp+arg_0] +
mov [eax] edi +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10298C9  +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFFDh +
add ecx 3 +
mov [eax] ecx +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
mov [ebp+LibFileName] ax +
push 104h  +
lea eax [ebp+LibFileName] +
push eax  +
push offset Src  +
mov esi ecx +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
ja loc_1029933  +
xor edi edi +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov [esi] eax +
test eax eax +
jnz loc_1029952  +
mov eax 8000FFFFh +
push eax  +
push 62h  +
jmp loc_102996A  +
call ds:GetLastError  +
test eax eax +
jle loc_1029947  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_1029916  +
push edi  +
push 5Fh  +
jmp loc_102996C  +
push offset ProcName  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_1029982  +
mov eax 8000FFFFh +
push eax  +
push 67h  +
mov edi eax +
push offset aProviderInit  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102998C  +
mov [esi+8] eax +
mov dword ptr [esi+4] 1 +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_4] ecx +
lea ecx [edi+8] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jge loc_10299CE  +
push ebx  +
push 0C0h  +
jmp loc_1029B01  +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
test ebx ebx +
jge loc_10299E6  +
push ebx  +
push 0C3h  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [edi+10h] +
push ecx  +
push esi  +
call dword ptr [eax+2Ch]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A01  +
push ebx  +
push 0C6h  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [edi+4] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A1C  +
push ebx  +
push 0C9h  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [edi+0Ch] +
push ecx  +
push esi  +
call dword ptr [eax+34h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A37  +
push ebx  +
push 0CFh  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [edi+14h] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A52  +
push ebx  +
push 0D2h  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
call dword ptr [eax+28h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A6D  +
push ebx  +
push 0D5h  +
jmp loc_1029B01  +
xor ecx ecx +
or eax 0FFFFFFFFh +
cmp ax word ptr [ebp+arg_0] +
setz cl  +
mov [edi+24h] ecx +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
mov ebx eax +
test ebx ebx +
jge loc_1029A94  +
push ebx  +
push 0DAh  +
jmp loc_1029B01  +
xor ecx ecx +
or eax 0FFFFFFFFh +
cmp ax word ptr [ebp+arg_0] +
setz cl  +
mov [edi+28h] ecx +
mov eax [esi] +
lea ecx [edi+18h] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029ABB  +
push ebx  +
push 0DFh  +
jmp loc_1029B01  +
mov eax [esi] +
lea ecx [edi+1Ch] +
push ecx  +
push esi  +
call dword ptr [eax+38h]  +
mov ebx eax +
test ebx ebx +
jge loc_1029AD3  +
push ebx  +
push 0E2h  +
jmp loc_1029B01  +
mov ecx [ebp+var_4] +
push edi  +
push esi  +
call sub_10293A2  +
mov ebx eax +
test ebx ebx +
jge loc_1029AEB  +
push ebx  +
push 0E5h  +
jmp loc_1029B01  +
mov ecx [ebp+var_4] +
push edi  +
push esi  +
call sub_10294BB  +
mov ebx eax +
test ebx ebx +
jge loc_1029B15  +
push ebx  +
push 0EBh  +
push offset aProviderLoadme  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp [edi+4] ebx +
jnz loc_1029B4F  +
call sub_10298D7  +
mov esi eax +
cmp esi ebx +
jge loc_1029B4F  +
push esi  +
push 258h  +
jmp loc_1029BAB  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10094B4  +
push offset dword_10095E4  +
call dword ptr [edi+8]  +
mov esi eax +
cmp esi ebx +
jge loc_1029B6E  +
push esi  +
push 25Fh  +
jmp loc_1029BAB  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10094A4  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1029B8F  +
push esi  +
push 265h  +
jmp loc_1029BAB  +
push [ebp+arg_0]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push offset dword_10095B4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jge loc_1029BBF  +
push esi  +
push 26Ah  +
push offset aProviderGetpro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1029BCF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1029BDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
mov edi ecx +
push eax  +
mov [ebp+var_38] edi +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_34] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_30] ebx +
call ds:VariantInit  +
cmp [edi+4] ebx +
jnz loc_1029C4A  +
mov ecx edi +
call sub_10298D7  +
mov esi eax +
cmp esi ebx +
jge loc_1029C4A  +
push esi  +
push 120h  +
jmp loc_1029EDA  +
lea eax [ebp+var_8] +
push eax  +
mov ecx edi +
call sub_1029B23  +
mov esi eax +
cmp esi ebx +
jge loc_1029C66  +
push esi  +
push 124h  +
jmp loc_1029EDA  +
push ebx  +
lea eax [ebp+var_2C] +
push eax  +
call sub_1029746  +
mov esi eax +
cmp esi ebx +
jge loc_1029C81  +
push esi  +
push 127h  +
jmp loc_1029EDA  +
cmp [ebp+var_2C] ebx +
jz loc_1029CA2  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029CA2  +
push esi  +
push 12Bh  +
jmp loc_1029EDA  +
lea eax [ebp+var_4] +
push eax  +
mov ecx edi +
call sub_10295F0  +
mov esi eax +
cmp esi ebx +
jge loc_1029CBE  +
push esi  +
push 12Fh  +
jmp loc_1029EDA  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [ebp+var_1C] eax +
cmp eax ebx +
jnz loc_1029CDE  +
mov esi 8007000Eh +
push esi  +
push 132h  +
jmp loc_1029EDA  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029CF9  +
push esi  +
push 138h  +
jmp loc_1029EDA  +
mov eax [ebp+var_4] +
push [ebp+var_1C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029D16  +
push esi  +
push 13Bh  +
jmp loc_1029EDA  +
lea eax [ebp+var_C] +
push eax  +
mov ecx edi +
call sub_102969B  +
mov esi eax +
cmp esi ebx +
jge loc_1029D32  +
push esi  +
push 141h  +
jmp loc_1029EDA  +
mov eax [ebp+var_C] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029D4F  +
push esi  +
push 147h  +
jmp loc_1029EDA  +
mov edi ds:GetUserPreferredUILanguages +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
lea eax [ebp+var_34] +
push eax  +
push 8  +
call edi  +
test eax eax +
jnz loc_1029D8B  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1029D7A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jge loc_1029D8B  +
push esi  +
push 151h  +
jmp loc_1029EDA  +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_14] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
mov esi eax +
cmp esi ebx +
jge loc_1029DAF  +
push esi  +
push 154h  +
jmp loc_1029EDA  +
mov eax [ebp+var_30] +
add eax eax +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1029DDA  +
mov esi 8007000Eh +
push esi  +
push 156h  +
jmp loc_1029EDA  +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
lea eax [ebp+var_34] +
push eax  +
push 8  +
call edi  +
test eax eax +
jnz loc_1029E10  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1029DFF  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jge loc_1029E10  +
push esi  +
push 15Dh  +
jmp loc_1029EDA  +
push [ebp+var_14]  +
push [ebp+lpMem]  +
call ds:SysAllocStringLen  +
mov [ebp+var_20] eax +
cmp eax ebx +
jnz loc_1029E33  +
mov esi 8007000Eh +
push esi  +
push 163h  +
jmp loc_1029EDA  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push [ebp+var_20]  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029E57  +
push esi  +
push 16Ch  +
jmp loc_1029EDA  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1029E72  +
push esi  +
push 16Fh  +
jmp loc_1029EDA  +
cmp [ebp+var_28] ebx +
jnz loc_1029E7C  +
xor esi esi +
inc esi  +
jmp loc_1029EEE  +
cmp [ebp+var_28] 1 +
jz loc_1029E8F  +
mov esi 80070057h +
push esi  +
push 17Ch  +
jmp loc_1029EDA  +
push 13h  +
pop eax  +
lea edx [ebp+var_18] +
push edx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+var_10] +
mov dword ptr [ebp+pvarg.anonymous_0+8] ebx +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_1029EC0  +
push esi  +
push 184h  +
jmp loc_1029EDA  +
push [ebp+arg_4]  +
mov ecx [ebp+var_38] +
push [ebp+var_18]  +
call sub_10299A1  +
mov esi eax +
cmp esi ebx +
jge loc_1029EEE  +
push esi  +
push 187h  +
push offset aProviderGetmet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1029EFE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1029F0E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1029F1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1029F2E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1029F3E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] ebx +
mov edi ds:SysFreeString +
cmp [ebp+var_1C] ebx +
jz loc_1029F4E  +
push [ebp+var_1C]  +
call edi  +
cmp [ebp+var_20] ebx +
jz loc_1029F58  +
push [ebp+var_20]  +
call edi  +
cmp [ebp+lpMem] ebx +
jz loc_1029F6E  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 38h  +
lea eax [ebp+var_3C] +
push esi  +
push eax  +
mov edi ecx +
mov [ebp+hWnd] esi +
mov [ebp+lParam] esi +
call memset  +
mov ebx [ebp+arg_0] +
xor eax eax +
add esp 0Ch +
mov [ebx] ax +
lea eax [ebp+hWnd] +
push eax  +
push offset aLstview  +
mov ecx edi +
call sub_100D26C  +
cmp eax esi +
mov [ebp+arg_0] eax +
jge loc_1029FF3  +
push eax  +
push 4D4h  +
push offset aUploadfilepage  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_102A06D  +
push esi  +
push esi  +
mov esi ds:SendMessageW +
push 1032h  +
push [ebp+hWnd]  +
call esi  +
xor edi edi +
inc edi  +
cmp eax edi +
jz loc_102A011  +
mov [ebp+arg_0] edi +
jmp loc_102A075  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_102A031  +
mov eax 80004005h +
push eax  +
push 4E4h  +
jmp loc_102A05F  +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_28] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Bh  +
push [ebp+hWnd]  +
mov [ebp+lParam] edi +
mov [ebp+var_2C] ebx +
call esi  +
test eax eax +
jnz loc_102A075  +
mov eax 80004005h +
push eax  +
push 4F1h  +
push offset aUploadfilepage  +
push offset aDwzErrorSDHr0x  +
push edi  +
mov [ebp+arg_0] eax +
call sub_1014247  +
add esp 14h +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
push esi  +
push edi  +
xor edi edi +
push 38h  +
lea eax [ebp+var_88] +
push edi  +
push eax  +
mov esi ecx +
mov [ebp+var_8C] edi +
call memset  +
add esp 0Ch +
push 208h  +
push edi  +
mov [ebp+hWnd] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_102A0F1  +
mov eax 8007000Eh +
push eax  +
push 53Dh  +
push offset aUploadfilepa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_C] eax +
call sub_1014247  +
add esp 14h +
jmp loc_102A243  +
lea eax [ebp+hWnd] +
push eax  +
push offset aLstview  +
mov ecx esi +
call sub_100D26C  +
cmp eax edi +
mov [ebp+var_C] eax +
jge loc_102A127  +
push eax  +
push 540h  +
push offset aUploadfilepa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102A232  +
mov esi ds:SendMessageW +
push ebx  +
push edi  +
push edi  +
mov ebx 1004h +
push ebx  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_14] eax +
mov [ebp+wParam] edi +
cmp eax edi +
jbe loc_102A188  +
mov eax [ebp+lpMem] +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_3C] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_48] edi +
push 1073h  +
push [ebp+hWnd]  +
mov [ebp+var_38] 104h +
call esi  +
push [ebp+arg_0]  +
push [ebp+lpMem]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102A1EA  +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_14] +
jb loc_102A145  +
push edi  +
push edi  +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+var_8C] 1 +
call esi  +
mov [ebp+var_88] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_78] eax +
lea eax [ebp+var_8C] +
push eax  +
push edi  +
push 104Dh  +
push [ebp+hWnd]  +
mov [ebp+var_84] edi +
mov [ebp+var_74] edi +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_102A214  +
mov eax 80004005h +
push eax  +
push 55Bh  +
push offset aUploadfilepa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_C] eax +
call sub_1014247  +
add esp 14h +
jmp loc_102A231  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_40] 0F000h +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_44] 2000h +
call esi  +
push edi  +
push [ebp+wParam]  +
push 1013h  +
jmp loc_102A22C  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
mov [ebp+var_40] 0F000h +
mov [ebp+var_44] 2000h +
push 102Bh  +
push [ebp+hWnd]  +
call esi  +
pop ebx  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset aBtnview  +
call sub_100C938  +
mov esi eax +
test esi esi +
jge loc_102A278  +
push esi  +
push 6B6h  +
jmp loc_102A290  +
push [ebp+arg_0]  +
mov ecx [ebp+var_4] +
call ds:?SetEnabled@Element@DirectUI@@QAEJ_N@Z  +
mov esi eax +
test esi esi +
jge loc_102A2A4  +
push esi  +
push 6B9h  +
push offset aUploadfilepa_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_102A2CB  +
cmp [esi] ax +
jz loc_102A2C7  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_102A2BD  +
test edx edx +
jnz loc_102A2D0  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_102A2E1  +
test eax eax +
jl loc_102A2DE  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push offset aEdit  +
mov esi ecx +
or edi 0FFFFFFFFh +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
test eax eax +
jnz loc_102A32B  +
push 8000FFFFh  +
push 0B9h  +
jmp loc_102A354  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx eax +
call ds:?GetContentString@Element@DirectUI@@QAEPBGPAPAVValue@2@@Z  +
mov ecx [ebp+var_4] +
call ds:?GetString@Value@DirectUI@@QAEPBGXZ  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
call sub_10152FB  +
test eax eax +
jge loc_102A36A  +
push eax  +
push 0BFh  +
push offset aSupportkeypage  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102A381  +
push [ebp+var_8]  +
mov ecx dword_104E188 +
call sub_101C2E4  +
mov ecx esi +
call sub_100CF93  +
mov edi eax +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_102A38E  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
test edi edi +
jnz loc_102A3BA  +
push 80070057h  +
push 101h  +
jmp loc_102A409  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp+0Ch] eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_102A423  +
lea eax [ebp-4] +
push eax  +
push offset aLinkprivacy  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_102A3EF  +
push eax  +
push 105h  +
jmp loc_102A409  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_102A423  +
push 0  +
mov ecx esi +
call sub_100C9D5  +
test eax eax +
jge loc_102A41F  +
push eax  +
push 109h  +
push offset aSupportkeypa_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102A423  +
mov byte ptr [edi+8] 1 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push offset aEdit  +
mov ebx ecx +
xor edi edi +
mov [ebp+var_4] esi +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
test eax eax +
jnz loc_102A485  +
mov eax 80004005h +
push eax  +
push 15Dh  +
push offset aSupportkeypa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_102A4CA  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx eax +
call ds:?GetContentString@Element@DirectUI@@QAEPBGPAPAVValue@2@@Z  +
mov ecx [ebp+var_4] +
call ds:?GetString@Value@DirectUI@@QAEPBGXZ  +
test eax eax +
jz loc_102A4B3  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102A4A1  +
sub eax edx +
sar eax 1 +
mov esi eax +
xor edi edi +
neg esi  +
sbb esi esi +
push 2  +
and esi 2 +
push esi  +
push 48Bh  +
mov ecx ebx +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_102A4D7  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
test edi edi +
jnz loc_102A507  +
push 80070057h  +
push 210h  +
jmp loc_102A631  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp+0Ch] eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_102A55B  +
lea eax [ebp-4] +
push eax  +
push offset aLinkfixed  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_102A53F  +
push eax  +
push 214h  +
jmp loc_102A631  +
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-4] +
jnz loc_102A561  +
push 0  +
push 5  +
push 471h  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov byte ptr [edi+8] 1 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
lea eax [ebp-4] +
push eax  +
push offset aLinkupload  +
call sub_100C938  +
test eax eax +
jge loc_102A57E  +
push eax  +
push 220h  +
jmp loc_102A631  +
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-4] +
jnz loc_102A5AC  +
push 29h  +
call sub_100C7A3  +
mov eax dword_104E0F4 +
mov ecx esi +
mov [esi+2Ch] eax +
call sub_100C97C  +
test eax eax +
jge loc_102A557  +
push eax  +
push 22Ah  +
jmp loc_102A631  +
lea eax [ebp-4] +
push eax  +
push offset aLinkreview  +
call sub_100C938  +
test eax eax +
jge loc_102A5C6  +
push eax  +
push 231h  +
jmp loc_102A631  +
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-4] +
jnz loc_102A5F5  +
push 29h  +
call sub_100C7A3  +
mov eax dword_104E108 +
mov ecx esi +
mov [esi+2Ch] eax +
call sub_100C97C  +
test eax eax +
jge loc_102A557  +
push eax  +
push 23Bh  +
jmp loc_102A631  +
lea eax [ebp-4] +
push eax  +
push offset aLinkprivacy  +
call sub_100C938  +
test eax eax +
jge loc_102A60F  +
push eax  +
push 242h  +
jmp loc_102A631  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_102A55B  +
push 0  +
mov ecx esi +
call sub_100C9D5  +
test eax eax +
jge loc_102A557  +
push eax  +
push 249h  +
push offset aUploadconsentp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102A55B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-44h] 0 +
push esi  +
push edi  +
push 38h  +
lea eax [ebp-40h] +
push 0  +
push eax  +
mov esi ecx +
call memset  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov edi [ebp+0Ch] +
mov [ebp-8] eax +
add esp 0Ch +
lea eax [ebp-8] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_102A758  +
lea eax [ebp-4] +
push eax  +
push offset aLinkhistory  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_102A6B2  +
push eax  +
push 2ADh  +
jmp loc_102A7A1  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_102A714  +
lea eax [ebp-44h] +
push eax  +
mov dword ptr [ebp-44h] 3Ch +
mov dword ptr [ebp-40h] 400h +
mov dword ptr [ebp-38h] offset Operation +
mov dword ptr [ebp-34h] offset aControl_exe +
mov dword ptr [ebp-28h] 1 +
mov dword ptr [ebp-30h] offset aNameMicrosof_1 +
call ds:ShellExecuteExW  +
test eax eax +
jnz loc_102A754  +
call ds:GetLastError  +
test eax eax +
jle loc_102A707  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_102A754  +
push eax  +
push 2BBh  +
jmp loc_102A7A1  +
lea eax [ebp-4] +
push eax  +
push offset aLinkignore  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_102A730  +
push eax  +
push 2C5h  +
jmp loc_102A7A1  +
mov eax [edi] +
mov ecx esi +
cmp eax [ebp-4] +
jnz loc_102A75E  +
mov eax dword_104E188 +
push 0  +
push 5  +
push 471h  +
mov dword ptr [eax+0Ch] 1 +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
mov byte ptr [edi+8] 1 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
lea eax [ebp-4] +
push eax  +
push offset aLinkretry  +
call sub_100C938  +
test eax eax +
jge loc_102A778  +
push eax  +
push 2D4h  +
jmp loc_102A7A1  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_102A758  +
mov eax dword_104E0FC +
push 29h  +
mov ecx esi +
mov [esi+2Ch] eax +
call sub_100C7A3  +
mov ecx esi +
call sub_100C97C  +
test eax eax +
jge loc_102A754  +
push eax  +
push 2DBh  +
push offset aUploadfailurep  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102A758  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-44h] 0 +
push esi  +
push edi  +
push 38h  +
lea eax [ebp-40h] +
push 0  +
push eax  +
mov esi ecx +
call memset  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov edi [ebp+0Ch] +
mov [ebp-8] eax +
add esp 0Ch +
lea eax [ebp-8] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_102A89D  +
lea eax [ebp-4] +
push eax  +
push offset aLinkhistory  +
mov ecx esi +
call sub_100C938  +
test eax eax +
jge loc_102A828  +
push eax  +
push 36Ah  +
push offset aUploadcomplete  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_102A88F  +
mov eax [edi] +
cmp eax [ebp-4] +
jnz loc_102A89D  +
xor esi esi +
lea eax [ebp-44h] +
inc esi  +
push eax  +
mov dword ptr [ebp-44h] 3Ch +
mov dword ptr [ebp-40h] 400h +
mov dword ptr [ebp-38h] offset Operation +
mov dword ptr [ebp-34h] offset aControl_exe +
mov [ebp-28h] esi +
mov dword ptr [ebp-30h] offset aNameMicrosof_1 +
call ds:ShellExecuteExW  +
test eax eax +
jnz loc_102A899  +
call ds:GetLastError  +
test eax eax +
jle loc_102A87C  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_102A899  +
push eax  +
push 375h  +
push offset aUploadcomplete  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
jmp loc_102A89D  +
mov byte ptr [edi+8] 1 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
or [ebp+var_28] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetProcessHeap +
xor esi esi +
push 208h  +
push esi  +
mov [ebp+var_1C] ecx +
mov [ebp+hWnd] esi +
mov [ebp+var_8] esi +
mov [ebp+var_14] esi +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_102A906  +
push 8007000Eh  +
push 399h  +
push offset aUploadfilepa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AABC  +
mov ecx [ebp+var_1C] +
lea eax [ebp+hWnd] +
push eax  +
push offset aLstview  +
call sub_100D26C  +
cmp eax esi +
jge loc_102A93A  +
push eax  +
push 39Ch  +
push offset aUploadfilepa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AAAE  +
push esi  +
push esi  +
mov esi ds:SendMessageW +
push 1004h  +
push [ebp+hWnd]  +
call esi  +
and [ebp+wParam] 0 +
mov [ebp+var_20] eax +
test eax eax +
jbe loc_102A984  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
shr eax 0Ch +
dec eax  +
jz loc_102A972  +
inc [ebp+var_8]  +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_20] +
jb loc_102A957  +
mov eax [ebp+var_8] +
test eax eax +
jnz loc_102A9A5  +
mov ecx [ebp+var_1C] +
push 2  +
push 0  +
push 48Bh  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
push 80004005h  +
push 3ACh  +
jmp loc_102A921  +
shl eax 2 +
push eax  +
push 8  +
call edi  +
push eax  +
call ebx  +
mov ebx eax +
mov [ebp+var_10] ebx +
test ebx ebx +
jnz loc_102A9DC  +
push 8007000Eh  +
push 3B0h  +
push offset aUploadfilepa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AA7A  +
and [ebp+wParam] 0 +
mov [ebp+var_18] ebx +
mov eax [ebp+var_14] +
cmp eax [ebp+var_8] +
jnb loc_102AA4F  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
shr eax 0Ch +
dec eax  +
jz loc_102AA44  +
mov ebx [ebp+lpMem] +
xor eax eax +
and [ebp+var_5C] eax +
mov [ebx] ax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_4C] 104h +
push 1073h  +
push [ebp+hWnd]  +
mov [ebp+var_50] ebx +
call esi  +
push ebx  +
push [ebp+var_18]  +
call sub_101453D  +
test eax eax +
jl loc_102AAC4  +
inc [ebp+var_14]  +
add [ebp+var_18] 4 +
mov ebx [ebp+var_10] +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_20] +
jb loc_102A9E3  +
mov eax dword_104E188 +
mov ecx [ebp+var_8] +
and [ebp+var_10] 0 +
mov [eax+80h] ebx +
mov eax dword_104E188 +
mov [eax+0B0h] ecx +
mov ecx [ebp+var_1C] +
call sub_100CF93  +
mov [ebp+var_28] eax +
mov ebx [ebp+var_10] +
test ebx ebx +
jz loc_102AAAE  +
xor esi esi +
cmp [ebp+var_8] esi +
jbe loc_102AAA2  +
mov eax [ebx+esi*4] +
test eax eax +
jz loc_102AA9C  +
push eax  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
and dword ptr [ebx+esi*4] 0 +
inc esi  +
cmp esi [ebp+var_8] +
jb loc_102AA85  +
push ebx  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_28] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push eax  +
push 3B9h  +
push offset aUploadfilepa_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AA77  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp-210h] edi +
cmp ebx edi +
jnz loc_102AB1D  +
push 80070057h  +
push 586h  +
jmp loc_102AC70  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
mov [ebp-214h] eax +
lea eax [ebp-214h] +
push eax  +
lea eax [ebx+4] +
push eax  +
call sub_100D67F  +
test al al +
jz loc_102AC8A  +
lea eax [ebp-210h] +
push eax  +
push offset aLinkprivacy  +
mov ecx esi +
call sub_100C938  +
cmp eax edi +
jge loc_102AB62  +
push eax  +
push 58Ah  +
jmp loc_102AC70  +
mov eax [ebx] +
mov ecx esi +
cmp eax [ebp-210h] +
jnz loc_102AB87  +
push edi  +
call sub_100C9D5  +
cmp eax edi +
jge loc_102AC86  +
push eax  +
push 591h  +
jmp loc_102AC70  +
lea eax [ebp-210h] +
push eax  +
push offset aBtnview  +
call sub_100C938  +
cmp eax edi +
jge loc_102ABA7  +
push eax  +
push 598h  +
jmp loc_102AC70  +
mov eax [ebx] +
mov ecx esi +
cmp eax [ebp-210h] +
jnz loc_102AC05  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1029F9C  +
cmp eax edi +
jge loc_102ABD3  +
push eax  +
push 59Fh  +
jmp loc_102AC70  +
jnz loc_102AC86  +
push 1  +
push edi  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push offset Operation  +
push edi  +
call ds:ShellExecuteW  +
cmp eax 20h +
jg loc_102AC86  +
push 80004005h  +
push 5AFh  +
jmp loc_102AC70  +
lea eax [ebp-210h] +
push eax  +
push offset aBtnadd  +
call sub_100C938  +
cmp eax edi +
jge loc_102AC22  +
push eax  +
push 5B8h  +
jmp loc_102AC70  +
mov eax [ebx] +
cmp eax [ebp-210h] +
jnz loc_102AC8A  +
push 1  +
push edi  +
push edi  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx esi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call sub_102E2DF  +
cmp eax edi +
jge loc_102AC56  +
push eax  +
push 5C5h  +
jmp loc_102AC70  +
jnz loc_102AC86  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx esi +
call sub_102A084  +
cmp eax edi +
jge loc_102AC86  +
push eax  +
push 5CCh  +
push offset aUploadfilepa_6  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AC8A  +
mov byte ptr [ebx+8] 1 +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
shr edx 1 +
test eax eax +
jz loc_102ACC9  +
cmp edx 7FFFFFFFh +
ja loc_102ACC9  +
push edi  +
lea edi [ebp+arg_4] +
call sub_102A2B0  +
pop edi  +
jmp loc_102ACCE  +
mov eax 80070057h +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_102ACE5  +
test eax eax +
jl loc_102ACE2  +
mov edx [ebp+arg_4] +
add edx edx +
mov [ecx] edx +
jmp loc_102ACE5  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov edi ecx +
or dword ptr [ebp-24h] 0FFFFFFFFh +
xor esi esi +
mov [ebp-20h] esi +
mov [ebp-10h] esi +
mov [ebp-18h] esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-30h] +
call sub_100CE71  +
push 800h  +
push esi  +
mov [ebp-4] esi +
call ds:GetProcessHeap  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov [ebp-1Ch] eax +
cmp eax esi +
jnz loc_102AD59  +
push 8007000Eh  +
push 35h  +
push offset aSupportkeypa_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AFF0  +
push 800h  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov [ebp-14h] eax +
cmp eax esi +
jnz loc_102AD8F  +
push 8007000Eh  +
push 36h  +
push offset aSupportkeypa_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102AFCD  +
mov ecx edi +
call sub_102A42E  +
cmp eax esi +
jge loc_102AD9F  +
push eax  +
push 39h  +
jmp loc_102AD76  +
mov eax dword_104E188 +
mov eax [eax+70h] +
push esi  +
push esi  +
push esi  +
push eax  +
push offset aTxtsupportprov  +
mov ecx edi +
call sub_100CC01  +
cmp eax esi +
jge loc_102ADC0  +
push eax  +
push 41h  +
jmp loc_102AD76  +
mov ebx 400h +
push ebx  +
push dword ptr [ebp-1Ch]  +
push 18Eh  +
call sub_10301CE  +
cmp eax esi +
jge loc_102ADDC  +
push eax  +
push 48h  +
jmp loc_102AD76  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push dword ptr [ebp-1Ch]  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_100DD8E  +
add esp 10h +
cmp eax esi +
jge loc_102ADFF  +
push eax  +
push 4Bh  +
jmp loc_102AD76  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebp-14h]  +
mov ecx edi +
push offset aLinkprivacy  +
call sub_100CC01  +
cmp eax esi +
jge loc_102AE1D  +
push eax  +
push 4Eh  +
jmp loc_102AD76  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call sub_100D2FD  +
cmp eax esi +
jge loc_102AE38  +
push eax  +
push 51h  +
jmp loc_102AD76  +
mov ecx edi +
cmp [ebp-18h] esi +
jnz loc_102AE94  +
lea eax [ebp-20h] +
push eax  +
push offset aPicsupportprov  +
call sub_100C938  +
cmp eax esi +
jge loc_102AE59  +
push eax  +
push 58h  +
jmp loc_102AD76  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call sub_100D2FD  +
cmp eax esi +
jge loc_102AE74  +
push eax  +
push 5Bh  +
jmp loc_102AD76  +
push dword ptr [ebp-10h]  +
mov ecx [ebp-20h] +
push 1  +
push ds:?ContentProp@Element@DirectUI@@SGPBUPropertyInfo@2@XZ  +
call ds:?SetValue@Element@DirectUI@@QAEJP6GPBUPropertyInfo@2@XZHPAVValue@2@@Z  +
cmp eax esi +
jge loc_102AEC2  +
push eax  +
push 5Eh  +
jmp loc_102AD76  +
push offset aPicsupportprov  +
call sub_100CAA7  +
cmp eax esi +
jge loc_102AEAA  +
push eax  +
push 61h  +
jmp loc_102AD76  +
push offset aPicsupportspac  +
mov ecx edi +
call sub_100CAA7  +
cmp eax esi +
jge loc_102AEC2  +
push eax  +
push 64h  +
jmp loc_102AD76  +
mov ecx edi +
call sub_102A42E  +
cmp eax esi +
jge loc_102AED5  +
push eax  +
push 68h  +
jmp loc_102AD76  +
push offset aEdit  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx edi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov [ebp-28h] eax +
cmp eax esi +
jnz loc_102AF06  +
push 8000FFFFh  +
push 6Bh  +
jmp loc_102AD76  +
mov eax dword_104E188 +
mov ecx edi +
cmp [eax+3Ch] esi +
jz loc_102AF2A  +
push 1  +
push offset aInvalidkey  +
call sub_100CB06  +
cmp eax esi +
jge loc_102AF74  +
push eax  +
push 72h  +
jmp loc_102AD76  +
push offset aInvalidkey  +
call sub_100CAA7  +
cmp eax esi +
jge loc_102AF40  +
push eax  +
push 78h  +
jmp loc_102AD76  +
mov eax dword_104E188 +
cmp [eax+74h] esi +
jz loc_102AF74  +
push esi  +
push esi  +
push 9E9h  +
mov ecx edi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov ebx ds:PostMessageW +
push eax  +
call ebx  +
push esi  +
push esi  +
push 9E4h  +
mov ecx edi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ebx  +
mov ecx edi +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
mov ecx [ebp-28h] +
mov [ecx+0C4h] eax +
mov eax dword_104E188 +
mov ecx edi +
cmp [eax+60h] esi +
jz loc_102AFAA  +
push offset aEdit  +
call sub_100CAA7  +
cmp eax esi +
jge loc_102AFC3  +
push eax  +
push 8Ah  +
jmp loc_102AD76  +
push offset aOassubtext  +
call sub_100CAA7  +
cmp eax esi +
jge loc_102AFC3  +
push eax  +
push 8Dh  +
jmp loc_102AD76  +
mov ecx edi +
call sub_100D422  +
mov [ebp-24h] eax +
push dword ptr [ebp-1Ch]  +
mov ebx ds:GetProcessHeap +
push esi  +
call ebx  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp-14h] esi +
jz loc_102AFF0  +
push dword ptr [ebp-14h]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov ecx [ebp-10h] +
cmp ecx esi +
jz loc_102B000  +
call ds:?Release@Value@DirectUI@@QAEXXZ  +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100CE97  +
mov eax [ebp-24h] +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aEdit  +
mov esi ecx +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
mov ecx [ebp+0Ch] +
cmp [ecx] eax +
jnz loc_102B06C  +
mov ecx esi +
call sub_102A42E  +
test eax eax +
jge loc_102B06C  +
push eax  +
push 136h  +
push offset aSupportkeypa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-18h] +
call sub_100CE71  +
mov eax [ebp+8] +
sub eax 9E4h +
mov [ebp-4] ebx +
jz loc_102B129  +
dec eax  +
jz loc_102B116  +
sub eax 4 +
jz loc_102B0CB  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D06C  +
mov bl al +
jmp loc_102B163  +
push offset aEdit  +
call StrToID  +
movzx eax ax +
push eax  +
mov ecx esi +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
mov ecx eax +
call ds:?FindDescendent@Element@DirectUI@@QAEPAV12@G@Z  +
cmp eax ebx +
jnz loc_102B0F9  +
push 8000FFFFh  +
push 1ABh  +
jmp loc_102B143  +
mov ecx dword_104E188 +
push dword ptr [ecx+74h]  +
mov ecx eax +
call ds:?SetContentString@Element@DirectUI@@QAEJPBG@Z  +
cmp eax ebx +
jge loc_102B161  +
push eax  +
push 1AEh  +
jmp loc_102B143  +
mov ecx esi +
call sub_102A42E  +
cmp eax ebx +
jge loc_102B161  +
push eax  +
push 1B5h  +
jmp loc_102B143  +
lea eax [ebp-10h] +
push eax  +
push offset aLinkprivacy  +
mov ecx esi +
call sub_100C938  +
cmp eax ebx +
jge loc_102B159  +
push eax  +
push 19Eh  +
push offset aSupportkeypa_5  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B163  +
mov ecx [ebp-10h] +
mov eax [ecx] +
call dword ptr [eax+54h]  +
mov bl 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_100CE97  +
mov al bl +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-20h] +
call sub_100CE71  +
mov esi ds:GetProcessHeap +
xor ebx ebx +
push 800h  +
push ebx  +
mov [ebp-4] ebx +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp-10h] eax +
cmp eax ebx +
jnz loc_102B1E2  +
push 8007000Eh  +
push 1DDh  +
push offset aUploadconsen_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B291  +
push 200h  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edi eax +
mov [ebp-18h] edi +
cmp edi ebx +
jnz loc_102B202  +
push 8007000Eh  +
push 1DEh  +
jmp loc_102B260  +
mov ecx [ebp-14h] +
call sub_100D422  +
push 100h  +
push edi  +
push 131h  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102B226  +
push eax  +
push 1E3h  +
jmp loc_102B260  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push edi  +
push 400h  +
push dword ptr [ebp-10h]  +
call sub_100DD8E  +
add esp 10h +
cmp eax ebx +
jge loc_102B24B  +
push eax  +
push 1E6h  +
jmp loc_102B260  +
push dword ptr [ebp-10h]  +
mov ecx [ebp-14h] +
call sub_100C7C0  +
cmp eax ebx +
jge loc_102B274  +
push eax  +
push 1E9h  +
push offset aUploadconsen_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-10h]  +
push ebx  +
call esi  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp-18h] ebx +
jz loc_102B291  +
push dword ptr [ebp-18h]  +
push ebx  +
call esi  +
push eax  +
call edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100CE71  +
mov esi ds:GetProcessHeap +
and dword ptr [ebp-4] 0 +
mov ebx 200h +
push ebx  +
push 0  +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_102B30F  +
push 8007000Eh  +
push 26Fh  +
push offset aUploadfailur_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B3B4  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_102B329  +
push 8007000Eh  +
push 270h  +
jmp loc_102B384  +
mov ecx [ebp-14h] +
call sub_100D422  +
mov edi 100h +
push edi  +
push dword ptr [ebp-10h]  +
push 147h  +
call sub_10301CE  +
test eax eax +
jge loc_102B350  +
push eax  +
push 278h  +
jmp loc_102B384  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push dword ptr [ebp-10h]  +
push edi  +
push ebx  +
call sub_100DD8E  +
add esp 10h +
test eax eax +
jge loc_102B371  +
push eax  +
push 27Fh  +
jmp loc_102B384  +
mov ecx [ebp-14h] +
push ebx  +
call sub_100C7C0  +
test eax eax +
jge loc_102B398  +
push eax  +
push 282h  +
push offset aUploadfailur_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-10h]  +
push 0  +
call esi  +
mov edi ds:HeapFree +
push eax  +
call edi  +
test ebx ebx +
jz loc_102B3B4  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100CE71  +
mov edi 200h +
xor ebx ebx +
push edi  +
push ebx  +
mov [ebp-4] ebx +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-10h] eax +
cmp eax ebx +
jnz loc_102B430  +
push 8007000Eh  +
push 302h  +
push offset aUploadcomple_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B5B6  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov edi eax +
cmp edi ebx +
jnz loc_102B450  +
push 8007000Eh  +
push 303h  +
jmp loc_102B580  +
mov esi 100h +
push esi  +
push dword ptr [ebp-10h]  +
push 14Fh  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102B472  +
push eax  +
push 309h  +
jmp loc_102B580  +
mov ecx [ebp-14h] +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
push offset aTxtdescription  +
call sub_100CC01  +
cmp eax ebx +
jge loc_102B494  +
push eax  +
push 30Ch  +
jmp loc_102B580  +
mov eax dword_104E188 +
push esi  +
cmp [eax+60h] ebx +
jz loc_102B4B9  +
push edi  +
push 151h  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102B4F9  +
push eax  +
push 316h  +
jmp loc_102B580  +
push dword ptr [ebp-10h]  +
push 150h  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102B4D5  +
push eax  +
push 31Fh  +
jmp loc_102B580  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push dword ptr [ebp-10h]  +
push esi  +
push edi  +
call sub_100DD8E  +
add esp 10h +
cmp eax ebx +
jge loc_102B4F9  +
push eax  +
push 326h  +
jmp loc_102B580  +
mov ecx [ebp-14h] +
push ebx  +
push ebx  +
push ebx  +
push edi  +
push offset aTxtcontact  +
call sub_100CC01  +
cmp eax ebx +
jge loc_102B516  +
push eax  +
push 32Ah  +
jmp loc_102B580  +
mov ecx [ebp-14h] +
call sub_100D422  +
push esi  +
push dword ptr [ebp-10h]  +
push 12Fh  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102B538  +
push eax  +
push 332h  +
jmp loc_102B580  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push dword ptr [ebp-10h]  +
push esi  +
push edi  +
call sub_100DD8E  +
add esp 10h +
cmp eax ebx +
jge loc_102B559  +
push eax  +
push 339h  +
jmp loc_102B580  +
mov ecx [ebp-14h] +
push edi  +
call sub_100C7C0  +
cmp eax ebx +
jge loc_102B56E  +
push eax  +
push 33Ch  +
jmp loc_102B580  +
mov ecx [ebp-14h] +
call sub_100CD60  +
cmp eax ebx +
jge loc_102B594  +
push eax  +
push 33Fh  +
push offset aUploadcomple_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-10h]  +
push ebx  +
call ds:GetProcessHeap  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp edi ebx +
jz loc_102B5B6  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push edi  +
push eax  +
mov [ebp+var_25C] ecx +
mov dword ptr [ebp+var_260] esi +
mov [ebp+FindFileData.dwFileAttributes] edi +
call memset  +
add esp 0Ch +
push 208h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jnz loc_102B650  +
mov esi 8007000Eh +
push esi  +
push 469h  +
push offset aUploadfilepa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B79F  +
push esi  +
push offset aS  +
mov edi 104h +
push edi  +
push ebx  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102B676  +
push esi  +
push 46Ch  +
jmp loc_102B77B  +
lea eax [ebp+FindFileData] +
push eax  +
push ebx  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_102B75F  +
cmp eax 0FFFFFFFFh +
jz loc_102B75F  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+var_260]  +
push offset aSS_1  +
push edi  +
push ebx  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_102B74F  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_102B714  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__0  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102B726  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102B726  +
mov ecx [ebp+var_25C] +
push ebx  +
call sub_102B5CF  +
mov esi eax +
test esi esi +
jge loc_102B726  +
push esi  +
push 484h  +
jmp loc_102B77B  +
mov ecx [ebp+var_25C] +
push ebx  +
call sub_102A084  +
mov esi eax +
test esi esi +
jl loc_102B757  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102B69B  +
push [ebp+hFindFile]  +
call ds:FindClose  +
jmp loc_102B78F  +
push esi  +
push 478h  +
jmp loc_102B77B  +
push esi  +
push 48Ch  +
jmp loc_102B77B  +
call ds:GetLastError  +
test eax eax +
jle loc_102B773  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 46Fh  +
push offset aUploadfilepa_2  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
xor ebx ebx +
push 208h  +
push ebx  +
mov edi ecx +
mov [ebp+pstm] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_102B806  +
mov edi 8007000Eh +
push edi  +
push 667h  +
push offset aUploadfilepa_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B922  +
push esi  +
mov esi 104h +
push esi  +
push eax  +
mov ecx edi +
call sub_1029F9C  +
mov edi eax +
cmp edi ebx +
jge loc_102B826  +
push edi  +
push 66Ah  +
jmp loc_102B8C5  +
lea eax [ebp+pstm] +
push eax  +
push ebx  +
push ebx  +
call ds:CreateStreamOnHGlobal  +
mov edi eax +
cmp edi ebx +
jge loc_102B843  +
push edi  +
push 670h  +
jmp loc_102B8C5  +
push offset asc_10027A4  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
cmp edi ebx +
jge loc_102B85F  +
push edi  +
push 673h  +
jmp loc_102B8C5  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_102ACA0  +
mov edi eax +
cmp edi ebx +
jge loc_102B87A  +
push edi  +
push 676h  +
jmp loc_102B8C5  +
mov eax [ebp+pstm] +
mov ecx [eax] +
push ebx  +
push [ebp+var_C]  +
push [ebp+lpMem]  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jge loc_102B898  +
push edi  +
push 67Ch  +
jmp loc_102B8C5  +
push [ebp+hWndNewOwner]  +
call ds:OpenClipboard  +
test eax eax +
jnz loc_102B8DB  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_102B8B9  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi ebx +
jge loc_102B8DB  +
push edi  +
push 683h  +
push offset aUploadfilepa_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B921  +
call ds:EmptyClipboard  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+pstm]  +
call ds:GetHGlobalFromStream  +
mov edi eax +
cmp edi ebx +
jge loc_102B910  +
push edi  +
push 68Ah  +
push offset aUploadfilepa_3  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B91B  +
push [ebp+hMem]  +
push 0Dh  +
call ds:SetClipboardData  +
call ds:CloseClipboard  +
pop esi  +
mov eax [ebp+pstm] +
cmp eax ebx +
jz loc_102B932  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+pstm] ebx +
cmp [ebp+lpMem] ebx +
jz loc_102B948  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-14h] +
call sub_100CE71  +
and dword ptr [ebp-4] 0 +
push 200h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_102B9B0  +
push 8007000Eh  +
push 6DAh  +
push offset aSaveresultsp_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102B9E3  +
mov ecx esi +
call sub_100D422  +
push 100h  +
push edi  +
push 155h  +
call sub_10301CE  +
test eax eax +
jge loc_102B9D3  +
push eax  +
push 6DFh  +
jmp loc_102B99A  +
push edi  +
push 2  +
push 48Ch  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
or [ebp+var_1C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
xor eax eax +
push edi  +
mov ebx 800h +
push ebx  +
push eax  +
mov [ebp+var_20] ecx +
mov dword ptr [ebp+lpFileName] eax +
mov [ebp+lpBuffer] eax +
mov [ebp+var_10] eax +
mov [ebp+lpText] eax +
mov [ebp+hObject] eax +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov dword ptr [ebp+lpMem] eax +
test eax eax +
jnz loc_102BA64  +
mov eax 8007000Eh +
push eax  +
push 705h  +
push offset aSaveresultspag  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_102BC44  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov dword ptr [ebp+lpFileName] eax +
test eax eax +
jnz loc_102BA80  +
mov eax 8007000Eh +
push eax  +
push 706h  +
jmp loc_102BA49  +
push dword ptr [ebp+lpMem]  +
mov ecx [ebp+var_20] +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call sub_102E1CE  +
mov ebx eax +
test ebx ebx +
jge loc_102BAA3  +
push ebx  +
push 70Ch  +
jmp loc_102BC2C  +
cmp ebx 1 +
jz loc_102BC40  +
push 1  +
push 0  +
mov uID 195h +
call sub_1032BFB  +
mov ebx eax +
test ebx ebx +
jge loc_102BAD0  +
push ebx  +
push 715h  +
jmp loc_102BC2C  +
and [ebp+var_1C] 0 +
push offset aResults_cab  +
push dword ptr [ebp+lpMem]  +
push offset aSS_2  +
push 400h  +
push dword ptr [ebp+lpFileName]  +
call sub_100DD8E  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jge loc_102BB02  +
push ebx  +
push 71Dh  +
jmp loc_102BC2C  +
push 0  +
push 80h  +
push 3  +
push 0  +
push 1  +
push 80000000h  +
push dword ptr [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_102BC0B  +
push 200h  +
push 0  +
call esi  +
push eax  +
call edi  +
mov [ebp+lpBuffer] eax +
test eax eax +
jnz loc_102BB4C  +
mov eax 8007000Eh +
push eax  +
push 72Fh  +
jmp loc_102BA49  +
mov ebx 800h +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov [ebp+var_10] eax +
test eax eax +
jnz loc_102BB70  +
mov eax 8007000Eh +
push eax  +
push 730h  +
jmp loc_102BA49  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov [ebp+lpText] eax +
test eax eax +
jnz loc_102BB8F  +
mov eax 8007000Eh +
push eax  +
push 731h  +
jmp loc_102BA49  +
push 100h  +
push [ebp+lpBuffer]  +
push 172h  +
call sub_10301CE  +
mov ebx eax +
test ebx ebx +
jge loc_102BBAF  +
push ebx  +
push 734h  +
jmp loc_102BC2C  +
mov edi 400h +
push edi  +
push [ebp+var_10]  +
push 173h  +
call sub_10301CE  +
mov ebx eax +
test ebx ebx +
jge loc_102BBD0  +
push ebx  +
push 737h  +
jmp loc_102BC2C  +
push dword ptr [ebp+lpFileName]  +
push [ebp+var_10]  +
push edi  +
push [ebp+lpText]  +
call sub_100DD8E  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jge loc_102BBF0  +
push ebx  +
push 73Ah  +
jmp loc_102BC2C  +
push 34h  +
push [ebp+lpBuffer]  +
push [ebp+lpText]  +
push 0  +
call ds:MessageBoxW  +
cmp eax 6 +
jz loc_102BC0B  +
or [ebp+var_1C] 0FFFFFFFFh +
jmp loc_102BC40  +
push 0  +
push dword_104E198  +
push offset aResults_cab  +
push dword ptr [ebp+lpMem]  +
call sub_102F2C7  +
mov ebx eax +
test ebx ebx +
jge loc_102BC62  +
push ebx  +
push 744h  +
push offset aSaveresultspag  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test ebx ebx +
jge loc_102BC5C  +
mov ecx [ebp+var_20] +
push ebx  +
push 0  +
push 9E2h  +
call ds:?GetParentHWND@TaskPage@DirectUI@@QAEPAUHWND__@@XZ  +
push eax  +
call ds:PostMessageW  +
cmp [ebp+var_1C] 0 +
jnz loc_102BC74  +
mov ecx [ebp+var_20] +
push 0  +
push 5  +
push 471h  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
cmp dword ptr [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_102BC8A  +
push dword ptr [ebp+lpMem]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp [ebp+lpBuffer] 0 +
jz loc_102BC9A  +
push [ebp+lpBuffer]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp [ebp+var_10] 0 +
jz loc_102BCAA  +
push [ebp+var_10]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp [ebp+lpText] 0 +
jz loc_102BCBA  +
push [ebp+lpText]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp dword ptr [ebp+lpFileName] 0 +
jz loc_102BCCA  +
push dword ptr [ebp+lpFileName]  +
push 0  +
call esi  +
push eax  +
call edi  +
cmp [ebp+hObject] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_102BCE2  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_102BCE2  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax [ebp+var_1C] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+10h] +
push ebx  +
mov ebx [eax] +
push esi  +
push edi  +
mov edi [ebp+18h] +
xor esi esi +
cmp dword ptr [ebp+8] 4Eh +
mov [ebp-214h] edi +
mov [ebp-210h] esi +
jnz loc_102BE93  +
mov ecx [eax+8] +
cmp ecx 0FFFFFF65h +
jz loc_102BE68  +
cmp ecx 0FFFFFF9Bh +
jz loc_102BDDB  +
cmp ecx 0FFFFFFF9h +
jbe loc_102BE93  +
cmp ecx 0FFFFFFFCh +
jbe loc_102BE89  +
cmp ecx 0FFFFFFFDh +
jz loc_102BD61  +
cmp ecx 0FFFFFFFEh +
jz loc_102BE89  +
jmp loc_102BE93  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
mov ecx edi +
call sub_1029F9C  +
cmp eax esi +
jge loc_102BD8C  +
push eax  +
push 624h  +
push offset aUploadfilepa_4  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_102BDC3  +
xor edi edi +
inc edi  +
cmp eax esi +
jnz loc_102BDD0  +
push edi  +
push esi  +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
push offset Operation  +
push esi  +
call ds:ShellExecuteW  +
cmp eax 20h +
jg loc_102BDD0  +
push 80004005h  +
push 634h  +
push offset aUploadfilepa_4  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_102BE93  +
mov [ebp-210h] edi +
jmp loc_102BE93  +
mov edi ds:SendMessageW +
push esi  +
push esi  +
push 1004h  +
push ebx  +
call edi  +
and [ebp-210h] esi +
mov [ebp-218h] eax +
test eax eax +
jbe loc_102BE29  +
push 0F000h  +
push dword ptr [ebp-210h]  +
push 102Ch  +
push ebx  +
call edi  +
shr eax 0Ch +
dec eax  +
jz loc_102BE15  +
inc esi  +
inc dword ptr [ebp-210h]  +
mov eax [ebp-210h] +
cmp eax [ebp-218h] +
jb loc_102BDFB  +
mov ecx [ebp-214h] +
neg esi  +
sbb esi esi +
push 2  +
and esi 2 +
push esi  +
push 48Bh  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
push 0  +
push 0  +
push 1032h  +
push ebx  +
call edi  +
mov ecx [ebp-214h] +
dec eax  +
neg eax  +
sbb al al +
inc al  +
movzx eax al +
push eax  +
call sub_102A251  +
jmp loc_102BE89  +
cmp word ptr [eax+0Ch] 43h +
jnz loc_102BE93  +
push 11h  +
call ds:GetKeyState  +
mov ecx 8000h +
test ax cx +
jz loc_102BE93  +
push ebx  +
mov ecx edi +
call sub_102B7B7  +
mov dword ptr [ebp-210h] 1 +
mov ecx [ebp-4] +
mov eax [ebp-210h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 14h  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
xor ebx ebx +
push 0Ah  +
xor eax eax +
pop ecx  +
mov [ebp-74h] ebx +
lea edi [ebp-70h] +
stos   +
mov ecx [ebp-10h] +
mov [ebp-40h] ebx +
lea edi [ebp-3Ch] +
stos   +
stos   +
mov [ebp-14h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-1Ch] ebx +
stos   +
mov [ebp-24h] ebx +
call ds:?GetElement@TaskPage@DirectUI@@IAEPAVElement@2@XZ  +
push eax  +
lea ecx [ebp-48h] +
call sub_100CE71  +
mov ecx [ebp-10h] +
mov [ebp-4] ebx +
call sub_100D422  +
mov edi ds:GetProcessHeap +
push 800h  +
push ebx  +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-28h] eax +
cmp eax ebx +
jnz loc_102BF43  +
push 8007000Eh  +
push 3F5h  +
push offset aUploadfilepa_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C19A  +
push 200h  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov [ebp-20h] eax +
cmp eax ebx +
jnz loc_102BF78  +
push 8007000Eh  +
push 3F6h  +
push offset aUploadfilepa_8  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C16F  +
push 100h  +
push eax  +
push 130h  +
call sub_10301CE  +
cmp eax ebx +
jge loc_102BF94  +
push eax  +
push 3FCh  +
jmp loc_102BF5F  +
mov eax dword_104E188 +
push dword ptr [eax+70h]  +
push dword ptr [ebp-20h]  +
push 400h  +
push dword ptr [ebp-28h]  +
call sub_100DD8E  +
add esp 10h +
cmp eax ebx +
jge loc_102BFBB  +
push eax  +
push 3FFh  +
jmp loc_102BF5F  +
push dword ptr [ebp-28h]  +
mov ecx [ebp-10h] +
call sub_100C7C0  +
cmp eax ebx +
jge loc_102BFD2  +
push eax  +
push 402h  +
jmp loc_102BF5F  +
mov ecx [ebp-10h] +
lea eax [ebp-14h] +
push eax  +
push offset aLstview  +
call sub_100D26C  +
cmp eax ebx +
jge loc_102BFF2  +
push eax  +
push 405h  +
jmp loc_102BF5F  +
mov eax [ebp-10h] +
cmp [eax+38h] ebx +
jz loc_102C05C  +
mov esi ds:SendMessageW +
push ebx  +
push ebx  +
push 1004h  +
push dword ptr [ebp-14h]  +
call esi  +
mov [ebp-30h] eax +
mov [ebp-18h] ebx +
cmp eax ebx +
jbe loc_102C03C  +
push 0F000h  +
push dword ptr [ebp-18h]  +
push 102Ch  +
push dword ptr [ebp-14h]  +
call esi  +
shr eax 0Ch +
dec eax  +
jz loc_102C031  +
inc dword ptr [ebp-24h]  +
inc dword ptr [ebp-18h]  +
mov eax [ebp-18h] +
cmp eax [ebp-30h] +
jb loc_102C016  +
mov eax [ebp-24h] +
mov ecx [ebp-10h] +
neg eax  +
sbb eax eax +
push 2  +
and eax 2 +
push eax  +
push 48Bh  +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
jmp loc_102C16F  +
push 208h  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jnz loc_102C07D  +
push 8007000Eh  +
push 41Ah  +
jmp loc_102BF5F  +
mov ecx [ebp-10h] +
lea eax [ebp-2Ch] +
push eax  +
push offset aLstview  +
call sub_100C938  +
cmp eax ebx +
jge loc_102C09D  +
push eax  +
push 41Dh  +
jmp loc_102BF5F  +
push dword ptr [ebp-10h]  +
mov ecx [ebp-2Ch] +
push offset loc_102BCEC  +
call ds:?SetNotifyHandler@CCBase@DirectUI@@QAEXP6GHIIJPAJPAX@Z1@Z  +
lea eax [ebp-40h] +
push eax  +
push dword ptr [ebp-14h]  +
call ds:GetClientRect  +
push 2  +
mov dword ptr [ebp-74h] 0Ah +
mov [ebp-60h] ebx +
call ds:GetSystemMetrics  +
mov ecx [ebp-38h] +
mov esi ds:SendMessageW +
sub ecx eax +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-60h] +
push eax  +
push 1061h  +
push dword ptr [ebp-14h]  +
mov [ebp-6Ch] ecx +
call esi  +
push ebx  +
push 1  +
push 108Eh  +
push dword ptr [ebp-14h]  +
call esi  +
mov eax 14004h +
push eax  +
push eax  +
push 1036h  +
push dword ptr [ebp-14h]  +
call esi  +
push 0FFFFFFF0h  +
push dword ptr [ebp-14h]  +
call ds:GetWindowLongW  +
or eax 4004h +
push eax  +
push 0FFFFFFF0h  +
push dword ptr [ebp-14h]  +
call ds:SetWindowLongW  +
push dword_104E198  +
mov ecx [ebp-10h] +
call sub_102B5CF  +
cmp eax ebx +
jge loc_102C144  +
push eax  +
push 43Eh  +
jmp loc_102BF5F  +
xor eax eax +
inc eax  +
mov [ebp-0A0h] eax +
mov [ebp-0A4h] eax +
lea eax [ebp-0B0h] +
push eax  +
push ebx  +
push 102Bh  +
push dword ptr [ebp-14h]  +
call esi  +
mov eax [ebp-10h] +
mov dword ptr [eax+38h] 1 +
push dword ptr [ebp-28h]  +
push ebx  +
call edi  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp [ebp-20h] ebx +
jz loc_102C18C  +
push dword ptr [ebp-20h]  +
push ebx  +
call edi  +
push eax  +
call esi  +
cmp [ebp-1Ch] ebx +
jz loc_102C19A  +
push dword ptr [ebp-1Ch]  +
push ebx  +
call edi  +
push eax  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-48h] +
call sub_100CE97  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102C1E9  +
push esi  +
push 204h  +
push offset aKillui  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C1F4  +
push [ebp+arg_0]  +
mov ecx [ebp+var_4] +
call sub_10130BB  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi ds:GetProcessHeap +
push 800h  +
push 0  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_102C24C  +
mov eax 8007000Eh +
push eax  +
push 34Ch  +
push offset aUpdateuitextby  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+uID] eax +
call sub_1014247  +
add esp 14h +
jmp loc_102C2B9  +
push 400h  +
push esi  +
push [ebp+uID]  +
xor eax eax +
mov [esi] ax +
call sub_10301CE  +
mov [ebp+uID] eax +
test eax eax +
jge loc_102C26E  +
push eax  +
push 350h  +
jmp loc_102C284  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov [ebp+uID] eax +
test eax eax +
jge loc_102C29A  +
push eax  +
push 353h  +
push offset aUpdateuitextby  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C2A9  +
mov ecx [ebp+var_4] +
push 0  +
push 1  +
push esi  +
call sub_1012476  +
xor esi esi +
test esi esi +
jz loc_102C2B9  +
push esi  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+uID] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102C2FD  +
push esi  +
push 37Fh  +
push offset aUpdateuitext  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C30D  +
push [ebp+arg_4]  +
mov ecx [ebp+var_4] +
push 0  +
push [ebp+wParam]  +
call sub_1012476  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] 400h +
mov [ebp+ExecInfo.lpVerb] offset Operation +
mov [ebp+ExecInfo.lpFile] offset aControl_exe +
mov [ebp+ExecInfo.nShow] 1 +
mov [ebp+ExecInfo.lpParameters] offset aNameMicrosof_2 +
call ds:ShellExecuteExW  +
test eax eax +
jz loc_102C36E  +
xor esi esi +
jmp loc_102C3A2  +
call ds:GetLastError  +
test eax eax +
jle loc_102C382  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102C3A2  +
push esi  +
push 5DFh  +
push offset aLaunchsettings  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax hObject +
push esi  +
push edi  +
push 1Ah  +
pop ecx  +
push 0FFFFFFFFh  +
mov esi offset Handles +
lea edi [ebp+Handles] +
movs   +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 1Bh  +
call ds:WaitForMultipleObjects  +
sub eax 19h +
jz loc_102C42B  +
dec eax  +
jz loc_102C427  +
sub eax 66h +
jz loc_102C409  +
mov esi 80070057h +
push esi  +
push 24Ah  +
push offset aWaitforprogres  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C460  +
call ds:GetLastError  +
test eax eax +
jle loc_102C41D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 245h  +
jmp loc_102C3F3  +
xor esi esi +
jmp loc_102C460  +
push hEvent  +
call ds:SetEvent  +
test eax eax +
jnz loc_102C45D  +
call ds:GetLastError  +
test eax eax +
jle loc_102C44F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102C45D  +
push esi  +
push 23Bh  +
jmp loc_102C3F3  +
xor esi esi +
inc esi  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 424h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
lea eax [ebp+var_41C] +
push eax  +
mov [ebp+lpFileName] ebx +
mov [ebp+var_420] ebx +
mov [ebp+var_41C] ebx +
mov [ebp+var_424] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_102C4B6  +
push esi  +
push 2E1h  +
jmp loc_102C4CD  +
mov eax [ebp+var_41C] +
cmp dword ptr [eax+7Ch] 1 +
jz loc_102C4E6  +
mov esi 80070057h +
push esi  +
push 2E5h  +
push offset aDownload  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C66E  +
mov [eax+80h] ebx +
mov eax [eax+78h] +
push edi  +
mov edi [eax] +
cmp edi ebx +
jnz loc_102C503  +
mov esi 8000FFFFh +
push esi  +
push 2E9h  +
jmp loc_102C559  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov esi ds:_wcsnicmp +
push 7  +
mov ebx eax +
push offset aHttp  +
push ebx  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_102C541  +
push 8  +
push offset aHttps  +
push ebx  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_102C541  +
mov esi 80070057h +
push esi  +
push 2F0h  +
jmp loc_102C559  +
lea eax [ebp+FileName] +
push eax  +
call sub_102FF81  +
mov esi eax +
test esi esi +
jge loc_102C56A  +
push esi  +
push 2F7h  +
push offset aDownload  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_102C63D  +
lea eax [ebp+var_420] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
call sub_1038CD1  +
test eax eax +
jl loc_102C66A  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jz loc_102C66A  +
lea eax [ebp+FileName] +
push eax  +
call sub_103604D  +
mov esi eax +
test esi esi +
jge loc_102C5AE  +
push esi  +
push 306h  +
jmp loc_102C632  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push offset aP0  +
call sub_102FEEB  +
mov esi eax +
test esi esi +
jge loc_102C5D2  +
push esi  +
push 309h  +
jmp loc_102C632  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_102E6EB  +
mov esi eax +
test esi esi +
jge loc_102C5F3  +
push esi  +
push 30Fh  +
jmp loc_102C632  +
lea eax [ebp+lpFileName] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1027243  +
test eax eax +
jnz loc_102C658  +
mov ecx dword_104E188 +
lea eax [ebp+var_424] +
push eax  +
push 0  +
push 0  +
push [ebp+lpFileName]  +
call sub_102820E  +
mov esi eax +
test esi esi +
jge loc_102C647  +
push esi  +
push 31Bh  +
push offset aDownload  +
push offset aDwzErrorSDHr0x  +
push ebx  +
call sub_1014247  +
add esp 14h +
jmp loc_102C66D  +
mov eax dword_104E188 +
mov dword ptr [eax+0D0h] 9 +
jmp loc_102C66D  +
lea eax [ebp+var_20C] +
push eax  +
mov ecx edi +
xor esi esi +
call sub_102607B  +
jmp loc_102C66D  +
xor esi esi +
inc esi  +
pop edi  +
cmp [ebp+lpFileName] 0 +
jz loc_102C68C  +
push [ebp+lpFileName]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+NumberOfBytesRead] +
xor edi edi +
push eax  +
mov [ebp+var_8] edi +
mov [ebp+NumberOfBytesRead] edi +
call sub_101453D  +
mov esi eax +
cmp esi edi +
jge loc_102C6CC  +
push esi  +
push 492h  +
jmp loc_102C6EC  +
push 161h  +
mov uID 194h +
call sub_102C200  +
mov esi eax +
cmp esi edi +
jge loc_102C702  +
push esi  +
push 496h  +
push offset aUploadfile  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C746  +
mov eax dword_104E188 +
mov eax [eax+0D8h] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+NumberOfBytesRead]  +
push eax  +
call sub_1038781  +
mov esi eax +
cmp esi edi +
jge loc_102C723  +
xor esi esi +
inc esi  +
mov ecx dword_104E188 +
xor eax eax +
cmp esi 1 +
setnz al  +
mov [ecx+8] eax +
mov eax [ebp+NumberOfBytesRead] +
mov ecx dword_104E188 +
mov [ecx+88h] eax +
mov [ebp+NumberOfBytesRead] edi +
cmp [ebp+NumberOfBytesRead] edi +
jz loc_102C75C  +
push [ebp+NumberOfBytesRead]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor edi edi +
push 15Fh  +
mov [ebp+var_8] edi +
mov [ebp+lpMem] edi +
mov [ebp+uID] 152h +
call sub_102C200  +
mov esi eax +
cmp esi edi +
jge loc_102C7B1  +
push esi  +
push 4C8h  +
push offset aValidatesuppor  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C851  +
mov eax dword_104E188 +
mov uID 19Ah +
mov ecx [eax+0D8h] +
mov eax [eax+74h] +
lea edx [ebp+var_8] +
push edx  +
push ecx  +
push eax  +
call sub_1038BC3  +
mov esi eax +
cmp esi edi +
jge loc_102C7E2  +
push esi  +
push 4CFh  +
jmp loc_102C798  +
mov eax dword_104E188 +
push ebx  +
mov [eax+3Ch] edi +
cmp esi 1 +
jnz loc_102C836  +
mov eax dword_104E188 +
mov eax [eax+0D8h] +
mov eax [eax+20h] +
cmp eax edi +
jz loc_102C804  +
mov edi [eax] +
mov ebx 1F4h +
cmp [ebp+var_8] ebx +
jnz loc_102C836  +
test edi edi +
jz loc_102C89F  +
mov esi ds:_wcsicmp +
push offset aSInvalidtokene  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102C857  +
mov eax dword_104E188 +
mov dword ptr [eax+3Ch] 1 +
xor esi esi +
cmp [ebp+lpMem] 0 +
jz loc_102C850  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
cmp [ebp+var_8] ebx +
jnz loc_102C836  +
push offset aSInvalidlocale  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102C873  +
mov [ebp+uID] 2863h +
jmp loc_102C89F  +
push offset aSNodiagnostice  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102C88A  +
mov [ebp+uID] 2864h +
jmp loc_102C89F  +
push offset aSExpiredtokene  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102C89F  +
mov [ebp+uID] 2865h +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
test edi edi +
jnz loc_102C8C9  +
mov esi 8007000Eh +
push esi  +
push 4EAh  +
jmp loc_102C8E3  +
push 400h  +
push edi  +
push [ebp+uID]  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_102C8FC  +
push esi  +
push 4EDh  +
push offset aValidatesuppor  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C838  +
mov ecx dword_104E188 +
push edi  +
call sub_1014115  +
mov esi 80004005h +
push esi  +
push 4F3h  +
push offset aValidatesuppor  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102C850  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_8] +
push eax  +
mov uID 196h +
call sub_101C0E6  +
mov esi eax +
test esi esi +
jge loc_102C965  +
push esi  +
push 66Ah  +
jmp loc_102C9FA  +
mov ecx dword_104E188 +
mov uID 190h +
call sub_101C353  +
test eax eax +
jz loc_102C9B7  +
push dword_104E0DC  +
call ds:SetEvent  +
test eax eax +
jz loc_102C995  +
xor esi esi +
jmp loc_102CA18  +
call ds:GetLastError  +
test eax eax +
jle loc_102C9A9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102CA18  +
push esi  +
push 673h  +
jmp loc_102C9FA  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_102C9CA  +
push esi  +
push 679h  +
jmp loc_102C9FA  +
cmp esi 1 +
jz loc_102CA18  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102C9E6  +
push esi  +
push 680h  +
jmp loc_102C9FA  +
mov ecx [ebp+var_4] +
call sub_10125BC  +
mov esi eax +
test esi esi +
jge loc_102CA10  +
push esi  +
push 683h  +
push offset aSkipintro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CA18  +
mov ecx [ebp+var_4] +
call sub_1013F80  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_8] +
push eax  +
call sub_1031307  +
mov esi eax +
test esi esi +
jge loc_102CA49  +
push esi  +
push 6A8h  +
jmp loc_102CA76  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_102CA5C  +
push esi  +
push 6AEh  +
jmp loc_102CA76  +
cmp esi 1 +
jz loc_102CAD8  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102CA8C  +
push esi  +
push 6B4h  +
push offset aForcepackagepa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CAD8  +
mov ecx [ebp+var_4] +
push edi  +
call sub_101246D  +
mov edi eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
cmp eax 29h +
jz loc_102CAC6  +
mov eax 80004005h +
push eax  +
push 6BAh  +
push offset aForcepackagepa  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_102CAD7  +
push 17h  +
mov ecx edi +
call sub_100C7A3  +
mov ecx [ebp+var_4] +
call sub_1013F80  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax dword_104E188 +
test ecx ecx +
jnz loc_102CAFF  +
xor ecx ecx +
cmp ecx [eax+0B4h] +
sbb ecx ecx +
neg ecx  +
xor edx edx +
test ecx ecx +
setnz dl  +
cmp dword ptr [eax+58h] 0 +
lea edx ds:162h[edx*4] +
mov ecx edx +
jz loc_102CB1B  +
add ecx 2710h +
push esi  +
push ecx  +
call sub_102C200  +
mov esi eax +
test esi esi +
jge loc_102CB42  +
push esi  +
push 6E8h  +
push offset aSetdiagnosepro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov esi eax +
test esi esi +
jge loc_102CB87  +
push esi  +
push 708h  +
push offset aReloadpackages  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CC1E  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
call sub_102CAE2  +
mov esi eax +
test esi esi +
jge loc_102CB9F  +
push esi  +
push 70Bh  +
jmp loc_102CC0A  +
push edi  +
push 0  +
call sub_1032BFB  +
mov esi eax +
test esi esi +
jge loc_102CBB5  +
push esi  +
push 70Eh  +
jmp loc_102CC0A  +
mov eax dword_104E188 +
inc dword ptr [eax+0B4h]  +
mov ecx [ebp+var_4] +
call sub_101B5BA  +
mov esi eax +
test esi esi +
jge loc_102CBD6  +
push esi  +
push 713h  +
jmp loc_102CC0A  +
push dword_104E0DC  +
call ds:SetEvent  +
test eax eax +
jz loc_102CBEA  +
xor esi esi +
jmp loc_102CC1D  +
call ds:GetLastError  +
test eax eax +
jle loc_102CBFE  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102CC1D  +
push esi  +
push 716h  +
push offset aReloadpackages  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_102CC46  +
push esi  +
push 192h  +
jmp loc_102CC60  +
cmp esi 1 +
jz loc_102CC7E  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102CC76  +
push esi  +
push 198h  +
push offset aWorkertaskcomp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CC7E  +
mov ecx [ebp+var_4] +
call sub_1013F80  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_102CCA6  +
push esi  +
push 1B4h  +
jmp loc_102CCD6  +
cmp esi 1 +
jz loc_102CCF4  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102CCC2  +
push esi  +
push 1BAh  +
jmp loc_102CCD6  +
mov ecx [ebp+var_4] +
call sub_1012B44  +
mov esi eax +
test esi esi +
jge loc_102CCEC  +
push esi  +
push 1BDh  +
push offset aNorootcauses  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CCF4  +
mov ecx [ebp+var_4] +
call sub_1013F80  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
call sub_102C3AC  +
mov esi eax +
test esi esi +
jge loc_102CD1C  +
push esi  +
push 1DBh  +
jmp loc_102CD4C  +
cmp esi 1 +
jz loc_102CD6A  +
lea eax [ebp+var_4] +
push eax  +
call sub_101235B  +
mov esi eax +
test esi esi +
jge loc_102CD38  +
push esi  +
push 1E1h  +
jmp loc_102CD4C  +
mov ecx [ebp+var_4] +
call sub_1012606  +
mov esi eax +
test esi esi +
jge loc_102CD62  +
push esi  +
push 1E4h  +
push offset aRetrydownload  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CD6A  +
mov ecx [ebp+var_4] +
call sub_1013F80  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 634h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_62C] +
push eax  +
mov [ebp+var_634] edi +
mov [ebp+var_628] edi +
mov [ebp+var_62C] edi +
call sub_1031307  +
mov esi eax +
cmp esi edi +
jge loc_102CDD0  +
push esi  +
push 270h  +
push offset aSupportdownloa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102CFF5  +
mov ecx [ebp+var_62C] +
push ebx  +
push offset aSupport  +
call sub_101ABBC  +
mov eax dword_104E188 +
mov ebx [eax+0D8h] +
add ebx 24h +
mov eax [ebx] +
mov [ebp+var_630] ebx +
cmp eax ebx +
jz loc_102CFD5  +
mov eax [eax] +
inc [ebp+var_628]  +
cmp eax ebx +
jnz loc_102CDFF  +
cmp [ebp+var_628] edi +
jz loc_102CFD5  +
cmp [ebp+var_628] 10h +
ja loc_102CFD5  +
push [ebp+var_628]  +
mov ecx [ebp+var_62C] +
call sub_10311A1  +
mov esi eax +
cmp esi edi +
jge loc_102CE46  +
push esi  +
push 284h  +
jmp loc_102CFE0  +
mov eax [ebx] +
cmp eax ebx +
jz loc_102CFF4  +
jmp loc_102CE58  +
mov eax [ebp+var_628] +
mov ebx eax +
mov eax [eax] +
mov [ebp+var_628] eax +
lea eax [ebp+FileName] +
push eax  +
call sub_102FF81  +
mov esi eax +
test esi esi +
jl loc_102CF8B  +
mov eax [ebp+var_62C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
push dword ptr [eax+edi*4]  +
push ebx  +
call sub_10256EE  +
mov esi eax +
test esi esi +
jl loc_102CF93  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_102CF9B  +
lea eax [ebp+var_634] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
call sub_1038CD1  +
mov esi eax +
test esi esi +
jl loc_102CFA8  +
cmp esi 1 +
jz loc_102CFC8  +
cmp edi 0Ah +
jnb loc_102CFC8  +
push 70h  +
pop eax  +
mov word ptr [ebp+var_214] ax +
xor eax eax +
mov word ptr [ebp+var_214+2] ax +
push 0Ah  +
pop ecx  +
xor edx edx +
mov eax edi +
div  ecx +
mov ebx 104h +
add eax 30h +
mov word ptr [ebp+var_C] ax +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
lea eax [ebp+var_214] +
add edx 30h +
push eax  +
mov word ptr [ebp+var_C+2] dx +
call sub_1014151  +
mov esi eax +
test esi esi +
jl loc_102CFB0  +
push ebx  +
lea eax [ebp+var_41C] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_102FEEB  +
mov esi eax +
test esi esi +
jl loc_102CFB8  +
lea eax [ebp+var_41C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_102E6EB  +
mov esi eax +
test esi esi +
jl loc_102CFC0  +
mov eax [ebp+var_62C] +
mov [eax+80h] edi +
mov eax [eax+78h] +
lea ecx [ebp+var_41C] +
push ecx  +
mov ecx [eax+edi*4] +
call sub_102607B  +
mov eax [ebp+var_630] +
inc edi  +
cmp [ebp+var_628] eax +
jnz loc_102CE52  +
jmp loc_102CFF4  +
push esi  +
push 28Eh  +
jmp loc_102CFE0  +
push esi  +
push 291h  +
jmp loc_102CFE0  +
mov esi 8000FFFFh +
push esi  +
push 293h  +
jmp loc_102CFE0  +
push esi  +
push 29Ch  +
jmp loc_102CFE0  +
push esi  +
push 2AEh  +
jmp loc_102CFE0  +
push esi  +
push 2B4h  +
jmp loc_102CFE0  +
push esi  +
push 2BAh  +
jmp loc_102CFE0  +
mov esi 80004005h +
push esi  +
push 2A0h  +
jmp loc_102CFE0  +
mov esi 80004005h +
push esi  +
push 280h  +
push offset aSupportdownloa  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+FilePart] 0 +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
mov ebx 208h +
push ebx  +
push 0  +
mov uID 195h +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102D067  +
mov ebx 8007000Eh +
push ebx  +
push 3A3h  +
push offset aDefaultcabandu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D153  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
mov edi eax +
mov [ebp+var_C] edi +
test edi edi +
jnz loc_102D088  +
mov ebx 8007000Eh +
push ebx  +
push 3A4h  +
jmp loc_102D11F  +
push edi  +
call sub_102FF81  +
mov ebx eax +
test ebx ebx +
jge loc_102D09F  +
push ebx  +
push 3AAh  +
jmp loc_102D11F  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpMem]  +
mov ebx 104h +
push ebx  +
push edi  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_102D114  +
cmp eax ebx +
ja loc_102D114  +
mov eax [ebp+FilePart] +
cmp eax [ebp+lpMem] +
jbe loc_102D114  +
xor ecx ecx +
push 1  +
push ecx  +
mov [eax-2] cx +
call sub_1032BFB  +
mov ebx eax +
test ebx ebx +
jge loc_102D0DF  +
push ebx  +
push 3BDh  +
jmp loc_102D11F  +
push 0  +
push dword_104E198  +
push [ebp+FilePart]  +
push [ebp+lpMem]  +
call sub_102F2C7  +
mov ebx eax +
test ebx ebx +
jge loc_102D100  +
push ebx  +
push 3C0h  +
jmp loc_102D11F  +
push edi  +
call sub_102C6A1  +
mov ebx eax +
test ebx ebx +
jge loc_102D133  +
push ebx  +
push 3C3h  +
jmp loc_102D11F  +
mov ebx 80028016h +
push ebx  +
push 3B3h  +
push offset aDefaultcabandu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpMem]  +
push 0  +
call esi  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp+var_C] 0 +
jz loc_102D153  +
push [ebp+var_C]  +
push 0  +
call esi  +
push eax  +
call edi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor esi esi +
mov [ebp+FilePart] esi +
push 164h  +
mov [ebp+var_C] esi +
mov uID 195h +
call sub_102C200  +
mov edi eax +
cmp edi esi +
jge loc_102D1AA  +
push edi  +
push 3E8h  +
push offset aCabanduploadfi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D2BF  +
push ebx  +
mov ebx ds:GetProcessHeap +
mov edi 208h +
push edi  +
push esi  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102D1DA  +
mov edi 8007000Eh +
push edi  +
push 3EAh  +
jmp loc_102D284  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov esi eax +
mov [ebp+var_C] esi +
test esi esi +
jnz loc_102D1FB  +
mov edi 8007000Eh +
push edi  +
push 3EBh  +
jmp loc_102D284  +
push esi  +
call sub_102FF81  +
mov edi eax +
test edi edi +
jge loc_102D20F  +
push edi  +
push 3F1h  +
jmp loc_102D284  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpMem]  +
mov edi 104h +
push edi  +
push esi  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_102D279  +
cmp eax edi +
ja loc_102D279  +
mov eax [ebp+FilePart] +
cmp eax [ebp+lpMem] +
jbe loc_102D279  +
xor ecx ecx +
mov [eax-2] cx +
mov eax dword_104E188 +
mov ecx [eax+0B0h] +
mov eax [eax+80h] +
push ecx  +
push eax  +
push [ebp+FilePart]  +
push [ebp+lpMem]  +
call sub_102E729  +
mov edi eax +
test edi edi +
jge loc_102D265  +
push edi  +
push 408h  +
jmp loc_102D284  +
push esi  +
call sub_102C6A1  +
mov edi eax +
test edi edi +
jge loc_102D298  +
push edi  +
push 40Bh  +
jmp loc_102D284  +
mov edi 80028016h +
push edi  +
push 3FAh  +
push offset aCabanduploadfi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
mov esi ds:HeapFree +
jz loc_102D2AE  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call esi  +
cmp [ebp+var_C] 0 +
jz loc_102D2BE  +
push [ebp+var_C]  +
push 0  +
call ebx  +
push eax  +
call esi  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
push 0Ah  +
pop ecx  +
xor ebx ebx +
xor eax eax +
mov [ebp+var_34] ebx +
lea edi [ebp+var_30] +
push 15Fh  +
stos   +
mov [ebp+var_8] ebx +
call sub_102C200  +
mov esi eax +
cmp esi ebx +
jge loc_102D316  +
push esi  +
push 433h  +
push offset aReuploadfiles  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D507  +
push 208h  +
push ebx  +
mov ebx ds:GetProcessHeap +
mov uID 195h +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102D362  +
mov esi 8007000Eh +
push esi  +
push 436h  +
push offset aReuploadfiles  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D4F3  +
lea eax [ebp+var_34] +
push eax  +
call sub_103773B  +
push offset aResults_cab  +
push dword_104E198  +
push offset aSS_2  +
push 104h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_102D399  +
push esi  +
push 440h  +
jmp loc_102D349  +
mov eax dword_104E188 +
lea ecx [ebp+var_34] +
mov uID 15Fh +
mov eax [eax+6Ch] +
push ecx  +
push eax  +
call sub_1037FEE  +
mov esi eax +
test esi esi +
jge loc_102D3C3  +
push esi  +
push 447h  +
jmp loc_102D349  +
push 800h  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov edi eax +
test edi edi +
jnz loc_102D3E5  +
mov esi 8007000Eh +
push esi  +
push 449h  +
jmp loc_102D4CF  +
push [ebp+var_20]  +
push 400h  +
push edi  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_102D404  +
push esi  +
push 44Ch  +
jmp loc_102D4CF  +
mov ecx dword_104E188 +
push edi  +
call sub_101C2B1  +
mov eax dword_104E188 +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_34] +
mov uID 19Ah +
mov eax [eax+74h] +
push ecx  +
push eax  +
xor edi edi +
call sub_1038BC3  +
mov esi eax +
test esi esi +
jge loc_102D443  +
push esi  +
push 456h  +
jmp loc_102D349  +
mov ecx dword_104E188 +
lea eax [ebp+var_34] +
push 161h  +
mov [ecx+0D8h] eax +
call sub_102C200  +
mov esi eax +
test esi esi +
jge loc_102D46D  +
push esi  +
push 45Bh  +
jmp loc_102D349  +
push [ebp+lpMem]  +
call sub_102C6A1  +
mov esi eax +
test esi esi +
jge loc_102D486  +
push esi  +
push 45Eh  +
jmp loc_102D349  +
jnz loc_102D4F3  +
call sub_10321FD  +
mov esi eax +
test esi esi +
jge loc_102D49E  +
push esi  +
push 466h  +
jmp loc_102D349  +
push [ebp+lpMem]  +
call ds:DeleteFileW  +
test eax eax +
jz loc_102D4AF  +
xor esi esi +
jmp loc_102D4F3  +
call ds:GetLastError  +
test eax eax +
jle loc_102D4C3  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102D4F3  +
push esi  +
push 469h  +
push offset aReuploadfiles  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test edi edi +
jz loc_102D4F3  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpMem] 0 +
jz loc_102D507  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
lea eax [ebp+var_34] +
push eax  +
call sub_1037AB3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
xor edi edi +
push 800h  +
push edi  +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_102D571  +
mov edi 8007000Eh +
push edi  +
push 558h  +
push offset aSetsupportmeta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D68F  +
lea eax [ebp+var_8] +
push eax  +
call sub_1031307  +
mov edi eax +
test edi edi +
jge loc_102D58B  +
push edi  +
push 55Bh  +
jmp loc_102D64E  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+7Ch] 1 +
jnz loc_102D608  +
push 800h  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_102D5B7  +
mov edi 8007000Eh +
push edi  +
push 561h  +
jmp loc_102D64E  +
mov esi 400h +
push esi  +
push eax  +
push 17Ch  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102D5D6  +
push edi  +
push 564h  +
jmp loc_102D64E  +
mov eax [ebp+var_8] +
and dword ptr [eax+80h] 0 +
mov eax [eax+78h] +
mov ecx [eax] +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push [ebp+var_C]  +
push esi  +
push [ebp+lpBuffer]  +
call sub_100DD8E  +
mov edi eax +
add esp 10h +
test edi edi +
jge loc_102D629  +
push edi  +
push 56Bh  +
jmp loc_102D64E  +
mov esi 400h +
push esi  +
push [ebp+lpBuffer]  +
push 17Dh  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102D629  +
push edi  +
push 56Eh  +
jmp loc_102D64E  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_8] +
call sub_101ABF7  +
push esi  +
push [ebp+lpBuffer]  +
push 17Eh  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102D664  +
push edi  +
push 574h  +
push offset aSetsupportmeta  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D66F  +
push [ebp+lpBuffer]  +
mov ecx [ebp+var_8] +
call sub_101AC32  +
push [ebp+lpBuffer]  +
push 0  +
call ebx  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp [ebp+var_C] 0 +
jz loc_102D68F  +
push [ebp+var_C]  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push esi  +
push eax  +
mov [ebp+ExecInfo.cbSize] esi +
call memset  +
add esp 0Ch +
push 800h  +
push esi  +
mov [ebp+pNumArgs] esi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx esi +
jnz loc_102D6FA  +
mov edi 8007000Eh +
push edi  +
push 62Dh  +
push offset aRelaunchpackag  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102D7EC  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
xor eax eax +
inc eax  +
cmp [ebp+pNumArgs] eax +
mov [ebp+var_4] eax +
mov esi 400h +
jle loc_102D759  +
push offset asc_10027A4  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_102D789  +
mov eax [ebp+hMem] +
mov ecx [ebp+var_4] +
push dword ptr [eax+ecx*4]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jl loc_102D791  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+pNumArgs] +
jl loc_102D723  +
xor eax eax +
inc eax  +
mov [ebp+ExecInfo.nShow] eax +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] esi +
mov [ebp+ExecInfo.lpVerb] offset Operation +
mov [ebp+ExecInfo.lpFile] offset aMsdt_exe +
mov [ebp+ExecInfo.lpParameters] ebx +
call ds:ShellExecuteExW  +
test eax eax +
jz loc_102D799  +
xor edi edi +
jmp loc_102D7CD  +
push edi  +
push 634h  +
jmp loc_102D7B9  +
push edi  +
push 637h  +
jmp loc_102D7B9  +
call ds:GetLastError  +
test eax eax +
jle loc_102D7AD  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_102D7CD  +
push edi  +
push 642h  +
push offset aRelaunchpackag  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hMem] 0 +
jz loc_102D7EC  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push 160h  +
call sub_102C200  +
mov esi eax +
test esi esi +
jge loc_102D81E  +
push esi  +
push 519h  +
jmp loc_102D8C4  +
mov eax dword_104E188 +
mov uID 193h +
cmp dword ptr [eax+0D0h] 9 +
jnz loc_102D87A  +
call sub_102C46B  +
mov esi eax +
test esi esi +
jge loc_102D849  +
push esi  +
push 51Eh  +
jmp loc_102D8C4  +
cmp esi 1 +
jz loc_102D8D8  +
cmp [ebp+var_4] 0 +
mov uID 196h +
jnz loc_102D8D8  +
push 165h  +
call sub_102C200  +
mov esi eax +
test esi esi +
jge loc_102D88D  +
push esi  +
push 52Eh  +
jmp loc_102D8C4  +
call sub_102CD74  +
mov esi eax +
test esi esi +
jge loc_102D852  +
push esi  +
push 525h  +
jmp loc_102D8C4  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov esi eax +
test esi esi +
jge loc_102D8A4  +
push esi  +
push 531h  +
jmp loc_102D8C4  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jz loc_102D8D8  +
call sub_102D51C  +
mov esi eax +
test esi esi +
jge loc_102D8D8  +
push esi  +
push 535h  +
push offset aDownloadfile  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 38h  +
xor esi esi +
lea eax [ebp-3Ch] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+hHandle] +
push eax  +
mov [ebp+var_4] esi +
mov [ebp+hHandle] 3Ch +
mov dword ptr [ebp-3Ch] 440h +
mov dword ptr [ebp-34h] offset Operation +
mov dword ptr [ebp-30h] offset aMsdt_exe +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-2Ch] offset aIdNetworkdiagn +
call ds:ShellExecuteExW  +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jnz loc_102D95F  +
call ds:GetLastError  +
cmp eax esi +
jle loc_102D951  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jge loc_102D95F  +
push esi  +
push 5A3h  +
jmp loc_102D9C0  +
cmp dword ptr [ebp-8] 0 +
jz loc_102D9AA  +
cmp dword ptr [ebp-8] 0FFFFFFFFh +
jz loc_102D9AA  +
push 0FFFFFFFFh  +
push dword ptr [ebp-8]  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_102D9D4  +
lea eax [ebp+var_4] +
push eax  +
call sub_1037B6C  +
mov esi eax +
test esi esi +
jge loc_102D991  +
push esi  +
push 5B0h  +
jmp loc_102D9C0  +
cmp [ebp+var_4] 0 +
jz loc_102D9D4  +
call sub_102D69B  +
mov esi eax +
test esi esi +
jge loc_102D9D4  +
push esi  +
push 5B4h  +
jmp loc_102D9C0  +
call ds:GetLastError  +
test eax eax +
jle loc_102D9B8  +
and eax ebx +
or eax edi +
mov esi eax +
push esi  +
push 5A5h  +
push offset aLaunchnetworki  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp-8] 0 +
jz loc_102D9E9  +
cmp dword ptr [ebp-8] 0FFFFFFFFh +
jz loc_102D9E9  +
push dword ptr [ebp-8]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push offset aEnablequeryrem  +
push 4  +
push offset aSoftwareMicros  +
push 80000001h  +
mov dword ptr [ebp+Data] 1 +
call sub_1014374  +
mov esi eax +
test esi esi +
jge loc_102DA2D  +
push esi  +
push 605h  +
jmp loc_102DA3E  +
call sub_102D69B  +
mov esi eax +
test esi esi +
jge loc_102DA52  +
push esi  +
push 608h  +
push offset aEnablelocaltro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_4] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
call sub_1031307  +
mov edi eax +
cmp edi esi +
jge loc_102DA94  +
push edi  +
push 3Bh  +
xor ebx ebx +
push offset aWorkerthread  +
inc ebx  +
jmp loc_102DECF  +
push esi  +
push esi  +
call ds:CoInitializeEx  +
xor ebx ebx +
mov edi eax +
inc ebx  +
cmp edi esi +
jge loc_102DAB2  +
push edi  +
push 3Eh  +
push offset aWorkerthread  +
jmp loc_102DECF  +
mov [ebp+var_14] ebx +
mov esi offset aWorkerthread +
push 0FFFFFFFFh  +
push 0  +
push offset Handles  +
push 1Ah  +
call ds:WaitForMultipleObjects  +
mov [ebp+var_C] eax +
cmp eax 19h +
ja loc_102DE9B  +
jmp ds:off_102DFB8[eax*4]  +
cmp [ebp+var_4] 0 +
jnz loc_102DABA  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 52h  +
push esi  +
push offset aDwzIgnoredSDHr  +
push ebx  +
call sub_1014247  +
add esp 14h +
xor edi edi +
jmp loc_102DABA  +
call sub_102C931  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 61h  +
jmp loc_102DECE  +
call sub_10248E4  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 66h  +
jmp loc_102DECE  +
call sub_1034A73  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 6Bh  +
jmp loc_102DAF6  +
call sub_10248E4  +
mov edi eax +
test edi edi +
jl loc_102DF0B  +
call sub_1034A73  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 76h  +
jmp loc_102DAF6  +
call sub_102C769  +
mov edi eax +
test edi edi +
jl loc_102DF10  +
mov eax dword_104E188 +
cmp dword ptr [eax+3Ch] 0 +
jnz loc_102DEB9  +
call sub_102D7F8  +
mov edi eax +
test edi edi +
jl loc_102DF15  +
cmp edi ebx +
jnz loc_102DBAD  +
call sub_102CCFE  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 89h  +
jmp loc_102DECE  +
mov ecx dword_104E188 +
call sub_1012711  +
test eax eax +
jnz loc_102DEB9  +
mov ecx [ebp+var_8] +
and dword_104E068 eax +
mov eax [ecx] +
call dword ptr [eax+40h]  +
test eax eax +
jz loc_102DBF8  +
mov ecx [ebp+var_8] +
call sub_1031382  +
test eax eax +
jnz loc_102DBF8  +
call sub_102CA22  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 9Ah  +
jmp loc_102DECE  +
push 0  +
call sub_102CAE2  +
mov edi eax +
test edi edi +
jl loc_102DF1D  +
cmp [ebp+var_4] 0 +
mov uID 196h +
jnz loc_102DC2C  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov edi eax +
test edi edi +
jl loc_102DF25  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
test eax eax +
jz loc_102DC73  +
mov edi dword_104E188 +
cmp dword ptr [edi+4] 0 +
jnz loc_102DC73  +
cmp dword_104E068 0 +
jz loc_102DC73  +
mov ecx edi +
call sub_1012711  +
test eax eax +
jnz loc_102DC73  +
cmp dword ptr [edi+0D0h] 6 +
jz loc_102DC73  +
mov eax [ebp+var_8] +
and dword_104E068 0 +
mov [eax+58h] ebx +
jmp loc_102DEB9  +
mov ecx [ebp+var_4] +
call sub_101B9D7  +
mov edi eax +
test edi edi +
jl loc_102DF2D  +
mov eax dword_104E188 +
cmp dword ptr [eax+20h] 0 +
jnz loc_102DF35  +
cmp edi ebx +
jnz loc_102DCB2  +
call sub_102CC88  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 0C9h  +
jmp loc_102DECE  +
mov ecx [ebp+var_4] +
call sub_101246D  +
mov edi eax +
mov eax dword_104E188 +
cmp dword ptr [eax+2Ch] 0 +
jz loc_102DCD6  +
mov ecx edi +
call sub_1016DF2  +
test eax eax +
jnz loc_102DEB9  +
mov ecx edi +
call sub_10161EA  +
cmp [ebp+var_4] 0 +
mov uID 196h +
jnz loc_102DD00  +
lea eax [ebp+var_4] +
push eax  +
call sub_101C0E6  +
mov edi eax +
test edi edi +
jl loc_102DF65  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+var_C] eax +
setnz al  +
push eax  +
call sub_101BF14  +
mov edi eax +
test edi edi +
jl loc_102DF70  +
mov eax dword_104E188 +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_102DEB9  +
mov ecx [ebp+var_4] +
call sub_101246D  +
mov edi eax +
mov ecx edi +
call sub_1016F8C  +
test eax eax +
jz loc_102DEB9  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_102DEB9  +
mov eax dword_104E188 +
cmp dword ptr [eax+0B4h] 4 +
jnb loc_102DEB9  +
mov uID 195h +
call sub_102CB4E  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 10Fh  +
jmp loc_102DECE  +
call sub_102D2CA  +
mov edi eax +
test edi edi +
jge loc_102DEB9  +
push edi  +
push 114h  +
jmp loc_102DECE  +
call sub_102D00A  +
mov edi eax +
test edi edi +
jge loc_102DEB9  +
push edi  +
push 119h  +
jmp loc_102DECE  +
call sub_102D15F  +
mov edi eax +
test edi edi +
jge loc_102DEB9  +
push edi  +
push 11Eh  +
jmp loc_102DECE  +
mov eax dword_104E188 +
push dword ptr [eax+88h]  +
call sub_102C6A1  +
mov edi eax +
test edi edi +
jge loc_102DEB9  +
push edi  +
push 123h  +
jmp loc_102DECE  +
push 164h  +
mov uID 195h +
call sub_102C200  +
mov edi eax +
test edi edi +
jl loc_102DF7B  +
xor eax eax +
cmp [ebp+var_C] 0Fh +
setnz al  +
push eax  +
push 0  +
call sub_1032BFB  +
mov edi eax +
test edi edi +
jge loc_102DEB9  +
push edi  +
push 12Fh  +
jmp loc_102DECE  +
call sub_102D8E2  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 134h  +
jmp loc_102DECE  +
call sub_102C319  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 139h  +
jmp loc_102DECE  +
call sub_102D9F5  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 13Eh  +
jmp loc_102DECE  +
call sub_102D69B  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 143h  +
jmp loc_102DECE  +
call ds:GetLastError  +
test eax eax +
jle loc_102DEAF  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jl loc_102DF86  +
call sub_102CC28  +
mov edi eax +
test edi edi +
jge loc_102DABA  +
push edi  +
push 150h  +
***
call sub_1032BFB  +
test edi edi +
jge loc_102DF9D  +
mov ecx [ebp-4] +
test ecx ecx +
jz loc_102DF91  +
call sub_101A2F4  +
test eax eax +
jz loc_102DF91  +
xor edi edi +
jmp loc_102DF97  +
push edi  +
push 73h  +
jmp loc_102DECE  +
push edi  +
push 7Bh  +
jmp loc_102DECE  +
push edi  +
push 85h  +
jmp loc_102DECE  +
push edi  +
push 0A3h  +
jmp loc_102DECE  +
push edi  +
push 0A8h  +
jmp loc_102DECE  +
push edi  +
push 0B8h  +
jmp loc_102DECE  +
lea eax [ebp-10h] +
push eax  +
call sub_101235B  +
mov edi eax +
test edi edi +
jge loc_102DF4C  +
push edi  +
push 0BCh  +
jmp loc_102DECE  +
mov ecx [ebp-10h] +
call sub_1012562  +
mov edi eax +
test edi edi +
jge sub_102DEDD  +
push edi  +
push 0BFh  +
jmp loc_102DECE  +
push edi  +
push 0E2h  +
jmp loc_102DECE  +
push edi  +
push 0E9h  +
jmp loc_102DECE  +
push edi  +
push 12Ah  +
jmp loc_102DECE  +
push edi  +
push 14Ch  +
jmp loc_102DECE  +
push edi  +
call sub_102C1B3  +
mov dword_104E140 edi +
call sub_101A56D  +
cmp dword ptr [ebp-14h] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_102DFB1  +
call ds:CoUninitialize  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+pv] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+bi] +
stos   +
mov [esi] ax +
mov [ebp+Buffer] ax +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push 0FBh  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102E096  +
push edi  +
push 45h  +
push offset aComputerbrowse  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E101  +
lea eax [ebp+pv] +
push eax  +
push 0  +
push 0  +
push offset dword_100182C  +
call SHGetKnownFolderIDList  +
mov edi eax +
test edi edi +
jge loc_102E0B6  +
push edi  +
push 4Fh  +
jmp loc_102E080  +
lea eax [ebp+Buffer] +
mov [ebp+bi.lpszTitle] eax +
mov eax [ebp+pv] +
mov [ebp+bi.pidlRoot] eax +
lea eax [ebp+bi] +
push eax  +
mov [ebp+bi.hwndOwner] ebx +
mov [ebp+bi.ulFlags] 1000h +
mov [ebp+bi.pszDisplayName] esi +
call ds:SHBrowseForFolderW  +
test eax eax +
jnz loc_102E0FA  +
xor edi edi +
inc edi  +
jmp loc_102E101  +
push eax  +
call ds:CoTaskMemFree  +
cmp [ebp+pv] 0 +
jz loc_102E116  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1008568  +
push 1  +
xor ebx ebx +
push ebx  +
push offset stru_1008558  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jge loc_102E15D  +
push esi  +
push 16Dh  +
jmp loc_102E191  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov ebx eax +
test ebx ebx +
jnz loc_102E17B  +
mov eax 8007000Eh +
push eax  +
mov esi eax +
push 170h  +
jmp loc_102E191  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_102E1A5  +
push esi  +
push 173h  +
push offset aShowhelp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+ppv] +
test eax eax +
jz loc_102E1B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+ppv] 0 +
test ebx ebx +
jz loc_102E1C1  +
push ebx  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+bi] +
stos   +
mov [esi] ax +
mov [ebp+Buffer] ax +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push 0FDh  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102E23E  +
push edi  +
push 99h  +
push offset aFolderbrowser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E2C7  +
lea eax [ebp+Buffer] +
mov [ebp+bi.lpszTitle] eax +
lea eax [ebp+bi] +
push eax  +
mov [ebp+bi.hwndOwner] ebx +
mov [ebp+bi.pszDisplayName] esi +
mov [ebp+bi.ulFlags] 50h +
call ds:SHBrowseForFolderW  +
mov ebx eax +
test ebx ebx +
jnz loc_102E278  +
xor edi edi +
inc edi  +
jmp loc_102E2BC  +
push esi  +
push ebx  +
call ds:SHGetPathFromIDListW  +
test eax eax +
jz loc_102E288  +
xor edi edi +
jmp loc_102E2BC  +
call ds:GetLastError  +
test eax eax +
jle loc_102E29C  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_102E2BC  +
push edi  +
push 0AAh  +
push offset aFolderbrowser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test ebx ebx +
jz loc_102E2C7  +
push ebx  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 270h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [ebp+var_214] eax +
mov eax [ebp+arg_10] +
push 58h  +
pop ebx  +
mov [ebp+var_20C] eax +
xor eax eax +
push ebx  +
push eax  +
mov [ebp+lpMem] eax +
mov [ebp+var_208] eax +
mov [ebp+lpBuffer] eax +
lea eax [ebp+var_270] +
push eax  +
call memset  +
and [ebp+var_270.nMaxFileTitle] 0 +
xor eax eax +
mov [esi] ax +
mov eax dword_104E138 +
mov [ebp+var_270.hInstance] eax +
mov eax [ebp+arg_14] +
add esp 0Ch +
neg eax  +
sbb eax eax +
and eax 1000h +
mov [ebp+var_270.hwndOwner] edi +
or eax 4 +
xor edi edi +
mov [ebp+var_270.lStructSize] ebx +
mov [ebp+var_270.lpstrFile] esi +
mov [ebp+var_270.nFilterIndex] 1 +
mov [ebp+var_270.Flags] eax +
mov ebx 208h +
mov esi 104h +
cmp dword_104E06C edi +
jz loc_102E41B  +
push ebx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_102E3D4  +
mov edi 8007000Eh +
push edi  +
push 0EAh  +
push offset aFilebrowser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E699  +
push esi  +
push eax  +
push offset aUserprofile  +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jnz loc_102E409  +
call ds:GetLastError  +
cmp eax edi +
jle loc_102E3F9  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_102E407  +
push edi  +
push 0EDh  +
jmp loc_102E3BB  +
xor edi edi +
mov eax [ebp+lpMem] +
mov [ebp+var_270.lpstrInitialDir] eax +
mov dword_104E06C edi +
cmp dword ptr [ebp+var_214] edi +
jz loc_102E600  +
cmp [ebp+var_20C] edi +
jz loc_102E600  +
push ebx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_208] eax +
cmp eax edi +
jnz loc_102E473  +
mov edi 8007000Eh +
push edi  +
push 0F4h  +
push offset aFilebrowser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
mov ebx [ebp+var_208] +
jmp loc_102E682  +
push ebx  +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpBuffer] eax +
cmp eax edi +
jnz loc_102E4A4  +
mov edi 8007000Eh +
push edi  +
push 0F7h  +
jmp loc_102E457  +
push [ebp+var_20C]  +
push dword ptr [ebp+var_214]  +
push offset aSS_3  +
push esi  +
push [ebp+var_208]  +
call sub_100DD8E  +
mov edi eax +
add esp 14h +
test edi edi +
jge loc_102E4D2  +
push edi  +
push 0FFh  +
jmp loc_102E457  +
mov ebx [ebp+var_208] +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102E4DD  +
push offset asc_10027A4  +
sub eax edx +
push esi  +
sar eax 1 +
push ebx  +
mov dword ptr [ebp+var_214] eax +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102E50E  +
push edi  +
push 107h  +
jmp loc_102E671  +
push [ebp+var_20C]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102E52C  +
push edi  +
push 10Ah  +
jmp loc_102E671  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102E531  +
push offset asc_10027A4  +
sub eax edx +
push esi  +
sar eax 1 +
push ebx  +
mov [ebp+var_20C] eax +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102E562  +
push edi  +
push 112h  +
jmp loc_102E671  +
push esi  +
push [ebp+lpBuffer]  +
push 87h  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102E584  +
push edi  +
push 115h  +
jmp loc_102E671  +
push [ebp+lpBuffer]  +
push esi  +
push ebx  +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102E5A2  +
push edi  +
push 118h  +
jmp loc_102E671  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102E5A7  +
push offset a_  +
sub eax edx +
push esi  +
sar eax 1 +
push ebx  +
mov [ebp+var_208] eax +
call sub_1014151  +
mov edi eax +
test edi edi +
jge loc_102E5D8  +
push edi  +
push 120h  +
jmp loc_102E671  +
mov ecx dword ptr [ebp+var_214] +
xor eax eax +
mov [ebx+ecx*2] ax +
mov ecx [ebp+var_20C] +
mov [ebx+ecx*2] ax +
mov ecx [ebp+var_208] +
mov [ebx+ecx*2] ax +
mov [ebp+var_270.lpstrFilter] ebx +
jmp loc_102E606  +
mov ebx [ebp+var_208] +
mov eax [ebp+arg_8] +
mov [ebp+var_270.nMaxFile] eax +
xor eax eax +
mov [ebp+Buffer] ax +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push 0FCh  +
call sub_10301CE  +
mov edi eax +
test edi edi +
jge loc_102E63C  +
push edi  +
push 136h  +
jmp loc_102E671  +
lea eax [ebp+Buffer] +
mov [ebp+var_270.lpstrTitle] eax +
lea eax [ebp+var_270] +
push eax  +
call ds:GetOpenFileNameW  +
test eax eax +
jnz loc_102E685  +
xor edi edi +
inc edi  +
call ds:CommDlgExtendedError  +
test eax eax +
jz loc_102E685  +
mov edi 80004005h +
push edi  +
push 141h  +
push offset aFilebrowser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test ebx ebx +
jz loc_102E699  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor esi esi +
cmp [ebp+lpMem] esi +
jz loc_102E6B7  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpBuffer] esi +
jz loc_102E6D3  +
push [ebp+lpBuffer]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+lpFileName]  +
call sub_1039AC6  +
mov esi eax +
test esi esi +
jge loc_102E71D  +
push esi  +
push 3Dh  +
push offset aExtractcab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
xor ebx ebx +
push 208h  +
push ebx  +
mov [ebp+var_4] ebx +
mov [ebp+FilePart] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_102E776  +
mov edi 8007000Eh +
push edi  +
push 67h  +
push offset aCreatecab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E83A  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103957D  +
mov edi eax +
cmp edi ebx +
jge loc_102E7A7  +
push edi  +
push 6Dh  +
push offset aCreatecab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E827  +
push esi  +
cmp [ebp+arg_C] ebx +
jbe loc_102E7FE  +
mov esi 104h +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpMem]  +
mov eax [ebp+arg_8] +
push esi  +
push dword ptr [eax+ebx*4]  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_102E857  +
cmp eax esi +
ja loc_102E857  +
mov eax [ebp+FilePart] +
cmp eax [ebp+lpMem] +
jbe loc_102E857  +
xor ecx ecx +
mov [eax-2] cx +
push [ebp+var_4]  +
push [ebp+FilePart]  +
push [ebp+lpMem]  +
call sub_103977D  +
mov edi eax +
test edi edi +
jl loc_102E84F  +
inc ebx  +
cmp ebx [ebp+arg_C] +
jb loc_102E7B2  +
push [ebp+var_4]  +
call sub_103932C  +
mov edi eax +
test edi edi +
jge loc_102E826  +
push edi  +
push 85h  +
push offset aCreatecab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop esi  +
push [ebp+lpMem]  +
xor ebx ebx +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_4] ebx +
jz loc_102E847  +
push [ebp+var_4]  +
call sub_10392F9  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
push edi  +
push 81h  +
jmp loc_102E812  +
mov edi 80028016h +
push edi  +
push 77h  +
jmp loc_102E812  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 44h  +
pop eax  +
push eax  +
push 0  +
mov [ebp+var_8] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102E8AF  +
mov esi 8007000Eh +
push esi  +
push 29Eh  +
push offset aIsadmintoken  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E940  +
push ebx  +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
push 0  +
push 1Ah  +
call ds:CreateWellKnownSid  +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jnz loc_102E8FE  +
call ds:GetLastError  +
test eax eax +
jle loc_102E8DC  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jge loc_102E8FE  +
push esi  +
push 2A4h  +
push offset aIsadmintoken  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102E92C  +
push [ebp+arg_0]  +
xor esi esi +
push [ebp+lpMem]  +
push esi  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_102E92C  +
call ds:GetLastError  +
cmp eax esi +
jle loc_102E91F  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jge loc_102E92C  +
mov eax [ebp+arg_0] +
xor esi esi +
and [eax] esi +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hObject] +
xor esi esi +
push eax  +
push esi  +
push 8  +
mov [ebp+hObject] esi +
mov [ebp+lpMem] esi +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
mov edi 0FFFFh +
test eax eax +
jnz loc_102E9EF  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax esi +
jle loc_102E98F  +
and eax edi +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102E9EF  +
and eax edi +
cmp eax 3F0h +
jz loc_102E9BD  +
push esi  +
push 2DAh  +
push offset aGetcurrentuser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102EACA  +
lea eax [ebp+hObject] +
push eax  +
push 8  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_102E9EF  +
call ebx  +
test eax eax +
jle loc_102E9E1  +
and eax edi +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102E9EF  +
push esi  +
push 2DEh  +
jmp loc_102E9A4  +
mov ebx ds:GetProcessHeap +
mov [ebp+ReturnLength] 32h +
xor esi esi +
cmp [ebp+lpMem] esi +
jz loc_102EA10  +
push [ebp+lpMem]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
push [ebp+ReturnLength]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jz loc_102EA63  +
lea ecx [ebp+ReturnLength] +
push ecx  +
push [ebp+ReturnLength]  +
push eax  +
push 1  +
push [ebp+hObject]  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_102EA4E  +
call ds:GetLastError  +
cmp eax esi +
jle loc_102EA4C  +
and eax edi +
or eax 80070000h +
mov esi eax +
mov eax esi +
and eax edi +
cmp eax 7Ah +
jz loc_102E9FC  +
test esi esi +
jge loc_102EA70  +
push esi  +
push 2EDh  +
jmp loc_102EAA2  +
mov esi 8007000Eh +
push esi  +
push 2E9h  +
jmp loc_102EAA2  +
push [ebp+arg_0]  +
mov eax [ebp+lpMem] +
push dword ptr [eax]  +
call ConvertSidToStringSidW  +
test eax eax +
jz loc_102EA85  +
xor esi esi +
jmp loc_102EAB6  +
call ds:GetLastError  +
test eax eax +
jle loc_102EA96  +
and eax edi +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_102EAB6  +
push esi  +
push 2F3h  +
push offset aGetcurrentuser  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
jz loc_102EACA  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hObject] 0 +
jz loc_102EADF  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_102EADF  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
push 24Ch  +
mov [ebp+var_25C] eax +
lea eax [ebp+FindFileData.ftCreationTime] +
push esi  +
push eax  +
mov [ebp+FindFileData.dwFileAttributes] esi +
call memset  +
add esp 0Ch +
push 208h  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_102EB6E  +
mov esi 8007000Eh +
push esi  +
push 114h  +
push offset aAddpathtocabco  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102ECCB  +
push edi  +
push ebx  +
push offset aS  +
mov edi 104h +
push edi  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102EB95  +
push esi  +
push 117h  +
jmp loc_102ECA1  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpMem]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_102EC85  +
cmp eax 0FFFFFFFFh +
jz loc_102EC85  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
lea eax [ebp+FindFileData.cFileName] +
jz loc_102EC39  +
push offset a__0  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102EC4C  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102EC4C  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push ebx  +
push offset aSS_2  +
push edi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_102EC75  +
push [ebp+lpMem]  +
push [ebp+var_25C]  +
call sub_102EAED  +
mov esi eax +
test esi esi +
jge loc_102EC4C  +
push esi  +
push 12Ch  +
jmp loc_102ECA1  +
push [ebp+var_25C]  +
push eax  +
push ebx  +
call sub_103977D  +
mov esi eax +
test esi esi +
jl loc_102EC7D  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102EBBF  +
push [ebp+hFindFile]  +
call ds:FindClose  +
jmp loc_102ECB5  +
push esi  +
push 129h  +
jmp loc_102ECA1  +
push esi  +
push 134h  +
jmp loc_102ECA1  +
call ds:GetLastError  +
test eax eax +
jle loc_102EC99  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 11Ah  +
push offset aAddpathtocabco  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_102E866  +
mov esi eax +
test esi esi +
jge loc_102ED1B  +
push esi  +
push 1D8h  +
push offset aGetmsdttemppat  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102EDA6  +
cmp [ebp+var_4] 0 +
mov esi offset aMsdtadmin +
jnz loc_102ED2B  +
mov esi offset aMsdt +
push edi  +
push [ebp+lpBuffer]  +
mov edi [ebp+nBufferLength] +
push edi  +
call ds:GetTempPathW  +
test eax eax +
jz loc_102ED75  +
cmp eax edi +
ja loc_102ED75  +
push esi  +
push edi  +
push [ebp+lpBuffer]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102ED59  +
push esi  +
push 1E6h  +
jmp loc_102ED91  +
push offset asc_10017E4  +
push edi  +
push [ebp+lpBuffer]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102EDA5  +
push esi  +
push 1ECh  +
jmp loc_102ED91  +
call ds:GetLastError  +
test eax eax +
jle loc_102ED89  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 1DFh  +
push offset aGetmsdttemppat  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hMem] +
xor esi esi +
push eax  +
mov dword ptr [ebp+hMem] esi +
call sub_102E94C  +
mov ebx ds:GetProcessHeap +
mov edi eax +
cmp edi esi +
jge loc_102EDDD  +
push edi  +
push 320h  +
jmp loc_102EE3F  +
push 800h  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_102EE00  +
mov eax 8007000Eh +
push eax  +
push 325h  +
jmp loc_102EE3D  +
push dword ptr [ebp+hMem]  +
push [ebp+arg_0]  +
push 400h  +
push esi  +
call sub_100DD8E  +
mov edi eax +
add esp 10h +
test edi edi +
jge loc_102EE22  +
push edi  +
push 328h  +
jmp loc_102EE3F  +
push esi  +
call ds:SysAllocString  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
test eax eax +
jnz loc_102EE53  +
mov eax 8007000Eh +
push eax  +
push 32Eh  +
mov edi eax +
push offset aInsertcurrentu  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp dword ptr [ebp+hMem] 0 +
jz loc_102EE62  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
test esi esi +
jz loc_102EE72  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_102E866  +
mov esi eax +
test esi esi +
jge loc_102EE9E  +
push esi  +
push 35Ch  +
jmp loc_102EEC3  +
cmp [ebp+var_4] 0 +
mov eax offset aDAOiciGaSyAOic +
jnz loc_102EEAE  +
mov eax offset aDAOiciGaSyAO_0 +
push [ebp+arg_0]  +
push eax  +
call sub_102EDB2  +
mov esi eax +
test esi esi +
jge loc_102EED7  +
push esi  +
push 36Ch  +
push offset aCreatesddl  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call sub_102EE80  +
mov edi eax +
test edi edi +
jge loc_102EF19  +
push edi  +
push 395h  +
push offset aCreatesecurity  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102EF3E  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
lea eax [esi+4] +
push eax  +
push 1  +
push [ebp+var_4]  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jz loc_102EF54  +
xor edi edi +
and dword ptr [esi+8] 0 +
mov dword ptr [esi] 0Ch +
pop esi  +
cmp [ebp+var_4] 0 +
jz loc_102EF4D  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
call ds:GetLastError  +
test eax eax +
jle loc_102EF68  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_102EF33  +
push edi  +
push 39Fh  +
push offset aCreatesecurity  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102EF3D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_102EFD4  +
mov esi 8007000Eh +
push esi  +
push 432h  +
push offset aExpandvariable  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102F05B  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 400h +
push esi  +
push ebx  +
push [ebp+lpSrc]  +
xor eax eax +
mov [edi] ax +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jnz loc_102F00F  +
call ds:GetLastError  +
test eax eax +
jle loc_102F005  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 439h  +
jmp loc_102F036  +
cmp eax esi +
jb loc_102F020  +
mov esi 8007007Ah +
push esi  +
push 43Ch  +
jmp loc_102F036  +
push ebx  +
push [ebp+arg_4]  +
push edi  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_102F04A  +
push esi  +
push 440h  +
push offset aExpandvariable  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 208h  +
push 0  +
mov dword ptr [ebp+lpPathName] esi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
test edi edi +
jnz loc_102F0CC  +
mov esi 8007000Eh +
push esi  +
push 4D7h  +
push offset aDeletedirector  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102F2B0  +
push esi  +
push offset aS  +
push 104h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102F105  +
push esi  +
push 4DAh  +
push offset aDeletedirector  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102F29B  +
push ebx  +
lea eax [ebp+FindFileData] +
push eax  +
push edi  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
mov edi offset aDeletedirector +
mov ebx 80070000h +
test eax eax +
jz loc_102F259  +
cmp eax 0FFFFFFFFh +
jz loc_102F259  +
mov esi offset aDwzWarningSDHr +
lea eax [ebp+FindFileData.cFileName] +
push offset a__0  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F232  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F232  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+lpPathName]  +
push offset aSS_2  +
push 104h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_102F1A6  +
push eax  +
push 4EBh  +
jmp loc_102F226  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 1 +
jz loc_102F1E1  +
push 80h  +
push [ebp+lpMem]  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_102F1E1  +
call ds:GetLastError  +
test eax eax +
jle loc_102F1D7  +
and eax 0FFFFh +
or eax ebx +
test eax eax +
jge loc_102F1E1  +
push eax  +
push 4F2h  +
jmp loc_102F226  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
push [ebp+lpMem]  +
jz loc_102F201  +
call sub_102F068  +
test eax eax +
jge loc_102F232  +
push eax  +
push 4F7h  +
jmp loc_102F226  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_102F232  +
call ds:GetLastError  +
test eax eax +
jle loc_102F21E  +
and eax 0FFFFh +
or eax ebx +
test eax eax +
jge loc_102F232  +
push eax  +
push 4FBh  +
push edi  +
push esi  +
push 1  +
call sub_1014247  +
add esp 14h +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102F13A  +
push [ebp+hFindFile]  +
call ds:FindClose  +
push dword ptr [ebp+lpPathName]  +
call ds:RemoveDirectoryW  +
test eax eax +
jz loc_102F26D  +
xor esi esi +
jmp loc_102F29A  +
call ds:GetLastError  +
test eax eax +
jle loc_102F27E  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jge loc_102F29A  +
push esi  +
push 504h  +
push edi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop ebx  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
push 24Ch  +
push eax  +
mov [ebp+var_258] eax +
mov [ebp+FindFileData.dwFileAttributes] eax +
lea eax [ebp+FindFileData.ftCreationTime] +
push eax  +
call memset  +
add esp 0Ch +
push 208h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102F34D  +
mov esi 8007000Eh +
push esi  +
push 0B5h  +
push offset aCreatecabfromp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102F4E7  +
lea eax [ebp+var_258] +
push eax  +
push edi  +
push esi  +
call sub_103957D  +
mov esi eax +
test esi esi +
jge loc_102F36C  +
push esi  +
push 0BBh  +
jmp loc_102F4BE  +
push ebx  +
push offset aS  +
mov edi 104h +
push edi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102F397  +
push esi  +
push 0BEh  +
jmp loc_102F4BE  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpMem]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_102F4A2  +
cmp eax 0FFFFFFFFh +
jz loc_102F4A2  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
lea eax [ebp+FindFileData.cFileName] +
jz loc_102F43F  +
mov esi ds:_wcsicmp +
push offset a__0  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F452  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F452  +
cmp [ebp+arg_C] 0 +
jz loc_102F452  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push ebx  +
push offset aSS_2  +
push edi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_102F492  +
push [ebp+lpMem]  +
push [ebp+var_258]  +
call sub_102EAED  +
mov esi eax +
test esi esi +
jge loc_102F452  +
push esi  +
push 0DAh  +
jmp loc_102F4BE  +
push [ebp+var_258]  +
push eax  +
push ebx  +
call sub_103977D  +
mov esi eax +
test esi esi +
jl loc_102F49A  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102F3C1  +
push [ebp+hFindFile]  +
call ds:FindClose  +
push [ebp+var_258]  +
call sub_103932C  +
mov esi eax +
test esi esi +
jge loc_102F4D2  +
push esi  +
push 0E8h  +
jmp loc_102F4BE  +
push esi  +
push 0D7h  +
jmp loc_102F4BE  +
push esi  +
push 0E2h  +
jmp loc_102F4BE  +
call ds:GetLastError  +
test eax eax +
jle loc_102F4B6  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 0C1h  +
push offset aCreatecabfromp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_258] 0 +
jz loc_102F4FB  +
push [ebp+var_258]  +
call sub_10392F9  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ebp-8] +
mov [ebp+hMem] eax +
mov [ebp-0Ch] eax +
mov [ebp+lpMem] eax +
stos   +
cmp ax [esi] +
jz loc_102F656  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102F53E  +
sub eax edx +
sar eax 1 +
cmp eax 4 +
jb loc_102F656  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
test edi edi +
jnz loc_102F582  +
mov ebx 8007000Eh +
push ebx  +
push 3D6h  +
jmp loc_102F68E  +
lea eax [ebp+hMem] +
push eax  +
call sub_102EEE3  +
mov ebx eax +
test ebx ebx +
jge loc_102F59C  +
push ebx  +
push 3D9h  +
jmp loc_102F68E  +
push esi  +
push 400h  +
push edi  +
call sub_102EF8F  +
mov ebx eax +
test ebx ebx +
jge loc_102F5B9  +
push ebx  +
push 3DFh  +
jmp loc_102F68E  +
mov esi ds:wcschr +
push 5Ch  +
pop ebx  +
mov eax ebx +
cmp ax [edi] +
jnz loc_102F5F9  +
cmp ax [edi+2] +
jnz loc_102F5F9  +
push ebx  +
add edi 4 +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F5E9  +
add eax 2 +
push ebx  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102F5FC  +
mov ebx 800700A1h +
push ebx  +
push 3F1h  +
jmp loc_102F68E  +
lea eax [edi+4] +
push ebx  +
add eax 2 +
push eax  +
jmp loc_102F64C  +
xor eax eax +
mov [edi] ax +
lea eax [ebp+hMem] +
push eax  +
push [ebp+lpMem]  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_102F642  +
call ds:GetLastError  +
test eax eax +
jle loc_102F62D  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
test ebx ebx +
jge loc_102F63F  +
and eax 0FFFFh +
cmp eax 0B7h +
jnz loc_102F688  +
push 5Ch  +
pop ebx  +
mov eax ebx +
mov [edi] ax +
push ebx  +
add edi 2 +
push edi  +
call esi  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_102F603  +
xor ebx ebx +
cmp [ebp+lpMem] 0 +
jz loc_102F670  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_102F67F  +
push dword ptr [ebp-0Ch]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
push ebx  +
push 402h  +
push offset aCreatedirector  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102F658  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 46Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push esi  +
push eax  +
mov [ebp+FindFileData.dwFileAttributes] esi +
call memset  +
mov ebx ds:GetProcessHeap +
add esp 0Ch +
mov edi 208h +
push edi  +
push esi  +
mov [ebp+lpMem] esi +
mov [ebp+var_468] esi +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov dword ptr [ebp+lpFileName] eax +
test eax eax +
jnz loc_102F71E  +
mov eax 8007000Eh +
push eax  +
mov ebx eax +
push 463h  +
jmp loc_102F9D8  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102F742  +
mov eax 8007000Eh +
push eax  +
mov ebx eax +
push 464h  +
jmp loc_102F9D8  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov edi eax +
mov [ebp+var_468] edi +
test edi edi +
jnz loc_102F768  +
mov eax 8007000Eh +
push eax  +
mov ebx eax +
push 465h  +
jmp loc_102F9D8  +
mov eax dword_104E190 +
test eax eax +
jz loc_102F784  +
cmp eax 0FFFFFFFFh +
jz loc_102F784  +
push eax  +
call ds:CloseHandle  +
and dword_104E190 0 +
mov esi 104h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_102ECE2  +
mov ebx eax +
test ebx ebx +
jge loc_102F7A7  +
push ebx  +
push 46Fh  +
jmp loc_102F9D8  +
lea eax [ebp+Buffer] +
push eax  +
push offset aS_0  +
push esi  +
push edi  +
call sub_100DD8E  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jge loc_102F7CE  +
push ebx  +
push 472h  +
jmp loc_102F9D8  +
lea eax [ebp+FindFileData] +
push eax  +
push edi  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_102F9BC  +
cmp eax 0FFFFFFFFh +
jz loc_102F9BC  +
mov esi offset aCleanupfiles +
mov edi offset aDwzWarningSDHr +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_102F993  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__0  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F993  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102F993  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push offset aSS_1  +
mov ebx 104h +
push ebx  +
push dword ptr [ebp+lpFileName]  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_102F878  +
push eax  +
push 488h  +
jmp loc_102F985  +
push dword ptr [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
test al 1 +
jz loc_102F8CB  +
push 80h  +
push dword ptr [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_102F8CB  +
call ds:GetLastError  +
test eax eax +
jle loc_102F8B3  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_102F8CB  +
push eax  +
push 48Fh  +
push esi  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
push offset aInuse  +
push dword ptr [ebp+lpFileName]  +
push offset aSS_2  +
push ebx  +
mov ebx [ebp+lpMem] +
push ebx  +
call sub_100DD8E  +
add esp 14h +
test eax eax +
jge loc_102F8FA  +
push eax  +
push 493h  +
jmp loc_102F985  +
push ebx  +
call ds:GetFileAttributesW  +
test al 1 +
jz loc_102F943  +
push 80h  +
push ebx  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_102F943  +
call ds:GetLastError  +
test eax eax +
jle loc_102F92B  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_102F943  +
push eax  +
push 49Ah  +
push esi  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
push ebx  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_102F96E  +
call ds:GetLastError  +
test eax eax +
jle loc_102F964  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_102F96E  +
push eax  +
push 4A2h  +
jmp loc_102F985  +
push dword ptr [ebp+lpFileName]  +
call sub_102F068  +
mov ebx eax +
test ebx ebx +
jge loc_102F993  +
push ebx  +
push 4A5h  +
push esi  +
push edi  +
push 1  +
call sub_1014247  +
add esp 14h +
xor ebx ebx +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102F7FD  +
push [ebp+hFindFile]  +
call ds:FindClose  +
jmp loc_102F9EC  +
call ds:GetLastError  +
test eax eax +
jle loc_102F9D0  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
push ebx  +
push 475h  +
push offset aCleanupfiles  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax lpMem +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
test eax eax +
jz loc_102FA10  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
and lpMem 0 +
mov eax dword_104E198 +
test eax eax +
jz loc_102FA28  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
and dword_104E198 0 +
mov eax dword_104E19C +
test eax eax +
jz loc_102FA3E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword_104E19C 0 +
mov eax dword_104E190 +
test eax eax +
jz loc_102FA5A  +
cmp eax 0FFFFFFFFh +
jz loc_102FA5A  +
push eax  +
call ds:CloseHandle  +
and dword_104E190 0 +
cmp [ebp+lpMem] 0 +
jz loc_102FA70  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call esi  +
cmp dword ptr [ebp+lpFileName] 0 +
jz loc_102FA86  +
push dword ptr [ebp+lpFileName]  +
push 0  +
call edi  +
push eax  +
call esi  +
cmp [ebp+var_468] 0 +
jz loc_102FA9C  +
push [ebp+var_468]  +
push 0  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor esi esi +
push 24Ch  +
mov dword ptr [ebp+var_260] eax +
lea eax [ebp+FindFileData.ftCreationTime] +
push esi  +
push eax  +
mov dword ptr [ebp+var_268] ebx +
mov [ebp+FindFileData.dwFileAttributes] esi +
call memset  +
add esp 0Ch +
mov edi 208h +
push edi  +
push esi  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpExistingFileName] eax +
test eax eax +
jnz loc_102FB3D  +
mov esi 8007000Eh +
push esi  +
push 52Bh  +
push offset aCopydir  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102FD5F  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102FB63  +
mov esi 8007000Eh +
push esi  +
push 52Ch  +
jmp loc_102FD1A  +
push ebx  +
push offset aS  +
mov edi 104h +
push edi  +
push [ebp+lpExistingFileName]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_102FB8E  +
push esi  +
push 52Fh  +
jmp loc_102FD1A  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpExistingFileName]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
test eax eax +
jz loc_102FCFE  +
cmp eax 0FFFFFFFFh +
jz loc_102FCFE  +
mov ebx offset aSS_2 +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+var_268]  +
push ebx  +
push edi  +
push [ebp+lpExistingFileName]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_102FCDE  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push dword ptr [ebp+var_260]  +
push ebx  +
push edi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_102FCE6  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_102FC7F  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__0  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102FCB5  +
lea eax [ebp+FindFileData.cFileName] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102FCB5  +
push dword ptr [ebp+var_260]  +
call sub_102F513  +
mov esi eax +
test esi esi +
jl loc_102FCEE  +
push [ebp+lpExistingFileName]  +
push [ebp+lpMem]  +
call sub_102FAB2  +
mov esi eax +
test esi esi +
jge loc_102FCB5  +
push esi  +
push 54Fh  +
jmp loc_102FD1A  +
push 0  +
push [ebp+lpMem]  +
push [ebp+lpExistingFileName]  +
call ds:CopyFileW  +
test eax eax +
jz loc_102FC9B  +
xor esi esi +
jmp loc_102FCB5  +
call ds:GetLastError  +
test eax eax +
jle loc_102FCAF  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_102FCF6  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_102FBBD  +
push [ebp+hFindFile]  +
call ds:FindClose  +
jmp loc_102FD2E  +
push esi  +
push 53Bh  +
jmp loc_102FD1A  +
push esi  +
push 543h  +
jmp loc_102FD1A  +
push esi  +
push 54Ch  +
jmp loc_102FD1A  +
push esi  +
push 557h  +
jmp loc_102FD1A  +
call ds:GetLastError  +
test eax eax +
jle loc_102FD12  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 532h  +
push offset aCopydir  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_102FD4E  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
push [ebp+lpExistingFileName]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+rguid.Data1] esi +
xor eax eax +
lea edi [ebp+rguid.Data2] +
stos   +
stos   +
push 200h  +
push esi  +
stos   +
mov [ebp+var_18] esi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi esi +
jnz loc_102FDDC  +
mov esi 8007000Eh +
push esi  +
push 212h  +
push offset aNewsessiontemp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_102FED3  +
lea eax [ebp+rguid] +
push eax  +
call ds:UuidCreate  +
cmp eax esi +
jz loc_102FE01  +
cmp eax 720h +
jz loc_102FE01  +
mov esi 80004005h +
push esi  +
push 217h  +
jmp loc_102FEAF  +
mov esi 100h +
push esi  +
push edi  +
lea eax [ebp+rguid] +
push eax  +
call ds:StringFromGUID2  +
test eax eax +
jnz loc_102FE26  +
mov esi 80004005h +
push esi  +
push 21Ch  +
jmp loc_102FEAF  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
push edi  +
call sub_101420B  +
mov esi eax +
test esi esi +
jge loc_102FE3F  +
push esi  +
push 220h  +
jmp loc_102FEAF  +
mov eax [ebp+var_18] +
cmp eax 2 +
jbe loc_102FE52  +
push 5Fh  +
pop ecx  +
mov [edi] cx +
mov [edi+eax*2-2] cx +
push [ebp+nBufferLength]  +
push ebx  +
call sub_102ECE2  +
mov esi eax +
test esi esi +
jge loc_102FE69  +
push esi  +
push 22Eh  +
jmp loc_102FEAF  +
push edi  +
push [ebp+nBufferLength]  +
push ebx  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102FE81  +
push esi  +
push 234h  +
jmp loc_102FEAF  +
push offset asc_10017E4  +
push [ebp+nBufferLength]  +
push ebx  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102FE9D  +
push esi  +
push 23Ah  +
jmp loc_102FEAF  +
push ebx  +
call sub_102F513  +
mov esi eax +
test esi esi +
jge loc_102FEC3  +
push esi  +
push 240h  +
push offset aNewsessiontemp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push lpMem  +
mov edi [ebp+arg_4] +
push [ebp+arg_8]  +
push edi  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_102FF12  +
push esi  +
push 26Ah  +
jmp loc_102FF60  +
cmp [ebp+arg_0] 0 +
jz loc_102FF4E  +
push [ebp+arg_0]  +
push [ebp+arg_8]  +
push edi  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102FF32  +
push esi  +
push 26Eh  +
jmp loc_102FF60  +
push offset asc_10017E4  +
push [ebp+arg_8]  +
push edi  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_102FF4E  +
push esi  +
push 271h  +
jmp loc_102FF60  +
push edi  +
call sub_102F513  +
mov esi eax +
test esi esi +
jge loc_102FF74  +
push esi  +
push 278h  +
push offset aGetsessiontemp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 104h  +
lea eax [ebp+PathName] +
push eax  +
push 0  +
call sub_102FEEB  +
mov esi eax +
test esi esi +
jge loc_102FFBC  +
push esi  +
push 161h  +
jmp loc_102FFF1  +
push edi  +
push 0  +
push offset PrefixString  +
lea eax [ebp+PathName] +
push eax  +
call ds:GetTempFileNameW  +
test eax eax +
jnz loc_1030005  +
call ds:GetLastError  +
test eax eax +
jle loc_102FFE9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 166h  +
push offset aGettemporaryfi  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
xor ecx ecx +
xor eax eax +
mov [ebp+hMem] ecx +
mov [ebp-10h] ecx +
lea edi [ebp-0Ch] +
stos   +
mov edi 208h +
push edi  +
push ecx  +
mov [ebp+var_8] ecx +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1030069  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 189h  +
jmp loc_103014A  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_103008A  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 18Ah  +
jmp loc_103014A  +
mov esi 104h +
push esi  +
push [ebp+lpMem]  +
call sub_102FD77  +
mov edi eax +
test edi edi +
jge loc_10300A9  +
push edi  +
push 190h  +
jmp loc_103014A  +
push [ebp+lpMem]  +
push esi  +
push [ebp+var_8]  +
call sub_100D999  +
mov edi eax +
test edi edi +
jge loc_10300C6  +
push edi  +
push 193h  +
jmp loc_103014A  +
push offset aInuse  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
xor esi esi +
cmp edi esi +
jge loc_10300E4  +
push edi  +
push 196h  +
jmp loc_103014A  +
lea eax [ebp+hMem] +
push eax  +
call sub_102EEE3  +
mov edi eax +
cmp edi esi +
jge loc_10300FB  +
push edi  +
push 199h  +
jmp loc_103014A  +
push esi  +
push 1  +
push 1  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push 0C0000000h  +
push [ebp+lpMem]  +
call ds:CreateFileW  +
cmp eax esi +
jz loc_103012E  +
cmp eax 0FFFFFFFFh +
jz loc_103012E  +
mov dword_104E190 eax +
mov eax [ebp+var_8] +
mov lpMem eax +
mov [ebp+var_8] esi +
jmp loc_103015E  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1030142  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 1A6h  +
push offset aCreatetemporar  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor esi esi +
cmp [ebp-10h] esi +
jz loc_1030171  +
push dword ptr [ebp-10h]  +
call ds:LocalFree  +
mov [ebp-10h] esi +
cmp [ebp+lpMem] esi +
mov esi ds:HeapFree +
jz loc_1030186  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call esi  +
cmp [ebp+var_8] 0 +
jz loc_1030196  +
push [ebp+var_8]  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 7FFFFFFFh +
ja loc_10301BA  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
jmp loc_10301C5  +
mov eax [ebp+arg_4] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+nBufferMax] 0 +
push esi  +
lea eax [ebp+nBufferMax] +
push eax  +
push [ebp+arg_8]  +
call sub_10301A2  +
mov esi eax +
test esi esi +
jge loc_10301F0  +
push esi  +
push 35h  +
jmp loc_1030213  +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
push [ebp+uID]  +
push dword_104E138  +
call ds:LoadStringW  +
test eax eax +
jg loc_1030227  +
mov eax 803C010Ah +
push eax  +
mov esi eax +
push 39h  +
push offset aDwzloadlocalst  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 2  +
xor esi esi +
push esi  +
push [ebp+hLibModule]  +
xor edi edi +
call ds:LoadLibraryExW  +
mov ebx ds:GetProcessHeap +
mov [ebp+hLibModule] eax +
cmp eax esi +
jz loc_10302C5  +
cmp eax 0FFFFFFFFh +
jz loc_10302C5  +
push 800h  +
push edi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1030281  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 121h  +
jmp loc_10302E1  +
push 400h  +
push esi  +
push [ebp+uID]  +
push [ebp+hLibModule]  +
call ds:LoadStringW  +
test eax eax +
jg loc_10302A6  +
mov eax 803C010Ah +
push eax  +
mov edi eax +
push 125h  +
jmp loc_10302E1  +
push esi  +
call ds:SysAllocString  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
test eax eax +
jnz loc_10302F5  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 129h  +
jmp loc_10302E1  +
call ds:GetLastError  +
test eax eax +
jle loc_10302D9  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 11Fh  +
push offset aDwzloadresourc  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+hLibModule] 0 +
jz loc_1030304  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
test esi esi +
jz loc_1030314  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
cmp word ptr [ebx] 40h +
jz loc_1030344  +
mov [ebp+arg_0] 1 +
jmp loc_10304B7  +
push esi  +
push edi  +
mov edi 800h +
push edi  +
push 0  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1030374  +
mov eax 8007000Eh +
push eax  +
push 160h  +
jmp loc_1030472  +
push ebx  +
mov ebx 400h +
push ebx  +
push eax  +
call sub_100D999  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_1030393  +
push eax  +
push 163h  +
jmp loc_1030475  +
push offset a@  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+lpSrc] eax +
test eax eax +
jnz loc_10303BA  +
mov eax 80070057h +
push eax  +
push 169h  +
jmp loc_1030472  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov esi eax +
mov [ebp+var_8] esi +
test esi esi +
jnz loc_10303DF  +
mov eax 8007000Eh +
push eax  +
push 16Ch  +
jmp loc_1030472  +
push ebx  +
push esi  +
push [ebp+lpSrc]  +
xor eax eax +
mov [esi] ax +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
ja loc_1030412  +
call ds:GetLastError  +
test eax eax +
jle loc_1030407  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+arg_0] eax +
push 171h  +
jmp loc_1030475  +
push esi  +
mov esi ds:SysAllocString +
call esi  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
test eax eax +
jnz loc_1030431  +
mov eax 8007000Eh +
push eax  +
push 175h  +
jmp loc_1030472  +
push offset asc_1008860  +
push 0  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1030451  +
mov eax 80070057h +
push eax  +
push 17Bh  +
jmp loc_1030472  +
push 2Dh  +
pop ecx  +
cmp cx [eax] +
jnz loc_103045B  +
inc eax  +
inc eax  +
push eax  +
call esi  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
test eax eax +
jnz loc_1030489  +
mov eax 8007000Eh +
push eax  +
push 183h  +
mov [ebp+arg_0] eax +
push offset aDwzparselocale  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov esi ds:HeapFree +
xor edi edi +
cmp [ebp+lpMem] edi +
jz loc_10304A3  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
cmp [ebp+var_8] edi +
jz loc_10304B5  +
push [ebp+var_8]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
pop edi  +
pop esi  +
mov eax [ebp+arg_0] +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+lpLibFileName] +
push eax  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+lpLibFileName] esi +
mov [ebp+var_8] esi +
call sub_1030322  +
mov edi eax +
cmp edi esi +
jge loc_103050A  +
push edi  +
push 1AEh  +
push offset aDwzloadsmallic  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10305CA  +
cmp edi 1 +
jnz loc_103051E  +
mov eax 80070057h +
push eax  +
mov edi eax +
push 1B2h  +
jmp loc_10304F1  +
push ebx  +
push 2  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov ebx eax +
cmp ebx esi +
jz loc_103058C  +
cmp ebx 0FFFFFFFFh +
jz loc_103058C  +
push esi  +
mov esi ds:GetSystemMetrics +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
push 1  +
push [ebp+var_8]  +
call ds:_wtol  +
movzx eax ax +
pop ecx  +
push eax  +
push ebx  +
call ds:LoadImageW  +
test eax eax +
jz loc_103056E  +
cmp eax 0FFFFFFFFh +
jz loc_103056E  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_10305BC  +
call ds:GetLastError  +
test eax eax +
jle loc_1030582  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 1C2h  +
jmp loc_10305A8  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10305A0  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 1B6h  +
push offset aDwzloadsmallic  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor esi esi +
cmp ebx esi +
jz loc_10305C9  +
push ebx  +
call ds:FreeLibrary  +
pop ebx  +
cmp [ebp+lpLibFileName] esi +
mov esi ds:SysFreeString +
jz loc_10305DA  +
push [ebp+lpLibFileName]  +
call esi  +
cmp [ebp+var_8] 0 +
jz loc_10305E5  +
push [ebp+var_8]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+lpLibFileName] +
push eax  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+lpLibFileName] esi +
mov [ebp+var_8] esi +
call sub_1030322  +
mov edi eax +
cmp edi esi +
jge loc_1030638  +
push edi  +
push 1F3h  +
push offset aDwzloadicon  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10306E9  +
cmp edi 1 +
jnz loc_103064C  +
mov eax 80070057h +
push eax  +
mov edi eax +
push 1F7h  +
jmp loc_103061F  +
push 2  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov esi eax +
test esi esi +
jz loc_10306AE  +
cmp esi 0FFFFFFFFh +
jz loc_10306AE  +
push 40h  +
push 0  +
push 0  +
push 1  +
push [ebp+var_8]  +
call ds:_wtol  +
movzx eax ax +
pop ecx  +
push eax  +
push esi  +
call ds:LoadImageW  +
test eax eax +
jz loc_1030690  +
cmp eax 0FFFFFFFFh +
jz loc_1030690  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_10306DE  +
call ds:GetLastError  +
test eax eax +
jle loc_10306A4  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 207h  +
jmp loc_10306CA  +
call ds:GetLastError  +
test eax eax +
jle loc_10306C2  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 1FBh  +
push offset aDwzloadicon  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
test esi esi +
jz loc_10306E9  +
push esi  +
call ds:FreeLibrary  +
cmp [ebp+lpLibFileName] 0 +
mov esi ds:SysFreeString +
jz loc_10306FA  +
push [ebp+lpLibFileName]  +
call esi  +
cmp [ebp+var_8] 0 +
jz loc_1030705  +
push [ebp+var_8]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+hLibModule] +
push eax  +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+hLibModule] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
call sub_1030322  +
mov edi eax +
cmp edi ebx +
jge loc_1030746  +
push edi  +
push 0EAh  +
jmp loc_103078D  +
cmp edi 1 +
jnz loc_103076A  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_10307A3  +
mov eax 8007000Eh +
push eax  +
mov edi eax +
push 0EEh  +
jmp loc_103078D  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_C]  +
call ds:_wtol  +
pop ecx  +
push eax  +
push [ebp+hLibModule]  +
call sub_1030233  +
mov edi eax +
cmp edi ebx +
jge loc_10307A3  +
push edi  +
push 0F1h  +
push offset aDwztryloadreso  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10307AE  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [eax] ecx +
mov [ebp+var_4] ebx +
mov esi ds:SysFreeString +
cmp [ebp+hLibModule] ebx +
jz loc_10307BE  +
push [ebp+hLibModule]  +
call esi  +
cmp [ebp+var_C] ebx +
jz loc_10307C8  +
push [ebp+var_C]  +
call esi  +
cmp [ebp+var_4] ebx +
jz loc_10307D2  +
push [ebp+var_4]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 44h  +
mov [ebp+var_6C] eax +
lea eax [ebp+var_48] +
push edi  +
push eax  +
mov [ebp+var_50] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_64] edi +
mov [ebp+var_58] edi +
mov [ebp+dwBytes] edi +
mov [ebp+ppstm] edi +
mov [ebp+var_54] edi +
mov [ebp+var_4C] edi +
call memset  +
add esp 0Ch +
cmp word ptr [esi] 40h +
jnz loc_1030A30  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_1030873  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_50] eax +
push 6Dh  +
push offset aDwztryloadfile  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1030A8C  +
push esi  +
push 400h  +
push ebx  +
call sub_102EF8F  +
mov [ebp+var_50] eax +
test eax eax +
jge loc_103088B  +
push eax  +
push 70h  +
jmp loc_103085A  +
push offset a@_0  +
push ebx  +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
push 2  +
push 0  +
push eax  +
call ds:LoadLibraryExW  +
mov [ebp+dwBytes] eax +
test eax eax +
jz loc_1030A14  +
cmp eax 0FFFFFFFFh +
jz loc_1030A14  +
push offset asc_1008860  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
push 2Dh  +
pop ecx  +
cmp cx [eax] +
jnz loc_10308EA  +
lea eax [ebp+var_54] +
push eax  +
push esi  +
call sub_1030712  +
mov [ebp+var_50] eax +
test eax eax +
jge loc_1030A62  +
push eax  +
push 7Eh  +
jmp loc_10309FE  +
lea ecx [ebp+ppstm] +
push ecx  +
push 17h  +
push eax  +
push [ebp+dwBytes]  +
call sub_1037236  +
mov [ebp+var_50] eax +
test eax eax +
jge loc_103090B  +
push eax  +
push 84h  +
jmp loc_10309FE  +
mov eax [ebp+ppstm] +
mov ecx [eax] +
push 1  +
lea edx [ebp+var_4C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_50] eax +
test eax eax +
jge loc_103092C  +
push eax  +
push 8Ah  +
jmp loc_10309FE  +
mov esi [ebp+var_44] +
add esi 2 +
lea ebx [esi+esi] +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov [ebp+var_64] eax +
test eax eax +
jnz loc_1030958  +
mov eax 8007000Eh +
push eax  +
push 8Eh  +
jmp loc_10309FB  +
push ebx  +
push 0  +
mov [ebp+var_58] eax +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov edi eax +
mov [ebp+var_64] edi +
test edi edi +
jnz loc_103097D  +
mov eax 8007000Eh +
push eax  +
push 92h  +
jmp loc_10309FB  +
xor eax eax +
mov [edi] ax +
mov eax [ebp+var_58] +
lea edx [ebp+var_74] +
push edx  +
mov byte ptr [eax] 0 +
push [ebp+var_44]  +
mov eax [ebp+ppstm] +
push [ebp+var_58]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_50] eax +
test eax eax +
jge loc_10309AA  +
push eax  +
push 9Ah  +
jmp loc_10309FE  +
test esi esi +
jbe loc_10309BD  +
xor eax eax +
mov [ebx+edi-2] ax +
mov eax [ebp+var_58] +
mov byte ptr [esi+eax-1] 0 +
push 0FFFFFFFFh  +
push [ebp+var_58]  +
lea eax [ebp+var_70] +
push esi  +
push edi  +
push eax  +
call ds:mbstowcs_s  +
add esp 14h +
test eax eax +
jz loc_10309E2  +
mov eax 80004005h +
push eax  +
push 0ACh  +
jmp loc_10309FB  +
push edi  +
call ds:SysAllocString  +
mov [ebp+var_54] eax +
test eax eax +
jnz loc_1030A62  +
mov eax 8007000Eh +
push eax  +
push 0B0h  +
mov [ebp+var_50] eax +
push offset aDwztryloadfile  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1030A6E  +
call ds:GetLastError  +
test eax eax +
jle loc_1030A28  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_50] eax +
push 75h  +
jmp loc_10309FE  +
push esi  +
call ds:SysAllocString  +
mov [ebp+var_54] eax +
cmp eax edi +
jnz loc_1030A62  +
mov eax 8007000Eh +
push eax  +
push 0B4h  +
push offset aDwztryloadfile  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_50] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1030A7E  +
mov eax [ebp+var_54] +
mov ecx [ebp+var_6C] +
and [ebp+var_54] 0 +
mov [ecx] eax +
xor edi edi +
cmp [ebp+dwBytes] edi +
jz loc_1030A7E  +
push [ebp+dwBytes]  +
call ds:FreeLibrary  +
cmp [ebp+var_54] edi +
jz loc_1030A8C  +
push [ebp+var_54]  +
call ds:SysFreeString  +
mov esi ds:HeapFree +
xor edi edi +
cmp [ebp+lpMem] edi +
jz loc_1030AA6  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
cmp [ebp+var_64] edi +
jz loc_1030AB8  +
push [ebp+var_64]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
cmp [ebp+var_58] edi +
jz loc_1030ACA  +
push [ebp+var_58]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov eax [ebp+ppstm] +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1030ADA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_50] +
xor ecx ebp +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
xor edi edi +
inc ebx  +
cmp [esi+54h] edi +
jnz loc_1030B1F  +
cmp [esi+7Ch] edi +
jbe loc_1030B1F  +
mov eax [esi+78h] +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_1030B1D  +
inc edi  +
cmp edi [esi+7Ch] +
jb loc_1030B06  +
jmp loc_1030B1F  +
xor ebx ebx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [ecx+38h] +
xor eax eax +
test edx edx +
jz loc_1030B36  +
mov eax edx +
retn   +
cmp dword ptr [ecx+7Ch] 1 +
jb locret_1030B35  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+1Ch]  +
***
mov edx [ecx+4] +
xor eax eax +
test edx edx +
jz loc_1030B57  +
mov eax edx +
retn   +
***
cmp dword ptr [ecx+7Ch] 1 +
jb locret_1030B56  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+4]  +
***
mov edx [ecx+8] +
xor eax eax +
test edx edx +
jz loc_1030B78  +
mov eax edx +
retn   +
***
cmp dword ptr [ecx+7Ch] 1 +
jnz locret_1030B77  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+8]  +
***
mov edx [ecx+0Ch] +
xor eax eax +
test edx edx +
jz loc_1030B99  +
mov eax edx +
retn   +
***
cmp dword ptr [ecx+7Ch] 1 +
jnz locret_1030B98  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+0Ch]  +
***
mov edx [ecx+18h] +
xor eax eax +
test edx edx +
jz loc_1030BBA  +
mov eax edx +
retn   +
***
cmp dword ptr [ecx+7Ch] 1 +
jnz locret_1030BB9  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+10h]  +
***
mov edx [ecx+1Ch] +
xor eax eax +
test edx edx +
jz loc_1030BDB  +
mov eax edx +
retn   +
cmp dword ptr [ecx+7Ch] 1 +
jnz locret_1030BDA  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+18h]  +
***
mov edx [ecx+34h] +
xor eax eax +
cmp edx eax +
jz loc_1030BFC  +
mov eax edx +
retn   +
cmp [ecx+7Ch] eax +
jbe locret_1030BFB  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+24h]  +
***
mov edx [ecx+20h] +
xor eax eax +
test edx edx +
jz loc_1030C1C  +
mov eax edx +
retn   +
cmp dword ptr [ecx+7Ch] 1 +
jb locret_1030C1B  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+20h]  +
***
mov edx [ecx+24h] +
xor eax eax +
test edx edx +
jz loc_1030C3D  +
mov eax edx +
retn   +
cmp dword ptr [ecx+7Ch] 1 +
jb locret_1030C3C  +
mov eax [ecx+78h] +
mov ecx [eax] +
mov eax [ecx] +
jmp dword ptr [eax+28h]  +
***
mov ecx dword_104E194 +
test ecx ecx +
jz locret_1030C69  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword_104E194 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp dword ptr [esi+7Ch] 1 +
mov [ebp+var_8] ebx +
jnb loc_1030CAC  +
mov eax 80070057h +
push eax  +
push 2F4h  +
push offset aMetapackageUse  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp+var_8] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1030D6F  +
mov eax [esi+78h] +
mov eax [eax] +
mov [ebp+var_4] eax +
mov eax [esi+0Ch] +
push edi  +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_1030CC8  +
push eax  +
call edi  +
mov [esi+0Ch] ebx +
mov eax [esi+4] +
cmp eax ebx +
jz loc_1030CD5  +
push eax  +
call edi  +
mov [esi+4] ebx +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1030CE2  +
push eax  +
call edi  +
mov [esi+8] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_1030CEF  +
push eax  +
call edi  +
mov [esi+20h] ebx +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_1030CFC  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
mov eax [esi+28h] +
cmp eax ebx +
jz loc_1030D09  +
push eax  +
call edi  +
mov [esi+28h] ebx +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_1030D16  +
push eax  +
call edi  +
mov [esi+34h] ebx +
mov eax [esi+38h] +
cmp eax ebx +
jz loc_1030D23  +
push eax  +
call edi  +
mov [esi+38h] ebx +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov edi ds:SysAllocString +
push eax  +
call edi  +
mov ebx [ebp+var_4] +
mov [esi+0Ch] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+4]  +
push eax  +
call edi  +
mov [esi+4] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
push eax  +
call edi  +
mov [esi+8] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
push eax  +
call edi  +
mov [esi+20h] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+18h]  +
push eax  +
call edi  +
mov [esi+1Ch] eax +
pop edi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
mov esi ecx +
call sub_101583D  +
xor eax eax +
inc eax  +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov [esi+34h] edi +
mov [esi+38h] edi +
mov [esi+6Ch] edi +
mov [esi+3Ch] edi +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+54h] edi +
mov [esi+58h] edi +
mov [esi+64h] edi +
mov [esi+68h] edi +
mov [esi+74h] edi +
mov [esi+70h] edi +
mov [esi+48h] edi +
mov [esi+4Ch] edi +
mov [esi+50h] edi +
mov [esi+5Ch] eax +
mov [esi+60h] eax +
pop edi  +
mov dword ptr [esi] offset off_10088F8 +
mov eax esi +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10088F8 +
mov eax [esi+10h] +
xor ebx ebx +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_1030E18  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+10h] ebx +
mov eax [esi+14h] +
cmp eax ebx +
jz loc_1030E28  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+14h] ebx +
mov eax [esi+18h] +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_1030E3B  +
push eax  +
call edi  +
mov [esi+18h] ebx +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_1030E48  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_1030E55  +
push eax  +
call edi  +
mov [esi+20h] ebx +
mov eax [esi+24h] +
cmp eax ebx +
jz loc_1030E62  +
push eax  +
call edi  +
mov [esi+24h] ebx +
mov eax [esi+28h] +
cmp eax ebx +
jz loc_1030E6F  +
push eax  +
call edi  +
mov [esi+28h] ebx +
mov eax [esi+2Ch] +
cmp eax ebx +
jz loc_1030E7C  +
push eax  +
call edi  +
mov [esi+2Ch] ebx +
mov eax [esi+30h] +
cmp eax ebx +
jz loc_1030E89  +
push eax  +
call edi  +
mov [esi+30h] ebx +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_1030E96  +
push eax  +
call edi  +
mov [esi+34h] ebx +
mov eax [esi+38h] +
cmp eax ebx +
jz loc_1030EA3  +
push eax  +
call edi  +
mov [esi+38h] ebx +
cmp [esi+3Ch] ebx +
jz loc_1030ED5  +
mov [ebp-10h] ebx +
cmp [esi+48h] ebx +
jbe loc_1030ED5  +
mov eax [esi+3Ch] +
mov ecx [ebp-10h] +
lea eax [eax+ecx*4] +
cmp [eax] ebx +
jz loc_1030ECA  +
push dword ptr [eax]  +
call edi  +
mov eax [esi+3Ch] +
mov ecx [ebp-10h] +
mov [eax+ecx*4] ebx +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [esi+48h] +
jb loc_1030EB0  +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_1030EEE  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+3Ch] ebx +
cmp [esi+40h] ebx +
jz loc_1030F20  +
mov [ebp-10h] ebx +
cmp [esi+4Ch] ebx +
jbe loc_1030F20  +
mov eax [esi+40h] +
mov ecx [ebp-10h] +
lea eax [eax+ecx*4] +
cmp [eax] ebx +
jz loc_1030F15  +
push dword ptr [eax]  +
call edi  +
mov eax [esi+40h] +
mov ecx [ebp-10h] +
mov [eax+ecx*4] ebx +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [esi+4Ch] +
jb loc_1030EFB  +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_1030F39  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+40h] ebx +
cmp [esi+44h] ebx +
jz loc_1030F6B  +
mov [ebp-10h] ebx +
cmp [esi+50h] ebx +
jbe loc_1030F6B  +
mov eax [esi+44h] +
mov ecx [ebp-10h] +
lea eax [eax+ecx*4] +
cmp [eax] ebx +
jz loc_1030F60  +
push dword ptr [eax]  +
call edi  +
mov eax [esi+44h] +
mov ecx [ebp-10h] +
mov [eax+ecx*4] ebx +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [esi+50h] +
jb loc_1030F46  +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_1030F84  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+44h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1015877  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1030DEC  +
test byte ptr [ebp+8] 1 +
jz loc_1031011  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1030D7B  +
xor eax eax +
mov [esi+78h] eax +
mov [esi+7Ch] eax +
mov [esi+80h] eax +
mov [esi+84h] eax +
mov dword ptr [esi] offset off_1008940 +
mov eax esi +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1008940 +
xor ebx ebx +
mov [ebp-4] ebx +
cmp [esi+78h] ebx +
jz loc_1031096  +
xor edi edi +
cmp [esi+7Ch] ebx +
jbe loc_1031096  +
mov eax [esi+78h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_1031090  +
mov eax [eax] +
cmp eax ebx +
jz loc_103108A  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+78h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+7Ch] +
jb loc_1031072  +
mov eax [esi+78h] +
cmp eax ebx +
jz loc_10310AF  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+78h] ebx +
call sub_101A1AD  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1030DEC  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov eax offset word_1001F48 +
push esi  +
mov esi ecx +
xor ecx ecx +
mov ebx eax +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
xor eax eax +
inc ecx  +
cmp [esi+4] eax +
jnz loc_10310FF  +
cmp [esi+8] eax +
jnz loc_10310FF  +
cmp [esi+0Ch] eax +
jnz loc_10310FF  +
mov [ebp+var_4] eax +
cmp [esi+20h] eax +
jz loc_1031102  +
mov [ebp+var_4] ecx +
cmp [esi+7Ch] ecx +
jnz loc_1031195  +
cmp [esi+8] eax +
jz loc_1031195  +
cmp [esi+0Ch] eax +
jz loc_1031195  +
mov [esi+80h] eax +
mov eax [esi+78h] +
push edi  +
mov edi [eax] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1031139  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
mov ebx eax +
push ebx  +
push dword ptr [esi+8]  +
mov ebx ds:_wcsicmp +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1031194  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_1031160  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov [ebp+var_8] eax +
push [ebp+var_8]  +
push dword ptr [esi+0Ch]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1031194  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
test eax eax +
jz loc_1031183  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
mov [ebp+var_C] eax +
push [ebp+var_C]  +
push dword ptr [esi+20h]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1031194  +
and [ebp+var_4] eax +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
cmp [ebp+8] ebx +
jz loc_1031293  +
cmp dword ptr [ebp+8] 10h +
ja loc_1031293  +
mov eax [esi+7Ch] +
cmp eax ebx +
jbe loc_10311D5  +
mov dword ptr [esi+58h] 1 +
cmp [esi+78h] ebx +
jz loc_1031204  +
xor edi edi +
cmp eax ebx +
jbe loc_1031204  +
mov eax [esi+78h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_10311FE  +
mov eax [eax] +
cmp eax ebx +
jz loc_10311F8  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
mov eax [esi+78h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [esi+7Ch] +
jb loc_10311E0  +
mov eax [esi+78h] +
mov edi ds:GetProcessHeap +
cmp eax ebx +
jz loc_103121F  +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:HeapFree  +
mov [esi+78h] ebx +
mov eax [ebp+8] +
mov [esi+7Ch] eax +
shl eax 2 +
push eax  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [esi+78h] eax +
cmp eax ebx +
jnz loc_1031248  +
mov eax 8007000Eh +
push eax  +
push 0A7h  +
jmp loc_103129E  +
xor edi edi +
cmp [ebp+8] ebx +
jbe loc_10312B5  +
push 78h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_103126A  +
call sub_1030D7B  +
jmp loc_103126C  +
xor eax eax +
mov ecx [esi+78h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ecx+edi*4] eax +
mov eax [esi+78h] +
cmp [eax+edi*4] ebx +
jz loc_1031286  +
inc edi  +
cmp edi [ebp+8] +
jb loc_103124F  +
jmp loc_10312B5  +
mov eax 8007000Eh +
push eax  +
push 0ABh  +
jmp loc_103129E  +
mov eax 80070057h +
push eax  +
push 95h  +
push offset aMetapackageSet  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-10h] eax +
call sub_1014247  +
add esp 14h +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ebx [esi+58h] +
xor edi edi +
cmp [esi+7Ch] edi +
jbe loc_10312F8  +
mov eax [esi+78h] +
mov [esi+80h] edi +
mov ecx [eax+edi*4] +
mov eax [ecx] +
call dword ptr [eax+40h]  +
test eax eax +
jnz loc_10312EF  +
test ebx ebx +
jz loc_10312F2  +
xor ebx ebx +
inc ebx  +
inc edi  +
cmp edi [esi+7Ch] +
jb loc_10312D6  +
and dword ptr [esi+58h] 0 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
call __EH_prolog3  +
mov eax dword_104E194 +
xor esi esi +
cmp eax esi +
jnz loc_103136E  +
push 88h  +
call sub_10361AF  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov [ebp-4] esi +
cmp ecx esi +
jz loc_103133C  +
call sub_103101D  +
jmp loc_103133E  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_104E194 eax +
cmp eax esi +
jnz loc_103136E  +
mov eax 8007000Eh +
push eax  +
push 2B4h  +
push offset aMetapackageIns  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov esi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1031373  +
mov ecx [ebp+8] +
mov [ecx] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
xor ecx ecx +
mov eax offset word_1001F48 +
mov [ebp+var_8] ecx +
mov ebx eax +
mov [ebp+var_4] eax +
cmp [esi+7Ch] ecx +
jbe loc_1031465  +
cmp [esi+8] ecx +
jz loc_1031465  +
cmp [esi+0Ch] ecx +
jz loc_1031465  +
cmp [esi+20h] ecx +
jz loc_1031465  +
mov eax [esi+78h] +
mov [esi+80h] ecx +
push edi  +
mov edi [eax] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_10313E0  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
mov ebx eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_10313F5  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov [ebp+var_4] eax +
mov eax [esi+8] +
push 4  +
mov ecx ebx +
pop edi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1031421  +
test dx dx +
jz loc_103141D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1031421  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_10313FD  +
xor eax eax +
jmp loc_1031426  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1031464  +
mov eax [ebp+var_4] +
mov esi [esi+0Ch] +
mov cx [esi] +
cmp cx [eax] +
jnz loc_1031454  +
test cx cx +
jz loc_1031450  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1031454  +
add esi edi +
add eax edi +
test cx cx +
jnz loc_1031430  +
xor eax eax +
jmp loc_1031459  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1031464  +
mov [ebp+var_8] 1 +
pop edi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_8] edi +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_4] edi +
cmp [esi+5Ch] edi +
jnz loc_103164F  +
cmp [esi+3Ch] edi +
jz loc_103164F  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_0]  +
push edi  +
push offset a_Parameter  +
call sub_1014C90  +
cmp eax edi +
mov [ebp+var_8] eax +
jge loc_10314C7  +
push eax  +
push 3D7h  +
jmp loc_10314FC  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax edi +
mov [ebp+var_8] eax +
jge loc_10314E3  +
push eax  +
push 3DAh  +
jmp loc_10314FC  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_1C]  +
call sub_1015DFA  +
cmp eax edi +
mov [ebp+var_8] eax +
jge loc_1031515  +
push eax  +
push 3DDh  +
push offset aPackageMarkpre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031611  +
push ebx  +
mov [ebp+arg_0] edi +
cmp [ebp+var_18] edi +
jbe loc_10315F2  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax edi +
mov [ebp+var_8] eax +
jl loc_1031658  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push offset a_Name  +
push eax  +
call dword ptr [ecx+94h]  +
cmp eax edi +
mov [ebp+var_8] eax +
jl loc_1031660  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
cmp eax edi +
mov [ebp+var_8] eax +
jl loc_1031668  +
xor ebx ebx +
cmp [esi+48h] edi +
jbe loc_10315B2  +
mov eax [esi+3Ch] +
lea eax [eax+ebx*4] +
cmp [eax] edi +
jz loc_10315AC  +
push dword ptr [eax]  +
push [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10315AC  +
mov eax [esi+3Ch] +
lea eax [eax+ebx*4] +
cmp [eax] edi +
jz loc_10315AC  +
push dword ptr [eax]  +
call ds:SysFreeString  +
mov eax [esi+3Ch] +
mov [eax+ebx*4] edi +
inc ebx  +
cmp ebx [esi+48h] +
jb loc_1031579  +
cmp [ebp+var_4] edi +
jz loc_10315C3  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_10315D3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_10315E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_18] +
jb loc_1031522  +
xor ecx ecx +
cmp [esi+48h] edi +
jbe loc_1031609  +
mov eax [esi+3Ch] +
cmp [eax] edi +
jnz loc_1031610  +
inc ecx  +
add eax 4 +
cmp ecx [esi+48h] +
jb loc_10315FC  +
mov dword ptr [esi+5Ch] 1 +
pop ebx  +
cmp [ebp+var_4] edi +
jz loc_1031622  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1031632  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1031642  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_103164F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 4  +
push eax  +
push 3E1h  +
jmp loc_103166E  +
push eax  +
push 3E4h  +
jmp loc_103166E  +
push eax  +
push 3E7h  +
push offset aPackageMarkpre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031610  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_103104A  +
test byte ptr [ebp+8] 1 +
jz loc_10316A3  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor edi edi +
inc edi  +
mov esi ecx +
mov [ebp+var_10] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_14] edi +
mov [ebp+var_C] ebx +
cmp [ebp+arg_0] ebx +
jz loc_1031767  +
lea eax [ebp+var_C] +
push eax  +
call sub_101C0E6  +
cmp eax ebx +
jge loc_10316FF  +
push eax  +
push 1E7h  +
push offset aMetapackageKey  +
push offset aDwzIgnoredSDHr  +
push edi  +
call sub_1014247  +
add esp 14h +
mov ecx [ebp+var_C] +
cmp ecx ebx +
jz loc_1031767  +
call sub_101246D  +
test eax eax +
jz loc_1031767  +
mov ecx [ebp+var_C] +
lea eax [ebp+lpMem] +
push eax  +
call sub_101246D  +
mov ecx eax +
call sub_1017F40  +
cmp eax ebx +
jge loc_1031744  +
push eax  +
push 1EBh  +
push offset aMetapackageKey  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
jmp loc_1031880  +
cmp [ebp+lpMem] ebx +
jz loc_1031767  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_103174F  +
sub eax edx +
sar eax 1 +
jz loc_1031767  +
push [ebp+lpMem]  +
jmp loc_1031877  +
cmp [esi+28h] ebx +
jnz loc_1031874  +
cmp [ebp+lpMem] ebx +
jz loc_1031789  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] ebx +
mov ebx 800h +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_10317B6  +
push 8007000Eh  +
push 1F9h  +
jmp loc_10318C7  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
xor ebx ebx +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_10317DA  +
push 8007000Eh  +
push 1FAh  +
jmp loc_10318C7  +
mov ecx [ebp+lpMem] +
xor eax eax +
mov [ecx] ax +
mov [ebp+arg_0] ebx +
cmp [esi+7Ch] ebx +
jbe loc_1031866  +
mov edi 400h +
mov eax [esi+78h] +
mov ecx [eax+ebx*4] +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
test eax eax +
jz loc_103185D  +
cmp [ebp+var_14] 0 +
jz loc_1031827  +
mov eax [esi+78h] +
mov ecx [eax+ebx*4] +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
push eax  +
push edi  +
push [ebp+lpMem]  +
call sub_100D999  +
test eax eax +
jl loc_10318B9  +
and [ebp+var_14] 0 +
jmp loc_103185D  +
mov eax [ebp+var_8] +
mov ebx [ebp+lpMem] +
mov ecx [ebp+arg_0] +
mov [ebp+lpMem] eax +
mov eax [esi+78h] +
mov ecx [eax+ecx*4] +
mov eax [ecx] +
mov [ebp+var_8] ebx +
call dword ptr [eax+2Ch]  +
push eax  +
push 2Bh  +
push ebx  +
push offset aSCS  +
push edi  +
push [ebp+lpMem]  +
call sub_100DD8E  +
add esp 18h +
test eax eax +
jl loc_10318C1  +
mov ebx [ebp+arg_0] +
inc ebx  +
mov [ebp+arg_0] ebx +
cmp ebx [esi+7Ch] +
jb loc_10317EF  +
push [ebp+lpMem]  +
call ds:SysAllocString  +
mov [esi+28h] eax +
xor ebx ebx +
push dword ptr [esi+28h]  +
call ds:SysAllocString  +
mov [ebp+var_10] eax +
cmp [ebp+lpMem] ebx +
jz loc_1031899  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] ebx +
cmp [ebp+var_8] ebx +
jz loc_10318AF  +
push [ebp+var_8]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push eax  +
push 207h  +
jmp loc_10318C7  +
push eax  +
push 21Ah  +
push offset aMetapackageKey  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor ebx ebx +
jmp loc_1031880  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 800h  +
push edi  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_18] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_1031948  +
mov eax 8007000Eh +
push eax  +
push 43Ch  +
push offset aPackageSetupbl  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov ebx eax +
call sub_1014247  +
add esp 14h +
jmp loc_1031C73  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
push edi  +
push offset a_CfgBlocklistC  +
call sub_1014C90  +
mov ebx eax +
cmp ebx edi +
jge loc_103196B  +
push ebx  +
push 442h  +
jmp loc_1031CD7  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
cmp ebx edi +
jge loc_1031989  +
push ebx  +
push 445h  +
jmp loc_1031CD7  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_1C]  +
call sub_1015DFA  +
mov ebx eax +
cmp ebx edi +
jge loc_10319A6  +
push ebx  +
push 448h  +
jmp loc_1031CD7  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1031AC1  +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_10319D7  +
mov eax 8007000Eh +
push eax  +
push 44Fh  +
jmp loc_1031CD5  +
mov [ebp+arg_0] edi +
cmp [ebp+var_8] edi +
jbe loc_1031A71  +
mov esi 400h +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_10]  +
call sub_1014D97  +
mov ebx eax +
cmp ebx edi +
jl loc_1031A85  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1031A90  +
push [ebp+var_4]  +
push esi  +
push [ebp+lpMem]  +
call sub_100D999  +
mov ebx eax +
cmp ebx edi +
jl loc_1031A9B  +
cmp [ebp+var_4] edi +
jz loc_1031A34  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
push offset asc_10017E0  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov ebx eax +
cmp ebx edi +
jl loc_1031AA6  +
push [ebp+lpMem]  +
call ds:SysAllocString  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_1031AB1  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_C] +
mov [edx+ecx*4] eax +
inc ecx  +
mov [ebp+var_4] edi +
mov [ebp+arg_0] ecx +
cmp ecx [ebp+var_8] +
jb loc_10319E8  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov [eax+40h] ecx +
mov ecx [ebp+var_8] +
mov [eax+4Ch] ecx +
jmp loc_1031C1A  +
push ebx  +
push 453h  +
jmp loc_1031CD7  +
push ebx  +
push 456h  +
jmp loc_1031CD7  +
push ebx  +
push 45Dh  +
jmp loc_1031CD7  +
push ebx  +
push 462h  +
jmp loc_1031CD7  +
mov eax 8007000Eh +
push eax  +
push 465h  +
jmp loc_1031CD5  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1031AD1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
push edi  +
push offset a_CfgAllowlistC  +
call sub_1014C90  +
mov ebx eax +
cmp ebx edi +
jge loc_1031AF4  +
push ebx  +
push 481h  +
jmp loc_1031CD7  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
cmp ebx edi +
jge loc_1031B12  +
push ebx  +
push 484h  +
jmp loc_1031CD7  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_1C]  +
call sub_1015DFA  +
mov ebx eax +
cmp ebx edi +
jge loc_1031B2F  +
push ebx  +
push 487h  +
jmp loc_1031CD7  +
cmp [ebp+var_8] edi +
jz loc_1031C1D  +
mov eax [ebp+var_8] +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_1031B61  +
mov eax 8007000Eh +
push eax  +
push 48Eh  +
jmp loc_1031CD5  +
mov [ebp+arg_0] edi +
cmp [ebp+var_8] edi +
jbe loc_1031C0B  +
mov esi 400h +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_10]  +
call sub_1014D97  +
mov ebx eax +
cmp ebx edi +
jl loc_1031CAA  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1031CB2  +
push [ebp+var_4]  +
push esi  +
push [ebp+lpMem]  +
call sub_100D999  +
mov ebx eax +
cmp ebx edi +
jl loc_1031CBA  +
cmp [ebp+var_4] edi +
jz loc_1031BC6  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
push offset asc_10017E0  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov ebx eax +
cmp ebx edi +
jl loc_1031CC2  +
push [ebp+lpMem]  +
call ds:SysAllocString  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_1031CCA  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_C] +
mov [edx+ecx*4] eax +
inc ecx  +
mov [ebp+var_4] edi +
mov [ebp+arg_0] ecx +
cmp ecx [ebp+var_8] +
jb loc_1031B72  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov [eax+44h] ecx +
mov ecx [ebp+var_8] +
mov [eax+50h] ecx +
mov [ebp+var_C] edi +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp [ebp+var_C] edi +
jz loc_1031C73  +
xor eax eax +
mov [ebp+arg_0] eax +
cmp [ebp+var_8] edi +
jbe loc_1031C66  +
mov ecx [ebp+var_C] +
lea eax [ecx+eax*4] +
mov [ebp+var_20] eax +
mov eax [eax] +
cmp eax edi +
jz loc_1031C5A  +
push eax  +
call ds:SysFreeString  +
mov eax [ebp+var_20] +
mov [eax] edi +
mov eax [ebp+arg_0] +
inc eax  +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_8] +
jb loc_1031C3F  +
push [ebp+var_C]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
cmp [ebp+var_4] edi +
jz loc_1031C84  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_18] +
cmp eax edi +
jz loc_1031C94  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1031CA1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
push ebx  +
push 492h  +
jmp loc_1031CD7  +
push ebx  +
push 495h  +
jmp loc_1031CD7  +
push ebx  +
push 49Ch  +
jmp loc_1031CD7  +
push ebx  +
push 4A1h  +
jmp loc_1031CD7  +
mov eax 8007000Eh +
push eax  +
push 4A4h  +
mov ebx eax +
push offset aPackageSetupbl  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031C1D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
mov edi [ecx+40h] +
xor eax eax +
mov [ebp+var_4] eax +
cmp edi eax +
jnz loc_1031D13  +
cmp [ecx+44h] eax +
jz loc_1031D95  +
push esi  +
cmp edi eax +
jz loc_1031D20  +
mov esi [ecx+4Ch] +
mov [ebp+var_4] eax +
jmp loc_1031D2D  +
mov edi [ecx+44h] +
mov esi [ecx+50h] +
mov [ebp+var_4] 1 +
mov [ebp+var_8] eax +
cmp esi eax +
jbe loc_1031D94  +
push ebx  +
mov eax [ebp+var_8] +
mov ebx [edi+eax*4] +
lea eax [ebp+var_C] +
push eax  +
push 400h  +
push ebx  +
call sub_101420B  +
test eax eax +
jl loc_1031D6C  +
push [ebp+var_C]  +
push ebx  +
push [ebp+arg_0]  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_1031D88  +
inc [ebp+var_8]  +
cmp [ebp+var_8] esi +
jb loc_1031D35  +
jmp loc_1031D93  +
push eax  +
push 4FAh  +
push offset aPackageBlockli  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031D93  +
xor eax eax +
cmp [ebp+var_4] eax +
setz al  +
mov [ebp+var_4] eax +
pop ebx  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push edi  +
push [ebp+arg_0]  +
xor ebx ebx +
mov edi ecx +
mov [ebp+var_18] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
call sub_10318E4  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_1031DD6  +
push eax  +
push 376h  +
jmp loc_1031E2C  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_0]  +
push ebx  +
push offset a_CfgRequiredco  +
call sub_1014C90  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_1031DF7  +
push eax  +
push 379h  +
jmp loc_1031E2C  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_1031E13  +
push eax  +
push 37Ch  +
jmp loc_1031E2C  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_18]  +
call sub_1015DFA  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_1031E45  +
push eax  +
push 37Fh  +
push offset aPackageSetprer  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031F0C  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1031F0C  +
push esi  +
shl eax 2 +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jnz loc_1031E7D  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_8] eax +
push 386h  +
jmp loc_1031F51  +
mov [ebp+arg_0] ebx +
cmp [ebp+var_4] ebx +
jbe loc_1031EC9  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_14]  +
call sub_1014D97  +
cmp eax ebx +
mov [ebp+var_8] eax +
jl loc_1031F43  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
cmp eax ebx +
mov [ebp+var_8] eax +
jl loc_1031F4B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov [esi+eax*4] ecx +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_4] +
jb loc_1031E85  +
mov eax [ebp+var_4] +
mov [edi+3Ch] esi +
mov [edi+48h] eax +
mov [edi+5Ch] ebx +
mov [edi+60h] ebx +
xor esi esi +
cmp esi ebx +
jz loc_1031F0B  +
xor edi edi +
cmp [ebp+var_4] ebx +
jbe loc_1031EFC  +
mov eax [esi+edi*4] +
cmp eax ebx +
jz loc_1031EF6  +
push eax  +
call ds:SysFreeString  +
mov [esi+edi*4] ebx +
inc edi  +
cmp edi [ebp+var_4] +
jb loc_1031EE5  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
cmp [ebp+var_C] ebx +
jz loc_1031F1D  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1031F2D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_14] +
pop edi  +
cmp eax ebx +
pop ebx  +
jz loc_1031F3C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
leave   +
retn 4  +
push eax  +
push 38Ah  +
jmp loc_1031F51  +
push eax  +
push 38Dh  +
push offset aPackageSetprer  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1031EDA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:SysAllocString +
push esi  +
push [ebp+arg_4]  +
call ebx  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1031FB6  +
mov esi 8007000Eh +
push esi  +
push 27Bh  +
push offset aAppendelement  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_103207F  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
push edi  +
call dword ptr [ecx+0BCh]  +
mov esi eax +
test esi esi +
jge loc_1031FD9  +
push esi  +
push 281h  +
jmp loc_1032061  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call sub_1014ABA  +
mov esi eax +
test esi esi +
jge loc_1031FF1  +
push esi  +
push 287h  +
jmp loc_1032061  +
cmp [ebp+arg_8] 0 +
jz loc_1032047  +
push [ebp+arg_4]  +
call ds:SysFreeString  +
push [ebp+arg_8]  +
call ebx  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_103202D  +
mov esi 8007000Eh +
push esi  +
push 290h  +
push offset aAppendelement  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_103207E  +
mov eax [ebp+var_8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
test esi esi +
jge loc_1032047  +
push esi  +
push 293h  +
jmp loc_1032061  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_1032075  +
push esi  +
push 29Ah  +
push offset aAppendelement  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push [ebp+arg_4]  +
call ds:SysFreeString  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1032090  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
test eax eax +
jz loc_103209D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax [ecx+0D0h] +
cmp eax 0Ch +
jz loc_10320C7  +
cmp eax 0Bh +
jz loc_10320C7  +
test eax eax +
jz loc_10320C7  +
cmp eax 0Dh +
jz loc_10320C7  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+lpMem] 0 +
push ebx  +
push esi  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
mov [ebp+lpFileName] esi +
test esi esi +
jnz loc_103211D  +
mov ebx 8007000Eh +
push ebx  +
push 18Fh  +
push offset aCopylatestcab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10321C0  +
push edi  +
push dword_104E198  +
mov edi 104h +
push offset aS__  +
push edi  +
push esi  +
call sub_100DD8E  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jge loc_1032146  +
push ebx  +
push 196h  +
jmp loc_10321AB  +
lea eax [ebp+lpMem] +
push eax  +
push esi  +
call sub_1025F12  +
mov ebx eax +
test ebx ebx +
jge loc_103215E  +
push ebx  +
push 199h  +
jmp loc_10321AB  +
mov esi offset aLatest_cab +
push esi  +
push edi  +
push [ebp+lpFileName]  +
call sub_1014151  +
mov ebx eax +
test ebx ebx +
jge loc_103217B  +
push ebx  +
push 19Ch  +
jmp loc_10321AB  +
push [ebp+lpFileName]  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_103218E  +
call ds:GetLastError  +
push 1  +
push dword_104E198  +
push esi  +
push [ebp+lpMem]  +
call sub_102F2C7  +
mov ebx eax +
test ebx ebx +
jge loc_10321BF  +
push ebx  +
push 1A5h  +
push offset aCopylatestcab  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
cmp [ebp+lpMem] 0 +
mov esi ds:HeapFree +
jz loc_10321DE  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
and [ebp+lpMem] 0 +
cmp [ebp+lpFileName] 0 +
jz loc_10321F2  +
push [ebp+lpFileName]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
call ds:VariantInit  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
cmp edi ebx +
jnz loc_1032258  +
mov esi 8007000Eh +
push esi  +
push 220h  +
push offset aHistoryfilerem  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_1032374  +
push offset aResults_xml  +
push dword_104E198  +
push offset aSS_2  +
push 104h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jge loc_1032284  +
push esi  +
push 228h  +
jmp loc_1032247  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call sub_1014986  +
mov esi eax +
cmp esi ebx +
jge loc_103229C  +
push esi  +
push 22Bh  +
jmp loc_1032247  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push [ebp+var_4]  +
push offset aDiagnosticresu  +
call sub_1014C90  +
mov esi eax +
cmp esi ebx +
jge loc_10322BC  +
push esi  +
push 232h  +
jmp loc_1032247  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_10322DA  +
push esi  +
push 235h  +
jmp loc_1032247  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset dword_1009464  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jge loc_10322FC  +
push esi  +
push 23Ah  +
jmp loc_1032247  +
xor edi edi +
inc edi  +
cmp [ebp+var_14] edi +
jnz loc_103235E  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_103231B  +
push esi  +
push 23Eh  +
jmp loc_1032369  +
push [ebp+lpMem]  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
cmp esi ebx +
jge loc_1032335  +
push esi  +
push 245h  +
jmp loc_1032369  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+108h]  +
mov esi eax +
cmp esi ebx +
jge loc_103237C  +
push esi  +
push 24Bh  +
jmp loc_1032247  +
mov esi 80004005h +
push esi  +
push 241h  +
push offset aHistoryfilerem  +
push offset aDwzErrorSDHr0x  +
push edi  +
call sub_1014247  +
add esp 14h +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1032396  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_10323A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_10323B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
cmp [ebp+lpMem] ebx +
jz loc_10323CC  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
push 800h  +
push ebx  +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1032428  +
mov esi 8007000Eh +
push esi  +
push 2C4h  +
push offset aLoadhistoryxml  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1032655  +
lea eax [ebp+var_4] +
push eax  +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1032456  +
push esi  +
push 2C7h  +
push offset aLoadhistoryxml  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1032634  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+4]  +
mov edi [ebp+arg_0] +
push eax  +
push offset aId  +
push edi  +
call sub_1031F6F  +
mov esi eax +
cmp esi ebx +
jge loc_103247F  +
push esi  +
push 2CAh  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push offset aName  +
push edi  +
call sub_1031F6F  +
mov esi eax +
cmp esi ebx +
jge loc_10324A4  +
push esi  +
push 2CDh  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+3Ch]  +
push eax  +
push offset aU  +
mov ebx 400h +
push ebx  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_10324D4  +
push esi  +
push 2D0h  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
push eax  +
push offset aPublisher  +
push edi  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_10324F9  +
push esi  +
push 2D3h  +
jmp loc_103261F  +
mov eax dword_104E188 +
cmp dword ptr [eax+0Ch] 0 +
jz loc_1032547  +
push dword ptr [eax+74h]  +
push offset aSupportkey  +
push edi  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_1032523  +
push esi  +
push 2DAh  +
jmp loc_103261F  +
mov eax dword_104E188 +
push dword ptr [eax+6Ch]  +
push offset aSupportprovide  +
push edi  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_1032547  +
push esi  +
push 2E0h  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
push eax  +
push offset aIcon  +
push edi  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_103256C  +
push esi  +
push 2E7h  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
push eax  +
push offset aCategory  +
push edi  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_1032591  +
push esi  +
push 2EAh  +
jmp loc_103261F  +
mov ecx [ebp+var_4] +
push 1  +
call sub_10316AF  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_1032633  +
mov esi [ebp+lpMem] +
push eax  +
push ebx  +
push esi  +
call sub_100D999  +
test eax eax +
jz loc_10325B9  +
xor esi esi +
jmp loc_1032633  +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10325BE  +
sub eax ecx +
sar eax 1 +
push 0  +
mov [ebp+var_10] eax +
pop ebx  +
mov edi offset aKeyword +
jz loc_1032609  +
mov eax [ebp+lpMem] +
push 2Bh  +
lea eax [eax+ebx*2] +
pop ecx  +
cmp cx [eax] +
jnz loc_1032603  +
push esi  +
push edi  +
push [ebp+arg_0]  +
xor ecx ecx +
mov [eax] cx +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jl loc_103265D  +
mov eax [ebp+lpMem] +
lea esi [eax+ebx*2+2] +
inc ebx  +
cmp ebx [ebp+var_10] +
jb loc_10325D9  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_1031F6F  +
mov esi eax +
test esi esi +
jge loc_1032633  +
push esi  +
push 310h  +
push offset aLoadhistoryxml  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_C] 0 +
jz loc_1032655  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push esi  +
push 309h  +
jmp loc_103261F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push esi  +
push edi  +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset aD02d02d02d  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100DD8E  +
mov esi eax +
add esp 1Ch +
test esi esi +
jge loc_10326D3  +
push esi  +
push 343h  +
push offset aGettimestamp  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
xor eax eax +
mov [ebp+hMem] ebx +
mov [ebp-24h] ebx +
lea edi [ebp-20h] +
stos   +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_14] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+lpSrc] ebx +
mov dword ptr [ebp+var_C] ebx +
mov dword ptr [ebp+lpMem] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] offset aDefaultid +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1032729  +
push esi  +
push 3Bh  +
jmp loc_10329D9  +
lea eax [ebp+var_18] +
push eax  +
call sub_102E866  +
mov esi eax +
cmp esi ebx +
jge loc_1032740  +
push esi  +
push 3Eh  +
jmp loc_10329D9  +
cmp dword_104E198 ebx +
jnz loc_10329F2  +
mov edi 208h +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov dword ptr [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_103278A  +
mov esi 8007000Eh +
push esi  +
push 46h  +
push offset aCreatehistoryd  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1032944  +
push edi  +
xor ecx ecx +
push ebx  +
mov [eax] cx +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov dword ptr [ebp+var_C] eax +
cmp eax ebx +
jnz loc_10327AB  +
mov esi 8007000Eh +
push esi  +
push 49h  +
jmp loc_1032771  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebp+lpSrc] eax +
cmp eax ebx +
jnz loc_10327C7  +
mov esi 8007000Eh +
push esi  +
push 4Ah  +
jmp loc_1032771  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov dword_104E198 eax +
cmp eax ebx +
jnz loc_10327E5  +
mov esi 8007000Eh +
push esi  +
push 4Bh  +
jmp loc_1032771  +
mov eax offset aLocalappdataEl +
cmp [ebp+var_18] ebx +
jnz loc_10327F4  +
mov eax offset aLocalappdataDi +
push eax  +
mov edi 104h +
push edi  +
push dword ptr [ebp+var_C]  +
call sub_100D999  +
mov esi eax +
cmp esi ebx +
jge loc_1032811  +
push esi  +
push 54h  +
jmp loc_10329D9  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1032828  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_10] eax +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_10]  +
call sub_1013FC3  +
mov esi eax +
cmp esi ebx +
jge loc_1032842  +
push esi  +
push 5Eh  +
jmp loc_10329D9  +
push [ebp+var_1C]  +
push dword ptr [ebp+var_C]  +
push offset aSU_0  +
push edi  +
push [ebp+lpSrc]  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jge loc_1032867  +
push esi  +
push 61h  +
jmp loc_10329D9  +
push [ebp+lpSrc]  +
push edi  +
push dword ptr [ebp+lpMem]  +
call sub_102EF8F  +
mov esi eax +
cmp esi ebx +
jge loc_1032881  +
push esi  +
push 64h  +
jmp loc_10329D9  +
push dword ptr [ebp+lpMem]  +
call sub_102F513  +
mov esi eax +
cmp esi ebx +
jge loc_1032897  +
push esi  +
push 67h  +
jmp loc_10329D9  +
push edi  +
push [ebp+lpSrc]  +
call sub_103266A  +
mov esi eax +
cmp esi ebx +
jge loc_10328AE  +
push esi  +
push 6Dh  +
jmp loc_10329D9  +
push [ebp+lpSrc]  +
push edi  +
push dword ptr [ebp+lpMem]  +
call sub_1014151  +
mov esi eax +
cmp esi ebx +
jge loc_10328C8  +
push esi  +
push 70h  +
jmp loc_10329D9  +
lea eax [ebp+hMem] +
push eax  +
call sub_102EEE3  +
mov esi eax +
cmp esi ebx +
jge loc_10328DF  +
push esi  +
push 73h  +
jmp loc_10329D9  +
mov [ebp+var_10] ebx +
push [ebp+var_10]  +
push dword ptr [ebp+lpMem]  +
push offset aS_03d  +
push edi  +
push dword_104E198  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jl loc_10329BC  +
lea eax [ebp+hMem] +
push eax  +
push dword_104E198  +
call ds:CreateDirectoryW  +
cmp eax ebx +
jnz loc_10329F2  +
mov esi ds:GetLastError +
call esi  +
cmp eax 0B7h +
jnz loc_10329C1  +
inc [ebp+var_10]  +
cmp [ebp+var_10] 4C4B40h +
jb loc_10328E2  +
xor esi esi +
inc esi  +
cmp esi ebx +
jz loc_1032962  +
mov eax dword_104E198 +
cmp eax ebx +
jz loc_1032962  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword_104E198 ebx +
cmp [ebp-24h] ebx +
jz loc_1032973  +
push dword ptr [ebp-24h]  +
call ds:LocalFree  +
mov [ebp-24h] ebx +
cmp dword ptr [ebp+lpMem] ebx +
jz loc_1032989  +
push dword ptr [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp dword ptr [ebp+var_C] ebx +
jz loc_103299F  +
push dword ptr [ebp+var_C]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpSrc] ebx +
jz loc_10329B5  +
push [ebp+lpSrc]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
push esi  +
push 7Fh  +
jmp loc_10329D9  +
call esi  +
cmp eax ebx +
jle loc_10329D1  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
push 8Eh  +
push offset aCreatehistoryd  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1032940  +
xor esi esi +
jmp loc_1032962  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor esi esi +
push eax  +
mov [ebp+var_4] esi +
mov [ebp+var_8] esi +
call ds:VariantInit  +
push 208h  +
push esi  +
call ds:GetProcessHeap  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov edi eax +
mov [ebp+lpMem] edi +
cmp edi esi +
jnz loc_1032A49  +
mov esi 8007000Eh +
push esi  +
push 1C7h  +
jmp loc_1032B92  +
lea eax [ebp+var_4] +
push eax  +
push offset aDiagnosticre_0  +
call sub_101484F  +
mov esi eax +
test esi esi +
jge loc_1032A68  +
push esi  +
push 1CAh  +
jmp loc_1032B92  +
push [ebp+var_4]  +
call sub_10323D8  +
mov esi eax +
test esi esi +
jge loc_1032A81  +
push esi  +
push 1D0h  +
jmp loc_1032B92  +
push offset aResults_xml  +
push dword_104E198  +
push offset aSS_2  +
push 104h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_1032AB0  +
push esi  +
push 1D8h  +
jmp loc_1032B92  +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
test esi esi +
jge loc_1032ACB  +
push esi  +
push 1DBh  +
jmp loc_1032B92  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+108h]  +
mov esi eax +
test esi esi +
jge loc_1032AF4  +
push esi  +
push 1E1h  +
jmp loc_1032B92  +
mov eax dword_104E188 +
cmp dword ptr [eax+0Ch] 0 +
jz loc_1032BA6  +
push 208h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
mov edi eax +
mov [ebp+var_8] edi +
test edi edi +
jnz loc_1032B29  +
mov esi 8007000Eh +
push esi  +
push 1E7h  +
jmp loc_1032B92  +
push offset aResults_cab  +
push dword_104E198  +
push offset aSS_2  +
push 104h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_1032B55  +
push esi  +
push 1EFh  +
jmp loc_1032B92  +
mov eax dword_104E188 +
mov eax [eax+88h] +
push 0  +
push edi  +
push eax  +
call ds:CopyFileW  +
test eax eax +
jz loc_1032B72  +
xor esi esi +
jmp loc_1032BA6  +
call ds:GetLastError  +
test eax eax +
jle loc_1032B86  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_1032BA6  +
push esi  +
push 1F2h  +
push offset aCreatehistoryf  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1032BC1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_1032BDB  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
cmp [ebp+var_8] 0 +
jz loc_1032BEF  +
push [ebp+var_8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+lpExistingFileName] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_14] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1032C34  +
push esi  +
push 0CFh  +
jmp loc_1033027  +
mov eax [ebp+var_8] +
cmp [eax+84h] ebx +
jz loc_103303B  +
cmp [ebp+arg_0] ebx +
jz loc_1032C7F  +
mov eax dword_104E188 +
mov eax [eax+0A4h] +
cmp eax ebx +
jz loc_103303B  +
cmp eax 1Dh +
jz loc_103303B  +
cmp eax 1Fh +
jz loc_103303B  +
cmp eax 20h +
jz loc_103303B  +
cmp eax 17h +
jz loc_103303B  +
call sub_10326E0  +
mov esi eax +
cmp esi ebx +
jge loc_1032C95  +
push esi  +
push 0E8h  +
jmp loc_1033027  +
cmp esi 1 +
jnz loc_1032CBF  +
mov ecx dword_104E188 +
xor esi esi +
call sub_10320AA  +
test eax eax +
jz loc_103303B  +
mov esi 80004005h +
push esi  +
push 0F2h  +
jmp loc_1033027  +
mov edi 208h +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov ebx eax +
mov [ebp+lpExistingFileName] ebx +
test ebx ebx +
jnz loc_1032CEE  +
mov esi 8007000Eh +
push esi  +
push 0FBh  +
jmp loc_1033027  +
xor eax eax +
push edi  +
push eax  +
mov [ebx] ax +
call ds:GetProcessHeap  +
push eax  +
call esi  +
xor edi edi +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_1032D17  +
mov esi 8007000Eh +
push esi  +
push 0FEh  +
jmp loc_1033027  +
mov eax dword_104E188 +
cmp [eax+20h] edi +
jz loc_1032D2A  +
mov [ebp+arg_0] 1 +
jmp loc_1032D33  +
mov eax [ebp+var_8] +
mov eax [eax+7Ch] +
mov [ebp+arg_0] eax +
push dword_104E198  +
push 104h  +
push ebx  +
call sub_100D999  +
mov esi eax +
cmp esi edi +
jge loc_1032D55  +
push esi  +
push 105h  +
jmp loc_1033027  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1032D5A  +
sub eax edx +
sar eax 1 +
mov [ebp+var_20] eax +
cmp [ebp+arg_0] edi +
jbe loc_1032F6C  +
cmp [ebp+var_C] 0 +
jz loc_1032D87  +
push [ebp+var_C]  +
call ds:SysFreeString  +
and [ebp+var_C] 0 +
mov eax [ebp+var_8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ebx edi +
shl ebx 2 +
mov eax [eax+ebx] +
mov esi [eax+10h] +
test esi esi +
jz loc_1032F5F  +
mov eax [ebp+var_8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ebx+eax] +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1032F5F  +
mov ecx [ebp+var_20] +
mov eax [ebp+lpExistingFileName] +
lea eax [eax+ecx*2] +
xor ecx ecx +
mov [eax] cx +
lea ecx [ebp+var_C] +
push ecx  +
mov [ebp+var_1C] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
mov esi eax +
test esi esi +
jl loc_1032F96  +
push [ebp+var_C]  +
push [ebp+lpExistingFileName]  +
call sub_102FAB2  +
mov esi eax +
test esi esi +
jl loc_1032FA1  +
mov eax [ebp+var_8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ebx+eax] +
mov eax [ecx] +
call dword ptr [eax+4]  +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1032E13  +
sub eax ecx +
sar eax 1 +
cmp eax 20h +
mov eax [ebp+var_8] +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ecx [ebx+eax] +
jbe loc_1032E88  +
lea eax [ebp+var_18] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
call sub_1013FC3  +
mov esi eax +
test esi esi +
jl loc_1032FA9  +
mov eax dword_104E188 +
push dword ptr [eax+0B4h]  +
push [ebp+var_18]  +
push dword_104E198  +
push offset aSU_U_debugrepo  +
push 104h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 18h +
test esi esi +
jge loc_1032EBE  +
push esi  +
push 12Ch  +
jmp loc_1033027  +
mov eax dword_104E188 +
push dword ptr [eax+0B4h]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push dword_104E198  +
push offset aSS_U_debugrepo  +
push 104h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 18h +
test esi esi +
jl loc_1032FB1  +
mov ecx [ebp+var_1C] +
push offset aDebugreport_xm  +
push 104h  +
push [ebp+lpExistingFileName]  +
xor eax eax +
mov [ecx] ax +
call sub_1014151  +
mov esi eax +
test esi esi +
jl loc_1032FB9  +
push [ebp+lpMem]  +
call ds:DeleteFileW  +
push [ebp+lpMem]  +
push [ebp+lpExistingFileName]  +
call ds:MoveFileW  +
test eax eax +
jnz loc_1032F19  +
call ds:GetLastError  +
test eax eax +
jle loc_1032F0F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_1032FC1  +
mov ecx [ebp+var_1C] +
push offset aResultreport_x  +
push 104h  +
push [ebp+lpExistingFileName]  +
xor eax eax +
mov [ecx] ax +
call sub_1014151  +
mov esi eax +
test esi esi +
jl loc_1032FC9  +
mov eax [ebp+var_8] +
push [ebp+lpExistingFileName]  +
mov [eax+80h] edi +
mov eax [eax+78h] +
mov ebx [ebx+eax] +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call sub_103516F  +
mov esi eax +
test esi esi +
jl loc_1032FD1  +
inc edi  +
cmp edi [ebp+arg_0] +
jb loc_1032D74  +
mov ebx [ebp+lpExistingFileName] +
mov ecx [ebp+var_20] +
push offset aResultreport_x  +
push 104h  +
xor eax eax +
push ebx  +
mov [ebx+ecx*2] ax +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_1032FD9  +
push esi  +
push 157h  +
jmp loc_1033027  +
push esi  +
push 115h  +
jmp loc_1033027  +
push esi  +
push 11Bh  +
jmp loc_1033027  +
push esi  +
push 123h  +
jmp loc_1033027  +
push esi  +
push 135h  +
jmp loc_1033027  +
push esi  +
push 13Bh  +
jmp loc_1033027  +
push esi  +
push 140h  +
jmp loc_1033027  +
push esi  +
push 148h  +
jmp loc_1033027  +
push esi  +
push 151h  +
jmp loc_1033027  +
push [ebp+arg_4]  +
push ebx  +
push [ebp+var_14]  +
call sub_1035266  +
mov esi eax +
test esi esi +
jge loc_1032FF3  +
push esi  +
push 15Ah  +
jmp loc_1033027  +
mov ecx dword_104E188 +
push ebx  +
call sub_101C317  +
and [ebp+lpExistingFileName] 0 +
call sub_10329FE  +
mov esi eax +
test esi esi +
jge loc_1033016  +
push esi  +
push 163h  +
jmp loc_1033027  +
call sub_10320CF  +
mov esi eax +
test esi esi +
jge loc_103303B  +
push esi  +
push 169h  +
push offset aMakehistorydir  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_14] +
xor ebx ebx +
cmp eax ebx +
jz loc_103304D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] ebx +
cmp [ebp+var_C] ebx +
jz loc_103305E  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov [ebp+var_C] ebx +
mov edi ds:HeapFree +
cmp [ebp+lpMem] ebx +
jz loc_1033076  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
cmp [ebp+lpExistingFileName] ebx +
jz loc_1033088  +
push [ebp+lpExistingFileName]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
lea eax [ecx+14h] +
push eax  +
push 0  +
push 4  +
push offset asc_1008DFC  +
push dword ptr [ecx+4]  +
call ds:WriteFile  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
push dword ptr [esi+24h]  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_10330DB  +
mov eax 80004005h +
push eax  +
mov esi eax +
push 0E1h  +
jmp loc_103310C  +
push dword ptr [esi+24h]  +
call ds:ResetEvent  +
test eax eax +
jz loc_10330EC  +
xor esi esi +
jmp loc_1033120  +
call ds:GetLastError  +
test eax eax +
jle loc_1033100  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_1033120  +
push esi  +
push 0E5h  +
push offset aClientelevatio  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
mov eax [esi+24h] +
mov [ebp-8] eax +
mov eax [esi+8] +
mov [ebp-4] eax +
push 0  +
lea eax [ebp-8] +
push eax  +
push 2  +
call ds:WaitForMultipleObjects  +
sub eax 0 +
jz loc_1033171  +
dec eax  +
jz loc_103316A  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 1D6h  +
jmp loc_10331A2  +
and hHandle 0 +
push dword ptr [esi+24h]  +
call ds:ResetEvent  +
test eax eax +
jz loc_1033182  +
xor esi esi +
jmp loc_10331B6  +
call ds:GetLastError  +
test eax eax +
jle loc_1033196  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_10331B6  +
push esi  +
push 1DAh  +
push offset aServerelevat_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 208h  +
xor ebx ebx +
push ebx  +
mov esi ecx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_103320A  +
mov edi 8007000Eh +
push edi  +
push 58h  +
push offset aClientelevat_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10332C1  +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:CreateEventW  +
mov [esi+24h] eax +
cmp eax ebx +
jz loc_1033283  +
cmp eax 0FFFFFFFFh +
jz loc_1033283  +
push dword ptr [esi+0Ch]  +
push offset a_PipeS  +
push 104h  +
push dword ptr [ebp-4]  +
call sub_100DD8E  +
mov edi eax +
add esp 10h +
cmp edi ebx +
jge loc_1033244  +
push edi  +
push 61h  +
jmp loc_103329C  +
push ebx  +
push 40000000h  +
push 3  +
push ebx  +
push ebx  +
push 0C0000000h  +
push dword ptr [ebp-4]  +
call ds:CreateFileW  +
mov [esi+4] eax +
cmp eax ebx +
jz loc_1033268  +
cmp eax 0FFFFFFFFh +
jnz loc_10332B0  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_103327C  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 6Eh  +
jmp loc_103329C  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1033297  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 5Eh  +
push offset aClientelevat_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-4]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
xor eax eax +
mov esi 1000h +
push esi  +
push eax  +
mov edi ecx +
mov [ebp-0Ch] eax +
mov [ebp-10h] eax +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-8] eax +
test eax eax +
jnz loc_1033326  +
mov eax 8007000Eh +
push eax  +
push 93h  +
push offset aClientelevat_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov [ebp-4] eax +
call sub_1014247  +
add esp 14h +
jmp loc_1033478  +
xor ecx ecx +
mov [eax] cx +
lea ecx [edi+14h] +
push ecx  +
push 0  +
push esi  +
push eax  +
push dword ptr [edi+4]  +
call ds:ReadFile  +
test eax eax +
jnz loc_1033398  +
mov esi ds:GetLastError +
call esi  +
cmp eax 3E5h +
jz loc_103336E  +
call esi  +
test eax eax +
jle loc_103335F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-4] eax +
test eax eax +
jge loc_103336E  +
push eax  +
push 9Dh  +
jmp loc_1033387  +
mov eax [edi] +
push 3E8h  +
mov ecx edi +
call dword ptr [eax+10h]  +
mov [ebp-4] eax +
test eax eax +
jge loc_1033398  +
push eax  +
push 0A1h  +
push offset aClientelevat_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_103342C  +
lea eax [ebp-10h] +
push eax  +
push 3Bh  +
push dword ptr [ebp-8]  +
call sub_1014795  +
xor esi esi +
inc esi  +
mov [ebp-4] eax +
cmp eax esi +
jnz loc_10333B7  +
mov dword ptr [ebp-4] 80004005h +
cmp dword ptr [ebp-4] 0 +
jge loc_10333C7  +
push dword ptr [ebp-4]  +
push 0ACh  +
jmp loc_1033421  +
mov eax [ebp-10h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10333CD  +
sub eax edx +
sar eax 1 +
jz loc_1033446  +
push 200h  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp-0Ch] edi +
test edi edi +
jnz loc_1033406  +
mov eax 8007000Eh +
push eax  +
mov [ebp-4] eax +
push 0AFh  +
jmp loc_1033421  +
push dword ptr [ebp-10h]  +
push 100h  +
push edi  +
call sub_100D999  +
mov [ebp-4] eax +
test eax eax +
jge loc_1033436  +
push eax  +
push 0B2h  +
push offset aClientelevat_1  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
jmp loc_1033452  +
mov ecx dword_104E188 +
push edi  +
call sub_1011131  +
and dword ptr [ebp-0Ch] 0 +
mov ecx [ebp-8] +
mov eax [ebp+8] +
and dword ptr [ebp-8] 0 +
mov [eax] ecx +
cmp dword ptr [ebp-8] 0 +
mov esi ds:HeapFree +
jz loc_1033468  +
push dword ptr [ebp-8]  +
push 0  +
call ebx  +
push eax  +
call esi  +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1033478  +
push dword ptr [ebp-0Ch]  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp-10h] ebx +
xor eax eax +
lea edi [ebp-0Ch] +
stos   +
push 800h  +
push ebx  +
mov esi ecx +
stos   +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
cmp eax ebx +
jnz loc_10334DE  +
mov edi 8007000Eh +
push edi  +
push 105h  +
push offset aServerelevatio  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1033626  +
push ebx  +
xor eax eax +
lea ecx [ebp-0Ch] +
inc eax  +
push ecx  +
push eax  +
push offset aDAGaBaAGaSy  +
mov dword ptr [ebp-10h] 0Ch +
mov [ebp-0Ch] ebx +
mov [ebp-8] eax +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
mov ebx 80070000h +
test eax eax +
jnz loc_1033529  +
call ds:GetLastError  +
test eax eax +
jle loc_1033518  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
test edi edi +
jge loc_1033529  +
push edi  +
push 113h  +
jmp loc_10335FE  +
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov [esi+24h] eax +
test eax eax +
jz loc_10335E5  +
cmp eax 0FFFFFFFFh +
jz loc_10335E5  +
push dword ptr [esi+0Ch]  +
push offset a_PipeS  +
push 400h  +
push dword ptr [ebp-4]  +
call sub_100DD8E  +
mov edi eax +
add esp 10h +
test edi edi +
jge loc_1033573  +
push edi  +
push 11Ch  +
jmp loc_10335FE  +
lea eax [ebp-10h] +
push eax  +
push 3E8h  +
mov eax 200h +
push eax  +
push eax  +
push 1  +
push 8  +
push 40000003h  +
push dword ptr [ebp-4]  +
call ds:CreateNamedPipeW  +
mov [esi+4] eax +
test eax eax +
jz loc_10335CA  +
cmp eax 0FFFFFFFFh +
jz loc_10335CA  +
add esi 14h +
push esi  +
push eax  +
call ds:ConnectNamedPipe  +
test eax eax +
jnz loc_10335BD  +
call ds:GetLastError  +
cmp eax 3E5h +
jz loc_1033612  +
mov edi 80004005h +
push edi  +
push 132h  +
jmp loc_10335FE  +
call ds:GetLastError  +
test eax eax +
jle loc_10335DB  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
push edi  +
push 12Ah  +
jmp loc_10335FE  +
call ds:GetLastError  +
test eax eax +
jle loc_10335F6  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
push edi  +
push 119h  +
push offset aServerelevatio  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
push dword ptr [ebp-4]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor ebx ebx +
cmp [ebp-0Ch] ebx +
jz loc_1033634  +
push dword ptr [ebp-0Ch]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov eax [ebx] +
xor edi edi +
push 0FFFFFFFFh  +
mov [ebp-10h] edi +
mov [ebp-8] edi +
mov [ebp-0Ch] edi +
call dword ptr [eax+10h]  +
mov esi eax +
cmp esi edi +
jge loc_1033684  +
push esi  +
push 162h  +
push offset aServerelevat_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1033835  +
push 1000h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
cmp eax edi +
jnz loc_10336AE  +
mov esi 8007000Eh +
push esi  +
push 164h  +
jmp loc_1033809  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp-0Ch] +
push eax  +
call sub_101C0E6  +
mov esi eax +
cmp esi edi +
jge loc_10336CD  +
push esi  +
push 16Ch  +
jmp loc_1033809  +
mov ecx [ebp-0Ch] +
call sub_101246D  +
mov edx [eax] +
lea ecx [ebp-8] +
push ecx  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_10336F1  +
push esi  +
push 16Fh  +
jmp loc_1033809  +
cmp dword ptr [ebp-8] 0 +
mov edi 800h +
jz loc_1033719  +
push dword ptr [ebp-8]  +
push edi  +
push dword ptr [ebp-4]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_1033719  +
push esi  +
push 173h  +
jmp loc_1033809  +
push offset asc_1005388  +
push edi  +
push dword ptr [ebp-4]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_1033738  +
push esi  +
push 177h  +
jmp loc_1033809  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_103376F  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1033744  +
sub eax esi +
sar eax 1 +
jz loc_103376F  +
push ecx  +
push edi  +
push dword ptr [ebp-4]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jge loc_103376F  +
push esi  +
push 17Bh  +
jmp loc_1033809  +
mov eax [ebp-4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1033775  +
sub eax edx +
push 0  +
sar eax 1 +
lea ecx [ebp-10h] +
push ecx  +
lea eax [eax+eax+2] +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebx+4]  +
call ds:WriteFile  +
mov edi 80070000h +
test eax eax +
jnz loc_10337C2  +
call ds:GetLastError  +
test eax eax +
jle loc_10337B4  +
and eax 0FFFFh +
or eax edi +
mov esi eax +
test esi esi +
jge loc_10337C2  +
push esi  +
push 186h  +
jmp loc_1033809  +
lea eax [ebx+14h] +
push eax  +
push 0  +
push 4  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebx+4]  +
call ds:ReadFile  +
mov [ebp-14h] eax +
test eax eax +
jnz loc_10337ED  +
mov esi ds:GetLastError +
call esi  +
cmp eax 3E5h +
jnz loc_1033854  +
xor esi esi +
cmp [ebp-14h] esi +
jnz loc_103381D  +
mov eax [ebx] +
push 0FFFFFFFFh  +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov esi eax +
test esi esi +
jge loc_103381D  +
push esi  +
push 199h  +
push offset aServerelevat_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor edi edi +
cmp [ebp-4] edi +
jz loc_1033835  +
push dword ptr [ebp-4]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp-8] edi +
jz loc_103384B  +
push dword ptr [ebp-8]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
call esi  +
test eax eax +
jle loc_1033861  +
and eax 0FFFFh +
or eax edi +
mov esi eax +
test esi esi +
jge loc_10337F4  +
push esi  +
push 192h  +
jmp loc_1033809  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+lpMem] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
cmp [edi] ebx +
jnz loc_10338CB  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101453D  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_1033AB9  +
push eax  +
push 0BBh  +
push offset aSubstitutepara  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1033AB9  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call ds:RtlCreateEnvironment  +
cmp eax ebx +
mov esi ds:RtlNtStatusToDosError +
jge loc_1033901  +
push eax  +
call esi  +
cmp eax ebx +
jle loc_10338F4  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jge loc_1033901  +
push eax  +
push 0C1h  +
jmp loc_1033A9A  +
cmp [ebp+var_4] ebx +
jnz loc_1033919  +
mov eax 8000FFFFh +
push eax  +
mov [ebp+var_8] eax +
push 0C2h  +
jmp loc_1033A9A  +
mov [ebp+arg_8] ebx +
cmp [edi+4] ebx +
jbe loc_10339BA  +
mov eax [edi] +
mov ecx [ebp+arg_8] +
push dword ptr [eax+ecx*8]  +
lea eax [ebp+var_24] +
push eax  +
call ds:RtlInitUnicodeStringEx  +
cmp eax ebx +
jge loc_1033954  +
push eax  +
call esi  +
cmp eax ebx +
jle loc_103394E  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_10339DE  +
mov eax [edi] +
mov ecx [ebp+arg_8] +
push dword ptr [eax+ecx*8+4]  +
lea eax [ebp+var_1C] +
push eax  +
call ds:RtlInitUnicodeStringEx  +
cmp eax ebx +
jge loc_1033980  +
push eax  +
call esi  +
cmp eax ebx +
jle loc_103397E  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_10339E9  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call ds:RtlSetEnvironmentVariable  +
cmp eax ebx +
jge loc_10339AB  +
push eax  +
call esi  +
cmp eax ebx +
jle loc_10339A9  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_10339F4  +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
cmp eax [edi+4] +
jb loc_1033925  +
lea eax [ebp+var_14] +
push eax  +
mov edi 100000h +
push edi  +
push [ebp+arg_4]  +
call sub_101420B  +
cmp eax ebx +
mov [ebp+var_8] eax +
jge loc_10339FF  +
push eax  +
push 0D7h  +
jmp loc_1033A9A  +
push eax  +
push 0CBh  +
jmp loc_1033A9A  +
push eax  +
push 0D0h  +
jmp loc_1033A9A  +
push eax  +
push 0D3h  +
jmp loc_1033A9A  +
mov esi ds:RtlExpandEnvironmentStrings +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_14]  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
call esi  +
cmp eax 0C0000023h +
jnz loc_1033A75  +
mov eax [ebp+var_10] +
cmp eax edi +
jbe loc_1033A34  +
mov eax 8007006Fh +
push eax  +
mov [ebp+var_8] eax +
push 0E7h  +
jmp loc_1033A9A  +
add eax eax +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+lpMem] edi +
cmp edi ebx +
jnz loc_1033A5E  +
mov eax 8007000Eh +
push eax  +
mov [ebp+var_8] eax +
push 0EAh  +
jmp loc_1033A9A  +
push ebx  +
xor eax eax +
mov [edi] ax +
push [ebp+var_10]  +
push edi  +
push [ebp+var_14]  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
call esi  +
jmp loc_1033A77  +
mov edi ebx +
cmp eax ebx +
jge loc_1033AB0  +
push eax  +
call ds:RtlNtStatusToDosError  +
cmp eax ebx +
jle loc_1033A92  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jge loc_1033AB0  +
push eax  +
push 0F6h  +
push offset aSubstitutepara  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1033AB8  +
mov eax [ebp+arg_0] +
mov [eax] edi +
mov [ebp+lpMem] ebx +
pop esi  +
cmp [ebp+var_4] ebx +
jz loc_1033AC7  +
push [ebp+var_4]  +
call ds:RtlDestroyEnvironment  +
cmp [ebp+lpMem] ebx +
jz loc_1033ADD  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_1C] +
mov [ebp+lpMem] esi +
stos   +
mov edi [ebp+arg_8] +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push esi  +
push offset a_Parameter  +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
call sub_1014C90  +
mov ebx eax +
cmp ebx esi +
jge loc_1033B34  +
push ebx  +
push 3Eh  +
jmp loc_1033CD6  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+88h]  +
mov ebx eax +
cmp ebx esi +
jge loc_1033B4F  +
push ebx  +
push 41h  +
jmp loc_1033CD6  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
cmp ebx esi +
jge loc_1033B6A  +
push ebx  +
push 47h  +
jmp loc_1033CD6  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_18]  +
call sub_1015DFA  +
mov ebx eax +
cmp ebx esi +
jge loc_1033B84  +
push ebx  +
push 4Ah  +
jmp loc_1033CD6  +
mov edi [ebp+var_10] +
mov eax edi +
shl eax 3 +
push eax  +
push 8  +
mov [ebp+var_1C] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_1033BB3  +
mov ebx 8007000Eh +
push ebx  +
push 4Fh  +
jmp loc_1033CD6  +
mov [ebp+arg_8] esi +
cmp edi esi +
jbe loc_1033CBE  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov ebx eax +
cmp ebx esi +
jl loc_1033D8D  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Name  +
push eax  +
call dword ptr [ecx+94h]  +
mov ebx eax +
cmp ebx esi +
jl loc_1033D95  +
cmp [ebp+var_4] esi +
jz loc_1033C05  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] esi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx esi +
jl loc_1033D9D  +
mov eax [ebp+var_4] +
mov ecx [ebp+lpMem] +
mov edx [ebp+arg_8] +
mov [ecx+edx*8] eax +
mov eax [ebp+var_8] +
mov [ebp+var_4] esi +
cmp eax esi +
jz loc_1033C3B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset a_Value  +
push eax  +
call dword ptr [ecx+94h]  +
mov ebx eax +
cmp ebx esi +
jl loc_1033DA5  +
cmp [ebp+var_4] esi +
jz loc_1033C6B  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] esi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
mov ebx eax +
cmp ebx esi +
jl loc_1033DAD  +
mov eax [ebp+var_4] +
mov ecx [ebp+lpMem] +
mov edx [ebp+arg_8] +
mov [ecx+edx*8+4] eax +
mov eax [ebp+var_C] +
mov [ebp+var_4] esi +
cmp eax esi +
jz loc_1033CA2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] esi +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1033CB2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
inc [ebp+arg_8]  +
cmp [ebp+arg_8] edi +
jb loc_1033BBE  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1033874  +
mov ebx eax +
cmp ebx esi +
jge loc_1033CEA  +
push ebx  +
push 78h  +
push offset aDwzsubstitutex  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] esi +
jz loc_1033D46  +
mov [ebp+arg_8] esi +
cmp [ebp+var_10] esi +
jbe loc_1033D35  +
mov edi [ebp+arg_8] +
mov eax [ebp+lpMem] +
shl edi 3 +
mov eax [edi+eax] +
cmp eax esi +
jz loc_1033D14  +
push eax  +
call ds:SysFreeString  +
mov eax [ebp+lpMem] +
mov [edi+eax] esi +
mov eax [ebp+lpMem] +
lea edi [edi+eax+4] +
mov eax [edi] +
cmp eax esi +
jz loc_1033D2A  +
push eax  +
call ds:SysFreeString  +
mov [edi] esi +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
cmp eax [ebp+var_10] +
jb loc_1033CF7  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_4] esi +
jz loc_1033D57  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] esi +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_1033D67  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] esi +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1033D77  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_14] +
cmp eax esi +
jz loc_1033D84  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
push ebx  +
push 56h  +
jmp loc_1033CD6  +
push ebx  +
push 59h  +
jmp loc_1033CD6  +
push ebx  +
push 5Eh  +
jmp loc_1033CD6  +
push ebx  +
push 66h  +
jmp loc_1033CD6  +
push ebx  +
push 6Bh  +
jmp loc_1033CD6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
xor esi esi +
push esi  +
xor edi edi +
call sub_1036BFB  +
test eax eax +
jz loc_1033DF7  +
mov eax 80004005h +
push eax  +
push 275h  +
push offset aDwzsqmusercont  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_1033E11  +
mov eax [ebp+var_4] +
sub eax esi +
jz loc_1033E09  +
dec eax  +
jz loc_1033E04  +
dec eax  +
jmp loc_1033E0C  +
xor esi esi +
inc esi  +
jmp loc_1033E0C  +
push 2  +
pop esi  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1033E32  +
cmp word ptr [eax] 0 +
mov ecx eax +
jnz loc_1033E37  +
mov ecx offset aNull +
mov eax [ebp+arg_0] +
mov [eax+4] ecx +
mov dword ptr [eax] 2 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov dword ptr [eax] 10h +
mov [eax+8] ecx +
mov dword ptr [eax+4] 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 10h +
test ecx ecx +
jz loc_1033E8B  +
cmp word ptr [ecx] 0 +
jnz loc_1033E90  +
mov ecx offset aNull +
mov [eax+8] ecx +
mov dword ptr [eax+4] 2 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
mov eax dword_104E188 +
push dword ptr [eax+6Ch]  +
lea eax [ebp+var_18] +
push eax  +
call sub_1033E1E  +
mov eax dword_104E188 +
mov ecx [eax+0A4h] +
mov [ebp+var_C] ecx +
xor ecx ecx +
inc ecx  +
xor edx edx +
mov [ebp+var_10] ecx +
cmp [eax+38h] edx +
lea eax [ebp+var_18] +
push eax  +
setnz dl  +
push 3  +
push 11DBh  +
push 0  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edx +
call WinSqmAddToStream  +
xor eax eax +
pop edi  +
leave   +
retn   +
***
mov ecx dword_104E188 +
mov edx [ecx+0D0h] +
xor eax eax +
dec edx  +
cmp edx 2 +
ja locret_1033F24  +
xor edx edx +
cmp [ecx+38h] eax +
setnz dl  +
inc edx  +
mov eax edx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_104E188 +
cmp dword ptr [eax+2Ch] 0 +
mov ecx [ebp+arg_0] +
jz loc_1033F4B  +
call sub_1015CCD  +
neg eax  +
sbb eax eax +
add eax 4 +
jmp loc_1033F55  +
call sub_1015CCD  +
neg eax  +
sbb eax eax +
inc eax  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+34h] 0 +
jnz loc_1033F61  +
push 5  +
pop eax  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+lpMem] +
test esi esi +
jnz loc_1033FB4  +
lea eax [ebp+var_4] +
push eax  +
call sub_1031307  +
mov esi eax +
test esi esi +
jge loc_1033FB1  +
push esi  +
push 22Bh  +
push offset aDwzsqmid  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_103407C  +
mov esi [ebp+var_4] +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1033FF0  +
mov esi 8007000Eh +
push esi  +
push 230h  +
push offset aDwzsqmid  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034064  +
mov eax [esi] +
push ebx  +
push edi  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov ebx eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov edi eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
mov ecx offset aUnknown +
test ebx ebx +
jnz loc_1034016  +
mov ebx ecx +
test edi edi +
jnz loc_103401E  +
mov edi ecx +
xor edx edx +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push ebx  +
push offset aS_S_S  +
push 400h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 18h +
test esi esi +
jge loc_1034059  +
push esi  +
push 249h  +
push offset aDwzsqmid  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034062  +
mov eax [ebp+arg_4] +
and [ebp+lpMem] 0 +
mov [eax] edi +
pop edi  +
pop ebx  +
cmp [ebp+lpMem] 0 +
jz loc_103407C  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+var_18] +
push eax  +
mov [ebp+var_14] edi +
mov [ebp+var_18] edi +
mov [ebp+var_10] edi +
mov dword ptr [ebp+var_C] edi +
call sub_101C0E6  +
mov esi eax +
cmp esi edi +
jge loc_10340CE  +
push esi  +
push 378h  +
push offset aDwzaddwerparam  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034475  +
push ebx  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+lpMem] ebx +
cmp ebx edi +
jnz loc_10340FB  +
mov esi 8007000Eh +
push esi  +
push 37Ah  +
jmp loc_1034432  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call sub_1033F71  +
mov esi eax +
cmp esi edi +
jge loc_103411B  +
push esi  +
push 37Eh  +
jmp loc_1034432  +
mov edi [ebp+var_14] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1034123  +
sub eax edx +
sar eax 1 +
cmp eax 40h +
jbe loc_1034175  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1013FC3  +
mov esi eax +
test esi esi +
jge loc_1034151  +
push esi  +
push 385h  +
jmp loc_1034432  +
push dword ptr [ebp+var_C]  +
push offset aU  +
push 40h  +
push edi  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_1034175  +
push esi  +
push 388h  +
jmp loc_1034432  +
push edi  +
push offset aPackageid  +
push 0  +
push [ebp+arg_0]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1034196  +
push esi  +
push 38Ch  +
jmp loc_1034432  +
xor eax eax +
mov [ebx] ax +
mov ecx [ebp+var_18] +
call sub_101246D  +
mov edi eax +
mov ecx edi +
call sub_1017B6D  +
mov ebx eax +
mov eax [edi] +
neg ebx  +
sbb ebx ebx +
and [ebp+var_8] 0 +
mov ecx edi +
inc ebx  +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1034219  +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push [ebp+var_8]  +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jl loc_103424F  +
mov ecx [ebp+var_10] +
test ebx ebx +
jz loc_10341E9  +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_103420A  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_103420A  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push 400h  +
push [ebp+lpMem]  +
call sub_1014151  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_1034219  +
test esi esi +
jl loc_103425A  +
mov eax [edi] +
inc [ebp+var_8]  +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp [ebp+var_8] eax +
jb loc_10341C2  +
mov esi [ebp+lpMem] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1034221  +
sub eax edx +
sar eax 1 +
cmp eax 40h +
jbe loc_103428B  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1013FC3  +
mov esi eax +
test esi esi +
jge loc_1034265  +
push esi  +
push 3B1h  +
jmp loc_1034432  +
push esi  +
push 39Bh  +
jmp loc_1034432  +
push esi  +
push 3A9h  +
jmp loc_1034432  +
push dword ptr [ebp+var_C]  +
push offset aU  +
push 40h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_10342C1  +
push esi  +
push 3B4h  +
jmp loc_1034432  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1034290  +
sub eax edx +
sar eax 1 +
jnz loc_10342C1  +
push offset aDefault  +
push 400h  +
push esi  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_10342C1  +
push esi  +
push 3B7h  +
jmp loc_1034432  +
push [ebp+lpMem]  +
push offset aRootcause  +
push 1  +
push [ebp+arg_0]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_10342E4  +
push esi  +
push 3BBh  +
jmp loc_1034432  +
push offset a1_0_0_0  +
push offset aVersion  +
push 2  +
push [ebp+arg_0]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1034309  +
push esi  +
push 3C2h  +
jmp loc_1034432  +
mov ecx [ebp+lpMem] +
xor eax eax +
and [ebp+var_8] eax +
mov [ecx] ax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_1034378  +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push [ebp+var_8]  +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jl loc_10343AE  +
mov eax [ebp+var_10] +
test ebx ebx +
jz loc_1034346  +
cmp dword ptr [eax+1Ch] 0 +
jnz loc_1034369  +
cmp dword ptr [eax+20h] 0 +
jnz loc_1034369  +
mov eax [eax+34h] +
test eax eax +
jz loc_1034369  +
push eax  +
push 400h  +
push [ebp+lpMem]  +
call sub_1014151  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_1034378  +
test esi esi +
jl loc_10343B6  +
mov eax [edi] +
inc [ebp+var_8]  +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp [ebp+var_8] eax +
jb loc_103431F  +
mov esi [ebp+lpMem] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1034380  +
sub eax edx +
sar eax 1 +
cmp eax 40h +
jbe loc_10343E1  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1013FC3  +
mov esi eax +
test esi esi +
jge loc_10343BE  +
push esi  +
push 3E5h  +
jmp loc_1034432  +
push esi  +
push 3CBh  +
jmp loc_1034432  +
push esi  +
push 3DDh  +
jmp loc_1034432  +
push dword ptr [ebp+var_C]  +
push offset aU  +
push 40h  +
push [ebp+lpMem]  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jge loc_1034414  +
push esi  +
push 3E8h  +
jmp loc_1034432  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10343E6  +
sub eax edx +
sar eax 1 +
jnz loc_1034414  +
push offset aDefault  +
push 400h  +
push esi  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_1034414  +
push esi  +
push 3EBh  +
jmp loc_1034432  +
push [ebp+lpMem]  +
push offset aDynamicparamet  +
push 3  +
push [ebp+arg_0]  +
call WerReportSetParameter  +
mov esi eax +
test esi esi +
jge loc_1034446  +
push esi  +
push 3F3h  +
push offset aDwzaddwerparam  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
pop ebx  +
jz loc_1034461  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
cmp [ebp+var_14] 0 +
jz loc_1034475  +
push [ebp+var_14]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 38h  +
lea eax [ebp+var_44] +
push ebx  +
push eax  +
mov [ebp+var_C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
call memset  +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
add esp 0Ch +
lea ecx [ebp+lpMem] +
push ecx  +
push eax  +
call sub_1033F71  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_10344C3  +
push eax  +
push 35h  +
jmp loc_10344D7  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call sub_1033F71  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_10344E5  +
push eax  +
push 38h  +
push offset aDwzsqmrootcaus  +
push offset aDwzErrorSDHr0x  +
push 1  +
jmp loc_103453C  +
push [ebp+var_8]  +
lea eax [ebp+var_44] +
push eax  +
call sub_1033E1E  +
push [ebp+lpMem]  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1033E1E  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
push eax  +
lea eax [ebp+var_34] +
push eax  +
call sub_1033E1E  +
mov ecx esi +
call sub_1015C55  +
mov [ebp+var_28] eax +
xor esi esi +
lea eax [ebp+var_C] +
inc esi  +
push eax  +
mov [ebp+var_2C] esi +
call sub_1033DBA  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_1034546  +
push eax  +
push 52h  +
push offset aDwzsqmrootcaus  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
jmp loc_103457F  +
mov eax [ebp+var_C] +
mov ecx dword_104E188 +
mov [ebp+var_20] eax +
xor eax eax +
mov [ebp+var_24] esi +
cmp [ecx+2Ch] ebx +
mov [ebp+var_1C] esi +
setnz al  +
mov [ebp+var_18] eax +
call sub_1033F05  +
mov [ebp+var_10] eax +
lea eax [ebp+var_44] +
push eax  +
push 7  +
push 19E3h  +
push ebx  +
mov [ebp+var_14] esi +
call WinSqmAddToStream  +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
cmp [ebp+lpMem] ebx +
jz loc_1034599  +
push [ebp+lpMem]  +
push ebx  +
call edi  +
push eax  +
call esi  +
cmp [ebp+var_8] ebx +
jz loc_10345A7  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 0A0h  +
lea eax [ebp+var_AC] +
push ebx  +
push eax  +
mov [ebp+var_C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
call memset  +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
add esp 0Ch +
lea ecx [ebp+lpMem] +
push ecx  +
push eax  +
call sub_1033F71  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_1034606  +
push eax  +
push 8Dh  +
jmp loc_1034692  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call sub_1033F71  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_103461F  +
push eax  +
push 90h  +
jmp loc_1034692  +
push [ebp+lpMem]  +
lea eax [ebp+var_AC] +
push eax  +
call sub_1033E70  +
mov ecx [esi+3Ch] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
lea eax [ebp+var_9C] +
push eax  +
call sub_1033E70  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
push eax  +
lea eax [ebp+var_8C] +
push eax  +
call sub_1033E70  +
lea eax [ebp+var_C] +
push eax  +
call sub_1033DBA  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_103466F  +
push eax  +
push 0A5h  +
jmp loc_1034692  +
push [ebp+var_C]  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1033E4C  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1033F2A  +
cmp eax ebx +
mov [ebp+arg_0] eax +
jge loc_10346A8  +
push eax  +
push 0ADh  +
push offset aDwzsqmresoluti  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034718  +
push [ebp+var_C]  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1033E4C  +
mov ecx esi +
call sub_1015CEA  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
lea eax [ebp+var_5C] +
push eax  +
call sub_1033E4C  +
xor eax eax +
cmp [esi+38h] ebx +
setnz al  +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
call sub_1033E4C  +
push dword ptr [esi+44h]  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1033E4C  +
call sub_1033F05  +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call sub_1033E4C  +
push [ebp+var_8]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_1033E70  +
push ebx  +
lea eax [ebp+var_AC] +
push eax  +
push 0Ah  +
push 11D9h  +
push ebx  +
call WinSqmAddToStreamEx  +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
cmp [ebp+lpMem] ebx +
jz loc_1034732  +
push [ebp+lpMem]  +
push ebx  +
call edi  +
push eax  +
call esi  +
cmp [ebp+var_8] ebx +
jz loc_1034740  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D4h +
push ebx  +
push edi  +
xor edi edi +
mov eax offset word_1001F48 +
push 0B0h  +
mov [ebp+var_4] eax +
mov [ebp+var_20] eax +
lea eax [ebp+var_D4] +
push edi  +
push eax  +
mov [ebp+lpMem] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_24] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+lpMem] +
push eax  +
push edi  +
call sub_1033F71  +
mov ebx eax +
cmp ebx edi +
jge loc_10347C2  +
push ebx  +
push 12Eh  +
push offset aDwzsqmexit  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034964  +
push esi  +
push [ebp+lpMem]  +
lea eax [ebp+var_D4] +
push eax  +
call sub_1033E70  +
mov esi dword_104E188 +
push dword ptr [esi+0A4h]  +
lea eax [ebp+var_C4] +
push eax  +
call sub_1033E4C  +
push dword ptr [esi+0A8h]  +
lea eax [ebp+var_B4] +
push eax  +
call sub_1033E4C  +
mov esi [esi+94h] +
cmp esi edi +
jz loc_1034809  +
mov [ebp+var_4] esi +
push [ebp+var_4]  +
lea eax [ebp+var_A4] +
push eax  +
call sub_1033E70  +
call sub_1033F05  +
push eax  +
lea eax [ebp+var_94] +
push eax  +
call sub_1033E4C  +
lea eax [ebp+var_24] +
push eax  +
call sub_101C0E6  +
mov ebx eax +
cmp ebx edi +
jnz loc_10348CF  +
mov ecx [ebp+var_24] +
call sub_101246D  +
mov esi eax +
cmp esi edi +
jz loc_10348ED  +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] edi +
call dword ptr [eax+14h]  +
test eax eax +
jbe loc_10348B9  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+8]  +
mov ebx eax +
cmp ebx edi +
jl loc_1034980  +
mov ecx [ebp+var_8] +
call sub_1030F9A  +
mov ecx eax +
call sub_1015C82  +
test eax eax +
jz loc_10348AA  +
mov ecx [ebp+var_8] +
call sub_1015C55  +
cmp eax 4 +
jnz loc_103489A  +
inc [ebp+var_14]  +
jmp loc_10348AA  +
mov ecx [ebp+var_8] +
call sub_1015C55  +
cmp eax 5 +
jnz loc_10348AA  +
inc [ebp+var_10]  +
mov eax [esi] +
inc [ebp+var_4]  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp [ebp+var_4] eax +
jb loc_103485D  +
mov ecx esi +
call sub_1016116  +
mov [ebp+var_18] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov [ebp+var_1C] eax +
cmp ebx edi +
jge loc_10348ED  +
push ebx  +
push 166h  +
push offset aDwzsqmexit  +
push offset aDwzIgnoredSDHr  +
push 1  +
call sub_1014247  +
add esp 14h +
xor ebx ebx +
push [ebp+var_18]  +
lea eax [ebp+var_84] +
push eax  +
call sub_1033E4C  +
push [ebp+var_14]  +
lea eax [ebp+var_74] +
push eax  +
call sub_1033E4C  +
push [ebp+var_10]  +
lea eax [ebp+var_64] +
push eax  +
call sub_1033E4C  +
push [ebp+var_1C]  +
lea eax [ebp+var_54] +
push eax  +
call sub_1033E4C  +
mov esi dword_104E188 +
push dword ptr [esi+0ACh]  +
lea eax [ebp+var_44] +
push eax  +
call sub_1033E4C  +
mov esi [esi+0CCh] +
cmp esi edi +
jz loc_1034942  +
mov [ebp+var_20] esi +
push [ebp+var_20]  +
lea eax [ebp+var_34] +
push eax  +
call sub_1033E70  +
push edi  +
lea eax [ebp+var_D4] +
push eax  +
push 0Bh  +
push 18E6h  +
push edi  +
call WinSqmAddToStreamEx  +
pop esi  +
cmp [ebp+lpMem] edi +
jz loc_103497A  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
push ebx  +
push 155h  +
push offset aDwzsqmexit  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034963  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push edi  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
lea eax [ebp+lpMem] +
xor ebx ebx +
push eax  +
push ebx  +
mov [ebp+lpMem] ebx +
mov [ebp+var_8] ebx +
call sub_1033F71  +
mov edi eax +
cmp edi ebx +
jge loc_10349E9  +
push edi  +
push 1B8h  +
push offset aDwzsqmerror  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034A50  +
push esi  +
push [ebp+lpMem]  +
lea eax [ebp+var_28] +
push eax  +
call sub_1033E1E  +
mov eax [ebp+arg_0] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
xor esi esi +
lea eax [ebp+var_8] +
inc esi  +
push eax  +
mov [ebp+var_20] esi +
mov [ebp+var_18] esi +
call sub_1033DBA  +
mov edi eax +
cmp edi ebx +
jge loc_1034A35  +
push edi  +
push 1CDh  +
push offset aDwzsqmerror  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
jmp loc_1034A4F  +
mov eax [ebp+var_8] +
mov [ebp+var_C] eax +
lea eax [ebp+var_28] +
push eax  +
push 4  +
push 11DAh  +
push ebx  +
mov [ebp+var_10] esi +
call WinSqmAddToStream  +
pop esi  +
cmp [ebp+lpMem] ebx +
jz loc_1034A66  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8B4h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
mov [ebp+var_89C] ebx +
mov [ebp+FilePart] ebx +
mov [ebp+var_8B0] ebx +
mov uID 195h +
cmp dword_104E1A0 ebx +
jnz loc_1034E35  +
mov eax dword_104E188 +
cmp [eax+2Ch] ebx +
jnz loc_1034E35  +
cmp [eax+48h] ebx +
jnz loc_1034AD6  +
cmp dword ptr [eax+0D0h] 9 +
jnz loc_1034E35  +
push edi  +
mov esi 894h +
push esi  +
lea eax [ebp+var_898] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
mov edi 208h +
push edi  +
push ebx  +
mov ebx ds:GetProcessHeap +
mov [ebp+var_898] esi +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpBuffer] eax +
test eax eax +
jnz loc_1034B39  +
mov esi 8007000Eh +
push esi  +
push 2ECh  +
push offset aDwzsubmitwerre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034E07  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp+lpFileName] eax +
test eax eax +
jnz loc_1034B6F  +
mov esi 8007000Eh +
push esi  +
push 2EDh  +
push offset aDwzsubmitwerre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1034DED  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1034B91  +
mov esi 8007000Eh +
push esi  +
push 2EEh  +
jmp loc_1034DBF  +
mov edi 104h +
push edi  +
push eax  +
xor ecx ecx +
push offset aSystemrootSyst  +
mov [eax] cx +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jnz loc_1034BD1  +
call ds:GetLastError  +
test eax eax +
jle loc_1034BC0  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_1034BD1  +
push esi  +
push 2F8h  +
jmp loc_1034DBF  +
push [ebp+lpMem]  +
lea eax [ebp+var_610] +
push edi  +
push eax  +
call sub_100D999  +
mov esi eax +
test esi esi +
jge loc_1034BF5  +
push esi  +
push 301h  +
jmp loc_1034DBF  +
push 80h  +
lea eax [ebp+Buffer] +
push eax  +
push 89h  +
call sub_10301CE  +
mov esi eax +
test esi esi +
jge loc_1034C1C  +
push esi  +
push 30Ah  +
jmp loc_1034DBF  +
lea eax [ebp+var_89C] +
push eax  +
lea eax [ebp+var_898] +
push eax  +
push 0  +
push offset aScripteddiagfa  +
call WerReportCreate  +
mov esi eax +
test esi esi +
jge loc_1034C47  +
push esi  +
push 30Dh  +
jmp loc_1034DBF  +
push [ebp+var_89C]  +
call sub_1034088  +
mov esi eax +
test esi esi +
jge loc_1034C63  +
push esi  +
push 313h  +
jmp loc_1034DBF  +
push [ebp+lpFileName]  +
call sub_102FF81  +
mov esi eax +
test esi esi +
jge loc_1034C7F  +
push esi  +
push 316h  +
jmp loc_1034DBF  +
lea eax [ebp+var_8B0] +
push eax  +
push edi  +
push [ebp+lpFileName]  +
call sub_101420B  +
mov esi eax +
test esi esi +
jge loc_1034CA3  +
push esi  +
push 31Ch  +
jmp loc_1034DBF  +
mov eax [ebp+var_8B0] +
cmp eax 4 +
jnb loc_1034CBE  +
mov esi 80004005h +
push esi  +
push 320h  +
jmp loc_1034DBF  +
mov ecx [ebp+lpFileName] +
push 63h  +
pop edx  +
push 61h  +
mov [ecx+eax*2-6] dx +
pop edx  +
push 62h  +
mov [ecx+eax*2-4] dx +
pop edx  +
mov [ecx+eax*2-2] dx +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpBuffer]  +
push edi  +
push ecx  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_1034DB4  +
cmp eax edi +
ja loc_1034DB4  +
mov eax [ebp+FilePart] +
cmp eax [ebp+lpBuffer] +
jbe loc_1034DB4  +
xor edi edi +
xor ecx ecx +
inc edi  +
push edi  +
push ecx  +
mov [eax-2] cx +
call sub_1032BFB  +
mov esi eax +
test esi esi +
jge loc_1034D3F  +
push esi  +
push 338h  +
push offset aDwzsubmitwerre  +
push offset aDwzErrorSDHr0x  +
push edi  +
jmp loc_1034DCB  +
push 0  +
push dword_104E198  +
push [ebp+FilePart]  +
push [ebp+lpBuffer]  +
call sub_102F2C7  +
mov esi eax +
test esi esi +
jge loc_1034D66  +
push esi  +
push 33Bh  +
jmp loc_1034D2F  +
push 3  +
push 5  +
push [ebp+lpFileName]  +
push [ebp+var_89C]  +
call WerReportAddFile  +
mov esi eax +
test esi esi +
jge loc_1034D89  +
push esi  +
push 342h  +
jmp loc_1034D2F  +
lea eax [ebp+var_8B4] +
push eax  +
push 4  +
push edi  +
push [ebp+var_89C]  +
call WerReportSubmit  +
mov esi eax +
test esi esi +
jge loc_1034DAC  +
push esi  +
push 345h  +
jmp loc_1034D2F  +
mov dword_104E1A0 edi +
jmp loc_1034DD3  +
mov esi 80028016h +
push esi  +
push 32Eh  +
push offset aDwzsubmitwerre  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
jz loc_1034DED  +
push [ebp+lpMem]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpFileName] 0 +
jz loc_1034E07  +
push [ebp+lpFileName]  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor edi edi +
cmp [ebp+lpBuffer] edi +
jz loc_1034E21  +
push [ebp+lpBuffer]  +
push edi  +
call ebx  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_89C] edi +
pop edi  +
jz loc_1034E35  +
push [ebp+var_89C]  +
call WerReportCloseHandle  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_1034E80  +
push esi  +
push 0ECh  +
jmp loc_103510D  +
lea eax [ebp+var_10] +
push eax  +
push offset aMetapackageinf  +
call sub_101484F  +
mov esi eax +
cmp esi ebx +
jge loc_1034E9F  +
push esi  +
push 0EFh  +
jmp loc_103510D  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_10]  +
call sub_1014ABA  +
mov esi eax +
cmp esi ebx +
jge loc_1034EBC  +
push esi  +
push 0F5h  +
jmp loc_103510D  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
mov edi offset aId_1 +
push edi  +
push [ebp+var_C]  +
call sub_1015712  +
mov esi eax +
cmp esi ebx +
jge loc_1034EE4  +
push esi  +
push 0F8h  +
jmp loc_103510D  +
mov ecx [ebp+var_14] +
mov eax [ecx] +
call dword ptr [eax+8]  +
push eax  +
push offset aName_0  +
push [ebp+var_C]  +
call sub_1015712  +
mov esi eax +
cmp esi ebx +
jge loc_1034F0B  +
push esi  +
push 0FBh  +
jmp loc_103510D  +
mov ecx [ebp+var_14] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
push offset aVersion  +
push edi  +
call dword ptr [eax+24h]  +
push eax  +
mov ebx offset aData +
push ebx  +
push [ebp+var_10]  +
call sub_10150EF  +
mov esi eax +
test esi esi +
jge loc_1034F3D  +
push esi  +
push 107h  +
jmp loc_103510D  +
lea eax [ebp+var_4] +
push eax  +
push 77h  +
push offset hLibModule  +
call sub_1030233  +
mov esi eax +
test esi esi +
jge loc_1034F5E  +
push esi  +
push 10Ah  +
jmp loc_103510D  +
push [ebp+var_4]  +
push offset aName_0  +
push [ebp+var_8]  +
call sub_1015712  +
mov esi eax +
test esi esi +
jge loc_1034F7F  +
push esi  +
push 10Dh  +
jmp loc_103510D  +
cmp [ebp+var_4] 0 +
jz loc_1034F92  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_1034FB1  +
push esi  +
push 112h  +
jmp loc_103510D  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1034FC2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov ecx [ebp+var_14] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
push offset aPublisher  +
push edi  +
call dword ptr [eax+20h]  +
push eax  +
push ebx  +
push [ebp+var_10]  +
call sub_10150EF  +
mov esi eax +
test esi esi +
jge loc_1034FEF  +
push esi  +
push 120h  +
jmp loc_103510D  +
lea eax [ebp+var_4] +
push eax  +
push 75h  +
push offset hLibModule  +
call sub_1030233  +
mov esi eax +
test esi esi +
jge loc_1035010  +
push esi  +
push 123h  +
jmp loc_103510D  +
push [ebp+var_4]  +
push offset aName_0  +
push [ebp+var_8]  +
call sub_1015712  +
mov esi eax +
test esi esi +
jge loc_1035031  +
push esi  +
push 126h  +
jmp loc_103510D  +
cmp [ebp+var_4] 0 +
jz loc_1035044  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_1035063  +
push esi  +
push 12Bh  +
jmp loc_103510D  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1035074  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov ecx [ebp+var_14] +
lea eax [ebp+var_8] +
push eax  +
mov eax [ecx] +
push offset aDescription  +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
push ebx  +
push [ebp+var_10]  +
call sub_10150EF  +
mov esi eax +
test esi esi +
jge loc_103509E  +
push esi  +
push 139h  +
jmp loc_103510D  +
lea eax [ebp+var_4] +
push eax  +
push 76h  +
push offset hLibModule  +
call sub_1030233  +
mov esi eax +
test esi esi +
jge loc_10350BC  +
push esi  +
push 13Ch  +
jmp loc_103510D  +
push [ebp+var_4]  +
push offset aName_0  +
push [ebp+var_8]  +
call sub_1015712  +
mov esi eax +
test esi esi +
jge loc_10350DA  +
push esi  +
push 13Fh  +
jmp loc_103510D  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
test esi esi +
jge loc_10350F6  +
push esi  +
push 142h  +
jmp loc_103510D  +
push [ebp+var_10]  +
push [ebp+arg_0]  +
call sub_103B4BD  +
mov esi eax +
test esi esi +
jge loc_1035121  +
push esi  +
push 145h  +
push offset aCreatereporthe  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
xor edi edi +
cmp [ebp+var_4] edi +
jz loc_1035134  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1035144  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1035154  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1035161  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jnz loc_1035191  +
mov esi 80070057h +
push esi  +
push 33h  +
jmp loc_1035237  +
cmp [edi] ebx +
jnz loc_10351DE  +
push edi  +
push [ebp+arg_8]  +
call sub_1014986  +
mov esi eax +
cmp esi ebx +
jge loc_10351AC  +
push esi  +
push 3Ah  +
jmp loc_1035237  +
mov eax [ebp+arg_0] +
mov ebx [eax+44h] +
test ebx ebx +
jnz loc_10351BF  +
cmp [eax+40h] ebx +
jz loc_103524B  +
mov ecx [eax+4Ch] +
mov edx [eax+40h] +
mov eax [eax+50h] +
push ecx  +
push edx  +
push eax  +
push ebx  +
push dword ptr [edi]  +
call sub_103B5B6  +
mov esi eax +
test esi esi +
jge loc_103524B  +
push esi  +
push 43h  +
jmp loc_1035237  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_8]  +
call sub_1014986  +
mov esi eax +
cmp esi ebx +
jge loc_10351F5  +
push esi  +
push 47h  +
jmp loc_1035237  +
mov eax [ebp+arg_0] +
mov esi [eax+44h] +
cmp esi ebx +
jnz loc_1035204  +
cmp [eax+40h] ebx +
jz loc_1035224  +
mov ecx [eax+4Ch] +
mov edx [eax+40h] +
mov eax [eax+50h] +
push ecx  +
push edx  +
push eax  +
push esi  +
push [ebp+var_4]  +
call sub_103B5B6  +
mov esi eax +
cmp esi ebx +
jge loc_1035224  +
push esi  +
push 50h  +
jmp loc_1035237  +
push [ebp+var_4]  +
push dword ptr [edi]  +
call sub_103B934  +
mov esi eax +
cmp esi ebx +
jge loc_103524B  +
push esi  +
push 54h  +
push offset aAddreporttomet  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1035258  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_10] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
call ds:VariantInit  +
mov edi [ebp+arg_0] +
cmp edi ebx +
jnz loc_10352B7  +
mov esi 8000FFFFh +
push esi  +
push 83h  +
push offset aAddreporttorun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035411  +
lea eax [ebp+var_10] +
push eax  +
call sub_1031307  +
mov esi eax +
cmp esi ebx +
jge loc_10352CE  +
push esi  +
push 86h  +
jmp loc_103529E  +
mov eax dword_104E19C +
cmp eax ebx +
jnz loc_1035315  +
cmp [ebp+arg_8] ebx +
jz loc_10352E8  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov dword_104E19C edi +
mov ecx [ebp+var_10] +
mov [ebp+var_4] edi +
mov eax [ecx] +
call dword ptr [eax+34h]  +
test eax eax +
jz loc_10353AA  +
push [ebp+var_4]  +
call sub_1034E4A  +
mov esi eax +
cmp esi ebx +
jge loc_10353AA  +
push esi  +
push 95h  +
jmp loc_103529E  +
cmp [ebp+arg_8] ebx +
jnz loc_1035390  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1009424  +
push eax  +
mov [ebp+var_14] 1 +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jge loc_1035354  +
push esi  +
push 0A5h  +
push offset aAddreporttorun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035401  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+60h]  +
mov esi eax +
cmp esi ebx +
jge loc_1035371  +
push esi  +
push 0A8h  +
jmp loc_103533B  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset riid  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jge loc_1035393  +
push esi  +
push 0ADh  +
jmp loc_103533B  +
mov [ebp+var_4] eax +
push edi  +
push [ebp+var_4]  +
call sub_103BD53  +
mov esi eax +
cmp esi ebx +
jge loc_10353AA  +
push esi  +
push 0B3h  +
jmp loc_10353E8  +
push [ebp+arg_4]  +
lea eax [ebp+pvarg] +
push eax  +
call sub_1014F71  +
mov esi eax +
cmp esi ebx +
jge loc_10353C4  +
push esi  +
push 0BAh  +
jmp loc_10353E8  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+108h]  +
mov esi eax +
cmp esi ebx +
jge loc_10353FC  +
push esi  +
push 0BDh  +
push offset aAddreporttorun  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+var_14] ebx +
jz loc_1035411  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1035411  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1035421  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1035431  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax dword_104E1A8 +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1035498  +
cmp eax 0FFFFFFFFh +
jz loc_1035498  +
push eax  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035485  +
call ds:GetLastError  +
cmp eax edi +
jle loc_103547B  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
jge loc_1035485  +
push eax  +
push 0A8h  +
jmp loc_10354B2  +
push 7D0h  +
push dword_104E1AC  +
call ds:WaitForSingleObject  +
jmp loc_10354C6  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10354AC  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push 0A5h  +
push offset aInstanceDestro  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
mov eax dword_104E1A4 +
push esi  +
mov esi ds:CloseHandle +
cmp eax edi +
jz loc_10354E4  +
cmp eax 0FFFFFFFFh +
jz loc_10354E4  +
push eax  +
call esi  +
mov dword_104E1A4 edi +
mov eax dword_104E1A8 +
cmp eax edi +
jz loc_10354FB  +
cmp eax 0FFFFFFFFh +
jz loc_10354FB  +
push eax  +
call esi  +
mov dword_104E1A8 edi +
mov eax dword_104E1AC +
cmp eax edi +
jz loc_1035512  +
cmp eax 0FFFFFFFFh +
jz loc_1035512  +
push eax  +
call esi  +
mov dword_104E1AC edi +
mov eax dword_104E1B0 +
pop esi  +
cmp eax edi +
jz loc_1035531  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword_104E1B0 edi +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push offset aDAOiciGaIu  +
call ds:SysAllocString  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jnz loc_1035575  +
mov eax 8007000Eh +
push eax  +
push 144h  +
push offset aCreateiusecuri  +
push offset aDwzErrorSDHr0x  +
push 1  +
mov edi eax +
call sub_1014247  +
add esp 14h +
jmp loc_10355D2  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+4] +
push eax  +
push 1  +
push ebx  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_10355C0  +
call ds:GetLastError  +
cmp eax edi +
jle loc_103559E  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_10355C0  +
push edi  +
push 14Eh  +
push offset aCreateiusecuri  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_10355CA  +
and dword ptr [esi+8] 0 +
mov dword ptr [esi] 0Ch +
push ebx  +
call ds:SysFreeString  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_104E1A4 +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
mov [ebp+Handles] eax +
mov eax dword_104E1A8 +
mov [ebp+lpMem] edi +
mov [ebp+hObject] edi +
mov [ebp+var_C] eax +
mov ebx 400h +
push 0FFFFFFFFh  +
push edi  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
call ds:WaitForMultipleObjects  +
sub eax edi +
jnz loc_103573D  +
cmp hHandle edi +
jz loc_1035724  +
cmp [ebp+hObject] edi +
jnz loc_10356A6  +
cmp [ebp+lpMem] edi +
jz loc_1035647  +
push [ebp+lpMem]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
push 800h  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jz loc_103574C  +
push dword_104E1B0  +
push ebx  +
push eax  +
call sub_100D999  +
cmp eax edi +
jl loc_103576C  +
push offset aE  +
push ebx  +
push [ebp+lpMem]  +
call sub_1014151  +
cmp eax edi +
jl loc_1035774  +
push dword_104E1B0  +
push edi  +
push 2  +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
cmp eax edi +
jz loc_103560D  +
push 0FFFFFFFFh  +
call ds:AllowSetForegroundWindow  +
push [ebp+hObject]  +
call ds:SetEvent  +
test eax eax +
jnz loc_103560D  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10356D5  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax edi +
jge loc_103560D  +
push eax  +
push 107h  +
push offset aInstanceActiva  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+hObject] edi +
jz loc_1035709  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1035709  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+lpMem] edi +
jz loc_103571B  +
push [ebp+lpMem]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
mov eax hWnd +
cmp eax edi +
jz loc_103560D  +
push eax  +
call ds:SetForegroundWindow  +
jmp loc_103560D  +
dec eax  +
jz loc_10356F5  +
push 80070057h  +
push 118h  +
jmp loc_10356E1  +
push 8007000Eh  +
push 0ECh  +
push offset aInstanceActiva  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035709  +
push eax  +
push 0EFh  +
jmp loc_1035756  +
push eax  +
push 0F5h  +
jmp loc_1035756  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp+hMem] esi +
mov [ebp-14h] esi +
lea edi [ebp-10h] +
stos   +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+var_C] esi +
mov [ebp+hObject] esi +
call sub_1035538  +
mov edi eax +
cmp edi esi +
jge loc_10357CA  +
push edi  +
push 3Bh  +
push offset aInstanceLoad  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035A48  +
push ebx  +
mov ebx ds:GetProcessHeap +
mov edi 800h +
push edi  +
push esi  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_10357F7  +
mov edi 8007000Eh +
push edi  +
push 3Dh  +
jmp loc_1035A19  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
xor ebx ebx +
mov dword_104E1B0 eax +
cmp eax ebx +
jnz loc_1035817  +
mov edi 8007000Eh +
push edi  +
push 3Eh  +
jmp loc_1035A19  +
push [ebp+arg_0]  +
xor ecx ecx +
push offset aLocalMsdt  +
push offset aSU_1  +
mov esi 400h +
mov [eax] cx +
push esi  +
push dword_104E1B0  +
call sub_100DD8E  +
mov edi eax +
add esp 14h +
cmp edi ebx +
jge loc_103584B  +
push edi  +
push 45h  +
jmp loc_1035A19  +
lea eax [ebp+var_C] +
push eax  +
call sub_102E866  +
mov edi eax +
cmp edi ebx +
jge loc_1035862  +
push edi  +
push 48h  +
jmp loc_1035A19  +
cmp [ebp+var_C] ebx +
jnz loc_1035903  +
mov eax dword_104E188 +
cmp [eax] ebx +
jnz loc_1035903  +
push dword_104E1B0  +
push esi  +
push [ebp+lpMem]  +
call sub_100D999  +
mov edi eax +
cmp edi ebx +
jge loc_1035895  +
push edi  +
push 52h  +
jmp loc_1035A19  +
push offset aE  +
push esi  +
push [ebp+lpMem]  +
call sub_1014151  +
mov edi eax +
cmp edi ebx +
jge loc_10358B1  +
push edi  +
push 55h  +
jmp loc_1035A19  +
push [ebp+lpMem]  +
push ebx  +
push 2  +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_1035922  +
push 0FFFFFFFFh  +
call ds:AllowSetForegroundWindow  +
push [ebp+hObject]  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035991  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10358F1  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi ebx +
jge loc_1035991  +
push edi  +
push 5Fh  +
jmp loc_1035A19  +
push offset aE  +
push esi  +
push dword_104E1B0  +
call sub_1014151  +
mov edi eax +
cmp edi ebx +
jge loc_1035922  +
push edi  +
push 4Ch  +
jmp loc_1035A19  +
push dword_104E1B0  +
lea eax [ebp+hMem] +
push ebx  +
push ebx  +
mov ebx ds:CreateEventW +
push eax  +
call ebx  +
mov dword_104E1A4 eax +
test eax eax +
jz loc_1035A00  +
cmp eax 0FFFFFFFFh +
jz loc_1035A00  +
mov esi ds:GetLastError +
call esi  +
cmp eax 0B7h +
jnz loc_1035999  +
push 0FFFFFFFFh  +
call ds:AllowSetForegroundWindow  +
push dword_104E1A4  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035991  +
call esi  +
test eax eax +
jle loc_1035983  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_1035991  +
push edi  +
push 74h  +
jmp loc_1035A19  +
xor edi edi +
inc edi  +
jmp loc_1035A2D  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
call ebx  +
xor ebx ebx +
mov dword_104E1A8 eax +
cmp eax ebx +
jz loc_10359E9  +
cmp eax 0FFFFFFFFh +
jz loc_10359E9  +
push ebx  +
push ebx  +
push ebx  +
push offset sub_10355DF  +
push ebx  +
push ebx  +
call ds:CreateThread  +
mov dword_104E1AC eax +
cmp eax ebx +
jz loc_10359CF  +
cmp eax 0FFFFFFFFh +
jnz loc_1035A2D  +
call esi  +
cmp eax ebx +
jle loc_10359DF  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 81h  +
jmp loc_1035A19  +
call esi  +
cmp eax ebx +
jle loc_10359F9  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 7Bh  +
jmp loc_1035A19  +
call ds:GetLastError  +
test eax eax +
jle loc_1035A14  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
push 6Bh  +
push offset aInstanceLoad  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+lpMem] 0 +
pop ebx  +
jz loc_1035A46  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor esi esi +
cmp [ebp-14h] esi +
jz loc_1035A59  +
push dword ptr [ebp-14h]  +
call ds:LocalFree  +
mov [ebp-14h] esi +
cmp [ebp+hObject] esi +
jz loc_1035A6D  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1035A6D  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100D422  +
push offset aBwcgppane  +
mov ecx esi +
call sub_100CAA7  +
test eax eax +
jge loc_1035AB0  +
push eax  +
push 34h  +
push offset aEnablebwcpag_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035B4F  +
push ebx  +
mov ebx offset aBwcadminpane +
push ebx  +
mov ecx esi +
call sub_100CAA7  +
test eax eax +
jge loc_1035ADB  +
push eax  +
push 37h  +
push offset aEnablebwcpag_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035B4E  +
push edi  +
mov edi offset aBwclocalpane +
push edi  +
mov ecx esi +
call sub_100CAA7  +
test eax eax +
jge loc_1035AF2  +
push eax  +
push 3Ah  +
jmp loc_1035B39  +
mov eax [esi+38h] +
dec eax  +
jz loc_1035B24  +
dec eax  +
jz loc_1035B11  +
dec eax  +
jnz loc_1035B4D  +
push 1  +
push edi  +
mov ecx esi +
call sub_100CB06  +
test eax eax +
jge loc_1035B4D  +
push eax  +
push 49h  +
jmp loc_1035B39  +
push 1  +
push ebx  +
mov ecx esi +
call sub_100CB06  +
test eax eax +
jge loc_1035B4D  +
push eax  +
push 44h  +
jmp loc_1035B39  +
push 1  +
push offset aBwcgppane  +
mov ecx esi +
call sub_100CB06  +
test eax eax +
jge loc_1035B4D  +
push eax  +
push 3Fh  +
push offset aEnablebwcpag_0  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push dword_104E128  +
mov esi ecx +
call ds:SetEvent  +
test eax eax +
jnz loc_1035B9E  +
call ds:GetLastError  +
test eax eax +
jle loc_1035B83  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1035B9E  +
push eax  +
push 6Bh  +
push offset aEnablebwcpag_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035BAF  +
push 0  +
push 5  +
push 471h  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
lea eax [esi+4] +
push eax  +
mov edi ecx +
call sub_100D67F  +
test al al +
jz loc_1035D30  +
lea eax [ebp-4] +
push eax  +
push offset aCplsettingslin  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_1035C07  +
push eax  +
push 96h  +
jmp loc_1035D14  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_1035C49  +
push dword_104E120  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035D2A  +
call ds:GetLastError  +
test eax eax +
jle loc_1035C38  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1035D2A  +
push eax  +
push 9Ah  +
jmp loc_1035D14  +
lea eax [ebp-4] +
push eax  +
push offset aLocalbwclink  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_1035C68  +
push eax  +
push 0A4h  +
jmp loc_1035D14  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_1035CA3  +
push dword_104E124  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035C9F  +
call ds:GetLastError  +
test eax eax +
jle loc_1035C95  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1035C9F  +
push eax  +
push 0A8h  +
jmp loc_1035D14  +
mov ecx edi +
jmp loc_1035CC8  +
lea eax [ebp-4] +
push eax  +
push offset aDonelink  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_1035CBF  +
push eax  +
push 0B3h  +
jmp loc_1035D14  +
mov eax [esi] +
mov ecx edi +
cmp eax [ebp-4] +
jnz loc_1035CDD  +
push 0  +
push 5  +
push 471h  +
mov byte ptr [esi+8] 1 +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
jmp loc_1035D3C  +
lea eax [ebp-4] +
push eax  +
push offset aLinkprivacy  +
call sub_100C938  +
test eax eax +
jge loc_1035CF7  +
push eax  +
push 0BFh  +
jmp loc_1035D14  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_1035D30  +
push offset aHttpGo_microso  +
mov ecx edi +
call sub_100C9D5  +
test eax eax +
jge loc_1035D2A  +
push eax  +
push 0C2h  +
push offset aEnablebwcpageO  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035D3C  +
mov byte ptr [esi+8] 1 +
jmp loc_1035D3C  +
push esi  +
push dword ptr [ebp+8]  +
mov ecx edi +
call ds:?OnListenedEvent@TaskPage@DirectUI@@MAEXPAVElement@2@PAUEvent@2@@Z  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax ds:?Click@Button@DirectUI@@SG?AVUID@@XZ +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
lea eax [esi+4] +
push eax  +
mov edi ecx +
call sub_100D67F  +
test al al +
jz loc_1035DDD  +
lea eax [ebp-4] +
push eax  +
push offset aConnectivityli  +
mov ecx edi +
call sub_100C938  +
test eax eax +
jge loc_1035D8E  +
push eax  +
push 0F1h  +
jmp loc_1035DC3  +
mov eax [esi] +
cmp eax [ebp-4] +
jnz loc_1035DDD  +
push dword_104E11C  +
call ds:SetEvent  +
test eax eax +
jnz loc_1035DD9  +
call ds:GetLastError  +
test eax eax +
jle loc_1035DBB  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1035DD9  +
push eax  +
push 0F5h  +
push offset aEnableconnecti  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035DE9  +
mov byte ptr [esi+8] 1 +
push esi  +
push dword ptr [ebp+8]  +
mov ecx edi +
call ds:?OnListenedEvent@TaskPage@DirectUI@@MAEXPAVElement@2@PAUEvent@2@@Z  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push dword_104E128  +
mov esi ecx +
call ds:SetEvent  +
test eax eax +
jnz loc_1035E3D  +
call ds:GetLastError  +
test eax eax +
jle loc_1035E1F  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1035E3D  +
push eax  +
push 11Ah  +
push offset aEnableconnec_1  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1035E4E  +
push 0  +
push 5  +
push 471h  +
mov ecx esi +
call ds:?PropSheet_SendMessage@TaskPage@DirectUI@@IAEJIIJ@Z  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_1C] eax +
mov eax 0CD44h +
push edi  +
mov [ebp+ActionID.Data2] ax +
mov eax 11D0h +
xor ebx ebx +
push 30h  +
mov [ebp+ActionID.Data3] ax +
lea eax [ebp+ActionData] +
push ebx  +
push eax  +
mov [ebp+ActionID.Data1] 0AAC56Bh +
mov [ebp+ActionID.Data4] 8Ch +
mov [ebp+ActionID.Data4+1] 0C2h +
mov [ebp+ActionID.Data4+2] bl +
mov [ebp+ActionID.Data4+3] 0C0h +
mov [ebp+ActionID.Data4+4] 4Fh +
mov [ebp+ActionID.Data4+5] 0C2h +
mov [ebp+ActionID.Data4+6] 95h +
mov [ebp+ActionID.Data4+7] 0EEh +
mov [ebp+var_18] ebx +
call memset  +
xor eax eax +
lea edi [ebp+var_2C] +
stos   +
stos   +
stos   +
stos   +
add esp 0Ch +
push 2  +
pop edi  +
lea eax [ebp+var_2C] +
mov [ebp+var_44] eax +
lea eax [ebp+ActionData] +
push eax  +
mov [ebp+var_28] esi +
lea eax [ebp+ActionID] +
xor esi esi +
push eax  +
inc esi  +
push 0FFFFFFFFh  +
mov [ebp+var_2C] 10h +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
mov [ebp+ActionData] 30h +
mov [ebp+var_58] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_50] edi +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] esi +
mov [ebp+var_40] esi +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_34] 1080h +
mov [ebp+var_30] ebx +
call WinVerifyTrust  +
test eax eax +
jz loc_1035F4F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1035F37  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_18] eax +
jl loc_1035F45  +
mov [ebp+var_18] 80004005h +
push [ebp+var_18]  +
push 68h  +
jmp loc_103600F  +
push [ebp+var_3C]  +
call WTHelperProvDataFromStateData  +
cmp eax ebx +
jz loc_1035FF5  +
cmp eax 0FFFFFFFFh +
jz loc_1035FF5  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
call WTHelperGetProvSignerFromChain  +
cmp eax ebx +
jz loc_1035FD9  +
cmp eax 0FFFFFFFFh +
jz loc_1035FD9  +
push ebx  +
push eax  +
call WTHelperGetProvCertFromChain  +
cmp eax ebx +
jz loc_1035FBD  +
cmp eax 0FFFFFFFFh +
jz loc_1035FBD  +
mov eax [eax+4] +
cmp eax ebx +
jnz loc_1035F9E  +
mov eax 8000FFFFh +
push eax  +
mov [ebp+var_18] eax +
push 78h  +
jmp loc_103600F  +
push eax  +
call ds:CertDuplicateCertificateContext  +
cmp eax ebx +
jnz loc_1035FB6  +
mov eax 8000FFFFh +
push eax  +
mov [ebp+var_18] eax +
push 7Bh  +
jmp loc_103600F  +
mov ecx [ebp+var_1C] +
mov [ecx] eax +
jmp loc_1036022  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1035FD1  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_18] eax +
push 75h  +
jmp loc_103600F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1035FED  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_18] eax +
push 72h  +
jmp loc_103600F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1036009  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_18] eax +
push 6Fh  +
push offset aGetcertificate  +
push offset aDwzErrorSDHr0x  +
push esi  +
call sub_1014247  +
add esp 14h +
lea eax [ebp+ActionData] +
push eax  +
lea eax [ebp+ActionID] +
push eax  +
push 0FFFFFFFFh  +
mov [ebp+var_40] edi +
call WinVerifyTrust  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_18] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_104E188 +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp+pcbComputedHash] 14h +
mov edi [ecx+98h] +
mov [ebp+pCertContext] ebx +
cmp edi ebx +
jnz loc_10360A5  +
mov esi 8000FFFFh +
push esi  +
push 0B2h  +
push offset aMatchcertifica  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
jmp loc_1036197  +
lea ecx [ebp+pCertContext] +
push ecx  +
push eax  +
call sub_1035E58  +
mov esi eax +
cmp esi ebx +
jge loc_10360C0  +
push esi  +
push 0B5h  +
jmp loc_1036175  +
lea eax [ebp+pcbComputedHash] +
push eax  +
lea eax [ebp+pbComputedHash] +
push eax  +
push 3  +
push [ebp+pCertContext]  +
call ds:CertGetCertificateContextProperty  +
cmp eax ebx +
jnz loc_103610A  +
mov esi ds:GetLastError +
call esi  +
cmp eax 80092004h +
jnz loc_1036147  +
lea eax [ebp+pcbComputedHash] +
push eax  +
lea eax [ebp+pbComputedHash] +
push eax  +
mov eax [ebp+pCertContext] +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push ebx  +
push 8004h  +
push ebx  +
call ds:CryptHashCertificate  +
test eax eax +
jz loc_1036129  +
xor esi esi +
xor ecx ecx +
cmp [ebp+pcbComputedHash] ebx +
jbe loc_1036189  +
lea eax [ebp+pbComputedHash] +
sub edi eax +
lea eax [ebp+ecx+pbComputedHash] +
mov dl [edi+eax] +
cmp dl [eax] +
jnz loc_103616A  +
inc ecx  +
cmp ecx [ebp+pcbComputedHash] +
jb loc_1036116  +
jmp loc_1036189  +
call esi  +
cmp eax ebx +
jle loc_1036139  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jge loc_103610A  +
push esi  +
push 0C9h  +
jmp loc_1036175  +
call esi  +
cmp eax ebx +
jle loc_1036157  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1036162  +
mov esi 80004005h +
push esi  +
push 0CFh  +
jmp loc_1036175  +
mov esi 80091007h +
push esi  +
push 0D8h  +
push offset aMatchcertifica  +
push offset aDwzErrorSDHr0x  +
push 1  +
call sub_1014247  +
add esp 14h +
cmp [ebp+pCertContext] ebx +
jz loc_1036197  +
push [ebp+pCertContext]  +
call ds:CertFreeCertificateContext  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
jmp loc_10361C4  +
push [ebp+arg_0]  +
call _callnewh  +
pop ecx  +
test eax eax +
jz loc_10361D3  +
push [ebp+arg_0]  +
call malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10361B7  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_10361AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp _free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1036231  +
test eax eax +
jnz loc_1036236  +
mov ecx [esi] +
test ecx ecx +
jz loc_103622E  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1036222  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_104E1D8 +
push offset dword_104E1C8  +
push dword_104E1D4  +
mov dword_104E1C8 eax +
push offset unk_104E1B8  +
push offset unk_104E1BC  +
push offset unk_104E1B4  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_104E1C4 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset dword_104F690 +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10362D9  +
cmp eax esi +
jnz loc_10362CC  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_10362DC  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10362B3  +
xor esi esi +
inc esi  +
mov eax dword_104F68C +
cmp eax esi +
jnz loc_10362EF  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_103631E  +
mov eax dword_104F68C +
test eax eax +
jnz loc_1036318  +
mov dword_104F68C esi +
push offset dword_100175C  +
push offset dword_1001750  +
call sub_1036215  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103631E  +
jmp loc_1036442  +
mov dword_104E1D0 esi +
mov eax dword_104F68C +
cmp eax esi +
jnz loc_1036342  +
push offset dword_100174C  +
push offset dword_1001744  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_104F68C 2 +
cmp [ebp+var_20] ebx +
jnz loc_103634F  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_104F694 ebx +
jz loc_1036370  +
push offset dword_104F694  +
call sub_10367B9  +
pop ecx  +
test eax eax +
jz loc_1036370  +
push ebx  +
push 2  +
push ebx  +
call dword_104F694  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_1036442  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1036395  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_10363AA  +
cmp cx 20h +
ja loc_10363AA  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1036395  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_10363B6  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_10363B9  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_104E1CC eax +
cmp dword_104E1C0 ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_10363EB  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_103637F  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_104E1CC eax +
xor ebx ebx +
cmp dword_104E1C0 ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_104E1D0 ebx +
jnz loc_103642D  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_104E1CC +
jmp loc_103644E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_103646B  +
xor eax eax +
jmp loc_10364B8  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1036467  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10364A5  +
cmp ecx 20Bh +
jnz loc_1036467  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1036467  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10364B3  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1036467  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_104E1C0 eax +
call sub_103694A  +
push eax  +
call ds:__set_app_type  +
or dword_104F684 0FFFFFFFFh +
or dword_104F688 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_104E1E0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_104E1DC +
mov [eax] ecx +
call near ptr a3LapLatLaxgax  +
cmp dword_104E080 0 +
jnz loc_1036511  +
push offset a3LapLatLaxgax  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10368CC  +
xor eax eax +
retn   +
***
call sub_1036989  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_104E070 +
jnz loc_1036544  +
retn 0  +
jmp loc_1036A1F  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_104E070 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_104E070 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_104E070 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1036539  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1036674  +
push esi  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ds:free  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1036704  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1036704  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10366FE  +
cmp eax 19930521h +
jz loc_10366FE  +
cmp eax 19930522h +
jz loc_10366FE  +
cmp eax 1994000h +
jnz loc_1036704  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10366C4+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1036746  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1036742  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10367AD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10367A5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10367AF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1036795  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1036730  +
pop ecx  +
test eax eax +
jz loc_1036816  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1036770  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1036816  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_103681F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1036539  +
push offset dword_104E070  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_103693D  +
cmp ecx 0FFFFFFFFh +
jz loc_103693D  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1036936  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1036936  +
cmp edx 10000000h +
jnb loc_1036936  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1036936  +
jmp loc_1036931  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_103697F  +
push eax  +
call sub_10368E4  +
test eax eax +
jz loc_103697F  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1036974  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_103697F  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_104E070 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10369BB  +
test eax ebx +
jz loc_10369BB  +
not eax  +
mov dword_104E074 eax +
jmp loc_1036A16  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1036A02  +
test dword_104E070 ebx +
jnz loc_1036A07  +
mov esi 0BB40E64Fh +
mov dword_104E070 esi +
not esi  +
mov dword_104E074 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_104E2E8 eax +
mov dword_104E2E4 ecx +
mov dword_104E2E0 edx +
mov dword_104E2DC ebx +
mov dword_104E2D8 esi +
mov dword_104E2D4 edi +
mov word_104E300 ss +
mov word_104E2F4 cs +
mov word_104E2D0 ds +
mov word_104E2CC es +
mov word_104E2C8 fs +
mov word_104E2C4 gs +
pushf   +
pop dword_104E2F8  +
mov eax [ebp+0] +
mov dword_104E2EC eax +
mov eax [ebp+4] +
mov dword_104E2F0 eax +
lea eax [ebp+8] +
mov dword_104E2FC eax +
mov eax [ebp-320h] +
mov dword_104E238 10001h +
mov eax dword_104E2F0 +
mov dword_104E1F4 eax +
mov dword_104E1E8 0C0000409h +
mov dword_104E1EC 1 +
mov eax dword_104E070 +
mov [ebp-328h] eax +
mov eax dword_104E074 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ds:NtQueryInformationToken +
xor esi esi +
inc esi  +
mov [ebx] esi +
and dword ptr [eax] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 12h  +
push [ebp+arg_0]  +
mov [ebp+var_4] esi +
call edi  +
test eax eax +
jl loc_1036BB1  +
cmp [ebp+var_4] 2 +
jz loc_1036BAC  +
cmp [ebp+var_4] esi +
jnz loc_1036BB1  +
and dword ptr [ebx] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_8] +
push eax  +
push 14h  +
push [ebp+arg_0]  +
call edi  +
test eax eax +
jl loc_1036BB1  +
cmp [ebp+var_8] 0 +
jz loc_1036BB1  +
mov ecx [ebp+arg_4] +
mov [ecx] esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push 4  +
pop eax  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_0] +
push eax  +
push 1Ah  +
push [ebp+arg_0]  +
call ds:NtQueryInformationToken  +
test eax eax +
jl loc_1036BF1  +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
setnz cl  +
mov [esi] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1036C42  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
push 8  +
push 0FFFFFFFEh  +
call ds:NtOpenThreadToken  +
mov edi eax +
cmp edi 0C000007Ch +
jnz loc_1036C38  +
lea eax [ebp+arg_0] +
push eax  +
push 8  +
push 0FFFFFFFFh  +
call ds:NtOpenProcessToken  +
mov edi eax +
cmp edi ebx +
jl loc_1036CA7  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_1036B4D  +
mov edi eax +
cmp edi ebx +
jl loc_1036C99  +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+var_8] ebx +
jz loc_1036C65  +
mov [esi] ebx +
jmp loc_1036C70  +
xor eax eax +
cmp [ebp+var_C] ebx +
setz al  +
inc eax  +
mov [esi] eax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1036BBD  +
mov edi eax +
cmp edi ebx +
jl loc_1036C98  +
cmp [ebp+arg_4] ebx +
jz loc_1036C98  +
mov eax [esi] +
cmp eax 10h +
jb loc_1036C93  +
cmp eax 13h +
jb loc_1036C96  +
add eax 10h +
mov [esi] eax +
pop esi  +
cmp [ebp+var_4] ebx +
jz loc_1036CA7  +
push [ebp+var_4]  +
call ds:NtClose  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
jmp ds:?IsRTLReading@Element@DirectUI@@UAE_NXZ  +
***
jmp ds:?IsContentProtected@Element@DirectUI@@UAE_NXZ  +
***
jmp ds:?GetContentStringAsDisplayed@Element@DirectUI@@UAEPBGPAPAVValue@2@@Z  +
***
jmp ds:?OnPropertyChanging@Element@DirectUI@@UAE_NPBUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?OnPropertyChanging@Element@DirectUI@@UAE_NPAUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?OnPropertyChanged@Element@DirectUI@@UAEXPAUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?OnGroupChanged@Element@DirectUI@@UAEXH_N@Z  +
***
jmp ds:?OnKeyFocusMoved@Element@DirectUI@@UAEXPAV12@0@Z  +
***
jmp ds:?OnMouseFocusMoved@Element@DirectUI@@UAEXPAV12@0@Z  +
***
jmp ds:?OnDestroy@HWNDHost@DirectUI@@UAEXXZ  +
***
jmp ds:?OnEvent@HWNDHost@DirectUI@@UAEXPAUEvent@2@@Z  +
***
jmp ds:?Paint@HWNDHost@DirectUI@@UAEXPAUHDC__@@PBUtagRECT@@1PAU4@2@Z  +
***
jmp ds:?Add@Element@DirectUI@@UAEJPAPAV12@I@Z  +
***
jmp ds:?Insert@Element@DirectUI@@UAEJPAPAV12@II@Z  +
***
jmp ds:?Remove@Element@DirectUI@@UAEJPAPAV12@I@Z  +
***
jmp ds:?GetAdjacent@Element@DirectUI@@UAEPAV12@PAV12@HPBUNavReference@2@K@Z  +
***
jmp ds:?EnsureVisible@Element@DirectUI@@UAE_NHHHH@Z  +
***
jmp ds:?SetKeyFocus@HWNDHost@DirectUI@@UAEXXZ  +
***
jmp ds:?MessageCallback@HWNDHost@DirectUI@@UAEIPAUtagGMSG@@@Z  +
***
jmp ds:?QueryInterface@Element@DirectUI@@UAGJABU_GUID@@PAPAX@Z  +
***
jmp ds:?_SelfLayoutDoLayout@Element@DirectUI@@MAEXHH@Z  +
***
jmp ds:?_SelfLayoutUpdateDesiredSize@Element@DirectUI@@MAE?AUtagSIZE@@HHPAVSurface@2@@Z  +
***
jmp ds:?OnHosted@HWNDHost@DirectUI@@MAEXPAVElement@2@@Z  +
***
jmp ds:?OnUnHosted@HWNDHost@DirectUI@@MAEXPAVElement@2@@Z  +
***
jmp ds:?UpdateTooltip@Element@DirectUI@@MAEXPAV12@@Z  +
***
jmp ds:?ActivateTooltip@Element@DirectUI@@MAEXPAV12@K@Z  +
***
jmp ds:?RemoveTooltip@Element@DirectUI@@MAEXPAV12@@Z  +
***
jmp ds:?GetKeyFocused@HWNDHost@DirectUI@@UAE_NXZ  +
***
jmp ds:?GetClassInfoW@CCBase@DirectUI@@UAEPAUIClassInfo@2@XZ  +
***
jmp ds:?GetAccessibleImpl@HWNDHost@DirectUI@@UAEJPAPAUIAccessible@@@Z  +
***
jmp ds:?DefaultAction@CCBase@DirectUI@@UAEJXZ  +
***
jmp ds:?GetElementProviderImpl@Element@DirectUI@@UAEJPAVInvokeHelper@2@PAPAVElementProvider@2@@Z  +
***
jmp ds:?HandleUiaDestroyListener@Element@DirectUI@@UAEXXZ  +
***
jmp ds:?HandleUiaPropertyListener@Element@DirectUI@@UAEXPBUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?HandleUiaPropertyChangingListener@Element@DirectUI@@UAEXPBUPropertyInfo@2@@Z  +
***
jmp ds:?HandleUiaEventListener@Element@DirectUI@@UAEXPAUEvent@2@@Z  +
***
jmp ds:?GetHWND@HWNDHost@DirectUI@@UAEPAUHWND__@@XZ  +
***
jmp ds:?OnNotify@CCBase@DirectUI@@UAE_NIIJPAJ@Z  +
***
jmp ds:?OnMessage@HWNDHost@DirectUI@@UAE_NIIJPAJ@Z  +
***
jmp ds:?OnSysChar@HWNDHost@DirectUI@@UAE_NG@Z  +
***
jmp ds:?OnSinkThemeChanged@HWNDHost@DirectUI@@UAE_NIIJPAJ@Z  +
***
jmp ds:?OnCtrlThemeChanged@HWNDHost@DirectUI@@UAE_NIIJPAJ@Z  +
***
jmp ds:?OnWindowStyleChanged@HWNDHost@DirectUI@@UAEXIPBUtagSTYLESTRUCT@@@Z  +
***
jmp ds:?OnAdjustWindowSize@HWNDHost@DirectUI@@UAEHHHI@Z  +
***
jmp ds:?SetWindowDirection@HWNDHost@DirectUI@@UAEXPAUHWND__@@@Z  +
***
jmp ds:?CreateHWND@CCBase@DirectUI@@UAEPAUHWND__@@PAU3@@Z  +
***
jmp ds:?EraseBkgnd@HWNDHost@DirectUI@@MAE_NPAUHDC__@@PAJ@Z  +
***
jmp ds:?OnCustomDraw@CCBase@DirectUI@@UAE_NPAUtagNMCUSTOMDRAWINFO@@PAJ@Z  +
***
jmp ds:?OnLostDialogFocus@CCBase@DirectUI@@UAE_NPAVDialogElement@2@@Z  +
***
jmp ds:?OnReceivedDialogFocus@CCBase@DirectUI@@UAE_NPAVDialogElement@2@@Z  +
***
jmp ds:?PostCreate@CCBase@DirectUI@@MAEXPAUHWND__@@@Z  +
***
jmp ds:?OnInput@CCBase@DirectUI@@UAEXPAUInputEvent@2@@Z  +
***
jmp ds:?OnPropertyChanged@CCBase@DirectUI@@UAEXPBUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?GetClassInfoW@CCListView@DirectUI@@UAEPAUIClassInfo@2@XZ  +
***
jmp ds:?AddRef@ClassInfoBase@DirectUI@@UAEXXZ  +
***
jmp ds:?Release@ClassInfoBase@DirectUI@@UAEHXZ  +
***
jmp ds:?EnumPropertyInfo@ClassInfoBase@DirectUI@@UAEPBUPropertyInfo@2@I@Z  +
***
jmp ds:?GetByClassIndex@ClassInfoBase@DirectUI@@UAEPBUPropertyInfo@2@I@Z  +
***
jmp ds:?GetPICount@ClassInfoBase@DirectUI@@UBEIXZ  +
***
jmp ds:?GetGlobalIndex@ClassInfoBase@DirectUI@@UBEIXZ  +
***
jmp ds:?GetName@ClassInfoBase@DirectUI@@UBEPBGXZ  +
***
jmp ds:?IsValidProperty@ClassInfoBase@DirectUI@@UBE_NPBUPropertyInfo@2@@Z  +
***
jmp ds:?IsSubclassOf@ClassInfoBase@DirectUI@@UBE_NPAUIClassInfo@2@@Z  +
***
jmp ds:?GetModule@ClassInfoBase@DirectUI@@UBEPAUHINSTANCE__@@XZ  +
***
jmp ds:?IsGlobal@ClassInfoBase@DirectUI@@UBE_NXZ  +
***
jmp ds:?AddChild@ClassInfoBase@DirectUI@@UAEXXZ  +
***
jmp ds:?RemoveChild@ClassInfoBase@DirectUI@@UAEXXZ  +
***
jmp ds:?GetChildren@ClassInfoBase@DirectUI@@UBEHXZ  +
***
jmp ds:?AssertPIZeroRef@ClassInfoBase@DirectUI@@UBEXXZ  +
***
jmp ds:?IsContentProtected@Edit@DirectUI@@UAE_NXZ  +
***
jmp ds:?GetContentStringAsDisplayed@Edit@DirectUI@@UAEPBGPAPAVValue@2@@Z  +
***
jmp ds:?OnPropertyChanged@Edit@DirectUI@@UAEXPBUPropertyInfo@2@HPAVValue@2@1@Z  +
***
jmp ds:?OnInput@Edit@DirectUI@@UAEXPAUInputEvent@2@@Z  +
***
jmp ds:?GetContentSize@Edit@DirectUI@@UAE?AUtagSIZE@@HHPAVSurface@2@@Z  +
***
jmp ds:?MessageCallback@Edit@DirectUI@@UAEIPAUtagGMSG@@@Z  +
***
jmp ds:?DefaultAction@Element@DirectUI@@UAEJXZ  +
***
jmp ds:?CreateHWND@Edit@DirectUI@@MAEPAUHWND__@@PAU3@_N@Z  +
***
jmp ds:?OnInput@HWNDHost@DirectUI@@UAEXPAUInputEvent@2@@Z  +
***
jmp ds:?GetContentSize@Element@DirectUI@@UAE?AUtagSIZE@@HHPAVSurface@2@@Z  +
***
jmp ds:?GetClassInfoW@HWNDHost@DirectUI@@UAEPAUIClassInfo@2@XZ  +
***
jmp ds:?OnNotify@HWNDHost@DirectUI@@UAE_NIIJPAJ@Z  +
***
jmp ds:?OnListenerAttach@TaskPage@DirectUI@@MAEXPAVElement@2@@Z  +
***
jmp ds:?OnListenerDetach@TaskPage@DirectUI@@MAEXPAVElement@2@@Z  +
***
jmp ds:?OnListenedPropertyChanging@TaskPage@DirectUI@@MAE_NPAVElement@2@PBUPropertyInfo@2@HPAVValue@2@2@Z  +
***
jmp ds:?OnListenedPropertyChanged@TaskPage@DirectUI@@MAEXPAVElement@2@PBUPropertyInfo@2@HPAVValue@2@2@Z  +
***
jmp ds:?OnListenedInput@TaskPage@DirectUI@@MAEXPAVElement@2@PAUInputEvent@2@@Z  +
***
jmp ds:?OnListenedEvent@TaskPage@DirectUI@@MAEXPAVElement@2@PAUEvent@2@@Z  +
***
jmp ds:?CreateDUICP@TaskPage@DirectUI@@EAEJPAVHWNDElement@2@PAUHWND__@@1PAPAVElement@2@PAPAVDUIXmlParser@2@@Z  +
***
jmp ds:?CreateParserCP@TaskPage@DirectUI@@EAEJPAPAVDUIXmlParser@2@@Z  +
***
jmp ds:?DestroyCP@TaskPage@DirectUI@@EAEXXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1037210  +
push eax  +
call ds:SysFreeString  +
mov [esi] edi +
push [ebp+arg_4]  +
call ds:SysAllocString  +
mov [esi] eax +
cmp [ebp+arg_4] edi +
jz loc_1037229  +
cmp eax edi +
jnz loc_1037229  +
mov edi 8007000Eh +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+hMem] 0 +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
push edi  +
push [ebp+hResData]  +
push [ebp+hResInfo]  +
push [ebp+dwBytes]  +
call ds:FindResourceW  +
mov [ebp+hResInfo] eax +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jz loc_103726E  +
cmp eax 0FFFFFFFFh +
jnz loc_1037286  +
call ds:GetLastError  +
test eax eax +
jle loc_103727C  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103739C  +
push [ebp+hResInfo]  +
push [ebp+dwBytes]  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
test eax eax +
jz loc_103729E  +
cmp eax 0FFFFFFFFh +
jnz loc_10372B6  +
call ds:GetLastError  +
test eax eax +
jle loc_10372AC  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103736C  +
push [ebp+hResData]  +
call ds:LockResource  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_10372D0  +
mov esi 80004005h +
jmp loc_103736C  +
push [ebp+hResInfo]  +
push [ebp+dwBytes]  +
call ds:SizeofResource  +
mov [ebp+dwBytes] eax +
test eax eax +
ja loc_10372F7  +
call ds:GetLastError  +
test eax eax +
jle loc_10372F1  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103736C  +
push [ebp+dwBytes]  +
push 2  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_103730E  +
cmp eax 0FFFFFFFFh +
jnz loc_1037322  +
call ds:GetLastError  +
test eax eax +
jle loc_103731C  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103736C  +
push [ebp+hMem]  +
call ds:GlobalLock  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_1037337  +
cmp eax 0FFFFFFFFh +
jnz loc_103734B  +
call ds:GetLastError  +
test eax eax +
jle loc_1037345  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103736C  +
push [ebp+dwBytes]  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call memcpy  +
add esp 0Ch +
push [ebp+ppstm]  +
push 1  +
push [ebp+hMem]  +
call ds:CreateStreamOnHGlobal  +
mov esi eax +
xor edi edi +
cmp [ebp+hResData] edi +
jz loc_103737C  +
push [ebp+hResData]  +
call ds:FreeResource  +
cmp [ebp+var_8] edi +
jz loc_103738A  +
push [ebp+hMem]  +
call ds:GlobalUnlock  +
cmp esi edi +
jge loc_103739C  +
cmp [ebp+hMem] edi +
jz loc_103739C  +
push [ebp+hMem]  +
call ds:GlobalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0F0h]  +
mov esi eax +
test esi esi +
jl loc_1037420  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jl loc_1037420  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jl loc_1037420  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jl loc_1037420  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_1037420  +
mov esi [ebp+arg_0] +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1037431  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
cmp [ebp+var_8] 0 +
jz loc_1037440  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_10371F5  +
mov esi eax +
test esi esi +
jl loc_10374C5  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1009454  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10374C5  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov esi eax +
test esi esi +
jl loc_10374C5  +
push 8  +
pop eax  +
cmp ax word ptr [ebp+pvarg.anonymous_0] +
jz loc_10374B9  +
mov esi 80004005h +
jmp loc_10374C5  +
mov eax dword ptr [ebp+pvarg.anonymous_0+8] +
mov ecx [ebp+arg_8] +
and dword ptr [ebp+pvarg.anonymous_0+8] 0 +
mov [ecx] eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp [ebp+var_4] 0 +
jz loc_10374DE  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10374EB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
xor ebx ebx +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call sub_10371F5  +
mov edi ds:SysFreeString +
mov esi eax +
cmp esi ebx +
jl loc_103755A  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jl loc_103755A  +
cmp esi 1 +
jz loc_103755A  +
cmp [ebp+var_4] ebx +
jz loc_103754C  +
push [ebp+var_4]  +
call edi  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_103756A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
cmp [ebp+var_4] ebx +
jz loc_1037574  +
push [ebp+var_4]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax 800h +
push eax  +
xor ebx ebx +
push ebx  +
mov [ebp+cbData] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jnz loc_10375B5  +
mov esi 8007000Eh +
jmp loc_103763F  +
xor eax eax +
mov [edi] ax +
cmp [ebp+arg_C] ebx +
jz loc_10375F7  +
push ebx  +
push 1  +
push ebx  +
push [ebp+cbData]  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegLoadMUIStringW  +
mov esi eax +
cmp esi ebx +
jnz loc_10375DD  +
xor esi esi +
jmp loc_10375EB  +
jle loc_10375EB  +
and esi 0FFFFh +
or esi 80070000h +
mov eax esi +
and eax 0FFFFh +
cmp eax 0Dh +
jnz loc_1037621  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov esi eax +
cmp esi ebx +
jz loc_1037625  +
jle loc_1037621  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_1037630  +
push edi  +
push [ebp+arg_8]  +
call sub_10371F5  +
mov esi eax +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+hKey] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset SubKey  +
push 80000002h  +
mov [ebp+cbData] 4 +
call ds:RegOpenKeyExW  +
mov esi eax +
mov ebx 0FFFFh +
mov edi 80070000h +
test esi esi +
jz loc_103769C  +
jle loc_1037694  +
and esi ebx +
or esi edi +
test esi esi +
jl loc_103771E  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_10376CB  +
jle loc_10376C0  +
and eax ebx +
or eax edi +
test eax eax +
jge loc_10376CB  +
mov dword ptr [ebp+Data] 2 +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4Dh  +
push [ebp+arg_0]  +
call ds:WinHttpSetOption  +
test eax eax +
jnz loc_10376F4  +
call ds:GetLastError  +
test eax eax +
jle loc_10376EE  +
and eax ebx +
or eax edi +
mov esi eax +
test esi esi +
jl loc_103771E  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 58h  +
push [ebp+arg_0]  +
xor esi esi +
mov dword ptr [ebp+Data] esi +
call ds:WinHttpSetOption  +
test eax eax +
jnz loc_103771E  +
call ds:GetLastError  +
cmp eax esi +
jle loc_103771C  +
and eax ebx +
or eax edi +
mov esi eax +
cmp [ebp+hKey] 0 +
jz loc_103772D  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 2Ch  +
push 0  +
push esi  +
call memset  +
lea eax [esi+24h] +
add esp 0Ch +
mov [eax+4] eax +
mov [eax] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0Ch  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1037787  +
mov eax 8007000Eh +
jmp loc_10377D5  +
push edi  +
xor eax eax +
mov edi esi +
stos   +
stos   +
push esi  +
push [ebp+arg_4]  +
stos   +
mov eax [ebp+arg_0] +
push offset aFaultcode  +
mov [eax+20h] esi +
call sub_10374F7  +
pop edi  +
test eax eax +
jl loc_10377D5  +
lea eax [esi+4] +
push eax  +
push [ebp+arg_4]  +
push offset aFaultstring  +
call sub_10374F7  +
test eax eax +
jl loc_10377D5  +
add esi 8 +
push esi  +
push [ebp+arg_4]  +
push offset aDetail  +
call sub_10374F7  +
test eax eax +
jl loc_10377D5  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
xor ebx ebx +
push offset a_Answer  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
call sub_10371F5  +
mov edi eax +
cmp edi ebx +
jl loc_10378BE  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+90h]  +
mov edi eax +
cmp edi ebx +
jl loc_10378BE  +
push esi  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103783A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi 1 +
jz loc_10378BD  +
cmp [ebp+var_4] ebx +
jz loc_10378BD  +
push 10h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_10378B8  +
xor eax eax +
mov edi esi +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_4] +
mov ecx [eax+0Ch] +
add eax 8 +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
lea eax [esi+8] +
push eax  +
push [ebp+var_4]  +
push offset aName  +
call sub_103744C  +
mov edi eax +
cmp edi ebx +
jl loc_10378BD  +
add esi 0Ch +
push esi  +
push [ebp+var_4]  +
push offset aValue  +
call sub_103744C  +
mov edi eax +
cmp edi ebx +
jge loc_103782A  +
jmp loc_10378BD  +
mov edi 8007000Eh +
pop esi  +
cmp [ebp+var_8] ebx +
jz loc_10378CC  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_10378DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10378E9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push ebx  +
xor eax eax +
push esi  +
push offset aSessionid  +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
call sub_10374F7  +
mov edi eax +
test edi edi +
jl loc_1037A11  +
lea eax [ebx+4] +
push eax  +
push esi  +
push offset aUploadurl  +
call sub_10374F7  +
mov edi eax +
test edi edi +
jl loc_1037A11  +
push offset aDiagnostic  +
lea eax [ebp+var_8] +
push eax  +
call sub_10371F5  +
mov edi eax +
test edi edi +
jl loc_1037A02  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+90h]  +
jmp loc_10379F1  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_103797F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi 1 +
jz loc_1037A02  +
cmp [ebp+var_4] 0 +
jz loc_1037A02  +
push 14h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_10379FD  +
xor eax eax +
mov edi esi +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [esi+8] +
mov [eax+4] eax +
mov [eax] eax +
lea eax [ebx+24h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
lea eax [esi+10h] +
push eax  +
push [ebp+var_4]  +
push offset aDownloadurl  +
call sub_10374F7  +
mov edi eax +
test edi edi +
jl loc_1037A02  +
push esi  +
push [ebp+var_4]  +
call sub_10377DF  +
mov edi eax +
test edi edi +
jge loc_103796E  +
jmp loc_1037A02  +
mov edi 8007000Eh +
cmp [ebp+var_8] 0 +
jz loc_1037A11  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1037A22  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebp+var_C] +
test eax eax +
jz loc_1037A2F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SysFreeString +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
push edi  +
test eax eax +
jz loc_1037A5C  +
push eax  +
call ebx  +
and dword ptr [esi+10h] 0 +
add esi 8 +
mov edi [esi] +
mov [ebp+arg_0] esi +
cmp edi esi +
jz loc_1037AA7  +
mov esi edi +
mov eax [esi] +
mov ecx [esi+4] +
mov edi [edi] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [esi+8] +
test eax eax +
jz loc_1037A84  +
push eax  +
call ebx  +
and dword ptr [esi+8] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1037A92  +
push eax  +
call ebx  +
and dword ptr [esi+0Ch] 0 +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp edi [ebp+arg_0] +
jnz loc_1037A68  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov edi ds:SysFreeString +
cmp eax ebx +
jz loc_1037AD1  +
push eax  +
call edi  +
mov [esi] ebx +
mov eax [esi+4] +
cmp eax ebx +
jz loc_1037ADE  +
push eax  +
call edi  +
mov [esi+4] ebx +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1037AEB  +
push eax  +
call edi  +
mov [esi+8] ebx +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1037AF8  +
push eax  +
call edi  +
mov [esi+0Ch] ebx +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_1037B05  +
push eax  +
call edi  +
mov [esi+10h] ebx +
mov eax [esi+14h] +
cmp eax ebx +
jz loc_1037B12  +
push eax  +
call edi  +
mov [esi+14h] ebx +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_1037B1F  +
push eax  +
call edi  +
mov [esi+18h] ebx +
mov eax [esi+1Ch] +
cmp eax ebx +
jz loc_1037B2C  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
lea eax [esi+24h] +
mov esi [eax] +
mov [ebp+arg_0] eax +
cmp esi eax +
jz loc_1037B60  +
mov edi esi +
mov eax [edi] +
mov ecx [edi+4] +
mov esi [esi] +
mov [ecx] eax +
push edi  +
mov [eax+4] ecx +
call sub_1037A3D  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp esi [ebp+arg_0] +
jnz loc_1037B38  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1009DD0  +
xor edi edi +
push 15h  +
push edi  +
push offset stru_1009DE0  +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+ppv] edi +
mov [ebx] edi +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi edi +
jl loc_1037BE1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
cmp esi edi +
jl loc_1037BE1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
cmp esi edi +
jl loc_1037BE1  +
or eax 0FFFFFFFFh +
cmp ax word ptr [ebp+var_8] +
jnz loc_1037BE1  +
or eax eax +
cmp ax word ptr [ebp+var_C] +
jnz loc_1037BE1  +
mov dword ptr [ebx] 1 +
mov eax [ebp+ppv] +
cmp eax edi +
jz loc_1037BEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_C] 0 +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax [ebx+4] +
test eax eax +
jz loc_1037CB6  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] eax +
mov [ebp+arg_4] eax +
push edi  +
mov eax [ebp+arg_4] +
movzx eax word ptr [eax] +
test eax eax +
jz loc_1037C44  +
cmp eax 20h +
jz loc_1037C3A  +
cmp eax 3Bh +
jnz loc_1037C9D  +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ecx] ax +
jmp loc_1037C4B  +
mov [ebp+var_8] 1 +
mov eax [ebp+var_4] +
cmp [ebp+arg_4] eax +
jz loc_1037C9D  +
push 14h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ecx eax +
test ecx ecx +
jz loc_1037CAD  +
xor eax eax +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [esi] +
mov [ecx] eax +
mov [ecx+4] esi +
mov [eax+4] ecx +
mov [esi] ecx +
mov eax [ebx] +
mov [ecx+8] eax +
mov eax [ebp+var_4] +
mov [ecx+0Ch] eax +
mov eax [ebx+8] +
mov [ecx+10h] eax +
inc dword ptr [esi+0Ch]  +
add [ebp+arg_4] 2 +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
add [ebp+arg_4] 2 +
cmp [ebp+var_8] 0 +
jz loc_1037C26  +
jmp loc_1037CB4  +
mov [ebp+var_C] 8007000Eh +
pop edi  +
pop esi  +
mov eax [ebp+var_C] +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
lea edi [esi+10h] +
push edi  +
xor ebx ebx +
call ds:WinHttpGetDefaultProxyConfiguration  +
test eax eax +
jnz loc_1037D03  +
call ds:GetLastError  +
test eax eax +
jle loc_1037D01  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jl loc_1037D15  +
push edi  +
push esi  +
call sub_1037BFC  +
test eax eax +
jl loc_1037DC6  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_10] +
push eax  +
call ds:WinHttpGetIEProxyConfigForCurrentUser  +
test eax eax +
jnz loc_1037D3B  +
call ds:GetLastError  +
test eax eax +
jle loc_1037D39  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jl loc_1037D85  +
mov ecx [ebp+var_8] +
mov edx [ebp+var_4] +
mov eax ebx +
imul eax eax +
add eax esi +
mov [eax+14h] ecx +
lea ecx [ebx+2] +
imul ecx ecx +
cmp [ebp+var_10] 0 +
mov [ecx+esi] edx +
jz loc_1037D68  +
mov [ebp+var_28] 1 +
mov [ebp+var_24] 3 +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1037D76  +
or [ebp+var_28] 2 +
mov [ebp+var_20] ecx +
add eax 10h +
push eax  +
push esi  +
call sub_1037BFC  +
test eax eax +
jl loc_1037DC6  +
inc ebx  +
imul ebx ebx +
lea ebx [ebx+esi+10h] +
push ebx  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:WinHttpGetProxyForUrl  +
test eax eax +
jnz loc_1037DB9  +
call ds:GetLastError  +
test eax eax +
jle loc_1037DB7  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jl loc_1037DC4  +
push ebx  +
push esi  +
call sub_1037BFC  +
test eax eax +
jl loc_1037DC6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and eax 0FFFFh +
cmp eax 2EE2h +
jz loc_1037DFF  +
cmp eax 2EE7h +
jz loc_1037DFF  +
cmp eax 2EFCh +
jle loc_1037DFB  +
cmp eax 2EFEh +
jle loc_1037DFF  +
xor eax eax +
jmp loc_1037E02  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
lea eax [edx+8] +
mov ecx [eax] +
test ecx ecx +
jnz loc_1037E20  +
mov ecx [edx] +
jmp loc_1037E22  +
mov ecx [ecx] +
mov [eax] ecx +
mov eax ecx +
cmp eax edx +
jnz loc_1037E2F  +
xor eax eax +
inc eax  +
jmp loc_1037E5C  +
push 0Ch  +
add eax 8 +
push eax  +
push 26h  +
push [ebp+arg_0]  +
call ds:WinHttpSetOption  +
test eax eax +
jz loc_1037E48  +
xor eax eax +
jmp loc_1037E5C  +
call ds:GetLastError  +
test eax eax +
jle loc_1037E5C  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 34h  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
mov [esi+4] esi +
mov [esi] esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:GlobalFree +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [edi+18h] +
mov [ebp+arg_0] 3 +
mov eax [esi-4] +
test eax eax +
jz loc_1037EAF  +
push eax  +
call ebx  +
mov eax [esi] +
test eax eax +
jz loc_1037EB8  +
push eax  +
call ebx  +
add esi 0Ch +
dec [ebp+arg_0]  +
jnz loc_1037EA5  +
mov esi [edi] +
jmp loc_1037EE2  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp esi edi +
jnz loc_1037EC4  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp eax ebx +
jz loc_1037F1A  +
push eax  +
call ds:SysFreeString  +
mov [esi] ebx +
mov esi ds:GetUserPreferredUILanguages +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push 8  +
call esi  +
test eax eax +
jnz loc_1037F4F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1037F45  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp edi ebx +
jl loc_1037FDF  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
mov edi eax +
cmp edi ebx +
jl loc_1037FDF  +
mov eax [ebp+var_8] +
add eax eax +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1037FC6  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push 8  +
call esi  +
test eax eax +
jz loc_1037F9C  +
xor edi edi +
jmp loc_1037FB6  +
call ds:GetLastError  +
test eax eax +
jle loc_1037FB0  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jl loc_1037FCB  +
push ebx  +
call ds:SysAllocString  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test eax eax +
jnz loc_1037FCB  +
mov edi 8007000Eh +
test ebx ebx +
jz loc_1037FDF  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+lpMem] +
and [ebp+hKey] 0 +
test eax eax +
jnz loc_1038004  +
mov eax offset aMicrosoft +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push eax  +
lea ebx [edi+0Ch] +
push ebx  +
call sub_10371F5  +
mov esi eax +
test esi esi +
jl loc_1038110  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1038043  +
mov esi 8007000Eh +
jmp loc_10380F8  +
xor ecx ecx +
mov [eax] cx +
push dword ptr [ebx]  +
push offset aSoftwareMicr_3  +
push 400h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jl loc_10380F8  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push [ebp+lpMem]  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov esi eax +
test esi esi +
jz loc_1038098  +
jle loc_1038094  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_10380F8  +
push 1  +
lea eax [edi+14h] +
push eax  +
push offset aDisplayname  +
push [ebp+hKey]  +
call sub_1037582  +
mov esi eax +
test esi esi +
jl loc_10380F8  +
push 1  +
lea eax [edi+10h] +
push eax  +
push offset aUrl  +
push [ebp+hKey]  +
call sub_1037582  +
mov esi eax +
test esi esi +
jl loc_10380F8  +
push 1  +
lea eax [edi+18h] +
push eax  +
push offset aPrivacylink  +
push [ebp+hKey]  +
call sub_1037582  +
mov esi eax +
test esi esi +
jl loc_10380F8  +
push 0  +
add edi 1Ch +
push edi  +
push offset aIcon  +
push [ebp+hKey]  +
call sub_1037582  +
mov esi eax +
cmp [ebp+lpMem] 0 +
jz loc_1038110  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hKey] 0 +
jz loc_103811F  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 38h  +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_78] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp+var_3C] +
push eax  +
call sub_1037E65  +
mov edi 800h +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_103817C  +
mov esi 8007000Eh +
jmp loc_1038376  +
push edi  +
xor ecx ecx +
push ebx  +
mov [eax] cx +
call ds:GetProcessHeap  +
push eax  +
call esi  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_103819D  +
mov esi 8007000Eh +
jmp loc_1038351  +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+lpMem] +
mov [ebp+var_4C] eax +
mov eax 400h +
mov [ebp+var_64] eax +
mov [ebp+var_48] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_68] ecx +
mov [ebp+var_78] 3Ch +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_10381C3  +
sub eax ecx +
lea ecx [ebp+var_78] +
push ecx  +
push ebx  +
sar eax 1 +
push eax  +
push [ebp+arg_0]  +
call ds:WinHttpCrackUrl  +
test eax eax +
jnz loc_1038202  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10381F8  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMsde6_1  +
call ds:WinHttpOpen  +
mov edi [ebp+arg_14] +
mov [edi] eax +
cmp eax ebx +
jz loc_103821F  +
cmp eax 0FFFFFFFFh +
jnz loc_103823D  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1038233  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
push ebx  +
push [ebp+var_60]  +
push [ebp+var_68]  +
push dword ptr [edi]  +
call ds:WinHttpConnect  +
mov edi [ebp+arg_18] +
mov [edi] eax +
cmp eax ebx +
jz loc_103825A  +
cmp eax 0FFFFFFFFh +
jnz loc_1038278  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_103826E  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
cmp [ebp+var_6C] 2 +
jnz loc_1038285  +
mov eax 800000h +
jmp loc_1038287  +
xor eax eax +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+var_4C]  +
push [ebp+arg_4]  +
push dword ptr [edi]  +
call ds:WinHttpOpenRequest  +
mov edi [ebp+arg_1C] +
mov [edi] eax +
cmp eax ebx +
jz loc_10382A7  +
cmp eax 0FFFFFFFFh +
jnz loc_10382C5  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10382BB  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
push dword ptr [edi]  +
call sub_103764D  +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+arg_0]  +
mov eax [ebp+arg_14] +
push dword ptr [eax]  +
call sub_1037CC3  +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
cmp [ebp+var_30] ebx +
jbe loc_1038307  +
lea eax [ebp+var_3C] +
push eax  +
mov eax [ebp+arg_14] +
push dword ptr [eax]  +
call sub_1037E0B  +
mov esi eax +
cmp esi ebx +
jl loc_1038351  +
cmp esi 1 +
jz loc_1038351  +
mov eax [ebp+arg_8] +
push ebx  +
push [ebp+arg_10]  +
neg eax  +
push [ebp+arg_10]  +
sbb eax eax +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_8]  +
push dword ptr [edi]  +
call ds:WinHttpSendRequest  +
test eax eax +
jz loc_103832C  +
xor esi esi +
jmp loc_1038342  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1038340  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
call sub_1037DD2  +
test eax eax +
jz loc_1038351  +
cmp [ebp+var_30] ebx +
ja loc_10382EE  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp+var_8] ebx +
jz loc_1038376  +
push [ebp+var_8]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1037E8A  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push 3  +
lea eax [ebp+SecurityAttributes] +
push eax  +
push 3  +
push 0C0000000h  +
push [ebp+NumberOfBytesRead]  +
mov [ebp+lpMem] esi +
mov [ebp+var_14] esi +
mov [ebp+var_18] esi +
mov [ebp+var_4] esi +
mov [ebp+var_10] esi +
mov [ebp+SecurityAttributes.nLength] 0Ch +
mov [ebp+SecurityAttributes.lpSecurityDescriptor] esi +
mov [ebp+SecurityAttributes.bInheritHandle] 1 +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
mov ebx 80070000h +
cmp eax esi +
jz loc_10383E3  +
cmp eax 0FFFFFFFFh +
jnz loc_10383FE  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10383F4  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_1038580  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+hObject]  +
call ds:GetFileSizeEx  +
test eax eax +
jnz loc_103842A  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1038420  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_1038580  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_100CE3F  +
mov edi eax +
cmp edi esi +
jl loc_1038580  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_18]  +
push esi  +
push [ebp+arg_8]  +
push offset aPut  +
push [ebp+arg_0]  +
call sub_103812D  +
mov edi eax +
cmp edi esi +
jl loc_103855C  +
push 1000h  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_1038491  +
mov edi 8007000Eh +
jmp loc_103855C  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1000h  +
push [ebp+lpMem]  +
push [ebp+hObject]  +
call ds:ReadFile  +
test eax eax +
jnz loc_10384C6  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10384BC  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_103855C  +
cmp [ebp+NumberOfBytesRead] esi +
jbe loc_10384FE  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+NumberOfBytesRead]  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
call ds:WinHttpWriteData  +
test eax eax +
jnz loc_10384F9  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10384F3  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_103855C  +
cmp [ebp+NumberOfBytesRead] esi +
ja loc_1038491  +
push esi  +
push [ebp+var_4]  +
call ds:WinHttpReceiveResponse  +
test eax eax +
jnz loc_1038523  +
call ds:GetLastError  +
cmp eax esi +
jle loc_103851D  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
cmp edi esi +
jl loc_103855C  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push [ebp+arg_C]  +
mov [ebp+NumberOfBytesRead] 4 +
push esi  +
push 20000013h  +
push [ebp+var_4]  +
call ds:WinHttpQueryHeaders  +
test eax eax +
jz loc_1038549  +
xor edi edi +
jmp loc_103855C  +
call ds:GetLastError  +
cmp eax esi +
jle loc_103855A  +
and eax 0FFFFh +
or eax ebx +
mov edi eax +
mov ebx ds:WinHttpCloseHandle +
cmp [ebp+var_10] esi +
jz loc_103856C  +
push [ebp+var_10]  +
call ebx  +
cmp [ebp+var_14] esi +
jz loc_1038576  +
push [ebp+var_14]  +
call ebx  +
cmp [ebp+var_4] esi +
jz loc_1038580  +
push [ebp+var_4]  +
call ebx  +
cmp [ebp+hObject] esi +
jz loc_1038594  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1038594  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+lpMem] esi +
jz loc_10385AA  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp edi esi +
jl loc_10385BE  +
mov eax [ebp+arg_C] +
cmp dword ptr [eax] 0C8h +
jz loc_10385BE  +
xor eax eax +
inc eax  +
jmp loc_10385C0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_14] +
mov [ebp+var_18] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_4] ebx +
stos   +
mov [ebp+var_C] ebx +
cmp [ebp+arg_C] ebx +
jz loc_1038604  +
mov eax [ebp+arg_C] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10385F9  +
sub eax edx +
jmp loc_1038606  +
xor eax eax +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+var_10] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103812D  +
mov esi eax +
cmp esi ebx +
jl loc_1038725  +
push ebx  +
push [ebp+var_4]  +
call ds:WinHttpReceiveResponse  +
test eax eax +
jnz loc_103865A  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1038650  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038725  +
push ebx  +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_14]  +
mov [ebp+arg_C] 4 +
push ebx  +
push 20000013h  +
push [ebp+var_4]  +
call ds:WinHttpQueryHeaders  +
test eax eax +
jnz loc_103869A  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1038690  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038725  +
mov ebx 1000h +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_10386BD  +
mov esi 8007000Eh +
jmp loc_1038723  +
mov edi [ebp+arg_10] +
lea eax [ebp+arg_C] +
push eax  +
push ebx  +
push [ebp+lpMem]  +
push [ebp+var_4]  +
call ds:WinHttpReadData  +
test eax eax +
jnz loc_10386EF  +
call ds:GetLastError  +
test eax eax +
jle loc_10386E9  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_1038723  +
cmp [ebp+arg_C] 0 +
jbe loc_1038711  +
mov eax [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_C]  +
push [ebp+lpMem]  +
push edi  +
call dword ptr [eax+10h]  +
mov esi eax +
test esi esi +
jl loc_1038723  +
cmp [ebp+arg_C] 0 +
ja loc_10386C0  +
mov eax [edi] +
push 0  +
push 0  +
push [ebp+var_14]  +
push [ebp+var_18]  +
push edi  +
call dword ptr [eax+14h]  +
mov esi eax +
xor ebx ebx +
mov edi ds:WinHttpCloseHandle +
cmp [ebp+var_C] ebx +
jz loc_1038735  +
push [ebp+var_C]  +
call edi  +
cmp [ebp+var_10] ebx +
jz loc_103873F  +
push [ebp+var_10]  +
call edi  +
cmp [ebp+var_4] ebx +
jz loc_1038749  +
push [ebp+var_4]  +
call edi  +
cmp [ebp+lpMem] ebx +
jz loc_103875F  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp esi ebx +
jl loc_1038773  +
mov eax [ebp+arg_14] +
cmp dword ptr [eax] 0C8h +
jz loc_1038773  +
xor eax eax +
inc eax  +
jmp loc_1038775  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp [esi+4] eax +
jz loc_1038795  +
cmp [esi] eax +
jnz loc_103879E  +
mov [ebp+arg_0] 80070057h +
jmp loc_1038809  +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
push 800h  +
push eax  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_10387C4  +
mov [ebp+arg_0] 8007000Eh +
jmp loc_10387F7  +
xor eax eax +
mov [edi] ax +
push dword ptr [esi]  +
push offset aGuidS  +
push 400h  +
push edi  +
call sub_100DD8E  +
add esp 10h +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_10387F7  +
push [ebp+arg_8]  +
push edi  +
push [ebp+NumberOfBytesRead]  +
push dword ptr [esi+4]  +
call sub_103838D  +
mov [ebp+arg_0] eax +
test edi edi +
jz loc_1038807  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop ebx  +
mov eax [ebp+arg_0] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_18] ebx +
mov [ebp+ppv] ebx +
mov [ebp+ppstm] ebx +
mov [ebp+lpWideCharStr] ebx +
call ds:VariantInit  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1009434  +
push 15h  +
push ebx  +
push offset stru_1009484  +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
lea eax [ebp+ppstm] +
push eax  +
push 17h  +
push offset hResInfo  +
push ebx  +
call sub_1037236  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+ppstm] +
mov ecx [eax] +
lea edx [ebp+pvarg.anonymous_0+8] +
push edx  +
push offset dword_10094A4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push 0Dh  +
pop eax  +
lea edx [ebp+var_4] +
push edx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnz loc_10388F4  +
push [ebp+ppv]  +
call sub_10373AA  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push offset aToken  +
lea eax [ebp+lpWideCharStr] +
push eax  +
call sub_10371F5  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1038936  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push [ebp+lpWideCharStr]  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
cmp esi 1 +
jz loc_1038B33  +
mov edi [ebp+arg_0] +
mov eax [ebp+var_10] +
push dword ptr [edi+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push offset aCulturename  +
lea eax [ebp+lpWideCharStr] +
push eax  +
call sub_10371F5  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103899D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push [ebp+lpWideCharStr]  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
cmp esi 1 +
jz loc_1038B33  +
lea eax [ebp+lpWideCharStr] +
push eax  +
call sub_1037EF2  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+var_10] +
push [ebp+lpWideCharStr]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
cmp [ebp+lpWideCharStr] ebx +
jz loc_10389FD  +
push [ebp+lpWideCharStr]  +
call ds:SysFreeString  +
mov [ebp+lpWideCharStr] ebx +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+lpWideCharStr] +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push [ebp+lpWideCharStr]  +
call ds:SysStringLen  +
mov esi eax +
inc esi  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1038A43  +
mov esi 8007000Eh +
jmp loc_1038B33  +
push ebx  +
push ebx  +
push esi  +
push eax  +
push esi  +
push [ebp+lpWideCharStr]  +
push ebx  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_1038A79  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1038A6F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+ppstm] +
cmp eax ebx +
jz loc_1038A93  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppstm] ebx +
lea eax [ebp+ppstm] +
push eax  +
push 1  +
push ebx  +
call ds:CreateStreamOnHGlobal  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push [ebp+arg_8]  +
push [ebp+ppstm]  +
push [ebp+lpMem]  +
push offset aSoapactionHttp  +
push offset aPost  +
push dword ptr [edi+10h]  +
call sub_10385CC  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
mov eax [ebp+ppstm] +
mov ecx [eax] +
lea edx [ebp+pvarg.anonymous_0+8] +
push edx  +
push offset dword_10094A4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push 0Dh  +
pop eax  +
lea edx [ebp+var_4] +
push edx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnz loc_1038B21  +
push [ebp+ppv]  +
call sub_10373AA  +
mov esi eax +
cmp esi ebx +
jl loc_1038B33  +
push [ebp+arg_4]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset stru_1009434  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp [ebp+lpMem] ebx +
jz loc_1038B53  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_1038B63  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] ebx +
mov eax [ebp+ppstm] +
cmp eax ebx +
jz loc_1038B73  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppstm] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1038B83  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1038B93  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] ebx +
cmp [ebp+lpWideCharStr] ebx +
jz loc_1038BA1  +
push [ebp+lpWideCharStr]  +
call ds:SysFreeString  +
cmp esi ebx +
jl loc_1038BB5  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax] 0C8h +
jz loc_1038BB5  +
xor eax eax +
inc eax  +
jmp loc_1038BB7  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
cmp [ebx+10h] edi +
jnz loc_1038BED  +
mov eax 80070057h +
jmp loc_1038CC6  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebx+8] +
push eax  +
call sub_10371F5  +
mov esi eax +
cmp esi edi +
jl loc_1038C85  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1038816  +
mov esi eax +
cmp esi edi +
jl loc_1038C85  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov esi eax +
cmp esi edi +
jl loc_1038C85  +
push offset aQueryqueueresu  +
lea eax [ebp+var_10] +
push eax  +
call sub_10371F5  +
mov esi eax +
cmp esi edi +
jl loc_1038C85  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1038C51  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+var_10]  +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
cmp esi edi +
jl loc_1038C85  +
cmp esi 1 +
jnz loc_1038C7A  +
push [ebp+var_8]  +
push ebx  +
call sub_1037763  +
jmp loc_1038C83  +
push [ebp+var_4]  +
push ebx  +
call sub_10378F6  +
mov esi eax +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1038C95  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] edi +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1038CA5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1038CB5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+var_10] edi +
jz loc_1038CC3  +
push [ebp+var_10]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push 1  +
push 80h  +
push 1022h  +
push [ebp+arg_4]  +
call ds:SHCreateStreamOnFileEx  +
mov edi eax +
test edi edi +
jl loc_1038D16  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push 0  +
push 0  +
push offset aGet  +
push [ebp+arg_0]  +
call sub_10385CC  +
mov edi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1038D23  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1038D58  +
cmp eax esi +
ja loc_1038D58  +
jz loc_1038D5D  +
jmp loc_1038D65  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1038D6E  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_1038DB6  +
push dword ptr [ebp+8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ds:MultiByteToWideChar +
push edi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
mov edi 0FDE9h +
push 8  +
push edi  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_1038DF7  +
call ds:GetLastError  +
mov ecx [ebp+lpWideCharStr] +
mov [ecx] eax +
jmp loc_1038E74  +
lea eax [ebx+ebx+2] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1038E1D  +
mov eax [ebp+lpWideCharStr] +
mov dword ptr [eax] 0Eh +
jmp loc_1038E5C  +
push ebx  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push 8  +
push edi  +
call esi  +
test eax eax +
jnz loc_1038E35  +
call ds:GetLastError  +
jmp loc_1038E57  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+lpMem]  +
call ds:_wopen  +
add esp 0Ch +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1038E5C  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+lpWideCharStr] +
mov [ecx] eax +
cmp [ebp+lpMem] 0 +
jz loc_1038E74  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_read  +
mov esi eax +
add esp 0Ch +
cmp esi 0FFFFFFFFh +
jnz loc_1038EAD  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_write  +
mov esi eax +
add esp 0Ch +
cmp esi 0FFFFFFFFh +
jnz loc_1038EE3  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call ds:_close  +
mov esi eax +
pop ecx  +
cmp esi 0FFFFFFFFh +
jnz loc_1038F11  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_lseek  +
mov esi eax +
add esp 0Ch +
cmp esi 0FFFFFFFFh +
jnz loc_1038F47  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
push edi  +
mov edi ds:GetProcessHeap +
push 208h  +
push 0  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1038FCD  +
push esi  +
mov esi 104h +
push esi  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [ebp+8]  +
push 8  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_1038F9F  +
call ds:GetLastError  +
jmp loc_1038FC0  +
cmp eax esi +
jnb loc_1038FC0  +
push ebx  +
call ds:_wremove  +
pop ecx  +
mov [ebp-4] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1038FC0  +
call ds:_errno  +
mov eax [eax] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
push ebx  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
mov edi 208h +
push edi  +
push 0  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp-8] eax +
test eax eax +
jnz loc_103900D  +
mov edi 8007000Eh +
jmp loc_10390E9  +
push edi  +
push 0  +
call ebx  +
push eax  +
call esi  +
mov [ebp-4] eax +
test eax eax +
jnz loc_1039026  +
mov edi 8007000Eh +
jmp loc_10390C9  +
push dword ptr [ebp-8]  +
mov esi 104h +
push esi  +
call ds:GetTempPathW  +
test eax eax +
jnz loc_1039041  +
call ds:GetLastError  +
jmp loc_10390B9  +
cmp eax esi +
jb loc_103904C  +
mov edi 8007007Ah +
jmp loc_10390C9  +
push dword ptr [ebp-4]  +
call ds:rand  +
push eax  +
push offset aPla_  +
push dword ptr [ebp-8]  +
call ds:GetTempFileNameW  +
mov esi ds:GetLastError +
test eax eax +
jz loc_1039072  +
xor edi edi +
jmp loc_103908E  +
call esi  +
test eax eax +
jz loc_103906E  +
call esi  +
test eax eax +
jle loc_1039088  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jl loc_10390C9  +
xor eax eax +
push eax  +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 0FFFFFFFFh  +
push dword ptr [ebp-4]  +
push eax  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jnz loc_10390C9  +
call esi  +
test eax eax +
jnz loc_10390B7  +
xor edi edi +
jmp loc_10390C9  +
call esi  +
test eax eax +
jle loc_10390C7  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push dword ptr [ebp-8]  +
push 0  +
call ebx  +
mov esi ds:HeapFree +
push eax  +
call esi  +
cmp dword ptr [ebp-4] 0 +
jz loc_10390E9  +
push dword ptr [ebp-4]  +
push 0  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
test edi edi +
pop edi  +
pop esi  +
setnl al  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp dword ptr [ecx+14h] 1 +
setz al  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
dec eax  +
dec eax  +
jz loc_1039122  +
xor eax eax +
pop ebp  +
retn   +
***
mov eax [ebp+10h] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
or dword ptr [ebp-8] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ds:MultiByteToWideChar +
push edi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push dword ptr [ebp+8]  +
mov edi 0FDE9h +
push 8  +
push edi  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_1039183  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jz loc_10392EC  +
call esi  +
test eax eax +
jg loc_1039177  +
mov esi eax +
jmp loc_10392DE  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1039170  +
***
lea eax [ebx+ebx+2] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
test eax eax +
jnz loc_10391A8  +
mov esi 8007000Eh +
jmp loc_10392C6  +
push ebx  +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [ebp+8]  +
push 8  +
push edi  +
call esi  +
test eax eax +
jnz loc_10391E2  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_10391CB  +
xor esi esi +
jmp loc_10392C6  +
call esi  +
test eax eax +
jle loc_10391DB  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_10392C6  +
push 0  +
push 8000h  +
push dword ptr [ebp-4]  +
call ds:_wopen  +
add esp 0Ch +
mov [ebp-8] eax +
cmp eax 0FFFFFFFFh +
jz loc_103920A  +
push eax  +
call ds:_get_osfhandle  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_103922B  +
call ds:_errno  +
mov esi [eax] +
test esi esi +
jle loc_10392C6  +
and esi 0FFFFh +
or esi 80070000h +
jmp loc_10392C6  +
lea ecx [ebp-44h] +
push ecx  +
push eax  +
call ds:GetFileInformationByHandle  +
mov edi ds:GetLastError +
mov ebx 80070000h +
test eax eax +
jnz loc_103925E  +
call edi  +
test eax eax +
jz loc_103925E  +
call edi  +
test eax eax +
jle loc_1039258  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_10392C6  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jnz loc_1039289  +
call edi  +
test eax eax +
jz loc_1039289  +
call edi  +
test eax eax +
jle loc_1039283  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_10392C6  +
push dword ptr [ebp+10h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:FileTimeToDosDateTime  +
test eax eax +
jz loc_10392A1  +
xor esi esi +
jmp loc_10392BA  +
call edi  +
test eax eax +
jz loc_103929D  +
call edi  +
test eax eax +
jle loc_10392B4  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
test esi esi +
jl loc_10392C6  +
mov eax [ebp-44h] +
mov ecx [ebp+14h] +
and eax 27h +
mov [ecx] ax +
cmp dword ptr [ebp-4] 0 +
jz loc_10392DE  +
push dword ptr [ebp-4]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test esi esi +
jge loc_10392EC  +
mov eax [ebp+18h] +
mov [eax] esi +
or eax 0FFFFFFFFh +
jmp loc_10392EF  +
mov eax [ebp-8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1039310  +
push eax  +
call sub_103C354  +
pop ecx  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push offset loc_1039112  +
push offset loc_10390FA  +
push 0  +
push dword ptr [eax+0Ch]  +
call sub_103C2F6  +
add esp 10h +
neg eax  +
sbb eax eax +
and eax 7FCFFEEDh +
add eax 80300113h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpPathName] +
push esi  +
push edi  +
mov edi ds:wcschr +
push 5Ch  +
lea eax [ebx+8] +
push eax  +
jmp loc_10393C5  +
xor eax eax +
push eax  +
push ebx  +
mov [esi] ax +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_1039396  +
call ds:GetLastError  +
test eax eax +
jnz loc_103939A  +
xor eax eax +
jmp loc_10393AE  +
call ds:GetLastError  +
test eax eax +
jle loc_10393AE  +
and eax 0FFFFh +
or eax 80070000h +
push 5Ch  +
pop ecx  +
mov [esi] cx +
test eax eax +
jge loc_10393BF  +
cmp eax 800700B7h +
jnz loc_10393D1  +
push 5Ch  +
add esi 2 +
push esi  +
call edi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_103937B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1038DBD  +
add esp 14h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1038E81  +
add esp 14h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1038EB7  +
add esp 14h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1038EED  +
add esp 0Ch +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1038F1B  +
add esp 14h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:WideCharToMultiByte +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
mov ebx 0FDE9h +
push esi  +
push ebx  +
mov [ebp+lpMem] esi +
call edi  +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_1039501  +
push eax  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_10394EE  +
mov edi 8007000Eh +
jmp loc_103951D  +
xor edi edi +
jmp loc_1039533  +
call edi  +
cmp eax esi +
jle loc_10394EA  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_1039519  +
push esi  +
push esi  +
push [ebp+var_8]  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
push ebx  +
call edi  +
test eax eax +
jnz loc_103950F  +
mov edi ds:GetLastError +
call edi  +
test eax eax +
jz loc_10394D6  +
jmp loc_10394DA  +
mov eax [ebp+arg_4] +
mov ecx [ebp+lpMem] +
mov [eax] ecx +
xor edi edi +
cmp edi esi +
jge loc_1039533  +
cmp [ebp+lpMem] esi +
jz loc_1039533  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_1039558  +
cmp ecx 7FFFFFFFh +
jbe loc_103955D  +
mov eax 80070057h +
test eax eax +
jl loc_1039576  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax ecx +
push 0  +
call sub_1038D2F  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 338h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_334] eax +
mov eax [ebp+arg_8] +
push 0  +
mov [ebp+var_338] eax +
call ds:time  +
push eax  +
call ds:srand  +
mov ebx ds:GetProcessHeap +
pop ecx  +
pop ecx  +
push 1Ch  +
push 8  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+var_330] eax +
test eax eax +
jnz loc_10395E4  +
mov esi 8007000Eh +
jmp loc_1039765  +
push 324h  +
lea eax [ebp+var_328] +
push 0  +
push eax  +
call memset  +
mov eax 7FFFFFFFh +
add esp 0Ch +
mov [ebp+var_328] eax +
mov [ebp+var_324] eax +
call ds:rand  +
push 208h  +
push 0  +
mov [ebp+var_308] ax +
mov [ebp+var_310] 1 +
call ebx  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1039642  +
mov esi 8007000Eh +
jmp loc_1039738  +
push edi  +
push offset aS_1  +
push 104h  +
push eax  +
call sub_100DD8E  +
mov esi eax +
add esp 10h +
test esi esi +
jl loc_1039738  +
mov esi ds:WideCharToMultiByte +
push 0  +
push 0  +
mov ebx 100h +
push ebx  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpMem]  +
mov edi 0FDE9h +
push 0  +
push edi  +
call esi  +
test eax eax +
jnz loc_10396B4  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jz loc_1039736  +
call esi  +
test eax eax +
jle loc_10396AD  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1039738  +
xor eax eax +
push eax  +
push eax  +
push ebx  +
lea ecx [ebp+var_206] +
push ecx  +
push 0FFFFFFFFh  +
push [ebp+var_334]  +
push eax  +
push edi  +
call esi  +
test eax eax +
jz loc_103968D  +
mov esi [ebp+var_330] +
push esi  +
lea eax [ebp+var_328] +
push eax  +
push offset loc_1038FD9  +
push offset loc_1038F51  +
push offset sub_1038F1B  +
push offset sub_1038EED  +
push offset sub_1038EB7  +
push offset sub_1038E81  +
push offset sub_1038DBD  +
push offset loc_1038D99  +
push offset loc_1038D7B  +
push offset a3LapLatLaxgax  +
push esi  +
call sub_103C39F  +
add esp 34h +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_1039727  +
mov esi 80300113h +
jmp loc_1039738  +
mov eax [ebp+var_338] +
mov dword ptr [esi+18h] 32h +
mov [eax] esi +
xor esi esi +
cmp [ebp+lpMem] 0 +
jz loc_1039756  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test esi esi +
jge loc_1039765  +
push [ebp+var_330]  +
call sub_10392F9  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
xor ebx ebx +
push 208h  +
push ebx  +
mov [ebp+var_8] ebx +
mov [ebp+lpMem] ebx +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpWideCharStr] eax +
cmp eax ebx +
jnz loc_10397B7  +
mov dword ptr [ebp+arg_0] 8007000Eh +
jmp loc_103985B  +
push edi  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_2  +
push 104h  +
push eax  +
call sub_100DD8E  +
mov edi ds:HeapFree +
add esp 14h +
cmp eax ebx +
mov dword ptr [ebp+arg_0] eax +
jl loc_1039851  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpWideCharStr]  +
call sub_103948B  +
cmp eax ebx +
mov dword ptr [ebp+arg_0] eax +
jl loc_1039843  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_4]  +
call sub_103948B  +
cmp eax ebx +
mov dword ptr [ebp+arg_0] eax +
jl loc_1039835  +
mov eax [ebp+arg_8] +
push 1  +
push offset loc_103912C  +
push offset loc_1039112  +
push offset loc_10390FA  +
push ebx  +
push [ebp+lpMem]  +
push [ebp+var_8]  +
push dword ptr [eax+0Ch]  +
call sub_103C212  +
add esp 20h +
test eax eax +
jnz loc_1039835  +
mov dword ptr [ebp+arg_0] 80300113h +
cmp [ebp+lpMem] ebx +
jz loc_1039843  +
push [ebp+lpMem]  +
push ebx  +
call esi  +
push eax  +
call edi  +
cmp [ebp+var_8] ebx +
jz loc_1039851  +
push [ebp+var_8]  +
push ebx  +
call esi  +
push eax  +
call edi  +
push [ebp+lpWideCharStr]  +
push ebx  +
call esi  +
push eax  +
call edi  +
pop edi  +
mov eax dword ptr [ebp+arg_0] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 83Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
or dword ptr [ebp-828h] 0FFFFFFFFh +
dec eax  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx [edi+10h] +
jz loc_1039AAF  +
dec eax  +
jz loc_1039974  +
dec eax  +
jz loc_10398B0  +
dec eax  +
jz loc_1039AAF  +
xor eax eax +
jmp loc_1039AB2  +
lea eax [ebp-83Ch] +
push eax  +
movzx eax word ptr [edi+1Ah] +
push eax  +
movzx eax word ptr [edi+18h] +
push eax  +
call ds:DosDateTimeToFileTime  +
test eax eax +
jz loc_1039904  +
lea eax [ebp-834h] +
push eax  +
lea eax [ebp-83Ch] +
push eax  +
call ds:LocalFileTimeToFileTime  +
test eax eax +
jz loc_1039904  +
push dword ptr [edi+14h]  +
call ds:_get_osfhandle  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_1039904  +
lea ecx [ebp-834h] +
push ecx  +
push 0  +
push 0  +
push eax  +
call ds:SetFileTime  +
push 104h  +
lea eax [ebp-414h] +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push 8  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_1039962  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebx+8]  +
lea eax [ebp-20Ch] +
push offset aSS_2  +
push 208h  +
push eax  +
call sub_1039541  +
add esp 14h +
test eax eax +
jl loc_1039962  +
movzx eax word ptr [edi+1Ch] +
and eax 27h +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call ds:SetFileAttributesW  +
push dword ptr [edi+14h]  +
call ds:_close  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1039AB2  +
mov esi 104h +
push esi  +
lea eax [ebp-414h] +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push 8  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_1039AAF  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebx+8]  +
lea eax [ebp-20Ch] +
push offset aSS_2  +
push 208h  +
push eax  +
call sub_1039541  +
add esp 14h +
test eax eax +
jl loc_1039A95  +
mov edi ds:GetFullPathNameW +
lea eax [ebp-82Ch] +
push eax  +
lea eax [ebp-824h] +
push eax  +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call edi  +
test eax eax +
jz loc_1039AAF  +
cmp eax esi +
jg loc_1039AAF  +
lea eax [ebp-82Ch] +
push eax  +
lea eax [ebp-61Ch] +
push eax  +
push esi  +
push dword ptr [ebx+8]  +
call edi  +
test eax eax +
jz loc_1039AAF  +
cmp eax esi +
jg loc_1039AAF  +
lea eax [ebp-61Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1039A21  +
sub eax edx +
sar eax 1 +
mov esi eax +
lea eax [ebp-824h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1039A3A  +
sub eax edx +
sar eax 1 +
cmp esi eax +
ja loc_1039AAF  +
push esi  +
lea eax [ebp-824h] +
push eax  +
lea eax [ebp-61Ch] +
push eax  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1039AAF  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1039362  +
test eax eax +
jl loc_1039A95  +
push 0  +
lea eax [ebp-20Ch] +
push 8101h  +
push eax  +
call ds:_wopen  +
add esp 0Ch +
mov [ebp-828h] eax +
mov eax [ebx] +
test eax eax +
jz loc_1039AA7  +
push dword ptr [ebx+4]  +
lea ecx [ebp-20Ch] +
push ecx  +
call eax  +
mov eax [ebp-828h] +
jmp loc_1039AB2  +
or eax 0FFFFFFFFh +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov edi ds:GetProcessHeap +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_C] ebx +
cmp [ebp+lpFileName] ebx +
jz loc_1039C0D  +
cmp [ebp+arg_4] ebx +
jz loc_1039C0D  +
lea eax [ebp+var_2C] +
push eax  +
push 0FFFFFFFFh  +
push offset loc_1039467  +
push offset loc_1039449  +
push offset loc_1039425  +
push offset loc_1039401  +
push offset loc_10393DD  +
push offset loc_1038D99  +
push offset loc_1038D7B  +
call sub_10433C7  +
add esp 24h +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1039C04  +
push 800h  +
push ebx  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_1039B55  +
mov [ebp+lpFileName] 8007000Eh +
jmp loc_1039C14  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push eax  +
mov esi 400h +
push esi  +
push [ebp+lpFileName]  +
call ds:GetFullPathNameW  +
cmp eax ebx +
jnz loc_1039B89  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1039B81  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+lpFileName] eax +
jmp loc_1039C14  +
cmp eax esi +
jb loc_1039B96  +
mov [ebp+lpFileName] 8007007Ah +
jmp loc_1039C14  +
cmp [ebp+lpWideCharStr] ebx +
jnz loc_1039BA4  +
mov [ebp+lpFileName] 800700A1h +
jmp loc_1039C14  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpWideCharStr]  +
call sub_103948B  +
cmp eax ebx +
mov [ebp+lpFileName] eax +
jl loc_1039C14  +
mov ecx [ebp+lpWideCharStr] +
xor eax eax +
mov [ecx] ax +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+var_10]  +
call sub_103948B  +
cmp eax ebx +
mov [ebp+lpFileName] eax +
jl loc_1039C14  +
mov eax [ebp+arg_4] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
push offset loc_1039869  +
push ebx  +
push [ebp+lpMem]  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call sub_104443F  +
add esp 1Ch +
test eax eax +
jnz loc_1039C14  +
mov [ebp+lpFileName] 80300113h +
jmp loc_1039C14  +
mov [ebp+lpFileName] 80070057h +
cmp [ebp+var_4] ebx +
jz loc_1039C22  +
push [ebp+var_4]  +
call sub_1043EDB  +
pop ecx  +
mov esi ds:HeapFree +
cmp [ebp+lpMem] ebx +
jz loc_1039C36  +
push [ebp+lpMem]  +
push ebx  +
call edi  +
push eax  +
call esi  +
cmp [ebp+var_C] ebx +
jz loc_1039C44  +
push [ebp+var_C]  +
push ebx  +
call edi  +
push eax  +
call esi  +
cmp [ebp+var_10] ebx +
jz loc_1039C52  +
push [ebp+var_10]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov eax [ebp+lpFileName] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_C] +
xor edx edx +
sub esp 30h +
cmp ecx edx +
jz loc_1039C8F  +
push esi  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
cmp si dx +
jnz loc_1039C79  +
sub eax edi +
sar eax 1 +
pop edi  +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1039C92  +
push 0Ah  +
pop eax  +
cmp ecx edx +
jnz loc_1039C9B  +
mov ecx offset aNull_0 +
push 4  +
mov [ebp+var_28] eax +
lea eax [ebp+arg_10] +
mov [ebp+var_20] eax +
pop eax  +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_30] +
push eax  +
push 3  +
push [ebp+arg_8]  +
mov [ebp+var_30] ecx +
push [ebp+arg_4]  +
lea ecx [ebp+arg_14] +
push [ebp+arg_0]  +
mov [ebp+var_2C] edx +
mov [ebp+var_24] edx +
mov [ebp+var_1C] edx +
mov [ebp+var_14] edx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] edx +
mov [ebp+var_4] edx +
call ds:EventWrite  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_104E534 0 +
jz loc_1039D4B  +
mov al byte_104E538 +
cmp al 2 +
jnb loc_1039D01  +
test al al +
jnz loc_1039D4B  +
mov ecx dword_104E524 +
mov edx 20000002h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_1039D4B  +
mov ecx dword_104E52C +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_104E528 +
jnz loc_1039D4B  +
cmp eax ecx +
jnz loc_1039D4B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push offset dword_1009928  +
push dword_104E50C  +
push dword_104E508  +
call sub_1039C61  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push offset aSdiagWsDHr0x08  +
push [ebp+arg_0]  +
call sub_1014247  +
add esp 14h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
push esi  +
test eax eax +
jnz loc_1039D9A  +
mov eax 80070057h +
push eax  +
push 2E3h  +
push offset aSdpxmlgetrootn  +
push 1  +
mov esi eax +
call sub_1039CE6  +
jmp loc_1039DFA  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_1039DAF  +
mov eax 80070057h +
push eax  +
push 2E4h  +
jmp loc_1039DEB  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov esi eax +
test esi esi +
jge loc_1039DCA  +
push esi  +
push 2E7h  +
jmp loc_1039DED  +
cmp esi 1 +
jz loc_1039DE0  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039DE0  +
mov [edi] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1039DF9  +
mov eax 80004005h +
push eax  +
push 2E8h  +
mov esi eax +
push offset aSdpxmlgetrootn  +
push 1  +
call sub_1039CE6  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039E07  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
push esi  +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jnz loc_1039E42  +
mov eax 80070057h +
push eax  +
push 395h  +
push offset aSdpxmlgetnode  +
push 1  +
mov esi eax +
call sub_1039CE6  +
jmp loc_1039F02  +
cmp [ebp+arg_C] eax +
jnz loc_1039E54  +
mov eax 80070057h +
push eax  +
push 396h  +
jmp loc_1039E2F  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi eax +
jnz loc_1039E81  +
cmp edi eax +
jnz loc_1039E81  +
mov eax 80070057h +
push eax  +
push 399h  +
push offset aSdpxmlgetnode  +
push 1  +
mov esi eax +
call sub_1039CE6  +
jmp loc_1039F01  +
push ebx  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov ebx eax +
test ebx ebx +
jnz loc_1039E9E  +
mov eax 8007000Eh +
push eax  +
push 39Dh  +
jmp loc_1039EE7  +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
test esi esi +
jz loc_1039EAC  +
mov eax [esi] +
push esi  +
jmp loc_1039EAF  +
mov eax [edi] +
push edi  +
call dword ptr [eax+94h]  +
mov esi eax +
test esi esi +
jge loc_1039EC3  +
push esi  +
push 3A6h  +
jmp loc_1039EE9  +
cmp esi 1 +
jz loc_1039EDC  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039EDC  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1039EF5  +
mov eax 80004005h +
push eax  +
push 3A7h  +
mov esi eax +
push offset aSdpxmlgetnode  +
push 1  +
call sub_1039CE6  +
test ebx ebx +
jz loc_1039F00  +
push ebx  +
call ds:SysFreeString  +
pop ebx  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039F0F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
inc edi  +
mov [ebp+var_8] edi +
test ebx ebx +
jnz loc_1039F45  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 419h  +
jmp loc_1039FB9  +
cmp [ebp+arg_4] 0 +
jnz loc_1039F5A  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 41Ah  +
jmp loc_1039FB9  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039F6B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+24h]  +
mov esi eax +
test esi esi +
jl loc_1039FAB  +
mov eax [ebp+var_4] +
cmp esi edi +
jz loc_1039FC6  +
test eax eax +
jz loc_1039FC6  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jl loc_1039FB3  +
cmp [ebp+var_8] edi +
jnz loc_1039F5A  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_1039FCB  +
push esi  +
push 420h  +
jmp loc_1039FB9  +
push esi  +
push 428h  +
push offset aSdpxmlnextnode  +
push edi  +
call sub_1039CE6  +
jmp loc_1039FCB  +
mov esi 80004005h +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1039FD8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
cmp [ebp+arg_8] ebx +
jnz loc_103A01C  +
mov esi 80070057h +
push esi  +
push 4D6h  +
push offset aSdpxmlappend  +
push 1  +
call sub_1039CE6  +
jmp loc_103A0E3  +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_103A06B  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_1039D6D  +
mov esi eax +
cmp esi ebx +
jge loc_103A03F  +
push esi  +
push 4DDh  +
jmp loc_103A0BF  +
mov edi [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_8]  +
call sub_1039D6D  +
mov esi eax +
test esi esi +
jge loc_103A08B  +
push esi  +
push 4E6h  +
push offset aSdpxmlappend  +
push 1  +
call sub_1039CE6  +
mov ebx [ebp+var_4] +
jmp loc_103A0CB  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_103A042  +
mov esi 80004003h +
push esi  +
push 4E1h  +
push offset aSdpxmlappend  +
push 1  +
call sub_1039CE6  +
jmp loc_103A0E2  +
mov ebx [ebp+var_4] +
mov eax [ebx] +
lea ecx [ebp+var_C] +
push ecx  +
push 0FFFFFFFFh  +
push ebx  +
call dword ptr [eax+60h]  +
mov esi eax +
test esi esi +
jge loc_103A0A8  +
push esi  +
push 4E9h  +
jmp loc_103A0BF  +
mov eax [edi] +
push 0  +
push [ebp+var_C]  +
push edi  +
call dword ptr [eax+54h]  +
mov esi eax +
test esi esi +
jge loc_103A0CB  +
push esi  +
push 4ECh  +
push offset aSdpxmlappend  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_103A0D8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test ebx ebx +
jz loc_103A0E2  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop edi  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_103A0F0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and dword ptr [ebp+var_4] 0 +
push esi  +
test eax eax +
jnz loc_103A11E  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 5CDh  +
jmp loc_103A149  +
cmp [ebp+arg_4] 0 +
jnz loc_103A133  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 5CEh  +
jmp loc_103A149  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_103A157  +
push esi  +
push 5D1h  +
push offset aSdpxmlchecknod  +
push 1  +
call sub_1039CE6  +
jmp loc_103A180  +
push [ebp+arg_4]  +
push dword ptr [ebp+var_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103A180  +
push [ebp+arg_4]  +
xor esi esi +
push dword ptr [ebp+var_4]  +
inc esi  +
push offset aNodeParsingMis  +
push esi  +
call sub_1014247  +
add esp 10h +
cmp dword ptr [ebp+var_4] 0 +
jz loc_103A18F  +
push dword ptr [ebp+var_4]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_10] ebx +
mov [ebp+var_C] edi +
cmp [ebp+arg_8] edi +
jnz loc_103A1D7  +
mov esi 80070057h +
push esi  +
push 687h  +
push offset aSdpxmlgetattri  +
push 1  +
call sub_1039CE6  +
jmp loc_103A2E9  +
cmp [ebp+arg_C] edi +
jnz loc_103A1E9  +
mov esi 80070057h +
push esi  +
push 688h  +
jmp loc_103A1C6  +
cmp [ebp+arg_0] edi +
jz loc_103A238  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
call sub_1039D6D  +
mov esi eax +
cmp esi edi +
jge loc_103A21A  +
push esi  +
push 68Fh  +
push offset aSdpxmlgetattri  +
push 1  +
call sub_1039CE6  +
mov ebx [ebp+var_10] +
jmp loc_103A2DF  +
mov ebx [ebp+var_10] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+44h]  +
mov esi eax +
cmp esi edi +
jge loc_103A26A  +
push esi  +
push 692h  +
jmp loc_103A2D3  +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_103A24F  +
mov esi 80004003h +
push esi  +
push 694h  +
jmp loc_103A1C6  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi edi +
jge loc_103A26A  +
push esi  +
push 696h  +
jmp loc_103A1C6  +
push [ebp+arg_8]  +
call ds:SysAllocString  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_103A287  +
mov esi 8007000Eh +
push esi  +
push 69Ah  +
jmp loc_103A2D3  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi edi +
jge loc_103A2A5  +
push esi  +
push 69Dh  +
jmp loc_103A2D3  +
cmp esi 1 +
jz loc_103A2C8  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_103A2C8  +
push [ebp+arg_C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
cmp esi edi +
jge loc_103A2DF  +
push esi  +
push 6A1h  +
jmp loc_103A2D3  +
mov esi 80004005h +
push esi  +
push 69Eh  +
push offset aSdpxmlgetattri  +
push 1  +
call sub_1039CE6  +
cmp ebx edi +
jz loc_103A2E9  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_103A2F9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_103A309  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] edi +
cmp [ebp+var_C] edi +
jz loc_103A317  +
push [ebp+var_C]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp [ebp+arg_0] edi +
jnz loc_103A348  +
mov eax 80070057h +
push eax  +
push 96Bh  +
jmp loc_103A358  +
cmp [ebp+arg_4] edi +
jnz loc_103A368  +
mov eax 80070057h +
push eax  +
push 96Ch  +
push offset aSdpgetnextrepo  +
push 1  +
mov esi eax +
call sub_1039CE6  +
jmp loc_103A3E6  +
push ebx  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_103A37F  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 96Dh  +
jmp loc_103A3C8  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103A3A8  +
push esi  +
push 970h  +
push offset aSdpgetnextrepo  +
push 1  +
call sub_1039CE6  +
mov edi [ebp+var_8] +
jmp loc_103A3E5  +
mov edi [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
push offset aId_1  +
push edi  +
push 0  +
call sub_103A19B  +
mov esi eax +
test esi esi +
jge loc_103A3D6  +
push esi  +
push 973h  +
push offset aSdpgetnextrepo  +
push 1  +
call sub_1039CE6  +
jmp loc_103A3E5  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+var_4] +
xor edi edi +
and [ebp+var_4] edi +
mov [ebx] eax +
pop ebx  +
cmp [ebp+var_4] 0 +
jz loc_103A3F9  +
push [ebp+var_4]  +
call ds:SysFreeString  +
and [ebp+var_4] 0 +
test edi edi +
jz loc_103A403  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp edi ebx +
jnz loc_103A444  +
mov eax 80070057h +
push eax  +
push 359h  +
push offset aSdpxmlgetnumch  +
push 1  +
mov [ebp+var_8] eax +
call sub_1039CE6  +
jmp loc_103A48B  +
cmp [ebp+arg_4] ebx +
jnz loc_103A456  +
mov eax 80070057h +
push eax  +
push 35Ah  +
jmp loc_103A433  +
push esi  +
jmp loc_103A464  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
inc ebx  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call sub_1039F1B  +
mov esi [ebp+var_4] +
test esi esi +
jnz loc_103A459  +
mov eax [edi] +
push edi  +
call dword ptr [eax+28h]  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
test esi esi +
jz loc_103A48A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
cmp ebx edi +
jnz loc_103A4D4  +
mov eax 80070057h +
push eax  +
push 316h  +
mov esi eax +
push offset aSdpxmlgetchild  +
push 1  +
call sub_1039CE6  +
jmp loc_103A5A9  +
cmp [ebp+arg_C] edi +
jnz loc_103A4E6  +
mov eax 80070057h +
push eax  +
push 317h  +
jmp loc_103A4C1  +
cmp [ebp+arg_0] edi +
jz loc_103A532  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_1039D6D  +
mov esi eax +
test esi esi +
jge loc_103A517  +
push esi  +
push 31Eh  +
push offset aSdpxmlgetchild  +
push 1  +
call sub_1039CE6  +
mov edi [ebp+var_8] +
jmp loc_103A59F  +
mov edi [ebp+var_8] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+30h]  +
mov esi eax +
test esi esi +
jge loc_103A564  +
push esi  +
push 321h  +
jmp loc_103A57C  +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_103A549  +
mov esi 80004003h +
push esi  +
push 324h  +
jmp loc_103A4C3  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jge loc_103A564  +
push esi  +
push 326h  +
jmp loc_103A4C3  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_103A410  +
mov esi eax +
test esi esi +
jge loc_103A58A  +
push esi  +
push 32Ah  +
push offset aSdpxmlgetchild  +
push 1  +
call sub_1039CE6  +
jmp loc_103A59F  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_C] +
mov [ebx] eax +
mov eax [ebp+var_C] +
mov [ecx] eax +
mov eax [ebx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
test edi edi +
jz loc_103A5A9  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_103A5B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp [ebp+arg_0] ebx +
jz loc_103A629  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
call sub_1039D6D  +
mov esi eax +
cmp esi ebx +
jge loc_103A5FF  +
push esi  +
push 478h  +
jmp loc_103A6B8  +
mov edi [ebp+var_10] +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
cmp [ebp+arg_8] ebx +
jz loc_103A64C  +
push ebx  +
push [ebp+arg_8]  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103A663  +
push esi  +
push 486h  +
jmp loc_103A6B8  +
mov edi [ebp+arg_4] +
cmp edi ebx +
jnz loc_103A602  +
mov esi 80004003h +
push esi  +
push 47Ch  +
push offset aSdpxmlmerge  +
push 1  +
call sub_1039CE6  +
jmp loc_103A6EB  +
push [ebp+arg_C]  +
push ebx  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103A663  +
push esi  +
push 489h  +
jmp loc_103A6B8  +
mov [ebp+arg_0] ebx +
cmp [ebp+var_8] ebx +
jbe loc_103A6C4  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103A67B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_C]  +
call sub_1039F1B  +
mov esi eax +
cmp esi ebx +
jl loc_103A6AA  +
mov eax [edi] +
push ebx  +
push [ebp+var_4]  +
push edi  +
call dword ptr [eax+54h]  +
mov esi eax +
cmp esi ebx +
jl loc_103A6B2  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_8] +
jb loc_103A66B  +
jmp loc_103A6C4  +
push esi  +
push 494h  +
jmp loc_103A6B8  +
push esi  +
push 497h  +
push offset aSdpxmlmerge  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103A6D1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_103A6DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103A6EB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp [ebp+arg_0] edi +
jnz loc_103A72B  +
mov esi 80070057h +
push esi  +
push 991h  +
push offset aSdpgetpackagei  +
push 1  +
call sub_1039CE6  +
jmp loc_103A91E  +
cmp [ebp+arg_4] edi +
jnz loc_103A73D  +
mov esi 80070057h +
push esi  +
push 992h  +
jmp loc_103A71A  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103A76B  +
push esi  +
push 995h  +
push offset aSdpgetpackagei  +
push 1  +
call sub_1039CE6  +
jmp loc_103A907  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
cmp esi edi +
jge loc_103A797  +
push esi  +
push 99Dh  +
push offset aSdpgetpackagei  +
push 1  +
call sub_1039CE6  +
mov edi [ebp+var_4] +
jmp loc_103A907  +
mov edi [ebp+var_4] +
push ebx  +
mov ebx offset aData +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jl loc_103A8F4  +
cmp esi 1 +
jz loc_103A8EF  +
test edi edi +
jz loc_103A8EF  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103A7F0  +
push esi  +
push 9A2h  +
push offset aSdpgetpackagei  +
push 1  +
jmp loc_103A897  +
mov edi [ebp+var_4] +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103A80B  +
push esi  +
push 9A3h  +
jmp loc_103A8FA  +
xor ebx ebx +
inc ebx  +
cmp esi ebx +
jz loc_103A8DF  +
test edi edi +
jz loc_103A8DF  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103A842  +
push esi  +
push 9A7h  +
jmp loc_103A891  +
mov edi [ebp+var_4] +
push offset aComputerinform  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103A867  +
push esi  +
push 9A8h  +
push offset aSdpgetpackagei  +
push ebx  +
jmp loc_103A901  +
cmp esi ebx +
jz loc_103A8D5  +
test edi edi +
jz loc_103A8D5  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103A8A1  +
push esi  +
push 9ACh  +
push offset aSdpgetpackagei  +
push ebx  +
call sub_1039CE6  +
mov edi [ebp+var_4] +
jmp loc_103A906  +
mov edi [ebp+var_4] +
push offset aPackageinforma  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103A8BD  +
push esi  +
push 9ADh  +
jmp loc_103A85C  +
cmp esi ebx +
jz loc_103A8CE  +
test edi edi +
jz loc_103A8CE  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor edi edi +
jmp loc_103A906  +
mov esi 80004005h +
jmp loc_103A8B5  +
mov esi 80004005h +
jmp loc_103A856  +
mov esi 80004005h +
push esi  +
push 9A3h  +
jmp loc_103A85C  +
mov esi 80004005h +
push esi  +
push 99Eh  +
push offset aSdpgetpackagei  +
push 1  +
call sub_1039CE6  +
pop ebx  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_103A914  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jz loc_103A91E  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_C] edi +
mov [ebp+var_4] ebx +
mov [ebp+var_8] edi +
cmp [ebp+arg_0] edi +
jnz loc_103A964  +
mov esi 80070057h +
push esi  +
push 9C9h  +
push offset aSdpisrootcause  +
push 1  +
call sub_1039CE6  +
jmp loc_103AAC7  +
cmp [ebp+arg_4] edi +
jnz loc_103A976  +
mov esi 80070057h +
push esi  +
push 9CAh  +
jmp loc_103A953  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103A998  +
push esi  +
push 9CDh  +
jmp loc_103AAA2  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_C]  +
call sub_1039F1B  +
mov esi eax +
cmp esi edi +
jge loc_103A9B2  +
push esi  +
push 9D1h  +
jmp loc_103A9FE  +
mov ebx [ebp+var_4] +
mov edi offset aData +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jl loc_103AA9C  +
cmp esi 1 +
jz loc_103AA97  +
test ebx ebx +
jz loc_103AA97  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_C]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103AA12  +
push esi  +
push 9D6h  +
push offset aSdpisrootcause  +
push 1  +
call sub_1039CE6  +
mov ebx [ebp+var_4] +
jmp loc_103AAAE  +
mov ebx [ebp+var_4] +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103AA2A  +
push esi  +
push 9D7h  +
jmp loc_103AAA2  +
xor edi edi +
inc edi  +
cmp esi edi +
jz loc_103AA8A  +
test ebx ebx +
jz loc_103AA8A  +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
call dword ptr [eax+68h]  +
mov esi eax +
test esi esi +
jge loc_103AA53  +
push esi  +
push 9DAh  +
push offset aSdpisrootcause  +
push edi  +
jmp loc_103AAA9  +
push offset aNotChecked  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103AA82  +
push offset aNotDetected  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103AA82  +
mov eax [ebp+arg_4] +
mov [eax] edi +
jmp loc_103AAAE  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
jmp loc_103AAAE  +
mov esi 80004005h +
push esi  +
push 9D7h  +
jmp loc_103AA4B  +
mov esi 80004005h +
push esi  +
push 9D2h  +
push offset aSdpisrootcause  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_C] +
xor edi edi +
cmp eax edi +
jz loc_103AABD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jz loc_103AAC7  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
cmp [ebp+var_8] edi +
jz loc_103AAD5  +
push [ebp+var_8]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] ebx +
mov [ebp+var_4] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_103AB1F  +
mov esi 80070057h +
push esi  +
push 9FDh  +
push offset aSdpisresolutio  +
push 1  +
call sub_1039CE6  +
jmp loc_103AD94  +
cmp [ebp+arg_4] ebx +
jnz loc_103AB31  +
mov esi 80070057h +
push esi  +
push 9FEh  +
jmp loc_103AB0E  +
cmp [ebp+arg_8] ebx +
jnz loc_103AB43  +
mov esi 80070057h +
push esi  +
push 9FFh  +
jmp loc_103AB0E  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
push ebx  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103AB65  +
push esi  +
push 0A02h  +
jmp loc_103AD6F  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
cmp esi ebx +
jge loc_103AB82  +
push esi  +
push 0A06h  +
jmp loc_103ACC0  +
mov edi [ebp+var_4] +
mov ebx offset aData +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jl loc_103AD69  +
cmp esi 1 +
jz loc_103AD64  +
test edi edi +
jz loc_103AD64  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103ABD3  +
push esi  +
push 0A0Bh  +
jmp loc_103ACC0  +
mov edi [ebp+var_4] +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103ABEE  +
push esi  +
push 0A0Ch  +
jmp loc_103AD6F  +
cmp esi 1 +
jz loc_103AD5A  +
test edi edi +
jz loc_103AD5A  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push edi  +
call dword ptr [eax+68h]  +
mov esi eax +
test esi esi +
jge loc_103AC1A  +
push esi  +
push 0A0Fh  +
jmp loc_103AD6F  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_103AC2B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push 0  +
call sub_103A499  +
mov esi eax +
test esi esi +
jge loc_103AC4E  +
push esi  +
push 0A13h  +
jmp loc_103AD6F  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103AC72  +
push esi  +
push 0A17h  +
jmp loc_103ACC0  +
mov edi [ebp+var_4] +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103AC8D  +
push esi  +
push 0A18h  +
jmp loc_103AD6F  +
cmp esi 1 +
jz loc_103AD50  +
test edi edi +
jz loc_103AD50  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103ACD4  +
push esi  +
push 0A1Ch  +
push offset aSdpisresolutio  +
push 1  +
call sub_1039CE6  +
mov edi [ebp+var_4] +
jmp loc_103AD7B  +
mov edi [ebp+var_4] +
push ebx  +
push edi  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103ACEF  +
push esi  +
push 0A1Dh  +
jmp loc_103AD6F  +
cmp esi 1 +
jz loc_103AD49  +
test edi edi +
jz loc_103AD49  +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push edi  +
call dword ptr [eax+68h]  +
mov esi eax +
test esi esi +
jge loc_103AD10  +
push esi  +
push 0A20h  +
jmp loc_103AD6F  +
mov ebx ds:_wcsicmp +
push offset aNotRun  +
push [ebp+var_C]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_103AD41  +
push offset aNotRun  +
push [ebp+var_10]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103AD41  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_103AD7B  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
jmp loc_103AD7B  +
mov esi 80004005h +
jmp loc_103ACE4  +
mov esi 80004005h +
jmp loc_103AC82  +
mov esi 80004005h +
jmp loc_103ABE3  +
mov esi 80004005h +
push esi  +
push 0A07h  +
push offset aSdpisresolutio  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_8] +
xor ebx ebx +
cmp eax ebx +
jz loc_103AD8A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jz loc_103AD94  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov edi ds:SysFreeString +
cmp [ebp+var_C] ebx +
jz loc_103ADA7  +
push [ebp+var_C]  +
call edi  +
mov [ebp+var_C] ebx +
cmp [ebp+var_10] ebx +
jz loc_103ADB1  +
push [ebp+var_10]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_8] edi +
mov [ebp+var_4] ebx +
mov [ebp+var_C] edi +
mov [ebp+var_10] edi +
cmp [ebp+arg_0] edi +
jnz loc_103ADFD  +
mov esi 80070057h +
push esi  +
push 0A43h  +
push offset aSdpisrootcau_0  +
push 1  +
call sub_1039CE6  +
jmp loc_103B0BD  +
cmp [ebp+arg_4] edi +
jnz loc_103AE0F  +
mov esi 80070057h +
push esi  +
push 0A44h  +
jmp loc_103ADEC  +
cmp [ebp+arg_8] edi +
jnz loc_103AE21  +
mov esi 80070057h +
push esi  +
push 0A45h  +
jmp loc_103ADEC  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103AE43  +
push esi  +
push 0A48h  +
jmp loc_103B098  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
cmp esi edi +
jge loc_103AE60  +
push esi  +
push 0A4Ch  +
jmp loc_103AF9E  +
mov ebx [ebp+var_4] +
mov edi offset aData +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jl loc_103B092  +
cmp esi 1 +
jz loc_103B08D  +
test ebx ebx +
jz loc_103B08D  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103AEB1  +
push esi  +
push 0A51h  +
jmp loc_103AF9E  +
mov ebx [ebp+var_4] +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103AECC  +
push esi  +
push 0A52h  +
jmp loc_103B098  +
cmp esi 1 +
jz loc_103B083  +
test ebx ebx +
jz loc_103B083  +
mov eax [ebx] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
call dword ptr [eax+68h]  +
mov esi eax +
test esi esi +
jge loc_103AEF8  +
push esi  +
push 0A55h  +
jmp loc_103B098  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_103AF09  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push 0  +
call sub_103A499  +
mov esi eax +
test esi esi +
jge loc_103AF2C  +
push esi  +
push 0A59h  +
jmp loc_103B098  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103AF50  +
push esi  +
push 0A5Dh  +
jmp loc_103AF9E  +
mov ebx [ebp+var_4] +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103AF6B  +
push esi  +
push 0A5Eh  +
jmp loc_103B098  +
cmp esi 1 +
jz loc_103B079  +
test ebx ebx +
jz loc_103B079  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103AFB2  +
push esi  +
push 0A62h  +
push offset aSdpisrootcau_0  +
push 1  +
call sub_1039CE6  +
mov ebx [ebp+var_4] +
jmp loc_103B0A4  +
mov ebx [ebp+var_4] +
push edi  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103AFCD  +
push esi  +
push 0A63h  +
jmp loc_103B098  +
cmp esi 1 +
jz loc_103B06F  +
test ebx ebx +
jz loc_103B06F  +
mov eax [ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push ebx  +
call dword ptr [eax+68h]  +
mov esi eax +
test esi esi +
jge loc_103AFF9  +
push esi  +
push 0A66h  +
jmp loc_103B098  +
mov edi ds:_wcsicmp +
push offset aDetected  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_103B02F  +
push offset aFixed  +
push [ebp+var_10]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103B04F  +
push offset aNotFixed  +
push [ebp+var_10]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103B04F  +
push offset aNotFixed  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_103B05A  +
push offset aFixed  +
push [ebp+var_10]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_103B05A  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_103B0A4  +
push [ebp+var_10]  +
push [ebp+var_C]  +
call edi  +
pop ecx  +
neg eax  +
pop ecx  +
mov ecx [ebp+arg_8] +
sbb eax eax +
mov [ecx] eax +
jmp loc_103B0A4  +
mov esi 80004005h +
jmp loc_103AFC2  +
mov esi 80004005h +
jmp loc_103AF60  +
mov esi 80004005h +
jmp loc_103AEC1  +
mov esi 80004005h +
push esi  +
push 0A4Dh  +
push offset aSdpisrootcau_0  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_8] +
xor edi edi +
cmp eax edi +
jz loc_103B0B3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jz loc_103B0BD  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
cmp [ebp+var_C] edi +
mov edi ds:SysFreeString +
jz loc_103B0D1  +
push [ebp+var_C]  +
call edi  +
and [ebp+var_C] 0 +
cmp [ebp+var_10] 0 +
jz loc_103B0DC  +
push [ebp+var_10]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_103B129  +
mov esi 80070057h +
push esi  +
push 0A93h  +
push offset aSdpparsereport  +
push 1  +
call sub_1039CE6  +
jmp loc_103B4B0  +
cmp [ebp+arg_4] ebx +
jnz loc_103B13B  +
mov esi 80070057h +
push esi  +
push 0A94h  +
jmp loc_103B118  +
cmp [ebp+arg_8] ebx +
jnz loc_103B14D  +
mov esi 80070057h +
push esi  +
push 0A95h  +
jmp loc_103B118  +
cmp [ebp+arg_C] ebx +
jnz loc_103B15F  +
mov esi 80070057h +
push esi  +
push 0A96h  +
jmp loc_103B118  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103B18D  +
push esi  +
push 0A99h  +
push offset aSdpparsereport  +
push 1  +
call sub_1039CE6  +
jmp loc_103B489  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_1039F1B  +
mov esi eax +
cmp esi ebx +
jge loc_103B1B7  +
push esi  +
push 0AA0h  +
push offset aSdpparsereport  +
push 1  +
call sub_1039CE6  +
jmp loc_103B46C  +
push offset aHeader  +
push [ebp+var_C]  +
call sub_103A0FD  +
mov esi eax +
cmp esi ebx +
jge loc_103B1D2  +
push esi  +
push 0AA1h  +
jmp loc_103B1A6  +
xor edi edi +
inc edi  +
cmp esi edi +
jz loc_103B44C  +
cmp [ebp+var_C] ebx +
jz loc_103B44C  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_4]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103B206  +
push esi  +
push 0AA4h  +
push offset aSdpparsereport  +
push edi  +
jmp loc_103B1AD  +
mov ebx [ebp+var_8] +
push offset aPackage  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103B222  +
push esi  +
push 0AA5h  +
jmp loc_103B1FE  +
cmp esi edi +
jz loc_103B442  +
test ebx ebx +
jz loc_103B442  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_103B243  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 0  +
call sub_103A499  +
mov esi eax +
test esi esi +
jge loc_103B261  +
push esi  +
push 0AA9h  +
jmp loc_103B1FE  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov ebx [ebp+var_4] +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103B289  +
push esi  +
push 0AADh  +
jmp loc_103B1FE  +
push offset aProblem  +
push [ebp+var_8]  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103B2A7  +
push esi  +
push 0AAEh  +
jmp loc_103B1FE  +
cmp esi edi +
jz loc_103B438  +
cmp [ebp+var_8] 0 +
jz loc_103B438  +
test ebx ebx +
jz loc_103B2C7  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
push 0  +
call sub_103A499  +
mov esi eax +
test esi esi +
jge loc_103B2EA  +
push esi  +
push 0AB2h  +
jmp loc_103B1FE  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_4]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103B307  +
push esi  +
push 0ABAh  +
jmp loc_103B1FE  +
push offset aDetectioninfor  +
push [ebp+var_10]  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103B325  +
push esi  +
push 0ABBh  +
jmp loc_103B1FE  +
cmp esi edi +
jz loc_103B42E  +
cmp [ebp+var_10] 0 +
jz loc_103B42E  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_4]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103B362  +
push esi  +
push 0AC2h  +
push offset aSdpparsereport  +
push edi  +
call sub_1039CE6  +
mov ebx [ebp+var_18] +
jmp loc_103B462  +
mov ebx [ebp+var_18] +
push offset aRootcauseinfor  +
push ebx  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103B381  +
push esi  +
push 0AC3h  +
jmp loc_103B457  +
cmp esi edi +
jz loc_103B424  +
test ebx ebx +
jz loc_103B424  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_103B3A2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_10]  +
push 0  +
call sub_103A499  +
mov esi eax +
test esi esi +
jge loc_103B3C5  +
push esi  +
push 0AC7h  +
jmp loc_103B457  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_4]  +
call sub_1039F1B  +
mov esi eax +
test esi esi +
jge loc_103B3DF  +
push esi  +
push 0ACEh  +
jmp loc_103B457  +
push offset aDetailedinform  +
push [ebp+var_14]  +
call sub_103A0FD  +
mov esi eax +
test esi esi +
jge loc_103B3FA  +
push esi  +
push 0ACFh  +
jmp loc_103B457  +
cmp esi edi +
jz loc_103B41D  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_103B41D  +
mov ecx [ebp+var_C] +
mov edx [ebp+arg_4] +
and [ebp+var_14] 0 +
mov [edx] ecx +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov [eax] ebx +
jmp loc_103B479  +
mov esi 80004005h +
jmp loc_103B3F2  +
mov esi 80004005h +
jmp loc_103B376  +
mov esi 80004005h +
jmp loc_103B31A  +
mov esi 80004005h +
jmp loc_103B29C  +
mov esi 80004005h +
jmp loc_103B21A  +
mov esi 80004005h +
push esi  +
push 0AA1h  +
push offset aSdpparsereport  +
push edi  +
call sub_1039CE6  +
test ebx ebx +
jz loc_103B46C  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_103B479  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
xor ebx ebx +
pop edi  +
cmp eax ebx +
jz loc_103B489  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103B496  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_103B4A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_103B4B0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] edi +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_103B4EC  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 0AF5h  +
jmp loc_103B568  +
cmp [ebp+arg_4] ebx +
jnz loc_103B500  +
mov eax 80070057h +
push eax  +
mov esi eax +
push 0AF6h  +
jmp loc_103B568  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_103B0EA  +
mov esi eax +
cmp esi ebx +
jge loc_103B531  +
push esi  +
push 0AFCh  +
push offset aSdpaddmetapack  +
push 1  +
call sub_1039CE6  +
mov edi [ebp+var_8] +
jmp loc_103B574  +
mov edi [ebp+var_8] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1009454  +
push edi  +
call dword ptr [eax]  +
mov esi eax +
cmp esi ebx +
jge loc_103B550  +
push esi  +
push 0AFFh  +
jmp loc_103B568  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push ebx  +
call sub_1039FE6  +
mov esi eax +
cmp esi ebx +
jge loc_103B574  +
push esi  +
push 0B02h  +
push offset aSdpaddmetapack  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103B584  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_103B591  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103B59E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jz loc_103B5A8  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_10] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_103B5FE  +
mov esi 80070057h +
push esi  +
push 0B3Eh  +
push offset aSdpfilterrepor  +
push 1  +
call sub_1039CE6  +
jmp loc_103B908  +
push 800h  +
call sub_10361DD  +
pop ecx  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_103B61D  +
mov esi 8007000Eh +
push esi  +
push 0B42h  +
jmp loc_103B5ED  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+arg_0]  +
call sub_103B0EA  +
mov esi eax +
cmp esi ebx +
jge loc_103B63F  +
push esi  +
push 0B45h  +
jmp loc_103B65C  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_10]  +
push ebx  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103B66D  +
push esi  +
push 0B48h  +
push offset aSdpfilterrepor  +
push 1  +
call sub_1039CE6  +
jmp loc_103B8C7  +
mov [ebp+arg_0] ebx +
cmp [ebp+var_18] ebx +
jbe loc_103B8C7  +
push edi  +
mov edi 400h +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103B68F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_1C]  +
call sub_1039F1B  +
mov esi eax +
cmp esi ebx +
jl loc_103B847  +
push offset aRootcause  +
push [ebp+var_4]  +
call sub_103A0FD  +
mov esi eax +
cmp esi ebx +
jl loc_103B8B4  +
cmp esi 1 +
jz loc_103B8AF  +
cmp [ebp+var_4] ebx +
jz loc_103B8AF  +
cmp [ebp+var_8] ebx +
jz loc_103B6DF  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] ebx +
lea eax [ebp+var_8] +
push eax  +
push offset aId_1  +
push [ebp+var_4]  +
push ebx  +
call sub_103A19B  +
mov esi eax +
cmp [ebp+arg_8] ebx +
jbe loc_103B79C  +
cmp [ebp+arg_4] ebx +
jz loc_103B84F  +
cmp [ebp+arg_8] 0 +
jbe loc_103B772  +
lea eax [ebp+var_14] +
push eax  +
mov eax [ebp+arg_4] +
push edi  +
push dword ptr [eax+ebx*4]  +
call sub_101420B  +
mov esi eax +
test esi esi +
jl loc_103B85C  +
push [ebp+var_8]  +
push edi  +
push [ebp+var_C]  +
call sub_100D999  +
mov esi eax +
test esi esi +
jl loc_103B864  +
push offset asc_10017E0  +
push edi  +
push [ebp+var_C]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jl loc_103B86C  +
push [ebp+var_14]  +
mov eax [ebp+arg_4] +
push [ebp+var_C]  +
push dword ptr [eax+ebx*4]  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_103B772  +
inc ebx  +
cmp ebx [ebp+arg_8] +
jb loc_103B70B  +
cmp ebx [ebp+arg_8] +
jnz loc_103B79A  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push 0  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
test esi esi +
jge loc_103B834  +
push esi  +
push 0B6Fh  +
jmp loc_103B89F  +
xor ebx ebx +
cmp [ebp+arg_10] ebx +
jbe loc_103B836  +
cmp [ebp+arg_C] ebx +
jz loc_103B874  +
cmp [ebp+arg_10] 0 +
jbe loc_103B81B  +
lea eax [ebp+var_14] +
push eax  +
mov eax [ebp+arg_C] +
push edi  +
push dword ptr [eax+ebx*4]  +
call sub_101420B  +
mov esi eax +
test esi esi +
jl loc_103B881  +
push [ebp+var_8]  +
push edi  +
push [ebp+var_C]  +
call sub_100D999  +
mov esi eax +
test esi esi +
jl loc_103B889  +
push offset asc_10017E0  +
push edi  +
push [ebp+var_C]  +
call sub_1014151  +
mov esi eax +
test esi esi +
jl loc_103B891  +
push [ebp+var_14]  +
mov eax [ebp+arg_C] +
push [ebp+var_C]  +
push dword ptr [eax+ebx*4]  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_103B81B  +
inc ebx  +
cmp ebx [ebp+arg_10] +
jb loc_103B7B4  +
cmp ebx [ebp+arg_10] +
jz loc_103B834  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push 0  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
test esi esi +
jl loc_103B899  +
xor ebx ebx +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_18] +
jb loc_103B67F  +
jmp loc_103B8C6  +
push esi  +
push 0B52h  +
jmp loc_103B8BA  +
mov esi 80070057h +
push esi  +
push 0B5Dh  +
jmp loc_103B8BA  +
push esi  +
push 0B60h  +
jmp loc_103B89F  +
push esi  +
push 0B63h  +
jmp loc_103B89F  +
push esi  +
push 0B66h  +
jmp loc_103B89F  +
mov esi 80070057h +
push esi  +
push 0B79h  +
jmp loc_103B8BA  +
push esi  +
push 0B7Ch  +
jmp loc_103B89F  +
push esi  +
push 0B7Fh  +
jmp loc_103B89F  +
push esi  +
push 0B82h  +
jmp loc_103B89F  +
push esi  +
push 0B8Bh  +
push offset aSdpfilterrepor  +
push 1  +
call sub_1039CE6  +
xor ebx ebx +
jmp loc_103B8C6  +
mov esi 80004005h +
push esi  +
push 0B53h  +
push offset aSdpfilterrepor  +
push 1  +
call sub_1039CE6  +
pop edi  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103B8D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_103B8E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_103B8EE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_20] +
cmp eax ebx +
jz loc_103B8FB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_24] +
cmp eax ebx +
jz loc_103B908  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] ebx +
jz loc_103B919  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] ebx +
cmp [ebp+var_C] ebx +
jz loc_103B927  +
push [ebp+var_C]  +
call sub_10361ED  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_C] edi +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_18] edi +
cmp [ebp+arg_0] edi +
jnz loc_103B976  +
mov esi 80070057h +
push esi  +
push 0BC4h  +
push offset aSdpmergediffer  +
push 1  +
call sub_1039CE6  +
jmp loc_103BA9E  +
cmp [ebp+arg_4] edi +
jnz loc_103B988  +
mov esi 80070057h +
push esi  +
push 0BC5h  +
jmp loc_103B965  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+arg_0]  +
call sub_103B0EA  +
mov ebx [ebp+var_1C] +
mov esi eax +
cmp esi edi +
jge loc_103B9B1  +
push esi  +
push 0BCBh  +
jmp loc_103BA39  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_4]  +
call sub_103B0EA  +
mov esi eax +
cmp esi edi +
jge loc_103B9D3  +
push esi  +
push 0BD1h  +
jmp loc_103BA39  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_14]  +
call sub_103A6F9  +
mov esi eax +
cmp esi edi +
jge loc_103B9ED  +
push esi  +
push 0BD8h  +
jmp loc_103BA39  +
mov eax [ebx] +
push edi  +
push [ebp+var_18]  +
push ebx  +
call dword ptr [eax+54h]  +
mov esi eax +
cmp esi edi +
jge loc_103BA05  +
push esi  +
push 0BDBh  +
jmp loc_103BA39  +
push [ebp+var_10]  +
push edi  +
push [ebp+var_8]  +
push edi  +
call sub_103A5C4  +
mov esi eax +
cmp esi edi +
jge loc_103BA20  +
push esi  +
push 0BE2h  +
jmp loc_103BA39  +
push [ebp+var_C]  +
push edi  +
push [ebp+var_4]  +
push edi  +
call sub_103A5C4  +
mov esi eax +
cmp esi edi +
jge loc_103BA45  +
push esi  +
push 0BE9h  +
push offset aSdpmergediffer  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_103BA52  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_103BA5F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jz loc_103BA69  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_C] +
pop ebx  +
cmp eax edi +
jz loc_103BA77  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_103BA84  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_103BA91  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
cmp eax edi +
jz loc_103BA9E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_24] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp eax ebx +
jnz loc_103BAFB  +
mov esi 80070057h +
push esi  +
push 0CC5h  +
push offset aSdpmergerootca  +
push 1  +
call sub_1039CE6  +
jmp loc_103BD46  +
cmp [ebp+arg_4] ebx +
jnz loc_103BB0D  +
mov esi 80070057h +
push esi  +
push 0CC6h  +
jmp loc_103BAEA  +
push edi  +
lea ecx [ebp+var_18] +
push ecx  +
push dword ptr [eax]  +
mov edi offset a_Resolutioninf +
push ebx  +
push edi  +
call sub_1039E13  +
mov esi eax +
cmp esi ebx +
jge loc_103BB3D  +
push esi  +
push 0CC9h  +
push offset aSdpmergerootca  +
push 1  +
call sub_1039CE6  +
jmp loc_103BD0F  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_1039E13  +
mov esi eax +
cmp esi ebx +
jge loc_103BB59  +
push esi  +
push 0CCCh  +
jmp loc_103BB2C  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103BB7B  +
push esi  +
push 0CCFh  +
jmp loc_103BCCF  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_28]  +
push ebx  +
call sub_103A499  +
mov esi eax +
cmp esi ebx +
jge loc_103BB9D  +
push esi  +
push 0CD2h  +
jmp loc_103BCCF  +
mov [ebp+arg_4] ebx +
cmp [ebp+var_20] ebx +
jbe loc_103BCDB  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_103BBB9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
cmp [ebp+var_8] ebx +
jz loc_103BBCA  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] ebx +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_24]  +
call sub_103A325  +
mov esi eax +
cmp esi ebx +
jl loc_103BCA1  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_103BCA9  +
xor edi edi +
cmp [ebp+var_1C] ebx +
jbe loc_103BC90  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103BC12  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
cmp [ebp+var_4] ebx +
jz loc_103BC23  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov [ebp+var_4] ebx +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_14]  +
call sub_103A325  +
mov esi eax +
cmp esi ebx +
jl loc_103BCB1  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103BC53  +
inc edi  +
cmp edi [ebp+var_1C] +
jb loc_103BC02  +
jmp loc_103BC90  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+var_10]  +
push [ebp+var_C]  +
call sub_103AAE3  +
mov esi eax +
cmp esi ebx +
jl loc_103BCB9  +
cmp [ebp+var_2C] ebx +
jz loc_103BC90  +
mov edi [ebp+var_18] +
mov eax [edi] +
push ebx  +
push [ebp+var_C]  +
push edi  +
call dword ptr [eax+50h]  +
mov esi eax +
cmp esi ebx +
jl loc_103BCC1  +
mov eax [edi] +
push ebx  +
push [ebp+var_10]  +
push edi  +
call dword ptr [eax+54h]  +
mov esi eax +
cmp esi ebx +
jl loc_103BCC9  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_20] +
jb loc_103BBA9  +
jmp loc_103BCDB  +
push esi  +
push 0CDBh  +
jmp loc_103BCCF  +
push esi  +
push 0CDEh  +
jmp loc_103BCCF  +
push esi  +
push 0CE7h  +
jmp loc_103BCCF  +
push esi  +
push 0CEBh  +
jmp loc_103BCCF  +
push esi  +
push 0CEFh  +
jmp loc_103BCCF  +
push esi  +
push 0CF2h  +
push offset aSdpmergerootca  +
push 1  +
call sub_1039CE6  +
mov eax [ebp+var_24] +
cmp eax ebx +
jz loc_103BCE8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_103BCF5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_103BD02  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103BD0F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
pop edi  +
cmp eax ebx +
jz loc_103BD1D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_28] +
cmp eax ebx +
jz loc_103BD2A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_4] ebx +
jz loc_103BD38  +
push [ebp+var_4]  +
call ds:SysFreeString  +
cmp [ebp+var_8] ebx +
jz loc_103BD46  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] edi +
mov [ebp+var_8] edi +
mov [ebp+var_24] edi +
mov [ebp+var_28] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_30] edi +
mov [ebp+var_40] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_4] edi +
mov [ebp+var_34] edi +
cmp [ebp+arg_0] edi +
jnz loc_103BDAD  +
mov esi 80070057h +
push esi  +
push 0C15h  +
push offset aSdpmergesamere  +
push 1  +
call sub_1039CE6  +
jmp loc_103C205  +
cmp [ebp+arg_4] edi +
jnz loc_103BDBF  +
mov esi 80070057h +
push esi  +
push 0C16h  +
jmp loc_103BD9C  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+arg_0]  +
call sub_103B0EA  +
mov esi eax +
cmp esi edi +
jge loc_103BDE1  +
push esi  +
push 0C1Ch  +
jmp loc_103BE20  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_4]  +
call sub_103B0EA  +
mov esi eax +
cmp esi edi +
jge loc_103BE03  +
push esi  +
push 0C22h  +
jmp loc_103BE20  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_30]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103BE31  +
push esi  +
push 0C2Ch  +
push offset aSdpmergesamere  +
push 1  +
call sub_1039CE6  +
jmp loc_103C167  +
push ebx  +
mov [ebp+arg_0] edi +
cmp [ebp+var_20] edi +
jbe loc_103BF35  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_103BE4E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_103BE5E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp [ebp+var_C] edi +
jz loc_103BE6F  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov [ebp+var_C] edi +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_1C]  +
call sub_103A325  +
mov esi eax +
cmp esi edi +
jl loc_103BF67  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_28]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jl loc_103BF72  +
xor ebx ebx +
cmp [ebp+var_18] edi +
jbe loc_103BEFE  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_103BEBB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
cmp [ebp+var_8] edi +
jz loc_103BECC  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] edi +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_14]  +
call sub_103A325  +
mov esi eax +
cmp esi edi +
jl loc_103BF7D  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103BEFE  +
inc ebx  +
cmp ebx [ebp+var_18] +
jb loc_103BEAB  +
cmp ebx [ebp+var_18] +
jnz loc_103BF16  +
mov eax [ebp+var_28] +
mov ecx [eax] +
push edi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi edi +
jl loc_103BF88  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_20] +
jb loc_103BE3E  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_103BF35  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] edi +
mov eax [ebp+var_1C] +
cmp eax edi +
jz loc_103BF45  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] edi +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_24]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103BF93  +
push esi  +
push 0C5Fh  +
jmp loc_103C15A  +
push esi  +
push 0C37h  +
jmp loc_103C15A  +
push esi  +
push 0C3Dh  +
jmp loc_103C15A  +
push esi  +
push 0C46h  +
jmp loc_103C15A  +
push esi  +
push 0C50h  +
jmp loc_103C15A  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_2C]  +
push edi  +
call sub_103A499  +
mov esi eax +
cmp esi edi +
jge loc_103BFB5  +
push esi  +
push 0C65h  +
jmp loc_103C15A  +
mov [ebp+arg_0] edi +
cmp [ebp+var_20] edi +
jbe loc_103C166  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_103BFD1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp [ebp+var_C] edi +
jz loc_103BFE2  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov [ebp+var_C] edi +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_1C]  +
call sub_103A325  +
mov esi eax +
cmp esi edi +
jl loc_103C11C  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi edi +
jl loc_103C124  +
mov [ebp+arg_4] edi +
cmp [ebp+var_18] edi +
jbe loc_103C0F0  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_103C02B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] edi +
cmp [ebp+var_8] edi +
jz loc_103C03C  +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov [ebp+var_8] edi +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_14]  +
call sub_103A325  +
mov esi eax +
cmp esi edi +
jl loc_103C12C  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103C075  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_18] +
jb loc_103C01B  +
jmp loc_103C0F0  +
lea eax [ebp+var_34] +
push eax  +
push [ebp+var_10]  +
call sub_103A92B  +
mov esi eax +
cmp esi edi +
jl loc_103C134  +
lea eax [ebp+var_38] +
push eax  +
push [ebp+var_4]  +
push [ebp+var_10]  +
call sub_103ADC1  +
mov esi eax +
cmp esi edi +
jl loc_103C13C  +
cmp [ebp+var_34] edi +
jz loc_103C0CD  +
cmp [ebp+var_38] edi +
jg loc_103C0CD  +
jnz loc_103C0F0  +
push [ebp+var_4]  +
lea eax [ebp+var_10] +
push eax  +
call sub_103BAAB  +
mov esi eax +
cmp esi edi +
jge loc_103C0F0  +
push esi  +
push 0C8Dh  +
jmp loc_103C15A  +
mov ebx [ebp+var_24] +
mov eax [ebx] +
push edi  +
push [ebp+var_10]  +
push ebx  +
call dword ptr [eax+50h]  +
mov esi eax +
cmp esi edi +
jl loc_103C144  +
mov eax [ebx] +
push edi  +
push [ebp+var_4]  +
push ebx  +
call dword ptr [eax+54h]  +
mov esi eax +
cmp esi edi +
jl loc_103C14C  +
mov eax [ebp+var_18] +
cmp [ebp+arg_4] eax +
jnz loc_103C10B  +
mov eax [ebp+var_24] +
mov ecx [eax] +
push edi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+54h]  +
mov esi eax +
cmp esi edi +
jl loc_103C154  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_20] +
jb loc_103BFC1  +
jmp loc_103C166  +
push esi  +
push 0C6Eh  +
jmp loc_103C15A  +
push esi  +
push 0C71h  +
jmp loc_103C15A  +
push esi  +
push 0C7Ah  +
jmp loc_103C15A  +
push esi  +
push 0C7Eh  +
jmp loc_103C15A  +
push esi  +
push 0C83h  +
jmp loc_103C15A  +
push esi  +
push 0C87h  +
jmp loc_103C15A  +
push esi  +
push 0C8Ah  +
jmp loc_103C15A  +
push esi  +
push 0C97h  +
push offset aSdpmergesamere  +
push 1  +
call sub_1039CE6  +
pop ebx  +
mov eax [ebp+var_24] +
cmp eax edi +
jz loc_103C174  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_28] +
cmp eax edi +
jz loc_103C181  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_3C] +
cmp eax edi +
jz loc_103C18E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_2C] +
cmp eax edi +
jz loc_103C19B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_30] +
cmp eax edi +
jz loc_103C1A8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_40] +
cmp eax edi +
jz loc_103C1B5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_103C1C2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_1C] +
cmp eax edi +
jz loc_103C1CF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_103C1DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_103C1E9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] edi +
jz loc_103C1F7  +
push [ebp+var_8]  +
call ds:SysFreeString  +
cmp [ebp+var_C] edi +
jz loc_103C205  +
push [ebp+var_C]  +
call ds:SysFreeString  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_103C2EB  +
cmp [ebp+arg_8] 0 +
jz loc_103C2EB  +
mov eax [esi+4] +
mov edi [ebp+arg_1C] +
cmp di [eax+25Ch] +
jz loc_103C269  +
push dword ptr [esi+10h]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push 0  +
push eax  +
push dword ptr [esi]  +
call sub_103DC62  +
test eax eax +
jz loc_103C2EB  +
push dword ptr [esi+4]  +
push edi  +
call sub_103CECC  +
test eax eax +
jz loc_103C2EB  +
push dword ptr [esi+10h]  +
push edi  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+4]  +
call sub_103CBF5  +
test eax eax +
jz loc_103C2EB  +
mov ecx [esi+4] +
mov edx [ecx+240h] +
add edx [ecx+30h] +
mov eax [esi] +
cmp [eax+350h] edx +
jb loc_103C2D5  +
mov edx [eax+0AD0h] +
add edx [eax+0ACCh] +
add edx [ecx+240h] +
add edx [ecx+138h] +
add edx [ecx+30h] +
add edx [eax+244h] +
add edx [eax+13Ch] +
add edx [eax+34h] +
cmp [eax+34Ch] edx +
jb loc_103C2D5  +
xor eax eax +
inc eax  +
jmp loc_103C2ED  +
push dword ptr [esi+10h]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push 0  +
push dword ptr [esi+4]  +
push eax  +
call sub_103DC62  +
jmp loc_103C2ED  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_103C307  +
xor eax eax +
jmp loc_103C34C  +
push dword ptr [esi+10h]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_103DC62  +
test eax eax +
jz loc_103C303  +
cmp [ebp+arg_4] 0 +
jz loc_103C32C  +
xor eax eax +
inc eax  +
jmp loc_103C34C  +
mov eax [esi] +
and [ebp+arg_0] 0 +
push dword ptr [esi+10h]  +
mov ecx [eax+13Ch] +
add ecx [eax+34h] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push [ebp+arg_C]  +
push eax  +
call sub_103D5CC  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
inc edi  +
test esi esi +
jnz loc_103C369  +
xor eax eax +
jmp loc_103C396  +
mov eax [esi+4] +
test eax eax +
jz loc_103C37E  +
push dword ptr [esi+10h]  +
push eax  +
call sub_103CF0F  +
mov edi eax +
and edi 1 +
mov eax [esi] +
test eax eax +
jz loc_103C38F  +
push dword ptr [esi+10h]  +
push eax  +
call sub_103D0C7  +
and edi eax +
push esi  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
cmp edi esi +
jz loc_103C509  +
push 14h  +
mov [edi] esi +
mov [edi+4] esi +
mov [edi+8] esi +
call [ebp+arg_8]  +
mov ebx eax +
pop ecx  +
cmp ebx esi +
jnz loc_103C3D6  +
push esi  +
push 3  +
push edi  +
call sub_103E6B6  +
jmp loc_103C509  +
mov eax [ebp+arg_30] +
mov edi [ebp+arg_C] +
push eax  +
mov [ebx] esi +
mov esi [ebp+arg_2C] +
mov [ebx+10h] eax +
mov [ebx+0Ch] edi +
mov eax [esi+10h] +
add eax 8 +
push eax  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_103CF4C  +
mov [ebx+4] eax +
test eax eax +
jz loc_103C502  +
push [ebp+arg_30]  +
mov ecx [esi+1Ch] +
push [ebp+arg_28]  +
mov [eax+258h] ecx +
push [ebp+arg_24]  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
call sub_103D46C  +
mov [ebx] eax +
test eax eax +
jz loc_103C502  +
lea edi [eax+34Ch] +
mov eax [ebp+arg_2C] +
mov ecx 0C9h +
movs   +
mov ecx [ebx] +
mov dx [eax+20h] +
mov [ecx+0ADAh] dx +
mov ecx [ebx] +
xor edx edx +
mov [ecx+0ADCh] dx +
mov edx [eax+8] +
cmp edx 0EA60h +
ja loc_103C502  +
mov edi [eax+0Ch] +
mov ecx 0FFh +
cmp edi ecx +
ja loc_103C502  +
mov esi [eax+10h] +
cmp esi ecx +
ja loc_103C502  +
test edx edx +
ja loc_103C4B4  +
test edi edi +
ja loc_103C4B4  +
test esi esi +
ja loc_103C4B4  +
mov ecx [ebx] +
and dword ptr [ecx+0AC8h] 0 +
jmp loc_103C4BF  +
mov ecx [ebx] +
add edx 4 +
mov [ecx+0AC8h] edx +
mov ecx [ebx] +
mov edx [ecx+0AC8h] +
add edx 24h +
mov [ecx+0ACCh] edx +
mov ecx [eax+0Ch] +
mov edx [ebx] +
add ecx 8 +
mov [edx+0AD0h] ecx +
mov eax [eax+10h] +
mov ecx [ebx] +
add eax 8 +
mov [ecx+0AD4h] eax +
mov eax [ebx] +
add eax 34Ch +
cmp dword ptr [eax] 0 +
jnz loc_103C4FE  +
mov dword ptr [eax] 7FFFFFFFh +
mov eax ebx +
jmp loc_103C50B  +
push ebx  +
call sub_103C354  +
pop ecx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ecx+250h] +
imul esi esi +
add edx eax +
cmp esi edx +
pop esi  +
jb loc_103C53E  +
cmp eax edx +
ja loc_103C53E  +
xor eax eax +
jmp loc_103C54D  +
push 0  +
push 9  +
push dword ptr [ecx+2Ch]  +
call sub_103E6B6  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
push edi  +
mov [ebp+var_4] esi +
mov ebx 108h +
jle loc_103C583  +
mov ecx [ebp+arg_4] +
mov eax edx +
or dword ptr [eax+4] 0FFFFFFFFh +
mov [eax] esi +
add eax ebx +
dec ecx  +
jnz loc_103C578  +
cmp [ebp+arg_4] esi +
mov [ebp+var_8] esi +
jle loc_103C5F4  +
add edx 4 +
mov [ebp+var_C] edx +
mov edi edx +
cmp dword ptr [edi] 0FFFFFFFFh +
mov [ebp+arg_0] 65h +
jnz loc_103C5E7  +
mov eax [ebp+arg_0] +
dec [ebp+arg_0]  +
test eax eax +
jz loc_103C5E2  +
push [ebp+arg_1C]  +
lea esi [edi+4] +
push 100h  +
push esi  +
call [ebp+arg_14]  +
add esp 0Ch +
test eax eax +
jz loc_103C5DD  +
push [ebp+arg_1C]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 180h  +
push 8502h  +
push esi  +
call [ebp+arg_8]  +
add esp 14h +
mov [edi] eax +
cmp dword ptr [edi] 0FFFFFFFFh +
jz loc_103C59F  +
cmp dword ptr [edi] 0FFFFFFFFh +
jz loc_103C5FE  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add edi ebx +
cmp eax [ebp+arg_4] +
jl loc_103C593  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
push [ebp+var_4]  +
push 4  +
push [ebp+arg_18]  +
call sub_103E6B6  +
mov esi [ebp+var_C] +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_103C63F  +
push [ebp+arg_1C]  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call [ebp+arg_C]  +
push [ebp+arg_1C]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
lea eax [esi+4] +
push eax  +
call [ebp+arg_10]  +
add esp 18h +
or dword ptr [esi] 0FFFFFFFFh +
add esi ebx +
dec edi  +
jnz loc_103C611  +
xor eax eax +
jmp loc_103C5F7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
inc edi  +
test ebx ebx +
jle loc_103C6C7  +
push esi  +
mov esi [ebp+arg_0] +
add esi 4 +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_103C6BD  +
push [ebp+arg_14]  +
and [ebp+arg_4] 0 +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
call [ebp+arg_8]  +
add esp 0Ch +
test eax eax +
jz loc_103C691  +
push [ebp+arg_4]  +
push 4  +
push [ebp+arg_10]  +
call sub_103E6B6  +
xor edi edi +
push [ebp+arg_14]  +
or dword ptr [esi] 0FFFFFFFFh +
and [ebp+arg_4] 0 +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esi+4] +
push eax  +
call [ebp+arg_C]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jnz loc_103C6BD  +
push [ebp+arg_4]  +
push 4  +
push [ebp+arg_10]  +
call sub_103E6B6  +
xor edi edi +
add esi 108h +
dec ebx  +
jnz loc_103C665  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
mov esi [ebp+arg_8] +
lea edx [ecx+esi] +
cmp ecx edx +
jbe loc_103C6F9  +
push 0  +
push 9  +
push [ebp+arg_10]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103C721  +
push [ebp+arg_14]  +
and [ebp+arg_0] 0 +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
push [ebp+arg_4]  +
mov [eax] edx +
push dword ptr [eax+4]  +
call [ebp+arg_C]  +
add esp 14h +
cmp esi eax +
jz loc_103C71E  +
push [ebp+arg_0]  +
push 4  +
jmp loc_103C6ED  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103C736  +
push [ebp+arg_10]  +
sub eax ecx +
push [ebp+arg_C]  +
inc eax  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103C6D4  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+25Ch] +
and eax 0Fh +
xor ebx ebx +
sub eax ebx +
push edi  +
mov [ebp+var_4] 1 +
jz loc_103C7BF  +
dec eax  +
jz loc_103C7A4  +
dec eax  +
dec eax  +
jz loc_103C79A  +
sub eax 0Ch +
jz loc_103C7BF  +
push ebx  +
push 5  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
jmp loc_103C7BF  +
push dword ptr [esi+4]  +
call sub_103EA42  +
jmp loc_103C7AC  +
push dword ptr [esi+4]  +
call sub_103E7A5  +
pop ecx  +
test eax eax +
jz loc_103C7BF  +
push ebx  +
push 8  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
mov [ebp+var_4] ebx +
lea edi [esi+264h] +
mov eax [edi] +
cmp eax ebx +
jz loc_103C7D2  +
push eax  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov [edi] ebx +
lea edi [esi+260h] +
mov eax [edi] +
cmp eax ebx +
jz loc_103C7E5  +
push eax  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov [edi] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+25Ch] +
and eax 0Fh +
sub eax 0 +
jz loc_103C845  +
dec eax  +
jz loc_103C828  +
dec eax  +
dec eax  +
jz loc_103C81E  +
sub eax 0Ch +
jz loc_103C845  +
push 0  +
push 5  +
jmp loc_103C839  +
push dword ptr [esi+4]  +
call sub_103EA1C  +
jmp loc_103C830  +
push dword ptr [esi+4]  +
call sub_103E783  +
pop ecx  +
test eax eax +
jz loc_103C845  +
push 0  +
push 8  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103C848  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+25Ch] +
push edi  +
and eax 0Fh +
xor edi edi +
sub eax edi +
jz loc_103C8E7  +
dec eax  +
jz loc_103C8B0  +
dec eax  +
dec eax  +
jz loc_103C87B  +
push edi  +
push 5  +
jmp loc_103C920  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [esi+24Ch]  +
push dword ptr [esi+264h]  +
push dword ptr [esi+254h]  +
push dword ptr [esi+260h]  +
push dword ptr [esi+4]  +
call sub_103E99D  +
add esp 18h +
test eax eax +
jnz loc_103C91D  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
jmp loc_103C918  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [esi+24Ch]  +
push dword ptr [esi+264h]  +
push dword ptr [esi+254h]  +
push dword ptr [esi+260h]  +
push dword ptr [esi+4]  +
call sub_103E6D9  +
add esp 18h +
test eax eax +
jnz loc_103C91D  +
mov eax [ebp+arg_4] +
mov cx word ptr [ebp+arg_0] +
mov [eax] cx +
jmp loc_103C918  +
mov ecx [esi+24Ch] +
lea eax [esi+254h] +
cmp ecx [eax] +
jb loc_103C91D  +
movzx eax word ptr [eax] +
mov ecx [ebp+arg_4] +
mov [ecx] ax +
movzx eax ax +
push eax  +
push dword ptr [esi+260h]  +
push dword ptr [esi+264h]  +
call memcpy  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_103C92A  +
push edi  +
push 8  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov [ebp-118h] eax +
mov eax [esi+248h] +
lea edi [ebp-10Dh] +
and edi 0FFFFFFFCh +
cmp eax 10Bh +
jnb loc_103C9A9  +
push eax  +
push 0  +
push edi  +
call memset  +
push dword ptr [esi+244h]  +
mov ebx [ebp+10h] +
mov ax [ebp+14h] +
push 0  +
push ebx  +
push 0  +
mov [edi+6] ax +
mov [edi+4] bx +
call dword ptr [esi+28h]  +
add esp 1Ch +
cmp eax 0FFFFFFFFh +
jnz loc_103C9BB  +
push 0  +
push 7  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn   +
***
push dword ptr [esi+244h]  +
lea eax [esi+30h] +
push dword ptr [esi+2Ch]  +
mov [ebp-114h] eax +
push dword ptr [esi+18h]  +
push dword ptr [esi+248h]  +
push edi  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103C9A9  +
push dword ptr [esi+244h]  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+18h]  +
push ebx  +
push dword ptr [ebp-118h]  +
push dword ptr [ebp-114h]  +
call sub_103C6D4  +
test eax eax +
jz loc_103C9A9  +
xor eax eax +
jmp loc_103C9AC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp [esi+254h] edi +
jnz loc_103CA25  +
xor eax eax +
inc eax  +
jmp loc_103CA44  +
push ebx  +
push dword ptr [esi+248h]  +
call dword ptr [esi+8]  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jnz loc_103CA4A  +
push edi  +
push 3  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
push dword ptr [esi+248h]  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
lea edi [ebx+4] +
push edi  +
push esi  +
call sub_103C852  +
test eax eax +
jz loc_103CAD6  +
push [ebp+arg_8]  +
mov ax [esi+254h] +
mov [ebx+6] ax +
push dword ptr [esi+2Ch]  +
lea eax [esi+30h] +
push dword ptr [esi+18h]  +
push dword ptr [esi+248h]  +
push ebx  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103CAD6  +
push [ebp+arg_8]  +
movzx eax word ptr [edi] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+18h]  +
push eax  +
push dword ptr [esi+264h]  +
lea eax [esi+30h] +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103CAD6  +
push [ebp+arg_8]  +
movzx eax word ptr [edi] +
push dword ptr [esi+254h]  +
xor edi edi +
push eax  +
push edi  +
call [ebp+arg_4]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_103CADA  +
push edi  +
push 7  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor edi edi +
jmp loc_103CAE3  +
mov [esi+254h] edi +
xor edi edi +
inc edi  +
push ebx  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov eax edi +
jmp loc_103CA43  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx ecx word ptr [esi+25Ch] +
mov eax ecx +
push edi  +
xor edi edi +
and eax 0Fh +
sub eax edi +
lea ebx [esi+250h] +
mov edx 8000h +
mov [ebx] edx +
mov [esi+264h] edi +
mov [esi+260h] edi +
jz loc_103CBAA  +
dec eax  +
jz loc_103CB7C  +
dec eax  +
dec eax  +
jz loc_103CB41  +
sub eax 0Ch +
jz loc_103CBE6  +
push edi  +
push 5  +
jmp loc_103CB9E  +
xor eax eax +
shr ecx 8 +
inc eax  +
and ecx 1Fh +
shl eax cl +
push esi  +
push offset loc_103C935  +
lea edi [esi+24Ch] +
mov [ebp+var_8] eax +
lea eax [esi+4] +
push eax  +
push edi  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+var_8] +
push dword ptr [esi+8]  +
mov [ebp+var_4] 10000h +
push eax  +
push ebx  +
call sub_103E901  +
add esp 20h +
jmp loc_103CB96  +
lea eax [esi+4] +
push eax  +
lea edi [esi+24Ch] +
push edi  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ebx  +
call sub_103E811  +
add esp 14h +
test eax eax +
jz loc_103CBB2  +
push 0  +
push 8  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103CBE9  +
lea edi [esi+24Ch] +
mov [edi] edx +
push dword ptr [edi]  +
call dword ptr [esi+8]  +
pop ecx  +
mov [esi+264h] eax +
test eax eax +
jz loc_103CBD2  +
push dword ptr [ebx]  +
call dword ptr [esi+8]  +
pop ecx  +
mov [esi+260h] eax +
test eax eax +
jnz loc_103CBE6  +
push 0  +
push 3  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
push esi  +
call sub_103C75E  +
jmp loc_103CBA6  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov [ebp+var_C] eax +
xor eax eax +
push edi  +
mov edi [ebp+arg_1C] +
mov [ebp+var_8] ax +
mov eax [ebp+arg_10] +
mov [esi+28h] eax +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp-2] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp-6] +
push eax  +
push [ebp+arg_4]  +
xor ebx ebx +
mov [ebp+arg_0] ebx +
call [ebp+arg_14]  +
add esp 18h +
mov [ebp+arg_1C] eax +
cmp eax 0FFFFFFFFh +
jnz loc_103CC50  +
push [ebp+arg_0]  +
push 1  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
jmp loc_103CD4E  +
cmp [ebp+arg_C] ebx +
jz loc_103CC5A  +
or word ptr [ebp+var_4+2] 40h +
mov cl byte ptr [ebp+arg_18] +
and cl 0Fh +
lea edx [ebp+arg_0] +
push edi  +
push edx  +
mov edx [esi+250h] +
cmp cl 3 +
mov ecx [esi+254h] +
mov [ebp+arg_0] ebx +
jnz loc_103CD5C  +
sub edx ecx +
push edx  +
mov edx [esi+260h] +
add edx ecx +
push edx  +
mov [esi+244h] edi +
push eax  +
jmp loc_103CD1A  +
cmp ebx 0FFFFFFFFh +
jz loc_103CD2F  +
and [ebp+arg_0] 0 +
push ebx  +
push esi  +
call sub_103C515  +
test eax eax +
jnz loc_103CD3C  +
add [esi+254h] ebx +
mov eax [esi+254h] +
add [esi] ebx +
cmp eax [esi+250h] +
jnz loc_103CCFA  +
lea eax [ebp+arg_18] +
push eax  +
push esi  +
call sub_103C852  +
test eax eax +
jz loc_103CD3C  +
push edi  +
push dword ptr [esi+254h]  +
xor ebx ebx +
push ebx  +
push ebx  +
call [ebp+arg_10]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_103CD57  +
mov eax [ebp+arg_18] +
mov [esi+240h] eax +
mov [esi+254h] ebx +
mov eax [esi+254h] +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx [esi+250h] +
sub ecx eax +
push ecx  +
mov ecx [esi+260h] +
add ecx eax +
push ecx  +
push [ebp+arg_1C]  +
call dword ptr [esi+14h]  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jnz loc_103CC95  +
jmp loc_103CDCF  +
push [ebp+arg_0]  +
push 2  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
and [ebp+arg_0] 0 +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_1C]  +
call dword ptr [esi+1Ch]  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
push ebx  +
push 7  +
jmp loc_103CD34  +
sub edx ecx +
push edx  +
mov edx [esi+260h] +
add edx ecx +
push edx  +
push eax  +
jmp loc_103CDC3  +
cmp ebx 0FFFFFFFFh +
jz loc_103CD2F  +
and [ebp+arg_0] 0 +
push ebx  +
push esi  +
call sub_103C515  +
test eax eax +
jnz loc_103CD3C  +
add [esi+254h] ebx +
mov eax [esi+254h] +
add [esi] ebx +
cmp eax [esi+250h] +
jnz loc_103CDA3  +
push edi  +
push [ebp+arg_10]  +
push esi  +
call sub_103CA0C  +
test eax eax +
jz loc_103CD3C  +
mov eax [esi+254h] +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx [esi+250h] +
sub ecx eax +
push ecx  +
mov ecx [esi+260h] +
add ecx eax +
push ecx  +
push [ebp+arg_1C]  +
call dword ptr [esi+14h]  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jnz loc_103CD6B  +
and [ebp+arg_0] 0 +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_1C]  +
call dword ptr [esi+1Ch]  +
mov eax [esi] +
sub eax [ebp+var_C] +
add esp 0Ch +
push edi  +
push dword ptr [esi+2Ch]  +
mov [ebp+var_10] eax +
push dword ptr [esi+18h]  +
lea eax [ebp+var_10] +
push 10h  +
push eax  +
lea ebx [esi+138h] +
push ebx  +
call sub_103C6D4  +
test eax eax +
jz loc_103CD4E  +
push edi  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+18h]  +
push [ebp+arg_8]  +
push ebx  +
call sub_103C72B  +
test eax eax +
jz loc_103CD4E  +
xor eax eax +
inc eax  +
jmp loc_103CD50  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov al [esi+25Ch] +
and al 0Fh +
push edi  +
cmp al 3 +
jnz loc_103CEA9  +
mov eax [esi+254h] +
xor edi edi +
cmp eax edi +
jz loc_103CE89  +
push [ebp+arg_8]  +
push eax  +
push edi  +
push edi  +
call [ebp+arg_4]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_103CE75  +
push edi  +
push 7  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
lea eax [ebp+arg_8] +
push eax  +
push esi  +
call sub_103C852  +
test eax eax +
jz loc_103CE6D  +
mov [esi+254h] edi +
push dword ptr [esi+4]  +
call sub_103E9F6  +
pop ecx  +
push esi  +
mov [esi+240h] edi +
call sub_103C7F4  +
test eax eax +
jz loc_103CE6D  +
xor eax eax +
inc eax  +
mov [esi] edi +
jmp loc_103CE6F  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_103CA0C  +
push esi  +
mov edi eax +
call sub_103C7F4  +
test eax eax +
jz loc_103CE6D  +
mov eax edi +
xor edi edi +
jmp loc_103CEA5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
call sub_103C75E  +
test eax eax +
jz loc_103CF05  +
mov ax [ebp+arg_0] +
push esi  +
lea esi [edi+25Ch] +
push edi  +
mov [esi] ax +
call sub_103CAF4  +
test eax eax +
jnz loc_103CF01  +
push 0Fh  +
pop eax  +
mov [esi] ax +
xor eax eax +
jmp loc_103CF04  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
push 0Fh  +
call sub_103CECC  +
push [ebp+arg_4]  +
lea eax [esi+30h] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+24h]  +
push dword ptr [esi+1Ch]  +
push 2  +
push eax  +
call sub_103C64D  +
push esi  +
mov edi eax +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 268h  +
call edi  +
mov esi eax +
xor ebx ebx +
pop ecx  +
cmp esi ebx +
jnz loc_103CF79  +
push ebx  +
push 3  +
push [ebp+arg_0]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103D004  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_10] +
mov ecx [ebp+arg_8] +
push 0Fh  +
mov [esi+28h] ebx +
mov [esi+264h] ebx +
mov [esi+260h] ebx +
pop ebx  +
push [ebp+arg_2C]  +
mov [esi+8] edi +
mov edi [ebp+arg_1C] +
push eax  +
push [ebp+arg_24]  +
mov [esi+14h] edx +
mov edx [ebp+arg_14] +
mov [esi+20h] edi +
mov edi [ebp+arg_20] +
push edi  +
mov [esi+18h] edx +
mov edx [ebp+arg_18] +
push edx  +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_C] +
push ecx  +
mov [esi+2Ch] eax +
mov [esi+25Ch] bx +
mov ebx [ebp+arg_28] +
push 2  +
lea eax [esi+30h] +
push eax  +
mov [esi+10h] ecx +
mov [esi+1Ch] edx +
mov [esi+24h] edi +
mov [esi+248h] ebx +
call sub_103C556  +
test eax eax +
jnz loc_103CFF2  +
push [ebp+arg_2C]  +
push esi  +
call sub_103CF0F  +
jmp loc_103CF72  +
xor eax eax +
mov [esi] eax +
mov [esi+254h] eax +
mov [esi+240h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 30h  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_103D029  +
cmp [esi] al +
jz loc_103D025  +
inc esi  +
dec edx  +
jnz loc_103D01D  +
test edx edx +
jnz loc_103D02E  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_103D03F  +
test eax eax +
jl loc_103D03C  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_103D058  +
cmp edx [ebp+arg_4] +
jbe loc_103D05D  +
mov eax 80070057h +
test eax eax +
jl loc_103D06B  +
mov eax [ebp+arg_0] +
call sub_103D010  +
jmp loc_103D06E  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_103D0A8  +
cmp [ebp+arg_4] eax +
jz loc_103D0A4  +
mov dl [ebx] +
test dl dl +
jz loc_103D0A4  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_103D08C  +
test esi esi +
jnz loc_103D0AF  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_103D0BB  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_4]  +
lea eax [esi+34h] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+28h]  +
push dword ptr [esi+20h]  +
push 3  +
push eax  +
call sub_103C64D  +
push esi  +
mov edi eax +
call dword ptr [esi+10h]  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_10] +
and dword ptr [eax] 0 +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_8] +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [esi+0AD4h]  +
push ebx  +
push dword ptr [edi+34h]  +
call dword ptr [esi+18h]  +
mov ecx [esi+0AD4h] +
add esp 14h +
cmp eax ecx +
jz loc_103D155  +
jbe loc_103D151  +
push [ebp+var_4]  +
push 4  +
push dword ptr [edi+2Ch]  +
call sub_103E6B6  +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
jmp loc_103D18B  +
movzx eax word ptr [ebx+4] +
cmp eax [edi+24Ch] +
ja loc_103D148  +
push [ebp+arg_C]  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
movzx eax word ptr [ebx+4] +
push eax  +
push dword ptr [edi+264h]  +
push dword ptr [edi+34h]  +
call dword ptr [esi+18h]  +
movzx ecx word ptr [ebx+4] +
add esp 14h +
cmp ecx eax +
jnz loc_103D13B  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
lea eax [ebp+var_4] +
push eax  +
xor ebx ebx +
push 1  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_4] ebx +
call dword ptr [esi+24h]  +
push [ebp+arg_14]  +
mov edi [ebp+arg_4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_4] ebx +
push edi  +
push [ebp+arg_0]  +
call dword ptr [esi+18h]  +
add esp 28h +
cmp eax ebx +
jle loc_103D226  +
mov ecx [ebp+arg_8] +
cmp eax ecx +
jg loc_103D226  +
mov al [edi+ecx-1] +
mov byte ptr [ebp+arg_8+3] al +
mov eax edi +
mov [edi+ecx-1] bl +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_103D1F0  +
sub eax edi +
lea edx [eax+1] +
cmp edx ecx +
jl loc_103D205  +
cmp byte ptr [ebp+arg_8+3] bl +
jnz loc_103D226  +
push [ebp+arg_14]  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+arg_C] +
push ebx  +
lea eax [eax+ecx+1] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] ebx +
call dword ptr [esi+24h]  +
xor eax eax +
add esp 14h +
inc eax  +
jmp loc_103D235  +
push [ebp+var_4]  +
push 4  +
push [ebp+arg_10]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
mov edi 8000h +
push edi  +
call dword ptr [esi+0Ch]  +
xor ebx ebx +
pop ecx  +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_103D272  +
push ebx  +
push 3  +
push [ebp+arg_1C]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103D322  +
push [ebp+arg_14]  +
lea eax [ebp+arg_18] +
push eax  +
push ebx  +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+arg_18] ebx +
call dword ptr [esi+24h]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_103D29A  +
push [ebp+var_4]  +
call dword ptr [esi+10h]  +
pop ecx  +
push [ebp+arg_18]  +
push 4  +
jmp loc_103D263  +
push [ebp+arg_14]  +
lea eax [ebp+arg_18] +
push eax  +
push edi  +
push [ebp+var_4]  +
mov [ebp+arg_18] ebx +
push [ebp+arg_4]  +
call dword ptr [esi+18h]  +
mov edi eax +
add esp 14h +
cmp edi ebx +
jz loc_103D318  +
mov ebx [ebp+arg_C] +
cmp edi 8000h +
ja loc_103D329  +
push [ebp+arg_14]  +
and [ebp+arg_18] 0 +
lea eax [ebp+arg_18] +
push eax  +
push edi  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call dword ptr [esi+1Ch]  +
add esp 14h +
cmp edi eax +
jnz loc_103D329  +
push [ebp+arg_14]  +
add [ebx] edi +
push [ebp+arg_10]  +
mov eax [ebx] +
and [ebp+arg_18] 0 +
push eax  +
push 1  +
call [ebp+arg_8]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_103D33A  +
push [ebp+arg_14]  +
lea eax [ebp+arg_18] +
push eax  +
push 8000h  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call dword ptr [esi+18h]  +
mov edi eax +
add esp 14h +
test edi edi +
jnz loc_103D2BA  +
push [ebp+var_4]  +
call dword ptr [esi+10h]  +
xor eax eax +
pop ecx  +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
push [ebp+var_4]  +
call dword ptr [esi+10h]  +
pop ecx  +
push [ebp+arg_18]  +
push 6  +
jmp loc_103D263  +
push [ebp+var_4]  +
call dword ptr [esi+10h]  +
pop ecx  +
push 0  +
push 7  +
jmp loc_103D263  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov edx 103h +
mov [eax+18h] dx +
xor edx edx +
mov dword ptr [eax] 42414321h +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+1Ah] dx +
mov [eax+1Ch] dx +
mov [eax+1Eh] dx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
and [ebp+var_4] 0 +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103D39E  +
sub eax ecx +
push esi  +
mov esi eax +
mov eax [ebp+arg_4] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103D3B0  +
push [ebp+arg_10]  +
sub eax ecx +
lea ecx [ebp+var_4] +
push ecx  +
inc eax  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call [ebp+arg_8]  +
add esp 14h +
inc esi  +
cmp esi eax +
pop esi  +
jz loc_103D3E5  +
push [ebp+var_4]  +
push 6  +
push [ebp+arg_C]  +
call sub_103E6B6  +
xor eax eax +
jmp locret_103D3E8  +
xor eax eax +
inc eax  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_103D407  +
cmp edx 7FFFFFFFh +
jbe loc_103D40C  +
mov eax 80070057h +
test eax eax +
jl loc_103D422  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_103D078  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_103D045  +
test eax eax +
jl loc_103D461  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [eax+edi] +
mov eax [ebp+arg_8] +
push 0  +
call sub_103D078  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
push 11E8h  +
call edi  +
mov esi eax +
xor ebx ebx +
pop ecx  +
cmp esi ebx +
jnz loc_103D499  +
push ebx  +
push 3  +
push [ebp+arg_4]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_103D539  +
push [ebp+arg_30]  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_18] +
mov ecx [ebp+arg_8] +
mov [esi+0Ch] edi +
mov edi [ebp+arg_24] +
push eax  +
mov [esi+24h] edi +
mov edi [ebp+arg_28] +
mov [esi+28h] edi +
mov edi [ebp+arg_2C] +
push edi  +
push [ebp+arg_28]  +
mov [esi+18h] edx +
mov edx [ebp+arg_1C] +
mov [esi+4] ecx +
mov ecx [ebp+arg_10] +
mov [esi+1Ch] edx +
mov edx [ebp+arg_20] +
push edx  +
mov [esi+10h] ecx +
mov ecx [ebp+arg_14] +
push ecx  +
mov [esi+2Ch] eax +
push 3  +
lea eax [esi+34h] +
push eax  +
mov [esi+14h] ecx +
mov [esi+20h] edx +
mov [esi+8] edi +
mov [esi+0BDFh] bl +
mov [esi+0CE0h] bl +
mov [esi+0DE1h] bl +
mov [esi+0EE2h] bl +
mov [esi+0FE3h] bl +
mov [esi+10E4h] bl +
call sub_103C556  +
test eax eax +
jnz loc_103D51F  +
push esi  +
call dword ptr [esi+10h]  +
pop ecx  +
jmp loc_103D492  +
lea eax [esi+994h] +
push eax  +
call sub_103D34F  +
xor eax eax +
mov [esi+0AD8h] ax +
mov [esi+30h] ebx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
and dword ptr [ebx] 0 +
and [ebp+arg_C] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_4] +
lea eax [ebp+arg_C] +
push eax  +
push 10h  +
lea eax [esi+9B8h] +
push eax  +
push dword ptr [edi+13Ch]  +
call dword ptr [esi+18h]  +
add esp 14h +
test eax eax +
jnz loc_103D581  +
xor eax eax +
jmp loc_103D5C0  +
cmp eax 10h +
jz loc_103D59B  +
push [ebp+arg_C]  +
push 4  +
push dword ptr [edi+2Ch]  +
call sub_103E6B6  +
mov dword ptr [ebx] 1 +
jmp loc_103D57D  +
push [ebp+arg_8]  +
push dword ptr [edi+2Ch]  +
push esi  +
push 100h  +
add esi 0ADEh +
push esi  +
push dword ptr [edi+13Ch]  +
call sub_103D197  +
test eax eax +
jz loc_103D593  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 128h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_128] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_120] eax +
mov eax [ebp+arg_10] +
push edi  +
mov [ebp+var_10C] eax +
lea eax [esi+56Eh] +
push eax  +
mov edi 100h +
push edi  +
lea eax [ebp+var_104] +
push eax  +
call sub_103D3F1  +
lea eax [esi+46Eh] +
push eax  +
push edi  +
lea eax [ebp+var_104] +
push eax  +
call sub_103D42B  +
push [ebp+var_10C]  +
lea eax [ebp+var_108] +
push eax  +
push 180h  +
lea eax [ebp+var_104] +
push 8302h  +
xor ebx ebx +
push eax  +
mov [ebp+var_108] ebx +
call dword ptr [esi+14h]  +
add esp 14h +
mov [ebp+var_110] eax +
cmp eax 0FFFFFFFFh +
jnz loc_103D67B  +
push [ebp+var_108]  +
push 6  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
jmp loc_103DC4A  +
push dword ptr [esi+0AD0h]  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov [ebp+var_124] eax +
cmp eax ebx +
jz loc_103DC05  +
mov ecx [esi+0ACCh] +
lea eax [esi+0BDFh] +
mov [ebp+var_118] ecx +
cmp [eax] bl +
jz loc_103D6E9  +
or word ptr [esi+9B2h] 1 +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_103D6B4  +
sub eax edi +
mov [ebp+var_114] eax +
lea eax [esi+0CE0h] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_103D6CC  +
mov edx [ebp+var_114] +
sub eax edi +
add eax edx +
lea eax [ecx+eax+2] +
mov [ebp+var_118] eax +
mov ecx eax +
lea eax [esi+0FE3h] +
cmp [eax] bl +
jz loc_103D733  +
or word ptr [esi+9B2h] 2 +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_103D6FE  +
sub eax edi +
mov [ebp+var_114] eax +
lea eax [esi+10E4h] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_103D716  +
mov edx [ebp+var_114] +
sub eax edi +
add eax edx +
lea eax [ecx+eax+2] +
mov [ebp+var_118] eax +
mov ecx eax +
mov eax [esi+244h] +
add eax ecx +
cmp ecx eax +
ja loc_103DBF0  +
mov ecx [esi+13Ch] +
add ecx eax +
mov [esi+9A4h] eax +
cmp eax ecx +
ja loc_103DBF0  +
mov eax [esi+34h] +
add eax ecx +
cmp eax ebx +
mov [esi+99Ch] eax +
jl loc_103DBF0  +
cmp eax ecx +
jb loc_103DBF0  +
cmp [esi+0AC8h] ebx +
jbe loc_103D784  +
or word ptr [esi+9B2h] 4 +
mov ax [esi+0ADAh] +
push [ebp+var_10C]  +
mov [esi+9B4h] ax +
lea eax [esi+0ADCh] +
movzx ecx word ptr [eax] +
mov [esi+9B6h] cx +
inc ecx  +
mov [eax] cx +
lea ecx [ebp+var_108] +
push ecx  +
lea eax [esi+994h] +
push 24h  +
push eax  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+1Ch]  +
add esp 14h +
cmp eax 24h +
jz loc_103D7E0  +
push [ebp+var_108]  +
push 6  +
jmp loc_103DBF3  +
cmp [esi+0AC8h] ebx +
jbe loc_103D8C0  +
mov ax [esi+354h] +
push [ebp+var_10C]  +
lea edi [esi+9C8h] +
mov [edi] ax +
mov al [esi+358h] +
mov [edi+2] al +
mov al [esi+35Ch] +
mov [edi+3] al +
lea eax [ebp+var_108] +
push eax  +
push 4  +
push edi  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+1Ch]  +
add esp 14h +
cmp eax 4 +
jnz loc_103D7D3  +
push 100h  +
push ebx  +
push edi  +
call memset  +
mov ax [esi+0AC8h] +
sub ax 4 +
movzx eax ax +
add esp 0Ch +
mov [ebp+var_11C] eax +
cmp ax bx +
jbe loc_103D8C0  +
mov eax 100h +
mov ecx eax +
cmp word ptr [ebp+var_11C] cx +
ja loc_103D874  +
movzx eax word ptr [ebp+var_11C] +
push [ebp+var_10C]  +
mov [ebp+var_114] eax +
lea eax [ebp+var_108] +
push eax  +
movzx eax word ptr [ebp+var_114] +
push eax  +
push edi  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+1Ch]  +
mov ecx [ebp+var_114] +
add esp 14h +
cmp cx ax +
jnz loc_103D7D3  +
sub [ebp+var_11C] ecx +
cmp word ptr [ebp+var_11C] bx +
ja loc_103D85D  +
test byte ptr [esi+9B2h] 1 +
jz loc_103D915  +
push [ebp+var_10C]  +
lea eax [esi+0BDFh] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+1Ch]  +
push eax  +
push [ebp+var_110]  +
call sub_103D38E  +
test eax eax +
jz loc_103DBFB  +
push [ebp+var_10C]  +
lea eax [esi+0CE0h] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+1Ch]  +
push eax  +
push [ebp+var_110]  +
call sub_103D38E  +
test eax eax +
jz loc_103DBFB  +
test byte ptr [esi+9B2h] 2 +
jz loc_103D96A  +
push [ebp+var_10C]  +
lea eax [esi+0FE3h] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+1Ch]  +
push eax  +
push [ebp+var_110]  +
call sub_103D38E  +
test eax eax +
jz loc_103DBFB  +
push [ebp+var_10C]  +
lea eax [esi+10E4h] +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+1Ch]  +
push eax  +
push [ebp+var_110]  +
call sub_103D38E  +
test eax eax +
jz loc_103DBFB  +
lea eax [esi+0DE1h] +
push eax  +
mov edi 101h +
push edi  +
lea eax [esi+0BDFh] +
push eax  +
mov [esi+0FE3h] bl +
mov [esi+10E4h] bl +
call sub_103D3F1  +
lea eax [esi+0EE2h] +
push eax  +
push edi  +
lea eax [esi+0CE0h] +
push eax  +
call sub_103D3F1  +
push [ebp+var_10C]  +
lea eax [ebp+var_108] +
push eax  +
push ebx  +
push ebx  +
push dword ptr [esi+248h]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+24h]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_103D9D6  +
push [ebp+var_108]  +
push 4  +
jmp loc_103DBF3  +
mov edi [ebp+var_124] +
jmp loc_103DA24  +
mov eax [esi+13Ch] +
add eax [ebp+var_118] +
push [ebp+var_10C]  +
add eax [esi+244h] +
add [edi] eax +
lea eax [ebp+var_108] +
push eax  +
push dword ptr [esi+0AD0h]  +
mov [ebp+var_108] ebx +
push edi  +
push [ebp+var_110]  +
call dword ptr [esi+1Ch]  +
add esp 14h +
cmp [esi+0AD0h] eax +
jnz loc_103D7D3  +
push [ebp+var_10C]  +
lea eax [ebp+var_108] +
push eax  +
push dword ptr [esi+0AD0h]  +
mov [ebp+var_108] ebx +
push edi  +
push dword ptr [esi+248h]  +
call dword ptr [esi+18h]  +
add esp 14h +
cmp eax [esi+0AD0h] +
jz loc_103D9DE  +
ja loc_103D9C9  +
push dword ptr [esi+2Ch]  +
push esi  +
push [ebp+var_10C]  +
push [ebp+arg_C]  +
push [ebp+var_120]  +
push [ebp+var_128]  +
push dword ptr [esi+140h]  +
push [ebp+var_110]  +
call sub_103D241  +
test eax eax +
jz loc_103DBFB  +
push dword ptr [esi+2Ch]  +
push esi  +
push [ebp+var_10C]  +
push [ebp+arg_C]  +
push [ebp+var_120]  +
push [ebp+var_128]  +
push dword ptr [esi+38h]  +
push [ebp+var_110]  +
call sub_103D241  +
test eax eax +
jz loc_103DBFB  +
mov edi [ebp+var_10C] +
push edi  +
lea eax [ebp+var_108] +
push eax  +
push 2  +
push ebx  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+24h]  +
add esp 14h +
mov [ebp+var_120] eax +
cmp eax 0FFFFFFFFh +
jnz loc_103DAF7  +
push [ebp+var_108]  +
push 6  +
push dword ptr [esi+2Ch]  +
jmp loc_103DBF6  +
push edi  +
lea eax [ebp+var_108] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
mov dword ptr [esi+994h] 4643534Dh +
call dword ptr [esi+24h]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_103DAE7  +
push edi  +
lea eax [ebp+var_108] +
push eax  +
push 4  +
lea eax [esi+994h] +
push eax  +
push [ebp+var_110]  +
call dword ptr [esi+1Ch]  +
add esp 14h +
cmp eax 4 +
jnz loc_103DAE7  +
push edi  +
lea eax [ebp+var_108] +
push eax  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+20h]  +
or [ebp+var_110] 0FFFFFFFFh +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_103DAE7  +
push edi  +
push dword ptr [esi+2Ch]  +
lea edi [esi+34h] +
push dword ptr [esi+28h]  +
push dword ptr [esi+20h]  +
push 3  +
push edi  +
call sub_103C64D  +
test eax eax +
jz loc_103DBFB  +
push [ebp+var_10C]  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+28h]  +
push dword ptr [esi+20h]  +
push dword ptr [esi+14h]  +
push 3  +
push edi  +
call sub_103C556  +
test eax eax +
jz loc_103DBFB  +
push [ebp+var_10C]  +
push [ebp+var_120]  +
push dword ptr [esi+30h]  +
push 2  +
call [ebp+var_128]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_103DBCF  +
push ebx  +
push 7  +
jmp loc_103DAEF  +
sub [esi+34Ch] eax +
lea eax [esi+994h] +
push eax  +
call sub_103D34F  +
push [ebp+var_124]  +
call dword ptr [esi+10h]  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_103DC4C  +
push ebx  +
push 9  +
push dword ptr [esi+2Ch]  +
call sub_103E6B6  +
push [ebp+var_124]  +
call dword ptr [esi+10h]  +
pop ecx  +
cmp [ebp+var_110] 0FFFFFFFFh +
jz loc_103DC4A  +
push [ebp+var_10C]  +
lea eax [ebp+var_108] +
push eax  +
push [ebp+var_110]  +
mov [ebp+var_108] ebx +
call dword ptr [esi+20h]  +
push [ebp+var_10C]  +
lea eax [ebp+var_108] +
push eax  +
lea eax [ebp+var_104] +
push eax  +
mov [ebp+var_108] ebx +
call dword ptr [esi+28h]  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_14] +
and [ebp+var_22C] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+var_258] eax +
mov eax [ebp+arg_10] +
push ecx  +
push eax  +
push esi  +
mov [ebp+var_21C] esi +
mov [ebp+var_244] eax +
mov [ebp+var_218] ecx +
mov byte ptr [ebx+0DE1h] 0 +
mov byte ptr [ebx+0EE2h] 0 +
call sub_103CE2F  +
test eax eax +
jz loc_103E27F  +
and [ebp+var_240] 0 +
lea edi [esi+138h] +
add esi 30h +
mov eax [esi] +
add eax [edi] +
jnz loc_103DCE4  +
xor eax eax +
inc eax  +
jmp loc_103E281  +
push dword ptr [ebx+0AD4h]  +
call dword ptr [ebx+0Ch]  +
pop ecx  +
mov [ebp+var_228] eax +
test eax eax +
jz loc_103E27F  +
push dword ptr [ebx+0AD4h]  +
call dword ptr [ebx+0Ch]  +
pop ecx  +
mov [ebp+var_230] eax +
test eax eax +
jz loc_103E24F  +
push dword ptr [ebx+0AD0h]  +
call dword ptr [ebx+0Ch]  +
pop ecx  +
mov [ebp+var_22C] eax +
test eax eax +
jz loc_103E24F  +
push dword ptr [ebx+0AD4h]  +
push 0  +
push [ebp+var_228]  +
call memset  +
push dword ptr [ebx+0AD4h]  +
push 0  +
push [ebp+var_230]  +
call memset  +
push dword ptr [ebx+0AD0h]  +
push 0  +
push [ebp+var_22C]  +
call memset  +
mov eax [esi] +
add esp 24h +
add eax [edi] +
jz loc_103E654  +
mov esi [ebx+13Ch] +
add esi [ebx+0ACCh] +
mov eax [ebp+var_21C] +
add esi [ebx+244h] +
add eax 138h +
add esi [eax-108h] +
add esi [ebx+0AD0h] +
add esi [eax] +
lea eax [ebx+0BDFh] +
add esi [ebx+34h] +
cmp byte ptr [eax] 0 +
mov [ebp+var_220] esi +
jz loc_103DDDD  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DDB4  +
sub eax edx +
mov ecx eax +
lea eax [ebx+0CE0h] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103DDC8  +
sub eax edi +
add eax ecx +
lea esi [esi+eax+2] +
mov [ebp+var_220] esi +
lea eax [ebx+0FE3h] +
cmp byte ptr [eax] 0 +
jz loc_103DE14  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DDEB  +
sub eax edx +
mov ecx eax +
lea eax [ebx+10E4h] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103DDFF  +
sub eax edi +
add eax ecx +
lea esi [esi+eax+2] +
mov [ebp+var_220] esi +
push [ebp+var_218]  +
xor edi edi +
push esi  +
push edi  +
push 1  +
mov [ebp+var_254] esi +
mov [ebp+var_238] edi +
call [ebp+var_244]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_103E684  +
push [ebp+var_218]  +
mov edi [ebx+34Ch] +
push dword ptr [ebx+2Ch]  +
lea eax [ebp+var_214] +
push dword ptr [ebx+8]  +
sub edi esi +
push dword ptr [ebx+28h]  +
mov [ebp+var_234] edi +
push dword ptr [ebx+20h]  +
push dword ptr [ebx+14h]  +
push 2  +
push eax  +
call sub_103C556  +
test eax eax +
jz loc_103E24F  +
test edi edi +
jl loc_103DE8D  +
cmp [ebp+arg_8] 0 +
jnz loc_103DE8D  +
and [ebp+var_250] 0 +
jmp loc_103DFBF  +
cmp byte ptr [ebx+0DE1h] 0 +
mov [ebp+var_250] 1 +
jnz loc_103DECD  +
lea eax [ebx+36Eh] +
push eax  +
mov edi 101h +
push edi  +
lea eax [ebx+0EE2h] +
push eax  +
call sub_103D3F1  +
lea eax [ebx+46Eh] +
push eax  +
push edi  +
lea eax [ebx+0DE1h] +
push eax  +
call sub_103D3F1  +
lea eax [ebx+0FE3h] +
cmp byte ptr [eax] 0 +
jz loc_103DF07  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DEDB  +
sub eax edx +
mov edx eax +
lea eax [ebx+10E4h] +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DEEF  +
push 0FFFFFFFEh  +
sub eax edi +
pop ecx  +
sub ecx eax +
sub ecx edx +
add esi ecx +
mov [ebp+var_220] esi +
push [ebp+var_218]  +
lea eax [ebx+670h] +
mov edi eax +
mov ecx 0C9h +
lea esi [ebx+34Ch] +
movs   +
mov ecx [ebp+var_220] +
inc dword ptr [ebx+684h]  +
push ecx  +
push eax  +
mov [ebx+30h] ecx +
call [ebp+var_258]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_103E694  +
lea edi [ebx+792h] +
push edi  +
mov esi 101h +
push esi  +
lea eax [ebx+0FE3h] +
push eax  +
call sub_103D3F1  +
lea eax [ebx+692h] +
push eax  +
push esi  +
lea eax [ebx+10E4h] +
push eax  +
call sub_103D3F1  +
mov eax edi +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DF77  +
sub eax esi +
mov edi eax +
lea eax [ebx+692h] +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103DF8B  +
sub eax esi +
mov ecx eax +
mov eax [ebx+34Ch] +
sub eax ecx +
sub eax edi +
sub eax [ebp+var_220] +
dec eax  +
dec eax  +
mov [ebp+var_234] eax +
lea eax [ebx+670h] +
cmp dword ptr [eax] 0 +
jnz loc_103DFBF  +
mov dword ptr [eax] 7FFFFFFFh +
mov edi [ebp+var_21C] +
mov ax [edi+25Ch] +
mov esi [ebp+var_22C] +
push [ebp+var_218]  +
mov [esi+6] ax +
xor eax eax +
mov [esi+4] ax +
mov eax [ebx+34h] +
mov [esi] eax +
xor eax eax +
lea ecx [ebp+var_224] +
push ecx  +
push eax  +
push eax  +
push dword ptr [edi+34h]  +
mov [ebp+var_23C] eax +
mov [ebp+var_224] eax +
call dword ptr [ebx+24h]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_103E698  +
and [ebp+var_224] 0 +
lea eax [ebp+var_224] +
push eax  +
push [ebp+var_218]  +
push edi  +
push [ebp+var_228]  +
push ebx  +
call sub_103D0FC  +
test eax eax +
jz loc_103E353  +
mov eax [ebp+var_228] +
add eax 4 +
mov [ebp+var_220] eax +
jmp loc_103E050  +
mov esi [ebp+var_22C] +
mov eax [ebp+var_23C] +
mov ecx [ebp+var_220] +
movzx ecx word ptr [ecx] +
and [ebp+var_248] 0 +
mov [ebp+var_24C] eax +
mov eax [ebx+0AD4h] +
add ecx eax +
add [ebp+var_23C] ecx +
mov eax [edi+30h] +
mov ecx [ebp+var_234] +
add ecx eax +
cmp [ebp+var_23C] ecx +
jnb loc_103E128  +
mov eax [ebp+var_228] +
movzx eax word ptr [eax+6] +
add [ebp+var_240] eax +
inc word ptr [esi+4]  +
mov eax [ebp+var_220] +
movzx eax word ptr [eax] +
push 0  +
push eax  +
push dword ptr [edi+264h]  +
call sub_103EA79  +
push eax  +
mov eax [ebx+0AD4h] +
sub eax 4 +
push eax  +
push [ebp+var_220]  +
call sub_103EA79  +
push [ebp+var_218]  +
mov ecx [ebp+var_228] +
mov [ecx] eax +
push dword ptr [ebx+2Ch]  +
lea eax [ebx+34h] +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+0AD4h]  +
push ecx  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov eax [ebp+var_220] +
push dword ptr [ebx+2Ch]  +
movzx eax word ptr [eax] +
push dword ptr [ebx+1Ch]  +
push eax  +
mov eax [ebp+var_21C] +
push dword ptr [eax+264h]  +
lea eax [ebx+34h] +
jmp loc_103E2E2  +
mov ecx [ebx+0AD4h] +
mov edx [ebp+var_24C] +
add edx ecx +
mov ecx [ebp+var_234] +
add ecx eax +
cmp edx ecx +
jnb loc_103E292  +
sub eax [ebx+0AD4h] +
xor ecx ecx +
sub eax [ebp+var_24C] +
push ecx  +
add eax [ebp+var_234] +
inc word ptr [esi+4]  +
mov esi [ebp+var_230] +
push eax  +
mov [esi+6] cx +
mov [esi+4] ax +
push dword ptr [edi+264h]  +
mov [ebp+var_248] eax +
call sub_103EA79  +
push eax  +
mov eax [ebx+0AD4h] +
sub eax 4 +
push eax  +
lea eax [esi+4] +
push eax  +
call sub_103EA79  +
push [ebp+var_218]  +
mov [esi] eax +
push dword ptr [ebx+2Ch]  +
lea eax [ebx+34h] +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+0AD4h]  +
push esi  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov edi [ebp+var_248] +
push dword ptr [ebx+2Ch]  +
mov eax [ebp+var_21C] +
push dword ptr [ebx+1Ch]  +
push edi  +
push dword ptr [eax+264h]  +
lea eax [ebx+34h] +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov esi [ebp+var_220] +
sub [esi] di +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
lea eax [ebp+var_214] +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+0AD4h]  +
push [ebp+var_228]  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
movzx ecx word ptr [esi] +
push dword ptr [ebx+1Ch]  +
mov eax [eax+264h] +
push ecx  +
add eax edi +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_103C6D4  +
test eax eax +
jnz loc_103E2F6  +
push [ebp+var_228]  +
call dword ptr [ebx+10h]  +
cmp [ebp+var_230] 0 +
pop ecx  +
jz loc_103E26C  +
push [ebp+var_230]  +
call dword ptr [ebx+10h]  +
pop ecx  +
cmp [ebp+var_22C] 0 +
jz loc_103E27F  +
push [ebp+var_22C]  +
call dword ptr [ebx+10h]  +
pop ecx  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 18h  +
push [ebp+var_218]  +
lea eax [ebp+var_214] +
push dword ptr [edi+2Ch]  +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+0AD4h]  +
push [ebp+var_228]  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
mov ecx [ebp+var_220] +
push dword ptr [ebx+1Ch]  +
movzx ecx word ptr [ecx] +
push ecx  +
push dword ptr [eax+264h]  +
lea eax [ebp+var_214] +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
mov esi [ebp+var_220] +
movzx eax word ptr [esi] +
push [ebp+var_218]  +
add eax [ebp+var_248] +
push [ebp+var_254]  +
add [ebp+var_238] eax +
push [ebp+var_238]  +
push 1  +
call [ebp+var_244]  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_103E694  +
mov edi [ebp+var_21C] +
lea eax [ebp+var_224] +
push eax  +
push [ebp+var_218]  +
push edi  +
push [ebp+var_228]  +
push ebx  +
call sub_103D0FC  +
test eax eax +
jnz loc_103E04A  +
cmp [ebp+var_224] 0 +
jnz loc_103E24F  +
lea eax [ebx+9AEh] +
inc word ptr [eax]  +
movzx eax word ptr [eax] +
mov ecx 0FFFCh +
cmp cx ax +
jb loc_103E6A2  +
push [ebp+var_218]  +
lea eax [ebx+244h] +
push dword ptr [ebx+2Ch]  +
push dword ptr [ebx+1Ch]  +
push dword ptr [ebx+0AD0h]  +
push [ebp+var_22C]  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov esi [ebp+var_21C] +
lea eax [ebp+var_224] +
push eax  +
xor edi edi +
push edi  +
push edi  +
push dword ptr [esi+13Ch]  +
mov [ebp+var_224] edi +
call dword ptr [ebx+24h]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_103E698  +
lea eax [ebp+var_224] +
push eax  +
push [ebp+var_218]  +
mov [ebp+var_224] edi +
push esi  +
push ebx  +
call sub_103D545  +
test eax eax +
jz loc_103E57A  +
lea edi [ebx+9B8h] +
mov ax [ebx+9C0h] +
push [ebp+var_218]  +
mov esi 0FFFDh +
mov ecx esi +
and ax cx +
xor edx edx +
cmp ax cx +
setz dl  +
lea eax [ebx+0ADEh] +
push edx  +
push dword ptr [edi]  +
push eax  +
lea eax [ebx+34Ch] +
push eax  +
call dword ptr [ebx+4]  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_103E694  +
mov ax [ebx+9C0h] +
mov ecx esi +
and ax cx +
cmp ax cx +
jz loc_103E45E  +
mov ax [ebx+0AD8h] +
mov [ebx+9C0h] ax +
mov eax [ebx+9BCh] +
add eax [edi] +
cmp eax [ebp+var_240] +
jbe loc_103E48A  +
mov ax [ebx+9C0h] +
and ax cx +
cmp ax si +
mov eax 0FFFFh +
jz loc_103E483  +
dec eax  +
mov [ebx+9C0h] ax +
push [ebp+var_218]  +
lea eax [ebx+13Ch] +
push dword ptr [ebx+2Ch]  +
push dword ptr [ebx+1Ch]  +
push 10h  +
push edi  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
lea esi [ebx+0ADEh] +
push dword ptr [ebx+2Ch]  +
lea eax [ebx+13Ch] +
push dword ptr [ebx+1Ch]  +
push esi  +
push eax  +
call sub_103C72B  +
test eax eax +
jz loc_103E24F  +
lea eax [ebx+9B0h] +
inc word ptr [eax]  +
movzx eax word ptr [eax] +
xor ecx ecx +
cmp cx ax +
jz loc_103E6A2  +
mov cx [ebx+9C0h] +
mov eax 0FFFEh +
mov edx eax +
and cx dx +
cmp cx ax +
jnz loc_103E559  +
push [ebp+var_218]  +
dec eax  +
mov [ebx+9C0h] ax +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
lea eax [ebp+var_10C] +
push dword ptr [ebx+1Ch]  +
push 10h  +
push edi  +
push eax  +
call sub_103C6D4  +
test eax eax +
jz loc_103E24F  +
push [ebp+var_218]  +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
lea eax [ebp+var_10C] +
push dword ptr [ebx+1Ch]  +
push esi  +
push eax  +
call sub_103C72B  +
test eax eax +
jz loc_103E24F  +
lea eax [ebp+var_224] +
push eax  +
push [ebp+var_218]  +
push [ebp+var_21C]  +
push ebx  +
call sub_103D545  +
test eax eax +
jnz loc_103E400  +
cmp [ebp+var_224] 0 +
jnz loc_103E24F  +
push [ebp+var_218]  +
mov eax [ebp+var_21C] +
push dword ptr [eax+2Ch]  +
add eax 30h +
push dword ptr [eax-0Ch]  +
push dword ptr [eax-14h]  +
push 2  +
push eax  +
call sub_103C64D  +
test eax eax +
jz loc_103E24F  +
cmp [ebp+var_250] 0 +
mov eax [ebp+var_21C] +
push 42h  +
pop ecx  +
lea esi [ebp+var_214] +
lea edi [eax+30h] +
movs   +
push 42h  +
pop ecx  +
lea esi [ebp+var_10C] +
lea edi [eax+138h] +
movs   +
jz loc_103E644  +
push [ebp+var_218]  +
lea eax [ebp+var_238] +
push [ebp+var_254]  +
push eax  +
push [ebp+var_244]  +
push ebx  +
call sub_103D5CC  +
test eax eax +
jz loc_103E24F  +
mov eax [ebx+34Ch] +
test eax eax +
jbe loc_103E622  +
mov ecx [ebx+364h] +
cmp ecx [ebx+688h] +
jnz loc_103E622  +
mov [ebx+670h] eax +
xor eax eax +
lea esi [ebx+670h] +
mov ecx 0C9h +
lea edi [ebx+34Ch] +
mov [ebx+0AD8h] ax +
mov eax [ebp+var_21C] +
movs   +
mov ecx [eax+30h] +
add eax 138h +
add ecx [eax] +
jnz loc_103DD72  +
cmp [ebp+arg_8] 0 +
jnz loc_103E661  +
inc word ptr [ebx+0AD8h]  +
push [ebp+var_228]  +
call dword ptr [ebx+10h]  +
push [ebp+var_230]  +
call dword ptr [ebx+10h]  +
push [ebp+var_22C]  +
call dword ptr [ebx+10h]  +
add esp 0Ch +
jmp loc_103DCDC  +
push edi  +
push 7  +
push dword ptr [ebx+2Ch]  +
call sub_103E6B6  +
jmp loc_103E24F  +
push 0  +
jmp loc_103E685  +
push [ebp+var_224]  +
push 4  +
jmp loc_103E687  +
mov eax [ebp+var_21C] +
push 0  +
push 9  +
push dword ptr [eax+2Ch]  +
jmp loc_103E68A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov dword ptr [eax+8] 1 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349434Dh +
jz loc_103E6F2  +
push 2  +
pop eax  +
jmp loc_103E77B  +
mov eax [esi+8] +
cmp [ebp+arg_8] eax +
ja loc_103E6EA  +
add eax 0Ch +
cmp [ebp+arg_10] eax +
jb loc_103E6EA  +
cmp byte ptr [esi+20h] 0 +
push ebx  +
mov ebx [esi+1Ch] +
push edi  +
mov edi 8000h +
jz loc_103E714  +
add ebx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call memcpy  +
mov edx [ebp+arg_8] +
add esp 0Ch +
cmp edx edi +
jnb loc_103E747  +
mov ecx edi +
sub ecx edx +
mov eax 109h +
cmp ecx eax +
jnb loc_103E739  +
mov eax ecx +
push eax  +
add ebx edx +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
push [ebp+arg_14]  +
movzx eax byte ptr [esi+20h] +
push eax  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+24h]  +
call sub_103FFCD  +
cmp [ebp+arg_8] edi +
pop edi  +
setz cl  +
neg eax  +
sbb eax eax +
mov [esi+20h] cl +
and eax 4 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 4349434Dh +
jz loc_103E798  +
push 2  +
pop eax  +
pop ebp  +
retn   +
mov byte ptr [eax+20h] 0 +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349434Dh +
jz loc_103E7BB  +
push 2  +
pop eax  +
jmp loc_103E809  +
mov eax [esi+0Ch] +
and dword ptr [esi] 0 +
push edi  +
mov edi [esi+4] +
test eax eax +
jz loc_103E7CD  +
push eax  +
call edi  +
pop ecx  +
mov eax [esi+10h] +
test eax eax +
jz loc_103E7D8  +
push eax  +
call edi  +
pop ecx  +
mov eax [esi+14h] +
test eax eax +
jz loc_103E7E3  +
push eax  +
call edi  +
pop ecx  +
mov eax [esi+18h] +
test eax eax +
jz loc_103E7EE  +
push eax  +
call edi  +
pop ecx  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_103E7F9  +
push eax  +
call edi  +
pop ecx  +
push edi  +
push dword ptr [esi+24h]  +
call sub_103EBC5  +
push esi  +
call edi  +
pop ecx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_10] +
and dword ptr [eax] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
mov edi 8000h +
test eax eax +
jz loc_103E831  +
cmp eax edi +
jbe loc_103E833  +
mov [ebx] edi +
push 28h  +
call [ebp+arg_4]  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_103E8F4  +
push [ebp+arg_4]  +
call sub_103EAEA  +
mov [esi+24h] eax +
test eax eax +
jnz loc_103E85B  +
push esi  +
call [ebp+arg_8]  +
jmp loc_103E8F3  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [esi+4] eax +
mov dword ptr [esi] 4349434Dh +
mov byte ptr [esi+20h] 0 +
mov eax [ebx] +
mov [esi+8] eax +
mov eax [ebx] +
mov ebx [ebp+arg_4] +
add eax 0Ch +
push edi  +
mov [ecx] eax +
call ebx  +
push edi  +
mov [esi+0Ch] eax +
call ebx  +
mov edi 10000h +
push edi  +
mov [esi+10h] eax +
call ebx  +
push edi  +
mov [esi+14h] eax +
call ebx  +
push 10122h  +
mov [esi+18h] eax +
call ebx  +
xor ecx ecx +
add esp 14h +
mov [esi+1Ch] eax +
cmp [esi+0Ch] ecx +
jz loc_103E8ED  +
cmp [esi+10h] ecx +
jz loc_103E8ED  +
cmp [esi+14h] ecx +
jz loc_103E8ED  +
cmp [esi+18h] ecx +
jz loc_103E8ED  +
cmp eax ecx +
jz loc_103E8ED  +
push 122h  +
push ecx  +
add eax edi +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+24h]  +
call sub_103EBDA  +
test eax eax +
jnz loc_103E8ED  +
mov eax [ebp+arg_10] +
mov [eax] esi +
xor eax eax +
jmp loc_103E8F7  +
push esi  +
call sub_103E7A5  +
pop ecx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_14] +
and dword ptr [eax] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
push 18h  +
call edi  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_103E91F  +
inc eax  +
jmp loc_103E994  +
push ebx  +
push 4354h  +
mov dword ptr [esi+10h] 0B71B00h +
call edi  +
mov ebx [ebp+arg_C] +
pop ecx  +
mov [esi+14h] eax +
test eax eax +
jnz loc_103E944  +
xor edi edi +
inc edi  +
push esi  +
call ebx  +
pop ecx  +
mov eax edi +
jmp loc_103E993  +
push [ebp+arg_1C]  +
mov ecx [ebp+arg_4] +
push [ebp+arg_18]  +
push ebx  +
push edi  +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
call sub_1040160  +
mov [ebp+arg_8] eax +
test eax eax +
jz loc_103E96C  +
push dword ptr [esi+14h]  +
call ebx  +
mov edi [ebp+arg_8] +
pop ecx  +
jmp loc_103E93C  +
mov eax [ebp+arg_0] +
mov [esi+4] edi +
mov [esi+8] ebx +
mov ecx [eax] +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_10] +
mov dword ptr [esi] 4349434Ch +
mov eax [eax] +
add eax 1800h +
mov [ecx] eax +
mov eax [ebp+arg_14] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 4349434Ch +
jz loc_103E9B1  +
push 2  +
jmp loc_103E9EE  +
mov ecx [eax+0Ch] +
cmp [ebp+arg_8] ecx +
ja loc_103E9AD  +
add ecx 1800h +
cmp [ebp+arg_10] ecx +
jb loc_103E9AD  +
push dword ptr [eax+10h]  +
lea ecx [ebp+arg_0] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [eax+14h]  +
call sub_10400ED  +
test eax eax +
mov eax [ebp+arg_14] +
jnz loc_103E9E9  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn   +
and dword ptr [eax] 0 +
push 4  +
pop eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 4349434Ch +
jz loc_103EA0B  +
push 2  +
pop eax  +
pop ebp  +
retn   +
push dword ptr [eax+14h]  +
call sub_104013F  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 4349434Ch +
jz loc_103EA31  +
push 2  +
pop eax  +
pop ebp  +
retn   +
push dword ptr [eax+14h]  +
call sub_10400DD  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349434Ch +
jz loc_103EA58  +
push 2  +
pop eax  +
jmp loc_103EA71  +
push dword ptr [esi+14h]  +
call sub_10400CD  +
push dword ptr [esi+14h]  +
call dword ptr [esi+8]  +
and dword ptr [esi] 0 +
push esi  +
call dword ptr [esi+8]  +
pop ecx  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov eax esi +
shr eax 2 +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jle loc_103EABA  +
push ebx  +
movzx edx byte ptr [ecx] +
dec eax  +
inc ecx  +
movzx ebx byte ptr [ecx] +
shl ebx 8 +
or edx ebx +
inc ecx  +
movzx ebx byte ptr [ecx] +
shl ebx 10h +
or edx ebx +
inc ecx  +
movzx ebx byte ptr [ecx] +
shl ebx 18h +
or edx ebx +
inc ecx  +
xor edi edx +
test eax eax +
jg loc_103EA93  +
pop ebx  +
and esi 3 +
xor eax eax +
dec esi  +
jz loc_103EAD8  +
dec esi  +
jz loc_103EACF  +
dec esi  +
jnz loc_103EADD  +
movzx eax byte ptr [ecx] +
shl eax 10h +
inc ecx  +
movzx edx byte ptr [ecx] +
shl edx 8 +
or eax edx +
inc ecx  +
movzx ecx byte ptr [ecx] +
or eax ecx +
xor eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx 2F6Ch +
push ebx  +
call [ebp+arg_0]  +
mov esi eax +
xor edi edi +
pop ecx  +
cmp esi edi +
jz loc_103EBB7  +
push ebx  +
push edi  +
push esi  +
call memset  +
lea eax [esi+0B0h] +
mov [esi+5Ch] eax +
add esp 0Ch +
lea eax [esi+0A98h] +
mov [esi+60h] eax +
push 0Fh  +
pop eax  +
lea ecx [esi+9A4h] +
mov [esi+70h] eax +
mov [esi+78h] ecx +
mov [esi+8Ch] eax +
lea ecx [esi+0F18h] +
lea eax [esi+0F90h] +
mov dword ptr [esi+64h] offset dword_1009DF0 +
mov dword ptr [esi+68h] 101h +
mov dword ptr [esi+6Ch] 11Eh +
mov [esi+74h] edi +
mov [esi+7Ch] ecx +
mov dword ptr [esi+80h] offset dword_1009E78 +
mov [esi+84h] edi +
mov dword ptr [esi+88h] 1Eh +
mov [esi+90h] edi +
mov [esi+94h] eax +
mov [esi+98h] edi +
mov dword ptr [esi+9Ch] offset dword_1009EF0 +
mov [esi+0A0h] edi +
mov dword ptr [esi+0A4h] 13h +
mov dword ptr [esi+0A8h] 7 +
mov [esi+0ACh] edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call [ebp+arg_4]  +
pop ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [eax] ecx +
mov [eax+8] edx +
test ecx ecx +
jz loc_103EBF9  +
test edx edx +
jz loc_103EBF9  +
xor eax eax +
jmp loc_103EBFC  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov ecx [eax+30h] +
push esi  +
push 10h  +
pop esi  +
sub esi edi +
cmp ecx esi +
jle loc_103EC97  +
mov esi edx +
shl esi cl +
mov ecx [eax+10h] +
push ebx  +
lea ebx [ecx-2] +
or [eax+2Ch] si +
movzx esi word ptr [eax+0Ch] +
cmp esi ebx +
jnb loc_103EC49  +
mov ecx [eax+4] +
mov bl [eax+2Ch] +
mov [esi+ecx] bl +
inc word ptr [eax+0Ch]  +
movzx ecx word ptr [eax+0Ch] +
mov esi [eax+4] +
mov bl [eax+2Dh] +
mov [ecx+esi] bl +
jmp loc_103EC7E  +
cmp esi ecx +
jb loc_103EC56  +
mov dword ptr [eax+28h] 1 +
jmp loc_103EC63  +
mov ecx [eax+4] +
mov bl [eax+2Ch] +
mov [esi+ecx] bl +
inc word ptr [eax+0Ch]  +
movzx esi word ptr [eax+0Ch] +
cmp esi [eax+10h] +
jb loc_103EC75  +
mov dword ptr [eax+28h] 1 +
jmp loc_103EC82  +
mov ecx [eax+4] +
mov bl [eax+2Dh] +
mov [esi+ecx] bl +
inc word ptr [eax+0Ch]  +
mov esi [eax+30h] +
push 10h  +
pop ecx  +
sub ecx esi +
sar edx cl +
lea ecx [esi+edi-10h] +
pop ebx  +
mov [eax+2Ch] dx +
jmp loc_103EC9F  +
shl edx cl +
or [eax+2Ch] dx +
add ecx edi +
mov [eax+30h] ecx +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
mov ecx [ebp+arg_0] +
sar [ebp+arg_0] 1 +
and ecx 1 +
or eax ecx +
add eax eax +
dec [ebp+arg_4]  +
cmp [ebp+arg_4] 0 +
jg loc_103ECB0  +
movzx eax ax +
shr eax 1 +
pop ebp  +
retn 8  +
***
mov ecx [eax+30h] +
cmp ecx 8 +
push ebx  +
push esi  +
jle loc_103ED29  +
mov edx [eax+10h] +
movzx ecx word ptr [eax+0Ch] +
lea esi [edx-2] +
cmp ecx esi +
jnb loc_103ED02  +
mov edx [eax+4] +
mov bl [eax+2Ch] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
movzx ecx word ptr [eax+0Ch] +
mov bl [eax+2Dh] +
jmp loc_103ED42  +
xor esi esi +
inc esi  +
cmp ecx edx +
jb loc_103ED0E  +
mov [eax+28h] esi +
jmp loc_103ED1B  +
mov edx [eax+4] +
mov bl [eax+2Ch] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
movzx ecx word ptr [eax+0Ch] +
cmp ecx [eax+10h] +
jb loc_103ECFD  +
mov [eax+28h] esi +
jmp loc_103ED4C  +
test ecx ecx +
jle loc_103ED4C  +
movzx ecx word ptr [eax+0Ch] +
cmp ecx [eax+10h] +
jb loc_103ED3F  +
mov dword ptr [eax+28h] 1 +
jmp loc_103ED4C  +
mov bl [eax+2Ch] +
mov edx [eax+4] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
xor ecx ecx +
and [eax+30h] ecx +
pop esi  +
mov [eax+2Ch] cx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call sub_103ECD4  +
xor edi edi +
inc edi  +
cmp [ebp+arg_4] 0 +
jz loc_103EE66  +
mov edx [eax+10h] +
movzx ecx word ptr [eax+0Ch] +
lea esi [edx-2] +
cmp ecx esi +
jnb loc_103EDA5  +
mov edx [eax+4] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
movzx esi word ptr [eax+0Ch] +
movzx edx si +
mov esi [eax+4] +
mov ecx ebx +
shr ecx 8 +
mov [edx+esi] cl +
jmp loc_103EDD1  +
cmp ecx edx +
jb loc_103EDAE  +
mov [eax+28h] edi +
jmp loc_103EDB8  +
mov edx [eax+4] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
movzx esi word ptr [eax+0Ch] +
cmp esi [eax+10h] +
jb loc_103EDC6  +
mov [eax+28h] edi +
jmp loc_103EDD5  +
mov edx [eax+4] +
mov ecx ebx +
shr ecx 8 +
mov [esi+edx] cl +
inc word ptr [eax+0Ch]  +
mov edx [eax+10h] +
movzx ecx word ptr [eax+0Ch] +
lea esi [edx-2] +
cmp ecx esi +
jnb loc_103EE07  +
mov esi [eax+4] +
mov dl bl +
not dl  +
mov [ecx+esi] dl +
inc word ptr [eax+0Ch]  +
movzx esi word ptr [eax+0Ch] +
mov ecx ebx +
movzx edx si +
mov esi [eax+4] +
not ecx  +
shr ecx 8 +
mov [edx+esi] cl +
jmp loc_103EE34  +
cmp ecx edx +
jb loc_103EE10  +
mov [eax+28h] edi +
jmp loc_103EE1E  +
mov esi [eax+4] +
mov dl bl +
not dl  +
mov [ecx+esi] dl +
inc word ptr [eax+0Ch]  +
movzx esi word ptr [eax+0Ch] +
cmp esi [eax+10h] +
jnb loc_103EE49  +
mov edx [eax+4] +
mov ecx ebx +
not ecx  +
shr ecx 8 +
mov [esi+edx] cl +
inc word ptr [eax+0Ch]  +
jmp loc_103EE66  +
movzx ecx word ptr [eax+0Ch] +
add ebx 0FFFFh +
cmp ecx [eax+10h] +
jb loc_103EE4E  +
mov [eax+28h] edi +
jmp loc_103EE66  +
mov esi [ebp+arg_0] +
mov edx [eax+4] +
mov [ebp+arg_4] ebx +
mov bl [esi] +
mov [ecx+edx] bl +
inc word ptr [eax+0Ch]  +
inc [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
test bx bx +
jnz loc_103EE3A  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea ecx [eax+0B0h] +
mov edx 11Eh +
push esi  +
xor esi esi +
mov [ecx] si +
add ecx 4 +
dec edx  +
jnz loc_103EE83  +
push 1Eh  +
lea ecx [eax+9A4h] +
pop edx  +
xor esi esi +
mov [ecx] si +
add ecx 4 +
dec edx  +
jnz loc_103EE97  +
push 13h  +
lea ecx [eax+0F90h] +
pop edx  +
xor esi esi +
mov [ecx] si +
add ecx 4 +
dec edx  +
jnz loc_103EEAB  +
xor ecx ecx +
inc ecx  +
mov [eax+4B0h] cx +
xor ecx ecx +
mov [eax+54h] ecx +
mov [eax+50h] ecx +
mov [eax+4Ch] dx +
mov [eax+4Ah] dx +
mov [eax+48h] dx +
mov [eax+4Eh] cl +
mov byte ptr [eax+4Fh] 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
mov edx [eax+ecx*4+104Ch] +
mov [ebp+var_4] edx +
mov edx [eax+40h] +
add ecx ecx +
cmp ecx edx +
jg loc_103EF7B  +
push ebx  +
push esi  +
jge loc_103EF37  +
mov esi [eax+ecx*4+1050h] +
mov edx [eax+ecx*4+104Ch] +
movzx ebx word ptr [edi+esi*4] +
movzx edx word ptr [edi+edx*4] +
cmp bx dx +
jb loc_103EF36  +
jnz loc_103EF37  +
mov dl [esi+eax+1940h] +
mov esi [eax+ecx*4+104Ch] +
cmp dl [esi+eax+1940h] +
ja loc_103EF37  +
inc ecx  +
mov esi [eax+ecx*4+104Ch] +
mov edx [ebp+var_4] +
movzx edx word ptr [edi+edx*4] +
movzx ebx word ptr [edi+esi*4] +
cmp dx bx +
jb loc_103EF79  +
jnz loc_103EF63  +
mov edx [ebp+var_4] +
mov dl [edx+eax+1940h] +
cmp dl [esi+eax+1940h] +
jbe loc_103EF79  +
mov edx [ebp+arg_0] +
mov [eax+edx*4+104Ch] esi +
mov edx [eax+40h] +
mov [ebp+arg_0] ecx +
add ecx ecx +
cmp ecx edx +
jle loc_103EF00  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov edx [ebp+arg_0] +
mov [eax+edx*4+104Ch] ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov ecx [eax+8] +
mov [ebp+var_20] ecx +
mov ecx [eax+0Ch] +
and [ebp+var_4] 0 +
mov [ebp+var_14] ecx +
mov ecx [eax+18h] +
push ebx  +
mov ebx [eax] +
mov [ebp+var_1C] ecx +
mov ecx [eax+14h] +
mov eax [eax+4] +
mov [ebp+var_24] eax +
xor eax eax +
push esi  +
movzx esi ax +
push edi  +
mov eax esi +
shl esi 10h +
or eax esi +
mov [ebp+var_8] ecx +
push 8  +
lea edi [edx+102Ch] +
pop ecx  +
stos   +
mov eax [edx+44h] +
mov eax [edx+eax*4+104Ch] +
xor ecx ecx +
mov [ebx+eax*4+2] cx +
mov esi [edx+44h] +
inc esi  +
mov eax 23Dh +
cmp esi eax +
mov [ebp+var_2C] ebx +
jge loc_103F14B  +
lea ecx [edx+esi*4+104Ch] +
sub eax esi +
mov [ebp+var_10] ecx +
mov [ebp+var_18] eax +
add esi eax +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov eax ecx +
shl eax 2 +
mov [ebp+var_C] eax +
movzx eax word ptr [eax+ebx+2] +
movzx eax word ptr [ebx+eax*4+2] +
inc eax  +
cmp eax [ebp+var_8] +
jle loc_103F030  +
mov eax [ebp+var_8] +
inc [ebp+var_4]  +
cmp ecx [ebp+var_1C] +
mov edi [ebp+var_C] +
mov [edi+ebx+2] ax +
jg loc_103F07F  +
inc word ptr [edx+eax*2+102Ch]  +
xor edi edi +
cmp ecx [ebp+var_14] +
jl loc_103F055  +
sub ecx [ebp+var_14] +
mov edi [ebp+var_20] +
mov edi [edi+ecx*4] +
mov ecx [ebp+var_C] +
movzx ecx word ptr [ecx+ebx] +
add eax edi +
imul eax ecx +
add [edx+50h] eax +
mov eax [ebp+var_24] +
mov [ebp+var_28] ecx +
test eax eax +
jz loc_103F07F  +
mov ecx [ebp+var_C] +
movzx eax word ptr [ecx+eax+2] +
add eax edi +
imul eax [ebp+var_28] +
add [edx+54h] eax +
add [ebp+var_10] 4 +
dec [ebp+var_18]  +
jnz loc_103F00D  +
cmp [ebp+var_4] 0 +
jz loc_103F14B  +
mov eax [ebp+var_8] +
lea ecx [edx+eax*2+102Ch] +
mov edi 0FFFFh +
mov eax [ebp+var_8] +
dec eax  +
lea ebx [edx+eax*2+102Ch] +
jmp loc_103F0B1  +
dec eax  +
dec ebx  +
dec ebx  +
cmp word ptr [ebx] 0 +
jz loc_103F0AE  +
sub [ebp+var_4] 2 +
mov ebx edi +
add [edx+eax*2+102Ch] bx +
lea eax [edx+eax*2+102Eh] +
add word ptr [eax] 2 +
mov eax edi +
add [ecx] ax +
cmp [ebp+var_4] 0 +
jg loc_103F0A1  +
mov eax [ebp+var_8] +
mov [ebp+var_8] eax +
test eax eax +
jz loc_103F14B  +
mov [ebp+var_C] ecx +
mov eax [ebp+var_C] +
movzx eax word ptr [eax] +
mov [ebp+var_10] eax +
test eax eax +
jz loc_103F13E  +
lea ebx [edx+esi*4+104Ch] +
sub ebx 4 +
mov eax [ebx] +
dec esi  +
cmp eax [ebp+var_1C] +
mov [ebp+var_28] ebx +
jg loc_103F138  +
mov ecx [ebp+var_2C] +
movzx edi word ptr [ebp+var_8] +
lea eax [ecx+eax*4] +
movzx ecx word ptr [eax+2] +
cmp cx di +
jz loc_103F135  +
mov ebx [ebp+var_8] +
movzx ecx cx +
sub ebx ecx +
movzx ecx word ptr [eax] +
imul ebx ecx +
add [edx+50h] ebx +
mov ebx [ebp+var_28] +
mov [eax+2] di +
dec [ebp+var_10]  +
cmp [ebp+var_10] 0 +
jnz loc_103F0FC  +
dec [ebp+var_8]  +
sub [ebp+var_C] 2 +
cmp [ebp+var_8] 0 +
jnz loc_103F0E8  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
xor ebx ebx +
xor ecx ecx +
inc edx  +
push edi  +
add eax 102Ch +
mov di [eax] +
add di cx +
add di di +
movzx ecx di +
mov word ptr [ebp+edx*2+var_24] cx +
inc edx  +
inc eax  +
inc eax  +
cmp edx 0Fh +
jle loc_103F178  +
cmp [ebp+arg_4] ebx +
jl loc_103F1C2  +
movzx ecx word ptr [esi+ebx*4+2] +
lea eax [ecx-1] +
cmp eax 0Eh +
ja loc_103F1BC  +
lea eax [ebp+ecx*2+var_24] +
movzx edx word ptr [eax] +
movzx edi dx +
push ecx  +
inc edx  +
push edi  +
mov [eax] dx +
call sub_103ECA9  +
mov [esi+ebx*4] ax +
inc ebx  +
cmp ebx [ebp+arg_4] +
jle loc_103F196  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
or [ebp+var_8] 0FFFFFFFFh +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
mov ecx [esi+10h] +
mov [ebp+var_4] eax +
xor eax eax +
cmp ecx eax +
push edi  +
mov edi [esi] +
mov [ebp+var_C] ecx +
mov [ebx+40h] eax +
mov dword ptr [ebx+44h] 23Dh +
jle loc_103F278  +
cmp word ptr [edi+eax*4] 0 +
jz loc_103F227  +
inc dword ptr [ebx+40h]  +
mov edx [ebx+40h] +
mov [ebx+edx*4+104Ch] eax +
mov [ebp+var_8] eax +
mov byte ptr [eax+ebx+1940h] 0 +
jmp loc_103F22E  +
xor edx edx +
mov [edi+eax*4+2] dx +
inc eax  +
cmp eax ecx +
jl loc_103F206  +
jmp loc_103F278  +
cmp [ebp+var_8] 2 +
jge loc_103F243  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
jmp loc_103F245  +
xor eax eax +
inc dword ptr [ebx+40h]  +
mov ecx [ebx+40h] +
mov [ebx+ecx*4+104Ch] eax +
xor edx edx +
mov ecx eax +
shl ecx 2 +
inc edx  +
mov [ecx+edi] dx +
mov byte ptr [ebx+eax+1940h] 0 +
mov eax [ebp+var_4] +
dec dword ptr [ebx+50h]  +
test eax eax +
jz loc_103F278  +
movzx eax word ptr [ecx+eax+2] +
sub [ebx+54h] eax +
cmp dword ptr [ebx+40h] 2 +
jl loc_103F235  +
mov eax [ebp+var_8] +
mov [esi+18h] eax +
mov eax [ebx+40h] +
cdq   +
sub eax edx +
mov esi eax +
sar esi 1 +
jmp loc_103F299  +
push esi  +
mov eax ebx +
call sub_103EEE2  +
dec esi  +
cmp esi 1 +
jge loc_103F290  +
mov eax [ebx+40h] +
mov ecx [ebx+eax*4+104Ch] +
mov esi [ebx+1050h] +
dec eax  +
mov [ebx+40h] eax +
push 1  +
mov eax ebx +
mov [ebx+1050h] ecx +
call sub_103EEE2  +
dec dword ptr [ebx+44h]  +
mov ecx [ebx+44h] +
mov eax [ebx+1050h] +
mov [ebx+ecx*4+104Ch] esi +
dec dword ptr [ebx+44h]  +
mov ecx [ebx+44h] +
mov [ebx+ecx*4+104Ch] eax +
lea ecx [edi+eax*4] +
mov [ebp+var_10] ecx +
mov cx [ecx] +
lea edx [edi+esi*4] +
add cx [edx] +
mov [ebp+var_14] edx +
mov dx cx +
mov ecx [ebp+var_C] +
mov [edi+ecx*4] dx +
mov dl [ebx+esi+1940h] +
mov al [ebx+eax+1940h] +
cmp dl al +
jb loc_103F314  +
movzx eax dl +
jmp loc_103F317  +
movzx eax al +
mov edx [ebp+var_10] +
inc al  +
mov [ebx+ecx+1940h] al +
movzx eax cx +
mov [edx+2] ax +
mov edx [ebp+var_14] +
mov [edx+2] ax +
mov [ebx+1050h] ecx +
inc ecx  +
push 1  +
mov eax ebx +
mov [ebp+var_C] ecx +
call sub_103EEE2  +
cmp dword ptr [ebx+40h] 2 +
jge loc_103F29E  +
dec dword ptr [ebx+44h]  +
mov eax [ebx+44h] +
mov ecx [ebx+1050h] +
mov [ebx+eax*4+104Ch] ecx +
mov eax [ebp+arg_0] +
mov edx ebx +
call sub_103EF91  +
push [ebp+var_8]  +
mov esi edi +
push ebx  +
call sub_103F155  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_8] 0FFFFFFFFh +
and [ebp+var_10] 0 +
push ebx  +
push esi  +
push edi  +
push 7  +
mov esi ecx +
movzx ecx word ptr [eax+2] +
pop edx  +
push 4  +
pop edi  +
test ecx ecx +
jnz loc_103F3AC  +
push 3  +
mov edx 8Ah +
pop edi  +
mov ebx 0FFFFh +
mov [eax+esi*4+6] bx +
test esi esi +
jl loc_103F446  +
mov ebx [ebp+arg_0] +
add eax 6 +
inc esi  +
mov [ebp+var_C] esi +
mov esi [ebp+var_10] +
mov [ebp+var_4] eax +
mov eax ecx +
mov ecx [ebp+var_4] +
movzx ecx word ptr [ecx] +
inc esi  +
cmp esi edx +
jge loc_103F3DF  +
cmp eax ecx +
jz loc_103F43D  +
cmp esi edi +
jge loc_103F3ED  +
add [ebx+eax*4+0F90h] si +
jmp loc_103F41C  +
test eax eax +
jz loc_103F407  +
cmp eax [ebp+var_8] +
jz loc_103F3FE  +
inc word ptr [ebx+eax*4+0F90h]  +
inc word ptr [ebx+0FD0h]  +
jmp loc_103F41C  +
cmp esi 0Ah +
jg loc_103F415  +
inc word ptr [ebx+0FD4h]  +
jmp loc_103F41C  +
inc word ptr [ebx+0FD8h]  +
xor esi esi +
mov [ebp+var_8] eax +
test ecx ecx +
jnz loc_103F42E  +
mov edx 8Ah +
push 3  +
jmp loc_103F43C  +
cmp eax ecx +
jnz loc_103F437  +
push 6  +
pop edx  +
jmp loc_103F42A  +
push 7  +
pop edx  +
push 4  +
pop edi  +
add [ebp+var_4] 4 +
dec [ebp+var_C]  +
jnz loc_103F3CE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
movzx esi word ptr [ecx+2] +
push edi  +
xor ebx ebx +
push 7  +
pop edx  +
mov [ebp+var_8] 4 +
test esi esi +
jnz loc_103F481  +
mov edx 8Ah +
mov [ebp+var_8] 3 +
mov edi [ebp+arg_0] +
test edi edi +
jl loc_103F578  +
add ecx 6 +
inc edi  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_8] +
mov [ebp+var_10] edi +
jmp loc_103F49E  +
mov esi [ebp+arg_0] +
mov edi [ebp+var_4] +
movzx edi word ptr [edi] +
inc ebx  +
cmp ebx edx +
mov [ebp+arg_0] edi +
jge loc_103F4B4  +
cmp esi edi +
jz loc_103F56B  +
cmp ebx ecx +
jge loc_103F4D2  +
movzx edi word ptr [eax+esi*4+0F92h] +
movzx edx word ptr [eax+esi*4+0F90h] +
call sub_103EC05  +
dec ebx  +
jnz loc_103F4B8  +
jmp loc_103F548  +
test esi esi +
jz loc_103F50B  +
cmp esi [ebp+var_C] +
jz loc_103F4F1  +
movzx edi word ptr [eax+esi*4+0F92h] +
movzx edx word ptr [eax+esi*4+0F90h] +
call sub_103EC05  +
dec ebx  +
movzx edi word ptr [eax+0FD2h] +
movzx edx word ptr [eax+0FD0h] +
call sub_103EC05  +
lea edx [ebx-3] +
push 2  +
jmp loc_103F542  +
cmp ebx 0Ah +
jg loc_103F52A  +
movzx edi word ptr [eax+0FD6h] +
movzx edx word ptr [eax+0FD4h] +
call sub_103EC05  +
lea edx [ebx-3] +
push 3  +
jmp loc_103F542  +
movzx edi word ptr [eax+0FDAh] +
movzx edx word ptr [eax+0FD8h] +
call sub_103EC05  +
lea edx [ebx-0Bh] +
push 7  +
pop edi  +
call sub_103EC05  +
xor ebx ebx +
mov [ebp+var_C] esi +
cmp [ebp+arg_0] ebx +
jnz loc_103F55B  +
mov edx 8Ah +
push 3  +
jmp loc_103F56A  +
cmp esi [ebp+arg_0] +
jnz loc_103F565  +
push 6  +
pop edx  +
jmp loc_103F557  +
push 7  +
pop edx  +
push 4  +
pop ecx  +
add [ebp+var_4] 4 +
dec [ebp+var_10]  +
jnz loc_103F49B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push edi  +
push 5  +
add edx 0FFFFFEFFh +
pop edi  +
call sub_103EC05  +
mov ebx [ebp+arg_4] +
dec ebx  +
mov edx ebx +
call sub_103EC05  +
push 4  +
lea edx [esi-4] +
pop edi  +
call sub_103EC05  +
and [ebp+arg_4] 0 +
test esi esi +
jle loc_103F5DC  +
mov ecx [ebp+arg_4] +
movzx ecx ds:byte_1009E64[ecx] +
movzx edx word ptr [eax+ecx*4+0F92h] +
push 3  +
pop edi  +
call sub_103EC05  +
inc [ebp+arg_4]  +
cmp [ebp+arg_4] esi +
jl loc_103F5BA  +
mov ecx [ebp+arg_0] +
dec ecx  +
push ecx  +
lea ecx [eax+0B0h] +
call sub_103F452  +
push ebx  +
lea ecx [eax+9A4h] +
call sub_103F452  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
movzx esi word ptr [eax+48h] +
push edi  +
mov edi [eax] +
mov [esi+edi] cl +
inc word ptr [eax+48h]  +
test edx edx +
jnz loc_103F628  +
lea ecx [eax+ecx*4+0B0h] +
inc word ptr [ecx]  +
jmp loc_103F679  +
movzx ecx byte ptr [eax+ecx+1B7Dh] +
dec edx  +
lea ecx [eax+ecx*4+4B4h] +
inc word ptr [ecx]  +
cmp edx 100h +
jge loc_103F64D  +
movzx ecx byte ptr [eax+edx+1C7Dh] +
jmp loc_103F65A  +
mov ecx edx +
sar ecx 7 +
movzx ecx byte ptr [ecx+eax+1D7Dh] +
lea ecx [eax+ecx*4+9A4h] +
inc word ptr [ecx]  +
movzx ecx word ptr [eax+4Ah] +
mov esi [eax+8] +
mov [esi+ecx*2] dx +
mov cl [eax+4Fh] +
inc word ptr [eax+4Ah]  +
or [eax+4Eh] cl +
shl byte ptr [eax+4Fh] 1 +
test byte ptr [eax+48h] 7 +
jnz loc_103F69C  +
movzx ecx word ptr [eax+4Ch] +
mov dl [eax+4Eh] +
mov [ecx+eax+1F6Ch] dl +
inc word ptr [eax+4Ch]  +
mov byte ptr [eax+4Eh] 0 +
mov byte ptr [eax+4Fh] 1 +
movzx esi word ptr [eax+48h] +
test esi 0FFFh +
jnz loc_103F704  +
movzx edx word ptr [eax+3Ch] +
movzx ecx si +
shl ecx 3 +
sub edx [eax+34h] +
mov [ebp+var_4] offset dword_1009E78 +
lea esi [eax+9A4h] +
push ebx  +
mov edi [ebp+var_4] +
mov edi [edi] +
movzx ebx word ptr [esi] +
add [ebp+var_4] 4 +
add edi 5 +
imul edi ebx +
add ecx edi +
add esi 4 +
cmp [ebp+var_4] offset dword_1009EF0 +
jl loc_103F6C3  +
movzx esi word ptr [eax+48h] +
mov di si +
shr di 1 +
pop ebx  +
cmp [eax+4Ah] di +
jnb loc_103F704  +
shr ecx 2 +
and ecx 3FFFFFFEh +
and edx 0FFFFFFFEh +
cmp ecx edx +
jb loc_103F719  +
mov ecx 7FFFh +
cmp si cx +
jz loc_103F719  +
inc ecx  +
cmp [eax+4Ah] cx +
jz loc_103F719  +
xor eax eax +
jmp loc_103F71C  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor ecx ecx +
push edi  +
mov [ebp+var_8] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_1] cl +
cmp [eax+48h] cx +
jz loc_103F825  +
push ebx  +
push esi  +
test byte ptr [ebp+var_8] 7 +
jnz loc_103F75F  +
movzx ecx word ptr [ebp+var_C] +
mov cl [ecx+eax+1F6Ch] +
inc [ebp+var_C]  +
mov [ebp+var_1] cl +
movzx ecx word ptr [ebp+var_8] +
mov edx [eax] +
inc [ebp+var_8]  +
test [ebp+var_1] 1 +
movzx ebx byte ptr [ecx+edx] +
mov ecx [ebp+arg_0] +
jnz loc_103F784  +
lea ebx [ecx+ebx*4] +
movzx edi word ptr [ebx+2] +
movzx edx word ptr [ebx] +
jmp loc_103F80D  +
movzx esi byte ptr [ebx+eax+1B7Dh] +
movzx edi word ptr [ecx+esi*4+406h] +
movzx edx word ptr [ecx+esi*4+404h] +
call sub_103EC05  +
mov edi ds:dword_1009DF0[esi*4] +
test edi edi +
jz loc_103F7BA  +
mov edx ebx +
sub edx [eax+esi*4+1E80h] +
call sub_103EC05  +
movzx ecx word ptr [ebp+var_10] +
mov edx [eax+8] +
movzx ebx word ptr [edx+ecx*2] +
inc [ebp+var_10]  +
cmp ebx 100h +
jge loc_103F7DA  +
movzx esi byte ptr [ebx+eax+1C7Dh] +
jmp loc_103F7E7  +
mov ecx ebx +
sar ecx 7 +
movzx esi byte ptr [ecx+eax+1D7Dh] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+esi*4] +
movzx edi word ptr [ecx+2] +
movzx edx word ptr [ecx] +
call sub_103EC05  +
mov edi ds:dword_1009E78[esi*4] +
test edi edi +
jz loc_103F812  +
mov edx ebx +
sub edx [eax+esi*4+1EF4h] +
call sub_103EC05  +
mov cx word ptr [ebp+var_8] +
shr [ebp+var_1] 1 +
cmp cx [eax+48h] +
jb loc_103F748  +
pop esi  +
pop ebx  +
mov ecx [ebp+arg_0] +
movzx edi word ptr [ecx+402h] +
movzx edx word ptr [ecx+400h] +
call sub_103EC05  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov eax 8000h +
push esi  +
xor esi esi +
mov [ebp+var_4] eax +
mov ecx [edi+18h] +
lea edx [ecx+esi] +
movzx ecx word ptr [edx] +
mov ebx eax +
cmp cx bx +
jb loc_103F86E  +
movzx ecx cx +
sub ecx eax +
jmp loc_103F870  +
xor ecx ecx +
inc esi  +
inc esi  +
dec [ebp+var_4]  +
mov [edx] cx +
jnz loc_103F857  +
xor esi esi +
mov [ebp+var_4] eax +
mov ecx [edi+1Ch] +
lea edx [ecx+esi] +
movzx ecx word ptr [edx] +
mov ebx eax +
cmp cx bx +
jb loc_103F896  +
movzx ecx cx +
sub ecx eax +
jmp loc_103F898  +
xor ecx ecx +
inc esi  +
inc esi  +
dec [ebp+var_4]  +
mov [edx] cx +
jnz loc_103F87F  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
movzx edx word ptr [esi+3Ch] +
mov eax [esi+14h] +
movzx ecx dx +
add ecx eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [ecx+102h] +
push edi  +
mov edi [esi+38h] +
mov [ebp+var_10] eax +
mov al [edi+ecx-1] +
mov [ebp+var_1] al +
mov al [edi+ecx] +
mov [ebp+var_2] al +
mov eax 7EFAh +
mov [ebp+var_8] 1000h +
cmp dx ax +
jbe loc_103F8FC  +
add edx 0FFFF8106h +
movzx eax dx +
mov [ebp+var_C] eax +
jmp loc_103F900  +
and [ebp+var_C] 0 +
cmp edi 102h +
jl loc_103F90F  +
mov [ebp+var_8] 400h +
mov eax [esi+14h] +
movzx edx bx +
mov [ebp+var_14] edx +
add edx eax +
mov al [ebp+var_2] +
cmp [edx+edi] al +
jnz loc_103F9CD  +
mov al [ebp+var_1] +
cmp [edx+edi-1] al +
jnz loc_103F9CD  +
mov al [edx] +
cmp al [ecx] +
jnz loc_103F9CD  +
inc edx  +
mov al [edx] +
cmp al [ecx+1] +
jnz loc_103F9CD  +
inc edx  +
mov bl [edx] +
lea eax [ecx+2] +
cmp bl [eax] +
jnz loc_103F9CD  +
mov ebx [ebp+var_10] +
mov ecx eax +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
inc ecx  +
mov al [ecx] +
inc edx  +
cmp al [edx] +
jnz loc_103F99C  +
cmp ecx ebx +
jb loc_103F958  +
sub ecx ebx +
mov eax 102h +
add ecx eax +
mov edx ecx +
cmp edx edi +
lea ecx [ebx-102h] +
jle loc_103F9CD  +
cmp edx eax +
mov di word ptr [ebp+arg_0] +
mov [esi+3Eh] di +
mov edi edx +
jge loc_103F9F7  +
lea eax [edx+ecx] +
mov dl [eax-1] +
mov al [eax] +
mov [ebp+var_1] dl +
mov [ebp+var_2] al +
mov eax [ebp+var_14] +
mov edx [esi+1Ch] +
and eax 7FFFh +
movzx ebx word ptr [edx+eax*2] +
mov [ebp+arg_0] ebx +
cmp bx word ptr [ebp+var_C] +
jbe loc_103F9F7  +
add [ebp+var_8] 0FFFFh +
cmp word ptr [ebp+var_8] 0 +
jnz loc_103F90F  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
xor edx edx +
mov [ebx+58h] edx +
cmp [ebx+0F1Ah] dx +
jnz locret_103FBE1  +
push esi  +
lea ecx [ebx+1E80h] +
xor eax eax +
mov esi offset dword_1009DF0 +
mov [ebp+var_8] ecx +
push edi  +
mov ecx [ebp+var_8] +
and [ebp+var_4] 0 +
xor edi edi +
mov [ecx] eax +
mov ecx [esi] +
inc edi  +
shl edi cl +
test edi edi +
jle loc_103FA5A  +
xor edi edi +
mov [ebx+eax+1B7Dh] dl +
mov ecx [esi] +
inc edi  +
shl edi cl +
inc eax  +
inc [ebp+var_4]  +
cmp [ebp+var_4] edi +
jl loc_103FA43  +
add [ebp+var_8] 4 +
add esi 4 +
inc edx  +
cmp esi offset dword_1009E60 +
jl loc_103FA2F  +
mov [eax+ebx+1B7Ch] dl +
lea ecx [ebx+1EF4h] +
xor eax eax +
xor edx edx +
mov esi offset dword_1009E78 +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
and [ebp+var_4] 0 +
xor edi edi +
mov [ecx] eax +
mov ecx [esi] +
inc edi  +
shl edi cl +
test edi edi +
jle loc_103FAAE  +
xor edi edi +
mov [ebx+eax+1C7Dh] dl +
mov ecx [esi] +
inc edi  +
shl edi cl +
inc eax  +
inc [ebp+var_4]  +
cmp [ebp+var_4] edi +
jl loc_103FA97  +
add [ebp+var_8] 4 +
add esi 4 +
inc edx  +
cmp esi offset dword_1009EB8 +
jl loc_103FA83  +
sar eax 7 +
cmp edx 1Eh +
jge loc_103FB1D  +
lea ecx [ebx+edx*4+1EF4h] +
lea esi dword_1009E78[edx*4] +
mov [ebp+var_8] ecx +
mov edi [ebp+var_8] +
and [ebp+var_4] 0 +
mov ecx eax +
shl ecx 7 +
mov [edi] ecx +
mov ecx [esi] +
xor edi edi +
sub ecx 7 +
inc edi  +
shl edi cl +
test edi edi +
jle loc_103FB0D  +
mov [ebx+eax+1D7Dh] dl +
mov ecx [esi] +
xor edi edi +
sub ecx 7 +
inc edi  +
shl edi cl +
inc eax  +
inc [ebp+var_4]  +
cmp [ebp+var_4] edi +
jl loc_103FAF3  +
add [ebp+var_8] 4 +
add esi 4 +
inc edx  +
cmp esi offset dword_1009EF0 +
jl loc_103FAD7  +
xor eax eax +
movzx esi ax +
push 8  +
mov eax esi +
pop edx  +
shl esi 10h +
or eax esi +
lea edi [ebx+102Ch] +
mov ecx edx +
stos   +
lea eax [ebx+0A9Ah] +
mov ecx 90h +
pop edi  +
mov esi edx +
mov [eax] si +
add eax 4 +
inc word ptr [ebx+103Ch]  +
dec ecx  +
jnz loc_103FB42  +
push 70h  +
lea eax [ebx+0CDAh] +
pop ecx  +
push 9  +
pop esi  +
mov [eax] si +
add eax 4 +
inc word ptr [ebx+103Eh]  +
dec ecx  +
jnz loc_103FB5D  +
push 18h  +
lea eax [ebx+0E9Ah] +
pop ecx  +
push 7  +
pop esi  +
mov [eax] si +
add eax 4 +
inc word ptr [ebx+103Ah]  +
dec ecx  +
jnz loc_103FB79  +
lea eax [ebx+0EFAh] +
mov ecx edx +
mov esi edx +
mov [eax] si +
add eax 4 +
inc word ptr [ebx+103Ch]  +
dec ecx  +
jnz loc_103FB94  +
push 11Fh  +
lea esi [ebx+0A98h] +
push ebx  +
call sub_103F155  +
xor esi esi +
lea edx [ebx+0F18h] +
push 5  +
pop eax  +
push eax  +
push esi  +
mov [edx+2] ax +
call sub_103ECA9  +
mov [edx] ax +
inc esi  +
add edx 4 +
cmp esi 1Eh +
jl loc_103FBBF  +
mov eax ebx +
call sub_103EE77  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx eax +
movzx eax word ptr [ebx+4Ch] +
mov cl [ebx+4Eh] +
push esi  +
mov [eax+ebx+1F6Ch] cl +
push edi  +
lea eax [ebx+5Ch] +
push eax  +
call sub_103F1D7  +
lea eax [ebx+78h] +
push eax  +
call sub_103F1D7  +
mov ecx [ebx+74h] +
lea eax [ebx+0B0h] +
push ebx  +
mov [ebp+var_8] eax +
call sub_103F381  +
mov ecx [ebx+90h] +
lea eax [ebx+9A4h] +
push ebx  +
mov [ebp+var_4] eax +
call sub_103F381  +
lea eax [ebx+94h] +
push eax  +
call sub_103F1D7  +
push 12h  +
pop esi  +
push 3  +
pop edi  +
movzx eax ds:byte_1009E64[esi] +
cmp word ptr [ebx+eax*4+0F92h] 0 +
jnz loc_103FC64  +
dec esi  +
cmp esi edi +
jge loc_103FC4D  +
mov ecx [ebx+54h] +
mov eax esi +
imul eax eax +
add eax 11h +
add [ebx+50h] eax +
mov eax [ebx+50h] +
add eax 0Ah +
add ecx 0Ah +
shr eax 3 +
shr ecx 3 +
cmp ecx eax +
ja loc_103FC87  +
mov eax ecx +
mov edx [ebp+arg_4] +
add edx 4 +
cmp edx eax +
ja loc_103FCC7  +
cmp [ebp+arg_0] 0 +
jz loc_103FCC7  +
mov edx [ebp+arg_8] +
mov eax ebx +
call sub_103EC05  +
mov ecx [ebx+58h] +
mov eax [ebp+arg_4] +
add ecx 0Ah +
and ecx 0FFFFFFF8h +
add eax 4 +
lea eax [ecx+eax*8] +
mov ecx [ebp+arg_4] +
push 1  +
push [ebp+arg_0]  +
mov [ebx+58h] eax +
mov eax ebx +
call sub_103ED5D  +
jmp loc_103FD22  +
mov edx [ebp+arg_8] +
cmp ecx eax +
mov eax ebx +
jnz loc_103FCF2  +
add edx 2 +
call sub_103EC05  +
lea eax [ebx+0F18h] +
push eax  +
lea eax [ebx+0A98h] +
push eax  +
mov eax ebx +
call sub_103F725  +
mov eax [ebx+54h] +
jmp loc_103FD1D  +
add edx 4 +
call sub_103EC05  +
mov eax [ebx+90h] +
inc esi  +
inc eax  +
push eax  +
mov eax [ebx+74h] +
inc eax  +
push eax  +
mov eax ebx +
call sub_103F584  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_103F725  +
mov eax [ebx+50h] +
add eax edi +
add [ebx+58h] eax +
mov eax ebx +
call sub_103EE77  +
cmp [ebp+arg_8] 0 +
jz loc_103FD38  +
call sub_103ECD4  +
add dword ptr [ebx+58h] 7 +
mov eax [ebx+58h] +
pop edi  +
pop esi  +
shr eax 3 +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
mov esi eax +
mov [ebp+var_8] ebx +
mov [ebp+var_4] 2 +
cmp [esi+24h] ebx +
jz loc_103FF92  +
push edi  +
mov edi 7FFFh +
cmp dword ptr [esi+24h] 2 +
jle loc_103FDB0  +
movzx ecx word ptr [esi+3Ch] +
mov eax [esi+14h] +
movzx eax byte ptr [eax+ecx+2] +
mov edx [esi+20h] +
shl edx 5 +
xor eax edx +
mov edx [esi+18h] +
and eax edi +
mov [esi+20h] eax +
movzx eax word ptr [edx+eax*2] +
mov edx [esi+1Ch] +
and ecx edi +
mov [edx+ecx*2] ax +
mov ecx [esi+20h] +
mov edx [esi+18h] +
mov bx [esi+3Ch] +
mov [edx+ecx*2] bx +
jmp loc_103FDB5  +
xor eax eax +
mov [esi+38h] ebx +
mov ecx [ebp+var_4] +
mov [esi+38h] ecx +
movzx ecx word ptr [esi+3Eh] +
mov [ebp+var_C] ecx +
mov [ebp+var_4] 2 +
test ax ax +
jz loc_103FE25  +
cmp dword ptr [esi+38h] 20h +
jge loc_103FE25  +
movzx ecx word ptr [esi+3Ch] +
movzx edx cx +
movzx ebx ax +
sub edx ebx +
cmp edx 7EFAh +
jg loc_103FE25  +
mov edx 0FFFDh +
cmp cx dx +
jnb loc_103FE25  +
push eax  +
call sub_103F8AB  +
mov [ebp+var_4] eax +
mov eax [esi+24h] +
cmp [ebp+var_4] eax +
jle loc_103FE06  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 3 +
jnz loc_103FE25  +
movzx eax word ptr [esi+3Eh] +
movzx ecx word ptr [esi+3Ch] +
sub ecx eax +
cmp ecx 1000h +
jle loc_103FE25  +
mov [ebp+var_4] 2 +
mov eax [esi+38h] +
cmp eax 3 +
jl loc_103FEFE  +
cmp [ebp+var_4] eax +
jg loc_103FEFE  +
movzx edx word ptr [esi+3Ch] +
lea ecx [eax-3] +
movzx eax word ptr [ebp+var_C] +
sub edx eax +
dec edx  +
mov eax esi +
call sub_103F603  +
mov ecx [esi+38h] +
xor edx edx +
inc edx  +
sub edx ecx +
add [esi+24h] edx +
add ecx 0FFFFFFFEh +
mov [esi+38h] ecx +
inc word ptr [esi+3Ch]  +
cmp dword ptr [esi+24h] 2 +
movzx ecx word ptr [esi+3Ch] +
jle loc_103FEA9  +
mov ebx [esi+20h] +
movzx edx cx +
mov ecx [esi+14h] +
movzx ecx byte ptr [ecx+edx+2] +
shl ebx 5 +
xor ecx ebx +
mov ebx [esi+18h] +
and ecx edi +
and edx edi +
mov edi [esi+1Ch] +
mov [esi+20h] ecx +
mov cx [ebx+ecx*2] +
mov [edi+edx*2] cx +
mov di [esi+3Ch] +
mov ecx [esi+20h] +
mov edx [esi+18h] +
mov [edx+ecx*2] di +
mov edi 7FFFh +
dec dword ptr [esi+38h]  +
jnz loc_103FE60  +
xor ebx ebx +
inc word ptr [esi+3Ch]  +
movzx edx word ptr [esi+3Ch] +
mov [ebp+var_8] ebx +
mov [ebp+var_4] 2 +
cmp eax ebx +
jz loc_103FF6A  +
mov ecx [esi+34h] +
mov eax 10000h +
cmp dx bx +
jz loc_103FEDA  +
movzx eax dx +
sub eax ecx +
cmp ecx ebx +
jl loc_103FEE9  +
movzx ecx word ptr [esi+34h] +
add ecx [esi+14h] +
jmp loc_103FEEB  +
xor ecx ecx +
push ebx  +
push eax  +
push ecx  +
mov eax esi +
call sub_103FBE8  +
movzx eax word ptr [esi+3Ch] +
mov [esi+34h] eax +
jmp loc_103FF6A  +
xor ebx ebx +
cmp [ebp+var_8] ebx +
jz loc_103FF5C  +
mov ax [esi+3Ch] +
mov ecx [esi+14h] +
dec ax  +
movzx eax ax +
movzx ecx byte ptr [eax+ecx] +
xor edx edx +
mov eax esi +
call sub_103F603  +
test eax eax +
jz loc_103FF63  +
movzx eax word ptr [esi+3Ch] +
mov ecx [esi+34h] +
cmp ax bx +
jnz loc_103FF35  +
mov eax 10000h +
jmp loc_103FF38  +
movzx eax ax +
sub eax ecx +
cmp ecx ebx +
jl loc_103FF47  +
movzx ecx word ptr [esi+34h] +
add ecx [esi+14h] +
jmp loc_103FF49  +
xor ecx ecx +
push ebx  +
push eax  +
push ecx  +
mov eax esi +
call sub_103FBE8  +
movzx eax word ptr [esi+3Ch] +
mov [esi+34h] eax +
jmp loc_103FF63  +
mov [ebp+var_8] 1 +
inc word ptr [esi+3Ch]  +
dec dword ptr [esi+24h]  +
cmp [esi+24h] ebx +
jnz loc_103FD71  +
pop edi  +
cmp [ebp+var_8] ebx +
jz loc_103FF92  +
mov ax [esi+3Ch] +
mov ecx [esi+14h] +
dec ax  +
movzx eax ax +
movzx ecx byte ptr [eax+ecx] +
xor edx edx +
mov eax esi +
call sub_103F603  +
movzx eax word ptr [esi+3Ch] +
mov ecx [esi+34h] +
cmp ax bx +
jnz loc_103FFA5  +
mov eax 10000h +
jmp loc_103FFA8  +
movzx eax ax +
sub eax ecx +
cmp ecx ebx +
jl loc_103FFB7  +
movzx ecx word ptr [esi+34h] +
add ecx [esi+14h] +
jmp loc_103FFB9  +
xor ecx ecx +
push 1  +
push eax  +
push ecx  +
mov eax esi +
call sub_103FBE8  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_18] +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
and dword ptr [ebx+28h] 0 +
mov [ebx+18h] eax +
mov eax [ebp+arg_14] +
mov [ebx+1Ch] eax +
mov eax [ebp+arg_C] +
mov [ebx+4] eax +
xor eax eax +
cmp [ebp+arg_1C] 0 +
mov [ebx+0Ch] ax +
mov eax [ebp+arg_10] +
mov [ebx+10h] eax +
mov eax [ebp+arg_4] +
push esi  +
mov [ebx+14h] eax +
mov [ebx+24h] ecx +
mov esi 8000h +
jnz loc_104001D  +
push esi  +
push eax  +
add eax esi +
push eax  +
call memcpy  +
add esp 0Ch +
xor eax eax +
and [ebx+30h] eax +
mov [ebx+2Ch] ax +
call sub_103FA04  +
and dword ptr [ebx+20h] 0 +
mov eax esi +
push 2  +
mov [ebx+3Ch] ax +
mov eax [ebx+14h] +
pop ecx  +
mov [ebx+34h] esi +
add eax esi +
push edi  +
movzx edi byte ptr [eax] +
mov edx [ebx+20h] +
shl edx 5 +
xor edx edi +
and edx 7FFFh +
inc eax  +
dec ecx  +
mov [ebx+20h] edx +
jnz loc_1040041  +
cmp [ebp+arg_1C] cl +
jz loc_1040067  +
mov edi ebx +
call sub_103F845  +
jmp loc_1040079  +
xor eax eax +
mov ecx esi +
mov edx [ebx+18h] +
xor edi edi +
mov [eax+edx] di +
inc eax  +
inc eax  +
dec ecx  +
jnz loc_104006B  +
push 8  +
pop edi  +
push 43h  +
pop edx  +
mov eax ebx +
call sub_103EC05  +
push 4Bh  +
pop edx  +
call sub_103EC05  +
call sub_103FD4A  +
mov ecx [ebp+arg_20] +
inc eax  +
inc eax  +
cmp [ebp+arg_1C] 0 +
movzx eax ax +
mov [ecx] eax +
pop edi  +
jz loc_10400B8  +
mov eax [ebx+14h] +
push esi  +
lea ecx [eax+8000h] +
push ecx  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax [ebx+28h] +
neg eax  +
sbb eax eax +
pop esi  +
and eax 3 +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_10403C1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1040217  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+998h] eax +
mov eax [ebp+arg_8] +
mov [esi+99Ch] eax +
mov eax [ebp+arg_10] +
push esi  +
mov [esi+874h] eax +
call sub_1041200  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_1040128  +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
push 2  +
pop eax  +
jmp loc_1040135  +
push esi  +
call sub_1040855  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10408C4  +
xor eax eax +
cmp [esi+1Ch] eax +
pop esi  +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_18] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+4344h] eax +
mov eax [ebp+arg_4] +
lea ecx [eax-1] +
mov [esi+4] eax +
test ecx eax +
jnz loc_10401DC  +
mov ecx 8000h +
cmp eax ecx +
jb loc_10401DC  +
cmp eax 200000h +
ja loc_10401DC  +
mov eax [ebp+arg_8] +
test eax 7FFFh +
jz loc_104019E  +
and eax 0FFFF8000h +
cmp eax ecx +
jge loc_10401A4  +
mov eax ecx +
mov [esi+98Ch] eax +
mov eax [ebp+arg_14] +
mov [esi+4350h] eax +
mov eax [ebp+arg_C] +
mov [esi+4348h] eax +
mov eax [ebp+arg_10] +
push esi  +
mov [esi+434Ch] eax +
call sub_1040488  +
test eax eax +
jnz loc_10401D2  +
inc eax  +
jmp loc_10401DF  +
push esi  +
call sub_1040217  +
xor eax eax +
jmp loc_10401DF  +
push 5  +
pop eax  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1040203  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_104020E  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 40000h  +
xor edi edi +
push edi  +
push dword ptr [esi+8]  +
call memset  +
mov eax [esi+4] +
mov ecx [esi+4334h] +
mov edx [esi+4338h] +
sub ecx eax +
mov [esi] ecx +
mov ecx eax +
mov [esi+458h] eax +
mov [esi+86Ch] eax +
mov eax [esi+870h] +
shl ecx 2 +
sub edx ecx +
lea eax ds:100h[eax*8] +
push eax  +
mov [esi+0Ch] edx +
mov edx [esi+433Ch] +
xor ebx ebx +
inc ebx  +
lea eax [esi+3964h] +
sub edx ecx +
push edi  +
push eax  +
mov [esi+10h] edx +
mov [esi+44h] ebx +
mov [esi+48h] ebx +
mov [esi+4Ch] ebx +
mov [esi+38h] ebx +
mov [esi+3Ch] ebx +
mov [esi+40h] ebx +
mov [esi+981h] bl +
mov [esi+984h] ebx +
mov byte ptr [esi+18h] 20h +
mov [esi+14h] edi +
mov [esi+1Ch] edi +
call memset  +
mov edi 0F9h +
push edi  +
lea eax [esi+41F8h] +
push 0  +
push eax  +
call memset  +
push 100h  +
lea eax [esi+2544h] +
push 8  +
push eax  +
call memset  +
mov eax [esi+870h] +
shl eax 3 +
push eax  +
lea eax [esi+2644h] +
push 9  +
push eax  +
call memset  +
push edi  +
lea eax [esi+2801h] +
push 6  +
push eax  +
call memset  +
mov eax 3030303h +
lea edi [esi+4322h] +
stos   +
add esp 48h +
push esi  +
stos   +
call sub_1041856  +
mov eax [esi+458h] +
xor edi edi +
push 2000h  +
mov [esi+994h] eax +
mov [esi+990h] eax +
mov [esi+868h] edi +
mov [esi+988h] ebx +
push edi  +
push dword ptr [esi+34h]  +
call memset  +
add esp 0Ch +
push esi  +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov byte ptr [esi+880h] 0 +
mov [esi+38h] ebx +
mov [esi+3Ch] ebx +
mov [esi+40h] ebx +
call sub_10413DB  +
push 0AF0h  +
lea eax [esi+28FCh] +
push edi  +
push eax  +
mov [esi+4340h] edi +
call memset  +
push 3E4h  +
lea eax [esi+3C22h] +
push edi  +
push eax  +
call memset  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [esi+42F2h] +
stos   +
mov eax [esi+98Ch] +
mov ecx [esi+4] +
lea eax [eax+ecx+1101h] +
push eax  +
push 0  +
push dword ptr [esi+4334h]  +
call memset  +
add esp 24h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
xor ebx ebx +
push edi  +
cmp eax ebx +
jz loc_10403E0  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [esi+8] ebx +
lea edi [esi+4338h] +
mov eax [edi] +
cmp eax ebx +
jz loc_10403F6  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [edi] ebx +
lea edi [esi+433Ch] +
mov eax [edi] +
cmp eax ebx +
jz loc_104040C  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [edi] ebx +
lea edi [esi+4334h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1040424  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [edi] ebx +
mov [esi] ebx +
mov eax [esi+30h] +
cmp eax ebx +
jz loc_1040436  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [esi+30h] ebx +
mov eax [esi+2Ch] +
cmp eax ebx +
jz loc_1040448  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [esi+2Ch] ebx +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_104045A  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [esi+34h] ebx +
lea edi [esi+2540h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1040470  +
push eax  +
call dword ptr [esi+434Ch]  +
pop ecx  +
mov [edi] ebx +
push esi  +
call sub_10413B1  +
pop edi  +
mov [esi+87Ch] ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
push edi  +
xor edi edi +
push 4  +
pop eax  +
mov [esi+8] edi +
mov [esi+4338h] edi +
mov [esi+433Ch] edi +
mov [esi] edi +
mov [esi+4334h] edi +
mov [esi+2540h] edi +
mov [esi+30h] edi +
mov [esi+2Ch] edi +
mov [esi+34h] edi +
mov [esi+85Ch] edi +
mov [esi+870h] eax +
mov [ebp+arg_0] eax +
push ebx  +
mov eax [esi+870h] +
mov cl ds:byte_100A00C[eax] +
xor ebx ebx +
inc ebx  +
shl ebx cl +
add [ebp+arg_0] ebx +
inc eax  +
mov [esi+870h] eax +
cmp [ebp+arg_0] edx +
jb loc_10404D1  +
push 40000h  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+8] eax +
pop ebx  +
cmp eax edi +
jnz loc_1040513  +
push esi  +
call sub_10403C1  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
lea eax [ebp+arg_0] +
push eax  +
push 1101h  +
push dword ptr [esi+4]  +
call sub_10401E9  +
test eax eax +
jnz loc_104050B  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [esi+98Ch]  +
push [ebp+arg_0]  +
call sub_10401E9  +
test eax eax +
jnz loc_104050B  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_0] +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100CE3F  +
test eax eax +
jnz loc_104050B  +
push [ebp+var_4]  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+4338h] eax +
cmp eax edi +
jz loc_1040505  +
push [ebp+var_4]  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+433Ch] eax +
cmp eax edi +
jz loc_1040505  +
push [ebp+arg_0]  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+4334h] eax +
cmp eax edi +
jz loc_1040505  +
push 10000h  +
mov [esi] eax +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+30h] eax +
cmp eax edi +
jz loc_1040505  +
push 20000h  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+2Ch] eax +
cmp eax edi +
jz loc_1040505  +
push 2000h  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+34h] eax +
push esi  +
cmp eax edi +
jz loc_1040506  +
call sub_10419C2  +
push esi  +
call sub_1041A42  +
push esi  +
call sub_1041374  +
test eax eax +
jz loc_1040505  +
push 18150h  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+2540h] eax +
cmp eax edi +
jz loc_1040505  +
xor eax eax +
inc eax  +
mov [esi+87Ch] eax +
jmp loc_104050D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push [ebp+arg_0]  +
push 0  +
push 0  +
push esi  +
call sub_1042586  +
push [ebp+arg_4]  +
mov ebx eax +
push esi  +
call sub_104243F  +
push 1  +
push esi  +
mov [ebp+var_4] eax +
call sub_10417D5  +
push esi  +
call sub_1041AF9  +
cmp eax ebx +
jb loc_104066C  +
mov eax [esi+994h] +
cmp eax [esi+990h] +
jb loc_104066C  +
mov [ebp+var_4] 3 +
movzx eax byte ptr [ebp+var_4] +
push edi  +
push eax  +
push 3  +
push esi  +
call sub_10412F2  +
mov eax ebx +
shr eax 10h +
mov edi 0FFh +
and eax edi +
push eax  +
push 8  +
push esi  +
call sub_10412F2  +
mov eax ebx +
shr eax 8 +
and eax edi +
push eax  +
push 8  +
push esi  +
call sub_10412F2  +
movzx eax bl +
push eax  +
push 8  +
push esi  +
call sub_10412F2  +
cmp [ebp+var_4] 1 +
pop edi  +
jnz loc_10406C3  +
push esi  +
call sub_10418A4  +
push [ebp+arg_0]  +
push esi  +
call sub_1041CD8  +
jmp loc_10406DE  +
cmp [ebp+var_4] 2 +
jnz loc_10406E9  +
push esi  +
call sub_104190C  +
push esi  +
call sub_10418A4  +
push [ebp+arg_0]  +
push esi  +
call sub_1041FFA  +
push [ebp+arg_4]  +
push esi  +
call sub_1041A77  +
jmp loc_1040705  +
cmp [ebp+var_4] 3 +
jnz loc_1040705  +
push [ebp+arg_4]  +
push esi  +
call sub_1041A77  +
push ebx  +
push dword ptr [esi+994h]  +
push esi  +
call sub_1041C27  +
add [esi+994h] ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [esi+28h]  +
xor ebx ebx +
push dword ptr [esi+24h]  +
mov [esi+981h] bl +
push ebx  +
push esi  +
call sub_104283C  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call sub_1040623  +
mov eax [esi+24h] +
cmp [ebp+arg_0] eax +
jnz loc_104076C  +
push 2000h  +
push ebx  +
push dword ptr [esi+34h]  +
call memset  +
add esp 0Ch +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
jmp loc_104081E  +
mov ecx [ebp+arg_0] +
shr eax 3 +
shr ecx 3 +
sub eax ecx +
push edi  +
lea edi [eax+1] +
mov eax [ebp+arg_0] +
cdq   +
and edx 7 +
add edx eax +
sar edx 3 +
mov eax 2000h +
sub eax edx +
cmp edi eax +
jl loc_1040794  +
mov edi eax +
mov eax [esi+34h] +
push edi  +
add ecx eax +
push ecx  +
push eax  +
call memmove  +
mov eax [esi+24h] +
sub eax [ebp+arg_0] +
mov ecx 1FFFh +
shr eax 3 +
sub ecx eax +
push ecx  +
mov ecx [esi+34h] +
lea eax [eax+ecx+1] +
push ebx  +
push eax  +
call memset  +
mov ecx [ebp+arg_0] +
mov eax [esi+24h] +
mov edx 10000h +
add esp 18h +
sub eax ecx +
sub edx ecx +
pop edi  +
cmp eax edx +
jnb loc_10407D9  +
mov edx eax +
mov eax [esi+30h] +
push edx  +
add ecx eax +
push ecx  +
push eax  +
call memmove  +
mov edx [ebp+var_4] +
mov eax [esi+28h] +
mov ecx 8000h +
sub eax edx +
sub ecx edx +
add esp 0Ch +
cmp eax ecx +
jb loc_10407FE  +
mov eax ecx +
mov ecx [esi+2Ch] +
shl eax 2 +
push eax  +
lea eax [ecx+edx*4] +
push eax  +
push ecx  +
call memmove  +
mov eax [ebp+arg_0] +
sub [esi+24h] eax +
mov eax [ebp+var_4] +
add esp 0Ch +
sub [esi+28h] eax +
push esi  +
call sub_1041957  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov al [ecx+18h] +
cmp al 20h +
jge loc_104084C  +
sub al 10h +
movzx eax al +
push 0  +
push eax  +
push ecx  +
call sub_10412F2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_0]  +
call sub_10417D5  +
push [ebp+arg_0]  +
call sub_1041AF9  +
push [ebp+arg_0]  +
mov esi eax +
call sub_1041957  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax 400h +
jge loc_104089E  +
mov ecx [ebp+arg_0] +
mov al [ecx+eax+45Ch] +
jmp loc_10408BB  +
cmp eax 80000h +
jge loc_10408B6  +
mov ecx [ebp+arg_0] +
sar eax 9 +
mov al [eax+ecx+45Ch] +
add al 12h +
jmp loc_10408BB  +
sar eax 11h +
add al 22h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_10408D4  +
call sub_1040715  +
cmp dword ptr [esi+24h] 0 +
push esi  +
ja loc_10408CF  +
call sub_1041BC1  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi+24h] +
push ebx  +
xor ebx ebx +
cmp eax ebx +
jz loc_104093E  +
push edi  +
lea edi [esi+984h] +
push eax  +
cmp [edi] ebx +
jz loc_104090C  +
push ebx  +
push ebx  +
push esi  +
call sub_1042586  +
mov [edi] ebx +
jmp loc_104091E  +
push dword ptr [esi+253Ch]  +
push dword ptr [esi+2538h]  +
push esi  +
call sub_10425D8  +
push ebx  +
push esi  +
call sub_10417D5  +
push esi  +
call sub_1041957  +
mov eax [esi+24h] +
mov [esi+2538h] eax +
mov eax [esi+28h] +
mov [esi+253Ch] eax +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov byte ptr [esi+981h] 0 +
mov dword ptr [esi+984h] 1 +
call sub_1040715  +
mov eax [esi+24h] +
mov ecx 1000h +
cmp eax ecx +
jnb loc_1040975  +
mov [esi+2534h] ecx +
jmp loc_1040980  +
add eax 1000h +
mov [esi+2534h] eax +
mov eax [ebp+arg_0] +
mov [esi+86Ch] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [esi+4] +
push ebx  +
push edi  +
mov edi [esi+86Ch] +
xor ebx ebx +
mov [esi+981h] bl +
mov eax [eax] +
mov edx edi +
sub edx ecx +
sub eax edi +
cmp edx ecx +
jnb loc_10409BE  +
add eax edx +
jmp loc_10409C0  +
add eax ecx +
mov ecx [esi] +
sub ecx [esi+4334h] +
mov edx [ebp+arg_0] +
add ecx [edx] +
cmp eax ecx +
ja loc_1040A55  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [esi+28h]  +
push dword ptr [esi+24h]  +
push ebx  +
push esi  +
call sub_104283C  +
push [ebp+var_4]  +
push ebx  +
push ebx  +
push esi  +
call sub_1042586  +
push ebx  +
push esi  +
call sub_10417D5  +
push esi  +
call sub_1041957  +
push 40000h  +
push ebx  +
push dword ptr [esi+8]  +
call memset  +
push 2000h  +
push ebx  +
push dword ptr [esi+34h]  +
call memset  +
mov ecx [ebp+var_4] +
xor eax eax +
add esp 18h +
inc eax  +
mov [esi+2534h] ecx +
mov ecx [ebp+arg_0] +
mov [esi+44h] eax +
mov [esi+48h] eax +
mov [esi+4Ch] eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov [esi+40h] eax +
mov [esi+868h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
mov [esi+984h] eax +
mov [ecx] edi +
jmp loc_1040A57  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx [esi+458h] +
add eax ebx +
mov [ebp+var_14] eax +
lea eax [esi+988h] +
xor ecx ecx +
push edi  +
mov [ebp+arg_0] ebx +
cmp [eax] ecx +
jz loc_1040AD2  +
mov [eax] ecx +
mov dword ptr [esi+2534h] 2710h +
cmp [esi+874h] ecx +
jz loc_1040AC7  +
push 1  +
push 1  +
push esi  +
call sub_10412F2  +
movzx eax word ptr [esi+876h] +
push eax  +
push 10h  +
push esi  +
call sub_10412F2  +
movzx eax word ptr [esi+874h] +
push eax  +
push 10h  +
jmp loc_1040ACA  +
push ecx  +
push 1  +
push esi  +
call sub_10412F2  +
jmp loc_1040AF1  +
push 32h  +
pop edi  +
mov eax ebx +
sub eax [esi+4] +
add eax 4 +
push eax  +
mov eax ebx +
sub eax edi +
push eax  +
push esi  +
call sub_1042D87  +
dec edi  +
jnz loc_1040AD5  +
jmp loc_1040AF1  +
mov ebx [ebp+arg_0] +
lea eax [ebx+8000h] +
mov [ebp+var_10] eax +
cmp ebx [ebp+var_14] +
jnb loc_10410E6  +
mov edi [ebp+var_10] +
and edi 0FFFF8000h +
mov [ebp+var_1C] edi +
cmp edi [ebp+var_14] +
ja loc_1040B18  +
cmp edi ebx +
jnb loc_1040B1E  +
mov edi [ebp+var_14] +
mov [ebp+var_1C] edi +
push ebx  +
push esi  +
call sub_1042AED  +
cmp eax 2 +
mov [ebp+var_4] eax +
jl loc_1040B40  +
lea ecx [eax+ebx] +
cmp ecx edi +
jbe loc_1040B6D  +
mov eax edi +
sub eax ebx +
cmp eax 2 +
mov [ebp+var_4] eax +
jge loc_1040B6A  +
mov eax [esi] +
mov al [ebx+eax] +
mov edx [esi+24h] +
mov ecx [esi+30h] +
mov [ecx+edx] al +
inc dword ptr [esi+24h]  +
mov eax [esi+24h] +
inc ebx  +
inc [ebp+var_10]  +
mov [ebp+arg_0] ebx +
cmp eax 0FFF8h +
jb loc_1040AFA  +
push ebx  +
call sub_1040945  +
jmp loc_1040AFA  +
mov eax [ebp+var_4] +
cmp eax 32h +
jge loc_1041012  +
mov edx [esi+2540h] +
lea ecx [eax+ebx] +
mov [ebp+var_C] ecx +
lea ecx [ebx+0EFDh] +
mov [ebp+var_30] ecx +
mov ecx [esi] +
movzx ecx byte ptr [ecx+ebx] +
movzx ecx byte ptr [ecx+esi+2544h] +
mov [edx+2Ch] ecx +
mov ecx [esi+2540h] +
push 2  +
mov [ecx+1Ch] ebx +
pop ecx  +
mov [ebp+var_24] ebx +
mov [ebp+arg_0] ecx +
cmp eax ecx +
jb loc_1040C4C  +
push 30h  +
lea eax [esi+58h] +
pop edi  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
push dword ptr [eax]  +
push esi  +
call sub_1040883  +
mov ecx [ebp+arg_0] +
movzx eax al +
cmp ecx 9 +
jnb loc_1040BF5  +
lea edx [ecx+eax*8] +
movzx eax ds:byte_100A00C[eax] +
movzx edx byte ptr [edx+esi+2642h] +
add edx eax +
mov eax [esi+2540h] +
mov [eax+edi+14h] edx +
jmp loc_1040C20  +
movzx edx byte ptr [ecx+esi+27F8h] +
mov [ebp+arg_0] eax +
movzx eax byte ptr [esi+eax*8+264Bh] +
add eax edx +
mov edx [ebp+arg_0] +
movzx edx ds:byte_100A00C[edx] +
add eax edx +
mov edx [esi+2540h] +
mov [edx+edi+14h] eax +
mov eax [esi+2540h] +
mov edx [ebp+var_8] +
add [ebp+var_8] 4 +
mov [eax+edi+4] ebx +
mov eax [esi+2540h] +
mov edx [edx] +
inc ecx  +
mov [edi+eax] edx +
add edi 18h +
mov [ebp+arg_0] ecx +
cmp ecx [ebp+var_4] +
jbe loc_1040BBF  +
mov eax [esi+2540h] +
and dword ptr [eax+14h] 0 +
mov eax [esi+2540h] +
mov ecx [esi+44h] +
mov [eax+8] ecx +
mov eax [esi+2540h] +
mov ecx [esi+48h] +
mov [eax+0Ch] ecx +
mov eax [esi+2540h] +
mov ecx [esi+4Ch] +
mov [eax+10h] ecx +
mov edi [esi+2540h] +
mov eax ebx +
imul eax eax +
lea ecx [ebx-1] +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_1C] +
sub edi eax +
sub ecx ebx +
lea eax [eax+edi+4] +
mov [ebp+var_20] ecx +
mov [ebp+var_8] eax +
mov ecx [ebp+var_8] +
add ecx 18h +
mov eax [ecx] +
inc ebx  +
inc [ebp+var_18]  +
dec [ebp+var_20]  +
mov [ebp+var_8] ecx +
cmp eax [ebp+var_18] +
jz loc_1040D0A  +
mov edx [ecx-4] +
imul eax eax +
cmp edx 3 +
jb loc_1040CD1  +
add edx 0FFFFFFFEh +
add eax edi +
mov [esi+44h] edx +
mov edx [eax+8] +
mov [esi+48h] edx +
mov eax [eax+0Ch] +
jmp loc_1040D07  +
add eax edi +
test edx edx +
jnz loc_1040CE8  +
mov edx [eax+8] +
mov [esi+44h] edx +
mov edx [eax+0Ch] +
mov [esi+48h] edx +
mov eax [eax+10h] +
jmp loc_1040D07  +
cmp edx 1 +
jnz loc_1040CF8  +
mov edx [eax+0Ch] +
mov [esi+44h] edx +
mov edx [eax+8] +
jmp loc_1040CE0  +
mov edx [eax+10h] +
mov [esi+44h] edx +
mov edx [eax+0Ch] +
mov [esi+48h] edx +
mov eax [eax+8] +
mov [esi+4Ch] eax +
mov eax [esi+44h] +
mov [ecx+4] eax +
mov eax [esi+48h] +
mov [ecx+8] eax +
mov eax [esi+4Ch] +
mov [ecx+0Ch] eax +
cmp [ebp+var_C] ebx +
jz loc_1040EFD  +
push ebx  +
push esi  +
call sub_1042AED  +
mov [ebp+var_4] eax +
add eax ebx +
cmp eax [ebp+var_1C] +
jbe loc_1040D48  +
mov edx [ebp+var_20] +
cmp edx 2 +
mov [ebp+var_4] edx +
jge loc_1040D4B  +
xor edx edx +
mov [ebp+var_4] edx +
jmp loc_1040D4B  +
mov edx [ebp+var_4] +
cmp edx 32h +
jg loc_1040E6D  +
lea eax [edx+ebx] +
cmp eax [ebp+var_30] +
jnb loc_1040E6D  +
cmp edx 2 +
jg loc_1040D70  +
jnz loc_1040DB8  +
cmp dword ptr [esi+58h] 800h +
jnb loc_1040DB8  +
cmp [ebp+var_C] eax +
jnb loc_1040DB8  +
mov eax edx +
sub eax [ebp+var_24] +
mov ecx 0EFCh +
add eax ebx +
cmp eax ecx +
jnb loc_1040D87  +
mov ecx eax +
mov eax [ebp+var_C] +
sub eax [ebp+var_24] +
inc eax  +
cmp eax ecx +
mov [ebp+arg_0] eax +
jg loc_1040DB2  +
sub ecx [ebp+arg_0] +
imul eax eax +
inc ecx  +
mov [ebp+arg_0] ecx +
mov ecx [esi+2540h] +
or dword ptr [ecx+eax+14h] 0FFFFFFFFh +
add eax 18h +
dec [ebp+arg_0]  +
jnz loc_1040D9F  +
lea eax [edx+ebx] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_8] +
mov eax [ecx+10h] +
mov [ebp+var_28] eax +
mov eax [esi] +
movzx eax byte ptr [eax+ebx] +
movzx eax byte ptr [eax+esi+2544h] +
add eax [ebp+var_28] +
cmp eax [ecx+28h] +
jnb loc_1040DDD  +
mov [ecx+28h] eax +
mov [ecx+18h] ebx +
push 2  +
pop eax  +
mov [ebp+arg_0] eax +
cmp edx eax +
jb loc_1040C9C  +
lea eax [esi+58h] +
mov [ebp+var_10] eax +
mov eax [ebp+var_8] +
add eax 40h +
mov [ebp+var_2C] eax +
mov eax [ebp+var_10] +
push dword ptr [eax]  +
push esi  +
call sub_1040883  +
cmp [ebp+arg_0] 9 +
movzx ecx al +
jnb loc_1040E1E  +
mov eax [ebp+arg_0] +
lea eax [eax+ecx*8] +
movzx eax byte ptr [eax+esi+2642h] +
jmp loc_1040E33  +
mov edx [ebp+arg_0] +
movzx eax byte ptr [esi+ecx*8+264Bh] +
movzx edx byte ptr [edx+esi+27F8h] +
add eax edx +
movzx ecx ds:byte_100A00C[ecx] +
add eax ecx +
add eax [ebp+var_28] +
mov ecx [ebp+var_2C] +
cmp eax [ecx] +
jnb loc_1040E53  +
mov [ecx] eax +
mov eax [ebp+var_10] +
mov [ecx-10h] ebx +
mov eax [eax] +
mov [ecx-14h] eax +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_10] 4 +
add ecx 18h +
mov [ebp+var_2C] ecx +
cmp eax [ebp+var_4] +
jbe loc_1040DFA  +
jmp loc_1040C9C  +
mov ecx [esi+edx*4+50h] +
lea eax [edx+ebx] +
mov [ebp+var_30] eax +
imul eax eax +
add eax edi +
mov [ebp+var_8] ecx +
mov [eax] ecx +
mov [eax+4] ebx +
cmp ecx 3 +
jnz loc_1040EA1  +
cmp edx 10h +
jle loc_1040EA1  +
mov eax ebx +
sub eax [esi+4] +
add eax 5 +
push eax  +
inc ebx  +
push ebx  +
push esi  +
call sub_1042D87  +
jmp loc_1040ECC  +
xor eax eax +
inc eax  +
mov [ebp+arg_0] eax +
cmp edx eax +
jbe loc_1040ECC  +
mov eax [ebp+arg_0] +
mov ecx eax +
sub ecx [esi+4] +
add eax ebx +
lea ecx [ecx+ebx+4] +
push ecx  +
push eax  +
push esi  +
call sub_1042D87  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_4] +
jb loc_1040EAB  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_30] +
cmp eax 3 +
jb loc_1040EEB  +
mov ecx [esi+48h] +
mov [esi+4Ch] ecx +
mov ecx [esi+44h] +
add eax 0FFFFFFFEh +
mov [esi+48h] ecx +
mov [esi+44h] eax +
jmp loc_1040EFD  +
test eax eax +
jz loc_1040EFD  +
mov ecx [esi+44h] +
lea eax [esi+eax*4+44h] +
mov edx [eax] +
mov [esi+44h] edx +
mov [eax] ecx +
and [ebp+arg_0] 0 +
mov eax ebx +
imul eax eax +
mov ecx [eax+edi+4] +
mov eax ecx +
imul eax eax +
inc [ebp+arg_0]  +
mov edx ecx +
mov ecx [eax+edi+4] +
mov [eax+edi+4] ebx +
mov [ebp+var_30] edx +
mov ebx edx +
cmp edx [ebp+var_24] +
jnz loc_1040F0A  +
mov eax [esi+24h] +
add eax [ebp+arg_0] +
cmp eax 0FFF8h +
jnb loc_1040F40  +
mov eax [esi+28h] +
add eax [ebp+arg_0] +
cmp eax 7FF8h +
jb loc_1040F4A  +
push [ebp+var_30]  +
call sub_1040945  +
jmp loc_1040F26  +
mov eax ebx +
imul eax eax +
lea ecx [ebx+1] +
lea eax [eax+edi+4] +
cmp [eax] ecx +
mov [ebp+var_30] ecx +
mov ecx [esi+24h] +
jbe loc_1040FA5  +
mov edx [esi+34h] +
shr ecx 3 +
add ecx edx +
mov [ebp+var_30] ecx +
mov ecx [esi+24h] +
and ecx 7 +
mov dl 1 +
shl dl cl +
mov ecx [ebp+var_30] +
or [ecx] dl +
mov cl [eax] +
mov edx [esi+24h] +
sub cl bl +
mov ebx [esi+30h] +
sub cl 2 +
mov [edx+ebx] cl +
inc dword ptr [esi+24h]  +
mov ecx [eax] +
mov edx [esi+28h] +
imul ecx ecx +
mov ebx [esi+2Ch] +
mov ecx [ecx+edi] +
mov [ebx+edx*4] ecx +
inc dword ptr [esi+28h]  +
mov ebx [eax] +
jmp loc_1040FB6  +
mov eax [esi] +
mov al [ebx+eax] +
mov edx [esi+30h] +
mov ebx [ebp+var_30] +
mov [ecx+edx] al +
inc dword ptr [esi+24h]  +
dec [ebp+arg_0]  +
jnz loc_1040F4A  +
mov eax [esi+24h] +
lea edi [esi+2534h] +
mov [ebp+arg_0] ebx +
cmp eax [edi] +
jb loc_1040FD6  +
call sub_10408EA  +
add dword ptr [edi] 1000h +
cmp byte ptr [esi+981h] 0 +
jz loc_1040AF1  +
cmp dword ptr [esi+24h] 0FE00h +
jnb loc_1040FF9  +
cmp dword ptr [esi+28h] 7E00h +
jb loc_1040AF1  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1040992  +
test eax eax +
jnz loc_1040AEE  +
mov ebx [ebp+arg_0] +
jmp loc_10410DB  +
mov ecx [esi+eax*4+50h] +
mov [ebp+var_8] ecx +
cmp ecx 3 +
jnz loc_1041038  +
cmp eax 10h +
jle loc_1041038  +
mov eax ebx +
sub eax [esi+4] +
add eax 5 +
push eax  +
lea eax [ebx+1] +
push eax  +
push esi  +
call sub_1042D87  +
jmp loc_1041059  +
xor edi edi +
inc edi  +
cmp eax edi +
jbe loc_104105C  +
mov eax edi +
sub eax [esi+4] +
lea eax [eax+ebx+4] +
push eax  +
lea eax [edi+ebx] +
push eax  +
push esi  +
call sub_1042D87  +
inc edi  +
cmp edi [ebp+var_4] +
jb loc_104103F  +
mov eax [ebp+var_4] +
mov ecx [esi+24h] +
mov edi [esi+34h] +
mov edx ecx +
shr edx 3 +
add edi edx +
and ecx 7 +
mov dl 1 +
shl dl cl +
add ebx eax +
sub al 2 +
mov [ebp+arg_0] ebx +
or [edi] dl +
mov edx [esi+24h] +
mov ecx [esi+30h] +
mov [ecx+edx] al +
inc dword ptr [esi+24h]  +
mov ecx [esi+28h] +
mov eax [ebp+var_8] +
mov edx [esi+2Ch] +
mov [edx+ecx*4] eax +
inc dword ptr [esi+28h]  +
cmp eax 3 +
jb loc_10410B0  +
mov eax [esi+48h] +
mov [esi+4Ch] eax +
mov eax [esi+44h] +
mov [esi+48h] eax +
mov eax [ebp+var_8] +
add eax 0FFFFFFFEh +
mov [esi+44h] eax +
jmp loc_10410C5  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10410C5  +
mov ecx [esi+44h] +
lea eax [esi+eax*4+44h] +
mov edx [eax] +
mov [esi+44h] edx +
mov [eax] ecx +
cmp dword ptr [esi+24h] 0FFF8h +
jnb loc_10410DB  +
cmp dword ptr [esi+28h] 7FF8h +
jb loc_1040AF1  +
push ebx  +
call sub_1040945  +
jmp loc_1040AF1  +
mov eax ebx +
sub eax [esi+4] +
cmp [ebp+arg_4] 8000h +
mov [esi+990h] eax +
jge loc_1041120  +
cmp byte ptr [esi+981h] 0 +
jz loc_10411EE  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1040992  +
mov ebx [ebp+arg_0] +
test eax eax +
jz loc_10411EE  +
jmp loc_1040AF1  +
add eax 36h +
xor edi edi +
mov [ebp+var_30] eax +
inc edi  +
push [ebp+var_30]  +
mov eax ebx +
sub eax edi +
push eax  +
push esi  +
call sub_1042EB5  +
inc edi  +
cmp edi 32h +
jbe loc_1041129  +
mov eax [esi] +
sub eax [esi+4334h] +
mov ecx [esi+4] +
add eax ebx +
cmp eax ecx +
jb loc_10411EE  +
sub eax ecx +
cmp eax [esi+98Ch] +
jb loc_10411EE  +
cmp byte ptr [esi+981h] 0 +
jz loc_104117D  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1040992  +
test eax eax +
jnz loc_1040AEE  +
mov ebx [ebp+arg_0] +
mov eax [esi+4334h] +
push dword ptr [esi+4]  +
mov ecx [esi+98Ch] +
add ecx eax +
push ecx  +
push eax  +
call memmove  +
mov ecx [esi+4] +
mov eax [esi+4338h] +
shl ecx 2 +
push ecx  +
mov ecx [esi+98Ch] +
lea ecx [eax+ecx*4] +
push ecx  +
push eax  +
call memmove  +
mov ecx [esi+4] +
mov eax [esi+433Ch] +
shl ecx 2 +
push ecx  +
mov ecx [esi+98Ch] +
lea ecx [eax+ecx*4] +
push ecx  +
push eax  +
call memmove  +
mov eax ebx +
sub eax [esi+4] +
add esp 24h +
mov [esi+990h] eax +
mov eax [esi+98Ch] +
sub [esi] eax +
shl eax 2 +
sub [esi+0Ch] eax +
sub [esi+10h] eax +
pop edi  +
mov [esi+458h] ebx +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+458h] +
sub eax [esi+4334h] +
push 8000h  +
add eax [esi] +
push eax  +
push esi  +
call sub_104153D  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+arg_0] eax +
jle loc_10412E7  +
mov edx [esi+458h] +
add eax edx +
cmp eax edx +
jnb loc_10412DE  +
mov ecx [esi+4] +
add ecx ecx +
sub edx ecx +
sub [esi+994h] edx +
sub [esi+990h] edx +
push edi  +
mov [esi+458h] ecx +
xor edi edi +
mov eax [esi+8] +
lea ecx [edi+eax] +
cmp [ecx] edx +
jbe loc_104126B  +
sub [ecx] edx +
jmp loc_104126D  +
mov [ecx] ebx +
add edi 4 +
cmp edi 40000h +
jb loc_104125D  +
mov eax [esi+98Ch] +
mov ecx [esi+4] +
lea eax [eax+ecx+1101h] +
test eax eax +
jbe loc_10412AB  +
mov ecx [esi+4338h] +
lea ecx [ecx+ebx*4] +
mov edi [ecx] +
test edi edi +
jz loc_10412A6  +
cmp edi edx +
jbe loc_10412A3  +
sub [ecx] edx +
jmp loc_10412A6  +
and dword ptr [ecx] 0 +
inc ebx  +
cmp ebx eax +
jb loc_104128C  +
xor ebx ebx +
test eax eax +
jbe loc_10412D0  +
mov ecx [esi+433Ch] +
lea ecx [ecx+ebx*4] +
mov edi [ecx] +
test edi edi +
jz loc_10412CB  +
cmp edi edx +
jbe loc_10412C8  +
sub [ecx] edx +
jmp loc_10412CB  +
and dword ptr [ecx] 0 +
inc ebx  +
cmp ebx eax +
jb loc_10412B1  +
add [esi] edx +
mov ecx edx +
shl ecx 2 +
add [esi+0Ch] ecx +
add [esi+10h] ecx +
pop edi  +
push [ebp+arg_0]  +
push esi  +
call sub_1040A62  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dl [eax+18h] +
movsx ecx dl +
sub ecx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
shl esi cl +
mov cl dl +
sub cl byte ptr [ebp+arg_4] +
or [eax+14h] esi +
cmp cl 10h +
mov [eax+18h] cl +
pop esi  +
jg loc_104136B  +
mov ecx [eax+860h] +
cmp ecx [eax+864h] +
jb loc_104133B  +
mov ecx [eax+85Ch] +
mov dword ptr [eax+1Ch] 1 +
mov [eax+860h] ecx +
mov ecx [eax+860h] +
mov dl [eax+16h] +
mov [ecx] dl +
inc dword ptr [eax+860h]  +
mov ecx [eax+860h] +
mov dl [eax+17h] +
mov [ecx] dl +
inc dword ptr [eax+860h]  +
shl dword ptr [eax+14h] 10h +
add byte ptr [eax+18h] 10h +
cmp byte ptr [eax+18h] 10h +
jle loc_104131A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 9800h  +
call dword ptr [esi+4348h]  +
pop ecx  +
mov [esi+85Ch] eax +
test eax eax +
jz loc_10413A7  +
mov [esi+860h] eax +
add eax 97C0h +
mov [esi+864h] eax +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
lea esi [eax+85Ch] +
mov ecx [esi] +
test ecx ecx +
jz loc_10413D1  +
push ecx  +
call dword ptr [eax+434Ch]  +
and dword ptr [esi] 0 +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and dword ptr [eax+9A0h] 0 +
and dword ptr [eax+878h] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [edi+99Ch] +
test ebx ebx +
jg loc_104140E  +
xor eax eax +
jmp loc_1041436  +
cmp [ebp+arg_4] ebx +
jge loc_1041416  +
mov ebx [ebp+arg_4] +
push esi  +
push ebx  +
lea esi [edi+998h] +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call memcpy  +
sub [edi+99Ch] ebx +
add esp 0Ch +
add [esi] ebx +
mov eax ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
cmp [ecx+878h] esi +
jz loc_104146C  +
mov [ecx+874h] esi +
jmp loc_1041528  +
mov eax [ecx+9A0h] +
add eax ebx +
cmp eax 0Ah +
jnb loc_104148E  +
mov [ecx+874h] esi +
mov dword ptr [ecx+878h] 1 +
jmp loc_1041528  +
cmp ebx 6 +
jg loc_104149E  +
mov [ecx+9A0h] eax +
jmp loc_1041528  +
push edi  +
lea eax [edx+ebx] +
mov [ebp+var_10] eax +
add eax 0FFFFFFFAh +
mov esi eax +
lea edi [ebp+var_C] +
movs   +
movs   +
mov edi [ebp+var_10] +
add edi 0FFFFFFFAh +
mov eax 0E8E8E8E8h +
stos   +
stos   +
mov eax [ecx+9A0h] +
lea ebx [eax+ebx-0Ah] +
mov [ebp+var_14] ebx +
jmp loc_10414D4  +
inc edx  +
inc dword ptr [ecx+9A0h]  +
cmp byte ptr [edx] 0E8h +
jnz loc_10414CD  +
mov esi [ecx+9A0h] +
inc edx  +
cmp esi ebx +
jnb loc_1041512  +
mov eax [edx] +
lea edi [esi+eax] +
test edi edi +
jl loc_1041503  +
mov ebx [ecx+874h] +
add esi ebx +
cmp edi esi +
jnb loc_1041503  +
cmp edi ebx +
jb loc_1041501  +
sub eax ebx +
mov edi eax +
mov [edx] edi +
mov ebx [ebp+var_14] +
add edx 4 +
add dword ptr [ecx+9A0h] 5 +
jmp loc_10414D4  +
mov edi [ebp+var_10] +
add edi 0FFFFFFFAh +
lea esi [ebp+var_C] +
movs   +
movs   +
add ebx 0Ah +
mov [ecx+9A0h] ebx +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jg loc_104154C  +
xor eax eax +
jmp loc_104159D  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+4334h] +
push [ebp+arg_8]  +
add eax [ebp+arg_4] +
push eax  +
call sub_10413FA  +
mov ebx eax +
test ebx ebx +
jge loc_104156D  +
xor eax eax +
jmp loc_104159B  +
cmp dword ptr [edi+874h] 0 +
push esi  +
jz loc_104159A  +
lea esi [edi+4340h] +
cmp dword ptr [esi] 8000h +
jnb loc_104159A  +
mov edx [edi+4334h] +
add edx [ebp+arg_4] +
push ebx  +
mov ecx edi +
call sub_1041440  +
inc dword ptr [esi]  +
mov eax ebx +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 60h  +
mov [ebp+var_B0] eax +
lea eax [ebp+var_7C] +
mov ebx ecx +
mov edi edx +
push 0  +
push eax  +
mov [ebp+var_B8] ebx +
mov [ebp+var_B4] edi +
call memset  +
xor eax eax +
add esp 0Ch +
cmp [ebp+arg_4] eax +
jle loc_1041679  +
lea esi [eax+1] +
xor edx edx +
cmp esi [ebp+arg_4] +
jge loc_1041657  +
mov cl [ebx+eax] +
cmp [ebx+esi] cl +
jnz loc_104160B  +
inc edx  +
inc esi  +
cmp esi [ebp+arg_4] +
jl loc_10415FF  +
cmp edx 4 +
jl loc_1041657  +
test cl cl +
jnz loc_104162D  +
cmp edx 33h +
jle loc_104161C  +
push 33h  +
pop edx  +
cmp edx 13h +
jg loc_1041627  +
inc [ebp+var_5A]  +
jmp loc_1041651  +
inc [ebp+var_58]  +
jmp loc_1041651  +
cmp edx 5 +
jle loc_1041635  +
push 5  +
pop edx  +
movzx ecx byte ptr [edi+eax] +
movzx esi byte ptr [ebx+eax] +
sub ecx esi +
movzx ecx ds:byte_100A051[ecx] +
lea ecx [ebp+ecx*2+var_7C] +
inc word ptr [ecx]  +
inc [ebp+var_56]  +
lea eax [eax+edx-1] +
jmp loc_104166F  +
movzx ecx byte ptr [edi+eax] +
movzx edx byte ptr [ebx+eax] +
sub ecx edx +
movzx ecx ds:byte_100A051[ecx] +
lea ecx [ebp+ecx*2+var_7C] +
inc word ptr [ecx]  +
inc eax  +
cmp eax [ebp+arg_4] +
jl loc_10415F2  +
push 1  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
push 14h  +
push [ebp+var_B0]  +
call sub_10432DD  +
xor esi esi +
movsx eax byte ptr [ebp+esi+var_1C] +
push eax  +
push 4  +
push [ebp+var_B0]  +
call sub_10412F2  +
inc esi  +
cmp esi 14h +
jl loc_1041699  +
xor esi esi +
cmp [ebp+arg_4] esi +
jle loc_10417B2  +
lea eax [esi+1] +
xor edi edi +
cmp eax [ebp+arg_4] +
jge loc_10416FE  +
mov cl [ebx+esi] +
cmp [ebx+eax] cl +
jnz loc_10416D6  +
inc edi  +
inc eax  +
cmp eax [ebp+arg_4] +
jl loc_10416CA  +
cmp edi 4 +
jl loc_10416FE  +
test cl cl +
jnz loc_10416F2  +
cmp edi 33h +
jle loc_10416E7  +
push 33h  +
pop edi  +
cmp edi 13h +
setnle bl  +
add bl 11h +
jmp loc_1041714  +
cmp edi 5 +
jle loc_10416FA  +
push 5  +
pop edi  +
mov bl 13h +
jmp loc_1041714  +
mov eax [ebp+var_B4] +
movzx ecx byte ptr [ebx+esi] +
movzx eax byte ptr [eax+esi] +
sub eax ecx +
mov bl ds:byte_100A051[eax] +
movsx eax bl +
movzx ecx word ptr [ebp+eax*2+var_AC] +
movsx eax byte ptr [ebp+eax+var_1C] +
push ecx  +
push eax  +
push [ebp+var_B0]  +
call sub_10412F2  +
cmp bl 11h +
jnz loc_104173E  +
lea eax [edi-4] +
push eax  +
push 4  +
jmp loc_104178D  +
cmp bl 12h +
jnz loc_104174B  +
lea eax [edi-14h] +
push eax  +
push 5  +
jmp loc_104178D  +
cmp bl 13h +
jnz loc_104179C  +
lea eax [edi-4] +
push eax  +
push 1  +
push [ebp+var_B0]  +
call sub_10412F2  +
mov eax [ebp+var_B4] +
movzx eax byte ptr [eax+esi] +
mov ecx [ebp+var_B8] +
movzx ecx byte ptr [ecx+esi] +
sub eax ecx +
movsx eax ds:byte_100A051[eax] +
movzx ecx word ptr [ebp+eax*2+var_AC] +
movsx eax byte ptr [ebp+eax+var_1C] +
push ecx  +
push eax  +
push [ebp+var_B0]  +
call sub_10412F2  +
lea esi [esi+edi-1] +
mov ebx [ebp+var_B8] +
inc esi  +
cmp esi [ebp+arg_4] +
jl loc_10416BD  +
mov edi [ebp+var_B4] +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call memcpy  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
lea eax [esi+33ECh] +
push eax  +
lea eax [esi+2544h] +
push eax  +
lea eax [esi+28FCh] +
push eax  +
mov eax [esi+870h] +
lea eax ds:100h[eax*8] +
push eax  +
push esi  +
call sub_10432DD  +
push [ebp+arg_4]  +
lea eax [esi+4006h] +
push eax  +
lea eax [esi+2801h] +
push eax  +
lea eax [esi+3C22h] +
push eax  +
push 0F9h  +
push esi  +
call sub_10432DD  +
push 1  +
lea eax [esi+4312h] +
push eax  +
lea eax [esi+4322h] +
push eax  +
lea eax [esi+42F2h] +
push eax  +
push 8  +
push esi  +
call sub_10432DD  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov al [ecx+55Ch] +
add al 12h +
movzx eax al +
cmp eax [ecx+870h] +
jnb loc_104189B  +
push esi  +
lea esi ds:100h[eax*8] +
lea edx [ecx+eax*8+2644h] +
cmp esi 2BDh +
jnb loc_104188B  +
mov byte ptr [edx] 64h +
inc eax  +
add esi 8 +
add edx 8 +
cmp eax [ecx+870h] +
jb loc_1041880  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 100h  +
lea edx [esi+3964h] +
lea ecx [esi+2544h] +
push esi  +
call sub_10415A6  +
mov ecx [esi+870h] +
shl ecx 3 +
mov eax 1BCh +
cmp ecx eax +
jnb loc_10418D8  +
mov eax ecx +
push eax  +
lea edx [esi+3A64h] +
lea ecx [esi+2644h] +
push esi  +
call sub_10415A6  +
push 0F9h  +
lea edx [esi+41F8h] +
lea ecx [esi+2801h] +
push esi  +
call sub_10415A6  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
lea eax [esi+4312h] +
push eax  +
lea edi [esi+4322h] +
push edi  +
lea eax [esi+42F2h] +
push eax  +
push 8  +
push esi  +
call sub_10432DD  +
xor ebx ebx +
movzx eax byte ptr [edi+ebx] +
push eax  +
push 3  +
push esi  +
call sub_10412F2  +
inc ebx  +
cmp ebx 8 +
jl loc_1041938  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
lea edx [eax+ecx+2544h] +
cmp byte ptr [edx] 0 +
jnz loc_1041970  +
mov byte ptr [edx] 0Bh +
inc ecx  +
cmp ecx 100h +
jb loc_1041961  +
jmp loc_104198B  +
lea edx [eax+ecx+2544h] +
cmp byte ptr [edx] 0 +
jnz loc_104198A  +
mov byte ptr [edx] 0Ch +
inc ecx  +
mov edx [eax+870h] +
lea edx ds:100h[edx*8] +
cmp ecx edx +
jb loc_104197B  +
lea ecx [eax+2801h] +
mov edx 0F9h +
cmp byte ptr [ecx] 0 +
jnz loc_10419AF  +
mov byte ptr [ecx] 8 +
inc ecx  +
dec edx  +
jnz loc_10419A7  +
push eax  +
call sub_1041856  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 2  +
pop ebx  +
push 4  +
mov byte ptr [esi+45Ch] 0 +
mov byte ptr [esi+45Dh] 1 +
mov [esi+45Eh] bl +
mov byte ptr [esi+45Fh] 3 +
mov byte ptr [ebp+arg_0] 4 +
pop edi  +
test ebx ebx +
jle loc_1041A0C  +
push ebx  +
push [ebp+arg_0]  +
lea eax [edi+esi+45Ch] +
push eax  +
call memset  +
add esp 0Ch +
add edi ebx +
inc byte ptr [ebp+arg_0]  +
test ebx ebx +
jle loc_1041A29  +
push ebx  +
push [ebp+arg_0]  +
lea eax [edi+esi+45Ch] +
push eax  +
call memset  +
add esp 0Ch +
add edi ebx +
inc byte ptr [ebp+arg_0]  +
add ebx ebx +
cmp edi 400h +
jl loc_10419F2  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
xor cl cl +
mov edx eax +
test eax eax +
jz loc_1041A5C  +
test dl 1 +
jz loc_1041A58  +
inc cl  +
sar edx 1 +
jnz loc_1041A51  +
mov edx [ebp+arg_0] +
mov [edx+eax+881h] cl +
inc eax  +
cmp eax 100h +
jl loc_1041A49  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [edi-1] +
xor dl dl +
test ecx ecx +
jl loc_1041AB0  +
mov esi [eax+2Ch] +
lea esi [esi+ecx*4] +
cmp dword ptr [esi] 2 +
jbe loc_1041AA1  +
inc dl  +
cmp dl 3 +
jnb loc_1041AB2  +
jmp loc_1041AA3  +
xor dl dl +
dec ecx  +
sub esi 4 +
test ecx ecx +
jge loc_1041A93  +
cmp dl 3 +
jnb loc_1041AB2  +
xor ecx ecx +
cmp ecx edi +
jge loc_1041AEE  +
push ebx  +
mov edx [eax+2Ch] +
mov edx [edx+ecx*4] +
test edx edx +
jz loc_1041AE8  +
cmp edx 2 +
ja loc_1041AD6  +
mov ebx [eax+38h] +
lea edx [eax+edx*4+38h] +
mov esi [edx] +
mov [edx] ebx +
mov [eax+38h] esi +
jmp loc_1041AE8  +
mov esi [eax+3Ch] +
mov [eax+40h] esi +
mov esi [eax+38h] +
add edx 0FFFFFFFEh +
mov [eax+3Ch] esi +
mov [eax+38h] edx +
inc ecx  +
cmp ecx edi +
jl loc_1041AB7  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov [ebp+var_4] 4B0h +
xor edx edx +
lea ecx [eax+28FCh] +
push edi  +
movzx edi word ptr [ecx] +
movzx esi byte ptr [eax+edx+2544h] +
imul esi edi +
add [ebp+var_4] esi +
inc edx  +
inc ecx  +
inc ecx  +
cmp edx 100h +
jb loc_1041B14  +
cmp dword ptr [eax+870h] 0 +
mov byte ptr [ebp+arg_0+3] 0 +
jbe loc_1041B89  +
xor edx edx +
push ebx  +
movzx esi ds:byte_100A00C[edx] +
lea ecx ds:100h[edx*8] +
lea edx [ecx+eax+2544h] +
lea ecx [eax+ecx*2+28FCh] +
mov [ebp+var_8] 8 +
movzx edi byte ptr [edx] +
movzx ebx word ptr [ecx] +
add edi esi +
imul edi ebx +
add [ebp+var_4] edi +
inc ecx  +
inc ecx  +
inc edx  +
dec [ebp+var_8]  +
jnz loc_1041B63  +
inc byte ptr [ebp+arg_0+3]  +
movzx edx byte ptr [ebp+arg_0+3] +
cmp edx [eax+870h] +
jb loc_1041B40  +
pop ebx  +
xor edx edx +
lea ecx [eax+3C22h] +
movzx edi word ptr [ecx] +
movzx esi byte ptr [eax+edx+2801h] +
imul esi edi +
add [ebp+var_4] esi +
inc edx  +
inc ecx  +
inc ecx  +
cmp edx 0F9h +
jb loc_1041B91  +
mov eax [ebp+var_4] +
add eax 7 +
pop edi  +
shr eax 3 +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+868h] 0 +
jbe loc_1041C02  +
push esi  +
call sub_104082F  +
mov ecx [esi+85Ch] +
mov eax [esi+860h] +
sub eax ecx +
test eax eax +
jle loc_1041C02  +
push dword ptr [esi+868h]  +
push eax  +
push ecx  +
push dword ptr [esi+4344h]  +
call dword ptr [esi+4350h]  +
add esp 10h +
mov eax [esi+85Ch] +
and dword ptr [esi+868h] 0 +
and dword ptr [esi+14h] 0 +
mov [esi+860h] eax +
mov byte ptr [esi+18h] 20h +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movsx eax byte ptr [esi+18h] +
push edi  +
push 0  +
sub eax 10h +
push eax  +
push esi  +
call sub_10412F2  +
push 3  +
pop edi  +
lea ecx [esi+38h] +
push ebx  +
mov eax [ecx] +
push 4  +
pop edx  +
mov ebx [esi+860h] +
mov [ebx] al +
inc dword ptr [esi+860h]  +
shr eax 8 +
dec edx  +
jnz loc_1041C4D  +
add ecx 4 +
dec edi  +
jnz loc_1041C48  +
mov edi [ebp+arg_8] +
and edi 1 +
cmp [ebp+arg_8] edx +
jbe loc_1041CB1  +
mov ebx [ebp+arg_4] +
mov eax [esi] +
mov al [ebx+eax] +
mov ecx [esi+860h] +
mov [ecx] al +
inc dword ptr [esi+860h]  +
inc ebx  +
dec [ebp+arg_8]  +
inc dword ptr [esi+868h]  +
cmp dword ptr [esi+868h] 8000h +
jnz loc_1041CAB  +
push esi  +
call sub_1041BC1  +
mov byte ptr [esi+880h] 0 +
cmp [ebp+arg_8] 0 +
ja loc_1041C75  +
pop ebx  +
test edi edi +
jz loc_1041CC5  +
mov eax [esi+860h] +
mov byte ptr [eax] 0 +
inc dword ptr [esi+860h]  +
and dword ptr [esi+14h] 0 +
pop edi  +
mov byte ptr [esi+18h] 20h +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1041FF0  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] edi +
mov edx [esi+34h] +
xor eax eax +
mov ecx edi +
and ecx 7 +
inc eax  +
shl eax cl +
mov ecx edi +
shr ecx 3 +
mov cl [ecx+edx] +
test al cl +
mov eax [esi+30h] +
jnz loc_1041D99  +
movzx eax byte ptr [edi+eax] +
movsx ecx byte ptr [esi+18h] +
lea edx [eax+esi+2544h] +
movzx ebx byte ptr [edx] +
movzx eax word ptr [esi+eax*2+33ECh] +
sub ecx ebx +
shl eax cl +
or [esi+14h] eax +
mov al [edx] +
sub [esi+18h] al +
jmp loc_1041D87  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_1041D5D  +
mov eax [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1041D3C  +
inc edi  +
inc dword ptr [esi+868h]  +
jmp loc_1041FCC  +
mov bl [edi+eax] +
mov ecx [ebp+var_4] +
mov eax [esi+2Ch] +
mov eax [ecx+eax] +
add [ebp+var_4] 4 +
push eax  +
inc edi  +
push esi  +
mov byte ptr [ebp+arg_0+3] bl +
mov [ebp+var_C] edi +
mov [ebp+var_8] eax +
call sub_1040883  +
movzx eax al +
cmp bl 7 +
jnb loc_1041E4C  +
movzx edx bl +
lea ecx [edx+eax*8] +
movzx ebx word ptr [esi+ecx*2+35ECh] +
lea edi [ecx+esi+2644h] +
movsx ecx byte ptr [esi+18h] +
mov [ebp+arg_0] edi +
movzx edi byte ptr [edi] +
sub ecx edi +
shl ebx cl +
mov ecx [ebp+arg_0] +
or [esi+14h] ebx +
mov cl [ecx] +
sub [esi+18h] cl +
jmp loc_1041E41  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1041E17  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov bl [esi+16h] +
mov [ecx] bl +
inc dword ptr [esi+860h]  +
mov edi [esi+860h] +
mov cl [esi+17h] +
mov [edi] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1041DF6  +
jmp loc_1041F42  +
mov ecx eax +
shl ecx 4 +
movzx edi word ptr [ecx+esi+35FAh] +
movsx ecx byte ptr [esi+18h] +
lea edx [esi+eax*8+264Bh] +
movzx ebx byte ptr [edx] +
sub ecx ebx +
shl edi cl +
or [esi+14h] edi +
mov cl [edx] +
sub [esi+18h] cl +
jmp loc_1041EC0  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1041E96  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov dl [esi+16h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
mov ecx [esi+860h] +
mov dl [esi+17h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1041E75  +
movzx edx byte ptr [ebp+arg_0+3] +
movzx ebx byte ptr [edx+esi+27FAh] +
movsx ecx byte ptr [esi+18h] +
movzx edi word ptr [esi+edx*2+3FF8h] +
sub ecx ebx +
shl edi cl +
or [esi+14h] edi +
mov cl [edx+esi+27FAh] +
sub [esi+18h] cl +
jmp loc_1041F3C  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1041F12  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov bl [esi+16h] +
mov [ecx] bl +
inc dword ptr [esi+860h]  +
mov edi [esi+860h] +
mov cl [esi+17h] +
mov [edi] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1041EF1  +
mov cl ds:byte_100A00C[eax] +
test cl cl +
jz loc_1041FC0  +
mov edi ds:dword_1009F40[eax*4] +
and edi [ebp+var_8] +
movzx ebx cl +
movsx ecx byte ptr [esi+18h] +
sub ecx ebx +
shl edi cl +
or [esi+14h] edi +
mov al ds:byte_100A00C[eax] +
sub [esi+18h] al +
jmp loc_1041FBA  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_1041F90  +
mov eax [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1041F6F  +
mov edi [ebp+var_C] +
add edx 2 +
add [esi+868h] edx +
cmp dword ptr [esi+868h] 8000h +
jnz loc_1041FE5  +
push esi  +
call sub_1041BC1  +
mov byte ptr [esi+880h] 0 +
cmp edi [ebp+arg_4] +
jb loc_1041CF4  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] eax +
jbe locret_1042436  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_8] eax +
jmp loc_104201E  +
mov eax [ebp+var_4] +
mov ebx [esi+34h] +
xor edi edi +
inc edi  +
mov ecx eax +
and ecx 7 +
mov edx edi +
shl edx cl +
mov ecx eax +
shr ecx 3 +
mov cl [ecx+ebx] +
test dl cl +
mov ecx [esi+30h] +
jnz loc_10420C3  +
movzx eax byte ptr [eax+ecx] +
movsx ecx byte ptr [esi+18h] +
lea edx [eax+esi+2544h] +
movzx ebx byte ptr [edx] +
movzx eax word ptr [esi+eax*2+33ECh] +
sub ecx ebx +
shl eax cl +
or [esi+14h] eax +
mov al [edx] +
sub [esi+18h] al +
jmp loc_10420AF  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_1042085  +
mov eax [esi+85Ch] +
mov [esi+1Ch] edi +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1042068  +
inc [ebp+var_4]  +
inc dword ptr [esi+868h]  +
jmp loc_104240E  +
mov cl [eax+ecx] +
inc eax  +
mov byte ptr [ebp+arg_0+3] cl +
mov ecx [ebp+var_8] +
add [ebp+var_8] 4 +
mov [ebp+var_4] eax +
mov eax [esi+2Ch] +
mov ebx [ecx+eax] +
push ebx  +
push esi  +
mov [ebp+var_C] ebx +
call sub_1040883  +
cmp byte ptr [ebp+arg_0+3] 7 +
movzx eax al +
jnb loc_10421B9  +
movzx ecx byte ptr [ebp+arg_0+3] +
mov [ebp+arg_0] ecx +
lea ecx [ecx+eax*8] +
movzx edi word ptr [esi+ecx*2+35ECh] +
lea edx [ecx+esi+2644h] +
movzx ebx byte ptr [edx] +
movsx ecx byte ptr [esi+18h] +
sub ecx ebx +
shl edi cl +
or [esi+14h] edi +
mov cl [edx] +
sub [esi+18h] cl +
jmp loc_104216A  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1042140  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov dl [esi+16h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
mov ecx [esi+860h] +
mov dl [esi+17h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_104211F  +
mov ebx [ebp+var_C] +
mov cl ds:byte_100A00C[eax] +
cmp cl 3 +
jb loc_104238B  +
jbe loc_104230E  +
movzx edx cl +
xor edi edi +
inc edi  +
lea ecx [edx-3] +
shl edi cl +
mov ecx ebx +
shr ecx 3 +
dec edi  +
and edi ecx +
movsx ecx byte ptr [esi+18h] +
sub ecx edx +
add ecx 3 +
shl edi cl +
mov cl 3 +
or [esi+14h] edi +
sub cl ds:byte_100A00C[eax] +
add [esi+18h] cl +
jmp loc_1042308  +
movzx edi byte ptr [esi+eax*8+264Bh] +
mov ecx eax +
shl ecx 4 +
movzx edx word ptr [ecx+esi+35FAh] +
movsx ecx byte ptr [esi+18h] +
sub ecx edi +
shl edx cl +
or [esi+14h] edx +
mov cl [esi+eax*8+264Bh] +
sub [esi+18h] cl +
jmp loc_1042230  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1042206  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov dl [esi+16h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
mov edi [esi+860h] +
mov cl [esi+17h] +
mov [edi] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_10421E5  +
movzx ecx byte ptr [ebp+arg_0+3] +
movzx edx word ptr [esi+ecx*2+3FF8h] +
movzx edi byte ptr [ecx+esi+27FAh] +
mov [ebp+arg_0] ecx +
movsx ecx byte ptr [esi+18h] +
sub ecx edi +
shl edx cl +
mov ecx [ebp+arg_0] +
or [esi+14h] edx +
mov cl [ecx+esi+27FAh] +
sub [esi+18h] cl +
jmp loc_10422B2  +
mov ecx [esi+860h] +
cmp ecx [esi+864h] +
jb loc_1042288  +
mov ecx [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] ecx +
mov ecx [esi+860h] +
mov dl [esi+16h] +
mov [ecx] dl +
inc dword ptr [esi+860h]  +
mov edi [esi+860h] +
mov cl [esi+17h] +
mov [edi] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1042267  +
jmp loc_1042173  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_10422DE  +
mov eax [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_10422BD  +
movsx ecx byte ptr [esi+18h] +
and bl 7 +
movzx eax bl +
lea edx [eax+esi+4322h] +
movzx edi byte ptr [edx] +
movzx eax word ptr [esi+eax*2+4312h] +
sub ecx edi +
shl eax cl +
or [esi+14h] eax +
mov al [edx] +
sub [esi+18h] al +
jmp loc_1042383  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_1042359  +
mov eax [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_1042338  +
jmp loc_1042402  +
test cl cl +
jz loc_1042402  +
mov edx ds:dword_1009F40[eax*4] +
movzx edi cl +
movsx ecx byte ptr [esi+18h] +
and edx ebx +
sub ecx edi +
shl edx cl +
or [esi+14h] edx +
mov al ds:byte_100A00C[eax] +
sub [esi+18h] al +
jmp loc_10423FC  +
mov eax [esi+860h] +
cmp eax [esi+864h] +
jb loc_10423D2  +
mov eax [esi+85Ch] +
mov dword ptr [esi+1Ch] 1 +
mov [esi+860h] eax +
mov eax [esi+860h] +
mov cl [esi+16h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
mov eax [esi+860h] +
mov cl [esi+17h] +
mov [eax] cl +
inc dword ptr [esi+860h]  +
shl dword ptr [esi+14h] 10h +
add byte ptr [esi+18h] 10h +
cmp byte ptr [esi+18h] 10h +
jle loc_10423B1  +
mov eax [ebp+arg_0] +
add eax 2 +
add [esi+868h] eax +
cmp dword ptr [esi+868h] 8000h +
jnz loc_1042427  +
push esi  +
call sub_1041BC1  +
mov byte ptr [esi+880h] 0 +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_4] +
jb loc_104201B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea edx [ecx+42F2h] +
mov edi edx +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+arg_4] +
mov esi [ecx+2Ch] +
xor ebx ebx +
mov [ebp+var_4] ebx +
test edi edi +
jbe loc_1042482  +
mov eax [esi] +
add esi 4 +
cmp eax 10h +
jb loc_104247F  +
and eax 7 +
lea eax [ecx+eax*2+42F2h] +
inc word ptr [eax]  +
dec edi  +
jnz loc_1042468  +
push 8  +
pop ecx  +
movzx eax word ptr [edx] +
cmp eax [ebp+var_4] +
jbe loc_1042490  +
mov [ebp+var_4] eax +
add ebx eax +
inc edx  +
inc edx  +
dec ecx  +
jnz loc_1042485  +
push 5  +
pop ecx  +
mov eax ebx +
xor edx edx +
div  ecx +
pop edi  +
pop esi  +
pop ebx  +
cmp [ebp+var_4] eax +
jbe loc_10424B3  +
cmp [ebp+arg_4] 64h +
jb loc_10424B3  +
push 2  +
pop eax  +
jmp locret_10424B6  +
xor eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push edi  +
mov edi eax +
cmp edi [ebp+arg_0] +
jnb loc_1042579  +
push ebx  +
mov ebx ecx +
shl ebx 2 +
mov edx [esi+34h] +
xor eax eax +
mov ecx edi +
and ecx 7 +
inc eax  +
shl eax cl +
mov ecx edi +
shr ecx 3 +
mov cl [ecx+edx] +
test al cl +
mov eax [esi+30h] +
jnz loc_104250B  +
movzx eax byte ptr [eax+edi] +
lea eax [esi+eax*2+28FCh] +
inc word ptr [eax]  +
inc [ebp+var_8]  +
jmp loc_104256E  +
mov al [edi+eax] +
mov [ebp+var_1] al +
cmp al 7 +
mov eax [esi+2Ch] +
push dword ptr [eax+ebx]  +
push esi  +
jnb loc_1042534  +
call sub_1040883  +
movzx ecx [ebp+var_1] +
movzx eax al +
lea eax [ecx+eax*8] +
lea eax [esi+eax*2+2AFCh] +
jmp loc_1042557  +
call sub_1040883  +
movzx eax al +
shl eax 4 +
lea eax [eax+esi+2B0Ah] +
inc word ptr [eax]  +
mov eax [esi+30h] +
movzx eax byte ptr [eax+edi] +
lea eax [esi+eax*2+3C14h] +
inc word ptr [eax]  +
mov eax [esi+30h] +
movzx eax byte ptr [eax+edi] +
mov ecx [ebp+var_8] +
lea eax [ecx+eax+2] +
mov [ebp+var_8] eax +
add ebx 4 +
inc edi  +
cmp edi [ebp+arg_0] +
jb loc_10424DC  +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+870h] +
add eax 20h +
shl eax 4 +
push eax  +
lea eax [esi+28FCh] +
push 0  +
push eax  +
call memset  +
push 1F2h  +
lea eax [esi+3C22h] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
add esp 18h +
push [ebp+arg_C]  +
call sub_10424BF  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
push esi  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
call sub_10424BF  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C9Ch +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_C88] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi ecx +
mov [ebp+var_C8C] eax +
mov eax [esi+870h] +
add eax 20h +
mov ecx eax +
shl ecx 3 +
mov [ebp+var_C9C] ecx +
cmp ecx 320h +
jb loc_1042646  +
xor eax eax +
jmp loc_1042828  +
push ebx  +
push edi  +
mov edi eax +
shl edi 4 +
push edi  +
lea eax [ebp+var_C84] +
push 0  +
push eax  +
call memset  +
push edi  +
lea eax [ebp+var_644] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+arg_10] +
add esp 18h +
test ecx ecx +
jbe loc_10427A5  +
mov eax [ebp+arg_C] +
mov ebx [esi+34h] +
mov edi [esi+30h] +
shl eax 2 +
mov [ebp+var_C90] eax +
mov eax [ebp+arg_8] +
shl eax 2 +
mov [ebp+var_C94] eax +
mov [ebp+var_C98] ecx +
jmp loc_10426A5  +
mov eax [ebp+var_C94] +
mov ecx [ebp+var_C88] +
and ecx 7 +
xor edx edx +
inc edx  +
shl edx cl +
mov ecx [ebp+var_C88] +
shr ecx 3 +
mov cl [ecx+ebx] +
test dl cl +
jnz loc_10426CF  +
mov eax [ebp+var_C88] +
movzx eax byte ptr [edi+eax] +
jmp loc_1042713  +
mov ecx [ebp+var_C88] +
cmp byte ptr [edi+ecx] 7 +
mov ecx [esi+2Ch] +
push dword ptr [ecx+eax]  +
push esi  +
jnb loc_10426FD  +
call sub_1040883  +
mov ecx [ebp+var_C88] +
movzx ecx byte ptr [edi+ecx] +
movzx eax al +
lea eax [ecx+eax*8+100h] +
jmp loc_104270C  +
call sub_1040883  +
movzx eax al +
lea eax ds:107h[eax*8] +
add [ebp+var_C94] 4 +
inc [ebp+var_C88]  +
lea eax [ebp+eax*2+var_C84] +
inc word ptr [eax]  +
mov eax [ebp+var_C8C] +
xor edx edx +
mov ecx eax +
and ecx 7 +
inc edx  +
shl edx cl +
mov ecx eax +
shr ecx 3 +
mov cl [ecx+ebx] +
test dl cl +
jnz loc_1042745  +
movzx eax byte ptr [edi+eax] +
jmp loc_1042789  +
cmp byte ptr [edi+eax] 7 +
mov ecx [ebp+var_C90] +
mov eax [esi+2Ch] +
push dword ptr [eax+ecx]  +
push esi  +
jnb loc_1042773  +
call sub_1040883  +
mov ecx [ebp+var_C8C] +
movzx ecx byte ptr [edi+ecx] +
movzx eax al +
lea eax [ecx+eax*8+100h] +
jmp loc_1042782  +
call sub_1040883  +
movzx eax al +
lea eax ds:107h[eax*8] +
add [ebp+var_C90] 4 +
inc [ebp+var_C8C]  +
lea eax [ebp+eax*2+var_644] +
inc word ptr [eax]  +
dec [ebp+var_C98]  +
jnz loc_104269F  +
xor esi esi +
xor ebx ebx +
cmp [ebp+var_C9C] esi +
jbe loc_1042824  +
mov edi 100h +
movzx eax word ptr [ebp+esi*2+var_C84] +
mov ecx edi +
cmp ax cx +
movzx eax ax +
jnb loc_10427D1  +
movzx eax ds:byte_100A0B0[eax] +
jmp loc_10427DE  +
shr eax 8 +
movzx eax ds:byte_100A0B0[eax] +
add eax 8 +
movzx ecx word ptr [ebp+esi*2+var_644] +
mov edx edi +
cmp cx dx +
movzx ecx cx +
jnb loc_10427F9  +
movzx ecx ds:byte_100A0B0[ecx] +
jmp loc_1042806  +
shr ecx 8 +
movzx ecx ds:byte_100A0B0[ecx] +
add ecx 8 +
mov eax ds:dword_100A068[eax*4] +
sub eax ds:dword_100A068[ecx*4] +
cdq   +
xor eax edx +
sub eax edx +
add ebx eax +
inc esi  +
cmp esi [ebp+var_C9C] +
jb loc_10427B6  +
pop edi  +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 838h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
xor edi edi +
mov [ebp+var_820] ecx +
mov [ebp+var_82C] eax +
mov [ebp+var_830] esi +
mov [eax] edx +
cmp esi edi +
jz loc_104287E  +
mov eax [ebp+arg_C] +
mov [esi] eax +
mov eax edx +
sub eax [ebp+arg_4] +
cmp eax 1800h +
jnb loc_1042891  +
xor eax eax +
jmp loc_1042AA0  +
mov al [ecx+880h] +
mov [ebp+var_819] al +
cmp al 4 +
jnb loc_104288A  +
mov esi edx +
shr esi 3 +
xor eax eax +
push ebx  +
mov [ebp+var_818] edi +
cmp esi edi +
jbe loc_10428F1  +
test al 7 +
jnz loc_10428DB  +
cmp [ebp+var_818] 408h +
jnb loc_1042A9D  +
mov ebx [ebp+var_818] +
inc [ebp+var_818]  +
mov [ebp+ebx*2+var_814] di +
mov ebx [ecx+34h] +
movzx ebx byte ptr [ebx+eax] +
movzx ebx byte ptr [ebx+ecx+881h] +
add edi ebx +
inc eax  +
cmp eax esi +
jb loc_10428B3  +
mov eax [ebp+arg_4] +
add eax 3Fh +
and eax 0FFFFFFC0h +
mov [ebp+arg_4] eax +
add eax 800h +
add edx 0FFFFF000h +
mov [ebp+var_824] eax +
mov [ebp+var_834] edx +
cmp eax edx +
jnb loc_1042A9D  +
lea esi [eax+400h] +
mov edi 400h +
jmp loc_1042935  +
mov ecx [ebp+var_820] +
mov eax [ebp+var_824] +
mov edx esi +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edi  +
push edx  +
mov edx eax +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edx  +
push esi  +
push eax  +
call sub_10425F9  +
mov ebx 578h +
cmp eax ebx +
jbe loc_1042A83  +
lea eax [esi+400h] +
mov edx eax +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edi  +
push edx  +
lea ecx [esi-800h] +
mov edx ecx +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edx  +
push eax  +
push ecx  +
mov ecx [ebp+var_820] +
call sub_10425F9  +
cmp eax ebx +
jbe loc_1042A83  +
lea eax [esi+800h] +
mov edx eax +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edi  +
push edx  +
lea ecx [esi-0C00h] +
mov edx ecx +
shr edx 6 +
movzx edx [ebp+edx*2+var_814] +
push edx  +
push eax  +
push ecx  +
mov ecx [ebp+var_820] +
call sub_10425F9  +
cmp eax ebx +
jbe loc_1042A83  +
and [ebp+var_828] 0 +
lea ebx [esi-200h] +
lea eax [esi+600h] +
cmp ebx eax +
jnb loc_1042A83  +
lea eax [esi-600h] +
mov [ebp+var_818] eax +
mov ecx [ebp+var_820] +
mov eax ebx +
shr eax 6 +
movzx eax [ebp+eax*2+var_814] +
push edi  +
push eax  +
mov eax [ebp+var_818] +
shr eax 6 +
movzx eax [ebp+eax*2+var_814] +
push eax  +
push ebx  +
push [ebp+var_818]  +
call sub_10425F9  +
cmp eax [ebp+var_828] +
jbe loc_1042A50  +
mov [ebp+var_828] eax +
mov [ebp+var_838] ebx +
add [ebp+var_818] 40h +
add ebx 40h +
lea eax [esi+600h] +
cmp ebx eax +
jb loc_1042A09  +
cmp [ebp+var_828] 6A4h +
jb loc_1042A83  +
mov eax [ebp+var_838] +
mov ecx eax +
sub ecx [ebp+arg_4] +
cmp ecx 1000h +
jnb loc_1042AB0  +
add [ebp+var_824] edi +
mov eax [ebp+var_824] +
add esi edi +
cmp eax [ebp+var_834] +
jb loc_1042929  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 18h  +
mov cl [ebp+var_819] +
mov edx [ebp+var_820] +
inc cl  +
mov [edx+880h] cl +
mov ecx [ebp+var_82C] +
mov [ecx] eax +
mov ecx [ebp+var_830] +
test ecx ecx +
jz loc_1042AE3  +
shr eax 6 +
movzx eax [ebp+eax*2+var_814] +
mov [ecx] eax +
xor eax eax +
inc eax  +
jmp loc_1042A9F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov edx [ecx+8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
movzx eax word ptr [esi+eax] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [eax] esi +
mov ebx [ecx+10h] +
mov eax esi +
sub eax [ecx+4] +
push edi  +
mov edi [ecx+0Ch] +
add eax 4 +
mov [ebp+var_24] eax +
mov [ebp+var_1C] edi +
mov [ebp+var_C] ebx +
cmp edx eax +
ja loc_1042B3B  +
shl esi 2 +
and dword ptr [esi+ebx] 0 +
and dword ptr [esi+edi] 0 +
xor eax eax +
jmp loc_1042D06  +
push 2  +
pop eax  +
mov ebx esi +
mov [ebp+arg_4] eax +
mov [ebp+arg_0] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
sub ebx edx +
add ebx eax +
lea eax [edi+esi*4] +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
lea eax [eax+esi*4] +
mov [ecx+58h] ebx +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_20] eax +
mov eax [ecx] +
lea ebx [eax+edx] +
lea edi [eax+esi] +
mov eax [ebp+arg_4] +
mov al [ebx+eax] +
mov [ebp+var_10] ebx +
mov ebx [ebp+arg_4] +
cmp al [edi+ebx] +
mov ebx [ebp+var_20] +
jnz loc_1042BAC  +
inc ebx  +
cmp ebx 101h +
jge loc_1042BC5  +
mov eax [ebp+var_10] +
mov al [eax+ebx] +
cmp al [edi+ebx] +
jnz loc_1042BAC  +
inc ebx  +
cmp ebx 101h +
jge loc_1042BC5  +
mov eax [ebp+var_10] +
mov al [eax+ebx] +
cmp al [edi+ebx] +
jz loc_1042B84  +
mov eax [ebp+var_10] +
mov al [eax+ebx] +
cmp al [edi+ebx] +
jge loc_1042D0D  +
cmp ebx [ebp+var_14] +
jle loc_1042BFF  +
cmp ebx [ebp+arg_0] +
jle loc_1042BEF  +
mov eax esi +
sub eax edx +
add eax 2 +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_0] +
lea eax [ecx+eax*4+50h] +
inc [ebp+arg_0]  +
mov edi [ebp+arg_4] +
add eax 4 +
cmp [ebp+arg_0] ebx +
mov [eax] edi +
jl loc_1042BD6  +
cmp ebx 32h +
jge loc_1042D64  +
mov eax [ebp+var_18] +
cmp eax ebx +
mov [ebp+var_14] ebx +
mov [ebp+arg_4] eax +
jl loc_1042BFF  +
mov [ebp+arg_4] ebx +
mov eax [ebp+var_8] +
mov edi [ebp+var_4] +
mov [eax] edx +
mov eax [ebp+var_1C] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+var_8] eax +
cmp edx [ebp+var_24] +
ja loc_1042B62  +
and dword ptr [edi] 0 +
and dword ptr [eax] 0 +
xor edi edi +
cmp [ebp+arg_0] edi +
jle loc_1042C41  +
mov eax [ecx] +
mov edx eax +
sub edx [ecx+44h] +
add edx esi +
add eax esi +
mov bl [eax+edi] +
cmp bl [edx] +
jnz loc_1042C41  +
inc edi  +
inc edx  +
cmp edi [ebp+arg_0] +
jl loc_1042C33  +
cmp edi 2 +
mov ebx edi +
jl loc_1042C61  +
lea eax [ecx+edi*4+50h] +
and dword ptr [eax] 0 +
dec edi  +
sub eax 4 +
cmp edi 2 +
jge loc_1042C4C  +
cmp ebx 32h +
jg loc_1042CE9  +
and [ebp+arg_4] 0 +
cmp [ebp+arg_0] 0 +
jle loc_1042C8D  +
mov eax [ecx] +
mov edx eax +
sub edx [ecx+48h] +
lea edi [eax+esi] +
add edx esi +
mov eax [ebp+arg_4] +
mov al [edi+eax] +
cmp al [edx] +
jnz loc_1042C8D  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_0] +
inc edx  +
cmp [ebp+arg_4] eax +
jl loc_1042C77  +
cmp [ebp+arg_4] ebx +
jle loc_1042CA5  +
lea eax [ecx+ebx*4+50h] +
inc ebx  +
add eax 4 +
cmp ebx [ebp+arg_4] +
mov dword ptr [eax] 1 +
jl loc_1042C96  +
and [ebp+arg_4] 0 +
cmp [ebp+arg_0] 0 +
jle loc_1042CD1  +
mov eax [ecx] +
mov edx eax +
sub edx [ecx+4Ch] +
lea edi [eax+esi] +
add edx esi +
mov eax [ebp+arg_4] +
mov al [edi+eax] +
cmp al [edx] +
jnz loc_1042CD1  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_0] +
inc edx  +
cmp [ebp+arg_4] eax +
jl loc_1042CBB  +
cmp [ebp+arg_4] ebx +
jle loc_1042CE9  +
lea ecx [ecx+ebx*4+50h] +
inc ebx  +
add ecx 4 +
cmp ebx [ebp+arg_4] +
mov dword ptr [ecx] 2 +
jl loc_1042CDA  +
mov eax 7FFFh +
and esi eax +
sub eax esi +
cmp [ebp+arg_0] eax +
jle loc_1042D03  +
cmp eax 2 +
mov [ebp+arg_0] eax +
jge loc_1042D03  +
and [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
cmp ebx [ebp+var_18] +
jle loc_1042D4C  +
mov eax [ebp+arg_0] +
cmp ebx eax +
jle loc_1042D3C  +
mov edi esi +
sub edi edx +
add edi 2 +
mov [ebp+arg_4] edi +
lea eax [ecx+eax*4+50h] +
inc [ebp+arg_0]  +
mov edi [ebp+arg_4] +
add eax 4 +
cmp [ebp+arg_0] ebx +
mov [eax] edi +
jl loc_1042D27  +
cmp ebx 32h +
jge loc_1042D64  +
mov eax [ebp+var_14] +
cmp ebx eax +
mov [ebp+var_18] ebx +
mov [ebp+arg_4] ebx +
jl loc_1042D4C  +
mov [ebp+arg_4] eax +
mov eax [ebp+var_4] +
mov [eax] edx +
mov eax [ebp+var_C] +
lea edi [eax+edx*4] +
mov edx [edi] +
mov eax [ebp+var_8] +
mov [ebp+var_4] edi +
jmp loc_1042C12  +
mov eax [ebp+var_1C] +
mov edi [ebp+var_4] +
shl edx 2 +
mov eax [edx+eax] +
mov [edi] eax +
mov eax [ebp+var_C] +
mov eax [edx+eax] +
mov edx [ebp+var_8] +
mov [edx] eax +
jmp loc_1042C21  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+8] +
push esi  +
mov esi [ebp+arg_4] +
movzx eax word ptr [esi+eax] +
lea ecx [ecx+eax*4] +
mov eax [ecx] +
mov [ecx] esi +
mov ecx [edx+0Ch] +
push edi  +
mov edi [edx+10h] +
mov [ebp+var_14] ecx +
mov [ebp+var_18] edi +
cmp eax [ebp+arg_8] +
ja loc_1042DC8  +
shl esi 2 +
and dword ptr [esi+edi] 0 +
and dword ptr [esi+ecx] 0 +
jmp loc_1042EAA  +
push ebx  +
lea ecx [ecx+esi*4] +
push 2  +
pop ebx  +
mov [ebp+arg_4] ecx +
lea ecx [edi+esi*4] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_4] ecx +
mov edx [edx] +
lea edi [edx+eax] +
mov [ebp+var_8] edi +
lea edi [edx+esi] +
mov edx [ebp+var_8] +
mov dl [edx+ebx] +
mov ecx ebx +
cmp dl [edi+ebx] +
jnz loc_1042E1C  +
inc ecx  +
cmp ecx 32h +
jge loc_1042E90  +
mov edx [ebp+var_8] +
mov dl [edx+ecx] +
cmp dl [edi+ecx] +
jnz loc_1042E1C  +
inc ecx  +
cmp ecx 32h +
jge loc_1042E90  +
mov edx [ebp+var_8] +
mov dl [edx+ecx] +
cmp dl [edi+ecx] +
jz loc_1042DF6  +
mov edx [ebp+var_8] +
mov dl [edx+ecx] +
cmp dl [edi+ecx] +
jge loc_1042E52  +
cmp ecx [ebp+var_10] +
jle loc_1042E3D  +
cmp ecx 32h +
jge loc_1042E90  +
mov ebx [ebp+var_C] +
cmp ebx ecx +
mov [ebp+var_10] ecx +
jl loc_1042E3D  +
mov ebx ecx +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov ecx [ebp+var_14] +
lea edx [ecx+eax*4] +
mov eax [edx] +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] edx +
jmp loc_1042E7B  +
cmp ecx [ebp+var_C] +
jle loc_1042E68  +
cmp ecx 32h +
jge loc_1042E90  +
mov ebx [ebp+var_10] +
cmp ecx ebx +
mov [ebp+var_C] ecx +
jge loc_1042E68  +
mov ebx ecx +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_4] +
mov [ecx] eax +
mov ecx [ebp+var_18] +
lea ecx [ecx+eax*4] +
mov eax [ecx] +
mov [ebp+arg_4] ecx +
cmp eax [ebp+arg_8] +
jbe loc_1042E88  +
mov edx [ebp+arg_0] +
jmp loc_1042DDE  +
and dword ptr [ecx] 0 +
and dword ptr [edx] 0 +
jmp loc_1042EA9  +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_4] +
shl eax 2 +
mov ecx [eax+ecx] +
mov [edx] ecx +
mov ecx [ebp+var_18] +
mov eax [eax+ecx] +
mov ecx [ebp+var_4] +
mov [ecx] eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
movzx edx word ptr [ecx+edx] +
push esi  +
mov esi [eax+8] +
lea edx [esi+edx*4] +
cmp [edx] ecx +
jnz loc_1042EEF  +
push ebx  +
mov ebx [ebp+arg_8] +
push edi  +
mov edi [eax+0Ch] +
mov eax [eax+10h] +
cmp [edx] ebx +
ja loc_1042EF4  +
xor esi esi +
shl ecx 2 +
mov [edx] esi +
mov [ecx+eax] esi +
mov [ecx+edi] esi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
shl ecx 2 +
mov esi [ecx+edi] +
cmp esi ebx +
ja loc_1042F04  +
and dword ptr [ecx+edi] 0 +
xor esi esi +
add ecx eax +
mov [ebp+arg_0] ecx +
mov ecx [ecx] +
cmp ecx ebx +
ja loc_1042F17  +
mov ecx [ebp+arg_0] +
and dword ptr [ecx] 0 +
xor ecx ecx +
cmp esi ecx +
jbe loc_1042F33  +
cmp esi ebx +
ja loc_1042F21  +
xor esi esi +
mov [edx] esi +
test esi esi +
jz loc_1042EED  +
mov edx esi +
shl edx 2 +
mov esi [edx+eax] +
add edx eax +
jmp loc_1042F17  +
cmp ecx ebx +
ja loc_1042F39  +
xor ecx ecx +
mov [edx] ecx +
test ecx ecx +
jz loc_1042EED  +
mov edx ecx +
shl edx 2 +
mov ecx [edx+edi] +
add edx edi +
jmp loc_1042F17  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
movsx ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
cmp ebx [esi+252Ch] +
jge loc_1042F84  +
mov al [esi+2532h] +
cmp al 10h +
jge loc_1042F75  +
movsx eax al +
jmp loc_1042F78  +
push 10h  +
pop eax  +
lea eax [esi+eax*2+2508h] +
inc word ptr [eax]  +
jmp loc_1042FAE  +
push edi  +
lea edi [esi+2532h] +
inc byte ptr [edi]  +
movzx eax word ptr [esi+ebx*4+0F2Ch] +
push eax  +
push esi  +
call sub_1042F50  +
movzx eax word ptr [esi+ebx*4+0F2Eh] +
push eax  +
push esi  +
call sub_1042F50  +
dec byte ptr [edi]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor eax eax +
push edi  +
movzx esi ax +
push 8  +
mov eax esi +
pop ecx  +
push [ebp+arg_0]  +
shl esi 10h +
or eax esi +
lea edi [edx+2508h] +
stos   +
push edx  +
stos   +
call sub_1042F50  +
and [ebp+arg_0] 0 +
and [ebp+var_4] 0 +
lea esi [edx+2528h] +
mov bl 10h +
mov eax esi +
mov di [eax] +
mov ecx [ebp+var_4] +
shl di cl +
add word ptr [ebp+arg_0] di +
dec bl  +
dec eax  +
dec eax  +
inc [ebp+var_4]  +
test bl bl +
ja loc_1042FF6  +
xor edi edi +
cmp word ptr [ebp+arg_0] di +
jz loc_1043056  +
mov ecx 0FFFFh +
mov eax ecx +
add [esi] ax +
mov al 0Fh +
movzx ebx al +
cmp [edx+ebx*2+2508h] di +
jnz loc_1043035  +
dec al  +
jnz loc_1043022  +
jmp loc_104304D  +
movzx eax al +
mov ebx ecx +
add [edx+eax*2+2508h] bx +
lea eax [edx+eax*2+250Ah] +
add word ptr [eax] 2 +
add [ebp+arg_0] ecx +
cmp word ptr [ebp+arg_0] di +
jnz loc_104301B  +
mov cl 10h +
mov [ebp+arg_0] esi +
mov eax [ebp+arg_0] +
mov ax [eax] +
dec ax  +
movzx edi ax +
test di di +
jl loc_1043088  +
lea eax [edx+9A8h] +
mov esi [eax] +
movzx esi word ptr [esi] +
mov ebx [edx+9ACh] +
mov [esi+ebx] cl +
add dword ptr [eax] 2 +
dec edi  +
test di di +
jge loc_1043071  +
sub [ebp+arg_0] 2 +
dec cl  +
test cl cl +
ja loc_104305B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
movsx edx cx +
movzx edx word ptr [eax+edx*2+9B0h] +
add ecx ecx +
mov [ebp+var_4] edx +
movzx edx word ptr [eax+2530h] +
movzx ecx cx +
cmp cx dx +
jg loc_104313E  +
push ebx  +
push esi  +
push edi  +
jge loc_10430EF  +
mov esi [eax+9A4h] +
movsx edx cx +
movsx edi word ptr [eax+edx*2+9B2h] +
movsx edx word ptr [eax+edx*2+9B0h] +
mov dx [esi+edx*2] +
cmp dx [esi+edi*2] +
jbe loc_10430EF  +
inc ecx  +
mov edx 2BEh +
cmp cx dx +
jge loc_104313B  +
movsx ebx word ptr [ebp+var_4] +
movsx edx cx +
movzx esi word ptr [eax+edx*2+9B0h] +
mov edx [eax+9A4h] +
mov bx [edx+ebx*2] +
movsx edi si +
cmp bx [edx+edi*2] +
jbe loc_104313B  +
movsx edx word ptr [ebp+arg_0] +
mov [eax+edx*2+9B0h] si +
movzx edx cx +
mov [ebp+arg_0] edx +
movzx edx word ptr [eax+2530h] +
add ecx ecx +
cmp cx dx +
jle loc_10430C9  +
pop edi  +
pop esi  +
pop ebx  +
movsx ecx word ptr [ebp+arg_0] +
mov dx word ptr [ebp+var_4] +
mov [eax+ecx*2+9B0h] dx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
mov word ptr [ebp+var_28] ax +
mov word ptr [ebp+var_28+2] ax +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
add eax 250Ah +
push edi  +
mov di word ptr [ebp+ecx*2+var_28] +
add di [eax] +
add di di +
mov word ptr [ebp+ecx*2+var_28+2] di +
inc ecx  +
inc eax  +
inc eax  +
cmp ecx 10h +
jle loc_104317F  +
xor ecx ecx +
cmp [ebp+arg_4] ecx +
pop edi  +
jle loc_10431BD  +
movsx eax byte ptr [edx+ecx] +
mov ax word ptr [ebp+eax*2+var_28] +
mov [esi+ecx*2] ax +
movsx eax byte ptr [edx+ecx] +
lea eax [ebp+eax*2+var_28] +
inc word ptr [eax]  +
inc ecx  +
cmp ecx [ebp+arg_4] +
jl loc_104319F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1036539  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cx [eax+2530h] +
sub esp 0Ch +
push esi  +
sar cx 1 +
push edi  +
movzx esi cx +
jmp loc_10431F0  +
push esi  +
call sub_104309E  +
dec esi  +
cmp si 1 +
jge loc_10431E9  +
mov ecx [ebp+arg_4] +
mov [eax+9A8h] ecx +
movzx ecx word ptr [eax+9B2h] +
movsx edx cx +
cmp edx [eax+252Ch] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edx +
jge loc_1043227  +
mov edx [eax+9A8h] +
mov [edx] cx +
add dword ptr [eax+9A8h] 2 +
movzx ecx word ptr [eax+2530h] +
movsx edx cx +
mov dx [eax+edx*2+9B0h] +
dec ecx  +
push 1  +
mov [eax+9B2h] dx +
mov [eax+2530h] cx +
call sub_104309E  +
movzx edx word ptr [eax+9B2h] +
movsx ecx dx +
cmp ecx [eax+252Ch] +
mov [ebp+var_C] edx +
jge loc_1043274  +
mov esi [eax+9A8h] +
mov [esi] dx +
add dword ptr [eax+9A8h] 2 +
movzx edi word ptr [ebp+arg_0] +
mov cx [ebx+ecx*2] +
mov edx [ebp+var_4] +
add cx [ebx+edx*2] +
inc [ebp+arg_0]  +
movsx esi di +
mov [ebx+esi*2] cx +
push 1  +
mov [eax+9B2h] di +
call sub_104309E  +
mov cx word ptr [ebp+var_8] +
mov [eax+esi*4+0F2Ch] cx +
mov cx word ptr [ebp+var_C] +
mov [eax+esi*4+0F2Eh] cx +
cmp word ptr [eax+2530h] 1 +
jg loc_10431FF  +
mov ecx [ebp+arg_4] +
push edi  +
mov edx eax +
mov [eax+9A8h] ecx +
call sub_1042FB9  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax [ebp+arg_4] +
mov [esi+252Ch] eax +
mov eax [ebp+arg_C] +
movzx edx word ptr [esi+252Ch] +
mov [esi+9ACh] eax +
xor eax eax +
xor ecx ecx +
cmp [ebp+arg_4] eax +
mov [esi+9A4h] ebx +
mov byte ptr [esi+2532h] 0 +
mov [esi+2530h] ax +
mov [esi+9B2h] ax +
jle loc_1043389  +
mov edi [esi+9ACh] +
mov byte ptr [eax+edi] 0 +
cmp word ptr [ebx+eax*2] 0 +
jz loc_1043350  +
inc word ptr [esi+2530h]  +
movzx eax word ptr [esi+2530h] +
cwde   +
mov [esi+eax*2+9B0h] cx +
inc ecx  +
movsx eax cx +
cmp eax [ebp+arg_4] +
jl loc_1043328  +
movzx eax word ptr [esi+2530h] +
cmp ax 2 +
jge loc_104339B  +
test ax ax +
jz loc_1043389  +
xor eax eax +
inc eax  +
cmp word ptr [esi+9B2h] 0 +
jnz loc_1043381  +
mov [ebx+2] ax +
jmp loc_10432EB  +
mov [ebx] ax +
jmp loc_10432EB  +
movsx eax word ptr [esi+9B2h] +
mov edx [ebp+arg_10] +
xor ecx ecx +
mov [edx+eax*2] cx +
jmp loc_10433BB  +
push [ebp+arg_10]  +
mov eax esi +
push edx  +
call sub_10431D0  +
cmp [ebp+arg_14] 0 +
jz loc_10433BB  +
push [ebp+arg_4]  +
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_10] +
call sub_1043157  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_20] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_10433F8  +
mov ebx [ebp+arg_0] +
push 804h  +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+8] edi +
call ebx  +
pop ecx  +
cmp eax edi +
jnz loc_10433FF  +
push edi  +
push 5  +
push esi  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov ecx [ebp+arg_4] +
or dword ptr [eax+88h] 0FFFFFFFFh +
or dword ptr [eax+84h] 0FFFFFFFFh +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_C] +
mov [eax+10h] ecx +
mov ecx [ebp+arg_10] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_14] +
mov [eax+18h] ecx +
mov ecx [ebp+arg_18] +
mov [eax+1Ch] ecx +
mov ecx [ebp+arg_1C] +
mov [eax+20h] ecx +
push 0Fh  +
pop ecx  +
mov [eax+0B2h] cx +
mov ecx 0FFFFh +
mov [eax+8] ebx +
mov [eax] esi +
mov [eax+48h] edi +
mov [eax+44h] edi +
mov [eax+4Ch] edi +
mov [eax+0A0h] ecx +
mov [eax+0A8h] ecx +
mov [eax+0A4h] ecx +
jmp loc_10433FA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esi+7BCh] +
lea ecx [esi+3B7h] +
mov [eax+4] ecx +
lea ecx [esi+4B8h] +
mov [eax+8] ecx +
lea ecx [esi+5B9h] +
mov [eax+0Ch] ecx +
mov ecx [esi+38h] +
mov [eax+10h] ecx +
mov cx [esi+70h] +
push edi  +
mov [eax+1Eh] cx +
mov cx [esi+72h] +
push eax  +
xor ebx ebx +
push ebx  +
lea edi [esi+7E4h] +
mov [eax+20h] cx +
call dword ptr [esi+24h]  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_10434D1  +
push ebx  +
push 0Bh  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_104350B  +
cmp [esi+28h] ebx +
jz loc_1043508  +
mov [edi] ebx +
mov eax [esi+38h] +
mov [edi+4] eax +
mov eax [esi+4Ch] +
mov [edi+8] eax +
mov ax [esi+0A0h] +
mov [edi+0Ch] ax +
mov ax [esi+70h] +
mov [edi+0Eh] ax +
movzx eax word ptr [esi+72h] +
push edi  +
mov [edi+10h] eax +
call dword ptr [esi+28h]  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_10434C3  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+0A8h]  +
lea edi [esi+7E4h] +
push dword ptr [esi+48h]  +
push dword ptr [esi+84h]  +
call dword ptr [esi+10h]  +
add esp 0Ch +
cmp [esi+0A8h] eax +
jnz loc_104363E  +
mov eax [esi+48h] +
movzx eax word ptr [eax+4] +
mov ebx [ebp+arg_4] +
add eax ebx +
cmp eax [esi+98h] +
ja loc_104363E  +
mov eax [esi+48h] +
movzx eax word ptr [eax+4] +
push eax  +
mov eax [esi+3Ch] +
add eax ebx +
push eax  +
push dword ptr [esi+84h]  +
call dword ptr [esi+10h]  +
mov ecx [esi+48h] +
movzx ecx word ptr [ecx+4] +
add esp 0Ch +
cmp ecx eax +
jnz loc_104363E  +
mov eax [esi+48h] +
xor ecx ecx +
cmp [eax] ecx +
jz loc_10435C4  +
movzx eax word ptr [eax+4] +
push ecx  +
push eax  +
mov eax [esi+3Ch] +
add eax ebx +
push eax  +
call sub_103EA79  +
push eax  +
mov eax [esi+0A8h] +
sub eax 4 +
push eax  +
mov eax [esi+48h] +
add eax 4 +
push eax  +
call sub_103EA79  +
mov ecx [esi+48h] +
cmp eax [ecx] +
jnz loc_104363E  +
xor ecx ecx +
mov eax [esi+48h] +
add [eax+4] bx +
cmp ebx ecx +
ja loc_10435DC  +
mov eax [esi+48h] +
cmp [eax+6] cx +
jz loc_10435DC  +
xor edx edx +
jmp loc_10435DF  +
xor edx edx +
inc edx  +
cmp [esi+28h] ecx +
jz loc_1043639  +
mov dword ptr [edi] 2 +
mov eax [esi+38h] +
mov [edi+4] eax +
mov ax [esi+0A8h] +
sub ax 8 +
mov [edi+0Ch] ax +
jz loc_104360C  +
mov eax [esi+48h] +
add eax 8 +
mov [edi+8] eax +
jmp loc_104360F  +
mov [edi+8] ecx +
mov eax [esi+3Ch] +
add eax ebx +
mov [edi+10h] eax +
mov eax [esi+48h] +
mov ax [eax+4] +
push edi  +
mov [edi+14h] ax +
mov [edi+18h] edx +
mov [edi+1Ch] bx +
call dword ptr [esi+28h]  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_1043639  +
push 0  +
push 0Bh  +
jmp loc_1043642  +
xor eax eax +
inc eax  +
jmp loc_104364B  +
push 0  +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push 1  +
push 0  +
push dword ptr [esi+88h]  +
call dword ptr [esi+1Ch]  +
mov ebx [ebp+arg_4] +
mov edi [ebp+arg_0] +
push ebx  +
push edi  +
push dword ptr [esi+88h]  +
mov [ebp+arg_8] eax +
call dword ptr [esi+10h]  +
add esp 18h +
test eax eax +
jg loc_1043699  +
push 0  +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_10436D9  +
mov cl [edi+ebx-1] +
mov eax edi +
mov byte ptr [edi+ebx-1] 0 +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10436A7  +
sub eax edi +
lea edx [eax+1] +
cmp edx ebx +
jl loc_10436BB  +
test cl cl +
jnz loc_104368A  +
mov ecx [ebp+arg_8] +
push 0  +
lea eax [eax+ecx+1] +
push eax  +
push dword ptr [esi+88h]  +
call dword ptr [esi+1Ch]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_104368A  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push 0  +
push dword ptr [esi+88h]  +
call dword ptr [esi+1Ch]  +
mov ebx eax +
add esp 0Ch +
cmp ebx 0FFFFFFFFh +
jnz loc_1043715  +
push 0  +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_104378D  +
mov ax [esi+0ACh] +
push edi  +
mov [esi+7DEh] ax +
mov ax [esi+70h] +
lea edi [esi+7BCh] +
mov [esi+7DAh] ax +
mov eax [esi+38h] +
push edi  +
push 5  +
mov [edi] ebx +
mov [esi+7CCh] eax +
call dword ptr [esi+24h]  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_104377A  +
movzx eax word ptr [esi+7DEh] +
mov [esi+0ACh] ax +
test ax ax +
jz loc_1043789  +
mov edi [edi] +
cmp edi ebx +
jz loc_1043789  +
push 0  +
push edi  +
push dword ptr [esi+88h]  +
call dword ptr [esi+1Ch]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jnz loc_1043789  +
push 0  +
push 0Bh  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_104378C  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+0B2h] +
push edi  +
and eax 0Fh +
xor edi edi +
sub eax edi +
jz loc_10437F4  +
dec eax  +
jz loc_10437D9  +
dec eax  +
jz loc_10437CF  +
dec eax  +
jz loc_10437C5  +
sub eax 0Ch +
jz loc_1043802  +
push edi  +
push 6  +
jmp loc_10437E9  +
push dword ptr [esi+34h]  +
call sub_1044A3D  +
jmp loc_10437E1  +
push dword ptr [esi+34h]  +
call sub_1044885  +
jmp loc_10437E1  +
push dword ptr [esi+34h]  +
call sub_1044747  +
pop ecx  +
test eax eax +
jz loc_10437F4  +
push edi  +
push 7  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_1043805  +
push dword ptr [esi+3Ch]  +
call dword ptr [esi+4]  +
push dword ptr [esi+40h]  +
call dword ptr [esi+4]  +
pop ecx  +
pop ecx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx ecx word ptr [esi+0B2h] +
mov eax ecx +
push edi  +
and eax 0Fh +
xor edi edi +
sub eax edi +
lea edx [esi+94h] +
mov dword ptr [edx] 8000h +
jz loc_10438E4  +
dec eax  +
jz loc_10438CF  +
dec eax  +
jz loc_10438A5  +
dec eax  +
jz loc_1043873  +
sub eax 0Ch +
jz loc_10439D0  +
push 6  +
pop eax  +
push edi  +
push eax  +
push dword ptr [esi]  +
call sub_103E6B6  +
push 0Fh  +
pop eax  +
mov [esi+0B2h] ax +
xor eax eax +
jmp loc_10439D3  +
push edi  +
push edi  +
push edi  +
push edi  +
xor eax eax +
push edi  +
shr ecx 8 +
inc eax  +
push edi  +
and ecx 1Fh +
shl eax cl +
lea ebx [esi+98h] +
push ebx  +
push edi  +
mov [ebp+var_10] eax +
push edi  +
lea eax [ebp+var_10] +
push eax  +
push edx  +
call sub_10448B3  +
add esp 2Ch +
test eax eax +
jz loc_10438F0  +
push 7  +
jmp loc_1043858  +
mov eax [esi+20h] +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
lea ebx [esi+98h] +
push ebx  +
push edi  +
mov [ebp+var_4] eax +
push edi  +
lea eax [ebp+var_8] +
shr ecx 8 +
push eax  +
and ecx 1Fh +
push edx  +
mov [ebp+var_8] ecx +
call sub_104477A  +
jmp loc_104389A  +
push edi  +
lea ebx [esi+98h] +
push ebx  +
push edi  +
push edi  +
push edx  +
call sub_104465E  +
add esp 14h +
jmp loc_104389D  +
lea ebx [esi+98h] +
mov dword ptr [ebx] 8000h +
push dword ptr [ebx]  +
call dword ptr [esi+8]  +
pop ecx  +
mov [esi+3Ch] eax +
cmp eax edi +
jnz loc_1043905  +
push edi  +
push 5  +
jmp loc_104385B  +
push dword ptr [esi+94h]  +
call dword ptr [esi+8]  +
pop ecx  +
mov [esi+40h] eax +
cmp eax edi +
jnz loc_104391F  +
push dword ptr [esi+3Ch]  +
call dword ptr [esi+4]  +
pop ecx  +
jmp loc_10438FD  +
movzx eax word ptr [esi+0B2h] +
and eax 0Fh +
dec eax  +
jz loc_1043991  +
dec eax  +
jz loc_1043965  +
dec eax  +
jnz loc_10439D0  +
push dword ptr [esi+1Ch]  +
lea eax [esi+34h] +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
push eax  +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+var_10] +
push dword ptr [esi+8]  +
push eax  +
lea eax [esi+94h] +
push eax  +
call sub_10448B3  +
add esp 2Ch +
jmp loc_10439AB  +
push dword ptr [esi+1Ch]  +
lea eax [esi+34h] +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
push eax  +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+var_8] +
push dword ptr [esi+8]  +
push eax  +
lea eax [esi+94h] +
push eax  +
call sub_104477A  +
jmp loc_1043960  +
lea eax [esi+34h] +
push eax  +
push ebx  +
push dword ptr [esi+4]  +
lea eax [esi+94h] +
push dword ptr [esi+8]  +
push eax  +
call sub_104465E  +
add esp 14h +
cmp eax edi +
jz loc_10439D0  +
push dword ptr [esi+3Ch]  +
xor ebx ebx +
cmp eax 1 +
setnz bl  +
lea ebx [ebx+ebx+5] +
call dword ptr [esi+4]  +
push dword ptr [esi+40h]  +
call dword ptr [esi+4]  +
pop ecx  +
pop ecx  +
push edi  +
push ebx  +
jmp loc_104385B  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+0B2h] +
push edi  +
and eax 0Fh +
xor edi edi +
sub eax edi +
jz loc_1043A3B  +
dec eax  +
jz loc_1043A20  +
dec eax  +
jz loc_1043A16  +
dec eax  +
jz loc_1043A0C  +
sub eax 0Ch +
jz loc_1043A3B  +
push edi  +
push 6  +
jmp loc_1043A30  +
push dword ptr [esi+34h]  +
call sub_1044A17  +
jmp loc_1043A28  +
push dword ptr [esi+34h]  +
call sub_1044861  +
jmp loc_1043A28  +
push dword ptr [esi+34h]  +
call sub_104472A  +
pop ecx  +
test eax eax +
jz loc_1043A3B  +
push edi  +
push 7  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_1043A3E  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+0B2h] +
and eax 0Fh +
xor ebx ebx +
sub eax ebx +
push edi  +
jz loc_1043B07  +
dec eax  +
jz loc_1043AD1  +
dec eax  +
jz loc_1043A9E  +
dec eax  +
jz loc_1043A79  +
push ebx  +
push 6  +
jmp loc_1043B39  +
mov edi [ebp+arg_4] +
movzx eax word ptr [edi] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
mov eax [esi+48h] +
push dword ptr [esi+40h]  +
movzx eax word ptr [eax+4] +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+34h]  +
call sub_10449B1  +
jmp loc_1043AC1  +
mov edi [ebp+arg_4] +
movzx eax word ptr [edi] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
mov eax [esi+48h] +
push dword ptr [esi+40h]  +
movzx eax word ptr [eax+4] +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+34h]  +
call sub_104481D  +
add esp 14h +
test eax eax +
jnz loc_1043B36  +
mov ax word ptr [ebp+arg_0] +
mov [edi] ax +
jmp loc_1043B31  +
mov eax [esi+94h] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
mov eax [esi+48h] +
push dword ptr [esi+40h]  +
movzx eax word ptr [eax+4] +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+34h]  +
call sub_10446D6  +
add esp 14h +
test eax eax +
jnz loc_1043B36  +
mov eax [ebp+arg_4] +
mov cx word ptr [ebp+arg_0] +
mov [eax] cx +
jmp loc_1043B31  +
mov eax [esi+48h] +
movzx eax word ptr [eax+4] +
movzx ecx ax +
cmp ecx [esi+94h] +
ja loc_1043B36  +
mov ecx [ebp+arg_4] +
mov [ecx] ax +
movzx eax ax +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+40h]  +
call memcpy  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1043B42  +
push ebx  +
push 7  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebx+5B9h] +
push eax  +
mov esi 101h +
push esi  +
lea edi [ebx+6BAh] +
push edi  +
call sub_103D3F1  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_103D42B  +
lea edi [esi+7Fh] +
push edi  +
mov esi 8000h +
lea eax [ebx+6BAh] +
push esi  +
push eax  +
call dword ptr [ebx+0Ch]  +
add esp 0Ch +
mov [ebx+88h] eax +
cmp eax 0FFFFFFFFh +
jz loc_1043E1E  +
push edi  +
lea eax [ebx+6BAh] +
push esi  +
push eax  +
call dword ptr [ebx+0Ch]  +
add esp 0Ch +
mov [ebx+84h] eax +
cmp eax 0FFFFFFFFh +
jz loc_1043E1E  +
push 24h  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [ebx+88h]  +
call dword ptr [ebx+10h]  +
add esp 0Ch +
cmp eax 24h +
jz loc_1043BE3  +
push 0  +
push 2  +
jmp loc_1043E22  +
cmp [ebp+var_24] 4643534Dh +
jnz loc_1043BDA  +
mov eax 103h +
cmp [ebp+var_C] ax +
jz loc_1043C03  +
movzx eax [ebp+var_C] +
push eax  +
push 3  +
jmp loc_1043E22  +
mov ax [ebp+arg_C] +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_1043C2A  +
mov cx [ebp+arg_8] +
cmp cx [ebp+var_4] +
jnz loc_1043C21  +
cmp ax [ebp+var_2] +
jz loc_1043C2A  +
push 0  +
push 0Ah  +
jmp loc_1043E22  +
push 9  +
xor eax eax +
lea edi [ebx+50h] +
pop ecx  +
lea esi [ebp+var_24] +
movs   +
test byte ptr [ebx+6Eh] 4 +
mov word ptr [ebp+arg_0] ax +
mov byte ptr [ebp+arg_0+2] al +
mov byte ptr [ebp+arg_0+3] al +
jz loc_1043C85  +
push 4  +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [ebx+88h]  +
call dword ptr [ebx+10h]  +
add esp 0Ch +
cmp eax 4 +
jnz loc_1043BDA  +
mov eax 0EA60h +
cmp word ptr [ebp+arg_0] ax +
ja loc_1043BDA  +
cmp byte ptr [ebp+arg_0+2] 0FFh +
ja loc_1043BDA  +
cmp byte ptr [ebp+arg_0+3] 0FFh +
ja loc_1043BDA  +
movzx eax word ptr [ebp+arg_0] +
xor edi edi +
cmp [ebx+0A0h] eax +
jz loc_1043CC4  +
mov eax [ebx+4Ch] +
cmp eax edi +
jz loc_1043CA2  +
push eax  +
call dword ptr [ebx+4]  +
pop ecx  +
mov [ebx+4Ch] edi +
movzx eax word ptr [ebp+arg_0] +
mov [ebx+0A0h] eax +
cmp eax edi +
jbe loc_1043CC4  +
push eax  +
call dword ptr [ebx+8]  +
pop ecx  +
mov [ebx+4Ch] eax +
cmp eax edi +
jnz loc_1043CC4  +
push edi  +
push 5  +
jmp loc_1043E22  +
mov eax [ebx+0A0h] +
cmp eax edi +
jbe loc_1043CEC  +
push eax  +
push dword ptr [ebx+4Ch]  +
push dword ptr [ebx+88h]  +
call dword ptr [ebx+10h]  +
add esp 0Ch +
cmp [ebx+0A0h] eax +
jz loc_1043CEC  +
push edi  +
jmp loc_1043BDC  +
movzx eax byte ptr [ebp+arg_0+2] +
add eax 8 +
cmp [ebx+44h] edi +
jnz loc_1043D3A  +
push eax  +
mov [ebx+0A4h] eax +
call dword ptr [ebx+8]  +
pop ecx  +
mov [ebx+44h] eax +
cmp eax edi +
jz loc_1043CBC  +
movzx eax byte ptr [ebp+arg_0+3] +
add eax 8 +
cmp [ebx+48h] edi +
jnz loc_1043D4A  +
push eax  +
mov [ebx+0A8h] eax +
call dword ptr [ebx+8]  +
pop ecx  +
mov [ebx+48h] eax +
cmp eax edi +
jz loc_1043CBC  +
push dword ptr [ebx+0A8h]  +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_1043D52  +
cmp eax [ebx+0A4h] +
jz loc_1043D0A  +
push edi  +
push 9  +
jmp loc_1043E22  +
cmp eax [ebx+0A8h] +
jnz loc_1043D42  +
test byte ptr [ebx+6Eh] 1 +
mov esi 100h +
jz loc_1043D8A  +
push ebx  +
push esi  +
lea eax [ebx+1B5h] +
push eax  +
call sub_1043657  +
test eax eax +
jz loc_1043E29  +
push ebx  +
push esi  +
lea eax [ebx+2B6h] +
push eax  +
call sub_1043657  +
test eax eax +
jnz loc_1043D98  +
jmp loc_1043E29  +
mov byte ptr [ebx+1B5h] 0 +
mov byte ptr [ebx+2B6h] 0 +
test byte ptr [ebx+6Eh] 2 +
jz loc_1043DC4  +
push ebx  +
push esi  +
lea eax [ebx+3B7h] +
push eax  +
call sub_1043657  +
test eax eax +
jz loc_1043E29  +
push ebx  +
push esi  +
lea eax [ebx+4B8h] +
push eax  +
call sub_1043657  +
test eax eax +
jnz loc_1043DD2  +
jmp loc_1043E29  +
mov byte ptr [ebx+3B7h] 0 +
mov byte ptr [ebx+4B8h] 0 +
push 1  +
push edi  +
push dword ptr [ebx+88h]  +
call dword ptr [ebx+1Ch]  +
add esp 0Ch +
mov [ebx+2Ch] eax +
push edi  +
cmp eax 0FFFFFFFFh +
jnz loc_1043DEE  +
push 4  +
jmp loc_1043E22  +
push dword ptr [ebx+60h]  +
push dword ptr [ebx+88h]  +
call dword ptr [ebx+1Ch]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jnz loc_1043E05  +
push edi  +
jmp loc_1043DEA  +
mov ax [ebx+6Ch] +
push ebx  +
mov [ebx+0ACh] ax +
call sub_104346D  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1043E2B  +
push 0  +
push 1  +
push dword ptr [ebx]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 10h  +
lea eax [esi+74h] +
push eax  +
push dword ptr [esi+88h]  +
call dword ptr [esi+10h]  +
add esp 0Ch +
cmp eax 10h +
jnz loc_1043E72  +
push esi  +
push 100h  +
lea eax [esi+0B4h] +
push eax  +
call sub_1043657  +
test eax eax +
jz loc_1043E72  +
xor eax eax +
inc eax  +
jmp loc_1043E7F  +
push 0  +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov di [ebp+arg_0] +
cmp di [esi+0B2h] +
jnz loc_1043EA5  +
xor eax eax +
inc eax  +
jmp loc_1043ED0  +
push esi  +
call sub_1043798  +
test eax eax +
jnz loc_1043EBD  +
push eax  +
push 7  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_1043ED0  +
push esi  +
mov [esi+0B2h] di +
call sub_1043810  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1043EEC  +
xor eax eax +
jmp loc_1043F40  +
push esi  +
push 0Fh  +
call sub_1043E89  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_1043F00  +
push eax  +
call dword ptr [esi+4]  +
pop ecx  +
mov eax [esi+44h] +
test eax eax +
jz loc_1043F0C  +
push eax  +
call dword ptr [esi+4]  +
pop ecx  +
mov eax [esi+48h] +
test eax eax +
jz loc_1043F18  +
push eax  +
call dword ptr [esi+4]  +
pop ecx  +
mov eax [esi+88h] +
cmp eax 0FFFFFFFFh +
jz loc_1043F28  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
mov eax [esi+84h] +
cmp eax 0FFFFFFFFh +
jz loc_1043F38  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
push esi  +
call dword ptr [esi+4]  +
xor eax eax +
pop ecx  +
inc eax  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0A4h] +
imul eax ebx +
add eax [esi+2Ch] +
push edi  +
push 0  +
push eax  +
push dword ptr [esi+84h]  +
lea edi [esi+7E4h] +
mov [esi+90h] ebx +
call dword ptr [esi+1Ch]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_1044038  +
push dword ptr [esi+0A4h]  +
push dword ptr [esi+44h]  +
push dword ptr [esi+84h]  +
call dword ptr [esi+10h]  +
add esp 0Ch +
cmp [esi+0A4h] eax +
jnz loc_1044038  +
mov eax [esi+44h] +
push 0  +
push dword ptr [eax]  +
push dword ptr [esi+84h]  +
call dword ptr [esi+1Ch]  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_1044038  +
mov eax [esi+44h] +
mov cl [eax+6] +
and cl 0Fh +
cmp cl 0Fh +
jnz loc_1043FD3  +
push 0  +
push 6  +
jmp loc_104403C  +
mov cx [eax+4] +
mov [esi+0B0h] cx +
movzx eax word ptr [eax+6] +
push esi  +
push eax  +
call sub_1043E89  +
test eax eax +
jz loc_1044043  +
cmp dword ptr [esi+28h] 0 +
jz loc_1044033  +
mov dword ptr [edi] 1 +
mov eax [esi+38h] +
mov [edi+4] eax +
mov ax [esi+0A4h] +
sub ax 8 +
mov [edi+0Ch] ax +
jz loc_104401B  +
mov eax [esi+44h] +
add eax 8 +
mov [edi+8] eax +
jmp loc_104401F  +
and dword ptr [edi+8] 0 +
push edi  +
mov [edi+0Eh] bx +
call dword ptr [esi+28h]  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_1044033  +
push 0  +
push 0Bh  +
jmp loc_104403C  +
xor eax eax +
inc eax  +
jmp loc_1044045  +
push 0  +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov cx [esi+72h] +
movzx eax word ptr [esi+70h] +
push edi  +
lea edi [esi+7BCh] +
lea edx [esi+3B7h] +
mov [edi+4] edx +
lea edx [esi+4B8h] +
inc cx  +
mov [edi+8] edx +
lea edx [esi+5B9h] +
movzx ecx cx +
mov [edi+0Ch] edx +
mov edx [esi+38h] +
and dword ptr [edi+24h] 0 +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
mov [edi+10h] edx +
mov [edi+1Eh] ax +
mov [edi+20h] cx +
or ebx 0FFFFFFFFh +
mov eax [esi+88h] +
and [ebp+arg_0] 0 +
cmp eax ebx +
jz loc_10440C4  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
test eax eax +
jnz loc_10440C4  +
mov [esi+88h] ebx +
mov eax [esi+84h] +
cmp eax ebx +
jz loc_10440DD  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
test eax eax +
jnz loc_10440DD  +
mov [esi+84h] ebx +
cmp [esi+88h] ebx +
jnz loc_1044194  +
cmp [esi+84h] ebx +
jnz loc_1044194  +
push edi  +
push 4  +
call dword ptr [esi+24h]  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_104418E  +
push [ebp+var_4]  +
lea eax [esi+3B7h] +
push [ebp+var_8]  +
push eax  +
push esi  +
call sub_1043B4E  +
test eax eax +
jz loc_1044128  +
push 0  +
push esi  +
call sub_1043F48  +
test eax eax +
jnz loc_1044136  +
mov eax [esi] +
cmp dword ptr [eax] 0Bh +
jz loc_10441AB  +
mov [ebp+arg_0] 1 +
cmp [ebp+arg_0] 0 +
mov eax [esi] +
mov eax [eax] +
mov [edi+24h] eax +
jnz loc_10440A7  +
inc word ptr [esi+0AEh]  +
movzx eax word ptr [esi+0AEh] +
test ax ax +
jz loc_1044183  +
mov edi 0FFFFh +
mov eax edi +
add [esi+0ACh] ax +
add [esi+0AEh] ax +
push esi  +
call sub_1043E37  +
test eax eax +
jz loc_10441AB  +
cmp word ptr [esi+0AEh] 0 +
jnz loc_104415F  +
xor eax eax +
inc eax  +
mov [esi+9Ch] eax +
jmp loc_10441AD  +
push 0  +
push 0Bh  +
jmp loc_10441A4  +
push 0  +
mov [esi+88h] ebx +
mov [esi+84h] ebx +
push 4  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+48h] +
movzx eax word ptr [eax+6] +
add [esi+30h] eax +
movzx eax word ptr [esi+0B0h] +
push edi  +
xor edi edi +
cmp ax di +
jbe loc_10441E3  +
dec eax  +
mov [esi+0B0h] ax +
push edi  +
push esi  +
call sub_1043517  +
test eax eax +
jnz loc_1044210  +
cmp [esi+0B0h] di +
jnz loc_1044201  +
push esi  +
call sub_1044051  +
test eax eax +
jnz loc_1044205  +
xor eax eax +
jmp loc_1044275  +
push edi  +
push esi  +
call sub_1043517  +
test eax eax +
jz loc_1044201  +
mov eax [esi+48h] +
cmp [eax+6] di +
jnz loc_1044241  +
push esi  +
call sub_1044051  +
test eax eax +
jz loc_1044201  +
mov eax [esi+48h] +
movzx eax word ptr [eax+4] +
push eax  +
push esi  +
call sub_1043517  +
test eax eax +
jz loc_1044201  +
mov eax 0FFFFh +
add [esi+0B0h] ax +
mov eax [esi+48h] +
movzx eax word ptr [eax+6] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_1043A49  +
test eax eax +
jz loc_1044201  +
mov eax [esi+48h] +
mov cx word ptr [ebp+arg_0] +
cmp cx [eax+6] +
jz loc_1044272  +
push edi  +
push 7  +
push dword ptr [esi]  +
call sub_103E6B6  +
jmp loc_1044201  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+9Ch] 0 +
jz loc_1044297  +
xor eax eax +
inc eax  +
jmp loc_10442DC  +
push esi  +
mov esi [ebp+arg_4] +
mov eax 0FFFEh +
mov ecx esi +
and ecx eax +
cmp ecx eax +
jnz loc_10442AD  +
movzx esi word ptr [edi+6Ah] +
dec esi  +
cmp [edi+90h] esi +
jz loc_10442D8  +
push edi  +
call sub_10439DF  +
test eax eax +
jz loc_10442E1  +
push esi  +
push edi  +
call sub_1043F48  +
test eax eax +
jz loc_10442E1  +
push edi  +
call sub_10441B9  +
test eax eax +
jz loc_10442E1  +
and dword ptr [edi+30h] 0 +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_10442DB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+74h] +
push edi  +
test eax eax +
jz loc_10443A6  +
mov ebx [esi+78h] +
mov [ebp+arg_0] eax +
cmp ebx [esi+30h] +
jnb loc_1044315  +
mov dword ptr [esi+90h] 0FFFFh +
movzx eax word ptr [esi+7Ch] +
push eax  +
push esi  +
call sub_1044280  +
jmp loc_1044328  +
push esi  +
call sub_10441B9  +
test eax eax +
jz loc_104438B  +
mov eax [esi+48h] +
movzx eax word ptr [eax+6] +
add eax [esi+30h] +
cmp ebx eax +
jnb loc_1044322  +
cmp [ebp+arg_0] 0 +
jz loc_10443A6  +
mov ecx [esi+48h] +
movzx edi word ptr [ecx+6] +
mov eax ebx +
sub eax [esi+30h] +
sub edi eax +
cmp edi [ebp+arg_0] +
jbe loc_1044356  +
mov edi [ebp+arg_0] +
mov ecx [esi+40h] +
push edi  +
add ecx eax +
push ecx  +
push dword ptr [esi+8Ch]  +
call dword ptr [esi+14h]  +
add esp 0Ch +
cmp edi eax +
jnz loc_1044380  +
add ebx edi +
sub [ebp+arg_0] edi +
jz loc_10443A6  +
push esi  +
call sub_10441B9  +
test eax eax +
jnz loc_1044340  +
jmp loc_104438B  +
push 0  +
push 8  +
push dword ptr [esi]  +
call sub_103E6B6  +
lea edi [esi+8Ch] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_1044424  +
push eax  +
call dword ptr [esi+18h]  +
or dword ptr [edi] 0FFFFFFFFh +
pop ecx  +
jmp loc_1044424  +
lea eax [esi+7BCh] +
lea ecx [esi+0B4h] +
mov [eax+4] ecx +
mov ecx [esi+8Ch] +
mov [eax+14h] ecx +
mov cx [esi+7Eh] +
mov [eax+18h] cx +
mov cx [esi+80h] +
mov [eax+1Ah] cx +
mov cx [esi+82h] +
mov [eax+1Ch] cx +
mov ecx [esi+38h] +
mov [eax+10h] ecx +
mov cx [esi+7Ch] +
and dword ptr [eax] 0 +
mov [eax+22h] cx +
movzx ecx word ptr [eax+1Ch] +
xor edi edi +
inc edi  +
test cl 40h +
jz loc_1044405  +
and ecx 0FFBFh +
mov [eax] edi +
mov [eax+1Ch] cx +
push eax  +
push 3  +
call dword ptr [esi+24h]  +
or dword ptr [esi+8Ch] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_1044428  +
push 0  +
push 0Bh  +
push dword ptr [esi]  +
call sub_103E6B6  +
xor eax eax +
jmp loc_1044433  +
test eax eax +
jnz loc_1044431  +
push eax  +
push 8  +
jmp loc_104441D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1044654  +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1044654  +
mov ecx [ebp+arg_18] +
push ebx  +
mov [esi+24h] eax +
mov eax [ebp+arg_14] +
push edi  +
push [ebp+arg_8]  +
mov [esi+28h] eax +
xor eax eax +
mov [esi+0AEh] ax +
mov ebx 101h +
lea eax [esi+5B9h] +
push ebx  +
push eax  +
lea edi [esi+7BCh] +
mov [esi+38h] ecx +
call sub_103D3F1  +
push 0FFFFh  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_1043B4E  +
test eax eax +
jz loc_1044622  +
push [ebp+arg_8]  +
and dword ptr [esi+9Ch] 0 +
and dword ptr [esi+30h] 0 +
push ebx  +
lea eax [esi+5B9h] +
push eax  +
mov dword ptr [esi+90h] 0FFFFh +
call sub_103D3F1  +
push esi  +
call sub_10436E5  +
test eax eax +
jz loc_1044622  +
xor ebx ebx +
jmp loc_1044602  +
mov eax 0FFFFh +
add [esi+0ACh] ax +
push esi  +
call sub_1043E37  +
test eax eax +
jz loc_1044622  +
lea eax [esi+0B4h] +
mov [edi+4] eax +
mov eax [esi+74h] +
mov [edi] eax +
lea eax [esi+1B5h] +
mov [edi+8] eax +
lea eax [esi+2B6h] +
mov [edi+0Ch] eax +
mov ax [esi+7Eh] +
mov [edi+18h] ax +
mov ax [esi+80h] +
mov [edi+1Ah] ax +
mov ax [esi+82h] +
mov [edi+1Ch] ax +
mov eax [esi+38h] +
mov [edi+10h] eax +
mov ax [esi+7Ch] +
mov [edi+22h] ax +
mov cx [esi+7Ch] +
mov eax 0FFFDh +
mov edx eax +
and cx dx +
cmp cx ax +
jnz loc_10445A7  +
push edi  +
cmp [esi+9Ch] ebx +
jz loc_104458F  +
push 2  +
call [ebp+arg_10]  +
pop ecx  +
mov [esi+8Ch] eax +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_104459B  +
cmp eax ebx +
jz loc_10445C6  +
push esi  +
call sub_10442EA  +
test eax eax +
jz loc_1044622  +
jmp loc_10445EB  +
push 1  +
call [ebp+arg_10]  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_10445EB  +
push ebx  +
push 0Bh  +
push dword ptr [esi]  +
call sub_103E6B6  +
jmp loc_1044622  +
cmp [esi+9Ch] ebx +
jnz loc_10445E2  +
movzx eax word ptr [edi+22h] +
cmp ax [esi+6Ah] +
jb loc_10445C3  +
mov ecx 0FFFCh +
cmp ax cx +
jb loc_10445EB  +
push edi  +
jmp loc_1044569  +
mov cx [esi+7Ch] +
mov eax 0FFFEh +
mov edx eax +
and cx dx +
cmp cx ax +
jnz loc_10445EB  +
inc word ptr [esi+0AEh]  +
jmp loc_10445EB  +
xor eax eax +
mov [esi+0ACh] ax +
cmp [esi+0ACh] bx +
jnz loc_10444E7  +
push esi  +
call sub_10436E5  +
test eax eax +
jz loc_1044622  +
cmp [esi+0ACh] bx +
jnz loc_10444E7  +
mov eax 0FFFFh +
add [esi+0ACh] ax +
mov [ebp+var_4] 1 +
mov eax [esi+88h] +
or ebx 0FFFFFFFFh +
cmp eax ebx +
jz loc_1044634  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
lea edi [esi+84h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1044645  +
push eax  +
call dword ptr [esi+18h]  +
pop ecx  +
mov eax [ebp+var_4] +
mov [edi] ebx +
pop edi  +
mov [esi+88h] ebx +
pop ebx  +
jmp loc_1044656  +
xor eax eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov ecx 8000h +
test eax eax +
jz loc_1044677  +
cmp eax ecx +
jbe loc_1044679  +
mov [edi] ecx +
mov eax [edi] +
mov ebx [ebp+arg_10] +
mov ecx [ebp+arg_C] +
add eax 0Ch +
mov [ecx] eax +
test ebx ebx +
jnz loc_104468E  +
xor eax eax +
jmp loc_10446CD  +
and dword ptr [ebx] 0 +
push esi  +
push 10h  +
call [ebp+arg_4]  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10446B2  +
push [ebp+arg_4]  +
call sub_10459BD  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_10446B7  +
push esi  +
call [ebp+arg_8]  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_10446CC  +
mov eax [ebp+arg_8] +
mov [esi+4] eax +
mov eax [edi] +
mov [esi+8] eax +
mov dword ptr [esi] 4349444Dh +
mov [ebx] esi +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349444Dh +
jz loc_10446EB  +
push 2  +
jmp loc_1044721  +
mov eax [esi+8] +
lea ecx [eax+0Ch] +
cmp [ebp+arg_8] ecx +
jbe loc_10446FA  +
push 3  +
jmp loc_1044721  +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+0Ch]  +
call sub_10458CB  +
test eax eax +
jnz loc_104471F  +
push [ebp+arg_10]  +
push dword ptr [esi+0Ch]  +
call sub_1045922  +
test eax eax +
jz loc_1044722  +
push 4  +
pop eax  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
sub eax 4349444Dh +
neg eax  +
sbb eax eax +
and eax 2 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349444Dh +
jz loc_104475D  +
push 2  +
pop eax  +
jmp loc_1044772  +
push dword ptr [esi+4]  +
and dword ptr [esi] 0 +
push dword ptr [esi+0Ch]  +
call sub_103EBC5  +
push esi  +
call dword ptr [esi+4]  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax [ebx] +
cmp eax 0Ah +
push esi  +
push edi  +
jl loc_1044810  +
cmp eax 15h +
jg loc_1044810  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov ecx 8000h +
test eax eax +
jz loc_10447A7  +
cmp eax ecx +
jbe loc_10447A9  +
mov [edi] ecx +
mov eax [edi] +
mov ecx [ebp+arg_10] +
add eax 2800h +
mov [ecx] eax +
mov eax [ebp+arg_14] +
test eax eax +
jnz loc_10447C0  +
xor eax eax +
jmp loc_1044813  +
and dword ptr [eax] 0 +
push 1400h  +
call [ebp+arg_8]  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_10447D7  +
xor eax eax +
inc eax  +
jmp loc_1044813  +
mov eax [ebp+arg_8] +
mov [esi+4] eax +
mov eax [ebp+arg_C] +
mov [esi+8] eax +
mov eax [edi] +
mov [esi+0Ch] eax +
mov eax [ebx+4] +
mov [esi+10h] eax +
mov dword ptr [esi] 43494451h +
movzx eax byte ptr [ebx] +
push eax  +
push esi  +
call sub_1045A05  +
test eax eax +
jz loc_1044809  +
push esi  +
call [ebp+arg_C]  +
pop ecx  +
jmp loc_10447D2  +
mov eax [ebp+arg_14] +
mov [eax] esi +
jmp loc_10447BC  +
push 5  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 43494451h +
jz loc_1044832  +
push 2  +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
mov eax [eax] +
cmp eax [ecx+0Ch] +
jbe loc_1044840  +
push 3  +
jmp loc_104482F  +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
call sub_1045B6E  +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 4 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 43494451h +
jz loc_1044876  +
push 2  +
pop eax  +
pop ebp  +
retn   +
push eax  +
call sub_1045C0B  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 43494451h +
jz loc_104489B  +
push 2  +
pop eax  +
jmp loc_10448AB  +
push esi  +
call sub_1045BEB  +
and dword ptr [esi] 0 +
push esi  +
call dword ptr [esi+8]  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
test eax eax +
jz loc_10449A4  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_10449A4  +
mov ecx [ebp+arg_10] +
test ecx ecx +
jz loc_10449A4  +
mov eax [eax] +
add eax 1804h +
cmp eax 1804h +
jnb loc_10448F2  +
push 3  +
jmp loc_10449A6  +
mov [ecx] eax +
mov eax [ebp+arg_14] +
test eax eax +
jnz loc_1044902  +
xor eax eax +
jmp loc_10449A7  +
mov ebx [ebp+arg_8] +
and dword ptr [eax] 0 +
push 2Ch  +
call ebx  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_1044919  +
inc eax  +
jmp loc_10449A7  +
push 2EFCh  +
call ebx  +
pop ecx  +
mov [ebp+var_4] eax +
mov [esi+28h] eax +
test eax eax +
jnz loc_1044937  +
xor edi edi +
inc edi  +
push esi  +
call [ebp+arg_C]  +
pop ecx  +
mov eax edi +
jmp loc_10449A7  +
push [ebp+arg_28]  +
mov eax [ebp+arg_C] +
push [ebp+arg_24]  +
mov edx [ebp+arg_1C] +
push [ebp+arg_20]  +
mov ecx [ebp+arg_18] +
mov [esi+8] eax +
mov eax [ebp+arg_20] +
mov [esi+14h] eax +
mov eax [ebp+arg_24] +
mov [esi+18h] eax +
mov eax [ebp+arg_28] +
push edx  +
mov [esi+1Ch] eax +
mov eax [ebp+arg_0] +
push ecx  +
push [ebp+arg_C]  +
mov [esi+4] ebx +
mov [esi+0Ch] ecx +
mov [esi+10h] edx +
mov eax [eax] +
mov [esi+20h] eax +
mov eax [edi+4] +
push ebx  +
mov [esi+24h] eax +
mov dword ptr [esi] 4349444Ch +
push dword ptr [edi]  +
push [ebp+var_4]  +
call sub_1045CF5  +
mov edi eax +
test edi edi +
jz loc_104499A  +
push dword ptr [esi+28h]  +
call [ebp+arg_C]  +
pop ecx  +
jmp loc_104492E  +
mov eax [ebp+arg_14] +
mov [eax] esi +
jmp loc_10448FB  +
push 2  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
cmp dword ptr [eax] 4349444Ch +
jz loc_10449CB  +
push 2  +
pop eax  +
leave   +
retn   +
mov edx [eax+20h] +
push esi  +
mov esi [ebp+arg_10] +
mov ecx [esi] +
cmp ecx edx +
jbe loc_10449DC  +
push 3  +
jmp loc_10449E9  +
add edx 1800h +
cmp [ebp+arg_8] edx +
jbe loc_10449EC  +
push 4  +
pop eax  +
jmp loc_1044A0F  +
lea edx [ebp+var_4] +
push edx  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
push dword ptr [eax+28h]  +
call sub_1045C85  +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
mov [esi] ecx +
and eax 4 +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 4349444Ch +
jz loc_1044A2C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
push dword ptr [eax+28h]  +
call sub_1045C59  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 4349444Ch +
jz loc_1044A53  +
push 2  +
pop eax  +
jmp loc_1044A6C  +
push dword ptr [esi+28h]  +
call sub_1045C49  +
push dword ptr [esi+28h]  +
and dword ptr [esi] 0 +
call dword ptr [esi+8]  +
push esi  +
call dword ptr [esi+8]  +
pop ecx  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi 120h +
mov esi eax +
mov [ebp+var_3C] ebx +
cmp [ebp+arg_4] edi +
jbe loc_1044A9B  +
push 2  +
pop eax  +
jmp loc_1044DFB  +
push 44h  +
lea eax [ebp+var_88] +
push ebx  +
push eax  +
call memset  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
add esp 0Ch +
mov eax [ecx] +
lea eax [ebp+eax*4+var_88] +
inc dword ptr [eax]  +
add ecx 4 +
dec edx  +
jnz loc_1044AB3  +
mov eax [ebp+arg_4] +
cmp [ebp+var_88] eax +
jnz loc_1044AD8  +
mov [esi] ebx +
xor eax eax +
jmp loc_1044DFB  +
mov eax [esi] +
xor ecx ecx +
mov [ebp+var_4] eax +
inc ecx  +
cmp [ebp+ecx*4+var_88] ebx +
jnz loc_1044AEF  +
inc ecx  +
cmp ecx 10h +
jbe loc_1044AE0  +
mov [ebp+var_8] ecx +
cmp eax ecx +
jnb loc_1044AF9  +
mov [ebp+var_4] ecx +
push 10h  +
pop eax  +
cmp [ebp+eax*4+var_88] ebx +
jnz loc_1044B08  +
dec eax  +
jnz loc_1044AFC  +
mov [ebp+var_20] eax +
cmp [ebp+var_4] eax +
jbe loc_1044B13  +
mov [ebp+var_4] eax +
mov edx [ebp+var_4] +
mov [esi] edx +
xor esi esi +
inc esi  +
shl esi cl +
jmp loc_1044B2F  +
sub esi [ebp+ecx*4+var_88] +
js loc_1044A93  +
inc ecx  +
add esi esi +
cmp ecx eax +
jb loc_1044B1F  +
lea ecx [ebp+eax*4+var_88] +
mov edx [ecx] +
sub esi edx +
mov [ebp+var_44] esi +
js loc_1044A93  +
add edx esi +
mov [ecx] edx +
xor ecx ecx +
dec eax  +
mov [ebp+var_C8] ebx +
jz loc_1044B6C  +
xor edx edx +
add ecx [ebp+edx+var_84] +
add edx 4 +
dec eax  +
mov [ebp+edx+var_C8] ecx +
jnz loc_1044B58  +
mov edx [ebp+arg_0] +
xor esi esi +
mov eax [edx] +
add edx 4 +
cmp eax ebx +
jz loc_1044B9E  +
cmp eax 10h +
ja loc_1044A93  +
lea ecx [ebp+eax*4+var_CC] +
mov eax [ecx] +
cmp eax edi +
jnb loc_1044A93  +
mov [ebp+eax*4+var_58C] esi +
inc eax  +
mov [ecx] eax +
inc esi  +
cmp esi [ebp+arg_4] +
jb loc_1044B71  +
mov ebx [ebp+var_4] +
or [ebp+arg_0] 0FFFFFFFFh +
lea ecx [ebp+var_58C] +
xor eax eax +
mov [ebp+var_24] ecx +
mov ecx [ebp+var_8] +
xor edi edi +
neg ebx  +
cmp ecx [ebp+var_20] +
mov [ebp+var_18] eax +
mov [ebp+var_CC] eax +
mov [ebp+var_10C] eax +
mov [ebp+var_40] edi +
mov [ebp+var_38] eax +
jg loc_1044DED  +
lea eax [ecx-1] +
mov [ebp+var_2C] eax +
lea eax [ebp+ecx*4+var_88] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov [ebp+var_14] eax +
test eax eax +
jz loc_1044DD5  +
inc eax  +
mov [ebp+var_34] eax +
mov eax [ebp+var_4] +
dec [ebp+var_14]  +
dec [ebp+var_34]  +
add eax ebx +
cmp [ebp+var_8] eax +
jle loc_1044CE4  +
mov [ebp+var_28] eax +
mov eax ebx +
sub eax [ebp+var_4] +
mov [ebp+var_30] eax +
inc [ebp+arg_0]  +
cmp [ebp+arg_0] 10h +
jge loc_1044A93  +
mov eax [ebp+var_4] +
movzx edx word ptr [ebp+var_20] +
add [ebp+var_30] eax +
add [ebp+var_28] eax +
add ebx eax +
sub edx ebx +
cmp edx eax +
jbe loc_1044C43  +
movzx edx ax +
mov ecx [ebp+var_8] +
xor eax eax +
sub ecx ebx +
inc eax  +
shl eax cl +
cmp eax [ebp+var_34] +
jbe loc_1044C71  +
mov edi [ebp+var_1C] +
or esi 0FFFFFFFFh +
sub esi [ebp+var_14] +
add eax esi +
jmp loc_1044C6C  +
add edi 4 +
mov esi [edi] +
add eax eax +
cmp eax esi +
jbe loc_1044C71  +
sub eax esi +
inc ecx  +
cmp ecx edx +
jb loc_1044C5F  +
mov edx [ebp+var_3C] +
mov esi [ebp+arg_1C] +
xor eax eax +
inc eax  +
shl eax cl +
lea edi [esi+edx*8] +
mov [ebp+var_40] edi +
add edx eax +
mov [ebp+var_38] eax +
mov [ebp+var_3C] edx +
cmp edx [ebp+arg_20] +
ja loc_1044E02  +
mov eax [ebp+arg_0] +
mov esi eax +
shl esi 2 +
lea edx [ebp+esi+var_10C] +
mov [edx] edi +
test eax eax +
jz loc_1044CD8  +
mov eax [ebp+var_18] +
mov [ebp+esi+var_CC] eax +
mov al byte ptr [ebp+var_4] +
add cl 10h +
mov byte ptr [ebp+var_10+1] al +
mov eax [ebp+var_18] +
mov byte ptr [ebp+var_10] cl +
mov ecx [ebp+var_30] +
shr eax cl +
mov ecx [edx-4] +
mov edx [ebp+var_10] +
mov esi edi +
mov [ecx+eax*8] edx +
mov [ebp+var_C] esi +
mov [ecx+eax*8+4] esi +
mov eax [ebp+var_28] +
cmp [ebp+var_8] eax +
jg loc_1044C1E  +
mov al byte ptr [ebp+var_8] +
mov ecx [ebp+var_24] +
sub al bl +
mov byte ptr [ebp+var_10+1] al +
mov eax [ebp+arg_4] +
lea eax [ebp+eax*4+var_58C] +
cmp ecx eax +
jnb loc_1044D51  +
mov eax [ecx] +
mov edx [ebp+arg_8] +
cmp eax edx +
jnb loc_1044D22  +
cmp eax 100h +
setb al  +
add al 0Fh +
mov byte ptr [ebp+var_10] al +
mov ax [ecx] +
add ecx 4 +
mov word ptr [ebp+var_C] ax +
mov [ebp+var_24] ecx +
jmp loc_1044D55  +
mov ecx [ebp+arg_18] +
cmp [ebp+arg_10] ecx +
jnb loc_1044D2D  +
mov ecx [ebp+arg_10] +
add ecx edx +
cmp eax ecx +
jnb loc_1044D51  +
mov ecx [ebp+arg_14] +
sub eax edx +
add eax eax +
mov cl [eax+ecx] +
add [ebp+var_24] 4 +
mov byte ptr [ebp+var_10] cl +
mov ecx [ebp+arg_C] +
mov ax [eax+ecx] +
mov word ptr [ebp+var_C] ax +
jmp loc_1044D55  +
mov byte ptr [ebp+var_10] 63h +
mov ecx [ebp+var_8] +
mov esi [ebp+var_18] +
xor edx edx +
sub ecx ebx +
inc edx  +
shl edx cl +
mov eax esi +
mov ecx ebx +
shr eax cl +
cmp eax [ebp+var_38] +
jnb loc_1044D8F  +
mov esi edx +
shl esi 3 +
lea ecx [edi+eax*8] +
mov edi [ebp+var_10] +
mov [ecx] edi +
mov edi [ebp+var_C] +
mov [ecx+4] edi +
add eax edx +
add ecx esi +
cmp eax [ebp+var_38] +
jb loc_1044D75  +
mov edi [ebp+var_40] +
mov esi [ebp+var_18] +
mov ecx [ebp+var_2C] +
xor eax eax +
inc eax  +
shl eax cl +
jmp loc_1044D9D  +
xor esi eax +
shr eax 1 +
test eax esi +
jnz loc_1044D99  +
xor esi eax +
mov eax [ebp+arg_0] +
mov [ebp+var_18] esi +
jmp loc_1044DB8  +
dec eax  +
mov [ebp+arg_0] eax +
js loc_1044A93  +
sub ebx [ebp+var_4] +
xor edx edx +
inc edx  +
mov ecx ebx +
shl edx cl +
dec edx  +
and edx esi +
cmp edx [ebp+eax*4+var_CC] +
jnz loc_1044DAB  +
cmp [ebp+var_14] 0 +
jnz loc_1044BFF  +
inc [ebp+var_8]  +
add [ebp+var_1C] 4 +
mov eax [ebp+var_8] +
inc [ebp+var_2C]  +
cmp eax [ebp+var_20] +
jle loc_1044BEB  +
xor eax eax +
cmp [ebp+var_44] eax +
jz loc_1044DFB  +
cmp [ebp+var_20] 1 +
jz loc_1044DFB  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
push 3  +
jmp loc_1044A95  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 14h +
test eax eax +
jg loc_1044E25  +
xor eax eax +
inc eax  +
jmp locret_10451A7  +
cmp [ebp+arg_10] 0 +
movzx eax ds:word_100A2F4[eax*2] +
mov ecx [edx+24h] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
movzx eax ds:word_100A2F4[eax*2] +
push ebx  +
mov ebx [edx+28h] +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
mov [ebp+var_8] ebx +
mov [ebp+var_10] eax +
jz loc_1044E66  +
cmp word ptr [edx+48h] 0 +
jz loc_1044E66  +
mov ecx [edx+4Ch] +
mov eax [edx+50h] +
jmp loc_1045131  +
cmp ebx [ebp+arg_8] +
jnb loc_1044E9F  +
mov esi [edx+14h] +
mov ecx [edx+18h] +
cmp ecx esi +
jnb loc_1044E82  +
mov eax [edx+8] +
movzx eax byte ptr [eax+ecx] +
inc ecx  +
mov [edx+18h] ecx +
jmp loc_1044E8D  +
jz loc_1044E8B  +
mov dword ptr [edx+4] 1 +
xor eax eax +
movzx eax al +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or [ebp+var_4] eax +
cmp ebx [ebp+arg_8] +
jb loc_1044E6E  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_0] +
jmp loc_1044F14  +
cmp edi 63h +
jz loc_1045165  +
movzx ecx byte ptr [esi+1] +
movzx eax byte ptr [esi+1] +
shr [ebp+var_4] cl +
sub ebx eax +
sub edi 10h +
jmp loc_1044EFB  +
mov ecx [edx+18h] +
mov eax [edx+14h] +
cmp ecx eax +
jnb loc_1044EE3  +
mov eax [edx+8] +
movzx eax byte ptr [eax+ecx] +
inc ecx  +
mov [edx+18h] ecx +
jmp loc_1044EEE  +
jz loc_1044EEC  +
mov dword ptr [edx+4] 1 +
xor eax eax +
movzx eax al +
mov ecx ebx +
shl eax cl +
or [ebp+var_4] eax +
add ebx 8 +
cmp ebx edi +
jb loc_1044ECC  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
movzx eax ds:word_100A2F4[edi*2] +
mov ecx [esi+4] +
and eax [ebp+var_4] +
lea esi [ecx+eax*8] +
movzx edi byte ptr [esi] +
cmp edi 10h +
ja loc_1044EB1  +
movzx ecx byte ptr [esi+1] +
movzx eax byte ptr [esi+1] +
shr [ebp+var_4] cl +
sub ebx eax +
cmp edi 10h +
jnz loc_1044F6B  +
mov cl [esi+4] +
mov eax [edx+0Ch] +
mov [eax] cl +
inc dword ptr [edx+0Ch]  +
dec dword ptr [edx+1Ch]  +
jnz loc_1044E66  +
xor eax eax +
mov [edx+48h] ax +
mov eax [ebp+arg_0] +
mov [edx+38h] eax +
mov eax [ebp+arg_4] +
mov [edx+3Ch] eax +
mov eax [ebp+arg_8] +
mov [edx+40h] eax +
mov eax [ebp+arg_C] +
mov [edx+44h] eax +
jmp loc_1045192  +
cmp edi 0Fh +
jz loc_1045199  +
jmp loc_1044FA5  +
mov ecx [edx+18h] +
mov eax [edx+14h] +
cmp ecx eax +
jnb loc_1044F8D  +
mov eax [edx+8] +
movzx eax byte ptr [eax+ecx] +
inc ecx  +
mov [edx+18h] ecx +
jmp loc_1044F98  +
jz loc_1044F96  +
mov dword ptr [edx+4] 1 +
xor eax eax +
movzx eax al +
mov ecx ebx +
shl eax cl +
or [ebp+var_4] eax +
add ebx 8 +
cmp ebx edi +
jb loc_1044F76  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
movzx eax ds:word_100A2F4[edi*2] +
and eax [ebp+var_4] +
movzx ecx word ptr [esi+4] +
add eax ecx +
mov ecx edi +
shr [ebp+var_4] cl +
sub ebx edi +
cmp [ebp+arg_C] 0 +
mov [ebp+var_14] eax +
mov [ebp+var_8] ebx +
jle loc_1045165  +
cmp ebx [ebp+arg_C] +
jnb loc_1045020  +
mov esi [edx+14h] +
mov ecx [edx+18h] +
cmp ecx esi +
jnb loc_1044FFD  +
mov edi [edx+8] +
movzx edi byte ptr [edi+ecx] +
mov ebx [ebp+var_8] +
inc ecx  +
mov dword ptr [ebp+arg_10] edi +
mov [edx+18h] ecx +
jmp loc_104500A  +
jz loc_1045006  +
mov dword ptr [edx+4] 1 +
and dword ptr [ebp+arg_10] 0 +
movzx edi byte ptr [ebp+arg_10] +
mov ecx ebx +
shl edi cl +
add ebx 8 +
mov [ebp+var_8] ebx +
or [ebp+var_4] edi +
cmp ebx [ebp+arg_C] +
jb loc_1044FE3  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
mov ecx [ebp+var_10] +
and ecx [ebp+var_4] +
mov esi [ebp+arg_4] +
lea ebx [esi+ecx*8] +
movzx edi byte ptr [ebx] +
cmp edi 10h +
jbe loc_10450B5  +
cmp edi 63h +
jz loc_1045165  +
movzx ecx byte ptr [ebx+1] +
sub [ebp+var_8] ecx +
shr [ebp+var_4] cl +
sub edi 10h +
cmp [ebp+var_8] edi +
jnb loc_104508F  +
mov eax [edx+14h] +
mov esi [edx+18h] +
cmp esi eax +
jnb loc_1045070  +
mov ecx [edx+8] +
movzx ecx byte ptr [ecx+esi] +
inc esi  +
mov [edx+18h] esi +
jmp loc_104507B  +
jz loc_1045079  +
mov dword ptr [edx+4] 1 +
xor ecx ecx +
movzx esi cl +
mov ecx [ebp+var_8] +
add [ebp+var_8] 8 +
shl esi cl +
or [ebp+var_4] esi +
cmp [ebp+var_8] edi +
jb loc_104505C  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
movzx eax ds:word_100A2F4[edi*2] +
and eax [ebp+var_4] +
mov ecx [ebx+4] +
lea ebx [ecx+eax*8] +
movzx edi byte ptr [ebx] +
cmp edi 10h +
ja loc_104503E  +
mov eax [ebp+var_14] +
movzx ecx byte ptr [ebx+1] +
shr [ebp+var_4] cl +
movzx ecx byte ptr [ebx+1] +
sub [ebp+var_8] ecx +
jmp loc_10450F6  +
mov esi [edx+18h] +
mov ecx [edx+14h] +
cmp esi ecx +
jnb loc_10450DC  +
mov ecx [edx+8] +
movzx ecx byte ptr [ecx+esi] +
inc esi  +
mov [edx+18h] esi +
jmp loc_10450E7  +
jz loc_10450E5  +
mov dword ptr [edx+4] 1 +
xor ecx ecx +
movzx esi cl +
mov ecx [ebp+var_8] +
shl esi cl +
or [ebp+var_4] esi +
add [ebp+var_8] 8 +
cmp [ebp+var_8] edi +
jb loc_10450C5  +
cmp dword ptr [edx+4] 0 +
jnz loc_1045165  +
movzx esi ds:word_100A2F4[edi*2] +
movzx ecx word ptr [ebx+4] +
and esi [ebp+var_4] +
sub [ebp+var_8] edi +
mov ebx [ebp+var_8] +
add esi ecx +
mov ecx edi +
shr [ebp+var_4] cl +
mov ecx [edx+0Ch] +
mov edi ecx +
sub edi [edx+10h] +
sub ecx esi +
cmp esi edi +
jbe loc_1045131  +
add ecx 8000h +
test eax eax +
jz loc_1044E66  +
mov esi [edx+0Ch] +
mov bl [ecx] +
dec eax  +
mov [esi] bl +
inc dword ptr [edx+0Ch]  +
mov esi [edx+10h] +
inc ecx  +
lea edi [esi+8000h] +
cmp ecx edi +
jnz loc_1045154  +
mov ecx esi +
dec dword ptr [edx+1Ch]  +
jz loc_104516A  +
test eax eax +
jnz loc_1045139  +
mov ebx [ebp+var_8] +
jmp loc_1044E66  +
xor eax eax +
inc eax  +
jmp loc_10451A4  +
mov ebx [ebp+var_8] +
xor esi esi +
inc esi  +
mov [edx+48h] si +
mov esi [ebp+arg_0] +
mov [edx+38h] esi +
mov esi [ebp+arg_4] +
mov [edx+3Ch] esi +
mov esi [ebp+arg_8] +
mov [edx+40h] esi +
mov esi [ebp+arg_C] +
mov [edx+44h] esi +
mov [edx+4Ch] ecx +
mov [edx+50h] eax +
mov dword ptr [edx+2Ch] 2 +
mov eax [ebp+var_4] +
mov [edx+24h] eax +
mov [edx+28h] ebx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 510h +
push ebx  +
mov ebx [esi+28h] +
push edi  +
mov edi [esi+24h] +
push 5  +
pop edx  +
jmp loc_10451F6  +
mov eax [esi+18h] +
mov ecx [esi+14h] +
cmp eax ecx +
jnb loc_10451DF  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_10451EA  +
jz loc_10451E8  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
or edi eax +
add ebx 8 +
cmp ebx edx +
jb loc_10451C8  +
mov eax edi +
and eax 1Fh +
add eax 101h +
sub ebx edx +
shr edi 5 +
mov [ebp+var_14] eax +
cmp ebx edx +
jnb loc_1045243  +
mov edx [esi+14h] +
mov eax [esi+18h] +
cmp eax edx +
jnb loc_1045227  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_1045232  +
jz loc_1045230  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or edi eax +
cmp ebx 5 +
jb loc_1045213  +
mov edx edi +
and edx 1Fh +
inc edx  +
shr edi 5 +
mov [ebp+var_1C] edx +
sub ebx 5 +
jmp loc_1045282  +
mov eax [esi+18h] +
mov ecx [esi+14h] +
cmp eax ecx +
jnb loc_104526B  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_1045276  +
jz loc_1045274  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
or edi eax +
add ebx 8 +
cmp ebx 4 +
jb loc_1045254  +
mov eax edi +
and eax 0Fh +
shr edi 4 +
add eax 4 +
sub ebx 4 +
cmp dword ptr [esi+4] 0 +
mov [ebp+var_4] edi +
jnz loc_104560D  +
cmp [ebp+var_14] 11Eh +
ja loc_104560D  +
cmp edx 1Eh +
ja loc_104560D  +
xor edx edx +
test eax eax +
ja loc_1045390  +
mov eax ds:dword_100A1B0[edx*4] +
and [ebp+eax*4+var_510] 0 +
inc edx  +
cmp edx 13h +
jb loc_10452C2  +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
push 384h  +
lea eax [esi+54h] +
push eax  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
push 13h  +
push 13h  +
lea eax [ebp+var_510] +
push eax  +
lea eax [ebp+var_10] +
mov [ebp+var_10] 7 +
call sub_1044A74  +
cmp eax edi +
jnz loc_1045610  +
mov ecx [ebp+var_10] +
cmp ecx edi +
jle loc_104560D  +
mov eax [ebp+var_1C] +
mov edx [ebp+var_14] +
movzx ecx ds:word_100A2F4[ecx*2] +
add eax edx +
mov [ebp+var_C] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_18] edi +
mov [ebp+var_8] edi +
cmp eax edi +
jbe loc_1045573  +
cmp ebx [ebp+var_10] +
jnb loc_10453DB  +
mov edx [esi+14h] +
mov eax [esi+18h] +
cmp eax edx +
jnb loc_10453BA  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_10453C5  +
mov edi [esi+18h] +
mov ecx [esi+14h] +
cmp edi ecx +
jnb loc_1045378  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+edi] +
inc edi  +
mov [esi+18h] edi +
jmp loc_1045383  +
jz loc_1045381  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx edi cl +
mov ecx ebx +
shl edi cl +
or [ebp+var_4] edi +
add ebx 8 +
cmp ebx 3 +
jb loc_1045361  +
mov ecx [ebp+var_4] +
mov edi ds:dword_100A1B0[edx*4] +
shr [ebp+var_4] 3 +
and ecx 7 +
sub ebx 3 +
inc edx  +
mov [ebp+edi*4+var_510] ecx +
cmp edx eax +
jb loc_1045390  +
jmp loc_10452D2  +
jz loc_10453C3  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or [ebp+var_4] eax +
cmp ebx [ebp+var_10] +
jb loc_104534D  +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
mov eax [ebp+var_20] +
and eax [ebp+var_4] +
lea edx [esi+eax*8+54h] +
movzx ecx byte ptr [edx+1] +
shr [ebp+var_4] cl +
sub ebx ecx +
movzx ecx word ptr [edx+4] +
cmp ecx 10h +
jnb loc_1045411  +
mov eax [ebp+var_8] +
mov [ebp+eax*4+var_510] ecx +
mov [ebp+var_18] ecx +
inc eax  +
jmp loc_104548A  +
jnz loc_1045492  +
cmp ebx 2 +
jnb loc_104544C  +
mov edx [esi+14h] +
mov eax [esi+18h] +
cmp eax edx +
jnb loc_104542F  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_104543A  +
jz loc_1045438  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or [ebp+var_4] eax +
cmp ebx 2 +
jb loc_104541B  +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
mov ecx [ebp+var_4] +
shr [ebp+var_4] 2 +
mov eax [ebp+var_8] +
and ecx 3 +
add ecx 3 +
dec ebx  +
lea edx [eax+ecx] +
dec ebx  +
cmp edx [ebp+var_C] +
ja loc_104556C  +
test ecx ecx +
jz loc_1045561  +
lea edi [ebp+eax*4+var_510] +
mov eax [ebp+var_18] +
stos   +
mov eax edx +
mov [ebp+var_8] eax +
jmp loc_1045561  +
cmp ecx 11h +
jnz loc_10454EB  +
push 3  +
pop edi  +
cmp ebx edi +
jnb loc_10454D1  +
mov edx [esi+14h] +
mov eax [esi+18h] +
cmp eax edx +
jnb loc_10454B5  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_10454C0  +
jz loc_10454BE  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or [ebp+var_4] eax +
cmp ebx edi +
jb loc_10454A1  +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
mov ecx [ebp+var_4] +
shr [ebp+var_4] 3 +
and ecx 7 +
add ecx edi +
sub ebx edi +
jmp loc_104553E  +
cmp ebx 7 +
jnb loc_1045524  +
mov edx [esi+14h] +
mov eax [esi+18h] +
cmp eax edx +
jnb loc_1045507  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+eax] +
inc eax  +
mov [esi+18h] eax +
jmp loc_1045512  +
jz loc_1045510  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx eax cl +
mov ecx ebx +
shl eax cl +
add ebx 8 +
or [ebp+var_4] eax +
cmp ebx 7 +
jb loc_10454F3  +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
mov ecx [ebp+var_4] +
shr [ebp+var_4] 7 +
and ecx 7Fh +
add ecx 0Bh +
sub ebx 7 +
mov eax [ebp+var_8] +
lea edx [eax+ecx] +
cmp edx [ebp+var_C] +
ja loc_104556C  +
test ecx ecx +
jz loc_104555D  +
lea edi [ebp+eax*4+var_510] +
xor eax eax +
stos   +
mov eax edx +
mov [ebp+var_8] eax +
and [ebp+var_18] 0 +
cmp eax [ebp+var_C] +
jb loc_1045341  +
jmp loc_1045573  +
mov dword ptr [esi+4] 2 +
cmp dword ptr [esi+4] 0 +
jnz loc_104560D  +
mov eax [ebp+var_4] +
push 384h  +
lea edi [esi+54h] +
push edi  +
push 1Fh  +
push offset dword_100A23C  +
push 1Fh  +
push offset dword_100A1FC  +
push 101h  +
push [ebp+var_14]  +
mov [esi+24h] eax +
lea eax [ebp+var_510] +
push eax  +
lea eax [ebp+var_10] +
mov [esi+28h] ebx +
mov [ebp+var_10] 9 +
call sub_1044A74  +
test eax eax +
jnz loc_1045610  +
push 0C8h  +
lea ebx [esi+1C74h] +
push ebx  +
push 1Eh  +
push offset dword_100A2B8  +
push 1Eh  +
push offset dword_100A27C  +
push eax  +
push [ebp+var_1C]  +
mov eax [ebp+var_14] +
lea eax [ebp+eax*4+var_510] +
push eax  +
lea eax [ebp+var_C] +
mov [ebp+var_C] 6 +
call sub_1044A74  +
test eax eax +
jnz loc_1045610  +
push eax  +
push [ebp+var_C]  +
mov edx esi +
push [ebp+var_10]  +
push ebx  +
push edi  +
call sub_1044E0E  +
jmp loc_1045610  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 484h +
push edi  +
push 8  +
pop eax  +
push 70h  +
mov ecx 90h +
lea edi [ebp+var_484] +
stos   +
pop ecx  +
push 9  +
pop edx  +
push 18h  +
mov eax edx +
lea edi [ebp+var_244] +
stos   +
pop ecx  +
push 7  +
pop eax  +
push 8  +
lea edi [ebp+var_84] +
stos   +
pop ecx  +
push ecx  +
pop eax  +
push 208h  +
push offset unk_104E640  +
push 1Fh  +
push offset dword_100A23C  +
push 1Fh  +
push offset dword_100A1FC  +
push 101h  +
lea edi [ebp+var_24] +
stos   +
push 120h  +
lea eax [ebp+var_484] +
push eax  +
lea eax [ebp+var_4] +
mov [ebp+var_4] edx +
call sub_1044A74  +
test eax eax +
jnz loc_10456D4  +
push 1Eh  +
pop edx  +
push 5  +
pop eax  +
push 20h  +
push offset unk_104E540  +
push edx  +
push offset dword_100A2B8  +
push edx  +
push offset dword_100A27C  +
mov ecx edx +
push 0  +
lea edi [ebp+var_484] +
stos   +
mov [ebp+var_4] eax +
push edx  +
lea eax [ebp+var_484] +
push eax  +
lea eax [ebp+var_4] +
call sub_1044A74  +
cmp eax 1 +
jg loc_10456D4  +
xor eax eax +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push ebx  +
push edi  +
jz loc_10456F9  +
mov ebx [esi+34h] +
mov edi [esi+30h] +
and dword ptr [esi+2Ch] 0 +
jmp loc_10457A8  +
mov ebx [esi+28h] +
mov eax [esi+24h] +
mov ecx ebx +
and ecx 7 +
push 10h  +
shr eax cl +
sub ebx ecx +
pop edx  +
jmp loc_104573B  +
mov edi [esi+18h] +
mov ecx [esi+14h] +
cmp edi ecx +
jnb loc_1045724  +
mov ecx [esi+8] +
movzx ecx byte ptr [ecx+edi] +
inc edi  +
mov [esi+18h] edi +
jmp loc_104572F  +
jz loc_104572D  +
mov dword ptr [esi+4] 1 +
xor ecx ecx +
movzx edi cl +
mov ecx ebx +
shl edi cl +
or eax edi +
add ebx 8 +
cmp ebx edx +
jb loc_104570D  +
movzx edi ax +
sub ebx edx +
shr eax 10h +
cmp ebx edx +
jnb loc_104577E  +
mov ecx [esi+18h] +
mov edx [esi+14h] +
cmp ecx edx +
jnb loc_1045762  +
mov edx [esi+8] +
movzx edx byte ptr [edx+ecx] +
inc ecx  +
mov [esi+18h] ecx +
jmp loc_104576D  +
jz loc_104576B  +
mov dword ptr [esi+4] 1 +
xor edx edx +
movzx edx dl +
mov ecx ebx +
shl edx cl +
add ebx 8 +
or eax edx +
cmp ebx 10h +
jb loc_104574B  +
not eax  +
and eax 0FFFFh +
cmp edi eax +
jnz loc_10457F2  +
xor eax eax +
cmp [esi+4] eax +
jnz loc_10457F2  +
add ebx 0FFFFFFF0h +
jnz loc_10457F2  +
mov ebx [esi+8] +
mov [esi+28h] eax +
mov [esi+24h] eax +
mov eax [esi+18h] +
add ebx eax +
add eax edi +
mov [esi+18h] eax +
mov eax [esi+1Ch] +
cmp edi eax +
ja loc_10457C6  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
sub eax edi +
mov [esi+1Ch] eax +
call memcpy  +
add esp 0Ch +
add [esi+0Ch] edi +
jmp loc_10457EE  +
push eax  +
push ebx  +
push dword ptr [esi+0Ch]  +
call memcpy  +
mov eax [esi+1Ch] +
add [esi+0Ch] eax +
sub edi eax +
add eax ebx +
add esp 0Ch +
and dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+2Ch] 1 +
mov [esi+30h] edi +
mov [esi+34h] eax +
xor eax eax +
jmp loc_10457F5  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi eax +
mov ecx [esi+28h] +
xor eax eax +
push edi  +
mov edi [esi+24h] +
inc eax  +
jmp loc_104583A  +
mov edx [esi+18h] +
mov ebx [esi+14h] +
cmp edx ebx +
jnb loc_1045829  +
mov ebx [esi+8] +
movzx ebx byte ptr [ebx+edx] +
inc edx  +
mov [esi+18h] edx +
jmp loc_1045830  +
jz loc_104582E  +
mov [esi+4] eax +
xor ebx ebx +
movzx edx bl +
shl edx cl +
or edi edx +
add ecx 8 +
cmp ecx eax +
jb loc_1045812  +
mov edx edi +
and edx eax +
shr edi 1 +
mov [esi] edx +
dec ecx  +
jmp loc_1045871  +
mov edx [esi+18h] +
mov ebx [esi+14h] +
cmp edx ebx +
jnb loc_1045860  +
mov ebx [esi+8] +
movzx ebx byte ptr [ebx+edx] +
inc edx  +
mov [esi+18h] edx +
jmp loc_1045867  +
jz loc_1045865  +
mov [esi+4] eax +
xor ebx ebx +
movzx edx bl +
shl edx cl +
or edi edx +
add ecx 8 +
cmp ecx 2 +
jb loc_1045849  +
add ecx 0FFFFFFFEh +
mov edx edi +
mov [esi+28h] ecx +
shr edx 2 +
xor ecx ecx +
mov [esi+24h] edx +
cmp [esi+4] ecx +
jnz loc_10458C2  +
and edi 3 +
sub edi ecx +
jz loc_10458BC  +
dec edi  +
jz loc_10458A4  +
dec edi  +
jz loc_104589D  +
push 2  +
pop eax  +
jmp loc_10458C2  +
call sub_10451B0  +
jmp loc_10458C2  +
push ecx  +
push 5  +
push 9  +
push offset unk_104E540  +
push offset unk_104E640  +
mov edx esi +
call sub_1044E0E  +
jmp loc_10458C2  +
push ecx  +
call sub_10456DC  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 43h +
jnz loc_1045916  +
cmp byte ptr [eax+1] 4Bh +
jnz loc_1045916  +
lea ecx [eax+2] +
mov eax [ebp+arg_0] +
mov [eax+8] ecx +
mov ecx [ebp+arg_8] +
add ecx 0FFFFFFFEh +
mov [eax+14h] ecx +
mov ecx [ebp+arg_C] +
xor edx edx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov ecx [ebp+arg_10] +
mov [eax+18h] edx +
mov [eax+28h] edx +
mov [eax+24h] edx +
mov [eax+20h] ecx +
mov [eax] edx +
mov [eax+4] edx +
mov [eax+2Ch] edx +
xor eax eax +
jmp loc_1045919  +
push 3  +
pop eax  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [edx] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi+20h] +
push edi  +
mov [esi+1Ch] eax +
cmp eax ecx +
jbe loc_104593F  +
mov [esi+1Ch] ecx +
mov edi [esi+1Ch] +
xor ebx ebx +
cmp edi ebx +
jbe loc_1045995  +
mov eax [esi+2Ch] +
sub eax ebx +
jz loc_1045991  +
dec eax  +
jz loc_1045978  +
dec eax  +
jz loc_1045961  +
dec eax  +
jz loc_104595D  +
push 3  +
pop eax  +
jmp loc_10459A3  +
mov [edx] ebx +
jmp loc_10459A1  +
push 1  +
push dword ptr [esi+44h]  +
mov edx esi +
push dword ptr [esi+40h]  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_1044E0E  +
jmp loc_1045991  +
push 1  +
call sub_10456DC  +
jmp loc_1045991  +
cmp [esi+1Ch] ebx +
jbe loc_1045995  +
mov eax esi +
call sub_1045800  +
cmp eax ebx +
jnz loc_10459AA  +
cmp [esi] ebx +
jz loc_1045981  +
sub di [esi+1Ch] +
mov ecx [ebp+arg_4] +
movzx eax di +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
xor ecx ecx +
cmp eax 3 +
setnz cl  +
inc ecx  +
inc ecx  +
mov eax ecx +
jmp loc_10459A3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi 22B4h +
push esi  +
call [ebp+arg_0]  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_10459F8  +
push esi  +
push 0  +
push edi  +
call memset  +
add esp 0Ch +
cmp dword_104F680 0 +
jnz loc_10459F8  +
call sub_1045619  +
mov dword_104F680 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
inc eax  +
mov cl bl +
shl eax cl +
push esi  +
mov esi [ebp+arg_0] +
and dword ptr [esi+150h] 0 +
and dword ptr [esi+16Ch] 0 +
lea ecx [eax-1] +
push eax  +
mov [esi+158h] eax +
mov [esi+154h] ecx +
mov [esi+168h] bl +
call dword ptr [esi+4]  +
pop ecx  +
mov [esi+144h] eax +
test eax eax +
jz loc_1045A6A  +
mov ecx [esi+158h] +
push ebx  +
add ecx eax +
push esi  +
mov [esi+14Ch] eax +
mov [esi+148h] ecx +
call sub_1045D7F  +
xor eax eax +
jmp loc_1045A6D  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx edx word ptr [ecx+15Ch] +
push esi  +
push edi  +
movsx edi [ebp+arg_0] +
movzx eax dx +
cmp eax edi +
jb loc_1045B0C  +
mov esi [ecx+150h] +
sub edx dword ptr [ebp+arg_0] +
mov eax esi +
sub eax [ebp+arg_4] +
mov [ecx+15Ch] dx +
and eax [ecx+154h] +
add eax [ecx+144h] +
add esi edi +
mov [ecx+150h] esi +
jmp loc_1045B03  +
dec [ebp+arg_0]  +
mov dl [eax] +
mov esi [ecx+14Ch] +
mov [esi] dl +
mov esi [ecx+160h] +
mov [esi] dl +
inc dword ptr [ecx+160h]  +
mov edx [ecx+148h] +
inc eax  +
cmp eax edx +
jnz loc_1045AE9  +
mov eax [ecx+144h] +
inc dword ptr [ecx+14Ch]  +
cmp [ecx+14Ch] edx +
jnz loc_1045B03  +
mov edx [ecx+144h] +
mov [ecx+14Ch] edx +
cmp [ebp+arg_0] 0 +
jnz loc_1045ABC  +
jmp loc_1045B1F  +
xor eax eax +
mov [ecx+15Ch] ax +
mov dword ptr [ecx+164h] 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax 0FFFFh +
add [ecx+15Ch] ax +
inc dword ptr [ecx+150h]  +
lea eax [ecx+160h] +
push esi  +
mov esi [eax] +
mov [esi] dl +
inc dword ptr [eax]  +
lea eax [ecx+14Ch] +
mov esi [eax] +
mov [esi] dl +
inc dword ptr [eax]  +
mov edx [eax] +
pop esi  +
cmp edx [ecx+148h] +
jnz locret_1045B68  +
mov ecx [ecx+144h] +
mov [eax] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+15Ch] ax +
mov eax [ebp+arg_C] +
mov [esi+160h] eax +
mov eax [ebp+arg_4] +
push edi  +
xor edi edi +
mov [esi+24h] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [esi+164h] edi +
mov [esi+20h] eax +
mov [esi+1Ch] edi +
call sub_10465F2  +
jmp loc_1045BB6  +
cmp [esi+1Ch] edi +
jnz loc_1045BBF  +
push esi  +
call sub_104601D  +
cmp [esi+15Ch] di +
jnz loc_1045BAB  +
call nullsub_2  +
cmp [esi+1Ch] edi +
jnz loc_1045BDD  +
cmp [esi+164h] edi +
jnz loc_1045BDD  +
cmp [esi+16Ch] edi +
jnz loc_1045BDD  +
xor eax eax +
jmp loc_1045BE0  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+144h]  +
call dword ptr [eax+8]  +
pop ecx  +
call nullsub_2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call nullsub_2  +
mov eax [ebp+arg_0] +
mov ecx [eax+144h] +
and dword ptr [eax+150h] 0 +
and dword ptr [eax+16Ch] 0 +
mov [eax+14Ch] ecx +
movzx ecx byte ptr [eax+168h] +
push ecx  +
push eax  +
call sub_1045D7F  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_10468B5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10468D9  +
push esi  +
call sub_1046962  +
push esi  +
call sub_10469B1  +
and dword ptr [esi+2ECCh] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+2B04h] eax +
lea eax [eax+ecx+4] +
mov [esi+2B08h] eax +
mov eax [ebp+arg_10] +
push esi  +
mov [esi+2B0Ch] eax +
call sub_1046D55  +
push [ebp+arg_4]  +
push esi  +
call sub_1046AAA  +
lea ecx [esi+2ECCh] +
mov edx [ecx] +
cmp edx 8000h +
jnb loc_1045CCF  +
inc edx  +
mov [ecx] edx +
test eax eax +
jge loc_1045CDE  +
mov eax [ebp+arg_18] +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
jmp loc_1045CEB  +
mov ecx [ebp+arg_18] +
mov [ecx] eax +
add [esi+2B10h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+2EE0h] eax +
mov eax [ebp+arg_C] +
mov [esi+2EE4h] eax +
mov eax [ebp+arg_10] +
mov [esi+2EE8h] eax +
mov eax [ebp+arg_14] +
mov [esi+2EECh] eax +
mov eax [ebp+arg_18] +
mov [esi+2EF0h] eax +
mov eax [ebp+arg_1C] +
mov [esi+2EF4h] eax +
mov eax [ebp+arg_20] +
mov [esi+2EF8h] eax +
mov eax [ebp+arg_4] +
lea ecx [eax-1] +
mov [esi+4] eax +
mov [esi+8] ecx +
test ecx eax +
jnz loc_1045D72  +
cmp eax 8000h +
jb loc_1045D72  +
cmp eax 200000h +
ja loc_1045D72  +
push esi  +
call sub_1046856  +
test eax eax +
jnz loc_1045D68  +
inc eax  +
jmp loc_1045D75  +
push esi  +
call sub_1045C59  +
xor eax eax +
jmp loc_1045D75  +
push 5  +
pop eax  +
pop esi  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov cl [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
inc ebx  +
shl ebx cl +
and [ebp+var_4] 0 +
push edi  +
push 4  +
mov [ebp+var_8] ebx +
mov dword ptr [ebp+arg_4] offset dword_100A420 +
lea esi [eax+28h] +
pop edx  +
mov ecx [ebp+var_4] +
mov [esi] ecx +
mov ecx dword ptr [ebp+arg_4] +
mov ecx [ecx] +
xor edi edi +
inc edi  +
shl edi cl +
test edi edi +
jle loc_1045DBE  +
add [ebp+var_4] edi +
add dword ptr [ebp+arg_4] edx +
add esi edx +
cmp dword ptr [ebp+arg_4] offset dword_100A48C +
jl loc_1045DA8  +
xor ecx ecx +
xor edi edi +
inc ecx  +
mov [ebp+arg_0] ecx +
mov dword ptr [ebp+arg_4] offset dword_100A490 +
lea esi [eax+94h] +
mov [ebp+var_4] 2Ah +
jmp loc_1045DED  +
mov ebx [ebp+var_8] +
cmp edi ebx +
jge loc_1045E13  +
cmp edi 1000h +
mov [eax+0DD0h] ecx +
jge loc_1045E05  +
mov [eax+0FE0h] ecx +
cmp edi 40000h +
jge loc_1045E13  +
mov [eax+11F0h] ecx +
mov ecx dword ptr [ebp+arg_4] +
add dword ptr [ebp+arg_4] edx +
xor ebx ebx +
mov [esi] edi +
mov ecx [ecx] +
inc ebx  +
shl ebx cl +
mov ecx [ebp+arg_0] +
add esi edx +
add edi ebx +
inc ecx  +
dec [ebp+var_4]  +
mov [ebp+arg_0] ecx +
jnz loc_1045DEA  +
push 7  +
pop edi  +
mov [eax+170h] edi +
mov [eax+174h] edx +
xor esi esi +
lea ecx [eax+17Ch] +
mov ebx edi +
sub ebx esi +
mov [ecx] esi +
mov [ecx-4] ebx +
inc esi  +
add ecx 8 +
cmp esi edi +
jle loc_1045E49  +
push 40h  +
pop esi  +
mov [eax+9B0h] esi +
mov [eax+7A0h] esi +
mov [eax+590h] esi +
mov [eax+380h] esi +
mov [eax+9B4h] edx +
mov [eax+7A4h] edx +
mov [eax+594h] edx +
mov [eax+384h] edx +
xor edi edi +
lea ecx [eax+598h] +
mov ebx esi +
sub ebx edi +
mov [ecx-20Ch] edi +
mov [ecx+4] edi +
mov [ecx+214h] edi +
mov [ecx+424h] edi +
mov [ecx-210h] ebx +
mov [ecx] ebx +
mov [ecx+210h] ebx +
mov [ecx+420h] ebx +
inc edi  +
add ecx 8 +
cmp edi esi +
jle loc_1045E95  +
push 1Bh  +
pop edi  +
mov [eax+0BC0h] edi +
mov [eax+0BC4h] edx +
xor esi esi +
lea ecx [eax+0BCCh] +
mov ebx edi +
sub ebx esi +
mov [ecx] esi +
mov [ecx-4] ebx +
inc esi  +
add ecx 8 +
cmp esi edi +
jle loc_1045EE1  +
mov [eax+0DD4h] edx +
mov [eax+0FE4h] edx +
mov [eax+11F4h] edx +
xor edx edx +
lea ecx [eax+0FE8h] +
mov esi [eax+0DD0h] +
sub esi edx +
mov [ecx-210h] esi +
mov esi [eax+0FE0h] +
sub esi edx +
mov [ecx] esi +
mov esi [eax+11F0h] +
sub esi edx +
mov [ecx-20Ch] edx +
mov [ecx+4] edx +
mov [ecx+214h] edx +
mov [ecx+210h] esi +
inc edx  +
add ecx 8 +
cmp edx 2Ah +
jle loc_1045F0C  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 0Ch +
dec dword ptr [eax+4]  +
push esi  +
mov esi [eax] +
push edi  +
lea edx [eax+8] +
jnz loc_104600F  +
xor ecx ecx +
mov dword ptr [eax+4] 32h +
test esi esi +
jle loc_1045FF8  +
lea eax [edx+ecx*8] +
mov edi [eax] +
sub edi [edx+ecx*8+8] +
inc edi  +
shr edi 1 +
inc ecx  +
cmp ecx esi +
mov [eax] edi +
jl loc_1045F84  +
test esi esi +
jle loc_1045FF8  +
mov [ebp+arg_0] 1 +
mov eax edx +
mov [ebp+var_4] esi +
push ebx  +
cmp [ebp+arg_0] esi +
jge loc_1045FE1  +
mov edi esi +
sub edi [ebp+arg_0] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp ebx [eax] +
jbe loc_1045FDB  +
mov ebx [eax] +
mov [ebp+var_C] ebx +
mov ebx [eax+4] +
mov [ebp+var_8] ebx +
mov ebx [ecx] +
mov [eax] ebx +
mov ebx [ecx+4] +
mov [eax+4] ebx +
mov ebx [ebp+var_C] +
mov [ecx] ebx +
mov ebx [ebp+var_8] +
mov [ecx+4] ebx +
add ecx 8 +
dec edi  +
jnz loc_1045FB5  +
inc [ebp+arg_0]  +
add eax 8 +
dec [ebp+var_4]  +
jnz loc_1045FA8  +
pop ebx  +
jmp loc_1045FF8  +
mov ecx [edx+esi*8+8] +
lea eax [edx+esi*8] +
add [eax] ecx +
dec esi  +
jns loc_1045FEF  +
jmp loc_1046012  +
mov ecx [edx+esi*8+8] +
lea eax [edx+esi*8] +
shr dword ptr [eax] 1 +
mov edi [eax] +
cmp edi ecx +
ja loc_104600F  +
inc ecx  +
mov [eax] ecx +
dec esi  +
jns loc_1045FFD  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
mov ax [ebx+178h] +
push esi  +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
push edi  +
mov ecx ebx +
call sub_10466FE  +
and [ebp+arg_0] 0 +
lea ecx [ebx+180h] +
jmp loc_1046052  +
inc [ebp+arg_0]  +
add ecx 8 +
cmp [ecx] eax +
ja loc_104604C  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+17Ch] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+178h] +
mov ax [ebx+eax*8+180h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
push 8  +
lea eax [ebx+178h] +
pop esi  +
add [eax] esi +
mov ecx [ebp+arg_0] +
add eax esi +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_1046095  +
cmp dword ptr [ebx+178h] 0ED8h +
jbe loc_10460BB  +
lea eax [ebx+170h] +
push eax  +
call sub_1045F5C  +
mov eax [ebp+var_4] +
xor edi edi +
sub eax edi +
jz loc_104654F  +
dec eax  +
jz loc_10464B7  +
dec eax  +
jz loc_104641F  +
dec eax  +
jz loc_1046384  +
dec eax  +
jz loc_10462C5  +
dec eax  +
jz loc_104622E  +
dec eax  +
jnz loc_10465E6  +
mov ax [ebx+0BC8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+0BD0h] +
jmp loc_1046117  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_1046112  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+0BCCh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+0BC8h] +
mov ax [ebx+eax*8+0BD0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+0BC8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_1046157  +
cmp dword ptr [ebx+0BC8h] 0ED8h +
jbe loc_104617F  +
lea eax [ebx+0BC0h] +
push eax  +
call sub_1045F5C  +
mov esi [ebp+var_4] +
push ds:dword_100A420[esi*4]  +
push ebx  +
call sub_104668C  +
add ax [ebx+esi*4+28h] +
mov ecx ebx +
add ax 5 +
mov word ptr [ebp+var_14] ax +
mov ax [ebx+0DD8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
call sub_10466FE  +
and [ebp+arg_0] 0 +
lea ecx [ebx+0DE0h] +
jmp loc_10461C3  +
inc [ebp+arg_0]  +
add ecx 8 +
cmp [ecx] eax +
ja loc_10461BD  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+0DDCh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+0DD8h] +
mov ax [ebx+eax*8+0DE0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+0DD8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_1046203  +
cmp dword ptr [ebx+0DD8h] 0ED8h +
jbe loc_1046359  +
lea eax [ebx+0DD0h] +
jmp loc_1046353  +
push 4  +
pop eax  +
mov word ptr [ebp+var_14] ax +
mov ax [ebx+11F8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+1200h] +
jmp loc_104625A  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_1046255  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+11FCh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+11F8h] +
mov ax [ebx+eax*8+1200h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+11F8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_104629A  +
cmp dword ptr [ebx+11F8h] 0ED8h +
jbe loc_1046359  +
lea eax [ebx+11F0h] +
jmp loc_1046353  +
push 3  +
pop eax  +
mov word ptr [ebp+var_14] ax +
mov ax [ebx+0FE8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+0FF0h] +
jmp loc_10462F1  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_10462EC  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+0FECh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+0FE8h] +
mov ax [ebx+eax*8+0FF0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+0FE8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_1046331  +
cmp dword ptr [ebx+0FE8h] 0ED8h +
jbe loc_1046359  +
lea eax [ebx+0FE0h] +
push eax  +
call sub_1045F5C  +
mov esi [ebp+var_4] +
push ds:dword_100A490[esi*4]  +
push ebx  +
call sub_104668C  +
mov ecx [ebx+esi*4+94h] +
lea eax [eax+ecx+1] +
push eax  +
push [ebp+var_14]  +
mov ecx ebx +
call sub_1045A78  +
jmp loc_10465E6  +
mov ax [ebx+9B8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+9C0h] +
jmp loc_10463A9  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_10463A4  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+9BCh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+9B8h] +
mov ax [ebx+eax*8+9C0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+9B8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_10463E9  +
cmp dword ptr [ebx+9B8h] 0ED8h +
jbe loc_1046411  +
lea eax [ebx+9B0h] +
push eax  +
call sub_1045F5C  +
mov edx [ebp+var_4] +
add edx 0C0h +
jmp loc_10465DF  +
mov ax [ebx+7A8h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+7B0h] +
jmp loc_1046444  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_104643F  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+7ACh] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+7A8h] +
mov ax [ebx+eax*8+7B0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+7A8h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_1046484  +
cmp dword ptr [ebx+7A8h] 0ED8h +
jbe loc_10464AC  +
lea eax [ebx+7A0h] +
push eax  +
call sub_1045F5C  +
mov edx [ebp+var_4] +
sub edx 0FFFFFF80h +
jmp loc_10465DF  +
mov ax [ebx+598h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+5A0h] +
jmp loc_10464DC  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_10464D7  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+59Ch] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+598h] +
mov ax [ebx+eax*8+5A0h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+598h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_104651C  +
cmp dword ptr [ebx+598h] 0ED8h +
jbe loc_1046544  +
lea eax [ebx+590h] +
push eax  +
call sub_1045F5C  +
mov edx [ebp+var_4] +
add edx 40h +
jmp loc_10465DF  +
mov ax [ebx+388h] +
mov word ptr [ebp+var_8] ax +
mov edx [ebp+var_8] +
mov ecx ebx +
call sub_10466FE  +
mov [ebp+arg_0] edi +
lea ecx [ebx+390h] +
jmp loc_1046574  +
inc [ebp+arg_0]  +
add ecx esi +
cmp [ecx] eax +
ja loc_104656F  +
mov eax [ebp+arg_0] +
mov ecx [ebx+eax*8+38Ch] +
mov [ebp+var_4] ecx +
mov cx [ebx+eax*8+388h] +
mov ax [ebx+eax*8+390h] +
mov word ptr [ebp+var_C+2] cx +
mov word ptr [ebp+var_C] ax +
lea esi [ebp+var_C] +
push ecx  +
push ecx  +
mov edi esp +
movs   +
mov ecx ebx +
movs   +
call sub_104672D  +
lea eax [ebx+388h] +
add dword ptr [eax] 8 +
mov ecx [ebp+arg_0] +
add eax 8 +
dec [ebp+arg_0]  +
test ecx ecx +
jnz loc_10465B4  +
cmp dword ptr [ebx+388h] 0ED8h +
jbe loc_10465DC  +
lea eax [ebx+380h] +
push eax  +
call sub_1045F5C  +
mov edx [ebp+var_4] +
mov ecx ebx +
call sub_1045B2A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and dword ptr [eax+14h] 0 +
push ebx  +
mov [ebp+arg_0] 10h +
mov edx 100h +
push esi  +
shl word ptr [eax+140h] 1 +
mov ecx [eax+14h] +
movzx esi word ptr [eax+140h] +
test ecx ecx +
jz loc_1046627  +
dec ecx  +
mov [eax+14h] ecx +
jmp loc_1046646  +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_1046650  +
dec ecx  +
mov [eax+20h] ecx +
mov ecx [eax+24h] +
mov dword ptr [eax+14h] 7 +
movsx ebx byte ptr [ecx] +
inc ecx  +
mov [eax+18h] ebx +
mov [eax+24h] ecx +
shl dword ptr [eax+18h] 1 +
mov ecx [eax+18h] +
and ecx edx +
jmp loc_1046659  +
mov dword ptr [eax+1Ch] 1 +
xor ecx ecx +
test ecx ecx +
jz loc_1046667  +
or esi 1 +
mov [eax+140h] si +
dec [ebp+arg_0]  +
jnz loc_104660C  +
xor ecx ecx +
mov [eax+13Ch] cx +
mov ecx 0FFFFh +
pop esi  +
mov [eax+13Eh] cx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10466F5  +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi 100h +
mov edx [ecx+14h] +
dec [ebp+arg_4]  +
add eax eax +
test edx edx +
jz loc_10466B4  +
dec edx  +
mov [ecx+14h] edx +
jmp loc_10466D3  +
mov edx [ecx+20h] +
test edx edx +
jz loc_10466DD  +
dec edx  +
mov [ecx+20h] edx +
mov edx [ecx+24h] +
mov dword ptr [ecx+14h] 7 +
movsx ebx byte ptr [edx] +
inc edx  +
mov [ecx+18h] ebx +
mov [ecx+24h] edx +
shl dword ptr [ecx+18h] 1 +
mov edx [ecx+18h] +
and edx esi +
jmp loc_10466E6  +
mov dword ptr [ecx+1Ch] 1 +
xor edx edx +
test edx edx +
jz loc_10466ED  +
or eax 1 +
cmp [ebp+arg_4] 0 +
jnz loc_10466A2  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
movzx eax word ptr [ecx+140h] +
push esi  +
movzx esi word ptr [ecx+13Ch] +
movzx ecx word ptr [ecx+13Eh] +
sub eax esi +
inc eax  +
movzx edx dx +
imul eax edx +
dec eax  +
sub ecx esi +
inc ecx  +
xor edx edx +
div  ecx +
pop esi  +
cwde   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
movzx ebx [ebp+arg_4] +
push esi  +
movzx esi word ptr [ecx+13Eh] +
push edi  +
movzx edi word ptr [ecx+13Ch] +
movzx eax di +
sub esi eax +
mov eax [ebp+arg_0] +
shr eax 10h +
inc esi  +
imul eax esi +
xor edx edx +
div  ebx +
xor edx edx +
lea eax [eax+edi-1] +
mov [ecx+13Eh] ax +
movzx eax word ptr [ebp+arg_0] +
imul eax esi +
div  ebx +
mov esi 100h +
add eax edi +
mov [ecx+13Ch] ax +
mov edi 4000h +
movzx edx word ptr [ecx+13Ch] +
movzx eax word ptr [ecx+13Eh] +
mov ebx edx +
xor ebx eax +
test ebx 8000h +
jz loc_10467CC  +
test edx edi +
jz loc_104684A  +
test eax edi +
jnz loc_104684A  +
mov ebx edi +
xor [ecx+140h] bx +
and edx 3FFFh +
or eax edi +
mov [ecx+13Ch] dx +
mov [ecx+13Eh] ax +
mov ax [ecx+13Eh] +
shl word ptr [ecx+140h] 1 +
shl word ptr [ecx+13Ch] 1 +
movzx edx word ptr [ecx+140h] +
xor ebx ebx +
add ax ax +
inc ebx  +
or ax bx +
mov [ecx+13Eh] ax +
mov eax [ecx+14h] +
test eax eax +
jz loc_1046805  +
dec eax  +
mov [ecx+14h] eax +
jmp loc_1046824  +
mov eax [ecx+20h] +
test eax eax +
jz loc_104682E  +
dec eax  +
mov [ecx+20h] eax +
mov eax [ecx+24h] +
mov dword ptr [ecx+14h] 7 +
movsx ebx byte ptr [eax] +
inc eax  +
mov [ecx+18h] ebx +
mov [ecx+24h] eax +
shl dword ptr [ecx+18h] 1 +
mov eax [ecx+18h] +
and eax esi +
jmp loc_1046833  +
mov [ecx+1Ch] ebx +
xor eax eax +
test eax eax +
jz loc_1046783  +
or edx 1 +
mov [ecx+140h] dx +
jmp loc_1046783  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
push edi  +
push 4  +
mov byte ptr [esi+2EB5h] 4 +
pop edi  +
mov al [esi+2EB5h] +
movzx ecx al +
mov cl ds:byte_100A318[ecx] +
xor ebx ebx +
inc ebx  +
shl ebx cl +
add edi ebx +
inc al  +
mov [esi+2EB5h] al +
cmp edi edx +
jb loc_104686E  +
add edx 105h +
push edx  +
call dword ptr [esi+2EE0h]  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnz cl  +
pop edi  +
mov [esi] eax +
pop esi  +
pop ebx  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_10468CF  +
push eax  +
call dword ptr [esi+2EE4h]  +
and dword ptr [esi] 0 +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax byte ptr [esi+2EB5h] +
push edi  +
lea eax ds:100h[eax*8] +
mov edi 2A0h +
cmp eax edi +
jl loc_10468FC  +
mov eax edi +
push eax  +
lea eax [esi+0A18h] +
push 0  +
push eax  +
call memset  +
movzx eax byte ptr [esi+2EB5h] +
lea eax ds:100h[eax*8] +
add esp 0Ch +
cmp eax edi +
jl loc_1046922  +
mov eax edi +
push eax  +
lea eax [esi+2B14h] +
push 0  +
push eax  +
call memset  +
mov edi 0F9h +
push edi  +
lea eax [esi+0CB8h] +
push 0  +
push eax  +
call memset  +
push edi  +
push 0  +
add esi 2DB4h +
push esi  +
call memset  +
add esp 24h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
xor edx edx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+2EC0h] edx +
mov [eax+2B10h] edx +
mov [eax+2EDCh] ecx +
mov [eax+2ED4h] edx +
mov [eax+2ED8h] edx +
mov [eax+2EB8h] ecx +
mov [eax+2EC4h] edx +
mov [eax+2EBCh] edx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and dword ptr [eax+2EC8h] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
cmp ebx 6 +
jg loc_10469F5  +
add [ecx+2EC8h] ebx +
jmp loc_1046A96  +
mov eax [ecx+2EC8h] +
add eax ebx +
cmp eax 0Ah +
jnb loc_1046A0D  +
mov [ecx+2EC8h] eax +
jmp loc_1046A96  +
push esi  +
push edi  +
lea eax [edx+ebx] +
lea esi [eax-6] +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_10] eax +
movs   +
mov edi [ebp+var_10] +
add edi 0FFFFFFFAh +
mov eax 0E8E8E8E8h +
stos   +
stos   +
mov eax [ecx+2EC8h] +
lea ebx [eax+ebx-0Ah] +
mov [ebp+var_14] ebx +
jmp loc_1046A42  +
inc edx  +
inc dword ptr [ecx+2EC8h]  +
cmp byte ptr [edx] 0E8h +
jnz loc_1046A3B  +
mov edi [ecx+2EC8h] +
inc edx  +
cmp edi ebx +
jnb loc_1046A7F  +
mov eax [edx] +
mov esi [ecx+2EC4h] +
cmp eax esi +
jnb loc_1046A64  +
sub eax edi +
mov [edx] eax +
jmp loc_1046A70  +
mov ebx eax +
neg ebx  +
cmp ebx edi +
ja loc_1046A70  +
add esi eax +
mov [edx] esi +
mov ebx [ebp+var_14] +
add edx 4 +
add dword ptr [ecx+2EC8h] 5 +
jmp loc_1046A42  +
mov edi [ebp+var_10] +
add ebx 0Ah +
add edi 0FFFFFFFAh +
mov [ecx+2EC8h] ebx +
lea esi [ebp+var_C] +
movs   +
movs   +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1036539  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
jmp loc_1046CB6  +
cmp dword ptr [ebx+2EDCh] 1 +
jnz loc_1046C80  +
lea eax [ebx+2EB8h] +
cmp [eax] edi +
jz loc_1046B0A  +
push 1  +
push ebx  +
mov [eax] edi +
call sub_1046E1D  +
test eax eax +
jz loc_1046B04  +
push 10h  +
push ebx  +
call sub_1046E1D  +
push 10h  +
push ebx  +
mov esi eax +
call sub_1046E1D  +
shl esi 10h +
or eax esi +
mov [ebx+2EC4h] eax +
jmp loc_1046B0A  +
mov [ebx+2EC4h] edi +
cmp dword ptr [ebx+2ED8h] 3 +
jnz loc_1046B41  +
test byte ptr [ebx+2ED0h] 1 +
jz loc_1046B35  +
lea eax [ebx+2B04h] +
inc dword ptr [eax]  +
mov eax [eax] +
add eax 4 +
cmp eax [ebx+2B08h] +
jnb loc_1046CBF  +
push ebx  +
mov [ebx+2ED8h] edi +
call sub_1046CF5  +
push 3  +
push ebx  +
call sub_1046E1D  +
push 8  +
push ebx  +
mov [ebx+2ED8h] eax +
call sub_1046E1D  +
push 8  +
push ebx  +
mov esi eax +
call sub_1046E1D  +
push 8  +
push ebx  +
mov edi eax +
call sub_1046E1D  +
shl esi 8 +
add esi edi +
shl esi 8 +
add eax esi +
cmp dword ptr [ebx+2ED8h] 2 +
mov [ebx+2ED0h] eax +
mov [ebx+2ED4h] eax +
jnz loc_1046B90  +
push ebx  +
call sub_104820A  +
mov eax [ebx+2ED8h] +
cmp eax 1 +
jz loc_1046BB7  +
cmp eax 2 +
jz loc_1046BB7  +
cmp eax 3 +
jnz loc_1046BAF  +
push ebx  +
call sub_1046EDA  +
test eax eax +
jnz loc_1046BFF  +
or eax 0FFFFFFFFh +
jmp loc_1046CE9  +
movzx ecx byte ptr [ebx+2EB5h] +
lea ecx ds:100h[ecx*8] +
mov eax 2A0h +
cmp ecx eax +
jge loc_1046BD0  +
mov eax ecx +
push eax  +
lea eax [ebx+0A18h] +
push eax  +
lea eax [ebx+2B14h] +
push eax  +
call memcpy  +
add esp 0Ch +
push 3Eh  +
pop ecx  +
lea esi [ebx+0CB8h] +
lea edi [ebx+2DB4h] +
movs   +
push ebx  +
movs   +
call sub_1048141  +
mov dword ptr [ebx+2EDCh] 2 +
xor edi edi +
jmp loc_1046C80  +
cmp [ebp+arg_4] edi +
jle loc_1046C88  +
mov esi [ebx+2ED4h] +
cmp esi [ebp+arg_4] +
jl loc_1046C20  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1046BAF  +
mov eax [ebx+2EC0h] +
mov edx [ebx+2ED8h] +
lea ecx [eax+esi] +
cmp ecx eax +
jl loc_1046C69  +
cmp ecx [ebx+4] +
jg loc_1046C69  +
cmp edx 2 +
jnz loc_1046C4B  +
push esi  +
push eax  +
push ebx  +
call sub_1047DA3  +
jmp loc_1046C6C  +
cmp edx 1 +
jnz loc_1046C5A  +
push esi  +
push eax  +
push ebx  +
call sub_104759B  +
jmp loc_1046C6C  +
cmp edx 3 +
jnz loc_1046C69  +
push esi  +
push eax  +
push ebx  +
call sub_1046E49  +
jmp loc_1046C6C  +
or eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_1046BAF  +
sub [ebx+2ED4h] esi +
sub [ebp+arg_4] esi +
add [ebp+var_4] esi +
cmp [ebx+2ED4h] edi +
jg loc_1046C0D  +
cmp [ebx+2ED4h] edi +
jnz loc_1046C9A  +
mov dword ptr [ebx+2EDCh] 1 +
mov eax [ebx+2B04h] +
add eax 4 +
cmp eax [ebx+2B08h] +
jnb loc_1046CBF  +
cmp [ebp+arg_4] edi +
jnz loc_1046CB9  +
push ebx  +
call sub_1046CF5  +
cmp [ebp+arg_4] edi +
jg loc_1046AC0  +
mov eax [ebx+2EC0h] +
cmp eax edi +
jnz loc_1046CCC  +
mov eax [ebx+4] +
sub eax [ebp+var_4] +
mov ecx 9800h +
add eax [ebx] +
cmp [ebp+var_4] ecx +
jge loc_1046CDE  +
mov ecx [ebp+var_4] +
push eax  +
push ecx  +
push ebx  +
call sub_1047E08  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+2ED8h] 3 +
jz loc_1046D4C  +
mov eax [ecx+2B04h] +
lea edx [eax+4] +
cmp edx [ecx+2B08h] +
ja loc_1046D4C  +
push esi  +
movzx esi byte ptr [eax+1] +
push edi  +
movzx edi byte ptr [eax] +
shl esi 8 +
or esi edi +
movzx edi byte ptr [eax+3] +
movzx eax byte ptr [eax+2] +
shl esi 8 +
or esi edi +
shl esi 8 +
or esi eax +
pop edi  +
mov [ecx+2EB0h] esi +
mov byte ptr [ecx+2EB4h] 10h +
mov [ecx+2B04h] edx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1046CF5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub [eax+2EB4h] cl +
shl dword ptr [eax+2EB0h] cl +
push ebx  +
mov bl [eax+2EB4h] +
push esi  +
mov esi [eax+2EB0h] +
test bl bl +
jg loc_1046E12  +
mov edx [eax+2B04h] +
cmp edx [eax+2B08h] +
jb loc_1046DAC  +
mov dword ptr [eax+2EBCh] 1 +
jmp loc_1046E12  +
movzx ecx byte ptr [edx] +
push edi  +
movzx edi byte ptr [edx+1] +
shl edi 8 +
or edi ecx +
movsx ecx bl +
neg ecx  +
shl edi cl +
add bl 10h +
add edx 2 +
mov [eax+2B04h] edx +
or edi esi +
mov [eax+2EB0h] edi +
mov [eax+2EB4h] bl +
pop edi  +
test bl bl +
jg loc_1046E12  +
cmp edx [eax+2B08h] +
jnb loc_1046DA0  +
movzx esi byte ptr [edx+1] +
movzx ecx byte ptr [edx] +
shl esi 8 +
or esi ecx +
movsx ecx bl +
neg ecx  +
shl esi cl +
add edx 2 +
mov [eax+2B04h] edx +
or [eax+2EB0h] esi +
add bl 10h +
mov [eax+2EB4h] bl +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi [eax+2EB0h] +
push 20h  +
pop ecx  +
push [ebp+arg_4]  +
sub ecx [ebp+arg_4] +
push eax  +
shr esi cl +
call sub_1046D65  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov edx [ecx+2B04h] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edi [esi+eax] +
cmp esi edi +
mov ebx esi +
mov [ebp+arg_4] ebx +
jge loc_1046E90  +
cmp edx [ecx+2B08h] +
jnb loc_1046EA7  +
mov eax [ecx+4] +
add eax 105h +
cmp esi eax +
jge loc_1046EA7  +
mov bl [edx] +
mov eax [ecx] +
mov [esi+eax] bl +
inc esi  +
inc edx  +
cmp esi edi +
jl loc_1046E6C  +
mov ebx [ebp+arg_4] +
mov eax 101h +
cmp edi eax +
mov [ecx+2B04h] edx +
mov [ebp+arg_4] eax +
jg loc_1046EBA  +
mov [ebp+arg_4] edi +
jmp loc_1046EBA  +
or eax 0FFFFFFFFh +
jmp loc_1046ECE  +
mov eax [ecx] +
mov edx [ecx+4] +
add edx eax +
mov al [eax+ebx] +
mov [edx+ebx] al +
inc ebx  +
cmp ebx [ebp+arg_4] +
jb loc_1046EAC  +
mov eax [ecx+8] +
and eax esi +
mov [ecx+2EC0h] eax +
mov eax esi +
sub eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add dword ptr [eax+2B04h] 0FFFFFFFEh +
mov ecx [eax+2B04h] +
add ecx 4 +
cmp ecx [eax+2B08h] +
jb loc_1046EFE  +
xor eax eax +
jmp loc_1046F40  +
push ebx  +
push esi  +
push edi  +
push 3  +
lea edx [eax+0Ch] +
pop esi  +
mov ecx [eax+2B04h] +
movzx edi byte ptr [ecx+3] +
movzx ebx byte ptr [ecx+2] +
shl edi 8 +
or edi ebx +
movzx ebx byte ptr [ecx+1] +
movzx ecx byte ptr [ecx] +
shl edi 8 +
or edi ebx +
shl edi 8 +
or edi ecx +
mov [edx] edi +
add dword ptr [eax+2B04h] 4 +
add edx 4 +
dec esi  +
jnz loc_1046F07  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov al [edx+2EB4h] +
mov ecx [edx+2B08h] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_1] al +
mov eax [edx+2EB0h] +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_4] +
add ecx esi +
cmp esi ecx +
mov [ebp+var_8] eax +
mov eax [edx+2B04h] +
push edi  +
mov [ebp+var_C] eax +
mov [ebp+var_14] ecx +
jge loc_104724A  +
mov ecx [ebp+var_8] +
xor esi esi +
shr ecx 16h +
inc esi  +
cmp ecx 400h +
jnb loc_1046FA3  +
movsx ebx word ptr [edx+ecx*2+18h] +
jmp loc_1046FAB  +
mov [edx+2EBCh] esi +
xor ebx ebx +
test ebx ebx +
jge loc_1046FF6  +
mov ecx 200000h +
mov edi [ebp+var_8] +
neg ebx  +
test ecx edi +
jz loc_1046FD3  +
lea edi [ebx+ebx+1] +
cmp edi 0A80h +
jnb loc_1046FE8  +
movsx ebx word ptr [edx+ebx*4+0E3Eh] +
jmp loc_1046FF0  +
lea edi [ebx+ebx] +
cmp edi 0A80h +
jnb loc_1046FE8  +
movsx ebx word ptr [edx+ebx*4+0E3Ch] +
jmp loc_1046FF0  +
mov [edx+2EBCh] esi +
xor ebx ebx +
shr ecx 1 +
test ebx ebx +
jl loc_1046FB4  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047045  +
cmp eax [ebp+var_10] +
jnb loc_104726B  +
mov cl [ebx+edx+0A18h] +
shl [ebp+var_8] cl +
mov cl [ebp+var_1] +
sub cl [ebx+edx+0A18h] +
mov eax [ebp+var_C] +
mov [ebp+var_1] cl +
test cl cl +
jg loc_1047045  +
movzx esi byte ptr [eax+1] +
movzx edi byte ptr [eax] +
shl esi 8 +
movsx ecx cl +
or esi edi +
neg ecx  +
shl esi cl +
or [ebp+var_8] esi +
inc eax  +
inc eax  +
add [ebp+var_1] 10h +
mov [ebp+var_C] eax +
mov esi 100h +
sub ebx esi +
jns loc_1047064  +
mov esi [edx] +
mov ecx [ebp+arg_0] +
mov [ecx+esi] bl +
mov esi [edx+4] +
add esi [edx] +
mov [esi+ecx] bl +
inc ecx  +
jmp loc_104723C  +
mov edi ebx +
and edi 7 +
cmp edi 7 +
jnz loc_104713A  +
mov ecx [ebp+var_8] +
shr ecx 18h +
cmp ecx esi +
jnb loc_1047086  +
movsx edi word ptr [edx+ecx*2+818h] +
jmp loc_1047092  +
mov dword ptr [edx+2EBCh] 1 +
xor edi edi +
test edi edi +
jge loc_10470DF  +
mov ecx 800000h +
neg edi  +
test [ebp+var_8] ecx +
jz loc_10470B8  +
lea esi [edi+edi+1] +
cmp esi 3E4h +
jnb loc_10470CD  +
movsx edi word ptr [edx+edi*4+233Eh] +
jmp loc_10470D9  +
lea esi [edi+edi] +
cmp esi 3E4h +
jnb loc_10470CD  +
movsx edi word ptr [edx+edi*4+233Ch] +
jmp loc_10470D9  +
mov dword ptr [edx+2EBCh] 1 +
xor edi edi +
shr ecx 1 +
test edi edi +
jl loc_104709B  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_104712A  +
cmp eax [ebp+var_10] +
jnb loc_104726B  +
mov al [ebp+var_1] +
mov cl [edi+edx+0CB8h] +
shl [ebp+var_8] cl +
sub al cl +
mov [ebp+var_1] al +
test al al +
mov eax [ebp+var_C] +
jg loc_104712A  +
movzx esi byte ptr [eax+1] +
movzx ecx byte ptr [eax] +
shl esi 8 +
or esi ecx +
movsx ecx [ebp+var_1] +
neg ecx  +
shl esi cl +
or [ebp+var_8] esi +
inc eax  +
inc eax  +
add [ebp+var_1] 10h +
mov [ebp+var_C] eax +
add edi 7 +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_104726B  +
sar ebx 3 +
cmp bl 2 +
jle loc_10471E9  +
cmp bl 3 +
jle loc_10471D8  +
cmp bl 33h +
jnb loc_104726B  +
mov esi [ebp+var_8] +
movsx ecx bl +
movzx ebx ds:byte_100A318[ecx] +
mov [ebp+arg_4] ecx +
push 20h  +
pop ecx  +
sub ecx ebx +
shr esi cl +
mov ecx ebx +
shl [ebp+var_8] cl +
mov ecx [ebp+arg_4] +
mov cl ds:byte_100A318[ecx] +
sub [ebp+var_1] cl +
cmp [ebp+var_1] 0 +
jg loc_10471CC  +
movzx ebx byte ptr [eax+1] +
movzx ecx byte ptr [eax] +
shl ebx 8 +
or ebx ecx +
movsx ecx [ebp+var_1] +
add [ebp+var_1] 10h +
neg ecx  +
shl ebx cl +
or [ebp+var_8] ebx +
inc eax  +
inc eax  +
cmp [ebp+var_1] 0 +
mov [ebp+var_C] eax +
jg loc_10471CC  +
movzx ebx byte ptr [eax+1] +
movzx ecx byte ptr [eax] +
shl ebx 8 +
or ebx ecx +
movsx ecx [ebp+var_1] +
neg ecx  +
shl ebx cl +
or [ebp+var_8] ebx +
inc eax  +
inc eax  +
add [ebp+var_1] 10h +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_4] +
add esi ds:dword_100A350[ecx*4] +
jmp loc_10471DB  +
xor esi esi +
inc esi  +
mov ecx [edx+10h] +
mov [edx+14h] ecx +
mov ecx [edx+0Ch] +
mov [edx+10h] ecx +
jmp loc_10471FB  +
movsx ecx bl +
lea ecx [edx+ecx*4+0Ch] +
mov esi [ecx] +
test bl bl +
jz loc_10471FE  +
mov ebx [edx+0Ch] +
mov [ecx] ebx +
mov [edx+0Ch] esi +
mov ecx [ebp+arg_0] +
inc edi  +
mov ebx ecx +
inc edi  +
sub ebx esi +
mov [ebp+arg_0] ebx +
mov ebx [ebp+arg_0] +
and ebx [edx+8] +
cmp ecx 101h +
mov esi [edx] +
mov bl [ebx+esi] +
mov [esi+ecx] bl +
jge loc_1047233  +
mov esi [edx] +
mov ebx [edx+4] +
mov [ebp+arg_4] eax +
mov al [esi+ecx] +
add ebx esi +
mov [ebx+ecx] al +
mov eax [ebp+arg_4] +
inc ecx  +
inc [ebp+arg_0]  +
dec edi  +
test edi edi +
jg loc_104720A  +
mov esi ecx +
cmp esi [ebp+var_14] +
mov [ebp+arg_0] ecx +
jl loc_1046F8B  +
mov cl [ebp+var_1] +
mov [edx+2EB4h] cl +
mov ecx [ebp+var_8] +
mov [edx+2B04h] eax +
mov [edx+2EB0h] ecx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_1047264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov edx [ebp+arg_0] +
mov al [edx+2EB4h] +
mov ecx [edx+2EB0h] +
push ebx  +
mov ebx [edx+2B04h] +
mov byte ptr [ebp+arg_0+3] al +
mov eax [edx+2B08h] +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
add esi eax +
cmp eax esi +
push edi  +
mov [ebp+var_4] ecx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] esi +
jge loc_1047564  +
xor esi esi +
inc esi  +
jmp loc_10472C2  +
mov ecx [ebp+var_4] +
mov eax ecx +
shr eax 16h +
cmp eax 400h +
jnb loc_10472D5  +
movsx edi word ptr [edx+eax*2+18h] +
jmp loc_10472DD  +
mov [edx+2EBCh] esi +
xor edi edi +
mov [ebp+var_8] edi +
test edi edi +
jge loc_104732D  +
mov [ebp+arg_8] 200000h +
neg edi  +
test [ebp+arg_8] ecx +
jz loc_1047307  +
lea eax [edi+edi+1] +
cmp eax 0A80h +
jnb loc_104731B  +
movsx edi word ptr [edx+edi*4+0E3Eh] +
jmp loc_1047323  +
lea eax [edi+edi] +
cmp eax 0A80h +
jnb loc_104731B  +
movsx edi word ptr [edx+edi*4+0E3Ch] +
jmp loc_1047323  +
mov [edx+2EBCh] esi +
xor edi edi +
shr [ebp+arg_8] 1 +
test edi edi +
jl loc_10472EB  +
mov [ebp+var_8] edi +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047591  +
cmp ebx [ebp+var_10] +
jnb loc_1047591  +
mov cl [edi+edx+0A18h] +
mov al byte ptr [ebp+arg_0+3] +
shl [ebp+var_4] cl +
sub al cl +
mov byte ptr [ebp+arg_8+3] cl +
mov byte ptr [ebp+arg_0+3] al +
test al al +
jg loc_104737C  +
movzx edi byte ptr [ebx+1] +
movzx ecx byte ptr [ebx] +
shl edi 8 +
or edi ecx +
movsx ecx al +
neg ecx  +
shl edi cl +
or [ebp+var_4] edi +
inc ebx  +
inc ebx  +
add al 10h +
mov [ebp+var_C] ebx +
mov byte ptr [ebp+arg_0+3] al +
sub [ebp+var_8] 100h +
jns loc_104739C  +
mov ecx [edx] +
mov eax [ebp+arg_4] +
mov [ebp+arg_8] edx +
mov dl byte ptr [ebp+var_8] +
mov [eax+ecx] dl +
mov edx [ebp+arg_8] +
inc eax  +
jmp loc_1047558  +
mov edi [ebp+var_8] +
and edi 7 +
cmp edi 7 +
jnz loc_104746D  +
mov ecx [ebp+var_4] +
shr ecx 18h +
cmp ecx 100h +
jnb loc_10473C3  +
movsx edi word ptr [edx+ecx*2+818h] +
jmp loc_10473CB  +
mov [edx+2EBCh] esi +
xor edi edi +
test edi edi +
jge loc_1047418  +
mov ecx 800000h +
neg edi  +
test [ebp+var_4] ecx +
jz loc_10473F1  +
lea esi [edi+edi+1] +
cmp esi 3E4h +
jnb loc_1047406  +
movsx edi word ptr [edx+edi*4+233Eh] +
jmp loc_1047412  +
lea esi [edi+edi] +
cmp esi 3E4h +
jnb loc_1047406  +
movsx edi word ptr [edx+edi*4+233Ch] +
jmp loc_1047412  +
mov dword ptr [edx+2EBCh] 1 +
xor edi edi +
shr ecx 1 +
test edi edi +
jl loc_10473D4  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_104745D  +
cmp ebx [ebp+var_10] +
jnb loc_1047591  +
mov cl [edi+edx+0CB8h] +
shl [ebp+var_4] cl +
sub al cl +
mov byte ptr [ebp+arg_0+3] al +
test al al +
jg loc_104745D  +
movzx esi byte ptr [ebx+1] +
movzx ecx byte ptr [ebx] +
shl esi 8 +
or esi ecx +
movsx ecx al +
neg ecx  +
shl esi cl +
or [ebp+var_4] esi +
inc ebx  +
inc ebx  +
add al 10h +
mov [ebp+var_C] ebx +
mov byte ptr [ebp+arg_0+3] al +
add edi 7 +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047591  +
mov ecx [ebp+var_8] +
sar ecx 3 +
cmp cl 2 +
jle loc_1047522  +
cmp cl 3 +
jle loc_104750E  +
cmp cl 33h +
jnb loc_1047591  +
mov esi [ebp+var_4] +
movsx eax cl +
mov [ebp+arg_8] eax +
movzx eax ds:byte_100A318[eax] +
push 20h  +
pop ecx  +
sub ecx eax +
shr esi cl +
mov ecx eax +
mov eax [ebp+arg_8] +
mov al ds:byte_100A318[eax] +
sub byte ptr [ebp+arg_0+3] al +
shl [ebp+var_4] cl +
cmp byte ptr [ebp+arg_0+3] 0 +
jg loc_1047502  +
movzx eax byte ptr [ebx+1] +
movzx ecx byte ptr [ebx] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
add byte ptr [ebp+arg_0+3] 10h +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc ebx  +
inc ebx  +
cmp byte ptr [ebp+arg_0+3] 0 +
mov [ebp+var_C] ebx +
jg loc_1047502  +
movzx eax byte ptr [ebx+1] +
movzx ecx byte ptr [ebx] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc ebx  +
inc ebx  +
add byte ptr [ebp+arg_0+3] 10h +
mov [ebp+var_C] ebx +
mov eax [ebp+arg_8] +
add esi ds:dword_100A350[eax*4] +
jmp loc_1047514  +
mov esi ds:dword_100A35C +
mov eax [edx+10h] +
mov [edx+14h] eax +
mov eax [edx+0Ch] +
mov [edx+10h] eax +
jmp loc_1047534  +
movsx eax cl +
lea eax [edx+eax*4+0Ch] +
mov esi [eax] +
test cl cl +
jz loc_1047537  +
mov ecx [edx+0Ch] +
mov [eax] ecx +
mov [edx+0Ch] esi +
mov eax [ebp+arg_4] +
inc edi  +
mov ecx eax +
sub ecx esi +
inc edi  +
and ecx [edx+8] +
mov esi [edx] +
mov bl [esi+ecx] +
mov [esi+eax] bl +
inc eax  +
inc ecx  +
dec edi  +
test edi edi +
jg loc_1047543  +
mov ebx [ebp+var_C] +
xor esi esi +
inc esi  +
cmp eax [ebp+var_14] +
mov [ebp+arg_4] eax +
jl loc_10472BF  +
mov cl byte ptr [ebp+arg_0+3] +
mov [edx+2EB4h] cl +
mov ecx [ebp+var_4] +
mov [edx+2EB0h] ecx +
mov ecx [edx+8] +
and ecx eax +
sub eax [ebp+var_14] +
mov [edx+2B04h] ebx +
mov [edx+2EC0h] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
or eax 0FFFFFFFFh +
jmp loc_104758A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov eax 101h +
cmp esi eax +
jge loc_10475E2  +
sub eax esi +
cmp eax [ebp+arg_8] +
jl loc_10475BA  +
mov eax [ebp+arg_8] +
push eax  +
push esi  +
call sub_1046F49  +
cmp eax esi +
jge loc_10475CA  +
or eax 0FFFFFFFFh +
jmp loc_10475EC  +
sub esi eax +
add [ebp+arg_8] esi +
cmp [ebp+arg_8] 0 +
mov esi eax +
mov [edx+2EC0h] eax +
jg loc_10475E2  +
mov eax [ebp+arg_8] +
jmp loc_10475EC  +
push [ebp+arg_8]  +
push esi  +
push edx  +
call sub_1047275  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [edx+2B08h] +
mov ecx [ebp+arg_0] +
mov [ebp+var_C] eax +
mov eax [edx] +
push ebx  +
mov bl [edx+2EB4h] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [edx+2EB0h] +
add eax ecx +
cmp ecx eax +
push edi  +
mov edi [edx+2B04h] +
mov [ebp+var_18] eax +
jge loc_10479A2  +
mov eax esi +
shr eax 16h +
cmp eax 400h +
jnb loc_1047647  +
movsx eax word ptr [edx+eax*2+18h] +
jmp loc_1047653  +
mov dword ptr [edx+2EBCh] 1 +
xor eax eax +
test eax eax +
jge loc_10476A3  +
mov [ebp+arg_4] 200000h +
neg eax  +
test [ebp+arg_4] esi +
jz loc_104767B  +
lea ecx [eax+eax+1] +
cmp ecx 0A80h +
jnb loc_1047690  +
movsx eax word ptr [edx+eax*4+0E3Eh] +
jmp loc_104769C  +
lea ecx [eax+eax] +
cmp ecx 0A80h +
jnb loc_1047690  +
movsx eax word ptr [edx+eax*4+0E3Ch] +
jmp loc_104769C  +
mov dword ptr [edx+2EBCh] 1 +
xor eax eax +
shr [ebp+arg_4] 1 +
test eax eax +
jl loc_104765E  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_10479BD  +
cmp edi [ebp+var_C] +
jnb loc_10479BD  +
mov cl [eax+edx+0A18h] +
shl esi cl +
sub bl cl +
mov byte ptr [ebp+arg_4+3] bl +
mov [ebp+var_4] esi +
test bl bl +
jg loc_10476EC  +
movzx esi byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl esi 8 +
or esi ecx +
movsx ecx bl +
neg ecx  +
shl esi cl +
or [ebp+var_4] esi +
inc edi  +
inc edi  +
add bl 10h +
mov byte ptr [ebp+arg_4+3] bl +
mov esi 100h +
sub eax esi +
jns loc_1047711  +
mov ecx [ebp+var_10] +
mov esi [ebp+arg_0] +
mov [ecx+esi] al +
mov esi [edx+4] +
add esi ecx +
mov ecx [ebp+arg_0] +
inc [ebp+arg_0]  +
mov [esi+ecx] al +
jmp loc_1047993  +
mov ecx eax +
and ecx 7 +
mov [ebp+var_8] ecx +
cmp ecx 7 +
jnz loc_10477FB  +
mov ecx [ebp+var_4] +
shr ecx 18h +
cmp ecx esi +
jnb loc_1047736  +
movsx esi word ptr [edx+ecx*2+818h] +
jmp loc_1047747  +
and [ebp+var_8] 0 +
mov esi [ebp+var_8] +
mov dword ptr [edx+2EBCh] 1 +
test esi esi +
jge loc_104779E  +
mov ecx 800000h +
mov ebx [ebp+var_4] +
neg esi  +
test ecx ebx +
jz loc_104776F  +
lea ebx [esi+esi+1] +
cmp ebx 3E4h +
jnb loc_1047787  +
movsx esi word ptr [edx+esi*4+233Eh] +
jmp loc_1047782  +
lea ebx [esi+esi] +
cmp ebx 3E4h +
jnb loc_1047787  +
movsx esi word ptr [edx+esi*4+233Ch] +
mov [ebp+var_8] esi +
jmp loc_1047795  +
and [ebp+var_8] 0 +
mov dword ptr [edx+2EBCh] 1 +
mov esi [ebp+var_8] +
shr ecx 1 +
test esi esi +
jl loc_1047750  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_10477E8  +
cmp edi [ebp+var_C] +
jnb loc_10479BD  +
mov cl [esi+edx+0CB8h] +
shl [ebp+var_4] cl +
mov cl byte ptr [ebp+arg_4+3] +
sub cl [esi+edx+0CB8h] +
mov byte ptr [ebp+arg_4+3] cl +
test cl cl +
jg loc_10477E8  +
movzx ebx byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl ebx 8 +
or ebx ecx +
movsx ecx byte ptr [ebp+arg_4+3] +
neg ecx  +
shl ebx cl +
or [ebp+var_4] ebx +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_4+3] 10h +
add esi 7 +
cmp dword ptr [edx+2EBCh] 0 +
mov [ebp+var_8] esi +
jnz loc_10479BD  +
sar eax 3 +
cmp al 2 +
jle loc_1047943  +
cmp al 33h +
jnb loc_10479BD  +
movsx eax al +
mov bl ds:byte_100A318[eax] +
mov [ebp+var_14] eax +
cmp bl 3 +
jb loc_10478E1  +
movzx eax bl +
lea ecx [eax-3] +
test ecx ecx +
jz loc_1047872  +
mov esi [ebp+var_4] +
push 23h  +
pop ecx  +
sub ecx eax +
shr esi cl +
cmp edi [ebp+var_C] +
jnb loc_10479BD  +
lea ecx [eax-3] +
shl [ebp+var_4] cl +
mov al 3 +
sub al bl +
add byte ptr [ebp+arg_4+3] al +
cmp byte ptr [ebp+arg_4+3] 0 +
jg loc_1047874  +
movzx eax byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_4+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_4+3] 10h +
jmp loc_1047874  +
xor esi esi +
mov eax [ebp+var_14] +
mov eax ds:dword_100A350[eax*4] +
lea esi [eax+esi*8] +
mov eax [ebp+var_4] +
shr eax 19h +
cmp eax 80h +
jnb loc_10478D1  +
movsx eax byte ptr [eax+edx+0DB4h] +
cmp edi [ebp+var_C] +
jnb loc_10479BD  +
mov cl [eax+edx+0E34h] +
sub byte ptr [ebp+arg_4+3] cl +
shl [ebp+var_4] cl +
cmp byte ptr [ebp+arg_4+3] 0 +
jg loc_10478DD  +
movzx ebx byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl ebx 8 +
or ebx ecx +
movsx ecx byte ptr [ebp+arg_4+3] +
neg ecx  +
shl ebx cl +
or [ebp+var_4] ebx +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_4+3] 10h +
jmp loc_10478DD  +
xor eax eax +
mov dword ptr [edx+2EBCh] 1 +
add esi eax +
jmp loc_1047935  +
test bl bl +
jz loc_1047932  +
mov esi [ebp+var_4] +
movzx eax bl +
push 20h  +
pop ecx  +
sub ecx eax +
shr esi cl +
cmp edi [ebp+var_C] +
jnb loc_10479BD  +
sub byte ptr [ebp+arg_4+3] bl +
mov ecx eax +
shl [ebp+var_4] cl +
cmp byte ptr [ebp+arg_4+3] 0 +
jg loc_1047926  +
movzx eax byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_4+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_4+3] 10h +
mov eax [ebp+var_14] +
add esi ds:dword_100A350[eax*4] +
jmp loc_1047935  +
xor esi esi +
inc esi  +
mov eax [edx+10h] +
mov [edx+14h] eax +
mov eax [edx+0Ch] +
mov [edx+10h] eax +
jmp loc_1047955  +
movsx ecx al +
lea ecx [edx+ecx*4+0Ch] +
mov esi [ecx] +
test al al +
jz loc_1047958  +
mov eax [edx+0Ch] +
mov [ecx] eax +
mov [edx+0Ch] esi +
mov ecx [ebp+arg_0] +
add [ebp+var_8] 2 +
mov ebx ecx +
sub ebx esi +
mov esi [ebp+var_10] +
mov eax ebx +
and eax [edx+8] +
cmp ecx 101h +
mov al [eax+esi] +
mov [esi+ecx] al +
jge loc_1047982  +
mov esi [edx+4] +
add esi [ebp+var_10] +
mov [esi+ecx] al +
inc ecx  +
inc ebx  +
dec [ebp+var_8]  +
cmp [ebp+var_8] 0 +
jg loc_1047963  +
mov bl byte ptr [ebp+arg_4+3] +
mov [ebp+arg_0] ecx +
mov ecx [ebp+arg_0] +
cmp ecx [ebp+var_18] +
mov esi [ebp+var_4] +
jl loc_1047634  +
mov [edx+2EB4h] bl +
mov [edx+2EB0h] esi +
mov [edx+2B04h] edi +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_10479B6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov edx [ebp+arg_0] +
mov al [edx+2EB4h] +
mov ecx [ebp+arg_8] +
mov byte ptr [ebp+arg_0+3] al +
mov eax [edx+2EB0h] +
mov [ebp+var_4] eax +
mov eax [edx+2B08h] +
mov [ebp+var_8] eax +
mov eax [edx] +
push ebx  +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
add ecx eax +
cmp eax ecx +
push esi  +
push edi  +
mov edi [edx+2B04h] +
mov [ebp+var_14] ecx +
jge loc_1047D6C  +
mov eax [ebp+var_4] +
xor ecx ecx +
shr eax 16h +
inc ecx  +
cmp eax 400h +
jnb loc_1047A25  +
movsx eax word ptr [edx+eax*2+18h] +
jmp loc_1047A2D  +
mov [edx+2EBCh] ecx +
xor eax eax +
test eax eax +
jge loc_1047A78  +
mov esi 200000h +
mov ebx [ebp+var_4] +
neg eax  +
test esi ebx +
jz loc_1047A55  +
lea ebx [eax+eax+1] +
cmp ebx 0A80h +
jnb loc_1047A6A  +
movsx eax word ptr [edx+eax*4+0E3Eh] +
jmp loc_1047A72  +
lea ebx [eax+eax] +
cmp ebx 0A80h +
jnb loc_1047A6A  +
movsx eax word ptr [edx+eax*4+0E3Ch] +
jmp loc_1047A72  +
mov [edx+2EBCh] ecx +
xor eax eax +
shr esi 1 +
test eax eax +
jl loc_1047A36  +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047AC2  +
cmp edi [ebp+var_8] +
jnb loc_1047D99  +
mov cl [eax+edx+0A18h] +
shl [ebp+var_4] cl +
mov cl byte ptr [ebp+arg_0+3] +
sub cl [eax+edx+0A18h] +
mov byte ptr [ebp+arg_0+3] cl +
test cl cl +
jg loc_1047AC2  +
movzx esi byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl esi 8 +
or esi ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
neg ecx  +
shl esi cl +
or [ebp+var_4] esi +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_0+3] 10h +
mov esi 100h +
sub eax esi +
jns loc_1047ADC  +
mov esi [ebp+arg_4] +
mov ecx [ebp+var_10] +
inc [ebp+arg_4]  +
mov [ecx+esi] al +
jmp loc_1047D60  +
mov ebx eax +
and ebx 7 +
cmp ebx 7 +
jnz loc_1047BB9  +
mov ecx [ebp+var_4] +
shr ecx 18h +
cmp ecx esi +
jnb loc_1047AFE  +
movsx ebx word ptr [edx+ecx*2+818h] +
jmp loc_1047B0A  +
mov dword ptr [edx+2EBCh] 1 +
xor ebx ebx +
mov [ebp+arg_8] ebx +
test ebx ebx +
jge loc_1047B5D  +
mov ecx 800000h +
neg ebx  +
test [ebp+var_4] ecx +
jz loc_1047B33  +
lea esi [ebx+ebx+1] +
cmp esi 3E4h +
jnb loc_1047B48  +
movsx ebx word ptr [edx+ebx*4+233Eh] +
jmp loc_1047B54  +
lea esi [ebx+ebx] +
cmp esi 3E4h +
jnb loc_1047B48  +
movsx ebx word ptr [edx+ebx*4+233Ch] +
jmp loc_1047B54  +
mov dword ptr [edx+2EBCh] 1 +
xor ebx ebx +
shr ecx 1 +
test ebx ebx +
jl loc_1047B16  +
mov [ebp+arg_8] ebx +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047BA9  +
cmp edi [ebp+var_8] +
jnb loc_1047D99  +
mov cl [ebx+edx+0CB8h] +
shl [ebp+var_4] cl +
mov cl byte ptr [ebp+arg_0+3] +
sub cl [ebx+edx+0CB8h] +
mov byte ptr [ebp+arg_0+3] cl +
test cl cl +
jg loc_1047BA6  +
movzx esi byte ptr [edi+1] +
movzx ebx byte ptr [edi] +
shl esi 8 +
movsx ecx cl +
or esi ebx +
neg ecx  +
shl esi cl +
or [ebp+var_4] esi +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_0+3] 10h +
mov ebx [ebp+arg_8] +
add ebx 7 +
cmp dword ptr [edx+2EBCh] 0 +
jnz loc_1047D99  +
sar eax 3 +
cmp al 2 +
jle loc_1047D22  +
cmp al 33h +
jnb loc_1047D99  +
movsx ecx al +
mov al ds:byte_100A318[ecx] +
mov [ebp+var_C] ecx +
mov byte ptr [ebp+arg_8+3] al +
cmp al 3 +
jb loc_1047CB3  +
movzx eax al +
lea esi [eax-3] +
test esi esi +
jz loc_1047C9C  +
mov esi [ebp+var_4] +
push 23h  +
pop ecx  +
sub ecx eax +
shr esi cl +
cmp edi [ebp+var_8] +
jnb loc_1047D99  +
lea ecx [eax-3] +
shl [ebp+var_4] cl +
mov al 3 +
sub al byte ptr [ebp+arg_8+3] +
add byte ptr [ebp+arg_0+3] al +
cmp byte ptr [ebp+arg_0+3] 0 +
jg loc_1047C35  +
movzx eax byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_0+3] 10h +
mov ecx [ebp+var_C] +
mov eax ds:dword_100A350[ecx*4] +
lea esi [eax+esi*8] +
mov eax [ebp+var_4] +
shr eax 19h +
cmp eax 80h +
jnb loc_1047CA0  +
movsx eax byte ptr [eax+edx+0DB4h] +
mov [ebp+arg_8] eax +
cmp edi [ebp+var_8] +
jnb loc_1047D99  +
mov cl [eax+edx+0E34h] +
mov al [eax+edx+0E34h] +
sub byte ptr [ebp+arg_0+3] al +
shl [ebp+var_4] cl +
cmp byte ptr [ebp+arg_0+3] 0 +
jg loc_1047CAE  +
movzx eax byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_0+3] 10h +
jmp loc_1047CAE  +
xor esi esi +
jmp loc_1047C38  +
and [ebp+arg_8] 0 +
mov dword ptr [edx+2EBCh] 1 +
add esi [ebp+arg_8] +
jmp loc_1047D14  +
test al al +
jz loc_1047D0D  +
mov esi [ebp+var_4] +
movzx eax al +
push 20h  +
pop ecx  +
sub ecx eax +
shr esi cl +
cmp edi [ebp+var_8] +
jnb loc_1047D99  +
mov ecx eax +
mov eax [ebp+var_C] +
mov al ds:byte_100A318[eax] +
sub byte ptr [ebp+arg_0+3] al +
shl [ebp+var_4] cl +
cmp byte ptr [ebp+arg_0+3] 0 +
jg loc_1047D01  +
movzx eax byte ptr [edi+1] +
movzx ecx byte ptr [edi] +
shl eax 8 +
or eax ecx +
movsx ecx byte ptr [ebp+arg_0+3] +
neg ecx  +
shl eax cl +
or [ebp+var_4] eax +
inc edi  +
inc edi  +
add byte ptr [ebp+arg_0+3] 10h +
mov eax [ebp+var_C] +
add esi ds:dword_100A350[eax*4] +
jmp loc_1047D14  +
mov esi ds:dword_100A350[ecx*4] +
mov eax [edx+10h] +
mov [edx+14h] eax +
mov eax [edx+0Ch] +
mov [edx+10h] eax +
jmp loc_1047D34  +
movsx ecx al +
lea ecx [edx+ecx*4+0Ch] +
mov esi [ecx] +
test al al +
jz loc_1047D37  +
mov eax [edx+0Ch] +
mov [ecx] eax +
mov [edx+0Ch] esi +
mov ecx [ebp+arg_4] +
sub ecx esi +
and ecx [edx+8] +
mov esi [ebp+var_10] +
inc ebx  +
inc ebx  +
add ecx esi +
mov [ebp+arg_8] ecx +
mov al [ecx] +
mov ecx [ebp+arg_4] +
inc [ebp+arg_4]  +
mov [esi+ecx] al +
mov ecx [ebp+arg_8] +
inc ecx  +
dec ebx  +
mov [ebp+arg_8] ecx +
test ebx ebx +
jg loc_1047D49  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_14] +
jl loc_1047A0E  +
mov cl byte ptr [ebp+arg_0+3] +
mov [edx+2EB4h] cl +
mov ecx [ebp+var_4] +
mov [edx+2EB0h] ecx +
mov ecx [edx+8] +
and ecx eax +
sub eax [ebp+var_14] +
mov [edx+2B04h] edi +
mov [edx+2EC0h] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
or eax 0FFFFFFFFh +
jmp loc_1047D92  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov eax 101h +
cmp esi eax +
jge loc_1047DF4  +
sub eax esi +
cmp eax [ebp+arg_8] +
jl loc_1047DC2  +
mov eax [ebp+arg_8] +
push eax  +
push esi  +
call sub_10475F6  +
cmp eax 0FFFFFFFFh +
jnz loc_1047DDC  +
mov dword ptr [edx+2EBCh] 1 +
or eax eax +
jmp loc_1047DFE  +
sub esi eax +
add [ebp+arg_8] esi +
cmp [ebp+arg_8] 0 +
mov esi eax +
mov [edx+2EC0h] eax +
jg loc_1047DF4  +
mov eax [ebp+arg_8] +
jmp loc_1047DFE  +
push [ebp+arg_8]  +
push esi  +
push edx  +
call sub_10479C7  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+2B0Ch] +
test eax eax +
jz loc_1047E4E  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push eax  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+2EC4h] 0 +
jz loc_1047E4E  +
cmp dword ptr [esi+2ECCh] 8000h +
jnb loc_1047E4E  +
push [ebp+arg_4]  +
push dword ptr [esi+2B0Ch]  +
push esi  +
call sub_10469C9  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2E8h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_2DC] eax +
xor esi esi +
push 4  +
push ebx  +
call sub_1046E1D  +
mov byte ptr [ebp+esi+var_1C] al +
inc esi  +
cmp esi 14h +
jl loc_1047E7C  +
cmp [ebx+2EBCh] edi +
jz loc_1047E9D  +
xor eax eax +
jmp loc_104812C  +
lea eax [ebp+var_D8] +
push eax  +
lea eax [ebp+var_2D8] +
push eax  +
push 8  +
lea eax [ebp+var_1C] +
push eax  +
push 14h  +
push ebx  +
call sub_104825B  +
cmp [ebp+arg_0] edi +
jle loc_1048121  +
mov eax [ebx+2EB0h] +
xor ecx ecx +
shr eax 18h +
inc ecx  +
cmp eax 100h +
jnb loc_1047EDF  +
movzx esi word ptr [ebp+eax*2+var_2D8] +
jmp loc_1047EE7  +
mov [ebx+2EBCh] ecx +
xor esi esi +
test si si +
jge loc_1047F33  +
mov edx 800000h +
neg esi  +
movzx eax si +
cwde   +
test [ebx+2EB0h] edx +
jz loc_1047F12  +
lea esi [eax+eax+1] +
cmp esi 5Eh +
jnb loc_1047F24  +
movzx esi word ptr [ebp+eax*4+var_D8+2] +
jmp loc_1047F2C  +
lea esi [eax+eax] +
cmp esi 5Eh +
jnb loc_1047F24  +
movzx esi word ptr [ebp+eax*4+var_D8] +
jmp loc_1047F2C  +
mov [ebx+2EBCh] ecx +
xor esi esi +
shr edx 1 +
test si si +
jl loc_1047EF1  +
cmp si 18h +
jnb loc_1047F5F  +
test si si +
jl loc_1047F5F  +
cmp dword ptr [ebx+2EBCh] 0 +
jnz loc_1047E96  +
movsx eax si +
movzx eax byte ptr [ebp+eax+var_1C] +
push eax  +
push ebx  +
call sub_1046D65  +
xor ecx ecx +
inc ecx  +
jmp loc_1047F65  +
mov [ebx+2EBCh] ecx +
cmp dword ptr [ebx+2EBCh] 0 +
jnz loc_1047E96  +
cmp si 11h +
jnz loc_1047F88  +
push 4  +
push ebx  +
call sub_1046E1D  +
movzx esi al +
add esi 4 +
jmp loc_1047F9C  +
cmp si 12h +
jnz loc_1047FCC  +
push 5  +
push ebx  +
call sub_1046E1D  +
movzx esi al +
add esi 14h +
lea eax [esi+edi] +
cmp eax [ebp+arg_0] +
jl loc_1047FA9  +
mov esi [ebp+arg_0] +
sub esi edi +
test esi esi +
jle loc_10480F6  +
mov eax [ebp+var_2DC] +
push esi  +
add eax edi +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
add edi esi +
jmp loc_10480F6  +
cmp si 13h +
jnz loc_10480F9  +
push ecx  +
push ebx  +
call sub_1046E1D  +
movzx ecx al +
mov eax [ebp+arg_0] +
add ecx 4 +
lea edx [ecx+edi] +
cmp edx eax +
mov [ebp+var_2E0] ecx +
jl loc_1047FFD  +
sub eax edi +
mov [ebp+var_2E0] eax +
mov ecx eax +
mov eax [ebx+2EB0h] +
xor edx edx +
shr eax 18h +
inc edx  +
cmp eax 100h +
jnb loc_104801A  +
movzx esi word ptr [ebp+eax*2+var_2D8] +
jmp loc_1048022  +
mov [ebx+2EBCh] edx +
xor esi esi +
test si si +
jge loc_1048089  +
mov [ebp+var_2E4] 800000h +
neg esi  +
movzx eax si +
mov [ebp+var_2E8] eax +
mov eax [ebp+var_2E4] +
test [ebx+2EB0h] eax +
movsx eax word ptr [ebp+var_2E8] +
jz loc_1048064  +
lea esi [eax+eax+1] +
cmp esi 5Eh +
jnb loc_1048076  +
movzx esi word ptr [ebp+eax*4+var_D8+2] +
jmp loc_104807E  +
lea esi [eax+eax] +
cmp esi 5Eh +
jnb loc_1048076  +
movzx esi word ptr [ebp+eax*4+var_D8] +
jmp loc_104807E  +
mov [ebx+2EBCh] edx +
xor esi esi +
shr [ebp+var_2E4] 1 +
test si si +
jl loc_1048031  +
cmp si 18h +
jnb loc_10480B8  +
test si si +
jl loc_10480B8  +
cmp dword ptr [ebx+2EBCh] 0 +
jnz loc_1047E96  +
movsx eax si +
movzx eax byte ptr [ebp+eax+var_1C] +
push eax  +
push ebx  +
call sub_1046D65  +
mov ecx [ebp+var_2E0] +
jmp loc_10480BE  +
mov [ebx+2EBCh] edx +
cmp dword ptr [ebx+2EBCh] 0 +
jnz loc_1047E96  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [edi+eax] +
movsx edx si +
sub eax edx +
add eax 11h +
push 11h  +
cdq   +
pop esi  +
idiv  esi +
jmp loc_10480F2  +
dec ecx  +
cmp edi [ebp+arg_0] +
jge loc_10480F6  +
mov eax [ebp+var_2DC] +
mov [eax+edi] dl +
inc edi  +
test ecx ecx +
jg loc_10480E2  +
dec edi  +
jmp loc_1048117  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [edi+eax] +
movsx ecx si +
sub eax ecx +
add eax 11h +
cdq   +
push 11h  +
pop ecx  +
idiv  ecx +
mov eax [ebp+var_2DC] +
mov [eax+edi] dl +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_1047EC2  +
xor eax eax +
cmp [ebx+2EBCh] eax +
setz al  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea esi [ebx+0A18h] +
push esi  +
lea eax [ebx+2B14h] +
push eax  +
push 100h  +
call sub_1047E58  +
test eax eax +
jnz loc_104816E  +
xor eax eax +
jmp loc_10481FF  +
lea eax [ebx+0B18h] +
push eax  +
lea eax [ebx+2C14h] +
push eax  +
movzx eax byte ptr [ebx+2EB5h] +
shl eax 3 +
push eax  +
call sub_1047E58  +
test eax eax +
jz loc_1048167  +
movzx ecx byte ptr [ebx+2EB5h] +
lea ecx ds:100h[ecx*8] +
mov eax 2A0h +
cmp ecx eax +
jge loc_10481A9  +
mov eax ecx +
lea ecx [ebx+0E3Ch] +
push ecx  +
lea ecx [ebx+18h] +
push ecx  +
push 0Ah  +
push esi  +
push eax  +
push ebx  +
call sub_104825B  +
test eax eax +
jz loc_1048167  +
push edi  +
lea edi [ebx+0CB8h] +
push edi  +
lea eax [ebx+2DB4h] +
push eax  +
mov esi 0F9h +
push esi  +
call sub_1047E58  +
test eax eax +
jz loc_10481FE  +
lea eax [ebx+233Ch] +
push eax  +
lea eax [ebx+818h] +
push eax  +
push 8  +
push edi  +
push esi  +
push ebx  +
call sub_104825B  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
lea edi [esi+0E34h] +
push 3  +
push esi  +
call sub_1046E1D  +
mov [edi+ebx] al +
inc ebx  +
cmp ebx 8 +
jl loc_104821D  +
cmp dword ptr [esi+2EBCh] 0 +
jz loc_104823B  +
xor eax eax +
jmp loc_104824F  +
lea eax [esi+0DB4h] +
push eax  +
push edi  +
push esi  +
call sub_1048462  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
push esi  +
push edi  +
push 10h  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_9C] +
stos   +
xor esi esi +
xor ecx ecx +
cmp [ebp+arg_4] esi +
jbe loc_104829A  +
mov eax [ebp+arg_8] +
add eax ecx +
cmp byte ptr [eax] 10h +
ja loc_10482E8  +
movzx eax byte ptr [eax] +
lea eax [ebp+eax*4+var_A0] +
inc dword ptr [eax]  +
inc ecx  +
cmp ecx [ebp+arg_4] +
jb loc_104827E  +
xor edx edx +
inc edx  +
mov [ebp+var_58] esi +
mov eax edx +
mov edi [ebp+eax*4+var_A0] +
push 10h  +
pop ecx  +
sub ecx eax +
shl edi cl +
add edi [ebp+eax*4+var_5C] +
inc eax  +
mov [ebp+eax*4+var_5C] edi +
cmp eax 10h +
jbe loc_10482A2  +
cmp [ebp+var_18] 10000h +
jz loc_10482EF  +
cmp [ebp+var_18] esi +
jnz loc_10482E8  +
mov cl [ebp+arg_C] +
shl edx cl +
add edx edx +
push edx  +
push esi  +
push [ebp+arg_10]  +
call memset  +
xor eax eax +
add esp 0Ch +
inc eax  +
jmp loc_1048453  +
xor eax eax +
jmp loc_1048453  +
movzx esi [ebp+arg_C] +
push ebx  +
mov bl 10h +
sub bl [ebp+arg_C] +
mov eax edx +
mov [ebp+var_10] esi +
cmp esi edx +
jb loc_1048327  +
lea edi [esi-1] +
movzx ecx bl +
lea edx [ebp+eax*4+var_5C] +
shr dword ptr [edx] cl +
xor edx edx +
inc edx  +
mov ecx edi +
shl edx cl +
inc eax  +
dec edi  +
mov [ebp+eax*4+var_A4] edx +
cmp eax esi +
jbe loc_1048305  +
cmp eax 10h +
ja loc_104833F  +
push 10h  +
pop ecx  +
sub ecx eax +
xor edx edx +
inc edx  +
shl edx cl +
inc eax  +
dec ecx  +
mov [ebp+eax*4+var_A4] edx +
cmp eax 10h +
jbe loc_104832C  +
mov eax [ebp+esi*4+var_58] +
movzx ecx bl +
mov ebx [ebp+arg_10] +
shr eax cl +
mov [ebp+var_14] ecx +
cmp eax 10000h +
jz loc_104836F  +
xor edx edx +
inc edx  +
mov ecx esi +
shl edx cl +
sub edx eax +
add edx edx +
push edx  +
lea eax [ebx+eax*2] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ebp+var_8] ecx +
mov [ebp+var_C] eax +
test ecx ecx +
jle loc_104844F  +
mov ecx [ebp+arg_8] +
mov al [eax+ecx] +
test al al +
jz loc_104843F  +
movzx ecx al +
shl ecx 2 +
mov edx [ebp+ecx+var_A0] +
lea esi [ebp+ecx+var_5C] +
mov edi [esi] +
add edx edi +
cmp al [ebp+arg_C] +
ja loc_10483E4  +
mov ecx [ebp+var_10] +
xor eax eax +
inc eax  +
shl eax cl +
cmp edx eax +
ja loc_1048459  +
cmp edi edx +
jnb loc_10483E0  +
mov eax [ebp+var_C] +
lea ebx [ebx+edi*2] +
mov ecx edx +
sub ecx edi +
mov edi ebx +
movzx ebx ax +
mov eax ebx +
shl ebx 10h +
or eax ebx +
mov ebx [ebp+arg_10] +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
mov [esi] edx +
jmp loc_104843F  +
mov ecx [ebp+var_14] +
sub al [ebp+arg_C] +
mov [esi] edx +
mov edx edi +
shr edx cl +
mov ecx [ebp+var_10] +
mov [ebp+var_1] al +
shl edi cl +
lea edx [ebx+edx*2] +
cmp word ptr [edx] 0 +
mov eax [ebp+arg_14] +
jnz loc_1048420  +
mov ecx [ebp+var_8] +
shl ecx 2 +
xor esi esi +
mov [ecx+eax+2] si +
mov [ecx+eax] si +
mov ecx [ebp+var_8] +
neg ecx  +
inc [ebp+var_8]  +
mov [edx] cx +
movsx ecx word ptr [edx] +
shl ecx 2 +
sub eax ecx +
test di di +
jge loc_104842F  +
inc eax  +
inc eax  +
add edi edi +
dec [ebp+var_1]  +
mov edx eax +
jnz loc_10483FB  +
mov ax word ptr [ebp+var_C] +
mov [edx] ax +
mov eax [ebp+var_C] +
inc eax  +
cmp eax [ebp+arg_4] +
mov [ebp+var_C] eax +
jl loc_1048382  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 18h  +
xor eax eax +
jmp loc_1048452  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_104E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_54] eax +
xor eax eax +
push edi  +
movzx edx ax +
push 8  +
mov eax edx +
shl edx 10h +
pop ecx  +
or eax edx +
lea edi [ebp+var_4A] +
push 10h  +
stos   +
mov [ebp+var_58] esi +
xor ecx ecx +
pop edx  +
movzx eax cx +
add eax esi +
cmp [eax] dl +
ja loc_104859E  +
movzx eax byte ptr [eax] +
lea eax [ebp+eax*2-4Ch] +
inc word ptr [eax]  +
inc ecx  +
cmp cx 8 +
jb loc_104849B  +
xor eax eax +
push 0Fh  +
mov [ebp+var_26] ax +
pop ecx  +
mov di word ptr [ebp+eax+var_4A] +
shl di cl +
add di [ebp+eax+var_26] +
dec ecx  +
mov [ebp+eax+var_24] di +
inc eax  +
inc eax  +
dec edx  +
jnz loc_10484C2  +
xor eax eax +
cmp [ebp+var_6] ax +
jnz loc_104858E  +
push 6  +
pop ecx  +
push 7  +
pop edx  +
shr [ebp+eax+var_26] 9 +
xor edi edi +
inc edi  +
shl edi cl +
dec ecx  +
inc eax  +
inc eax  +
dec edx  +
mov [ebp+eax+var_4C] di +
jnz loc_10484EC  +
push 8  +
pop ecx  +
push 9  +
lea eax [ebp+var_3C] +
pop edx  +
xor edi edi +
inc edi  +
shl edi cl +
dec ecx  +
mov [eax] di +
inc eax  +
inc eax  +
dec edx  +
jnz loc_104850B  +
push 80h  +
push edx  +
push [ebp+var_54]  +
call memset  +
add esp 0Ch +
mov byte ptr [ebp+var_50] 0 +
movzx eax byte ptr [ebp+var_50] +
mov al [eax+esi] +
test al al +
jz loc_1048582  +
movzx eax al +
add eax eax +
lea edi [ebp+eax-28h] +
movzx ecx word ptr [edi] +
mov ax [ebp+eax+var_4C] +
add ax cx +
movzx esi ax +
mov eax 80h +
cmp si ax +
ja loc_104859E  +
movzx ecx cx +
cmp cx si +
jnb loc_104857C  +
mov edx esi +
movzx eax cx +
add eax [ebp+var_54] +
sub edx ecx +
movzx ecx dx +
push ecx  +
push [ebp+var_50]  +
push eax  +
call memset  +
add esp 0Ch +
mov [edi] si +
mov esi [ebp+var_58] +
inc byte ptr [ebp+var_50]  +
cmp byte ptr [ebp+var_50] 8 +
jb loc_104852E  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1036539  +
leave   +
retn 0Ch  +
xor eax eax +
jmp loc_104858E  +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
retn   +
***
pop ecx  +
retn   +
***
retn   +
***
push dword ptr [ebp-10h]  +
call sub_10361ED  +
pop ecx  +
retn   +
***
lea ecx [ebp-1Ch] +
jmp loc_100D418  +
***
sbb [esp+eax+4AC0200h] ch +
add dl bl +
stos   +
add al 0 +
retf 4ABh  +
***
mov eax ds +
add al 0 +
mov ds:0B80004D8h al +
fadd  dword ptr [eax+eax] +
retf 4D8h  +
***
retf   +
***
retf   +
***
retn 3F08h  +
***
retf 3F08h  +
***
retn 3F07h  +
***
retn   +
***
retf   +
***
retf 3F0Ah  +
***
