mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_1007B4C  +
dec eax  +
jz loc_1007B43  +
push 57h  +
pop eax  +
jmp loc_1007BBA  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_1007B72  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_1007B9B  +
cmp dword ptr [esi+10h] 0 +
jz loc_1007B9B  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_1007BB8  +
test cl 2 +
jz loc_1007BA9  +
mov esi [esi+10h] +
test esi esi +
jz loc_1007BA9  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_101A000 +
push edi  +
mov edi offset dword_101B30C +
jmp loc_1007C05  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_1007B1D  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_1007BDC  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi off_101A000 +
push edi  +
mov edi offset off_101A000 +
cmp esi edi +
jz loc_1007C51  +
jmp loc_1007C47  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_1007C45  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_1007C29  +
mov off_101A000 edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 0Ah  +
push offset aGetdftracingdi  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
xor esi esi +
push 0Ch  +
pop eax  +
cmp [ebp+arg_0] esi +
jnz loc_1007C8A  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1007CD0  +
mov ecx [ebp+arg_0] +
mov edx offset aSystemrootLogs +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
call sub_101766B  +
push 0Eh  +
mov [ebp+var_24] eax +
cmp eax esi +
pop eax  +
jl loc_1007C84  +
mov ecx [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov edx offset aDefrag +
mov [ebp+var_20] ax +
call sub_1017A2E  +
push 0Fh  +
mov [ebp+var_24] eax +
cmp eax esi +
pop eax  +
jl loc_1007C84  +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 5Ch  +
push offset aDfstoptracing  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
push offset aBuiltindefragt  +
call sub_1014E40  +
mov esi eax +
push 5Eh  +
mov [ebp+var_24] esi +
pop eax  +
test esi esi +
jge loc_1007D1D  +
mov [ebp+var_1E] ax +
jmp loc_1007D21  +
mov [ebp+var_20] ax +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 27h  +
push offset aInitializecom  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
mov ebx [ebp+arg_0] +
xor esi esi +
push 2  +
push esi  +
mov [ebp+ppv] esi +
mov [ebx] esi +
call ds:CoInitializeEx  +
push 2Eh  +
mov [ebp+var_28] eax +
cmp eax esi +
pop eax  +
jge loc_1007D74  +
mov [ebp+var_22] ax +
jmp loc_1007DDB  +
push esi  +
push 3000h  +
push esi  +
push 3  +
push 6  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
mov [ebp+var_24] ax +
mov [ebx] edi +
call ds:CoInitializeSecurity  +
push 3Dh  +
mov [ebp+var_28] eax +
cmp eax esi +
pop eax  +
jl loc_1007D6E  +
mov [ebp+var_24] ax +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push edi  +
push esi  +
push offset rclsid  +
call ds:CoCreateInstance  +
push 47h  +
mov [ebp+var_28] eax +
cmp eax esi +
pop eax  +
jl loc_1007D6E  +
push edi  +
mov [ebp+var_24] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push 49h  +
mov [ebp+var_28] eax +
cmp eax esi +
pop eax  +
jl loc_1007D6E  +
mov [ebp+var_24] ax +
mov eax [ebp+ppv] +
mov edi [ebp+var_28] +
cmp eax esi +
jz loc_1007DEB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 1Bh  +
push offset aEnsuretracingd  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
mov esi [ebp+arg_0] +
xor ebx ebx +
xor eax eax +
mov [ebp+SecurityAttributes.nLength] ebx +
lea edi [ebp+SecurityAttributes.lpSecurityDescriptor] +
stos   +
push 22h  +
stos   +
mov [ebp+var_1C] offset dword_10032B8 +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+hMem] ebx +
pop eax  +
cmp esi ebx +
jnz loc_1007E53  +
mov [ebp+var_40] 80070057h +
mov [ebp+var_3A] ax +
jmp loc_1007F0C  +
push dword ptr [esi]  +
mov [ebp+var_40] ebx +
mov [ebp+var_3C] ax +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_1007E98  +
test al 10h +
jz loc_1007E75  +
mov [ebp+var_40] ebx +
push 2Ah  +
jmp loc_1007F07  +
push dword ptr [esi]  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_1007E8E  +
call sub_1015B6B  +
push 34h  +
mov [ebp+var_40] eax +
pop eax  +
jmp loc_1007E4A  +
push 34h  +
pop eax  +
mov [ebp+var_40] ebx +
mov [ebp+var_3C] ax +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
push 1  +
push offset aOBagBadPAOiciG  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_1007EB6  +
call sub_1015B6B  +
push 3Fh  +
jmp loc_1007E88  +
mov esi [esi] +
push 3Fh  +
pop eax  +
mov [ebp+var_3C] ax +
mov eax [ebp+hMem] +
mov [ebp+SecurityAttributes.lpSecurityDescriptor] eax +
lea eax [ebp+SecurityAttributes] +
push eax  +
push esi  +
mov [ebp+var_40] ebx +
mov [ebp+SecurityAttributes.nLength] 0Ch +
mov [ebp+SecurityAttributes.bInheritHandle] ebx +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_1007F0C  +
call ds:GetLastError  +
cmp eax 0B7h +
jnz loc_1007EF0  +
xor eax eax +
cmp eax ebx +
jle loc_1007EFE  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_40] eax +
push 4Ch  +
jl loc_1007E8B  +
pop eax  +
mov [ebp+var_3C] ax +
push [ebp+hMem]  +
call ds:LocalFree  +
mov esi [ebp+var_40] +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 55h  +
push offset a_realmain  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
xor ebx ebx +
lea eax [ebp+pNumArgs] +
push eax  +
mov [ebp+var_10] offset dword_10032B8 +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+pNumArgs] ebx +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov edi eax +
cmp [ebp+pNumArgs] esi +
jbe loc_1007FA7  +
push offset asc_1001664  +
push dword ptr [edi+esi*4]  +
mov edx offset asc_1001660 +
lea ecx [ebp+var_10] +
call sub_1017996  +
push 61h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1007FDE  +
inc esi  +
mov [ebp+var_30] ax +
cmp esi [ebp+pNumArgs] +
jb loc_1007F7E  +
push ebx  +
push [ebp+var_10]  +
call ds:RegisterApplicationRestart  +
push 63h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1007FDE  +
push offset String  +
mov [ebp+var_30] ax +
call ds:RegisterWindowMessageW  +
mov dword_101B3BC eax +
cmp eax ebx +
jnz loc_1007FE4  +
call sub_1015B6B  +
push 66h  +
mov [ebp+var_34] eax +
pop eax  +
mov [ebp+var_2E] ax +
jmp loc_100800E  +
push 66h  +
pop ecx  +
push 1  +
push eax  +
mov [ebp+var_34] ebx +
mov [ebp+var_30] cx +
call ds:ChangeWindowMessageFilter  +
push [ebp+pNumArgs]  +
push edi  +
call sub_100CBAA  +
push 6Bh  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1007FDE  +
mov [ebp+var_30] ax +
cmp edi ebx +
jz loc_1008019  +
push edi  +
call ds:LocalFree  +
mov esi [ebp+var_34] +
lea ecx [ebp+var_10] +
call sub_1016FE9  +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 69h  +
push offset aDfstarttracing  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
or [ebp+var_10] 0FFFFFFFFh +
xor ebx ebx +
mov [ebp+var_1C] offset dword_10032B8 +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
mov [ebp+hKey] ebx +
mov [ebp+var_8] ebx +
call sub_1007CE7  +
cmp [ebp+hKey] ebx +
jz loc_100808E  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_100808E  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 2001Fh  +
push ebx  +
push ebx  +
push ebx  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
cmp eax ebx +
jle loc_10080BA  +
and eax 0FFFFh +
or eax 80070000h +
push 72h  +
mov [ebp+var_40] eax +
cmp eax ebx +
pop eax  +
jge loc_10080CD  +
mov [ebp+var_3A] ax +
jmp loc_1008236  +
push ebx  +
mov [ebp+var_3C] ax +
lea eax [ebp+var_8] +
push eax  +
push offset ValueName  +
push [ebp+hKey]  +
call sub_1015BCE  +
test eax eax +
jnz loc_1008227  +
cmp [ebp+var_8] ebx +
jnz loc_10080F8  +
push 7Eh  +
pop eax  +
jmp loc_100822F  +
lea eax [ebp+var_1C] +
push eax  +
call sub_1007C59  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 88h +
jl loc_10080C4  +
mov [ebp+var_3C] ax +
lea eax [ebp+var_1C] +
push eax  +
call sub_1007E01  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 8Ah +
jl loc_10080C4  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov edx offset aDefrag_0 +
lea ecx [ebp+var_1C] +
mov [ebp+var_3C] ax +
call sub_1017A2E  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 8Ch +
jl loc_10080C4  +
push 5  +
push [ebp+var_1C]  +
mov [ebp+var_3C] ax +
call sub_1015593  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 8Eh +
jl loc_10080C4  +
push ebx  +
mov [ebp+var_3C] ax +
lea eax [ebp+var_10] +
push eax  +
push 0Ah  +
push [ebp+var_1C]  +
push offset aBuiltindefragt  +
call sub_101579A  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 93h +
jl loc_10080C4  +
push [ebp+var_8]  +
mov esi offset dword_1001430 +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
movs   +
push [ebp+var_10]  +
movs   +
movs   +
mov [ebp+var_3C] ax +
movs   +
call sub_10159E8  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 95h +
jl loc_10080C4  +
push [ebp+var_8]  +
mov esi offset dword_1001440 +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
movs   +
push [ebp+var_10]  +
movs   +
movs   +
mov [ebp+var_3C] ax +
movs   +
call sub_10159E8  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 96h +
jl loc_10080C4  +
push [ebp+var_8]  +
mov esi offset dword_1001450 +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
movs   +
push [ebp+var_10]  +
movs   +
movs   +
mov [ebp+var_3C] ax +
movs   +
call sub_10159E8  +
mov [ebp+var_40] eax +
cmp eax ebx +
mov eax 97h +
jge loc_1008232  +
jmp loc_10080C4  +
mov [ebp+var_8] ebx +
mov eax 85h +
mov [ebp+var_40] ebx +
mov [ebp+var_3C] ax +
cmp [ebp+var_10] 0FFFFFFFFh +
jnz loc_1008241  +
cmp [ebp+var_C] ebx +
jz loc_1008254  +
push [ebp+var_C]  +
push [ebp+var_10]  +
call ds:CloseTrace  +
or [ebp+var_10] 0FFFFFFFFh +
mov [ebp+var_C] ebx +
mov esi [ebp+var_40] +
cmp [ebp+hKey] ebx +
jz loc_100826E  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_100826E  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_C.dwICC] +
mov [ebp+var_C.dwSize] ebx +
stos   +
mov edi [ebp+hInstance] +
mov [ebp+var_4] ebx +
mov hInstance edi +
cmp [ebp+lpCmdLine] ebx +
jnz loc_10082BB  +
mov esi 80070057h +
jmp loc_1008347  +
mov esi offset unk_101B398 +
push esi  +
call sub_1007AF5  +
push offset aMicrosoftDefra  +
mov dword_101B30C offset dword_1001450 +
mov off_101A000 esi +
call sub_1007BC6  +
call sub_100803A  +
push ebx  +
push ebx  +
push 1  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapSetInformation  +
push 1  +
call ds:SetErrorMode  +
lea eax [ebp+var_4] +
push eax  +
call sub_1007D33  +
mov esi eax +
cmp esi ebx +
jl loc_1008347  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C.dwSize] 8 +
mov [ebp+var_C.dwICC] 0C1FFh +
call ds:InitCommonControlsEx  +
test eax eax +
jnz loc_100833F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1008345  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1008345  +
push edi  +
call sub_1007F36  +
mov esi eax +
call sub_1007CE7  +
call sub_1007C14  +
cmp [ebp+var_4] ebx +
jz loc_100835C  +
call ds:CoUninitialize  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
push 208h  +
mov [ebp+String] ax +
xor ebx ebx +
lea eax [ebp-20Eh] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
mov [ebp+dwResult] ebx +
call ds:SetLastError  +
cmp esi ebx +
jnz loc_10083BD  +
xor eax eax +
jmp loc_100841F  +
push 105h  +
lea eax [ebp+String] +
push eax  +
push edi  +
call ds:GetWindowTextW  +
test eax eax +
jz loc_1008407  +
push dword ptr [esi+4]  +
lea eax [ebp+String] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008407  +
lea eax [ebp+dwResult] +
push eax  +
push 3A98h  +
push 2  +
push ebx  +
push ebx  +
push dword ptr [esi]  +
push edi  +
call ds:SendMessageTimeoutW  +
test eax eax +
jnz loc_100840C  +
xor eax eax +
inc eax  +
jmp loc_100841F  +
cmp [ebp+dwResult] 0B11FB11Fh +
jnz loc_100841D  +
mov [esi+8] edi +
jmp loc_10083B9  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+hWnd] esi +
jnz loc_1008449  +
mov eax 80070057h +
jmp loc_1008478  +
push esi  +
call ds:SetLastError  +
push [ebp+lpString]  +
push [ebp+hWnd]  +
call ds:SetWindowTextW  +
test eax eax +
jnz loc_1008476  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1008474  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+12Ch] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100849F  +
xor eax eax +
jmp loc_10084BE  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_10084AD  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi] +
test eax eax +
jz loc_10084B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push esi  +
push edi  +
mov edi ds:RtlAllocateHeap +
mov ebx 88h +
push ebx  +
push 8  +
push dword ptr [eax+18h]  +
mov [ebp+var_8] edx +
mov [ebp+var_4] ecx +
call edi  +
mov esi eax +
test esi esi +
jnz loc_1008511  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push 8  +
push dword ptr [eax+18h]  +
call edi  +
mov esi eax +
test esi esi +
jz loc_100853D  +
mov eax [ebp+var_8] +
push 0  +
push esi  +
push 20h  +
push 1  +
mov [esi+80h] eax +
call ds:RtlCaptureStackBackTrace  +
mov eax [ebp+var_4] +
add esi 84h +
push esi  +
add eax 8 +
push eax  +
call ds:InterlockedPushEntrySList  +
jmp loc_1008547  +
mov eax [ebp+var_4] +
mov dword ptr [eax+4] 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ds:InterlockedPopEntrySList +
push edi  +
lea edi [ecx+8] +
jmp loc_100857A  +
add eax 0FFFFFF7Ch +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
push edi  +
call esi  +
test eax eax +
jnz loc_1008560  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 0C1h  +
push offset aFindexistingde  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov ebx [ebp+arg_4] +
xor esi esi +
xor eax eax +
mov [ebp+lParam] esi +
lea edi [ebp+var_8] +
stos   +
stos   +
cmp ebx esi +
jz loc_10085BD  +
mov [ebx] esi +
mov edi [ebp+arg_0] +
mov eax 0C9h +
cmp edi esi +
jnz loc_10085D9  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_100867B  +
mov [ebp+var_2C] ax +
mov eax 0CAh +
cmp ebx esi +
jz loc_10085C9  +
push offset String  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] ax +
call ds:RegisterWindowMessageW  +
cmp eax esi +
jnz loc_100860B  +
call sub_1015B6B  +
mov [ebp+var_30] eax +
mov eax 0CDh +
jmp loc_10085D0  +
mov [ebp+lParam] eax +
lea eax [ebp+lParam] +
push eax  +
mov ecx 0CDh +
push offset EnumFunc  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] cx +
mov [ebp+var_8] edi +
mov [ebp+var_4] esi +
call ds:EnumWindows  +
test eax eax +
jnz loc_1008658  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1008647  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax esi +
mov [ebp+var_30] eax +
jge loc_1008658  +
mov eax 0D6h +
jmp loc_10085D0  +
mov eax [ebp+var_4] +
cmp eax esi +
jnz loc_100866D  +
mov [ebp+var_30] 1 +
mov eax 0DBh +
jmp loc_1008677  +
mov [ebx] eax +
mov [ebp+var_30] esi +
mov eax 0DFh +
mov [ebp+var_2C] ax +
mov esi [ebp+var_30] +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 27Ch +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push 1  +
push 126h  +
push offset aBuildboldfont  +
lea ecx [ebp+var_27C] +
call sub_10148A2  +
push 1F4h  +
xor ebx ebx +
lea eax [ebp+var_254] +
push ebx  +
push eax  +
call memset  +
push 58h  +
lea eax [ebp+var_60.lfWidth] +
push ebx  +
push eax  +
mov [ebp+var_60.lfHeight] ebx +
call memset  +
add esp 18h +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push ebx  +
push 29h  +
mov [ebp+pvParam] 1F8h +
call ds:SystemParametersInfoW  +
test eax eax +
jnz loc_1008719  +
call sub_1015B6B  +
mov [ebp+var_27C] eax +
mov eax 12Fh +
jmp loc_1008760  +
push edi  +
mov eax 12Fh +
push 17h  +
mov [ebp+var_278] ax +
pop ecx  +
lea eax [ebp+var_60] +
lea esi [ebp+var_C0] +
lea edi [ebp+var_60] +
movs   +
push eax  +
mov [ebp+var_27C] ebx +
mov [ebp+var_60.lfWeight] 2BCh +
call ds:CreateFontIndirectW  +
pop edi  +
cmp eax ebx +
jnz loc_1008769  +
call sub_1015B6B  +
mov [ebp+var_27C] eax +
mov eax 136h +
mov [ebp+var_276] ax +
jmp loc_1008780  +
mov ecx 136h +
mov [ebp+var_27C] ebx +
mov [ebp+var_278] cx +
mov wParam eax +
mov esi [ebp+var_27C] +
lea ecx [ebp+var_27C] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 16Eh  +
push offset aGetdayfrombitm  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov edx [ebp+arg_4] +
mov eax 171h +
test edx edx +
jnz loc_10087DB  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1008815  +
mov [ebp+var_20] ax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10087ED  +
lea ecx [eax-1] +
test ecx eax +
jz loc_10087FB  +
mov [ebp+var_24] 8000FFFFh +
mov eax 173h +
jmp loc_10087D5  +
and [ebp+var_24] 0 +
mov ecx 173h +
mov [ebp+var_20] cx +
xor ecx ecx +
jmp loc_100880F  +
shr eax 1 +
inc ecx  +
test eax eax +
ja loc_100880C  +
mov [edx] ecx +
push esi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 18Ah  +
push offset aSafegetwindowt  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov esi 0FFFFh +
mov eax 18Eh +
cmp [ebp+nMaxCount] esi +
jbe loc_1008866  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_10088B9  +
cmp [ebp+hWnd] 0 +
mov [ebp+var_20] ax +
mov eax 18Fh +
jz loc_1008859  +
and [ebp+var_24] 0 +
push 0  +
mov [ebp+var_20] ax +
call ds:SetLastError  +
push [ebp+nMaxCount]  +
push [ebp+lpString]  +
push [ebp+hWnd]  +
call ds:GetWindowTextW  +
test eax eax +
jnz loc_10088B9  +
call ds:GetLastError  +
test eax eax +
jle loc_10088A9  +
and eax esi +
or eax 80070000h +
mov [ebp+var_24] eax +
test eax eax +
mov eax 195h +
jl loc_1008860  +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 2E0h  +
push offset aCdefraguiFinal  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
add eax 4 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
push 1  +
push 31Ch  +
push offset aCdefragui_init  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
push 0  +
call ds:GetDC  +
mov esi ds:GetDeviceCaps +
mov edi eax +
push 58h  +
push edi  +
call esi  +
mov [ebp+var_4] eax +
fild  [ebp+var_4] +
push 5Ah  +
push edi  +
fdiv  ds:dbl_10017B0 +
fstp  dbl_101B3C8 +
call esi  +
mov [ebp+var_4] eax +
fild  [ebp+var_4] +
push edi  +
push 0  +
fdiv  ds:dbl_10017B0 +
fstp  dbl_101B3D0 +
call ds:ReleaseDC  +
call sub_1008694  +
mov [ebp+var_28] eax +
test eax eax +
jge loc_100898C  +
mov ecx 326h +
mov [ebp+var_22] cx +
jmp loc_10089AD  +
push [ebp+arg_0]  +
mov eax 326h +
mov [ebp+var_24] ax +
call sub_100F290  +
mov [ebp+var_28] eax +
mov ecx 329h +
test eax eax +
jl loc_1008986  +
mov [ebp+var_24] cx +
lea ecx [ebp+var_28] +
mov esi eax +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 331h  +
push offset aCdefragui_rese  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
mov ecx [eax+2Ch] +
mov esi [ebp+var_24] +
mov [eax+40h] ecx +
mov ecx [eax+30h] +
mov [eax+44h] ecx +
mov ecx [eax+28h] +
mov [eax+3Ch] ecx +
mov ecx [eax+34h] +
mov [eax+48h] ecx +
mov ecx [eax+38h] +
mov [eax+4Ch] ecx +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 36Eh  +
push offset aCdefraguiShutd  +
lea ecx [ebp-24h] +
call sub_10148A2  +
mov esi [ebp+8] +
mov eax [esi+0B0h] +
mov ebx ds:WaitForSingleObject +
mov [esi+100h] edi +
test eax eax +
jz loc_1008A71  +
push 0FFFFFFFFh  +
push eax  +
mov [esi+0BCh] edi +
call ebx  +
push dword ptr [esi+0B0h]  +
call ds:CloseHandle  +
and dword ptr [esi+0B0h] 0 +
mov eax [esi+0B4h] +
test eax eax +
jz loc_1008A99  +
push 0FFFFFFFFh  +
push eax  +
mov [esi+0BCh] edi +
call ebx  +
push dword ptr [esi+0B4h]  +
call ds:CloseHandle  +
and dword ptr [esi+0B4h] 0 +
lea eax [esi+0B8h] +
mov [ebp+8] eax +
mov eax [eax] +
test eax eax +
jz loc_1008AC1  +
push 0FFFFFFFFh  +
push eax  +
mov [esi+12Ch] edi +
call ebx  +
mov esi [ebp+8] +
push dword ptr [esi]  +
call ds:CloseHandle  +
and dword ptr [esi] 0 +
mov esi [ebp-24h] +
lea ecx [ebp-24h] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 6A8h  +
push offset aCdefragui_task  +
lea ecx [ebp-24h] +
call sub_10148A2  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1008B0E  +
push 1  +
push 1  +
push 473h  +
push dword ptr [ebp+8]  +
call ds:SendMessageW  +
push esi  +
mov esi [ebp-24h] +
lea ecx [ebp-24h] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 6C3h  +
push offset aCdefragui_show  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
xor ebx ebx +
push 5Ch  +
lea eax [ebp+var_90] +
push ebx  +
push eax  +
mov [ebp+var_94] ebx +
call memset  +
xor eax eax +
lea edi [ebp+var_8] +
mov [ebp+var_C] ebx +
stos   +
mov edi [ebp+arg_8] +
add esp 0Ch +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
cmp edi ebx +
jz loc_1008C42  +
mov eax 6CCh +
mov [ebp+var_30] ax +
mov [edi] ebx +
mov eax hInstance +
mov [ebp+var_8C] eax +
lea eax [ebp+var_C] +
mov [ebp+var_6C] eax +
mov eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
and eax offset loc_1008ADA +
mov [ebp+var_40] eax +
push ebx  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_94] +
push eax  +
mov [ebp+var_34] ebx +
mov [ebp+var_94] 60h +
mov [ebp+var_90] ebx +
mov [ebp+var_88] 1001h +
mov [ebp+var_84] 8 +
mov [ebp+var_80] 6Ah +
mov [ebp+var_7C] 0FFFFh +
mov [ebp+var_78] 7Ch +
mov [ebp+var_74] 69h +
mov [ebp+var_C] esi +
mov [ebp+var_8] 7Dh +
mov [ebp+var_70] esi +
mov [ebp+var_68] esi +
mov [ebp+var_3C] ebx +
call ds:COMCTL32_345  +
cmp eax ebx +
mov [ebp+var_34] eax +
mov ecx 6EDh +
jl loc_1008C4F  +
mov [ebp+var_30] cx +
xor ecx ecx +
cmp [ebp+var_4] esi +
setz cl  +
mov [edi] ecx +
lea ecx [ebp+var_34] +
mov esi eax +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov eax 80070057h +
mov [ebp+var_34] eax +
mov ecx 6CCh +
mov [ebp+var_2E] cx +
jmp loc_1008C2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 920h  +
push offset aCdefragui_gett  +
lea ecx [ebp+var_44] +
call sub_10148A2  +
xor eax eax +
xor ebx ebx +
lea edi [ebp+FileTime.dwHighDateTime] +
mov [ebp+FileTime.dwLowDateTime] ebx +
stos   +
lea edi [ebp+var_C] +
mov word ptr [ebp+var_20] ax +
mov [ebp+var_10] ebx +
stos   +
lea edi [ebp+var_20+2] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+arg_18] +
mov eax 926h +
cmp edi ebx +
jnz loc_1008CB0  +
mov [ebp+var_44] 80070057h +
mov [ebp+var_3E] ax +
jmp loc_1008D1D  +
mov [ebp+var_40] ax +
lea eax [ebp+FileTime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
mov [ebp+var_44] ebx +
call ds:SystemTimeToFileTime  +
test eax eax +
mov eax 928h +
jnz loc_1008CD7  +
mov [ebp+var_44] 80004005h +
jmp loc_1008CAA  +
mov ecx [ebp+FileTime.dwLowDateTime] +
mov esi [ebp+FileTime.dwHighDateTime] +
mov [ebp+var_40] ax +
mov eax [ebp+arg_14] +
mov edx 989680h +
mul  edx +
add ecx eax +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+FileTime] +
adc esi edx +
push eax  +
mov [ebp+var_44] ebx +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov [ebp+FileTime.dwHighDateTime] esi +
call ds:FileTimeToSystemTime  +
test eax eax +
mov eax 933h +
jz loc_1008CCE  +
lea esi [ebp+var_20] +
movs   +
movs   +
movs   +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ax +
movs   +
mov esi [ebp+var_44] +
lea ecx [ebp+var_44] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 99Bh  +
push offset aCdefragui_seti  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
xor ebx ebx +
mov eax 9A2h +
cmp [ebp+arg_8] ebx +
jnz loc_1008D73  +
mov [ebp+var_28] 80070057h +
mov [ebp+var_22] ax +
jmp loc_1008ED8  +
mov [ebp+var_24] ax +
mov eax 9A3h +
cmp [ebp+arg_C] ebx +
jbe loc_1008D63  +
mov esi [ebp+arg_0] +
mov [ebp+var_24] ax +
mov eax [ebp+arg_4] +
mov [esi+0F8h] eax +
lea eax [esi+60h] +
push eax  +
mov [ebp+var_28] ebx +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov [ebp+arg_0] edi +
cmp [ebp+arg_C] edi +
jbe loc_1008E8D  +
mov ebx ds:_wcsicmp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov edi [eax+ecx*4] +
push offset aRemove  +
push edi  +
mov [ebp+arg_4] edi +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008DD9  +
mov dword ptr [esi+54h] 1 +
jmp loc_1008E7C  +
push offset aSchedule  +
push edi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008DF6  +
mov dword ptr [esi+0FCh] 1 +
jmp loc_1008E7C  +
push offset aAnalyze  +
push edi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008E10  +
mov dword ptr [esi+0FCh] 3 +
jmp loc_1008E7C  +
push offset aDefrag_1  +
push edi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008E2A  +
mov dword ptr [esi+0FCh] 2 +
jmp loc_1008E7C  +
push offset aCancel  +
push edi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008E44  +
mov dword ptr [esi+0FCh] 4 +
jmp loc_1008E7C  +
mov eax [esi+0FCh] +
cmp eax 4 +
jz loc_1008E59  +
cmp eax 2 +
jz loc_1008E59  +
cmp eax 3 +
jnz loc_1008E7C  +
mov edi [esi+58h] +
jmp loc_1008E78  +
push dword ptr [edi]  +
push [ebp+arg_4]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008E75  +
inc eax  +
mov [esi+80h] eax +
mov [edi+14h] eax +
mov edi [edi+48h] +
test edi edi +
jnz loc_1008E5E  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_C] +
jb loc_1008DB3  +
xor ebx ebx +
cmp [esi+0FCh] ebx +
jz loc_1008ECF  +
mov eax dword_101B3C4 +
cmp eax 2 +
jz loc_1008ECF  +
cmp eax 1 +
jz loc_1008ECF  +
push 471h  +
push 470h  +
push 46Fh  +
push hInstance  +
push ebx  +
call sub_1017D8F  +
mov eax 9DFh +
mov [ebp+var_28] 80070005h +
mov [ebp+var_22] ax +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 9F8h  +
push offset aCdefragui_sets  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov esi [ebp+var_24] +
mov [eax+12Ch] ecx +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008551  +
test [ebp+arg_0] 1 +
jz loc_1008F4B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push 1  +
push 6Ah  +
push offset aGetuiuseracces  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
xor ebx ebx +
mov [ebp+TokenHandle] ebx +
cmp [ebp+arg_0] ebx +
jz loc_1008FB5  +
mov eax [ebp+arg_0] +
push 4  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1008F82  +
push 70h  +
pop eax  +
mov [ebp+var_24] ax +
lea eax [ebp+TokenHandle] +
push eax  +
push 0Ah  +
mov [ebp+var_28] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1008FC5  +
call sub_1015B6B  +
mov [ebp+var_28] eax +
push 72h  +
jmp loc_1008FBE  +
mov [ebp+var_28] 80070057h +
push 70h  +
pop eax  +
mov [ebp+var_22] ax +
jmp loc_1008FE8  +
push 72h  +
pop eax  +
push [ebp+arg_0]  +
mov [ebp+var_28] ebx +
push [ebp+TokenHandle]  +
mov [ebp+var_24] ax +
call sub_1015CDA  +
push 74h  +
mov [ebp+var_28] eax +
cmp eax ebx +
pop eax  +
jl loc_1008FBF  +
mov [ebp+var_24] ax +
mov esi [ebp+var_28] +
cmp [ebp+TokenHandle] ebx +
jz loc_1009002  +
cmp [ebp+TokenHandle] 0FFFFFFFFh +
jz loc_1009002  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
mov [ebp+TokenHandle] ebx +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E4h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
push 1  +
push 153h  +
push offset aGetdatetimestr  +
lea ecx [ebp+var_C8] +
call sub_10148A2  +
xor eax eax +
push 4Eh  +
mov [ebp+DateStr] ax +
xor esi esi +
lea eax [ebp-52h] +
push esi  +
push eax  +
call memset  +
xor eax eax +
push 4Eh  +
mov [ebp+TimeStr] ax +
lea eax [ebp-0A2h] +
push esi  +
push eax  +
call memset  +
xor eax eax +
mov [ebp+Time.wYear] ax +
lea edi [ebp+Time.wMonth] +
stos   +
stos   +
stos   +
add esp 18h +
stos   +
mov [ebp+var_D4] offset dword_10032B8 +
mov [ebp+var_D0] esi +
mov [ebp+var_CC] esi +
mov eax 159h +
cmp ebx esi +
jnz loc_10090C1  +
mov [ebp+var_C8] 80070057h +
mov [ebp+var_C2] ax +
jmp loc_10091D2  +
fld  [ebp+arg_0] +
mov [ebp+var_C4] ax +
lea eax [ebp+Time] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+0FCh+var_FC] +
mov [ebp+var_C8] esi +
call ds:VariantTimeToSystemTime  +
test eax eax +
mov eax 15Bh +
jnz loc_10090F8  +
mov [ebp+var_C8] 80004005h +
jmp loc_10090B5  +
push 28h  +
mov [ebp+var_C4] ax +
lea eax [ebp+DateStr] +
push eax  +
push esi  +
lea eax [ebp+Time] +
push eax  +
push 40h  +
mov edi 400h +
push edi  +
mov [ebp+var_C8] esi +
call ds:GetDateFormatW  +
test eax eax +
jnz loc_100913A  +
call sub_1015B6B  +
mov [ebp+var_C8] eax +
mov eax 15Dh +
jmp loc_10090B5  +
push 28h  +
mov eax 15Dh +
mov [ebp+var_C4] ax +
lea eax [ebp+TimeStr] +
push eax  +
push esi  +
lea eax [ebp+Time] +
push eax  +
push 2  +
push edi  +
mov [ebp+var_C8] esi +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_100917F  +
call sub_1015B6B  +
mov [ebp+var_C8] eax +
mov eax 15Eh +
jmp loc_10090B5  +
mov eax 15Eh +
mov [ebp+var_C4] ax +
lea eax [ebp+TimeStr] +
push eax  +
push offset asc_10018D8  +
lea edx [ebp+DateStr] +
lea ecx [ebp+var_D4] +
mov [ebp+var_C8] esi +
call sub_1017ADB  +
mov [ebp+var_C8] eax +
cmp eax esi +
mov eax 160h +
jl loc_10090B5  +
mov edx ebx +
lea ecx [ebp+var_D4] +
mov [ebp+var_C4] ax +
call sub_10170B0  +
mov esi [ebp+var_C8] +
lea ecx [ebp+var_D4] +
call sub_1016FE9  +
lea ecx [ebp+var_C8] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push 1  +
push 1BCh  +
push offset aSafesetwindowt  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov ebx [ebp+arg_4] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
mov [ebp+lpString] offset dword_10032B8 +
test ebx ebx +
jnz loc_100924F  +
mov [ebp+var_30] 80070057h +
mov eax 1C1h +
mov [ebp+var_2A] ax +
jmp loc_1009306  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1009254  +
and [ebp+var_30] 0 +
sub eax edx +
mov ecx 1C9h +
sar eax 1 +
mov [ebp+var_2C] cx +
lea edx [eax+1] +
lea ecx [ebp+lpString] +
call sub_10171A6  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 1CAh +
jl loc_1009246  +
mov [ebp+var_2C] ax +
mov eax [ebp+var_4] +
inc eax  +
push eax  +
push [ebp+lpString]  +
push [ebp+hWnd]  +
call sub_100882D  +
mov edx [ebp+var_4] +
lea ecx [ebp+lpString] +
mov esi eax +
call sub_1017024  +
test esi esi +
jl loc_10092E9  +
mov eax [ebp+lpString] +
mov ecx ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10092D6  +
test dx dx +
jz loc_10092D2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10092D6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10092B0  +
xor eax eax +
jmp loc_10092DB  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_10092E9  +
and [ebp+var_30] eax +
mov eax 1D8h +
jmp loc_1009302  +
push ebx  +
push [ebp+hWnd]  +
call sub_1008435  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 1DCh +
jl loc_1009246  +
mov [ebp+var_2C] ax +
mov esi [ebp+var_30] +
lea ecx [ebp+lpString] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 240h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push 1EFh  +
push offset aGetuniquevolum  +
lea ecx [ebp+var_234] +
call sub_10148A2  +
xor eax eax +
xor edi edi +
push 208h  +
mov word ptr [ebp+var_210] ax +
lea eax [ebp+var_210+2] +
push edi  +
push eax  +
mov [ebp+var_240] offset dword_10032B8 +
mov [ebp+var_23C] edi +
mov [ebp+var_238] edi +
call memset  +
add esp 0Ch +
mov eax 1F4h +
cmp esi edi +
jnz loc_10093B0  +
mov [ebp+var_234] 80070057h +
mov [ebp+var_22E] ax +
jmp loc_100949D  +
mov [ebp+var_230] ax +
mov eax 1F5h +
cmp ebx edi +
jz loc_100939A  +
mov [ebp+var_230] ax +
inc eax  +
cmp [ebp+arg_8] edi +
jbe loc_100939A  +
mov edx esi +
lea ecx [ebp+var_240] +
mov [ebp+var_234] edi +
mov [ebp+var_230] ax +
call sub_1017AA3  +
mov [ebp+var_234] eax +
cmp eax edi +
mov eax 1F9h +
jl loc_10093A4  +
mov [ebp+var_230] ax +
inc eax  +
cmp [ebp+var_23C] edi +
jz loc_100939A  +
push 5Ch  +
pop edx  +
lea ecx [ebp+var_240] +
mov [ebp+var_234] edi +
mov [ebp+var_230] ax +
call sub_1017A4D  +
mov [ebp+var_234] eax +
cmp eax edi +
mov eax 1FDh +
jl loc_10093A4  +
mov esi ds:GetVolumeNameForVolumeMountPointW +
mov [ebp+var_230] ax +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
push [ebp+var_240]  +
call esi  +
test eax eax +
mov eax 204h +
jnz loc_100946D  +
mov [ebp+var_234] 80004005h +
jmp loc_10093A4  +
push [ebp+arg_8]  +
mov [ebp+var_230] ax +
push ebx  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_234] edi +
call esi  +
test eax eax +
mov eax 209h +
jz loc_100945E  +
mov [ebp+var_234] edi +
mov [ebp+var_230] ax +
mov esi [ebp+var_234] +
lea ecx [ebp+var_240] +
call sub_1016FE9  +
lea ecx [ebp+var_234] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 2C8h  +
push offset aCdefraguiFin_0  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
push [ebp+arg_0]  +
call sub_1008910  +
mov esi eax +
mov [ebp+var_24] esi +
mov eax 2CAh +
test esi esi +
jge loc_100950A  +
mov [ebp+var_1E] ax +
jmp loc_100950E  +
mov [ebp+var_20] ax +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 396h  +
push offset aCdefragui_conn  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
mov ebx [ebp+arg_0] +
xor eax eax +
inc eax  +
mov word ptr [ebp+var_14] ax +
xor eax eax +
lea edi [ebp+var_14+2] +
stos   +
stos   +
stos   +
add ebx 20h +
xor esi esi +
stos   +
mov eax [ebx] +
mov [ebp+ppv] esi +
cmp eax esi +
jz loc_100956B  +
mov [ebx] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002A18  +
push 3  +
push esi  +
push offset stru_1002C28  +
call ds:CoCreateInstance  +
mov [ebp+var_38] eax +
cmp eax esi +
mov eax 39Ch +
jge loc_1009594  +
mov [ebp+var_32] ax +
jmp loc_10095EA  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_14] +
movs   +
movs   +
mov [ebp+var_34] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
mov [ebp+var_38] eax +
test eax eax +
mov eax 39Dh +
jl loc_100958E  +
push [ebp+ppv]  +
mov [ebp+var_34] ax +
push ebx  +
call sub_100848E  +
mov eax [ebp+ppv] +
mov esi [ebp+var_38] +
test eax eax +
jz loc_10095FA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push ebx  +
push esi  +
push edi  +
push 1  +
push 3ABh  +
push offset aCdefragui_getw  +
lea ecx [ebp+var_5C] +
call sub_10148A2  +
xor ebx ebx +
mov eax offset dword_10032B8 +
mov [ebp+var_28] eax +
mov [ebp+var_1C] eax +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_4] ebx +
call ds:VariantInit  +
mov edx offset asc_100142C +
lea ecx [ebp+var_28] +
call sub_1017AA3  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3B7h +
jge loc_1009680  +
mov [ebp+var_56] ax +
jmp loc_100974C  +
lea edx [ebp+var_C] +
lea ecx [ebp+var_28] +
mov [ebp+var_58] ax +
call sub_10170FB  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3B8h +
jl loc_1009677  +
mov edx offset aMicrosoftWindo +
lea ecx [ebp+var_1C] +
mov [ebp+var_58] ax +
call sub_1017AA3  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3B9h +
jl loc_1009677  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_1C] +
mov [ebp+var_58] ax +
call sub_10170FB  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3BAh +
jl loc_1009677  +
mov [ebp+var_58] ax +
mov eax [ebp+arg_0] +
mov eax [eax+20h] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3BCh +
jl loc_1009677  +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_4]  +
mov [ebp+var_58] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
cmp eax ebx +
mov [ebp+var_5C] eax +
jge loc_1009741  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
sub esp 10h +
mov edi esp +
push [ebp+var_4]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_5C] eax +
cmp eax ebx +
mov eax 3C0h +
jl loc_1009677  +
mov [ebp+var_58] ax +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_4] +
mov [ebp+var_8] ebx +
mov [ecx] eax +
push [ebp+var_C]  +
mov esi ds:SysFreeString +
call esi  +
push [ebp+var_4]  +
mov [ebp+var_C] ebx +
call esi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] ebx +
call ds:VariantClear  +
mov esi [ebp+var_5C] +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
lea ecx [ebp+var_28] +
call sub_1016FE9  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_100978C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1009799  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_5C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
push edi  +
push 1  +
push 3D9h  +
push offset aCdefragui_ge_0  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
mov edi [ebp+arg_8] +
xor esi esi +
mov [ebp+var_8] esi +
mov [ebp+var_14] offset dword_10032B8 +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
cmp edi esi +
jz loc_1009855  +
mov eax 3E0h +
mov edx offset aScheduleddefra +
lea ecx [ebp+var_14] +
mov [edi] esi +
mov [ebp+var_38] esi +
mov [ebp+var_34] ax +
call sub_1017AA3  +
mov [ebp+var_38] eax +
cmp eax esi +
mov eax 3E2h +
jl loc_1009861  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_34] ax +
call sub_10170FB  +
mov [ebp+var_38] eax +
cmp eax esi +
mov eax 3E3h +
jl loc_1009861  +
lea edx [ebp+var_8] +
push edx  +
push [ebp+var_4]  +
mov [ebp+var_34] ax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jge loc_1009867  +
mov eax 3E7h +
mov [ebp+var_38] 1 +
mov [ebp+var_34] ax +
jmp loc_100986F  +
mov [ebp+var_38] 80070057h +
mov eax 3E0h +
mov [ebp+var_32] ax +
jmp loc_100986F  +
mov eax [ebp+var_8] +
mov [ebp+var_8] esi +
mov [edi] eax +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov edi [ebp+var_38] +
lea ecx [ebp+var_14] +
mov [ebp+var_4] esi +
call sub_1016FE9  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1009893  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 3FDh  +
push offset aCdefragui_crea  +
lea ecx [ebp+var_58] +
call sub_10148A2  +
mov esi [ebp+arg_4] +
xor ebx ebx +
mov eax offset dword_10032B8 +
mov [ebp+var_24] eax +
mov [ebp+var_18] eax +
mov [ebp+var_C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov eax 406h +
cmp esi ebx +
jnz loc_1009905  +
mov [ebp+var_58] 80070057h +
mov [ebp+var_52] ax +
jmp loc_10099FB  +
mov [ebp+var_54] ax +
mov eax 407h +
cmp [ebp+arg_8] ebx +
jz loc_10098F5  +
mov [ebp+var_54] ax +
inc eax  +
cmp [ebp+arg_C] ebx +
jz loc_10098F5  +
mov [ebp+var_54] ax +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_58] ebx +
call ds:VariantInit  +
mov edx [ebp+arg_8] +
lea ecx [ebp+var_24] +
call sub_1017AA3  +
mov [ebp+var_58] eax +
cmp eax ebx +
mov eax 40Ch +
jl loc_10098FC  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_24] +
mov [ebp+var_54] ax +
call sub_10170FB  +
mov [ebp+var_58] eax +
cmp eax ebx +
mov eax 40Dh +
jl loc_10098FC  +
mov edx [ebp+arg_C] +
lea ecx [ebp+var_18] +
mov [ebp+var_54] ax +
call sub_1017AA3  +
mov [ebp+var_58] eax +
cmp eax ebx +
mov eax 40Fh +
jl loc_10098FC  +
lea edx [ebp+var_8] +
lea ecx [ebp+var_18] +
mov [ebp+var_54] ax +
call sub_10170FB  +
mov [ebp+var_58] eax +
cmp eax ebx +
mov eax 410h +
jl loc_10098FC  +
lea ecx [ebp+var_C] +
push ecx  +
sub esp 10h +
mov edi esp +
mov [ebp+var_54] ax +
mov eax [esi] +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
movs   +
push 3  +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
push 6  +
push [ebp+var_8]  +
movs   +
push [ebp+var_4]  +
movs   +
push [ebp+arg_4]  +
movs   +
call dword ptr [eax+40h]  +
mov [ebp+var_58] eax +
cmp eax ebx +
mov eax 412h +
jl loc_10098FC  +
mov ecx [ebp+arg_10] +
mov [ebp+var_54] ax +
cmp ecx ebx +
jz loc_10099FB  +
mov eax [ebp+var_C] +
mov [ebp+var_C] ebx +
mov [ecx] eax +
push [ebp+var_4]  +
mov esi ds:SysFreeString +
call esi  +
push [ebp+var_8]  +
mov [ebp+var_4] ebx +
call esi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_8] ebx +
call ds:VariantClear  +
mov esi [ebp+var_58] +
lea ecx [ebp+var_18] +
call sub_1016FE9  +
lea ecx [ebp+var_24] +
call sub_1016FE9  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1009A3B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_58] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 42Eh  +
push offset aCdefragui_upda  +
lea ecx [ebp+var_48] +
call sub_10148A2  +
xor ebx ebx +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_14] offset dword_10032B8 +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
call ds:VariantInit  +
mov esi [ebp+arg_4] +
mov eax 437h +
cmp esi ebx +
jnz loc_1009AAB  +
mov [ebp+var_48] 80070057h +
mov [ebp+var_42] ax +
jmp loc_1009B66  +
mov [ebp+var_44] ax +
mov eax 438h +
cmp [ebp+arg_8] ebx +
jz loc_1009A9B  +
mov [ebp+var_44] ax +
inc eax  +
cmp [ebp+arg_10] ebx +
jz loc_1009A9B  +
mov edx [ebp+arg_C] +
mov [ebp+var_44] ax +
mov eax 43Ah +
cmp edx ebx +
jz loc_1009A9B  +
lea ecx [ebp+var_14] +
mov [ebp+var_48] ebx +
mov [ebp+var_44] ax +
call sub_1017AA3  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 43Ch +
jl loc_1009AA2  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_44] ax +
call sub_10170FB  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 43Dh +
jl loc_1009AA2  +
lea ecx [ebp+var_8] +
push ecx  +
sub esp 10h +
mov edi esp +
mov [ebp+var_44] ax +
mov eax [esi] +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
movs   +
push 3  +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
push 4  +
push [ebp+arg_8]  +
movs   +
push [ebp+var_4]  +
movs   +
push [ebp+arg_4]  +
movs   +
call dword ptr [eax+44h]  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 43Fh +
jl loc_1009AA2  +
mov ecx [ebp+arg_10] +
mov [ebp+var_44] ax +
mov eax [ebp+var_8] +
mov [ebp+var_8] ebx +
mov [ecx] eax +
push [ebp+var_4]  +
call ds:SysFreeString  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] ebx +
call ds:VariantClear  +
mov esi [ebp+var_48] +
lea ecx [ebp+var_14] +
call sub_1016FE9  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1009B94  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_48] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 456h  +
push offset aCdefragui_writ  +
lea ecx [ebp+var_54] +
call sub_10148A2  +
mov ebx [ebp+arg_0] +
xor edi edi +
lea eax [ebx+60h] +
push eax  +
mov [ebp+var_18] edi +
mov [ebp+var_24] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_30] offset dword_10032B8 +
mov [ebp+var_2C] edi +
mov [ebp+var_28] edi +
mov [ebp+var_4] edi +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [ebx+50h] +
mov esi [ebx+58h] +
mov [ebp+arg_0] eax +
jmp loc_1009C63  +
cmp [esi+20h] edi +
jz loc_1009C60  +
cmp [ebp+arg_0] edi +
jnz loc_1009C1C  +
cmp [esi+10h] edi +
jnz loc_1009C21  +
jmp loc_1009C60  +
cmp [esi+10h] edi +
jnz loc_1009C60  +
cmp [ebp+var_4] edi +
jz loc_1009C43  +
mov edx offset asc_10018D8 +
lea ecx [ebp+var_30] +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 481h +
jl loc_1009CAA  +
mov [ebp+var_50] ax +
mov edx [esi] +
lea ecx [ebp+var_30] +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 483h +
jl loc_1009CAA  +
inc [ebp+var_4]  +
mov [ebp+var_50] ax +
mov esi [esi+48h] +
cmp esi edi +
jnz loc_1009C0B  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
cmp [ebp+arg_0] edi +
jz loc_1009DAB  +
lea ecx [ebp+var_30] +
cmp [ebp+var_4] edi +
jnz loc_1009D49  +
call sub_101700D  +
mov edx off_101B18C +
lea ecx [ebp+var_30] +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 494h +
jge loc_1009D21  +
mov [ebp+var_4E] ax +
jmp loc_1009CB7  +
push [ebp+lpCriticalSection]  +
mov [ebp+var_4E] ax +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_54] +
lea ecx [ebp+var_30] +
call sub_1016FE9  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1009CCF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax edi +
jz loc_1009CDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1009CE9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1009CF6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_24] +
cmp eax edi +
jz loc_1009D03  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
cmp eax edi +
jz loc_1009D10  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_54] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov edx off_101B194 +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 495h +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
jmp loc_1009DB0  +
mov edx offset asc_10018D8 +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 499h +
jl loc_1009CA4  +
mov edx off_101B18C +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 49Ah +
jl loc_1009CA4  +
mov edx off_101B198 +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 49Bh +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
cmp [ebp+var_4] edi +
jnz loc_1009DFC  +
lea ecx [ebp+var_30] +
call sub_101700D  +
mov edx off_101B18C +
lea ecx [ebp+var_30] +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4A6h +
jl loc_1009CA4  +
mov edx off_101B194 +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_10178DF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4A7h +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
lea edx [ebp+var_1C] +
lea ecx [ebp+var_30] +
call sub_10170B0  +
mov eax [ebx+24h] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4ADh +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4AFh +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4B2h +
jl loc_1009CA4  +
lea edx [ebp+var_14] +
push edx  +
mov [ebp+var_50] ax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4B5h +
jl loc_1009CA4  +
lea edx [ebp+var_10] +
push edx  +
mov [ebp+var_50] ax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push offset dword_1002B78  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4B8h +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push offset aWindirSystem32  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4BBh +
jl loc_1009CA4  +
push [ebp+var_1C]  +
mov [ebp+var_50] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4BCh +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
call sub_1009610  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4BFh +
jl loc_1009CA4  +
push [ebp+var_8]  +
mov [ebp+var_50] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4C2h +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
lea eax [ebp+var_24] +
push eax  +
push offset aScheduleddefra  +
push [ebp+var_C]  +
push [ebp+var_18]  +
push ebx  +
call sub_1009A51  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 4C7h +
jl loc_1009CA4  +
mov [ebp+var_50] ax +
jmp loc_1009CB7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 4DEh  +
push offset aCdefragui_wr_0  +
lea ecx [ebp+var_74] +
call sub_10148A2  +
mov ebx [ebp+arg_0] +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
xor esi esi +
stos   +
stos   +
mov eax offset dword_10032B8 +
mov [ebp+var_40] eax +
mov [ebp+var_34] eax +
lea edx [ebp+var_20] +
add ebx 24h +
mov eax [ebx] +
push edx  +
mov [ebp+var_20] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_14] esi +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_38] esi +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov ecx [eax] +
push eax  +
mov [ebp+var_28] esi +
mov [ebp+var_24] esi +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 4F1h +
jge loc_1009FEB  +
mov [ebp+var_6E] ax +
jmp loc_100A474  +
mov [ebp+var_70] ax +
mov eax [ebp+var_20] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 4F2h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 4F5h +
jl loc_1009FE2  +
lea edx [ebp+var_14] +
push edx  +
push [ebp+arg_4]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 4F8h +
jl loc_1009FE2  +
fld  [ebp+arg_8] +
mov [ebp+var_70] ax +
lea eax [ebp+SystemTime] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+0ACh+var_AC] +
call ds:VariantTimeToSystemTime  +
test eax eax +
mov eax 4FBh +
jnz loc_100A06C  +
mov [ebp+var_74] 80004005h +
jmp loc_1009FE2  +
mov [ebp+var_70] ax +
movzx eax [ebp+SystemTime.wSecond] +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_40] +
push offset a_4u_2u_2ut_2u_  +
push eax  +
mov [ebp+var_74] esi +
call sub_10172AE  +
add esp 20h +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 503h +
jl loc_1009FE2  +
lea edx [ebp+var_8] +
lea ecx [ebp+var_40] +
mov [ebp+var_70] ax +
call sub_10170FB  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 505h +
jl loc_1009FE2  +
mov edx [ebp+arg_10] +
neg edx  +
mov [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov ecx [eax] +
sbb edx edx +
push edx  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 508h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
mov eax [ebp+arg_4] +
dec eax  +
dec eax  +
jz loc_100A33C  +
dec eax  +
jz loc_100A25D  +
dec eax  +
jz loc_100A120  +
mov [ebp+var_74] 8000FFFFh +
mov eax 53Eh +
jmp loc_1009FE2  +
mov edx offset aDefragmonthlyt +
lea ecx [ebp+var_34] +
call sub_1017AA3  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 528h +
jl loc_1009FE2  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_34] +
mov [ebp+var_70] ax +
call sub_10170FB  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 529h +
jl loc_1009FE2  +
lea edx [ebp+var_C] +
push edx  +
mov [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push offset dword_1002B28  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 52Bh +
jl loc_1009FE2  +
push [ebp+var_4]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 52Ch +
jl loc_1009FE2  +
mov edi [ebp+arg_18] +
mov [ebp+var_70] ax +
cmp [ebp+arg_14] esi +
jz loc_100A244  +
cmp edi esi +
jnz loc_100A24C  +
push [ebp+arg_14]  +
mov eax 530h +
mov [ebp+var_70] ax +
mov eax [ebp+var_C] +
mov [ebp+var_74] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 532h +
jl loc_1009FE2  +
neg edi  +
mov [ebp+var_70] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
sbb edi edi +
push edi  +
push eax  +
call dword ptr [ecx+64h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 535h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0FFFh  +
push eax  +
call dword ptr [ecx+5Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 537h +
jl loc_1009FE2  +
push [ebp+var_8]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 538h +
jmp loc_100A3F6  +
cmp edi esi +
jnz loc_100A1B9  +
mov [ebp+var_74] 80004005h +
mov eax 530h +
jmp loc_1009FE2  +
mov edx offset aDefragweeklytr +
lea ecx [ebp+var_34] +
call sub_1017AA3  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 51Bh +
jl loc_1009FE2  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_34] +
mov [ebp+var_70] ax +
call sub_10170FB  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 51Ch +
jl loc_1009FE2  +
lea edx [ebp+var_10] +
push edx  +
mov [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push offset dword_1002B18  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 51Eh +
jl loc_1009FE2  +
push [ebp+var_4]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 51Fh +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+5Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 520h +
jl loc_1009FE2  +
push [ebp+arg_14]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 521h +
jl loc_1009FE2  +
push [ebp+var_8]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 522h +
jmp loc_100A3F6  +
mov edx offset aDefragdailytri +
lea ecx [ebp+var_34] +
call sub_1017AA3  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 50Fh +
jl loc_1009FE2  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_34] +
mov [ebp+var_70] ax +
call sub_10170FB  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 510h +
jl loc_1009FE2  +
lea edx [ebp+var_18] +
push edx  +
mov [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push offset dword_1002B08  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 512h +
jl loc_1009FE2  +
push [ebp+var_4]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 513h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
mov eax [ebp+var_18] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+54h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 514h +
jl loc_1009FE2  +
push [ebp+var_8]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 515h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
call sub_1009610  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 544h +
jl loc_1009FE2  +
push [ebp+var_1C]  +
mov [ebp+var_70] ax +
mov eax [ebp+var_20] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 547h +
jl loc_1009FE2  +
mov [ebp+var_70] ax +
lea eax [ebp+var_24] +
push eax  +
push offset aScheduleddefra  +
push [ebp+var_20]  +
push [ebp+var_28]  +
push [ebp+arg_0]  +
call sub_1009A51  +
mov [ebp+var_74] eax +
cmp eax esi +
mov eax 54Ah +
jl loc_1009FE2  +
push [ebp+var_24]  +
mov [ebp+var_70] ax +
push ebx  +
call sub_100848E  +
mov edi ds:SysFreeString +
cmp [ebp+var_8] esi +
jz loc_100A487  +
push [ebp+var_8]  +
call edi  +
mov [ebp+var_8] esi +
cmp [ebp+var_4] esi +
jz loc_100A494  +
push [ebp+var_4]  +
call edi  +
mov [ebp+var_4] esi +
mov edi [ebp+var_74] +
lea ecx [ebp+var_34] +
call sub_1016FE9  +
lea ecx [ebp+var_40] +
call sub_1016FE9  +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_100A4B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
cmp eax esi +
jz loc_100A4C1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
cmp eax esi +
jz loc_100A4CE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax esi +
jz loc_100A4DB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_1C] +
cmp eax esi +
jz loc_100A4E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_20] +
cmp eax esi +
jz loc_100A4F5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_24] +
cmp eax esi +
jz loc_100A502  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_28] +
cmp eax esi +
jz loc_100A50F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_74] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
push 1  +
push 56Ch  +
push offset aCdefragui_veri  +
lea ecx [ebp+var_240] +
mov [ebp+var_248] edi +
call sub_10148A2  +
xor eax eax +
push 208h  +
push eax  +
mov word ptr [ebp+var_210] ax +
lea eax [ebp+var_210+2] +
push eax  +
mov dword ptr [ebp+var_244] 20h +
call memset  +
xor eax eax +
add esp 0Ch +
mov [ebp+var_218] eax +
mov [ebp+var_21C] eax +
mov [ebp+var_214] eax +
cmp edi eax +
jnz loc_100A5BE  +
mov eax 576h +
mov [ebp+var_240] 8000FFFFh +
mov [ebp+var_23A] ax +
jmp loc_100A867  +
mov [ebp+var_240] eax +
mov eax 576h +
push edi  +
mov edi ds:SysStringLen +
mov [ebp+var_23C] ax +
call edi  +
test eax eax +
mov eax 577h +
jbe loc_100A5A8  +
mov [ebp+var_23C] ax +
inc eax  +
test esi esi +
jz loc_100A5A8  +
and [ebp+var_240] 0 +
push esi  +
mov [ebp+var_23C] ax +
call edi  +
test eax eax +
mov eax 579h +
jbe loc_100A5A8  +
mov [ebp+var_23C] ax +
mov eax offset aWindirSystem32 +
mov cx [esi] +
cmp cx [eax] +
jnz loc_100A63A  +
test cx cx +
jz loc_100A636  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100A63A  +
add esi 4 +
add eax 4 +
test cx cx +
jnz loc_100A614  +
xor eax eax +
jmp loc_100A63F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
mov eax 57Ch +
jnz loc_100A5A8  +
and [ebp+var_240] 0 +
and dword ptr [ebx+50h] 0 +
mov [ebp+var_23C] ax +
lea eax [ebx+60h] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov edi ds:wcstok +
lea eax [ebp+var_244] +
push eax  +
push [ebp+var_248]  +
call edi  +
xor edx edx +
pop ecx  +
pop ecx  +
cmp eax edx +
jz loc_100A7B3  +
mov ecx eax +
lea esi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_100A694  +
sub ecx esi +
sar ecx 1 +
cmp ecx 2 +
jnz loc_100A6DF  +
movzx ecx word ptr [eax] +
cmp cx 2Dh +
jz loc_100A6B6  +
cmp cx 2Fh +
jnz loc_100A6DF  +
movzx eax word ptr [eax+2] +
sub eax 63h +
jz loc_100A6D3  +
dec eax  +
dec eax  +
jnz loc_100A785  +
mov [ebp+var_218] 1 +
jmp loc_100A74F  +
mov [ebp+var_214] 1 +
jmp loc_100A74F  +
inc [ebp+var_21C]  +
push 105h  +
lea ecx [ebp+var_210] +
push ecx  +
push eax  +
call sub_1009326  +
test eax eax +
jl loc_100A74F  +
mov edx [ebx+58h] +
test edx edx +
jz loc_100A7A0  +
mov ecx [edx] +
lea eax [ebp+var_210] +
mov si [eax] +
cmp si [ecx] +
jnz loc_100A734  +
test si si +
jz loc_100A730  +
mov si [eax+2] +
cmp si [ecx+2] +
jnz loc_100A734  +
add eax 4 +
add ecx 4 +
test si si +
jnz loc_100A70E  +
xor eax eax +
jmp loc_100A739  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100A744  +
mov edx [edx+48h] +
test edx edx +
jnz loc_100A706  +
test edx edx +
jz loc_100A7A0  +
mov dword ptr [edx+10h] 1 +
lea eax [ebp+var_244] +
push eax  +
push 0  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A68F  +
cmp [ebp+var_218] eax +
jz loc_100A7B1  +
cmp [ebp+var_214] eax +
jz loc_100A7B1  +
mov [ebp+var_240] 8000FFFFh +
mov eax 5C4h +
jmp loc_100A794  +
mov [ebp+var_240] 8000FFFFh +
mov eax 599h +
mov [ebp+var_23A] ax +
jmp loc_100A85B  +
mov [ebp+var_240] 8000FFFFh +
mov eax 5BAh +
jmp loc_100A794  +
xor edx edx +
mov eax 5C4h +
mov [ebp+var_23C] ax +
cmp [ebp+var_21C] edx +
jbe loc_100A7DE  +
add eax 6 +
cmp [ebp+var_214] edx +
jz loc_100A804  +
mov [ebp+var_240] 8000FFFFh +
jmp loc_100A794  +
cmp [ebp+var_218] edx +
jnz loc_100A7EE  +
cmp [ebp+var_214] edx +
jnz loc_100A7FF  +
mov [ebp+var_240] 8000FFFFh +
mov eax 5D0h +
jmp loc_100A794  +
mov eax 5D0h +
mov [ebp+var_23C] ax +
mov [ebp+var_240] edx +
cmp [ebp+var_218] edx +
jz loc_100A839  +
mov eax [ebx+58h] +
mov dword ptr [ebx+50h] 1 +
jmp loc_100A833  +
xor ecx ecx +
cmp [eax+10h] edx +
setz cl  +
mov [eax+10h] ecx +
mov eax [eax+48h] +
cmp eax edx +
jnz loc_100A825  +
jmp loc_100A85B  +
cmp [ebp+var_214] edx +
jz loc_100A858  +
mov eax [ebx+58h] +
xor ecx ecx +
inc ecx  +
mov [ebx+50h] ecx +
jmp loc_100A852  +
mov [eax+10h] ecx +
mov eax [eax+48h] +
cmp eax edx +
jnz loc_100A84C  +
jmp loc_100A85B  +
mov [ebx+50h] edx +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_240] +
lea ecx [ebp+var_240] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 714h  +
push offset aCdefragui_inva  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] offset dword_10032B8 +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov eax 71Ah +
cmp [ebp+arg_4] edi +
jnz loc_100A8DC  +
mov [ebp+var_38] 80070057h +
mov [ebp+var_32] ax +
jmp loc_100A93D  +
mov [ebp+var_34] ax +
mov eax 71Bh +
cmp [ebp+arg_8] edi +
jz loc_100A8CF  +
mov [ebp+var_34] ax +
mov eax dword_101B3C4 +
mov [ebp+var_38] edi +
cmp eax 2 +
jz loc_100A8FF  +
cmp eax esi +
jnz loc_100A901  +
xor esi esi +
push ebx  +
mov ebx [ebp+arg_0] +
cmp [ebx+54h] edi +
jnz loc_100A958  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push ebx  +
call sub_1008B26  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 723h +
jl loc_100A9FD  +
mov [ebp+var_34] ax +
cmp [ebp+var_4] edi +
jnz loc_100A958  +
mov [ebp+var_38] 1 +
add eax 4 +
mov [ebp+var_34] ax +
pop ebx  +
mov esi [ebp+var_38] +
lea ecx [ebp+var_14] +
call sub_1016FE9  +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
cmp esi edi +
jz loc_100A984  +
push 5  +
push edi  +
push ebx  +
call sub_100E8BD  +
cmp eax edi +
mov [ebp+var_38] eax +
jge loc_100A976  +
mov eax 72Fh +
jmp loc_100A9FD  +
mov [ebp+var_38] 1 +
mov eax 732h +
jmp loc_100A938  +
mov esi offset aScheduleddefra +
mov edx esi +
lea ecx [ebp+var_14] +
call sub_1017AA3  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 736h +
jl loc_100A9FD  +
lea edx [ebp+var_8] +
lea ecx [ebp+var_14] +
mov [ebp+var_34] ax +
call sub_10170FB  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 737h +
jl loc_100A9FD  +
push edi  +
push [ebp+var_8]  +
mov [ebp+var_34] ax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 738h +
jl loc_100A9FD  +
push [ebp+arg_8]  +
mov [ebp+var_34] ax +
push offset a?xmlVersion1_0  +
push esi  +
push [ebp+arg_4]  +
push ebx  +
call sub_10098A8  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 73Bh +
jge loc_100A938  +
mov [ebp+var_32] ax +
jmp loc_100A93C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
push edi  +
push 1  +
push 748h  +
push offset aCdefragui_over  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
xor edi edi +
mov [ebp+var_14] offset dword_10032B8 +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
lea eax [ebp+var_8] +
cmp [ebp+arg_4] edi +
jnz loc_100AA6B  +
push eax  +
push [ebp+arg_0]  +
call sub_1009610  +
cmp eax edi +
mov [ebp+var_38] eax +
jge loc_100AA74  +
mov [ebp+var_38] 89000022h +
mov eax 754h +
mov [ebp+var_32] ax +
jmp loc_100AAF5  +
push [ebp+arg_4]  +
push eax  +
call sub_100848E  +
mov esi offset aScheduleddefra +
mov edx esi +
lea ecx [ebp+var_14] +
call sub_1017AA3  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 75Dh +
jl loc_100AA62  +
lea edx [ebp+var_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_34] ax +
call sub_10170FB  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 75Eh +
jl loc_100AA62  +
push ebx  +
mov ebx [ebp+var_8] +
push edi  +
push [ebp+var_4]  +
mov [ebp+var_34] ax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+3Ch]  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 75Fh +
jl loc_100AAEA  +
push [ebp+arg_8]  +
mov [ebp+var_34] ax +
push offset a?xmlVersion1_0  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_10098A8  +
mov [ebp+var_38] eax +
cmp eax edi +
mov eax 762h +
jge loc_100AAF0  +
mov [ebp+var_32] ax +
jmp loc_100AAF4  +
mov [ebp+var_34] ax +
pop ebx  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov eax [ebp+var_8] +
mov esi [ebp+var_38] +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_100AB11  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_14] +
call sub_1016FE9  +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 828h  +
push offset aCdefragui_geth  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov ebx [ebp+arg_8] +
xor edi edi +
mov [ebp+var_C] offset dword_10032B8 +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp ebx edi +
jz loc_100AB68  +
xor eax eax +
mov [ebx] ax +
mov edx [ebp+arg_4] +
mov eax 832h +
cmp edx edi +
jnz loc_100AB84  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_100AC6F  +
mov [ebp+var_2C] ax +
mov eax 833h +
cmp ebx edi +
jz loc_100AB74  +
lea ecx [ebp+var_C] +
mov [ebp+var_30] edi +
mov [ebp+var_2C] ax +
call sub_1017AA3  +
mov [ebp+var_30] eax +
cmp eax edi +
mov eax 835h +
jl loc_100AB7B  +
push edi  +
push 54h  +
pop edx  +
lea ecx [ebp+var_C] +
mov [ebp+var_2C] ax +
call sub_101707A  +
mov esi eax +
push esi  +
push 3Ah  +
pop edx  +
lea ecx [ebp+var_C] +
call sub_101707A  +
sub eax esi +
cmp eax 3 +
mov eax 839h +
jz loc_100ABDF  +
mov [ebp+var_30] 8000FFFFh +
jmp loc_100AB7B  +
mov [ebp+var_2C] ax +
lea eax [esi+3] +
mov [ebp+var_30] edi +
cmp eax [ebp+var_8] +
jnb loc_100ABFA  +
mov edx [ebp+var_C] +
xor ecx ecx +
mov [ebp+var_8] eax +
mov [edx+eax*2] cx +
mov ecx [ebp+var_8] +
push 2  +
pop esi  +
cmp ecx esi +
jbe loc_100AC24  +
mov eax [ebp+var_C] +
push 4  +
lea ecx [eax+ecx*2-4] +
push ecx  +
push eax  +
call ds:memmove  +
mov ecx [ebp+var_C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_8] esi +
mov [ecx+4] ax +
push [ebp+var_C]  +
call ds:_wtol  +
cmp eax 18h +
pop ecx  +
jl loc_100AC44  +
mov [ebp+var_30] 8000FFFFh +
mov eax 83Dh +
jmp loc_100AB7B  +
cmp eax edi +
mov ecx 83Dh +
mov [ebp+var_2C] cx +
jge loc_100AC60  +
mov [ebp+var_30] 8000FFFFh +
lea eax [ecx+1] +
jmp loc_100AB7B  +
mov ecx 83Eh +
mov [ebp+var_30] edi +
mov [ebp+var_2C] cx +
mov [ebx] ax +
mov esi [ebp+var_30] +
lea ecx [ebp+var_C] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push esi  +
push edi  +
push 1  +
push 84Dh  +
push offset aCdefragui_getd  +
lea ecx [ebp+var_60] +
call sub_10148A2  +
fldz   +
xor eax eax +
fst  [ebp+pvtime] +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
xor esi esi +
stos   +
mov [ebp+var_2C] offset dword_10032B8 +
mov [ebp+var_28] esi +
mov [ebp+var_24] esi +
mov eax 85Ah +
cmp [ebp+arg_4] esi +
jnz loc_100ACEC  +
mov [ebp+var_60] 80070057h +
fstp  st +
mov [ebp+var_5A] ax +
jmp loc_100B159  +
mov [ebp+var_5C] ax +
mov eax [ebp+arg_8] +
cmp eax esi +
jnz loc_100ACFE  +
mov eax 85Bh +
jmp loc_100ACDA  +
mov edx [ebp+arg_4] +
fstp  qword ptr [eax] +
mov ecx 85Bh +
mov [ebp+var_5C] cx +
lea ecx [ebp+var_2C] +
mov [ebp+var_60] esi +
call sub_1017AA3  +
mov [ebp+var_60] eax +
cmp eax esi +
mov eax 85Fh +
jl loc_100ACE3  +
push esi  +
push 2Dh  +
pop edx  +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_101707A  +
push 4  +
pop ecx  +
cmp eax ecx +
mov eax 862h +
jz loc_100AD48  +
mov [ebp+var_60] 8000FFFFh +
jmp loc_100ACE3  +
mov [ebp+var_60] esi +
mov [ebp+var_5C] ax +
cmp [ebp+var_28] ecx +
jbe loc_100AD60  +
mov [ebp+var_28] ecx +
mov ecx [ebp+var_2C] +
xor eax eax +
mov [ecx+8] ax +
push [ebp+var_2C]  +
call ds:_wtol  +
mov [ebp+var_8] eax +
cmp eax esi +
pop ecx  +
mov eax 865h +
jl loc_100AD3F  +
mov edx [ebp+arg_4] +
lea ecx [ebp+var_2C] +
mov [ebp+var_60] esi +
mov [ebp+var_5C] ax +
call sub_1017AA3  +
mov [ebp+var_60] eax +
cmp eax esi +
mov eax 868h +
jl loc_100ACE3  +
push ebx  +
push 5  +
push 2Dh  +
pop edx  +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_101707A  +
mov ebx eax +
lea eax [ebx-5] +
cmp eax 2 +
mov eax 86Bh +
jnz loc_100B062  +
mov [ebp+var_60] esi +
lea esi [ebx-5] +
mov [ebp+var_5C] ax +
mov eax [ebp+var_28] +
lea ecx [esi+5] +
cmp ecx eax +
jnb loc_100ADE0  +
mov edx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_28] ecx +
mov [edx+ecx*2] ax +
mov eax [ebp+var_28] +
cmp esi eax +
jnb loc_100AE07  +
mov ecx [ebp+var_2C] +
sub eax esi +
lea edi [esi+esi] +
push edi  +
lea eax [ecx+eax*2] +
push eax  +
push ecx  +
call ds:memmove  +
mov ecx [ebp+var_2C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_28] esi +
mov [ecx+edi] ax +
push [ebp+var_2C]  +
call ds:_wtol  +
mov [ebp+var_C] eax +
dec eax  +
cmp eax 0Bh +
pop ecx  +
mov eax 86Eh +
ja loc_100B062  +
mov edx [ebp+arg_4] +
and [ebp+var_60] 0 +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_1017AA3  +
mov [ebp+var_60] eax +
test eax eax +
mov eax 871h +
jl loc_100B142  +
mov [ebp+var_5C] ax +
lea eax [ebx+1] +
push eax  +
push 54h  +
pop edx  +
lea ecx [ebp+var_2C] +
call sub_101707A  +
mov [ebp+var_4] eax +
sub eax ebx +
lea ecx [eax-1] +
cmp ecx 2 +
jz loc_100AE77  +
mov [ebp+var_60] 8000FFFFh +
mov eax 874h +
jmp loc_100B142  +
and [ebp+var_60] 0 +
mov ecx 874h +
lea esi [eax-1] +
mov eax [ebp+var_28] +
mov [ebp+var_5C] cx +
lea ecx [esi+ebx+1] +
cmp ecx eax +
jnb loc_100AEA1  +
mov edx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_28] ecx +
mov [edx+ecx*2] ax +
mov eax [ebp+var_28] +
mov ebx ds:memmove +
cmp esi eax +
jnb loc_100AECA  +
mov ecx [ebp+var_2C] +
sub eax esi +
lea edi [esi+esi] +
push edi  +
lea eax [ecx+eax*2] +
push eax  +
push ecx  +
call ebx  +
mov ecx [ebp+var_2C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_28] esi +
mov [ecx+edi] ax +
push [ebp+var_2C]  +
call ds:_wtol  +
mov [ebp+var_10] eax +
dec eax  +
cmp eax 1Eh +
pop ecx  +
mov eax 877h +
ja loc_100B062  +
mov edx [ebp+arg_4] +
and [ebp+var_60] 0 +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_1017AA3  +
mov [ebp+var_60] eax +
test eax eax +
mov eax 87Ah +
jl loc_100B142  +
mov edi [ebp+var_4] +
mov [ebp+var_5C] ax +
lea eax [edi+1] +
push eax  +
push 3Ah  +
pop edx  +
lea ecx [ebp+var_2C] +
call sub_101707A  +
mov [ebp+var_4] eax +
sub eax edi +
lea ecx [eax-1] +
cmp ecx 2 +
jz loc_100AF3D  +
mov [ebp+var_60] 8000FFFFh +
mov eax 87Dh +
jmp loc_100B142  +
and [ebp+var_60] 0 +
mov ecx 87Dh +
lea esi [eax-1] +
mov eax [ebp+var_28] +
mov [ebp+var_5C] cx +
lea ecx [esi+edi+1] +
cmp ecx eax +
jnb loc_100AF67  +
mov edx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_28] ecx +
mov [edx+ecx*2] ax +
mov eax [ebp+var_28] +
cmp esi eax +
jnb loc_100AF8A  +
mov ecx [ebp+var_2C] +
sub eax esi +
lea edi [esi+esi] +
push edi  +
lea eax [ecx+eax*2] +
push eax  +
push ecx  +
call ebx  +
mov ecx [ebp+var_2C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_28] esi +
mov [ecx+edi] ax +
push [ebp+var_2C]  +
call ds:_wtol  +
mov [ebp+var_14] eax +
cmp eax 17h +
pop ecx  +
mov eax 880h +
ja loc_100B062  +
mov edx [ebp+arg_4] +
and [ebp+var_60] 0 +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_1017AA3  +
mov [ebp+var_60] eax +
test eax eax +
mov eax 883h +
jl loc_100B142  +
mov edi [ebp+var_4] +
mov [ebp+var_5C] ax +
lea eax [edi+1] +
push eax  +
push 3Ah  +
pop edx  +
lea ecx [ebp+var_2C] +
call sub_101707A  +
mov [ebp+var_4] eax +
sub eax edi +
lea ecx [eax-1] +
cmp ecx 2 +
jz loc_100AFFC  +
mov [ebp+var_60] 8000FFFFh +
mov eax 886h +
jmp loc_100B142  +
and [ebp+var_60] 0 +
mov ecx 886h +
lea esi [eax-1] +
mov eax [ebp+var_28] +
mov [ebp+var_5C] cx +
lea ecx [esi+edi+1] +
cmp ecx eax +
jnb loc_100B026  +
mov edx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_28] ecx +
mov [edx+ecx*2] ax +
mov eax [ebp+var_28] +
cmp esi eax +
jnb loc_100B049  +
mov ecx [ebp+var_2C] +
sub eax esi +
lea edi [esi+esi] +
push edi  +
lea eax [ecx+eax*2] +
push eax  +
push ecx  +
call ebx  +
mov ecx [ebp+var_2C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_28] esi +
mov [ecx+edi] ax +
push [ebp+var_2C]  +
mov edi ds:_wtol +
call edi  +
mov [ebp+var_18] eax +
cmp eax 3Bh +
pop ecx  +
mov eax 889h +
jbe loc_100B06E  +
mov [ebp+var_60] 8000FFFFh +
jmp loc_100B142  +
mov edx [ebp+arg_4] +
and [ebp+var_60] 0 +
lea ecx [ebp+var_2C] +
mov [ebp+var_5C] ax +
call sub_1017AA3  +
mov [ebp+var_60] eax +
test eax eax +
mov eax 88Ch +
jl loc_100B142  +
mov [ebp+var_5C] ax +
mov eax [ebp+var_4] +
add eax 3 +
cmp eax [ebp+var_28] +
jnb loc_100B0AC  +
mov edx [ebp+var_2C] +
xor ecx ecx +
mov [ebp+var_28] eax +
mov [edx+eax*2] cx +
mov ecx [ebp+var_28] +
push 2  +
pop esi  +
cmp ecx esi +
jbe loc_100B0D2  +
mov eax [ebp+var_2C] +
push 4  +
lea ecx [eax+ecx*2-4] +
push ecx  +
push eax  +
call ebx  +
mov ecx [ebp+var_2C] +
add esp 0Ch +
xor eax eax +
mov [ebp+var_28] esi +
mov [ecx+4] ax +
push [ebp+var_2C]  +
call edi  +
pop ecx  +
cmp eax 3Bh +
jbe loc_100B0EB  +
mov [ebp+var_60] 8000FFFFh +
mov eax 890h +
jmp loc_100B142  +
and [ebp+var_60] 0 +
mov ecx 890h +
mov [ebp+var_5C] cx +
mov cx word ptr [ebp+var_8] +
mov [ebp+SystemTime.wYear] cx +
mov cx word ptr [ebp+var_C] +
mov [ebp+SystemTime.wMonth] cx +
mov cx word ptr [ebp+var_10] +
mov [ebp+SystemTime.wSecond] ax +
mov [ebp+SystemTime.wDay] cx +
mov cx word ptr [ebp+var_14] +
lea eax [ebp+pvtime] +
push eax  +
mov [ebp+SystemTime.wHour] cx +
mov cx word ptr [ebp+var_18] +
lea eax [ebp+SystemTime] +
push eax  +
mov [ebp+SystemTime.wMinute] cx +
call ds:SystemTimeToVariantTime  +
test eax eax +
mov eax 899h +
jnz loc_100B148  +
mov [ebp+var_60] 80004005h +
mov [ebp+var_5A] ax +
jmp loc_100B158  +
fld  [ebp+pvtime] +
and [ebp+var_60] 0 +
mov [ebp+var_5C] ax +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
pop ebx  +
mov esi [ebp+var_60] +
lea ecx [ebp+var_2C] +
call sub_1016FE9  +
lea ecx [ebp+var_60] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 8A6h  +
push offset aCdefragui_gete  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
fldz   +
xor eax eax +
fstp  [ebp+pvtime] +
mov word ptr [ebp+var_1C] ax +
lea edi [ebp+var_1C+2] +
stos   +
stos   +
stos   +
xor ecx ecx +
stos   +
mov [ebp+var_4] ecx +
mov eax 8ACh +
cmp [ebp+arg_14] ecx +
jnz loc_100B1CA  +
mov [ebp+var_40] 80070057h +
mov [ebp+var_3A] ax +
jmp loc_100B474  +
mov ebx [ebp+arg_0] +
mov [ebp+var_40] ecx +
mov [ebp+var_3C] ax +
cmp [ebp+18h] cx +
jz loc_100B20A  +
lea eax [ebp+SystemTime] +
push eax  +
movzx eax word ptr [ebp+18h] +
push 3Ch  +
pop ecx  +
sub ecx eax +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+SystemTime] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8B1h +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
cmp word ptr [ebp+16h] 0 +
jz loc_100B244  +
lea eax [ebp+SystemTime] +
push eax  +
movzx eax word ptr [ebp+16h] +
push 3Ch  +
pop ecx  +
sub ecx eax +
imul ecx ecx +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+SystemTime] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8B7h +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
movzx ecx word ptr [ebp+14h] +
mov eax [ebx+30h] +
cmp ecx eax +
jnb loc_100B255  +
mov [ebp+14h] ax +
jmp loc_100B28C  +
jbe loc_100B28C  +
sub eax ecx +
add eax 18h +
imul eax eax +
lea edx [ebp+SystemTime] +
push edx  +
push eax  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8C1h +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
mov eax [ebx+28h] +
dec eax  +
dec eax  +
jz loc_100B412  +
dec eax  +
jz loc_100B3B4  +
dec eax  +
jz loc_100B2B2  +
mov [ebp+var_40] 8000FFFFh +
mov eax 90Eh +
jmp loc_100B1C1  +
cmp dword ptr [ebx+34h] 0 +
jz loc_100B33D  +
cmp word ptr [ebp+12h] 1Ch +
jnb loc_100B2CA  +
push 1Ch  +
pop eax  +
mov [ebp+12h] ax +
lea eax [ebp+var_1C] +
push eax  +
push 15180h  +
sub esp 10h +
mov edi esp +
lea esi [ebp+SystemTime] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8E1h +
jge loc_100B32A  +
jmp loc_100B1C1  +
lea esi [ebp+var_1C] +
lea edi [ebp+SystemTime] +
movs   +
movs   +
movs   +
lea eax [ebp+var_1C] +
push eax  +
movs   +
push 15180h  +
sub esp 10h +
mov edi esp +
mov esi eax +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8E5h +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
mov ax word ptr [ebp+var_1C+2] +
cmp ax word ptr [ebp+SystemTime+2] +
jz loc_100B2F6  +
jmp loc_100B412  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_10087A6  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8EAh +
jge loc_100B3A3  +
jmp loc_100B1C1  +
push 1Ch  +
pop ecx  +
cmp edx ecx +
ja loc_100B36D  +
cmp eax edx +
jnb loc_100B36B  +
mov [ebp+12h] dx +
jmp loc_100B3A7  +
jbe loc_100B379  +
cmp [ebp+12h] cx +
jnb loc_100B379  +
mov [ebp+12h] cx +
jmp loc_100B3A7  +
lea eax [ebp+SystemTime] +
push eax  +
push 15180h  +
sub esp 10h +
mov edi esp +
mov esi eax +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 906h +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
movzx eax word ptr [ebp+12h] +
mov edx [ebp+var_4] +
cmp eax edx +
jnz loc_100B35A  +
jmp loc_100B412  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_10087A6  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8CBh +
jl loc_100B1C1  +
movzx ecx word ptr [ebp+10h] +
mov [ebp+var_3C] ax +
mov eax [ebp+var_4] +
dec eax  +
cmp ecx eax +
jnb loc_100B435  +
sub eax ecx +
imul eax eax +
lea edx [ebp+SystemTime] +
push edx  +
push eax  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8CFh +
jl loc_100B1C1  +
mov [ebp+var_3C] ax +
lea eax [ebp+pvtime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:SystemTimeToVariantTime  +
test eax eax +
mov eax 912h +
jnz loc_100B464  +
mov [ebp+var_40] 80004005h +
jmp loc_100B1C1  +
jbe loc_100B412  +
sub eax ecx +
add eax 7 +
imul eax eax +
lea edx [ebp+SystemTime] +
push edx  +
push eax  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_1008C5A  +
mov [ebp+var_40] eax +
test eax eax +
mov eax 8D3h +
jmp loc_100B408  +
fld  [ebp+pvtime] +
and [ebp+var_40] 0 +
mov [ebp+var_3C] ax +
mov eax [ebp+arg_14] +
fstp  qword ptr [eax] +
mov esi [ebp+var_40] +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push 1  +
push 951h  +
push offset aCdefragui_regi  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov esi [ebp+arg_4] +
xor eax eax +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
cmp esi eax +
jnz loc_100B4D1  +
mov eax 956h +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_100B558  +
push ebx  +
mov [ebp+var_30] eax +
mov eax 956h +
push edi  +
mov [ebp+var_2C] ax +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov ecx ebx +
mov [ebp+var_C] esi +
call dword ptr [eax+10h]  +
mov edi eax +
test edi edi +
jz loc_100B4FE  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [ebp+var_4] +
mov [ebp+var_8] edi +
test eax eax +
jz loc_100B512  +
and [ebp+var_4] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1002CB8  +
push edi  +
call dword ptr [eax]  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 95Bh +
jl loc_100B54C  +
add ebx 0E8h +
push ebx  +
push [ebp+var_4]  +
mov [ebp+var_2C] ax +
mov eax [esi] +
push esi  +
call dword ptr [eax+38h]  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 95Eh +
jge loc_100B552  +
mov [ebp+var_2A] ax +
jmp loc_100B556  +
mov [ebp+var_2C] ax +
pop edi  +
pop ebx  +
mov eax [ebp+var_8] +
mov esi [ebp+var_30] +
test eax eax +
jz loc_100B568  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_100B575  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100B586  +
and [ebp+var_4] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 1  +
push 97Ah  +
push offset aCdefragui_unre  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor ebx ebx +
mov [ebp+pUnk] ebx +
mov [ebp+var_8] ebx +
mov eax 97Eh +
cmp [ebp+arg_4] ebx +
jnz loc_100B5DB  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_100B665  +
mov [ebp+var_28] ax +
mov eax [ebp+arg_0] +
lea esi [eax+0E8h] +
push 4  +
pop ecx  +
mov edi offset dword_10029A8 +
xor edx edx +
mov [ebp+arg_0] esi +
cmps   +
mov [ebp+var_2C] ebx +
jnz loc_100B60A  +
and [ebp+var_2C] edx +
mov eax 982h +
mov [ebp+var_28] ax +
jmp loc_100B665  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_100848E  +
mov ebx [ebp+var_8] +
mov eax [ebx] +
lea ecx [ebp+pUnk] +
push ecx  +
push offset dword_1002CB8  +
push ebx  +
call dword ptr [eax]  +
mov [ebp+var_2C] eax +
test eax eax +
mov eax 986h +
jl loc_100B5D2  +
push 0  +
push [ebp+pUnk]  +
mov [ebp+var_28] ax +
call ds:CoDisconnectObject  +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+3Ch]  +
mov edi [ebp+arg_0] +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
mov esi [ebp+var_2C] +
test ebx ebx +
jz loc_100B672  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
mov eax [ebp+pUnk] +
test eax eax +
jz loc_100B67F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpAddend]  +
call ds:InterlockedDecrement  +
mov esi eax +
test esi esi +
jnz loc_100B6B9  +
cmp [ebp+lpAddend] eax +
jz loc_100B6B9  +
mov ecx [ebp+lpAddend] +
push 1  +
call sub_1008F31  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_100B6FB  +
push esi  +
push 10h  +
mov [edi] ebx +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
cmp esi ebx +
jz loc_100B702  +
lea eax [esi+8] +
push eax  +
mov dword ptr [esi] 1 +
mov [esi+4] ebx +
call ds:InitializeSListHead  +
jmp loc_100B704  +
mov ebx 80070057h +
jmp loc_100B712  +
xor esi esi +
test esi esi +
jnz loc_100B70F  +
mov ebx 8007000Eh +
jmp loc_100B711  +
mov [edi] esi +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
lea esi [ecx+0Ch] +
push esi  +
call ds:InterlockedIncrement  +
mov ecx [esi+8] +
pop esi  +
test ecx ecx +
jz locret_100B73B  +
mov edx eax +
jmp sub_10084C8  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 33Fh  +
push offset aCdefraguiRunui  +
lea ecx [ebp-38h] +
call sub_10148A2  +
mov edi ds:CoCreateInstance +
lea eax [ebp-4] +
push eax  +
push offset stru_1002CC8  +
xor esi esi +
push 4  +
push esi  +
mov ebx offset stru_1002CE8 +
push ebx  +
mov [ebp-4] esi +
mov dword ptr [ebp-14h] offset dword_10032B8 +
mov [ebp-10h] esi +
mov [ebp-0Ch] esi +
mov [ebp-8] esi +
call edi  +
mov [ebp-38h] eax +
cmp eax esi +
mov eax 345h +
jge loc_100B7A4  +
mov [ebp-32h] ax +
jmp loc_100B863  +
mov [ebp-34h] ax +
cmp [ebp-4] esi +
jnz loc_100B7BC  +
call sub_1015B6B  +
mov [ebp-38h] eax +
mov eax 346h +
jmp loc_100B79B  +
***
push dword ptr [ebp-4]  +
mov eax 346h +
mov [ebp-34h] ax +
mov eax [ebp+8] +
add eax 0FFFFFFFCh +
push eax  +
mov [ebp-38h] esi +
call sub_100B48D  +
mov [ebp-38h] eax +
cmp eax esi +
mov eax 349h +
jl loc_100B79B  +
mov edx hInstance +
push 67h  +
lea ecx [ebp-14h] +
mov [ebp-34h] ax +
call sub_1017AFF  +
mov [ebp-38h] eax +
cmp eax esi +
mov eax 350h +
jl loc_100B79B  +
mov [ebp-34h] ax +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-14h]  +
call sub_1008589  +
cmp eax esi +
mov [ebp-38h] eax +
jge loc_100B824  +
mov eax 351h +
jmp loc_100B79B  +
***
mov ecx 351h +
mov [ebp-34h] cx +
cmp eax esi +
jnz loc_100B848  +
push dword ptr [ebp-8]  +
call ds:SetForegroundWindow  +
mov eax 355h +
mov [ebp-38h] esi +
mov [ebp-34h] ax +
jmp loc_100B863  +
mov eax [ebp+8] +
add eax 0FFFFFFFCh +
push eax  +
push offset loc_10108ED  +
push esi  +
push 5  +
push hInstance  +
call ds:DialogBoxParamW  +
mov eax [ebp-4] +
cmp eax esi +
jz loc_100B873  +
mov [ebp-4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-4] +
push eax  +
push offset stru_1002CC8  +
push 4  +
push esi  +
push ebx  +
call edi  +
push dword ptr [ebp-4]  +
mov eax [ebp+8] +
add eax 0FFFFFFFCh +
push eax  +
call sub_100B59A  +
mov edi [ebp-38h] +
lea ecx [ebp-14h] +
call sub_1016FE9  +
mov eax [ebp-4] +
cmp eax esi +
jz loc_100B8A9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-38h] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A8h +
push esi  +
push edi  +
push 1  +
push 784h  +
push offset aCdefragui_ge_1  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
fldz   +
mov edi [ebp+arg_4] +
fst  [ebp+var_A8] +
xor esi esi +
fst  [ebp+var_98] +
fstp  [ebp+var_A0] +
mov [ebp+var_58] esi +
mov [ebp+var_70] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_48] esi +
mov [ebp+var_54] esi +
mov [ebp+var_4C] esi +
mov [ebp+var_28] esi +
mov [ebp+var_50] esi +
mov [ebp+var_38] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_40] esi +
mov [ebp+var_30] esi +
mov [ebp+var_44] esi +
mov [ebp+var_8C] esi +
mov [ebp+var_88] esi +
mov [ebp+var_34] esi +
mov [ebp+var_5C] esi +
mov [ebp+var_84] esi +
mov [ebp+var_68] esi +
mov [ebp+var_60] esi +
mov [ebp+var_64] esi +
mov [ebp+var_90] esi +
mov [ebp+var_78] esi +
mov [ebp+var_80] esi +
mov [ebp+var_6C] esi +
mov [ebp+var_74] esi +
mov [ebp+var_7C] esi +
mov eax 7A7h +
cmp edi esi +
jnz loc_100B96F  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_100C01C  +
mov [ebp+var_20] ax +
mov eax 7A8h +
cmp [ebp+arg_8] esi +
jz loc_100B95F  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_C] esi +
jz loc_100B95F  +
mov [ebp+var_20] ax +
mov eax 7AAh +
cmp [ebp+arg_10] esi +
jz loc_100B95F  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_14] esi +
jz loc_100B95F  +
mov [ebp+var_20] ax +
mov eax 7ACh +
cmp [ebp+arg_18] esi +
jz loc_100B95F  +
push ebx  +
mov ebx [ebp+arg_1C] +
mov [ebp+var_20] ax +
inc eax  +
cmp ebx esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
mov eax 7AEh +
cmp [ebp+arg_20] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_24] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
mov eax 7B0h +
cmp [ebp+arg_34] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_40] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
mov eax 7B2h +
cmp [ebp+arg_44] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_38] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
mov eax 7B4h +
cmp [ebp+arg_3C] esi +
jz loc_100BA1A  +
mov [ebp+var_20] ax +
inc eax  +
cmp [ebp+arg_4C] esi +
jnz loc_100BA26  +
mov [ebp+var_24] 80070057h +
jmp loc_100BF6D  +
lea ecx [ebp+var_3C] +
push ecx  +
mov [ebp+var_20] ax +
mov eax [edi] +
push edi  +
mov [ebp+var_24] esi +
call dword ptr [eax+4Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7B8h +
jl loc_100BF6D  +
lea ecx [ebp+var_A8] +
push ecx  +
mov [ebp+var_20] ax +
mov eax [edi] +
push edi  +
call dword ptr [eax+3Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7B9h +
jl loc_100BF6D  +
lea ecx [ebp+var_A0] +
push ecx  +
mov [ebp+var_20] ax +
mov eax [edi] +
push edi  +
call dword ptr [eax+48h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7BAh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_3C] +
mov ecx [eax] +
lea edx [ebp+var_54] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7BBh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_54] +
mov ecx [eax] +
lea edx [ebp+var_8C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7BCh +
jl loc_100BF6D  +
xor edi edi +
mov [ebp+var_20] ax +
inc edi  +
add eax 3 +
cmp [ebp+var_8C] edi +
jnz loc_100BDB5  +
lea edx [ebp+var_28] +
push edx  +
mov [ebp+var_20] ax +
mov eax [ebp+var_54] +
push edi  +
mov [ebp+var_24] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7C2h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7C3h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_90] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7C4h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_58] +
dec eax  +
dec eax  +
jz loc_100BCAC  +
dec eax  +
jz loc_100BC21  +
dec eax  +
jz loc_100BB78  +
mov [ebp+var_24] 8000FFFFh +
mov eax 7E7h +
jmp loc_100BF6D  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_2C] +
push edx  +
push offset dword_1002B28  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7DCh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_2C] +
mov ecx [eax] +
lea edx [ebp+var_60] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7DDh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_60] +
mov [ebx] eax +
mov eax [ebp+var_2C] +
mov ecx [eax] +
lea edx [ebp+var_80] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7DFh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_2C] +
mov ecx [eax] +
lea edx [ebp+var_64] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7E0h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_2C] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7E1h +
jmp loc_100BCA5  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_38] +
push edx  +
push offset dword_1002B18  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7D2h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_38] +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7D3h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_38] +
mov ecx [eax] +
lea edx [ebp+var_68] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7D4h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
movsx eax word ptr [ebp+var_68] +
mov [ebx] eax +
mov eax [ebp+var_38] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7D6h +
jge loc_100BD0F  +
jmp loc_100BF6D  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_50] +
push edx  +
push offset dword_1002B08  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7CAh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_50] +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7CBh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_50] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7CCh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_3C] +
mov ecx [eax] +
lea edx [ebp+var_48] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7ECh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_48] +
mov ecx [eax] +
lea edx [ebp+var_88] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7EDh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
add eax 3 +
cmp [ebp+var_88] edi +
jnz loc_100BDB5  +
lea edx [ebp+var_4C] +
push edx  +
mov [ebp+var_20] ax +
mov eax [ebp+var_48] +
push edi  +
mov [ebp+var_24] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7F3h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_4C] +
mov ecx [eax] +
lea edx [ebp+var_70] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7F4h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
add eax 2 +
cmp [ebp+var_70] esi +
jz loc_100BDC1  +
mov [ebp+var_24] 8000FFFFh +
jmp loc_100BF6D  +
lea edx [ebp+var_44] +
push edx  +
mov [ebp+var_20] ax +
mov eax [ebp+var_4C] +
push offset dword_1002B78  +
mov [ebp+var_24] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7F9h +
jl loc_100BF6D  +
push [ebp+arg_4C]  +
mov [ebp+var_20] ax +
mov eax [ebp+var_44] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7FCh +
jl loc_100BF6D  +
push [ebp+arg_48]  +
mov [ebp+var_20] ax +
mov eax [ebp+var_44] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 7FFh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
lea eax [ebp+var_84] +
push eax  +
push [ebp+var_34]  +
push [ebp+arg_0]  +
call sub_100AB2E  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 801h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
lea eax [ebp+var_98] +
push eax  +
push [ebp+var_34]  +
push [ebp+arg_0]  +
call sub_100AC90  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 802h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_3C] +
mov ecx [eax] +
lea edx [ebp+var_40] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 805h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_6C] +
push edx  +
push eax  +
call dword ptr [ecx+0A4h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 806h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_30] +
push edx  +
push eax  +
call dword ptr [ecx+9Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 807h +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_78] +
push edx  +
push eax  +
call dword ptr [ecx+74h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 808h +
jl loc_100BF6D  +
push [ebp+arg_38]  +
mov [ebp+var_20] ax +
mov eax [ebp+var_30] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 809h +
jl loc_100BF6D  +
push [ebp+arg_3C]  +
mov [ebp+var_20] ax +
mov eax [ebp+var_30] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 80Ah +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_30] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 80Bh +
jl loc_100BF6D  +
mov [ebp+var_20] ax +
mov eax [ebp+var_30] +
mov ecx [eax] +
lea edx [ebp+var_7C] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 80Ch +
jge loc_100BF76  +
mov [ebp+var_1E] ax +
jmp loc_100C01B  +
mov ecx [ebp+arg_8] +
fld  [ebp+var_98] +
mov [ebp+var_20] ax +
mov eax [ebp+var_58] +
mov [ecx] eax +
xor eax eax +
cmp word ptr [ebp+var_90] si +
mov ecx [ebp+arg_C] +
setnz al  +
mov [ecx] eax +
mov ecx [ebp+arg_10] +
xor eax eax +
cmp word ptr [ebp+var_78] si +
setnz al  +
mov [ecx] eax +
mov ax word ptr [ebp+var_5C] +
mov ecx [ebp+arg_14] +
mov [ecx] ax +
mov ax word ptr [ebp+var_84] +
mov ecx [ebp+arg_18] +
mov [ecx] ax +
mov ecx [ebp+arg_20] +
xor eax eax +
cmp word ptr [ebp+var_80] si +
setnz al  +
mov [ecx] eax +
mov ax word ptr [ebp+var_64] +
mov ecx [ebp+arg_24] +
mov [ecx] ax +
mov eax [ebp+arg_28] +
mov ecx [ebp+arg_34] +
fstp  qword ptr [eax] +
mov eax [ebp+arg_2C] +
fld  [ebp+var_A8] +
fstp  qword ptr [eax] +
mov eax [ebp+arg_30] +
fld  [ebp+var_A0] +
fstp  qword ptr [eax] +
xor eax eax +
cmp word ptr [ebp+var_6C] si +
setnz al  +
mov [ecx] eax +
mov ecx [ebp+arg_40] +
xor eax eax +
cmp word ptr [ebp+var_74] si +
setnz al  +
mov [ecx] eax +
mov ecx [ebp+arg_44] +
xor eax eax +
cmp word ptr [ebp+var_7C] si +
setnz al  +
mov [ecx] eax +
pop ebx  +
push [ebp+var_34]  +
call ds:SysFreeString  +
mov eax [ebp+var_44] +
mov edi [ebp+var_24] +
cmp eax esi +
jz loc_100C035  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_30] +
cmp eax esi +
jz loc_100C042  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_40] +
cmp eax esi +
jz loc_100C04F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_2C] +
cmp eax esi +
jz loc_100C05C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_38] +
cmp eax esi +
jz loc_100C069  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_50] +
cmp eax esi +
jz loc_100C076  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_28] +
cmp eax esi +
jz loc_100C083  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4C] +
cmp eax esi +
jz loc_100C090  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_54] +
cmp eax esi +
jz loc_100C09D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_48] +
cmp eax esi +
jz loc_100C0AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_3C] +
cmp eax esi +
jz loc_100C0B7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 50h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 606h  +
push offset aCdefragui_ve_0  +
lea ecx [ebp+var_78] +
call sub_10148A2  +
fldz   +
xor edi edi +
fst  [ebp+var_44] +
fstp  [ebp+var_4C] +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_30] edi +
mov [ebp+var_38] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_34] edi +
mov [ebp+var_20] edi +
mov [ebp+var_C] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_24] edi +
mov [ebp+var_28] edi +
cmp [ebp+arg_4] edi +
jnz loc_100C133  +
mov eax 61Fh +
jmp loc_100C330  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
lea eax [ebp+var_54] +
push eax  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100B8BF  +
cmp eax 8000FFFFh +
jnz loc_100C198  +
mov eax 62Ch +
jmp loc_100C330  +
mov [ebp+var_78] eax +
cmp eax edi +
mov eax 62Eh +
jge loc_100C1AD  +
mov [ebp+var_72] ax +
jmp loc_100C337  +
mov [ebp+var_74] ax +
cmp [ebp+var_20] edi +
jz loc_100C32B  +
cmp [ebp+var_24] edi +
jz loc_100C32B  +
cmp [ebp+var_28] edi +
jz loc_100C32B  +
cmp [ebp+var_2C] edi +
jz loc_100C32B  +
push [ebp+var_C]  +
call ds:SysStringLen  +
test eax eax +
jz loc_100C324  +
mov eax [ebp+var_C] +
mov ecx offset aPt3m +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100C214  +
cmp dx di +
jz loc_100C210  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100C214  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_100C1EE  +
xor eax eax +
jmp loc_100C219  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_100C324  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push esi  +
call sub_100A525  +
cmp eax 8000FFFFh +
jnz loc_100C23E  +
mov eax 63Fh +
jmp loc_100C330  +
mov [ebp+var_78] eax +
cmp eax edi +
mov eax 641h +
jl loc_100C1A4  +
mov [ebp+var_74] ax +
mov eax [ebp+var_14] +
dec eax  +
dec eax  +
jz loc_100C2EA  +
dec eax  +
jz loc_100C2BC  +
dec eax  +
jz loc_100C26D  +
mov eax 68Ch +
jmp loc_100C330  +
mov eax [ebp+var_30] +
not eax  +
test eax 0FFFh +
jz loc_100C283  +
mov eax 66Ch +
jmp loc_100C330  +
mov ecx [ebp+var_34] +
mov eax [ebp+var_4] +
cmp ecx edi +
jz loc_100C29B  +
cmp eax edi +
jz loc_100C2A6  +
mov eax 676h +
jmp loc_100C330  +
lea edx [eax-1] +
test edx eax +
jnz loc_100C2B5  +
cmp eax edi +
jz loc_100C2B5  +
movsx edx word ptr [ebp+var_8] +
mov [esi+30h] edx +
mov [esi+2Ch] eax +
mov [esi+34h] ecx +
jmp loc_100C2FE  +
mov eax 680h +
jmp loc_100C330  +
cmp word ptr [ebp+var_10] bx +
jz loc_100C2C9  +
mov eax 658h +
jmp loc_100C330  +
mov eax [ebp+var_4] +
lea ecx [eax-1] +
test ecx eax +
jnz loc_100C2E3  +
cmp eax edi +
jz loc_100C2E3  +
movsx ecx word ptr [ebp+var_8] +
mov [esi+30h] ecx +
mov [esi+2Ch] eax +
jmp loc_100C2FE  +
mov eax 65Dh +
jmp loc_100C330  +
cmp word ptr [ebp+var_10] bx +
jz loc_100C2F7  +
mov eax 64Bh +
jmp loc_100C330  +
movsx eax word ptr [ebp+var_8] +
mov [esi+30h] eax +
mov eax [ebp+var_14] +
fld  [ebp+var_44] +
fstp  qword ptr [esi+98h] +
mov [esi+28h] eax +
mov eax [ebp+var_38] +
fld  [ebp+var_4C] +
fstp  qword ptr [esi+0A8h] +
mov [esi+38h] eax +
mov [esi+8Ch] eax +
jmp loc_100C337  +
mov eax 638h +
jmp loc_100C330  +
mov eax 633h +
mov [ebp+var_74] ax +
mov [ebp+var_78] ebx +
push [ebp+var_C]  +
mov esi ds:SysFreeString +
call esi  +
push [ebp+var_3C]  +
call esi  +
push [ebp+var_18]  +
call esi  +
push [ebp+var_1C]  +
call esi  +
mov esi [ebp+var_78] +
lea ecx [ebp+var_78] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
push 1  +
push 0A04h  +
push offset aCdefragui_in_0  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
fldz   +
mov esi [ebp+arg_0] +
fstp  [ebp+var_10] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push esi  +
call sub_1009522  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A0Ah +
jge loc_100C3B2  +
mov [ebp+var_2E] ax +
jmp loc_100C513  +
mov [ebp+var_30] ax +
lea eax [ebp+var_8] +
push eax  +
push esi  +
call sub_1009610  +
mov [ebp+var_34] eax +
test eax eax +
jge loc_100C3D5  +
mov [ebp+var_34] 89000022h +
mov eax 0A10h +
jmp loc_100C3A9  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
push esi  +
call sub_10097AF  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A14h +
jl loc_100C3A9  +
cmp [ebp+var_34] 1 +
mov [ebp+var_30] ax +
jnz loc_100C432  +
mov eax dword_101B3C4 +
cmp eax 2 +
jz loc_100C407  +
cmp eax 1 +
jnz loc_100C432  +
lea eax [ebp+var_4] +
push eax  +
push offset a?xmlVersion1_0  +
push offset aScheduleddefra  +
push [ebp+var_8]  +
push esi  +
call sub_10098A8  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A1Bh +
jl loc_100C3A9  +
mov [ebp+var_30] ax +
push [ebp+var_4]  +
push esi  +
call sub_100C0CC  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A20h +
jl loc_100C3A9  +
push ebx  +
push edi  +
lea edi [eax+6] +
lea ebx [eax+10h] +
cmp [ebp+var_34] 1 +
mov [ebp+var_30] ax +
jz loc_100C463  +
cmp dword ptr [esi+54h] 0 +
jz loc_100C4BE  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100C474  +
mov ecx [eax] +
and [ebp+var_4] 0 +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
push esi  +
call sub_100A890  +
mov [ebp+var_34] eax +
test eax eax +
jl loc_100C507  +
cmp [ebp+var_34] 1 +
mov eax edi +
mov [ebp+var_30] ax +
jz loc_100C4AC  +
push [ebp+var_4]  +
and dword ptr [esi+54h] 0 +
push esi  +
call sub_100C0CC  +
mov [ebp+var_34] eax +
test eax eax +
jl loc_100C50D  +
mov eax ebx +
jmp loc_100C453  +
mov [ebp+var_34] 8900001Ch +
mov eax 0A2Ah +
mov [ebp+var_2E] ax +
jmp loc_100C511  +
push [ebp+var_4]  +
lea edi [esi+24h] +
push edi  +
call sub_100848E  +
mov edi [edi] +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push edi  +
call dword ptr [eax+3Ch]  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A37h +
jl loc_100C4B8  +
fld  [ebp+var_10] +
push esi  +
fstp  qword ptr [esi+0A0h] +
mov [ebp+var_30] ax +
call sub_10089C4  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 0A3Bh +
jl loc_100C4B8  +
mov [ebp+var_30] ax +
jmp loc_100C511  +
mov [ebp+var_2E] di +
jmp loc_100C511  +
mov [ebp+var_2E] bx +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
mov esi [ebp+var_34] +
test eax eax +
jz loc_100C523  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_100C530  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
xor eax eax +
cmp dword_101B3D8 eax +
jz locret_100C568  +
push esi  +
lea esi [ecx+8] +
mov eax [esi] +
test eax eax +
jz loc_100C561  +
and dword ptr [esi] 0 +
push eax  +
call sub_100B695  +
push esi  +
call sub_100B6C5  +
pop esi  +
retn   +
***
fldz   +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
mov dword ptr [esi+8] 69556644h +
mov [esi+0Ch] ebx +
mov [esi+14h] ebx +
push edi  +
xor eax eax +
inc eax  +
push 2  +
mov dword ptr [esi] offset off_1001C0C +
mov dword ptr [esi+4] offset off_1001BF0 +
mov [esi+20h] ebx +
mov [esi+24h] ebx +
fst  qword ptr [esi+98h] +
pop edx  +
fst  qword ptr [esi+0A0h] +
mov [esi+2Ch] eax +
fstp  qword ptr [esi+0A8h] +
mov [esi+40h] eax +
mov [esi+0B0h] eax +
push 8  +
pop ecx  +
xor eax eax +
mov [esi+28h] edx +
mov [esi+30h] ecx +
mov [esi+34h] ebx +
mov [esi+3Ch] edx +
mov [esi+44h] ecx +
mov [esi+48h] ebx +
mov [esi+88h] ebx +
mov [esi+38h] ebx +
mov [esi+8Ch] ebx +
mov [esi+0B4h] ebx +
mov [esi+0B8h] ebx +
mov [esi+0BCh] ebx +
mov [esi+54h] ebx +
mov [esi+0C0h] ebx +
mov [esi+104h] ebx +
mov [esi+7Ch] ebx +
mov [esi+5Ch] ebx +
mov [esi+0FCh] ebx +
mov [esi+80h] ebx +
mov [esi+12Ch] ebx +
mov [esi+130h] ebx +
mov [esi+0CCh] ebx +
mov [esi+0D0h] ebx +
mov [esi+0D4h] ebx +
mov [esi+0D8h] ebx +
mov [esi+0F8h] ebx +
mov [esi+50h] ebx +
mov [esi+84h] ebx +
mov [esi+90h] ebx +
mov [esi+94h] ebx +
lea edi [esi+0E8h] +
stos   +
stos   +
stos   +
stos   +
mov edi ds:InitializeCriticalSection +
lea eax [esi+60h] +
push eax  +
call edi  +
lea eax [esi+108h] +
push eax  +
mov [esi+120h] ebx +
mov [esi+124h] ebx +
call edi  +
pop edi  +
mov [esi+0DCh] ebx +
mov [esi+0E0h] ebx +
mov [esi+128h] ebx +
mov [esi+0C4h] ebx +
mov [esi+58h] ebx +
mov [esi+78h] ebx +
mov [esi+0E4h] ebx +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov eax ecx +
retn   +
***
mov edi edi +
push esi  +
mov esi ds:DeleteCriticalSection +
push edi  +
mov edi ecx +
lea eax [edi+60h] +
push eax  +
mov dword ptr [edi] offset off_1001C0C +
mov dword ptr [edi+4] offset off_1001BF0 +
call esi  +
lea eax [edi+108h] +
push eax  +
call esi  +
mov esi [edi+58h] +
test esi esi +
jz loc_100C71A  +
push ebx  +
mov ebx ds:CoTaskMemFree +
push dword ptr [esi+4]  +
call ebx  +
push dword ptr [esi+8]  +
and dword ptr [esi+4] 0 +
call ebx  +
push dword ptr [esi]  +
and dword ptr [esi+8] 0 +
call ebx  +
push dword ptr [esi+0Ch]  +
and dword ptr [esi] 0 +
call ebx  +
and dword ptr [esi+0Ch] 0 +
mov eax esi +
mov esi [esi+48h] +
push eax  +
call ebx  +
test esi esi +
jnz loc_100C6EB  +
pop ebx  +
mov eax [edi+0F8h] +
test eax eax +
jz loc_100C72B  +
push eax  +
call ds:SetEvent  +
mov eax [edi+24h] +
test eax eax +
jz loc_100C738  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [edi+20h] +
test eax eax +
jz loc_100C745  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [edi+14h] +
test eax eax +
jz loc_100C756  +
and dword ptr [edi+14h] 0 +
push eax  +
call sub_100B695  +
mov dword ptr [edi+8] 49754664h +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push esi  +
mov dword ptr [esi] offset off_1001C3C +
mov dword ptr [esi+4] offset off_1001C20 +
mov dword ptr [esi+0Ch] 1 +
call sub_10088D0  +
push offset Addend  +
call ds:InterlockedDecrement  +
mov ecx esi +
pop esi  +
jmp loc_100C6B5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax] +
mov ecx [ebp+arg_4] +
cmp edx [ecx] +
jnz loc_100C7CA  +
mov edx [eax+4] +
cmp edx [ecx+4] +
jnz loc_100C7CA  +
mov edx [eax+8] +
cmp edx [ecx+8] +
jnz loc_100C7CA  +
mov eax [eax+0Ch] +
cmp eax [ecx+0Ch] +
jnz loc_100C7CA  +
xor eax eax +
inc eax  +
jmp loc_100C7CC  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jnz loc_100C7FF  +
cmp dword ptr [eax+4] 0 +
jnz loc_100C7FF  +
cmp dword ptr [eax+8] 0C0h +
jnz loc_100C7FF  +
cmp dword ptr [eax+0Ch] 46000000h +
jnz loc_100C7FF  +
xor eax eax +
inc eax  +
jmp loc_100C801  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_100C89F  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_100C89F  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jnz loc_100C831  +
mov eax 80004003h +
jmp loc_100C8A4  +
push [ebp+arg_8]  +
and dword ptr [ebx] 0 +
call sub_100C7D5  +
test eax eax +
jz loc_100C891  +
mov esi [esi+4] +
add esi [ebp+arg_0] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [ebx] esi +
xor eax eax +
jmp loc_100C8A4  +
mov eax [esi] +
xor ecx ecx +
test eax eax +
setz cl  +
mov [ebp+arg_4] ecx +
test ecx ecx +
jnz loc_100C86F  +
push [ebp+arg_8]  +
push eax  +
call sub_100C79C  +
test eax eax +
jz loc_100C88E  +
cmp edi 1 +
jz loc_100C840  +
push dword ptr [esi+4]  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call edi  +
test eax eax +
jz loc_100C8A4  +
cmp [ebp+arg_4] 0 +
jnz loc_100C88E  +
test eax eax +
jl loc_100C8A4  +
add esi 0Ch +
mov edi [esi+8] +
test edi edi +
jnz loc_100C852  +
mov eax 80004002h +
jmp loc_100C8A4  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset off_1001700  +
push ecx  +
call sub_100C80A  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
add esi 0Ch +
push esi  +
call ds:InterlockedIncrement  +
mov ecx [esi+8] +
mov edi eax +
test ecx ecx +
jz loc_100C8F3  +
mov edx edi +
call sub_10084C8  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
call sub_100C8B0  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100C8CF  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100C900  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100C56E  +
push offset Addend  +
mov dword ptr [esi] offset off_1001C3C +
mov dword ptr [esi+4] offset off_1001C20 +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
lea esi [ecx+0Ch] +
push edi  +
mov edi [esi+8] +
xor ebx ebx +
test edi edi +
jz loc_100C981  +
push edi  +
call ds:InterlockedIncrement  +
mov ebx edi +
push esi  +
call ds:InterlockedDecrement  +
test ebx ebx +
jz loc_100C99B  +
mov edx eax +
mov ecx ebx +
call sub_10084C8  +
push ebx  +
call sub_100B695  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100C765  +
test [ebp+arg_0] 1 +
jz loc_100C9BE  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
cmp ebx esi +
jnz loc_100C9E1  +
mov eax 80004003h +
jmp loc_100CA3E  +
push edi  +
push 138h  +
mov [ebx] esi +
mov edi 8007000Eh +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax esi +
jz loc_100CA02  +
push esi  +
mov ecx eax +
call sub_100C93A  +
mov esi eax +
test esi esi +
jz loc_100CA39  +
mov ecx esi +
call sub_100B71F  +
lea ecx [esi+0Ch] +
call sub_100C544  +
mov edi eax +
test edi edi +
jl loc_100CA23  +
push esi  +
call sub_10094D1  +
mov edi eax +
mov ecx esi +
call sub_100C967  +
test edi edi +
jz loc_100CA39  +
push 1  +
mov ecx esi +
call sub_100C9A4  +
xor esi esi +
mov eax edi +
mov [ebx] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
push 1  +
push 2FEh  +
push offset aCdefraguiCreat  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
mov esi [ebp+arg_C] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
test esi esi +
jz loc_100CB28  +
and dword ptr [esi] 0 +
and [ebp+var_2C] 0 +
mov eax 303h +
mov [ebp+var_28] ax +
lea eax [ebp+var_4] +
push eax  +
call sub_100C9CA  +
mov [ebp+var_2C] eax +
test eax eax +
mov eax 306h +
jl loc_100CB34  +
push [ebp+var_4]  +
mov [ebp+var_28] ax +
lea eax [ebp+var_8] +
push eax  +
call sub_100848E  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
call sub_1008D36  +
mov [ebp+var_2C] eax +
test eax eax +
mov eax 30Ah +
jl loc_100CB34  +
push [ebp+var_4]  +
mov [ebp+var_28] ax +
call sub_100C36A  +
mov [ebp+var_2C] eax +
test eax eax +
mov eax 30Dh +
jl loc_100CB34  +
push esi  +
mov [ebp+var_28] ax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push offset dword_1002DB8  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_2C] eax +
test eax eax +
mov eax 310h +
jl loc_100CB34  +
mov [ebp+var_28] ax +
mov eax [ebp+var_8] +
mov esi [ebp+var_2C] +
test eax eax +
jz loc_100CB19  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
mov [ebp+var_2C] 80070057h +
mov eax 303h +
mov [ebp+var_26] ax +
jmp loc_100CB09  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
add esi 0Ch +
push edi  +
mov edi [esi+8] +
xor ebx ebx +
test edi edi +
jz loc_100CB5F  +
push edi  +
call ds:InterlockedIncrement  +
mov ebx edi +
push esi  +
call ds:InterlockedDecrement  +
mov esi eax +
test ebx ebx +
jz loc_100CB7B  +
mov edx esi +
mov ecx ebx +
call sub_10084C8  +
push ebx  +
call sub_100B695  +
test esi esi +
jnz loc_100CB8D  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_100CB8D  +
push 1  +
call sub_100C9A4  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100CB3F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 80h  +
push offset aRundefragui  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
xor esi esi +
mov eax offset dword_10032B8 +
push offset dword_101B3C4  +
mov [ebp+var_4] esi +
xor ebx ebx +
mov [ebp+lpText] eax +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+lpCaption] eax +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
call sub_1008F57  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 88h +
jge loc_100CC08  +
mov [ebp+var_3A] ax +
jmp loc_100CCED  +
push esi  +
push esi  +
push edi  +
push esi  +
mov [ebp+var_3C] ax +
call ds:CreateEventW  +
mov ebx eax +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_100CC28  +
mov [ebp+var_4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100CA49  +
cmp eax 89000022h +
jnz loc_100CCA2  +
mov edx hInstance +
push 46Ah  +
lea ecx [ebp+lpCaption] +
call sub_1017AFF  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 92h +
jl loc_100CBFF  +
mov edx hInstance +
push 469h  +
lea ecx [ebp+lpText] +
mov [ebp+var_3C] ax +
call sub_1017AFF  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 93h +
jl loc_100CBFF  +
push 10h  +
push [ebp+lpCaption]  +
mov [ebp+var_3C] ax +
push [ebp+lpText]  +
push esi  +
call ds:MessageBoxW  +
mov [ebp+var_40] edi +
mov eax 97h +
jmp loc_100CCE9  +
cmp eax 8900001Ch +
jnz loc_100CCB3  +
mov [ebp+var_40] edi +
mov eax 9Dh +
jmp loc_100CCE9  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 0A1h +
jl loc_100CBFF  +
mov [ebp+var_3C] ax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
mov [ebp+var_40] eax +
jge loc_100CCE1  +
mov eax 0A4h +
jmp loc_100CBFF  +
mov [ebp+var_40] esi +
mov eax 0A7h +
mov [ebp+var_3C] ax +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_100CD13  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_100CD0A  +
mov [ebp+var_4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 0FFFFFFFFh  +
push ebx  +
call ds:WaitForSingleObject  +
mov edi [ebp+var_40] +
lea ecx [ebp+lpCaption] +
call sub_1016FE9  +
lea ecx [ebp+lpText] +
call sub_1016FE9  +
cmp ebx esi +
jz loc_100CD36  +
cmp ebx 0FFFFFFFFh +
jz loc_100CD36  +
push ebx  +
call ds:CloseHandle  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_100CD46  +
mov [ebp+var_4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+lpRootPathName] +
xor eax eax +
cmp esi eax +
jnz loc_100CDCE  +
xor eax eax +
jmp loc_100CE20  +
push 0Ah  +
lea ecx [ebp+FileSystemNameBuffer] +
push ecx  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push esi  +
call ds:GetVolumeInformationW  +
test eax eax +
jz loc_100CDCA  +
push edi  +
mov edi ds:_wcsicmp +
lea eax [ebp+FileSystemNameBuffer] +
push offset aFat32  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CE11  +
lea eax [ebp+FileSystemNameBuffer] +
push offset aFat  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CE11  +
xor eax eax +
jmp loc_100CE1F  +
push esi  +
call ds:GetDriveTypeW  +
dec eax  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1014215  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
mov [ebp+var_4] 1 +
jz loc_100CE5C  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1016674  +
test eax eax +
jl loc_100CE5C  +
mov eax [ebp+var_4] +
jmp locret_100CE5F  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
mov esi ds:GetSystemMetrics +
push edi  +
xor edi edi +
push edi  +
call esi  +
push 1  +
mov ebx eax +
call esi  +
mov [ebp+var_4] eax +
mov [ebp+Point.y] edi +
mov [ebp+Point.x] edi +
cmp [ebp+hWnd] edi +
jz loc_100CEAE  +
lea eax [ebp+Point] +
push eax  +
push [ebp+hWnd]  +
call ds:ClientToScreen  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetClientRect  +
jmp loc_100CEBA  +
mov [ebp+Rect.left] edi +
mov [ebp+Rect.top] edi +
mov [ebp+Rect.right] ebx +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+arg_0]  +
call ds:GetWindowRect  +
mov ecx [ebp+var_24] +
sub ecx [ebp+var_2C] +
mov eax [ebp+Rect.right] +
mov esi [ebp+var_20] +
sub esi [ebp+var_28] +
inc ecx  +
sub eax ecx +
sub eax [ebp+Rect.left] +
inc esi  +
inc eax  +
cdq   +
sub eax edx +
mov edi eax +
mov eax [ebp+Rect.bottom] +
sub eax esi +
sub eax [ebp+Rect.top] +
sar edi 1 +
add edi [ebp+Point.x] +
inc eax  +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Point.y] +
lea edx [edi+ecx] +
cmp edx ebx +
jle loc_100CF06  +
sub ebx ecx +
mov edi ebx +
jmp loc_100CF0C  +
test edi edi +
jge loc_100CF0C  +
xor edi edi +
mov edx [ebp+var_4] +
lea ebx [eax+esi] +
cmp ebx edx +
jle loc_100CF1C  +
sub edx esi +
mov eax edx +
jmp loc_100CF22  +
test eax eax +
jge loc_100CF22  +
xor eax eax +
push 0  +
push esi  +
push ecx  +
push eax  +
push edi  +
push [ebp+arg_0]  +
call ds:MoveWindow  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jz loc_100CF67  +
cmp [ebp+arg_4] eax +
jz loc_100CF63  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_wcsicmp  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
jmp loc_100CF71  +
xor eax eax +
jmp loc_100CF71  +
xor ecx ecx +
cmp [ebp+arg_4] eax +
setz cl  +
mov eax ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+60h] +
push edi  +
call ds:EnterCriticalSection  +
mov esi [esi+0C0h] +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_100CFB5  +
cmp word ptr [eax] 0 +
mov ecx eax +
jnz loc_100CFBA  +
mov ecx offset aNull +
mov eax [ebp+arg_0] +
mov [eax+4] ecx +
mov dword ptr [eax] 2 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push 1  +
push 76h  +
push offset aFillrectclr  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
push [ebp+arg_8]  +
mov esi ds:SetBkColor +
push [ebp+arg_0]  +
call esi  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_100D010  +
call sub_1015B6B  +
push 7Bh  +
mov [ebp+var_24] eax +
pop eax  +
mov [ebp+var_1E] ax +
jmp loc_100D06E  +
push edi  +
push 7Bh  +
pop eax  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_24] edi +
push 2  +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov [ebp+var_20] ax +
call ds:ExtTextOutW  +
test eax eax +
jnz loc_100D03D  +
call sub_1015B6B  +
push 7Ch  +
jmp loc_100D059  +
push 7Ch  +
pop eax  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_24] edi +
mov [ebp+var_20] ax +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_100D063  +
call sub_1015B6B  +
push 7Eh  +
mov [ebp+var_24] eax +
pop eax  +
mov [ebp+var_1E] ax +
jmp loc_100D06D  +
push 7Eh  +
pop eax  +
mov [ebp+var_24] edi +
mov [ebp+var_20] ax +
pop edi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4FCh +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 1  +
push 142h  +
push offset aGeticonof  +
lea ecx [ebp+var_4FC] +
mov [ebp+pszPath] ebx +
call sub_10148A2  +
xor edi edi +
push 2B0h  +
lea eax [ebp-2B4h] +
push edi  +
push eax  +
mov [ebp+hIcon] edi +
call memset  +
push 214h  +
lea eax [ebp+var_4CC] +
push edi  +
push eax  +
mov [ebp+uFlags] 100h +
mov [ebp+var_4D0] edi +
call memset  +
add esp 18h +
cmp esi edi +
jz loc_100D106  +
mov [esi] edi +
mov eax 14Ch +
cmp ebx edi +
jnz loc_100D125  +
mov [ebp+var_4FC] 80070057h +
mov [ebp+var_4F6] ax +
jmp loc_100D1C8  +
mov [ebp+var_4F8] ax +
mov eax 14Dh +
cmp esi edi +
jz loc_100D10F  +
mov [ebp+var_4FC] edi +
mov [ebp+var_4F8] ax +
lea ebx [eax-4Ch] +
cmp [ebp+arg_8] edi +
jz loc_100D150  +
mov [ebp+uFlags] ebx +
push [ebp+uFlags]  +
lea eax [ebp+hIcon] +
push 2B4h  +
push eax  +
push edi  +
push [ebp+pszPath]  +
call ds:SHGetFileInfoW  +
test eax eax +
jnz loc_100D1BA  +
lea eax [ebp+var_4D0] +
push eax  +
push ebx  +
push 8  +
mov [ebp+var_4D0] 218h +
call ds:SHGetStockIconInfo  +
mov [ebp+var_4FC] eax +
cmp eax edi +
mov eax 15Ah +
jge loc_100D1AB  +
mov [ebp+var_4FC] 80004005h +
jmp loc_100D119  +
mov [ebp+var_4F8] ax +
mov eax [ebp+var_4CC] +
jmp loc_100D1C0  +
mov eax [ebp+hIcon] +
mov [esi] eax +
mov [ebp+hIcon] edi +
cmp [ebp+hIcon] edi +
jz loc_100D1E2  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
mov [ebp+hIcon] edi +
mov esi [ebp+var_4FC] +
lea ecx [ebp+var_4FC] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push 1  +
push 1BEh  +
push offset aCdefraguiChang  +
lea ecx [ebp-24h] +
call sub_10148A2  +
mov esi [ebp+8] +
lea ebx [esi+108h] +
push ebx  +
call ds:EnterCriticalSection  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
cmp eax [esi+124h] +
ja loc_100D266  +
jb loc_100D251  +
cmp ecx [esi+120h] +
jnb loc_100D266  +
mov edx ecx +
or edx eax +
jz loc_100D266  +
and dword ptr [ebp-24h] 0 +
mov eax 1C8h +
mov [ebp-20h] ax +
jmp loc_100D2CF  +
mov [esi+120h] ecx +
mov [esi+124h] eax +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_100D299  +
test dword ptr [eax+1Ch] 8000000h +
jz loc_100D299  +
push offset dword_1001C78  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
mov eax [esi+128h] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_100D2CE  +
cmp [esi+104h] edi +
jnz loc_100D2CE  +
mov ecx [ebp+18h] +
push edi  +
push edi  +
mov [esi+18h] ecx +
mov ecx [ebp+14h] +
push 8102h  +
push eax  +
mov [esi+1Ch] ecx +
call ds:SendMessageW  +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
pop edi  +
push ebx  +
call ds:LeaveCriticalSection  +
mov esi [ebp-24h] +
lea ecx [ebp-24h] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 2DAh  +
push offset aCdefragui_oncl  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_100D337  +
and [ebp+var_24] 0 +
mov dword ptr [eax] 0 +
mov eax 2DEh +
mov [ebp+var_20] ax +
push esi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
mov eax 2DEh +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_100D324  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push 1  +
push 389h  +
push offset aCdefragui_onpa  +
lea ecx [ebp+var_68] +
call sub_10148A2  +
xor esi esi +
push 3Ch  +
lea eax [ebp+Paint.fErase] +
push esi  +
push eax  +
mov [ebp+Paint.hdc] esi +
call memset  +
xor eax eax +
mov [ebp+Points.x] esi +
lea edi [ebp+Points.y] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_78.left] esi +
lea edi [ebp+var_78.top] +
stos   +
stos   +
add esp 0Ch +
stos   +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
call ds:BeginPaint  +
mov edi eax +
cmp edi esi +
jnz loc_100D3D4  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 393h +
mov [ebp+var_62] ax +
jmp loc_100D4B6  +
push 44Dh  +
mov eax 393h +
push ebx  +
mov [ebp+var_68] esi +
mov [ebp+var_64] ax +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_100D406  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 396h +
mov [ebp+var_62] ax +
jmp loc_100D4AB  +
mov ecx 396h +
mov [ebp+var_64] cx +
lea ecx [ebp+Points] +
push ecx  +
push eax  +
mov [ebp+var_68] esi +
call ds:GetWindowRect  +
test eax eax +
jnz loc_100D433  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 398h +
jmp loc_100D3FD  +
mov eax 398h +
push 2  +
mov [ebp+var_64] ax +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push esi  +
mov [ebp+var_68] esi +
call ds:MapWindowPoints  +
test eax eax +
jnz loc_100D463  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 399h +
jmp loc_100D3FD  +
mov eax 399h +
mov [ebp+var_64] ax +
mov eax [ebp+Points.y] +
mov [ebp+var_78.bottom] eax +
mov eax [ebp-80h] +
push 5  +
mov [ebp+var_68] esi +
mov [ebp+var_78.left] esi +
mov [ebp+var_78.top] esi +
mov [ebp+var_78.right] eax +
call ds:GetSysColor  +
push eax  +
lea eax [ebp+var_78] +
push eax  +
push edi  +
call sub_100CFCF  +
mov [ebp+var_68] eax +
cmp eax esi +
mov eax 3A2h +
jl loc_100D3FD  +
mov [ebp+var_64] ax +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
call ds:EndPaint  +
mov esi [ebp+var_68] +
lea ecx [ebp+var_68] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
push 1  +
push 687h  +
push offset aCdefragui_dest  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov esi [ebp+arg_0] +
mov eax [esi+0E0h] +
mov edi ds:DestroyWindow +
test eax eax +
jz loc_100D50D  +
push eax  +
call edi  +
mov esi [esi+0DCh] +
test esi esi +
jz loc_100D51A  +
push esi  +
call edi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push 1  +
push 7B9h  +
push offset aCdefragui_rere  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
mov esi [ebp+arg_0] +
and [ebp+ppv] 0 +
and dword ptr [esi+120h] 0 +
and dword ptr [esi+124h] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002CC8  +
push 4  +
push 0  +
push offset stru_1002CE8  +
call ds:CoCreateInstance  +
mov [ebp+var_28] eax +
test eax eax +
jge loc_100D58E  +
mov ecx 7C3h +
mov [ebp+var_22] cx +
jmp loc_100D5D0  +
push [ebp+ppv]  +
mov eax 7C3h +
push esi  +
mov [ebp+var_24] ax +
call sub_100B59A  +
mov [ebp+var_28] eax +
test eax eax +
jge loc_100D5AE  +
mov ecx 7C4h +
jmp loc_100D588  +
push [ebp+ppv]  +
mov eax 7C4h +
push esi  +
mov [ebp+var_24] ax +
call sub_100B48D  +
mov [ebp+var_28] eax +
mov ecx 7C5h +
test eax eax +
jl loc_100D588  +
mov [ebp+var_24] cx +
mov esi eax +
mov eax [ebp+ppv] +
test eax eax +
jz loc_100D5DF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
push 1  +
push 0A96h  +
push offset aCdefraguiIdent  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov esi [ebp+arg_0] +
lea edi [esi+60h] +
push edi  +
call ds:EnterCriticalSection  +
mov esi [esi+58h] +
jmp loc_100D646  +
push dword ptr [esi]  +
call sub_100CDAE  +
test eax eax +
jnz loc_100D63E  +
push dword ptr [esi]  +
call sub_100CE34  +
test eax eax +
jz loc_100D63E  +
xor eax eax +
inc eax  +
jmp loc_100D640  +
xor eax eax +
mov [esi+20h] eax +
mov esi [esi+48h] +
test esi esi +
jnz loc_100D623  +
push edi  +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 0FDh  +
push offset aShellexecutewi  +
lea ecx [ebp+var_3C] +
call sub_10148A2  +
xor esi esi +
mov eax offset dword_10032B8 +
push 38h  +
mov [ebp+var_18] eax +
mov [ebp+var_C] eax +
lea eax [ebp-74h] +
push esi  +
push eax  +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebp+hObject] esi +
call memset  +
mov edx [ebp+arg_8] +
add esp 0Ch +
mov eax 103h +
cmp edx esi +
jnz loc_100D6D0  +
mov [ebp+var_3C] 80070057h +
mov [ebp+var_36] ax +
jmp loc_100D7C0  +
mov [ebp+var_38] ax +
mov eax 104h +
cmp [ebp+arg_C] esi +
jz loc_100D6C0  +
lea ecx [ebp+var_C] +
mov [ebp+var_3C] esi +
mov [ebp+var_38] ax +
call sub_101766B  +
mov [ebp+var_3C] eax +
cmp eax esi +
mov eax 106h +
jl loc_100D6C7  +
push [ebp+arg_C]  +
mov edx offset asc_10018D8 +
lea ecx [ebp+var_18] +
mov [ebp+var_38] ax +
call sub_1017ABA  +
mov [ebp+var_3C] eax +
cmp eax esi +
mov eax 108h +
jl loc_100D6C7  +
mov [ebp+var_38] ax +
mov eax [ebp+arg_0] +
mov dword ptr [ebp-74h] 540h +
mov [ebp+hObject] 3Ch +
mov [ebp-70h] eax +
cmp [ebp+arg_4] esi +
jz loc_100D73D  +
mov dword ptr [ebp-6Ch] offset aRunas +
mov eax [ebp+var_C] +
mov [ebp-68h] eax +
mov eax [ebp+var_18] +
mov [ebp-64h] eax +
lea eax [ebp+hObject] +
push eax  +
mov [ebp-5Ch] edi +
call ds:ShellExecuteExW  +
test eax eax +
jnz loc_100D7C0  +
call ds:GetLastError  +
cmp eax esi +
jle loc_100D76E  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx eax +
mov [ebp+var_3C] ecx +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_100D79B  +
test dword ptr [eax+1Ch] 200h +
jz loc_100D79B  +
push ecx  +
push offset dword_1001C78  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
cmp [ebp+var_3C] 800704C7h +
jnz loc_100D7AE  +
mov [ebp+var_3C] edi +
mov eax 11Dh +
jmp loc_100D7BC  +
cmp [ebp+var_3C] esi +
mov eax 121h +
jl loc_100D6C7  +
mov [ebp+var_38] ax +
cmp [ebp-40h] esi +
jz loc_100D7D1  +
push dword ptr [ebp-40h]  +
call ds:CloseHandle  +
mov [ebp-40h] esi +
mov esi [ebp+var_3C] +
lea ecx [ebp+var_C] +
call sub_1016FE9  +
lea ecx [ebp+var_18] +
call sub_1016FE9  +
lea ecx [ebp+var_3C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
push esi  +
push 1  +
push 197h  +
push offset aInsertstatusli  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
xor esi esi +
push 38h  +
lea eax [ebp+var_68] +
push esi  +
push eax  +
mov [ebp+lParam] esi +
call memset  +
add esp 0Ch +
mov [ebp+var_C] offset dword_10032B8 +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov eax 19Ch +
cmp [ebp+hWnd] esi +
jnz loc_100D851  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_100D8D2  +
push edi  +
mov edi [ebp+arg_10] +
mov [ebp+var_2C] ax +
mov eax 19Dh +
cmp edi esi +
jnz loc_100D86B  +
mov [ebp+var_30] 80070057h +
jmp loc_100D8BD  +
mov [ebp+var_2C] ax +
mov eax [ebp+arg_4] +
mov [ebp+var_68] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_30] esi +
mov [ebp+lParam] 0Ch +
mov [ebp+var_50] esi +
mov [ebp+var_64] esi +
mov [ebp+var_4C] eax +
cmp [ebp+arg_C] esi +
jz loc_100D899  +
push 2  +
pop eax  +
mov [ebp+var_5C] eax +
mov [ebp+var_60] eax +
lea eax [ebp+lParam] +
push eax  +
push esi  +
push 104Dh  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jnz loc_100D8C3  +
mov [ebp+var_30] 80004005h +
mov eax 1AEh +
mov [ebp+var_2A] ax +
jmp loc_100D8D1  +
mov ecx 1AEh +
mov [ebp+var_30] esi +
mov [ebp+var_2C] cx +
mov [edi] eax +
pop edi  +
mov esi [ebp+var_30] +
lea ecx [ebp+var_C] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 1EBh  +
push offset aCdefragui_in_1  +
lea ecx [ebp+var_44] +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
push 0Ah  +
pop ecx  +
stos   +
push 459h  +
push [ebp+hDlg]  +
xor eax eax +
mov [ebp+lParam] ebx +
lea edi [ebp+var_6C] +
stos   +
mov [ebp+var_10] offset dword_10032B8 +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
call ds:GetDlgItem  +
mov edi eax +
mov [ebp+hWnd] edi +
cmp edi ebx +
jnz loc_100D960  +
call sub_1015B6B  +
mov [ebp+var_44] eax +
mov eax 1F8h +
jmp loc_100DBCA  +
mov esi ds:SendMessageW +
push ebx  +
push 1  +
push 108Eh  +
mov eax 1F8h +
push edi  +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ax +
call esi  +
cmp eax 1 +
mov eax 1FDh +
jnz loc_100DBC3  +
push 0FFFFFFF0h  +
push edi  +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ax +
call ds:GetWindowLongW  +
or eax 8 +
push eax  +
push 0FFFFFFF0h  +
push edi  +
call ds:SetWindowLongW  +
push 10020h  +
push ebx  +
push 1036h  +
push edi  +
call esi  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
call ds:GetClientRect  +
test eax eax +
jnz loc_100D9D7  +
call sub_1015B6B  +
mov [ebp+var_44] eax +
mov eax 208h +
jmp loc_100DBCA  +
mov eax 208h +
push 2Ch  +
mov [ebp+var_40] ax +
mov [ebp+var_44] ebx +
pop ecx  +
lea eax [ebp+lParam] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100D9E9  +
mov edx hInstance +
push 473h  +
lea ecx [ebp+var_10] +
call sub_1017AFF  +
mov [ebp+var_44] eax +
cmp eax ebx +
mov eax 20Ch +
jl loc_100DBCA  +
mov [ebp+var_40] ax +
mov eax [ebp+var_C] +
inc eax  +
mov [ebp+var_60] eax +
mov eax [ebp+var_10] +
mov [ebp+var_64] eax +
mov eax [ebp+Rect.right] +
imul eax eax +
push 64h  +
pop ecx  +
cdq   +
idiv  ecx +
mov edi 1061h +
mov [ebp+lParam] 2Eh +
mov [ebp+var_6C] 800000h +
mov [ebp+var_5C] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_68] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push edi  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 216h +
jz loc_100DBC3  +
push 2Ch  +
mov [ebp+var_40] ax +
mov [ebp+var_44] ebx +
pop ecx  +
lea eax [ebp+lParam] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100DA71  +
lea ecx [ebp+var_10] +
call sub_101700D  +
mov edx hInstance +
push 474h  +
lea ecx [ebp+var_10] +
call sub_1017AFF  +
mov [ebp+var_44] eax +
cmp eax ebx +
mov eax 21Bh +
jl loc_100DBCA  +
mov [ebp+var_40] ax +
xor eax eax +
inc eax  +
mov [ebp+var_5C] eax +
mov [ebp+var_54] eax +
mov eax [ebp+Rect.right] +
imul eax eax +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
mov [ebp+lParam] 2Eh +
mov [ebp+var_6C] 800000h +
mov [ebp+var_68] eax +
mov eax [ebp+var_C] +
inc eax  +
mov [ebp+var_60] eax +
mov eax [ebp+var_10] +
mov [ebp+var_64] eax +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push edi  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 225h +
jz loc_100DBC3  +
push 2Ch  +
mov [ebp+var_40] ax +
mov [ebp+var_44] ebx +
pop ecx  +
lea eax [ebp+lParam] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100DB00  +
lea ecx [ebp+var_10] +
call sub_101700D  +
mov edx hInstance +
push 475h  +
lea ecx [ebp+var_10] +
call sub_1017AFF  +
mov [ebp+var_44] eax +
cmp eax ebx +
mov eax 22Ah +
jl loc_100DBCA  +
mov [ebp+var_40] ax +
push 2  +
pop eax  +
mov [ebp+var_5C] eax +
mov [ebp+var_54] eax +
mov eax [ebp+var_C] +
inc eax  +
mov [ebp+var_60] eax +
mov eax [ebp+var_10] +
mov [ebp+var_64] eax +
mov eax [ebp+Rect.right] +
imul eax eax +
push 64h  +
pop ecx  +
cdq   +
idiv  ecx +
mov [ebp+lParam] 2Eh +
mov [ebp+var_6C] 800000h +
mov [ebp+var_68] eax +
lea eax [ebp+lParam] +
push eax  +
push 2  +
push edi  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 234h +
jz loc_100DBC3  +
push 21h  +
pop edi  +
push 0FFFFFFECh  +
push [ebp+hDlg]  +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ax +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_100DB9F  +
mov edi 2021h +
push 1  +
push 1  +
push edi  +
mov edi ds:GetSystemMetrics +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
call ds:ImageList_Create  +
cmp eax ebx +
jnz loc_100DBD0  +
mov eax 23Fh +
mov [ebp+var_44] 80004005h +
mov [ebp+var_3E] ax +
jmp loc_100DBFB  +
push eax  +
push 1  +
mov ecx 23Fh +
push 1003h  +
push [ebp+hWnd]  +
mov [ebp+var_40] cx +
mov ecx [ebp+arg_0] +
mov [ebp+var_44] ebx +
mov [ecx+0E4h] eax +
call esi  +
push [ebp+hWnd]  +
call ds:SetFocus  +
mov esi [ebp+var_44] +
lea ecx [ebp+var_10] +
call sub_1016FE9  +
lea ecx [ebp+var_44] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 19Ch +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 1  +
mov [ebp+var_188] eax +
mov eax [ebp+arg_4] +
push 2E9h  +
push offset aCdefragui_popu  +
lea ecx [ebp+var_118] +
mov [ebp+hDlg] eax +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
push 4Eh  +
mov word ptr [ebp+TimeStr] ax +
mov esi offset dword_10032B8 +
lea eax [ebp+TimeStr+2] +
push ebx  +
push eax  +
mov [ebp+var_130] esi +
mov [ebp+var_12C] ebx +
mov [ebp+var_128] ebx +
mov [ebp+var_150] esi +
mov [ebp+var_14C] ebx +
mov [ebp+var_148] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_174] esi +
mov [ebp+var_170] ebx +
mov [ebp+var_16C] ebx +
mov [ebp+var_144] ebx +
call memset  +
xor eax eax +
mov [ebp+Time.wYear] ax +
lea edi [ebp+Time.wMonth] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
push 9Eh  +
mov word ptr [ebp+var_F4] ax +
lea eax [ebp+var_F4+2] +
push ebx  +
push eax  +
mov [ebp+var_13C] esi +
mov [ebp+var_138] ebx +
mov [ebp+var_134] ebx +
mov [ebp+var_180] esi +
mov [ebp+var_17C] ebx +
mov [ebp+var_178] ebx +
call memset  +
mov edi [ebp+hDlg] +
add esp 18h +
push 403h  +
mov [ebp+var_168] esi +
mov [ebp+var_15C] esi +
mov esi ds:GetDlgItem +
push edi  +
mov [ebp+var_140] ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] ebx +
mov [ebp+var_158] ebx +
mov [ebp+var_154] ebx +
call esi  +
mov [ebp+var_18C] eax +
cmp eax ebx +
jnz loc_100DD72  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 300h +
mov [ebp+var_112] ax +
jmp loc_100E393  +
push 3EAh  +
mov eax 300h +
push edi  +
mov [ebp+var_118] ebx +
mov [ebp+var_114] ax +
call esi  +
mov [ebp+var_184] eax +
cmp eax ebx +
jnz loc_100DDA8  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 303h +
jmp loc_100DD66  +
push 402h  +
mov eax 303h +
push edi  +
mov [ebp+var_118] ebx +
mov [ebp+var_114] ax +
call esi  +
mov [ebp+hWnd] eax +
cmp eax ebx +
jnz loc_100DDDE  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 306h +
jmp loc_100DD66  +
push 401h  +
mov eax 306h +
push edi  +
mov [ebp+var_118] ebx +
mov [ebp+var_114] ax +
call esi  +
mov [ebp+hDlg] eax +
cmp eax ebx +
jnz loc_100DE17  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 309h +
jmp loc_100DD66  +
mov eax 309h +
push 0ADh  +
push hInstance  +
mov [ebp+var_114] ax +
lea eax [ebp+var_174] +
push eax  +
mov [ebp+var_118] ebx +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 30Bh +
jl loc_100DD66  +
mov esi [ebp+var_188] +
mov [ebp+var_114] ax +
cmp [esi+38h] ebx +
jz loc_100E2B4  +
fldz   +
fcomp  qword ptr [esi+0A8h] +
fnstsw  ax +
test ah 44h +
jp loc_100DECC  +
push [ebp+var_174]  +
lea eax [ebp+var_150] +
push 68h  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 312h +
jl loc_100DD66  +
cmp dword ptr [esi+30h] 18h +
mov [ebp+var_114] ax +
mov eax 31Ch +
jb loc_100DF2C  +
mov [ebp+var_118] 80004005h +
jmp loc_100DD66  +
fld  qword ptr [esi+0A8h] +
lea eax [ebp+pv] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+1B4h+var_1B4] +
call sub_1009017  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 316h +
jl loc_100DD66  +
push [ebp+pv]  +
mov [ebp+var_114] ax +
push 68h  +
push hInstance  +
lea eax [ebp+var_150] +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 317h +
jmp loc_100DEA5  +
mov [ebp+var_114] ax +
mov ax [esi+30h] +
push 28h  +
mov [ebp+Time.wHour] ax +
lea eax [ebp+TimeStr] +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push 2  +
mov edi 400h +
push edi  +
mov [ebp+var_118] ebx +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_100DF79  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 31Fh +
jmp loc_100DD66  +
mov eax 31Fh +
mov [ebp+var_114] ax +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [esi+30h] +
imul eax eax +
push ds:dword_1001CE8[eax]  +
lea eax [ebp+var_13C] +
push hInstance  +
mov [ebp+var_118] ebx +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 320h +
jl loc_100DD66  +
mov [ebp+var_114] ax +
mov eax [esi+28h] +
dec eax  +
dec eax  +
jz loc_100E1DF  +
dec eax  +
jz loc_100E124  +
dec eax  +
jz loc_100DFF3  +
mov [ebp+var_118] 8000FFFFh +
mov eax 357h +
jmp loc_100DD66  +
mov ecx [esi+2Ch] +
cmp ecx ebx +
jz loc_100E005  +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_100E020  +
cmp ecx ebx +
jnz loc_100E00C  +
mov eax [esi+34h] +
cmp eax ebx +
jnz loc_100E020  +
mov [ebp+var_118] 80004005h +
mov eax 342h +
jmp loc_100DD66  +
mov edx 342h +
mov [ebp+var_118] ebx +
mov [ebp+var_114] dx +
cmp eax ebx +
jz loc_100E065  +
push [ebp+var_13C]  +
lea eax [ebp+var_130] +
push 76h  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 347h +
jmp loc_100E209  +
lea eax [ebp+var_144] +
push eax  +
push ecx  +
call sub_10087A6  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 34Bh +
jl loc_100DD66  +
mov [ebp+var_114] ax +
mov eax [ebp+var_144] +
lea ecx [eax-1] +
cmp ecx 1Eh +
jbe loc_100E0AE  +
mov [ebp+var_118] 80004005h +
mov eax 34Ch +
jmp loc_100DD66  +
push eax  +
lea eax [ebp+var_180] +
mov ecx 34Ch +
push offset aD  +
push eax  +
mov [ebp+var_118] ebx +
mov [ebp+var_114] cx +
call sub_10172AE  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 34Eh +
jl loc_100DD66  +
push [ebp+var_180]  +
mov [ebp+var_114] ax +
push [ebp+var_13C]  +
lea eax [ebp+var_130] +
push 6Eh  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 14h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 351h +
jmp loc_100E209  +
lea eax [ebp+var_140] +
push eax  +
push edi  +
push esi  +
call sub_1012F6D  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 32Dh +
jl loc_100DD66  +
mov [ebp+var_114] ax +
mov eax [esi+2Ch] +
xor edx edx +
xor ecx ecx +
cmp ds:dword_1001C88[ecx] eax +
jz loc_100E166  +
add ecx 0Ch +
inc edx  +
cmp ecx 54h +
jb loc_100E153  +
jmp loc_100E1AC  +
push ebx  +
push 50h  +
lea eax [ebp+var_F4] +
push eax  +
add edx 7 +
push edx  +
push [ebp+var_140]  +
push edi  +
call ds:GetCalendarInfoW  +
test eax eax +
jnz loc_100E19A  +
call sub_1015B6B  +
mov [ebp+var_118] eax +
mov eax 335h +
jmp loc_100DD66  +
mov eax 335h +
mov [ebp+var_118] ebx +
mov [ebp+var_114] ax +
lea eax [ebp+var_F4] +
push eax  +
push [ebp+var_13C]  +
lea eax [ebp+var_130] +
push 6Bh  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 14h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 33Ch +
jmp loc_100E209  +
push [ebp+var_13C]  +
lea eax [ebp+var_130] +
push 6Ch  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 327h +
jl loc_100DD66  +
push 46Eh  +
push hInstance  +
mov [ebp+var_114] ax +
lea eax [ebp+var_15C] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 35Ch +
jl loc_100DD66  +
push [ebp+var_150]  +
mov [ebp+var_114] ax +
push [ebp+hWnd]  +
call sub_1009206  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 35Eh +
jl loc_100DD66  +
push [ebp+var_130]  +
mov [ebp+var_114] ax +
push [ebp+hDlg]  +
call sub_1009206  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 35Fh +
jl loc_100DD66  +
mov edi ds:ShowWindow +
push 1  +
push [ebp+hWnd]  +
mov [ebp+var_114] ax +
call edi  +
push 1  +
jmp loc_100E2F8  +
push 46Dh  +
push hInstance  +
lea eax [ebp+var_15C] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 366h +
jl loc_100DD66  +
mov edi ds:ShowWindow +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+var_114] ax +
call edi  +
push ebx  +
push [ebp+hDlg]  +
call edi  +
lea eax [ebp+var_168] +
cmp [esi+38h] ebx +
jz loc_100E41E  +
push 46Ch  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 36Fh +
jl loc_100DD66  +
push [ebp+var_168]  +
mov [ebp+var_114] ax +
push [ebp+var_18C]  +
call sub_1009206  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 375h +
jl loc_100DD66  +
push [ebp+var_15C]  +
mov [ebp+var_114] ax +
push [ebp+var_184]  +
call sub_1009206  +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 378h +
jl loc_100DD66  +
mov [ebp+var_114] ax +
cmp [ebp+pv] ebx +
jz loc_100E3AD  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov esi [ebp+var_118] +
lea ecx [ebp+var_15C] +
call sub_1016FE9  +
lea ecx [ebp+var_168] +
call sub_1016FE9  +
lea ecx [ebp+var_180] +
call sub_1016FE9  +
lea ecx [ebp+var_13C] +
call sub_1016FE9  +
lea ecx [ebp+var_174] +
call sub_1016FE9  +
lea ecx [ebp+var_150] +
call sub_1016FE9  +
lea ecx [ebp+var_130] +
call sub_1016FE9  +
lea ecx [ebp+var_118] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
push 46Bh  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_118] eax +
cmp eax ebx +
mov eax 372h +
jmp loc_100E330  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push 1  +
push 3B5h  +
push offset aCdefragui_oncl  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+hDlg]  +
xor esi esi +
push [ebp+arg_0]  +
mov [ebp+var_4] esi +
call sub_100D2EE  +
mov [ebp+var_28] eax +
cmp eax esi +
mov eax 3B8h +
jge loc_100E48C  +
mov [ebp+var_22] ax +
jmp loc_100E4D1  +
mov [ebp+var_24] ax +
cmp [ebp+var_4] esi +
jnz loc_100E4D1  +
push [ebp+arg_0]  +
call sub_100D4D9  +
push esi  +
push esi  +
push [ebp+hDlg]  +
call ds:SetWindowLongW  +
push esi  +
push [ebp+hDlg]  +
call ds:EndDialog  +
test eax eax +
jnz loc_100E4C5  +
call sub_1015B6B  +
mov [ebp+var_28] eax +
mov eax 3C0h +
jmp loc_100E486  +
mov eax 3C0h +
mov [ebp+var_28] esi +
mov [ebp+var_24] ax +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 40Dh  +
push offset aCdefraguiUpdat  +
lea ecx [ebp+var_54] +
call sub_10148A2  +
mov esi ds:GetDlgItem +
xor edi edi +
push 3E9h  +
push [ebp+hDlg]  +
mov eax offset dword_10032B8 +
mov [ebp+var_18] edi +
mov [ebp+var_24] eax +
mov [ebp+var_20] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_30] eax +
mov [ebp+var_2C] edi +
mov [ebp+var_28] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_14] edi +
call esi  +
mov [ebp+hWnd] eax +
cmp eax edi +
jnz loc_100E55B  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 41Ah +
mov [ebp+var_4E] ax +
jmp loc_100E746  +
push 450h  +
push [ebp+hDlg]  +
mov eax 41Ah +
mov [ebp+var_54] edi +
mov [ebp+var_50] ax +
call esi  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_100E587  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 41Dh +
jmp loc_100E552  +
mov eax 41Dh +
mov [ebp+var_50] ax +
mov eax [ebp+arg_0] +
mov eax [eax+58h] +
mov [ebp+var_54] edi +
cmp eax edi +
jz loc_100E67C  +
push 2  +
pop edx  +
cmp [eax+14h] edi +
jz loc_100E5C9  +
mov ecx [eax+28h] +
cmp ecx ebx +
jz loc_100E5B4  +
cmp ecx edx +
jnz loc_100E5C1  +
inc [ebp+var_10]  +
mov [ebp+var_18] ebx +
cmp ecx edx +
jnz loc_100E5C1  +
inc [ebp+var_14]  +
cmp [eax+14h] edi +
jz loc_100E5C9  +
inc [ebp+var_C]  +
mov eax [eax+48h] +
cmp eax edi +
jnz loc_100E5A4  +
cmp [ebp+var_18] edi +
jz loc_100E668  +
mov esi [ebp+var_10] +
mov eax [ebp+arg_0] +
mov [eax+0B0h] edx +
cmp [ebp+var_14] esi +
jnz loc_100E5ED  +
push edi  +
jmp loc_100E5EE  +
push ebx  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
mov edx hInstance +
lea ecx [ebp+var_24] +
cmp esi ebx +
jnz loc_100E652  +
push 78h  +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 454h +
jl loc_100E552  +
push [ebp+var_24]  +
mov [ebp+var_50] ax +
push 3E9h  +
push [ebp+hDlg]  +
call sub_1017DFC  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 45Ah +
jl loc_100E552  +
push edi  +
push [ebp+var_8]  +
mov [ebp+var_50] ax +
call ds:ShowWindow  +
jmp loc_100E746  +
push 48Bh  +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 458h +
jmp loc_100E615  +
cmp [ebp+var_C] edi +
jbe loc_100E67C  +
mov esi ds:EnableWindow +
push ebx  +
push [ebp+var_8]  +
call esi  +
push ebx  +
jmp loc_100E689  +
mov esi ds:EnableWindow +
push edi  +
push [ebp+var_8]  +
call esi  +
push edi  +
push [ebp+hWnd]  +
call esi  +
push ebx  +
push [ebp+var_8]  +
call ds:ShowWindow  +
mov eax [ebp+arg_0] +
mov [eax+0B0h] ebx +
mov edx hInstance +
lea ecx [ebp+var_24] +
cmp [ebp+var_C] ebx +
jnz loc_100E76A  +
push 77h  +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 47Bh +
jl loc_100E552  +
mov edx hInstance +
push 48Ch  +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 47Ch +
jl loc_100E552  +
push [ebp+var_24]  +
mov [ebp+var_50] ax +
push 3E9h  +
push [ebp+hDlg]  +
call sub_1017DFC  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 484h +
jl loc_100E552  +
push [ebp+var_30]  +
mov [ebp+var_50] ax +
push 450h  +
push [ebp+hDlg]  +
call sub_1017DFC  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 485h +
jl loc_100E552  +
push [ebp+hWnd]  +
mov [ebp+var_50] ax +
call ds:SetFocus  +
mov esi [ebp+var_54] +
lea ecx [ebp+var_30] +
call sub_1016FE9  +
lea ecx [ebp+var_24] +
call sub_1016FE9  +
lea ecx [ebp+var_54] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 48Ah  +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 480h +
jl loc_100E552  +
mov edx hInstance +
push 48Dh  +
lea ecx [ebp+var_30] +
mov [ebp+var_50] ax +
call sub_1017AFF  +
mov [ebp+var_54] eax +
cmp eax edi +
mov eax 481h +
jmp loc_100E6EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
push edi  +
push 1  +
push 5A1h  +
push offset aCdefragui_laun  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
xor esi esi +
xor eax eax +
mov [ebp+var_10] esi +
lea edi [ebp+var_C] +
stos   +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002084  +
push 1  +
push esi  +
push offset stru_1002074  +
mov [ebp+ppv] esi +
mov [ebp+var_1C] offset dword_10032B8 +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_8] esi +
call ds:CoCreateInstance  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 5A9h +
jge loc_100E814  +
mov [ebp+var_3A] ax +
jmp loc_100E890  +
mov [ebp+var_3C] ax +
push offset aDisk_defrag_ho  +
lea eax [ebp+var_10] +
push eax  +
call sub_100CFA1  +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push 38Fh  +
push esi  +
call WinSqmAddToStream  +
push offset a1399f42dC6d447  +
mov edx offset aMshelpWindows? +
lea ecx [ebp+var_1C] +
call sub_1017ABA  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 5B2h +
jl loc_100E80E  +
lea edx [ebp+var_8] +
lea ecx [ebp+var_1C] +
mov [ebp+var_3C] ax +
call sub_10170FB  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 5B3h +
jl loc_100E80E  +
push [ebp+var_8]  +
mov [ebp+var_3C] ax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_40] eax +
cmp eax esi +
mov eax 5B4h +
jl loc_100E80E  +
mov [ebp+var_3C] ax +
mov edi [ebp+var_40] +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_100E8A8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 5C1h  +
push offset aCdefragui_rela  +
lea ecx [ebp+var_4C] +
call sub_10148A2  +
mov eax offset dword_10032B8 +
mov [ebp+var_28] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_10] eax +
mov eax dword_101B3BC +
xor esi esi +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
dec eax  +
mov [ebp+var_24] esi +
mov [ebp+var_20] esi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
jz loc_100E995  +
dec eax  +
jz loc_100E97C  +
dec eax  +
jz loc_100E963  +
dec eax  +
jz loc_100E94A  +
dec eax  +
jnz loc_100E9B2  +
mov edx offset aRemove +
lea ecx [ebp+var_10] +
call sub_1017AA3  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5CCh +
jge loc_100E944  +
mov [ebp+var_46] ax +
jmp loc_100EB08  +
mov [ebp+var_48] ax +
jmp loc_100E9B7  +
mov edx offset aCancel +
lea ecx [ebp+var_10] +
call sub_1017AA3  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5D8h +
jmp loc_100E939  +
mov edx offset aAnalyze +
lea ecx [ebp+var_10] +
call sub_1017AA3  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5D5h +
jmp loc_100E939  +
mov edx offset aDefrag_1 +
lea ecx [ebp+var_10] +
call sub_1017AA3  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5D2h +
jmp loc_100E939  +
mov edx offset aSchedule +
lea ecx [ebp+var_10] +
call sub_1017AA3  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5CFh +
jl loc_100E93B  +
mov [ebp+var_48] ax +
cmp [ebp+arg_8] ebx +
jz loc_100EA2D  +
mov ebx offset asc_10018D8 +
mov edx ebx +
lea ecx [ebp+var_10] +
call sub_10178DF  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5DFh +
jl loc_100E93B  +
mov [ebp+var_48] ax +
mov eax [ebp+arg_0] +
mov edi [eax+58h] +
jmp loc_100EA26  +
cmp [edi+14h] esi +
jz loc_100EA23  +
mov edx [edi] +
lea ecx [ebp+var_10] +
call sub_10178DF  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5E7h +
jl loc_100E93B  +
mov edx ebx +
lea ecx [ebp+var_10] +
mov [ebp+var_48] ax +
call sub_10178DF  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5E9h +
jl loc_100E93B  +
mov [ebp+var_48] ax +
mov edi [edi+48h] +
cmp edi esi +
jnz loc_100E9E2  +
xor ebx ebx +
inc ebx  +
push [ebp+var_10]  +
mov edi [ebp+arg_4] +
push offset aSystemrootSyst  +
push ebx  +
push edi  +
mov dword_101B3BC esi +
call sub_100D669  +
cmp eax esi +
jge loc_100EABB  +
mov eax [ebp+var_4] +
mov edx hInstance +
push 46Fh  +
lea ecx [ebp+var_28] +
mov dword_101B3BC eax +
call sub_1017AFF  +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5FCh +
jl loc_100E93B  +
push 472h  +
push hInstance  +
mov [ebp+var_48] ax +
lea eax [ebp+var_1C] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_4C] eax +
cmp eax esi +
mov eax 5FDh +
jl loc_100E93B  +
push 30h  +
push [ebp+var_28]  +
mov [ebp+var_48] ax +
push [ebp+var_1C]  +
push edi  +
call sub_1017C69  +
mov [ebp+var_4C] ebx +
mov eax 601h +
jmp loc_100EB04  +
cmp eax ebx +
jnz loc_100EAD1  +
mov eax [ebp+var_4] +
mov dword_101B3BC eax +
mov [ebp+var_4C] ebx +
mov eax 60Ah +
jmp loc_100EB04  +
cmp edi esi +
jz loc_100EAFC  +
push esi  +
push esi  +
push edi  +
call ds:SetWindowLongW  +
push esi  +
push edi  +
call ds:EndDialog  +
test eax eax +
jnz loc_100EAFC  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 611h +
jmp loc_100E93B  +
mov [ebp+var_4C] esi +
mov eax 614h +
mov [ebp+var_48] ax +
mov esi [ebp+var_4C] +
lea ecx [ebp+var_10] +
call sub_1016FE9  +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
lea ecx [ebp+var_28] +
call sub_1016FE9  +
lea ecx [ebp+var_4C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 622h  +
push offset aCdefragui_onmo  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
mov eax dword_101B3C4 +
cmp eax 2 +
jz loc_100EB92  +
cmp eax 1 +
jz loc_100EB92  +
push 1  +
push [ebp+hWndParent]  +
push [ebp+arg_0]  +
call sub_100E8BD  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 629h +
jge loc_100EB89  +
mov [ebp+var_2E] ax +
jmp loc_100EC68  +
and [ebp+var_34] 0 +
jmp loc_100EC64  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10089C4  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 62Eh +
jl loc_100EB80  +
push ebx  +
push offset DialogFunc  +
push [ebp+hWndParent]  +
mov [ebp+var_30] ax +
push 86h  +
push hInstance  +
call ds:DialogBoxParamW  +
test eax eax +
jl loc_100EBE7  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_100EC0E  +
test dword ptr [eax+1Ch] 8000000h +
jz loc_100EC0E  +
push offset dword_1001C78  +
push 0Ch  +
jmp loc_100EC03  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_100EC0E  +
test dword ptr [eax+1Ch] 8000000h +
jz loc_100EC0E  +
push offset dword_1001C78  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
xor eax eax +
mov [ebp+SystemTime.wMilliseconds] ax +
lea eax [ebx+0A8h] +
push eax  +
sub esp 10h +
mov edi esp +
lea esi [ebp+SystemTime] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_100B179  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 63Eh +
jl loc_100EB80  +
push [ebp+hWndParent]  +
mov [ebp+var_30] ax +
push ebx  +
call sub_100DC1C  +
mov [ebp+var_34] eax +
test eax eax +
mov eax 641h +
jl loc_100EB80  +
mov [ebp+var_30] ax +
mov esi [ebp+var_34] +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
push esi  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 64Dh  +
push offset aCdefragui_onse  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor edi edi +
push 38h  +
lea eax [ebp+var_64] +
push edi  +
push eax  +
mov [ebp+lParam] edi +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
cmp [eax+7Ch] edi +
jnz loc_100ECCA  +
mov [ebp+var_2C] esi +
mov eax 656h +
jmp loc_100ED85  +
push 459h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
cmp eax edi +
jnz loc_100ECF5  +
call sub_1015B6B  +
mov [ebp+var_2C] eax +
mov eax 65Ah +
mov [ebp+var_26] ax +
jmp loc_100ED89  +
mov esi ds:SendMessageW +
push edi  +
push edi  +
push 1004h  +
mov ecx 65Ah +
push eax  +
mov [ebp+var_2C] edi +
mov [ebp+var_28] cx +
call esi  +
mov [ebp+var_8] eax +
cmp eax edi +
jbe loc_100ED6A  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Bh  +
push [ebp+hWnd]  +
mov [ebp+lParam] 0Ch +
mov [ebp+var_58] 2 +
mov [ebp+var_64] edi +
call esi  +
mov eax [ebp+arg_0] +
add eax 60h +
push eax  +
call ds:EnterCriticalSection  +
mov ecx [ebp+var_48] +
xor eax eax +
cmp [ebp+var_5C] 2 +
setz al  +
mov [ecx+14h] eax +
mov eax [ebp+arg_0] +
add eax 60h +
push eax  +
call ds:LeaveCriticalSection  +
inc edi  +
cmp edi [ebp+var_8] +
jb loc_100ED18  +
xor edi edi +
push [ebp+hDlg]  +
push [ebp+arg_0]  +
call sub_100E4E8  +
mov [ebp+var_2C] eax +
cmp eax edi +
mov eax 680h +
jl loc_100ECEC  +
mov [ebp+var_28] ax +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+4] +
lea eax [edi+8] +
xor esi esi +
test eax eax +
jz loc_100EDD8  +
mov esi [eax] +
and dword ptr [eax] 0 +
push 0Ch  +
push 0  +
call ds:CoInitializeEx  +
test eax eax +
jl loc_100EDD8  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+10h]  +
call ds:CoUninitialize  +
push edi  +
call ds:CoTaskMemFree  +
test esi esi +
jz loc_100EDE9  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0Ch  +
push 0  +
call ds:CoInitializeEx  +
mov esi [ebp+arg_0] +
test eax eax +
jl loc_100EE1A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
call ds:CoUninitialize  +
test esi esi +
jz loc_100EE24  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 1  +
push 791h  +
push offset aCdefraguiCheck  +
lea ecx [ebp-2Ch] +
call sub_10148A2  +
mov edi ds:CoCreateInstance +
lea eax [ebp-4] +
push eax  +
push offset stru_1002CC8  +
xor esi esi +
push 4  +
push esi  +
mov ebx offset stru_1002CE8 +
push ebx  +
mov [ebp-8] esi +
mov [ebp-4] esi +
call edi  +
mov [ebp-2Ch] eax +
cmp eax esi +
mov eax 797h +
jl loc_100EF10  +
mov [ebp-28h] ax +
jmp loc_100EEFF  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push offset dword_10029C8  +
push eax  +
call dword ptr [ecx]  +
cmp eax 80004002h +
jz loc_100EEF4  +
mov eax [ebp+8] +
push esi  +
push esi  +
push 8101h  +
push dword ptr [eax+124h]  +
call ds:PostMessageW  +
mov eax [ebp-4] +
cmp eax esi +
jz loc_100EEC5  +
mov [ebp-4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
cmp eax esi +
jz loc_100EED5  +
mov [ebp-4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-4] +
push eax  +
push offset stru_1002CC8  +
push 4  +
push esi  +
push ebx  +
call edi  +
mov [ebp-2Ch] eax +
cmp eax esi +
mov eax 7A9h +
jl loc_100EF10  +
mov [ebp-28h] ax +
push 3E8h  +
call ds:Sleep  +
mov eax [ebp+8] +
cmp [eax+12Ch] esi +
jz loc_100EE87  +
jmp loc_100EF14  +
mov [ebp-26h] ax +
mov eax [ebp-4] +
mov edi [ebp-2Ch] +
cmp eax esi +
jz loc_100EF27  +
mov [ebp-4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-2Ch] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push 1  +
push 7D3h  +
push offset aCdefraguiDoope  +
lea ecx [ebp-58h] +
mov [ebp-20h] esi +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
mov [ebp-14h] ebx +
lea edi [ebp-10h] +
stos   +
stos   +
stos   +
lea eax [ebp-1Ch] +
push eax  +
push offset stru_1002CC8  +
push 4  +
push ebx  +
push offset stru_1002CE8  +
mov [ebp-1Ch] ebx +
mov [ebp-28h] ebx +
mov [ebp-30h] ebx +
mov dword ptr [ebp-64h] offset dword_10032B8 +
mov [ebp-60h] ebx +
mov [ebp-5Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-34h] ebx +
call ds:CoCreateInstance  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 7E0h +
jl loc_100EFD4  +
mov [ebp-54h] ax +
mov eax [ebp-1Ch] +
cmp eax ebx +
jnz loc_100F068  +
call sub_1015B6B  +
mov [ebp-58h] eax +
mov eax 7E1h +
mov [ebp-52h] ax +
mov [esi+0C0h] ebx +
cmp [esi+58h] ebx +
jz loc_100F018  +
mov esi [esi+58h] +
mov eax [esi+48h] +
mov ecx [ebp-20h] +
mov edi ds:CoTaskMemFree +
mov [ecx+58h] eax +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [esi]  +
mov [esi+4] ebx +
call edi  +
push dword ptr [esi+8]  +
mov [esi] ebx +
call edi  +
push esi  +
mov [esi+8] ebx +
call edi  +
mov eax [ebp-20h] +
mov esi eax +
cmp [eax+58h] ebx +
jnz loc_100EFE3  +
mov [esi+58h] ebx +
mov esi [ebp-58h] +
lea ecx [ebp-64h] +
call sub_1016FE9  +
mov eax [ebp-30h] +
cmp eax ebx +
jz loc_100F033  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_100F040  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100F04D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-58h] +
call sub_1014AA3  +
mov ecx [ebp-4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
lea edx [ebp-30h] +
push edx  +
mov ecx 7E1h +
push offset dword_10029E8  +
mov [ebp-58h] ebx +
mov [ebp-54h] cx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 7E4h +
jl loc_100EFD4  +
lea edx [ebp-28h] +
push edx  +
mov [ebp-54h] ax +
mov eax [ebp-30h] +
mov ecx [eax] +
push offset dword_1002CD8  +
push eax  +
call dword ptr [ecx]  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 7E5h +
jl loc_100EFD4  +
mov edi [esi+58h] +
mov [ebp-54h] ax +
mov [ebp-24h] edi +
cmp edi ebx +
jz loc_100EFD8  +
jmp loc_100F0CE  +
mov edi [ebp-24h] +
lea ecx [esi-4] +
call sub_100CF7A  +
test eax eax +
jnz loc_100EFD8  +
cmp [edi+14h] ebx +
jz loc_100F278  +
mov eax [ebp+0Ch] +
dec eax  +
jz loc_100F204  +
dec eax  +
dec eax  +
jz loc_100F1D4  +
dec eax  +
dec eax  +
jnz loc_100F251  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
lea edx [ebp-34h] +
push edx  +
push dword ptr [edi]  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 808h +
jl loc_100EFD4  +
mov [ebp-54h] ax +
mov [ebp-2Ch] ebx +
cmp [ebp-34h] ebx +
jbe loc_100F1C6  +
mov eax [ebp-18h] +
add eax ebx +
cmp dword ptr [eax+8] 1 +
jnz loc_100F154  +
mov ecx [ebp-1Ch] +
mov edx [ecx] +
sub esp 10h +
mov edi esp +
lea esi [eax+0Ch] +
movs   +
movs   +
movs   +
push ecx  +
movs   +
call dword ptr [edx+14h]  +
mov eax [ebp-18h] +
push dword ptr [ebx+eax+48h]  +
mov esi ds:CoTaskMemFree +
call esi  +
mov eax [ebp-18h] +
xor edi edi +
mov [ebx+eax+48h] edi +
mov eax [ebp-18h] +
push dword ptr [ebx+eax+50h]  +
call esi  +
mov eax [ebp-18h] +
mov [ebx+eax+50h] edi +
mov eax [ebp-18h] +
push dword ptr [ebx+eax+58h]  +
call esi  +
mov eax [ebp-18h] +
mov [ebx+eax+58h] edi +
mov eax [ebp-18h] +
push dword ptr [ebx+eax+54h]  +
call esi  +
mov eax [ebp-18h] +
mov [ebx+eax+54h] edi +
mov eax [ebp-18h] +
push dword ptr [ebx+eax+4Ch]  +
call esi  +
mov eax [ebp-18h] +
inc dword ptr [ebp-2Ch]  +
mov [ebx+eax+4Ch] edi +
mov eax [ebp-2Ch] +
add ebx 5Ch +
cmp eax [ebp-34h] +
jb loc_100F134  +
mov edi [ebp-24h] +
mov esi [ebp-20h] +
xor ebx ebx +
push dword ptr [ebp-18h]  +
call ds:CoTaskMemFree  +
mov [ebp-18h] ebx +
jmp loc_100F251  +
mov eax [ebp-28h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 7FFh +
jl loc_100EFD4  +
lea edx [ebp-14h] +
push edx  +
mov [ebp-54h] ax +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push dword ptr [edi]  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_100F232  +
mov eax [ebp-28h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-58h] eax +
cmp eax ebx +
mov eax 7F7h +
jl loc_100EFD4  +
lea edx [ebp-14h] +
push edx  +
mov [ebp-54h] ax +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push dword ptr [edi]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_100F251  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp-14h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+44h]  +
mov esi [ebp-20h] +
mov edi [ebp-24h] +
lea ecx [esi-4] +
call sub_100CF7A  +
test eax eax +
jz loc_100F278  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp-14h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+14h]  +
mov edi [ebp-24h] +
mov esi [ebp-20h] +
mov edi [edi+48h] +
mov [ebp-24h] edi +
cmp edi ebx +
jnz loc_100F0CB  +
jmp loc_100EFD8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 86Fh  +
push offset aCdefraguiCre_0  +
lea ecx [ebp+var_48] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
xor ebx ebx +
add eax 60h +
push eax  +
mov [ebp+pv] ebx +
mov [ebp+var_8] ebx +
mov [ebp+ppv] ebx +
xor esi esi +
mov [ebp+var_14] ebx +
mov [ebp+var_24] offset dword_10032B8 +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002CC8  +
push 4  +
push ebx  +
push offset stru_1002CE8  +
call ds:CoCreateInstance  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 87Fh +
jl loc_100F31B  +
mov [ebp+var_44] ax +
mov eax [ebp+ppv] +
cmp eax ebx +
jnz loc_100F3CF  +
call sub_1015B6B  +
mov [ebp+var_48] eax +
mov eax 880h +
mov [ebp+var_42] ax +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov edi ds:CoTaskMemFree +
push esi  +
call edi  +
cmp [ebp+pv] ebx +
jz loc_100F3A6  +
mov [ebp+arg_0] ebx +
cmp [ebp+var_8] ebx +
jbe loc_100F39E  +
xor esi esi +
mov eax [ebp+pv] +
push dword ptr [esi+eax+48h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+48h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+50h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+50h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+58h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+58h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+54h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+54h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+4Ch]  +
call edi  +
mov eax [ebp+pv] +
inc [ebp+arg_0]  +
mov [esi+eax+4Ch] ebx +
mov eax [ebp+arg_0] +
add esi 5Ch +
cmp eax [ebp+var_8] +
jb loc_100F340  +
push [ebp+pv]  +
call edi  +
mov [ebp+pv] ebx +
mov esi [ebp+var_48] +
lea ecx [ebp+var_24] +
call sub_1016FE9  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_100F3BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_48] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
lea edx [ebp+pv] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
mov ecx 880h +
push ebx  +
mov [ebp+var_48] ebx +
mov [ebp+var_44] cx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 883h +
jl loc_100F31B  +
xor edi edi +
mov [ebp+var_44] ax +
cmp [ebp+var_8] ebx +
jbe loc_100F31F  +
mov [ebp+var_C] ebx +
push 4Ch  +
call ds:CoTaskMemAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_100F423  +
push 4Ch  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100F41D  +
mov eax [ebp+pv] +
mov ecx [ebp+var_C] +
mov edx [ecx+eax+4Ch] +
lea ecx [ebp+var_24] +
call sub_1017AA3  +
mov [ebp+var_48] eax +
cmp eax ebx +
mov eax 88Bh +
jl loc_100F31B  +
mov edx esi +
lea ecx [ebp+var_24] +
mov [ebp+var_44] ax +
call sub_10170B0  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_100F45F  +
mov [eax+48h] esi +
jmp loc_100F465  +
mov eax [ebp+arg_0] +
mov [eax+58h] esi +
add [ebp+var_C] 5Ch +
mov [ebp+var_14] esi +
xor esi esi +
inc edi  +
cmp edi [ebp+var_8] +
jb loc_100F40C  +
jmp loc_100F31F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1C4h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 8C0h  +
push offset aCdefraguiUpd_0  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
xor esi esi +
mov eax offset dword_10032B8 +
mov [ebp+var_40] eax +
mov [ebp+var_68] eax +
mov [ebp+var_54] eax +
xor eax eax +
mov [ebp+lParam] esi +
lea edi [ebp+var_7C] +
stos   +
stos   +
stos   +
stos   +
push 38h  +
stos   +
lea eax [ebp+var_10C] +
push esi  +
push eax  +
mov [ebp+var_3C] esi +
mov [ebp+var_38] esi +
mov [ebp+hWnd] esi +
mov [ebp+var_64] esi +
mov [ebp+var_60] esi +
mov [ebp+var_50] esi +
mov [ebp+var_4C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_44] esi +
mov [ebp+var_5C] esi +
mov [ebp+wParam] esi +
mov [ebp+hicon] esi +
mov [ebp+var_110] esi +
call memset  +
xor eax eax +
fldz   +
mov word ptr [ebp+var_D4] ax +
lea edi [ebp+var_D4+2] +
fstp  [ebp+pvtime] +
stos   +
stos   +
stos   +
push 38h  +
stos   +
lea eax [ebp+var_C0] +
push esi  +
push eax  +
mov [ebp+pv] esi +
mov [ebp+var_C4] esi +
call memset  +
mov ebx [ebp+arg_8] +
add esp 18h +
mov eax 8DBh +
cmp ebx esi +
jnz loc_100F549  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_100FC9F  +
push 459h  +
push [ebp+hDlg]  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] ax +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
cmp eax esi +
jnz loc_100F574  +
call sub_1015B6B  +
mov [ebp+var_30] eax +
mov eax 8DFh +
jmp loc_100F540  +
mov edi [ebp+arg_0] +
mov eax 8DFh +
mov [ebp+var_2C] ax +
lea eax [edi+60h] +
push eax  +
mov [ebp+var_30] esi +
call ds:EnterCriticalSection  +
push esi  +
push esi  +
push 0Bh  +
push [ebp+hWnd]  +
mov [ebp+var_34] 1 +
call ds:SendMessageW  +
mov edi [edi+58h] +
jmp loc_100F5C5  +
mov eax [ebp+arg_0] +
mov [edi+44h] esi +
cmp [eax+78h] esi +
jnz loc_100F5C2  +
lea eax [ebp+wParam] +
push eax  +
push dword ptr [edi+14h]  +
push edi  +
push esi  +
push [ebp+hWnd]  +
call sub_100D7F9  +
mov edi [edi+48h] +
cmp edi esi +
jnz loc_100F5A6  +
mov [ebp+var_48] esi +
cmp [ebp+arg_C] esi +
jbe loc_100FB03  +
add ebx 50h +
mov eax [ebp+arg_0] +
mov edi [eax+58h] +
xor esi esi +
jmp loc_100F5F7  +
push dword ptr [ebx-4]  +
push dword ptr [edi]  +
call sub_100CF3D  +
test eax eax +
jnz loc_100F68C  +
mov edi [edi+48h] +
mov [ebp+arg_8] edi +
cmp edi esi +
jnz loc_100F5E2  +
push 4Ch  +
call ds:CoTaskMemAlloc  +
mov edi eax +
mov [ebp+var_44] edi +
mov eax 913h +
cmp edi esi +
jz loc_100FB0E  +
push 4Ch  +
push esi  +
push edi  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] ax +
call memset  +
mov edx [ebx-4] +
add esp 0Ch +
lea ecx [ebp+var_40] +
call sub_1017AA3  +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 918h +
jl loc_100F540  +
mov edx edi +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] ax +
call sub_10170B0  +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp [eax+50h] esi +
mov [edi+14h] esi +
setz cl  +
mov [ebp+arg_8] edi +
mov [ebp+var_44] esi +
mov [edi+10h] ecx +
mov ecx [eax+58h] +
mov [edi+48h] ecx +
mov [eax+58h] edi +
lea eax [ebp+wParam] +
push eax  +
push esi  +
push edi  +
push esi  +
push [ebp+hWnd]  +
call sub_100D7F9  +
mov [ebp+hDlg] 1 +
jmp loc_100F6C8  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx+78h] esi +
push 18h  +
setz al  +
pop ecx  +
mov [ebp+hDlg] eax +
lea eax [ebp+lParam] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100F6A0  +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
push [ebp+hWnd]  +
mov [ebp+lParam] 1 +
mov [ebp+var_78] edi +
call ds:SendMessageW  +
mov [ebp+wParam] eax +
mov dword ptr [edi+44h] 1 +
push dword ptr [ebx]  +
push dword ptr [edi+4]  +
call sub_100CF3D  +
test eax eax +
jz loc_100F6E2  +
cmp [ebp+hDlg] esi +
jz loc_100F73E  +
push dword ptr [edi+4]  +
call ds:CoTaskMemFree  +
mov [edi+4] esi +
mov edx [ebx] +
lea ecx [ebp+var_40] +
call sub_1017AA3  +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 958h +
jl loc_100F540  +
lea edx [edi+4] +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] ax +
call sub_10170B0  +
mov eax [edi+4] +
mov [ebp+var_138] eax +
lea eax [ebp+var_14C] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_144] esi +
push 1074h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov eax [ebx-48h] +
cmp [edi+28h] eax +
jnz loc_100F75F  +
mov ecx [edi+24h] +
cmp ecx [ebx-4Ch] +
jnz loc_100F75F  +
mov ecx [edi+2Ch] +
cmp ecx [ebx-34h] +
jnz loc_100F75F  +
cmp [ebp+hDlg] esi +
jz loc_100F7FD  +
cmp eax 1 +
jz loc_100F76D  +
cmp eax 2 +
jnz loc_100F88C  +
mov eax [ebx-4Ch] +
dec eax  +
jz loc_100F896  +
dec eax  +
jz loc_100F882  +
dec eax  +
jz loc_100F878  +
dec eax  +
jz loc_100F86E  +
dec eax  +
dec eax  +
jnz loc_100F88C  +
mov eax 479h +
push dword ptr [ebx-34h]  +
push dword ptr [ebx-28h]  +
push eax  +
push hInstance  +
lea eax [ebp+var_68] +
push eax  +
call sub_1017BC7  +
add esp 14h +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 992h +
jl loc_100F540  +
mov [ebp+var_2C] ax +
mov eax [ebp+var_68] +
mov [ebp+var_174] eax +
lea eax [ebp+var_188] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_180] 2 +
push 1074h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov eax [ebx-34h] +
mov [edi+2Ch] eax +
mov eax [ebx-4Ch] +
mov [edi+24h] eax +
mov eax [edi+30h] +
cmp eax [ebx-0Ch] +
jnz loc_100F82C  +
mov esi [ebp+arg_8] +
push 4  +
add esi 34h +
pop ecx  +
lea edi [ebx-1Ch] +
xor eax eax +
cmps   +
jnz loc_100F82C  +
mov eax [ebp+arg_8] +
mov eax [eax+28h] +
cmp eax [ebx-48h] +
jnz loc_100F82C  +
cmp [ebp+hDlg] 0 +
jz loc_100F9E4  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebx-48h] +
xor esi esi +
mov [ebp+pv] esi +
cmp eax 1 +
jnz loc_100F8BF  +
push 47Dh  +
push hInstance  +
lea eax [ebp+var_54] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 9ADh +
jl loc_100F540  +
jmp loc_100F999  +
mov eax 47Ah +
jmp loc_100F799  +
mov eax 477h +
jmp loc_100F799  +
mov eax 478h +
jmp loc_100F799  +
mov eax offset dword_10021BC +
jmp loc_100F7C9  +
push dword ptr [ebx-34h]  +
lea eax [ebp+var_68] +
push 476h  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 98Eh +
jmp loc_100F7BC  +
cmp eax 2 +
jnz loc_100F8EA  +
push 48Fh  +
push hInstance  +
lea eax [ebp+var_54] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_30] eax +
cmp eax esi +
mov eax 9B2h +
jmp loc_100F863  +
lea eax [ebx-1Ch] +
push 4  +
pop ecx  +
mov edi eax +
lea esi [ebp+var_D4] +
xor edx edx +
cmps   +
jnz loc_100F921  +
push 482h  +
push hInstance  +
lea eax [ebp+var_54] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_30] eax +
test eax eax +
mov eax 9BDh +
jmp loc_100F993  +
lea ecx [ebp+pvtime] +
push ecx  +
push eax  +
call ds:SystemTimeToVariantTime  +
test eax eax +
mov eax 9C3h +
jz loc_100FB1A  +
fld  [ebp+pvtime] +
and [ebp+var_30] 0 +
mov [ebp+var_2C] ax +
lea eax [ebp+pv] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+1DCh+var_1DC] +
call sub_1009017  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 9C6h +
jl loc_100FB21  +
push dword ptr [ebx-0Ch]  +
mov [ebp+var_2C] ax +
push [ebp+pv]  +
lea eax [ebp+var_54] +
push 47Ch  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 14h +
mov [ebp+var_30] eax +
test eax eax +
mov eax 9C9h +
jl loc_100FB21  +
mov [ebp+var_2C] ax +
mov eax [ebp+var_54] +
mov [ebp+var_1B0] eax +
lea eax [ebp+var_1C4] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_1BC] 1 +
push 1074h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov ecx [ebx-0Ch] +
mov eax [ebp+arg_8] +
mov [eax+30h] ecx +
mov ecx [ebp+arg_8] +
lea edi [eax+34h] +
lea esi [ebx-1Ch] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx-48h] +
mov [ecx+28h] eax +
mov edi [ebp+arg_8] +
push dword ptr [ebx+4]  +
lea esi [edi+8] +
push dword ptr [esi]  +
call sub_100CF3D  +
test eax eax +
jz loc_100F9FE  +
cmp [ebp+hDlg] 0 +
jz loc_100FA32  +
push dword ptr [esi]  +
call ds:CoTaskMemFree  +
and dword ptr [esi] 0 +
mov edx [ebx+4] +
lea ecx [ebp+var_40] +
call sub_1017AA3  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 9E5h +
jl loc_100FB21  +
mov edx esi +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] ax +
call sub_10170B0  +
push dword ptr [ebx+8]  +
lea esi [edi+0Ch] +
push dword ptr [esi]  +
call sub_100CF3D  +
test eax eax +
jz loc_100FA4D  +
cmp [ebp+hDlg] 0 +
jz loc_100FADE  +
push dword ptr [esi]  +
call ds:CoTaskMemFree  +
and dword ptr [esi] 0 +
mov edx [ebx+8] +
lea ecx [ebp+var_40] +
call sub_1017AA3  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 9F4h +
jl loc_100FB21  +
mov edx esi +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] ax +
call sub_10170B0  +
push 1  +
lea eax [ebp+hicon] +
push eax  +
push dword ptr [esi]  +
call sub_100D086  +
mov [ebp+var_30] eax +
test eax eax +
jl loc_100FADE  +
push [ebp+hicon]  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push dword ptr [eax+0E4h]  +
call ds:ImageList_ReplaceIcon  +
cmp eax 0FFFFFFFFh +
jz loc_100FADE  +
mov [ebp+var_F4] eax +
mov eax [ebp+wParam] +
mov [ebp+var_10C] eax +
lea eax [ebp+var_110] +
push eax  +
push 0  +
push 104Ch  +
push [ebp+hWnd]  +
mov [ebp+var_110] 2 +
call ds:SendMessageW  +
mov eax [ebx-24h] +
mov [edi+18h] eax +
xor eax eax +
cmp [ebx-20h] eax +
setz al  +
inc [ebp+var_48]  +
add ebx 5Ch +
mov [edi+1Ch] eax +
mov eax [ebp+var_48] +
cmp eax [ebp+arg_C] +
jb loc_100F5D8  +
xor esi esi +
mov eax [ebp+arg_0] +
mov edi [eax+58h] +
jmp loc_100FBA3  +
mov [ebp+var_30] 8007000Eh +
jmp loc_100F540  +
mov [ebp+var_30] 80004005h +
mov [ebp+var_2A] ax +
xor esi esi +
jmp loc_100FC9F  +
cmp [edi+44h] esi +
jnz loc_100FB9D  +
mov eax [ebp+var_5C] +
cmp eax esi +
jz loc_100FB40  +
mov ecx [edi+48h] +
mov [eax+48h] ecx +
jmp loc_100FB49  +
mov eax [edi+48h] +
mov ecx [ebp+arg_0] +
mov [ecx+58h] eax +
mov ebx ds:SendMessageW +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
push [ebp+hWnd]  +
mov [ebp+lParam] 1 +
mov [ebp+var_78] edi +
call ebx  +
cmp eax esi +
jl loc_100FB79  +
push esi  +
push eax  +
push 1008h  +
push [ebp+hWnd]  +
call ebx  +
push dword ptr [edi+4]  +
mov ebx ds:CoTaskMemFree +
call ebx  +
push dword ptr [edi]  +
mov [edi+4] esi +
call ebx  +
push dword ptr [edi+8]  +
mov [edi] esi +
call ebx  +
mov [edi+8] esi +
mov edi [edi+48h] +
push esi  +
call ebx  +
jmp loc_100FBA3  +
mov [ebp+var_5C] edi +
mov edi [edi+48h] +
cmp edi esi +
jnz loc_100FB2C  +
mov ebx [ebp+arg_0] +
lea edi [ebx+60h] +
push edi  +
call ds:LeaveCriticalSection  +
push offset loc_1010B59  +
push ebx  +
mov ebx ds:SendMessageW +
push 1030h  +
push [ebp+hWnd]  +
mov [ebp+var_34] esi +
call ebx  +
test eax eax +
mov eax 0A4Fh +
jnz loc_100FBE2  +
mov [ebp+var_30] 80004005h +
jmp loc_100F540  +
push edi  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] ax +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
mov [ebp+var_34] 1 +
cmp [eax+78h] esi +
jnz loc_100FC9F  +
cmp [eax+80h] esi +
jnz loc_100FC9F  +
push 10h  +
push 0FFFFFFFFh  +
push 100Ch  +
push [ebp+hWnd]  +
call ebx  +
mov edi eax +
cmp edi esi +
jl loc_100FC9F  +
push 3  +
pop eax  +
mov [ebp+var_B4] eax +
mov [ebp+var_B8] eax +
lea eax [ebp+var_C4] +
push eax  +
push esi  +
push 104Ch  +
push [ebp+hWnd]  +
mov [ebp+var_C0] edi +
mov [ebp+var_C4] 8 +
call ebx  +
test eax eax +
jz loc_100FC9F  +
push 3Ch  +
pop ecx  +
lea eax [ebp+var_C4] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_100FC61  +
lea eax [ebp+var_C4] +
push eax  +
push esi  +
push 104Bh  +
push [ebp+hWnd]  +
mov [ebp+var_C4] 4 +
mov [ebp+var_C0] edi +
call ebx  +
test eax eax +
jz loc_100FC9F  +
mov eax [ebp+var_A4] +
cmp eax esi +
jz loc_100FC9F  +
mov dword ptr [eax+14h] 1 +
mov eax [ebp+arg_0] +
xor edi edi +
inc edi  +
mov [eax+78h] edi +
cmp [ebp+var_34] esi +
jz loc_100FCB7  +
add eax 60h +
push eax  +
call ds:LeaveCriticalSection  +
cmp [ebp+hWnd] esi +
jz loc_100FCC9  +
push esi  +
push edi  +
push 0Bh  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
push [ebp+pv]  +
mov edi ds:CoTaskMemFree +
call edi  +
push [ebp+var_44]  +
mov [ebp+pv] esi +
call edi  +
mov esi [ebp+var_30] +
lea ecx [ebp+var_54] +
call sub_1016FE9  +
lea ecx [ebp+var_68] +
call sub_1016FE9  +
lea ecx [ebp+var_40] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push esi  +
push edi  +
push 1  +
push 498h  +
push offset aCdefragui_invo  +
lea ecx [ebp+var_48] +
call sub_10148A2  +
xor edi edi +
cmp [ebp+arg_8] 3 +
mov [ebp+var_10] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov [ebp+var_C] edi +
mov [ebp+var_24] offset dword_10032B8 +
mov [ebp+var_20] edi +
mov [ebp+var_1C] edi +
jz loc_100FD6D  +
cmp [ebp+arg_8] 1 +
jz loc_100FD6D  +
cmp [ebp+arg_8] 5 +
jz loc_100FD6D  +
mov eax 4A3h +
mov [ebp+var_48] 80070057h +
mov [ebp+var_42] ax +
jmp loc_1010008  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax 4A3h +
mov [ebp+var_44] ax +
lea eax [ebx+60h] +
push eax  +
mov [ebp+var_48] edi +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [ebx+58h] +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_100FE7C  +
push 4Ch  +
call ds:CoTaskMemAlloc  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100FEA4  +
mov esi [ebp+arg_0] +
mov [ebp+var_48] edi +
mov ecx 4B1h +
mov [ebp+var_44] cx +
push 13h  +
mov edi eax +
pop ecx  +
movs   +
mov esi [ebp+arg_0] +
xor ecx ecx +
mov [eax+48h] ecx +
mov [eax] ecx +
lea edi [eax+4] +
add eax 8 +
mov [edi] ecx +
mov [eax] ecx +
mov edx [esi+4] +
lea ecx [ebp+var_24] +
mov [ebp+var_14] eax +
call sub_1017AA3  +
mov [ebp+var_48] eax +
test eax eax +
mov eax 4BAh +
jl loc_100FEB9  +
mov edx edi +
lea ecx [ebp+var_24] +
mov [ebp+var_44] ax +
call sub_10170B0  +
mov edx [esi] +
lea ecx [ebp+var_24] +
call sub_1017AA3  +
mov [ebp+var_48] eax +
test eax eax +
mov eax 4BCh +
jl loc_100FEB9  +
mov edi [ebp+var_8] +
mov edx edi +
lea ecx [ebp+var_24] +
mov [ebp+var_44] ax +
call sub_10170B0  +
mov edx [esi+8] +
lea ecx [ebp+var_24] +
call sub_1017AA3  +
mov [ebp+var_48] eax +
test eax eax +
mov eax 4BEh +
jl loc_100FEB9  +
mov edx [ebp+var_14] +
lea ecx [ebp+var_24] +
mov [ebp+var_44] ax +
call sub_10170B0  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_100FE5C  +
mov [eax+48h] edi +
cmp [ebp+var_4] 0 +
jnz loc_100FE65  +
mov [ebp+var_4] edi +
mov esi [esi+48h] +
and [ebp+var_8] 0 +
mov [ebp+var_C] edi +
xor edi edi +
mov [ebp+arg_0] esi +
test esi esi +
jnz loc_100FD98  +
mov eax [ebx+0B8h] +
mov esi ds:WaitForSingleObject +
mov [ebp+var_C] edi +
cmp eax edi +
jz loc_100FEC4  +
push edi  +
push eax  +
call esi  +
cmp eax 102h +
jnz loc_100FEC4  +
mov eax 4DAh +
jmp loc_100FFA0  +
mov eax 4B1h +
mov [ebp+var_48] 8007000Eh +
mov [ebp+var_42] ax +
jmp loc_100FFA7  +
mov [ebp+var_42] ax +
xor edi edi +
jmp loc_100FFA7  +
mov eax [ebx+0B4h] +
cmp eax edi +
jz loc_100FEE3  +
push edi  +
push eax  +
call esi  +
cmp eax 102h +
jnz loc_100FEE3  +
mov eax 4E1h +
jmp loc_100FFA0  +
push 0Ch  +
mov [ebx+0B8h] edi +
mov [ebx+0B4h] edi +
call ds:CoTaskMemAlloc  +
mov esi eax +
mov eax 4EAh +
cmp esi edi +
jz loc_100FEA9  +
mov [ebp+var_44] ax +
mov eax [ebp+arg_4] +
mov [ebp+var_48] edi +
mov [esi] eax +
mov eax [ebp+arg_8] +
mov [esi+4] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [ebp+arg_8] eax +
cmp eax edi +
jz loc_100FF2B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
lea edx [esi+8] +
push edx  +
push offset dword_1002DB8  +
push eax  +
mov [ebp+var_10] eax +
call dword ptr [ecx]  +
mov [ebp+var_48] eax +
cmp eax edi +
mov eax 4EEh +
jl loc_100FEB0  +
push edi  +
push edi  +
push esi  +
push offset StartAddress  +
mov [ebp+var_44] ax +
mov eax [ebp+var_4] +
push edi  +
push edi  +
mov [ebx+0C0h] edi +
mov [ebx+0C8h] edi +
mov dword ptr [ebx+0C4h] 1 +
mov [ebx+5Ch] eax +
call ds:CreateThread  +
mov [ebx+0B8h] eax +
cmp eax edi +
jnz loc_100FF98  +
call sub_1015B6B  +
mov [ebp+var_48] eax +
mov eax 4F7h +
jmp loc_100FEB0  +
mov eax 4F7h +
mov [ebp+var_4] edi +
mov [ebp+var_48] edi +
mov [ebp+var_44] ax +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov esi ds:CoTaskMemFree +
cmp [ebp+var_8] edi +
jz loc_100FFD7  +
mov ebx [ebp+var_8] +
push dword ptr [ebx+4]  +
call esi  +
push dword ptr [ebx]  +
mov [ebx+4] edi +
call esi  +
push dword ptr [ebx+8]  +
mov [ebx] edi +
call esi  +
push ebx  +
mov [ebx+8] edi +
call esi  +
mov ebx [ebp+var_C] +
cmp ebx edi +
jz loc_1010002  +
jmp loc_100FFE9  +
mov ebx [ebp+var_4] +
mov eax [ebx+48h] +
mov [ebp+var_4] eax +
push dword ptr [ebx+4]  +
call esi  +
push dword ptr [ebx]  +
mov [ebx+4] edi +
call esi  +
push dword ptr [ebx+8]  +
mov [ebx] edi +
call esi  +
push ebx  +
mov [ebx+8] edi +
call esi  +
cmp [ebp+var_4] edi +
jnz loc_100FFE0  +
pop ebx  +
mov esi [ebp+var_48] +
lea ecx [ebp+var_24] +
call sub_1016FE9  +
mov eax [ebp+var_10] +
cmp eax edi +
jz loc_1010020  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_48] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 52Ch  +
push offset aCdefragui_onde  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
mov ecx [eax+0B0h] +
dec ecx  +
jz loc_10100B8  +
dec ecx  +
jz loc_1010071  +
mov [ebp+var_24] 8000FFFFh +
mov eax 555h +
jmp loc_10100DE  +
mov ecx dword_101B3C4 +
cmp ecx 2 +
jz loc_1010099  +
cmp ecx esi +
jz loc_1010099  +
push 4  +
push [ebp+arg_4]  +
push eax  +
call sub_100E8BD  +
mov [ebp+var_24] eax +
test eax eax +
jge loc_10100FD  +
mov eax 548h +
jmp loc_10100DE  +
push 5  +
push [ebp+arg_4]  +
mov [eax+0C0h] esi +
push eax  +
call sub_100FD0D  +
mov [ebp+var_24] eax +
test eax eax +
jge loc_10100FD  +
mov eax 54Fh +
jmp loc_10100DE  +
mov ecx dword_101B3C4 +
cmp ecx 2 +
jz loc_10100E4  +
cmp ecx esi +
jz loc_10100E4  +
push 2  +
push [ebp+arg_4]  +
push eax  +
call sub_100E8BD  +
mov [ebp+var_24] eax +
test eax eax +
jge loc_10100FD  +
mov eax 537h +
mov [ebp+var_1E] ax +
jmp loc_101010A  +
push 3  +
push [ebp+arg_4]  +
push eax  +
call sub_100FD0D  +
mov [ebp+var_24] eax +
test eax eax +
jge loc_10100FD  +
mov eax 53Ch +
jmp loc_10100DE  +
and [ebp+var_24] 0 +
mov eax 559h +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 567h  +
push offset aCdefragui_onan  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax dword_101B3C4 +
cmp eax 2 +
jz loc_1010171  +
cmp eax 1 +
jz loc_1010171  +
push 3  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E8BD  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 56Dh +
jge loc_101016B  +
mov [ebp+var_1E] ax +
jmp loc_101018E  +
and [ebp+var_24] 0 +
jmp loc_101018A  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100FD0D  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 572h +
jl loc_1010165  +
mov [ebp+var_20] ax +
push esi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 582h  +
push offset aCdefragui_onhe  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov ecx [ebp+arg_8] +
mov eax [ecx+8] +
cmp eax 0FFFFFFFCh +
jz loc_10101D2  +
cmp eax 0FFFFFFFEh +
jnz loc_10101F6  +
push 1  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E7AF  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 58Ch +
jge loc_10101F2  +
mov [ebp+var_1E] ax +
jmp loc_10101F6  +
mov [ebp+var_20] ax +
push esi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push 1  +
push 849h  +
push offset aCdefragui_po_0  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002CC8  +
xor ebx ebx +
push 4  +
push ebx  +
push offset stru_1002CE8  +
mov [ebp+pv] ebx +
mov [ebp+var_8] ebx +
mov [ebp+ppv] ebx +
call ds:CoCreateInstance  +
mov [ebp+var_30] eax +
cmp eax ebx +
mov eax 851h +
jge loc_1010263  +
mov [ebp+var_2A] ax +
jmp loc_10102E8  +
mov [ebp+var_2C] ax +
mov eax [ebp+ppv] +
cmp eax ebx +
jnz loc_101027D  +
call sub_1015B6B  +
mov [ebp+var_30] eax +
mov eax 852h +
jmp loc_101025A  +
lea edx [ebp+pv] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
mov ecx 852h +
push ebx  +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] cx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_30] eax +
cmp eax ebx +
mov eax 855h +
jl loc_101025A  +
push [ebp+var_8]  +
mov [ebp+var_2C] ax +
push [ebp+pv]  +
push [ebp+hDlg]  +
push [ebp+arg_0]  +
call sub_100F47E  +
mov [ebp+var_30] eax +
cmp eax ebx +
mov eax 858h +
jl loc_101025A  +
push [ebp+hDlg]  +
mov [ebp+var_2C] ax +
push [ebp+arg_0]  +
call sub_100E4E8  +
mov [ebp+var_30] eax +
cmp eax ebx +
mov eax 85Bh +
jl loc_101025A  +
mov [ebp+var_2C] ax +
cmp [ebp+pv] ebx +
jz loc_1010365  +
push edi  +
mov edi ds:CoTaskMemFree +
mov [ebp+hDlg] ebx +
cmp [ebp+var_8] ebx +
jbe loc_101035C  +
xor esi esi +
mov eax [ebp+pv] +
push dword ptr [esi+eax+48h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+48h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+50h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+50h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+58h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+58h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+54h]  +
call edi  +
mov eax [ebp+pv] +
mov [esi+eax+54h] ebx +
mov eax [ebp+pv] +
push dword ptr [esi+eax+4Ch]  +
call edi  +
mov eax [ebp+pv] +
inc [ebp+hDlg]  +
mov [esi+eax+4Ch] ebx +
mov eax [ebp+hDlg] +
add esi 5Ch +
cmp eax [ebp+var_8] +
jb loc_10102FE  +
push [ebp+pv]  +
call edi  +
mov [ebp+pv] ebx +
pop edi  +
mov eax [ebp+ppv] +
mov esi [ebp+var_30] +
cmp eax ebx +
jz loc_1010375  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 259h  +
push offset aCdefragui_onin  +
lea ecx [ebp+var_54] +
call sub_10148A2  +
mov ebx ds:GetSystemMetrics +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
xor esi esi +
stos   +
mov eax [ebp+hDlg] +
mov edi [ebp+hWnd] +
push 0Bh  +
mov [ebp+var_20] offset dword_10032B8 +
mov [ebp+var_1C] esi +
mov [ebp+var_18] esi +
mov [ebp+var_4] esi +
mov [ebp+lpParameter] esi +
mov [edi+128h] eax +
call ebx  +
push 0Ch  +
mov [ebp+var_8] eax +
call ebx  +
push 31h  +
mov [ebp+hWnd] eax +
call ebx  +
push 32h  +
mov [ebp+var_10] eax +
call ebx  +
mov [ebp+var_C] eax +
call ds:GetDesktopWindow  +
push eax  +
push [ebp+hDlg]  +
call sub_100CE68  +
mov ebx ds:LoadImageW +
push esi  +
push [ebp+hWnd]  +
push [ebp+var_8]  +
push 1  +
push 82h  +
push hInstance  +
call ebx  +
mov [edi+0CCh] eax +
cmp eax esi +
jnz loc_1010440  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 277h +
mov [ebp+var_4E] ax +
jmp loc_10108BF  +
push esi  +
push [ebp+hWnd]  +
mov eax 277h +
push [ebp+var_8]  +
mov [ebp+var_54] esi +
push 1  +
push 89h  +
push hInstance  +
mov [ebp+var_50] ax +
call ebx  +
mov [edi+0D8h] eax +
cmp eax esi +
jnz loc_101047B  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 27Ah +
jmp loc_1010437  +
push esi  +
push [ebp+var_C]  +
mov eax 27Ah +
push [ebp+var_10]  +
mov [ebp+var_54] esi +
push 1  +
push 8Dh  +
push hInstance  +
mov [ebp+var_50] ax +
call ebx  +
mov [edi+0D4h] eax +
cmp eax esi +
jnz loc_10104B6  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 27Fh +
jmp loc_1010437  +
push esi  +
push [ebp+var_C]  +
mov eax 27Fh +
push [ebp+var_10]  +
mov [ebp+var_54] esi +
push 1  +
push 88h  +
push hInstance  +
mov [ebp+var_50] ax +
call ebx  +
mov [edi+0D0h] eax +
cmp eax esi +
jnz loc_10104F4  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 282h +
jmp loc_1010437  +
push dword ptr [edi+0CCh]  +
mov ebx ds:SendMessageW +
push esi  +
push 80h  +
push [ebp+hDlg]  +
mov eax 282h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ebx  +
push 44Eh  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_101053B  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 287h +
jmp loc_1010437  +
push esi  +
push dword ptr [edi+0CCh]  +
mov ecx 287h +
push 170h  +
push eax  +
mov [ebp+var_54] esi +
mov [ebp+var_50] cx +
call ebx  +
push 403h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_101057A  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 28Ch +
jmp loc_1010437  +
push esi  +
push wParam  +
mov ecx 28Ch +
push 30h  +
push eax  +
mov [ebp+var_54] esi +
mov [ebp+var_50] cx +
call ebx  +
push 44Dh  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call ds:GetWindowRect  +
test eax eax +
jnz loc_10105C4  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 291h +
jmp loc_1010437  +
push 2  +
mov eax 291h +
mov [ebp+var_50] ax +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push 1  +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov [ebp+var_54] esi +
call ds:SetWindowPos  +
test eax eax +
jnz loc_10105FD  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 292h +
jmp loc_1010437  +
push 454h  +
push [ebp+hDlg]  +
mov eax 292h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ds:GetDlgItem  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call ds:GetWindowRect  +
test eax eax +
jnz loc_101063B  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 294h +
jmp loc_1010437  +
mov eax 294h +
mov [ebp+var_50] ax +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push 2  +
push 1  +
dec eax  +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov [ebp+var_54] esi +
call ds:SetWindowPos  +
test eax eax +
jnz loc_1010675  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 295h +
jmp loc_1010437  +
push 456h  +
push [ebp+hDlg]  +
mov eax 295h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ds:GetDlgItem  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call ds:GetWindowRect  +
test eax eax +
jnz loc_10106B3  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 297h +
jmp loc_1010437  +
mov eax 297h +
mov [ebp+var_50] ax +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push 2  +
push 1  +
dec eax  +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov [ebp+var_54] esi +
call ds:SetWindowPos  +
test eax eax +
jnz loc_10106ED  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 298h +
jmp loc_1010437  +
push 3EAh  +
push [ebp+hDlg]  +
mov eax 298h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
cmp eax esi +
jnz loc_1010720  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 29Dh +
jmp loc_1010437  +
push 450h  +
push [ebp+hDlg]  +
mov eax 29Dh +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ds:GetDlgItem  +
mov [ebp+var_10] eax +
cmp eax esi +
jnz loc_1010753  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 2A0h +
jmp loc_1010437  +
push 3E9h  +
push [ebp+hDlg]  +
mov eax 2A0h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ds:GetDlgItem  +
mov [ebp+var_C] eax +
cmp eax esi +
jnz loc_1010786  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 2A3h +
jmp loc_1010437  +
push 1  +
push esi  +
push 160Ch  +
push [ebp+hWnd]  +
mov eax 2A3h +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
call ebx  +
push 1  +
push esi  +
push 160Ch  +
push [ebp+var_10]  +
call ebx  +
push 1  +
push esi  +
push 160Ch  +
push [ebp+var_C]  +
call ebx  +
mov ebx [ebp+hDlg] +
push ebx  +
push edi  +
mov [edi+7Ch] esi +
call sub_100D8F1  +
mov [ebp+var_54] eax +
cmp eax esi +
mov eax 2ACh +
jl loc_1010437  +
push ebx  +
push edi  +
mov [ebp+var_50] ax +
call sub_101020E  +
mov [ebp+var_54] eax +
cmp eax esi +
mov eax 2AFh +
jl loc_1010437  +
push ebx  +
push edi  +
mov [ebp+var_50] ax +
mov dword ptr [edi+7Ch] 1 +
call sub_100DC1C  +
mov [ebp+var_54] eax +
cmp eax esi +
mov eax 2B6h +
jl loc_1010437  +
mov [ebp+var_50] ax +
mov eax [edi+0FCh] +
dec eax  +
jz loc_101083D  +
dec eax  +
jz loc_1010829  +
dec eax  +
jz loc_1010833  +
dec eax  +
jnz loc_101084F  +
push esi  +
push ebx  +
push edi  +
call sub_1010035  +
jmp loc_101084F  +
push esi  +
push ebx  +
push edi  +
call sub_1010121  +
jmp loc_101084F  +
push esi  +
push 3EAh  +
push 111h  +
push ebx  +
call ds:PostMessageW  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_100848E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+lpParameter] +
push edx  +
push offset dword_1002DB8  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_54] eax +
cmp eax esi +
mov eax 2CAh +
jl loc_1010437  +
push esi  +
push esi  +
push [ebp+lpParameter]  +
mov [ebp+var_50] ax +
push offset sub_100EDF7  +
push esi  +
push esi  +
call ds:CreateThread  +
mov [edi+0BCh] eax +
cmp eax esi +
jnz loc_10108B3  +
call sub_1015B6B  +
mov [ebp+var_54] eax +
mov eax 2CEh +
jmp loc_1010437  +
mov eax 2CEh +
mov [ebp+var_54] esi +
mov [ebp+var_50] ax +
mov eax [ebp+var_4] +
mov edi [ebp+var_54] +
cmp eax esi +
jz loc_10108CF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_20] +
call sub_1016FE9  +
lea ecx [ebp+var_54] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
push 0FFFFFFEBh  +
push edi  +
call ds:GetWindowLongW  +
mov ecx [ebp+0Ch] +
mov esi eax +
mov eax 111h +
cmp ecx eax +
ja loc_1010A17  +
jz loc_10109C0  +
mov eax ecx +
dec eax  +
dec eax  +
jz loc_1010951  +
sub eax 0Dh +
jz loc_10109B7  +
sub eax 3Fh +
jz loc_101096A  +
sub eax 5 +
jz loc_1010959  +
sub eax 0BDh +
jnz loc_1010A3A  +
push dword ptr [ebp+14h]  +
push 0FFFFFFEBh  +
push edi  +
call ds:SetWindowLongW  +
push edi  +
push dword ptr [ebp+14h]  +
call sub_101038A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push 0  +
push dword ptr [ebp+14h]  +
push edi  +
push esi  +
call sub_100E7AF  +
jmp loc_1010B4A  +
mov eax [ebp+10h] +
sub eax 41Eh +
jz loc_10109A8  +
sub eax 3Bh +
jnz loc_1010951  +
mov eax [ebp+14h] +
test eax eax +
jz loc_1010951  +
cmp dword ptr [eax+8] 0FFFFFF9Bh +
jnz loc_1010951  +
mov ecx esi +
call sub_1008482  +
test eax eax +
jnz loc_1010951  +
push 1  +
push esi  +
call sub_1008EF1  +
push 0  +
push 64h  +
push 7  +
push edi  +
call ds:SetTimer  +
jmp loc_1010951  +
***
push dword ptr [ebp+14h]  +
push edi  +
push esi  +
call sub_10101A6  +
jmp loc_1010B4A  +
push edi  +
push esi  +
call sub_100D34E  +
jmp loc_1010951  +
***
mov ecx [ebp+10h] +
movzx eax cx +
dec eax  +
dec eax  +
jz loc_1010A0F  +
sub eax 3E7h +
jz loc_1010A02  +
dec eax  +
jz loc_10109F5  +
sub eax 66h +
jz loc_10109E8  +
sub eax 42h +
jnz loc_1010951  +
push ecx  +
jmp loc_1010B43  +
push ecx  +
push edi  +
push esi  +
call sub_1010121  +
jmp loc_1010B4A  +
push ecx  +
push edi  +
push esi  +
call sub_100EB39  +
jmp loc_1010B4A  +
push ecx  +
push edi  +
push esi  +
call sub_1010035  +
jmp loc_1010B4A  +
xor eax eax +
inc eax  +
jmp loc_1010953  +
***
mov eax ecx +
sub eax 112h +
jz loc_1010B34  +
dec eax  +
jz loc_1010B0D  +
sub eax 25h +
jz loc_1010A85  +
sub eax 7FC9h +
jz loc_1010A7A  +
dec eax  +
jz loc_1010A61  +
mov eax dword_101B3BC +
test eax eax +
jz loc_1010951  +
cmp ecx eax +
jnz loc_1010951  +
push 0B11FB11Fh  +
push 0  +
push edi  +
call sub_1017CFB  +
jmp loc_1010B4A  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push edi  +
push esi  +
call sub_100F47E  +
push edi  +
push esi  +
call sub_100E4E8  +
jmp loc_1010951  +
***
push esi  +
call sub_100D532  +
jmp loc_1010951  +
***
mov esi ds:GetDlgItem +
push 44Dh  +
push edi  +
call esi  +
cmp [ebp+14h] eax +
jnz loc_1010AB7  +
push 16h  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:SetBkColor  +
push 16h  +
call ds:GetSysColorBrush  +
jmp loc_1010953  +
***
push 454h  +
push edi  +
call esi  +
cmp [ebp+14h] eax +
jnz loc_1010ADA  +
push 0  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:SetBkColor  +
push 0  +
jmp loc_1010AAC  +
***
push 456h  +
push edi  +
call esi  +
cmp [ebp+14h] eax +
jz loc_1010AC4  +
mov esi ds:GetSysColor +
push 5  +
call esi  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:SetBkColor  +
push 8  +
call esi  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:SetTextColor  +
push 5  +
jmp loc_1010AAC  +
***
cmp dword ptr [ebp+10h] 7 +
jnz loc_1010951  +
push 0  +
push esi  +
call sub_1008EF1  +
push 7  +
push edi  +
call ds:KillTimer  +
push edi  +
push esi  +
call sub_100EC81  +
jmp loc_1010951  +
***
mov eax 0F060h +
cmp [ebp+10h] eax +
jnz loc_1010951  +
push eax  +
push edi  +
push esi  +
call sub_100E449  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1010953  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
cmp edx eax +
jz loc_1010BB7  +
mov ecx [ebp+0Ch] +
cmp ecx eax +
jz loc_1010BB7  +
push esi  +
mov esi [edx+18h] +
cmp esi eax +
jz loc_1010B7F  +
cmp [ecx+18h] eax +
jnz loc_1010B99  +
cmp esi eax +
jnz loc_1010BA9  +
cmp [ecx+18h] eax +
jnz loc_1010BA9  +
mov esi [edx+1Ch] +
cmp esi eax +
jz loc_1010B94  +
cmp [ecx+1Ch] eax +
jnz loc_1010B99  +
cmp esi eax +
jnz loc_1010BA9  +
cmp [ecx+1Ch] eax +
jnz loc_1010BA9  +
push dword ptr [ecx+8]  +
push dword ptr [edx+8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
jmp loc_1010BB6  +
xor ecx ecx +
cmp esi eax +
setz cl  +
lea ecx [ecx+ecx-1] +
mov eax ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E0h +
push esi  +
push edi  +
push 1  +
push 22h  +
push offset aInsertlistitem  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor edi edi +
push 38h  +
lea eax [ebp+var_64] +
push edi  +
push eax  +
mov [ebp+lParam] edi +
call memset  +
push 38h  +
lea eax [ebp+var_A0] +
push edi  +
push eax  +
mov [ebp+var_4] 80004005h +
mov [ebp+hicon] edi +
mov [ebp+var_A4] edi +
call memset  +
add esp 18h +
push 2Ah  +
pop eax  +
cmp [ebp+arg_1C] edi +
jnz loc_1010C29  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_1010D24  +
mov esi [ebp+arg_C] +
push 2Bh  +
mov [ebp+var_28] ax +
pop eax  +
cmp esi edi +
jz loc_1010C19  +
push 2Ch  +
mov [ebp+var_28] ax +
pop eax  +
cmp [ebp+hWnd] edi +
jz loc_1010C19  +
mov [ebp+var_2C] edi +
mov [ebp+var_28] ax +
cmp [ebp+arg_10] edi +
jz loc_1010C60  +
push 1  +
lea eax [ebp+hicon] +
push eax  +
push [ebp+arg_10]  +
call sub_100D086  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
or [ebp+var_4C] 0FFFFFFFFh +
mov [ebp+var_64] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov [ebp+var_48] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 104Dh  +
push [ebp+hWnd]  +
mov [ebp+var_54] esi +
mov esi ds:SendMessageW +
mov [ebp+lParam] 7 +
mov [ebp+var_60] edi +
call esi  +
mov ebx eax +
push 3Eh  +
pop eax  +
cmp ebx 0FFFFFFFFh +
jnz loc_1010CAA  +
mov [ebp+var_2C] 80004005h +
mov [ebp+var_26] ax +
jmp loc_1010D23  +
mov [ebp+var_28] ax +
mov eax [ebp+arg_18] +
shl eax 0Ch +
mov [ebp+var_D4] eax +
lea eax [ebp+var_E0] +
push eax  +
push ebx  +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_2C] edi +
mov [ebp+var_D0] 0F000h +
call esi  +
cmp [ebp+var_4] edi +
jl loc_1010D1E  +
cmp [ebp+arg_10] edi +
jz loc_1010D1E  +
push [ebp+hicon]  +
push 0FFFFFFFFh  +
push [ebp+himl]  +
call ds:ImageList_ReplaceIcon  +
cmp eax 0FFFFFFFFh +
jz loc_1010D1E  +
mov [ebp+var_88] eax +
lea eax [ebp+var_A4] +
push eax  +
push edi  +
push 104Ch  +
push [ebp+hWnd]  +
mov [ebp+var_A4] 2 +
mov [ebp+var_A0] ebx +
call esi  +
mov eax [ebp+arg_1C] +
mov [eax] ebx +
pop ebx  +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push esi  +
push edi  +
push 1  +
push 66h  +
push offset aCreatebitmap  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
xor esi esi +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_54.bmiHeader.biWidth] +
mov [ebp+var_54.bmiHeader.biSize] esi +
stos   +
mov edi [ebp+arg_10] +
mov [ebp+var_4] esi +
cmp edi esi +
jz loc_1010D93  +
push ebx  +
push 6Fh  +
pop eax  +
push esi  +
mov [edi] esi +
mov [ebp+var_28] esi +
mov [ebp+var_24] ax +
call ds:GetDC  +
mov ebx eax +
cmp ebx esi +
jnz loc_1010DA3  +
call sub_1015B6B  +
push 72h  +
jmp loc_1010DED  +
push 6Fh  +
pop eax  +
mov [ebp+var_28] 80070057h +
mov [ebp+var_22] ax +
jmp loc_1010E10  +
push 72h  +
pop eax  +
mov [ebp+var_24] ax +
mov eax [ebp+arg_0] +
mov [ebp+var_54.bmiHeader.biWidth] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_54.bmiHeader.biHeight] eax +
mov ax [ebp+arg_8] +
mov [ebp+var_54.bmiHeader.biPlanes] ax +
mov ax [ebp+arg_C] +
push esi  +
push esi  +
mov [ebp+var_54.bmiHeader.biBitCount] ax +
lea eax [ebp+var_4] +
push eax  +
push esi  +
lea eax [ebp+var_54] +
push eax  +
push ebx  +
mov [ebp+var_28] esi +
mov [ebp+var_54.bmiHeader.biSize] 28h +
call ds:CreateDIBSection  +
cmp eax esi +
jnz loc_1010DF7  +
call sub_1015B6B  +
push 7Bh  +
mov [ebp+var_28] eax +
pop eax  +
mov [ebp+var_22] ax +
jmp loc_1010E03  +
push 7Bh  +
pop ecx  +
mov [ebp+var_28] esi +
mov [ebp+var_24] cx +
mov [edi] eax +
cmp ebx esi +
jz loc_1010E0F  +
push ebx  +
push esi  +
call ds:ReleaseDC  +
pop ebx  +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 0A8h  +
push offset aCreatecolorbit  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
push [ebp+arg_8]  +
push 20h  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1010D3C  +
mov [ebp+var_24] eax +
mov ecx 0AAh +
test eax eax +
jge loc_1010E68  +
mov [ebp+var_1E] cx +
jmp loc_1010E6C  +
mov [ebp+var_20] cx +
push esi  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 0BDh  +
push offset aCreatecheckbox  +
lea ecx [ebp+var_78] +
call sub_10148A2  +
xor esi esi +
xor eax eax +
mov [ebp+rc.left] esi +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_54] 18h +
mov [ebp+var_50] 2 +
mov [ebp+var_4C] esi +
lea edi [ebp+var_48] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_28] +
mov [ebp+var_2C] esi +
stos   +
mov eax [ebp+arg_4] +
xor ebx ebx +
xor edi edi +
mov [ebp+himl] esi +
mov [ebp+hbmImage] esi +
mov [ebp+crMask] 0FF000000h +
mov [ebp+var_8] esi +
mov [ebp+var_24] esi +
mov [ebp+var_18] esi +
cmp eax esi +
jz loc_1010F48  +
mov [eax] esi +
mov eax 0D7h +
push offset LibFileName  +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax esi +
jnz loc_1010F5D  +
call ds:GetLastError  +
cmp eax 7Eh +
jz loc_1011015  +
cmp eax esi +
jle loc_1010F2F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 0E4h +
jge loc_1011011  +
mov [ebp+var_72] ax +
jmp loc_101137D  +
mov eax 0D7h +
mov [ebp+var_78] 80070057h +
mov [ebp+var_72] ax +
jmp loc_1011399  +
mov edi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call edi  +
mov [ebp+var_24] eax +
cmp eax esi +
jnz loc_1010F81  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0EAh +
jmp loc_1010F3F  +
push offset aDrawthemebackg  +
push [ebp+hLibModule]  +
mov eax 0EAh +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call edi  +
mov [ebp+var_18] eax +
cmp eax esi +
jnz loc_1010FAD  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0ECh +
jmp loc_1010F3F  +
push offset aGetthemepartsi  +
push [ebp+hLibModule]  +
mov eax 0ECh +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call edi  +
mov ebx eax +
cmp ebx esi +
jnz loc_1010FDB  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0EEh +
jmp loc_1010F3F  +
push offset aOpenthemedata  +
push [ebp+hLibModule]  +
mov eax 0EEh +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call edi  +
mov edi eax +
cmp edi esi +
jnz loc_1011009  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0F0h +
jmp loc_1010F3F  +
mov [ebp+var_78] esi +
mov eax 0F0h +
mov [ebp+var_74] ax +
push esi  +
call ds:CreateCompatibleDC  +
mov [ebp+lprc] eax +
cmp eax esi +
jnz loc_1011039  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0F8h +
mov [ebp+var_72] ax +
jmp loc_1011351  +
push 8  +
mov ecx 0F8h +
push eax  +
mov [ebp+var_78] esi +
mov [ebp+var_74] cx +
call ds:SetLayout  +
cmp eax 0FFFFFFFFh +
jnz loc_1011062  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 0FEh +
jmp loc_1011030  +
mov eax 0FEh +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
cmp edi esi +
jz loc_10110A7  +
push offset aButton  +
push esi  +
call edi  +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_10110A7  +
cmp ebx esi +
jz loc_10110A7  +
lea eax [ebp+var_2C] +
push eax  +
push 2  +
push esi  +
push 1  +
push 3  +
push [ebp+lprc]  +
push [ebp+var_8]  +
call ebx  +
test eax eax +
jnz loc_10110A7  +
mov ebx [ebp+var_2C] +
mov edi [ebp+var_28] +
mov [ebp+var_C] ebx +
jmp loc_10110BD  +
mov edi ds:GetSystemMetrics +
push 31h  +
call edi  +
push 32h  +
mov [ebp+var_C] eax +
call edi  +
mov ebx [ebp+var_C] +
mov edi eax +
mov eax [ebp+arg_0] +
neg eax  +
push 4  +
sbb eax eax +
push esi  +
and eax 0A000h +
or eax 21h +
push eax  +
push edi  +
push ebx  +
call ds:ImageList_Create  +
mov [ebp+himl] eax +
cmp eax esi +
mov eax 124h +
jnz loc_10110F0  +
mov [ebp+var_78] 80004005h +
jmp loc_1011030  +
mov [ebp+var_74] ax +
lea ecx [ebp+hbmImage] +
push ecx  +
mov eax ebx +
shl eax 2 +
push edi  +
push eax  +
mov [ebp+var_78] esi +
call sub_1010E28  +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 127h +
jl loc_1011030  +
push [ebp+hbmImage]  +
mov ebx ds:SelectObject +
push [ebp+lprc]  +
mov [ebp+var_74] ax +
call ebx  +
mov [ebp+arg_0] eax +
mov [ebp+rc.top] esi +
mov [ebp+rc.left] esi +
mov [ebp+rc.bottom] edi +
cmp [ebp+var_8] esi +
jnz loc_1011186  +
mov edi 0FF00FFh +
push 5  +
mov [ebp+crMask] edi +
call ds:GetSysColor  +
cmp eax edi +
jnz loc_1011155  +
mov [ebp+crMask] 0FF0000h +
mov eax [ebp+var_C] +
push [ebp+crMask]  +
shl eax 2 +
mov [ebp+rc.right] eax +
lea eax [ebp+rc] +
push eax  +
push [ebp+lprc]  +
call sub_100CFCF  +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 13Ah +
jge loc_1011182  +
mov [ebp+var_72] ax +
jmp loc_1011344  +
mov [ebp+var_74] ax +
mov edi [ebp+var_C] +
mov [ebp+rc.right] edi +
cmp [ebp+var_8] esi +
jnz loc_1011204  +
mov edi ds:GetSystemMetrics +
push 2Eh  +
call edi  +
neg eax  +
push eax  +
push 2Dh  +
call edi  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
test eax eax +
jnz loc_10111C2  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 146h +
jmp loc_1011179  +
inc [ebp+rc.right]  +
inc [ebp+rc.bottom]  +
mov eax 146h +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
mov edi ds:DrawFrameControl +
push 4000h  +
push 4  +
lea eax [ebp+rc] +
push eax  +
push [ebp+lprc]  +
call edi  +
test eax eax +
jnz loc_10113AD  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 15Fh +
jmp loc_1011179  +
cmp [ebp+var_18] esi +
jz loc_10111D4  +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push 1  +
push 3  +
push [ebp+lprc]  +
push [ebp+var_8]  +
call [ebp+var_18]  +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 151h +
jl loc_1011179  +
push esi  +
mov [ebp+var_74] ax +
push edi  +
mov edi ds:OffsetRect +
lea eax [ebp+rc] +
push eax  +
call edi  +
test eax eax +
jnz loc_1011256  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 152h +
jmp loc_1011179  +
mov eax 152h +
mov [ebp+var_74] ax +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push 5  +
push 3  +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
push [ebp+var_8]  +
call [ebp+var_18]  +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 153h +
jl loc_1011179  +
push esi  +
push [ebp+var_C]  +
mov [ebp+var_74] ax +
lea eax [ebp+rc] +
push eax  +
call edi  +
test eax eax +
jnz loc_10112AB  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 154h +
jmp loc_1011179  +
mov eax 154h +
mov [ebp+var_74] ax +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push 9  +
push 3  +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
push [ebp+var_8]  +
call [ebp+var_18]  +
mov [ebp+var_78] eax +
cmp eax esi +
mov eax 155h +
jl loc_1011179  +
push esi  +
push [ebp+var_C]  +
mov [ebp+var_74] ax +
lea eax [ebp+rc] +
push eax  +
call edi  +
test eax eax +
jnz loc_1011300  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 156h +
jmp loc_1011179  +
push [ebp+arg_0]  +
mov eax 156h +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call ebx  +
push esi  +
push [ebp+hbmImage]  +
mov [ebp+arg_0] esi +
push [ebp+himl]  +
call ds:ImageList_Add  +
cmp eax 0FFFFFFFFh +
mov eax 15Bh +
jz loc_10110E4  +
mov ecx [ebp+himl] +
mov [ebp+var_74] ax +
mov eax [ebp+arg_4] +
mov [ebp+var_78] esi +
mov [eax] ecx +
mov [ebp+himl] esi +
cmp [ebp+arg_0] esi +
jz loc_1011351  +
push [ebp+arg_0]  +
push [ebp+lprc]  +
call ebx  +
cmp [ebp+lprc] esi +
jz loc_101135F  +
push [ebp+lprc]  +
call ds:DeleteDC  +
cmp [ebp+hbmImage] esi +
jz loc_101136D  +
push [ebp+hbmImage]  +
call ds:DeleteObject  +
cmp [ebp+var_8] esi +
jz loc_101137D  +
cmp [ebp+var_24] esi +
jz loc_101137D  +
push [ebp+var_8]  +
call [ebp+var_24]  +
cmp [ebp+hLibModule] esi +
jz loc_101138B  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp [ebp+himl] esi +
jz loc_1011399  +
push [ebp+himl]  +
call ds:ImageList_Destroy  +
mov esi [ebp+var_78] +
lea ecx [ebp+var_78] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push esi  +
push [ebp+var_C]  +
mov eax 15Fh +
mov [ebp+var_74] ax +
lea eax [ebp+rc] +
push eax  +
mov [ebp+var_78] esi +
call ds:OffsetRect  +
test eax eax +
jnz loc_10113DD  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 160h +
jmp loc_1011179  +
push 4400h  +
mov eax 160h +
mov [ebp+var_74] ax +
push 4  +
lea eax [ebp+rc] +
push eax  +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
call edi  +
test eax eax +
jnz loc_101140F  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 161h +
jmp loc_1011179  +
push esi  +
push [ebp+var_C]  +
mov eax 161h +
mov [ebp+var_74] ax +
lea eax [ebp+rc] +
push eax  +
mov [ebp+var_78] esi +
call ds:OffsetRect  +
test eax eax +
jnz loc_101143F  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 162h +
jmp loc_1011179  +
push 4500h  +
mov eax 162h +
mov [ebp+var_74] ax +
push 4  +
lea eax [ebp+rc] +
push eax  +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
call edi  +
test eax eax +
jnz loc_1011471  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 163h +
jmp loc_1011179  +
mov eax 163h +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call ds:GdiFlush  +
test eax eax +
jnz loc_1011499  +
call sub_1015B6B  +
mov [ebp+var_78] eax +
mov eax 164h +
jmp loc_1011179  +
push [ebp+arg_0]  +
mov eax 164h +
push [ebp+lprc]  +
mov [ebp+var_78] esi +
mov [ebp+var_74] ax +
call ebx  +
push [ebp+crMask]  +
mov [ebp+arg_0] esi +
push [ebp+hbmImage]  +
push [ebp+himl]  +
call ds:ImageList_AddMasked  +
cmp eax 0FFFFFFFFh +
mov eax 169h +
jmp loc_101132C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 19Eh  +
push offset aCdefragui_on_0  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
and dword ptr [eax+0E0h] 0 +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push 1  +
push 20Bh  +
push offset aCdefragui_on_1  +
lea ecx [ebp+var_68] +
call sub_10148A2  +
xor esi esi +
push 3Ch  +
lea eax [ebp+Paint.fErase] +
push esi  +
push eax  +
mov [ebp+Paint.hdc] esi +
call memset  +
xor eax eax +
mov [ebp+Points.x] esi +
lea edi [ebp+Points.y] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_78.left] esi +
lea edi [ebp+var_78.top] +
stos   +
stos   +
add esp 0Ch +
stos   +
mov eax 214h +
cmp ebx esi +
jnz loc_1011587  +
mov [ebp+var_68] 80070057h +
mov [ebp+var_62] ax +
jmp loc_1011697  +
mov [ebp+var_64] ax +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
mov [ebp+var_68] esi +
call ds:BeginPaint  +
mov edi eax +
cmp edi esi +
jnz loc_10115B5  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 217h +
mov [ebp+var_62] ax +
jmp loc_1011688  +
push 44Dh  +
mov eax 217h +
push ebx  +
mov [ebp+var_68] esi +
mov [ebp+var_64] ax +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_10115E0  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 21Ah +
jmp loc_10115AC  +
mov ecx 21Ah +
mov [ebp+var_64] cx +
lea ecx [ebp+Points] +
push ecx  +
push eax  +
mov [ebp+var_68] esi +
call ds:GetWindowRect  +
test eax eax +
jnz loc_101160D  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 21Ch +
jmp loc_10115AC  +
mov eax 21Ch +
push 2  +
mov [ebp+var_64] ax +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push esi  +
mov [ebp+var_68] esi +
call ds:MapWindowPoints  +
test eax eax +
jnz loc_1011640  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 21Dh +
jmp loc_10115AC  +
mov eax 21Dh +
mov [ebp+var_64] ax +
mov eax [ebp+Points.y] +
mov [ebp+var_78.bottom] eax +
mov eax [ebp-80h] +
push 5  +
mov [ebp+var_68] esi +
mov [ebp+var_78.left] esi +
mov [ebp+var_78.top] esi +
mov [ebp+var_78.right] eax +
call ds:GetSysColor  +
push eax  +
lea eax [ebp+var_78] +
push eax  +
push edi  +
call sub_100CFCF  +
mov [ebp+var_68] eax +
cmp eax esi +
mov eax 226h +
jl loc_10115AC  +
mov [ebp+var_64] ax +
cmp edi esi +
jz loc_1011697  +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
call ds:EndPaint  +
mov esi [ebp+var_68] +
lea ecx [ebp+var_68] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 253h  +
push offset aCdefragui_onca  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
xor esi esi +
mov eax 255h +
cmp [ebp+hDlg] esi +
jnz loc_10116F0  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1011738  +
push esi  +
push esi  +
push [ebp+hDlg]  +
mov [ebp+var_20] ax +
mov eax [ebp+arg_0] +
mov [ebp+var_24] esi +
mov [eax+90h] esi +
call ds:SetWindowLongW  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+hDlg]  +
call ds:EndDialog  +
test eax eax +
jnz loc_101172C  +
call sub_1015B6B  +
mov [ebp+var_24] eax +
mov eax 25Bh +
jmp loc_10116EA  +
mov eax 25Bh +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 26Ch  +
push offset aCdefragui_se_0  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_C] +
mov [ebp+wParam] ebx +
stos   +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov eax 273h +
cmp [ebp+hWnd] ebx +
jnz loc_1011799  +
mov [ebp+var_34] 80070057h +
mov [ebp+var_2E] ax +
jmp loc_1011822  +
mov esi ds:SendMessageW +
push ebx  +
mov [ebp+var_30] ax +
lea eax [ebp+wParam] +
push eax  +
mov edi 10D3h +
push edi  +
push [ebp+hWnd]  +
mov [ebp+var_34] ebx +
mov [ebp+wParam] ebx +
call esi  +
test eax eax +
jz loc_10117F3  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
cmp eax 2000h +
jnz loc_10117D9  +
inc [ebp+var_4]  +
inc [ebp+var_8]  +
push ebx  +
lea eax [ebp+wParam] +
push eax  +
push edi  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jnz loc_10117BD  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jnz loc_10117F8  +
xor eax eax +
inc eax  +
jmp loc_10117FF  +
neg eax  +
sbb eax eax +
and eax 2 +
inc eax  +
shl eax 0Ch +
mov [ebp+var_64] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_C] ebx +
mov [ebp+wParam] ebx +
mov [ebp+var_60] 0F000h +
call esi  +
mov esi [ebp+var_34] +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
push esi  +
push edi  +
push 1  +
push 2AAh  +
push offset aCdefragui_seta  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor ecx ecx +
xor eax eax +
lea edi [ebp+var_4] +
mov [ebp+wParam] ecx +
stos   +
mov eax 2AEh +
cmp [ebp+hWnd] ecx +
jnz loc_101187B  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_10118ED  +
mov esi ds:SendMessageW +
or [ebp+wParam] 0FFFFFFFFh +
push ebx  +
push ecx  +
mov [ebp+var_28] ax +
lea eax [ebp+wParam] +
push eax  +
mov ebx 10D3h +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+var_2C] ecx +
call esi  +
test eax eax +
jz loc_10118EC  +
mov eax [ebp+arg_8] +
inc eax  +
shl eax 0Ch +
mov [ebp+arg_8] eax +
mov edi 0F000h +
push edi  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
mov ecx [ebp+arg_8] +
cmp eax ecx +
jz loc_10118DC  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_58] edi +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_5C] ecx +
call esi  +
push 0  +
lea eax [ebp+wParam] +
push eax  +
push ebx  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jnz loc_10118B0  +
pop ebx  +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push esi  +
push 1  +
push 2CFh  +
push offset aCdefragui_togg  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
cmp [ebp+arg_4] 0 +
mov eax 2D2h +
jnz loc_101193A  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_10119AF  +
push ebx  +
mov ebx [ebp+hWnd] +
mov [ebp+var_20] ax +
mov eax 2D3h +
test ebx ebx +
jnz loc_1011958  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_10119AE  +
mov esi ds:SendMessageW +
and [ebp+var_24] 0 +
push edi  +
mov edi 0F000h +
push edi  +
push [ebp+wParam]  +
mov [ebp+var_20] ax +
push 102Ch  +
push ebx  +
call esi  +
mov ecx 2000h +
cmp eax ecx +
jz loc_1011994  +
cmp eax 3000h +
jz loc_1011994  +
cmp eax 1000h +
jnz loc_10119AD  +
mov [ebp+var_54] ecx +
jmp loc_101199B  +
mov [ebp+var_54] 1000h +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_50] edi +
push 102Bh  +
push ebx  +
call esi  +
pop edi  +
pop ebx  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 1  +
push 323h  +
push offset aCdefragui_getf  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_4] +
mov [ebp+wParam] ebx +
stos   +
mov eax 327h +
cmp [ebp+hWnd] ebx +
jnz loc_1011A07  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_1011A6D  +
mov [ebp+var_28] ax +
mov eax [ebp+arg_8] +
mov [ebp+var_2C] ebx +
cmp eax ebx +
jz loc_1011A34  +
or [ebp+wParam] 0FFFFFFFFh +
mov esi ds:SendMessageW +
mov [eax] ebx +
mov eax 329h +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ax +
mov edi 10D3h +
jmp loc_1011A4E  +
mov eax 329h +
jmp loc_10119FA  +
push 1  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call esi  +
test al 1 +
jnz loc_1011A81  +
push ebx  +
lea eax [ebp+wParam] +
push eax  +
push edi  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jnz loc_1011A3B  +
mov [ebp+var_2C] 1 +
mov eax 336h +
mov [ebp+var_28] ax +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov eax [ebp+wParam] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebp+var_2C] ebx +
mov eax 332h +
jmp loc_1011A69  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 471h  +
push offset aCdefragui_setv  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_4] +
push 38h  +
mov [ebp+wParam] ebx +
stos   +
lea eax [ebp+var_64] +
push ebx  +
push eax  +
mov [ebp+lParam] ebx +
call memset  +
add esp 0Ch +
mov eax 47Bh +
cmp [ebp+hWnd] ebx +
jnz loc_1011AEE  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_1011BC3  +
push 45Dh  +
push [ebp+hWnd]  +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ax +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
cmp eax ebx +
jnz loc_1011B19  +
call sub_1015B6B  +
mov [ebp+var_2C] eax +
mov eax 47Eh +
jmp loc_1011AE5  +
mov esi [ebp+lpCriticalSection] +
mov eax 47Eh +
mov [ebp+var_28] ax +
lea eax [esi+60h] +
push eax  +
mov [ebp+var_2C] ebx +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [esi+58h] +
jmp loc_1011B40  +
mov [eax+10h] ebx +
mov eax [eax+48h] +
cmp eax ebx +
jnz loc_1011B3A  +
mov edi ds:SendMessageW +
mov [ebp+wParam] ebx +
jmp loc_1011BA7  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push [ebp+hWnd]  +
call edi  +
mov esi eax +
sub esi 2000h +
push 3Ch  +
neg esi  +
lea eax [ebp+lParam] +
sbb esi esi +
push ebx  +
push eax  +
inc esi  +
call memset  +
mov eax [ebp+wParam] +
add esp 0Ch +
mov [ebp+var_64] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 104Bh  +
push [ebp+hWnd]  +
mov [ebp+lParam] 4 +
call edi  +
test eax eax +
jz loc_1011BA7  +
mov eax [ebp+var_48] +
cmp eax ebx +
jz loc_1011BA7  +
mov [eax+10h] esi +
push ebx  +
lea eax [ebp+wParam] +
push eax  +
push 10D3h  +
push [ebp+hWnd]  +
call edi  +
test eax eax +
jnz loc_1011B4F  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 4BFh  +
push offset aCdefragui_enab  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
xor esi esi +
mov eax 4C2h +
cmp [ebp+hDlg] esi +
jnz loc_1011C12  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1011C5D  +
push 1  +
push [ebp+hDlg]  +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_1011C37  +
call sub_1015B6B  +
mov [ebp+var_24] eax +
mov eax 4C5h +
jmp loc_1011C0C  +
mov ecx 4C5h +
mov [ebp+var_24] esi +
mov [ebp+var_20] cx +
cmp [ebp+bEnable] esi +
jz loc_1011C53  +
mov ecx [ebp+arg_0] +
cmp [ecx+94h] esi +
jz loc_1011C5D  +
push [ebp+bEnable]  +
push eax  +
call ds:EnableWindow  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push 1  +
push 238h  +
push offset aCdefragui_onok  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov ebx [ebp+hDlg] +
mov eax 23Ah +
test ebx ebx +
jnz loc_1011CAB  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1011D23  +
mov esi [ebp+arg_0] +
and [ebp+var_24] 0 +
push 45Ch  +
push ebx  +
mov [ebp+var_20] ax +
mov dword ptr [esi+90h] 1 +
call ds:IsDlgButtonChecked  +
dec eax  +
neg eax  +
sbb eax eax +
push ebx  +
inc eax  +
push esi  +
mov [esi+50h] eax +
call sub_1011A98  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 243h +
jl loc_1011CA5  +
push 1  +
push 0  +
push ebx  +
mov [ebp+var_20] ax +
call ds:SetWindowLongW  +
movzx eax [ebp+arg_8] +
push eax  +
push ebx  +
call ds:EndDialog  +
test eax eax +
jnz loc_1011D16  +
call sub_1015B6B  +
mov [ebp+var_24] eax +
mov eax 247h +
jmp loc_1011CA5  +
and [ebp+var_24] 0 +
mov eax 247h +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 349h  +
push offset aCdefragui_up_0  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_8] +
mov [ebp+wParam] ebx +
stos   +
mov [ebp+bEnable] ebx +
mov eax 34Fh +
cmp [ebp+hDlg] ebx +
jnz loc_1011D82  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_1011E04  +
push 45Dh  +
push [ebp+hDlg]  +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ax +
call ds:GetDlgItem  +
mov edi eax +
cmp edi ebx +
jnz loc_1011DAC  +
call sub_1015B6B  +
mov [ebp+var_30] eax +
mov eax 352h +
jmp loc_1011D79  +
or [ebp+wParam] 0FFFFFFFFh +
mov esi ds:SendMessageW +
mov eax 352h +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ax +
push ebx  +
lea eax [ebp+wParam] +
push eax  +
push 10D3h  +
push edi  +
call esi  +
test eax eax +
jz loc_1011DF6  +
push 0F000h  +
push [ebp+wParam]  +
push 102Ch  +
push edi  +
call esi  +
cmp eax 1000h +
jz loc_1011DF1  +
mov [ebp+bEnable] 1 +
cmp [ebp+bEnable] ebx +
jz loc_1011DC2  +
push [ebp+bEnable]  +
push [ebp+hDlg]  +
push [ebp+arg_0]  +
call sub_1011BDC  +
mov esi [ebp+var_30] +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 42Fh  +
push offset aCdefragui_onch  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
xor eax eax +
mov [ebp+var_C] offset dword_10032B8 +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
cmp [ebp+hDlg] eax +
jnz loc_1011E62  +
mov eax 433h +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_1011E99  +
mov [ebp+var_30] eax +
mov eax 433h +
mov [ebp+var_2C] ax +
mov eax [ebp+arg_8] +
shr eax 10h +
test ax ax +
jz loc_1011E87  +
mov eax 43Fh +
mov [ebp+var_30] esi +
mov [ebp+var_2C] ax +
jmp loc_1011E99  +
mov eax [ebp+arg_0] +
push [ebp+hDlg]  +
mov [eax+94h] esi +
push eax  +
call sub_1011D3B  +
mov esi [ebp+var_30] +
lea ecx [ebp+var_C] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 44Eh  +
push offset aCdefragui_on_2  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
cmp [ebp+hDlg] 0 +
mov eax 451h +
jnz loc_1011EEF  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1011F22  +
and [ebp+var_24] 0 +
mov [ebp+var_20] ax +
mov eax [ebp+arg_8] +
shr eax 10h +
test ax ax +
jz loc_1011F10  +
mov eax 45Bh +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
jmp loc_1011F22  +
mov eax [ebp+arg_0] +
push [ebp+hDlg]  +
mov [eax+94h] esi +
push eax  +
call sub_1011D3B  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push 1  +
push 529h  +
push offset aCdefragui_po_1  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
xor ebx ebx +
mov [ebp+var_10] offset dword_10032B8 +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
mov eax 532h +
cmp [ebp+arg_4] ebx +
jnz loc_1011F83  +
mov [ebp+var_34] 80070057h +
mov [ebp+var_2E] ax +
jmp loc_101209C  +
mov [ebp+var_30] ax +
mov eax 533h +
cmp [ebp+hWnd] ebx +
jz loc_1011F73  +
push edi  +
mov edi [ebp+lpCriticalSection] +
mov [ebp+var_30] ax +
lea eax [edi+60h] +
push eax  +
mov [ebp+var_34] ebx +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov esi [edi+58h] +
jmp loc_1011FF1  +
cmp [esi+20h] ebx +
jz loc_1011FEE  +
mov ecx [esi+4] +
mov eax [esi+10h] +
cmp ecx ebx +
jnz loc_1011FBF  +
mov ecx [esi] +
lea edx [ebp+arg_4] +
push edx  +
inc eax  +
push eax  +
push esi  +
push dword ptr [esi+0Ch]  +
push ecx  +
push [ebp+var_4]  +
push dword ptr [edi+0E4h]  +
push [ebp+hWnd]  +
call sub_1010BC0  +
mov [ebp+var_34] eax +
cmp eax ebx +
mov eax 552h +
jl loc_1012019  +
inc [ebp+var_4]  +
mov [ebp+var_30] ax +
mov esi [esi+48h] +
cmp esi ebx +
jnz loc_1011FAE  +
push offset loc_1010B59  +
push edi  +
push 1030h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
test eax eax +
mov eax 55Ah +
jnz loc_101201F  +
mov [ebp+var_34] 80004005h +
mov [ebp+var_2E] ax +
jmp loc_1012092  +
mov edx hInstance +
push 462h  +
lea ecx [ebp+var_10] +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ax +
call sub_1017AFF  +
mov [ebp+var_34] eax +
cmp eax ebx +
mov eax 55Dh +
jl loc_1012019  +
mov [ebp+var_30] ax +
lea eax [ebp+arg_4] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push [ebp+var_10]  +
push ebx  +
push dword ptr [edi+0E4h]  +
push [ebp+hWnd]  +
call sub_1010BC0  +
mov [ebp+var_34] eax +
cmp eax ebx +
mov eax 560h +
jl loc_1012019  +
push [ebp+hWnd]  +
mov [ebp+var_30] ax +
push edi  +
mov [edi+84h] ebx +
call sub_101174F  +
mov [ebp+var_34] eax +
cmp eax ebx +
mov eax 564h +
jl loc_1012019  +
mov [ebp+var_30] ax +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop edi  +
mov esi [ebp+var_34] +
lea ecx [ebp+var_10] +
call sub_1016FE9  +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 1ABh  +
push offset aCdefragui_on_3  +
lea ecx [ebp+var_4C] +
call sub_10148A2  +
xor eax eax +
xor ebx ebx +
push 0Ah  +
pop ecx  +
lea edi [ebp+var_74] +
mov [ebp+var_78] ebx +
stos   +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+hDlg] +
mov [ebp+himl] ebx +
cmp eax ebx +
jnz loc_101211B  +
mov [ebp+var_4C] 80070057h +
mov eax 1B6h +
mov [ebp+var_46] ax +
jmp loc_10123B3  +
mov ecx 1B6h +
mov [ebp+var_48] cx +
mov ecx [ebp+arg_0] +
push 45Dh  +
push eax  +
mov [ebp+var_4C] ebx +
mov [ecx+0E0h] eax +
call ds:GetDlgItem  +
mov edi eax +
mov [ebp+hWnd] edi +
cmp edi ebx +
jnz loc_1012154  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1BCh +
jmp loc_1012112  +
mov esi ds:SendMessageW +
push ebx  +
push 1  +
push 108Eh  +
mov eax 1BCh +
push edi  +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] ax +
call esi  +
cmp eax 1 +
mov eax 1C1h +
jz loc_1012184  +
mov [ebp+var_4C] 80004005h +
jmp loc_1012112  +
push 0FFFFFFF0h  +
push edi  +
mov edi ds:GetWindowLongW +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] ax +
call edi  +
or eax 404Ch +
push eax  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
push ebx  +
push ebx  +
push 1036h  +
push [ebp+hWnd]  +
call esi  +
push 0FFFFFFECh  +
push [ebp+hDlg]  +
call edi  +
lea ecx [ebp+himl] +
and eax 400000h +
push ecx  +
push eax  +
call sub_1010E83  +
mov [ebp+var_4C] eax +
cmp eax ebx +
mov eax 1CDh +
jge loc_10121DE  +
mov [ebp+var_46] ax +
jmp loc_10123A5  +
push [ebp+himl]  +
mov [ebp+var_48] ax +
push 2  +
push 1003h  +
push [ebp+hWnd]  +
call esi  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetClientRect  +
test eax eax +
jnz loc_1012211  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1D1h +
jmp loc_10121D5  +
mov eax 1D1h +
mov [ebp+var_48] ax +
mov eax [ebp+Rect.right] +
imul eax eax +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
mov [ebp+var_4C] ebx +
mov [ebp+var_78] 2Ah +
mov [ebp+var_74] 800000h +
mov [ebp+var_64] ebx +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] eax +
lea eax [ebp+var_78] +
push eax  +
push ebx  +
push 1061h  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 1DBh +
jnz loc_1012266  +
mov [ebp+var_4C] 80004005h +
jmp loc_10121D5  +
mov edi [ebp+arg_0] +
push dword ptr [edi+0E4h]  +
mov [ebp+var_4C] ebx +
push 1  +
push 1003h  +
push [ebp+hWnd]  +
mov [ebp+var_48] ax +
call esi  +
mov [edi+94h] ebx +
cmp [edi+50h] ebx +
jz loc_10122BA  +
push 1  +
push 45Ch  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
test eax eax +
jnz loc_10122B3  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1E6h +
jmp loc_10121D5  +
mov eax 1E6h +
jmp loc_10122E4  +
push ebx  +
push 45Ch  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
test eax eax +
jnz loc_10122DF  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1EAh +
jmp loc_10121D5  +
mov eax 1EAh +
push 44Dh  +
push [ebp+hDlg]  +
mov [ebp+var_48] ax +
mov [ebp+var_4C] ebx +
call ds:GetDlgItem  +
mov esi eax +
lea eax [ebp+var_28] +
push eax  +
push esi  +
call ds:GetWindowRect  +
test eax eax +
jnz loc_101231C  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1EFh +
jmp loc_10121D5  +
push 2  +
mov eax 1EFh +
mov [ebp+var_48] ax +
mov eax [ebp+var_20] +
sub eax [ebp+var_28] +
push 1  +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
mov [ebp+var_4C] ebx +
call ds:SetWindowPos  +
test eax eax +
jnz loc_1012353  +
call sub_1015B6B  +
mov [ebp+var_4C] eax +
mov eax 1F0h +
jmp loc_10121D5  +
push [ebp+hWnd]  +
mov eax 1F0h +
push [ebp+hDlg]  +
mov [ebp+var_4C] ebx +
push edi  +
mov [ebp+var_48] ax +
call sub_1011F39  +
mov [ebp+var_4C] eax +
cmp eax ebx +
mov eax 1F3h +
jl loc_10121D5  +
push [ebp+hDlg]  +
mov [ebp+var_48] ax +
push edi  +
call sub_1011D3B  +
mov [ebp+var_4C] eax +
cmp eax ebx +
mov eax 1F5h +
jl loc_10121D5  +
mov [ebp+var_48] ax +
mov [edi+90h] ebx +
mov [ebp+himl] ebx +
cmp [ebp+himl] ebx +
jz loc_10123B3  +
push [ebp+himl]  +
call ds:ImageList_Destroy  +
mov esi [ebp+var_4C] +
lea ecx [ebp+var_4C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 2FBh  +
push offset aCdefragui_volu  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
cmp [ebp+hDlg] 0 +
mov eax 2FFh +
jnz loc_1012404  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_10124CB  +
push edi  +
mov edi [ebp+hWnd] +
mov [ebp+var_20] ax +
mov eax 300h +
test edi edi +
jnz loc_1012425  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_10124CA  +
mov esi [ebp+arg_0] +
and [ebp+var_24] 0 +
push ebx  +
mov ebx [ebp+wParam] +
push ebx  +
push edi  +
push [ebp+hDlg]  +
mov [ebp+var_20] ax +
push esi  +
call sub_1011905  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 303h +
jl loc_10124BF  +
mov [ebp+var_20] ax +
cmp ebx [esi+84h] +
jnz loc_1012489  +
push 0F000h  +
push ebx  +
push 102Ch  +
push edi  +
call ds:SendMessageW  +
xor ecx ecx +
cmp eax 2000h +
setz cl  +
push ecx  +
push edi  +
push esi  +
call sub_101183B  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 30Bh +
jge loc_101249C  +
jmp loc_10124BF  +
push edi  +
push esi  +
call sub_101174F  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 310h +
jl loc_10124BF  +
push [ebp+hDlg]  +
mov [ebp+var_20] ax +
push esi  +
mov dword ptr [esi+94h] 1 +
call sub_1011D3B  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 317h +
jge loc_10124C5  +
mov [ebp+var_1E] ax +
jmp loc_10124C9  +
mov [ebp+var_20] ax +
pop ebx  +
pop edi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
push 1  +
push 36Ch  +
push offset aCdefragui_onke  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
mov edi [ebp+arg_8] +
and [ebp+wParam] 0 +
mov eax 372h +
test edi edi +
jnz loc_1012520  +
mov [ebp+var_28] 80070057h +
mov [ebp+var_22] ax +
jmp loc_10125AE  +
cmp [ebp+hDlg] 0 +
mov [ebp+var_24] ax +
mov eax 373h +
jz loc_1012510  +
and [ebp+var_28] 0 +
push 45Dh  +
push [ebp+hDlg]  +
mov [ebp+var_24] ax +
call ds:GetDlgItem  +
mov esi eax +
test esi esi +
jnz loc_101255A  +
call sub_1015B6B  +
mov [ebp+var_28] eax +
mov eax 376h +
jmp loc_1012517  +
and [ebp+var_28] 0 +
cmp word ptr [edi+0Ch] 20h +
mov eax 376h +
mov [ebp+var_24] ax +
jnz loc_10125AE  +
lea eax [ebp+wParam] +
push eax  +
push esi  +
push [ebp+arg_0]  +
call sub_10119C6  +
mov [ebp+var_28] eax +
test eax eax +
mov eax 37Bh +
jl loc_1012517  +
push [ebp+wParam]  +
mov [ebp+var_24] ax +
push esi  +
push [ebp+hDlg]  +
push [ebp+arg_0]  +
call sub_10123CC  +
mov [ebp+var_28] eax +
test eax eax +
mov eax 37Ch +
jl loc_1012517  +
mov [ebp+var_24] ax +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
push 1  +
push 38Bh  +
push offset aCdefragui_on_4  +
lea ecx [ebp+var_3C] +
call sub_10148A2  +
xor eax eax +
xor ebx ebx +
mov [ebp+lParam] ebx +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax 391h +
cmp [ebp+hDlg] ebx +
jnz loc_101260E  +
mov [ebp+var_3C] 80070057h +
mov [ebp+var_36] ax +
jmp loc_10126B2  +
mov esi [ebp+arg_8] +
mov [ebp+var_38] ax +
mov eax 392h +
cmp esi ebx +
jz loc_10125FE  +
push 45Dh  +
push [ebp+hDlg]  +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ax +
call ds:GetDlgItem  +
mov edi eax +
cmp edi ebx +
jnz loc_1012648  +
call sub_1015B6B  +
mov [ebp+var_3C] eax +
mov eax 395h +
jmp loc_1012605  +
mov eax 395h +
mov [ebp+var_38] ax +
mov eax [esi+20h] +
mov [ebp+lParam] eax +
mov eax [esi+24h] +
mov [ebp+var_14] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1012h  +
push edi  +
mov [ebp+var_3C] ebx +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jnz loc_1012684  +
mov [ebp+var_3C] 1 +
mov eax 39Ch +
jmp loc_10126AE  +
cmp [ebp+arg_C] ebx +
jnz loc_101268F  +
test [ebp+var_10] 8 +
jz loc_10126B2  +
push [ebp+wParam]  +
push edi  +
push [ebp+hDlg]  +
push [ebp+arg_0]  +
call sub_10123CC  +
mov [ebp+var_3C] eax +
cmp eax ebx +
mov eax 3A1h +
jl loc_1012605  +
mov [ebp+var_38] ax +
mov esi [ebp+var_3C] +
lea ecx [ebp+var_3C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push 0FFFFFFEBh  +
push esi  +
xor ebx ebx +
call ds:GetWindowLongW  +
mov edi eax +
mov eax [ebp+arg_4] +
dec eax  +
dec eax  +
jz loc_101282A  +
sub eax 0Dh +
jz loc_1012821  +
sub eax 3Fh +
jz loc_10127D9  +
sub eax 0C2h +
jz loc_10127C2  +
dec eax  +
jz loc_101276D  +
sub eax 27h +
jnz loc_1012831  +
push 44Dh  +
push esi  +
call ds:GetDlgItem  +
cmp [ebp+dwNewLong] eax +
jnz loc_1012747  +
push 16h  +
call ds:GetSysColor  +
push eax  +
push [ebp+arg_8]  +
call ds:SetBkColor  +
push 16h  +
call ds:GetSysColorBrush  +
jmp loc_1012833  +
mov esi ds:GetSysColor +
push 5  +
call esi  +
push eax  +
push [ebp+arg_8]  +
call ds:SetBkColor  +
push 8  +
call esi  +
push eax  +
push [ebp+arg_8]  +
call ds:SetTextColor  +
push 5  +
jmp loc_101273C  +
mov ebx [ebp+arg_8] +
movzx eax bx +
dec eax  +
jz loc_10127B8  +
dec eax  +
jz loc_10127AE  +
sub eax 45Ah +
jnz loc_1012831  +
push 45Ch  +
push esi  +
call ds:IsDlgButtonChecked  +
push ebx  +
push esi  +
push edi  +
cmp eax 1 +
jnz loc_10127A7  +
call sub_1011EB8  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1012833  +
call sub_1011E1D  +
jmp loc_101279D  +
push ebx  +
push esi  +
push edi  +
call sub_10116BA  +
jmp loc_101279D  +
push ebx  +
push esi  +
push edi  +
call sub_1011C74  +
jmp loc_101279D  +
push [ebp+dwNewLong]  +
push 0FFFFFFEBh  +
push esi  +
call ds:SetWindowLongW  +
push esi  +
push [ebp+dwNewLong]  +
call sub_10120BC  +
jmp loc_1012831  +
mov eax [ebp+dwNewLong] +
test eax eax +
jz loc_1012831  +
mov ecx [eax+8] +
cmp ecx 0FFFFFF65h +
jz loc_101280E  +
cmp ecx 0FFFFFFFDh +
jz loc_10127F7  +
cmp ecx 0FFFFFFFEh +
jz loc_10127FA  +
jmp loc_1012831  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_8] 45Dh +
jnz loc_1012831  +
push ebx  +
push eax  +
push esi  +
push edi  +
call sub_10125C6  +
jmp loc_1012831  +
cmp [ebp+arg_8] 45Dh +
jnz loc_1012831  +
push eax  +
push esi  +
push edi  +
call sub_10124E2  +
jmp loc_1012831  +
push esi  +
push edi  +
call sub_101150F  +
jmp loc_1012831  +
push esi  +
push edi  +
call sub_10114D1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 6Bh  +
push offset aCdefragui_on_5  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_0] +
and dword ptr [eax+0DCh] 0 +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push 1  +
push 7Ah  +
push offset aCdefragui_on_6  +
lea ecx [ebp+var_68] +
call sub_10148A2  +
xor esi esi +
push 3Ch  +
lea eax [ebp+Paint.fErase] +
push esi  +
push eax  +
mov [ebp+Paint.hdc] esi +
call memset  +
xor eax eax +
mov [ebp+Points.x] esi +
lea edi [ebp+Points.y] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_78.left] esi +
lea edi [ebp+var_78.top] +
stos   +
stos   +
add esp 0Ch +
stos   +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
call ds:BeginPaint  +
mov edi eax +
cmp edi esi +
jnz loc_10128FD  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 84h +
mov [ebp+var_62] ax +
jmp loc_10129DF  +
push 44Dh  +
mov eax 84h +
push ebx  +
mov [ebp+var_68] esi +
mov [ebp+var_64] ax +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_101292F  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 87h +
mov [ebp+var_62] ax +
jmp loc_10129D4  +
mov ecx 87h +
mov [ebp+var_64] cx +
lea ecx [ebp+Points] +
push ecx  +
push eax  +
mov [ebp+var_68] esi +
call ds:GetWindowRect  +
test eax eax +
jnz loc_101295C  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 89h +
jmp loc_1012926  +
mov eax 89h +
push 2  +
mov [ebp+var_64] ax +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push esi  +
mov [ebp+var_68] esi +
call ds:MapWindowPoints  +
test eax eax +
jnz loc_101298C  +
call sub_1015B6B  +
mov [ebp+var_68] eax +
mov eax 8Ah +
jmp loc_1012926  +
mov eax 8Ah +
mov [ebp+var_64] ax +
mov eax [ebp+Points.y] +
mov [ebp+var_78.bottom] eax +
mov eax [ebp-80h] +
push 5  +
mov [ebp+var_68] esi +
mov [ebp+var_78.left] esi +
mov [ebp+var_78.top] esi +
mov [ebp+var_78.right] eax +
call ds:GetSysColor  +
push eax  +
lea eax [ebp+var_78] +
push eax  +
push edi  +
call sub_100CFCF  +
mov [ebp+var_68] eax +
cmp eax esi +
mov eax 93h +
jl loc_1012926  +
mov [ebp+var_64] ax +
lea eax [ebp+Paint] +
push eax  +
push ebx  +
call ds:EndPaint  +
mov esi [ebp+var_68] +
lea ecx [ebp+var_68] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 0D3h  +
push offset aCdefragui_oncm  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+hWnd] +
shr eax 10h +
dec eax  +
jz loc_1012A3B  +
mov eax 108h +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
jmp loc_1012B2F  +
push ebx  +
push 322h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
xor ebx ebx +
mov [ebp+hWnd] eax +
cmp eax ebx +
jnz loc_1012A68  +
mov eax 0E3h +
mov [ebp+var_24] 8007000Eh +
mov [ebp+var_1E] ax +
jmp loc_1012B2E  +
push edi  +
mov edi ds:SendMessageW +
push ebx  +
push ebx  +
push 147h  +
mov ecx 0E3h +
push eax  +
mov [ebp+var_24] ebx +
mov [ebp+var_20] cx +
call edi  +
mov esi [ebp+arg_0] +
mov edx [esi+3Ch] +
mov ecx [esi+40h] +
mov [ebp+arg_0] ecx +
cmp edx 3 +
jnz loc_1012AA9  +
push ebx  +
push eax  +
push 150h  +
push [ebp+hWnd]  +
call edi  +
mov eax [eax] +
mov [esi+40h] eax +
jmp loc_1012AEF  +
cmp edx 4 +
jnz loc_1012AEF  +
cmp eax ebx +
jl loc_1012AB7  +
cmp eax 1Fh +
jbe loc_1012AC5  +
mov [ebp+var_24] 80004005h +
mov eax 0F2h +
jmp loc_1012B12  +
mov ecx 0F2h +
mov [ebp+var_24] ebx +
mov [ebp+var_20] cx +
cmp eax 1Fh +
jnz loc_1012AE2  +
mov [esi+40h] ebx +
mov dword ptr [esi+48h] 1 +
jmp loc_1012AEF  +
xor edx edx +
inc edx  +
mov ecx eax +
shl edx cl +
mov [esi+48h] ebx +
mov [esi+40h] edx +
mov eax [ebp+arg_0] +
cmp [esi+40h] eax +
jz loc_1012B2D  +
push 1  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
cmp eax ebx +
jnz loc_1012B18  +
mov [ebp+var_24] 8007000Eh +
mov eax 102h +
mov [ebp+var_1E] ax +
jmp loc_1012B2D  +
push 1  +
mov ecx 102h +
push eax  +
mov [ebp+var_24] ebx +
mov [ebp+var_20] cx +
call ds:EnableWindow  +
pop edi  +
pop ebx  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 118h  +
push offset aCdefragui_on_7  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_8] +
shr eax 10h +
dec eax  +
jz loc_1012B7F  +
mov eax 137h +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
jmp loc_1012C03  +
push edi  +
mov edi ds:GetDlgItem +
push 323h  +
push [ebp+hDlg]  +
call edi  +
xor ecx ecx +
cmp eax ecx +
jnz loc_1012B9D  +
mov eax 127h +
jmp loc_1012BDF  +
mov esi [ebp+arg_0] +
push ebx  +
mov ebx [esi+44h] +
push ecx  +
push ecx  +
push 147h  +
mov edx 127h +
push eax  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] dx +
call ds:SendMessageW  +
imul eax eax +
mov eax ds:dword_1002678[eax] +
cmp eax ebx +
mov [esi+44h] eax +
pop ebx  +
jz loc_1012C02  +
push 1  +
push [ebp+hDlg]  +
call edi  +
test eax eax +
jnz loc_1012BEC  +
mov eax 131h +
mov [ebp+var_24] 8007000Eh +
mov [ebp+var_1E] ax +
jmp loc_1012C02  +
and [ebp+var_24] 0 +
push 1  +
mov ecx 131h +
push eax  +
mov [ebp+var_20] cx +
call ds:EnableWindow  +
pop edi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 1BAh  +
push offset aCdefragui_on_8  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
xor esi esi +
push esi  +
push esi  +
push [ebp+hDlg]  +
call ds:SetWindowLongW  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+hDlg]  +
call ds:EndDialog  +
test eax eax +
jnz loc_1012C69  +
call sub_1015B6B  +
mov [ebp+var_24] eax +
mov eax 1BDh +
mov [ebp+var_1E] ax +
jmp loc_1012C75  +
mov eax 1BDh +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 25Ch  +
push offset aCdefragui_sete  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
mov edi [ebp+hDlg] +
mov esi ds:GetDlgItem +
push 320h  +
push edi  +
call esi  +
xor ebx ebx +
mov [ebp+hWnd] eax +
cmp eax ebx +
jnz loc_1012CDB  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 263h +
mov [ebp+var_2E] ax +
jmp loc_1012DEB  +
push 322h  +
mov eax 263h +
push edi  +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ax +
call esi  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1012D05  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 266h +
jmp loc_1012CD2  +
push 323h  +
mov eax 266h +
push edi  +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ax +
call esi  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_1012D2F  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 269h +
jmp loc_1012CD2  +
push 45Bh  +
mov eax 269h +
push edi  +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ax +
call esi  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_1012D5C  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 26Ch +
jmp loc_1012CD2  +
mov edi [ebp+bEnable] +
mov esi ds:EnableWindow +
push edi  +
push [ebp+hWnd]  +
mov eax 26Ch +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ax +
call esi  +
push edi  +
push [ebp+var_8]  +
call esi  +
push edi  +
push [ebp+var_C]  +
call esi  +
push edi  +
push [ebp+var_10]  +
call esi  +
cmp edi ebx +
jz loc_1012DBA  +
push 1  +
push 3EEh  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
test eax eax +
jnz loc_1012DB3  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 277h +
jmp loc_1012CD2  +
mov eax 277h +
jmp loc_1012DE4  +
push ebx  +
push 3EEh  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
test eax eax +
jnz loc_1012DDF  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
mov eax 27Bh +
jmp loc_1012CD2  +
mov eax 27Bh +
mov [ebp+var_30] ax +
mov [ebp+var_34] ebx +
mov esi [ebp+var_34] +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 1  +
push 2B2h  +
push offset aCdefragui_fill  +
lea ecx [ebp+var_230] +
call sub_10148A2  +
xor eax eax +
push 1FEh  +
mov word ptr [ebp+lParam] ax +
xor esi esi +
lea eax [ebp+lParam+2] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
push 320h  +
push edi  +
call ds:GetDlgItem  +
mov ebx eax +
cmp ebx esi +
jnz loc_1012E7D  +
call sub_1015B6B  +
mov [ebp+var_230] eax +
mov eax 2B9h +
jmp loc_1012F3D  +
push esi  +
push esi  +
push 14Bh  +
mov [ebp+var_230] esi +
mov esi ds:SendMessageW +
mov eax 2B9h +
push ebx  +
mov [ebp+var_22C] ax +
call esi  +
and [ebp+var_208] 0 +
mov edi offset dword_10025F8 +
push 100h  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [edi+4]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1012F2D  +
and [ebp+var_230] 0 +
mov eax 2C0h +
mov [ebp+var_22C] ax +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 14Ah  +
push ebx  +
call esi  +
push edi  +
push eax  +
push 151h  +
push ebx  +
mov [ebp+wParam] eax +
call esi  +
mov eax [edi] +
mov ecx [ebp+arg_0] +
cmp eax [ecx+28h] +
jnz loc_1012F18  +
push 0  +
push [ebp+wParam]  +
push 14Eh  +
push ebx  +
call esi  +
add [ebp+var_208] 0Ch +
add edi 0Ch +
cmp [ebp+var_208] 24h +
jb loc_1012EAB  +
jmp loc_1012F44  +
call sub_1015B6B  +
mov [ebp+var_230] eax +
mov eax 2C0h +
mov [ebp+var_22A] ax +
mov esi [ebp+var_230] +
lea ecx [ebp+var_230] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 32Dh  +
push offset aCdefragui_ge_2  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
mov esi [ebp+arg_8] +
mov dword ptr [ebp+LCData] edi +
test esi esi +
jz loc_1012FDD  +
and [ebp+var_28] 0 +
mov eax 331h +
push 2  +
mov [ebp+var_24] ax +
lea eax [ebp+LCData] +
push eax  +
push 20001009h  +
push [ebp+Locale]  +
mov dword ptr [esi] 0 +
call ds:GetLocaleInfoW  +
test eax eax +
jnz loc_1012FC5  +
mov dword ptr [ebp+LCData] edi +
mov eax dword ptr [ebp+LCData] +
mov [esi] eax +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
mov eax 331h +
mov [ebp+var_28] 80070057h +
mov [ebp+var_22] ax +
jmp loc_1012FCA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 146h  +
push offset aCdefragui_on_9  +
lea ecx [ebp+var_70] +
call sub_10148A2  +
fldz   +
xor eax eax +
fstp  [ebp+pvtime] +
mov word ptr [ebp+var_3C] ax +
lea edi [ebp+var_3C+2] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
mov eax offset dword_10032B8 +
xor ebx ebx +
mov [ebp+var_14] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_20] eax +
lea eax [ebp+SystemTime] +
push eax  +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
call ds:GetLocalTime  +
xor eax eax +
mov [ebp+SystemTime.wMilliseconds] ax +
lea esi [ebp+SystemTime] +
lea edi [ebp+var_3C] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
mov ax [esi+44h] +
mov [ebp+var_34] ax +
xor eax eax +
mov [ebp+var_32] ax +
mov [ebp+var_30] ax +
lea eax [ebp+pvtime] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
call ds:SystemTimeToVariantTime  +
test eax eax +
mov eax 15Bh +
jnz loc_10130AC  +
mov [ebp+var_70] 80004005h +
mov [ebp+var_6A] ax +
jmp loc_101313D  +
push ebx  +
push ebx  +
push esi  +
mov [ebp+var_70] ebx +
mov [ebp+var_6C] ax +
call sub_100AA0B  +
mov [ebp+var_70] eax +
cmp eax ebx +
mov eax 15Fh +
jge loc_10130CD  +
mov [ebp+var_6A] ax +
jmp loc_1013138  +
push dword ptr [esi+48h]  +
fld  [ebp+pvtime] +
mov [ebp+var_6C] ax +
push dword ptr [esi+40h]  +
push dword ptr [esi+4Ch]  +
push ecx  +
push ecx  +
fstp  [esp+90h+var_90] +
push dword ptr [esi+3Ch]  +
push esi  +
call sub_1009F60  +
mov [ebp+var_70] eax +
cmp eax ebx +
mov eax 162h +
jl loc_10130C7  +
push esi  +
mov [ebp+var_6C] ax +
call sub_1009BAA  +
mov [ebp+var_70] eax +
cmp eax ebx +
mov eax 165h +
jl loc_10130C7  +
fld  [ebp+pvtime] +
mov [ebp+var_6C] ax +
mov eax [esi+40h] +
fstp  qword ptr [esi+98h] +
mov [esi+2Ch] eax +
mov eax [esi+3Ch] +
mov [esi+28h] eax +
mov eax [esi+44h] +
mov [esi+30h] eax +
mov eax [esi+48h] +
mov [esi+34h] eax +
mov eax [esi+4Ch] +
mov [esi+38h] eax +
cmp [ebp+var_70] ebx +
jge loc_10131B2  +
push ebx  +
push ebx  +
push offset off_1001480  +
push 1  +
push [ebp+var_70]  +
lea ecx [ebp+var_20] +
call sub_1017538  +
test eax eax +
lea eax [ebp+var_14] +
jnz loc_1013171  +
push [ebp+var_20]  +
push 490h  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 10h +
jmp loc_1013185  +
push 491h  +
push hInstance  +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov edx hInstance +
push 46Fh  +
lea ecx [ebp+var_2C] +
mov esi eax +
call sub_1017AFF  +
test eax eax +
jl loc_10131B2  +
cmp esi ebx +
jl loc_10131B2  +
push 10h  +
push [ebp+var_2C]  +
push [ebp+var_14]  +
push [ebp+hDlg]  +
call sub_1017C69  +
push 1  +
push ebx  +
push [ebp+hDlg]  +
call ds:SetWindowLongW  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+hDlg]  +
call ds:EndDialog  +
mov esi [ebp+var_70] +
lea ecx [ebp+var_20] +
call sub_1016FE9  +
lea ecx [ebp+var_2C] +
call sub_1016FE9  +
lea ecx [ebp+var_14] +
call sub_1016FE9  +
lea ecx [ebp+var_70] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push edi  +
push 1  +
push 1D0h  +
push offset aCdefragui_o_10  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov edi [ebp+dwInitParam] +
push edi  +
push offset sub_10126CB  +
push [ebp+hDlg]  +
xor esi esi +
push 455h  +
push hInstance  +
mov [ebp+var_C] offset dword_10032B8 +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:DialogBoxParamW  +
test eax eax +
jl loc_10132B0  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1013272  +
test dword ptr [eax+1Ch] 8000000h +
jz loc_1013272  +
push offset dword_10025E8  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
cmp [edi+90h] esi +
jz loc_10132B0  +
push 1  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
cmp eax esi +
jnz loc_101329B  +
mov eax 1DDh +
mov [ebp+var_30] 8007000Eh +
mov [ebp+var_2A] ax +
jmp loc_10132B0  +
push 1  +
mov ecx 1DDh +
push eax  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] cx +
call ds:EnableWindow  +
mov esi [ebp+var_30] +
lea ecx [ebp+var_C] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 1  +
push 289h  +
push offset aCdefragui_fi_0  +
lea ecx [ebp+var_94] +
call sub_10148A2  +
xor eax eax +
push 4Eh  +
mov word ptr [ebp+TimeStr] ax +
xor ebx ebx +
lea eax [ebp+TimeStr+2] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
mov [ebp+Time.wYear] ax +
lea edi [ebp+Time.wMonth] +
stos   +
stos   +
add esp 0Ch +
stos   +
push 323h  +
push esi  +
mov [ebp+lParam] offset dword_10032B8 +
mov [ebp+var_6C] ebx +
mov [ebp+var_68] ebx +
stos   +
call ds:GetDlgItem  +
mov esi ds:SendMessageW +
push ebx  +
push ebx  +
push 14Bh  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
mov [ebp+var_58] ebx +
mov edi offset dword_1002678 +
mov [ebp+var_5C] ebx +
mov ax word ptr [ebp+var_58] +
push 28h  +
mov [ebp+Time.wHour] ax +
lea eax [ebp+TimeStr] +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push 2  +
push 400h  +
call ds:GetTimeFormatW  +
test eax eax +
jz loc_1013422  +
mov eax 29Bh +
mov [ebp+var_90] ax +
lea eax [ebp+TimeStr] +
push eax  +
push dword ptr [edi+8]  +
lea eax [ebp+lParam] +
push hInstance  +
mov [ebp+var_94] ebx +
push eax  +
call sub_1017BC7  +
add esp 10h +
mov [ebp+var_94] eax +
cmp eax ebx +
mov eax 29Dh +
jl loc_1013432  +
push [ebp+lParam]  +
mov [ebp+var_90] ax +
push 0FFFFFFFFh  +
push 14Ah  +
push [ebp+hWnd]  +
call esi  +
push edi  +
push eax  +
push 151h  +
push [ebp+hWnd]  +
mov [ebp+wParam] eax +
call esi  +
mov eax [edi] +
mov ecx [ebp+arg_0] +
cmp eax [ecx+30h] +
jnz loc_1013409  +
push ebx  +
push [ebp+wParam]  +
push 14Eh  +
push [ebp+hWnd]  +
call esi  +
add [ebp+var_5C] 0Ch +
inc [ebp+var_58]  +
add edi 0Ch +
cmp [ebp+var_5C] 120h +
jb loc_1013364  +
jmp loc_1013439  +
call sub_1015B6B  +
mov [ebp+var_94] eax +
mov eax 29Bh +
mov [ebp+var_8E] ax +
mov esi [ebp+var_94] +
lea ecx [ebp+lParam] +
call sub_1016FE9  +
lea ecx [ebp+var_94] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F8h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 1  +
push 348h  +
push offset aCdefragui_fi_1  +
lea ecx [ebp+var_DC] +
mov [ebp+var_E0] ebx +
mov [ebp+var_B0] esi +
call sub_10148A2  +
or [ebp+var_A8] 0FFFFFFFFh +
or dword ptr [ebp+LCData] 0FFFFFFFFh +
xor edi edi +
xor eax eax +
push 9Eh  +
mov word ptr [ebp+var_A4] ax +
lea eax [ebp+var_A4+2] +
push edi  +
push eax  +
mov [ebp+var_F4] offset dword_10032B8 +
mov [ebp+var_F0] edi +
mov [ebp+var_EC] edi +
mov [ebp+var_E4] edi +
mov [ebp+var_E8] edi +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push 14Bh  +
push esi  +
mov esi ds:SendMessageW +
call esi  +
cmp [ebp+arg_8] 3 +
jnz loc_1013707  +
push 2  +
lea eax [ebp+LCData] +
push eax  +
push 2000100Ch  +
mov ebx 400h +
push ebx  +
call ds:GetLocaleInfoW  +
test eax eax +
jnz loc_101354F  +
call sub_1015B6B  +
mov [ebp+var_DC] eax +
mov eax 359h +
mov [ebp+var_D6] ax +
jmp loc_1013893  +
mov eax 359h +
mov [ebp+var_D8] ax +
add eax 3 +
cmp dword ptr [ebp+LCData] 7 +
jb loc_1013573  +
mov [ebp+var_DC] 80004005h +
jmp loc_1013543  +
mov [ebp+var_D8] ax +
lea eax [ebp+var_E8] +
push eax  +
push ebx  +
push [ebp+var_E0]  +
mov [ebp+var_DC] edi +
call sub_1012F6D  +
mov [ebp+var_DC] eax +
cmp eax edi +
mov eax 35Fh +
jl loc_1013543  +
mov [ebp+var_D8] ax +
mov eax dword ptr [ebp+LCData] +
mov [ebp+var_AC] edi +
mov [ebp+var_B4] eax +
jmp loc_10135C2  +
mov ebx 400h +
xor eax eax +
push edi  +
mov word ptr [ebp+var_A4] ax +
push 50h  +
lea eax [ebp+var_A4] +
push eax  +
mov eax [ebp+var_B4] +
add eax 7 +
push eax  +
push [ebp+var_E8]  +
push ebx  +
call ds:GetCalendarInfoW  +
test eax eax +
jz loc_10136DE  +
mov eax 368h +
mov [ebp+var_D8] ax +
lea eax [ebp+var_A4] +
push eax  +
push 0FFFFFFFFh  +
push 14Ah  +
push [ebp+var_B0]  +
mov [ebp+var_DC] edi +
call esi  +
mov [ebp+var_F8] eax +
cmp eax 0FFFFFFFFh +
jz loc_10136F3  +
mov ebx [ebp+var_B4] +
imul ebx ebx +
lea ebx dword_1002620[ebx] +
push ebx  +
push eax  +
push 151h  +
push [ebp+var_B0]  +
mov ecx 36Bh +
mov [ebp+var_DC] edi +
mov [ebp+var_D8] cx +
call esi  +
mov ecx [ebx] +
mov eax [ebp+var_E0] +
cmp ecx [eax+2Ch] +
jnz loc_101367A  +
cmp dword ptr [eax+28h] 3 +
jnz loc_101367A  +
mov eax [ebp+var_F8] +
mov [ebp+var_A8] eax +
mov eax [ebp+var_B4] +
inc eax  +
xor edx edx +
push 7  +
pop ecx  +
div  ecx +
inc [ebp+var_AC]  +
mov [ebp+var_B4] edx +
cmp [ebp+var_AC] ecx +
jb loc_10135BD  +
push edi  +
push [ebp+var_A8]  +
push 14Eh  +
push [ebp+var_B0]  +
call esi  +
cmp [ebp+var_A8] 0FFFFFFFFh +
jnz loc_1013893  +
mov eax dword ptr [ebp+LCData] +
mov ecx [ebp+var_E0] +
imul eax eax +
mov eax ds:dword_1002620[eax] +
mov [ecx+40h] eax +
jmp loc_1013893  +
call sub_1015B6B  +
mov [ebp+var_DC] eax +
mov eax 368h +
jmp loc_1013543  +
mov [ebp+var_DC] 80004005h +
mov eax 36Bh +
jmp loc_1013543  +
cmp [ebp+arg_8] 4 +
jnz loc_1013893  +
mov [ebp+var_A8] edi +
mov [ebp+var_AC] 1 +
push [ebp+var_AC]  +
lea eax [ebp+var_F4] +
push offset aD  +
push eax  +
call sub_10172AE  +
add esp 0Ch +
mov [ebp+var_DC] eax +
cmp eax edi +
mov eax 389h +
jl loc_1013543  +
push [ebp+var_F4]  +
mov [ebp+var_D8] ax +
push 0FFFFFFFFh  +
push 14Ah  +
push [ebp+var_B0]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 38Bh +
jz loc_1013567  +
inc [ebp+var_AC]  +
cmp [ebp+var_AC] 1Fh +
mov [ebp+var_DC] edi +
mov [ebp+var_D8] ax +
jbe loc_1013721  +
push 43Dh  +
push hInstance  +
lea eax [ebp+var_F4] +
push eax  +
call sub_1017BC7  +
add esp 0Ch +
mov [ebp+var_DC] eax +
cmp eax edi +
mov eax 38Eh +
jl loc_1013543  +
push [ebp+var_F4]  +
mov [ebp+var_D8] ax +
push 0FFFFFFFFh  +
push 14Ah  +
push [ebp+var_B0]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov eax 390h +
jz loc_1013567  +
cmp dword ptr [ebx+28h] 4 +
mov [ebp+var_DC] edi +
mov [ebp+var_D8] ax +
jnz loc_1013870  +
cmp [ebx+48h] edi +
jz loc_101380F  +
mov [ebp+var_A8] 1Fh +
jmp loc_1013870  +
lea eax [ebp+var_E4] +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_10087A6  +
mov [ebp+var_DC] eax +
cmp eax edi +
mov eax 39Ah +
jl loc_1013543  +
mov [ebp+var_D8] ax +
mov eax [ebp+var_E4] +
dec eax  +
cmp eax 1Eh +
jbe loc_1013858  +
mov [ebp+var_DC] 80004005h +
mov eax 39Bh +
jmp loc_1013543  +
mov ecx 39Bh +
mov [ebp+var_DC] edi +
mov [ebp+var_D8] cx +
mov [ebp+var_A8] eax +
push edi  +
push [ebp+var_A8]  +
push 14Eh  +
push [ebp+var_B0]  +
call esi  +
cmp [ebp+var_A8] edi +
jnz loc_1013893  +
mov dword ptr [ebx+40h] 1 +
mov esi [ebp+var_DC] +
lea ecx [ebp+var_F4] +
call sub_1016FE9  +
lea ecx [ebp+var_DC] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
push 1  +
push 2D5h  +
push offset aCdefragui_fi_2  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
mov esi ds:GetDlgItem +
push 320h  +
push [ebp+hDlg]  +
call esi  +
xor edi edi +
mov [ebp+hWnd] eax +
cmp eax edi +
mov eax 2DBh +
jnz loc_1013913  +
mov [ebp+var_28] 8007000Eh +
mov [ebp+var_22] ax +
jmp loc_10139DE  +
push ebx  +
push 322h  +
push [ebp+hDlg]  +
mov [ebp+var_28] edi +
mov [ebp+var_24] ax +
call esi  +
mov ebx eax +
mov eax 2DEh +
cmp ebx edi +
jnz loc_101393C  +
mov [ebp+var_28] 8007000Eh +
jmp loc_10139C9  +
mov esi ds:SendMessageW +
push edi  +
push edi  +
push 14Bh  +
push ebx  +
mov [ebp+var_28] edi +
mov [ebp+var_24] ax +
call esi  +
push edi  +
push edi  +
push 147h  +
push [ebp+hWnd]  +
call esi  +
mov esi eax +
imul esi esi +
mov eax ds:dword_10025FC[esi] +
sub eax 41Ah +
jz loc_10139D5  +
dec eax  +
jz loc_10139A0  +
dec eax  +
jnz loc_10139D5  +
cmp [ebp+arg_8] edi +
jz loc_1013985  +
push 1  +
push ebx  +
call ds:EnableWindow  +
push ds:dword_10025F8[esi]  +
push ebx  +
push [ebp+arg_0]  +
call sub_101346A  +
mov [ebp+var_28] eax +
cmp eax edi +
mov eax 306h +
jmp loc_10139C7  +
cmp [ebp+arg_8] edi +
jz loc_10139AE  +
push 1  +
push ebx  +
call ds:EnableWindow  +
push ds:dword_10025F8[esi]  +
push ebx  +
push [ebp+arg_0]  +
call sub_101346A  +
mov [ebp+var_28] eax +
cmp eax edi +
mov eax 2F9h +
jge loc_10139CF  +
mov [ebp+var_22] ax +
jmp loc_10139DD  +
mov [ebp+var_24] ax +
jmp loc_10139DD  +
push edi  +
push ebx  +
call ds:EnableWindow  +
pop ebx  +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
push edi  +
push 1  +
push 3Ch  +
push offset aCdefragui_o_11  +
lea ecx [ebp+var_34] +
call sub_10148A2  +
mov esi [ebp+hWnd] +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+hDlg] +
mov edi ds:GetDlgItem +
push 400h  +
push eax  +
mov [esi+0DCh] eax +
call edi  +
test eax eax +
jnz loc_1013A4B  +
push 45h  +
pop eax  +
mov [ebp+var_34] 8007000Eh +
mov [ebp+var_2E] ax +
jmp loc_1013BBC  +
and [ebp+var_34] 0 +
push ebx  +
mov ebx ds:SendMessageW +
push 45h  +
pop ecx  +
push 0  +
push wParam  +
mov [ebp+var_30] cx +
push 30h  +
push eax  +
call ebx  +
push 3FFh  +
push [ebp+hDlg]  +
call edi  +
test eax eax +
jnz loc_1013A87  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
push 49h  +
jmp loc_1013BA3  +
and [ebp+var_34] 0 +
push 49h  +
pop ecx  +
push 0  +
push dword ptr [esi+0D8h]  +
mov [ebp+var_30] cx +
push 170h  +
push eax  +
call ebx  +
push 44Dh  +
push [ebp+hDlg]  +
call edi  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call ds:GetWindowRect  +
test eax eax +
jnz loc_1013ACD  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
push 4Eh  +
jmp loc_1013BA3  +
push 4Eh  +
pop eax  +
push 2  +
mov [ebp+var_30] ax +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push 1  +
push eax  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+var_34] ebx +
call ds:SetWindowPos  +
test eax eax +
jnz loc_1013B03  +
call sub_1015B6B  +
mov [ebp+var_34] eax +
push 4Fh  +
jmp loc_1013BA3  +
push 4Fh  +
pop eax  +
mov [ebp+var_30] ax +
mov eax [esi+4Ch] +
push eax  +
push [ebp+hDlg]  +
mov [ebp+var_34] ebx +
push esi  +
mov [esi+38h] eax +
call sub_1012C8C  +
push 53h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1013BA4  +
push [ebp+hDlg]  +
mov [ebp+var_30] ax +
push esi  +
call sub_1012E04  +
push 55h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1013BA4  +
push dword ptr [esi+38h]  +
mov [ebp+var_30] ax +
push [ebp+hDlg]  +
push esi  +
call sub_10138C7  +
push 56h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1013BA4  +
push [ebp+hDlg]  +
mov [ebp+var_30] ax +
push esi  +
call sub_10132D0  +
push 57h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1013BA4  +
push esi  +
mov [ebp+var_30] ax +
call sub_100D5F3  +
push 59h  +
mov [ebp+var_34] eax +
cmp eax ebx +
pop eax  +
jl loc_1013BA4  +
mov [ebp+var_30] ax +
cmp [esi+8Ch] ebx +
jnz loc_1013BBB  +
push 1  +
push [ebp+hDlg]  +
call edi  +
push 5Eh  +
cmp eax ebx +
jnz loc_1013BAA  +
mov [ebp+var_34] 8007000Eh +
pop eax  +
mov [ebp+var_2E] ax +
jmp loc_1013BBB  +
pop ecx  +
push 1  +
push eax  +
mov [ebp+var_34] ebx +
mov [ebp+var_30] cx +
call ds:EnableWindow  +
pop ebx  +
mov esi [ebp+var_34] +
lea ecx [ebp+var_34] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 0A6h  +
push offset aCdefragui_o_12  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov eax [ebp+arg_8] +
shr eax 10h +
dec eax  +
jz loc_1013C0D  +
mov eax 0C4h +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
jmp loc_1013CB4  +
push edi  +
mov edi ds:GetDlgItem +
push 320h  +
push [ebp+hDlg]  +
call edi  +
test eax eax +
jnz loc_1013C30  +
mov [ebp+var_24] 8007000Eh +
mov eax 0B5h +
jmp loc_1013CA9  +
and [ebp+var_24] 0 +
push 0  +
push 0  +
push 147h  +
mov ecx 0B5h +
push eax  +
mov [ebp+var_20] cx +
call ds:SendMessageW  +
imul eax eax +
mov esi [ebp+arg_0] +
mov ecx [esi+3Ch] +
mov eax ds:dword_10025F8[eax] +
mov [esi+3Ch] eax +
cmp eax ecx +
jz loc_1013C92  +
push 1  +
push [ebp+hDlg]  +
call edi  +
test eax eax +
jnz loc_1013C7C  +
mov [ebp+var_24] 8007000Eh +
mov eax 0BDh +
jmp loc_1013CA9  +
and [ebp+var_24] 0 +
push 1  +
mov ecx 0BDh +
push eax  +
mov [ebp+var_20] cx +
call ds:EnableWindow  +
push 1  +
push [ebp+hDlg]  +
push esi  +
call sub_10138C7  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 0C1h +
jge loc_1013CAF  +
mov [ebp+var_1E] ax +
jmp loc_1013CB3  +
mov [ebp+var_20] ax +
pop edi  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 196h  +
push offset aCdefragui_o_13  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov ebx [ebp+hDlg] +
push 3EEh  +
push ebx  +
call ds:IsDlgButtonChecked  +
mov edi [ebp+arg_0] +
mov esi eax +
dec esi  +
neg esi  +
sbb esi esi +
inc esi  +
push esi  +
push ebx  +
push edi  +
call sub_1012C8C  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 1A3h +
jge loc_1013D1E  +
mov [ebp+var_1E] ax +
jmp loc_1013D6E  +
push esi  +
push ebx  +
push edi  +
mov [ebp+var_20] ax +
call sub_10138C7  +
mov [ebp+var_24] eax +
test eax eax +
mov eax 1A5h +
jl loc_1013D18  +
push 1  +
push ebx  +
mov [ebp+var_20] ax +
mov [edi+4Ch] esi +
call ds:GetDlgItem  +
test eax eax +
jnz loc_1013D58  +
mov [ebp+var_24] 8007000Eh +
mov eax 1ACh +
jmp loc_1013D18  +
and [ebp+var_24] 0 +
push 1  +
mov ecx 1ACh +
push eax  +
mov [ebp+var_20] cx +
call ds:EnableWindow  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push 0FFFFFFEBh  +
push esi  +
call ds:GetWindowLongW  +
mov ecx [ebp+arg_4] +
dec ecx  +
dec ecx  +
jz loc_1013EC4  +
sub ecx 0Dh +
jz loc_1013EBB  +
sub ecx 44h +
jz loc_1013EA8  +
sub ecx 0BDh +
jz loc_1013E91  +
dec ecx  +
jz loc_1013E24  +
sub ecx 27h +
jnz loc_1013ECB  +
push 44Dh  +
push esi  +
call ds:GetDlgItem  +
cmp [ebp+dwNewLong] eax +
jnz loc_1013DFE  +
push 16h  +
call ds:GetSysColor  +
push eax  +
push [ebp+arg_8]  +
call ds:SetBkColor  +
push 16h  +
call ds:GetSysColorBrush  +
jmp loc_1013ECD  +
mov esi ds:GetSysColor +
push 5  +
call esi  +
push eax  +
push [ebp+arg_8]  +
call ds:SetBkColor  +
push 8  +
call esi  +
push eax  +
push [ebp+arg_8]  +
call ds:SetTextColor  +
push 5  +
jmp loc_1013DF3  +
mov edx [ebp+arg_8] +
movzx ecx dx +
dec ecx  +
jz loc_1013E87  +
dec ecx  +
jz loc_1013E7D  +
sub ecx 31Eh +
jz loc_1013E73  +
dec ecx  +
dec ecx  +
jz loc_1013E69  +
dec ecx  +
jz loc_1013E5F  +
sub ecx 0CBh +
jz loc_1013E56  +
sub ecx 6Dh +
jnz loc_1013ECB  +
push edx  +
push esi  +
push eax  +
call sub_10131FD  +
jmp loc_1013EB4  +
push esi  +
push eax  +
call sub_1013CCB  +
jmp loc_1013EB4  +
push edx  +
push esi  +
push eax  +
call sub_1012B46  +
jmp loc_1013EB4  +
push edx  +
push esi  +
push eax  +
call sub_1012A02  +
jmp loc_1013EB4  +
push edx  +
push esi  +
push eax  +
call sub_1013BD4  +
jmp loc_1013EB4  +
push edx  +
push esi  +
push eax  +
call sub_1012C1A  +
jmp loc_1013EB4  +
push edx  +
push esi  +
push eax  +
call sub_1012FF4  +
jmp loc_1013EB4  +
push [ebp+dwNewLong]  +
push 0FFFFFFEBh  +
push esi  +
call ds:SetWindowLongW  +
push esi  +
push [ebp+dwNewLong]  +
call sub_10139F6  +
jmp loc_1013ECB  +
push 0  +
push [ebp+dwNewLong]  +
push esi  +
push eax  +
call sub_100E7AF  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1013ECD  +
push esi  +
push eax  +
call sub_101287A  +
jmp loc_1013ECB  +
push esi  +
push eax  +
call sub_101283F  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1013F0B  +
test eax eax +
jnz loc_1013F10  +
mov ecx [esi] +
test ecx ecx +
jz loc_1013F08  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1013EFC  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_101B400 +
push offset dword_101B3F0  +
push dword_101B3FC  +
mov dword_101B3F0 eax +
push offset unk_101B3E0  +
push offset unk_101B3E4  +
push offset unk_101B3DC  +
call ds:__getmainargs  +
add esp 14h +
mov dword_101B3EC eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset Destination +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_1013FB1  +
cmp eax esi +
jnz loc_1013FA4  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_1013FB4  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1013F8B  +
xor esi esi +
inc esi  +
mov eax dword_101B798 +
cmp eax esi +
jnz loc_1013FC7  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1013FF6  +
mov eax dword_101B798 +
test eax eax +
jnz loc_1013FF0  +
mov dword_101B798 esi +
push offset dword_1001380  +
push offset dword_1001374  +
call sub_1013EEF  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013FF6  +
jmp loc_101411E  +
mov dword_101B3F8 esi +
mov eax dword_101B798 +
cmp eax esi +
jnz loc_101401A  +
push offset dword_1001370  +
push offset dword_1001368  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101B798 2 +
test ebx ebx +
jnz loc_1014026  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_101B7A0 0 +
jz loc_101404A  +
push offset dword_101B7A0  +
call sub_1014349  +
pop ecx  +
test eax eax +
jz loc_101404A  +
push 0  +
push 2  +
push 0  +
call dword_101B7A0  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp+var_20] esi +
mov al [esi] +
cmp al 20h +
ja $LN61  +
test al al +
jz loc_1014064  +
cmp [ebp+var_1C] 0 +
jnz $LN61  +
mov al [esi] +
test al al +
jz loc_1014074  +
cmp al 20h +
ja loc_1014074  +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1014064  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1014080  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_1014083  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push 1000000h  +
call _WinMain@16  +
mov dword_101B3F4 eax +
cmp dword_101B3E8 0 +
jnz $LN62  +
push eax  +
call ds:exit  +
cmp al 22h +
jnz loc_10140B5  +
xor ecx ecx +
cmp [ebp+var_1C] ecx +
setz cl  +
mov [ebp+var_1C] ecx +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jz loc_10140C8  +
inc esi  +
mov [ebp+var_20] esi +
inc esi  +
jmp loc_1014051  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_101B3F4 eax +
cmp dword_101B3E8 0 +
jnz $LN62  +
push eax  +
call ds:_exit  +
cmp dword_101B3F8 0 +
jnz loc_1014109  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101B3F4 +
jmp loc_101412A  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1014147  +
xor eax eax +
jmp loc_1014194  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1014143  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1014181  +
cmp ecx 20Bh +
jnz loc_1014143  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1014143  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101418F  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1014143  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_101B3E8 eax +
call sub_10144E2  +
push eax  +
call ds:__set_app_type  +
or dword_101B790 0FFFFFFFFh +
or dword_101B794 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_101B408 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101B404 +
mov [eax] ecx +
call sub_1014474  +
cmp dword_101B2C8 0 +
jnz loc_10141ED  +
push offset sub_1014474  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101445C  +
xor eax eax +
retn   +
***
call sub_1014521  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_101B2B8 +
jnz loc_1014220  +
retn 0  +
jmp loc_10145B7  +
***
jmp ds:_purecall  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1014296  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1014296  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1014290  +
cmp eax 19930521h +
jz loc_1014290  +
cmp eax 19930522h +
jz loc_1014290  +
cmp eax 1994000h +
jnz loc_1014296  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1014258+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10142D6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10142D2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101433D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1014335  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101433F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1014325  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10142C0  +
pop ecx  +
test eax eax +
jz loc_10143A6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1014300  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10143A6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10143AF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1014215  +
push offset dword_101B2B8  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10144D5  +
cmp ecx 0FFFFFFFFh +
jz loc_10144D5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10144CE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10144CE  +
cmp edx 10000000h +
jnb loc_10144CE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10144CE  +
jmp loc_10144C9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1014517  +
push eax  +
call sub_101447C  +
test eax eax +
jz loc_1014517  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101450C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1014517  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101B2B8 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1014553  +
test eax ebx +
jz loc_1014553  +
not eax  +
mov dword_101B2BC eax +
jmp loc_10145AE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101459A  +
test dword_101B2B8 ebx +
jnz loc_101459F  +
mov esi 0BB40E64Fh +
mov dword_101B2B8 esi +
not esi  +
mov dword_101B2BC esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_101B510 eax +
mov dword_101B50C ecx +
mov dword_101B508 edx +
mov dword_101B504 ebx +
mov dword_101B500 esi +
mov dword_101B4FC edi +
mov word_101B528 ss +
mov word_101B51C cs +
mov word_101B4F8 ds +
mov word_101B4F4 es +
mov word_101B4F0 fs +
mov word_101B4EC gs +
pushf   +
pop dword_101B520  +
mov eax [ebp+0] +
mov dword_101B514 eax +
mov eax [ebp+4] +
mov dword_101B518 eax +
lea eax [ebp+8] +
mov dword_101B524 eax +
mov eax [ebp-320h] +
mov dword_101B460 10001h +
mov eax dword_101B518 +
mov dword_101B41C eax +
mov dword_101B410 0C0000409h +
mov dword_101B414 1 +
mov eax dword_101B2B8 +
mov [ebp-328h] eax +
mov eax dword_101B2BC +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_10146D3  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10146C7  +
sub eax edx +
inc eax  +
jmp loc_10146D6  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_10146E1  +
mov ecx offset aNull_0 +
push 0  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 20h +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_1014723  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1014717  +
sub eax edx +
inc eax  +
jmp loc_1014726  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_1014731  +
mov ecx offset aNull_0 +
push 0  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 28h +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
test esi esi +
jz loc_1014779  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_101476D  +
sub eax edx +
inc eax  +
jmp loc_101477C  +
push 5  +
pop eax  +
mov ecx esi +
test esi esi +
jnz loc_1014787  +
mov ecx offset aNull_0 +
push 0  +
push 4  +
lea edx [ebp+arg_18] +
push edx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 30h +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
test esi esi +
jz loc_10147DA  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10147CB  +
sub eax edx +
inc eax  +
mov [ebp+arg_18] eax +
jmp loc_10147E1  +
mov [ebp+arg_18] 5 +
mov ebx offset aNull_0 +
test esi esi +
jnz loc_10147EC  +
mov esi ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_1014804  +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10147F8  +
sub eax edx +
inc eax  +
jmp loc_1014807  +
push 5  +
pop eax  +
mov ecx edi +
test edi edi +
jnz loc_101480F  +
mov ecx ebx +
push 0  +
push 4  +
lea edx [ebp+arg_20] +
push edx  +
push 4  +
lea edx [ebp+arg_1C] +
push edx  +
push [ebp+arg_18]  +
lea edx [ebp+arg_14] +
push esi  +
push 4  +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 40h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1014880  +
cmp [ebp+arg_4] eax +
jz loc_101487C  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101487C  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101485F  +
test esi esi +
jnz loc_1014888  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1014896  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi ecx +
mov [esi+4] ax +
xor eax eax +
mov [esi+6] ax +
mov ax [ebp+arg_8] +
xor ebx ebx +
push edi  +
mov [esi+0Ch] ax +
mov eax [ebp+arg_0] +
lea edi [esi+18h] +
push edi  +
mov [esi] ebx +
mov [esi+8] ebx +
mov [esi+10h] eax +
mov [esi+14h] ebx +
mov [edi] ebx +
mov [esi+1Ch] ebx +
mov [esi+20h] ebx +
call SxTracerGetThreadContextRetail  +
cmp eax ebx +
mov edx offset off_101A000 +
jl loc_1014920  +
mov edi [edi] +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov [edi+14h] esi +
mov ecx off_101A000 +
mov edi offset dword_1002DC8 +
movzx eax word ptr [esi+0Ch] +
cmp ax bx +
jnz loc_1014951  +
cmp ecx edx +
jz loc_101498A  +
test dword ptr [ecx+1Ch] 8000000h +
jz loc_101498A  +
push dword ptr [esi+10h]  +
push edi  +
push 0Bh  +
jmp loc_101497F  +
mov ecx off_101A000 +
cmp ecx edx +
jz loc_10148FD  +
test byte ptr [ecx+1Ch] 1 +
jz loc_10148FD  +
push eax  +
mov edi offset dword_1002DC8 +
push edi  +
push 0Ah  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100CD82  +
mov ecx off_101A000 +
mov edx offset off_101A000 +
jmp loc_1014902  +
cmp ax 1 +
jnz loc_101496C  +
cmp ecx edx +
jz loc_101498A  +
test dword ptr [ecx+1Ch] 20000000h +
jz loc_101498A  +
push dword ptr [esi+10h]  +
push edi  +
push 0Ch  +
jmp loc_101497F  +
cmp ecx edx +
jz loc_101498A  +
test dword ptr [ecx+1Ch] 20000h +
jz loc_101498A  +
push dword ptr [esi+10h]  +
push edi  +
push 0Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10146B5  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax off_101A000 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+14h] +
mov ebx offset dword_1002DC8 +
test esi esi +
jz loc_10149DD  +
cmp eax offset off_101A000 +
jz loc_10149D8  +
test byte ptr [eax+1Ch] 1 +
jz loc_10149D8  +
push dword ptr [esi]  +
movzx ecx word ptr [esi+4] +
push ecx  +
push dword ptr [esi+10h]  +
push ebx  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101475B  +
mov eax off_101A000 +
mov esi [esi+14h] +
jmp loc_10149AA  +
cmp eax offset off_101A000 +
jz loc_1014A00  +
test byte ptr [eax+1Ch] 1 +
jz loc_1014A00  +
movzx ecx word ptr [edi+6] +
push ecx  +
push dword ptr [edi+10h]  +
push ebx  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1014705  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1014A1F  +
cmp edx 7FFFFFFFh +
jbe loc_1014A24  +
mov eax 80070057h +
test eax eax +
jl loc_1014A3A  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_101484B  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1014A59  +
cmp ecx 7FFFFFFFh +
jbe loc_1014A5E  +
mov eax 80070057h +
test eax eax +
jl loc_1014A9A  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1014A8A  +
cmp eax esi +
ja loc_1014A8A  +
jnz loc_1014A95  +
jmp loc_1014A8F  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:LocalFree +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor edi edi +
cmp eax edi +
jge loc_1014B7D  +
push eax  +
call SxTracerShouldTrackFailure  +
mov [ebp+var_4] eax +
mov ecx offset aFailedTrack +
cmp eax edi +
jnz loc_1014AD7  +
mov ecx offset aFailed +
cmp [esi+8] edi +
jnz loc_1014B13  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014B13  +
test dword ptr [eax+1Ch] 2000000h +
jz loc_1014B13  +
push dword ptr [esi]  +
movzx edx word ptr [esi+6] +
push edx  +
push ecx  +
movzx ecx word ptr [esi+4] +
push ecx  +
push dword ptr [esi+10h]  +
push offset dword_1002DC8  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10147B7  +
cmp [esi+1Ch] edi +
jz loc_1014B4F  +
mov eax [esi+18h] +
mov ecx [esi] +
cmp ecx [eax+10h] +
jz loc_1014B4F  +
mov eax [eax+0Ch] +
cmp eax edi +
jz loc_1014B32  +
push eax  +
call ebx  +
mov eax [esi+18h] +
mov [eax+0Ch] edi +
mov eax [esi+18h] +
mov ecx [esi+20h] +
mov [eax+4] ecx +
mov ecx [esi+1Ch] +
mov eax [esi+18h] +
mov [eax+0Ch] ecx +
mov eax [esi+18h] +
mov ecx [esi] +
mov [esi+1Ch] edi +
mov [eax+10h] ecx +
mov eax [esi+18h] +
cmp eax edi +
jz loc_1014B61  +
mov ecx [esi] +
cmp ecx [eax+8] +
jz loc_1014BF8  +
cmp [esi+8] edi +
jnz loc_1014B6D  +
mov ecx esi +
call sub_1014998  +
cmp [ebp+var_4] edi +
jz loc_1014BF8  +
call SxTracerDebuggerBreak  +
jmp loc_1014BF8  +
movzx eax word ptr [esi+0Ch] +
cmp ax di +
jnz loc_1014BA7  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014BF8  +
test dword ptr [eax+1Ch] 8000000h +
jz loc_1014BF8  +
push dword ptr [esi+10h]  +
push offset dword_1002DC8  +
push 10h  +
jmp loc_1014BED  +
cmp ax 1 +
jnz loc_1014BCE  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014BF8  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1014BF8  +
push dword ptr [esi+10h]  +
push offset dword_1002DC8  +
push 11h  +
jmp loc_1014BED  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014BF8  +
test dword ptr [eax+1Ch] 20000h +
jz loc_1014BF8  +
push dword ptr [esi+10h]  +
push offset dword_1002DC8  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10146B5  +
mov eax [esi+18h] +
cmp eax edi +
jz loc_1014C2B  +
mov ecx [esi+14h] +
mov [eax+14h] ecx +
mov eax [esi+18h] +
cmp [esi+14h] edi +
jnz loc_1014C26  +
mov [eax+8] edi +
mov eax [esi+18h] +
push dword ptr [eax+0Ch]  +
call ebx  +
mov eax [esi+18h] +
mov [eax+0Ch] edi +
mov eax [esi+18h] +
mov [eax+10h] edi +
jmp loc_1014C2B  +
mov ecx [esi] +
mov [eax+8] ecx +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_1014C38  +
push eax  +
call ebx  +
mov [esi+1Ch] edi +
mov [esi+14h] edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_1014C76  +
cmp word ptr [edx] 0 +
jnz loc_1014C5B  +
push 0Eh  +
jmp loc_1014C78  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1014C61  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1014C79  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1014C8A  +
cmp word ptr [edx] 0 +
jnz loc_1014C8F  +
mov edx offset aNull_1 +
jmp loc_1014C8F  +
mov edx offset aNull_2 +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014CE1  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1014CE1  +
push offset dword_1002E14  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push ebx  +
push esi  +
push 1  +
push 23h  +
push offset aSxallocateeven  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1014D2C  +
and dword ptr [ebx] 0 +
and [ebp+var_24] 0 +
push edi  +
push 2Ah  +
pop eax  +
mov edi 488h +
push edi  +
mov [ebp+var_20] ax +
call ds:CoTaskMemAlloc  +
mov esi eax +
push 2Eh  +
pop eax  +
test esi esi +
jnz loc_1014D3C  +
mov [ebp+var_24] 8007000Eh +
mov [ebp+var_1E] ax +
jmp loc_1014D69  +
push 2Ah  +
pop eax  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1014D6A  +
and [ebp+var_24] 0 +
push edi  +
push 0  +
push esi  +
mov [ebp+var_20] ax +
call memset  +
mov [esi] edi +
mov dword ptr [esi+2Ch] 20000h +
mov dword ptr [esi+70h] 78h +
mov dword ptr [esi+6Ch] 280h +
add esp 0Ch +
mov [ebx] esi +
pop edi  +
push 0  +
call ds:CoTaskMemFree  +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea esi [ebp+arg_8] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014DCF  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1014DCF  +
push offset dword_1002E14  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push 1  +
push 27Ch  +
push offset aSxenabletracec  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
push [ebp+arg_4]  +
lea eax [ebp+var_14] +
push [ebp+arg_0]  +
push eax  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push 1  +
call ds:EnableTrace  +
test eax eax +
jle loc_1014E09  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov [ebp+var_38] esi +
mov eax 27Eh +
test esi esi +
jge loc_1014E1D  +
mov [ebp+var_32] ax +
jmp loc_1014E21  +
mov [ebp+var_34] ax +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1014215  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014E6F  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1014E6F  +
push offset dword_1002E14  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push esi  +
push edi  +
push 1  +
push 28Ch  +
push offset aSxstoptracing  +
lea ecx [ebp+var_28] +
call sub_10148A2  +
xor edi edi +
mov [ebp+pv] edi +
mov eax 290h +
cmp [ebp+arg_0] edi +
jnz loc_1014EA1  +
mov [ebp+var_28] 80070057h +
mov [ebp+var_22] ax +
jmp loc_1014EFD  +
mov [ebp+var_24] ax +
lea eax [ebp+pv] +
push eax  +
mov [ebp+var_28] edi +
call sub_1014CB2  +
mov [ebp+var_28] eax +
cmp eax edi +
mov eax 292h +
jl loc_1014E9B  +
mov esi ds:ControlTraceW +
push 3  +
push [ebp+pv]  +
mov [ebp+var_24] ax +
push [ebp+arg_0]  +
push edi  +
push edi  +
call esi  +
push 1  +
push [ebp+pv]  +
push [ebp+arg_0]  +
push edi  +
push edi  +
call esi  +
cmp eax edi +
jle loc_1014EED  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_28] eax +
cmp eax edi +
mov eax 296h +
jl loc_1014E9B  +
mov [ebp+var_24] ax +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov esi [ebp+var_28] +
lea ecx [ebp+var_28] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4F8h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_4BC] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_4F8] esi +
mov [ebp+var_4B4] eax +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1014F7B  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1014F7B  +
push offset dword_1002E14  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push 1  +
push 8Bh  +
push offset aSxget0xlogfile  +
lea ecx [ebp+var_4E8] +
call sub_10148A2  +
or [ebp+var_4C4] 0FFFFFFFFh +
or [ebp+hFindFile] 0FFFFFFFFh +
xor edi edi +
mov [ebp+var_4B8] edi +
mov [ebp+var_4C0] edi +
mov [ebp+var_4AC] edi +
mov [ebp+var_4A8] edi +
mov [ebp+lpFileName] offset dword_10032B8 +
mov [ebp+var_4F0] edi +
mov [ebp+var_4EC] edi +
mov eax 9Bh +
cmp ebx edi +
jnz loc_1014FEF  +
mov [ebp+var_4E8] 80070057h +
mov [ebp+var_4E2] ax +
jmp loc_10151FF  +
mov [ebp+var_4E4] ax +
mov eax 9Ch +
cmp esi edi +
jz loc_1014FD9  +
mov ecx [ebp+var_4BC] +
mov [ebp+var_4E4] ax +
inc eax  +
cmp ecx edi +
jz loc_1014FD9  +
mov [ebp+var_4E4] ax +
mov eax [ebp+var_4B4] +
cmp eax edi +
jnz loc_1015029  +
mov eax 9Eh +
jmp loc_1014FD9  +
mov [esi] edi +
mov esi 250h +
mov [ecx] edi +
push esi  +
mov [eax] edi +
lea eax [ebp+var_254] +
mov edx 9Eh +
push edi  +
push eax  +
mov [ebp+var_4E8] edi +
mov [ebp+var_4E4] dx +
call memset  +
push esi  +
lea eax [ebp+FindFileData] +
push edi  +
push eax  +
call memset  +
mov esi offset aEtl +
push esi  +
push ebx  +
lea eax [ebp+lpFileName] +
push offset aS_0_S  +
push eax  +
call sub_10172AE  +
add esp 28h +
mov [ebp+var_4E8] eax +
cmp eax edi +
mov eax 0AAh +
jl loc_1014FE3  +
mov [ebp+var_4E4] ax +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpFileName]  +
call ds:FindFirstFileW  +
mov [ebp+var_4C4] eax +
cmp eax 0FFFFFFFFh +
jz loc_10150C5  +
mov [ebp+var_4A8] edi +
mov [ebp+var_4C0] 1 +
push esi  +
push ebx  +
lea eax [ebp+lpFileName] +
push offset aS_0_?_S  +
push eax  +
call sub_10172AE  +
add esp 10h +
mov [ebp+var_4E8] eax +
cmp eax edi +
mov eax 0B5h +
jl loc_1014FE3  +
mov [ebp+var_4E4] ax +
lea eax [ebp+var_254] +
push eax  +
push [ebp+lpFileName]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_10151D5  +
lea eax [ebp+var_228] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1015120  +
sub eax edx +
sar eax 1 +
push 7  +
lea esi [ebp+eax*2+var_232] +
pop ebx  +
movzx eax word ptr [esi] +
sub eax 30h +
cmp eax [ebp+var_4A8] +
jbe loc_101514C  +
mov [ebp+var_4A8] eax +
inc [ebp+var_4AC]  +
cmp [ebp+var_4A8] ebx +
ja loc_10151C9  +
cmp [ebp+var_4AC] ebx +
ja loc_10151C9  +
lea eax [ebp+var_254] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101519E  +
call ds:GetLastError  +
mov [ebp+var_4B8] eax +
cmp eax 12h +
jnz loc_10151AB  +
mov ecx 0D8h +
mov [ebp+var_4E8] edi +
mov [ebp+var_4E4] cx +
jmp loc_10151A4  +
mov eax [ebp+var_4B8] +
cmp eax 12h +
jnz loc_1015138  +
jmp loc_10151D5  +
cmp eax edi +
jle loc_10151B9  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4E8] eax +
mov eax 0D8h +
jmp loc_1014FE3  +
mov [ebp+var_4AC] ebx +
mov [ebp+var_4A8] ebx +
mov eax [ebp+var_4C0] +
mov ecx [ebp+var_4F8] +
mov [ecx] eax +
mov eax [ebp+var_4BC] +
mov ecx [ebp+var_4AC] +
mov [eax] ecx +
mov eax [ebp+var_4B4] +
mov ecx [ebp+var_4A8] +
mov [eax] ecx +
push [ebp+var_4C4]  +
mov esi ds:FindClose +
call esi  +
push [ebp+hFindFile]  +
call esi  +
mov esi [ebp+var_4E8] +
lea ecx [ebp+lpFileName] +
call sub_1016FE9  +
lea ecx [ebp+var_4E8] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1015278  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1015278  +
push offset dword_1002E14  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push ebx  +
push esi  +
push edi  +
xor esi esi +
inc esi  +
push esi  +
push 0F8h  +
push offset aSxcompresslogf  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
xor edi edi +
push edi  +
push 80h  +
push 3  +
push edi  +
push 3  +
push 0C0000000h  +
push [ebp+lpFileName]  +
mov [ebp+InBuffer] esi +
mov [ebp+BytesReturned] edi +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_10152BD  +
cmp esi edi +
jnz loc_10152D0  +
call sub_1015B6B  +
mov [ebp+var_2C] eax +
mov eax 106h +
mov [ebp+var_26] ax +
jmp loc_1015314  +
push edi  +
mov eax 106h +
mov [ebp+var_28] ax +
lea eax [ebp+BytesReturned] +
push eax  +
push edi  +
push edi  +
push 2  +
lea eax [ebp+InBuffer] +
push eax  +
push 9C040h  +
push esi  +
mov [ebp+var_2C] edi +
call ds:DeviceIoControl  +
test eax eax +
jnz loc_1015308  +
call sub_1015B6B  +
mov [ebp+var_2C] eax +
mov eax 10Fh +
jmp loc_10152CA  +
mov eax 10Fh +
mov [ebp+var_2C] edi +
mov [ebp+var_28] ax +
mov ebx [ebp+var_2C] +
cmp esi 0FFFFFFFFh +
jz loc_1015327  +
cmp esi edi +
jz loc_1015327  +
push esi  +
call ds:CloseHandle  +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_101536C  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_101536C  +
push offset dword_1002E14  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push esi  +
push edi  +
push 1  +
push 15Ah  +
push offset aSxmergeextralo  +
lea ecx [ebp+var_48] +
call sub_10148A2  +
xor edi edi +
mov eax offset dword_10032B8 +
mov [ebp+lpExistingFileName] eax +
mov [ebp+lpNewFileName] eax +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] edi +
mov eax 165h +
cmp [ebp+arg_0] edi +
jnz loc_10153BE  +
mov [ebp+var_48] 80070057h +
mov [ebp+var_42] ax +
jmp loc_101556B  +
mov esi [ebp+arg_4] +
mov [ebp+var_44] ax +
mov eax 166h +
cmp esi 7FFFFFFFh +
jnb loc_10153AE  +
mov [ebp+var_44] ax +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_48] edi +
call sub_1014F1E  +
mov [ebp+var_48] eax +
cmp eax edi +
mov eax 16Dh +
jl loc_10153B5  +
mov ecx [ebp+var_8] +
mov [ebp+var_44] ax +
cmp ecx edi +
jnz loc_1015413  +
add eax 5 +
mov [ebp+var_48] edi +
mov [ebp+var_44] ax +
jmp loc_101556B  +
lea eax [esi-1] +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
push ebx  +
neg eax  +
lea ebx [esi-1] +
cmp ebx eax +
mov [ebp+var_C] eax +
jl loc_101556A  +
mov [ebp+arg_4] esi +
sub [ebp+arg_4] ecx +
mov ecx ebx +
neg ecx  +
mov [ebp+var_8] ecx +
mov esi offset aEtl +
mov edi offset aS_D_S +
jmp loc_1015449  +
mov ecx [ebp+var_8] +
cmp ebx [ebp+arg_4] +
jl loc_10154A6  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
lea eax [ebp+lpExistingFileName] +
push edi  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_48] eax +
test eax eax +
mov eax 181h +
jl loc_1015566  +
push [ebp+lpExistingFileName]  +
mov [ebp+var_44] ax +
call ds:DeleteFileW  +
test eax eax +
jnz loc_1015529  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1015538  +
mov eax 185h +
and [ebp+var_48] 0 +
mov [ebp+var_44] ax +
jmp loc_1015529  +
test ebx ebx +
jl loc_10154B0  +
mov ecx ebx +
mov eax edi +
jmp loc_10154B5  +
mov eax offset aS_0_D_S +
push esi  +
push ecx  +
push [ebp+arg_0]  +
push eax  +
lea eax [ebp+lpExistingFileName] +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_48] eax +
test eax eax +
mov eax 191h +
jl loc_1015566  +
push esi  +
push [ebp+var_4]  +
mov [ebp+var_44] ax +
push [ebp+arg_0]  +
lea eax [ebp+lpNewFileName] +
push edi  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_48] eax +
test eax eax +
mov eax 196h +
jl loc_1015566  +
push 1  +
push [ebp+lpNewFileName]  +
mov [ebp+var_44] ax +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_1015526  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_1015550  +
mov eax 19Bh +
jmp loc_1015499  +
dec [ebp+var_4]  +
dec ebx  +
inc [ebp+var_8]  +
cmp ebx [ebp+var_C] +
jge loc_1015446  +
jmp loc_101556A  +
test eax eax +
jle loc_1015546  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_48] eax +
mov eax 185h +
jmp loc_1015566  +
test eax eax +
jle loc_101555E  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_48] eax +
mov eax 19Bh +
mov [ebp+var_42] ax +
pop ebx  +
mov esi [ebp+var_48] +
lea ecx [ebp+lpNewFileName] +
call sub_1016FE9  +
lea ecx [ebp+lpExistingFileName] +
call sub_1016FE9  +
lea ecx [ebp+var_48] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_10155C2  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_10155C2  +
push offset dword_1002E14  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push esi  +
push 1  +
push 1BBh  +
push offset aSxrotatelogs  +
lea ecx [ebp+var_3C] +
call sub_10148A2  +
xor esi esi +
mov eax offset dword_10032B8 +
mov [ebp+lpExistingFileName] eax +
mov [ebp+lpFileName] eax +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov eax 1C3h +
cmp [ebp+arg_0] esi +
jnz loc_101560A  +
mov [ebp+var_3C] 80070057h +
mov [ebp+var_36] ax +
jmp loc_1015773  +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_38] ax +
mov eax 1C4h +
cmp ebx 2 +
jnb loc_101562C  +
mov [ebp+var_3C] 80070057h +
mov [ebp+var_36] ax +
jmp loc_1015772  +
push edi  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_3C] esi +
mov [ebp+var_38] ax +
call sub_101533D  +
mov edi offset aEtl +
push edi  +
push esi  +
push [ebp+arg_0]  +
mov esi offset aS_D_S +
lea eax [ebp+lpFileName] +
push esi  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_3C] eax +
test eax eax +
mov eax 1CBh +
jl loc_101576D  +
push [ebp+lpFileName]  +
mov [ebp+var_38] ax +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_101569D  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_101568B  +
cmp eax 3 +
jnz loc_101569D  +
and [ebp+var_3C] 0 +
mov eax 1D3h +
mov [ebp+var_38] ax +
jmp loc_1015771  +
push edi  +
dec ebx  +
push ebx  +
push [ebp+arg_0]  +
lea eax [ebp+lpFileName] +
push esi  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_3C] eax +
test eax eax +
mov eax 1D8h +
jl loc_101576D  +
push [ebp+lpFileName]  +
mov [ebp+var_38] ax +
call ds:DeleteFileW  +
jmp loc_101574B  +
push edi  +
lea ebx [eax-1] +
push ebx  +
push [ebp+arg_0]  +
lea eax [ebp+lpExistingFileName] +
push esi  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_3C] eax +
test eax eax +
mov eax 1DFh +
jl loc_101576D  +
push 1  +
push [ebp+lpFileName]  +
mov [ebp+var_38] ax +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_1015728  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_101571B  +
cmp eax 20h +
jz loc_101571B  +
cmp eax 5 +
jnz loc_1015757  +
and [ebp+var_3C] 0 +
mov eax 1ECh +
mov [ebp+var_38] ax +
push [ebp+lpFileName]  +
call sub_1015249  +
mov edx [ebp+lpExistingFileName] +
lea ecx [ebp+lpFileName] +
call sub_1017AA3  +
mov [ebp+var_3C] eax +
test eax eax +
mov eax 1F3h +
jl loc_101576D  +
mov [ebp+var_38] ax +
mov eax ebx +
test eax eax +
ja loc_10156CF  +
jmp loc_1015771  +
test eax eax +
jle loc_1015765  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_3C] eax +
mov eax 1ECh +
mov [ebp+var_36] ax +
pop edi  +
pop ebx  +
mov esi [ebp+var_3C] +
lea ecx [ebp+lpFileName] +
call sub_1016FE9  +
lea ecx [ebp+lpExistingFileName] +
call sub_1016FE9  +
lea ecx [ebp+var_3C] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_10157C9  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_10157C9  +
push offset dword_1002E14  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push esi  +
push edi  +
push 1  +
push 215h  +
push offset aSxstarttracing  +
lea ecx [ebp+var_40] +
call sub_10148A2  +
mov eax [ebp+arg_C] +
xor edi edi +
xor esi esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
mov [ebp+var_10] edi +
mov [ebp+var_1C] offset dword_10032B8 +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
cmp eax edi +
jz loc_1015809  +
or dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edi +
mov ecx [ebp+arg_10] +
cmp ecx edi +
jz loc_1015812  +
mov [ecx] edi +
cmp [ebp+arg_0] edi +
jnz loc_101582C  +
mov eax 225h +
mov [ebp+var_40] 80070057h +
mov [ebp+var_3A] ax +
jmp loc_10159C1  +
mov ecx 225h +
cmp eax edi +
mov [ebp+var_3C] cx +
lea eax [ecx+1] +
jz loc_101581C  +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_3C] ax +
inc eax  +
cmp ebx edi +
jnz loc_1015855  +
mov [ebp+var_40] 80070057h +
jmp loc_10159A7  +
mov [ebp+var_3C] ax +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
mov [ebp+var_40] edi +
call sub_1014F1E  +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 230h +
jl loc_10159A7  +
mov [ebp+var_3C] ax +
cmp [ebp+var_C] edi +
jnz loc_10158AF  +
cmp [ebp+var_4] edi +
jnz loc_10158B2  +
push offset aEtl  +
push ebx  +
lea eax [ebp+var_1C] +
push offset aS_0_S  +
push eax  +
call sub_10172AE  +
add esp 10h +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 234h +
jmp loc_10158DF  +
cmp [ebp+var_4] edi +
jbe loc_10158E6  +
mov eax [ebp+var_10] +
cmp eax 7 +
jnb loc_10158BD  +
inc eax  +
push offset aEtl  +
push eax  +
push ebx  +
lea eax [ebp+var_1C] +
push offset aS_0_D_S  +
push eax  +
call sub_10172AE  +
add esp 14h +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 23Dh +
jge loc_101590D  +
jmp loc_10159A7  +
push offset aEtl  +
push ebx  +
lea eax [ebp+var_1C] +
push offset aS_0_1_S  +
push eax  +
call sub_10172AE  +
add esp 10h +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 242h +
jl loc_10159A7  +
mov [ebp+var_3C] ax +
lea eax [ebp+var_8] +
push eax  +
call sub_1014CB2  +
mov esi [ebp+var_8] +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 245h +
jl loc_10159A7  +
mov [ebp+var_3C] ax +
mov eax [ebp+arg_8] +
mov dword ptr [esi+40h] 2 +
mov dword ptr [esi+30h] 40h +
mov dword ptr [esi+34h] 3 +
mov dword ptr [esi+38h] 6 +
mov [esi+3Ch] eax +
mov dword ptr [esi+44h] 0Fh +
push [ebp+var_1C]  +
mov eax [esi+6Ch] +
add eax esi +
push 104h  +
push eax  +
call sub_1014A09  +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 24Dh +
jl loc_10159A7  +
push esi  +
push [ebp+arg_0]  +
mov [ebp+var_3C] ax +
push [ebp+arg_C]  +
call ds:StartTraceW  +
cmp eax 0B7h +
jz loc_10159B1  +
cmp eax edi +
jle loc_101599B  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_40] eax +
cmp eax edi +
mov eax 253h +
jge loc_10159AD  +
mov [ebp+var_3A] ax +
jmp loc_10159C0  +
mov [ebp+var_3C] ax +
mov edx [ebp+arg_10] +
cmp edx edi +
jz loc_10159C0  +
lea ecx [ebp+var_1C] +
call sub_10170B0  +
pop ebx  +
push esi  +
call ds:CoTaskMemFree  +
mov esi [ebp+var_40] +
lea ecx [ebp+var_1C] +
call sub_1016FE9  +
lea ecx [ebp+var_40] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea esi [ebp+arg_8] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1015A2D  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1015A2D  +
push offset dword_1002E14  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD5C  +
push 1  +
push 26Ah  +
push offset aSxenabletraced  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
push 0  +
push [ebp+arg_18]  +
lea esi [ebp+var_14] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
call sub_1014D8A  +
mov [ebp+var_38] eax +
mov ecx 26Ch +
test eax eax +
jge loc_1015A6F  +
mov [ebp+var_32] cx +
jmp loc_1015A73  +
mov [ebp+var_34] cx +
lea ecx [ebp+var_38] +
mov esi eax +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1014215  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_18] +
push eax  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1015AFE  +
cmp word ptr [edx] 0 +
jnz loc_1015AE5  +
push 0Eh  +
jmp loc_1015B00  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1015AEA  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax+2] +
jmp loc_1015B01  +
push 0Ah  +
pop ebx  +
test edx edx +
jz loc_1015B12  +
cmp word ptr [edx] 0 +
jnz loc_1015B17  +
mov edx offset aNull_1 +
jmp loc_1015B17  +
mov edx offset aNull_2 +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_1015B2F  +
mov eax edi +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1015B23  +
sub eax esi +
inc eax  +
jmp loc_1015B32  +
push 5  +
pop eax  +
mov ecx edi +
test edi edi +
jnz loc_1015B3D  +
mov ecx offset aNull_0 +
push 0  +
push 4  +
lea esi [ebp+arg_18] +
push esi  +
push ebx  +
push edx  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push esi  +
push edi  +
call ds:GetLastError  +
mov edi eax +
call ds:RtlGetLastNtStatus  +
mov esi edi +
test edi edi +
jle loc_1015B8F  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_1015B98  +
mov esi 0C0003005h +
mov ecx off_101A000 +
cmp ecx offset off_101A000 +
jz loc_1015BC4  +
test dword ptr [ecx+1Ch] 1000000h +
jz loc_1015BC4  +
push esi  +
push eax  +
push edi  +
push offset dword_1002F54  +
push 21h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1015A94  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push 2  +
push 21h  +
push offset aSxregreaddword  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov ebx [ebp+arg_8] +
xor esi esi +
mov dword ptr [ebp+Data] esi +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
cmp ebx esi +
jz loc_1015BFD  +
mov [ebx] esi +
push 2Ah  +
pop eax  +
cmp [ebp+lpValueName] esi +
jnz loc_1015C15  +
mov [ebp+var_30] 80070057h +
mov [ebp+var_2A] ax +
jmp loc_1015CC2  +
push 2Bh  +
mov [ebp+var_2C] ax +
pop eax  +
cmp ebx esi +
jz loc_1015C05  +
mov [ebp+var_2C] ax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push [ebp+lpValueName]  +
mov [ebp+var_30] esi +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
cmp [ebp+arg_C] esi +
jz loc_1015C5C  +
cmp eax 2 +
jnz loc_1015C5C  +
mov [ebp+var_30] 1 +
push 31h  +
jmp loc_1015CBD  +
cmp eax esi +
jle loc_1015C6A  +
and eax 0FFFFh +
or eax 80070000h +
push 34h  +
mov [ebp+var_30] eax +
cmp eax esi +
pop eax  +
jge loc_1015C81  +
mov [ebp+var_2A] ax +
mov [ebp+var_28] 1 +
jmp loc_1015CC2  +
cmp [ebp+Type] 4 +
push 36h  +
mov [ebp+var_2C] ax +
pop eax  +
jz loc_1015C9A  +
mov [ebp+var_30] 8007065Dh +
jmp loc_1015C0C  +
cmp [ebp+cbData] 4 +
mov [ebp+var_2C] ax +
jz loc_1015CB3  +
push 37h  +
mov [ebp+var_30] 80004005h +
pop eax  +
jmp loc_1015C0C  +
mov eax dword ptr [ebp+Data] +
mov [ebx] eax +
mov [ebp+var_30] esi +
push 3Bh  +
pop eax  +
mov [ebp+var_2C] ax +
mov esi [ebp+var_30] +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 0A1h  +
push offset aSxgetuseracces  +
lea ecx [ebp+var_38] +
call sub_10148A2  +
xor ebx ebx +
push 40h  +
lea eax [ebp+var_88] +
push ebx  +
push eax  +
mov [ebp+DuplicateTokenHandle] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_90] ebx +
mov [ebp+var_8C] ebx +
call memset  +
add esp 0Ch +
mov [ebp+ReturnLength] ebx +
mov [ebp+TokenInformation] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_44] edi +
mov [ebp+var_14] ebx +
mov [ebp+var_48] 48h +
cmp [ebp+arg_4] ebx +
jz loc_1015D4B  +
mov eax [ebp+arg_4] +
push 4  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1015D45  +
mov eax 0B0h +
cmp [ebp+TokenHandle] ebx +
jnz loc_1015D65  +
mov [ebp+var_38] 80070057h +
mov [ebp+var_32] ax +
jmp loc_1015F91  +
mov [ebp+var_34] ax +
mov eax 0B1h +
cmp [ebp+arg_4] ebx +
jz loc_1015D55  +
mov esi ds:GetTokenInformation +
mov [ebp+var_34] ax +
lea eax [ebp+ReturnLength] +
push eax  +
push 4  +
lea eax [ebp+TokenInformation] +
push eax  +
push 12h  +
push [ebp+TokenHandle]  +
mov [ebp+var_38] ebx +
call esi  +
test eax eax +
jnz loc_1015DA4  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0B3h +
jmp loc_1015D5C  +
cmp [ebp+TokenInformation] 3 +
mov eax 0B3h +
mov [ebp+var_38] ebx +
mov [ebp+var_34] ax +
jnz loc_1015E9C  +
lea eax [ebp+ReturnLength] +
push eax  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 13h  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jnz loc_1015DE1  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0BAh +
jmp loc_1015D5C  +
mov eax [ebp+var_C] +
mov ecx 0BDh +
mov [ebp+var_34] cx +
lea ecx [ebp+ReturnLength] +
push ecx  +
push 4  +
lea ecx [ebp+var_44] +
push ecx  +
push 8  +
push eax  +
mov [ebp+hObject] eax +
mov [ebp+var_C] ebx +
mov [ebp+var_38] ebx +
call esi  +
test eax eax +
jnz loc_1015E1B  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0C0h +
jmp loc_1015D5C  +
mov eax 0C0h +
mov [ebp+var_38] ebx +
mov [ebp+var_34] ax +
cmp [ebp+var_44] edi +
jnz loc_1015E6F  +
cmp [ebp+DuplicateTokenHandle] ebx +
jz loc_1015E43  +
cmp [ebp+DuplicateTokenHandle] 0FFFFFFFFh +
jz loc_1015E43  +
push [ebp+DuplicateTokenHandle]  +
call ds:CloseHandle  +
mov [ebp+DuplicateTokenHandle] ebx +
lea eax [ebp+DuplicateTokenHandle] +
push eax  +
push 2  +
push [ebp+hObject]  +
call ds:DuplicateToken  +
test eax eax +
jnz loc_1015E68  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0C6h +
jmp loc_1015D5C  +
mov eax 0C6h +
jmp loc_1015EDD  +
mov eax [ebp+hObject] +
mov [ebp+var_C] eax +
mov [ebp+hObject] ebx +
cmp [ebp+DuplicateTokenHandle] ebx +
jz loc_1015E8C  +
cmp [ebp+DuplicateTokenHandle] 0FFFFFFFFh +
jz loc_1015E8C  +
push [ebp+DuplicateTokenHandle]  +
call ds:CloseHandle  +
mov eax [ebp+var_C] +
mov [ebp+DuplicateTokenHandle] eax +
mov [ebp+var_C] ebx +
mov eax 0CBh +
jmp loc_1015EDD  +
cmp [ebp+DuplicateTokenHandle] ebx +
jz loc_1015EB3  +
cmp [ebp+DuplicateTokenHandle] 0FFFFFFFFh +
jz loc_1015EB3  +
push [ebp+DuplicateTokenHandle]  +
call ds:CloseHandle  +
mov [ebp+DuplicateTokenHandle] ebx +
lea eax [ebp+DuplicateTokenHandle] +
push eax  +
push 2  +
push [ebp+TokenHandle]  +
call ds:DuplicateToken  +
test eax eax +
jnz loc_1015ED8  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0D0h +
jmp loc_1015D5C  +
mov eax 0D0h +
mov [ebp+var_34] ax +
lea eax [ebp+var_48] +
push eax  +
lea eax [ebp+var_90] +
push eax  +
push ebx  +
push 1Ah  +
mov [ebp+var_38] ebx +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_1015F0E  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0D7h +
jmp loc_1015D5C  +
mov eax 0D7h +
mov [ebp+var_34] ax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_90] +
push eax  +
push [ebp+DuplicateTokenHandle]  +
mov [ebp+var_38] ebx +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_1015F44  +
call sub_1015B6B  +
mov [ebp+var_38] eax +
mov eax 0DAh +
jmp loc_1015D5C  +
mov eax 0DAh +
mov [ebp+var_34] ax +
mov eax [ebp+TokenInformation] +
dec eax  +
mov [ebp+var_38] ebx +
jz loc_1015F79  +
dec eax  +
jz loc_1015F68  +
dec eax  +
jnz loc_1015F8A  +
mov eax [ebp+var_14] +
neg eax  +
sbb eax eax +
add eax 4 +
jmp loc_1015F8C  +
xor eax eax +
cmp [ebp+var_14] ebx +
setz al  +
lea eax ds:2[eax*4] +
jmp loc_1015F8C  +
xor eax eax +
cmp [ebp+var_14] ebx +
setz al  +
lea eax ds:1[eax*4] +
jmp loc_1015F8C  +
mov eax ebx +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov esi [ebp+var_38] +
cmp [ebp+hObject] ebx +
jz loc_1015FA8  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1015FA8  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+DuplicateTokenHandle] ebx +
jz loc_1015FBF  +
cmp [ebp+DuplicateTokenHandle] 0FFFFFFFFh +
jz loc_1015FBF  +
push [ebp+DuplicateTokenHandle]  +
call ds:CloseHandle  +
mov [ebp+DuplicateTokenHandle] ebx +
lea ecx [ebp+var_38] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1015FEB  +
cmp ecx 7FFFFFFFh +
jbe loc_1015FF0  +
mov eax 80070057h +
test eax eax +
jl loc_101602D  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101601D  +
cmp eax esi +
ja loc_101601D  +
jnz loc_1016028  +
jmp loc_1016022  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 454h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_454] ecx +
mov [ebp+var_450] eax +
mov eax off_101A000 +
mov esi offset off_101A000 +
cmp eax esi +
jz loc_1016088  +
test dword ptr [eax+1Ch] 20000000h +
jz loc_1016088  +
push ecx  +
push offset dword_1002FA4  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1014C45  +
push 1  +
push 1F8h  +
push offset aSxgetuniquevol  +
lea ecx [ebp+var_440] +
call sub_10148A2  +
xor eax eax +
xor ebx ebx +
mov edi 208h +
push edi  +
mov word ptr [ebp+var_210] ax +
lea eax [ebp+var_210+2] +
push ebx  +
push eax  +
mov [ebp+var_44C] offset dword_10032B8 +
mov [ebp+var_448] ebx +
mov [ebp+var_444] ebx +
call memset  +
xor eax eax +
push edi  +
mov word ptr [ebp+var_41C] ax +
lea eax [ebp+var_41C+2] +
push ebx  +
push eax  +
call memset  +
mov edx [ebp+var_454] +
add esp 18h +
lea eax [edi-0Ah] +
cmp edx ebx +
jnz loc_1016110  +
mov [ebp+var_440] 80070057h +
mov [ebp+var_43A] ax +
jmp loc_1016310  +
mov [ebp+var_43C] ax +
mov eax 1FFh +
cmp [ebp+var_450] ebx +
jz loc_10160FA  +
mov [ebp+var_43C] ax +
inc eax  +
cmp [ebp+arg_8] ebx +
jbe loc_10160FA  +
lea ecx [ebp+var_44C] +
mov [ebp+var_440] ebx +
mov [ebp+var_43C] ax +
call sub_1017AA3  +
mov [ebp+var_440] eax +
cmp eax ebx +
mov eax 203h +
jl loc_1016104  +
mov [ebp+var_43C] ax +
inc eax  +
cmp [ebp+var_448] ebx +
jz loc_10160FA  +
push 5Ch  +
pop edx  +
lea ecx [ebp+var_44C] +
mov [ebp+var_440] ebx +
mov [ebp+var_43C] ax +
call sub_1017A4D  +
mov [ebp+var_440] eax +
cmp eax ebx +
mov eax 206h +
jl loc_1016104  +
mov [ebp+var_43C] ax +
mov edi 105h +
push edi  +
lea eax [ebp+var_210] +
push eax  +
push [ebp+var_44C]  +
call ds:GetVolumePathNameW  +
test eax eax +
jnz loc_1016213  +
call sub_1015B6B  +
mov [ebp+var_440] eax +
mov eax 20Ch +
mov [ebp+var_43A] ax +
mov eax off_101A000 +
cmp eax esi +
jz loc_1016310  +
test dword ptr [eax+1Ch] 2000000h +
jz loc_1016310  +
push [ebp+var_440]  +
push [ebp+var_44C]  +
push offset aGetvolumepathn  +
push offset dword_1002FA4  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1015ACC  +
jmp loc_1016310  +
mov eax 20Ch +
mov [ebp+var_43C] ax +
push edi  +
mov edi ds:GetVolumeNameForVolumeMountPointW +
lea eax [ebp+var_41C] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_440] ebx +
call edi  +
test eax eax +
jnz loc_101628F  +
call sub_1015B6B  +
mov [ebp+var_440] eax +
mov eax 213h +
mov [ebp+var_43A] ax +
mov eax off_101A000 +
cmp eax esi +
jz loc_1016310  +
test dword ptr [eax+1Ch] 2000000h +
jz loc_1016310  +
push [ebp+var_440]  +
lea ecx [ebp+var_210] +
push ecx  +
push offset aGetvolumenamef  +
push offset dword_1002FA4  +
push 14h  +
jmp loc_1016203  +
push [ebp+arg_8]  +
mov eax 213h +
push [ebp+var_450]  +
mov [ebp+var_43C] ax +
lea eax [ebp+var_41C] +
push eax  +
mov [ebp+var_440] ebx +
call edi  +
test eax eax +
jnz loc_10162FE  +
call sub_1015B6B  +
mov [ebp+var_440] eax +
mov eax 219h +
mov [ebp+var_43A] ax +
mov eax off_101A000 +
cmp eax esi +
jz loc_1016310  +
test dword ptr [eax+1Ch] 2000000h +
jz loc_1016310  +
push [ebp+var_440]  +
lea ecx [ebp+var_41C] +
push ecx  +
push offset aGetvolumenam_0  +
push offset dword_1002FA4  +
push 15h  +
jmp loc_1016203  +
mov eax 219h +
mov [ebp+var_440] ebx +
mov [ebp+var_43C] ax +
mov esi [ebp+var_440] +
lea ecx [ebp+var_44C] +
call sub_1016FE9  +
lea ecx [ebp+var_440] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 1  +
push 393h  +
push offset aSxgetwinsatvol  +
lea ecx [ebp+var_234] +
call sub_10148A2  +
xor eax eax +
push 208h  +
push eax  +
mov [ebp+Dst] ax +
lea eax [ebp-20Eh] +
push eax  +
call memset  +
add esp 0Ch +
mov eax 398h +
test edi edi +
jnz loc_10163B2  +
mov [ebp+var_234] 80070057h +
mov [ebp+var_22E] ax +
jmp loc_101645C  +
cmp [ebp+arg_4] 0 +
mov [ebp+var_230] ax +
mov eax 399h +
jbe loc_101639C  +
and [ebp+var_234] 0 +
mov [ebp+var_230] ax +
xor eax eax +
mov [edi] ax +
mov esi 105h +
push esi  +
lea eax [ebp+Dst] +
push eax  +
push offset Src  +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jnz loc_1016405  +
call sub_1015B6B  +
mov [ebp+var_234] eax +
mov eax 3A2h +
jmp loc_10163A6  +
mov ecx 3A2h +
cmp eax esi +
mov [ebp+var_230] cx +
lea eax [ecx+1] +
jbe loc_1016424  +
mov [ebp+var_234] 8007007Ah +
jmp loc_10163A6  +
push [ebp+arg_4]  +
and [ebp+var_234] 0 +
mov [ebp+var_230] ax +
push edi  +
lea eax [ebp+Dst] +
push eax  +
call sub_1016034  +
mov [ebp+var_234] eax +
test eax eax +
mov eax 3A5h +
jl loc_10163A6  +
mov [ebp+var_230] ax +
mov esi [ebp+var_234] +
lea ecx [ebp+var_234] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push esi  +
push edi  +
push 1  +
push 772h  +
push offset aSxgetdiskexts  +
lea ecx [ebp+var_5C] +
call sub_10148A2  +
or [ebp+hObject] 0FFFFFFFFh +
xor esi esi +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_30] +
mov [ebp+OutBuffer] esi +
stos   +
mov eax [ebp+arg_4] +
mov [ebp+pv] esi +
mov [ebp+BytesReturned] esi +
mov [ebp+lpFileName] offset dword_10032B8 +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
cmp eax esi +
jz loc_10164D1  +
mov [eax] esi +
mov edx [ebp+arg_0] +
cmp edx esi +
jnz loc_10164ED  +
mov eax 77Ch +
mov [ebp+var_5C] 80070057h +
mov [ebp+var_56] ax +
jmp loc_1016637  +
mov ecx 77Ch +
cmp eax esi +
mov [ebp+var_58] cx +
lea eax [ecx+1] +
jz loc_10164DD  +
lea ecx [ebp+lpFileName] +
mov [ebp+var_5C] esi +
mov [ebp+var_58] ax +
call sub_1017AA3  +
mov [ebp+var_5C] eax +
cmp eax esi +
mov eax 77Fh +
jl loc_10164E4  +
push 5Ch  +
pop edx  +
lea ecx [ebp+lpFileName] +
mov [ebp+var_58] ax +
call sub_10170DB  +
push esi  +
push esi  +
push 3  +
push esi  +
push 3  +
push esi  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101654F  +
call sub_1015B6B  +
mov [ebp+var_5C] eax +
mov eax 789h +
jmp loc_10164E4  +
push ebx  +
mov ebx ds:DeviceIoControl +
push esi  +
mov ecx 789h +
mov [ebp+var_58] cx +
lea ecx [ebp+BytesReturned] +
push ecx  +
push 20h  +
lea ecx [ebp+OutBuffer] +
push ecx  +
push esi  +
push esi  +
push 560000h  +
push eax  +
mov [ebp+var_5C] esi +
call ebx  +
test eax eax +
jnz loc_101659A  +
call ds:GetLastError  +
cmp eax 0EAh +
jz loc_101659A  +
call sub_1015B6B  +
mov [ebp+var_5C] eax +
mov eax 794h +
jmp loc_101661C  +
mov edi [ebp+OutBuffer] +
imul edi edi +
mov eax 794h +
add edi 8 +
push edi  +
mov [ebp+var_5C] esi +
mov [ebp+var_58] ax +
call ds:CoTaskMemAlloc  +
mov [ebp+pv] eax +
cmp eax esi +
jnz loc_10165CB  +
mov [ebp+var_5C] 8007000Eh +
mov eax 799h +
jmp loc_101661C  +
push esi  +
mov ecx 799h +
mov [ebp+var_58] cx +
lea ecx [ebp+BytesReturned] +
push ecx  +
push edi  +
push eax  +
push esi  +
push esi  +
push 560000h  +
push [ebp+hObject]  +
mov [ebp+var_5C] esi +
call ebx  +
test eax eax +
jnz loc_10165FD  +
call sub_1015B6B  +
mov [ebp+var_5C] eax +
mov eax 7A2h +
jmp loc_101661C  +
mov eax 7A2h +
mov [ebp+var_58] ax +
mov eax [ebp+pv] +
mov [ebp+var_5C] esi +
cmp [eax] esi +
jnz loc_1016622  +
mov [ebp+var_5C] 8000FFFFh +
mov eax 7A3h +
mov [ebp+var_56] ax +
jmp loc_1016636  +
mov ecx 7A3h +
mov [ebp+var_58] cx +
mov ecx [ebp+arg_4] +
mov [ebp+var_5C] esi +
mov [ecx] eax +
mov [ebp+pv] esi +
pop ebx  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov edi [ebp+var_5C] +
lea ecx [ebp+lpFileName] +
call sub_1016FE9  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_101665F  +
cmp [ebp+hObject] esi +
jz loc_101665F  +
push [ebp+hObject]  +
call ds:CloseHandle  +
lea ecx [ebp+var_5C] +
call sub_1014AA3  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 73Dh  +
push offset aSxqueryvolumed  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
mov ebx [ebp+arg_4] +
xor esi esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] edi +
cmp ebx esi +
jz loc_10166A6  +
mov [ebx] edi +
mov eax 749h +
cmp [ebp+arg_0] esi +
jnz loc_10166BD  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_101672F  +
mov [ebp+var_28] ax +
mov eax 74Ah +
cmp ebx esi +
jz loc_10166B0  +
mov [ebp+var_28] ax +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_2C] esi +
call sub_1016484  +
mov esi [ebp+var_4] +
xor edi edi +
mov [ebp+var_2C] eax +
cmp eax edi +
mov eax 750h +
jl loc_10166B7  +
mov [ebp+var_28] ax +
cmp [esi] edi +
jbe loc_1016719  +
lea ebx [esi+8] +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [ebx]  +
call sub_1016AD1  +
test eax eax +
jl loc_1016716  +
cmp [ebp+var_8] 0 +
jnz loc_1016716  +
inc edi  +
add ebx 18h +
cmp edi [esi] +
jb loc_10166F9  +
mov ebx [ebp+arg_4] +
xor eax eax +
cmp edi [esi] +
setnz al  +
and [ebp+var_2C] 0 +
mov [ebx] eax +
mov eax 762h +
mov [ebp+var_28] ax +
push esi  +
call ds:CoTaskMemFree  +
mov esi [ebp+var_2C] +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push 1  +
push 44h  +
push offset aSxquerydevicef  +
lea ecx [ebp+var_2C] +
call sub_10148A2  +
or [ebp+hObject] 0FFFFFFFFh +
xor ebx ebx +
xor esi esi +
push 4Eh  +
mov [ebp+var_8] ebx +
pop eax  +
cmp [ebp+lpFileName] ebx +
jnz loc_101678D  +
mov [ebp+var_2C] 80070057h +
mov [ebp+var_26] ax +
jmp loc_1016886  +
push 4Fh  +
mov [ebp+var_28] ax +
pop eax  +
cmp [ebp+arg_4] ebx +
jz loc_101677D  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 3  +
push 0C0000000h  +
push [ebp+lpFileName]  +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ax +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10167CA  +
call sub_1015B6B  +
push 58h  +
mov [ebp+var_2C] eax +
pop eax  +
jmp loc_1016784  +
push edi  +
push 58h  +
pop eax  +
push 54h  +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ax +
pop edi  +
cmp esi ebx +
jz loc_10167E3  +
push esi  +
call ds:CoTaskMemFree  +
push edi  +
call ds:CoTaskMemAlloc  +
mov esi eax +
push 6Bh  +
pop eax  +
cmp esi ebx +
jz loc_1016833  +
mov [ebp+var_28] ax +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push edi  +
push 3  +
push [ebp+hObject]  +
mov [ebp+var_2C] ebx +
mov dword ptr [esi] 1 +
mov [esi+4] ebx +
call GetStorageDependencyInformation  +
cmp eax 0EAh +
jnz loc_101682A  +
cmp [ebp+var_8] 38h +
jbe loc_101686E  +
mov edi [esi+4] +
inc edi  +
inc edi  +
imul edi edi +
jmp loc_10167D8  +
cmp eax 7Ah +
jnz loc_1016840  +
add edi edi +
jmp loc_10167D8  +
mov [ebp+var_2C] 8007000Eh +
mov [ebp+var_26] ax +
jmp loc_101687A  +
cmp eax ebx +
jnz loc_101686E  +
mov edx [esi+4] +
xor edi edi +
cmp edx ebx +
jbe loc_101686E  +
lea eax [esi+8] +
mov ecx [eax] +
test cl 2 +
jz loc_1016869  +
test ecx 100h +
jnz loc_1016869  +
inc edi  +
add eax 1Ch +
cmp edi edx +
jb loc_1016850  +
jmp loc_101686E  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
mov eax 97h +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ax +
pop edi  +
cmp esi ebx +
jz loc_1016886  +
push esi  +
call ds:CoTaskMemFree  +
cmp [ebp+hObject] 0FFFFFFFFh +
mov esi [ebp+var_2C] +
jz loc_101689D  +
cmp [ebp+hObject] ebx +
jz loc_101689D  +
push [ebp+hObject]  +
call ds:CloseHandle  +
lea ecx [ebp+var_2C] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 240h +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 1  +
push 0A9h  +
push offset aSxquerydevicer  +
lea ecx [ebp+var_240] +
call sub_10148A2  +
xor eax eax +
push 208h  +
mov word ptr [ebp+var_210] ax +
xor esi esi +
lea eax [ebp+var_210+2] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+pv] esi +
mov [ebp+hKey] esi +
mov [ebp+var_21C] esi +
cmp edi esi +
jz loc_1016A31  +
mov eax 0B2h +
mov [ebp+var_23C] ax +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
mov [edi] esi +
mov [ebp+var_240] esi +
call sub_1016344  +
mov [ebp+var_240] eax +
cmp eax esi +
mov eax 0B8h +
jl loc_1016A40  +
mov [ebp+var_23C] ax +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
call sub_1016484  +
mov [ebp+var_240] eax +
cmp eax esi +
mov eax 0B9h +
jl loc_1016A40  +
mov [ebp+var_23C] ax +
mov eax [ebp+pv] +
cmp [eax] esi +
jz loc_1016A5E  +
mov eax [eax+8] +
cmp eax [ebp+arg_0] +
jnz loc_1016A5E  +
cmp [ebp+hKey] esi +
jz loc_10169C6  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_10169C6  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] esi +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push esi  +
push offset aSoftwareMicr_0  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jle loc_10169F1  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_240] eax +
cmp eax esi +
mov eax 0C9h +
jl loc_1016A40  +
push 1  +
mov [ebp+var_23C] ax +
lea eax [ebp+var_21C] +
push eax  +
push offset aRandomreaddisk  +
push [ebp+hKey]  +
call sub_1015BCE  +
cmp eax esi +
mov [ebp+var_240] eax +
jge loc_1016A49  +
mov eax 0CEh +
jmp loc_1016A40  +
mov [ebp+var_240] 80070057h +
mov eax 0B2h +
mov [ebp+var_23A] ax +
jmp loc_1016A74  +
mov eax [ebp+var_21C] +
mov [edi] eax +
mov [ebp+var_240] esi +
mov eax 0D2h +
jmp loc_1016A6D  +
mov [ebp+var_240] 1 +
mov eax 0C2h +
mov [ebp+var_23C] ax +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov edi [ebp+var_240] +
mov [ebp+pv] esi +
cmp [ebp+hKey] esi +
jz loc_1016AAF  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_1016AAF  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] esi +
lea ecx [ebp+var_240] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0AACh +
mov eax dword_101B2B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 1  +
push 0E2h  +
push offset aSxquerydeviced  +
lea ecx [ebp+var_A80] +
mov [ebp+var_A50] esi +
call sub_10148A2  +
xor eax eax +
push 208h  +
mov [ebp+FileName] ax +
xor ebx ebx +
lea eax [ebp-20Eh] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
mov [ebp+OutBuffer] ebx +
lea edi [ebp+var_A88] +
stos   +
push 7  +
stos   +
pop ecx  +
xor eax eax +
lea edi [ebp+var_AA8] +
push 82Ah  +
mov [ebp+var_AAC] ebx +
stos   +
mov word ptr [ebp+var_A48] ax +
lea eax [ebp+var_A48+2] +
push ebx  +
push eax  +
call memset  +
or [ebp+hObject] 0FFFFFFFFh +
xor eax eax +
inc eax  +
add esp 18h +
mov [ebp+BytesReturned] ebx +
mov [ebp+var_A5C] eax +
mov [ebp+var_A54] ebx +
cmp esi ebx +
jz loc_1016C01  +
push dword ptr [ebp+arg_0]  +
mov [esi] eax +
mov eax 0F7h +
push offset a?Physicaldrive  +
mov [ebp+var_A7C] ax +
lea eax [ebp+FileName] +
push 105h  +
push eax  +
mov [ebp+var_A80] ebx +
call sub_1015FD5  +
add esp 10h +
mov [ebp+var_A80] eax +
cmp eax ebx +
mov eax 0FEh +
jl loc_1016C10  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 3  +
mov [ebp+var_A7C] ax +
push 0C0000000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1016C1C  +
call sub_1015B6B  +
mov [ebp+var_A80] eax +
mov eax 107h +
jmp loc_1016C10  +
mov [ebp+var_A80] 80070057h +
mov eax 0F7h +
mov [ebp+var_A7A] ax +
jmp loc_1016EDC  +
mov esi ds:DeviceIoControl +
push ebx  +
mov ecx 107h +
mov [ebp+var_A7C] cx +
lea ecx [ebp+BytesReturned] +
push ecx  +
push 0Ch  +
lea ecx [ebp+OutBuffer] +
push ecx  +
push 0Ch  +
lea ecx [ebp+InBuffer] +
push ecx  +
mov edi 2D1400h +
push edi  +
push eax  +
mov [ebp+var_A80] ebx +
mov [ebp+InBuffer] 7 +
mov [ebp+var_218] ebx +
call esi  +
test eax eax +
jz loc_1016CC1  +
cmp [ebp+OutBuffer] 0Ch +
jnz loc_1016CC1  +
cmp [ebp+var_A88] 0Ch +
jnz loc_1016CC1  +
cmp [ebp+var_A84] bl +
jnz loc_1016CC1  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1016CAF  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1016CAF  +
push dword ptr [ebp+arg_0]  +
push offset dword_1003154  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
mov eax [ebp+var_A50] +
mov [eax] ebx +
mov eax 11Fh +
jmp loc_1016ECF  +
push ebx  +
lea eax [ebp+BytesReturned] +
push eax  +
push 20h  +
lea eax [ebp+var_AAC] +
push eax  +
push 0Ch  +
lea eax [ebp+InBuffer] +
push eax  +
push edi  +
push [ebp+hObject]  +
mov [ebp+InBuffer] 1 +
mov [ebp+var_218] ebx +
call esi  +
test eax eax +
jz loc_1016D0A  +
cmp [ebp+var_AAC] 20h +
jnz loc_1016D0A  +
cmp [ebp+var_AA8] 20h +
jz loc_1016D1D  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_AAC] +
stos   +
mov [ebp+var_A94] bl +
cmp [ebp+var_A94] 0Fh +
jnz loc_1016D81  +
lea eax [ebp+var_A5C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_101674F  +
test eax eax +
jl loc_1016D81  +
cmp [ebp+var_A5C] ebx +
jnz loc_1016D81  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1016D6F  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1016D6F  +
push dword ptr [ebp+arg_0]  +
push offset dword_1003154  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
mov eax [ebp+var_A50] +
mov [eax] ebx +
mov eax 145h +
jmp loc_1016ECF  +
cmp [ebp+var_A94] 3 +
jz loc_1016D97  +
cmp [ebp+var_A94] 0Bh +
jnz loc_1016E40  +
push 28h  +
pop eax  +
push 3  +
mov word ptr [ebp+var_A48] ax +
pop eax  +
push ebx  +
mov word ptr [ebp+var_A48+2] ax +
lea eax [ebp+BytesReturned] +
push eax  +
mov eax 82Ch +
push eax  +
lea ecx [ebp+var_A48] +
push ecx  +
push eax  +
mov eax ecx +
push eax  +
push 4D02Ch  +
push [ebp+hObject]  +
mov [ebp+var_A40] 200h +
mov [ebp+var_A3C] 0Ah +
mov [ebp+var_A34] 2Ch +
mov [ebp+var_A22] 0ECh +
call esi  +
test eax eax +
jz loc_1016E40  +
cmp [ebp+var_86A] 1 +
jnz loc_1016E40  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1016E2E  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1016E2E  +
push dword ptr [ebp+arg_0]  +
push offset dword_1003154  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
mov eax [ebp+var_A50] +
mov [eax] ebx +
mov eax 169h +
jmp loc_1016ECF  +
lea eax [ebp+var_A54] +
push eax  +
push dword ptr [ebp+arg_0]  +
call sub_10168B2  +
test eax eax +
jl loc_1016EA0  +
cmp [ebp+var_A54] ebx +
jz loc_1016EA0  +
cmp [ebp+var_A54] 2000h +
jbe loc_1016EA0  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1016E91  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1016E91  +
push dword ptr [ebp+arg_0]  +
push offset dword_1003154  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
mov eax [ebp+var_A50] +
mov [eax] ebx +
mov eax 17Ah +
jmp loc_1016ECF  +
mov eax off_101A000 +
cmp eax offset off_101A000 +
jz loc_1016ECA  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1016ECA  +
push dword ptr [ebp+arg_0]  +
push offset dword_1003154  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100CD82  +
mov eax 17Fh +
mov [ebp+var_A80] ebx +
mov [ebp+var_A7C] ax +
cmp [ebp+hObject] 0FFFFFFFFh +
mov esi [ebp+var_A80] +
jz loc_1016EFF  +
cmp [ebp+hObject] ebx +
jz loc_1016EFF  +
push [ebp+hObject]  +
call ds:CloseHandle  +
lea ecx [ebp+var_A80] +
call sub_1014AA3  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1014215  +
leave   +
retn 8  +
***
mov edi edi +
inc eax  +
inc eax  +
cmp eax 100h +
ja loc_1016F3F  +
add eax 3Fh +
and eax 0FFFFFFC0h +
retn   +
cmp eax 400h +
ja loc_1016F51  +
add eax 0FFh +
and eax 0FFFFFF00h +
retn   +
cmp eax 1000h +
ja loc_1016F63  +
add eax 3FFh +
and eax 0FFFFFC00h +
retn   +
add eax 0FFFh +
and eax 0FFFFF000h +
retn   +
***
cmp dword_101B744 0 +
push esi  +
mov esi ds:GetModuleHandleW +
jnz loc_1016F93  +
push offset ModuleName  +
call esi  +
test eax eax +
jz loc_1016F93  +
mov dword_101B744 eax +
cmp dword_101B748 0 +
jnz loc_1016FAC  +
push offset aKernel32_dll  +
call esi  +
test eax eax +
jz loc_1016FAC  +
mov dword_101B748 eax +
cmp dword_101B74C 0 +
pop esi  +
jnz locret_1016FCE  +
push 2  +
push 0  +
push offset aNetmsg_dll  +
call ds:LoadLibraryExW  +
test eax eax +
jz locret_1016FCE  +
mov dword_101B74C eax +
retn   +
***
cmp ecx offset dword_10032B8 +
jz locret_1016FE3  +
push ecx  +
call ds:CoTaskMemFree  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov edx [esi+8] +
mov ecx [esi] +
call sub_1016FD4  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
mov dword ptr [esi] offset dword_10032B8 +
pop esi  +
retn   +
***
cmp dword ptr [ecx+4] 0 +
jz locret_101701E  +
and dword ptr [ecx+4] 0 +
mov eax [ecx] +
xor ecx ecx +
mov [eax] cx +
retn   +
***
mov eax [ecx] +
cmp eax offset dword_10032B8 +
jz locret_1017054  +
push esi  +
mov esi [ecx+8] +
cmp esi edx +
jnb loc_1017037  +
mov edx esi +
xor esi esi +
mov [eax+edx*2] si +
mov eax [ecx] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1017042  +
sub eax edx +
sar eax 1 +
mov [ecx+4] eax +
pop esi  +
retn   +
***
xor eax eax +
cmp edx [ecx+8] +
jbe loc_1017067  +
mov eax 80070057h +
retn   +
push esi  +
mov [ecx+4] edx +
mov ecx [ecx] +
xor esi esi +
mov [ecx+edx*2] si +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp eax [esi+4] +
jb loc_101708F  +
or eax 0FFFFFFFFh +
jmp loc_10170A6  +
mov ecx [esi] +
push edx  +
lea eax [ecx+eax*2] +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101708A  +
sub eax [esi] +
sar eax 1 +
pop esi  +
pop ebp  +
retn 4  +
***
test edx edx +
jz locret_10170D5  +
push esi  +
mov esi [ecx] +
push edi  +
mov edi esi +
mov eax offset dword_10032B8 +
sub edi eax +
neg edi  +
sbb edi edi +
and edi esi +
mov [edx] edi +
and dword ptr [ecx+4] 0 +
and dword ptr [ecx+8] 0 +
pop edi  +
mov [ecx] eax +
pop esi  +
retn   +
***
mov eax [ecx+4] +
test eax eax +
jz locret_10170F5  +
push esi  +
mov esi [ecx] +
cmp [esi+eax*2-2] dx +
pop esi  +
jnz locret_10170F5  +
lea edx [eax-1] +
jmp sub_101705A  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi edx +
xor ebx ebx +
push edi  +
mov edi ecx +
cmp esi ebx +
jnz loc_1017111  +
mov ebx 80070057h +
jmp loc_1017132  +
mov [esi] ebx +
push dword ptr [edi]  +
call ds:SysAllocString  +
mov [esi] eax +
cmp [edi+4] ebx +
jz loc_1017132  +
push eax  +
call ds:SysStringLen  +
test eax eax +
jnz loc_1017132  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi edx +
test edi edi +
jz loc_1017190  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1017190  +
and dword ptr [edi] 0 +
mov eax ecx +
call sub_1016F2D  +
mov esi eax +
lea eax [esi-1] +
cmp eax 0FFFFFFEh +
ja loc_1017190  +
lea eax [esi+esi] +
push eax  +
call ds:CoTaskMemAlloc  +
test eax eax +
jnz loc_1017184  +
mov [ebp+var_4] 8007000Eh +
jmp loc_1017197  +
xor ecx ecx +
mov [eax] cx +
dec esi  +
mov [edi] eax +
mov [ebx] esi +
jmp loc_1017197  +
mov [ebp+var_4] 80070057h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+8] +
xor ebx ebx +
push edi  +
mov edi edx +
mov [ebp+var_C] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_10] eax +
cmp eax edi +
jnb loc_1017225  +
lea eax [ebp+var_8] +
push eax  +
lea edx [ebp+pv] +
mov ecx edi +
call sub_101713D  +
cmp eax ebx +
mov [ebp+var_C] eax +
jl loc_1017216  +
mov eax [esi+4] +
mov ebx [esi] +
mov edi [ebp+pv] +
add eax eax +
push eax  +
push ebx  +
push edi  +
call memcpy  +
mov eax [esi+4] +
xor ecx ecx +
mov [edi+eax*2] cx +
mov eax [ebp+var_8] +
add esp 0Ch +
and [ebp+pv] ecx +
mov [esi+8] eax +
mov [esi] edi +
test ebx ebx +
jz loc_1017225  +
mov edx [ebp+var_10] +
mov ecx ebx +
call sub_1016FD4  +
mov ecx [ebp+pv] +
test ecx ecx +
jz loc_1017225  +
mov edx [ebp+var_8] +
call sub_1016FD4  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] edx +
mov esi ecx +
cmp edx ebx +
jz loc_1017291  +
cmp [ebp+arg_0] ebx +
jz loc_1017291  +
call sub_101700D  +
push [ebp+arg_0]  +
push edx  +
call ds:_vscwprintf  +
cmp eax ebx +
pop ecx  +
pop ecx  +
jl loc_1017291  +
jz loc_1017296  +
lea edi [eax+1] +
cmp edi eax +
jge loc_1017270  +
mov ebx 8000FFFFh +
jmp loc_1017296  +
mov edx edi +
mov ecx esi +
call sub_10171A6  +
mov ebx eax +
test ebx ebx +
jl loc_1017296  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
push edi  +
push dword ptr [esi]  +
call sub_1014A43  +
mov ebx eax +
jmp loc_1017296  +
mov ebx 80070057h +
mov edx [esi+8] +
mov ecx esi +
call sub_1017024  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_10172C1  +
mov eax 80070057h +
pop ebp  +
retn   +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
call sub_1017232  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
xor ebx ebx +
xor eax eax +
push esi  +
push edi  +
mov [ebp+lpSource] ebx +
lea edi [ebp+var_24] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_14] +
xor edi edi +
mov [ebp+var_14] ebx +
mov [ebp+pv] ebx +
mov [ebp+hLibModule] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
cmp eax ebx +
jz loc_1017307  +
mov [eax] ebx +
mov eax [ebp+arg_18] +
cmp eax ebx +
jz loc_1017310  +
mov [eax] ebx +
mov eax [ebp+arg_1C] +
cmp eax ebx +
jz loc_1017319  +
mov [eax] ebx +
call sub_1016F73  +
mov edx [ebp+arg_10] +
cmp edx ebx +
jz loc_1017345  +
xor eax eax +
cmp [ebp+arg_C] ebx +
jbe loc_1017345  +
mov ecx [ebp+arg_0] +
cmp [edx+eax*8] ecx +
jz loc_101733C  +
inc eax  +
cmp eax [ebp+arg_C] +
jb loc_101732F  +
jmp loc_1017348  +
mov [ebp+var_10] ecx +
mov ecx [edx+eax*8+4] +
jmp loc_1017348  +
mov ecx [ebp+arg_0] +
mov eax ecx +
and eax 0FFFF0000h +
cmp eax 80070000h +
jnz loc_10173C7  +
movzx ebx cx +
mov eax [ebp+var_4] +
mov ecx dword_101B748 +
mov [ebp+eax*4+lpSource] ecx +
mov ecx dword_101B74C +
inc eax  +
mov [ebp+eax*4+lpSource] ecx +
inc eax  +
mov [ebp+var_4] eax +
test edi edi +
jnz loc_1017387  +
mov ecx dword_101B744 +
mov [ebp+eax*4+lpSource] ecx +
inc eax  +
mov [ebp+var_4] eax +
xor edi edi +
cmp [ebp+var_4] edi +
jbe loc_10173B8  +
push 0  +
push 1  +
lea eax [ebp+pv] +
push eax  +
push 0  +
push ebx  +
push [ebp+edi*4+lpSource]  +
push 0BFFh  +
call ds:FormatMessageW  +
mov esi eax +
test esi esi +
jnz loc_1017458  +
inc edi  +
cmp edi [ebp+var_4] +
jb loc_101738E  +
mov eax offset dword_10021BC +
mov [ebp+arg_C] eax +
mov ebx eax +
jmp loc_10174B8  +
mov edx ecx +
and edx 10000000h +
jnz loc_10173DE  +
mov eax 0C0000000h +
mov esi ecx +
and esi eax +
cmp esi eax +
jnz loc_10173F4  +
mov eax dword_101B744 +
xor edi edi +
inc edi  +
mov ebx ecx +
mov [ebp+lpSource] eax +
mov [ebp+var_4] edi +
and ebx 0EFFFFFFFh +
test edx edx +
jnz loc_1017359  +
mov esi [ebp+arg_8] +
mov ebx ecx +
test esi esi +
jz loc_1017359  +
xor eax eax +
cmp [ebp+arg_4] eax +
jbe loc_1017359  +
lea edx [esi+4] +
cmp ecx [edx+4] +
jg loc_1017420  +
cmp ecx [edx] +
jge loc_101742E  +
inc eax  +
add edx 0Ch +
cmp eax [ebp+arg_4] +
jb loc_1017417  +
jmp loc_1017359  +
imul eax eax +
push 2  +
push 0  +
push dword ptr [eax+esi]  +
call ds:LoadLibraryExW  +
mov [ebp+hLibModule] eax +
test eax eax +
jz loc_1017359  +
mov ecx [ebp+var_4] +
inc [ebp+var_4]  +
mov [ebp+ecx*4+lpSource] eax +
jmp loc_1017387  +
mov ebx [ebp+pv] +
mov edi ds:iswspace +
mov [ebp+arg_C] offset asc_10018D8 +
mov eax [ebp+pv] +
dec esi  +
movzx eax word ptr [eax+esi*2] +
push eax  +
call edi  +
test eax eax +
mov eax [ebp+pv] +
pop ecx  +
jnz loc_1017482  +
cmp word ptr [eax+esi*2] 20h +
jnb loc_10174B1  +
xor ecx ecx +
mov [eax+esi*2] cx +
test esi esi +
jnz loc_1017468  +
jmp loc_10174B4  +
mov eax [ebp+pv] +
dec esi  +
lea eax [eax+esi*2] +
movzx ecx word ptr [eax] +
cmp cx 20h +
jnb loc_10174A6  +
push 20h  +
pop ecx  +
mov [eax] cx +
jmp loc_10174B4  +
push ecx  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_10174B4  +
mov eax [ebp+pv] +
lea ebx [eax+esi*2] +
test esi esi +
jnz loc_101748E  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10174BD  +
sub eax edx +
sar eax 1 +
mov esi eax +
lea eax [esi+esi+2] +
push eax  +
call ds:CoTaskMemAlloc  +
mov edi eax +
test edi edi +
jz loc_101750B  +
push ebx  +
inc esi  +
push esi  +
push edi  +
call sub_1014A09  +
mov [ebp+var_14] eax +
test eax eax +
jl loc_101750B  +
mov eax [ebp+arg_18] +
mov [eax] edi +
mov eax [ebp+arg_1C] +
test eax eax +
jz loc_10174FF  +
mov ecx [ebp+arg_C] +
mov [eax] ecx +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_101750B  +
mov ecx [ebp+var_10] +
mov [eax] ecx +
cmp [ebp+hLibModule] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_101751D  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp [ebp+pv] 0 +
jz loc_101752C  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_14] +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_10]  +
xor ebx ebx +
push [ebp+arg_C]  +
mov edi ecx +
push [ebp+arg_8]  +
mov [ebp+var_8] ebx +
push [ebp+arg_4]  +
mov [ebp+var_C] ebx +
push [ebp+arg_0]  +
mov [ebp+var_4] ebx +
call sub_10172D4  +
mov esi eax +
cmp esi ebx +
mov ebx [ebp+var_C] +
jl loc_10175B0  +
cmp [ebp+var_4] 0 +
jnz loc_1017596  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
push ebx  +
push offset aSS0x08x  +
push edi  +
call sub_10172AE  +
add esp 14h +
jmp loc_10175AE  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
push ebx  +
push offset aSS0x08x0x08x  +
push edi  +
call sub_10172AE  +
add esp 18h +
mov esi eax +
test ebx ebx +
jz loc_10175BB  +
push ebx  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor eax eax +
push esi  +
mov ebx edx +
push edi  +
mov edi ecx +
mov [ebp+var_8] eax +
cmp ebx eax +
jz loc_1017655  +
cmp [ebp+arg_4] eax +
jz loc_1017655  +
cmp [ebp+arg_8] eax +
jz loc_1017655  +
mov esi [ebp+arg_0] +
cmp esi eax +
jz loc_101765C  +
mov eax [edi+4] +
lea edx [eax+esi+1] +
call sub_10171A6  +
mov [ebp+var_8] eax +
test eax eax +
jl loc_101765C  +
mov eax [edi+4] +
mov ecx [edi] +
lea eax [ecx+eax*2] +
mov [ebp+var_4] eax +
test ebx ebx +
jbe loc_1017648  +
mov esi [ebp+arg_8] +
mov eax [ebp+arg_4] +
sub eax esi +
mov [ebp+arg_4] eax +
mov [ebp+arg_8] ebx +
jmp loc_1017626  +
mov eax [ebp+arg_4] +
mov eax [eax+esi] +
lea ebx [eax+eax] +
push ebx  +
push dword ptr [esi]  +
push [ebp+var_4]  +
call memcpy  +
add [ebp+var_4] ebx +
add esp 0Ch +
add esi 4 +
dec [ebp+arg_8]  +
jnz loc_1017623  +
mov esi [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor eax eax +
mov [ecx] ax +
add [edi+4] esi +
jmp loc_101765C  +
mov [ebp+var_8] 80070057h +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebx  +
push esi  +
mov ebx edx +
mov esi ecx +
call sub_101700D  +
test ebx ebx +
jnz loc_1017683  +
mov edx 80070057h +
jmp loc_10176DB  +
push edi  +
mov edi ds:ExpandEnvironmentStringsW +
jmp loc_10176A5  +
mov ecx esi +
cmp edx [esi+8] +
jbe loc_10176D2  +
call sub_101700D  +
mov ecx esi +
call sub_10171A6  +
mov edx eax +
test edx edx +
jl loc_10176DA  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
push ebx  +
call edi  +
mov edx eax +
test edx edx +
jnz loc_101768C  +
call ds:GetLastError  +
test eax eax +
jle loc_10176C7  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx esi +
mov edx eax +
call sub_101700D  +
jmp loc_10176DA  +
dec edx  +
call sub_101705A  +
mov edx eax +
pop edi  +
pop esi  +
mov eax edx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F4h +
mov eax [ebp+arg_0] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov [ebp+var_14] eax +
mov eax [ebp+arg_18] +
push esi  +
push edi  +
mov [ebp+var_10] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_20] +
push 9  +
mov [ebp+var_4] ecx +
pop ecx  +
mov [ebp+var_8] eax +
xor ebx ebx +
xor eax eax +
lea edi [ebp+var_50] +
push 4Ch  +
mov [ebp+var_54] ebx +
stos   +
lea eax [ebp+var_F0] +
mov esi edx +
push ebx  +
push eax  +
mov [ebp+var_2C] esi +
mov [ebp+var_F4] ebx +
call memset  +
push 4Ch  +
lea eax [ebp+var_A0] +
push ebx  +
push eax  +
mov [ebp+var_A4] ebx +
call memset  +
add esp 18h +
push 5Ch  +
pop eax  +
mov word ptr [ebp+arg_4] ax +
xor eax eax +
mov [ebp+arg_0] ebx +
mov word ptr [ebp+arg_4+2] ax +
cmp esi ebx +
jnz loc_101778B  +
mov eax 80070057h +
jmp loc_1017877  +
xor ecx ecx +
mov eax [ebp+ecx+var_2C] +
cmp eax ebx +
jnz loc_1017799  +
xor eax eax +
jmp loc_10177AA  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101779C  +
sub eax esi +
sar eax 1 +
mov [ebp+ecx+var_54] eax +
add ecx 4 +
cmp ecx 28h +
jb loc_101778D  +
mov ecx [ebp+var_4] +
mov eax [ecx+4] +
xor edi edi +
cmp eax ebx +
jz loc_10177D2  +
mov ecx [ecx] +
xor edx edx +
cmp word ptr [ecx+eax*2-2] 5Ch +
setz dl  +
mov [ebp+arg_0] edx +
xor ecx ecx +
cmp eax ebx +
setz cl  +
xor esi esi +
mov eax ecx +
mov ecx [ebp+esi+var_2C] +
cmp [ebp+arg_0] ebx +
jz loc_10177F4  +
cmp word ptr [ecx] 5Ch +
jnz loc_10177F4  +
inc ecx  +
inc ecx  +
dec [ebp+esi+var_54]  +
jmp loc_1017819  +
cmp eax ebx +
jnz loc_1017819  +
cmp [ebp+arg_0] ebx +
jnz loc_1017819  +
cmp word ptr [ecx] 5Ch +
jz loc_1017819  +
lea eax [ebp+arg_4] +
mov [ebp+edi*4+var_F4] eax +
mov [ebp+edi*4+var_A4] 1 +
inc edi  +
mov eax [ebp+esi+var_54] +
xor edx edx +
mov [ebp+edi*4+var_A4] eax +
mov [ebp+edi*4+var_F4] ecx +
inc edi  +
cmp word ptr [ecx+eax*2-2] 5Ch +
setz dl  +
add esi 4 +
xor eax eax +
mov [ebp+arg_0] edx +
cmp esi 28h +
jnb loc_101784A  +
cmp [ebp+esi+var_54] ebx +
ja loc_10177DD  +
xor eax eax +
mov ecx ebx +
cmp edi ebx +
jbe loc_101785E  +
add ecx [ebp+eax*4+var_A4] +
inc eax  +
cmp eax edi +
jb loc_1017852  +
lea eax [ebp+var_F4] +
push eax  +
lea eax [ebp+var_A4] +
push eax  +
push ecx  +
mov ecx [ebp+var_4] +
mov edx edi +
call sub_10175C9  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
test edx edx +
jnz loc_1017894  +
mov eax 80070057h +
jmp locret_10178D6  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [edx+esi*2] +
mov eax edx +
cmp edx edi +
jnb loc_10178AE  +
cmp word ptr [eax] 0 +
jz loc_10178AE  +
inc eax  +
inc eax  +
cmp eax edi +
jb loc_10178A2  +
sub eax edx +
sar eax 1 +
cmp esi eax +
jz loc_10178BD  +
mov eax 80070057h +
jmp loc_10178D4  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] edx +
lea eax [ebp+var_4] +
push eax  +
xor edx edx +
push esi  +
inc edx  +
mov [ebp+var_4] esi +
call sub_10175C9  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
test edx edx +
jnz loc_10178F1  +
mov eax 80070057h +
leave   +
retn   +
push esi  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10178F8  +
mov [ebp+var_4] edx +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
sub eax edi +
sar eax 1 +
xor edx edx +
push eax  +
inc edx  +
mov [ebp+var_8] eax +
call sub_10175C9  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
test edx edx +
jz loc_1017987  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1017987  +
push ebx  +
mov eax edx +
push esi  +
lea ebx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1017941  +
sub eax ebx +
sar eax 1 +
mov esi eax +
mov [ebp+var_10] eax +
mov eax edi +
mov [ebp+var_8] edx +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
test bx bx +
jnz loc_101795C  +
sub eax edx +
lea edx [ebp+var_8] +
push edx  +
sar eax 1 +
lea edx [ebp+var_10] +
push edx  +
mov [ebp+var_C] eax +
add eax esi +
push eax  +
push 2  +
pop edx  +
mov [ebp+var_4] edi +
call sub_10175C9  +
pop esi  +
pop ebx  +
jmp loc_101798C  +
mov eax 80070057h +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
mov [ebp+var_4] ecx +
test edx edx +
jz loc_1017A1F  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1017A1F  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1017A1F  +
push ebx  +
mov eax edx +
push esi  +
lea ebx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10179BB  +
sub eax ebx +
sar eax 1 +
mov esi eax +
mov eax edi +
mov [ebp+var_10] edx +
mov [ebp+var_1C] esi +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
test bx bx +
jnz loc_10179D6  +
sub eax edx +
sar eax 1 +
add esi eax +
mov [ebp+var_18] eax +
mov eax ecx +
mov [ebp+var_C] edi +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_10179F1  +
mov [ebp+var_8] ecx +
sub eax edx +
lea ecx [ebp+var_10] +
push ecx  +
sar eax 1 +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_4] +
mov [ebp+var_14] eax +
add eax esi +
push eax  +
push 3  +
pop edx  +
call sub_10175C9  +
pop esi  +
pop ebx  +
jmp loc_1017A24  +
mov eax 80070057h +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+4] 0 +
jnz loc_1017A42  +
mov eax 800710DDh +
pop ebp  +
retn 24h  +
pop ebp  +
jmp loc_10176E5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ecx+4] +
xor eax eax +
test esi esi +
jz loc_1017A68  +
push edi  +
mov edi [ecx] +
cmp [edi+esi*2-2] dx +
pop edi  +
jz loc_1017A7A  +
mov word ptr [ebp+var_4] dx +
xor eax eax +
lea edx [ebp+var_4] +
mov word ptr [ebp+var_4+2] ax +
call sub_10178DF  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101700D  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1017883  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101700D  +
mov ecx esi +
pop esi  +
jmp sub_10178DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101700D  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1017926  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101700D  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_1017996  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+Buffer] 0 +
push esi  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
mov esi ecx +
push edx  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1017B36  +
call ds:GetLastError  +
test eax eax +
jle loc_1017B4C  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1017B4C  +
mov edx dword ptr [ebp+Buffer] +
test edx edx +
jnz loc_1017B44  +
mov eax 80004005h +
jmp loc_1017B4C  +
push eax  +
mov ecx esi +
call sub_1017A82  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
and [ebp+hMem] ebx +
push esi  +
mov [ebp+Arguments] edx +
mov esi ecx +
test edx edx +
jnz loc_1017B74  +
mov ebx 80070057h +
jmp loc_1017BBC  +
lea eax [ebp+Arguments] +
push eax  +
push 1  +
lea eax [ebp+hMem] +
push eax  +
push 0  +
push 0  +
push dword ptr [esi]  +
push 500h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_1017BAD  +
lea ecx [eax+1] +
cmp ecx eax +
jnb loc_1017BA1  +
mov ebx 80070216h +
jmp loc_1017BAD  +
mov edx [ebp+hMem] +
mov ecx esi +
call sub_1017AA3  +
mov ebx eax +
cmp [ebp+hMem] 0 +
jz loc_1017BBC  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+uID]  +
mov edx [ebp+hInstance] +
mov ecx [ebp+arg_0] +
call sub_1017AFF  +
mov edx eax +
test edx edx +
jl loc_1017BF1  +
mov ecx [ebp+arg_0] +
lea edx [ebp+arg_C] +
call sub_1017B56  +
mov edx eax +
test edx edx +
jge loc_1017BF9  +
mov ecx [ebp+arg_0] +
call sub_101700D  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push esi  +
call ds:SetLastError  +
push [ebp+lpString]  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call ds:SetDlgItemTextW  +
test eax eax +
jnz loc_1017C5D  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1017C5B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:MessageBoxW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 0ABh  +
push offset aSafegetdlgitem  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
push 0  +
call ds:SetLastError  +
push [ebp+nMaxCount]  +
push [ebp+lpString]  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call ds:GetDlgItemTextW  +
test eax eax +
jnz loc_1017CE4  +
call ds:GetLastError  +
test eax eax +
jle loc_1017CCB  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_24] eax +
test eax eax +
mov eax 0B3h +
jge loc_1017CE0  +
mov [ebp+var_1E] ax +
mov [ebp+var_1C] esi +
jmp loc_1017CE4  +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push 1  +
push 0D9h  +
push offset aSafesetwindowl  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
xor esi esi +
mov eax 0DEh +
cmp [ebp+hWnd] esi +
jnz loc_1017D31  +
mov [ebp+var_24] 80070057h +
mov [ebp+var_1E] ax +
jmp loc_1017D78  +
push esi  +
mov [ebp+var_24] esi +
mov [ebp+var_20] ax +
call ds:SetLastError  +
push [ebp+dwNewLong]  +
push [ebp+nIndex]  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
test eax eax +
jnz loc_1017D78  +
call ds:GetLastError  +
cmp eax esi +
jz loc_1017D78  +
jle loc_1017D68  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_24] eax +
cmp eax esi +
mov eax 0E7h +
jl loc_1017D2B  +
mov [ebp+var_20] ax +
mov esi [ebp+var_24] +
lea ecx [ebp+var_24] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push 1  +
push 37Eh  +
push offset aSxshowluamessa  +
lea ecx [ebp+var_24] +
call sub_10148A2  +
movzx eax [ebp+arg_10] +
push 0  +
push 0FFFEh  +
push 20h  +
push eax  +
movzx eax [ebp+arg_C] +
push eax  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:COMCTL32_344  +
mov [ebp+var_24] eax +
mov ecx 387h +
test eax eax +
jge loc_1017DE1  +
mov [ebp+var_1E] cx +
jmp loc_1017DE5  +
mov [ebp+var_20] cx +
push esi  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_1014AA3  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push 1  +
push 68h  +
push offset aSafesetdlgitem  +
lea ecx [ebp+var_30] +
call sub_10148A2  +
mov ebx [ebp+arg_8] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
mov [ebp+lpString] offset dword_10032B8 +
test ebx ebx +
jnz loc_1017E40  +
push 6Dh  +
mov [ebp+var_30] 80070057h +
pop eax  +
mov [ebp+var_2A] ax +
jmp loc_1017EF9  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1017E45  +
and [ebp+var_30] 0 +
sub eax edx +
push 75h  +
pop ecx  +
sar eax 1 +
mov [ebp+var_2C] cx +
lea edx [eax+1] +
lea ecx [ebp+lpString] +
call sub_10171A6  +
push 76h  +
mov [ebp+var_30] eax +
test eax eax +
pop eax  +
jl loc_1017E37  +
mov [ebp+var_2C] ax +
mov eax [ebp+var_4] +
inc eax  +
push eax  +
push [ebp+lpString]  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call sub_1017C7A  +
mov edx [ebp+var_4] +
lea ecx [ebp+lpString] +
mov esi eax +
call sub_1017024  +
test esi esi +
jl loc_1017ED9  +
mov eax [ebp+lpString] +
mov ecx ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1017EC6  +
test dx dx +
jz loc_1017EC2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1017EC6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1017EA0  +
xor eax eax +
jmp loc_1017ECB  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1017ED9  +
and [ebp+var_30] eax +
mov eax 84h +
jmp loc_1017EF5  +
push ebx  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call sub_1017C25  +
mov [ebp+var_30] eax +
test eax eax +
mov eax 88h +
jl loc_1017E37  +
mov [ebp+var_2C] ax +
mov esi [ebp+var_30] +
lea ecx [ebp+lpString] +
call sub_1016FE9  +
lea ecx [ebp+var_30] +
call sub_1014AA3  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
outs   +
imul esi fs:[edx+65h] +
retf   +
***
arpl [ebp+0] sp +
retf   +
***
