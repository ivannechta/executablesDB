dec esi  +
retf 4A5Bh  +
***
add byte ptr ds:?messageMap@CWinApp@@1UAFX_MSGMAP@@B[ecx] ah +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
mov [ebp-10h] ebx +
mov dword ptr [ebx] offset off_100161C +
and dword ptr [ebp-4] 0 +
mov esi ds:__iob_func +
call esi  +
mov edi ds:fflush +
add eax 20h +
push eax  +
call edi  +
call esi  +
add eax 40h +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
push uExitCode  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx ebx +
call ??1CWinApp@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100491B  +
test byte ptr [ebp+8] 1 +
jz loc_1004A15  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1004A37  +
cmp ecx 7FFFFFFFh +
jbe loc_1004A3C  +
mov eax 80070057h +
test eax eax +
jl loc_1004A79  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1004A69  +
cmp eax esi +
ja loc_1004A69  +
jnz loc_1004A74  +
jmp loc_1004A6E  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
xor ebx ebx +
push ebx  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push ebx  +
call ds:HeapSetInformation  +
mov uExitCode ebx +
call sub_1009F8F  +
cmp eax esi +
jz loc_1004AB8  +
mov eax esi +
mov uExitCode eax +
jmp loc_1004B8C  +
mov eax ds:__argc +
cmp [eax] esi +
jle loc_1004B1E  +
mov esi ds:_wsetlocale +
push offset a_ocp  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
call ds:GetConsoleOutputCP  +
push eax  +
push offset a_U  +
push 20h  +
mov edi offset word_1017578 +
push edi  +
call sub_1004A21  +
push edi  +
push 2  +
call esi  +
add esp 18h +
push ebx  +
push ebx  +
push 100h  +
call ds:SetThreadPreferredUILanguages  +
mov eax ds:__wargv +
mov dword_1017DD8 1 +
push dword ptr [eax]  +
mov eax ds:__argc +
push dword ptr [eax]  +
call sub_1005D73  +
jmp loc_1004AAE  +
call ds:FreeConsole  +
push ebx  +
call ?AfxEnableControlContainer@@YAXPAVCOccManager@@@Z  +
pop ecx  +
push 0Fh  +
call ds:GetSysColorBrush  +
push 11B8h  +
mov dword_1017DDC eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1004B56  +
call sub_101105D  +
jmp loc_1004B58  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_1017780 eax +
cmp eax ebx +
jz loc_1004B87  +
mov [edi+20h] eax +
mov ecx dword_1017780 +
mov eax [ecx] +
call dword ptr [eax+0C0h]  +
mov eax dword_1017DE8 +
neg eax  +
sbb eax eax +
and eax 2 +
jmp loc_1004AAE  +
mov eax uExitCode +
push eax  +
call ds:exit  +
***
mov eax offset off_10016D4 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001744 +
mov dword ptr [ebp-4] 3 +
lea ecx [esi+124h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0E4h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0A4h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 94h +
pop ebp  +
jmp ?LoadStringW@CString@@QAEHI@Z  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
mov ecx dword_1017798 +
add ecx 40h +
call sub_100D45F  +
cmp dword ptr [esi+98h] 0 +
mov ecx [ebp+0Ch] +
pop esi  +
jnz loc_1004C72  +
add eax 4 +
jmp loc_1004C75  +
add eax 1Ch +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
call ?OnWizardFinish@CPropertyPage@@UAEHXZ  +
mov ecx dword_1017798 +
jmp sub_100DBB2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
call ds:EnableWindow  +
retn   +
***
call ds:EnableWindow  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1001844 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CStatic@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1004D2C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_100190C +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CButton@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1004D83  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 470h  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_10019D4 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CListCtrl@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1004DFB  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 1004h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 104Ch  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 104Dh  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push 1009h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 1061h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 1030h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 1036h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push 1037h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Dh  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_1001744 +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0A4h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0E4h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+124h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 4 +
mov [esi+90h] edi +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1004BA4  +
test byte ptr [ebp+8] 1 +
jz loc_1004F9B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+0A4h] +
push eax  +
push 402h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+0E4h] +
push eax  +
push 3F8h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 124h +
push esi  +
push 3F7h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push 6Fh  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 70h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+144h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-54h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
add esp 0Ch +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
mov dword ptr [ebp-54h] 0Fh +
mov [ebp-50h] ebx +
mov [ebp-40h] ebx +
fmul  ds:dbl_1001AA0 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-14h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 124h +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_10050B0  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_10050B8  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov dword ptr [ebp-40h] 1 +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
fmul  ds:dbl_1001A98 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1005109  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1005111  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
mov edi ecx +
call memset  +
mov ebx [ebp+arg_4] +
lea esi [ebx+4] +
mov eax [esi] +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
mov ecx esi +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_10051E4  +
mov eax [ebp+arg_0] +
add edi 124h +
mov ecx edi +
mov [ebp+lParam] 5 +
mov [ebp+var_1C] eax +
call sub_1004E07  +
and [ebp+var_34] 0 +
mov [ebp+var_38] eax +
lea eax [ebp+lParam] +
push eax  +
mov ecx edi +
call sub_1004E40  +
push 0FFFFFFFFh  +
mov ecx esi +
mov [ebp+arg_4] eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
cmp [ebp+arg_4] 0 +
jl loc_10051E4  +
lea esi [ebx+24h] +
mov eax [esi] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx esi +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_10051E4  +
mov ecx [ebp+arg_4] +
xor eax eax +
inc eax  +
mov [ebp+lParam] eax +
mov [ebp+var_34] eax +
lea eax [ebp+lParam] +
mov [ebp+var_38] ecx +
push eax  +
mov ecx edi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
mov ecx esi +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
mov edi eax +
cmp [esi+98h] ebx +
jnz loc_100525E  +
cmp [esi+9Ch] ebx +
jmp loc_1005264  +
cmp [esi+0A0h] ebx +
jz loc_1005268  +
neg edi  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+124h] +
mov ecx edi +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ecx esi +
call sub_1004FF5  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 164h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_10052ED  +
call sub_1004EF6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi dword_1017798 +
push edi  +
mov edi ecx +
lea ecx [edi+124h] +
add esi 40h +
call sub_1004E61  +
mov ebx [esi+8] +
and [ebp+var_4] 0 +
test ebx ebx +
jle loc_100535C  +
push [ebp+var_4]  +
mov ecx esi +
call sub_100D45F  +
mov ecx dword_1017798 +
push eax  +
add ecx 38h +
mov [ebp+var_8] eax +
call sub_100CBCC  +
test eax eax +
jz loc_1005354  +
push [ebp+var_8]  +
mov ecx edi +
push [ebp+var_4]  +
call sub_1005133  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_1005327  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ecx  +
push offset byte_10051F0  +
add ecx 124h +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+94h]  +
lea ecx [esi+0E4h] +
call ?SetWindowTextW@CWnd@@QAEXPBG@Z  +
mov ecx esi +
call sub_10052FC  +
mov ecx esi +
call sub_1005366  +
lea edi [esi+124h] +
mov ecx edi +
call sub_1004E07  +
cmp eax 1 +
jge loc_10053BB  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
mov ecx [esi+90h] +
push 5  +
call sub_1004D8F  +
push 8Ch  +
lea eax [esi+0A4h] +
push eax  +
call sub_100AA16  +
pop edi  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_1005414  +
cmp [ecx+98h] eax +
jnz loc_100542C  +
lea eax [ecx+0A0h] +
jmp loc_1005423  +
cmp dword ptr [ecx+98h] 0 +
jnz loc_100542C  +
lea eax [ecx+9Ch] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+98h] eax +
call sub_1005366  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push offset a6_1_7600_16385  +
push 191h  +
call sub_100AF60  +
push offset aCopyrightCMicr  +
call ds:puts  +
add esp 0Ch +
mov esi 193h +
push esi  +
call sub_100A57F  +
inc esi  +
pop ecx  +
cmp esi 1C9h +
jbe loc_100546F  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp [ebp+arg_0] 2 +
push esi  +
mov esi [ebp+arg_4] +
jnz loc_10054D1  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 0A1h  +
call sub_100A0F0  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [esi+4]  +
call ds:_wcsicmp  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_10C] 0 +
and dword ptr [ebp+var_108] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi 2 +
jl loc_100563C  +
push ebx  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 0A2h  +
mov [ebp+dwMilliseconds] 7530h +
call sub_100A0F0  +
push 40h  +
lea eax [ebp+var_84] +
push eax  +
push 0A3h  +
call sub_100A0F0  +
xor ebx ebx +
inc ebx  +
dec edi  +
cmp edi ebx +
mov [ebp+var_114] edi +
jle loc_100563B  +
mov edi ds:_wcsicmp +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [esi+ebx*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100558A  +
mov eax [esi+ebx*4+4] +
mov [ebp+var_10C] 1 +
mov dword ptr [ebp+var_108] eax +
jmp loc_10055B3  +
lea eax [ebp+var_84] +
push eax  +
push dword ptr [esi+ebx*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10055B3  +
push dword ptr [esi+ebx*4+4]  +
call ds:_wtoi  +
imul eax eax +
pop ecx  +
mov [ebp+dwMilliseconds] eax +
inc ebx  +
cmp ebx [ebp+var_114] +
jl loc_1005562  +
cmp [ebp+var_10C] 1 +
jnz loc_100563B  +
mov edi ds:_wfopen +
mov ebx offset aA +
jmp loc_1005618  +
push esi  +
call sub_100C06B  +
test eax eax +
jnz loc_10055EE  +
push dword ptr [ebp+var_108]  +
push 0C3h  +
call sub_100AF60  +
pop ecx  +
pop ecx  +
push esi  +
call ds:fflush  +
mov [esp+124h+var_124] offset asc_1001AF4 +
push esi  +
call sub_100B8BF  +
push esi  +
call ds:fclose  +
add esp 0Ch +
push [ebp+dwMilliseconds]  +
call ds:Sleep  +
push ebx  +
push dword ptr [ebp+var_108]  +
call edi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_10055D2  +
push dword ptr [ebp+var_108]  +
push 0C2h  +
call sub_100AF60  +
pop ecx  +
pop ecx  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_10C] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 0DCh  +
xor edi edi +
call sub_100A0F0  +
cmp [ebp+arg_0] 2 +
jnz loc_10056B2  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [esi+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10056B2  +
inc edi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100C06B  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 12Eh  +
xor edi edi +
call sub_100A0F0  +
cmp [ebp+arg_0] 2 +
jnz loc_100571A  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [esi+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100571A  +
inc edi  +
call sub_100C72B  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
xor edi edi +
push eax  +
mov [esi] edi +
call ds:RtlInitUnicodeString  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlUnicodeStringToInteger  +
test eax eax +
jl loc_100575F  +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jl loc_1005787  +
cmp eax [ecx+8] +
jge loc_1005787  +
mov ecx [ecx+4] +
lea eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
call MFC42u_6928  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+8] +
push esi  +
call ?SetAtGrow@CStringArray@@QAEXHPBG@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+8] +
push esi  +
call MFC42u_6874  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
movsx ax byte ptr [ebp+10h] +
and dword ptr [ebp-10h] 0 +
movzx eax ax +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@ABV0@G@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 1 +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
movsx ax byte ptr [ebp+0Ch] +
push dword ptr [ebp+10h]  +
and dword ptr [ebp-10h] 0 +
movzx eax ax +
push eax  +
push dword ptr [ebp+8]  +
call ??H@YG?AVCString@@GABV0@@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 1 +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ?TrimRight@CString@@QAEXXZ  +
mov ecx esi +
call ?TrimLeft@CString@@QAEXXZ  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] 2 +
push edi  +
mov edi [ebp+arg_4] +
jl loc_10058E2  +
push esi  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 0A0h  +
call sub_100A0F0  +
mov esi ds:_wcsicmp +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10058D9  +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 164h  +
call sub_100A0F0  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10058E1  +
xor ebx ebx +
inc ebx  +
call sub_100544A  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov ecx [ebp+18h] +
mov esi [ebp+10h] +
mov ebx [ebp+14h] +
mov [ebp-448h] eax +
mov eax [ebp+1Ch] +
mov [ebp-41Ch] eax +
mov eax [ebp+20h] +
mov [ebp-418h] eax +
mov eax [ebp+24h] +
mov [ebp-444h] eax +
mov eax [ebp+28h] +
mov [ebp-440h] eax +
mov eax [ebp+2Ch] +
mov [ebp-43Ch] eax +
mov eax [ebp+30h] +
mov [ebp-424h] eax +
mov eax [ebp+34h] +
mov [ebp-42Ch] eax +
mov eax [ebp+38h] +
push 0FFFFFFFFh  +
xor edi edi +
push edi  +
mov [ebp-428h] esi +
mov [ebp-430h] ebx +
mov [ebp-414h] ecx +
mov [ebp-434h] eax +
call ?SetSize@CStringArray@@QAEXHH@Z  +
mov eax [ebp-41Ch] +
mov ecx [ebp-424h] +
mov [ebx] edi +
mov [esi] edi +
mov [eax] edi +
mov eax [ebp-418h] +
mov [eax] edi +
mov eax [ebp-440h] +
mov [eax] edi +
mov eax [ebp-43Ch] +
mov [eax] edi +
call ?Empty@CString@@QAEXXZ  +
mov ecx [ebp-42Ch] +
call ?Empty@CString@@QAEXXZ  +
mov eax [ebp-434h] +
push 40h  +
pop esi  +
mov [eax] edi +
push esi  +
lea eax [ebp-390h] +
push eax  +
push 0DDh  +
xor ebx ebx +
call sub_100A0F0  +
push esi  +
lea eax [ebp-210h] +
push eax  +
push 0DEh  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-110h] +
push eax  +
push 0DFh  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-310h] +
push eax  +
push 0E0h  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-410h] +
push eax  +
push 0E1h  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-290h] +
push eax  +
push 0E2h  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-90h] +
push eax  +
push 10Dh  +
call sub_100A0F0  +
push esi  +
lea eax [ebp-190h] +
push eax  +
push 14Ah  +
call sub_100A0F0  +
xor eax eax +
inc eax  +
cmp [ebp+8] eax +
mov [ebp-420h] eax +
jle loc_1005D51  +
mov eax [ebp-448h] +
mov ecx [ebp-420h] +
lea esi [eax+ecx*4] +
lea eax [ebp-390h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005A93  +
xor ebx ebx +
inc ebx  +
jmp loc_1005D3C  +
lea eax [ebp-90h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005ABD  +
call sub_100A27B  +
mov ecx [ebp-428h] +
mov [ecx] eax +
mov eax [ebp-430h] +
jmp loc_1005AD8  +
lea eax [ebp-110h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005AE3  +
mov eax [ebp-418h] +
mov dword ptr [eax] 1 +
jmp loc_1005D2A  +
lea eax [ebp-210h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005B63  +
mov eax [ebp-418h] +
cmp [eax] edi +
jnz loc_1005B52  +
mov ecx [ebp-414h] +
push 0FFFFFFFFh  +
push edi  +
call ?SetSize@CStringArray@@QAEXHH@Z  +
xor esi esi +
inc esi  +
push esi  +
push 2Ah  +
lea ecx [ebp-438h] +
call ??0CString@@QAE@GH@Z  +
mov [ebp-4] edi +
mov ecx [ebp-414h] +
lea eax [ebp-438h] +
push eax  +
call sub_10057B0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-438h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-41Ch] +
mov [eax] esi +
jmp loc_1005D2A  +
push dword ptr [esi]  +
push 14Bh  +
call sub_100AEC8  +
jmp loc_1005D28  +
lea eax [ebp-310h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005B9B  +
mov eax [ebp-418h] +
cmp [eax] edi +
jnz loc_1005D2E  +
mov ecx [ebp-414h] +
push 0FFFFFFFFh  +
push edi  +
call ?SetSize@CStringArray@@QAEXHH@Z  +
push 2  +
jmp loc_1005CF4  +
lea eax [ebp-410h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005BCC  +
mov eax [ebp-418h] +
cmp [eax] edi +
jz loc_1005D2E  +
mov eax [ebp-444h] +
mov dword ptr [eax] 1 +
jmp loc_1005B86  +
lea eax [ebp-290h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005BF9  +
mov eax [ebp-418h] +
cmp [eax] edi +
jz loc_1005D2E  +
mov eax [ebp-444h] +
mov [eax] edi +
jmp loc_1005B86  +
lea eax [ebp-190h] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1005C21  +
mov eax [ebp-440h] +
mov dword ptr [eax] 1 +
push 3  +
jmp loc_1005CF4  +
cmp ebx 2 +
jnz loc_1005C44  +
push dword ptr [esi]  +
mov ecx [ebp-414h] +
call sub_1005792  +
mov eax [ebp-41Ch] +
mov dword ptr [eax] 1 +
jmp loc_1005D3C  +
cmp ebx 1 +
jnz loc_1005C76  +
push dword ptr [ebp-428h]  +
push dword ptr [esi]  +
call sub_1005731  +
mov ecx [ebp-430h] +
mov [ecx] eax +
cmp eax edi +
jz loc_1005D2A  +
push dword ptr [ebp-428h]  +
call sub_100A45C  +
jmp loc_1005D2A  +
cmp ebx 3 +
jnz loc_1005CB4  +
mov ebx [ebp-43Ch] +
push ebx  +
push dword ptr [esi]  +
call sub_1005731  +
test eax eax +
jz loc_1005C9F  +
mov eax [ebx] +
cmp eax 1 +
jb loc_1005C9F  +
cmp eax 2710h +
ja loc_1005C9F  +
push 4  +
jmp loc_1005CF4  +
push dword ptr [esi]  +
push 14Bh  +
call sub_100AEC8  +
mov [ebx] edi +
xor ebx ebx +
jmp loc_1005D3A  +
cmp ebx 4 +
jnz loc_1005CD5  +
push dword ptr [esi]  +
mov ecx [ebp-424h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx [ebp-424h] +
call sub_100584C  +
push 5  +
jmp loc_1005CF4  +
cmp ebx 5 +
jnz loc_1005CF7  +
push dword ptr [esi]  +
mov ecx [ebp-42Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx [ebp-42Ch] +
call sub_100584C  +
push 6  +
pop ebx  +
jmp loc_1005D3C  +
cmp ebx 6 +
jnz loc_1005D2E  +
mov ebx [ebp-434h] +
push ebx  +
push dword ptr [esi]  +
call sub_1005731  +
test eax eax +
jz loc_1005D1A  +
mov eax [ebx] +
cmp eax 1 +
jb loc_1005D1A  +
cmp eax 3Ch +
jbe loc_1005D2A  +
push dword ptr [esi]  +
push 14Bh  +
call sub_100AEC8  +
mov [ebx] edi +
pop ecx  +
pop ecx  +
xor ebx ebx +
jmp loc_1005D3C  +
push dword ptr [esi]  +
push 14Bh  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
inc dword ptr [ebp-420h]  +
mov eax [ebp-420h] +
cmp eax [ebp+8] +
jl loc_1005A67  +
mov eax [ebp-41Ch] +
cmp [eax] edi +
jz loc_1005D66  +
push dword ptr [ebp-414h]  +
call sub_100BA90  +
call sub_10121F9  +
retn 34h  +
***
call __EH_prolog3  +
lea ecx [ebp-4Ch] +
call ??0CStringArray@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
mov esi [ebp+0Ch] +
mov edi [ebp+8] +
push esi  +
push edi  +
mov [ebp-28h] ebx +
call sub_1005866  +
cmp eax 1 +
jz loc_1005E0A  +
push esi  +
push edi  +
call sub_1005486  +
cmp eax 1 +
jnz loc_1005E59  +
call sub_100BE9D  +
test eax eax +
jz loc_1005E50  +
cmp dword_1017DE8 ebx +
jz loc_1005DFC  +
mov dword ptr [ebp-28h] 2 +
push 0FFh  +
jmp loc_1005E04  +
mov [ebp-28h] ebx +
push 0EFh  +
call sub_100A5C7  +
pop ecx  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-4Ch] +
call ??1CStringArray@@UAE@XZ  +
mov eax [ebp-28h] +
call __EH_epilog3  +
retn 8  +
mov dword ptr [ebp-28h] 1 +
jmp loc_1005E0A  +
push esi  +
push edi  +
call sub_10054E5  +
cmp eax 1 +
jz loc_1005E0A  +
push esi  +
push edi  +
call sub_1005657  +
cmp eax 1 +
jz loc_1005E0A  +
push esi  +
push edi  +
call sub_10056C9  +
cmp eax 1 +
jz loc_1005E0A  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push esi  +
push edi  +
mov [ebp+0Ch] ebx +
mov [ebp+8] ebx +
mov [ebp-24h] ebx +
mov [ebp-2Ch] ebx +
call sub_10058F9  +
cmp [ebp-2Ch] ebx +
jz loc_1005ED6  +
cmp [ebp-24h] ebx +
jnz loc_1005ED6  +
lea eax [ebp-18h] +
push eax  +
call sub_100A47B  +
mov dword ptr [ebp+0Ch] 1 +
cmp [ebp+0Ch] ebx +
jnz loc_1005F07  +
cmp [ebp+8] ebx +
jnz loc_1005F07  +
cmp [ebp-24h] ebx +
jz loc_10060A9  +
cmp [ebp-2Ch] ebx +
jz loc_10060A9  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-30h]  +
call sub_100C64A  +
jmp loc_1005E0A  +
cmp [ebp-24h] ebx +
jz loc_1005F3F  +
cmp [ebp+0Ch] ebx +
jz loc_1005F19  +
push dword ptr [ebp-18h]  +
call sub_100C3F2  +
cmp [ebp-44h] ebx +
jle loc_1005E0A  +
lea eax [ebp-4Ch] +
push eax  +
cmp [ebp-38h] ebx +
jz loc_1005F35  +
call sub_100CA33  +
jmp loc_1005E0A  +
call sub_100CAB5  +
jmp loc_1005E0A  +
push dword_1017784  +
push offset dword_101778C  +
push dword_1017790  +
push offset dword_1017794  +
call sub_100BDE7  +
cmp [ebp+8] ebx +
jz loc_1006009  +
mov edi [ebp-44h] +
xor esi esi +
cmp edi ebx +
jle loc_1006009  +
mov eax [ebp-14h] +
cmp [eax-8] ebx +
jle loc_1005F82  +
push 20h  +
lea ecx [ebp-14h] +
call ??YCString@@QAEABV0@G@Z  +
push esi  +
lea ecx [ebp-4Ch] +
call loc_100576C  +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push 20h  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHG@Z  +
cmp eax ebx +
jge loc_1005FB0  +
push 9  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHG@Z  +
cmp eax ebx +
jl loc_1005FF4  +
lea eax [ebp-10h] +
push eax  +
push 22h  +
lea eax [ebp-2Ch] +
push eax  +
call sub_100580D  +
mov byte ptr [ebp-4] 5 +
push 22h  +
push eax  +
lea eax [ebp-38h] +
push eax  +
call sub_10057CE  +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-38h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-2Ch] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-14h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc esi  +
cmp esi edi +
jl loc_1005F70  +
push offset asc_1001B08  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
neg eax  +
sbb eax eax +
pop ecx  +
inc eax  +
pop ecx  +
cmp [ebp+8] ebx +
jz loc_1006057  +
cmp eax ebx +
jz loc_1006031  +
cmp dword_1017794 ebx +
jz loc_1006067  +
jmp loc_1006057  +
push dword_1017790  +
lea eax [ebp-14h] +
push ecx  +
mov ecx esp +
mov [ebp-38h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 7 +
mov byte ptr [ebp-4] 4 +
call sub_100B24D  +
cmp eax ebx +
jnz loc_1006067  +
cmp [ebp+0Ch] ebx +
jz loc_1006079  +
mov eax [ebp-18h] +
cmp eax dword_101778C +
jz loc_1006079  +
push dword ptr [ebp-18h]  +
lea eax [ebp-14h] +
push dword ptr [ebp+0Ch]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100C98B  +
push dword ptr [ebp-34h]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-18h]  +
call sub_100A48F  +
test eax eax +
jz loc_10060A9  +
push dword ptr [ebp-34h]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-18h]  +
call sub_100BF3B  +
cmp dword_1017DE8 ebx +
jz loc_1005DFF  +
push 130h  +
call sub_100A5C7  +
pop ecx  +
call sub_100C72B  +
push offset asc_1001B04  +
call ds:_putws  +
push 0FFh  +
call sub_100A5C7  +
pop ecx  +
jmp loc_1005E09  +
***
mov eax offset off_1001B10 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001B8C +
mov dword ptr [ebp-4] 4 +
lea ecx [esi+194h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+154h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+114h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0D4h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call ??1CStatic@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
push edi  +
lea ecx [esi+0D4h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+114h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+154h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+194h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
push 1  +
mov esi ecx +
or edi 0FFFFFFFFh +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax 1 +
jnz loc_100628C  +
xor ecx ecx +
cmp [esi+1E8h] ecx +
jnz loc_100627B  +
mov eax [esi+1D4h] +
cmp eax ecx +
jnz loc_100621B  +
cmp [esi+1E4h] ecx +
jnz loc_100621B  +
cmp [esi+1D8h] ecx +
jnz loc_100621B  +
cmp [esi+1DCh] ecx +
jnz loc_100621B  +
push 69h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100628C  +
mov ecx dword_1017798 +
push eax  +
add ecx 4 +
call sub_100CC63  +
mov ecx dword_1017798 +
push dword ptr [esi+1E4h]  +
add ecx 4 +
call sub_100CC91  +
mov ecx dword_1017798 +
push dword ptr [esi+1D8h]  +
add ecx 4 +
call sub_100CCAA  +
mov ecx dword_1017798 +
push dword ptr [esi+1DCh]  +
add ecx 4 +
call sub_100CCCE  +
mov edi [esi+1E4h] +
neg edi  +
sbb edi edi +
and edi 7 +
add edi 25Eh +
jmp loc_1006280  +
mov edi 25Bh +
mov eax dword_1017798 +
mov dword ptr [eax+8] 2 +
push edi  +
mov ecx esi +
call sub_1009D2B  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
xor eax eax +
push esi  +
mov esi ecx +
mov [esi+1E8h] eax +
mov dword ptr [esi+1D4h] 1 +
mov [esi+1E4h] eax +
mov [esi+1D8h] eax +
mov [esi+1DCh] eax +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push 8Eh  +
add esi 94h +
push esi  +
call sub_100AA16  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 260h  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_1001B8C +
call sub_1004CE1  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0D4h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+114h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+154h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+194h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 5 +
or dword ptr [esi+1E8h] 0FFFFFFFFh +
mov [esi+1D4h] edi +
mov [esi+1D8h] edi +
mov [esi+1DCh] edi +
mov [esi+1E4h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10060F0  +
test byte ptr [ebp+8] 1 +
jz loc_10063E8  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
lea eax [esi+94h] +
push eax  +
push 404h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+0D4h] +
push eax  +
push 3F0h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+114h] +
push eax  +
push 3F2h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+154h] +
push eax  +
push 431h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+194h] +
push eax  +
mov ebx 432h +
push ebx  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+1D4h] +
push eax  +
push 3F0h  +
push edi  +
call ?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+1D8h] +
push eax  +
push 431h  +
push edi  +
call ?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+1DCh] +
push eax  +
push ebx  +
push edi  +
call ?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+1E4h] +
push eax  +
push 3F2h  +
push edi  +
call ?DDX_Check@@YGXPAVCDataExchange@@HAAH@Z  +
add esi 1E8h +
push esi  +
push 3FEh  +
push edi  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 1ECh  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_10064E8  +
call sub_100632D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov eax offset off_1001C88 +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
lea edi [ebx+0F4h] +
mov ecx edi +
call sub_100D45F  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
mov esi eax +
call sub_100D45F  +
mov edi [esi+8] +
mov ecx edi +
sub ecx [esi+0Ch] +
mov esi [eax+8] +
mov edx esi +
sub edx [eax+0Ch] +
cmp ecx edx +
jnz loc_1006559  +
cmp esi edi +
jnz loc_1006550  +
xor eax eax +
jmp loc_1006564  +
sbb eax eax +
and eax 4 +
dec eax  +
dec eax  +
jmp loc_1006564  +
xor eax eax +
cmp ecx edx +
setnle al  +
lea eax [eax+eax-1] +
cmp dword ptr [ebx+110h] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1006572  +
neg eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_10065E7  +
jmp ds:off_10065EF[eax*4]  +
mov eax [ecx+98h] +
jmp loc_10065E9  +
mov eax [ecx+9Ch] +
jmp loc_10065E9  +
mov eax [ecx+0A0h] +
jmp loc_10065E9  +
mov eax [ecx+0A4h] +
jmp loc_10065E9  +
mov eax [ecx+0A8h] +
jmp loc_10065E9  +
mov eax [ecx+0ACh] +
jmp loc_10065E9  +
mov eax [ecx+0B4h] +
jmp loc_10065E9  +
mov eax [ecx+0B8h] +
jmp loc_10065E9  +
mov eax [ecx+0B0h] +
jmp loc_10065E9  +
mov eax [ecx+0BCh] +
jmp loc_10065E9  +
mov eax [ecx+0C0h] +
jmp loc_10065E9  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
mov ecx [ebp+10h] +
call sub_100657B  +
push dword ptr [ebp+0Ch]  +
mov edx eax +
call sub_100657B  +
cmp edx eax +
jnz loc_1006642  +
xor eax eax +
jmp loc_100664D  +
xor eax eax +
test edx edx +
setnz al  +
lea eax [eax+eax-1] +
cmp dword ptr [ecx+118h] 0 +
jz loc_1006658  +
neg eax  +
pop ebp  +
retn 0Ch  +
***
mov eax 261h +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea ecx [esi+60h] +
call ??1CListCtrl@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CDialog@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CDialog@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 1001h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 104Bh  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 1008h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 1053h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 1026h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 102Ch  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea ecx [esi+60h] +
call sub_100DCEA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D84 +
mov dword ptr [ebp-4] 3 +
lea ecx [esi+1A8h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+168h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+128h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call sub_10067A0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebx] edi +
jnz loc_10068B7  +
lea eax [esi+94h] +
push eax  +
call sub_100B67A  +
cmp eax 1 +
jnz loc_1006875  +
cmp [esi+0FCh] edi +
jnz loc_10068B7  +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
mov [esi+0A4h] edi +
mov [esi+0A8h] edi +
mov [esi+0ACh] edi +
mov [esi+0B0h] edi +
mov [esi+0B4h] edi +
mov [esi+0B8h] edi +
mov [esi+0BCh] edi +
mov [esi+0C0h] edi +
lea eax [esi+128h] +
push eax  +
push 412h  +
push ebx  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+168h] +
push eax  +
push 405h  +
push ebx  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 1A8h +
push esi  +
push 408h  +
push ebx  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push 7Ch  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 97h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+1C8h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-54h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
add esp 0Ch +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
mov dword ptr [ebp-54h] 0Fh +
mov [ebp-50h] ebx +
mov [ebp-40h] ebx +
fmul  ds:dbl_1001E88 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-14h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 1A8h +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_10069B7  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_10069BF  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov dword ptr [ebp-40h] 1 +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
fmul  ds:dbl_1001E80 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1006A10  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006A18  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
lea ecx [esi+0F4h] +
call sub_100D45F  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_1006A70  +
push 98h  +
jmp loc_1006A89  +
mov eax [eax+0Ch] +
cmp ecx eax +
jnz loc_1006A7E  +
push 99h  +
jmp loc_1006A89  +
jbe loc_1006A87  +
push 9Ah  +
jmp loc_1006A89  +
push 75h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+8] +
xor eax eax +
inc eax  +
mov [ebp-4Ch] eax +
mov [ebp-44h] eax +
mov eax [ebp-10h] +
mov [ebp-48h] ecx +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
lea eax [ebp-4Ch] +
lea ecx [esi+1A8h] +
push eax  +
jz loc_1006AE2  +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006AEE  +
mov dword ptr [ebp-38h] offset unk_1017DEC +
call sub_1004E1F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
push dword ptr [ebp+8]  +
lea edi [esi+0F4h] +
mov ecx edi +
call sub_100D45F  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
mov ebx eax +
call sub_100D45F  +
push dword ptr [eax+4]  +
lea ecx [ebx+4] +
call sub_1004C9C  +
cmp dword ptr [esi+10Ch] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1006B47  +
neg eax  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi+148h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-50h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 101h  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-50h] 0Fh +
mov [ebp-4Ch] edi +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov [ebp-3Ch] edi +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1001E98 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 128h +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ebx offset unk_1017DEC +
mov ecx esi +
push edi  +
jz loc_1006BF8  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006C00  +
mov [ebp-44h] ebx +
call sub_1004E79  +
push 102h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1001E90 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1006C5E  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006C66  +
mov [ebp-44h] ebx +
call sub_1004E79  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_14] eax +
xor esi esi +
lea edi [edx+128h] +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
inc esi  +
push eax  +
mov ecx edi +
mov [ebp+var_1C] esi +
call sub_100673B  +
mov ebx eax +
cmp ebx 7 +
ja loc_1006CF1  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
mov [ebp+var_44] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_40] eax +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
mov ecx edi +
mov [ebp+lParam] esi +
mov [ebp+var_54] ebx +
mov [ebp+var_50] esi +
call sub_10066F9  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
cmp dword ptr [ebp+0Ch] 0 +
lea ecx [ebp-10h] +
jnz loc_1006D3A  +
push 10Ch  +
jmp loc_1006D3F  +
push 10Bh  +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp+8] +
add esi 128h +
mov ecx esi +
mov dword ptr [ebp-4Ch] 5 +
mov [ebp-2Ch] eax +
call sub_1004E07  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
lea eax [ebp-4Ch] +
mov ecx esi +
push eax  +
jz loc_1006D91  +
call sub_1004E40  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
mov edi eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006D9F  +
mov dword ptr [ebp-38h] offset unk_1017DEC +
call sub_1004E40  +
mov edi eax +
test edi edi +
jl loc_1006DE6  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_1006DE6  +
xor eax eax +
inc eax  +
mov [ebp-4Ch] eax +
mov [ebp-44h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
mov [ebp-48h] edi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov edi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 0 +
lea ecx [ebp-10h] +
jnz loc_1006E29  +
push 10Ch  +
jmp loc_1006E2E  +
push 10Bh  +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+8] +
and dword ptr [ebp-44h] 0 +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov dword ptr [ebp-4Ch] 1 +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
lea eax [ebp-4Ch] +
lea ecx [edi+128h] +
push eax  +
jz loc_1006E86  +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1006E92  +
mov dword ptr [ebp-38h] offset unk_1017DEC +
call sub_1004E1F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
xor ebx ebx +
call sub_1006C7D  +
test eax eax +
jz loc_1006F1C  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_1006C7D  +
test eax eax +
jz loc_1006F1C  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push eax  +
call ds:_wcsicmp  +
cmp dword ptr [esi+11Ch] 0 +
pop ecx  +
pop ecx  +
mov ebx eax +
jz loc_1006F1C  +
neg ebx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 0Ch  +
***
cmp dword ptr [ecx+108h] 0 +
push ecx  +
jz loc_1006F45  +
push offset loc_100650D  +
jmp loc_1006F4A  +
push offset loc_1006B07  +
add ecx 1A8h +
call sub_1004E9B  +
retn   +
***
cmp dword ptr [ecx+114h] 0 +
jz loc_1006F76  +
push ecx  +
push offset loc_1006EAB  +
add ecx 128h +
call sub_1004E9B  +
retn   +
push offset loc_1006620  +
push ecx  +
push 1030h  +
push dword ptr [ecx+148h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_1006FB3  +
cmp [ecx+108h] eax +
jnz loc_1006FCB  +
lea eax [ecx+110h] +
jmp loc_1006FC2  +
cmp dword ptr [ecx+108h] 0 +
jnz loc_1006FCB  +
lea eax [ecx+10Ch] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+108h] eax +
call sub_1006F34  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_100703F  +
cmp [ecx+114h] eax +
jnz loc_1007057  +
lea eax [ecx+11Ch] +
jmp loc_100704E  +
cmp dword ptr [ecx+114h] 0 +
jnz loc_1007057  +
lea eax [ecx+118h] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+114h] eax +
call sub_1006F5B  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001D68 +
jz loc_1007090  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Ah  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_1001D84 +
call sub_100DD46  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+128h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+168h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+1A8h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 4 +
mov [esi+120h] edi +
mov [esi+108h] edi +
mov [esi+10Ch] edi +
mov [esi+110h] edi +
mov dword ptr [esi+114h] 1 +
mov [esi+118h] edi +
mov [esi+11Ch] edi +
mov [esi+90h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10067D2  +
test byte ptr [ebp+8] 1 +
jz loc_100715D  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov ebx ecx +
lea ecx [ebp-21Ch] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov esi [ebx+0FCh] +
mov [ebp-220h] esi +
test esi esi +
jnz loc_10071A9  +
lea ecx [ebx+1A8h] +
call sub_1004E61  +
jmp loc_10073BF  +
xor ecx ecx +
push 4  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
mov [ebp-228h] edi +
test edi edi +
jz loc_10073BF  +
mov ecx esi +
test ecx ecx +
jle loc_10071DA  +
xor eax eax +
stos   +
lea ecx [ebx+1A8h] +
call sub_1004E07  +
xor edi edi +
mov [ebp-224h] eax +
test eax eax +
jle loc_10072EA  +
push 3Ch  +
lea eax [ebp-264h] +
push 0  +
push eax  +
call memset  +
and dword ptr [ebp-25Ch] 0 +
lea eax [ebp-218h] +
mov [ebp-250h] eax +
add esp 0Ch +
lea eax [ebp-264h] +
lea esi [ebx+1A8h] +
push eax  +
mov ecx esi +
mov dword ptr [ebp-264h] 1 +
mov [ebp-260h] edi +
mov dword ptr [ebp-24Ch] 104h +
call sub_10066F9  +
test eax eax +
jnz loc_1007251  +
mov ecx esi +
jmp loc_10072D0  +
xor esi esi +
cmp [ebp-220h] esi +
jle loc_10072CA  +
push esi  +
lea ecx [ebx+0F4h] +
call sub_100D45F  +
lea ecx [ebp-218h] +
add eax 4 +
push ecx  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100728A  +
inc esi  +
cmp esi [ebp-220h] +
jl loc_100725B  +
jmp loc_10072C2  +
lea eax [ebp-264h] +
push eax  +
lea ecx [ebx+1A8h] +
mov dword ptr [ebp-264h] 4 +
mov [ebp-244h] esi +
call sub_1004E1F  +
push esi  +
push edi  +
mov ecx ebx +
call sub_1006A3A  +
mov eax [ebp-228h] +
mov dword ptr [eax+esi*4] 1 +
cmp esi [ebp-220h] +
jl loc_10072DD  +
lea ecx [ebx+1A8h] +
push edi  +
call sub_100671A  +
dec edi  +
dec dword ptr [ebp-224h]  +
inc edi  +
cmp edi [ebp-224h] +
jl loc_10071F5  +
xor esi esi +
cmp [ebp-220h] esi +
jle loc_10073B3  +
mov eax [ebp-228h] +
cmp dword ptr [eax+esi*4] 0 +
jnz loc_10073A6  +
push 3Ch  +
lea eax [ebp-264h] +
push 0  +
push eax  +
call memset  +
lea edi [ebx+1A8h] +
add esp 0Ch +
mov ecx edi +
mov dword ptr [ebp-264h] 5 +
mov [ebp-244h] esi +
call sub_1004E07  +
and dword ptr [ebp-25Ch] 0 +
push esi  +
lea ecx [ebx+0F4h] +
mov [ebp-260h] eax +
call sub_100D45F  +
add eax 4 +
push eax  +
lea ecx [ebp-21Ch] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-21Ch] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-21Ch] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-250h] eax +
test eax eax +
jz loc_10073A6  +
lea eax [ebp-264h] +
push eax  +
mov ecx edi +
call sub_1004E40  +
push 0FFFFFFFFh  +
lea ecx [ebp-21Ch] +
mov edi eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push esi  +
push edi  +
mov ecx ebx +
call sub_1006A3A  +
inc esi  +
cmp esi [ebp-220h] +
jl loc_10072F8  +
push dword ptr [ebp-228h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-21Ch] +
call ??1CString@@QAE@XZ  +
call sub_10121F9  +
retn   +
***
mov edi edi +
push esi  +
push 103h  +
mov esi ecx +
push dword ptr [esi+98h]  +
push 0  +
call sub_1006D00  +
push 104h  +
push dword ptr [esi+9Ch]  +
mov ecx esi +
push 1  +
call sub_1006D00  +
push 107h  +
push dword ptr [esi+0A0h]  +
mov ecx esi +
push 2  +
call sub_1006D00  +
push 105h  +
push dword ptr [esi+0A4h]  +
mov ecx esi +
push 3  +
call sub_1006D00  +
push 108h  +
push dword ptr [esi+0A8h]  +
mov ecx esi +
push 4  +
call sub_1006D00  +
push 109h  +
push dword ptr [esi+0ACh]  +
mov ecx esi +
push 5  +
call sub_1006D00  +
push 14Dh  +
push dword ptr [esi+0B4h]  +
mov ecx esi +
push 6  +
call sub_1006D00  +
push 141h  +
push dword ptr [esi+0B8h]  +
mov ecx esi +
push 7  +
call sub_1006D00  +
push 10Ah  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push 8  +
call sub_1006D00  +
push 149h  +
push dword ptr [esi+0BCh]  +
mov ecx esi +
push 9  +
call sub_1006D00  +
push 140h  +
push dword ptr [esi+0C0h]  +
mov ecx esi +
push 0Ah  +
call sub_1006D00  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+128h] +
push edi  +
mov ecx ebx +
call sub_1004E07  +
xor edi edi +
mov [ebp+var_4] eax +
test eax eax +
jle loc_10074FD  +
push edi  +
mov ecx ebx +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
push eax  +
mov ecx esi +
call sub_100657B  +
push eax  +
push edi  +
call sub_1006DFF  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_10074E0  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
and dword ptr [esi+124h] 0 +
lea ebx [esi+128h] +
mov ecx ebx +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx ebx +
call sub_1004EBD  +
mov edi ds:GetSysColor +
push 0Fh  +
call edi  +
push eax  +
mov ecx ebx +
call sub_10066D8  +
push 0Fh  +
call edi  +
push eax  +
mov ecx ebx +
call sub_100675D  +
mov ecx esi +
call sub_1006B50  +
mov ecx esi +
call sub_10073D9  +
mov ecx ebx +
call sub_1004E07  +
test eax eax +
jle loc_1007576  +
push 3  +
push 3  +
push 0  +
mov ecx ebx +
call MFC42u_6896  +
lea ebx [esi+1A8h] +
mov ecx ebx +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx ebx +
call sub_1004EBD  +
push 0Fh  +
call edi  +
push eax  +
mov ecx ebx +
call sub_10066D8  +
push 0Fh  +
call edi  +
push eax  +
mov ecx ebx +
call sub_100675D  +
mov ecx esi +
call sub_10068F9  +
mov ecx esi +
call sub_1007169  +
mov ecx esi +
call sub_1006F34  +
mov ecx ebx +
call sub_1004E07  +
test eax eax +
jle loc_10075D3  +
push 3  +
push 3  +
push 0  +
mov ecx ebx +
call MFC42u_6896  +
push 9Fh  +
lea eax [esi+168h] +
push eax  +
call sub_100AA16  +
push 0  +
push 1388h  +
push 1234h  +
push dword ptr [esi+20h]  +
call ds:SetTimer  +
mov [esi+120h] eax +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 1E8h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1007635  +
call sub_100709C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call ?UpdateData@CWnd@@QAEHH@Z  +
test eax eax +
jz loc_100766A  +
mov ecx esi +
call sub_10074BF  +
mov ecx esi +
call sub_1007169  +
mov ecx esi +
pop esi  +
jmp sub_1006F34  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+124h] 1 +
jz loc_10076A1  +
cmp dword ptr [ebp+8] 1234h +
jnz loc_10076A1  +
mov ecx [esi+90h] +
call ?GetActivePage@CPropertySheet@@QBEPAVCPropertyPage@@XZ  +
cmp eax esi +
jnz loc_10076A1  +
mov ecx esi +
call sub_1007644  +
mov ecx esi +
call ?Default@CWnd@@IAEJXZ  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0A0h  +
mov eax offset dword_10135F8 +
call __EH_prolog3  +
mov esi ecx +
push 0  +
lea ecx [ebp-0ACh] +
call sub_1010B6E  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-0ACh] +
call ?DoModal@CDialog@@UAEHXZ  +
cmp eax 1 +
jnz loc_10076EB  +
mov ecx esi +
call sub_1007644  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0ACh] +
call sub_1006676  +
call __EH_epilog3  +
retn   +
***
push 778h  +
mov eax offset byte_101365D +
call __EH_prolog3_GS  +
xor ebx ebx +
mov [ebp-76Ch] ecx +
lea ecx [ebp-764h] +
mov [ebp-780h] ebx +
mov [ebp-774h] ebx +
xor edi edi +
mov [ebp-77Ch] ebx +
call ??0CString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-768h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-770h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-770h] +
push eax  +
push 165h  +
call sub_100A125  +
push ebx  +
push dword ptr [ebp-770h]  +
lea ecx [ebp-760h] +
push 34204h  +
push ebx  +
push offset aSys  +
push 1  +
call ??0CFileDialog@@QAE@HPBG0K0PAVCWnd@@@Z  +
mov byte ptr [ebp-4] 3 +
mov esi 1000h +
cmp [ebp-6E0h] esi +
jnb loc_10077E3  +
push 2000h  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_10077BA  +
push 68h  +
call sub_100AEC8  +
jmp loc_100797B  +
xor eax eax +
mov [edi] ax +
mov eax [ebp-6E0h] +
mov [ebp-774h] eax +
mov eax [ebp-6E4h] +
mov [ebp-77Ch] eax +
mov [ebp-6E4h] edi +
mov [ebp-6E0h] esi +
mov esi 104h +
push esi  +
lea eax [ebp-218h] +
push eax  +
push 66h  +
call sub_100A0F0  +
test eax eax +
jz loc_1007807  +
lea eax [ebp-218h] +
mov [ebp-6D0h] eax +
push esi  +
lea eax [ebp-420h] +
push eax  +
push offset aWindirSystem32  +
call ds:ExpandEnvironmentStringsW  +
dec eax  +
cmp eax 103h +
ja loc_100782E  +
lea eax [ebp-420h] +
mov [ebp-6D4h] eax +
lea ecx [ebp-760h] +
call ?DoModal@CFileDialog@@UAEHXZ  +
dec eax  +
jz loc_100786E  +
dec eax  +
jz loc_1007959  +
call ds:CommDlgExtendedError  +
cmp eax 3003h +
jnz loc_100785C  +
push 12Bh  +
call sub_100AEC8  +
jmp loc_1007868  +
push eax  +
push 12Ch  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
jmp loc_1007959  +
mov eax [ebp-6E4h] +
mov esi [ebp-76Ch] +
mov dword ptr [esi+124h] 1 +
mov [ebp-778h] eax +
cmp eax ebx +
jz loc_1007943  +
lea eax [ebp-778h] +
push eax  +
lea eax [ebp-76Ch] +
push eax  +
lea ecx [ebp-760h] +
call ?GetNextPathName@CFileDialog@@QBE?AVCString@@AAPAU__POSITION@@@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-764h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-76Ch] +
call ??1CString@@QAE@XZ  +
push 5Ch  +
lea ecx [ebp-764h] +
call ?ReverseFind@CString@@QBEHG@Z  +
cmp eax ebx +
jge loc_10078DF  +
xor eax eax +
jmp loc_10078E0  +
inc eax  +
mov ecx [ebp-764h] +
mov ecx [ecx-8] +
sub ecx eax +
push ecx  +
lea eax [ebp-784h] +
push eax  +
lea ecx [ebp-764h] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-768h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-784h] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-768h] +
push eax  +
call sub_100C49B  +
test eax eax +
jz loc_1007937  +
mov dword ptr [ebp-780h] 1 +
cmp [ebp-778h] ebx +
jnz loc_1007892  +
cmp dword ptr [ebp-780h] 1 +
mov [esi+124h] ebx +
jnz loc_1007959  +
mov ecx esi +
call sub_1007644  +
cmp edi ebx +
jz loc_100797C  +
mov eax [ebp-774h] +
mov [ebp-6E0h] eax +
mov eax [ebp-77Ch] +
push edi  +
mov [ebp-6E4h] eax +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-760h] +
call near ptr dword_1006FE4+5  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-770h] +
call ??1CString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-768h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-764h] +
call ??1CString@@QAE@XZ  +
call sub_10121F9  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+1A8h] +
xor ebx ebx +
mov ecx edi +
mov [ebp-4] ebx +
mov dword ptr [esi+124h] 1 +
call sub_1004E07  +
mov [ebp-8] eax +
test eax eax +
jle loc_1007A35  +
push 2  +
push ebx  +
mov ecx edi +
call sub_100677E  +
test al 2 +
jz loc_1007A2F  +
push ebx  +
mov ecx edi +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
cmp eax [esi+0FCh] +
jge loc_1007A2F  +
push eax  +
lea ecx [esi+0F4h] +
call sub_100D45F  +
add eax 4 +
push eax  +
call sub_100C574  +
test eax eax +
jz loc_1007A2F  +
mov dword ptr [ebp-4] 1 +
inc ebx  +
cmp ebx [ebp-8] +
jl loc_10079F1  +
and dword ptr [esi+124h] 0 +
cmp dword ptr [ebp-4] 0 +
jz loc_1007A49  +
mov ecx esi +
call sub_1007644  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax offset off_1001EE0 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001F8C +
and dword ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call ??1CStatic@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx offset unk_1017698 +
call sub_1009554  +
mov ecx esi +
pop esi  +
jmp sub_1009D52  +
***
mov edi edi +
push esi  +
push edi  +
push 1  +
mov esi ecx +
xor edi edi +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax 1 +
jnz loc_1007AF9  +
mov eax dword_1017798 +
mov dword ptr [eax+3Ch] 4 +
mov ecx dword_1017798 +
call sub_100DBB2  +
mov edi eax +
mov ecx esi +
call ?OnWizardFinish@CPropertyPage@@UAEHXZ  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+0D4h] 0 +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push 88h  +
add esi 94h +
push esi  +
call sub_100AA16  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx offset unk_1017698 +
call sub_1009554  +
mov ecx esi +
pop esi  +
jmp ?OnCancel@CPropertyPage@@UAEXXZ  +
***
call ?AfxGetThread@@YGPAVCWinThread@@XZ  +
test eax eax +
jz loc_1007B62  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+7Ch]  +
xor eax eax +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Eh  +
call sub_1009C13  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_1001F8C +
call sub_1004CE1  +
mov byte ptr [ebp-4] 1 +
or dword ptr [esi+0D4h] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1007A5E  +
test byte ptr [ebp+8] 1 +
jz loc_1007BD0  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+94h] +
push eax  +
push 401h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 0D4h +
push esi  +
push 3ECh  +
push [ebp+arg_0]  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
mov esi offset unk_1017698 +
push edi  +
mov ecx esi +
call sub_1009554  +
or [ebp+var_4] 0FFFFFFFFh +
xor edi edi +
inc edi  +
push edi  +
mov ecx ebx +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax edi +
jnz loc_1007D1A  +
mov eax dword_1017798 +
cmp [eax+68h] edi +
jz loc_1007C7B  +
cmp dword_10176B8 0 +
jnz loc_1007C69  +
call sub_1007B52  +
push eax  +
push 262h  +
mov ecx esi +
call ?Create@CDialog@@QAEHPBGPAVCWnd@@@Z  +
push 5  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push 71h  +
push offset loc_10096B6  +
jmp loc_1007CD7  +
mov ecx [ebx+0D4h] +
sub ecx 0 +
jz loc_1007CC1  +
dec ecx  +
jz loc_1007C9D  +
dec ecx  +
dec ecx  +
jnz loc_1007D1A  +
mov [eax+3Ch] edi +
mov [ebp+var_4] 25Ch +
jmp loc_1007D1A  +
mov dword ptr [eax+3Ch] 2 +
mov ecx dword_1017798 +
add ecx 38h +
call sub_100D20D  +
cmp eax edi +
jnz loc_1007CBA  +
push 74h  +
jmp loc_1007CFB  +
push 94h  +
jmp loc_1007D14  +
cmp dword ptr [eax+6Ch] 0 +
jnz loc_1007CE0  +
push 5  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push 72h  +
push offset loc_100970B  +
mov ecx esi +
call sub_1009760  +
jmp loc_1007D24  +
mov dword ptr [eax+3Ch] 3 +
mov ecx dword_1017798 +
add ecx 38h +
call sub_100D20D  +
cmp eax edi +
jnz loc_1007D0F  +
push 73h  +
mov ecx [ebx+90h] +
mov [ebp+var_4] 25Dh +
call sub_1010F61  +
jmp loc_1007D1A  +
push 95h  +
call sub_100A5C7  +
pop ecx  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_1009D2B  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0D4h] +
sub eax 0 +
jz loc_1007D78  +
dec eax  +
jz loc_1007D71  +
dec eax  +
jz loc_1007D51  +
dec eax  +
jnz loc_1007D96  +
push 8Ah  +
jmp loc_1007D7D  +
mov ecx [esi+90h] +
push 5  +
call sub_1004D8F  +
push 89h  +
lea eax [esi+94h] +
push eax  +
call sub_100AA16  +
jmp loc_1007D96  +
push 8Bh  +
jmp loc_1007D7D  +
push 88h  +
lea eax [esi+94h] +
push eax  +
call sub_100AA16  +
mov ecx [esi+90h] +
push 3  +
call sub_1004D8F  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 5  +
call sub_1004D8F  +
push 89h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 3  +
call sub_1004D8F  +
push 8Ah  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 3  +
call sub_1004D8F  +
push 88h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 3  +
call sub_1004D8F  +
push 8Bh  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 0D8h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1007E75  +
call sub_1007B6A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov eax offset off_1002088 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10020F4 +
mov dword ptr [ebp-4] 1 +
lea ecx [esi+10Ch] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0CCh] +
call ??1CListCtrl@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Bh  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0CCh] +
mov dword ptr [esi] offset off_10020F4 +
call sub_1004DB0  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
lea ecx [esi+10Ch] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 2 +
mov [esi+94h] ebx +
mov [esi+98h] edi +
mov [esi+9Ch] ebx +
mov [esi+0ACh] edi +
mov [esi+0A8h] edi +
mov [esi+0B8h] edi +
mov [esi+0A4h] edi +
mov [esi+0A0h] edi +
mov [esi+0B0h] edi +
mov [esi+0B4h] edi +
mov [esi+0BCh] edi +
mov [esi+0C0h] edi +
mov [esi+0C4h] edi +
mov [esi+0C8h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1007E8F  +
test byte ptr [ebp+8] 1 +
jz loc_1007FB8  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+0CCh] +
push eax  +
push 407h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 10Ch +
push esi  +
push 406h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi+0ECh]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-50h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 101h  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-50h] 0Fh +
mov [ebp-4Ch] edi +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov [ebp-3Ch] edi +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_10021F8 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 0CCh +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ebx offset unk_1017DEC +
mov ecx esi +
push edi  +
jz loc_10080A6  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_10080AE  +
mov [ebp-44h] ebx +
call sub_1004E79  +
push 102h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_10021F0 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_100810C  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1008114  +
mov [ebp-44h] ebx +
call sub_1004E79  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
lea esi [edx+0CCh] +
push 0FFFFFFFFh  +
lea eax [ebp+lParam] +
push eax  +
mov ecx esi +
xor ebx ebx +
mov [ebp+lParam] 1 +
call sub_100673B  +
test eax eax +
jl loc_1008172  +
push eax  +
mov ecx esi +
call MFC42u_6667  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
lea esi [edx+0CCh] +
push 0FFFFFFFFh  +
lea eax [ebp+lParam] +
push eax  +
mov ecx esi +
mov [ebp+lParam] 1 +
call sub_100673B  +
test eax eax +
jl loc_10081C8  +
push [ebp+arg_4]  +
mov ecx esi +
push eax  +
call MFC42u_6879  +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_14] eax +
xor esi esi +
lea edi [edx+0CCh] +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
inc esi  +
push eax  +
mov ecx edi +
mov [ebp+var_1C] esi +
call sub_100673B  +
mov ebx eax +
test ebx ebx +
jge loc_1008220  +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ecx] ax +
jmp loc_100825A  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_8] +
mov [ebp+var_40] eax +
add esp 0Ch +
mov [ebp+lParam] esi +
mov [ebp+var_50] esi +
mov esi [ebp+arg_4] +
lea eax [ebp+lParam] +
push eax  +
mov ecx edi +
mov [ebp+var_54] ebx +
mov [ebp+var_44] esi +
call sub_10066F9  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_100825A  +
mov [esi] ax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+8] +
add esi 0CCh +
add esp 0Ch +
mov ecx esi +
mov dword ptr [ebp-38h] offset unk_1017DEC +
mov dword ptr [ebp-4Ch] 5 +
mov [ebp-2Ch] eax +
call sub_1004E07  +
mov [ebp-48h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
call sub_1004E40  +
mov edi eax +
test edi edi +
jl loc_1008315  +
push 0  +
push edi  +
mov ecx esi +
call MFC42u_6879  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_1008315  +
xor eax eax +
inc eax  +
mov [ebp-4Ch] eax +
mov [ebp-44h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
mov [ebp-48h] edi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
xor ebx ebx +
call sub_10081D6  +
test eax eax +
jz loc_100839F  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_10081D6  +
test eax eax +
jz loc_100839F  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push eax  +
call ds:_wcsicmp  +
cmp dword ptr [esi+9Ch] 0 +
pop ecx  +
pop ecx  +
mov ebx eax +
jz loc_100839F  +
neg ebx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
xor edi edi +
push 0FFFFFFFFh  +
lea eax [ebp-1Ch] +
lea esi [ebx+0CCh] +
inc edi  +
push eax  +
mov ecx esi +
mov [ebp-1Ch] edi +
call sub_100673B  +
test eax eax +
jl loc_1008443  +
push eax  +
mov ecx esi +
call MFC42u_6667  +
mov [ebp+8] eax +
mov eax [ebp+0Ch] +
mov [ebp-14h] eax +
push 0FFFFFFFFh  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
mov [ebp-1Ch] edi +
call sub_100673B  +
test eax eax +
jl loc_1008443  +
push eax  +
mov ecx esi +
call MFC42u_6667  +
cmp [ebp+8] eax +
jz loc_1008443  +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
cmp dword ptr [ebx+98h] 0 +
lea eax [eax+eax-1] +
mov [ebp-4] eax +
jz loc_1008443  +
neg dword ptr [ebp-4]  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 14Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_100847C  +
call sub_1007EF3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
push 103h  +
push 0  +
mov esi ecx +
call sub_1008269  +
push 104h  +
push 1  +
mov ecx esi +
call sub_1008269  +
push 107h  +
push 2  +
mov ecx esi +
call sub_1008269  +
push 105h  +
push 3  +
mov ecx esi +
call sub_1008269  +
push 108h  +
push 4  +
mov ecx esi +
call sub_1008269  +
push 109h  +
push 5  +
mov ecx esi +
call sub_1008269  +
push 14Dh  +
push 6  +
mov ecx esi +
call sub_1008269  +
push 141h  +
push 7  +
mov ecx esi +
call sub_1008269  +
push 10Ah  +
push 8  +
mov ecx esi +
call sub_1008269  +
push 149h  +
push 9  +
mov ecx esi +
call sub_1008269  +
push 140h  +
push 0Ah  +
mov ecx esi +
call sub_1008269  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call sub_100812B  +
push 1  +
mov ecx esi +
mov [esi+0A0h] eax +
call sub_100812B  +
push 2  +
mov ecx esi +
mov [esi+0A4h] eax +
call sub_100812B  +
push 3  +
mov ecx esi +
mov [esi+0A8h] eax +
call sub_100812B  +
push 4  +
mov ecx esi +
mov [esi+0ACh] eax +
call sub_100812B  +
push 5  +
mov ecx esi +
mov [esi+0B0h] eax +
call sub_100812B  +
push 6  +
mov ecx esi +
mov [esi+0B4h] eax +
call sub_100812B  +
push 7  +
mov ecx esi +
mov [esi+0BCh] eax +
call sub_100812B  +
push 8  +
mov ecx esi +
mov [esi+0C0h] eax +
call sub_100812B  +
push 9  +
mov ecx esi +
mov [esi+0B8h] eax +
call sub_100812B  +
push 0Ah  +
mov ecx esi +
mov [esi+0C4h] eax +
call sub_100812B  +
mov [esi+0C8h] eax +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
cmp dword ptr [ecx+94h] 0 +
push ecx  +
jz loc_10085F2  +
push offset loc_100832E  +
jmp loc_10085F7  +
push offset loc_10083B7  +
add ecx 0CCh +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
or ebx 0FFFFFFFFh +
call sub_100852F  +
cmp eax 1 +
jnz loc_10087B2  +
mov eax [esi+0ACh] +
push edi  +
xor edi edi +
cmp eax edi +
jnz loc_1008689  +
cmp [esi+0A8h] edi +
jnz loc_1008689  +
cmp [esi+0B8h] edi +
jnz loc_1008689  +
cmp [esi+0A4h] edi +
jnz loc_1008689  +
cmp [esi+0A0h] edi +
jnz loc_1008689  +
cmp [esi+0B0h] edi +
jnz loc_1008689  +
cmp [esi+0B4h] edi +
jnz loc_1008689  +
cmp [esi+0BCh] edi +
jnz loc_1008689  +
cmp [esi+0C0h] edi +
jnz loc_1008691  +
cmp [esi+0C4h] edi +
jnz loc_1008689  +
cmp [esi+0C8h] edi +
jnz loc_1008689  +
push 69h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_10087B1  +
cmp [esi+0C0h] edi +
jz loc_10086BF  +
cmp eax edi +
jnz loc_10086BF  +
push 0FFFFFFFFh  +
push 4  +
push 142h  +
call ?AfxMessageBox@@YGHIII@Z  +
cmp eax 6 +
jnz loc_10087B1  +
xor eax eax +
inc eax  +
push eax  +
push 3  +
mov ecx esi +
mov [esi+0ACh] eax +
call sub_1008180  +
cmp [esi+0C4h] edi +
jz loc_10086F9  +
cmp [esi+0ACh] edi +
jnz loc_10086F9  +
push 0FFFFFFFFh  +
push 4  +
push 148h  +
call ?AfxMessageBox@@YGHIII@Z  +
cmp eax 6 +
jnz loc_10087B1  +
xor eax eax +
inc eax  +
push eax  +
push 3  +
mov ecx esi +
mov [esi+0ACh] eax +
call sub_1008180  +
mov eax [esi+0A0h] +
mov ecx dword_1017798 +
mov [ecx+0Ch] eax +
mov eax [esi+0A8h] +
mov ecx dword_1017798 +
mov [ecx+10h] eax +
mov eax [esi+0B8h] +
mov ecx dword_1017798 +
mov [ecx+14h] eax +
mov eax [esi+0A4h] +
mov ecx dword_1017798 +
mov [ecx+18h] eax +
mov eax [esi+0ACh] +
mov ecx dword_1017798 +
mov [ecx+1Ch] eax +
mov eax [esi+0B0h] +
mov ecx dword_1017798 +
mov [ecx+20h] eax +
mov eax [esi+0B4h] +
mov ecx dword_1017798 +
mov [ecx+24h] eax +
mov eax [esi+0BCh] +
mov ecx dword_1017798 +
mov [ecx+28h] eax +
mov eax [esi+0C0h] +
mov ecx dword_1017798 +
mov [ecx+2Ch] eax +
mov eax [esi+0C4h] +
mov ecx dword_1017798 +
mov [ecx+30h] eax +
mov eax [esi+0C8h] +
mov ecx dword_1017798 +
mov [ecx+34h] eax +
mov ebx [esi+0B8h] +
neg ebx  +
sbb ebx ebx +
and ebx 7 +
add ebx 25Eh +
pop edi  +
push ebx  +
mov ecx esi +
call sub_1009D2B  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+0CCh] +
mov ecx edi +
call sub_1004EDE  +
or eax 24h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ecx esi +
call sub_1007FFE  +
mov ecx esi +
call sub_100848B  +
mov ecx edi +
call sub_1004E07  +
test eax eax +
jle loc_100880D  +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
push 90h  +
add esi 10Ch +
push esi  +
call sub_100AA16  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_1008849  +
cmp [ecx+94h] eax +
jnz loc_1008861  +
lea eax [ecx+9Ch] +
jmp loc_1008858  +
cmp dword ptr [ecx+94h] 0 +
jnz loc_1008861  +
lea eax [ecx+98h] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+94h] eax +
call sub_10085E1  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_1002224 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CProgressCtrl@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax ds:?messageMap@CWnd@@1UAFX_MSGMAP@@B +
retn   +
***
retn   +
***
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_1 +
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_10022EC +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CProgressCtrl@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1008909  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100887F  +
test byte ptr [ebp+8] 1 +
jz loc_1008960  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax offset off_10023B0 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002434 +
mov dword ptr [ebp-4] 1 +
lea ecx [esi+0E8h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0A8h] +
call ??1CStatic@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
mov ecx dword_1017798 +
add ecx 40h +
call sub_100D45F  +
mov ecx [esi+94h] +
dec ecx  +
pop esi  +
jz loc_1008A0E  +
dec ecx  +
jz loc_1008A09  +
dec ecx  +
jnz loc_1008A1A  +
add eax 20h +
jmp loc_1008A11  +
add eax 1Ch +
jmp loc_1008A11  +
add eax 4 +
mov ecx [ebp+0Ch] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_4] +
push eax  +
push [ebp+wParam]  +
push 1013h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Ch  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0A8h] +
mov dword ptr [esi] offset off_1002434 +
call sub_1004CE1  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0E8h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 2 +
mov [esi+90h] edi +
mov dword ptr [esi+94h] 1 +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
mov [esi+0A4h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008977  +
test byte ptr [ebp+8] 1 +
jz loc_1008AE1  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+0A8h] +
push eax  +
push 403h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 0E8h +
push esi  +
push 3FCh  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi+108h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-50h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push 7Dh  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-50h] 0Fh +
mov [ebp-4Ch] ebx +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov [ebp-3Ch] ebx +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1002548 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 0E8h +
mov [ebp-44h] eax +
cmp eax ebx +
lea eax [ebp-50h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_1008BCC  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1008BD4  +
mov [ebp-44h] edi +
call sub_1004E79  +
push 7Ch  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1002540 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax ebx +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1008C2F  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1008C37  +
mov [ebp-44h] edi +
call sub_1004E79  +
push 7Eh  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 2 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1002538 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax ebx +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 2  +
jz loc_1008C92  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1008C9A  +
mov [ebp-44h] edi +
call sub_1004E79  +
push 7Fh  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 3 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1002530 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax ebx +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 3  +
jz loc_1008CF5  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1008CFD  +
call sub_1004E79  +
mov [ebp-44h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
mov esi ecx +
call memset  +
mov eax [ebp+arg_0] +
add esi 0E8h +
add esp 0Ch +
mov ecx esi +
mov [ebp+var_28] offset unk_1017DEC +
mov [ebp+lParam] 5 +
mov [ebp+var_1C] eax +
mov [ebp+arg_0] esi +
call sub_1004E07  +
mov [ebp+var_38] eax +
lea eax [ebp+lParam] +
push eax  +
mov ecx esi +
call sub_1004E40  +
mov edi eax +
test edi edi +
jl loc_1008E2A  +
push ebx  +
push 0  +
push edi  +
mov ecx esi +
call MFC42u_6879  +
mov ebx [ebp+arg_4] +
lea ecx [ebx+4] +
mov eax [ecx] +
mov eax [eax-8] +
inc eax  +
push eax  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_1008E29  +
mov ecx [ebp+arg_0] +
xor esi esi +
lea eax [ebp+lParam] +
inc esi  +
push eax  +
mov [ebp+lParam] esi +
mov [ebp+var_38] edi +
mov [ebp+var_34] esi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebx+4] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
lea ecx [ebx+1Ch] +
mov eax [ecx] +
mov eax [eax-8] +
inc eax  +
push eax  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_1008E29  +
mov ecx [ebp+arg_0] +
lea eax [ebp+lParam] +
push eax  +
mov [ebp+lParam] esi +
mov [ebp+var_38] edi +
mov [ebp+var_34] 2 +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebx+1Ch] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
add ebx 20h +
mov eax [ebx] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx ebx +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_1008E29  +
mov ecx [ebp+arg_0] +
lea eax [ebp+lParam] +
push eax  +
mov [ebp+lParam] esi +
mov [ebp+var_38] edi +
mov [ebp+var_34] 3 +
call sub_1004E1F  +
push 0FFFFFFFFh  +
mov ecx ebx +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx dword_1017798 +
push esi  +
lea esi [ecx+0E8h] +
push edi  +
mov ecx esi +
add ebx 40h +
call sub_1004E07  +
xor edi edi +
mov [ebp+var_8] eax +
test eax eax +
jle loc_1008E8F  +
push edi  +
mov ecx esi +
call MFC42u_6667  +
xor ecx ecx +
test eax eax +
setnz cl  +
push edi  +
inc ecx  +
mov [ebp+var_4] ecx +
mov ecx esi +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
push eax  +
mov ecx ebx +
call sub_100D45F  +
mov ecx [ebp+var_4] +
inc edi  +
cmp edi [ebp+var_8] +
mov [eax+0Ch] ecx +
jl loc_1008E60  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn   +
***
call ds:_wcsicmp  +
mov edi eax +
mov eax [esi+94h] +
dec eax  +
pop ecx  +
pop ecx  +
jz loc_1008F19  +
dec eax  +
jz loc_1008F11  +
dec eax  +
jnz loc_1008F23  +
cmp [esi+0A4h] ebx +
jmp loc_1008F1F  +
cmp [esi+0A0h] ebx +
jmp loc_1008F1F  +
cmp [esi+9Ch] ebx +
jz loc_1008F23  +
neg edi  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
xor edi edi +
push 0FFFFFFFFh  +
lea eax [ebp-1Ch] +
lea esi [ebx+0E8h] +
inc edi  +
push eax  +
mov ecx esi +
mov [ebp-1Ch] edi +
call sub_100673B  +
test eax eax +
jl loc_1008FD5  +
push eax  +
mov ecx esi +
call MFC42u_6667  +
mov [ebp+8] eax +
mov eax [ebp+0Ch] +
mov [ebp-14h] eax +
push 0FFFFFFFFh  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
mov [ebp-1Ch] edi +
call sub_100673B  +
test eax eax +
jl loc_1008FD5  +
push eax  +
mov ecx esi +
call MFC42u_6667  +
cmp [ebp+8] eax +
jz loc_1008FD5  +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
cmp dword ptr [ebx+98h] 0 +
lea eax [eax+eax-1] +
mov [ebp-4] eax +
jz loc_1008FD5  +
neg dword ptr [ebp-4]  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 5  +
call sub_1004D8F  +
push 8Dh  +
lea eax [esi+0A8h] +
push eax  +
call sub_100AA16  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
call sub_1008E37  +
test eax eax +
jz loc_1009058  +
mov ecx dword_1017798 +
add ecx 38h +
call sub_100D20D  +
test eax eax +
jnz loc_1009044  +
push 100h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_1009058  +
mov ecx dword_1017798 +
call sub_100DBB2  +
mov ecx esi +
call ?OnWizardFinish@CPropertyPage@@UAEHXZ  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 128h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_100908C  +
call sub_1008A4A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi dword_1017798 +
push edi  +
mov edi ecx +
lea ecx [edi+0E8h] +
add esi 40h +
call sub_1004E61  +
mov ebx [esi+8] +
and [ebp+var_4] 0 +
test ebx ebx +
jle loc_10090E2  +
push [ebp+var_4]  +
mov ecx esi +
call sub_100D45F  +
push eax  +
push [ebp+var_4]  +
mov ecx edi +
call sub_1008D14  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_10090C5  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp dword ptr [ecx+94h] 0 +
push ecx  +
jz loc_10090FD  +
push offset byte_1008E9C  +
jmp loc_1009102  +
push offset loc_1008F49  +
add ecx 0E8h +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+0E8h] +
mov ecx edi +
call sub_1004EDE  +
or eax 24h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ecx esi +
call sub_1008B27  +
mov ecx esi +
call sub_100909B  +
mov ecx esi +
call sub_10090EC  +
mov ecx edi +
call sub_1004E07  +
test eax eax +
jle loc_1009163  +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
push 778h  +
mov eax offset word_10137B2 +
call __EH_prolog3_GS  +
mov [ebp-780h] ecx +
xor ebx ebx +
lea ecx [ebp-768h] +
mov [ebp-774h] ebx +
xor edi edi +
mov [ebp-770h] ebx +
call ??0CString@@QAE@XZ  +
mov [ebp-4] ebx +
lea ecx [ebp-764h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-76Ch] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-76Ch] +
push eax  +
push 165h  +
call sub_100A125  +
push ebx  +
push dword ptr [ebp-76Ch]  +
lea ecx [ebp-760h] +
push 34204h  +
push ebx  +
push offset aSys  +
push 1  +
call ??0CFileDialog@@QAE@HPBG0K0PAVCWnd@@@Z  +
mov byte ptr [ebp-4] 3 +
mov esi 1000h +
cmp [ebp-6E0h] esi +
jnb loc_1009246  +
push 2000h  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_100921D  +
push 68h  +
call sub_100AEC8  +
jmp loc_1009416  +
xor eax eax +
mov [edi] ax +
mov eax [ebp-6E0h] +
mov [ebp-774h] eax +
mov eax [ebp-6E4h] +
mov [ebp-770h] eax +
mov [ebp-6E4h] edi +
mov [ebp-6E0h] esi +
mov esi 104h +
push esi  +
lea eax [ebp-218h] +
push eax  +
push 66h  +
call sub_100A0F0  +
test eax eax +
jz loc_100926A  +
lea eax [ebp-218h] +
mov [ebp-6D0h] eax +
push esi  +
lea eax [ebp-420h] +
push eax  +
push offset aWindirSystem32  +
call ds:ExpandEnvironmentStringsW  +
dec eax  +
cmp eax 103h +
ja loc_1009291  +
lea eax [ebp-420h] +
mov [ebp-6D4h] eax +
lea ecx [ebp-760h] +
call ?DoModal@CFileDialog@@UAEHXZ  +
dec eax  +
jz loc_10092D1  +
dec eax  +
jz loc_10093F4  +
call ds:CommDlgExtendedError  +
cmp eax 3003h +
jnz loc_10092BF  +
push 12Bh  +
call sub_100AEC8  +
jmp loc_10092CB  +
push eax  +
push 12Ch  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
jmp loc_10093F4  +
mov eax [ebp-6E4h] +
mov [ebp-778h] eax +
cmp eax ebx +
jz loc_10093F4  +
lea eax [ebp-778h] +
push eax  +
lea eax [ebp-784h] +
push eax  +
lea ecx [ebp-760h] +
call ?GetNextPathName@CFileDialog@@QBE?AVCString@@AAPAU__POSITION@@@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-768h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-784h] +
call ??1CString@@QAE@XZ  +
push 5Ch  +
lea ecx [ebp-768h] +
call ?ReverseFind@CString@@QBEHG@Z  +
cmp eax ebx +
jge loc_1009332  +
xor eax eax +
jmp loc_1009333  +
inc eax  +
mov ecx [ebp-768h] +
mov ecx [ecx-8] +
sub ecx eax +
push ecx  +
lea eax [ebp-77Ch] +
push eax  +
lea ecx [ebp-768h] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-764h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-77Ch] +
call ??1CString@@QAE@XZ  +
mov ecx dword_1017798 +
push dword ptr [ebp-764h]  +
add ecx 38h +
call sub_100D2DF  +
push dword ptr [ebp-764h]  +
test eax eax +
jz loc_100939C  +
push 12Dh  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
jmp loc_10093E8  +
mov ecx dword_1017798 +
add ecx 38h +
call sub_100DAE0  +
mov esi eax +
cmp esi ebx +
jl loc_10093E8  +
mov eax dword_1017798 +
mov [eax+6Ch] ebx +
mov ecx dword_1017798 +
push esi  +
add ecx 40h +
call sub_100D45F  +
push eax  +
push esi  +
mov esi [ebp-780h] +
mov ecx esi +
call sub_1008D14  +
cmp eax ebx +
jl loc_10093E8  +
push 1  +
push eax  +
lea ecx [esi+0E8h] +
call sub_1008A26  +
cmp [ebp-778h] ebx +
jnz loc_10092E5  +
cmp edi ebx +
jz loc_1009417  +
mov eax [ebp-774h] +
mov [ebp-6E0h] eax +
mov eax [ebp-770h] +
push edi  +
mov [ebp-6E4h] eax +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-760h] +
call near ptr dword_1006FE4+5  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-76Ch] +
call ??1CString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-764h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-768h] +
call ??1CString@@QAE@XZ  +
call sub_10121F9  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+10h] +
xor esi esi +
sub eax esi +
jz loc_10094AC  +
dec eax  +
jz loc_100949B  +
dec eax  +
jz loc_100948A  +
dec eax  +
jnz loc_10094D1  +
cmp dword ptr [ecx+94h] 3 +
jnz loc_10094C3  +
lea eax [ecx+0A4h] +
jmp loc_10094BA  +
cmp dword ptr [ecx+94h] 2 +
jnz loc_10094C3  +
lea eax [ecx+0A0h] +
jmp loc_10094BA  +
cmp dword ptr [ecx+94h] 1 +
jnz loc_10094C3  +
lea eax [ecx+9Ch] +
jmp loc_10094BA  +
cmp [ecx+94h] esi +
jnz loc_10094C3  +
lea eax [ecx+98h] +
xor edx edx +
cmp [eax] esi +
setz dl  +
mov [eax] edx +
mov eax [edi+10h] +
mov [ecx+94h] eax +
call sub_10090EC  +
mov eax [ebp+0Ch] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10025BC +
mov dword ptr [ebp-4] 2 +
mov eax [esi+64h] +
test eax eax +
jz loc_100950D  +
push eax  +
call ds:CloseHandle  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0A8h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+68h] +
call sub_100887F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CDialog@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax ds:?messageMap@CDialog@@1UAFX_MSGMAP@@B +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
lea esi [ecx+60h] +
xor edi edi +
cmp [esi] edi +
jz loc_10095CE  +
mov ecx [ecx+64h] +
cmp ecx edi +
jz loc_1009575  +
push ecx  +
call ds:SetEvent  +
cmp [esi] edi +
jz loc_10095BF  +
push ebx  +
mov ebx ds:PeekMessageW +
push 4FFh  +
push 0FFFFFFFFh  +
push edi  +
push esi  +
push 1  +
call ds:MsgWaitForMultipleObjects  +
test eax eax +
jz loc_10095BE  +
jmp loc_10095AB  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
test eax eax +
jnz loc_1009597  +
cmp [esi] edi +
jnz loc_1009580  +
pop ebx  +
mov eax [esi] +
cmp eax edi +
jz loc_10095CE  +
push eax  +
call ds:CloseHandle  +
mov [esi] edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1009554  +
push 0  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
pop esi  +
retn   +
***
pusha   +
call ds:CreateEventW  +
mov [esi+64h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10094E1  +
test byte ptr [ebp+8] 1 +
jz loc_1009673  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+68h] +
push eax  +
push 3F4h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 0A8h +
push esi  +
push 3F5h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1017798 +
push esi  +
mov esi [ebp+8] +
lea eax [esi+68h] +
push eax  +
push dword ptr [esi+64h]  +
add ecx 38h +
call sub_100DEAD  +
push 0  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
mov eax dword_1017798 +
cmp dword ptr [eax+68h] 0 +
pop esi  +
jz loc_1009700  +
call sub_1007B52  +
push 0  +
push 1  +
push 471h  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1017798 +
push esi  +
mov esi [ebp+8] +
lea eax [esi+68h] +
push eax  +
push dword ptr [esi+64h]  +
add ecx 38h +
call sub_100D12E  +
push 0  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
mov eax dword_1017798 +
cmp dword ptr [eax+6Ch] 0 +
pop esi  +
jz loc_1009755  +
call sub_1007B52  +
push 0  +
push 1  +
push 471h  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-10h]  +
lea ecx [esi+0A8h] +
call ?SetWindowTextW@CWnd@@QAEXPBG@Z  +
push 105h  +
push edi  +
push edi  +
push dword ptr [esi+0C8h]  +
call ds:RedrawWindow  +
mov ecx esi +
call sub_1009554  +
mov eax [esi+64h] +
cmp eax edi +
jz loc_10097BC  +
push eax  +
call ds:ResetEvent  +
lea eax [ebp-14h] +
push eax  +
push edi  +
push esi  +
push dword ptr [ebp+8]  +
push edi  +
push edi  +
call ds:CreateThread  +
mov [esi+60h] eax +
cmp eax edi +
jnz loc_1009806  +
push 68h  +
call sub_100AEC8  +
pop ecx  +
push edi  +
push 3F6h  +
push 111h  +
push dword ptr [esi+20h]  +
call ds:PostMessageW  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
xor edi edi +
inc edi  +
jmp loc_10097F0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ?Default@CWnd@@IAEJXZ  +
cmp dword ptr [ebp+8] 1 +
jnz loc_100982C  +
push 0  +
mov ecx esi +
call ?CenterWindow@CWnd@@QAEXPAV1@@Z  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax offset off_1002698 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100275C +
and dword ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call ??1CStatic@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
mov ecx offset unk_1017698 +
call sub_1009554  +
push 1  +
mov ecx esi +
xor edi edi +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax 1 +
jnz loc_10098EE  +
push 0FFFFFFFFh  +
push 4  +
push 87h  +
call ?AfxMessageBox@@YGHIII@Z  +
cmp eax 6 +
jnz loc_10098EE  +
call sub_100BE9D  +
cmp dword_1017DE8 edi +
jz loc_10098DA  +
push 0FFh  +
jmp loc_10098DF  +
push 0EFh  +
call sub_100A5C7  +
pop ecx  +
mov ecx esi +
call ?OnWizardFinish@CPropertyPage@@UAEHXZ  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+0D4h] 0 +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push 83h  +
add esi 94h +
push esi  +
call sub_100AA16  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 25Fh  +
call sub_1009C13  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_100275C +
call sub_1004CE1  +
mov byte ptr [ebp-4] 1 +
or dword ptr [esi+0D4h] 0FFFFFFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009841  +
test byte ptr [ebp+8] 1 +
jz loc_100998A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+94h] +
push eax  +
push 400h  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 0D4h +
push esi  +
push 41Ah  +
push [ebp+arg_0]  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
mov esi offset unk_1017698 +
push edi  +
mov ecx esi +
call sub_1009554  +
or [ebp+var_4] 0FFFFFFFFh +
xor edi edi +
inc edi  +
push edi  +
mov ecx ebx +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax edi +
jnz loc_1009AC7  +
mov eax [ebx+0D4h] +
sub eax 0 +
jz loc_1009AAA  +
dec eax  +
jz loc_1009A95  +
dec eax  +
dec eax  +
jz loc_1009A2B  +
dec eax  +
jnz loc_1009AC7  +
mov [ebp+var_4] 25Ah +
jmp loc_1009AC7  +
push dword_1017784  +
push offset dword_101778C  +
push dword_1017790  +
push offset dword_1017794  +
call sub_100BDE7  +
cmp eax edi +
jnz loc_1009AD1  +
mov eax dword_1017798 +
cmp [eax+68h] edi +
jz loc_1009A8C  +
cmp dword_10176B8 0 +
jnz loc_1009A73  +
call sub_1007B52  +
push eax  +
push 262h  +
mov ecx esi +
call ?Create@CDialog@@QAEHPBGPAVCWnd@@@Z  +
push 5  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push 71h  +
push offset loc_10096B6  +
mov ecx esi +
call sub_1009760  +
jmp loc_1009AD1  +
mov [ebp+var_4] 259h +
jmp loc_1009AC7  +
mov eax dword_1017798 +
mov dword ptr [eax+8] 2 +
mov [ebp+var_4] 260h +
jmp loc_1009AC7  +
mov eax dword_1017798 +
mov [eax+8] edi +
mov ecx dword_1017798 +
add ecx 4 +
call sub_100CC34  +
mov [ebp+var_4] 25Eh +
push [ebp+var_4]  +
mov ecx ebx +
call sub_1009D2B  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 4  +
call sub_1004D8F  +
push 86h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 2  +
call sub_1004D8F  +
push 84h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 2  +
call sub_1004D8F  +
push 85h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 2  +
call sub_1004D8F  +
push 83h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 2  +
call sub_1004D8F  +
push 132h  +
add esi 94h +
push esi  +
call sub_100AA16  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 2  +
call sub_1004D8F  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 0D8h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1009BF9  +
call sub_1009924  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov eax ds:?classCPropertyPage@CPropertyPage@@2UCRuntimeClass@@B +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 0  +
push dword ptr [ebp+8]  +
call ??0CPropertyPage@@QAE@II@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_10028C4 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_10028C4 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CPropertyPage@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax ds:?messageMap@CPropertyPage@@1UAFX_MSGMAP@@B +
retn   +
***
mov ecx offset unk_1017698 +
call sub_1009554  +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jl loc_1009CAD  +
cmp eax [ecx+8] +
jge loc_1009CAD  +
mov ecx [ecx+4] +
mov eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
call MFC42u_6928  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+8] +
push esi  +
call ?SetAtGrow@CPtrArray@@QAEXHPAX@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009C4B  +
test byte ptr [ebp+8] 1 +
jz loc_1009CF0  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_1017688 +
push ebx  +
push esi  +
push edi  +
lea edi [eax-1] +
mov esi offset unk_1017680 +
push edi  +
mov ecx esi +
call loc_1009C92  +
push 1  +
push edi  +
mov ecx esi +
mov ebx eax +
call ?RemoveAt@CPtrArray@@QAEXHH@Z  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_1009D49  +
mov eax [ecx] +
call dword ptr [eax+0F8h]  +
push eax  +
mov ecx offset unk_1017680 +
call sub_1009CB8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1009D9B  +
cmp [ebp+arg_4] eax +
jz loc_1009D97  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1009D97  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1009D7A  +
test esi esi +
jnz loc_1009DA3  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1009DB1  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
push 4  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor ebx ebx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_1009DE6  +
call ??0CString@@QAE@XZ  +
jmp loc_1009DE8  +
xor eax eax +
or esi 0FFFFFFFFh +
mov [ebp-4] esi +
push 4  +
mov dword_1017DD4 eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov dword ptr [ebp-4] 1 +
cmp ecx ebx +
jz loc_1009E12  +
call ??0CString@@QAE@XZ  +
jmp loc_1009E14  +
xor eax eax +
mov [ebp-4] esi +
push 94h  +
mov dword_10177A0 eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov dword ptr [ebp-4] 2 +
cmp ecx ebx +
jz loc_1009E3E  +
call sub_100E0D4  +
jmp loc_1009E40  +
xor eax eax +
mov [ebp-4] esi +
push 14h  +
mov dword_1017798 eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov dword ptr [ebp-4] 3 +
cmp ecx ebx +
jz loc_1009E67  +
call ??0CStringArray@@QAE@XZ  +
jmp loc_1009E69  +
xor eax eax +
mov [ebp-4] esi +
push 24h  +
mov dword_1017790 eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
mov dword ptr [ebp-4] 4 +
cmp ecx ebx +
jz loc_1009E90  +
call sub_100D539  +
jmp loc_1009E92  +
xor eax eax +
mov [ebp-4] esi +
mov dword_1017784 eax +
cmp dword_1017DD4 ebx +
jz loc_1009EC3  +
cmp dword_10177A0 ebx +
jz loc_1009EC3  +
cmp dword_1017798 ebx +
jz loc_1009EC3  +
cmp dword_1017790 ebx +
jz loc_1009EC3  +
cmp eax ebx +
jz loc_1009EC3  +
xor esi esi +
inc esi  +
jmp loc_1009ECD  +
push 68h  +
xor esi esi +
call sub_100AEC8  +
pop ecx  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_1009EF1  +
cmp edx 7FFFFFFFh +
jbe loc_1009EF6  +
mov eax 80070057h +
test eax eax +
jl loc_1009F0C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1009D66  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push ebx  +
push edi  +
push 0  +
pop eax  +
mov ebx 7FFFFFFFh +
jz loc_1009F2F  +
cmp edx ebx +
jbe loc_1009F34  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_1009F6B  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_1009F58  +
cmp [eax] cx +
jz loc_1009F54  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1009F4A  +
cmp esi ecx +
jnz loc_1009F61  +
mov [ebp+arg_4] 80070057h +
jmp loc_1009F65  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_1009F6D  +
xor ecx ecx +
test eax eax +
jl loc_1009F81  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1009D66  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor esi esi +
push esi  +
call ds:GetModuleHandleW  +
mov hInstance eax +
call sub_1009DBD  +
mov ebx eax +
cmp ebx esi +
jz loc_100A0E3  +
mov [ebp-14h] esi +
lea ecx [ebp-20h] +
call ??0AFX_EXCEPTION_LINK@@QAE@XZ  +
mov [ebp-4] esi +
mov byte ptr [ebp-4] 1 +
push dword_1017DD4  +
push 66h  +
call sub_100A125  +
mov ebx eax +
mov [ebp-14h] ebx +
cmp ebx esi +
jnz loc_1009FE8  +
push 67h  +
call sub_100AEC8  +
pop ecx  +
mov [ebp-4] esi +
jmp loc_100A008  +
mov eax [ebp-18h] +
mov [ebp-1Ch] eax +
push 68h  +
call sub_100AEC8  +
pop ecx  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100A005 +
retn   +
mov ebx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ?AfxTryCleanup@@YGXXZ  +
test ebx ebx +
jz loc_100A0E3  +
mov edi 105h +
push edi  +
mov esi offset Buffer +
push esi  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_100A0D9  +
cmp eax edi +
ja loc_100A0D9  +
push esi  +
mov edi 20Ah +
push edi  +
mov esi offset PathName +
push esi  +
call sub_1009EDA  +
test eax eax +
jl loc_100A061  +
push offset aDrivers  +
push edi  +
push esi  +
call sub_1009F15  +
test eax eax +
jge loc_100A068  +
push 160h  +
jmp loc_100A0DB  +
mov esi 104h +
push esi  +
mov ecx dword_10177A0 +
call ?GetBuffer@CString@@QAEPAGH@Z  +
test eax eax +
jnz loc_100A086  +
push 68h  +
call sub_100AEC8  +
jmp loc_100A0E2  +
push eax  +
push esi  +
call ds:GetCurrentDirectoryW  +
mov edi eax +
push 0FFFFFFFFh  +
mov ecx dword_10177A0 +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
xor ebx ebx +
cmp edi ebx +
jz loc_100A0D5  +
cmp edi esi +
jnb loc_100A0D5  +
push 40h  +
pop esi  +
push esi  +
push ebx  +
lea eax [ebp-60h] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp-60h] esi +
lea eax [ebp-60h] +
push eax  +
call ds:GlobalMemoryStatusEx  +
mov ebx eax +
test ebx ebx +
jz loc_100A0E3  +
mov eax [ebp-38h] +
mov dword_101779C eax +
jmp loc_100A0E3  +
push 6Ch  +
jmp loc_100A07F  +
push 6Ah  +
call sub_100AEC8  +
xor ebx ebx +
pop ecx  +
mov eax ebx +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+nBufferMax] 1 +
jnb loc_100A0FF  +
xor eax eax +
jmp loc_100A11C  +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
xor ecx ecx +
cmp ecx eax +
sbb eax eax +
neg eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
mov edi eax +
mov ecx esi +
cmp edi 1 +
jnz loc_100A16A  +
lea eax [ebp+Buffer] +
push eax  +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100A174  +
push offset word_1002B86  +
call ??4CString@@QAEABV0@PBD@Z  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpszSrc] +
push ebx  +
push edi  +
xor edi edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A19A  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ??_U@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_100A210  +
mov edi ds:CharToOemW +
push esi  +
push ebx  +
push [ebp+lpszSrc]  +
call edi  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_100A1CE  +
xor esi esi +
jmp loc_100A1F3  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A1D1  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ??_U@YAPAXI@Z  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_100A1F3  +
push esi  +
push [ebp+arg_4]  +
call edi  +
push esi  +
push ebx  +
call ds:ImageLoad  +
mov edi eax +
test esi esi +
jz loc_100A208  +
push esi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
push ebx  +
call ??_V@YAXPAX@Z  +
pop ecx  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
test eax eax +
jz loc_100A267  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_C] edi +
jbe loc_100A2EB  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov ebx [ebp+arg_4] +
add eax ebx +
mov [ebp+arg_0] eax +
mov esi [ebp+arg_0] +
jmp loc_100A2DD  +
js loc_100A2DA  +
mov ecx [ebp+arg_8] +
mov ecx [ecx+edi*4] +
lea eax [eax+ebx+2] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_100A2D1  +
test dl dl +
jz loc_100A2CD  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_100A2D1  +
inc eax  +
inc eax  +
inc ecx  +
inc ecx  +
test dl dl +
jnz loc_100A2B3  +
xor eax eax +
jmp loc_100A2D6  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100A2E5  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_100A2A7  +
jmp loc_100A2EE  +
inc edi  +
cmp edi [ebp+arg_C] +
jb loc_100A2A2  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+8] +
push esi  +
call ?SetAtGrow@CObArray@@QAEXHPAVCObject@@@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
and [ebp+var_4] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_C] +
jnb loc_100A389  +
mov esi [ebp+arg_0] +
jmp loc_100A34C  +
mov eax [esi+0Ch] +
add eax [ebp+arg_4] +
push eax  +
push dword ptr [edi]  +
call ds:lstrcmpiA  +
test eax eax +
jz loc_100A353  +
add esi 14h +
cmp dword ptr [esi] 0 +
jnz loc_100A336  +
jmp loc_100A37F  +
cmp [ebp+arg_10] 0 +
jnz loc_100A35E  +
xor ebx ebx +
inc ebx  +
jmp loc_100A373  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_4]  +
push esi  +
call sub_100A286  +
mov ebx eax +
test ebx ebx +
jz loc_100A37F  +
mov eax [ebp+arg_18] +
test eax eax +
jz loc_100A37F  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
inc [ebp+var_4]  +
add edi 4 +
test ebx ebx +
jz loc_100A329  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 1Ch  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_15 +
call __EH_prolog3  +
mov eax [ebp+0Ch] +
and dword ptr [ebp-10h] 0 +
test eax eax +
jl loc_100A3D8  +
cmp eax [ecx+8] +
jge loc_100A3D8  +
mov ecx [ecx+4] +
lea eax [ecx+eax*4] +
mov ecx [ebp+8] +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 1 +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
call MFC42u_6928  +
call __EH_prolog3_catch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100A442 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test eax 600h +
jz loc_100A472  +
or eax 10h +
mov [ecx] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
or dword ptr [eax] 4 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_101778C +
xor eax [ebp+arg_0] +
test al 4 +
jz loc_100A4A5  +
xor eax eax +
inc eax  +
jmp loc_100A4BC  +
push [ebp+arg_10]  +
mov ecx dword_1017784 +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_100D5DD  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpMultiByteStr] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_100A4D0  +
mov ecx [ebp+arg_4] +
push esi  +
sub eax edx +
lea esi [eax+1] +
push esi  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
test eax eax +
jz loc_100A505  +
push esi  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
mov ecx [ebp+arg_4] +
push 0FFFFFFFFh  +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jl loc_100A528  +
mov eax [ecx] +
cmp edx [eax-8] +
jge loc_100A528  +
mov ax [eax+edx*2] +
jmp loc_100A52A  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100A55C  +
cmp eax esi +
ja loc_100A55C  +
jz loc_100A561  +
jmp loc_100A569  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100A572  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
lea eax [ebp+Buffer] +
push eax  +
call ds:_putws  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
cmp dword_1017DD8 0 +
lea eax [ebp+Buffer] +
jz loc_100A609  +
push eax  +
call ds:_putws  +
pop ecx  +
jmp loc_100A622  +
push 0  +
push 40h  +
push eax  +
call ?AfxMessageBox@@YGHPBGII@Z  +
mov ecx dword_1017780 +
test ecx ecx +
jz loc_100A622  +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax 38EEh +
mov [ebp+ActionID.Data2] ax +
push edi  +
mov eax 11D1h +
mov [ebp+ActionID.Data3] ax +
push 30h  +
mov eax 0CD44h +
mov [ebp+var_10] ax +
pop edi  +
xor ebx ebx +
mov eax 11D0h +
push edi  +
mov [ebp+var_E] ax +
lea eax [ebp+ActionData] +
push ebx  +
push eax  +
mov [ebp+ActionID.Data1] 0F750E6C3h +
mov [ebp+ActionID.Data4] 85h +
mov [ebp+ActionID.Data4+1] 0E5h +
mov [ebp+ActionID.Data4+2] bl +
mov [ebp+ActionID.Data4+3] 0C0h +
mov [ebp+ActionID.Data4+4] 4Fh +
mov [ebp+ActionID.Data4+5] 0C2h +
mov [ebp+ActionID.Data4+6] 95h +
mov [ebp+ActionID.Data4+7] 0EEh +
mov [ebp+var_14] 0AAC56Bh +
mov [ebp+var_C] 8Ch +
mov [ebp+var_B] 0C2h +
mov [ebp+var_A] bl +
mov [ebp+var_9] 0C0h +
mov [ebp+var_8] 4Fh +
mov [ebp+var_7] 0C2h +
mov [ebp+var_6] 95h +
mov [ebp+var_5] 0EEh +
call memset  +
mov [ebp+ActionData] edi +
mov edi 440h +
push edi  +
lea eax [ebp+var_34] +
push ebx  +
push esi  +
mov [ebp+var_58] 2 +
mov [ebp+var_54] ebx +
mov [ebp+var_50] 1 +
mov [ebp+var_48] 3 +
mov [ebp+var_4C] eax +
mov [ebp+var_60] esi +
call memset  +
mov [esi] edi +
xor eax eax +
lea edi [ebp+var_34] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_30] eax +
add esp 18h +
lea eax [ebp+ActionData] +
push eax  +
lea eax [ebp+ActionID] +
push eax  +
mov [ebp+var_34] 10h +
call sub_1007B52  +
push dword ptr [eax+20h]  +
call WinVerifyTrust  +
mov edi eax +
cmp edi ebx +
jz loc_100A749  +
lea eax [ebp+ActionData] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_1007B52  +
push dword ptr [eax+20h]  +
call WinVerifyTrust  +
mov edi eax +
add esi 424h +
mov eax [esi] +
cmp eax ebx +
jz loc_100A75E  +
push eax  +
call ds:CertFreeCertificateContext  +
mov [esi] ebx +
mov ecx [ebp+var_4] +
xor eax eax +
cmp edi ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 72Ch +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push 80h  +
push 3  +
pop esi  +
push esi  +
push ebx  +
push esi  +
mov ecx 38EEh +
mov [ebp+ActionID.Data2] cx +
push 80000000h  +
mov ecx 11D1h +
push eax  +
mov [ebp+var_6D4] eax +
mov [ebp+ActionID.Data1] 0F750E6C3h +
mov [ebp+ActionID.Data3] cx +
mov [ebp+ActionID.Data4] 85h +
mov [ebp+ActionID.Data4+1] 0E5h +
mov [ebp+ActionID.Data4+2] bl +
mov [ebp+ActionID.Data4+3] 0C0h +
mov [ebp+ActionID.Data4+4] 4Fh +
mov [ebp+ActionID.Data4+5] 0C2h +
mov [ebp+ActionID.Data4+6] 95h +
mov [ebp+ActionID.Data4+7] 0EEh +
mov [ebp+var_6C8] ebx +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_100A80A  +
mov [ebp+var_6C8] 1 +
jmp loc_100A9FA  +
push 64h  +
pop eax  +
push eax  +
mov [ebp+var_6CC] eax +
lea eax [ebp+var_68] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
lea eax [ebp+var_68] +
push eax  +
lea eax [ebp+var_6CC] +
push eax  +
push edi  +
call CryptCATAdminCalcHashFromFileHandle  +
push edi  +
mov [ebp+var_6D8] eax +
call ds:CloseHandle  +
cmp [ebp+var_6D8] 1 +
jnz loc_100A9FA  +
mov edi 440h +
push edi  +
lea eax [ebp+var_6C4] +
push ebx  +
push eax  +
call memset  +
push 9  +
pop ecx  +
xor eax eax +
mov [ebp+var_6C4] edi +
lea edi [ebp+var_6FC] +
stos   +
lea eax [ebp+var_68] +
mov [ebp+var_6E4] eax +
mov eax [ebp+var_6CC] +
push 30h  +
mov [ebp+var_6E0] eax +
mov eax [ebp+var_6D4] +
pop edi  +
push edi  +
mov [ebp+var_6F0] eax +
lea eax [ebp+ActionData] +
push ebx  +
push eax  +
mov [ebp+var_6FC] 24h +
call memset  +
add esp 18h +
push 2  +
pop eax  +
mov [ebp+var_720] eax +
mov [ebp+var_718] eax +
lea eax [ebp+var_6C4] +
mov [ebp+var_728] eax +
lea eax [ebp+var_6FC] +
mov [ebp+ActionData] edi +
mov [ebp+var_71C] ebx +
mov [ebp+var_710] esi +
mov [ebp+var_714] eax +
cmp dword_1017DE0 ebx +
jnz loc_100A90B  +
push ebx  +
push ebx  +
push offset dword_1017DE0  +
call CryptCATAdminAcquireContext  +
cmp dword_1017DE0 ebx +
jz loc_100A9FA  +
lea eax [ebp+var_6D0] +
push eax  +
push ebx  +
push [ebp+var_6CC]  +
lea eax [ebp+var_68] +
push eax  +
push dword_1017DE0  +
mov [ebp+var_6D0] ebx +
call CryptCATAdminEnumCatalogFromHash  +
mov esi 20Ch +
mov edi eax +
cmp edi ebx +
jz loc_100A9E2  +
push esi  +
lea eax [ebp+var_284] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
lea eax [ebp+var_284] +
push eax  +
push edi  +
mov [ebp+var_284] esi +
call CryptCATCatalogInfoFromContext  +
test eax eax +
jz loc_100A9B1  +
lea eax [ebp+var_280] +
mov [ebp+var_6F4] eax +
lea eax [ebp+ActionData] +
push eax  +
lea eax [ebp+ActionID] +
push eax  +
call sub_1007B52  +
push dword ptr [eax+20h]  +
call WinVerifyTrust  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_6C8] ecx +
cmp [ebp+pCertContext] ebx +
jz loc_100A9B1  +
push [ebp+pCertContext]  +
call ds:CertFreeCertificateContext  +
mov [ebp+pCertContext] ebx +
cmp [ebp+var_6C8] 1 +
jz loc_100A9FA  +
lea eax [ebp+var_6D0] +
push eax  +
push ebx  +
push [ebp+var_6CC]  +
lea eax [ebp+var_68] +
push eax  +
push dword_1017DE0  +
mov [ebp+var_6D0] edi +
call CryptCATAdminEnumCatalogFromHash  +
jmp loc_100A933  +
lea eax [ebp+var_6C4] +
push eax  +
push [ebp+var_6D4]  +
call sub_100A633  +
mov [ebp+var_6C8] eax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_6C8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 4  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-10h]  +
mov ecx [ebp+8] +
mov esi eax +
call ?SetWindowTextW@CWnd@@QAEXPBG@Z  +
xor eax eax +
cmp esi 1 +
setz al  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov esi [ebp+10h] +
test [ebp+0Ch] esi +
jz loc_100AAD1  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+14h]  +
call sub_100A125  +
lea eax [ebp-10h] +
push eax  +
test [ebp+8] esi +
jz loc_100AAB3  +
push 146h  +
jmp loc_100AAB8  +
push 147h  +
call sub_100A125  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push offset aSS  +
call ds:wprintf  +
add esp 0Ch +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
cmp edi [ebp+arg_4] +
jnz loc_100AB14  +
push 0EFh  +
call sub_100A57F  +
pop ecx  +
jmp loc_100ABDB  +
push esi  +
push 0F0h  +
call sub_100A57F  +
mov [esp+0Ch+var_C] 103h +
mov esi edi +
xor esi [ebp+arg_4] +
push 1  +
push esi  +
push edi  +
call sub_100AA6B  +
push 104h  +
push 8  +
push esi  +
push edi  +
call sub_100AA6B  +
push 107h  +
push 2  +
push esi  +
push edi  +
call sub_100AA6B  +
push 105h  +
push 10h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 108h  +
push 20h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 109h  +
push 80h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 14Dh  +
push 100h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 141h  +
push 200h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 10Ah  +
push 4  +
push esi  +
push edi  +
call sub_100AA6B  +
push 149h  +
push 400h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 140h  +
push 800h  +
push esi  +
push edi  +
call sub_100AA6B  +
push 0FAh  +
call sub_100A57F  +
pop ecx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 0  +
push 3  +
push offset lpMultiByteStr  +
push [ebp+arg_0]  +
call sub_100A3E3  +
mov esi eax +
test esi esi +
jz loc_100AC1A  +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
push lpMultiByteStr[eax*4]  +
call sub_100A4C5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx esi +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov ebx eax +
test ebx ebx +
jz loc_100AC8F  +
push edi  +
push [ebp+arg_4]  +
push ebx  +
call sub_100A18B  +
mov edi eax +
test edi edi +
jnz loc_100AC62  +
push eax  +
push ebx  +
call sub_100A18B  +
mov edi eax +
push 0FFFFFFFFh  +
mov ecx esi +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
test edi edi +
jz loc_100AC8E  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
call sub_100A3E3  +
push edi  +
mov [ebp+var_4] eax +
call ds:ImageUnload  +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
and dword ptr [ebp+0Ch] 0 +
lea ecx [ebp-10h] +
call ?MakeLower@CString@@QAEXXZ  +
lea ecx [ebp+8] +
call ?MakeLower@CString@@QAEXXZ  +
mov eax [ebp-10h] +
mov ebx [eax-8] +
xor eax eax +
push eax  +
push dword ptr [ebp-10h]  +
lea ecx [ebp+8] +
call MFC42u_6655  +
mov esi eax +
test esi esi +
jl loc_100AD3B  +
jz loc_100AD0B  +
lea eax [esi-1] +
push eax  +
lea ecx [ebp+8] +
call sub_100A50F  +
push 20h  +
pop ecx  +
cmp cx ax +
jnz loc_100AD2F  +
lea edi [esi+ebx] +
push edi  +
lea ecx [ebp+8] +
call sub_100A50F  +
xor ecx ecx +
cmp cx ax +
jz loc_100AD34  +
push edi  +
lea ecx [ebp+8] +
call sub_100A50F  +
push 20h  +
pop ecx  +
cmp cx ax +
jz loc_100AD34  +
lea eax [esi+1] +
jmp loc_100ACE3  +
mov dword ptr [ebp+0Ch] 1 +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp+0Ch] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
push 20h  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHG@Z  +
test eax eax +
jge loc_100AD9A  +
push 9  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHG@Z  +
test eax eax +
jl loc_100ADDE  +
lea eax [ebp+8] +
push eax  +
push 22h  +
lea eax [ebp-14h] +
push eax  +
call sub_100580D  +
mov byte ptr [ebp-4] 1 +
push 22h  +
push eax  +
lea eax [ebp-10h] +
push eax  +
call sub_10057CE  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov esi [ebp+0Ch] +
push dword ptr [esi]  +
push dword ptr [ebp+8]  +
call sub_100AC9D  +
test eax eax +
jnz loc_100AE0B  +
mov eax [esi] +
cmp dword ptr [eax-8] 0 +
jle loc_100AE00  +
push 20h  +
mov ecx esi +
call ??YCString@@QAEABV0@G@Z  +
lea eax [ebp+8] +
push eax  +
mov ecx esi +
call ??YCString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov edi [ebp+0Ch] +
and dword ptr [ebp-10h] 0 +
mov esi [edi+8] +
jmp loc_100AE6F  +
dec esi  +
push esi  +
lea eax [ebp+0Ch] +
push eax  +
mov ecx edi +
call loc_100A397  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+8]  +
mov ecx eax +
call sub_1004C9C  +
mov ebx eax +
neg ebx  +
sbb bl bl +
inc bl  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
test bl bl +
jnz loc_100AE75  +
test esi esi +
jg loc_100AE3C  +
jmp loc_100AE7C  +
mov dword ptr [ebp-10h] 1 +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100AEA1  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100AEA6  +
mov eax 80070057h +
test eax eax +
jl loc_100AEBF  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100A533  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 100h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
test eax eax +
jz loc_100AF4E  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_204] +
push eax  +
call sub_100AE8C  +
test eax eax +
jge loc_100AF1C  +
xor eax eax +
mov word ptr [ebp+var_204] ax +
cmp dword_1017DD8 0 +
lea eax [ebp+var_204] +
jz loc_100AF35  +
push eax  +
call ds:_putws  +
pop ecx  +
jmp loc_100AF4E  +
push 0  +
push 10h  +
push eax  +
call ?AfxMessageBox@@YGHPBGII@Z  +
mov ecx dword_1017780 +
test ecx ecx +
jz loc_100AF4E  +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 100h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
test eax eax +
jz loc_100AFC2  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_204] +
push eax  +
call sub_100AE8C  +
test eax eax +
jge loc_100AFB4  +
xor eax eax +
mov word ptr [ebp+var_204] ax +
lea eax [ebp+var_204] +
push eax  +
call ds:_putws  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push dword ptr [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
xor ecx ecx +
test eax eax +
setz cl  +
mov esi ecx +
or dword_1017DE8 esi +
cmp esi 1 +
jz loc_100B015  +
push eax  +
push dword ptr [ebp+lpValueName]  +
push 93h  +
call sub_100AEC8  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpData] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100B02C  +
push esi  +
sub eax ecx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push 1  +
push 0  +
push dword ptr [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
xor ecx ecx +
test eax eax +
setz cl  +
mov esi ecx +
or dword_1017DE8 esi +
cmp esi 1 +
jz loc_100B078  +
push eax  +
push dword ptr [ebp+lpValueName]  +
push 93h  +
call sub_100AEC8  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
push 0FFFFFFFFh  +
push 0  +
call ?SetSize@CStringArray@@QAEXHH@Z  +
lea ecx [ebp+8] +
call ?TrimRight@CString@@QAEXXZ  +
jmp loc_100B212  +
jle loc_100B0C0  +
movzx eax word ptr [eax] +
jmp loc_100B0C2  +
xor eax eax +
cmp ax 22h +
jnz loc_100B16B  +
cmp esi 1 +
jz loc_100B228  +
dec esi  +
push esi  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
push 22h  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHG@Z  +
mov edi eax +
test edi edi +
jl loc_100B228  +
jle loc_100B13A  +
push edi  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp+8] +
call ?Left@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
jmp loc_100B142  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
sub esi edi +
dec esi  +
push esi  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
jmp loc_100B1EB  +
push 20h  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHG@Z  +
mov edi eax +
test edi edi +
jge loc_100B1A1  +
push 9  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHG@Z  +
mov edi eax +
test edi edi +
jge loc_100B1A1  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+8] +
call ?Empty@CString@@QAEXXZ  +
jmp loc_100B1F0  +
push edi  +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp+8] +
call ?Left@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
sub esi edi +
dec esi  +
push esi  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
jle loc_100B212  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_100AE24  +
test eax eax +
jnz loc_100B212  +
mov ecx [ebp+0Ch] +
lea eax [ebp-10h] +
push eax  +
call sub_10057B0  +
lea ecx [ebp+8] +
call ?TrimLeft@CString@@QAEXXZ  +
mov eax [ebp+8] +
mov esi [eax-8] +
test esi esi +
jnz loc_100B0B9  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-38h] +
call ??0CStringArray@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea eax [ebp-38h] +
push eax  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-24h] esp +
xor edi edi +
push eax  +
inc edi  +
call ??0CString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 4 +
mov byte ptr [ebp-4] 3 +
call sub_100B084  +
mov ecx [ebp+0Ch] +
mov eax [ebp-30h] +
mov esi [ecx+8] +
mov [ebp-24h] eax +
cmp eax esi +
jnz loc_100B33E  +
xor edi edi +
and [ebp-10h] edi +
test eax eax +
jle loc_100B33E  +
push dword ptr [ebp-10h]  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-38h] +
call loc_100A397  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
xor edi edi +
inc edi  +
xor ebx ebx +
test esi esi +
jle loc_100B33E  +
mov ecx [ebp+0Ch] +
push ebx  +
lea eax [ebp-20h] +
push eax  +
call loc_100A397  +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-14h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100B331  +
inc ebx  +
cmp ebx esi +
jl loc_100B2F2  +
jmp loc_100B33E  +
xor edi edi +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp-24h] +
jl loc_100B2C1  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-38h] +
call ??1CStringArray@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpData] +
push 4  +
pop esi  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+lpData] +
push eax  +
push 0  +
push dword ptr [ebp+lpValueName]  +
mov [ebp+cbData] esi +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
cmp eax 2 +
jnz loc_100B3B2  +
and dword ptr [edi] 0 +
xor esi esi +
inc esi  +
jmp loc_100B3D3  +
test eax eax +
jnz loc_100B3C0  +
cmp [ebp+lpData] esi +
jnz loc_100B3C0  +
cmp [ebp+cbData] esi +
jz loc_100B3AD  +
push eax  +
push dword ptr [ebp+lpValueName]  +
xor esi esi +
push 110h  +
call sub_100AEC8  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_8] 0 +
push esi  +
push edi  +
mov [ebp+var_10] 8 +
mov [ebp+var_4] 80h +
mov edi 0FEh +
mov eax [ebp+var_4] +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_100B475  +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push dword ptr [ebp+lpValueName]  +
mov [ebp+cbData] edi +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov [ebp+var_10] eax +
sub eax 0 +
jz loc_100B468  +
dec eax  +
dec eax  +
jnz loc_100B470  +
mov [esi] ax +
mov [ebp+var_8] 1 +
mov ecx [ebp+arg_8] +
push esi  +
call ??4CString@@QAEABV0@PBG@Z  +
push esi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
xor eax eax +
inc eax  +
cmp [ebp+Type] eax +
jz loc_100B4B1  +
xor eax eax +
mov [esi] ax +
mov ecx [ebp+arg_8] +
push esi  +
call ??4CString@@QAEABV0@PBG@Z  +
push esi  +
call ??_V@YAXPAX@Z  +
sub [ebp+var_4] 0FFFFFF80h +
add edi 100h +
cmp [ebp+var_4] 1000h +
pop ecx  +
jb loc_100B401  +
push [ebp+var_10]  +
push dword ptr [ebp+lpValueName]  +
push 93h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100B45F  +
mov [ebp+var_8] eax +
mov eax [ebp+cbData] +
shr eax 1 +
xor ecx ecx +
mov [esi+eax*2] cx +
jmp loc_100B44F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
test eax eax +
jz loc_100B4F6  +
cmp eax 2 +
jz loc_100B4F6  +
push eax  +
push dword ptr [ebp+lpValueName]  +
xor esi esi +
push 96h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100B507  +
xor esi esi +
xor ecx ecx +
inc esi  +
cmp eax 2 +
setnz cl  +
or dword_1017DE8 ecx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
xor esi esi +
mov [ecx] esi +
mov ecx [ebp+arg_8] +
mov [ecx] esi +
mov ecx [ebp+arg_C] +
xor ebx ebx +
mov [ecx] esi +
mov ecx [ebp+arg_10] +
inc ebx  +
test byte ptr [ebp+hKey] 4 +
mov eax ebx +
mov [ecx] esi +
jz loc_100B619  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push esi  +
mov edi offset SubKey +
push edi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jz loc_100B582  +
cmp eax 5 +
jnz loc_100B571  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100B5FD  +
push eax  +
push edi  +
push 92h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100B5FD  +
mov edi [ebp+lpData] +
push edi  +
push offset aVerifierfaultp  +
push [ebp+hKey]  +
call sub_100B37D  +
test eax eax +
jz loc_100B5F4  +
cmp [edi] esi +
jz loc_100B5A0  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
mov edi [ebp+arg_20] +
push edi  +
push offset aVerifierfaultb  +
push [ebp+hKey]  +
call sub_100B37D  +
test eax eax +
jz loc_100B5F4  +
cmp [edi] esi +
jz loc_100B5BE  +
mov eax [ebp+arg_10] +
mov [eax] ebx +
mov edi [ebp+arg_18] +
push edi  +
push offset aVerifierfaultt  +
push [ebp+hKey]  +
call sub_100B3E0  +
test eax eax +
jz loc_100B5F4  +
mov eax [edi] +
cmp [eax-8] esi +
jz loc_100B5DF  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov edi [ebp+arg_1C] +
push edi  +
push offset aVerifierfaulta  +
push [ebp+hKey]  +
call sub_100B3E0  +
test eax eax +
jnz loc_100B601  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
jmp loc_100B618  +
mov eax [edi] +
cmp [eax-8] esi +
jz loc_100B60D  +
mov eax [ebp+arg_C] +
mov [eax] ebx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hKey] +
push offset aVerifierfaultp  +
push esi  +
call sub_100B4C6  +
test eax eax +
jz loc_100B66E  +
push offset aVerifierfaultt  +
push esi  +
call sub_100B4C6  +
test eax eax +
jz loc_100B66E  +
push offset aVerifierfaulta  +
push esi  +
call sub_100B4C6  +
test eax eax +
jz loc_100B66E  +
push offset aVerifierfaultb  +
push esi  +
call sub_100B4C6  +
test eax eax +
jz loc_100B66E  +
xor eax eax +
inc eax  +
jmp loc_100B670  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov edi [ebp+8] +
and dword ptr [ebp-10h] 0 +
mov ecx edi +
call sub_100D4A5  +
lea ecx [edi+60h] +
call sub_100D46F  +
mov ebx 4000h +
push ebx  +
mov [ebp+8] ebx +
call ds:malloc  +
jmp loc_100B6D8  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
push esi  +
push 33h  +
call ds:NtQuerySystemInformation  +
cmp eax 0C0000004h +
jnz loc_100B6E4  +
push esi  +
call ds:free  +
add [ebp+8] ebx +
push dword ptr [ebp+8]  +
call ds:malloc  +
pop ecx  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_100B6AD  +
mov eax 0C000009Ah +
test eax eax +
jge loc_100B6F9  +
push eax  +
push 9Eh  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100B8AE  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_100B705  +
push esi  +
jmp loc_100B8A8  +
mov ecx [esi+4] +
xor eax eax +
inc eax  +
and ecx eax +
mov [edi+4] ecx +
mov ecx [esi+4] +
shr ecx 1 +
and ecx eax +
mov [edi+0Ch] ecx +
mov ecx [esi+4] +
shr ecx 2 +
and ecx eax +
mov [edi+1Ch] ecx +
mov ecx [esi+4] +
shr ecx 3 +
and ecx eax +
mov [edi+8] ecx +
mov ecx [esi+4] +
shr ecx 4 +
and ecx eax +
mov [edi+10h] ecx +
mov ecx [esi+4] +
shr ecx 5 +
and ecx eax +
mov [edi+14h] ecx +
mov ecx [esi+4] +
shr ecx 7 +
and ecx eax +
mov [edi+18h] ecx +
mov ecx [esi+4] +
shr ecx 8 +
and ecx eax +
mov [edi+20h] ecx +
mov ecx [esi+4] +
shr ecx 9 +
and ecx eax +
mov [edi+24h] ecx +
mov ecx [esi+4] +
shr ecx 0Ah +
and ecx eax +
mov [edi+28h] ecx +
mov ecx [esi+4] +
shr ecx 0Bh +
and ecx eax +
mov [edi+2Ch] ecx +
mov eax [esi+10h] +
mov [edi+30h] eax +
mov eax [esi+14h] +
mov [edi+34h] eax +
mov eax [esi+18h] +
mov [edi+38h] eax +
mov eax [esi+1Ch] +
mov [edi+3Ch] eax +
mov eax [esi+20h] +
mov [edi+40h] eax +
mov eax [esi+24h] +
mov [edi+44h] eax +
mov eax [esi+28h] +
mov [edi+48h] eax +
mov eax [esi+30h] +
mov [edi+4Ch] eax +
mov eax [esi+34h] +
mov [edi+50h] eax +
mov eax [esi+38h] +
mov [edi+54h] eax +
mov eax [esi+44h] +
mov [edi+58h] eax +
mov eax [esi+4] +
mov [ebp-14h] esi +
mov [edi+5Ch] eax +
push 30h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
xor ebx ebx +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_100B7E5  +
mov ecx eax +
call sub_100D3D0  +
mov ebx eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
test ebx ebx +
jz loc_100B89D  +
movzx eax word ptr [esi+8] +
inc eax  +
lea ecx [ebx+4] +
push eax  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+8] eax +
test eax eax +
jz loc_100B832  +
movzx ecx word ptr [esi+8] +
lea ecx [ecx+ecx+2] +
push ecx  +
push dword ptr [esi+0Ch]  +
push eax  +
call memcpy  +
movzx eax word ptr [esi+8] +
mov edx [ebp+8] +
xor ecx ecx +
add esp 0Ch +
mov [edx+eax*2] cx +
push 0FFFFFFFFh  +
lea ecx [ebx+4] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push dword ptr [ebx+4]  +
mov ecx edi +
call sub_100D4F6  +
test eax eax +
jz loc_100B84B  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax+4]  +
jmp loc_100B890  +
mov eax [esi+3Ch] +
mov [ebx+8] eax +
mov eax [esi+40h] +
mov [ebx+0Ch] eax +
mov eax [esi+48h] +
mov [ebx+10h] eax +
mov eax [esi+4Ch] +
mov [ebx+14h] eax +
mov eax [esi+50h] +
mov [ebx+18h] eax +
mov eax [esi+54h] +
mov [ebx+1Ch] eax +
mov eax [esi+58h] +
mov [ebx+20h] eax +
mov eax [esi+5Ch] +
mov [ebx+24h] eax +
mov eax [esi+60h] +
mov [ebx+28h] eax +
mov eax [esi+64h] +
push ebx  +
lea ecx [edi+60h] +
mov [ebx+2Ch] eax +
call sub_100A2FA  +
mov eax [esi] +
test eax eax +
jz loc_100B8A5  +
add esi eax +
jmp loc_100B7C8  +
push 68h  +
call sub_100AEC8  +
pop ecx  +
push dword ptr [ebp-14h]  +
call ds:free  +
xor eax eax +
pop ecx  +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_204] +
push 100h  +
push eax  +
call sub_100AE8C  +
test eax eax +
jge loc_100B8FD  +
xor eax eax +
mov word ptr [ebp+var_204] ax +
lea eax [ebp+var_204] +
push esi  +
push eax  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
pop esi  +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 100h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_100A0F0  +
test eax eax +
jz loc_100B999  +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_204] +
push eax  +
call sub_100AE8C  +
test eax eax +
jge loc_100B980  +
xor eax eax +
mov word ptr [ebp+var_204] ax +
lea eax [ebp+var_204] +
push edi  +
push eax  +
call ds:fputws  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
lea eax [ebp+hObject] +
push eax  +
push 20h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_100B9DE  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
xor eax eax +
jmp loc_100BA42  +
push edi  +
lea eax [ebp+NewState.Privileges] +
push eax  +
push offset Name  +
xor edi edi +
push edi  +
mov [ebp+NewState.PrivilegeCount] esi +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:LookupPrivilegeValueW  +
cmp eax esi +
jnz loc_100BA2B  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+NewState] +
push eax  +
push edi  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
cmp eax esi +
jnz loc_100BA2B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BA2B  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax esi +
jmp loc_100BA41  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 0  +
push 3  +
push offset lpMultiByteStr  +
push offset Buffer  +
push [ebp+arg_0]  +
call sub_100AC26  +
mov esi eax +
test esi esi +
jz loc_100BA84  +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
push lpMultiByteStr[eax*4]  +
call sub_100A4C5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
lea ecx [ebp-38h] +
call ??0CStringArray@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
mov edi [ebp+8] +
mov ebx [edi+8] +
and dword ptr [ebp+8] 0 +
test ebx ebx +
jle loc_100BB80  +
push dword ptr [ebp+8]  +
lea eax [ebp-20h] +
push eax  +
mov ecx edi +
call loc_100A397  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_100BA4A  +
test eax eax +
jz loc_100BB74  +
mov eax [ebp-30h] +
xor esi esi +
mov [ebp-1Ch] eax +
test eax eax +
jle loc_100BB65  +
push esi  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp-38h] +
call loc_100A397  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-10h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100BB60  +
inc esi  +
cmp esi [ebp-1Ch] +
jl loc_100BB22  +
cmp esi [ebp-1Ch] +
jl loc_100BB74  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-30h]  +
lea ecx [ebp-38h] +
call MFC42u_6874  +
inc dword ptr [ebp+8]  +
cmp [ebp+8] ebx +
jl loc_100BADE  +
mov ebx [ebp-30h] +
xor esi esi +
test ebx ebx +
jle loc_100BBBF  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-38h] +
call loc_100A397  +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call sub_10057B0  +
inc esi  +
cmp esi ebx +
jl loc_100BB89  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-38h] +
call ??1CStringArray@@UAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_GS  +
lea ecx [ebp-114h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-118h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-114h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_100A125  +
xor eax eax +
cmp [ebp+0Ch] eax +
lea ecx [ebp-118h] +
setnz al  +
push ecx  +
add eax 81h +
push eax  +
call sub_100A125  +
push dword ptr [ebp-118h]  +
lea eax [ebp-110h] +
push dword ptr [ebp-114h]  +
push offset aSS_0  +
push 80h  +
push eax  +
call sub_1004A21  +
xor eax eax +
mov [ebp-12h] ax +
lea eax [ebp-110h] +
push eax  +
call ds:_putws  +
add esp 18h +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-118h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-114h] +
call ??1CString@@QAE@XZ  +
call sub_10121F9  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+arg_0] 0 +
jnz loc_100BCCD  +
push 14Fh  +
call sub_100A5C7  +
pop ecx  +
jmp loc_100BCE2  +
push 2710h  +
push dword ptr [ebp+arg_0]  +
push 150h  +
call sub_100AF60  +
add esp 0Ch +
mov eax dword ptr [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100BCE8  +
sub eax edx +
sar eax 1 +
jnz loc_100BD04  +
push 151h  +
call sub_100A5C7  +
jmp loc_100BD12  +
push dword ptr [ebp+arg_4]  +
push 152h  +
call sub_100AF60  +
pop ecx  +
mov eax dword ptr [ebp+arg_8] +
pop ecx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100BD19  +
sub eax edx +
sar eax 1 +
jnz loc_100BD35  +
push 153h  +
call sub_100A5C7  +
jmp loc_100BD43  +
push dword ptr [ebp+arg_8]  +
push 154h  +
call sub_100AF60  +
pop ecx  +
cmp dword ptr [ebp+arg_C] 0 +
pop ecx  +
jz loc_100BD59  +
push dword ptr [ebp+arg_C]  +
push 15Ah  +
call sub_100AF60  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hKey] 0 +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push 0  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_100BDAD  +
cmp eax 5 +
jnz loc_100BD9C  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100BDDA  +
push eax  +
push esi  +
push 92h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100BDDA  +
push [ebp+lpData]  +
push offset aVerifydriverle  +
push [ebp+hKey]  +
call sub_100B37D  +
test eax eax +
jz loc_100BDD1  +
push [ebp+arg_0]  +
push offset aVerifydrivers  +
push [ebp+hKey]  +
call sub_100B3E0  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov ecx [ebp+0Ch] +
push 0FFFFFFFFh  +
push ebx  +
call ?SetSize@CStringArray@@QAEXHH@Z  +
mov edi [ebp+10h] +
mov esi [ebp+8] +
push edi  +
lea eax [ebp-10h] +
mov [edi] ebx +
push eax  +
mov [esi] ebx +
call sub_100BD62  +
lea ecx [ebp-10h] +
mov [ebp+10h] eax +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-10h] +
call ?TrimRight@CString@@QAEXXZ  +
push offset asc_1001B08  +
push dword ptr [ebp-10h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100BE4E  +
mov dword ptr [esi] 1 +
jmp loc_100BE6C  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp+0Ch] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
mov [ebp-4] bl +
call sub_100B084  +
cmp [ebp+10h] ebx +
jz loc_100BE82  +
push dword ptr [edi]  +
mov ecx [ebp+14h] +
call sub_100CEED  +
test eax eax +
jz loc_100BE82  +
xor ebx ebx +
inc ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 2  +
xor edi edi +
push edi  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
cmp eax edi +
jz loc_100BEE9  +
cmp eax 5 +
jnz loc_100BED8  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100BF30  +
push eax  +
push esi  +
push 92h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100BF30  +
push offset aVerifydriverle  +
push [ebp+hKey]  +
call sub_100B4C6  +
test eax eax +
jnz loc_100BEFF  +
push [ebp+hKey]  +
jmp loc_100BF1F  +
push offset aVerifydrivers  +
push [ebp+hKey]  +
call sub_100B4C6  +
push [ebp+hKey]  +
test eax eax +
jz loc_100BF1F  +
call sub_100B624  +
push [ebp+hKey]  +
test eax eax +
jnz loc_100BF27  +
call ds:RegCloseKey  +
jmp loc_100BF30  +
call ds:RegCloseKey  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 2  +
xor edi edi +
push edi  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
cmp eax edi +
jz loc_100BF8C  +
cmp eax 5 +
jnz loc_100BF76  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100BF85  +
push eax  +
push esi  +
push 92h  +
call sub_100AEC8  +
add esp 0Ch +
xor esi esi +
jmp loc_100C050  +
test [ebp+arg_0] 4 +
jnz loc_100BFA2  +
push [ebp+hKey]  +
call sub_100B624  +
jmp loc_100C04E  +
cmp dword ptr [ebp+Data] edi +
jnz loc_100BFB6  +
push offset aVerifierfaultp  +
push [ebp+hKey]  +
call sub_100B4C6  +
jmp loc_100BFC6  +
push dword ptr [ebp+Data]  +
push offset aVerifierfaultp  +
push [ebp+hKey]  +
call sub_100AFD4  +
mov esi eax +
cmp esi edi +
jz loc_100C050  +
mov eax [ebp+arg_8] +
mov eax [eax] +
cmp [eax-8] edi +
jnz loc_100BFE9  +
push offset aVerifierfaultt  +
push [ebp+hKey]  +
call sub_100B4C6  +
jmp loc_100BFF7  +
push eax  +
push offset aVerifierfaultt  +
push [ebp+hKey]  +
call sub_100B021  +
mov esi eax +
cmp esi edi +
jz loc_100C050  +
mov eax [ebp+arg_C] +
mov eax [eax] +
cmp [eax-8] edi +
jnz loc_100C016  +
push offset aVerifierfaulta  +
push [ebp+hKey]  +
call sub_100B4C6  +
jmp loc_100C024  +
push eax  +
push offset aVerifierfaulta  +
push [ebp+hKey]  +
call sub_100B021  +
mov esi eax +
cmp esi edi +
jz loc_100C050  +
cmp [ebp+arg_10] edi +
jnz loc_100C03E  +
push offset aVerifierfaultb  +
push [ebp+hKey]  +
call sub_100B4C6  +
jmp loc_100C04E  +
push [ebp+arg_10]  +
push offset aVerifierfaultb  +
push [ebp+hKey]  +
call sub_100AFD4  +
mov esi eax +
cmp [ebp+hKey] edi +
jz loc_100C05E  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
lea ecx [ebp-19Ch] +
call sub_100DD46  +
xor ebx ebx +
mov [ebp-4] ebx +
lea eax [ebp-128h] +
push eax  +
mov dword ptr [ebp-114h] 1 +
call ds:GetLocalTime  +
push 40h  +
lea eax [ebp-110h] +
push eax  +
push ebx  +
lea eax [ebp-128h] +
push eax  +
push ebx  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
test eax eax +
jz loc_100C0DB  +
lea eax [ebp-110h] +
push eax  +
push offset aS  +
push edi  +
call sub_100B8BF  +
add esp 0Ch +
push 40h  +
lea eax [ebp-90h] +
push eax  +
push ebx  +
lea eax [ebp-128h] +
push eax  +
push ebx  +
push esi  +
call ds:GetTimeFormatW  +
test eax eax +
jz loc_100C10F  +
lea eax [ebp-90h] +
push eax  +
push offset aS_0  +
push edi  +
call sub_100B8BF  +
add esp 0Ch +
jmp loc_100C11C  +
push offset asc_1001B04  +
push edi  +
call sub_100B8BF  +
pop ecx  +
pop ecx  +
lea eax [ebp-19Ch] +
push eax  +
call sub_100B67A  +
test eax eax +
jnz loc_100C15A  +
push edi  +
push 0C4h  +
call sub_100A21D  +
mov [ebp-114h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-19Ch] +
call sub_10067A0  +
mov eax [ebp-114h] +
call sub_10121F9  +
retn 4  +
mov eax [ebp-134h] +
mov [ebp-118h] eax +
cmp eax ebx +
jnz loc_100C17D  +
push edi  +
push 0C5h  +
call sub_100A21D  +
mov [ebp-114h] eax +
jmp loc_100C13D  +
push dword ptr [ebp-140h]  +
push 0C6h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-16Ch]  +
push 0C7h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-168h]  +
push 0C8h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-164h]  +
push 0C9h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-160h]  +
push 0CAh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-15Ch]  +
push 0CBh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-158h]  +
push 0CCh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-154h]  +
push 0CDh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-14Ch]  +
push 0CEh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-148h]  +
push 0CFh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-150h]  +
push 0D0h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push dword ptr [ebp-144h]  +
push 0D1h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C137  +
push edi  +
push 0D2h  +
call sub_100A21D  +
test eax eax +
jz loc_100C137  +
cmp [ebp-118h] ebx +
jle loc_100C13D  +
push offset asc_1001B04  +
push edi  +
call sub_100B8BF  +
pop ecx  +
pop ecx  +
push ebx  +
lea ecx [ebp-13Ch] +
call sub_100D45F  +
mov esi eax +
push dword ptr [esi+0Ch]  +
mov eax [esi+4] +
push dword ptr [esi+8]  +
push eax  +
push 0D3h  +
push edi  +
call sub_100B928  +
add esp 14h +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+10h]  +
push 0D4h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+14h]  +
push 0D5h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+18h]  +
push 0D6h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+1Ch]  +
push 0D7h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+20h]  +
push 0D8h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+24h]  +
push 0D9h  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+28h]  +
push 0DAh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
push dword ptr [esi+2Ch]  +
push 0DBh  +
push edi  +
call sub_100B928  +
add esp 0Ch +
test eax eax +
jz loc_100C3E1  +
inc ebx  +
cmp ebx [ebp-118h] +
jl loc_100C2E4  +
jmp loc_100C13D  +
and dword ptr [ebp-114h] 0 +
jmp loc_100C13D  +
***
call __EH_prolog3  +
lea ecx [ebp-80h] +
call sub_100DD46  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-80h] +
xor esi esi +
push eax  +
inc esi  +
call sub_100B67A  +
test eax eax +
jnz loc_100C421  +
push 0C4h  +
jmp loc_100C464  +
mov eax [ebp-24h] +
cmp eax [ebp+8] +
jz loc_100C46C  +
cmp dword_1017DE4 esi +
jz loc_100C43F  +
call sub_100B9AC  +
mov dword_1017DE4 eax +
cmp eax esi +
jnz loc_100C46A  +
push 4  +
lea eax [ebp+8] +
push eax  +
push 33h  +
call ds:NtSetSystemInformation  +
test eax eax +
jge loc_100C46C  +
cmp eax 0C0000022h +
jnz loc_100C45F  +
push 91h  +
jmp loc_100C464  +
push 0E3h  +
call sub_100AEC8  +
pop ecx  +
xor esi esi +
cmp dword_1017DD8 0 +
jz loc_100C480  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-24h]  +
call sub_100AAF6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-80h] +
call sub_10067A0  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1017DE4 edi +
jz loc_100C4C3  +
call sub_100B9AC  +
mov dword_1017DE4 eax +
cmp eax edi +
jz loc_100C4C3  +
xor edi edi +
jmp loc_100C568  +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi]  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlInitUnicodeString  +
push 8  +
lea eax [ebp+var_8] +
push eax  +
push 28h  +
call ds:NtSetSystemInformation  +
test eax eax +
jl loc_100C4FC  +
cmp dword_1017DD8 0 +
jz loc_100C567  +
push dword ptr [esi]  +
push 145h  +
call sub_100AF60  +
jmp loc_100C565  +
cmp eax 0C0000003h +
jz loc_100C556  +
cmp eax 0C0000017h +
jz loc_100C54F  +
cmp eax 0C0000061h +
jz loc_100C548  +
cmp eax 0C000009Ah +
jz loc_100C54F  +
cmp eax 0C00000BBh +
jz loc_100C541  +
cmp eax 0C000010Eh +
jz loc_100C53A  +
push eax  +
push dword ptr [esi]  +
push 0E9h  +
call sub_100AEC8  +
add esp 0Ch +
xor edi edi +
jmp loc_100C567  +
mov eax 0E6h +
jmp loc_100C55B  +
mov eax 0E5h +
jmp loc_100C55B  +
mov eax 0E8h +
jmp loc_100C55B  +
mov eax 0E7h +
jmp loc_100C55B  +
mov eax 0E4h +
push dword ptr [esi]  +
push eax  +
call sub_100AEC8  +
xor edi edi +
pop ecx  +
pop ecx  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1017DE4 edi +
jz loc_100C599  +
call sub_100B9AC  +
mov dword_1017DE4 eax +
cmp eax edi +
jz loc_100C599  +
xor edi edi +
jmp loc_100C610  +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi]  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlInitUnicodeString  +
push 8  +
lea eax [ebp+var_8] +
push eax  +
push 29h  +
call ds:NtSetSystemInformation  +
test eax eax +
jge loc_100C62C  +
cmp eax 0C0000003h +
jz loc_100C625  +
cmp eax 0C0000017h +
jz loc_100C61E  +
cmp eax 0C0000061h +
jz loc_100C617  +
cmp eax 0C000009Ah +
jz loc_100C61E  +
cmp eax 0C00000BBh +
jz loc_100C62C  +
cmp eax 0C000010Eh +
jz loc_100C5FE  +
cmp eax 0C0000225h +
jz loc_100C62C  +
push eax  +
push dword ptr [esi]  +
push 0EEh  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100C60D  +
mov eax 0EBh +
push dword ptr [esi]  +
push eax  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
xor edi edi +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
mov eax 0EDh +
jmp loc_100C603  +
mov eax 0ECh +
jmp loc_100C603  +
mov eax 0EAh +
jmp loc_100C603  +
cmp dword_1017DD8 0 +
jz loc_100C60F  +
push dword ptr [esi]  +
push 144h  +
call sub_100AF60  +
pop ecx  +
pop ecx  +
jmp loc_100C60F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
xor esi esi +
inc esi  +
mov [ebp+var_4] esi +
cmp dword_1017DE4 esi +
jz loc_100C678  +
call sub_100B9AC  +
mov dword_1017DE4 eax +
cmp eax esi +
jz loc_100C678  +
and [ebp+var_4] 0 +
jmp loc_100C71E  +
push ebx  +
push edi  +
xor eax eax +
push 6  +
pop ecx  +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov [ebp+var_1C] eax +
mov eax [edi] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx edi +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov esi ds:RtlInitUnicodeString +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call esi  +
mov ebx [ebp+arg_8] +
mov eax [ebx] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx ebx +
call ?GetBuffer@CString@@QAEPAGH@Z  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call esi  +
push 18h  +
lea eax [ebp+var_1C] +
push eax  +
push 61h  +
call ds:NtSetSystemInformation  +
push 0FFFFFFFFh  +
mov ecx edi +
mov esi eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push 0FFFFFFFFh  +
mov ecx ebx +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
test esi esi +
jge loc_100C6F8  +
push esi  +
push 14Ch  +
call sub_100AEC8  +
and [ebp+var_4] 0 +
pop ecx  +
jmp loc_100C71B  +
push 159h  +
call sub_100A5C7  +
pop ecx  +
push 0  +
push dword ptr [ebx]  +
push dword ptr [edi]  +
push [ebp+var_1C]  +
call sub_100BCB5  +
push 0FAh  +
call sub_100A57F  +
pop ecx  +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
xor edi edi +
lea ecx [ebp-18h] +
mov [ebp-14h] edi +
call ??0CString@@QAE@XZ  +
mov [ebp-4] edi +
lea ecx [ebp-38h] +
call ??0CStringArray@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-5Ch] +
call sub_100D539  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-5Ch] +
push eax  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_100BDE7  +
cmp eax edi +
jz loc_100C95C  +
mov eax [ebp-10h] +
xor esi esi +
inc esi  +
and eax esi +
push eax  +
push 103h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 3 +
and eax esi +
push eax  +
push 104h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 1 +
and eax esi +
push eax  +
push 107h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 4 +
and eax esi +
push eax  +
push 105h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 5 +
and eax esi +
push eax  +
push 108h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 7 +
and eax esi +
push eax  +
push 109h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 8 +
and eax esi +
push eax  +
push 14Dh  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 9 +
and eax esi +
push eax  +
push 141h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 2 +
and eax esi +
push eax  +
push 10Ah  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 0Ah +
and eax esi +
push eax  +
push 149h  +
call sub_100BBFC  +
mov eax [ebp-10h] +
shr eax 0Bh +
and eax esi +
push eax  +
push 140h  +
call sub_100BBFC  +
test byte ptr [ebp-10h] 4 +
jz loc_100C8F8  +
push 14Eh  +
call sub_100A5C7  +
pop ecx  +
mov esi offset word_1002B86 +
cmp [ebp-4Ch] edi +
jz loc_100C870  +
lea edi [ebp-3Ch] +
jmp loc_100C886  +
push esi  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@PBD@Z  +
mov edi eax +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-14h] 1 +
cmp dword ptr [ebp-50h] 0 +
jz loc_100C891  +
lea eax [ebp-40h] +
jmp loc_100C8A5  +
push esi  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@PBD@Z  +
mov dword ptr [ebp-4] 4 +
or dword ptr [ebp-14h] 2 +
mov edx [ebp-54h] +
mov eax [eax] +
mov ecx [edi] +
neg edx  +
sbb edx edx +
and edx [ebp-44h] +
push edx  +
push ecx  +
push eax  +
mov eax [ebp-58h] +
neg eax  +
sbb eax eax +
and eax [ebp-48h] +
push eax  +
call sub_100BCB5  +
mov dword ptr [ebp-4] 3 +
test byte ptr [ebp-14h] 2 +
jz loc_100C8DF  +
and dword ptr [ebp-14h] 0FFFFFFFDh +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
mov dword ptr [ebp-4] 2 +
test byte ptr [ebp-14h] 1 +
jz loc_100C8F8  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
push 12Fh  +
call sub_100A57F  +
cmp dword ptr [ebp-24h] 0 +
pop ecx  +
jz loc_100C90D  +
push 7Bh  +
jmp loc_100C956  +
mov edi [ebp-30h] +
test edi edi +
jle loc_100C951  +
xor esi esi +
test edi edi +
jle loc_100C95C  +
push esi  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp-38h] +
call loc_100A397  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-18h]  +
call ds:_putws  +
inc esi  +
cmp esi edi +
pop ecx  +
jl loc_100C91A  +
jmp loc_100C95C  +
push 131h  +
call sub_100A57F  +
pop ecx  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-5Ch] +
call sub_100D596  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call ??1CStringArray@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+hKey] edi +
cmp [ebp+arg_0] edi +
jz loc_100C9AE  +
mov eax [ebx] +
cmp [eax-8] edi +
jnz loc_100C9AE  +
call sub_100BE9D  +
jmp loc_100CA28  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 2  +
push edi  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax edi +
jz loc_100C9EE  +
cmp eax 5 +
jnz loc_100C9DD  +
push 91h  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100CA24  +
push eax  +
push esi  +
push 92h  +
call sub_100AEC8  +
add esp 0Ch +
jmp loc_100CA24  +
cmp [ebp+arg_8] edi +
jz loc_100CA07  +
push dword ptr [ebp+Data]  +
push offset aVerifydriverle  +
push [ebp+hKey]  +
call sub_100AFD4  +
test eax eax +
jz loc_100CA1B  +
cmp [ebp+arg_0] edi +
jz loc_100CA1B  +
push dword ptr [ebx]  +
push offset aVerifydrivers  +
push [ebp+hKey]  +
call sub_100B021  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov esi [ebp+8] +
mov edi [esi+8] +
cmp edi ebx +
mov dword ptr [ebp-14h] 1 +
jle loc_100CA99  +
push ebx  +
lea eax [ebp+8] +
push eax  +
mov ecx esi +
call loc_100A397  +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
call sub_100C49B  +
cmp eax 1 +
jz loc_100CA94  +
and dword ptr [ebp-14h] 0 +
inc ebx  +
cmp ebx edi +
jl loc_100CA5D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov esi [ebp+8] +
mov edi [esi+8] +
cmp edi ebx +
mov dword ptr [ebp-14h] 1 +
jle loc_100CB1B  +
push ebx  +
lea eax [ebp+8] +
push eax  +
mov ecx esi +
call loc_100A397  +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
call sub_100C574  +
cmp eax 1 +
jz loc_100CB16  +
and dword ptr [ebp-14h] 0 +
inc ebx  +
cmp ebx edi +
jl loc_100CADF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 406h  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 404h  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 402h  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CObArray@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1002BE0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+4] +
xor eax eax +
dec ecx  +
jz loc_100CC1F  +
dec ecx  +
jz loc_100CBF2  +
dec ecx  +
jz loc_100CBE7  +
dec ecx  +
jnz loc_100CC2B  +
xor eax eax +
inc eax  +
jmp loc_100CC2B  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp dword ptr [ecx+8] 3 +
jmp loc_100CC28  +
mov ecx [ebp+arg_0] +
movzx eax word ptr [ecx+18h] +
xor edx edx +
cmp dx ax +
jz loc_100CC08  +
push 5  +
pop edx  +
cmp dx ax +
ja loc_100CBE2  +
movzx eax word ptr [ecx+1Ah] +
xor ecx ecx +
cmp cx ax +
jz loc_100CC1B  +
push 5  +
pop ecx  +
cmp cx ax +
ja loc_100CBE2  +
xor eax eax +
jmp loc_100CC2B  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp dword ptr [ecx+0Ch] 2 +
setz al  +
pop ebp  +
retn 4  +
***
xor eax eax +
inc eax  +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
mov [ecx+30h] eax +
mov [ecx+24h] eax +
xor eax eax +
mov [ecx+10h] eax +
mov [ecx+28h] eax +
mov [ecx+2Ch] eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
setnz al  +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
mov [ecx+30h] eax +
mov [ecx+24h] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
setnz al  +
mov [ecx+10h] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
setnz al  +
mov [ecx+28h] eax +
test eax eax +
jz loc_100CCC5  +
mov dword ptr [ecx+18h] 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
setnz al  +
mov [ecx+2Ch] eax +
test eax eax +
jz loc_100CCE9  +
mov dword ptr [ecx+18h] 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
xor esi esi +
xor eax eax +
mov [edx] esi +
inc eax  +
cmp [ecx+8] esi +
jz loc_100CD09  +
mov [edx] eax +
cmp [ecx+0Ch] esi +
jz loc_100CD11  +
or dword ptr [edx] 2 +
cmp [ecx+10h] esi +
jz loc_100CD19  +
or dword ptr [edx] 4 +
cmp [ecx+14h] esi +
jz loc_100CD21  +
or dword ptr [edx] 8 +
cmp [ecx+18h] esi +
jz loc_100CD29  +
or dword ptr [edx] 10h +
cmp [ecx+1Ch] esi +
jz loc_100CD31  +
or dword ptr [edx] 20h +
cmp [ecx+20h] esi +
jz loc_100CD3C  +
or dword ptr [edx] 80h +
cmp [ecx+24h] esi +
jz loc_100CD47  +
or dword ptr [edx] 100h +
cmp [ecx+28h] esi +
jz loc_100CD52  +
or dword ptr [edx] 200h +
cmp [ecx+2Ch] esi +
jz loc_100CD5D  +
or dword ptr [edx] 400h +
cmp [ecx+30h] esi +
pop esi  +
jz loc_100CD69  +
or dword ptr [edx] 800h +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CObArray@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1002BF8 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_C] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov [esi+0Ch] edx +
mov [esi+10h] edi +
test eax eax +
jz loc_100CDCE  +
mov eax [ebp+arg_10] +
mov [esi+14h] eax +
test ecx ecx +
jz loc_100CDD8  +
mov eax [ebp+arg_14] +
mov [esi+18h] eax +
test edx edx +
jz loc_100CDE7  +
push [ebp+arg_18]  +
lea ecx [esi+1Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
cmp dword ptr [esi+10h] 0 +
jz loc_100CDF8  +
push [ebp+arg_1C]  +
lea ecx [esi+20h] +
call ??4CString@@QAEABV0@PBG@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+4] edi +
jz loc_100CE1D  +
mov eax [esi+14h] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
jmp loc_100CE22  +
mov eax [ebp+arg_0] +
mov [eax] edi +
cmp [esi+8] edi +
jz loc_100CE31  +
mov eax [esi+18h] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
jmp loc_100CE36  +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov ecx [ebp+arg_4] +
cmp [esi+0Ch] edi +
jz loc_100CE49  +
lea eax [esi+1Ch] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_100CE4E  +
call ?Empty@CString@@QAEXXZ  +
mov ecx [ebp+arg_8] +
cmp [esi+10h] edi +
jz loc_100CE61  +
add esi 20h +
push esi  +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_100CE66  +
call ?Empty@CString@@QAEXXZ  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
call sub_100CE03  +
push dword ptr [ebp-18h]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+8]  +
call sub_100BF3B  +
mov esi eax +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ecx+18h] +
push eax  +
lea eax [ecx+20h] +
push eax  +
lea eax [ecx+1Ch] +
push eax  +
lea eax [ecx+14h] +
push eax  +
lea eax [ecx+8] +
push eax  +
lea eax [ecx+10h] +
push eax  +
lea eax [ecx+0Ch] +
push eax  +
add ecx 4 +
push ecx  +
push [ebp+hKey]  +
call sub_100B513  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx ax [ebp+arg_0] +
movzx eax ax +
push esi  +
push eax  +
mov esi ecx +
call ??YCString@@QAEABV0@G@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ecx] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_100CF75  +
test cx cx +
jz loc_100CF71  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_100CF75  +
add eax 4 +
add edx 4 +
test cx cx +
jnz loc_100CF4F  +
xor eax eax +
jmp loc_100CF7A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
push 405h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
and dword ptr [ebp-4] 0 +
lea edi [esi+4] +
mov ecx edi +
mov dword ptr [esi] offset off_1002C10 +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
lea ecx [esi+10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+14h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+1Ch] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+20h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+24h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
push dword ptr [ebp+8]  +
mov ecx edi +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
call ??4CString@@QAEABV0@PBG@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002C10 +
mov dword ptr [ebp-4] 5 +
lea ecx [esi+24h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+20h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+1Ch] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+14h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+10h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
mov eax [edi] +
mov eax [eax-8] +
inc eax  +
push eax  +
mov ecx edi +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp+lpszSrc] eax +
test eax eax +
jz loc_100D122  +
push ebx  +
push offset PathName  +
push eax  +
call sub_100A18B  +
mov ebx eax +
test ebx ebx +
jnz loc_100D0E6  +
push eax  +
push [ebp+lpszSrc]  +
call sub_100A18B  +
mov ebx eax +
push 0FFFFFFFFh  +
mov ecx edi +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
test ebx ebx +
jz loc_100D121  +
mov eax [ebx+0Ch] +
mov ax [eax+40h] +
mov [esi+18h] ax +
mov eax [ebx+0Ch] +
mov ax [eax+44h] +
mov [esi+1Ah] ax +
add esi 10h +
push esi  +
push ebx  +
call sub_100ABE5  +
push ebx  +
call ds:ImageUnload  +
mov [ebp+var_4] 1 +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 64h  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push 0  +
call sub_100CB37  +
mov ecx [ebp+arg_4] +
push 1  +
call sub_100CB59  +
mov ecx [ebp+arg_4] +
push 0  +
call sub_100CB7A  +
cmp dword ptr [esi+34h] 1 +
jz loc_100D200  +
push ebx  +
push edi  +
mov edi offset PathName +
push edi  +
call ds:SetCurrentDirectoryW  +
mov [ebp+var_8] eax +
cmp eax 1 +
jz loc_100D182  +
push edi  +
push 6Dh  +
call sub_100AEC8  +
pop ecx  +
pop ecx  +
mov ebx [esi+10h] +
mov ecx [ebp+arg_4] +
push ebx  +
push 0  +
call sub_100CB37  +
and [ebp+var_4] 0 +
test ebx ebx +
jle loc_100D1E4  +
cmp [ebp+hHandle] 0 +
jz loc_100D1AD  +
push 0  +
push [ebp+hHandle]  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_100D1EB  +
push [ebp+var_4]  +
lea ecx [esi+8] +
call loc_1009C92  +
mov edi eax +
cmp dword ptr [edi+8] 1 +
jnz loc_100D1D4  +
push dword ptr [edi+4]  +
call sub_100A77B  +
dec eax  +
neg eax  +
sbb eax eax +
neg eax  +
inc eax  +
inc eax  +
mov [edi+8] eax +
mov ecx [ebp+arg_4] +
call sub_100CF83  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_100D198  +
mov dword ptr [esi+34h] 1 +
cmp [ebp+var_8] 1 +
pop edi  +
pop ebx  +
jnz loc_100D200  +
mov eax dword_10177A0 +
push dword ptr [eax]  +
call ds:SetCurrentDirectoryW  +
mov eax [esi+34h] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+10h] +
xor ebx ebx +
cmp edi ebx +
mov [ebp+var_4] ebx +
jle loc_100D247  +
push ebx  +
lea ecx [esi+8] +
call loc_1009C92  +
push eax  +
mov ecx esi +
call sub_100CBCC  +
test eax eax +
jnz loc_100D240  +
inc ebx  +
cmp ebx edi +
jl loc_100D224  +
jmp loc_100D247  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4] 4 +
mov ecx [ebp+arg_0] +
jnz loc_100D26F  +
push 2Ah  +
call ??4CString@@QAEABV0@G@Z  +
jmp loc_100D2D2  +
push ebx  +
push offset dword_1002C24  +
call ??4CString@@QAEABV0@PBG@Z  +
mov ebx [edi+10h] +
and [ebp+var_4] 0 +
test ebx ebx +
jle loc_100D2D1  +
push esi  +
push [ebp+var_4]  +
lea ecx [edi+8] +
call loc_1009C92  +
mov esi eax +
push esi  +
mov ecx edi +
call sub_100CBCC  +
test eax eax +
jz loc_100D2C8  +
mov eax [esi+14h] +
cmp dword ptr [eax-8] 0 +
push [ebp+arg_0]  +
jle loc_100D2AE  +
push eax  +
jmp loc_100D2B1  +
push dword ptr [esi+4]  +
call sub_100AD63  +
mov esi [esi+10h] +
cmp dword ptr [esi-8] 0 +
jle loc_100D2C8  +
push [ebp+arg_0]  +
push esi  +
call sub_100AD63  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_100D286  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ecx+10h] +
push edi  +
xor edi edi +
cmp esi edi +
mov [ebp+var_4] edi +
jle loc_100D31D  +
push ebx  +
lea ebx [ecx+8] +
push edi  +
mov ecx ebx +
call loc_1009C92  +
push [ebp+arg_0]  +
lea ecx [eax+4] +
call sub_1004C9C  +
test eax eax +
jz loc_100D315  +
inc edi  +
cmp edi esi +
jl loc_100D2F7  +
jmp loc_100D31C  +
mov [ebp+var_4] 1 +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea ecx [esi+1Ch] +
mov eax [ecx] +
pop esi  +
jmp dword ptr [eax+0Ch]  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov dword ptr [eax] offset off_1001D68 +
and dword ptr [ebp-4] 0 +
mov dword ptr [eax] offset off_1002C2C +
mov dword ptr [eax+4] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_1002C2C +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea ecx [esi+38h] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea ecx [esi+70h] +
mov eax [ecx] +
pop esi  +
jmp dword ptr [eax+0Ch]  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_1002C44 +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov [esi+2Ch] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1009C92  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+8] +
jmp loc_100D48E  +
dec esi  +
push esi  +
call loc_1009C92  +
test eax eax +
jz loc_100D48E  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx+4]  +
mov ecx edi +
test esi esi +
jg loc_100D47A  +
push 0FFFFFFFFh  +
push 0  +
call ?SetSize@CObArray@@QAEXHH@Z  +
pop edi  +
pop esi  +
retn   +
***
xor eax eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
mov [ecx+24h] eax +
mov [ecx+28h] eax +
mov [ecx+2Ch] eax +
mov [ecx+30h] eax +
mov [ecx+34h] eax +
mov [ecx+38h] eax +
mov [ecx+3Ch] eax +
mov [ecx+40h] eax +
mov [ecx+44h] eax +
mov [ecx+4Ch] eax +
mov [ecx+50h] eax +
mov [ecx+54h] eax +
mov [ecx+58h] eax +
mov [ecx+5Ch] eax +
add ecx 60h +
jmp sub_100D46F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ecx+68h] +
xor ebx ebx +
test esi esi +
jle loc_100D52C  +
push edi  +
lea edi [ecx+60h] +
dec esi  +
push esi  +
mov ecx edi +
call loc_1009C92  +
push [ebp+arg_0]  +
lea ecx [eax+4] +
call sub_1004C9C  +
test eax eax +
jz loc_100D528  +
test esi esi +
jg loc_100D50A  +
jmp loc_100D52B  +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+1Ch] +
mov dword ptr [esi] offset off_1002C5C +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+20h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002C5C +
mov dword ptr [ebp-4] 1 +
lea ecx [esi+20h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+1Ch] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
xor ecx ecx +
mov [ebp+var_4] ecx +
cmp eax ecx +
jz loc_100D5FC  +
cmp [esi+4] ecx +
jz loc_100D601  +
cmp eax [esi+14h] +
jmp loc_100D5FF  +
cmp [esi+4] ecx +
jz loc_100D60D  +
mov [ebp+var_4] 1 +
jmp loc_100D69A  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov ecx ebx +
call sub_100584C  +
lea edi [esi+1Ch] +
mov ecx edi +
call sub_100584C  +
mov ecx [ebx] +
xor eax eax +
cmp [ecx-8] eax +
jz loc_100D640  +
cmp [esi+0Ch] eax +
jz loc_100D691  +
push dword ptr [edi]  +
mov ecx ebx +
call sub_100CF45  +
test eax eax +
jz loc_100D645  +
jmp loc_100D691  +
cmp [esi+0Ch] eax +
jnz loc_100D691  +
mov ebx [ebp+arg_8] +
mov ecx ebx +
call sub_100584C  +
lea edi [esi+20h] +
mov ecx edi +
call sub_100584C  +
mov ecx [ebx] +
xor eax eax +
cmp [ecx-8] eax +
jz loc_100D685  +
cmp [esi+10h] eax +
jz loc_100D691  +
push dword ptr [edi]  +
mov ecx ebx +
call sub_1004C9C  +
test eax eax +
jnz loc_100D691  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jz loc_100D68C  +
cmp [esi+8] eax +
jz loc_100D691  +
cmp ecx [esi+18h] +
jmp loc_100D68F  +
cmp [esi+10h] eax +
jz loc_100D674  +
jmp loc_100D691  +
cmp [esi+8] eax +
jz loc_100D698  +
mov [ebp+var_4] 1 +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_100CE03  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-18h]  +
mov ecx esi +
call sub_100D5DD  +
mov esi eax +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_100D73A  +
cmp ecx 7FFFFFFFh +
jbe loc_100D73F  +
mov eax 80070057h +
test eax eax +
jl loc_100D77C  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100D76C  +
cmp eax esi +
ja loc_100D76C  +
jnz loc_100D777  +
jmp loc_100D771  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D02B  +
test byte ptr [ebp+8] 1 +
jz loc_100D79D  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov edi ecx +
lea ecx [ebp-0D4h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push offset PathName  +
lea ecx [ebp-0D4h] +
call ??4CString@@QAEABV0@PBG@Z  +
push 5Ch  +
lea ecx [ebp-0D4h] +
call sub_100CF23  +
lea esi [edi+4] +
push esi  +
lea ecx [ebp-0D4h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-0D4h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-0D4h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
test eax eax +
jz loc_100DA7B  +
lea ecx [ebp-0E0h] +
push ecx  +
push eax  +
call GetFileVersionInfoSizeW  +
push 0FFFFFFFFh  +
lea ecx [ebp-0D4h] +
mov ebx eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
test ebx ebx +
jnz loc_100D89E  +
push offset Buffer  +
lea ecx [ebp-0D4h] +
call ??4CString@@QAEABV0@PBG@Z  +
push 5Ch  +
lea ecx [ebp-0D4h] +
call sub_100CF23  +
push esi  +
lea ecx [ebp-0D4h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-0D4h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-0D4h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
test eax eax +
jz loc_100DA7B  +
lea ecx [ebp-0E0h] +
push ecx  +
push eax  +
call GetFileVersionInfoSizeW  +
push 0FFFFFFFFh  +
lea ecx [ebp-0D4h] +
mov ebx eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
test ebx ebx +
jz loc_100DA7B  +
push ebx  +
call ds:malloc  +
mov esi eax +
pop ecx  +
mov [ebp-0E8h] esi +
test esi esi +
jz loc_100DA7B  +
mov eax [ebp-0D4h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-0D4h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
push esi  +
test eax eax +
jz loc_100DA74  +
push ebx  +
push dword ptr [ebp-0E0h]  +
push eax  +
call GetFileVersionInfoW  +
push 0FFFFFFFFh  +
lea ecx [ebp-0D4h] +
mov ebx eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
cmp ebx 1 +
jnz loc_100DA73  +
lea eax [ebp-0D8h] +
push eax  +
lea eax [ebp-0E4h] +
push eax  +
push offset SubBlock  +
push esi  +
call VerQueryValueW  +
cmp eax ebx +
jnz loc_100DA73  +
mov eax [ebp-0E4h] +
test eax eax +
jz loc_100DA73  +
movzx ecx byte ptr [eax+2] +
push ecx  +
movzx ecx byte ptr [eax+3] +
push ecx  +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+1] +
push ecx  +
push eax  +
push offset a02x02x02x02x  +
lea eax [ebp-50h] +
push 40h  +
push eax  +
call sub_100D723  +
lea eax [ebp-50h] +
push eax  +
push offset aStringfileinfo  +
lea esi [ebx+7Fh] +
lea eax [ebp-0D0h] +
push esi  +
push eax  +
call sub_100D723  +
mov ebx [ebp-0E8h] +
add esp 2Ch +
lea eax [ebp-0D8h] +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
lea eax [ebp-0D0h] +
push eax  +
push ebx  +
call VerQueryValueW  +
cmp eax 1 +
jnz loc_100D9A7  +
cmp dword ptr [ebp-0D8h] 0 +
jz loc_100D9A7  +
push dword ptr [ebp-0DCh]  +
lea ecx [edi+20h] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100D9B1  +
push 75h  +
lea ecx [edi+20h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-50h] +
push eax  +
push offset aStringfilein_0  +
lea eax [ebp-0D0h] +
push esi  +
push eax  +
call sub_100D723  +
add esp 10h +
lea eax [ebp-0D8h] +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
lea eax [ebp-0D0h] +
push eax  +
push ebx  +
call VerQueryValueW  +
cmp eax 1 +
jnz loc_100DA03  +
cmp dword ptr [ebp-0D8h] 0 +
jz loc_100DA03  +
push dword ptr [ebp-0DCh]  +
lea ecx [edi+1Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100DA0D  +
push 75h  +
lea ecx [edi+1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-50h] +
push eax  +
push offset aStringfilein_1  +
lea eax [ebp-0D0h] +
push esi  +
push eax  +
call sub_100D723  +
add esp 10h +
lea eax [ebp-0D8h] +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
lea eax [ebp-0D0h] +
push eax  +
push ebx  +
call VerQueryValueW  +
cmp eax 1 +
jnz loc_100DA5F  +
cmp dword ptr [ebp-0D8h] 0 +
jz loc_100DA5F  +
push dword ptr [ebp-0DCh]  +
lea ecx [edi+24h] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100DA69  +
push 75h  +
lea ecx [edi+24h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push ebx  +
call ds:free  +
pop ecx  +
jmp loc_100DA99  +
push esi  +
call ds:free  +
pop ecx  +
push 75h  +
lea ecx [edi+1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 75h  +
lea ecx [edi+20h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 75h  +
lea ecx [edi+24h] +
call ?LoadStringW@CString@@QAEHI@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0D4h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call sub_10121F9  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_100D0A2  +
mov ecx esi +
mov edi eax +
call sub_100D7A9  +
test edi edi +
pop edi  +
pop esi  +
jz loc_100DAD8  +
test eax eax +
jz loc_100DAD8  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
call __EH_prolog3_catch  +
mov eax [ebp-20h] +
mov [ebp-18h] eax +
push 68h  +
call sub_100AEC8  +
pop ecx  +
or dword ptr [ebp-14h] 0FFFFFFFFh +
mov ecx [ebp+8] +
mov eax [ecx] +
xor esi esi +
inc esi  +
push esi  +
call dword ptr [eax+4]  +
mov [ebp-4] esi +
mov eax offset loc_100DB4C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D37D  +
test byte ptr [ebp+8] 1 +
jz loc_100DBA6  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_100D539  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-14h] +
push eax  +
lea ecx [esi+38h] +
mov [ebp-10h] ebx +
call sub_100D254  +
test eax eax +
jz loc_100DC85  +
lea eax [ebp-10h] +
push eax  +
lea ecx [esi+4] +
call sub_100CCF2  +
test eax eax +
jz loc_100DC85  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
xor edi edi +
push eax  +
inc edi  +
mov [ebp-18h] ebx +
call sub_100BD62  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100DC39  +
mov eax [ebp-10h] +
cmp eax [ebp-18h] +
jz loc_100DC4F  +
push dword ptr [ebp-10h]  +
lea eax [ebp-14h] +
push 1  +
push eax  +
push 1  +
call sub_100C98B  +
mov edi eax +
cmp edi ebx +
jz loc_100DC94  +
push dword ptr [ebp-18h]  +
lea ecx [ebp-40h] +
call sub_100CEED  +
lea eax [ebp-40h] +
add esi 70h +
push eax  +
mov ecx esi +
call sub_100D6A7  +
test eax eax +
jz loc_100DC76  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_100CE71  +
cmp dword_1017DE8 ebx +
jnz loc_100DC89  +
push 0EFh  +
jmp loc_100DC8E  +
xor edi edi +
jmp loc_100DC94  +
push 0FFh  +
call sub_100A5C7  +
pop ecx  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-40h] +
call sub_100D596  +
mov [ebp-4] bl +
lea ecx [ebp-1Ch] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D42D  +
test byte ptr [ebp+8] 1 +
jz loc_100DCDE  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002BF8 +
and dword ptr [ebp-4] 0 +
call sub_100D46F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CObArray@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DCEA  +
test byte ptr [ebp+8] 1 +
jz loc_100DD3A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
and dword ptr [ebp-4] 0 +
lea ecx [esi+60h] +
mov dword ptr [esi] offset off_1002D94 +
call sub_100CD72  +
mov byte ptr [ebp-4] 1 +
mov ecx esi +
call sub_100D4A5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D596  +
test byte ptr [ebp+8] 1 +
jz loc_100DDA5  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002BE0 +
and dword ptr [ebp-4] 0 +
call sub_100D46F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CObArray@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DDB1  +
test byte ptr [ebp+8] 1 +
jz loc_100DE01  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
and dword ptr [ebp-4] 0 +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_1002DAC +
call sub_100CB9B  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+1Ch] +
call ??0CStringArray@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
and dword ptr [esi+30h] 0 +
and dword ptr [esi+34h] 0 +
mov dword ptr [esi+4] 3 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002DAC +
mov dword ptr [ebp-4] 1 +
lea ecx [esi+1Ch] +
call ??1CStringArray@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+8] +
call sub_100DDB1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
mov [ebp-1Ch] edi +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov ecx [ebp+0Ch] +
push ebx  +
call sub_100CB7A  +
mov ecx [ebp+0Ch] +
push 64h  +
push ebx  +
call sub_100CB37  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100CB59  +
lea ecx [edi+8] +
call sub_100D46F  +
cmp dword ptr [edi+30h] 1 +
jz loc_100E0A2  +
mov eax 10000h +
push eax  +
mov [ebp-14h] eax +
call ??_U@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov [ebp-18h] esi +
cmp esi ebx +
jz loc_100E0A2  +
jmp loc_100DF1C  +
mov esi [ebp-18h] +
push ebx  +
push dword ptr [ebp-14h]  +
push esi  +
push 0Bh  +
call ds:NtQuerySystemInformation  +
cmp eax ebx +
mov [ebp-20h] eax +
jge loc_100DF6C  +
push esi  +
call ??_V@YAXPAX@Z  +
cmp dword ptr [ebp-20h] 0C0000004h +
pop ecx  +
jnz loc_100DF5C  +
add dword ptr [ebp-14h] 1000h +
push dword ptr [ebp-14h]  +
call ??_U@YAPAXI@Z  +
pop ecx  +
mov [ebp-18h] eax +
cmp eax ebx +
jnz loc_100DF19  +
jmp loc_100E0A2  +
push dword ptr [ebp-20h]  +
push 6Eh  +
call sub_100AEC8  +
pop ecx  +
jmp loc_100E0A1  +
push dword ptr [esi]  +
mov ecx [ebp+0Ch] +
push ebx  +
call sub_100CB37  +
mov [ebp-14h] ebx +
cmp [esi] ebx +
jbe loc_100E094  +
cmp [ebp+8] ebx +
jz loc_100DF99  +
push ebx  +
push dword ptr [ebp+8]  +
call ds:WaitForSingleObject  +
cmp eax ebx +
jz loc_100E0BB  +
mov eax [ebp-14h] +
imul eax eax +
add eax esi +
mov ecx [eax+0Ch] +
cmp ecx dword_101779C +
jnb loc_100DFBC  +
mov ecx [ebp+0Ch] +
call sub_100CF83  +
jmp loc_100E086  +
add eax 20h +
mov [ebp-20h] eax +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_100DFC5  +
sub eax esi +
mov esi eax +
lea edi [esi+1] +
push edi  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
cmp eax ebx +
jz loc_100E0C3  +
push edi  +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [ebp-20h]  +
push ebx  +
push ebx  +
call ds:MultiByteToWideChar  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push 5Ch  +
lea ecx [ebp-10h] +
call ?ReverseFind@CString@@QBEHG@Z  +
cmp eax ebx +
jle loc_100E033  +
sub esi eax +
dec esi  +
push esi  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov [ebp-4] bl +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
call ?MakeLower@CString@@QAEXXZ  +
mov esi [ebp-1Ch] +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_100DAE0  +
cmp [ebp-14h] ebx +
jz loc_100E053  +
cmp dword ptr [ebp-14h] 1 +
jnz loc_100E079  +
cmp eax ebx +
jl loc_100E079  +
push eax  +
lea ecx [esi+8] +
call loc_1009C92  +
lea ecx [eax+14h] +
cmp [ebp-14h] ebx +
jnz loc_100E06F  +
push offset aNtoskrnl_exe  +
jmp loc_100E074  +
push offset aHal_dll  +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx [ebp+0Ch] +
call sub_100CF83  +
mov edi esi +
mov esi [ebp-18h] +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
cmp eax [esi] +
jb loc_100DF82  +
push esi  +
call ??_V@YAXPAX@Z  +
mov dword ptr [edi+30h] 1 +
pop ecx  +
mov edi [edi+30h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
push esi  +
call ??_V@YAXPAX@Z  +
jmp loc_100E0A1  +
push 68h  +
call sub_100AEC8  +
mov edi [ebp-1Ch] +
jmp loc_100E0A1  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001D68 +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_1002DF0 +
call sub_100D346  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+38h] +
call sub_100DE0D  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+70h] +
call sub_100D539  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002DF0 +
mov dword ptr [ebp-4] 2 +
lea ecx [esi+70h] +
call sub_100D596  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+38h] +
call sub_100DE66  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+4] +
call sub_100D37D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1001D68 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10067A0  +
test byte ptr [ebp+8] 1 +
jz loc_100E193  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DE66  +
test byte ptr [ebp+8] 1 +
jz loc_100E1B9  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100E126  +
test byte ptr [ebp+8] 1 +
jz loc_100E1DF  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax offset off_1002E08 +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_100E282  +
jmp ds:off_100E289[eax*4]  +
mov eax dword_101778C +
and eax 1 +
jmp loc_100E284  +
mov eax dword_101778C +
shr eax 3 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 1 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 4 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 5 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 7 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 8 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 9 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 2 +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 0Ah +
jmp loc_100E21A  +
mov eax dword_101778C +
shr eax 0Bh +
jmp loc_100E21A  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 3 +
lea ecx [esi+120h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0E0h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0A0h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+60h] +
call ??1CEdit@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CDialog@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002EA4 +
mov dword ptr [ebp-4] 5 +
lea ecx [esi+220h] +
call ??1CButton@@UAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+1E0h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+1A0h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+160h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+120h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+94h] +
call sub_10067A0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
lea eax [esi+120h] +
push eax  +
push 425h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+160h] +
push eax  +
push 413h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+1A0h] +
push eax  +
push 414h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+1E0h] +
push eax  +
push 415h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 220h +
push esi  +
push 416h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push 6Fh  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 70h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+200h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-54h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
add esp 0Ch +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
mov dword ptr [ebp-54h] 0Fh +
mov [ebp-50h] ebx +
mov [ebp-40h] ebx +
fmul  ds:dbl_1001AA0 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-14h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 1E0h +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_100E4DE  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E4E6  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov dword ptr [ebp-40h] 1 +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
fmul  ds:dbl_1002FA0 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_100E537  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E53F  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+0Ch]  +
mov edi dword_1017798 +
mov ecx dword_1017790 +
lea eax [ebp+0Ch] +
push eax  +
add edi 40h +
call loc_100A397  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
mov eax dword_1017798 +
mov esi [eax+48h] +
and dword ptr [ebp+0Ch] 0 +
test esi esi +
jle loc_100E605  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
call sub_100D45F  +
mov ebx eax +
push dword ptr [ebx+4]  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100E5F4  +
inc dword ptr [ebp+0Ch]  +
cmp [ebp+0Ch] esi +
jl loc_100E5CC  +
jmp loc_100E600  +
add ebx 24h +
push ebx  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
cmp [ebp+0Ch] esi +
jl loc_100E638  +
mov ecx dword_1017798 +
push dword ptr [ebp-14h]  +
add ecx 38h +
call sub_100DAE0  +
test eax eax +
jl loc_100E638  +
mov ecx dword_1017798 +
and dword ptr [ecx+6Ch] 0 +
push eax  +
mov ecx edi +
call sub_100D45F  +
add eax 24h +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
jnz loc_100E64B  +
push 75h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-54h] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+8] +
xor eax eax +
inc eax  +
mov [ebp-54h] eax +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov [ebp-50h] ecx +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov ecx [ebp-18h] +
add ecx 1E0h +
mov [ebp-40h] eax +
test eax eax +
lea eax [ebp-54h] +
push eax  +
jz loc_100E69F  +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E6AB  +
mov dword ptr [ebp-40h] offset unk_1017DEC +
call sub_1004E1F  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov [ebp+var_10] eax +
xor esi esi +
push 0FFFFFFFFh  +
lea eax [ebp+var_18] +
inc esi  +
push eax  +
xor ebx ebx +
mov [ebp+var_18] esi +
call sub_100673B  +
mov edi eax +
cmp edi ebx +
jl loc_100E73C  +
push 3Ch  +
lea eax [ebp+lParam] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov [ebp+var_4C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_3C] eax +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
mov [ebp+lParam] esi +
mov [ebp+var_50] edi +
call sub_10066F9  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi+1C0h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-50h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 101h  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-50h] 0Fh +
mov [ebp-4Ch] edi +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov [ebp-3Ch] edi +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1001E98 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 1A0h +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ebx offset unk_1017DEC +
mov ecx esi +
push edi  +
jz loc_100E7F2  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E7FA  +
mov [ebp-44h] ebx +
call sub_1004E79  +
push 102h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1001E90 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_100E858  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E860  +
mov [ebp-44h] ebx +
call sub_1004E79  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
cmp dword ptr [ebp+0Ch] 0 +
lea ecx [ebp-10h] +
jnz loc_100E8B1  +
push 10Ch  +
jmp loc_100E8B6  +
push 10Bh  +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp+8] +
add esi 1A0h +
mov ecx esi +
mov dword ptr [ebp-4Ch] 5 +
mov [ebp-2Ch] eax +
call sub_1004E07  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
lea eax [ebp-4Ch] +
mov ecx esi +
push eax  +
jz loc_100E908  +
call sub_1004E40  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
mov edi eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100E916  +
mov dword ptr [ebp-38h] offset unk_1017DEC +
call sub_1004E40  +
mov edi eax +
test edi edi +
jl loc_100E95D  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_100E95D  +
xor eax eax +
inc eax  +
mov [ebp-4Ch] eax +
mov [ebp-44h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
mov [ebp-48h] edi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov edi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 0 +
lea ecx [ebp-10h] +
jnz loc_100E9A0  +
push 10Ch  +
jmp loc_100E9A5  +
push 10Bh  +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+8] +
and dword ptr [ebp-44h] 0 +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov dword ptr [ebp-4Ch] 1 +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
lea eax [ebp-4Ch] +
lea ecx [edi+1A0h] +
push eax  +
jz loc_100E9FD  +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100EA09  +
mov dword ptr [ebp-38h] offset unk_1017DEC +
call sub_1004E1F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
push 160h  +
mov eax offset byte_1013FF9 +
call __EH_prolog3  +
push 0  +
lea ecx [ebp-16Ch] +
call sub_1011C15  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-16Ch] +
call ?DoModal@CDialog@@UAEHXZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-16Ch] +
call sub_100E2BA  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 259h  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+94h] +
mov dword ptr [esi] offset off_1002EA4 +
call sub_100DD46  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+120h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+160h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+1A0h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+1E0h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+220h] +
call sub_1004D38  +
mov byte ptr [ebp-4] 6 +
mov [esi+108h] edi +
mov [esi+10Ch] edi +
mov [esi+110h] edi +
mov dword ptr [esi+114h] 1 +
mov [esi+118h] edi +
mov [esi+11Ch] edi +
mov [esi+90h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100E31D  +
test byte ptr [ebp+8] 1 +
jz loc_100EB40  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov ebx ecx +
lea ecx [ebp-224h] +
mov [ebp-228h] ebx +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
cmp dword_1017794 0 +
jz loc_100EB8B  +
lea ecx [ebx+1E0h] +
call sub_1004E61  +
jmp loc_100EE00  +
mov eax dword_1017790 +
mov esi [eax+8] +
mov [ebp-21Ch] esi +
test esi esi +
jz loc_100EB7B  +
xor ecx ecx +
push 4  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
mov [ebp-22Ch] edi +
test edi edi +
jz loc_100EE00  +
mov ecx esi +
test ecx ecx +
jle loc_100EBCE  +
xor eax eax +
stos   +
lea ecx [ebx+1E0h] +
call sub_1004E07  +
xor esi esi +
mov [ebp-220h] eax +
test eax eax +
jle loc_100ED14  +
push 3Ch  +
lea eax [ebp-26Ch] +
push 0  +
push eax  +
call memset  +
and dword ptr [ebp-264h] 0 +
lea eax [ebp-218h] +
mov [ebp-258h] eax +
add esp 0Ch +
lea eax [ebp-26Ch] +
lea edi [ebx+1E0h] +
push eax  +
mov ecx edi +
mov dword ptr [ebp-26Ch] 1 +
mov [ebp-268h] esi +
mov dword ptr [ebp-254h] 104h +
call sub_10066F9  +
test eax eax +
jnz loc_100EC48  +
mov ecx edi +
jmp loc_100ECFA  +
xor edi edi +
cmp [ebp-21Ch] edi +
jle loc_100ECF4  +
mov ecx dword_1017790 +
push edi  +
lea eax [ebp-230h] +
push eax  +
call loc_100A397  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-218h] +
push ecx  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
mov ebx eax +
neg ebx  +
pop ecx  +
sbb bl bl +
pop ecx  +
inc bl  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-230h] +
call ??1CString@@QAE@XZ  +
test bl bl +
jnz loc_100ECA4  +
inc edi  +
cmp edi [ebp-21Ch] +
jl loc_100EC56  +
jmp loc_100ECE6  +
mov ecx [ebp-228h] +
lea eax [ebp-26Ch] +
push eax  +
add ecx 1E0h +
mov dword ptr [ebp-26Ch] 4 +
mov [ebp-24Ch] edi +
call sub_1004E1F  +
mov ecx [ebp-228h] +
push edi  +
push esi  +
call sub_100E561  +
mov eax [ebp-22Ch] +
mov dword ptr [eax+edi*4] 1 +
cmp edi [ebp-21Ch] +
mov ebx [ebp-228h] +
jl loc_100ED07  +
lea ecx [ebx+1E0h] +
push esi  +
call sub_100671A  +
dec esi  +
dec dword ptr [ebp-220h]  +
inc esi  +
cmp esi [ebp-220h] +
jl loc_100EBE9  +
xor edi edi +
cmp [ebp-21Ch] edi +
jle loc_100EDF4  +
mov eax [ebp-22Ch] +
cmp dword ptr [eax+edi*4] 0 +
jnz loc_100EDE7  +
push 3Ch  +
lea eax [ebp-26Ch] +
push 0  +
push eax  +
call memset  +
lea esi [ebx+1E0h] +
add esp 0Ch +
mov ecx esi +
mov dword ptr [ebp-26Ch] 5 +
mov [ebp-24Ch] edi +
call sub_1004E07  +
mov ecx dword_1017790 +
and dword ptr [ebp-264h] 0 +
mov [ebp-268h] eax +
push edi  +
lea eax [ebp-230h] +
push eax  +
call loc_100A397  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-224h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-230h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-224h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-224h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-258h] eax +
test eax eax +
jz loc_100EDE7  +
lea eax [ebp-26Ch] +
push eax  +
mov ecx esi +
call sub_1004E40  +
push 0FFFFFFFFh  +
lea ecx [ebp-224h] +
mov esi eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push edi  +
push esi  +
mov ecx ebx +
call sub_100E561  +
inc edi  +
cmp edi [ebp-21Ch] +
jl loc_100ED22  +
push dword ptr [ebp-22Ch]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-224h] +
call ??1CString@@QAE@XZ  +
call sub_10121F9  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_418] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi 104h +
push esi  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+arg_0]  +
mov ebx ecx +
push [ebp+arg_C]  +
push edi  +
call sub_100E6D0  +
test eax eax +
jz loc_100EE9D  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+arg_C]  +
push edi  +
call sub_100E6D0  +
test eax eax +
jz loc_100EE9D  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
call ds:_wcsicmp  +
cmp [ebp+arg_10] 0 +
pop ecx  +
pop ecx  +
mov [ebp+var_418] eax +
jz loc_100EE9D  +
neg [ebp+var_418]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_418] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 14h  +
***
mov eax dword_101778C +
push esi  +
push edi  +
xor edi edi +
push 103h  +
inc edi  +
and eax edi +
push eax  +
push 0  +
mov esi ecx +
call sub_100E877  +
mov eax dword_101778C +
shr eax 3 +
push 104h  +
and eax edi +
push eax  +
push edi  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 1 +
push 107h  +
and eax edi +
push eax  +
push 2  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 4 +
push 105h  +
and eax edi +
push eax  +
push 3  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 5 +
push 108h  +
and eax edi +
push eax  +
push 4  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 7 +
push 109h  +
and eax edi +
push eax  +
push 5  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 8 +
push 14Dh  +
and eax edi +
push eax  +
push 6  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 9 +
push 141h  +
and eax edi +
push eax  +
push 7  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 2 +
push 10Ah  +
and eax edi +
push eax  +
push 8  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 0Ah +
push 149h  +
and eax edi +
push eax  +
push 9  +
mov ecx esi +
call sub_100E877  +
mov eax dword_101778C +
shr eax 0Bh +
push 140h  +
and eax edi +
push eax  +
push 0Ah  +
mov ecx esi +
call sub_100E877  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+1A0h] +
push edi  +
mov ecx ebx +
call sub_1004E07  +
xor edi edi +
mov [ebp+var_4] eax +
test eax eax +
jle loc_100F012  +
push edi  +
mov ecx ebx +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
push eax  +
mov ecx esi +
call sub_100E201  +
push eax  +
push edi  +
call sub_100E976  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_100EFF5  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea ebx [edi+1A0h] +
mov ecx ebx +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx ebx +
call sub_1004EBD  +
mov esi ds:GetSysColor +
push 0Fh  +
call esi  +
push eax  +
mov ecx ebx +
call sub_10066D8  +
push 0Fh  +
call esi  +
push eax  +
mov ecx ebx +
call sub_100675D  +
mov ecx edi +
call sub_100E74A  +
mov ecx edi +
call sub_100EEB9  +
mov ecx ebx +
call sub_1004E07  +
test eax eax +
jle loc_100F084  +
push 3  +
push 3  +
push 0  +
mov ecx ebx +
call MFC42u_6896  +
lea ebx [edi+1E0h] +
mov ecx ebx +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx ebx +
call sub_1004EBD  +
push 0Fh  +
call esi  +
push eax  +
mov ecx ebx +
call sub_10066D8  +
push 0Fh  +
call esi  +
push eax  +
mov ecx ebx +
call sub_100675D  +
mov ecx edi +
call sub_100E423  +
push 111h  +
add edi 160h +
push edi  +
call sub_100AA16  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 260h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_100F102  +
call sub_100EA67  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov edx [ecx+108h] +
test edx edx +
jnz loc_100F12B  +
mov eax [ecx+10Ch] +
jmp loc_100F131  +
mov eax [ecx+110h] +
push eax  +
push edx  +
lea eax [ecx+1E0h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100EE1A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov edx [ecx+114h] +
test edx edx +
jnz loc_100F168  +
mov eax [ecx+118h] +
jmp loc_100F16E  +
mov eax [ecx+11Ch] +
push eax  +
push edx  +
lea eax [ecx+1A0h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100EE1A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ecx  +
push offset loc_100F111  +
add ecx 1E0h +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push ecx  +
push offset loc_100F14E  +
add ecx 1A0h +
call sub_1004E9B  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov ecx [edi+90h] +
push 5  +
call sub_1004D8F  +
mov eax dword_101778C +
shr eax 2 +
and eax 1 +
push eax  +
lea ecx [edi+220h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
mov ecx edi +
call sub_100EFD4  +
lea ebx [edi+1E0h] +
mov ecx ebx +
call sub_1004E07  +
mov esi eax +
neg esi  +
sbb esi esi +
mov ecx edi +
inc esi  +
call sub_100EB4C  +
mov ecx edi +
call sub_100F18B  +
test esi esi +
jz loc_100F240  +
mov ecx ebx +
call sub_1004E07  +
test eax eax +
jle loc_100F240  +
push 3  +
push 3  +
push 0  +
mov ecx ebx +
call MFC42u_6896  +
cmp dword_1017794 0 +
lea ecx [ebp-10h] +
jz loc_100F253  +
push 112h  +
jmp loc_100F258  +
push 113h  +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-10h]  +
lea ecx [edi+120h] +
call ?SetWindowTextW@CWnd@@QAEXPBG@Z  +
mov ecx edi +
call ?OnSetActive@CPropertyPage@@UAEHXZ  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jnz loc_100F2AD  +
cmp [ecx+108h] eax +
jnz loc_100F2C4  +
lea eax [ecx+10Ch] +
jmp loc_100F2BB  +
cmp [ecx+108h] eax +
jnz loc_100F2C4  +
lea eax [ecx+110h] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+108h] eax +
call sub_100F18B  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jnz loc_100F302  +
cmp [ecx+114h] eax +
jnz loc_100F319  +
lea eax [ecx+118h] +
jmp loc_100F310  +
cmp [ecx+114h] eax +
jnz loc_100F319  +
lea eax [ecx+11Ch] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+114h] eax +
call sub_100F1A4  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax offset off_1002FA8 +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_100F3B9  +
jmp ds:off_100F3C1[eax*4]  +
mov eax [ecx+0E0h] +
jmp loc_100F3BB  +
mov eax [ecx+0E4h] +
jmp loc_100F3BB  +
mov eax [ecx+0E8h] +
jmp loc_100F3BB  +
mov eax [ecx+0ECh] +
jmp loc_100F3BB  +
mov eax [ecx+0FCh] +
jmp loc_100F3BB  +
mov eax [ecx+0F4h] +
jmp loc_100F3BB  +
mov eax [ecx+0F8h] +
jmp loc_100F3BB  +
mov eax [ecx+0D4h] +
jmp loc_100F3BB  +
mov eax [ecx+0D8h] +
jmp loc_100F3BB  +
mov eax [ecx+0DCh] +
jmp loc_100F3BB  +
mov eax [ecx+0F0h] +
jmp loc_100F3BB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
push esi  +
push dword ptr [ebp+8]  +
xor esi esi +
call sub_100F34D  +
push dword ptr [ebp+0Ch]  +
mov edx eax +
call sub_100F34D  +
cmp edx eax +
jbe loc_100F416  +
inc esi  +
jmp loc_100F41B  +
jnb loc_100F41B  +
or esi 0FFFFFFFFh +
cmp dword ptr [ecx+9Ch] 0 +
jz loc_100F426  +
neg esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax 263h +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100302C +
mov dword ptr [ebp-4] 2 +
lea ecx [esi+158h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+118h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0A4h] +
call sub_10067A0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push 114h  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 115h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+138h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-54h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
add esp 0Ch +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
mov dword ptr [ebp-54h] 0Fh +
mov [ebp-50h] ebx +
mov [ebp-40h] ebx +
fmul  ds:dbl_1001E88 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-14h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 118h +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_100F570  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100F578  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov dword ptr [ebp-40h] 1 +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
fmul  ds:dbl_1002538 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_100F5C9  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100F5D1  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_14] eax +
xor esi esi +
lea edi [edx+118h] +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
inc esi  +
push eax  +
mov ecx edi +
mov [ebp+var_1C] esi +
call sub_100673B  +
mov ebx eax +
cmp ebx 0Ah +
ja loc_100F668  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
and [ebp+var_50] 0 +
mov [ebp+var_44] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_40] eax +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
mov ecx edi +
mov [ebp+lParam] esi +
mov [ebp+var_54] ebx +
call sub_10066F9  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
xor ebx ebx +
call sub_100F5F3  +
test eax eax +
jz loc_100F6E8  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_100F5F3  +
test eax eax +
jz loc_100F6E8  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push eax  +
call ds:_wcsicmp  +
cmp dword ptr [esi+98h] 0 +
pop ecx  +
pop ecx  +
mov ebx eax +
jz loc_100F6E8  +
neg ebx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 261h  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0A4h] +
mov dword ptr [esi] offset off_100302C +
call sub_100DD46  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+118h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+158h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 3 +
mov [esi+94h] edi +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
mov [esi+90h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100F447  +
test byte ptr [ebp+8] 1 +
jz loc_100F79C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+94h] 0 +
jz loc_100F7C9  +
push offset loc_100F3F2  +
push ecx  +
push 1030h  +
push dword ptr [ecx+138h]  +
call ds:SendMessageW  +
retn   +
push ecx  +
push offset loc_100F677  +
add ecx 118h +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_44] +
push offset aU  +
push 20h  +
push eax  +
mov esi ecx +
call sub_1004A21  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+arg_0] +
xor eax eax +
inc eax  +
mov [ebp+lParam] eax +
mov [ebp+var_78] eax +
lea eax [ebp+var_44] +
mov [ebp+var_6C] eax +
add esp 1Ch +
lea eax [ebp+lParam] +
mov [ebp+var_7C] ecx +
push eax  +
lea ecx [esi+118h] +
call sub_1004E1F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-18h] ebx +
cmp [esi+0A8h] ebx +
jz loc_100F90C  +
mov ecx [esi+0E4h] +
cmp ecx 64h +
jb loc_100F90C  +
mov eax [esi+0E8h] +
push 64h  +
pop edx  +
mul  edx +
push ebx  +
push ecx  +
push edx  +
push eax  +
call __aulldiv  +
mov edi edx +
mov [ebp-20h] eax +
cmp edi ebx +
ja loc_100F90C  +
jb loc_100F8B8  +
cmp eax 5Fh +
jnb loc_100F90C  +
push 9Bh  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
test eax eax +
jz loc_100F905  +
mov eax [ebp-14h] +
mov eax [eax-8] +
lea esi [eax+20h] +
push esi  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
cmp eax ebx +
jz loc_100F905  +
push edi  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-14h]  +
push esi  +
push eax  +
call sub_1004A21  +
add esp 14h +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
push ebx  +
push 40h  +
push dword ptr [ebp-10h]  +
call ?AfxMessageBox@@YGHPBGII@Z  +
mov dword ptr [ebp-18h] 1 +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-18h] +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_100F951  +
cmp [ecx+94h] eax +
jnz loc_100F969  +
lea eax [ecx+9Ch] +
jmp loc_100F960  +
cmp dword ptr [ecx+94h] 0 +
jnz loc_100F969  +
lea eax [ecx+98h] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+94h] eax +
call sub_100F7A8  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 198h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_100F9B1  +
call sub_100F700  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
mov esi ecx +
jnz loc_100F9F2  +
lea eax [esi+0A4h] +
push eax  +
call sub_100B67A  +
cmp dword_1017DF0 0 +
jnz loc_100F9F2  +
mov ecx esi +
call sub_100F853  +
mov dword_1017DF0 eax +
lea eax [esi+118h] +
push eax  +
push 427h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 158h +
push esi  +
push 426h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+118h] +
push edi  +
mov ecx ebx +
call sub_1004E07  +
xor edi edi +
mov [ebp-4] eax +
test eax eax +
jle loc_100FA5F  +
push edi  +
mov ecx ebx +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
push eax  +
mov ecx esi +
call sub_100F34D  +
push eax  +
push edi  +
call sub_100F7E0  +
inc edi  +
cmp edi [ebp-4] +
jl loc_100FA42  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax [ebp-10h] +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_100FAEC  +
mov eax [ebp+8] +
lea esi [edi+118h] +
mov ecx esi +
mov dword ptr [ebp-4Ch] 5 +
mov [ebp-2Ch] eax +
call sub_1004E07  +
mov [ebp-48h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
call sub_1004E40  +
test eax eax +
jl loc_100FAEC  +
push dword ptr [ebp+10h]  +
mov ecx edi +
push eax  +
call sub_100F7E0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call ?UpdateData@CWnd@@QAEHH@Z  +
test eax eax +
jz loc_100FB1D  +
mov ecx esi +
pop esi  +
jmp loc_100FA21  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 1234h +
push esi  +
mov esi ecx +
jnz loc_100FB4B  +
mov ecx [esi+90h] +
call ?GetActivePage@CPropertySheet@@QBEPAVCPropertyPage@@XZ  +
cmp eax esi +
jnz loc_100FB4B  +
mov ecx esi +
call sub_100FB05  +
mov ecx esi +
call ?Default@CWnd@@IAEJXZ  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+0E0h]  +
push 117h  +
push 0  +
call sub_100FA69  +
push dword ptr [esi+0E4h]  +
mov ecx esi +
push 118h  +
push 1  +
call sub_100FA69  +
push dword ptr [esi+0E8h]  +
mov ecx esi +
push 119h  +
push 2  +
call sub_100FA69  +
push dword ptr [esi+0ECh]  +
mov ecx esi +
push 11Ah  +
push 3  +
call sub_100FA69  +
push dword ptr [esi+0FCh]  +
mov ecx esi +
push 11Bh  +
push 4  +
call sub_100FA69  +
push dword ptr [esi+0F4h]  +
mov ecx esi +
push 11Ch  +
push 5  +
call sub_100FA69  +
push dword ptr [esi+0F8h]  +
mov ecx esi +
push 11Dh  +
push 6  +
call sub_100FA69  +
push dword ptr [esi+0D4h]  +
mov ecx esi +
push 11Eh  +
push 7  +
call sub_100FA69  +
push dword ptr [esi+0D8h]  +
mov ecx esi +
push 11Fh  +
push 8  +
call sub_100FA69  +
push dword ptr [esi+0DCh]  +
mov ecx esi +
push 120h  +
push 9  +
call sub_100FA69  +
push dword ptr [esi+0F0h]  +
mov ecx esi +
push 121h  +
push 0Ah  +
call sub_100FA69  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+118h] +
mov ecx edi +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ebx ds:GetSysColor +
push 0Fh  +
call ebx  +
push eax  +
mov ecx edi +
call sub_10066D8  +
push 0Fh  +
call ebx  +
push eax  +
mov ecx edi +
call sub_100675D  +
mov ecx esi +
call sub_100F4AF  +
mov ecx esi +
call sub_100FB5C  +
mov ecx esi +
call sub_100F7A8  +
mov ecx edi +
call sub_1004E07  +
test eax eax +
jle loc_100FCB1  +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
push 116h  +
lea eax [esi+158h] +
push eax  +
call sub_100AA16  +
push 0  +
push 1388h  +
push 1234h  +
push dword ptr [esi+20h]  +
call ds:SetTimer  +
mov [esi+0A0h] eax +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
mov eax offset off_1003130 +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_10031CC +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CComboBox@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100FD4A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 146h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
push 147h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 14Eh  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 150h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 151h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 143h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 144h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push 14Bh  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10032A4 +
mov dword ptr [ebp-4] 3 +
lea ecx [esi+198h] +
call ??1CListCtrl@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+158h] +
call ??1CStatic@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+118h] +
call ??1CComboBox@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0A4h] +
call sub_10067A0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
mov esi ecx +
jnz loc_100FED8  +
lea eax [esi+0A4h] +
push eax  +
call sub_100B67A  +
lea eax [esi+118h] +
push eax  +
push 428h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+158h] +
push eax  +
push 42Ah  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 198h +
push esi  +
push 429h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
push 114h  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 115h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+1B8h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-54h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
add esp 0Ch +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
mov dword ptr [ebp-54h] 0Fh +
mov [ebp-50h] ebx +
mov [ebp-40h] ebx +
fmul  ds:dbl_1001E88 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-14h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-14h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 198h +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov edi offset unk_1017DEC +
mov ecx esi +
push ebx  +
jz loc_100FFDA  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_100FFE2  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov dword ptr [ebp-40h] 1 +
mov [ebp-18h] eax +
fild  dword ptr [ebp-18h] +
fmul  ds:dbl_1002538 +
call _ftol2_sse  +
mov [ebp-4Ch] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-48h] eax +
cmp eax ebx +
lea eax [ebp-54h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1010033  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_101003B  +
mov [ebp-48h] edi +
call sub_1004E79  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
or edi 0FFFFFFFFh +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax [ebp-10h] +
mov eax [eax-8] +
add esp 0Ch +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_10100D6  +
mov eax [ebp+8] +
add esi 198h +
mov ecx esi +
mov dword ptr [ebp-4Ch] 5 +
mov [ebp-2Ch] eax +
call sub_1004E07  +
mov [ebp-48h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
call sub_1004E40  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+var_14] eax +
xor esi esi +
lea edi [edx+198h] +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
inc esi  +
push eax  +
mov ecx edi +
mov [ebp+var_1C] esi +
call sub_100673B  +
mov ebx eax +
cmp ebx 7 +
ja loc_1010166  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
and [ebp+var_50] 0 +
mov [ebp+var_44] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_40] eax +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
mov ecx edi +
mov [ebp+lParam] esi +
mov [ebp+var_54] ebx +
call sub_10066F9  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push 3Ch  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
mov esi ecx +
call memset  +
mov ecx [ebp+arg_0] +
xor eax eax +
inc eax  +
mov [ebp+lParam] eax +
mov [ebp+var_34] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_28] eax +
add esp 0Ch +
lea eax [ebp+lParam] +
mov [ebp+var_38] ecx +
push eax  +
lea ecx [esi+198h] +
call sub_1004E1F  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx+118h] +
mov ecx esi +
call sub_100FD6E  +
cmp eax 0FFFFFFFFh +
jz loc_10101E3  +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
call ?GetLBText@CComboBox@@QBEXHAAVCString@@@Z  +
jmp loc_10101EB  +
mov ecx [ebp+arg_0] +
call ?Empty@CString@@QAEXXZ  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+118h] +
mov ecx edi +
xor ebx ebx +
call sub_100FD6E  +
cmp eax 0FFFFFFFFh +
jz loc_1010232  +
push eax  +
mov ecx edi +
call sub_100FDA7  +
test eax eax +
jl loc_1010232  +
cmp eax [esi+10Ch] +
jge loc_1010232  +
push eax  +
lea ecx [esi+104h] +
call sub_100D45F  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
xor ebx ebx +
call sub_10100F1  +
test eax eax +
jz loc_10102AE  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_10100F1  +
test eax eax +
jz loc_10102AE  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push eax  +
call ds:_wcsicmp  +
cmp dword ptr [esi+98h] 0 +
pop ecx  +
pop ecx  +
mov ebx eax +
jz loc_10102AE  +
neg ebx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101211D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 5  +
call sub_1004D8F  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 263h  +
call sub_1009C13  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+0A4h] +
mov dword ptr [esi] offset off_10032A4 +
call sub_100DD46  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+118h] +
call sub_100FCFF  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+158h] +
call sub_1004CE1  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+198h] +
call sub_1004DB0  +
mov byte ptr [ebp-4] 4 +
mov [esi+94h] edi +
mov [esi+98h] edi +
mov [esi+9Ch] edi +
mov [esi+0A0h] edi +
mov [esi+90h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100FE44  +
test byte ptr [ebp+8] 1 +
jz loc_1010390  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_10103B1  +
call sub_10101F5  +
test eax eax +
jz loc_10103E8  +
mov ecx [ebp+arg_0] +
cmp ecx 7 +
ja loc_10103E8  +
jmp ds:off_10103F0[ecx*4]  +
mov eax [eax+10h] +
jmp loc_10103EA  +
mov eax [eax+18h] +
jmp loc_10103EA  +
mov eax [eax+20h] +
jmp loc_10103EA  +
mov eax [eax+28h] +
jmp loc_10103EA  +
mov eax [eax+14h] +
jmp loc_10103EA  +
mov eax [eax+1Ch] +
jmp loc_10103EA  +
mov eax [eax+24h] +
jmp loc_10103EA  +
mov eax [eax+2Ch] +
jmp loc_10103EA  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1017550 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_44] +
push offset aU  +
push 20h  +
push eax  +
mov esi ecx +
call sub_1004A21  +
add esp 10h +
lea eax [ebp+var_44] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1010175  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101211D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+10h] +
push edi  +
push 0  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_101039C  +
push 0  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
mov edi eax +
call sub_101039C  +
cmp edi eax +
jbe loc_1010498  +
mov dword ptr [ebp-4] 1 +
jmp loc_101049E  +
jnb loc_101049E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+9Ch] 0 +
pop edi  +
pop esi  +
jz loc_10104AC  +
neg dword ptr [ebp-4]  +
mov eax [ebp-4] +
leave   +
retn 0Ch  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 1DCh  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_10104E2  +
call sub_10102E5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
call sub_101005D  +
test eax eax +
jl loc_1010513  +
push [ebp+arg_8]  +
mov ecx esi +
push eax  +
call sub_1010415  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
cmp dword ptr [ecx+94h] 0 +
push ecx  +
jz loc_101052E  +
push offset loc_1010462  +
jmp loc_1010533  +
push offset loc_101023D  +
add ecx 198h +
call sub_1004E9B  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
test eax eax +
jz loc_1010564  +
cmp [ecx+94h] eax +
jnz loc_101057C  +
lea eax [ecx+9Ch] +
jmp loc_1010573  +
cmp dword ptr [ecx+94h] 0 +
jnz loc_101057C  +
lea eax [ecx+98h] +
xor edx edx +
cmp [eax] edx +
setz dl  +
mov [eax] edx +
mov eax [esi+10h] +
mov [ecx+94h] eax +
call sub_101051D  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_1010636  +
push dword ptr [esi+10h]  +
push 122h  +
push 0  +
call sub_10104F1  +
push dword ptr [esi+18h]  +
mov ecx edi +
push 123h  +
push 1  +
call sub_10104F1  +
push dword ptr [esi+20h]  +
mov ecx edi +
push 124h  +
push 2  +
call sub_10104F1  +
push dword ptr [esi+28h]  +
mov ecx edi +
push 125h  +
push 3  +
call sub_10104F1  +
push dword ptr [esi+14h]  +
mov ecx edi +
push 126h  +
push 4  +
call sub_10104F1  +
push dword ptr [esi+1Ch]  +
mov ecx edi +
push 127h  +
push 5  +
call sub_10104F1  +
push dword ptr [esi+24h]  +
mov ecx edi +
push 128h  +
push 6  +
call sub_10104F1  +
push dword ptr [esi+2Ch]  +
mov ecx edi +
push 129h  +
push 7  +
call sub_10104F1  +
jmp loc_10106A4  +
push 122h  +
push 0  +
call sub_101005D  +
push 123h  +
push 1  +
mov ecx edi +
call sub_101005D  +
push 124h  +
push 2  +
mov ecx edi +
call sub_101005D  +
push 125h  +
push 3  +
mov ecx edi +
call sub_101005D  +
push 126h  +
push 4  +
mov ecx edi +
call sub_101005D  +
push 127h  +
push 5  +
mov ecx edi +
call sub_101005D  +
push 128h  +
push 6  +
mov ecx edi +
call sub_101005D  +
push 129h  +
push 7  +
mov ecx edi +
call sub_101005D  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_10101F5  +
lea ebx [esi+198h] +
mov ecx ebx +
mov [ebp+var_4] eax +
call sub_1004E07  +
xor edi edi +
mov [ebp+var_8] eax +
cmp [ebp+var_4] edi +
jz loc_1010702  +
cmp eax edi +
jle loc_1010719  +
push edi  +
mov ecx ebx +
call ?GetItemData@CListCtrl@@QBEKH@Z  +
push [ebp+var_4]  +
mov ecx esi +
push eax  +
call sub_101039C  +
push eax  +
push edi  +
mov ecx esi +
call sub_1010415  +
inc edi  +
cmp edi [ebp+var_8] +
jl loc_10106DE  +
jmp loc_1010719  +
cmp eax edi +
jle loc_1010719  +
push offset unk_1017DEC  +
push edi  +
mov ecx esi +
call sub_1010175  +
inc edi  +
cmp edi [ebp+var_8] +
jl loc_1010706  +
mov ecx esi +
call sub_101051D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
jmp sub_10106AF  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10101F5  +
push eax  +
mov ecx esi +
call sub_101059A  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-24h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov edi [esi+10Ch] +
cmp edi ebx +
mov [ebp-1Ch] edi +
jg loc_10107A4  +
lea edi [esi+118h] +
mov ecx edi +
call sub_100FE2C  +
push 0FFFFFFFFh  +
mov ecx edi +
call sub_100FD86  +
push ebx  +
mov ecx edi +
call ?EnableWindow@CWnd@@QAEHH@Z  +
jmp loc_10108D6  +
mov [ebp-28h] ebx +
lea ebx [esi+118h] +
mov ecx ebx +
call sub_100FD56  +
mov [ebp-14h] eax +
lea eax [ebp-24h] +
push eax  +
mov ecx esi +
call sub_10101BE  +
xor ecx ecx +
push 4  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??_U@YAPAXI@Z  +
mov edi eax +
pop ecx  +
mov [ebp-20h] edi +
test edi edi +
jz loc_10108DD  +
mov ecx [ebp-1Ch] +
xor eax eax +
and [ebp-10h] eax +
cmp [ebp-14h] eax +
stos   +
jle loc_1010855  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp-10h]  +
mov ecx ebx +
call ?GetLBText@CComboBox@@QBEXHAAVCString@@@Z  +
xor edi edi +
push edi  +
lea ecx [esi+104h] +
call sub_100D45F  +
push dword ptr [eax+4]  +
push dword ptr [ebp-18h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101082B  +
inc edi  +
cmp edi [ebp-1Ch] +
jl loc_1010805  +
jmp loc_1010835  +
mov eax [ebp-20h] +
mov dword ptr [eax+edi*4] 1 +
cmp edi [ebp-1Ch] +
jl loc_101084A  +
push dword ptr [ebp-10h]  +
mov ecx ebx +
call sub_100FE0B  +
dec dword ptr [ebp-10h]  +
dec dword ptr [ebp-14h]  +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp-14h] +
jl loc_10107F5  +
xor edi edi +
mov eax [ebp-20h] +
cmp dword ptr [eax+edi*4] 0 +
jnz loc_1010884  +
push edi  +
lea ecx [esi+104h] +
call sub_100D45F  +
push dword ptr [eax+4]  +
mov ecx ebx +
call sub_100FDEA  +
cmp eax 0FFFFFFFFh +
jz loc_1010884  +
push edi  +
push eax  +
mov ecx ebx +
call sub_100FDC8  +
inc edi  +
cmp edi [ebp-1Ch] +
jl loc_1010857  +
push dword ptr [ebp-20h]  +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov ecx ebx +
call sub_100FD56  +
xor edi edi +
mov [ebp-14h] eax +
test eax eax +
jle loc_10108CC  +
lea eax [ebp-18h] +
push eax  +
push edi  +
mov ecx ebx +
call ?GetLBText@CComboBox@@QBEXHAAVCString@@@Z  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-18h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10108C9  +
inc edi  +
cmp edi [ebp-14h] +
jl loc_10108A3  +
jmp loc_10108CC  +
mov [ebp-28h] edi +
push dword ptr [ebp-28h]  +
mov ecx ebx +
call sub_100FD86  +
mov ecx esi +
call sub_10106AF  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call ?UpdateData@CWnd@@QAEHH@Z  +
test eax eax +
jz loc_1010918  +
mov ecx esi +
pop esi  +
jmp sub_101074D  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+198h] +
mov ecx edi +
call sub_1004EDE  +
or eax 20h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ebx ds:GetSysColor +
push 0Fh  +
call ebx  +
push eax  +
mov ecx edi +
call sub_10066D8  +
push 0Fh  +
call ebx  +
push eax  +
mov ecx edi +
call sub_100675D  +
mov ecx esi +
call sub_100FF19  +
mov ecx esi +
call sub_1010734  +
mov ecx esi +
call sub_101051D  +
mov ecx edi +
call sub_1004E07  +
test eax eax +
jle loc_101098E  +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
mov ecx esi +
call sub_101074D  +
push 12Ah  +
lea eax [esi+158h] +
push eax  +
call sub_100AA16  +
push 0  +
push 1388h  +
push 1234h  +
push dword ptr [esi+20h]  +
call ds:SetTimer  +
mov [esi+0A0h] eax +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 1234h +
push esi  +
mov esi ecx +
jnz loc_10109F4  +
mov ecx [esi+90h] +
call ?GetActivePage@CPropertySheet@@QBEPAVCPropertyPage@@XZ  +
cmp eax esi +
jnz loc_10109F4  +
mov ecx esi +
call sub_1010900  +
mov ecx esi +
call ?Default@CWnd@@IAEJXZ  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
lea esi [ecx+60h] +
xor ebx ebx +
inc edi  +
push ebx  +
mov ecx esi +
mov [ebp+var_4] edi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A32  +
mov ebx edi +
push edi  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A41  +
or ebx 8 +
push 2  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A51  +
or ebx 2 +
push 3  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A61  +
or ebx 10h +
push 4  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A71  +
or ebx 20h +
push 5  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A84  +
or ebx 80h +
push 6  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010A97  +
or ebx 100h +
push 7  +
mov ecx esi +
call MFC42u_6667  +
mov edi 200h +
test eax eax +
jz loc_1010AAB  +
or ebx edi +
push 8  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010ABB  +
or ebx 4 +
push 9  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010ACE  +
or ebx 400h +
push 0Ah  +
mov ecx esi +
call MFC42u_6667  +
test eax eax +
jz loc_1010AE1  +
or ebx 800h +
test ebx edi +
jz loc_1010B06  +
test bl 10h +
jnz loc_1010B06  +
push 0FFFFFFFFh  +
push 4  +
push 142h  +
call ?AfxMessageBox@@YGHIII@Z  +
cmp eax 6 +
jz loc_1010B03  +
and [ebp+var_4] 0 +
jmp loc_1010B2E  +
or ebx 10h +
test ebx 400h +
jz loc_1010B29  +
test bl 10h +
jnz loc_1010B29  +
push 0FFFFFFFFh  +
push 4  +
push 148h  +
call ?AfxMessageBox@@YGHIII@Z  +
cmp eax 6 +
jnz loc_1010AFD  +
or ebx 10h +
mov eax [ebp+arg_0] +
mov [eax] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_1010A10  +
test eax eax +
jz loc_1010B66  +
push [ebp+var_4]  +
call sub_100C3F2  +
test eax eax +
jz loc_1010B66  +
mov ecx esi +
call ?OnOK@CDialog@@MAEXXZ  +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push dword ptr [ebp+8]  +
push 8Bh  +
call ??0CDialog@@QAE@IPAVCWnd@@@Z  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+60h] +
mov dword ptr [esi] offset off_10033DC +
call sub_1004DB0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1006676  +
test byte ptr [ebp+8] 1 +
jz loc_1010BCB  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 60h +
push ecx  +
push 42Bh  +
push [ebp+arg_0]  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea eax [ebp-24h] +
push eax  +
push dword ptr [esi+80h]  +
call ds:GetClientRect  +
push 2Ch  +
lea eax [ebp-50h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 101h  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-50h] 0Fh +
mov [ebp-4Ch] edi +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov [ebp-3Ch] edi +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_1002540 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add esi 60h +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ebx offset unk_1017DEC +
mov ecx esi +
push edi  +
jz loc_1010C9B  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1010CA3  +
mov [ebp-44h] ebx +
call sub_1004E79  +
push 102h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-1Ch] +
sub eax [ebp-24h] +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-14h] eax +
fild  dword ptr [ebp-14h] +
fmul  ds:dbl_10034B8 +
call _ftol2_sse  +
mov [ebp-48h] eax +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-44h] eax +
cmp eax edi +
lea eax [ebp-50h] +
push eax  +
mov ecx esi +
push 1  +
jz loc_1010D01  +
call sub_1004E79  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
jmp loc_1010D09  +
mov [ebp-44h] ebx +
call sub_1004E79  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 3Ch  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
xor edi edi +
add esi 60h +
inc edi  +
add esp 0Ch +
mov ecx esi +
mov dword ptr [ebp-38h] offset unk_1017DEC +
mov [ebp-4Ch] edi +
call sub_1004E07  +
mov [ebp-48h] eax +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
call sub_1004E40  +
mov ebx eax +
test ebx ebx +
jl loc_1010DC0  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
call MFC42u_6879  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
inc eax  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-38h] eax +
test eax eax +
jz loc_1010DC0  +
lea eax [ebp-4Ch] +
push eax  +
mov ecx esi +
mov [ebp-4Ch] edi +
mov [ebp-48h] ebx +
mov [ebp-44h] edi +
call sub_1004E1F  +
push 0FFFFFFFFh  +
lea ecx [ebp-10h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov eax esi +
inc ebx  +
and eax ebx +
push eax  +
push 103h  +
mov edi ecx +
call sub_1010D20  +
mov eax esi +
shr eax 3 +
and eax ebx +
push eax  +
push 104h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 1 +
and eax ebx +
push eax  +
push 107h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 4 +
and eax ebx +
push eax  +
push 105h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 5 +
and eax ebx +
push eax  +
push 108h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 7 +
and eax ebx +
push eax  +
push 109h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 8 +
and eax ebx +
push eax  +
push 14Dh  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 9 +
and eax ebx +
push eax  +
push 141h  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 2 +
and eax ebx +
push eax  +
push 10Ah  +
mov ecx edi +
call sub_1010D20  +
mov eax esi +
shr eax 0Ah +
and eax ebx +
push eax  +
push 149h  +
mov ecx edi +
call sub_1010D20  +
shr esi 0Bh +
and esi ebx +
push esi  +
push 140h  +
mov ecx edi +
call sub_1010D20  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-80h] +
call sub_100DD46  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-80h] +
push eax  +
call sub_100B67A  +
mov ecx esi +
call ?OnInitDialog@CDialog@@UAEHXZ  +
lea edi [esi+60h] +
mov ecx edi +
call sub_1004EDE  +
or eax 24h +
push eax  +
mov ecx edi +
call sub_1004EBD  +
mov ecx esi +
call sub_1010BF6  +
push dword ptr [ebp-24h]  +
mov ecx esi +
call sub_1010DD9  +
mov ecx edi +
call sub_1004E07  +
test eax eax +
jle loc_1010F31  +
push 3  +
push 3  +
push 0  +
mov ecx edi +
call MFC42u_6896  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-80h] +
call sub_10067A0  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
***
mov eax ds:?messageMap@CPropertySheet@@1UAFX_MSGMAP@@B +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 42Ch +
pop ebp  +
jmp loc_1004C31  +
***
mov eax [ecx+8Ch] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+bRevert]  +
push dword ptr [ecx+20h]  +
call ds:GetSystemMenu  +
push eax  +
call ?FromHandle@CMenu@@SGPAV1@PAUHMENU__@@@Z  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+4] +
push esi  +
mov esi [eax] +
push edi  +
push [ebp+arg_4]  +
mov edi [eax+0Ch] +
mov eax [eax+8] +
sub edi edx +
push edi  +
sub eax esi +
push eax  +
push edx  +
push esi  +
call ?MoveWindow@CWnd@@QAEXHHHHH@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpPoint] +
push edi  +
mov ebx ecx +
push esi  +
push dword ptr [ebx+20h]  +
call ds:ScreenToClient  +
lea edi [esi+8] +
push edi  +
push dword ptr [ebx+20h]  +
call ds:ScreenToClient  +
mov ecx ebx +
call ?GetExStyle@CWnd@@QBEKXZ  +
test eax 400000h +
jz loc_101100D  +
mov eax [esi] +
mov ecx [edi] +
mov [esi] ecx +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 80h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_0] +
push eax  +
push 0Eh  +
push eax  +
call ?AfxFindResourceHandle@@YGPAUHINSTANCE__@@PBG0@Z  +
push eax  +
call ds:LoadIconW  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor edi edi +
push edi  +
push edi  +
push 66h  +
call ??0CPropertySheet@@QAE@IPAVCWnd@@I@Z  +
mov [ebp-4] edi +
lea edi [esi+90h] +
mov ecx edi +
mov dword ptr [esi] offset off_1003544 +
call sub_1009924  +
mov byte ptr [ebp-4] 1 +
lea ebx [esi+168h] +
mov ecx ebx +
call sub_1007B6A  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+240h] +
call sub_100632D  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+42Ch] +
call sub_1004EF6  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+590h] +
call sub_1008A4A  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+6B8h] +
call sub_1007EF3  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+804h] +
call sub_100709C  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+9ECh] +
call sub_100EA67  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+0C4Ch] +
call sub_100F700  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+0DE4h] +
call sub_10102E5  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+0FC0h] +
call sub_1011874  +
mov byte ptr [ebp-4] 0Bh +
mov eax 0FFFFFDFFh +
and [esi+0F4h] eax +
and [esi+1CCh] eax +
and [esi+2A4h] eax +
and [esi+490h] eax +
and [esi+5F4h] eax +
and [esi+71Ch] eax +
and [esi+868h] eax +
and [esi+0A50h] eax +
and [esi+0CB0h] eax +
and [esi+0E48h] eax +
and [esi+1024h] eax +
and [esi+44h] eax +
push edi  +
mov ecx esi +
mov [esi+120h] esi +
mov [esi+1F8h] esi +
mov [esi+2D0h] esi +
mov [esi+4BCh] esi +
mov [esi+620h] esi +
mov [esi+748h] esi +
mov [esi+894h] esi +
mov [esi+0A7Ch] esi +
mov [esi+0CDCh] esi +
mov [esi+0E74h] esi +
mov [esi+1050h] esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
push ebx  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+240h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+42Ch] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+590h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+6B8h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+9ECh] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+804h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+0C4Ch] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+0DE4h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
lea eax [esi+0FC0h] +
push eax  +
mov ecx esi +
call ?AddPage@CPropertySheet@@QAEXPAVCPropertyPage@@@Z  +
or dword ptr [esi+44h] 20h +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
push 80h  +
mov ecx eax +
call sub_101103B  +
mov [esi+8Ch] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 0Ah +
lea ecx [esi+0FC0h] +
call sub_1011652  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+0DE4h] +
call sub_100FE44  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+0C4Ch] +
call sub_100F447  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+9ECh] +
call sub_100E31D  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+804h] +
call sub_10067D2  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+6B8h] +
call sub_1007E8F  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+590h] +
call sub_1008977  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+42Ch] +
call sub_1004BA4  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+240h] +
call sub_10060F0  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+168h] +
call sub_1007A5E  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+90h] +
call sub_1009841  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CPropertySheet@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1011274  +
test byte ptr [ebp+8] 1 +
jz loc_101135D  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi ecx +
push 9  +
mov [ebp+var_8] edi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov esi eax +
test esi esi +
jz loc_10114B9  +
push 0  +
mov ecx esi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+20h]  +
mov esi ds:GetWindowRect +
call esi  +
lea eax [ebp+Point] +
push eax  +
mov ecx edi +
call sub_1010FD3  +
push 2  +
mov ecx edi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10114B9  +
push ebx  +
lea ecx [ebp+rc] +
push ecx  +
push dword ptr [eax+20h]  +
call esi  +
lea eax [ebp+rc] +
push eax  +
mov ecx edi +
call sub_1010FD3  +
mov ebx [ebp+Point.x] +
sub ebx [ebp+rc.left] +
mov edi ds:OffsetRect +
push 0  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
push 1  +
lea eax [ebp+rc] +
push eax  +
call sub_1010FA3  +
mov ecx [ebp+var_8] +
push 3023h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1011438  +
lea ecx [ebp+rc] +
push ecx  +
push dword ptr [eax+20h]  +
call esi  +
mov ecx [ebp+var_8] +
lea eax [ebp+rc] +
push eax  +
call sub_1010FD3  +
push 0  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
push 1  +
lea eax [ebp+rc] +
push eax  +
call sub_1010FA3  +
mov ecx [ebp+var_8] +
push 3024h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1011478  +
lea ecx [ebp+rc] +
push ecx  +
push dword ptr [eax+20h]  +
call esi  +
mov ecx [ebp+var_8] +
lea eax [ebp+rc] +
push eax  +
call sub_1010FD3  +
push 0  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
push 1  +
lea eax [ebp+rc] +
push eax  +
call sub_1010FA3  +
mov ecx [ebp+var_8] +
push 3025h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10114B8  +
lea ecx [ebp+rc] +
push ecx  +
push dword ptr [eax+20h]  +
call esi  +
mov ecx [ebp+var_8] +
lea eax [ebp+rc] +
push eax  +
call sub_1010FD3  +
push 0  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
push 1  +
lea eax [ebp+rc] +
push eax  +
call sub_1010FA3  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
call ?OnInitDialog@CPropertySheet@@UAEHXZ  +
xor esi esi +
push esi  +
mov ecx edi +
call sub_1010F83  +
mov ebx eax +
cmp ebx esi +
jz loc_101152C  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov [ebp-4] esi +
push 65h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-10h] +
cmp [eax-8] esi +
jz loc_1011520  +
push esi  +
push esi  +
mov esi ds:AppendMenuW +
push 800h  +
push dword ptr [ebx+4]  +
call esi  +
push dword ptr [ebp-10h]  +
push 10h  +
push 0  +
push dword ptr [ebx+4]  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
push 1  +
lea esi [edi+8Ch] +
push dword ptr [esi]  +
mov ecx edi +
call sub_1011019  +
push 0  +
push dword ptr [esi]  +
mov ecx edi +
call sub_1011019  +
mov ecx edi +
call sub_1011369  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
and eax 0FFF0h +
cmp eax 10h +
jnz loc_101158B  +
push dword ptr [ecx+8Ch]  +
mov eax dword_1017DD4 +
push 0  +
push dword ptr [eax]  +
push dword ptr [ecx+20h]  +
call ds:ShellAboutW  +
pop ebp  +
retn 8  +
***
pop ebp  +
jmp loc_10131FE  +
***
push 68h  +
mov eax offset dword_1014350 +
call __EH_prolog3_GS  +
mov esi ecx +
push dword ptr [esi+20h]  +
call ds:IsIconic  +
test eax eax +
jz loc_101162A  +
push esi  +
lea ecx [ebp-64h] +
call ??0CPaintDC@@QAE@PAVCWnd@@@Z  +
and dword ptr [ebp-4] 0 +
push 0  +
push dword ptr [ebp-60h]  +
push 27h  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
mov edi ds:GetSystemMetrics +
push 0Bh  +
call edi  +
push 0Ch  +
mov ebx eax +
call edi  +
mov edi eax +
lea eax [ebp-74h] +
push eax  +
push dword ptr [esi+20h]  +
call ds:GetClientRect  +
mov eax [ebp-6Ch] +
sub eax [ebp-74h] +
push dword ptr [esi+8Ch]  +
sub eax ebx +
inc eax  +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [ebp-68h] +
sub eax [ebp-70h] +
sar ecx 1 +
sub eax edi +
inc eax  +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ecx  +
push dword ptr [ebp-60h]  +
call ds:DrawIcon  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-64h] +
call ??1CPaintDC@@UAE@XZ  +
jmp loc_1011631  +
mov ecx esi +
call ?Default@CWnd@@IAEJXZ  +
call sub_10121F9  +
retn   +
***
mov eax offset off_1002858 +
retn   +
***
mov eax offset off_1003610 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100371C +
mov dword ptr [ebp-4] 6 +
lea ecx [esi+1B8h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+178h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+138h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+0F8h] +
call ??1CEdit@@UAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0F4h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0F0h] +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+98h] +
call ??1CStatic@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009C4B  +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
mov [esi+0D8h] edi +
mov [esi+0DCh] edi +
mov [esi+0E0h] edi +
mov [esi+0E4h] edi +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push edi  +
lea ecx [esi+0F8h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+138h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+178h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
lea ecx [esi+1B8h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 155h  +
add esi 98h +
push esi  +
call sub_100AA16  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
inc eax  +
retn   +
***
push 0  +
add ecx 0F8h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 1  +
add ecx 0F8h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 0  +
add ecx 138h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 1  +
add ecx 138h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 0  +
add ecx 178h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 1  +
add ecx 178h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 0  +
add ecx 1B8h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
push 1  +
add ecx 1B8h +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CWnd@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_100381C +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CEdit@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1011868  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 265h  +
call sub_1009C13  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+98h] +
mov dword ptr [esi] offset off_100371C +
call sub_1004CE1  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0F0h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0F4h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+0F8h] +
call sub_101181D  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+138h] +
call sub_101181D  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+178h] +
call sub_101181D  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+1B8h] +
call sub_101181D  +
mov byte ptr [ebp-4] 7 +
or eax 0FFFFFFFFh +
and dword ptr [esi+94h] 0 +
mov [esi+0D8h] eax +
mov [esi+0E0h] eax +
mov [esi+0E4h] eax +
mov [esi+0DCh] eax +
mov dword ptr [esi+0E8h] 258h +
mov dword ptr [esi+0ECh] 8 +
mov [ebp-4] eax +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1011652  +
test byte ptr [ebp+8] 1 +
jz loc_1011962  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
lea eax [esi+98h] +
push eax  +
push 458h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+0F8h] +
push eax  +
push 44Eh  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+178h] +
push eax  +
push 451h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+1B8h] +
push eax  +
push 454h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+138h] +
push eax  +
push 457h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
cmp dword ptr [edi] 0 +
jnz loc_10119EE  +
lea eax [esi+94h] +
cmp dword ptr [eax] 0 +
jnz loc_1011AD3  +
mov dword ptr [eax] 1 +
push ebx  +
lea ebx [esi+0D8h] +
push ebx  +
push 44Ch  +
push edi  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+0E0h] +
push eax  +
push 44Fh  +
push edi  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+0E4h] +
push eax  +
push 452h  +
push edi  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
lea eax [esi+0DCh] +
push eax  +
push 455h  +
push edi  +
call ?DDX_Radio@@YGXPAVCDataExchange@@HAAH@Z  +
cmp dword ptr [ebx] 1 +
jnz loc_1011A62  +
lea ebx [esi+0E8h] +
push ebx  +
push 44Eh  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAK@Z  +
cmp dword ptr [edi] 0 +
jz loc_1011A62  +
push 2710h  +
push 1  +
push dword ptr [ebx]  +
push edi  +
call ?DDV_MinMaxUInt@@YGXPAVCDataExchange@@III@Z  +
cmp dword ptr [esi+0DCh] 1 +
jnz loc_1011A8E  +
lea ebx [esi+0ECh] +
push ebx  +
push 457h  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAK@Z  +
cmp dword ptr [edi] 0 +
jz loc_1011A8E  +
push 3Ch  +
push 1  +
push dword ptr [ebx]  +
push edi  +
call ?DDV_MinMaxUInt@@YGXPAVCDataExchange@@III@Z  +
cmp dword ptr [esi+0E0h] 1 +
jnz loc_1011AB0  +
lea ebx [esi+0F0h] +
push ebx  +
push 451h  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
mov ecx ebx +
call sub_100584C  +
cmp dword ptr [esi+0E4h] 1 +
pop ebx  +
jnz loc_1011AD3  +
add esi 0F4h +
push esi  +
push 454h  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
mov ecx esi +
call sub_100584C  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
push 1  +
mov esi ecx +
or edi 0FFFFFFFFh +
call ?UpdateData@CWnd@@QAEHH@Z  +
cmp eax 1 +
jnz loc_1011B50  +
push dword ptr [esi+0F4h]  +
xor ecx ecx +
push dword ptr [esi+0F0h]  +
xor eax eax +
cmp [esi+0E4h] eax +
push dword ptr [esi+0ECh]  +
setnz cl  +
push dword ptr [esi+0E8h]  +
push ecx  +
xor ecx ecx +
cmp [esi+0E0h] eax +
setnz cl  +
push ecx  +
xor ecx ecx +
cmp [esi+0DCh] eax +
setnz cl  +
push ecx  +
xor ecx ecx +
cmp [esi+0D8h] eax +
setnz cl  +
push ecx  +
mov ecx dword_1017798 +
add ecx 70h +
call sub_100CDA3  +
mov edi 25Eh +
push edi  +
mov ecx esi +
call sub_1009D2B  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+90h] +
push 3  +
call sub_1004D8F  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3  +
push 1F8h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1011BAB  +
call sub_1011874  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push 0  +
lea ecx [esi+60h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 0  +
lea ecx [esi+0A0h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 0  +
lea ecx [esi+0E0h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 0  +
lea ecx [esi+120h] +
call ?EnableWindow@CWnd@@QAEHH@Z  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
xor eax eax +
inc eax  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push dword ptr [ebp+8]  +
push 266h  +
call ??0CDialog@@QAE@IPAVCWnd@@@Z  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+60h] +
mov dword ptr [esi] offset off_100391C +
call sub_101181D  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+0A0h] +
call sub_101181D  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+0E0h] +
call sub_101181D  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+120h] +
call sub_101181D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100E2BA  +
test byte ptr [ebp+8] 1 +
jz loc_1011C9F  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov edi [ebp+8] +
lea eax [esi+60h] +
push eax  +
mov ebx 460h +
push ebx  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+120h] +
push eax  +
push 461h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
lea eax [esi+0E0h] +
push eax  +
push 462h  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
add esi 0A0h +
push esi  +
lea esi [ebx+3] +
push esi  +
push edi  +
call ?DDX_Control@@YGXPAVCDataExchange@@HAAVCWnd@@@Z  +
cmp dword ptr [edi] 0 +
jnz loc_1011DE1  +
mov eax dword_1017784 +
cmp dword ptr [eax+4] 0 +
jz loc_1011D2E  +
add eax 14h +
push eax  +
push ebx  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAK@Z  +
jmp loc_1011D4B  +
lea eax [ebp-10h] +
push eax  +
push 156h  +
call sub_100A125  +
test eax eax +
jz loc_1011D4B  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
mov eax dword_1017784 +
xor ebx ebx +
cmp [eax+8] ebx +
jz loc_1011D64  +
add eax 18h +
push eax  +
push esi  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAK@Z  +
jmp loc_1011D81  +
lea eax [ebp-10h] +
push eax  +
push 156h  +
call sub_100A125  +
test eax eax +
jz loc_1011D81  +
lea eax [ebp-10h] +
push eax  +
push esi  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
mov eax dword_1017784 +
cmp [eax+10h] ebx +
jz loc_1011D90  +
add eax 20h +
jmp loc_1011DA5  +
lea eax [ebp-10h] +
push eax  +
push 157h  +
call sub_100A125  +
test eax eax +
jz loc_1011DB1  +
lea eax [ebp-10h] +
push eax  +
push 461h  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
mov eax dword_1017784 +
cmp [eax+0Ch] ebx +
jz loc_1011DC0  +
add eax 1Ch +
jmp loc_1011DD5  +
lea eax [ebp-10h] +
push eax  +
push 158h  +
call sub_100A125  +
test eax eax +
jz loc_1011DE1  +
lea eax [ebp-10h] +
push eax  +
push 462h  +
push edi  +
call ?DDX_Text@@YGXPAVCDataExchange@@HAAVCString@@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1011E16  +
test eax eax +
jnz loc_1011E1B  +
mov ecx [esi] +
test ecx ecx +
jz loc_1011E13  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1011E07  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1017E18 +
push offset dword_1017E08  +
push dword_1017E14  +
mov dword_1017E08 eax +
push offset unk_1017DF8  +
push offset unk_1017DFC  +
push offset unk_1017DF4  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1017E04 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1011EBE  +
cmp eax esi +
jnz loc_1011EB1  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1011EC1  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1011E98  +
xor esi esi +
inc esi  +
mov eax dword_1018150 +
cmp eax esi +
jnz loc_1011ED4  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1011F03  +
mov eax dword_1018150 +
test eax eax +
jnz loc_1011EFD  +
mov dword_1018150 esi +
push offset dword_10015B4  +
push offset dword_10015A8  +
call sub_1011DFA  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1011F03  +
jmp loc_1012027  +
mov dword_1017E10 esi +
mov eax dword_1018150 +
cmp eax esi +
jnz loc_1011F27  +
push offset dword_10015A4  +
push offset dword_100158C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1018150 2 +
cmp [ebp+var_20] ebx +
jnz loc_1011F34  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1018160 ebx +
jz loc_1011F55  +
push offset dword_1018160  +
call sub_10124A9  +
pop ecx  +
test eax eax +
jz loc_1011F55  +
push ebx  +
push 2  +
push ebx  +
call dword_1018160  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_1012027  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1011F7A  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_1011F8F  +
cmp cx 20h +
ja loc_1011F8F  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1011F7A  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1011F9B  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_1011F9E  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_1017E0C eax +
cmp dword_1017E00 ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_1011FD0  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1011F64  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_1017E0C eax +
xor ebx ebx +
cmp dword_1017E00 ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_1017E10 ebx +
jnz loc_1012012  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1017E0C +
jmp loc_1012033  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1012050  +
xor eax eax +
jmp loc_101209D  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101204C  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101208A  +
cmp ecx 20Bh +
jnz loc_101204C  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101204C  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1012098  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101204C  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_1017E00 eax +
call sub_1012642  +
push eax  +
call ds:__set_app_type  +
or dword_1018158 0FFFFFFFFh +
or dword_101815C 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1017E20 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1017E1C +
mov [eax] ecx +
call sub_10125D4  +
cmp dword_1017568 0 +
jnz loc_10120F6  +
push offset sub_10125D4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10125BC  +
xor eax eax +
retn   +
***
call sub_1012681  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1017550 +
jnz loc_1012128  +
retn 0  +
jmp loc_1012717  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017550 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017550 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1017550 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_101211D  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_1012228  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_101224B  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_1012362  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_10123A3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_1012370  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_101239E  +
cmp edx [esp+arg_4] +
ja loc_101239E  +
jb loc_101239F  +
cmp eax [esp+arg_0] +
jbe loc_101239F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10123EA  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10123EA  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10123E4  +
cmp eax 19930521h +
jz loc_10123E4  +
cmp eax 19930522h +
jz loc_10123E4  +
cmp eax 1994000h +
jnz loc_10123EA  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10123AC+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1012436  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1012432  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101249D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1012495  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101249F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1012485  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1012420  +
pop ecx  +
test eax eax +
jz loc_1012506  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1012460  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012506  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101250F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101211D  +
push offset dword_1017550  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1012635  +
cmp ecx 0FFFFFFFFh +
jz loc_1012635  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101262E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101262E  +
cmp edx 10000000h +
jnb loc_101262E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101262E  +
jmp loc_1012629  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1012677  +
push eax  +
call sub_10125DC  +
test eax eax +
jz loc_1012677  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101266C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1012677  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1017550 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10126B3  +
test eax ebx +
jz loc_10126B3  +
not eax  +
mov dword_1017554 eax +
jmp loc_101270E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10126FA  +
test dword_1017550 ebx +
jnz loc_10126FF  +
mov esi 0BB40E64Fh +
mov dword_1017550 esi +
not esi  +
mov dword_1017554 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1017F28 eax +
mov dword_1017F24 ecx +
mov dword_1017F20 edx +
mov dword_1017F1C ebx +
mov dword_1017F18 esi +
mov dword_1017F14 edi +
mov word_1017F40 ss +
mov word_1017F34 cs +
mov word_1017F10 ds +
mov word_1017F0C es +
mov word_1017F08 fs +
mov word_1017F04 gs +
pushf   +
pop dword_1017F38  +
mov eax [ebp+0] +
mov dword_1017F2C eax +
mov eax [ebp+4] +
mov dword_1017F30 eax +
lea eax [ebp+8] +
mov dword_1017F3C eax +
mov eax [ebp-320h] +
mov dword_1017E78 10001h +
mov eax dword_1017F30 +
mov dword_1017E34 eax +
mov dword_1017E28 0C0000409h +
mov dword_1017E2C 1 +
mov eax dword_1017550 +
mov [ebp-328h] eax +
mov eax dword_1017554 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1013252  +
***
push ebp  +
mov ebp esp +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov cl [ebp+8] +
mov [eax+14h] cl +
mov ecx [ebp+0Ch] +
mov [eax+2040h] ecx +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
jmp ds:?OnHelp@CWinApp@@IAEXXZ  +
***
jmp ds:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CStatic@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CButton@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CListCtrl@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CProgressCtrl@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CDialog@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CObArray@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?Serialize@CObArray@@UAEXAAVCArchive@@@Z  +
***
jmp ds:?GetRuntimeClass@CComboBox@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CPropertySheet@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?OnSysCommand@CPropertySheet@@IAEXIJ@Z  +
***
jmp ds:?GetRuntimeClass@CEdit@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?AfxWinMain@@YGHPAUHINSTANCE__@@0PAGH@Z  +
***
retn 0FFEBh  +
***
retn   +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
jmp fword ptr (byte_10167FF-101685Ah)[eax]  +
***
retn   +
***
mov ecx offset unk_10175B8 +
jmp sub_100491B  +
***
mov ecx offset unk_1017698 +
jmp sub_10094E1  +
***
