mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100138A  +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop ebp  +
retn   +
***
mov edx [ecx+234h] +
test edx edx +
jz loc_10013B6  +
mov eax [ecx+230h] +
add eax [ecx+224h] +
push edx  +
push eax  +
add ecx 210h +
call ds:?QueryString@WSTRING@@QBEPAV1@KK@Z  +
retn   +
xor eax eax +
retn   +
***
mov eax [ecx+224h] +
test eax eax +
jz loc_10013D8  +
push eax  +
push 0  +
add ecx 210h +
call ds:?QueryString@WSTRING@@QBEPAV1@KK@Z  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+10h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6B0h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ecx [ebp+var_6B0] +
call ds:??0ARGUMENT_LEXEMIZER@@QAE@XZ  +
mov edi ds:??0ARRAY@@QAE@XZ +
lea ecx [ebp+var_4E8] +
call edi  +
lea ecx [ebp+var_4A0] +
call edi  +
mov edi ds:??0STRING_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_5B4] +
call edi  +
lea ecx [ebp+var_244] +
call ds:??0PATH@@QAE@XZ  +
mov ebx ds:??0DSTRING@@QAE@XZ +
lea ecx [ebp+var_4D0] +
call ebx  +
lea ecx [ebp+var_484] +
call ds:??0PATH@@QAE@XZ  +
lea ecx [ebp+var_500] +
call ebx  +
lea ecx [ebp+var_55C] +
call edi  +
lea ecx [ebp+var_530] +
call edi  +
lea ecx [ebp+var_588] +
call edi  +
lea ecx [ebp+var_4B8] +
call ebx  +
and dword ptr [esi+358h] 0 +
call ?Get_Standard_Output_Stream@@YGPAVSTREAM@@XZ  +
mov [esi+76Ch] eax +
test eax eax +
jz loc_1001F4D  +
lea ebx [esi+4A0h] +
push 0  +
mov [ebp+var_504] ebx +
call ?Get_Standard_Input_Stream@@YGPAVSTREAM@@XZ  +
push eax  +
push dword ptr [esi+76Ch]  +
mov ecx ebx +
call ds:?Initialize@STREAM_MESSAGE@@QAEEPAVSTREAM@@00@Z  +
push 0FFFFFFFFh  +
push offset asc_1001254  +
lea ecx [esi+754h] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_1001F4D  +
push 19h  +
push 32h  +
lea ecx [ebp+var_4E8] +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_4E8] +
push eax  +
lea ecx [ebp+var_6B0] +
call ds:?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jz loc_1001F4D  +
push offset asc_1001250  +
lea ecx [ebp+var_6B0] +
call ds:?PutSwitches@ARGUMENT_LEXEMIZER@@QAEXPBD@Z  +
push 0  +
lea ecx [ebp+var_6B0] +
call ds:?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z  +
push 0FFFFFFFFh  +
mov edi offset asc_100124C +
push edi  +
lea ecx [ebp+var_64C] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
push 0FFFFFFFFh  +
push edi  +
lea ecx [ebp+var_61C] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
push offset asc_1001248  +
lea ecx [ebp+var_6B0] +
call ds:?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z  +
push 0  +
lea ecx [ebp+var_6B0] +
call ds:?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z  +
test al al +
jnz loc_10015A6  +
mov eax [ebx] +
push 3  +
push 0  +
push 1B5Eh  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
push offset asc_1001244  +
push ebx  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
pop ecx  +
pop ecx  +
jmp loc_1001F4D  +
push 19h  +
push 32h  +
lea ecx [ebp+var_4A0] +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1001F4D  +
push offset asc_1001240  +
lea ecx [ebp+var_5B4] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_1001F4D  +
mov edi ds:?Initialize@FLAG_ARGUMENT@@QAEEPAD@Z +
lea ecx [esi+0B8h] +
push offset aS_1  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+88h] +
push offset aS_0  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+118h] +
push offset asc_1001234  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+0E8h] +
push offset asc_1001230  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+178h] +
push offset aR_0  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+148h] +
push offset aR  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+1D8h] +
push offset aA_0  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+1A8h] +
push offset aA  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+238h] +
push offset aI_0  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+208h] +
push offset aI  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+268h] +
push offset aS  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+298h] +
push offset aD  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+2F8h] +
push offset asc_100120C  +
call edi  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+2C8h] +
push offset a?  +
call edi  +
test al al +
jz loc_1001F4D  +
mov edi ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z +
push offset asc_1001204  +
lea ecx [ebp+var_55C] +
call edi  +
test al al +
jz loc_1001F4D  +
push offset asc_1001200  +
lea ecx [ebp+var_530] +
call edi  +
test al al +
jz loc_1001F4D  +
push offset asc_10011FC  +
lea ecx [ebp+var_588] +
call edi  +
test al al +
jz loc_1001F4D  +
push 0  +
lea ecx [esi+328h] +
push offset asc_1001240  +
call ds:?Initialize@PATH_ARGUMENT@@QAEEPADE@Z  +
test al al +
jz loc_1001F4D  +
mov edi ds:?Put@ARRAY@@UAEEPAVOBJECT@@@Z +
lea eax [ebp+var_5B4] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+0B8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+88h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+118h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+0E8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+178h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+148h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+1D8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+1A8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+238h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+208h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+268h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+298h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+2F8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+2C8h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_55C] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_530] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_588] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [esi+328h] +
push eax  +
lea ecx [ebp+var_4A0] +
call edi  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_4A0] +
push eax  +
lea ecx [ebp+var_6B0] +
call ds:?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jz loc_1001583  +
mov edi ds:?IsValueSet@ARGUMENT@@QAEEXZ +
lea ecx [ebp+var_55C] +
call edi  +
test al al +
jnz loc_1001EAB  +
lea ecx [ebp+var_530] +
call edi  +
test al al +
jnz loc_1001EAB  +
lea ecx [ebp+var_588] +
call edi  +
test al al +
jnz loc_1001EAB  +
cmp [esi+2C4h] al +
jz loc_1001999  +
cmp [esi+294h] al +
jnz loc_1001999  +
mov eax [ebx] +
push 3  +
push 0  +
push 1B67h  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
push offset dword_10011DC  +
jmp loc_1001598  +
cmp byte ptr [esi+0E4h] 0 +
jz loc_10019AF  +
cmp byte ptr [esi+0B4h] 0 +
jnz loc_1001583  +
cmp byte ptr [esi+144h] 0 +
jz loc_10019C5  +
cmp byte ptr [esi+114h] 0 +
jnz loc_1001583  +
mov dl [esi+1A4h] +
test dl dl +
jz loc_10019DC  +
cmp byte ptr [esi+174h] 0 +
jnz loc_1001583  +
mov cl [esi+204h] +
test cl cl +
jz loc_10019F3  +
cmp byte ptr [esi+1D4h] 0 +
jnz loc_1001583  +
mov al [esi+264h] +
test al al +
jz loc_1001A0A  +
cmp byte ptr [esi+234h] 0 +
jnz loc_1001583  +
cmp byte ptr [esi+0E4h] 0 +
jnz loc_1001A5E  +
cmp byte ptr [esi+0B4h] 0 +
jnz loc_1001A5E  +
cmp byte ptr [esi+144h] 0 +
jnz loc_1001A5E  +
cmp byte ptr [esi+114h] 0 +
jnz loc_1001A5E  +
test dl dl +
jnz loc_1001A5E  +
cmp [esi+174h] dl +
jnz loc_1001A5E  +
test cl cl +
jnz loc_1001A5E  +
cmp [esi+1D4h] cl +
jnz loc_1001A5E  +
test al al +
jnz loc_1001A5E  +
cmp [esi+234h] al +
jnz loc_1001A5E  +
mov byte ptr [esi+49Ch] 1 +
jmp loc_1001B10  +
or dword ptr [esi+750h] 0FFFFFFFFh +
cmp byte ptr [esi+0E4h] 0 +
mov byte ptr [esi+49Ch] 0 +
jz loc_1001A7F  +
mov dword ptr [esi+750h] 0FFFFFFFBh +
cmp byte ptr [esi+144h] 0 +
jz loc_1001A8F  +
and dword ptr [esi+750h] 0FFFFFFFDh +
test dl dl +
jz loc_1001A9A  +
and dword ptr [esi+750h] 0FFFFFFFEh +
test cl cl +
jz loc_1001AA5  +
and dword ptr [esi+750h] 0FFFFFFDFh +
test al al +
jz loc_1001AB3  +
and dword ptr [esi+750h] 0FFFFDFFFh +
and dword ptr [esi+74Ch] 0 +
cmp byte ptr [esi+0B4h] 0 +
jz loc_1001ACD  +
mov dword ptr [esi+74Ch] 4 +
cmp byte ptr [esi+114h] 0 +
jz loc_1001ADD  +
or dword ptr [esi+74Ch] 2 +
cmp byte ptr [esi+174h] 0 +
jz loc_1001AED  +
or dword ptr [esi+74Ch] 1 +
cmp byte ptr [esi+1D4h] 0 +
jz loc_1001AFD  +
or dword ptr [esi+74Ch] 20h +
cmp byte ptr [esi+234h] 0 +
jz loc_1001B10  +
or dword ptr [esi+74Ch] 2000h +
lea ecx [esi+328h] +
call edi  +
lea ecx [esi+508h] +
push 1  +
test al al +
jnz loc_1001B6E  +
push offset a_  +
xor ebx ebx +
call ds:?Initialize@PATH@@QAEEPBGE@Z  +
test al al +
jz loc_1001F4D  +
lea ecx [esi+508h] +
call sub_10013BE  +
mov edi eax +
test edi edi +
jz loc_1001F4D  +
push 0  +
push edi  +
lea ecx [ebp+var_244] +
call ds:?Initialize@PATH@@QAEEPBVWSTRING@@E@Z  +
test al al +
mov eax [edi] +
push 1  +
mov ecx edi +
jnz loc_1001B83  +
call dword ptr [eax]  +
jmp loc_1001F4D  +
mov ebx [esi+350h] +
add ebx 210h +
push ebx  +
call ds:?Initialize@PATH@@QAEEPBVWSTRING@@E@Z  +
jmp loc_1001B31  +
call dword ptr [eax]  +
lea ecx [ebp+var_244] +
call ds:?IsDrive@PATH@@QBEEXZ  +
test al al +
jz loc_1001C1C  +
push 0FFFFFFFFh  +
push offset dword_10011F0  +
lea ecx [ebp+var_500] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F4D  +
push 0FFFFFFFFh  +
xor edi edi +
push edi  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_4D0] +
call ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z  +
test al al +
jz loc_1001F4D  +
lea eax [ebp+var_500] +
push eax  +
lea ecx [ebp+var_4D0] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
push edi  +
lea eax [ebp+var_4D0] +
push eax  +
lea ecx [ebp+var_484] +
call ds:?Initialize@PATH@@QAEEPBVWSTRING@@E@Z  +
test al al +
jz loc_1001F4D  +
push edi  +
lea eax [ebp+var_484] +
push eax  +
lea ecx [ebp+var_244] +
call ds:?Initialize@PATH@@QAEEPBV1@E@Z  +
test al al +
jz loc_1001F4D  +
push 0  +
lea eax [ebp+var_244] +
push eax  +
call ds:?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z  +
mov [esi+358h] eax +
test eax eax +
jnz loc_1001C5A  +
mov esi [ebp+var_504] +
mov eax [esi] +
push 3  +
push 0  +
push 1B5Dh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_34] +
push eax  +
push offset dword_10011EC  +
push esi  +
jmp loc_1001F44  +
lea edi [esi+35Ch] +
mov ecx edi +
call ds:?Initialize@FSN_FILTER@@QAEEXZ  +
test al al +
jnz loc_1001C88  +
mov ecx [esi+358h] +
test ecx ecx +
jz loc_1001C7C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+358h] 0 +
jmp loc_1001F4D  +
push offset dword_10011E8  +
mov ecx edi +
call ds:?SetFileName@FSN_FILTER@@QAEEPBD@Z  +
test al al +
jz loc_1001C6C  +
push 0  +
push 0  +
push 10h  +
mov ecx edi +
call ds:?SetAttributes@FSN_FILTER@@QAEEKKK@Z  +
test al al +
jz loc_1001C6C  +
lea ecx [esi+508h] +
call sub_1001391  +
mov edi eax +
test edi edi +
jnz loc_1001D08  +
lea ecx [esi+328h] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_1001CDA  +
mov edi [esi+350h] +
add edi 210h +
jmp loc_1001CDD  +
lea edi [ebp+var_34] +
mov ebx [ebp+var_504] +
mov eax [ebx] +
push 3  +
push 0  +
push 1B5Ch  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
push edi  +
push offset dword_10011EC  +
push ebx  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
jmp loc_1001C6C  +
cmp byte ptr [esi+294h] 0 +
jnz loc_1001D5E  +
test ebx ebx +
jz loc_1001D5E  +
push 2Ah  +
push dword ptr [ebx+8]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001D2D  +
sub eax [ebx+8] +
sar eax 1 +
jmp loc_1001D30  +
or eax 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
jnz loc_1001D5E  +
push 3Fh  +
push dword ptr [ebx+8]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001D4D  +
sub eax [ebx+8] +
sar eax 1 +
jmp loc_1001D50  +
or eax 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
jnz loc_1001D5E  +
mov [ebp+var_485] 1 +
jmp loc_1001D6A  +
mov al [esi+2C4h] +
mov [ebp+var_485] al +
lea ebx [esi+3FCh] +
mov ecx ebx +
call ds:?Initialize@FSN_FILTER@@QAEEXZ  +
test al al +
jnz loc_1001D9E  +
mov ecx [esi+358h] +
test ecx ecx +
jz loc_1001D8C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+358h] 0 +
mov eax [edi] +
push 1  +
mov ecx edi +
jmp loc_1001B67  +
push edi  +
mov ecx ebx +
call ds:?SetFileName@FSN_FILTER@@QAEEPBVWSTRING@@@Z  +
test al al +
jz loc_1001D7C  +
xor ebx ebx +
lea ecx [esi+3FCh] +
cmp [ebp+var_485] bl +
jnz loc_1001DE1  +
push 10h  +
push ebx  +
push ebx  +
call ds:?SetAttributes@FSN_FILTER@@QAEEKKK@Z  +
test al al +
jnz loc_1001DE4  +
mov ecx [esi+358h] +
cmp ecx ebx +
jz loc_1001DD9  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+358h] ebx +
jmp loc_1001D93  +
push ebx  +
jmp loc_1001DBD  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
cmp byte ptr [esi+2F4h] 0 +
jz loc_1001E15  +
mov esi [ebp+var_504] +
mov eax [esi] +
push 3  +
push ebx  +
push 1B62h  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push offset asc_1001244  +
push esi  +
jmp loc_1001599  +
lea ecx [ebp+var_4E8] +
mov byte ptr [esi+748h] 0 +
call ds:?DeleteAllMembers@ARRAY@@UAEEXZ  +
mov edi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_4B8] +
call edi  +
mov esi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_588] +
call esi  +
lea ecx [ebp+var_530] +
call esi  +
lea ecx [ebp+var_55C] +
call esi  +
lea ecx [ebp+var_500] +
call edi  +
mov ebx ds:??1PATH@@UAE@XZ +
lea ecx [ebp+var_484] +
call ebx  +
lea ecx [ebp+var_4D0] +
call edi  +
lea ecx [ebp+var_244] +
call ebx  +
lea ecx [ebp+var_5B4] +
call esi  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_4A0] +
call esi  +
lea ecx [ebp+var_4E8] +
call esi  +
lea ecx [ebp+var_6B0] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
mov al 1 +
jmp loc_1001FCB  +
lea ecx [ebp+var_55C] +
call edi  +
test al al +
jz loc_1001ED6  +
push 0FFFFFFFFh  +
push offset asc_1001250  +
lea ecx [ebp+var_4B8] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F4D  +
mov eax [ebp+var_534] +
jmp loc_1001F16  +
lea ecx [ebp+var_530] +
call edi  +
push 0FFFFFFFFh  +
lea ecx [ebp+var_4B8] +
test al al +
jz loc_1001F01  +
push offset dword_10011E4  +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F4D  +
mov eax [ebp+var_508] +
jmp loc_1001F16  +
push offset dword_10011E0  +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F4D  +
mov eax [ebp+var_560] +
push eax  +
lea ecx [ebp+var_4B8] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1001F4D  +
mov eax [ebx] +
push 3  +
push 0  +
push 1B64h  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_4B8] +
push eax  +
push offset dword_10011EC  +
push ebx  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
mov edi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_4B8] +
call edi  +
mov esi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_588] +
call esi  +
lea ecx [ebp+var_530] +
call esi  +
lea ecx [ebp+var_55C] +
call esi  +
lea ecx [ebp+var_500] +
call edi  +
mov ebx ds:??1PATH@@UAE@XZ +
lea ecx [ebp+var_484] +
call ebx  +
lea ecx [ebp+var_4D0] +
call edi  +
lea ecx [ebp+var_244] +
call ebx  +
lea ecx [ebp+var_5B4] +
call esi  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_4A0] +
call esi  +
lea ecx [ebp+var_4E8] +
call esi  +
lea ecx [ebp+var_6B0] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
xor al al +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002998  +
leave   +
retn   +
***
mov edi edi +
push esi  +
lea esi [ecx+358h] +
mov ecx [esi] +
test ecx ecx +
jz loc_1001FF7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp byte ptr [esi+748h] 0 +
jnz loc_1002058  +
push edi  +
lea ecx [esi+328h] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_100202B  +
mov edi [esi+350h] +
add edi 210h +
jmp loc_1002031  +
lea edi [esi+718h] +
push 3  +
add esi 4A0h +
mov eax [esi] +
push 0  +
push 1B5Ch  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push edi  +
push offset dword_10011EC  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
lea ecx [ebp+var_3C] +
call ds:??0DSTRING@@QAE@XZ  +
mov eax [esi+248h] +
mov ecx eax +
shr ecx 0Dh +
mov dl 1 +
and cl dl +
movzx ebx cl +
neg ebx  +
sbb ebx ebx +
and ebx 29h +
push 20h  +
pop ecx  +
add ebx ecx +
push ebx  +
mov bl al +
and bl dl +
movzx ebx bl +
neg ebx  +
sbb ebx ebx +
and ebx 32h +
add ebx ecx +
push ebx  +
mov ebx eax +
shr ebx 1 +
and bl dl +
movzx ebx bl +
neg ebx  +
sbb ebx ebx +
and ebx 28h +
add ebx ecx +
push ebx  +
mov ebx eax +
shr ebx 2 +
and bl dl +
movzx ebx bl +
neg ebx  +
sbb ebx ebx +
shr eax 5 +
and al dl +
movzx eax al +
and ebx 33h +
add ebx ecx +
neg eax  +
sbb eax eax +
and eax 21h +
push ebx  +
add eax ecx +
push eax  +
push offset aLcLcLcLcLc  +
lea eax [ebp+var_24] +
push 0Fh  +
push eax  +
call swprintf_s  +
add esp 20h +
push 0FFFFFFFFh  +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ebp+var_3C] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_100214C  +
add esi 218h +
push esi  +
mov esi ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_3C] +
call esi  +
test al al +
jz loc_100214C  +
lea eax [edi+754h] +
push eax  +
lea ecx [ebp+var_3C] +
call esi  +
test al al +
jz loc_100214C  +
mov ecx [edi+76Ch] +
mov eax [ecx] +
push 0  +
push 0FFFFFFFFh  +
push 0  +
lea edx [ebp+var_3C] +
push edx  +
call dword ptr [eax+2Ch]  +
lea ecx [ebp+var_3C] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002998  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov al [esi+0B4h] +
mov ecx [ebp+arg_0] +
xor ebx ebx +
push edi  +
lea edi [ecx+218h] +
cmp al bl +
jnz loc_1002192  +
cmp [esi+0E4h] bl +
jz loc_10021A2  +
cmp [esi+114h] bl +
jnz loc_1002210  +
cmp [esi+144h] bl +
jnz loc_1002210  +
cmp [esi+114h] bl +
jnz loc_10021ED  +
cmp [esi+144h] bl +
jnz loc_10021ED  +
mov edx [ecx+248h] +
shr edx 1 +
test dl 1 +
jz loc_10021ED  +
push 3  +
push ebx  +
push 1B60h  +
add esi 4A0h +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push edi  +
push offset dword_10011EC  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
cmp al bl +
jnz loc_1002210  +
cmp [esi+0E4h] bl +
jnz loc_1002210  +
mov eax [ecx+248h] +
shr eax 2 +
test al 1 +
jz loc_1002210  +
push 3  +
push ebx  +
push 1B5Fh  +
jmp loc_10021C7  +
mov eax [ecx+248h] +
lea edx [ebp+arg_0] +
push edx  +
mov edx [esi+750h] +
and edx eax +
or edx [esi+74Ch] +
push edx  +
call ds:?SetAttributes@FSNODE@@QAEEKPAK@Z  +
test al al +
jnz loc_10021E4  +
add esi 4A0h +
cmp [ebp+arg_0] 5 +
mov eax [esi] +
push 3  +
mov ecx esi +
push ebx  +
jnz loc_100224D  +
push 1B65h  +
jmp loc_1002252  +
push 1B66h  +
call dword ptr [eax+0Ch]  +
push edi  +
push offset dword_10011EC  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
xor al al +
jmp loc_10021E6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
cmp byte ptr [esi+294h] 0 +
push edi  +
jz loc_10022E4  +
mov ecx [ebp+arg_0] +
lea eax [esi+35Ch] +
push eax  +
call ds:?QueryFsnodeArray@FSN_DIRECTORY@@QBEPAVARRAY@@PAVFSN_FILTER@@@Z  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_10022A3  +
xor al al +
jmp loc_10023B4  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+14h]  +
mov edi eax +
test edi edi +
jnz loc_10022C6  +
jmp loc_100229C  +
push ebx  +
mov ecx esi +
call sub_1002271  +
test ebx ebx +
jz loc_10022C6  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov ebx eax +
test ebx ebx +
jnz loc_10022B2  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+arg_0] +
lea eax [esi+3FCh] +
push eax  +
call ds:?QueryFsnodeArray@FSN_DIRECTORY@@QBEPAVARRAY@@PAVFSN_FILTER@@@Z  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100229C  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+14h]  +
mov edi eax +
mov [ebp+arg_0] edi +
test edi edi +
jnz loc_1002390  +
jmp loc_100229C  +
cmp byte ptr [esi+324h] 0 +
mov ecx ebx +
jz loc_1002337  +
push 1  +
call ds:?WorkOnReparsePoint@FSNODE@@QAEEE@Z  +
cmp byte ptr [esi+49Ch] 0 +
push ebx  +
mov ecx esi +
jz loc_1002378  +
call sub_100205F  +
jmp loc_100237D  +
mov eax [ebx] +
call dword ptr [eax+1Ch]  +
test al al +
jnz loc_1002324  +
push 3  +
lea edi [esi+4A0h] +
mov eax [edi] +
push 0  +
push 0BE8h  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add ebx 218h +
push ebx  +
push offset dword_10011EC  +
push edi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
mov edi [ebp+arg_0] +
add esp 0Ch +
mov byte ptr [esi+748h] 1 +
jmp loc_1002390  +
call sub_100216B  +
mov byte ptr [esi+748h] 1 +
test ebx ebx +
jz loc_1002390  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov ebx eax +
test ebx ebx +
jnz loc_1002311  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea ecx [esi+754h] +
call ds:??1DSTRING@@UAE@XZ  +
lea ecx [esi+508h] +
call ds:??1PATH@@UAE@XZ  +
lea ecx [esi+4A0h] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
mov edi ds:??1FSN_FILTER@@UAE@XZ +
lea ecx [esi+3FCh] +
call edi  +
lea ecx [esi+35Ch] +
call edi  +
lea ecx [esi+328h] +
call ds:??1PATH_ARGUMENT@@UAE@XZ  +
lea ecx [esi+2F8h] +
call sub_10013E0  +
lea ecx [esi+2C8h] +
call sub_10013E0  +
lea ecx [esi+298h] +
call sub_10013E0  +
lea ecx [esi+268h] +
call sub_10013E0  +
lea ecx [esi+238h] +
call sub_10013E0  +
lea ecx [esi+208h] +
call sub_10013E0  +
lea ecx [esi+1D8h] +
call sub_10013E0  +
lea ecx [esi+1A8h] +
call sub_10013E0  +
lea ecx [esi+178h] +
call sub_10013E0  +
lea ecx [esi+148h] +
call sub_10013E0  +
lea ecx [esi+118h] +
call sub_10013E0  +
lea ecx [esi+0E8h] +
call sub_10013E0  +
lea ecx [esi+0B8h] +
call sub_10013E0  +
lea ecx [esi+88h] +
call sub_10013E0  +
pop edi  +
mov ecx esi +
pop esi  +
jmp ds:??1PROGRAM@@UAE@XZ  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ds:??0PROGRAM@@IAE@XZ  +
mov edi ds:??0FLAG_ARGUMENT@@QAE@XZ +
lea ecx [esi+88h] +
mov dword ptr [esi] offset off_100128C +
call edi  +
lea ecx [esi+0B8h] +
call edi  +
lea ecx [esi+0E8h] +
call edi  +
lea ecx [esi+118h] +
call edi  +
lea ecx [esi+148h] +
call edi  +
lea ecx [esi+178h] +
call edi  +
lea ecx [esi+1A8h] +
call edi  +
lea ecx [esi+1D8h] +
call edi  +
lea ecx [esi+208h] +
call edi  +
lea ecx [esi+238h] +
call edi  +
lea ecx [esi+268h] +
call edi  +
lea ecx [esi+298h] +
call edi  +
lea ecx [esi+2C8h] +
call edi  +
lea ecx [esi+2F8h] +
call edi  +
lea ecx [esi+328h] +
call ds:??0PATH_ARGUMENT@@QAE@XZ  +
mov edi ds:??0FSN_FILTER@@QAE@XZ +
lea ecx [esi+35Ch] +
call edi  +
lea ecx [esi+3FCh] +
call edi  +
lea ecx [esi+4A0h] +
call ds:??0STREAM_MESSAGE@@QAE@XZ  +
lea ecx [esi+508h] +
call ds:??0PATH@@QAE@XZ  +
lea ecx [esi+754h] +
call ds:??0DSTRING@@QAE@XZ  +
mov eax dword_1004018 +
mov [esi+4] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10023C0  +
test byte ptr [ebp+8] 1 +
jz loc_10025AF  +
push esi  +
call sub_1001368  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 774h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push 0  +
push 0  +
push 1  +
push 0  +
call ds:HeapSetInformation  +
push 4  +
call sub_1001345  +
pop ecx  +
test eax eax +
jz loc_10025F4  +
mov ecx eax +
call ds:??0CLASS_DESCRIPTOR@@QAE@XZ  +
jmp loc_10025F6  +
xor eax eax +
mov dword_1004018 eax +
test eax eax +
jz loc_1002607  +
mov ecx eax +
call ds:?Initialize@CLASS_DESCRIPTOR@@QAEEXZ  +
lea ecx [ebp+var_774] +
call sub_10024B5  +
lea ecx [ebp+var_774] +
call sub_10013FC  +
test al al +
jz loc_100263D  +
push [ebp+var_41C]  +
lea ecx [ebp+var_774] +
call sub_1002271  +
lea ecx [ebp+var_774] +
call sub_1001FFE  +
lea ecx [ebp+var_774] +
call sub_1001FDF  +
lea ecx [ebp+var_774] +
call sub_10023C0  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
call sub_1002998  +
leave   +
retn   +
***
jmp ds:?Compare@OBJECT@@UBEJPBV1@@Z  +
***
jmp ds:?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ  +
***
jmp ds:?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z  +
***
jmp ds:?Fatal@PROGRAM@@UBAXKKPADZZ  +
***
jmp ds:?Fatal@PROGRAM@@UBEXXZ  +
***
jmp ds:?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
jmp ds:?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
jmp ds:?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
jmp ds:?Usage@PROGRAM@@UBEXXZ  +
***
jmp ds:?ValidateVersion@PROGRAM@@UBEXKK@Z  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002711  +
test eax eax +
jnz loc_1002716  +
mov ecx [esi] +
test ecx ecx +
jz loc_100270E  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1002702  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1004040 +
push offset dword_1004030  +
push dword_100403C  +
mov dword_1004030 eax +
push offset dword_1004020  +
push offset dword_1004024  +
push offset dword_100401C  +
call ds:__getmainargs  +
add esp 14h +
mov dword_100402C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_100279E  +
cmp eax esi +
jnz loc_1002791  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10027A1  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1002778  +
xor esi esi +
inc esi  +
mov eax dword_1004374 +
cmp eax esi +
jnz loc_10027B4  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10027EF  +
mov eax dword_1004374 +
test eax eax +
jnz loc_10027E9  +
mov dword_1004374 esi +
push offset dword_10011B0  +
push offset dword_10011A4  +
call sub_10026F5  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10027EF  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10028B9  +
mov dword_1004038 esi +
mov eax dword_1004374 +
cmp eax esi +
jnz loc_1002813  +
push offset dword_10011A0  +
push offset dword_1001198  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1004374 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1002820  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100437C ebx +
jz loc_1002841  +
push offset dword_100437C  +
call sub_1002AA9  +
pop ecx  +
test eax eax +
jz loc_1002841  +
push ebx  +
push 2  +
push ebx  +
call dword_100437C  +
push dword_1004020  +
push dword_1004024  +
push dword_100401C  +
call sub_10025BB  +
add esp 0Ch +
mov dword_1004034 eax +
cmp dword_1004028 ebx +
jnz loc_100289F  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1004034 eax +
xor ebx ebx +
cmp dword_1004028 ebx +
jnz loc_100289F  +
push eax  +
call ds:_exit  +
cmp dword_1004038 ebx +
jnz loc_10028AD  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1004034 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10028D6  +
xor eax eax +
jmp loc_1002923  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10028D2  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1002910  +
cmp ecx 20Bh +
jnz loc_10028D2  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10028D2  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_100291E  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10028D2  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1004028 eax +
call sub_1002C42  +
push eax  +
call ds:__set_app_type  +
or dword_100436C 0FFFFFFFFh +
or dword_1004370 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1004048 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1004044 +
mov [eax] ecx +
call sub_1002BD4  +
cmp dword_1004010 0 +
jnz loc_100297C  +
push offset sub_1002BD4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1002BBC  +
xor eax eax +
retn   +
***
call sub_1002C81  +
jmp sub_1002756  +
***
cmp ecx dword_1004000 +
jnz loc_10029A3  +
retn 0  +
jmp loc_1002D17  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10029F6  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10029F6  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10029F0  +
cmp eax 19930521h +
jz loc_10029F0  +
cmp eax 19930522h +
jz loc_10029F0  +
cmp eax 1994000h +
jnz loc_10029F6  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10029B8+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002A36  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002A32  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1002A9D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002A95  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1002A9F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1002A85  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002A20  +
pop ecx  +
test eax eax +
jz loc_1002B06  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002A60  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002B06  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1002B0F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1002998  +
push offset dword_1004000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002C35  +
cmp ecx 0FFFFFFFFh +
jz loc_1002C35  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002C2E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002C2E  +
cmp edx 10000000h +
jnb loc_1002C2E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1002C2E  +
jmp loc_1002C29  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002C77  +
push eax  +
call sub_1002BDC  +
test eax eax +
jz loc_1002C77  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1002C6C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002C77  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1004000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002CB3  +
test eax ebx +
jz loc_1002CB3  +
not eax  +
mov dword_1004004 eax +
jmp loc_1002D0E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1002CFA  +
test dword_1004000 ebx +
jnz loc_1002CFF  +
mov esi 0BB40E64Fh +
mov dword_1004000 esi +
not esi  +
mov dword_1004004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1004150 eax +
mov dword_100414C ecx +
mov dword_1004148 edx +
mov dword_1004144 ebx +
mov dword_1004140 esi +
mov dword_100413C edi +
mov word_1004168 ss +
mov word_100415C cs +
mov word_1004138 ds +
mov word_1004134 es +
mov word_1004130 fs +
mov word_100412C gs +
pushf   +
pop dword_1004160  +
mov eax [ebp+0] +
mov dword_1004154 eax +
mov eax [ebp+4] +
mov dword_1004158 eax +
lea eax [ebp+8] +
mov dword_1004164 eax +
mov eax [ebp-320h] +
mov dword_10040A0 10001h +
mov eax dword_1004158 +
mov dword_100405C eax +
mov dword_1004050 0C0000409h +
mov dword_1004054 1 +
mov eax dword_1004000 +
mov [ebp-328h] eax +
mov eax dword_1004004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
