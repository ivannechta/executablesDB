or eax 4C000004h +
retf 40h  +
***
adc eax 0AC000004h +
retf 40h  +
***
push ss  +
add al 0 +
add [eax+180040CAh] bh +
add al 0 +
add al dl +
retf 40h  +
***
sbb [eax+eax] eax +
add ah bl +
retf 40h  +
***
sbb al [eax+eax] +
add al ch +
retf 40h  +
***
sbb eax [eax+eax] +
add ah dh +
retf 40h  +
***
sbb eax 0C000004h +
retf   +
***
inc eax  +
add [esi] bl +
add al 0 +
add [eax] bl +
retf   +
***
inc eax  +
add [edi] bl +
add al 0 +
add ah cl +
lds eax [eax+0] +
and [eax+eax] al +
add [ebx+ecx*8] ah +
inc eax  +
add [ecx] ah +
add al 0 +
add [eax] dh +
retf   +
***
and eax 60000004h +
retf   +
***
sub eax 0C0000004h +
retf   +
***
inc eax  +
add [edi] ch +
add al 0 +
add ah bl +
retf   +
***
inc eax  +
add [edx] dh +
add al 0 +
add al ch +
retf   +
***
retf 0  +
***
retn   +
***
retf   +
***
retn 0  +
***
add al al +
retf   +
***
add al al +
retf   +
***
stos   +
jmp fword ptr [edx-55005501h]  +
***
or cl [eax+eax] +
add [ecx+edx*8] dl +
inc eax  +
add [edx] cl +
add al 0 +
add [eax] bl +
retf 40h  +
***
and eax 60000004h +
retf   +
***
sub eax 0C0000004h +
retf   +
***
or eax 4C000004h +
retf 40h  +
***
sbb al [eax+eax] +
add al ch +
retf 40h  +
***
das   +
add al 0 +
add ah bl +
retf   +
***
adc eax 0AC000004h +
retf 40h  +
***
pop ss  +
add al 0 +
add ah al +
retf 40h  +
***
sbb [eax+eax] al +
add al dl +
retf 40h  +
***
sbb [eax+eax] eax +
add ah bl +
retf 40h  +
***
sbb eax [eax+eax] +
add ah dh +
retf 40h  +
***
sbb eax 0C000004h +
retf   +
***
push ds  +
add al 0 +
add [eax] bl +
retf   +
***
xor al [eax+eax] +
add al ch +
retf   +
***
das   +
jmp large fword ptr ds:0FFh  +
***
inc dword ptr es:[eax]  +
add [edi] ah +
jmp dword ptr [edi]  +
***
or al [eax+eax] +
add [eax] bl +
retf 40h  +
***
or eax 4C000004h +
retf 40h  +
***
adc eax 0AC000004h +
retf 40h  +
***
push ss  +
add al 0 +
add [eax+170040CAh] bh +
add al 0 +
add ah al +
retf 40h  +
***
sbb [eax+eax] al +
add al dl +
retf 40h  +
***
sbb [eax+eax] eax +
add ah bl +
retf 40h  +
***
sbb al [eax+eax] +
add al ch +
retf 40h  +
***
sbb eax [eax+eax] +
add ah dh +
retf 40h  +
***
sbb eax 0C000004h +
retf   +
***
inc eax  +
add [esi] bl +
add al 0 +
add [eax] bl +
retf   +
***
inc eax  +
add [edi] bl +
add al 0 +
add ah cl +
lds eax [eax+0] +
and [eax+eax] al +
add [ebx+ecx*8] ah +
inc eax  +
add [ecx] ah +
add al 0 +
add [eax] dh +
retf   +
***
and eax 60000004h +
retf   +
***
sub eax 0C0000004h +
retf   +
***
inc eax  +
add [esi] ch +
add al 0 +
add ah cl +
retf   +
***
inc eax  +
add [edi] ch +
add al 0 +
add ah bl +
retf   +
***
inc eax  +
add [edx] dh +
add al 0 +
add al ch +
retf   +
***
das   +
jmp large fword ptr ds:0FFh  +
***
inc dword ptr es:[eax]  +
add [edi] ah +
jmp dword ptr [edi]  +
***
lea eax [ebp+arg_8] +
push esi  +
mov eax 2004h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
push edi  +
mov ecx dword_430784 +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:HeapSetInformation  +
mov eax [ebp+arg_0] +
push ecx  +
mov hModule eax +
call sub_411DD6  +
test eax eax +
jnz loc_40DF52  +
push edi  +
call ds:GetModuleHandleW  +
push offset ModuleName  +
mov hInstance eax +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_40DF90  +
push esi  +
push offset aIswow64process  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_40DF8F  +
push offset dword_43077C  +
call ds:GetCurrentProcess  +
push eax  +
mov ecx esi +
call ds:off_434248  +
call esi  +
pop esi  +
push edi  +
push offset DialogFunc  +
push edi  +
push 5DCh  +
push hInstance  +
call ds:DialogBoxParamW  +
xor eax eax +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
and esp 0FFFFFFF8h +
mov eax 22E4h +
mov eax 22E4h +
mov eax 2324h +
and esp 0FFFFFFF8h +
sub esp 670h +
sub esp 464h +
sub esp 40h +
push ecx  +
sub esp 40h +
sub esp 124h +
sub esp 830h +
sub esp 34h +
call sub_42B0B8  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_42BB1A  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
or [ebp+var_4] 0FFFFFFFFh +
mov eax [ecx] +
cmp dword ptr [eax] 0 +
jz loc_40F5AB  +
mov dword ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42B0B8  +
sub esp 804h +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
mov edi 400h +
push edi  +
mov [ebp+String] ax +
mov esi ecx +
lea eax [ebp+String] +
push eax  +
push 7D8h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F807  +
lea eax [ebp+String] +
push eax  +
push 0  +
push 0Ch  +
push esi  +
call ds:SendMessageW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7D0h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F837  +
lea eax [ebp+String] +
push eax  +
push 5DDh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7D1h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F867  +
lea eax [ebp+String] +
push eax  +
push 5DFh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7D2h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F897  +
lea eax [ebp+String] +
push eax  +
push 5E0h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7D3h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F8C7  +
lea eax [ebp+String] +
push eax  +
push 5DEh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7D4h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F8F7  +
lea eax [ebp+String] +
push eax  +
push 5E9h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7DDh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F927  +
lea eax [ebp+String] +
push eax  +
push 5E3h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7DEh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F957  +
lea eax [ebp+String] +
push eax  +
push 5E4h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7DFh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F987  +
lea eax [ebp+String] +
push eax  +
push 5E5h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7DCh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F9B7  +
lea eax [ebp+String] +
push eax  +
push 5E7h  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7DBh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40F9E7  +
lea eax [ebp+String] +
push eax  +
push 5EAh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7E0h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40FA17  +
lea eax [ebp+String] +
push eax  +
push 5EBh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7E1h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40FA47  +
lea eax [ebp+String] +
push eax  +
push 5ECh  +
push esi  +
call ds:SetDlgItemTextW  +
push edi  +
lea eax [ebp+String] +
push eax  +
push 7E2h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_40FA77  +
lea eax [ebp+String] +
push eax  +
push 5EDh  +
push esi  +
call ds:SetDlgItemTextW  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push edi  +
xor edi edi +
mov eax 1004h +
sub esp 804h +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0B8  +
and esp 0FFFFFFF8h +
call sub_40F439  +
call sub_40F609  +
push 0  +
push offset sub_40FA90  +
push hWndParent  +
push 640h  +
push hInstance  +
call ds:DialogBoxParamW  +
test eax eax +
jz loc_410717  +
call sub_41049A  +
cmp bEnable 0 +
jz loc_410710  +
cmp word_430354 0 +
jz loc_410710  +
mov dword_43056C 1 +
jmp loc_410717  +
and dword_43056C 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
sub esp 804h +
test ecx ecx +
jnz loc_4108E6  +
push 57h  +
call ds:SetLastError  +
jmp loc_4108EF  +
push ecx  +
call ds:ShellExecuteExW  +
mov esi eax +
mov eax esi +
pop esi  +
retn   +
***
call sub_42B0B8  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
mov edi [ebp+8] +
mov [edi] esi +
cmp [esi+4] ebx +
jz loc_41092A  +
push dword ptr [esi]  +
call ds:LocalFree  +
mov [esi+4] ebx +
mov [esi] ebx +
mov [ebp-4] ebx +
mov dword ptr [ebp-10h] 1 +
mov eax edi +
call sub_42B081  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BD98  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_41097F  +
push dword ptr [esi]  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42B0B8  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
mov edi [ebp+8] +
mov [edi] esi +
cmp [esi+4] ebx +
jz loc_4109FE  +
push dword ptr [esi]  +
call ds:RegCloseKey  +
mov [esi+4] ebx +
mov [esi] ebx +
mov [ebp-4] ebx +
mov dword ptr [ebp-10h] 1 +
mov eax edi +
call sub_42B081  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BDDE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_410A53  +
push dword ptr [esi]  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BE01  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_410AA2  +
push dword ptr [esi]  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BDB3  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jz loc_410AE9  +
push dword ptr [esi]  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
test eax eax +
jnz loc_410B48  +
mov eax 80004005h +
retn   +
jle locret_410B52  +
movzx eax ax +
or eax 80070000h +
retn   +
***
push esi  +
call sub_42B0B8  +
call sub_42B0B8  +
push esi  +
sub esp 0Ch +
call sub_42B0B8  +
push 0FFFFFFFFh  +
push offset loc_42BEA8  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
or [ebp+var_4] 0FFFFFFFFh +
test byte ptr [ecx+8] 8 +
jz loc_410DAF  +
mov edx [ecx+0Ch] +
test edx edx +
jz loc_410DAF  +
call sub_4126BA  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov edx ecx +
mov eax [esi+8] +
mov eax [esi+8] +
push ecx  +
call sub_42B0EC  +
push 6  +
pop ecx  +
mov esi offset aCombase_dll +
lea edi [ebp-2Ch] +
movs   +
push 20Ah  +
lea eax [ebp-238h] +
xor ebx ebx +
inc ebx  +
movs   +
xor edi edi +
push edi  +
push eax  +
call sub_41A120  +
add esp 0Ch +
lea eax [ebp-238h] +
push 104h  +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_410FE3  +
mov edx 105h +
mov ecx edx +
sub ecx eax +
cmp ecx 0Dh +
jb loc_410FE3  +
lea eax [ebp-2Ch] +
push eax  +
push edx  +
lea eax [ebp-238h] +
push eax  +
call sub_41EED2  +
add esp 0Ch +
test eax eax +
jnz loc_410FE3  +
push edi  +
push edi  +
lea eax [ebp-238h] +
push eax  +
call ds:LoadLibraryExW  +
mov esi eax +
mov [ebp-23Ch] edi +
mov [ebp-240h] esi +
test esi esi +
jz loc_410FAF  +
mov edi ebx +
mov [ebp-23Ch] edi +
mov dword ptr [ebp-4] 2 +
test esi esi +
jz loc_410FCD  +
push offset aRoinitialize  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_410FCD  +
push 2  +
pop ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test edi edi +
jz loc_410FE3  +
push esi  +
call ds:FreeLibrary  +
and dword ptr [ebp-23Ch] 0 +
mov dword_430784 ebx +
call sub_42B096  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BF55  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_41102E  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BF78  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_41107D  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BDB3  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jz loc_4110C4  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BFAB  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_411112  +
mov ecx [esi] +
call sub_414565  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BFD6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_411160  +
mov ecx [esi] +
call sub_414565  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BFF9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_4111AE  +
mov ecx [esi] +
call sub_414565  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0B8  +
push ebx  +
call sub_42B0EC  +
push esi  +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0EC  +
call sub_42B0EC  +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_41238B  +
test al al +
jnz loc_411F7B  +
xor eax eax +
jmp loc_412079  +
xor ebx ebx +
lea edx [ebp-14h] +
mov ecx offset off_406458 +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
call sub_412A53  +
mov esi [ebp-14h] +
mov [ebp-20h] esi +
mov [ebp-1Ch] ebx +
test esi esi +
jz loc_411FA1  +
inc ebx  +
mov [ebp-1Ch] ebx +
mov dword ptr [ebp-4] 2 +
test esi esi +
jz loc_41205F  +
push 5  +
push offset aHklm  +
push esi  +
call sub_41FB3F  +
add esp 0Ch +
test eax eax +
jnz loc_41205F  +
lea ecx [esi+0Ah] +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-18h] +
jnz loc_411FCE  +
sub ecx edi +
sar ecx 1 +
xor eax eax +
mov [ebp-0Dh] al +
lea edi [ecx+1] +
lea ecx [esi+0Ah] +
lea eax [ecx+2] +
mov [ebp-14h] eax +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-18h] +
jnz loc_411FEF  +
sub ecx [ebp-14h] +
sar ecx 1 +
cmp word ptr [esi+ecx*2+8] 5Ch +
jz loc_41200D  +
mov byte ptr [ebp-0Dh] 1 +
inc edi  +
xor ecx ecx +
mov eax edi +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
call sub_412741  +
mov ecx eax +
mov dword_430798 ecx +
test ecx ecx +
jnz loc_412033  +
push 8  +
pop edi  +
jmp loc_412064  +
lea eax [esi+0Ah] +
push eax  +
push edi  +
push ecx  +
call sub_41EE6E  +
add esp 0Ch +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_412059  +
mov ecx dword_430798 +
mov edx edi +
push offset dword_406438  +
call sub_40DDE7  +
xor eax eax +
mov edi eax +
jmp loc_412064  +
mov edi 0A0h +
or dword ptr [ebp-4] 0FFFFFFFFh +
test ebx ebx +
jz loc_412077  +
push esi  +
call sub_412D16  +
xor eax eax +
mov [ebp-1Ch] eax +
mov eax edi +
call sub_42B081  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42C303  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_4120BD  +
push dword ptr [esi]  +
call sub_412D16  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
call sub_42B0B8  +
call sub_42B0B8  +
call sub_42B0B8  +
mov esi ecx +
xor ebx ebx +
mov [ebp-10h] ebx +
mov edi [ebp+8] +
mov [edi] esi +
cmp [esi+4] ebx +
jz loc_412545  +
mov edx [esi] +
test edx edx +
jz loc_412542  +
call sub_4126BA  +
mov [esi+4] ebx +
mov [esi] ebx +
mov [ebp-4] ebx +
mov dword ptr [ebp-10h] 1 +
mov eax edi +
call sub_42B081  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jz loc_41256F  +
push dword ptr [esi]  +
call sub_412D16  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42C497  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_4125ED  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42C4DD  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
or [ebp+var_4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_41262F  +
mov edx [esi] +
test edx edx +
jz loc_41262B  +
call sub_4126BA  +
and dword ptr [esi+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+arg_4] 0 +
mov eax dword_430C14 +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ecx  +
push ecx  +
mov eax dword_430C18 +
test eax eax +
jnz loc_41285E  +
push esi  +
call sub_4127FA  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_406394  +
mov esi [eax] +
push eax  +
mov ecx [esi] +
call ds:off_434248  +
call dword ptr [esi]  +
mov eax [ebp+var_4] +
mov dword_430C18 eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
push 98h  +
push ecx  +
push esi  +
push esi  +
push ebx  +
push edi  +
mov edi edx +
mov ebx ecx +
cmp [ebp+arg_4] 0 +
jz loc_412918  +
xor eax eax +
jmp loc_412933  +
push esi  +
call sub_41282C  +
push [ebp+arg_0]  +
push edi  +
mov esi [eax] +
push ebx  +
push eax  +
mov ecx [esi+28h] +
call ds:off_434248  +
call dword ptr [esi+28h]  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp sub_416EE0  +
***
sub esp 0A4h +
sub esp 224h +
call sub_42B0B8  +
mov edx [ebp+arg_0] +
mov eax ecx +
push [ebp+arg_8]  +
call sub_42B0B8  +
call sub_42B0EC  +
push ebx  +
push esi  +
push 0  +
push ebx  +
push edi  +
call sub_42B0EC  +
call sub_42B0EC  +
push ecx  +
push ebx  +
call sub_42B0EC  +
push ebx  +
push esi  +
sub esp 1Ch +
call sub_42B0EC  +
call sub_42B0EC  +
mov ecx [ebp+arg_0] +
sub esp 10h +
sub esp 10h +
mov ecx [ebp+arg_0] +
call sub_42B0EC  +
call sub_42B0EC  +
mov eax [ecx+8] +
push esi  +
push esi  +
mov edx [edi+8] +
push esi  +
test byte ptr [ecx+8] 10h +
mov edi ecx +
mov esi off_42F7B0 +
mov ecx esi +
call ds:off_434248  +
call esi  +
test eax eax +
jz loc_413F80  +
mov eax [eax+edi*4] +
jmp loc_413F96  +
call sub_4127FA  +
push edi  +
push eax  +
mov ecx [eax] +
mov esi [ecx+14h] +
mov ecx esi +
call ds:off_434248  +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BE1C  +
mov eax large fs:0 +
push eax  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ecx] offset off_40A560 +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_413FCD  +
call sub_414565  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
test edi edi +
jz loc_414004  +
mov eax [edi] +
push esi  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
test eax eax +
jz loc_414004  +
xor eax eax +
inc eax  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
retn   +
***
xor eax eax +
cmp [ebp+arg_0] 524F4F54h +
setz al  +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov eax [edi] +
mov esi [eax+2Ch] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42BDB3  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_40A560 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_414097  +
call sub_414565  +
test [ebp+arg_0] 1 +
jz loc_4140A7  +
push 8  +
push esi  +
call sub_418D66  +
pop ecx  +
pop ecx  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
cmp [ebp+arg_0] 48522020h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
cmp eax 48522020h +
jnz loc_41412E  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
cmp eax [ebx+8] +
jnz loc_41412E  +
xor eax eax +
inc eax  +
jmp loc_414130  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_42B0B8  +
call sub_42B0B8  +
mov esi ecx +
push 1Ch  +
pop ecx  +
call sub_4126E0  +
mov edx eax +
mov [ebp-10h] edx +
xor eax eax +
mov [ebp-4] eax +
test edx edx +
jz loc_4141C2  +
lea ecx [esi+0Ch] +
push ecx  +
push dword ptr [esi+8]  +
mov ecx edx +
call sub_4144BC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_42B081  +
retn   +
***
retn   +
***
cmp [ebp+arg_0] 44454C20h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
cmp eax 44454C20h +
jnz loc_414250  +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
mov ecx [ebx] +
mov edi eax +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_434248  +
mov ecx ebx +
call esi  +
cmp edi eax +
jnz loc_414250  +
xor eax eax +
inc eax  +
jmp loc_414252  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_413FE0  +
test eax eax +
jnz loc_41428E  +
mov edi [edi+8] +
test edi edi +
jz loc_41428A  +
mov eax [edi] +
push esi  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
test eax eax +
jnz loc_41428E  +
xor eax eax +
pop edi  +
retn   +
xor eax eax +
inc eax  +
pop edi  +
retn   +
***
call sub_42B0B8  +
push 0Ch  +
pop ecx  +
call sub_4126E0  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
test ecx ecx +
jz loc_4142C7  +
call sub_415734  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_42B081  +
retn   +
***
retn   +
***
cmp [ebp+arg_0] 4F4F4D20h +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi [eax+18h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
sub eax 4F4F4D20h +
neg eax  +
pop edi  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
mov ecx esi +
push 0  +
push 1  +
push 0Dh  +
call sub_413EBF  +
mov ecx [esi+8] +
mov eax [esi] +
not ecx  +
and ecx 1 +
push offset aOutOfMemory  +
shr eax cl +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_41FF8B  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42C804  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
or [ebp+var_4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_40A560 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4143DC  +
call sub_414565  +
test [ebp+arg_0] 1 +
jz loc_4143EC  +
push 0Ch  +
push esi  +
call sub_418D66  +
pop ecx  +
pop ecx  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42C827  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_40A560 +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_41443C  +
call sub_414565  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call sub_42B0B8  +
call sub_42B0B8  +
mov eax dword_4307D4 +
test eax eax +
jnz loc_414557  +
mov ecx offset off_40A560 +
mov [ebp-18h] ecx +
and [ebp-14h] eax +
and [ebp-4] eax +
inc eax  +
mov dword ptr [ebp-18h] offset off_40A52C +
mov [ebp-10h] eax +
mov [ebp-4] eax +
mov eax offset unk_430BA4 +
mov edi eax +
mov dword_4307D4 eax +
lea esi [ebp-18h] +
movs   +
movs   +
movs   +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-18h] ecx +
call sub_42B081  +
retn   +
***
test edi edi +
jz loc_414595  +
mov eax [edi] +
push esi  +
mov esi [eax+28h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
test eax eax +
jnz loc_414594  +
mov eax [edi] +
push 5  +
mov esi [eax] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
mov edx [ebp+arg_0] +
mov ecx eax +
call sub_415BA7  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea edx [esi+0Ch] +
mov ecx [edx+8] +
mov eax [edx] +
not ecx  +
and ecx 1 +
shr eax cl +
sub eax 1 +
jnz loc_4145F6  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_4145A0  +
jmp loc_4145FF  +
mov ecx [ebp+arg_0] +
push edx  +
call sub_410CB1  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_42B0B8  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+2Ch] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
and dword ptr [ebp-10h] 0 +
mov [ebp-14h] eax +
test eax eax +
jz loc_414641  +
mov dword ptr [ebp-10h] 1 +
mov dword ptr [ebp-4] 3 +
mov edi [edi+4] +
test edi edi +
jz loc_414666  +
mov eax [edi] +
mov esi [eax+24h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
mov ecx [ebp-14h] +
mov [ecx+4] eax +
and dword ptr [ebp-10h] 0 +
mov esi [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_415C6B  +
mov eax esi +
call sub_42B081  +
retn   +
***
call sub_42B0EC  +
cmp ecx 80131530h +
mov eax 8000FFFFh +
cmp ecx eax +
jg loc_414848  +
jz loc_414842  +
add ecx 7FFFBFFFh +
cmp ecx 11h +
ja loc_415421  +
jmp ds:off_415439[ecx*4]  +
mov eax offset aE_notimpl +
retn   +
mov eax offset aE_nointerface +
retn   +
mov eax offset aE_pointer +
retn   +
mov eax offset aE_abort +
retn   +
mov eax offset aE_fail +
retn   +
mov eax offset aCo_e_init_tls +
retn   +
mov eax offset aCo_e_init_shar +
retn   +
mov eax offset aCo_e_init_memo +
retn   +
mov eax offset aCo_e_init_clas +
retn   +
mov eax offset aCo_e_init_rpc_ +
retn   +
mov eax offset aCo_e_init_tls_ +
retn   +
mov eax offset aCo_e_init_tl_0 +
retn   +
mov eax offset aCo_e_init_unac +
retn   +
mov eax offset aCo_e_init_scm_ +
retn   +
mov eax offset aCo_e_init_sc_0 +
retn   +
mov eax offset aCo_e_init_sc_1 +
retn   +
mov eax offset aCo_e_init_sc_2 +
retn   +
mov eax offset aCo_e_init_only +
retn   +
mov eax offset aE_unexpected +
retn   +
mov eax 80010100h +
cmp ecx eax +
jg loc_4148E3  +
jz loc_4148DD  +
add ecx 7FFEFFFFh +
cmp ecx 11h +
ja loc_415421  +
jmp ds:off_415481[ecx*4]  +
mov eax offset aRpc_e_call_rej +
retn   +
mov eax offset aRpc_e_call_can +
retn   +
mov eax offset aRpc_e_cantpost +
retn   +
mov eax offset aRpc_e_cantcall +
retn   +
mov eax offset aRpc_e_cantca_0 +
retn   +
mov eax offset aRpc_e_connecti +
retn   +
mov eax offset aRpc_e_server_d +
retn   +
mov eax offset aRpc_e_client_d +
retn   +
mov eax offset aRpc_e_invalid_ +
retn   +
mov eax offset aRpc_e_canttran +
retn   +
mov eax offset aRpc_e_client_c +
retn   +
mov eax offset aRpc_e_client_0 +
retn   +
mov eax offset aRpc_e_server_c +
retn   +
mov eax offset aRpc_e_server_0 +
retn   +
mov eax offset aRpc_e_invali_0 +
retn   +
mov eax offset aRpc_e_invali_1 +
retn   +
mov eax offset aRpc_e_cantca_1 +
retn   +
mov eax offset aRpc_e_server_1 +
retn   +
mov eax offset aRpc_e_sys_call +
retn   +
mov eax 8001FFFFh +
cmp ecx eax +
jg loc_414964  +
jz loc_41495E  +
add ecx 7FFEFEFFh +
cmp ecx 0Eh +
ja loc_415421  +
jmp ds:off_4154C9[ecx*4]  +
mov eax offset aRpc_e_out_of_r +
retn   +
mov eax offset aRpc_e_attempte +
retn   +
mov eax offset aRpc_e_not_regi +
retn   +
mov eax offset aRpc_e_fault +
retn   +
mov eax offset aRpc_e_serverfa +
retn   +
mov eax offset aRpc_e_changed_ +
retn   +
mov eax offset aRpc_e_invalidm +
retn   +
mov eax offset aRpc_e_disconne +
retn   +
mov eax offset aRpc_e_retry +
retn   +
mov eax offset aRpc_e_serverca +
retn   +
mov eax offset aRpc_e_server_2 +
retn   +
mov eax offset aRpc_e_invali_2 +
retn   +
mov eax offset aRpc_e_cantca_2 +
retn   +
mov eax offset aRpc_e_wrong_th +
retn   +
mov eax offset aRpc_e_thread_n +
retn   +
mov eax offset aRpc_e_unexpect +
retn   +
mov eax 80028016h +
cmp ecx eax +
jg loc_4149EB  +
jz loc_4149E5  +
add ecx 7FFDFFFFh +
cmp ecx 10h +
ja loc_415421  +
jmp ds:off_415505[ecx*4]  +
mov eax offset aDisp_e_unknown +
retn   +
mov eax offset aDisp_e_membern +
retn   +
mov eax offset aDisp_e_paramno +
retn   +
mov eax offset aDisp_e_typemis +
retn   +
mov eax offset aDisp_e_unkno_0 +
retn   +
mov eax offset aDisp_e_nonamed +
retn   +
mov eax offset aDisp_e_badvart +
retn   +
mov eax offset aDisp_e_excepti +
retn   +
mov eax offset aDisp_e_overflo +
retn   +
mov eax offset aDisp_e_badinde +
retn   +
mov eax offset aDisp_e_unkno_1 +
retn   +
mov eax offset aDisp_e_arrayis +
retn   +
mov eax offset aDisp_e_badpara +
retn   +
mov eax offset aDisp_e_param_0 +
retn   +
mov eax offset aDisp_e_badcall +
retn   +
mov eax offset aDisp_e_notacol +
retn   +
mov eax offset aType_e_buffert +
retn   +
mov eax 800401D4h +
cmp ecx eax +
jg loc_414F2A  +
jz loc_414F24  +
mov eax 80030107h +
cmp ecx eax +
jg loc_414CA9  +
jz loc_414CA3  +
mov eax 80030004h +
cmp ecx eax +
jg loc_414B67  +
jz loc_414B61  +
mov eax 800288BDh +
cmp ecx eax +
jg loc_414AA0  +
jz loc_414A9A  +
add ecx 7FFD7FE8h +
cmp ecx 17h +
ja loc_415421  +
movzx eax ds:byte_415581[ecx] +
jmp ds:off_415549[eax*4]  +
mov eax offset aType_e_invdata +
retn   +
mov eax offset aType_e_unsupfo +
retn   +
mov eax offset aType_e_registr +
retn   +
mov eax offset aType_e_libnotr +
retn   +
mov eax offset aType_e_undefin +
retn   +
mov eax offset aType_e_qualifi +
retn   +
mov eax offset aType_e_invalid +
retn   +
mov eax offset aType_e_wrongty +
retn   +
mov eax offset aType_e_element +
retn   +
mov eax offset aType_e_ambiguo +
retn   +
mov eax offset aType_e_namecon +
retn   +
mov eax offset aType_e_unknown +
retn   +
mov eax offset aType_e_dllfunc +
retn   +
mov eax offset aType_e_badmodu +
retn   +
mov eax 80028CA3h +
cmp ecx eax +
jg loc_414B09  +
jz loc_414B03  +
cmp ecx 800288C5h +
jz loc_414AFD  +
cmp ecx 800288C6h +
jz loc_414AF7  +
cmp ecx 800288CFh +
jz loc_414AF1  +
cmp ecx 80028CA0h +
jz loc_414AEB  +
cmp ecx 80028CA1h +
jz loc_414AE5  +
cmp ecx 80028CA2h +
jnz loc_415421  +
mov eax offset aType_e_ioerror +
retn   +
mov eax offset aType_e_outofbo +
retn   +
mov eax offset aType_e_typemis +
retn   +
mov eax offset aType_e_inval_0 +
retn   +
mov eax offset aType_e_duplica +
retn   +
mov eax offset aType_e_sizetoo +
retn   +
mov eax offset aType_e_cantcre +
retn   +
cmp ecx 80029C4Ah +
jz loc_414B5B  +
cmp ecx 80029C83h +
jz loc_414B55  +
cmp ecx 80029C84h +
jz loc_414B4F  +
cmp ecx 80030001h +
jz loc_414B49  +
cmp ecx 80030002h +
jz loc_414B43  +
cmp ecx 80030003h +
jnz loc_415421  +
mov eax offset aStg_e_pathnotf +
retn   +
mov eax offset aStg_e_filenotf +
retn   +
mov eax offset aStg_e_invalidf +
retn   +
mov eax offset aType_e_circula +
retn   +
mov eax offset aType_e_inconsi +
retn   +
mov eax offset aType_e_cantloa +
retn   +
mov eax offset aStg_e_toomanyo +
retn   +
mov eax 80030070h +
cmp ecx eax +
jg loc_414C3F  +
jz loc_414C39  +
add eax 0FFFFFFA9h +
cmp ecx eax +
jg loc_414BE1  +
jz loc_414BDB  +
cmp ecx 80030005h +
jz loc_414BD5  +
cmp ecx 80030006h +
jz loc_414BCF  +
cmp ecx 80030008h +
jz loc_414BC9  +
cmp ecx 80030009h +
jz loc_414BC3  +
cmp ecx 80030012h +
jz loc_414BBD  +
cmp ecx 80030013h +
jnz loc_415421  +
mov eax offset aStg_e_diskiswr +
retn   +
mov eax offset aStg_e_nomorefi +
retn   +
mov eax offset aStg_e_invalidp +
retn   +
mov eax offset aStg_e_insuffic +
retn   +
mov eax offset aStg_e_invalidh +
retn   +
mov eax offset aStg_e_accessde +
retn   +
mov eax offset aStg_e_seekerro +
retn   +
cmp ecx 8003001Dh +
jz loc_414C33  +
cmp ecx 8003001Eh +
jz loc_414C2D  +
cmp ecx 80030020h +
jz loc_414C27  +
cmp ecx 80030021h +
jz loc_414C21  +
cmp ecx 80030050h +
jz loc_414C1B  +
cmp ecx 80030057h +
jnz loc_415421  +
mov eax offset aStg_e_invali_0 +
retn   +
mov eax offset aStg_e_filealre +
retn   +
mov eax offset aStg_e_lockviol +
retn   +
mov eax offset aStg_e_sharevio +
retn   +
mov eax offset aStg_e_readfaul +
retn   +
mov eax offset aStg_e_writefau +
retn   +
mov eax offset aStg_e_mediumfu +
retn   +
add ecx 7FFCFF06h +
cmp ecx 0Ch +
ja loc_415421  +
jmp ds:off_415599[ecx*4]  +
mov eax offset aStg_e_abnormal +
retn   +
mov eax offset aStg_e_invali_1 +
retn   +
mov eax offset aStg_e_invalidn +
retn   +
mov eax offset aStg_e_unknown +
retn   +
mov eax offset aStg_e_unimplem +
retn   +
mov eax offset aStg_e_invali_2 +
retn   +
mov eax offset aStg_e_inuse +
retn   +
mov eax offset aStg_e_notcurre +
retn   +
mov eax offset aStg_e_reverted +
retn   +
mov eax offset aStg_e_cantsave +
retn   +
mov eax offset aStg_e_oldforma +
retn   +
mov eax offset aStg_e_olddll +
retn   +
mov eax offset aStg_e_sharereq +
retn   +
mov eax offset aStg_e_notfileb +
retn   +
mov eax 80040064h +
cmp ecx eax +
jg loc_414D4A  +
jz loc_414D44  +
add ecx 7FFC0000h +
cmp ecx 12h +
ja loc_415421  +
jmp ds:off_4155CD[ecx*4]  +
mov eax offset aOle_e_oleverb +
retn   +
mov eax offset aOle_e_advf +
retn   +
mov eax offset aOle_e_enum_nom +
retn   +
mov eax offset aOle_e_adviseno +
retn   +
mov eax offset aOle_e_noconnec +
retn   +
mov eax offset aOle_e_notrunni +
retn   +
mov eax offset aOle_e_nocache +
retn   +
mov eax offset aOle_e_blank +
retn   +
mov eax offset aOle_e_classdif +
retn   +
mov eax offset aOle_e_cant_get +
retn   +
mov eax offset aOle_e_cant_bin +
retn   +
mov eax offset aOle_e_static +
retn   +
mov eax offset aOle_e_promptsa +
retn   +
mov eax offset aOle_e_invalidr +
retn   +
mov eax offset aOle_e_wrongcom +
retn   +
mov eax offset aOle_e_invalidh +
retn   +
mov eax offset aOle_e_not_inpl +
retn   +
mov eax offset aOle_e_cantconv +
retn   +
mov eax offset aOle_e_nostorag +
retn   +
mov eax offset aDv_e_formatetc +
retn   +
mov eax 80040100h +
cmp ecx eax +
jg loc_414DA7  +
jz loc_414DA1  +
add ecx 7FFBFF9Bh +
cmp ecx 8 +
ja loc_415421  +
jmp ds:off_415619[ecx*4]  +
mov eax offset aDv_e_dvtargetd +
retn   +
mov eax offset aDv_e_stgmedium +
retn   +
mov eax offset aDv_e_statdata +
retn   +
mov eax offset aDv_e_lindex +
retn   +
mov eax offset aDv_e_tymed +
retn   +
mov eax offset aDv_e_clipforma +
retn   +
mov eax offset aDv_e_dvaspect +
retn   +
mov eax offset aDv_e_dvtarge_0 +
retn   +
mov eax offset aDv_e_noiviewob +
retn   +
mov eax offset aDragdrop_e_not +
retn   +
mov eax 800401A0h +
cmp ecx eax +
jg loc_414E71  +
jz loc_414E6B  +
add eax 0FFFFFFB1h +
cmp ecx eax +
jg loc_414E21  +
jz loc_414E1B  +
cmp ecx 80040101h +
jz loc_414E15  +
cmp ecx 80040102h +
jz loc_414E0F  +
cmp ecx 80040110h +
jz loc_414E09  +
cmp ecx 80040111h +
jz loc_414E03  +
cmp ecx 80040140h +
jz loc_414DFD  +
cmp ecx 80040150h +
jnz loc_415421  +
mov eax offset aRegdb_e_readre +
retn   +
mov eax offset aView_e_draw +
retn   +
mov eax offset aClass_e_classn +
retn   +
mov eax offset aClass_e_noaggr +
retn   +
mov eax offset aDragdrop_e_inv +
retn   +
mov eax offset aDragdrop_e_alr +
retn   +
mov eax offset aRegdb_e_writer +
retn   +
cmp ecx 80040152h +
jz loc_414E65  +
cmp ecx 80040153h +
jz loc_414E5F  +
cmp ecx 80040154h +
jz loc_414E59  +
cmp ecx 80040170h +
jz loc_414E53  +
cmp ecx 80040180h +
jnz loc_415421  +
mov eax offset aOleobj_e_nover +
retn   +
mov eax offset aCache_e_nocach +
retn   +
mov eax offset aRegdb_e_classn +
retn   +
mov eax offset aRegdb_e_invali +
retn   +
mov eax offset aRegdb_e_keymis +
retn   +
mov eax offset aInplace_e_notu +
retn   +
mov eax 800401C5h +
cmp ecx eax +
jg loc_414EDA  +
jz loc_414ED4  +
cmp ecx 800401A1h +
jz loc_414ECE  +
cmp ecx 800401C0h +
jz loc_414EC8  +
cmp ecx 800401C1h +
jz loc_414EC2  +
cmp ecx 800401C2h +
jz loc_414EBC  +
cmp ecx 800401C3h +
jz loc_414EB6  +
cmp ecx 800401C4h +
jnz loc_415421  +
mov eax offset aConvert10_e_st +
retn   +
mov eax offset aConvert10_e_ol +
retn   +
mov eax offset aConvert10_e__0 +
retn   +
mov eax offset aConvert10_e__1 +
retn   +
mov eax offset aConvert10_e__2 +
retn   +
mov eax offset aInplace_e_noto +
retn   +
mov eax offset aConvert10_e__3 +
retn   +
cmp ecx 800401C6h +
jz loc_414F1E  +
cmp ecx 800401D0h +
jz loc_414F18  +
cmp ecx 800401D1h +
jz loc_414F12  +
cmp ecx 800401D2h +
jz loc_414F0C  +
cmp ecx 800401D3h +
jnz loc_415421  +
mov eax offset aClipbrd_e_bad_ +
retn   +
mov eax offset aClipbrd_e_cant +
retn   +
mov eax offset aClipbrd_e_ca_0 +
retn   +
mov eax offset aClipbrd_e_ca_1 +
retn   +
mov eax offset aConvert10_e__4 +
retn   +
mov eax offset aClipbrd_e_ca_2 +
retn   +
mov eax 80070005h +
cmp ecx eax +
jg loc_415019  +
jz loc_415013  +
add ecx 7FFBFE20h +
cmp ecx 1Fh +
ja loc_415421  +
jmp ds:off_41563D[ecx*4]  +
mov eax offset aMk_e_connectma +
retn   +
mov eax offset aMk_e_exceededd +
retn   +
mov eax offset aMk_e_needgener +
retn   +
mov eax offset aMk_e_unavailab +
retn   +
mov eax offset aMk_e_syntax +
retn   +
mov eax offset aMk_e_noobject +
retn   +
mov eax offset aMk_e_invalidex +
retn   +
mov eax offset aMk_e_intermedi +
retn   +
mov eax offset aMk_e_notbindab +
retn   +
mov eax offset aMk_e_notbound +
retn   +
mov eax offset aMk_e_cantopenf +
retn   +
mov eax offset aMk_e_mustbothe +
retn   +
mov eax offset aMk_e_noinverse +
retn   +
mov eax offset aMk_e_nostorage +
retn   +
mov eax offset aMk_e_noprefix +
retn   +
mov eax offset aMk_e_enumerati +
retn   +
mov eax offset aCo_e_notinitia +
retn   +
mov eax offset aCo_e_alreadyin +
retn   +
mov eax offset aCo_e_cantdeter +
retn   +
mov eax offset aCo_e_classstri +
retn   +
mov eax offset aCo_e_iidstring +
retn   +
mov eax offset aCo_e_appnotfou +
retn   +
mov eax offset aCo_e_appsingle +
retn   +
mov eax offset aCo_e_errorinap +
retn   +
mov eax offset aCo_e_dllnotfou +
retn   +
mov eax offset aCo_e_errorindl +
retn   +
mov eax offset aCo_e_wrongosfo +
retn   +
mov eax offset aCo_e_objnotreg +
retn   +
mov eax offset aCo_e_objisreg +
retn   +
mov eax offset aCo_e_objnotcon +
retn   +
mov eax offset aCo_e_appdidntr +
retn   +
mov eax offset aCo_e_released +
retn   +
mov eax offset aE_accessdenied +
retn   +
mov eax 800A017Ch +
cmp ecx eax +
jg loc_415216  +
jz loc_415210  +
mov eax 800A001Ch +
cmp ecx eax +
jg loc_41516E  +
jz loc_415168  +
mov eax 80080007h +
cmp ecx eax +
jg loc_4150DF  +
jz loc_4150D9  +
add eax 0FFFFFFFBh +
cmp ecx eax +
jg loc_41509D  +
jz loc_415097  +
cmp ecx 80070006h +
jz loc_415091  +
cmp ecx 8007000Eh +
jz loc_41508B  +
cmp ecx 80070057h +
jz loc_415085  +
cmp ecx 80080001h +
jnz loc_415421  +
mov eax offset aCo_e_class_cre +
retn   +
mov eax offset aE_invalidarg +
retn   +
mov eax offset aE_outofmemory +
retn   +
mov eax offset aE_handle +
retn   +
mov eax offset aCo_e_scm_error +
retn   +
cmp ecx 80080003h +
jz loc_4150D3  +
cmp ecx 80080004h +
jz loc_4150CD  +
cmp ecx 80080005h +
jz loc_4150C7  +
cmp ecx 80080006h +
jnz loc_415421  +
mov eax offset aCo_e_objsrv_rp +
retn   +
mov eax offset aCo_e_server_ex +
retn   +
mov eax offset aCo_e_bad_path +
retn   +
mov eax offset aCo_e_scm_rpc_f +
retn   +
mov eax offset aMk_e_no_normal +
retn   +
mov eax 800A0005h +
cmp ecx eax +
jg loc_41512C  +
jz loc_415126  +
cmp ecx 80080008h +
jz loc_415120  +
cmp ecx 80080009h +
jz loc_41511A  +
cmp ecx 80080010h +
jz loc_415114  +
cmp ecx 80080011h +
jnz loc_415421  +
mov eax offset aMem_e_invalid_ +
retn   +
mov eax offset aMem_e_invali_0 +
retn   +
mov eax offset aMem_e_invali_1 +
retn   +
mov eax offset aCo_e_server_st +
retn   +
mov eax offset aCtl_e_illegalf +
retn   +
cmp ecx 800A0006h +
jz loc_415162  +
cmp ecx 800A0007h +
jz loc_41515C  +
cmp ecx 800A000Bh +
jz loc_415156  +
cmp ecx 800A000Eh +
jnz loc_415421  +
mov eax offset aCtl_e_outofstr +
retn   +
mov eax offset aCtl_e_division +
retn   +
mov eax offset aCtl_e_outofmem +
retn   +
mov eax offset aCtl_e_overflow +
retn   +
mov eax offset aCtl_e_outofsta +
retn   +
mov eax 800A0141h +
cmp ecx eax +
jg loc_415421  +
jz loc_41520A  +
add ecx 7FF5FFCCh +
cmp ecx 2Ah +
ja loc_415421  +
movzx eax ds:byte_415709[ecx] +
jmp ds:off_4156BD[eax*4]  +
mov eax offset aCtl_e_badfilen +
retn   +
mov eax offset aCtl_e_filenotf +
retn   +
mov eax offset aCtl_e_badfilem +
retn   +
mov eax offset aCtl_e_filealre +
retn   +
mov eax offset aCtl_e_deviceio +
retn   +
mov eax offset aCtl_e_fileal_0 +
retn   +
mov eax offset aCtl_e_badrecor +
retn   +
mov eax offset aCtl_e_diskfull +
retn   +
mov eax offset aCtl_e_badrec_0 +
retn   +
mov eax offset aCtl_e_badfil_0 +
retn   +
mov eax offset aCtl_e_toomanyf +
retn   +
mov eax offset aCtl_e_deviceun +
retn   +
mov eax offset aCtl_e_permissi +
retn   +
mov eax offset aCtl_e_disknotr +
retn   +
mov eax offset aCtl_e_pathfile +
retn   +
mov eax offset aCtl_e_pathnotf +
retn   +
mov eax offset aCtl_e_invalidp +
retn   +
mov eax offset aCtl_e_invalidu +
retn   +
mov eax offset aCtl_e_invalidf +
retn   +
mov eax offset aCtl_e_invali_0 +
retn   +
mov eax 40002h +
cmp ecx eax +
jg loc_41534D  +
jz loc_415347  +
mov eax 800A01E1h +
cmp ecx eax +
jg loc_4152C9  +
jz loc_4152C3  +
add eax 0FFFFFFA2h +
cmp ecx eax +
jg loc_415287  +
jz loc_415281  +
cmp ecx 800A017Dh +
jz loc_41527B  +
cmp ecx 800A017Eh +
jz loc_415275  +
cmp ecx 800A017Fh +
jz loc_41526F  +
cmp ecx 800A0181h +
jnz loc_415421  +
mov eax offset aCtl_e_needprop +
retn   +
mov eax offset aCtl_e_setnotsu +
retn   +
mov eax offset aCtl_e_setnot_0 +
retn   +
mov eax offset aCtl_e_invali_1 +
retn   +
mov eax offset aCtl_e_setnotpe +
retn   +
cmp ecx 800A0189h +
jz loc_4152BD  +
cmp ecx 800A018Ah +
jz loc_4152B7  +
cmp ecx 800A01A6h +
jz loc_4152B1  +
cmp ecx 800A01CCh +
jnz loc_415421  +
mov eax offset aCtl_e_invalidc +
retn   +
mov eax offset aCtl_e_property +
retn   +
mov eax offset aCtl_e_getnotsu +
retn   +
mov eax offset aCtl_e_getnot_0 +
retn   +
mov eax offset aCtl_e_invali_2 +
retn   +
test ecx ecx +
jg loc_415311  +
jz loc_41530B  +
cmp ecx 800A01E2h +
jz loc_415305  +
cmp ecx 800A02DFh +
jz loc_4152FF  +
cmp ecx 800A02E8h +
jz loc_4152F9  +
cmp ecx 800A02EAh +
jnz loc_415421  +
mov eax offset aCtl_e_replacem +
retn   +
mov eax offset aCtl_e_searchte +
retn   +
mov eax offset aCtl_e_cantsave +
retn   +
mov eax offset aCtl_e_printere +
retn   +
mov eax offset aS_ok +
retn   +
sub ecx 1 +
jz loc_415341  +
sub ecx 301FFh +
jz loc_41533B  +
sub ecx 0FE00h +
jz loc_415335  +
sub ecx 1 +
jnz loc_415421  +
mov eax offset aOle_s_static +
retn   +
mov eax offset aOle_s_usereg +
retn   +
mov eax offset aStg_s_converte +
retn   +
mov eax offset aS_false +
retn   +
mov eax offset aOle_s_mac_clip +
retn   +
mov eax 40181h +
cmp ecx eax +
jg loc_4153CF  +
jz loc_4153C9  +
add eax 0FFFFFFBFh +
cmp ecx eax +
jg loc_41539A  +
jz loc_415394  +
sub ecx 40100h +
jz loc_41538E  +
sub ecx 1 +
jz loc_415388  +
sub ecx 1 +
jz loc_415382  +
sub ecx 2Eh +
jnz loc_415421  +
mov eax offset aData_s_samefor +
retn   +
mov eax offset aDragdrop_s_use +
retn   +
mov eax offset aDragdrop_s_can +
retn   +
mov eax offset aDragdrop_s_dro +
retn   +
mov eax offset aView_s_already +
retn   +
sub ecx 40170h +
jz loc_4153C3  +
sub ecx 1 +
jz loc_4153BD  +
sub ecx 1 +
jz loc_4153B7  +
sub ecx 0Eh +
jnz loc_415421  +
mov eax offset aOleobj_s_inval +
retn   +
mov eax offset aCache_s_someca +
retn   +
mov eax offset aCache_s_sameca +
retn   +
mov eax offset aCache_s_format +
retn   +
mov eax offset aOleobj_s_canno +
retn   +
mov eax 401E4h +
cmp ecx eax +
jg loc_41540F  +
jz loc_415409  +
sub ecx 40182h +
jz loc_415403  +
sub ecx 1Eh +
jz loc_4153FD  +
sub ecx 20h +
jz loc_4153F7  +
sub ecx 22h +
jnz loc_415421  +
mov eax offset aMk_s_reduced_t +
retn   +
mov eax offset aConvert10_s_no +
retn   +
mov eax offset aInplace_s_trun +
retn   +
mov eax offset aOleobj_s_inv_0 +
retn   +
mov eax offset aMk_s_me +
retn   +
sub ecx 401E5h +
jz loc_415430  +
sub ecx 1 +
jz loc_41542A  +
sub ecx 1 +
jz loc_415424  +
xor eax eax +
retn   +
mov eax offset aMk_s_monikeral +
retn   +
mov eax offset aMk_s_us +
retn   +
mov eax offset aMk_s_him +
retn   +
***
call sub_42B0B8  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_40A560 +
and dword ptr [ecx+4] 0 +
and dword ptr [ebp-4] 0 +
or dword ptr [ecx+8] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_40A594 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax ecx +
call sub_42B081  +
retn   +
***
push esi  +
push 0FFFFFFFFh  +
cmp dword ptr [edi] 0FFFFFFFFh +
jnz loc_415824  +
and dword ptr [edi] 0 +
push esi  +
call sub_4127FA  +
push edi  +
push eax  +
mov ecx [eax] +
mov esi [ecx+78h] +
mov ecx esi +
call ds:off_434248  +
call esi  +
pop esi  +
mov eax [edi] +
pop edi  +
retn   +
***
mov edi eax +
test edi edi +
jz loc_415851  +
mov ecx [edi] +
push esi  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
mov eax 80004005h +
pop edi  +
retn   +
***
mov edi eax +
test edi edi +
jz loc_415881  +
mov ecx [edi] +
push esi  +
mov esi [ecx+10h] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
push edi  +
call sub_415800  +
mov edi eax +
test edi edi +
jz loc_4158B7  +
mov ecx [edi] +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_434248  +
mov ecx edi +
call esi  +
pop esi  +
jmp loc_4158C6  +
push offset aUnknownExcepti  +
push [ebp+arg_0]  +
call sub_413837  +
pop ecx  +
pop ecx  +
pop edi  +
pop ebp  +
retn 4  +
***
call sub_42B0B8  +
call sub_42B0B8  +
mov eax ecx +
mov ecx eax +
push ecx  +
call sub_42B0B8  +
call sub_42B0B8  +
mov esi edx +
mov edi ecx +
push offset dword_40A638  +
lea ecx [ebp-1Ch] +
call sub_411245  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-1Ch] +
mov ecx esi +
push eax  +
call sub_410CB1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_410D73  +
push ecx  +
mov edx esi +
mov ecx edi +
call sub_415A5C  +
call sub_42B081  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42CA06  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_415C6B  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42CA4C  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
or [ebp+var_4] 0FFFFFFFFh +
cmp dword ptr [edi+4] 0 +
jz loc_415CBC  +
mov ebx [edi] +
test ebx ebx +
jz loc_415CB8  +
mov eax [ebx] +
push 1  +
mov esi [eax] +
mov ecx esi +
call ds:off_434248  +
mov ecx ebx +
call esi  +
and dword ptr [edi+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
test esi esi +
push 15h  +
cmp byte ptr [edi] 0 +
push 0FFFFFFFFh  +
call sub_42B0B8  +
call sub_42B0B8  +
sub esp 54h +
call sub_4176A3  +
call sub_4176A3  +
push dword_42F7F0  +
call sub_4128E4  +
call sub_41772A  +
retn 4  +
***
push edi  +
call sub_42B123  +
mov ecx dword_42F7E8 +
call sub_413F63  +
mov edi eax +
mov [ebp-18h] edi +
test edi edi +
jnz loc_416297  +
mov eax large fs:18h +
mov eax [eax+4] +
cmp dword_430C44 eax +
jz loc_416295  +
cmp dword_4307EC edi +
jz loc_416295  +
mov eax large fs:18h +
mov ecx [eax+4] +
mov eax dword_430B2C +
cmp eax ecx +
jz loc_416295  +
call sub_417789  +
test eax eax +
jnz loc_416295  +
mov eax dword_42F7EC +
test eax eax +
jnz loc_4161B4  +
xor ecx ecx +
call sub_4163EE  +
test eax eax +
jz loc_416295  +
cmp byte_430795 0 +
jz loc_4161E8  +
push 0Ch  +
mov esi dword_4307DC +
mov ecx esi +
call ds:off_434248  +
call esi  +
test eax eax +
jz loc_416295  +
cmp byte_430795 0 +
jz loc_4161E8  +
lea ecx [ebp-28h] +
call sub_415DC7  +
xor ebx ebx +
mov [ebp-4] ebx +
mov eax dword_42F7F0 +
mov [ebp-20h] eax +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 3 +
mov byte ptr [ebp-4] 4 +
test eax eax +
jz loc_416211  +
push eax  +
call sub_416084  +
mov dword ptr [ebp-1Ch] 1 +
mov eax large fs:18h +
mov eax [eax+4] +
mov dword_430C44 eax +
mov eax dword_42F7E8 +
mov [ebp-14h] eax +
xor edx edx +
mov ecx eax +
call sub_415D5A  +
mov dword ptr [ebp-4] 3 +
cmp dword_42F7D0 0 +
jz loc_41625B  +
call sub_4162A5  +
mov edi eax +
jmp loc_41625B  +
mov eax offset loc_41624F +
retn   +
mov dword ptr [ebp-4] 3 +
xor ebx ebx +
mov edi [ebp-18h] +
mov byte ptr [ebp-4] 2 +
mov dword_430C44 ebx +
mov [ebp-4] bl +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_416279  +
push dword ptr [ebp-20h]  +
call sub_41609C  +
mov [ebp-1Ch] ebx +
mov [ebp-28h] bl +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp byte_430795 0 +
jz loc_416291  +
lea ecx [ebp-28h] +
call sub_415DEA  +
mov eax edi +
jmp loc_416297  +
xor eax eax +
call sub_42B081  +
retn   +
***
push ecx  +
push edi  +
push ebx  +
test dword_42F7D0 esi +
sub esp 114h +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test dword_42F7D0 esi +
jz loc_416583  +
cmp ebx dword_42F7D4 +
ja loc_416583  +
mov ecx dword_42F7E8 +
call sub_413F63  +
test eax eax +
jnz loc_416571  +
call sub_416134  +
test eax eax +
jz loc_41664E  +
lea ecx [ebp+arg_10] +
push ecx  +
push [ebp+arg_C]  +
mov ecx eax +
push [ebp+arg_8]  +
push esi  +
call sub_41643C  +
mov eax dword_430C20 +
or eax dword_430C24 +
jz loc_41664E  +
cmp dword_42F83C 0 +
jz loc_41664E  +
mov al byte_42F840 +
cmp bl al +
jbe loc_4165B2  +
test al al +
jnz loc_41664E  +
mov eax esi +
or eax 0 +
jz loc_4165E5  +
mov ecx dword_42F828 +
xor eax eax +
and ecx esi +
or ecx eax +
jz loc_41664E  +
mov ecx dword_42F830 +
xor edx edx +
mov edi dword_42F834 +
mov eax ecx +
and eax esi +
cmp eax ecx +
jnz loc_41664E  +
cmp edx edi +
jnz loc_41664E  +
lea eax [ebp+arg_10] +
mov edi 100h +
push eax  +
push 0  +
push [ebp+arg_C]  +
lea eax [ebp+var_110] +
push 0FFh  +
push edi  +
push eax  +
call sub_40DC50  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_41EAD2  +
add esp 20h +
test eax eax +
jns loc_416619  +
or eax 0FFFFFFFFh +
movzx eax ax +
cmp eax edi +
jnb loc_416628  +
mov byte ptr [ebp+eax+var_110] 0 +
test byte_430C40 1 +
mov [ebp+var_11] 0 +
jz loc_41664E  +
movzx eax word_430788 +
mov edx esi +
push eax  +
lea eax [ebp+var_110] +
push eax  +
push ebx  +
push ecx  +
push ecx  +
call sub_415FDC  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8Ch +
call sub_42B0B8  +
push esi  +
push ecx  +
push ebx  +
push ecx  +
push edi  +
push edi  +
mov edi edx +
mov esi ecx +
mov ebx 104h +
mov ecx edi +
push ebx  +
push 4  +
call sub_410DFC  +
push ebx  +
push dword ptr [edi+0Ch]  +
push esi  +
call ds:GetModuleFileNameW  +
push eax  +
mov ecx edi +
call sub_410E45  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax dwTlsIndex +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_416EF2  +
mov eax 80004003h +
jmp loc_416F6C  +
push ebx  +
xor ecx ecx +
mov ebx offset dword_40A400 +
push edi  +
mov edi [ebp+arg_4] +
mov edx ecx +
mov [esi] ecx +
mov eax [edi+edx*4] +
cmp eax [ebx+edx*4] +
jnz loc_416F12  +
inc edx  +
cmp edx 4 +
jnz loc_416F02  +
jmp loc_416F4C  +
mov ebx offset dword_406394 +
mov edx ecx +
mov eax [edi+edx*4] +
cmp eax [ebx+edx*4] +
jnz loc_416F39  +
inc edx  +
cmp edx 4 +
jnz loc_416F19  +
mov edx [ebp+arg_0] +
mov ecx edx +
neg ecx  +
sbb ecx ecx +
lea eax [edx+4] +
and ecx eax +
mov [esi] ecx +
jmp loc_416F51  +
mov edx offset dword_405F18 +
mov eax [edi+ecx*4] +
cmp eax [edx+ecx*4] +
jnz loc_416F65  +
inc ecx  +
cmp ecx 4 +
jnz loc_416F3E  +
mov edx [ebp+arg_0] +
mov [esi] edx +
mov eax [edx] +
push edx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_434248  +
call esi  +
xor eax eax +
jmp loc_416F6A  +
mov eax 80004002h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
inc eax  +
retn 4  +
***
push esi  +
mov eax dwTlsIndex +
cmp eax 0FFFFFFFFh +
jnz loc_416FBE  +
xor eax eax +
jmp locret_416FC5  +
push eax  +
call ds:TlsGetValue  +
retn 4  +
***
push esi  +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
mov ecx esi +
call sub_416E3D  +
test eax eax +
jz loc_417011  +
mov ecx [eax+esi*4] +
mov eax [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
jmp loc_417013  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push ecx  +
push ecx  +
push esi  +
xor edx edx +
xor ecx ecx +
call sub_416E3D  +
mov esi eax +
test esi esi +
jz loc_4170A0  +
push ebx  +
push edi  +
push 16h  +
mov ebx offset dword_430BB0 +
mov edi esi +
pop eax  +
sub ebx esi +
mov [ebp+var_4] eax +
mov ecx [ebx+edi] +
mov [ebp+var_8] ecx +
test ecx ecx +
jz loc_417083  +
cmp dword ptr [edi] 0 +
jz loc_417083  +
push dword ptr [edi]  +
call ds:off_434248  +
call [ebp+var_8]  +
mov eax [ebp+var_4] +
add edi 4 +
sub eax 1 +
mov [ebp+var_4] eax +
jnz loc_417066  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_4200B3  +
pop ecx  +
mov esi eax +
push esi  +
call ds:InitializeCriticalSection  +
mov eax esi +
pop esi  +
retn 10h  +
***
push [ebp+lpCriticalSection]  +
call ds:DeleteCriticalSection  +
push [ebp+lpCriticalSection]  +
call sub_4200AE  +
pop ecx  +
pop ebp  +
retn 8  +
***
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
xor eax eax +
push eax  +
push [ebp+bInitialState]  +
push eax  +
push eax  +
call ds:CreateEventW  +
pop ebp  +
retn 8  +
***
push 0  +
push [ebp+bInitialState]  +
push 1  +
push 0  +
call ds:CreateEventW  +
pop ebp  +
retn 8  +
***
push [ebp+hObject]  +
push [ebp+hEvent]  +
push [ebp+hEvent]  +
push [ebp+bAlertable]  +
push [ebp+dwMilliseconds]  +
push [ebp+hHandle]  +
call ds:WaitForSingleObjectEx  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_0] +
push esi  +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
mov esi [ecx+4Ch] +
mov ecx esi +
call ds:off_434248  +
call esi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0  +
push [ebp+lMaximumCount]  +
push [ebp+lInitialCount]  +
push 0  +
call ds:CreateSemaphoreW  +
pop ebp  +
retn 0Ch  +
***
push [ebp+lpPreviousCount]  +
push [ebp+lReleaseCount]  +
push [ebp+hSemaphore]  +
call ds:ReleaseSemaphore  +
pop ebp  +
retn 10h  +
***
push [ebp+lpName]  +
push [ebp+bInitialOwner]  +
push [ebp+lpMutexAttributes]  +
call ds:CreateMutexW  +
pop ebp  +
retn 10h  +
***
push [ebp+hMutex]  +
push [ebp+bAlertable]  +
push [ebp+dwMilliseconds]  +
call ds:SleepEx  +
pop ebp  +
retn 0Ch  +
***
retn 4  +
***
push [ebp+flProtect]  +
push [ebp+flAllocationType]  +
push [ebp+dwSize]  +
push [ebp+lpAddress]  +
call ds:VirtualAlloc  +
pop ebp  +
retn 14h  +
***
push [ebp+dwFreeType]  +
push [ebp+dwSize]  +
push [ebp+lpAddress]  +
call ds:VirtualFree  +
pop ebp  +
retn 10h  +
***
push [ebp+dwLength]  +
push [ebp+lpBuffer]  +
push [ebp+lpAddress]  +
call ds:VirtualQuery  +
pop ebp  +
retn 10h  +
***
push [ebp+lpflOldProtect]  +
push [ebp+flNewProtect]  +
push [ebp+dwSize]  +
push [ebp+lpAddress]  +
call ds:VirtualProtect  +
pop ebp  +
retn 14h  +
***
call ds:GetProcessHeap  +
retn 4  +
***
test esi esi +
jz loc_417317  +
mov ecx esi +
call ds:off_434248  +
call esi  +
jmp loc_417319  +
xor eax eax +
pop esi  +
retn 4  +
***
push [ebp+dwMaximumSize]  +
push [ebp+dwInitialSize]  +
push [ebp+flOptions]  +
call ds:HeapCreate  +
pop ebp  +
retn 10h  +
***
push [ebp+hHeap]  +
push [ebp+dwBytes]  +
push [ebp+dwFlags]  +
push [ebp+hHeap]  +
call ds:HeapAlloc  +
pop ebp  +
retn 10h  +
***
push [ebp+lpMem]  +
push [ebp+dwFlags]  +
push [ebp+hHeap]  +
call ds:HeapFree  +
pop ebp  +
retn 10h  +
***
push [ebp+lpMem]  +
push [ebp+dwFlags]  +
push [ebp+hHeap]  +
call ds:HeapValidate  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_4] +
push [ebp+arg_4]  +
call sub_42B123  +
mov edi edx +
push ecx  +
push ecx  +
push ecx  +
sub esp 20h +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor eax eax +
lea ebx [ecx+2] +
mov [ebp+var_4] eax +
mov edi eax +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_4] +
jnz loc_41786E  +
sub ecx ebx +
sar ecx 1 +
cmp ecx 1 +
jb loc_4178C4  +
cmp word ptr [esi+2] 3Ah +
jnz loc_4178C4  +
test edx edx +
jz loc_41789D  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41789D  +
mov [edx] esi +
mov dword ptr [eax] 2 +
add esi 4 +
xor ebx ebx +
movzx eax word ptr [esi] +
mov edx ebx +
mov ecx esi +
test ax ax +
jz loc_417907  +
cmp ax 2Fh +
jz loc_4178D7  +
cmp ax 5Ch +
jz loc_4178D7  +
cmp ax 2Eh +
jnz loc_4178DA  +
mov edi ecx +
jmp loc_4178DA  +
test edx edx +
jz loc_4178A0  +
mov eax [ebp+arg_0] +
xor ebx ebx +
test eax eax +
jz loc_4178A2  +
mov [edx] ebx +
mov [eax] ebx +
jmp loc_4178A2  +
lea edx [ecx+2] +
add ecx 2 +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_4178AE  +
test edx edx +
jz loc_417907  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_417903  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jz loc_417901  +
mov [eax] esi +
mov eax edx +
sub eax esi +
sar eax 1 +
mov [ebx] eax +
xor ebx ebx +
mov esi edx +
jmp loc_417919  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_417919  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_417919  +
mov [eax] ebx +
mov [edx] ebx +
test edi edi +
jz loc_417951  +
cmp edi esi +
jb loc_417951  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_417939  +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_417939  +
mov [eax] esi +
mov eax edi +
sub eax esi +
sar eax 1 +
mov [edx] eax +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_417979  +
mov edx [ebp+arg_18] +
test edx edx +
jz loc_417979  +
sub ecx edi +
mov [eax] edi +
sar ecx 1 +
mov [edx] ecx +
jmp loc_417979  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_417967  +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_417967  +
sub ecx esi +
mov [eax] esi +
sar ecx 1 +
mov [edx] ecx +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_417979  +
mov ecx [ebp+arg_18] +
test ecx ecx +
jz loc_417979  +
mov [eax] ebx +
mov [ecx] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
call sub_42B0B8  +
push 0FFFFFFFFh  +
push esi  +
push ecx  +
cmp dword_430B94 0 +
call sub_42B0B8  +
mov edi ecx +
xor ebx ebx +
mov esi 80004005h +
and [ebp-18h] ebx +
and [ebp-10h] ebx +
mov [ebp-14h] ebx +
cmp [edi+4] ebx +
jz loc_417D82  +
mov ecx [ebp+8] +
cmp ecx 0FFFFFFFFh +
jz loc_417D75  +
xor eax eax +
cmp ecx [edi] +
setz al  +
test eax eax +
jz loc_417E71  +
mov ebx [edi+4] +
xor esi esi +
mov [ebp-14h] ebx +
jmp loc_417E69  +
cmp [edi+8] ebx +
jz loc_417D91  +
mov esi 80070002h +
jmp loc_417E71  +
lea eax [ebp-18h] +
push eax  +
call sub_41850F  +
mov esi eax +
test esi esi +
jns loc_417DAF  +
mov ecx esi +
call sub_414756  +
test eax eax +
jnz loc_417FC1  +
mov edx [edi+14h] +
and [ebp-1Ch] ebx +
mov [ebp-20h] edx +
test edx edx +
jz loc_417DCD  +
push edx  +
call sub_4128C3  +
xor ecx ecx +
inc ecx  +
mov [ebp-1Ch] ecx +
mov edx [ebp-20h] +
jmp loc_417DD0  +
xor ecx ecx +
inc ecx  +
mov [ebp-4] ecx +
cmp dword ptr [edi+4] 0 +
jnz loc_417E02  +
cmp dword ptr [edi+8] 0 +
jnz loc_417E02  +
mov eax [ebp-18h] +
mov ebx eax +
mov [ebp-14h] ebx +
test esi esi +
js loc_417DF5  +
mov ecx [ebp+8] +
mov [edi] ecx +
mov [edi+4] eax +
jmp loc_417DFD  +
mov eax [ebp+8] +
mov [edi] eax +
mov [edi+8] ecx +
mov eax [ebp-10h] +
jmp loc_417E21  +
mov ecx [ebp+8] +
cmp ecx 0FFFFFFFFh +
jz loc_417E1B  +
xor eax eax +
cmp ecx [edi] +
setz al  +
test eax eax +
jz loc_417E1B  +
mov ebx [edi+4] +
mov [ebp-14h] ebx +
xor eax eax +
inc eax  +
mov [ebp-10h] eax +
test esi esi +
jns loc_417E42  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_417FC1  +
push edx  +
call sub_4128E4  +
and dword ptr [ebp-1Ch] 0 +
jmp loc_417FC1  +
test eax eax +
jz loc_417E53  +
push dword ptr [ebp-18h]  +
call ds:FreeLibrary  +
and dword ptr [ebp-10h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_417E69  +
push dword ptr [ebp-20h]  +
call sub_4128E4  +
and dword ptr [ebp-1Ch] 0 +
test ebx ebx +
jnz loc_417FB9  +
cmp dword ptr [edi+8] 0 +
jnz loc_417FB9  +
mov ebx [edi+14h] +
xor esi esi +
mov [ebp-28h] ebx +
mov [ebp-24h] esi +
test ebx ebx +
jz loc_417E94  +
push ebx  +
call sub_4128C3  +
inc esi  +
mov [ebp-24h] esi +
mov dword ptr [ebp-4] 5 +
lea eax [ebp-1Ch] +
and dword ptr [ebp-1Ch] 0 +
mov ecx edi +
push eax  +
push dword ptr [ebp+8]  +
call sub_417B3C  +
cmp dword ptr [ebp-1Ch] 1 +
mov [ebp-14h] eax +
jnz loc_417ED8  +
mov esi 80070002h +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-24h] 0 +
jz loc_417FB9  +
push ebx  +
call sub_4128E4  +
and dword ptr [ebp-24h] 0 +
jmp loc_417FB9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jz loc_417EED  +
push ebx  +
call sub_4128E4  +
and dword ptr [ebp-24h] 0 +
mov eax [ebp-14h] +
test eax eax +
jnz loc_417FB7  +
lea eax [ebp-18h] +
mov ecx edi +
push eax  +
call sub_41850F  +
mov esi eax +
test esi esi +
jns loc_417F15  +
mov ecx esi +
call sub_414756  +
test eax eax +
jnz loc_417FC1  +
mov ebx [edi+14h] +
and dword ptr [ebp-24h] 0 +
mov [ebp-28h] ebx +
test ebx ebx +
jz loc_417F30  +
push ebx  +
call sub_4128C3  +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-4] 9 +
lea eax [ebp-1Ch] +
and dword ptr [ebp-1Ch] 0 +
mov ecx edi +
push eax  +
push dword ptr [ebp+8]  +
call sub_417B3C  +
mov [ebp-14h] eax +
test eax eax +
jnz loc_417FB2  +
cmp [ebp-1Ch] eax +
jnz loc_417FB2  +
mov ecx edi +
test esi esi +
js loc_417F98  +
mov eax [ebp-18h] +
push 0  +
push eax  +
push dword ptr [ebp+8]  +
mov [ebp-14h] eax +
call sub_417BAC  +
mov esi eax +
mov edi [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-24h] 0 +
jz loc_417F85  +
push ebx  +
call sub_4128E4  +
and dword ptr [ebp-24h] 0 +
test edi edi +
jnz loc_417F8D  +
test esi esi +
jns loc_417FB9  +
push dword ptr [ebp-18h]  +
call ds:FreeLibrary  +
jmp loc_417FB9  +
push 1  +
push 0  +
push dword ptr [ebp+8]  +
mov [ebp-1Ch] esi +
call sub_417BAC  +
mov esi eax +
test esi esi +
js loc_417F6E  +
mov esi [ebp-1Ch] +
jmp loc_417F6E  +
xor edi edi +
inc edi  +
jmp loc_417F71  +
xor esi esi +
mov eax [ebp+0Ch] +
mov ecx [ebp-14h] +
mov [eax] ecx +
mov eax esi +
call sub_42B081  +
retn 8  +
***
cmp dword ptr [ecx+18h] offset aMscorrc_dll +
call sub_42B15A  +
and esp 0FFFFFFF8h +
sub esp 254h +
mov eax dword_42F014 +
xor eax esp +
mov [esp+254h+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ebx 104h +
lea eax [esp+260h+Filename] +
push ebx  +
push eax  +
push hModule  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_418556  +
call sub_410B38  +
jmp loc_4185E9  +
push ecx  +
lea eax [esp+264h+Filename] +
mov ecx esi +
push eax  +
push edi  +
call sub_41804E  +
mov ecx 8007000Eh +
cmp eax ecx +
jnz loc_418571  +
mov eax ecx +
jmp loc_4185E9  +
test eax eax +
jns loc_4185E9  +
cmp dword ptr [esi+18h] offset aMscorrc_dll +
jnz loc_4185E9  +
lea eax [esp+260h+var_254] +
push eax  +
push 1Eh  +
lea eax [esp+268h+var_24C] +
push eax  +
lea eax [esp+26Ch+var_250] +
push eax  +
push ebx  +
lea eax [esp+274h+Filename] +
push eax  +
push 0C1h  +
xor eax eax +
push eax  +
push eax  +
push offset aV4_0_30319  +
push eax  +
call ds:GetRequestedRuntimeInfo  +
test eax eax +
js loc_4185E9  +
cmp [esp+28Ch+var_280] 0 +
jbe loc_4185DB  +
lea eax [esp+28Ch+var_278] +
push eax  +
lea eax [esp+290h+var_23C] +
push ebx  +
push eax  +
call sub_41EED2  +
add esp 0Ch +
lea eax [esp+28Ch+var_23C] +
push offset asc_40A634  +
push ebx  +
push eax  +
call sub_41EED2  +
add esp 0Ch +
push ecx  +
lea eax [esp+290h+var_23C] +
mov ecx esi +
push eax  +
push edi  +
call sub_41804E  +
mov ecx [esp+28Ch+var_30] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42BDB3  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jz loc_418636  +
push dword ptr [esi]  +
call sub_4128E4  +
and dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42CE08  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_4186C2  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42CE4E  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
or [ebp+var_4] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_418711  +
mov edi [esi] +
test edi edi +
jz loc_41870D  +
mov ecx edi +
call sub_410D73  +
push 10h  +
push edi  +
call sub_418D66  +
pop ecx  +
pop ecx  +
and dword ptr [esi+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jz loc_418748  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_418743  +
mov ecx edi +
call sub_410D73  +
push 10h  +
push edi  +
call sub_418D66  +
pop ecx  +
pop ecx  +
and dword ptr [esi+4] 0 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push 2  +
call sub_420444  +
call sub_418E43  +
push eax  +
call sub_420D87  +
call sub_420EB9  +
mov esi eax +
call sub_414010  +
push 1  +
mov [esi] eax +
call sub_418B9D  +
add esp 0Ch +
pop esi  +
test al al +
jz loc_4187EC  +
fnclex   +
call sub_419079  +
push offset sub_4190B0  +
call sub_418D51  +
call sub_418E3F  +
push eax  +
call sub_4207CC  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4187EC  +
call sub_418E49  +
call sub_418EB4  +
test eax eax +
jz loc_4187BB  +
push offset sub_414010  +
call sub_4204C9  +
pop ecx  +
call nullsub_1  +
call nullsub_1  +
call loc_418E63  +
call sub_414010  +
push eax  +
call sub_420E22  +
pop ecx  +
call sub_418E60  +
test al al +
jz loc_4187E4  +
call sub_4209E2  +
call sub_414010  +
xor eax eax +
retn   +
***
push 7  +
call sub_418ECC  +
call sub_418E97  +
xor eax eax +
retn   +
***
call sub_41901A  +
call sub_414010  +
push eax  +
call sub_420E8A  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_420C48  +
test al al +
jnz loc_41896F  +
push dword ptr [ebp-20h]  +
call sub_420D23  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_41897A  +
call sub_420D05  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_419136  +
retn   +
***
call sub_418DA3  +
cmp ecx dword_42F014 +
push 0  +
sub esp 324h +
mov eax dword_42F014 +
mov eax [ebp+arg_0] +
call sub_4192EA  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_4190F0  +
call sub_4192EA  +
cmp byte_42FC7D 0 +
mov eax dword_42F014 +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
call sub_412781  +
pop ecx  +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
sub esp 14h +
retn   +
***
retn   +
***
push 30000h  +
push 10000h  +
push 0  +
call sub_42140B  +
add esp 0Ch +
test eax eax +
jnz loc_418E7C  +
retn   +
***
push 7  +
call sub_418ECC  +
call sub_40DC50  +
xor eax eax +
sub esp 324h +
sub esp 44h +
retn   +
***
mov eax [ebp+arg_0] +
and dword_42FC90 0 +
mov esi (offset dword_40DC2C+18h) +
mov ebx (offset dword_40DC2C+18h) +
cmp esi ebx +
jnb loc_4190A1  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_419099  +
mov ecx edi +
call j_nullsub_1  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41908A  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi (offset dword_40DC2C+20h) +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push ebp  +
mov ebp esp +
and dword_42FC94 0 +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_42F018 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_4192E3  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_42F018 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_42FC94 ebx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-20h] +
mov [ebp-0Ch] eax +
xor edi 756E6547h +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-1Ch] +
xor eax 6C65746Eh +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
or eax [ebp-8] +
or eax edi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_419227  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_419216  +
cmp eax 20660h +
jz loc_419216  +
cmp eax 20670h +
jz loc_419216  +
cmp eax 30650h +
jz loc_419216  +
cmp eax 30660h +
jz loc_419216  +
cmp eax 30670h +
jnz loc_419227  +
mov edi dword_42FC98 +
or edi 1 +
mov dword_42FC98 edi +
jmp loc_41922D  +
mov edi dword_42FC98 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-1Ch] +
mov [ebp-4] eax +
jl loc_41926B  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_41926E  +
or edi 2 +
mov dword_42FC98 edi +
jmp loc_41926E  +
mov ebx [ebp-10h] +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_4192E3  +
or dword_42F018 4 +
mov dword_42FC94 2 +
test eax 8000000h +
jz loc_4192E3  +
test eax 10000000h +
jz loc_4192E3  +
xor ecx ecx +
xor eax eax +
sub esp 18h +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_41A29C  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_41899A  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_419627  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_419691  +
jmp loc_419691  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_41B05C  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_419665  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_4194DD  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_419356  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_41B05C  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_4196EF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_41899A  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_41899A  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov byte ptr [ebp-1] 0 +
mov dword ptr [ebp-0Ch] 1 +
mov ebx [esi+8] +
lea eax [esi+10h] +
xor ebx dword_42F014 +
push eax  +
push ebx  +
mov [ebp-14h] eax +
mov [ebp-8] ebx +
call sub_4196D0  +
mov edi [ebp+10h] +
push edi  +
call sub_41B1E6  +
mov eax [ebp+8] +
add esp 0Ch +
test byte ptr [eax+4] 66h +
jnz loc_419813  +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
mov [ebp-18h] edi +
mov edi [esi+0Ch] +
mov [esi-4] eax +
cmp edi 0FFFFFFFEh +
jz loc_41983A  +
lea eax [edi+2] +
lea eax [edi+eax*2] +
mov ecx [ebx+eax*4+4] +
lea eax [ebx+eax*4] +
mov ebx [eax] +
mov [ebp-10h] eax +
test ecx ecx +
jz loc_4197EC  +
lea edx [esi+10h] +
call sub_41B34E  +
mov cl 1 +
mov [ebp-1] cl +
test eax eax +
js loc_4197FE  +
jle loc_4197EF  +
mov eax [ebp+8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_4197DC  +
cmp ds:off_4012E0 0 +
jz loc_4197DC  +
push offset off_4012E0  +
call sub_42AF90  +
add esp 4 +
test eax eax +
jz loc_4197D9  +
mov esi ds:off_4012E0 +
mov ecx esi +
push 1  +
push dword ptr [ebp+8]  +
call j_nullsub_1  +
call esi  +
mov esi [ebp+0Ch] +
add esp 8 +
mov eax [ebp+8] +
mov edx eax +
mov ecx esi +
call sub_41B37E  +
cmp [esi+0Ch] edi +
jz loc_419856  +
jmp loc_419844  +
mov cl [ebp-1] +
mov edi ebx +
cmp ebx 0FFFFFFFEh +
jz loc_41980A  +
mov ebx [ebp-8] +
jmp loc_419771  +
***
mov ebx [ebp-8] +
mov dword ptr [ebp-0Ch] 0 +
jmp loc_41982E  +
test cl cl +
jz loc_41983A  +
mov ebx [ebp-8] +
jmp loc_41982E  +
cmp dword ptr [esi+0Ch] 0FFFFFFFEh +
jz loc_41983A  +
push offset dword_42F014  +
lea eax [esi+10h] +
mov edx 0FFFFFFFEh +
push eax  +
mov ecx esi +
call sub_41B397  +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_4196D0  +
add esp 8 +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset dword_42F014  +
lea eax [esi+10h] +
mov edx edi +
push eax  +
mov ecx esi +
call sub_41B397  +
mov [esi+0Ch] ebx +
lea ebx [esi+10h] +
push ebx  +
push dword ptr [ebp-8]  +
call sub_4196D0  +
mov ecx [ebp-10h] +
add esp 8 +
mov edx ebx +
mov ecx [ecx+8] +
call sub_41B365  +
cmp dword_42FC94 1 +
jb loc_4198E8  +
movzx eax byte ptr [esp+8] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+4] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_4198D7  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_4198B3  +
***
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
***
xor eax eax +
mov al [esp+8] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+8] +
test edx 3 +
jz loc_419915  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_419962  +
test cl cl +
jz loc_41995E  +
test edx 3 +
jnz loc_419900  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_419967  +
and eax 81010100h +
jz loc_419920  +
and eax 1010100h +
jnz loc_41995C  +
and esi 80000000h +
jnz loc_419920  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
mov eax [edx-4] +
cmp al bl +
jz loc_4199A4  +
test al al +
jz loc_41995C  +
cmp ah bl +
jz loc_41999D  +
test ah ah +
jz loc_41995C  +
shr eax 10h +
cmp al bl +
jz loc_419996  +
test al al +
jz loc_41995C  +
cmp ah bl +
jz loc_41998F  +
test ah ah +
jz loc_41995C  +
jmp loc_419920  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4199D0  +
cmp edi eax +
jb loc_419C64  +
cmp ecx 20h +
jb loc_419EAB  +
cmp ecx 80h +
jnb loc_4199F4  +
bt dword_42F018 1 +
jb loc_419E7D  +
jmp loc_419BD7  +
bt dword_42FC98 1 +
jnb loc_419A07  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_419A20  +
bt dword_42F018 1 +
jb loc_419E00  +
bt dword_42FC98 0 +
jnb loc_419BD7  +
test edi 3 +
jnz loc_419BD7  +
test esi 3 +
jnz loc_419BF2  +
bt edi 2 +
jnb loc_419A59  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_419A70  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_419ADD  +
bt esi 3 +
jnb loc_419B36  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_419B8C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_419BA4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_419B8C  +
***
bt ecx 2 +
jnb loc_419BB7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_419BCE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_419C14[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_419BF2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_419BDF  +
mov edx ecx +
cmp ecx 20h +
jb loc_419EAB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_419C14[edx*4]  +
jmp dword ptr ds:loc_419C24[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_419DC4  +
bt dword_42F018 1 +
jb loc_419D15  +
test edi 3 +
jz loc_419C9D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_419C90  +
cmp ecx 20h +
jb loc_419DC4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_419CC0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_419D2C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_419D1D  +
cmp ecx 80h +
jb loc_419D9C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_419D2C  +
cmp ecx 20h +
jb loc_419DC4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_419DA1  +
test ecx 0FFFFFFFCh +
jz loc_419DE1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_419DCC  +
test ecx ecx +
jz loc_419DF4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_419DE5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_419E00  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_419EF0  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_419E7D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_419E20  +
test ecx ecx +
jz loc_419EE0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_419EAB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_419E90  +
and ecx 1Fh +
jz loc_419EE0  +
mov eax ecx +
shr ecx 2 +
jz loc_419EC6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_419EB7  +
mov ecx eax +
and ecx 3 +
jz loc_419EE0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_419ECD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_419F0C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_419F03  +
shr eax 2 +
jz loc_419F1E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_419F11  +
pop ecx  +
jmp loc_419E0D  +
***
mov edx dword_42FCC8 +
mov eax dword_42F014 +
mov ecx eax +
and ecx 1Fh +
xor eax edx +
ror eax cl +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_42FC94 1 +
jb loc_41A06E  +
mov edi [ebp+8] +
ja loc_419FED  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_419FCD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_419F9D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_41A02E  +
xor eax eax +
test edi 0Fh +
jz loc_41A014  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_41A02B  +
inc edi  +
test edi 0Fh +
jnz loc_419FFF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_41A067  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_41A053  +
bsf edx edi +
add eax edx +
jmp loc_41A02B  +
***
call sub_41B3AE  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
cmp eax ecx +
jnz loc_41A0F0  +
xor eax eax +
pop ebp  +
retn   +
add ecx 5 +
add eax 5 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_41A114  +
test dl dl +
jz loc_41A0EC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_41A114  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_41A0F6  +
jmp loc_41A0EC  +
sbb eax eax +
or eax 1 +
pop ebp  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_41A273  +
imul eax eax +
cmp ecx 20h +
jle loc_41A225  +
cmp ecx 80h +
jl loc_41A1DD  +
bt dword_42FC98 1 +
jnb loc_41A165  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_42F018 1 +
jnb loc_41A225  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jle loc_41A1DD  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_41A1A0  +
jmp loc_41A1F0  +
bt dword_42F018 1 +
jnb loc_41A225  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_41A211  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_41A1F5  +
test ecx 1Fh +
jz loc_41A273  +
lea edi [ecx+edi-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_41A23B  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_41A22D  +
test ecx 4 +
jz loc_41A24B  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_41A273  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_41A260  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
mov eax [ebp+lpMem] +
call sub_41A2AA  +
cmp dword_42F020 0FFFFFFFFh +
mov dword_42F020 eax +
mov eax dword_42F020 +
cmp eax 0FFFFFFFFh +
jz loc_41A387  +
push eax  +
call sub_41B5B6  +
or dword_42F020 0FFFFFFFFh +
pop ecx  +
mov al 1 +
retn   +
***
sub esp 4 +
push ebx  +
push ecx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebp  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_8] +
mov ebp [ebp+var_4] +
call sub_41B82C  +
push esi  +
push edi  +
call eax  +
pop edi  +
pop esi  +
mov ebx ebp +
pop ebp  +
mov ecx [ebp+arg_8] +
push ebp  +
mov ebp ebx +
cmp ecx 100h +
jnz loc_41A3CF  +
mov ecx 2 +
push ecx  +
call sub_41B82C  +
pop ebp  +
pop ecx  +
pop ebx  +
leave   +
retn 0Ch  +
***
call sub_4190F0  +
mov eax [ebp+8] +
test eax eax +
jz loc_41A46E  +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_41A46E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_41A46E  +
cmp dword ptr [eax+14h] 19930520h +
jz loc_41A41C  +
cmp dword ptr [eax+14h] 19930521h +
jz loc_41A41C  +
cmp dword ptr [eax+14h] 19930522h +
jnz loc_41A46E  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_41A46E  +
mov edx [ecx+4] +
test edx edx +
jz loc_41A451  +
and dword ptr [ebp-4] 0 +
push edx  +
push dword ptr [eax+18h]  +
call sub_41AD56  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_41A46E  +
xor eax eax +
cmp [ebp+0Ch] al +
setnz al  +
retn   +
mov esp [ebp-18h] +
call sub_42146A  +
test byte ptr [ecx] 10h +
jz loc_41A46E  +
mov eax [eax+18h] +
mov ecx [eax] +
test ecx ecx +
jz loc_41A46E  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
call sub_419136  +
retn   +
***
push esi  +
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset dword_4012FC +
mov dword ptr [ecx] offset off_4012F4 +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_4012E8 +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
push eax  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41B873  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_4012E8 +
push eax  +
call sub_41B8D6  +
pop ecx  +
retn   +
***
push esi  +
call sub_4190F0  +
mov eax [ebp-2Ch] +
call sub_42B123  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 44h +
push ecx  +
sub esp 18h +
push ebx  +
pop eax  +
pop ecx  +
xchg eax [esp-8+arg_4] +
jmp eax  +
***
mov eax [ecx+4] +
mov ecx [ebp+arg_4] +
call sub_4190F0  +
mov esp [ebp-18h] +
call sub_4190F0  +
mov eax [ebp+arg_0] +
call sub_4190F0  +
call sub_41A29C  +
push ebx  +
mov edx [ebp+arg_0] +
mov eax ds:off_434248 +
mov eax ds:off_434248 +
cmp eax offset nullsub_1 +
jz loc_41B241  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_41B23C  +
cmp eax [ecx+4] +
jbe loc_41B241  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_41B325  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_41899A  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_41B250  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov eax dword_42F014 +
mov edi offset CriticalSection +
test esi esi +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_42F014 +
cmp [ebp+arg_0] 0 +
jnz loc_41B717  +
push esi  +
mov esi offset unk_42FCE8 +
cmp dword ptr [esi] 0 +
jz loc_41B70B  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_41B708  +
push dword ptr [esi]  +
call ds:FreeLibrary  +
and dword ptr [esi] 0 +
add esi 4 +
cmp esi offset unk_42FCF4 +
jnz loc_41B6F6  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_41B738  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_41B740  +
push large dword ptr fs:0  +
mov eax dword_42F014 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_41B7F7  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_41B7CA  +
cmp esi [esp+18h+arg_4] +
jbe loc_41B7F7  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_41B7F5  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_41B835  +
mov eax [ebx+esi*4+8] +
call sub_41B854  +
jmp loc_41B7AE  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_42F030 +
mov ebx offset unk_42F030 +
mov esi [eax+4] +
push edi  +
push esi  +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 8  +
pop ecx  +
mov esi offset byte_401B98 +
lea edi [ebp+dwExceptionCode] +
movs   +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_41B931  +
test byte ptr [edi] 10h +
jz loc_41B931  +
mov ecx [ebx] +
sub ecx 4 +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call j_nullsub_1  +
call esi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] edi +
test edi edi +
jz loc_41B947  +
test byte ptr [edi] 8 +
jz loc_41B947  +
mov [ebp+Arguments] 1994000h +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+nNumberOfArguments]  +
push [ebp+dwExceptionFlags]  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_42F040 +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_4190F0  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_4190F0  +
pop ecx  +
call sub_4190F0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_41E5E0  +
test al al +
jnz loc_41CBA5  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_41CC7B  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
or eax 0FFFFFFFFh +
jmp loc_41CC91  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_41CC59  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_41CC6C  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_41C9D6  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_41CBB1  +
cmp eax 7 +
ja loc_41CBC1  +
jmp ds:off_41CC94[eax*4]  +
mov ecx esi +
call sub_41D09E  +
jmp loc_41CC51  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_41CC59  +
mov ecx esi +
call sub_41D024  +
jmp loc_41CC51  +
mov ecx esi +
call sub_41DD57  +
jmp loc_41CC51  +
mov [esi+28h] ebx +
jmp loc_41CC59  +
mov ecx esi +
call sub_41D1BC  +
jmp loc_41CC51  +
mov ecx esi +
call sub_41D20D  +
jmp loc_41CC51  +
mov ecx esi +
call sub_41D66E  +
test al al +
jz loc_41CBC1  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_41CBD4  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_41E5FB  +
test al al +
jz loc_41CBC1  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41CBC9  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_41E5E0  +
test al al +
jnz loc_41CCCD  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_41CD99  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
or eax 0FFFFFFFFh +
jmp loc_41CDAF  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_41CD82  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_41CD99  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_41CA42  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_41CCD9  +
cmp eax 7 +
ja loc_41CCE9  +
jmp ds:off_41CDB4[eax*4]  +
mov ecx esi +
call sub_41D0BD  +
jmp loc_41CD7A  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_41CD82  +
mov ecx esi +
call sub_41D061  +
jmp loc_41CD7A  +
mov ecx esi +
call sub_41DD82  +
jmp loc_41CD7A  +
mov [esi+28h] ebx +
jmp loc_41CD82  +
mov ecx esi +
call sub_41D1E4  +
jmp loc_41CD7A  +
mov ecx esi +
call sub_41D376  +
jmp loc_41CD7A  +
mov ecx esi +
call sub_41D89D  +
test al al +
jz loc_41CCE9  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_41CCFC  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41CCF1  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_41E5E0  +
test al al +
jnz loc_41CDED  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_41CEC8  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
or eax 0FFFFFFFFh +
jmp loc_41CEDE  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_41CEA2  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_41CEB9  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_41CA0B  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_41CDF9  +
cmp eax 7 +
ja loc_41CE09  +
jmp ds:off_41CEE4[eax*4]  +
mov ecx esi +
call sub_41D0DC  +
jmp loc_41CE9A  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_41CEA2  +
mov ecx esi +
call sub_41D061  +
jmp loc_41CE9A  +
mov ecx esi +
call sub_41DD82  +
jmp loc_41CE9A  +
mov [esi+28h] ebx +
jmp loc_41CEA2  +
mov ecx esi +
call sub_41D1E4  +
jmp loc_41CE9A  +
mov ecx esi +
call sub_41D4F2  +
jmp loc_41CE9A  +
mov ecx esi +
call sub_41DAFA  +
test al al +
jz loc_41CE09  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_41CE1C  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_41E5FB  +
test al al +
jz loc_41CE09  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41CE11  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_41E5E0  +
test al al +
jnz loc_41CF1D  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_41CFE9  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
or eax 0FFFFFFFFh +
jmp loc_41CFFF  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_41CFD2  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_41CFE9  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_41CA42  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_41CF29  +
cmp eax 7 +
ja loc_41CF39  +
jmp ds:off_41D004[eax*4]  +
mov ecx esi +
call sub_41D0DC  +
jmp loc_41CFCA  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_41CFD2  +
mov ecx esi +
call sub_41D061  +
jmp loc_41CFCA  +
mov ecx esi +
call sub_41DD82  +
jmp loc_41CFCA  +
mov [esi+28h] ebx +
jmp loc_41CFD2  +
mov ecx esi +
call sub_41D1E4  +
jmp loc_41CFCA  +
mov ecx esi +
call sub_41D4F2  +
jmp loc_41CFCA  +
mov ecx esi +
call sub_41DAFA  +
test al al +
jz loc_41CF39  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_41CF4C  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41CF41  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_41D0FB  +
call sub_41D125  +
call sub_41D140  +
mov edi edi +
lea edx [ecx+18h] +
lea edx [ecx+18h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
movzx eax word ptr [ecx+32h] +
movzx eax word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_41DDD4  +
jmp ds:off_41DDDA[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_41DDC4  +
push 8  +
jmp loc_41DDC4  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41C231  +
add esp 1Ch +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_42FC94 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_41EBD1  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_41EB71  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_41EB84  +
cmp byte ptr [ecx] 0 +
jz loc_41EB84  +
inc ecx  +
cmp ecx edi +
jnz loc_41EB7A  +
sub ecx esi +
cmp ecx edx +
jnz loc_41EC65  +
mov edi eax +
add ecx esi +
sub edi edx +
mov eax edi +
and eax 1Fh +
sub edi eax +
cmp eax 1 +
jl loc_41EC4B  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_41EBF2  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_41EC05  +
cmp byte ptr [ecx] 0 +
jz loc_41EC05  +
inc ecx  +
cmp ecx edi +
jnz loc_41EBFB  +
sub ecx esi +
cmp ecx edx +
jnz loc_41EC65  +
mov edi eax +
add ecx esi +
sub edi edx +
pxor xmm1 xmm1 +
mov eax edi +
and eax 0Fh +
sub edi eax +
add edi ecx +
jmp loc_41EC32  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_41EC36  +
add ecx 10h +
cmp ecx edi +
jnz loc_41EC20  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_41EC43  +
cmp byte ptr [ecx] 0 +
jz loc_41EC47  +
inc ecx  +
cmp ecx eax +
jnz loc_41EC3D  +
sub ecx esi +
jmp loc_41EC65  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_41EC63  +
cmp byte ptr [ecx] 0 +
jz loc_41EC63  +
inc ecx  +
cmp ecx eax +
jnz loc_41EC59  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_42FC94 +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_41ED40  +
test cl 1 +
jz loc_41ECB0  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_41ECCB  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_41ECE7  +
cmp [edx] di +
jz loc_41ECE7  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_41ECDA  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_41EE1A  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
leave   +
lea ecx [edx+ecx*2] +
jmp loc_41ED19  +
cmp edx ecx +
jnz near ptr word_41ED0A  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
lea ecx [eax+ecx*2] +
jmp loc_41ED30  +
cmp [edx] di +
jz loc_41ED34  +
add edx 2 +
cmp edx ecx +
jnz loc_41ED28  +
sub edx eax +
sar edx 1 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_41EEF4  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_41EEF4  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_41EF0A  +
xor eax eax +
mov [edi] ax +
call sub_41FDE4  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_420288  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov edx edi +
xor esi esi +
cmp [edx] si +
jz loc_41EF1B  +
add edx 2 +
sub ecx 1 +
jnz loc_41EF0E  +
test ecx ecx +
jz loc_41EEEF  +
sub ebx edx +
movzx eax word ptr [ebx+edx] +
mov [edx] ax +
lea edx [edx+2] +
test ax ax +
jz loc_41EF35  +
sub ecx 1 +
jnz loc_41EF21  +
test ecx ecx +
jnz loc_41EF03  +
xor eax eax +
mov [edi] ax +
call sub_41FDE4  +
push 22h  +
jmp loc_41EEFB  +
***
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_423039  +
call sub_423039  +
test eax eax +
jnz loc_41FDF3  +
mov eax offset unk_42F0F0 +
retn   +
add eax 10h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_41FDF7  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_4200E3  +
push [ebp+arg_0]  +
call sub_419071  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_41A120  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_41A120  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_4201EA  +
test edi edi +
jnz loc_4201EA  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_4201EA  +
push [ebp+arg_0]  +
call sub_419071  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
xor eax eax +
test eax eax +
mov edi edi +
mov edi edi +
mov eax dword_42F014 +
mov ecx eax +
xor eax dword_42FD58 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_420FB1  +
pop ecx  +
mov dword_42FD58 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_42FE68 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax dword_42FE74 +
jz loc_420989  +
push eax  +
call sub_420901  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_420930  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42B280  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov ecx eax +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_420CD9  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_420CD8  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_434248  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_420CE8  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov ecx offset dword_42FE88 +
inc eax  +
xchg eax [ecx] +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov eax [ebp+10h] +
call sub_4190F0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push 2  +
call sub_420F89  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset off_42F138  +
mov ecx offset dword_4302D8 +
call sub_4259F8  +
mov al 1 +
retn   +
***
push offset unk_42FE94  +
call sub_421264  +
mov dword ptr [esp] offset unk_42FEA0 +
call sub_421264  +
pop ecx  +
mov al 1 +
retn   +
***
call sub_4209AB  +
mov al 1 +
retn   +
***
push 0  +
call sub_41A0C0  +
pop ecx  +
retn   +
***
call sub_4257BA  +
call sub_42583D  +
mov edi edi +
call sub_42B280  +
call sub_425A51  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push offset dword_402404  +
push offset dword_4023FC  +
push offset aLocalenametolc  +
push 18h  +
call sub_4215CE  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_42196C  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call ds:off_434248  +
call esi  +
jmp loc_421975  +
push [ebp+arg_0]  +
call sub_426294  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_42FF80 +
test ecx ecx +
jz loc_4219DB  +
xor eax eax +
cmp ecx 1 +
setz al  +
jmp loc_421A2F  +
push esi  +
push offset dword_4023EC  +
push offset dword_4023E4  +
push offset aGetcurrentpack  +
push 8  +
call sub_4215CE  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_421A22  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push 0  +
push eax  +
mov ecx esi +
call ds:off_434248  +
call esi  +
cmp eax 7Ah +
jnz loc_421A22  +
xor ecx ecx +
mov edx offset dword_42FF80 +
inc ecx  +
xchg ecx [edx] +
mov al 1 +
jmp loc_421A2E  +
push 2  +
pop eax  +
mov ecx offset dword_42FF80 +
xchg eax [ecx] +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4190F0  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
shr eax 0Dh +
test al 1 +
jz loc_421B50  +
mov eax [edi] +
shr eax 6 +
test al 1 +
jz loc_421B50  +
push dword ptr [esi+4]  +
call sub_4214E9  +
pop ecx  +
mov eax 0FFFFFEBFh +
and [edi] eax +
xor eax eax +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_421BF7  +
cmp ecx 0FFFFFFFEh +
jz loc_421BF7  +
mov dl [ebx] +
test dl 1 +
jz loc_421BF7  +
test dl 8 +
jnz loc_421BD3  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_421BF4  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_42FF88[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [ebx] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
inc ebx  +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_421BB0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_42FF88[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_421C37  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_421C37  +
or byte ptr [esi+28h] 80h +
jmp loc_421CB2  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_421C52  +
sub eax 1 +
jz loc_421C4E  +
push 0FFFFFFF4h  +
sub eax 1 +
jmp loc_421C54  +
push 0FFFFFFF5h  +
jmp loc_421C54  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_421C70  +
test ebx ebx +
jz loc_421C70  +
push ebx  +
call ds:GetFileType  +
jmp loc_421C72  +
xor eax eax +
test eax eax +
jz loc_421C94  +
and eax 0FFh +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_421C89  +
or byte ptr [esi+28h] 40h +
jmp loc_421CB2  +
cmp eax 3 +
jnz loc_421CB2  +
or byte ptr [esi+28h] 8 +
jmp loc_421CB2  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_42FD48 +
test eax eax +
jz loc_421CB2  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_421C11  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
xor esi esi +
mov eax dword_42FF88[esi] +
test eax eax +
jz loc_421D3D  +
push eax  +
call sub_424DAD  +
and dword_42FF88[esi] 0 +
pop ecx  +
add esi 4 +
cmp esi 200h +
jb loc_421D25  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_430190 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov eax [ebp+10h] +
call sub_4190F0  +
mov eax [ebp+10h] +
call sub_4190F0  +
mov eax [ebp+10h] +
call sub_4190F0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset dword_401DF8 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
mov dword ptr [eax+48h] offset unk_42F500 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 5  +
call sub_422DF8  +
lea eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push 4  +
call sub_422DA8  +
add esp 10h +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
xor ebx ebx +
mov eax dword_42F130 +
cmp eax 0FFFFFFFFh +
jz loc_42305E  +
push eax  +
call sub_421791  +
mov edi eax +
test edi edi +
jnz loc_4230AF  +
push 364h  +
push 1  +
call sub_421571  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_42307B  +
push ebx  +
call sub_4214E9  +
pop ecx  +
jmp loc_4230A6  +
push edi  +
push dword_42F130  +
call sub_4217E7  +
test eax eax +
jnz loc_42308E  +
push edi  +
jmp loc_423073  +
push offset dword_4302D8  +
push edi  +
call sub_422E20  +
push ebx  +
call sub_4214E9  +
add esp 0Ch +
test edi edi +
jnz loc_4230AF  +
push esi  +
call ds:SetLastError  +
jmp loc_4230B8  +
push esi  +
call ds:SetLastError  +
mov ebx edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
push offset loc_422EA0  +
call sub_4216E5  +
mov dword_42F130 eax +
cmp eax 0FFFFFFFFh +
jnz loc_4230D7  +
xor al al +
retn   +
***
call sub_423039  +
test eax eax +
jnz loc_4230E9  +
push eax  +
call sub_4230F0  +
pop ecx  +
jmp loc_4230D4  +
***
mov al 1 +
retn   +
***
mov eax dword_42F130 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_42F014 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jle loc_423F75  +
push esi  +
push [ebp+lpSrcStr]  +
call loc_41EC6B  +
pop ecx  +
cmp eax esi +
pop ecx  +
lea esi [eax+1] +
jl loc_423F75  +
mov esi eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push esi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_0]  +
call sub_4218A2  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_423FB2  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
call sub_422FB5  +
mov [ebp+var_4] eax +
call sub_42494E  +
push [ebp+arg_0]  +
call sub_4245BB  +
pop ecx  +
mov ecx [ebp+var_4] +
mov [ebp+var_C] eax +
mov ecx [ecx+48h] +
cmp eax [ecx+4] +
jnz loc_424857  +
xor eax eax +
jmp loc_4248AA  +
push ebx  +
push esi  +
push edi  +
push 220h  +
call sub_421523  +
mov edi eax +
or ebx 0FFFFFFFFh +
pop ecx  +
test edi edi +
jz loc_42489C  +
mov esi [ebp+var_4] +
mov ecx 88h +
mov esi [esi+48h] +
movs   +
mov edi eax +
push edi  +
push [ebp+var_C]  +
and dword ptr [edi] 0 +
call sub_4249F0  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi ebx +
jnz loc_4248AE  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
mov esi ebx +
push edi  +
call sub_4214E9  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+arg_4] 0 +
jnz loc_4248B9  +
call sub_420DC4  +
mov eax [ebp+var_4] +
mov eax [eax+48h] +
xadd [eax] ebx +
dec ebx  +
jnz loc_4248DB  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+48h] offset unk_42F500 +
jz loc_4248DB  +
push dword ptr [eax+48h]  +
call sub_4214E9  +
pop ecx  +
mov dword ptr [edi] 1 +
mov ecx edi +
mov eax [ebp+var_4] +
xor edi edi +
mov [eax+48h] ecx +
mov eax [ebp+var_4] +
test byte ptr [eax+350h] 2 +
jnz loc_42489E  +
test byte ptr dword_42F780 1 +
jnz loc_42489E  +
lea eax [ebp+var_4] +
mov [ebp+var_C] eax +
lea eax [ebp+var_C] +
push eax  +
push 5  +
call sub_424491  +
cmp [ebp+arg_4] 0 +
pop ecx  +
pop ecx  +
jz loc_42489E  +
mov eax lpMem +
mov off_42F1F4 eax +
jmp loc_42489E  +
***
cmp byte_4302F8 0 +
call sub_4190F0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
push 0  +
push [ebp+arg_0]  +
push 0  +
call sub_424BE1  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp $+5  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_425743  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  esi +
cmp eax [ebp+arg_8] +
jnb loc_425743  +
call sub_41FDE4  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_425785  +
push ebx  +
mov ebx [ebp+lpMem] +
push edi  +
test ebx ebx +
jz loc_425757  +
push ebx  +
call sub_428B8F  +
pop ecx  +
mov edi eax +
jmp loc_425759  +
xor edi edi +
imul esi [ebp+arg_8] +
push esi  +
push ebx  +
call sub_428BC2  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_425781  +
cmp edi esi +
jnb loc_425781  +
sub esi edi +
lea eax [ebx+edi] +
push esi  +
push 0  +
push eax  +
call sub_41A120  +
add esp 0Ch +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_425879  +
add esi 0FFFFFFFCh +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_42586D  +
push 0  +
mov ecx edi +
call ds:off_434248  +
call edi  +
pop ecx  +
sub esi 8 +
lea eax [esi+4] +
cmp eax [ebp+arg_0] +
jnz loc_42585A  +
pop edi  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
call sub_4190F0  +
pop ecx  +
call sub_4190F0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push 3  +
call sub_42598E  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_422FB5  +
call sub_42B280  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_425C7A  +
push 3  +
call sub_421DE1  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
pop ecx  +
mov edi edi +
call sub_4190F0  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
push esi  +
call sub_428FA3  +
mov eax [esi] +
and eax 1Fh +
pop ecx  +
cmp al 1Fh +
jnz loc_426949  +
mov byte ptr [esi+8] 0 +
jmp loc_426954  +
push esi  +
call sub_429009  +
pop ecx  +
mov byte ptr [esi+8] 1 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_4281BB  +
xor eax eax +
jmp loc_428228  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_4281D5  +
call sub_41FDE4  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_420288  +
mov eax esi +
jmp loc_428228  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_4281F1  +
cmp [ebp+arg_4] esi +
jb loc_4281F1  +
push esi  +
push edi  +
push eax  +
call loc_42B520  +
add esp 0Ch +
xor eax eax +
jmp loc_428227  +
push [ebp+arg_4]  +
push 0  +
push eax  +
call sub_41A120  +
add esp 0Ch +
test edi edi +
jnz loc_42820C  +
call sub_41FDE4  +
push 16h  +
jmp loc_428218  +
cmp [ebp+arg_4] esi +
jnb loc_428224  +
call sub_41FDE4  +
push 22h  +
pop esi  +
mov [eax] esi +
call sub_420288  +
mov eax esi +
jmp loc_428227  +
push 16h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
call sub_4227AE  +
pop ecx  +
mov ecx [ebp+arg_4] +
mov edi eax +
mov ecx [ecx+0Ch] +
test cl 6 +
jnz loc_428266  +
call sub_41FDE4  +
mov dword ptr [eax] 9 +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_428339  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
shr eax 0Ch +
test al 1 +
jz loc_428280  +
call sub_41FDE4  +
mov dword ptr [eax] 22h +
jmp loc_428252  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
test al 1 +
jz loc_4282B2  +
mov eax [ebp+arg_4] +
and dword ptr [eax+8] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
shr eax 3 +
test al 1 +
mov eax [ebp+arg_4] +
jz loc_428255  +
mov ecx [eax+4] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
push 0FFFFFFFEh  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
push ebx  +
push 2  +
pop ebx  +
add eax 0Ch +
or [eax] ebx +
mov eax [ebp+arg_4] +
push 0FFFFFFF7h  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
and dword ptr [eax+8] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
test eax 4C0h +
jnz loc_428312  +
push esi  +
mov esi [ebp+arg_4] +
push 1  +
call sub_41BA38  +
pop ecx  +
cmp esi eax +
jz loc_4282FD  +
mov esi [ebp+arg_4] +
push ebx  +
call sub_41BA38  +
pop ecx  +
cmp esi eax +
jnz loc_428308  +
push edi  +
call sub_4263B6  +
pop ecx  +
test eax eax +
jnz loc_428311  +
push [ebp+arg_4]  +
call sub_4292CD  +
pop ecx  +
pop esi  +
push [ebp+arg_4]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_428451  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_428335  +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_428338  +
movzx eax bl +
pop ebx  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_42833C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_428697  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_428663  +
jmp loc_428640  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_434248  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_428657  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_428640  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_42868C  +
test eax eax +
jz loc_42868C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_428671  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_428633  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_4286E6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_4286E5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_4286D0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ebp+var_104] ecx +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_100] esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_FC] edi +
test ecx ecx +
jnz loc_42874D  +
test edx edx +
jz loc_42874D  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_42872D  +
test esi esi +
jz loc_42872D  +
mov [ebp+var_108] 0 +
cmp edx 2 +
jb loc_428A7A  +
dec edx  +
imul edx edi +
push ebx  +
add edx ecx +
mov [ebp+var_F8] edx +
mov eax edx +
xor edx edx +
sub eax ecx +
div  edi +
lea ebx [eax+1] +
cmp ebx 8 +
ja loc_42879B  +
push esi  +
push edi  +
push [ebp+var_F8]  +
push ecx  +
call sub_428610  +
add esp 10h +
jmp loc_428A52  +
shr ebx 1 +
imul ebx edi +
add ebx ecx +
push ebx  +
push ecx  +
mov ecx esi +
mov [ebp+var_110] ebx +
call ds:off_434248  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4287CB  +
push edi  +
push ebx  +
push [ebp+var_104]  +
call sub_4286B0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push [ebp+var_104]  +
call ds:off_434248  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4287FD  +
push edi  +
push [ebp+var_F8]  +
push [ebp+var_104]  +
call sub_4286B0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push ebx  +
call ds:off_434248  +
call esi  +
add esp 8 +
test eax eax +
jle loc_428825  +
push edi  +
push [ebp+var_F8]  +
push ebx  +
call sub_4286B0  +
add esp 0Ch +
mov eax [ebp+var_F8] +
mov edi eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_FC] +
mov [ebp+var_114] eax +
nop   +
cmp ebx esi +
jbe loc_42887B  +
add esi edx +
mov [ebp+var_10C] esi +
cmp esi ebx +
jnb loc_428875  +
mov ecx [ebp+var_100] +
push ebx  +
push esi  +
call ds:off_434248  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jle loc_428844  +
cmp ebx esi +
ja loc_4288B2  +
mov eax [ebp+var_F8] +
mov edi [ebp+var_100] +
add esi edx +
cmp esi eax +
ja loc_4288A6  +
push ebx  +
push esi  +
mov ecx edi +
call ds:off_434248  +
call edi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jle loc_428881  +
mov edi [ebp+var_114] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_100] +
jmp loc_4288C0  +
mov edx [ebp+var_FC] +
sub edi edx +
cmp edi ebx +
jbe loc_4288E5  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_434248  +
call esi  +
add esp 8 +
test eax eax +
jg loc_4288C0  +
mov edx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_114] edi +
cmp edi esi +
jb loc_428953  +
mov [ebp+var_118] edx +
mov [ebp+var_11C] edi +
cmp esi edi +
jz loc_428938  +
mov ebx esi +
mov edx edi +
mov esi [ebp+var_118] +
sub ebx edi +
mov al [edx] +
lea edx [edx+1] +
mov cl [ebx+edx-1] +
mov [ebx+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_428911  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_110] +
mov edx [ebp+var_FC] +
mov eax [ebp+var_F8] +
cmp ebx edi +
jnz loc_428840  +
mov ebx esi +
mov [ebp+var_110] ebx +
jmp loc_428840  +
add edi edx +
cmp ebx edi +
jnb loc_42898B  +
lea esp [esp+0] +
sub edi edx +
cmp edi ebx +
jbe loc_42898B  +
mov ecx [ebp+var_100] +
push ebx  +
push edi  +
call ds:off_434248  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_428960  +
cmp ebx edi +
jb loc_4289BA  +
mov esi [ebp+var_100] +
sub edi edx +
cmp edi [ebp+var_104] +
jbe loc_4289B4  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_434248  +
call esi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_428991  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov eax edi +
mov ebx [ebp+var_104] +
mov ecx edx +
sub ecx esi +
sub eax ebx +
cmp eax ecx +
jl loc_428A0B  +
cmp ebx edi +
jnb loc_4289EE  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] ebx +
mov [ebp+eax*4+var_7C] edi +
inc eax  +
mov [ebp+var_108] eax +
mov edi [ebp+var_FC] +
cmp esi edx +
jnb loc_428A44  +
mov ecx esi +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
jmp loc_428775  +
cmp esi edx +
jnb loc_428A27  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] esi +
mov [ebp+eax*4+var_7C] edx +
inc eax  +
mov [ebp+var_108] eax +
mov ecx [ebp+var_104] +
mov esi [ebp+var_100] +
cmp ecx edi +
jnb loc_428A4C  +
mov edx edi +
mov edi [ebp+var_FC] +
jmp loc_42876F  +
mov esi [ebp+var_100] +
jmp loc_428A52  +
mov edi [ebp+var_FC] +
mov eax [ebp+var_108] +
sub eax 1 +
mov [ebp+var_108] eax +
js loc_428A79  +
mov ecx [ebp+eax*4+var_F4] +
mov edx [ebp+eax*4+var_7C] +
mov [ebp+var_104] ecx +
jmp loc_42876F  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 0 +
jnz loc_428B09  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
xor eax eax +
jmp loc_428B70  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_428B23  +
call sub_41FDE4  +
mov dword ptr [eax] 16h +
call sub_420288  +
jmp loc_428B28  +
cmp [ebp+arg_0] esi +
jb loc_428B2C  +
xor eax eax +
jmp loc_428B6F  +
push [ebp+arg_8]  +
lea ecx [ebp+var_10] +
call sub_41C801  +
mov edx [ebp+var_8] +
cmp dword ptr [edx+8] 0 +
jz loc_428B5C  +
lea ecx [esi-1] +
dec ecx  +
cmp [ebp+arg_0] ecx +
ja loc_428B53  +
movzx eax byte ptr [ecx] +
test byte ptr [eax+edx+19h] 4 +
jnz loc_428B43  +
mov eax esi +
sub eax ecx +
and eax 1 +
sub esi eax +
dec esi  +
cmp [ebp+var_4] 0 +
jz loc_428B6D  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4190F0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
push eax  +
push eax  +
push 3  +
push eax  +
push 3  +
push 40000000h  +
push offset FileName  +
call ds:CreateFileW  +
mov dword_42F794 eax +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_428FA3  +
pop ecx  +
test eax eax +
jz loc_42902B  +
xor eax eax +
inc eax  +
jmp loc_429054  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_428FC0  +
pop ecx  +
test eax eax +
jnz loc_429026  +
call sub_425D5F  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_43338C 0 +
jz loc_4290EF  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_429094  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_4290EF  +
jmp loc_4297E8  +
***
cmp dword_43338C 0 +
jz loc_4290DB  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4290D0  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_4290DB  +
jmp sub_4297D0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_429EE8  +
call sub_4290F8  +
add esp 0Ch +
retn   +
***
jz loc_42914B  +
cmp dword_43338C 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
fnstenv  byte ptr [ebp+var_20] +
mov ebx 1F1F001Fh +
push ebx  +
call sub_42956C  +
push [ebp+arg_0]  +
mov esi eax +
not esi  +
and esi [ebp+var_1C] +
call sub_42956C  +
pop ecx  +
or esi eax +
pop ecx  +
mov [ebp+var_1C] esi +
fldenv  byte ptr [ebp+var_20] +
cmp dword_42FC94 1 +
jl loc_4297B1  +
mov [ebp+var_4] edi +
stmxcsr [ebp+var_4]  +
push ebx  +
call sub_42950B  +
push [ebp+arg_0]  +
mov esi eax +
not esi  +
and esi [ebp+var_4] +
call sub_42950B  +
pop ecx  +
or esi eax +
pop ecx  +
mov [ebp+var_4] esi +
ldmxcsr [ebp+var_4]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0Ah  +
call IsProcessorFeaturePresent  +
mov dword_43338C eax +
xor eax eax +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_4297EE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_405330 +
movapd xmm2 oword ptr ds:oword_405340 +
movapd xmm3 oword ptr ds:oword_4053A0 +
movapd xmm4 oword ptr ds:oword_405350 +
movapd xmm6 oword ptr ds:oword_405360 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_405960[eax] +
movapd xmm7 oword ptr ds:oword_405550[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_429946  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_4053F0 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_405400 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_405410 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_405370 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_405380[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_405420 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_4053B0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_4299AB  +
cmp ecx 0FFFFFFFFh +
jz loc_4299C6  +
cmp ecx 7FEh +
ja loc_4299DC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_405330 +
movapd xmm2 oword ptr ds:oword_4053A0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_4299A4  +
fld  ds:dbl_4053D8 +
retn   +
mov edx 3E9h +
jmp loc_4299FA  +
movlpd xmm2 oword ptr ds:oword_4053A0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:byte_4053D0 +
mov edx 8 +
jmp loc_4299FA  +
movlpd xmm1 oword ptr ds:oword_4053C0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4297F3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_429A27  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_42A043  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_4299ED  +
mov edx 3E9h +
jmp loc_4299FA  +
***
lea esp [esp+0] +
jmp loc_429A60  +
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_429AA6  +
fxch  st(1) +
fyl2x   +
jmp loc_429A7E  +
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_429BAE  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_429A94  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_429A9B  +
fscale   +
or ch ch +
jz loc_429AA1  +
fchs   +
jmp loc_429D58  +
***
call sub_429BF1  +
or eax eax +
jz loc_429AC3  +
xor ch ch +
cmp eax 2 +
jz loc_429AB8  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_429A6D  +
***
jmp loc_429D78  +
***
jmp loc_429E13  +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_405430 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_429AC3  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_40543A +
retn   +
***
or cl cl +
jnz loc_429B5B  +
retn   +
***
fldlg2   +
jmp loc_429B0F  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_429AC3  +
fyl2x   +
retn   +
***
jmp loc_429D78  +
***
call sub_429BF1  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_429B38  +
fldz   +
cmp eax 1 +
jnz locret_429B37  +
or ch ch +
jz locret_429B37  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  tbyte ptr ds:dword_405430 +
cmp eax 1 +
jnz locret_429B37  +
or ch ch +
jz locret_429B37  +
fchs   +
jmp locret_429B37  +
***
fstp  st +
jmp loc_429D66  +
***
fstp  st +
jmp loc_429E15  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_429B83  +
fstp  st +
fld  tbyte ptr ds:dword_405430 +
or ch ch +
jz locret_429B82  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_429D66  +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_405430 +
mov byte ptr [ebp-90h] 3 +
retn   +
***
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_429C17  +
fld  st +
fmul  qword ptr ds:dword_405454+0Eh +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_429C1E  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_429C16  +
mov eax 2 +
jmp locret_429C16  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_42A3EB  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_429C56  +
jmp sub_429E26  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_429C77  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_429C7B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx (offset dword_4054BC+2) +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_429CDE  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_429CE2  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx (offset dword_4054BC+2) +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_429E26  +
fxch  st(1) +
fstp  st +
retn   +
***
call sub_429E26  +
jmp loc_429D5A  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_429D77  +
fchs   +
retn   +
***
fstp  st +
fstp  st +
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429D9C  +
mov byte ptr [ebp-90h] 0 +
retn   +
***
mov byte ptr [ebp-90h] 0 +
fadd  qword ptr ds:dword_40549C+12h +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429DCA  +
mov byte ptr [ebp-90h] 0 +
jmp loc_429DD1  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429E09  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429E09  +
mov byte ptr [ebp-90h] 0 +
jmp loc_429E10  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  tbyte ptr ds:dword_40549C+8 +
or ch ch +
jz loc_429E40  +
fchs   +
or cl cl +
jz locret_429E4C  +
fld  qword ptr ds:dword_4054B4+2 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_429E53  +
fchs   +
retn   +
***
fld  st +
frndint   +
fsubr st(1) st +
fxch  st(1) +
fchs   +
f2xm1   +
fld1   +
faddp st(1) st +
fscale   +
fstp  st(1) +
retn   +
***
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_429EF9  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_429F09  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_429F33  +
and ax 20h +
jz loc_429F30  +
fstsw  ax +
and ax 20h +
jz loc_429F30  +
mov eax 8 +
call sub_42A007  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_429F5D  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_429F9A  +
cmp eax 7FF00000h +
jz loc_429FC3  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_429F98  +
and ax 20h +
jnz loc_429F95  +
fstsw  ax +
and ax 20h +
jz loc_429F95  +
mov eax 8 +
cmp edx 1Dh +
jz loc_429F8E  +
call sub_42A007  +
pop edx  +
retn   +
***
call sub_429FF0  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  qword ptr ds:dword_4054F8+4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  qword ptr ds:dword_4054DC+10h +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_429F82  +
fmul  qword ptr ds:dword_405508+4 +
jmp loc_429F82  +
***
fld  qword ptr ds:dword_4054F0+4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  qword ptr ds:dword_4054DC+8 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_429F82  +
fmul  qword ptr ds:dword_405500+4 +
jmp loc_429F82  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_42F014 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_43033C 0 +
push esi  +
push edi  +
jz loc_42A070  +
push dword_433388  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_42A075  +
mov edi offset sub_420480 +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_42A1A2  +
jz loc_42A196  +
cmp eax 0Eh +
jg loc_42A137  +
jz loc_42A124  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_42A115  +
sub eax 1 +
jz loc_42A10C  +
sub eax 5 +
jz loc_42A0FD  +
sub eax 1 +
jnz loc_42A24B  +
mov [ebp+var_20] offset aLog10_0 +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_434248  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_42A246  +
call sub_41FDE4  +
mov dword ptr [eax] 21h +
jmp loc_42A246  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset aLog10_0 +
jmp loc_42A210  +
mov [ebp+var_20] offset dword_405514 +
jmp loc_42A0B7  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset dword_405514 +
jmp loc_42A210  +
mov [ebp+var_24] 3 +
mov [ebp+var_20] offset aExp +
jmp loc_42A210  +
sub eax 0Fh +
jz loc_42A18D  +
sub eax 9 +
jz loc_42A184  +
sub eax 1 +
jnz loc_42A24B  +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_434248  +
call edi  +
pop ecx  +
jmp loc_42A246  +
mov [ebp+var_24] 3 +
jmp loc_42A209  +
mov [ebp+var_20] offset aExp +
jmp loc_42A151  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_42A24B  +
sub eax 1Bh +
jz loc_42A202  +
sub eax 1 +
jz loc_42A1F6  +
sub eax 15h +
jz loc_42A1EA  +
sub eax 9 +
jz loc_42A1DE  +
sub eax 3 +
jz loc_42A1D2  +
sub eax 3ABh +
jz loc_42A1CB  +
sub eax 1 +
jnz loc_42A24B  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_42A198  +
mov [ebp+var_20] offset aAsin +
jmp loc_42A0B7  +
mov [ebp+var_20] offset aAcos +
jmp loc_42A0B7  +
mov [ebp+var_20] offset aSqrt +
jmp loc_42A0B7  +
mov [ebp+var_20] offset aPow +
jmp loc_42A0B7  +
mov [ebp+var_24] 2 +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_434248  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_42A246  +
call sub_41FDE4  +
mov dword ptr [eax] 22h +
fld  [ebp+var_C] +
fstp  qword ptr [esi] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41899A  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi 0FFFFh +
push esi  +
push 1B3Fh  +
call sub_428CB4  +
fld  qword ptr [ebp+8] +
mov ebx eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+0Eh] +
mov eax 7FF0h +
and ecx eax +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
cmp cx ax +
jnz loc_42A2C7  +
call sub_42AE01  +
dec eax  +
pop ecx  +
pop ecx  +
cmp eax 2 +
ja loc_42A2AB  +
push esi  +
push ebx  +
call sub_428CB4  +
fld  qword ptr [ebp+8] +
pop ecx  +
pop ecx  +
jmp loc_42A30E  +
fld  qword ptr [ebp+8] +
fld  ds:dbl_405540 +
push ebx  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 8  +
jmp loc_42A306  +
call sub_42A621  +
fst  qword ptr [ebp-8] +
fld  qword ptr [ebp+8] +
add esp 8 +
fucom  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_42A2F0  +
push esi  +
fstp  st(1) +
push ebx  +
fstp  st +
call sub_428CB4  +
fld  qword ptr [ebp-8] +
pop ecx  +
pop ecx  +
jmp loc_42A30E  +
test bl 20h +
jnz loc_42A2DE  +
push ebx  +
sub esp 10h +
fxch  st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 10h  +
call sub_42A66B  +
add esp 1Ch +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov cx word ptr [ebp+arg_0+6] +
mov edx 7FF0h +
mov ax cx +
and ax dx +
cmp ax dx +
jnz loc_42AEAB  +
fld  qword ptr [ebp+8] +
push ecx  +
push ecx  +
fstp  [esp+8+var_8] +
call sub_42AE01  +
pop ecx  +
pop ecx  +
sub eax 1 +
jz loc_42AEA4  +
sub eax 1 +
jz loc_42AE9F  +
sub eax 1 +
jz loc_42AE9B  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_42AEA1  +
push 4  +
pop eax  +
pop ebp  +
retn   +
mov eax 200h +
pop ebp  +
retn   +
movzx ecx cx +
and ecx 8000h +
test ax ax +
jnz loc_42AED7  +
test dword ptr [ebp+0Ch] 0FFFFFh +
jnz loc_42AEC8  +
cmp dword ptr [ebp+arg_0] 0 +
jz loc_42AED7  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF90h +
lea eax [ecx+80h] +
pop ebp  +
retn   +
fld  [ebp+arg_0] +
fldz   +
fucompp   +
fnstsw  ax +
test ah 44h +
jp loc_42AEF1  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFE0h +
lea eax [ecx+40h] +
pop ebp  +
retn   +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF08h +
lea eax [ecx+100h] +
pop ebp  +
retn   +
***
call sub_40DC50  +
mov ecx [eax+4] +
or dword ptr [eax] 4 +
mov [eax+4] ecx +
call sub_418E91  +
mov ecx [eax+4] +
or dword ptr [eax] 2 +
mov [eax+4] ecx +
xor eax eax +
retn   +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_42AF7C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_42AF74  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_42AF7E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_42AF64  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset dword_42EC58  +
push offset loc_419710  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_42F014 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_42B050  +
add esp 4 +
test eax eax +
jz loc_42B02F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_42AF40  +
add esp 8 +
test eax eax +
jz loc_42B02F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_42F014 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
or eax eax +
jnz loc_42B1D1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_42B218  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_42B1DF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42B20D  +
cmp edx [esp+arg_4] +
ja loc_42B20D  +
jb loc_42B216  +
cmp eax [esp+arg_0] +
jbe loc_42B216  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_42B259  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_41899A  +
jmp sub_419136  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_42B304  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_42B2F4  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_42B334  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_42B350  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_42B37C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_42B3C3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_42B38A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42B3B8  +
cmp edx [esp+arg_4] +
ja loc_42B3B8  +
jb loc_42B3C1  +
cmp eax [esp+arg_0] +
jbe loc_42B3C1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_42B3D5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_42B3E9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_42B40A  +
cmp cl 20h +
jnb loc_42B400  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_42B2E0  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_42B2E0  +
***
cmp cl 40h +
jnb loc_42B45A  +
cmp cl 20h +
jnb loc_42B450  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp dword_42FC94 0 +
jz loc_42B4A0  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_42FC94 0 +
jz loc_42B4A0  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_42B469  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  dword ptr [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_42B4FF  +
fsubp st(1) st +
test edx edx +
jns loc_42B4E7  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_42B513  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_42B513  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_42B4C3  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
bt dword_42F018 1 +
jb loc_42B9ED  +
jmp loc_42B747  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42B6FC  +
cmp ecx 10h +
jl loc_42B714  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_42B6FC  +
***
bt ecx 2 +
jnb loc_42B727  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_42B73E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_42B784[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_42B762  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_42B74F  +
mov edx ecx +
cmp ecx 20h +
jb loc_42BA1B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_42B784[edx*4]  +
jmp dword ptr ds:loc_42B794[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_42B934  +
bt dword_42F018 1 +
jb loc_42B885  +
test edi 3 +
jz loc_42B80D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_42B800  +
cmp ecx 20h +
jb loc_42B934  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_42B830[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_42B89C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_42B88D  +
cmp ecx 80h +
jb loc_42B90C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_42B89C  +
cmp ecx 20h +
jb loc_42B934  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_42B911  +
test ecx 0FFFFFFFCh +
jz loc_42B951  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_42B93C  +
test ecx ecx +
jz loc_42B964  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_42B955  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_42B970  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_42BA60  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_42B9ED  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_42B990  +
test ecx ecx +
jz loc_42BA50  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_42BA1B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_42BA00  +
and ecx 1Fh +
jz loc_42BA50  +
mov eax ecx +
shr ecx 2 +
jz loc_42BA36  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_42BA27  +
mov ecx eax +
and ecx 3 +
jz loc_42BA50  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42BA3D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_42BA7C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42BA73  +
shr eax 2 +
jz loc_42BA8E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_42BA81  +
pop ecx  +
jmp loc_42B97D  +
***
lea ecx [ebp-20h] +
jmp loc_41098F  +
***
lea ecx [ebp-20h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-20h] +
jmp sub_40F524  +
***
lea ecx [ebp-14h] +
jmp sub_40F573  +
***
lea ecx [ebp-14h] +
jmp loc_4108F3  +
***
lea ecx [ebp-20h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-20h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42CE88 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_40F5BA  +
***
mov ecx [ebp-10h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42CEE4 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_4108F3  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42CF18 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42CF44 +
jmp loc_419696  +
***
lea ecx [ebp-20h] +
jmp loc_41098F  +
***
lea ecx [ebp-20h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-20h] +
jmp sub_40F524  +
***
lea ecx [ebp-28h] +
jmp loc_41098F  +
***
lea ecx [ebp-28h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-28h] +
jmp sub_40F524  +
***
lea ecx [ebp-18h] +
jmp sub_40F573  +
***
lea ecx [ebp-18h] +
jmp loc_4108F3  +
***
lea ecx [ebp-18h] +
jmp sub_40F573  +
***
lea ecx [ebp-18h] +
jmp loc_4108F3  +
***
lea ecx [ebp-28h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-28h] +
jmp loc_41098F  +
***
lea ecx [ebp-20h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-20h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42CF70 +
jmp loc_419696  +
***
lea ecx [ebp-24h] +
jmp loc_410AB2  +
***
lea ecx [ebp-24h] +
jmp loc_410A63  +
***
lea ecx [ebp-24h] +
jmp loc_410A14  +
***
lea ecx [ebp-24h] +
jmp loc_410940  +
***
lea ecx [ebp-14h] +
jmp sub_40F573  +
***
lea ecx [ebp-14h] +
jmp loc_4108F3  +
***
lea ecx [ebp-1Ch] +
jmp loc_410AB2  +
***
lea ecx [ebp-1Ch] +
jmp loc_410A63  +
***
lea ecx [ebp-1Ch] +
jmp loc_410A14  +
***
lea ecx [ebp-1Ch] +
jmp loc_410940  +
***
lea ecx [ebp-14h] +
jmp sub_40F573  +
***
lea ecx [ebp-14h] +
jmp loc_4108F3  +
***
lea ecx [ebp-1Ch] +
jmp loc_410A14  +
***
lea ecx [ebp-1Ch] +
jmp loc_410A63  +
***
lea ecx [ebp-1Ch] +
jmp loc_410AB2  +
***
lea ecx [ebp-24h] +
jmp loc_410A14  +
***
lea ecx [ebp-24h] +
jmp loc_410A63  +
***
lea ecx [ebp-24h] +
jmp loc_410AB2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D028 +
jmp loc_419696  +
***
lea ecx [ebp-18h] +
jmp loc_41098F  +
***
lea ecx [ebp-18h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-18h] +
jmp sub_40F524  +
***
lea ecx [ebp-10h] +
jmp sub_40F573  +
***
lea ecx [ebp-10h] +
jmp loc_4108F3  +
***
lea ecx [ebp-18h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-18h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D158 +
jmp loc_419696  +
***
lea ecx [ebp-18h] +
jmp loc_41098F  +
***
lea ecx [ebp-18h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-18h] +
jmp sub_40F524  +
***
lea ecx [ebp-10h] +
jmp sub_40F573  +
***
lea ecx [ebp-10h] +
jmp loc_4108F3  +
***
lea ecx [ebp-18h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-18h] +
jmp loc_41098F  +
***
lea ecx [ebp-18h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-18h] +
jmp loc_41098F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D1F8 +
jmp loc_419696  +
***
mov ecx [ebp+8] +
jmp loc_4108F3  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_42BD64  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40F573  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D268 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_410A14  +
***
mov ecx [ebp-10h] +
jmp loc_410A63  +
***
mov ecx [ebp-10h] +
jmp loc_410AB2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D29C +
jmp loc_419696  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D2D8 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_410A63  +
***
mov ecx [ebp-10h] +
jmp loc_410AB2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D2FC +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_410AB2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D330 +
jmp loc_419696  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D2D8 +
jmp loc_419696  +
***
lea ecx [ebp-20h] +
jmp loc_410B53  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D35C +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_410B53  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D388 +
jmp loc_419696  +
***
lea ecx [ebp-1Ch] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D3B4 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_410B53  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D3E0 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D40C +
jmp loc_419696  +
***
lea ecx [ebp-240h] +
jmp loc_41108D  +
***
lea ecx [ebp-240h] +
jmp loc_41103E  +
***
lea ecx [ebp-240h] +
jmp loc_410FEF  +
***
lea ecx [ebp-240h] +
jmp loc_41103E  +
***
lea ecx [ebp-240h] +
jmp loc_41108D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-244h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D438 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41103E  +
***
mov ecx [ebp-10h] +
jmp loc_41108D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D484 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41108D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D4B8 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_411122  +
***
mov ecx [ebp-10h] +
jmp loc_411170  +
***
mov ecx [ebp-10h] +
jmp loc_4111BE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D4E4 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_411170  +
***
mov ecx [ebp-10h] +
jmp loc_4111BE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D520 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_4111BE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D554 +
jmp loc_419696  +
***
lea ecx [ebp-24h] +
jmp loc_410B53  +
***
lea ecx [ebp-24h] +
jmp sub_410D73  +
***
lea ecx [ebp-24h] +
jmp loc_410DBE  +
***
lea ecx [ebp-24h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D580 +
jmp loc_419696  +
***
lea ecx [ebp-24h] +
jmp sub_410D73  +
***
lea ecx [ebp-34h] +
jmp sub_410D73  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_42C081  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_410D73  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D5C4 +
jmp loc_419696  +
***
lea ecx [ebp-34h] +
jmp sub_410D73  +
***
lea ecx [ebp-24h] +
jmp sub_410D73  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_42C0C5  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_410D73  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D600 +
jmp loc_419696  +
***
lea ecx [ebp-28h] +
jmp sub_410D73  +
***
lea ecx [ebp-38h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D63C +
jmp loc_419696  +
***
lea ecx [ebp-84h] +
jmp sub_410D73  +
***
lea ecx [ebp-94h] +
jmp sub_410D73  +
***
lea ecx [ebp-70h] +
jmp sub_410D73  +
***
mov eax [ebp-5Ch] +
and eax 1 +
jz locret_42C142  +
and dword ptr [ebp-5Ch] 0FFFFFFFEh +
mov ecx [ebp-74h] +
jmp sub_410D73  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-98h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D670 +
jmp loc_419696  +
***
lea ecx [ebp-2D8h] +
jmp sub_410D73  +
***
lea ecx [ebp-298h] +
jmp sub_410D73  +
***
lea ecx [ebp-274h] +
jmp sub_410D73  +
***
lea ecx [ebp-284h] +
jmp sub_410D73  +
***
lea ecx [ebp-298h] +
jmp sub_410D73  +
***
lea ecx [ebp-2C8h] +
jmp sub_410D73  +
***
lea ecx [ebp-284h] +
jmp sub_410D73  +
***
lea ecx [ebp-2F8h] +
jmp sub_410D73  +
***
lea ecx [ebp-298h] +
jmp sub_410D73  +
***
lea ecx [ebp-2E8h] +
jmp sub_410D73  +
***
lea ecx [ebp-2A8h] +
jmp sub_410D73  +
***
lea ecx [ebp-2E8h] +
jmp sub_410D73  +
***
lea ecx [ebp-2B8h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2FCh] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D6C8 +
jmp loc_419696  +
***
lea ecx [ebp-38h] +
jmp loc_410B53  +
***
lea ecx [ebp-38h] +
jmp sub_410D73  +
***
lea ecx [ebp-48h] +
jmp loc_410B53  +
***
lea ecx [ebp-48h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D780 +
jmp loc_419696  +
***
lea ecx [ebp-54h] +
jmp loc_410B53  +
***
lea ecx [ebp-54h] +
jmp sub_410D73  +
***
lea ecx [ebp-44h] +
jmp loc_410B53  +
***
lea ecx [ebp-44h] +
jmp sub_410D73  +
***
lea ecx [ebp-34h] +
jmp sub_410D73  +
***
lea ecx [ebp-34h] +
jmp sub_410D73  +
***
lea ecx [ebp-34h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D7C4 +
jmp loc_419696  +
***
lea ecx [ebp-20h] +
jmp loc_41255B  +
***
lea ecx [ebp-20h] +
jmp loc_4120CD  +
***
lea ecx [ebp-20h] +
jmp loc_41207F  +
***
lea ecx [ebp-20h] +
jmp loc_4120CD  +
***
lea ecx [ebp-20h] +
jmp loc_41255B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D820 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_4120CD  +
***
mov ecx [ebp-10h] +
jmp loc_41255B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D8A0 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41255B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D8D4 +
jmp loc_419696  +
***
lea ecx [ebp-1Ch] +
jmp loc_41263F  +
***
lea ecx [ebp-1Ch] +
jmp sub_4125ED  +
***
lea ecx [ebp-1Ch] +
jmp loc_4125AF  +
***
lea ecx [ebp-1Ch] +
jmp loc_412571  +
***
lea ecx [ebp-14h] +
jmp sub_40F573  +
***
lea ecx [ebp-14h] +
jmp loc_4108F3  +
***
lea ecx [ebp-1Ch] +
jmp loc_4125AF  +
***
lea ecx [ebp-1Ch] +
jmp sub_4125ED  +
***
lea ecx [ebp-1Ch] +
jmp loc_41263F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D900 +
jmp loc_419696  +
***
lea ecx [ebp-58h] +
jmp loc_41255B  +
***
lea ecx [ebp-58h] +
jmp loc_4120CD  +
***
lea ecx [ebp-58h] +
jmp loc_41207F  +
***
lea ecx [ebp-50h] +
jmp loc_41255B  +
***
lea ecx [ebp-50h] +
jmp loc_4120CD  +
***
lea ecx [ebp-50h] +
jmp loc_41207F  +
***
lea ecx [ebp-48h] +
jmp loc_41255B  +
***
lea ecx [ebp-48h] +
jmp loc_4120CD  +
***
lea ecx [ebp-48h] +
jmp loc_41207F  +
***
lea ecx [ebp-40h] +
jmp loc_41255B  +
***
lea ecx [ebp-40h] +
jmp loc_4120CD  +
***
lea ecx [ebp-40h] +
jmp loc_41207F  +
***
lea ecx [ebp-38h] +
jmp loc_41255B  +
***
lea ecx [ebp-38h] +
jmp loc_4120CD  +
***
lea ecx [ebp-38h] +
jmp loc_41207F  +
***
lea ecx [ebp-38h] +
jmp loc_4120CD  +
***
lea ecx [ebp-38h] +
jmp loc_41255B  +
***
lea ecx [ebp-40h] +
jmp loc_4120CD  +
***
lea ecx [ebp-40h] +
jmp loc_41255B  +
***
lea ecx [ebp-48h] +
jmp loc_4120CD  +
***
lea ecx [ebp-48h] +
jmp loc_41255B  +
***
lea ecx [ebp-50h] +
jmp loc_4120CD  +
***
lea ecx [ebp-50h] +
jmp loc_41255B  +
***
lea ecx [ebp-58h] +
jmp loc_4120CD  +
***
lea ecx [ebp-58h] +
jmp loc_41255B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D988 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_4125AF  +
***
mov ecx [ebp-10h] +
jmp sub_4125ED  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DA78 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp sub_4125ED  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DAAC +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41263F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DAD8 +
jmp loc_419696  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D2D8 +
jmp loc_419696  +
***
lea ecx [ebp-18h] +
jmp loc_41263F  +
***
lea ecx [ebp-18h] +
jmp sub_4125ED  +
***
lea ecx [ebp-18h] +
jmp loc_4125AF  +
***
lea ecx [ebp-18h] +
jmp loc_412571  +
***
lea ecx [ebp-18h] +
jmp loc_4125AF  +
***
lea ecx [ebp-18h] +
jmp sub_4125ED  +
***
lea ecx [ebp-18h] +
jmp loc_41263F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DB08 +
jmp loc_419696  +
***
mov ecx [ebp-28h] +
jmp loc_410B53  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DB98 +
jmp loc_419696  +
***
lea ecx [ebp-220h] +
jmp loc_410B53  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp loc_410DBE  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-224h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DBC4 +
jmp loc_419696  +
***
lea ecx [ebp-220h] +
jmp loc_410B53  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp loc_410DBE  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-228h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DC08 +
jmp loc_419696  +
***
lea ecx [ebp-220h] +
jmp loc_410B53  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp loc_410DBE  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-23Ch] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DC4C +
jmp loc_419696  +
***
lea ecx [ebp-220h] +
jmp loc_410B53  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp loc_410DBE  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-22Ch] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DCA0 +
jmp loc_419696  +
***
lea ecx [ebp-44h] +
jmp loc_410AB2  +
***
lea ecx [ebp-44h] +
jmp loc_410A63  +
***
lea ecx [ebp-44h] +
jmp loc_410A14  +
***
lea ecx [ebp-44h] +
jmp loc_410940  +
***
lea ecx [ebp-3Ch] +
jmp sub_40F573  +
***
lea ecx [ebp-3Ch] +
jmp loc_4108F3  +
***
lea ecx [ebp-44h] +
jmp loc_410A14  +
***
lea ecx [ebp-44h] +
jmp loc_410A63  +
***
lea ecx [ebp-44h] +
jmp loc_410AB2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DD08 +
jmp loc_419696  +
***
push 0Ch  +
push dword ptr [ebp-10h]  +
call sub_418D66  +
pop ecx  +
pop ecx  +
retn   +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DDA8 +
jmp loc_419696  +
***
push 1Ch  +
push dword ptr [ebp-10h]  +
call sub_418D66  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DDDC +
jmp loc_419696  +
***
push 0Ch  +
push dword ptr [ebp-10h]  +
call sub_418D66  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DE08 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DE34 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DE60 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_414400  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_410D73  +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DE8C +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov ecx [ebp-10h] +
jmp loc_414400  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DEC8 +
jmp loc_419696  +
***
lea ecx [ebp-18h] +
jmp loc_413F99  +
***
lea ecx [ebp-18h] +
jmp loc_414400  +
***
lea ecx [ebp-18h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DF04 +
jmp loc_419696  +
***
lea ecx [ebp-14h] +
jmp loc_415CCE  +
***
lea ecx [ebp-14h] +
jmp sub_415C6B  +
***
lea ecx [ebp-14h] +
jmp loc_415C2D  +
***
lea ecx [ebp-14h] +
jmp loc_415BEF  +
***
lea ecx [ebp-14h] +
jmp loc_415C2D  +
***
lea ecx [ebp-14h] +
jmp sub_415C6B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DF40 +
jmp loc_419696  +
***
lea ecx [ebp-220h] +
jmp loc_410B53  +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
lea ecx [ebp-220h] +
jmp loc_410DBE  +
***
push 1Ch  +
push dword ptr [ebp-224h]  +
call sub_418D66  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-220h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-228h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DF94 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_413F99  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42DFE0 +
jmp loc_419696  +
***
lea ecx [ebp-30h] +
jmp sub_410D73  +
***
lea ecx [ebp-20h] +
jmp loc_410B53  +
***
lea ecx [ebp-20h] +
jmp sub_410D73  +
***
lea ecx [ebp-30h] +
jmp loc_410B53  +
***
lea ecx [ebp-30h] +
jmp sub_410D73  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E00C +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_415C2D  +
***
mov ecx [ebp-10h] +
jmp sub_415C6B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E058 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp sub_415C6B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E08C +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_415CCE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E0B8 +
jmp loc_419696  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42D2D8 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp sub_415E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E0E4 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_41665F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E110 +
jmp loc_419696  +
***
lea ecx [ebp-28h] +
jmp loc_410AF9  +
***
lea ecx [ebp-20h] +
jmp loc_41665F  +
***
lea ecx [ebp-20h] +
jmp loc_4160B4  +
***
jmp loc_41629D  +
***
lea ecx [ebp-20h] +
jmp loc_41665F  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E13C +
jmp loc_419696  +
***
lea ecx [ebp-38h] +
jmp loc_41098F  +
***
lea ecx [ebp-38h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-38h] +
jmp sub_40F524  +
***
lea ecx [ebp-30h] +
jmp loc_41098F  +
***
lea ecx [ebp-30h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-30h] +
jmp sub_40F524  +
***
lea ecx [ebp-40h] +
jmp loc_41098F  +
***
lea ecx [ebp-40h] +
jmp loc_40F5BA  +
***
lea ecx [ebp-40h] +
jmp sub_40F524  +
***
lea ecx [ebp-28h] +
jmp loc_41263F  +
***
lea ecx [ebp-28h] +
jmp sub_4125ED  +
***
lea ecx [ebp-28h] +
jmp loc_4125AF  +
***
lea ecx [ebp-28h] +
jmp loc_412571  +
***
lea ecx [ebp-20h] +
jmp loc_4108F3  +
***
lea ecx [ebp-20h] +
jmp loc_4108F3  +
***
mov eax [ebp-18h] +
and eax 4 +
jz locret_42CB98  +
and dword ptr [ebp-18h] 0FFFFFFFBh +
lea ecx [ebp-20h] +
jmp sub_40F573  +
***
retn   +
***
mov eax [ebp-18h] +
and eax 1 +
jz locret_42CBB1  +
and dword ptr [ebp-18h] 0FFFFFFFEh +
lea ecx [ebp-20h] +
jmp sub_40F573  +
***
retn   +
***
mov eax [ebp-18h] +
and eax 2 +
jz locret_42CBCA  +
and dword ptr [ebp-18h] 0FFFFFFFDh +
lea ecx [ebp-20h] +
jmp sub_40F573  +
***
retn   +
***
lea ecx [ebp-28h] +
jmp loc_4125AF  +
***
lea ecx [ebp-28h] +
jmp sub_4125ED  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E1C0 +
jmp loc_419696  +
***
lea ecx [ebp-60h] +
jmp sub_415792  +
***
lea ecx [ebp-38h] +
jmp loc_4111BE  +
***
lea ecx [ebp-38h] +
jmp loc_411170  +
***
lea ecx [ebp-38h] +
jmp loc_411122  +
***
lea ecx [ebp-38h] +
jmp loc_4110D4  +
***
lea ecx [ebp-38h] +
jmp loc_411122  +
***
lea ecx [ebp-38h] +
jmp loc_411170  +
***
lea ecx [ebp-38h] +
jmp loc_4111BE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E3D8 +
jmp loc_419696  +
***
push 10h  +
push dword ptr [ebp-14h]  +
call sub_418D66  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-1Ch] +
jmp loc_418722  +
***
lea ecx [ebp-1Ch] +
jmp sub_4186C2  +
***
lea ecx [ebp-1Ch] +
jmp loc_418684  +
***
lea ecx [ebp-1Ch] +
jmp loc_418646  +
***
lea ecx [ebp-1Ch] +
jmp loc_418684  +
***
lea ecx [ebp-1Ch] +
jmp sub_4186C2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E4A8 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_417982  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E504 +
jmp loc_419696  +
***
lea ecx [ebp-20h] +
jmp loc_418600  +
***
lea ecx [ebp-20h] +
jmp loc_417FCB  +
***
lea ecx [ebp-20h] +
jmp loc_418600  +
***
lea ecx [ebp-20h] +
jmp loc_418600  +
***
lea ecx [ebp-28h] +
jmp loc_418600  +
***
lea ecx [ebp-28h] +
jmp loc_417FCB  +
***
lea ecx [ebp-28h] +
jmp loc_418600  +
***
lea ecx [ebp-28h] +
jmp loc_418600  +
***
lea ecx [ebp-28h] +
jmp loc_418600  +
***
lea ecx [ebp-28h] +
jmp loc_417FCB  +
***
lea ecx [ebp-28h] +
jmp loc_418600  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E530 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_418600  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E5B0 +
jmp loc_419696  +
***
lea ecx [ebp-274h] +
jmp loc_417982  +
***
lea ecx [ebp-274h] +
jmp sub_417A9E  +
***
lea ecx [ebp-280h] +
jmp sub_415792  +
***
lea ecx [ebp-240h] +
jmp loc_4111BE  +
***
lea ecx [ebp-240h] +
jmp loc_411170  +
***
lea ecx [ebp-240h] +
jmp loc_411122  +
***
lea ecx [ebp-240h] +
jmp loc_4110D4  +
***
lea ecx [ebp-240h] +
jmp loc_411122  +
***
lea ecx [ebp-240h] +
jmp loc_411170  +
***
lea ecx [ebp-240h] +
jmp loc_4111BE  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-288h] +
xor ecx eax +
call sub_41899A  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E5E0 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_418684  +
***
mov ecx [ebp-10h] +
jmp sub_4186C2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E6C0 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp sub_4186C2  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E6F4 +
jmp loc_419696  +
***
mov ecx [ebp-10h] +
jmp loc_418722  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E720 +
jmp loc_419696  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41899A  +
mov eax offset dword_42E850 +
jmp loc_419696  +
***
add eax 0D4000000h +
retn   +
***
inc edx  +
add ds:0DC000000h al +
retn   +
***
inc edx  +
add ds:0E4000000h al +
retn   +
***
add eax 38000000h +
retf   +
***
inc edx  +
add ds:40000000h al +
retf   +
***
inc edx  +
add ds:48000000h al +
retf   +
***
