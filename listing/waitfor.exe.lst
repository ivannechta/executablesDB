mov edi edi +
push ebx  +
push esi  +
push edi  +
mov ebx 0FEh +
push ebx  +
mov edi offset dword_10011EC +
mov esi ecx +
push edi  +
push esi  +
call sub_100390C  +
push ebx  +
push edi  +
lea eax [esi+1FCh] +
push eax  +
call sub_100390C  +
push ebx  +
push edi  +
lea eax [esi+3FCh] +
push eax  +
call sub_100390C  +
push ebx  +
push edi  +
lea eax [esi+5F8h] +
push eax  +
call sub_100390C  +
xor eax eax +
mov [esi+3F8h] eax +
mov [esi+7F4h] eax +
mov [esi+800h] eax +
mov [esi+7FCh] eax +
mov [esi+0A44h] eax +
pop edi  +
mov dword ptr [esi+7F8h] 1 +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+7F8h] 1 +
jnz loc_1001590  +
cmp dword ptr [esi+800h] 0 +
jnz loc_1001590  +
lea eax [esi+1FCh] +
push eax  +
call sub_1005279  +
add esi 3F8h +
push esi  +
call sub_1003564  +
pop esi  +
jmp sub_1003826  +
***
mov edi edi +
push esi  +
mov esi ecx +
or dword ptr [esi+0A40h] 0FFFFFFFFh +
push edi  +
xor edi edi +
mov [esi+0A38h] edi +
mov [esi+0A3Ch] edi +
cmp [esi+9B4h] edi +
jz loc_10015F0  +
cmp [esi+964h] edi +
jz loc_10015F0  +
push 100h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
xor eax eax +
inc eax  +
jmp loc_1001661  +
lea eax [esi+5F8h] +
push edi  +
push eax  +
call sub_1003002  +
test eax eax +
jnz loc_1001610  +
cmp [esi+7FCh] edi +
jz loc_1001610  +
push 105h  +
jmp loc_10015D7  +
mov eax [esi+7FCh] +
cmp eax edi +
jz loc_1001626  +
imul eax eax +
mov [esi+0A40h] eax +
push ebx  +
push edi  +
push esi  +
call sub_1003002  +
xor ebx ebx +
inc ebx  +
test eax eax +
jz loc_1001641  +
mov [esi+0A3Ch] ebx +
mov [esi+0A38h] esi +
push edi  +
lea edi [esi+5F8h] +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_100165E  +
mov [esi+0A3Ch] ebx +
mov [esi+0A38h] edi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 7D1h +
push esi  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1003992  +
inc esi  +
cmp esi 800h +
jbe loc_1001671  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0FEh  +
mov ebx ecx +
lea eax [ebx+3FCh] +
push offset String2  +
push eax  +
call sub_100390C  +
lea edi [ebx+808h] +
xor esi esi +
push 8  +
push offset aParser2  +
lea eax [ebx+0A44h] +
push edi  +
mov dword ptr [edi+8] 0Ah +
mov dword ptr [edi+18h] 1 +
mov [edi+1Ch] esi +
mov dword ptr [edi+10h] 20000h +
mov [edi+14h] esi +
mov [edi+2Ch] eax +
mov [edi+34h] esi +
mov [edi+38h] esi +
mov [edi+30h] esi +
mov [edi+24h] esi +
mov [edi+3Ch] esi +
mov [edi+40h] esi +
mov [edi+44h] esi +
mov [edi+48h] esi +
mov [edi+28h] esi +
mov dword ptr [edi+20h] offset a? +
call sub_10038C9  +
lea eax [ebx+858h] +
xor ecx ecx +
inc ecx  +
push 8  +
mov [eax+8] ecx +
mov [eax+18h] ecx +
push offset aParser2  +
lea ecx [ebx+1FCh] +
push eax  +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 20C0h +
mov [eax+14h] esi +
mov [eax+2Ch] ecx +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov dword ptr [eax+30h] 0FEh +
mov [eax+24h] esi +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset aS_3 +
call sub_10038C9  +
lea eax [ebx+8A8h] +
push 8  +
xor ecx ecx +
inc ecx  +
push offset aParser2  +
push eax  +
mov [eax+8] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 120C0h +
mov [eax+14h] esi +
mov [eax+2Ch] esi +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov [eax+30h] esi +
mov [eax+24h] esi +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset aU +
call sub_10038C9  +
lea eax [ebx+8F8h] +
xor ecx ecx +
inc ecx  +
push 8  +
mov [eax+8] ecx +
mov [eax+18h] ecx +
push offset aParser2  +
lea ecx [ebx+3FCh] +
push eax  +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 10h +
mov [eax+14h] esi +
mov [eax+2Ch] ecx +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov dword ptr [eax+30h] 0FEh +
mov [eax+24h] esi +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset aP +
call sub_10038C9  +
lea eax [ebx+948h] +
push 8  +
xor ecx ecx +
inc ecx  +
push offset aParser2  +
push eax  +
mov [eax+8] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 2000h +
mov [eax+14h] esi +
mov [eax+2Ch] ebx +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov dword ptr [eax+30h] 0D7h +
mov [eax+24h] esi +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset aSi +
call sub_10038C9  +
lea eax [ebx+998h] +
push 8  +
push offset aParser2  +
lea ecx [ebx+7FCh] +
push eax  +
mov dword ptr [eax+8] 2 +
mov dword ptr [eax+18h] 1 +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 2000h +
mov [eax+14h] esi +
mov [eax+2Ch] ecx +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov dword ptr [eax+30h] 0FEh +
mov [eax+24h] esi +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset dword_10011F8 +
call sub_10038C9  +
lea eax [ebx+9E8h] +
xor ecx ecx +
inc ecx  +
mov [eax+8] ecx +
mov [eax+18h] ecx +
lea ecx [ebx+5F8h] +
mov [eax+1Ch] esi +
mov dword ptr [eax+10h] 40000h +
mov [eax+14h] esi +
mov [eax+2Ch] ecx +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov dword ptr [eax+30h] 0FEh +
mov [eax+24h] esi +
push 8  +
push offset aParser2  +
push eax  +
mov [eax+3Ch] esi +
mov [eax+40h] esi +
mov [eax+44h] esi +
mov [eax+48h] esi +
mov [eax+28h] esi +
mov dword ptr [eax+20h] offset dword_10011F4 +
call sub_10038C9  +
push esi  +
push edi  +
push 7  +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100657A  +
test eax eax +
jnz loc_1001973  +
push 1389h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1003992  +
call sub_1002D40  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
xor eax eax +
inc eax  +
jmp loc_1001B34  +
mov eax [ebx+8D4h] +
push 3  +
pop edi  +
push edi  +
push ebx  +
mov [ebx+3F8h] eax +
call sub_10049CB  +
push edi  +
lea eax [ebx+5F8h] +
push eax  +
call sub_10049CB  +
push edi  +
lea eax [ebx+1FCh] +
push eax  +
call sub_10049CB  +
push edi  +
push dword ptr [ebx+3F8h]  +
call sub_10049CB  +
push esi  +
lea edi [ebx+5F8h] +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_10019D4  +
cmp [ebx+964h] esi +
jz loc_10019D4  +
push 105h  +
call sub_1004B39  +
jmp loc_100195C  +
mov eax [ebx+8C4h] +
cmp eax esi +
jz loc_10019F1  +
cmp [ebx+874h] esi +
jnz loc_10019ED  +
push 10Bh  +
jmp loc_10019CD  +
cmp eax esi +
jnz loc_1001A00  +
cmp [ebx+914h] esi +
jz loc_1001A00  +
push 10Ch  +
jmp loc_10019CD  +
push esi  +
lea eax [ebx+1FCh] +
push eax  +
call sub_1003002  +
test eax eax +
jz loc_1001A19  +
cmp [ebx+964h] esi +
jz loc_10019C8  +
push esi  +
lea eax [ebx+1FCh] +
push eax  +
call sub_1003002  +
test eax eax +
jz loc_1001A34  +
cmp [ebx+0A04h] esi +
jz loc_1001A47  +
jmp loc_10019C8  +
cmp [ebx+0A04h] esi +
jz loc_1001A47  +
push esi  +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_10019C8  +
cmp [ebx+964h] esi +
jz loc_1001A5E  +
push esi  +
push ebx  +
call sub_1003002  +
test eax eax +
jz loc_10019C8  +
mov eax [ebx+7FCh] +
cmp eax esi +
jle loc_1001A6F  +
cmp eax 1869Fh +
jle loc_1001A81  +
cmp [ebx+9B4h] esi +
jz loc_1001A81  +
push 107h  +
jmp loc_10019CD  +
lea edi [ebx+1FCh] +
push edi  +
call sub_1004BEB  +
test eax eax +
jz loc_1001AA3  +
push 0FEh  +
lea eax [ebx+200h] +
push eax  +
push edi  +
call sub_100390C  +
push edi  +
call sub_100505D  +
test eax eax +
jnz loc_1001B32  +
cmp [ebx+914h] esi +
jz loc_1001ADF  +
lea eax [ebx+3FCh] +
cmp eax esi +
jz loc_1001ADF  +
push esi  +
xor edi edi +
inc edi  +
push edi  +
push offset String2  +
push eax  +
call sub_1003023  +
test eax eax +
jnz loc_1001AE2  +
mov [ebx+7F4h] edi +
jmp loc_1001B1A  +
xor edi edi +
inc edi  +
cmp [ebx+914h] esi +
jnz loc_1001B1A  +
cmp [ebx+874h] esi +
jnz loc_1001AFA  +
cmp [ebx+8C4h] esi +
jz loc_1001B1A  +
lea eax [ebx+3FCh] +
mov [ebx+7F4h] edi +
cmp eax esi +
jz loc_1001B1A  +
push 0FEh  +
push offset dword_10011F4  +
push eax  +
call sub_100390C  +
cmp [ebx+3F8h] esi +
jnz loc_1001B32  +
push 1FCh  +
call sub_1003203  +
mov [ebx+3F8h] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+1FCh] +
push edi  +
call sub_100505D  +
xor ebx ebx +
mov [esi+800h] eax +
cmp eax ebx +
jz loc_1001B9A  +
push ebx  +
push dword ptr [esi+3F8h]  +
call sub_1003002  +
test eax eax +
jz loc_1001B9A  +
mov eax ds:_iob +
push offset asc_1001220  +
add eax 40h +
push eax  +
call sub_1003992  +
push 10Ah  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
jmp loc_1001D20  +
push ebx  +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_1001CBE  +
cmp [esi+800h] ebx +
jnz loc_1001CBE  +
push ebx  +
push dword ptr [esi+3F8h]  +
call sub_1003002  +
mov edi 0FEh +
test eax eax +
jz loc_1001BD9  +
push dword ptr [esi+3F8h]  +
call sub_10032AC  +
shr eax 1 +
jmp loc_1001BDB  +
mov eax edi +
push dword ptr [esi+7F4h]  +
lea ebx [esi+3FCh] +
push edi  +
push ebx  +
push eax  +
push dword ptr [esi+3F8h]  +
lea eax [esi+1FCh] +
push eax  +
call sub_1005451  +
test eax eax +
jnz loc_1001C4F  +
push 1389h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1003992  +
call sub_1002D40  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
mov byte ptr [ebx] 0 +
inc ebx  +
dec edi  +
jnz loc_1001C40  +
xor eax eax +
inc eax  +
jmp loc_1001D28  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_1001C6E  +
cmp eax 50010001h +
jz loc_1001D2C  +
cmp eax 0A0010001h +
jnz loc_1001CB5  +
and dword ptr [esi+7F8h] 0 +
push 138Ah  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1003992  +
call sub_1002D40  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
mov byte ptr [ebx] 0 +
inc ebx  +
dec edi  +
jnz loc_1001CB5  +
xor ebx ebx +
push ebx  +
lea edi [esi+1FCh] +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_1001D26  +
push edi  +
call sub_1004BEB  +
test eax eax +
jz loc_1001CDF  +
lea edi [esi+200h] +
push edi  +
call sub_100505D  +
cmp eax 1 +
jnz loc_1001D26  +
push ebx  +
push dword ptr [esi+3F8h]  +
call sub_1003002  +
test eax eax +
jbe loc_1001D26  +
mov eax ds:_iob +
push offset asc_1001220  +
add eax 20h +
push eax  +
call sub_1003992  +
push 10Ah  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1003992  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
and dword ptr [esi+7F8h] 0 +
jmp loc_1001CB5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ecx+0A38h] +
push esi  +
xor esi esi +
mov [ebp+var_10] ecx +
mov [ebp+var_4] esi +
cmp eax esi +
jnz loc_1001D6A  +
push 7Bh  +
call ds:SetLastError  +
call sub_1002DD3  +
xor eax eax +
inc eax  +
jmp loc_1001E24  +
push ebx  +
push edi  +
mov edi ds:GetConsoleOutputCP +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push eax  +
push esi  +
call edi  +
mov ebx ds:WideCharToMultiByte +
push eax  +
call ebx  +
mov [ebp+dwBytes] eax +
cmp eax esi +
jz loc_1001DA4  +
dec eax  +
mov [ebp+var_8] eax +
mov eax [ebp+var_10] +
push esi  +
push dword ptr [eax+0A38h]  +
call sub_1003002  +
cmp eax [ebp+var_8] +
jz loc_1001DA8  +
push 7Bh  +
jmp loc_1001DBC  +
push [ebp+dwBytes]  +
call sub_1003203  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_1001DC9  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1002DD3  +
jmp loc_1001E43  +
push esi  +
push esi  +
push [ebp+dwBytes]  +
push eax  +
mov eax [ebp+var_10] +
push 0FFFFFFFFh  +
push dword ptr [eax+0A38h]  +
push esi  +
call edi  +
push eax  +
call ebx  +
mov edi [ebp+var_4] +
xor ecx ecx +
cmp [ebp+var_8] esi +
jbe loc_1001E13  +
mov al [ecx+edi] +
cmp al 30h +
jl loc_1001DF5  +
cmp al 39h +
jle loc_1001E0D  +
cmp al 41h +
jl loc_1001DFD  +
cmp al 5Ah +
jle loc_1001E0D  +
mov dl al +
sub dl 61h +
cmp dl 19h +
jbe loc_1001E0D  +
sub al 80h +
cmp al 7Fh +
ja loc_1001E27  +
inc ecx  +
cmp ecx [ebp+var_8] +
jb loc_1001DEA  +
cmp edi esi +
jz loc_1001E20  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
push 109h  +
mov [ebp+var_4] esi +
call sub_1004B39  +
push eax  +
call sub_1002D6C  +
xor eax eax +
inc eax  +
jmp loc_1001E22  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1001E63  +
cmp ecx 7FFFFFFFh +
jbe loc_1001E68  +
mov eax 80070057h +
test eax eax +
jl loc_1001EA5  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1001E95  +
cmp eax esi +
ja loc_1001E95  +
jnz loc_1001EA0  +
jmp loc_1001E9A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A04h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi 1F8h +
xor ebx ebx +
push esi  +
lea eax [ebp+var_5F4] +
push ebx  +
push eax  +
mov [ebp+hObject] ecx +
mov dword ptr [ebp+Buffer] ebx +
call memset  +
push esi  +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov [ebp+NumberOfBytesWritten] ebx +
mov dword ptr [ebp+Name] ebx +
call memset  +
push 0Eh  +
pop ecx  +
push 1C4h  +
lea eax [ebp+var_7BC] +
push ebx  +
mov esi offset a_MailslotWaitf +
lea edi [ebp+var_7F4] +
push eax  +
movs   +
call memset  +
push 1F8h  +
lea eax [ebp+var_3F8] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push 0Eh  +
pop ecx  +
push 1C4h  +
lea eax [ebp+var_9B8] +
push ebx  +
mov esi offset aMailslotWaitfo +
lea edi [ebp+var_9F0] +
push eax  +
movs   +
call memset  +
add esp 3Ch +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
mov esi 0FEh +
push eax  +
mov [ebp+NumberOfBytesRead] ebx +
mov [ebp+nSize] esi +
call ds:GetComputerNameW  +
cmp eax ebx +
jnz loc_1001FA8  +
push 1F7h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
xor eax eax +
inc eax  +
jmp loc_1002392  +
mov edi [ebp+hObject] +
push ebx  +
push dword ptr [edi+0A38h]  +
call sub_1003002  +
cmp eax 0D6h +
jbe loc_1001FC8  +
push 108h  +
jmp loc_1001F8C  +
mov ecx edi +
call sub_1001D3A  +
cmp eax 1 +
jnz loc_1001FE9  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1004B51  +
jmp loc_1001FA0  +
lea eax [edi+1FCh] +
push ebx  +
push eax  +
call sub_1003002  +
test eax eax +
jbe loc_1002085  +
lea eax [edi+1FCh] +
push eax  +
call sub_1004BEB  +
test eax eax +
jz loc_1002036  +
push esi  +
lea eax [edi+200h] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100390C  +
push esi  +
lea eax [ebp+String] +
push eax  +
lea eax [edi+1FCh] +
push eax  +
call sub_100390C  +
lea eax [edi+1FCh] +
push eax  +
call sub_1004C3A  +
test eax eax +
lea eax [edi+1FCh] +
jz loc_100208B  +
push eax  +
call sub_100505D  +
test eax eax +
jnz loc_1002085  +
push ebx  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String] +
push eax  +
lea eax [edi+1FCh] +
push eax  +
mov [ebp+nSize] esi +
call sub_1004CE4  +
test eax eax +
jnz loc_1002099  +
push 106h  +
jmp loc_1001F8C  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100390C  +
cmp [edi+0A3Ch] ebx +
jz loc_10020B1  +
cmp [edi+7FCh] ebx +
jnz loc_10020B1  +
cmp [edi+9B4h] ebx +
jnz loc_10020C0  +
push ebx  +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_1002277  +
push ebx  +
lea eax [edi+1FCh] +
push eax  +
call sub_1003002  +
test eax eax +
jnz loc_10020F3  +
push dword ptr [edi+0A38h]  +
lea eax [ebp+var_9F0] +
push eax  +
lea eax [ebp+Name] +
push esi  +
push eax  +
call sub_1001E4D  +
add esp 10h +
jmp loc_1002178  +
push esi  +
push offset asc_1001270  +
lea eax [ebp+Name] +
push eax  +
call sub_100390C  +
lea eax [ebp+String] +
push eax  +
call sub_1004BEB  +
test eax eax +
push esi  +
lea eax [ebp+var_3F8] +
jnz loc_1002122  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+Name] +
push eax  +
call sub_100394F  +
push esi  +
push offset asc_100126C  +
lea eax [ebp+Name] +
push eax  +
call sub_100394F  +
push esi  +
push offset aMailslotWait_0  +
lea eax [ebp+Name] +
push eax  +
call sub_100394F  +
push esi  +
push offset asc_100126C  +
lea eax [ebp+Name] +
push eax  +
call sub_100394F  +
push esi  +
push dword ptr [edi+0A38h]  +
lea eax [ebp+Name] +
push eax  +
call sub_100394F  +
push ebx  +
push 80h  +
push 3  +
push ebx  +
push 1  +
push 40000000h  +
lea eax [ebp+Name] +
push eax  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_10021A6  +
push 1F9h  +
jmp loc_1001F8C  +
push ebx  +
lea eax [edi+1FCh] +
push eax  +
call sub_1003002  +
push ebx  +
test eax eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
jbe loc_10021D6  +
lea eax [ebp+String] +
push eax  +
call sub_1003002  +
inc eax  +
push eax  +
lea eax [ebp+String] +
jmp loc_10021EA  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1003002  +
inc eax  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:WriteFile  +
cmp eax ebx +
jnz loc_1002253  +
call ds:GetLastError  +
cmp eax 4CFh +
jz loc_100222E  +
push dword ptr [edi+0A38h]  +
push 0FBh  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 1  +
push eax  +
call sub_10049E6  +
add esp 14h +
jmp loc_1001FA0  +
push 1FAh  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
push esi  +
call ds:CloseHandle  +
jmp loc_1001FA0  +
push esi  +
call ds:CloseHandle  +
mov eax ds:_iob +
push offset asc_1001220  +
add eax 20h +
push eax  +
call sub_1003992  +
push 1F6h  +
jmp loc_100237C  +
push ebx  +
lea eax [edi+1FCh] +
push eax  +
call sub_1003002  +
push dword ptr [edi+0A38h]  +
test eax eax +
jnz loc_10022A7  +
lea eax [ebp+var_7F4] +
push eax  +
lea eax [ebp+Name] +
push esi  +
push eax  +
call sub_1001E4D  +
add esp 10h +
jmp loc_10022D4  +
mov eax offset asc_100126C +
push eax  +
push offset aMailslotWait_0  +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset asc_1001270  +
push offset aSSSSSS  +
lea eax [ebp+Name] +
push esi  +
push eax  +
call sub_1001E4D  +
add esp 24h +
push ebx  +
push dword ptr [edi+0A40h]  +
lea eax [ebp+Name] +
push 100h  +
push eax  +
call ds:CreateMailslotW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1002302  +
push 0FCh  +
jmp loc_1001F8C  +
push ebx  +
lea ecx [ebp+NumberOfBytesRead] +
push ecx  +
push esi  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
call ds:ReadFile  +
push [ebp+hObject]  +
mov [ebp+var_9F4] eax +
call ds:CloseHandle  +
cmp [ebp+var_9F4] ebx +
jnz loc_1002364  +
mov ebx ds:GetLastError +
call ebx  +
mov [ebp+var_9F4] eax +
call ebx  +
cmp eax 79h +
jnz loc_1002358  +
push dword ptr [edi+0A38h]  +
push 0FDh  +
jmp loc_100220E  +
push [ebp+var_9F4]  +
push esi  +
jmp loc_100220E  +
mov eax ds:_iob +
push offset asc_1001220  +
add eax 20h +
push eax  +
call sub_1003992  +
push 1F5h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1003992  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002710  +
leave   +
retn   +
***
call __EH_prolog3_GS  +
mov edi [ebp+0Ch] +
lea ecx [ebp-0A58h] +
call sub_10014F5  +
and dword ptr [ebp-4] 0 +
push 0  +
push 0  +
xor esi esi +
inc esi  +
push esi  +
push 0  +
call ds:HeapSetInformation  +
cmp [ebp+8] esi +
jnz loc_100240C  +
push 105h  +
call sub_1004B39  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1003992  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A58h] +
call sub_100156D  +
mov eax esi +
call sub_1002791  +
retn   +
push edi  +
push dword ptr [ebp+8]  +
lea ecx [ebp-0A58h] +
call sub_1001696  +
cmp eax esi +
jz loc_10023F5  +
cmp [ebp-14h] esi +
jnz loc_1002439  +
cmp dword ptr [ebp+8] 2 +
ja loc_10023DC  +
lea ecx [ebp-0A58h] +
call sub_1001669  +
xor esi esi +
jmp loc_10023F5  +
lea ecx [ebp-0A58h] +
call sub_10015A7  +
cmp eax esi +
jz loc_10023F5  +
lea ecx [ebp-0A58h] +
call sub_1001B40  +
cmp eax esi +
jz loc_10023F5  +
lea ecx [ebp-0A58h] +
call sub_1001EAC  +
cmp eax esi +
jnz loc_1002435  +
jmp loc_10023F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002489  +
test eax eax +
jnz loc_100248E  +
mov ecx [esi] +
test ecx ecx +
jz loc_1002486  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100247A  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1008048 +
push offset dword_1008038  +
push dword_1008044  +
mov dword_1008038 eax +
push offset dword_1008028  +
push offset dword_100802C  +
push offset dword_1008024  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1008034 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1002516  +
cmp eax esi +
jnz loc_1002509  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1002519  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10024F0  +
xor esi esi +
inc esi  +
mov eax dword_1008498 +
cmp eax esi +
jnz loc_100252C  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1002567  +
mov eax dword_1008498 +
test eax eax +
jnz loc_1002561  +
mov dword_1008498 esi +
push offset dword_10011CC  +
push offset dword_10011C0  +
call sub_100246D  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002567  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1002631  +
mov dword_1008040 esi +
mov eax dword_1008498 +
cmp eax esi +
jnz loc_100258B  +
push offset dword_10011BC  +
push offset dword_10011B4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1008498 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1002598  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10084A0 ebx +
jz loc_10025B9  +
push offset dword_10084A0  +
call sub_1002899  +
pop ecx  +
test eax eax +
jz loc_10025B9  +
push ebx  +
push 2  +
push ebx  +
call dword_10084A0  +
push dword_1008028  +
push dword_100802C  +
push dword_1008024  +
call sub_10023A6  +
add esp 0Ch +
mov dword_100803C eax +
cmp dword_1008030 ebx +
jnz loc_1002617  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100803C eax +
xor ebx ebx +
cmp dword_1008030 ebx +
jnz loc_1002617  +
push eax  +
call ds:_exit  +
cmp dword_1008040 ebx +
jnz loc_1002625  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100803C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100264E  +
xor eax eax +
jmp loc_100269B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100264A  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1002688  +
cmp ecx 20Bh +
jnz loc_100264A  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100264A  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1002696  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100264A  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1008030 eax +
call sub_1002A32  +
push eax  +
call ds:__set_app_type  +
or dword_1008490 0FFFFFFFFh +
or dword_1008494 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1008050 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100804C +
mov [eax] ecx +
call sub_10029C4  +
cmp dword_1008010 0 +
jnz loc_10026F4  +
push offset sub_10029C4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10029AC  +
xor eax eax +
retn   +
***
call sub_1002A71  +
jmp sub_10024CE  +
***
cmp ecx dword_1008000 +
jnz loc_100271B  +
retn 0  +
jmp loc_1002B07  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1008000 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1002710  +
jmp __EH_epilog3  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10027E2  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10027E2  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10027DC  +
cmp eax 19930521h +
jz loc_10027DC  +
cmp eax 19930522h +
jz loc_10027DC  +
cmp eax 1994000h +
jnz loc_10027E2  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10027A4+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002826  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002822  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100288D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002885  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100288F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1002875  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002810  +
pop ecx  +
test eax eax +
jz loc_10028F6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002850  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10028F6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10028FF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1002710  +
push offset dword_1008000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002A25  +
cmp ecx 0FFFFFFFFh +
jz loc_1002A25  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002A1E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002A1E  +
cmp edx 10000000h +
jnb loc_1002A1E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1002A1E  +
jmp loc_1002A19  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002A67  +
push eax  +
call sub_10029CC  +
test eax eax +
jz loc_1002A67  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1002A5C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002A67  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1008000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002AA3  +
test eax ebx +
jz loc_1002AA3  +
not eax  +
mov dword_1008004 eax +
jmp loc_1002AFE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1002AEA  +
test dword_1008000 ebx +
jnz loc_1002AEF  +
mov esi 0BB40E64Fh +
mov dword_1008000 esi +
not esi  +
mov dword_1008004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1008158 eax +
mov dword_1008154 ecx +
mov dword_1008150 edx +
mov dword_100814C ebx +
mov dword_1008148 esi +
mov dword_1008144 edi +
mov word_1008170 ss +
mov word_1008164 cs +
mov word_1008140 ds +
mov word_100813C es +
mov word_1008138 fs +
mov word_1008134 gs +
pushf   +
pop dword_1008168  +
mov eax [ebp+0] +
mov dword_100815C eax +
mov eax [ebp+4] +
mov dword_1008160 eax +
lea eax [ebp+8] +
mov dword_100816C eax +
mov eax [ebp-320h] +
mov dword_10080A8 10001h +
mov eax dword_1008160 +
mov dword_1008064 eax +
mov dword_1008058 0C0000409h +
mov dword_100805C 1 +
mov eax dword_1008000 +
mov [ebp-328h] eax +
mov eax dword_1008004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1008378 edi +
jnz loc_1002C32  +
push dword_1008380  +
call sub_10068E1  +
test eax eax +
jnz loc_1002C2E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002CC6  +
push 42Bh  +
jmp loc_1002CC0  +
mov eax edi +
pop edi  +
retn   +
cmp dword_1008380 0 +
jnz loc_1002C16  +
call sub_1006902  +
push eax  +
mov dword_1008380 eax +
call sub_10068E1  +
test eax eax +
jz loc_1002CB4  +
push 0  +
push offset dword_10012F8  +
push dword_1008380  +
call sub_1006C24  +
test eax eax +
jnz loc_1002CB4  +
push 3  +
push dword_1008380  +
call sub_1006DEF  +
cmp eax edi +
jnz loc_1002CB4  +
push 3  +
push dword_1008380  +
call sub_1006DEF  +
cmp eax 2 +
jnz loc_1002CB4  +
push 3  +
push dword_1008380  +
call sub_1006DEF  +
cmp eax 3 +
jnz loc_1002CB4  +
push 0  +
mov dword_1008378 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1002CC6  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1008378 0 +
push esi  +
jz loc_1002D34  +
push 3  +
push dword_1008380  +
call sub_1006F4A  +
cmp eax [ebp+arg_0] +
jbe loc_1002D34  +
push [ebp+arg_0]  +
push 3  +
push dword_1008380  +
call sub_10071E1  +
test eax eax +
jz loc_1002D34  +
push [ebp+arg_0]  +
push 3  +
push dword_1008380  +
call sub_1006FE6  +
mov esi eax +
test esi esi +
jz loc_1002D34  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1002D34  +
mov eax [esi+0Ch] +
jmp loc_1002D36  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_1008380 +
test eax eax +
jz loc_1002D61  +
push eax  +
call sub_10068E1  +
test eax eax +
jz loc_1002D61  +
push 0  +
push dword_1008380  +
call sub_1006FB7  +
retn   +
mov eax offset dword_10012F8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1002D95  +
call esi  +
test eax eax +
jnz loc_1002D91  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1002DC8  +
call sub_1002BF9  +
test eax eax +
jz loc_1002D91  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_1008380  +
call sub_100709F  +
test eax eax +
jnz loc_1002DBE  +
call esi  +
test eax eax +
jnz loc_1002D91  +
push 8  +
jmp loc_1002D8B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1002BF9  +
test eax eax +
jz loc_1002E52  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1002E2C  +
cmp [ebp+hMem] edi +
jz loc_1002E44  +
push [ebp+hMem]  +
call sub_1002D6C  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1002E50  +
cmp [ebp+hMem] edi +
jz loc_1002E44  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1002E44  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1002E4E  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1002DD3  +
test eax eax +
jz loc_1002E7C  +
call sub_1002D40  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1003992  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1008014 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1008018 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_1008384 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002710  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1002F5A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1002F56  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1002FD7  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1002FCB  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1002FCB  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1002FD3  +
sub edi 0 +
jz loc_1002FA7  +
dec edi  +
jz loc_1002FA3  +
dec edi  +
jnz loc_1002FD3  +
push 0FFFFFFF4h  +
jmp loc_1002FA9  +
push 0FFFFFFF5h  +
jmp loc_1002FA9  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1002FD3  +
cmp eax 0FFFFFFFFh +
jz loc_1002FD3  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1002FD5  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1002FF0  +
xor eax eax +
jmp loc_1002FF9  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1003011  +
xor eax eax +
jmp loc_100301A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1003061  +
cmp [ebp+lpString2] 0 +
jz loc_1003061  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1003047  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1003075  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003073  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_10030BC  +
cmp [ebp+lpString2] 0 +
jz loc_10030BC  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10030A2  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_10030D0  +
call ds:GetLastError  +
test eax eax +
jnz loc_10030CE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_100319D  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_100319D  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1003108  +
cmp [eax] edi +
jnz loc_100319D  +
mov eax [eax] +
cmp eax edi +
jz loc_1003116  +
cmp eax 1 +
jbe loc_1003184  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_100312D  +
cmp esi edi +
jz loc_100312D  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1003143  +
push edi  +
push [ebp+lpString]  +
call sub_1002FE1  +
cmp eax esi +
jle loc_1003143  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1003196  +
call ds:GetLastError  +
test eax eax +
jnz loc_100316B  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_10031AF  +
cmp esi edi +
jz loc_10031AF  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_10031AF  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_10031B1  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1003191  +
call ds:GetLastError  +
test eax eax +
jnz loc_10031AF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10031D6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10031F8  +
push 57h  +
jmp loc_10031F2  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10031F8  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_10031FA  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1003229  +
call ds:GetLastError  +
test eax eax +
jnz loc_100329D  +
push 57h  +
call ds:SetLastError  +
jmp loc_100329D  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100329D  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100329F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1003284  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1003284  +
push 570h  +
call ds:SetLastError  +
call sub_1002DD3  +
jmp loc_1003296  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003296  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_10032CE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10032C9  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_10032F0  +
push [ebp+lpMem]  +
call sub_10031BD  +
test eax eax +
jz loc_10032C9  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10032C9  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1003329  +
cmp [ebp+arg_4] eax +
jz loc_1003325  +
mov dl [ebx] +
test dl dl +
jz loc_1003325  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100330D  +
test esi esi +
jnz loc_1003330  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100333C  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100337D  +
cmp [ebp+arg_4] eax +
jz loc_1003379  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1003379  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100335C  +
test esi esi +
jnz loc_1003385  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1003393  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10033C8  +
cmp eax esi +
ja loc_10033C8  +
jz loc_10033CD  +
jmp loc_10033D5  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10033DE  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1003406  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003449  +
push 57h  +
jmp loc_1003443  +
push 0  +
push esi  +
call sub_1003002  +
test eax eax +
jz loc_100343E  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_100343E  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_100342E  +
call ds:StrChrIW  +
jmp loc_1003434  +
call ds:StrChrW  +
test eax eax +
jz loc_100343E  +
sub eax esi +
sar eax 1 +
jmp loc_100344C  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_10034BB  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_10034BB  +
push esi  +
push edi  +
call sub_1003002  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_10034B4  +
push esi  +
push ebx  +
call sub_1003002  +
test eax eax +
jz loc_10034B4  +
push esi  +
push ebx  +
call sub_1003002  +
cmp [ebp+arg_C] eax +
jnb loc_10034B4  +
cmp [ebp+arg_0] esi +
jbe loc_10034B4  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_10033EB  +
cmp eax 0FFFFFFFFh +
jnz loc_10034D0  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1003498  +
push 490h  +
jmp loc_10034C7  +
call ds:GetLastError  +
test eax eax +
jnz loc_10034CD  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1003543  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1003543  +
push 0  +
push edi  +
call sub_1003002  +
push 0  +
push ebx  +
mov esi eax +
call sub_1003002  +
test eax eax +
jz loc_1003536  +
test esi esi +
jz loc_1003536  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1003536  +
sub esi ecx +
cmp esi eax +
jb loc_1003536  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_100352C  +
call ds:StrStrIW  +
jmp loc_1003532  +
call ds:StrStrW  +
test eax eax +
jnz loc_100353D  +
push 490h  +
jmp loc_100354F  +
sub eax edi +
sar eax 1 +
jmp loc_1003558  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003555  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1003587  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003583  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10035D5  +
cmp dword ptr [esi] 0 +
jnz loc_1003591  +
xor eax eax +
inc eax  +
jmp loc_10035D5  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_10035B5  +
push dword ptr [esi]  +
call sub_10032AC  +
cmp eax 0FFFFFFFFh +
jnz loc_10035B9  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10035D4  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_10036A4  +
mov eax [esi] +
cmp eax edi +
jz loc_10036A4  +
cmp [ebp+dwBytes] edi +
jnz loc_1003612  +
push esi  +
call sub_1003564  +
jmp loc_10036B8  +
push eax  +
call sub_10031BD  +
test eax eax +
jnz loc_1003623  +
mov [esi] edi +
jmp loc_10036B6  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10036B6  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1003661  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003658  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10036B6  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10036B8  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1003646  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1003646  +
push 570h  +
call ds:SetLastError  +
call sub_1002DD3  +
jmp loc_1003658  +
call ds:GetLastError  +
test eax eax +
jnz loc_10036B6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10036DB  +
cmp edx 7FFFFFFFh +
jbe loc_10036E0  +
mov eax 80070057h +
test eax eax +
jl loc_10036F6  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10032F9  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1003715  +
cmp edx 7FFFFFFFh +
jbe loc_100371A  +
mov eax 80070057h +
test eax eax +
jl loc_1003730  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1003348  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1003752  +
cmp edx ebx +
jbe loc_1003757  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100378E  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_100377B  +
cmp [eax] cx +
jz loc_1003777  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100376D  +
cmp esi ecx +
jnz loc_1003784  +
mov [ebp+arg_4] 80070057h +
jmp loc_1003788  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_1003790  +
xor ecx ecx +
test eax eax +
jl loc_10037A4  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1003348  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10037C4  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10037C9  +
mov eax 80070057h +
test eax eax +
jl loc_10037E2  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100339F  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1003800  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1003805  +
mov eax 80070057h +
test eax eax +
jl loc_100381F  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_100339F  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_1008380  +
call sub_10068E1  +
cmp eax 1 +
jnz loc_10038B0  +
push edi  +
push 3  +
push dword_1008380  +
call sub_1006F4A  +
mov edi eax +
test edi edi +
jz loc_10038A5  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_1008380  +
call sub_10071E1  +
cmp eax 10000h +
jnz loc_100389E  +
push esi  +
push 3  +
push dword_1008380  +
call sub_1006FE6  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100389E  +
add eax 0Ch +
push eax  +
call sub_1003564  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
push esi  +
push 3  +
push dword_1008380  +
call sub_1006F13  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1003854  +
pop esi  +
push offset dword_1008380  +
call sub_1006977  +
pop edi  +
cmp dword_100837C 1 +
jnz loc_10038BF  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10038FC  +
cmp [ebp+arg_4] 0 +
jz loc_10038FC  +
cmp [ebp+arg_8] 0 +
jle loc_10038FC  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10036C5  +
test eax eax +
jge loc_1003902  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10038FE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100393F  +
cmp [ebp+arg_4] 0 +
jz loc_100393F  +
cmp [ebp+arg_8] 0 +
jle loc_100393F  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10036FF  +
test eax eax +
jge loc_1003945  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1003941  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1003982  +
cmp [ebp+arg_4] 0 +
jz loc_1003982  +
cmp [ebp+arg_8] 0 +
jle loc_1003982  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1003739  +
test eax eax +
jge loc_1003988  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1003984  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1003BD7  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1003BD7  +
push [ebp+hConsoleOutput]  +
call sub_1002F33  +
cmp eax 1 +
jnz loc_1003AC4  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_10039DB  +
push 0FFFFFFF5h  +
jmp loc_10039EB  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1003AAC  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1003002  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1003A1F  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1003A84  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1003AA8  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1003002  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1003A84  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1003A56  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1003A8C  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1003A8C  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_1003A46  +
xor eax eax +
inc eax  +
jmp loc_1003BEB  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1002E5A  +
call sub_1003826  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1003A92  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003BE9  +
push 42Bh  +
jmp loc_1003BE3  +
push edi  +
push ebx  +
call sub_1003002  +
push 100h  +
push edi  +
mov esi offset unk_1008390 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1003A84  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1003B04  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1003B61  +
cmp eax ebx +
jbe loc_1003B6F  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1003B41  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1003B44  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1003B0D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003B61  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1003A95  +
cmp eax [ebp+cchWideChar] +
jnb loc_1003B77  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1003B61  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1003AEF  +
jmp loc_1003A84  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003BE9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_1003C56  +
call ds:GetLastError  +
test eax eax +
jnz loc_1003C4F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1003E51  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_1003E0E  +
cmp edi 0Fh +
jz loc_1003C86  +
cmp edi 3 +
jz loc_1003C86  +
cmp edi 0FFFFFFFFh +
jz loc_1003C86  +
mov [ebp+var_40] 1 +
jmp loc_1003CA2  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1003E0E  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_1003D14  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1003E0E  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_1003E12  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_10030D9  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_1003D2C  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1003E02  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1003E12  +
cmp ax 8 +
jnz loc_1003DBA  +
cmp [ebp+var_28] 0 +
jz loc_1003CC0  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10037EB  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10037EB  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_10037EB  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_1003CC0  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_1003DD2  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_1001310  +
jmp loc_1003DF6  +
cmp ax 0Ah +
jz loc_1003CC0  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_1003CC0  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1003E50  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001308  +
lea eax [ebp+var_18] +
push eax  +
call sub_100390C  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002710  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1003E7E  +
cmp [ebp+arg_8] 0 +
jnz loc_1003E7E  +
xor eax eax +
jmp loc_1003FD2  +
call sub_1002BF9  +
test eax eax +
jz loc_1003E77  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_1008380  +
call sub_1006F4A  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1003ECB  +
push esi  +
push dword_1008380  +
call sub_1006F7E  +
test eax eax +
jz loc_1003F96  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1006E6A  +
cmp eax 0FFFFFFFFh +
jz loc_1003F96  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_10071E1  +
mov edi offset aBuffer +
test eax eax +
jz loc_1003F19  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_1006FE6  +
mov esi eax +
test esi esi +
jz loc_1003F96  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1003F96  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1003F58  +
mov edi [ebp+arg_8] +
jmp loc_1003F63  +
push 10h  +
call sub_1003203  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1003F96  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_10038C9  +
push esi  +
push ebx  +
push 3  +
push dword_1008380  +
call sub_1007148  +
test eax eax +
jnz loc_1003EF8  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1003564  +
jmp loc_1003F96  +
push 0  +
push ebx  +
call sub_1003002  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1003F79  +
cmp edi 100h +
jbe loc_1003F90  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1003F90  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1003F9A  +
call sub_1003203  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1003F96  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1003FA5  +
xor eax eax +
jmp loc_1003FCF  +
lea eax [esi+0Ch] +
push eax  +
call sub_10035DF  +
jmp loc_1003F89  +
test ebx ebx +
jz loc_1003FB5  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_100390C  +
jmp loc_1003FCC  +
cmp [ebp+arg_C] 1 +
jnz loc_1003FCC  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_100131C +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_10040D8  +
push eax  +
push ebx  +
call sub_1003002  +
test eax eax +
jz loc_10040D8  +
cmp [ebp+lpStart] 0 +
jz loc_1004037  +
push 0  +
push [ebp+lpStart]  +
call sub_1003002  +
test eax eax +
jnz loc_100403D  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_100404C  +
cmp edi 1 +
jnz loc_100406E  +
cmp word ptr [ebx] 0 +
jz loc_100406B  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100406B  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1004052  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1004078  +
cmp edi 2 +
jnz loc_10040BA  +
cmp edi 2 +
jnz loc_100407F  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_10040BA  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_10040A0  +
cmp [ebp+var_14] 0 +
jnz loc_10040A4  +
mov [ebp+var_14] esi +
jmp loc_10040A4  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1004087  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_10040BA  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_10040D4  +
push 0  +
push [ebp+var_18]  +
call sub_1003002  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_100390C  +
mov eax ebx +
jmp loc_10040DD  +
mov eax offset dword_10012F8 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002710  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1004116  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004112  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100417D  +
cmp [ebp+arg_0] esi +
jnz loc_1004128  +
push [ebp+arg_4]  +
call sub_1002D6C  +
xor eax eax +
inc eax  +
jmp loc_100417D  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1003E66  +
mov edi eax +
test edi edi +
jz loc_1004168  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10037AF  +
cmp eax 8007007Ah +
jz loc_1004129  +
test eax eax +
jge loc_1004176  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100417C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004164  +
push 8  +
jmp loc_100415E  +
push edi  +
call sub_1002D6C  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1003E66  +
mov ebx eax +
test ebx ebx +
jnz loc_10041AD  +
push 8  +
pop eax  +
jmp loc_10041EF  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1003E66  +
mov esi eax +
test esi esi +
jz loc_10041A8  +
push esi  +
call sub_10032AC  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_10032AC  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_10041EF  +
push ebx  +
call sub_1002D6C  +
test eax eax +
jz loc_10041A8  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1004225  +
call ds:GetLastError  +
test eax eax +
jnz loc_100421B  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_10012F8 +
jmp loc_1004332  +
call sub_1002BF9  +
test eax eax +
jz loc_100421B  +
push esi  +
push 1  +
push dword_1008380  +
call sub_1006F4A  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1004282  +
push 1  +
push dword_1008380  +
call sub_1006F7E  +
cmp eax ebx +
jz loc_1004266  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1006E6A  +
cmp eax 0FFFFFFFFh +
jnz loc_1004282  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004278  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10012F8 +
jmp loc_1004331  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1003E66  +
mov edi eax +
cmp edi ebx +
jz loc_10042F6  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_10042D9  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1004308  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1004308  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1004288  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_1008380  +
call sub_1007182  +
test eax eax +
jnz loc_100430F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004308  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10012F8 +
jmp loc_1004330  +
cmp [ebp+lpString] ebx +
jz loc_1004320  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_1008380  +
call sub_100701D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_10044E1  +
push ebx  +
push [ebp+lpString]  +
call sub_1003002  +
test eax eax +
jz loc_10044E1  +
call sub_1002BF9  +
test eax eax +
jz loc_10044F3  +
call sub_1002BF9  +
test eax eax +
jz loc_100449B  +
push 3  +
pop esi  +
push esi  +
push dword_1008380  +
call sub_1006F4A  +
mov edi eax +
cmp edi ebx +
ja loc_10043BE  +
push esi  +
push dword_1008380  +
call sub_1006F7E  +
cmp eax ebx +
jz loc_100449B  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1006E6A  +
cmp eax 0FFFFFFFFh +
jz loc_100449B  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_10071E1  +
mov edi offset aBuffer +
test eax eax +
jz loc_1004436  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_1006FE6  +
mov esi eax +
cmp esi ebx +
jz loc_100449B  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100449B  +
push ebx  +
push [ebp+lpString]  +
call sub_1003002  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1004422  +
cmp edi 100h +
jbe loc_1004483  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1004483  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1004473  +
call sub_1003203  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100447E  +
push 10h  +
call sub_1003203  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100449B  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10038C9  +
push esi  +
push ebx  +
push 3  +
push dword_1008380  +
call sub_1007148  +
test eax eax +
jnz loc_10043EB  +
lea eax [ebp+var_8] +
push eax  +
call sub_1003564  +
jmp loc_100449B  +
lea eax [esi+0Ch] +
push eax  +
call sub_10035DF  +
test eax eax +
jz loc_100449B  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100449B  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100390C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10044A9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10044F3  +
push 8  +
jmp loc_10044ED  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10044E1  +
cmp [ebp+var_4] ebx +
jz loc_10044DC  +
push ebx  +
push [ebp+var_4]  +
call sub_1003002  +
test eax eax +
jnz loc_10044E1  +
fld  qword ptr [ebp-0Ch] +
jmp loc_10044F5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10044F3  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_100433C  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10046EA  +
cmp [ebp+lpString] ebx +
jz loc_10046EA  +
call sub_1002BF9  +
test eax eax +
jz loc_10046FC  +
call sub_1002BF9  +
test eax eax +
jz loc_1004680  +
push 3  +
pop esi  +
push esi  +
push dword_1008380  +
call sub_1006F4A  +
mov edi eax +
cmp edi ebx +
ja loc_10045A3  +
push esi  +
push dword_1008380  +
call sub_1006F7E  +
cmp eax ebx +
jz loc_1004680  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1006E6A  +
cmp eax 0FFFFFFFFh +
jz loc_1004680  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_10071E1  +
mov edi offset aBuffer +
test eax eax +
jz loc_100461B  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_1006FE6  +
mov esi eax +
cmp esi ebx +
jz loc_1004680  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1004680  +
push ebx  +
push [ebp+lpString]  +
call sub_1003002  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1004607  +
cmp edi 100h +
jbe loc_1004668  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1004668  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1004658  +
call sub_1003203  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1004663  +
push 10h  +
call sub_1003203  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1004680  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10038C9  +
push esi  +
push ebx  +
push 3  +
push dword_1008380  +
call sub_1007148  +
test eax eax +
jnz loc_10045D0  +
lea eax [ebp+var_8] +
push eax  +
call sub_1003564  +
jmp loc_1004680  +
lea eax [esi+0Ch] +
push eax  +
call sub_10035DF  +
test eax eax +
jz loc_1004680  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1004680  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100390C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100468E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10046FC  +
push 8  +
jmp loc_10046F6  +
push 3  +
push ebx  +
push esi  +
call sub_1003FDB  +
push ebx  +
push esi  +
call sub_1003002  +
test eax eax +
jz loc_10046EA  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10046C2  +
call ds:wcstol  +
jmp loc_10046C8  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10046EA  +
cmp [ebp+var_4] ebx +
jz loc_10046E6  +
push ebx  +
push [ebp+var_4]  +
call sub_1003002  +
test eax eax +
jnz loc_10046EA  +
mov eax esi +
jmp loc_10046FE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10046FC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10048CD  +
cmp [ebp+lpString] ebx +
jz loc_10048CD  +
call sub_1002BF9  +
test eax eax +
jz loc_1004859  +
push 3  +
pop esi  +
push esi  +
push dword_1008380  +
call sub_1006F4A  +
mov edi eax +
cmp edi ebx +
ja loc_100477C  +
push esi  +
push dword_1008380  +
call sub_1006F7E  +
cmp eax ebx +
jz loc_1004859  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1006E6A  +
cmp eax 0FFFFFFFFh +
jz loc_1004859  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_10071E1  +
mov edi offset aBuffer +
test eax eax +
jz loc_10047F4  +
push ebx  +
push esi  +
push dword_1008380  +
call sub_1006FE6  +
mov esi eax +
cmp esi ebx +
jz loc_1004859  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1004859  +
push ebx  +
push [ebp+lpString]  +
call sub_1003002  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10047E0  +
cmp edi 100h +
jbe loc_1004841  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1004841  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1004831  +
call sub_1003203  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100483C  +
push 10h  +
call sub_1003203  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1004859  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10038C9  +
push esi  +
push ebx  +
push 3  +
push dword_1008380  +
call sub_1007148  +
test eax eax +
jnz loc_10047A9  +
lea eax [ebp+var_8] +
push eax  +
call sub_1003564  +
jmp loc_1004859  +
lea eax [esi+0Ch] +
push eax  +
call sub_10035DF  +
test eax eax +
jz loc_1004859  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1004859  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100390C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1004867  +
call ds:GetLastError  +
test eax eax +
jnz loc_10048DF  +
push 8  +
jmp loc_10048D9  +
push 3  +
push ebx  +
push esi  +
call sub_1003FDB  +
push ebx  +
push esi  +
call sub_1003002  +
test eax eax +
jz loc_10048DF  +
cmp [ebp+arg_8] ebx +
jnz loc_1004886  +
cmp word ptr [esi] 2Dh +
jz loc_10048DF  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10048A6  +
call ds:wcstol  +
jmp loc_10048AC  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10048DF  +
cmp [ebp+var_4] ebx +
jz loc_10048C8  +
push ebx  +
push [ebp+var_4]  +
call sub_1003002  +
test eax eax +
jnz loc_10048DF  +
xor eax eax +
inc eax  +
jmp loc_10048E1  +
call ds:GetLastError  +
test eax eax +
jnz loc_10048DF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10049AB  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10049AB  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1003002  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1003E66  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100493C  +
call ds:GetLastError  +
test eax eax +
jnz loc_10049BD  +
push 8  +
jmp loc_10049B7  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1003002  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1003E66  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100492A  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_10037EB  +
add esp 10h +
test eax eax +
jge loc_100497B  +
movzx eax ax +
push eax  +
jmp loc_10049B7  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_10037EB  +
add esp 10h +
test eax eax +
jl loc_1004975  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_10034DC  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10049BF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10049BD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 0  +
push [ebp+lpString]  +
call sub_1003FDB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1004AED  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1004AED  +
cmp [ebp+arg_4] ebx +
jnz loc_1004A18  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1003992  +
jmp loc_1004B01  +
cmp [ebp+arg_8] ebx +
jnz loc_1004AAD  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1003E66  +
mov edi eax +
test edi edi +
jz loc_1004A9A  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1004A8A  +
call ds:GetLastError  +
test eax eax +
jz loc_1004AA8  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1004AFF  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1004A25  +
push edi  +
jmp loc_1004A0B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004AFF  +
push 8  +
jmp loc_1004AF9  +
xor eax eax +
inc eax  +
jmp loc_1004B01  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1003E66  +
mov edi eax +
test edi edi +
jz loc_1004A9A  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_10037AF  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1004AAD  +
test eax eax +
jge loc_1004A94  +
movzx eax ax +
push eax  +
jmp loc_1004AF9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004AFF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100838C  +
mov eax dword_100838C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_10041F8  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1004B0A  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1004BCD  +
test [ebp+arg_4] 0F0000h +
jz loc_1004BCD  +
test [ebp+arg_4] 10000h +
jz loc_1004B75  +
call sub_1002DD3  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_1004B87  +
push 1389h  +
jmp loc_1004BA6  +
test al 4 +
jz loc_1004B92  +
push 138Ah  +
jmp loc_1004BA6  +
test al 2 +
jz loc_1004B9D  +
push 138Ch  +
jmp loc_1004BA6  +
test al 8 +
jz loc_1004BBC  +
push 138Bh  +
call sub_1004B39  +
push eax  +
push offset aS_1  +
push ebx  +
push ebx  +
push esi  +
call sub_10049E6  +
add esp 14h +
call sub_1002D40  +
push eax  +
push esi  +
call sub_1003992  +
mov eax ebx +
pop ebx  +
jmp loc_1004BE1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004BDF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_1004C0C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004C08  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1004C31  +
push 0  +
push [ebp+lpString1]  +
call sub_1003002  +
cmp eax 2 +
jbe loc_1004C08  +
push 2  +
push 1  +
push offset asc_1001270  +
push [ebp+lpString1]  +
call sub_1003023  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_1004CCB  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1004CCB  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1003E66  +
cmp eax esi +
jnz loc_1004C7A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004CD6  +
push 8  +
jmp loc_1004CD0  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1004CCB  +
push 0  +
push 0Ah  +
push ebx  +
call sub_100470A  +
test eax eax +
jz loc_1004CD6  +
push 0Ah  +
push ebx  +
call sub_1004524  +
cmp eax 0FFh +
ja loc_1004CD6  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1004C91  +
cmp [ebp+var_4] 4 +
jnz loc_1004CCB  +
inc eax  +
jmp loc_1004CD8  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1004E68  +
cmp ebx esi +
jz loc_1004E68  +
mov eax [ebx] +
cmp eax esi +
jz loc_1004D61  +
cmp eax 2 +
jb loc_1004E68  +
cmp edx esi +
jz loc_1004E68  +
cmp dword_100837C esi +
jnz loc_1004D95  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1004D8B  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1004E74  +
mov dword_100837C 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_1004E7A  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1004E02  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1004E08  +
cmp eax 2AFCh +
jnz loc_1004DFF  +
cmp [ebp+var_848] di +
jnz loc_1004E08  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1004DC2  +
jmp loc_1004E54  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1004E25  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_1003002  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_1004E41  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1004E54  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_100390C  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_1004E7C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004E7A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002710  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_1004EE6  +
push esi  +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_1004EE6  +
push edi  +
call sub_1004BEB  +
push edi  +
test eax eax +
jnz loc_1004EEE  +
push offset aS_2  +
push 1  +
call sub_10040F3  +
add esp 0Ch +
test eax eax +
jnz loc_1004EF5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004EE1  +
push 8  +
call ds:SetLastError  +
call sub_1002DD3  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_1002D6C  +
jmp loc_1004ECB  +
call sub_1002D40  +
cmp eax esi +
jnz loc_1004F07  +
push 0Dh  +
call sub_1002CCF  +
jmp loc_1004F11  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1003E66  +
cmp eax esi +
jz loc_1004ECF  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1004EE6  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_1004F40  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1004EE8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_100504F  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100504F  +
push esi  +
call sub_1004BEB  +
cmp eax 1 +
jnz loc_1004F85  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1004FC0  +
push offset aIpc  +
push esi  +
push offset aSS  +
push 2  +
call sub_10040F3  +
add esp 10h +
test eax eax +
jnz loc_1004FED  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004FB8  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_1005051  +
test bl 20h +
jz loc_1004FCC  +
push offset aAdmin  +
jmp loc_1004F92  +
test bl 40h +
jz loc_1004FDB  +
cmp [ebp+arg_4] edi +
jz loc_1004FDB  +
push [ebp+arg_4]  +
jmp loc_1004F92  +
push esi  +
push offset aS_2  +
push 1  +
call sub_10040F3  +
add esp 0Ch +
jmp loc_1004FA2  +
call sub_1002D40  +
cmp eax edi +
jnz loc_1004FFF  +
push 12h  +
call sub_1002CCF  +
jmp loc_1005009  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1003E66  +
cmp eax edi +
jz loc_1004FA6  +
test ebx 10000000h +
jz loc_100501C  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_1005042  +
cmp esi 4B8h +
jz loc_100503B  +
call sub_1002DD3  +
jmp loc_100504B  +
call sub_1004185  +
jmp loc_100504B  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_1005051  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_10051B5  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10051B5  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_10050B2  +
xor eax eax +
jmp loc_10051B8  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1003E66  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_10050D6  +
call ebx  +
test eax eax +
jnz loc_10050AB  +
push 8  +
call ds:SetLastError  +
jmp loc_10050AB  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_10050AB  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1003023  +
test eax eax +
jz loc_10051B5  +
push [ebp+lpString]  +
call sub_1004C3A  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_1005171  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_1004CE4  +
test eax eax +
jz loc_10050AB  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1003E66  +
mov esi eax +
cmp esi edi +
jz loc_10050AB  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_1004CE4  +
test eax eax +
jz loc_10050AB  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1003023  +
test eax eax +
jnz loc_100515D  +
mov eax ebx +
jmp loc_10051B8  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1003023  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_10051B8  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_10050AB  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1003E66  +
mov ebx eax +
cmp ebx edi +
jz loc_10050AB  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_10050AB  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_1005165  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1008000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_1005260  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005260  +
push ebx  +
call sub_1004C3A  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_1005242  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_1004CE4  +
test eax eax +
jnz loc_100521E  +
xor eax eax +
jmp loc_1005263  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1003E66  +
cmp eax esi +
jz loc_100521A  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_1004CE4  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1005263  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1003456  +
cmp eax 0FFFFFFFFh +
jz loc_100525C  +
push 35h  +
call ds:SetLastError  +
jmp loc_100521A  +
mov eax edi +
jmp loc_1005263  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002710  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_1004F4F  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_10053F1  +
push esi  +
call sub_100505D  +
cmp eax 1 +
jz loc_10053F1  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_1004BEB  +
cmp eax 1 +
jnz loc_10052D0  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_10051C4  +
test eax eax +
jnz loc_10052EC  +
call sub_1002DD3  +
call ds:GetLastError  +
jmp loc_1005425  +
cmp [ebp+lpString] ebx +
jz loc_1005315  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005315  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS  +
push 2  +
call sub_10040F3  +
add esp 10h +
jmp loc_1005327  +
push dword ptr [ebp+arg_0]  +
push offset aS_2  +
push 1  +
call sub_10040F3  +
add esp 0Ch +
test eax eax +
jnz loc_100534A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100533D  +
push 8  +
call ds:SetLastError  +
call sub_1002DD3  +
push 8  +
pop eax  +
jmp loc_1005425  +
call sub_1002D40  +
cmp eax ebx +
jnz loc_100535C  +
push 12h  +
call sub_1002CCF  +
jmp loc_1005366  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1003E66  +
mov edx eax +
cmp edx ebx +
jz loc_100532B  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_10053B7  +
cmp esi 4B8h +
jz loc_10053B0  +
push esi  +
call ds:SetLastError  +
call sub_1002DD3  +
jmp loc_100541F  +
call sub_1004185  +
jmp loc_100541F  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_1004E92  +
push eax  +
call sub_1002F1B  +
test eax eax +
jnz loc_100541F  +
push dword ptr [ebp+arg_0]  +
call sub_1005279  +
push 1580h  +
call sub_1004B39  +
push eax  +
call sub_1002D6C  +
mov esi 4B8h +
jmp loc_100541F  +
cmp [ebp+lpUserName] ebx +
jz loc_1005423  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005423  +
push 157Eh  +
call sub_1004B39  +
push eax  +
call sub_1002D6C  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_1005425  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_1005296  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_10055DB  +
push 0  +
push edi  +
call sub_1003002  +
test eax eax +
jz loc_10055DB  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_10054BA  +
cmp [ebp+lpUserName] 0 +
jz loc_10054A0  +
cmp [ebp+nSize] 2 +
jb loc_10054A0  +
cmp [ebp+lpPassword] 0 +
jz loc_10054A0  +
cmp [ebp+arg_10] 2 +
jnb loc_10054BA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10054AE  +
push 57h  +
call ebx  +
call sub_1002DD3  +
xor eax eax +
jmp loc_10055DE  +
push edi  +
mov [ebp+var_4] edi +
call sub_1004BEB  +
cmp eax esi +
jnz loc_10054CD  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_10054FE  +
cmp [ebp+lpPassword] 0 +
jz loc_10054FE  +
push 0  +
push esi  +
push offset String2  +
push [ebp+lpPassword]  +
call sub_1003023  +
test eax eax +
jnz loc_10054FE  +
push [ebp+var_4]  +
call sub_10051C4  +
test eax eax +
jnz loc_10055F2  +
jmp loc_10054AE  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_10051C4  +
test eax eax +
jz loc_10054AE  +
cmp [ebp+lpUserName] 0 +
jz loc_1005543  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005543  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_1005430  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_1005552  +
mov [ebp+var_8] esi +
jmp loc_1005552  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_1005430  +
mov edi eax +
cmp edi 55h +
jnz loc_1005562  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_10055DE  +
test edi edi +
jnz loc_100556E  +
cmp [ebp+var_8] esi +
jz loc_1005557  +
push edi  +
jmp loc_100555C  +
mov eax 4C3h +
cmp edi eax +
ja loc_100559B  +
jz loc_1005598  +
cmp edi 34h +
jz loc_100568A  +
cmp edi 56h +
jz loc_10055E5  +
cmp edi 4BEh +
jz loc_100568A  +
jmp loc_10054AE  +
push eax  +
jmp loc_100555C  +
cmp edi 4CFh +
jb loc_10054AE  +
cmp edi 4D1h +
jbe loc_100568A  +
cmp edi 52Eh +
jz loc_10055E5  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_10054AE  +
push 157Eh  +
call sub_1004B39  +
push eax  +
call sub_1002D6C  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_10054B3  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_1005615  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_10054AE  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_1004B39  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_10049E6  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_1003BF7  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_1005430  +
mov edi eax +
test edi edi +
jz loc_100555E  +
cmp edi 34h +
jz loc_100568A  +
cmp edi 4BEh +
jz loc_100568A  +
mov eax 4C3h +
cmp edi eax +
jz loc_1005598  +
cmp edi 4CEh +
jbe loc_10054AE  +
cmp edi 4D1h +
ja loc_10055BB  +
push 4C6h  +
call ebx  +
call sub_1002DD3  +
push edi  +
call ebx  +
jmp loc_10054B3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_10056D1  +
call ds:GetLastError  +
test eax eax +
jnz loc_10056C9  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_10056C9  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_10013C0  +
call sub_10033EB  +
cmp eax 0FFFFFFFFh +
jz loc_10056C9  +
xor eax eax +
inc eax  +
jmp loc_10056CB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_100571F  +
movzx eax ds:byte_100572E[eax] +
jmp ds:off_1005726[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_1005721  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_10057C2  +
cmp [ebp+arg_4] ebx +
jnz loc_10057C2  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_10033EB  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100577C  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1003002  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1003E66  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100579F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10057D0  +
push 8  +
jmp loc_10057CE  +
lea ecx [esi+1] +
push ecx  +
push offset asc_10012E8  +
push eax  +
call sub_100390C  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_100394F  +
mov eax [ebp+arg_4] +
jmp loc_10057D2  +
call ds:GetLastError  +
test eax eax +
jnz loc_10057D0  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_1005817  +
cmp ecx edi +
jnz loc_1005817  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005810  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1005A7A  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1005802  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1005A76  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1005A80  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_100307E  +
test eax eax +
jnz loc_1005932  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1005932  +
cmp [edi+4] ebx +
jnz loc_1005932  +
cmp [edi+8] ebx +
jnz loc_1005932  +
cmp [edi+0Ch] ebx +
jnz loc_1005932  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_10058AD  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1005932  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005932  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_10058C2  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_1005932  +
mov edx eax +
or edx ecx +
jz loc_10058D3  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1005932  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_10058E8  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1005932  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_10058F4  +
xor eax eax +
or ebx eax +
jnz loc_1005932  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1005932  +
jmp ds:off_1005AA2[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_100594B  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1005932  +
cmp [edi-10h] ecx +
jnz loc_1005932  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_100596A  +
cmp eax 2 +
jnb loc_100596A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005944  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005A79  +
mov eax [edi-10h] +
test eax eax +
jz loc_1005932  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_100596A  +
push dword ptr [eax]  +
call sub_10068E1  +
test eax eax +
jz loc_1005932  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100597A  +
cmp [edi-14h] ecx +
jz loc_1005932  +
xor eax eax +
or ebx eax +
jnz loc_1005A60  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1005932  +
and esi 20h +
or esi eax +
jnz loc_1005932  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1005A60  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_1005932  +
jmp loc_1005A60  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1005A98  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1005932  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1005932  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1005932  +
mov edx [edi-10h] +
test edx edx +
jz loc_1005932  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1005A08  +
push dword ptr [edx]  +
call sub_10068E1  +
test eax eax +
jz loc_1005932  +
jmp loc_1005A60  +
cmp dword ptr [edi-24h] 1 +
ja loc_1005932  +
and esi 20h +
xor eax eax +
jmp loc_1005A58  +
cmp dword ptr [edi-8] 0 +
jz loc_1005932  +
cmp dword ptr [edi-4] 0 +
jnz loc_1005A60  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1005A60  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1005932  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1005932  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_1005932  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1005831  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005944  +
push 42Bh  +
jmp loc_100593E  +
push 78h  +
jmp loc_100593E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1005B15  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005B09  +
push 57h  +
call ebx  +
call sub_1002DD3  +
xor eax eax +
jmp loc_1006079  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1006063  +
cmp eax edi +
jz loc_1006063  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1005BB4  +
cmp [ebp+lpString2] 0 +
jnz loc_1005BB4  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1005BB4  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1005B92  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005B92  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1004B39  +
push eax  +
push 2  +
call sub_10040F3  +
add esp 10h +
jmp loc_1005BA8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005BA3  +
push 42Bh  +
call ebx  +
call sub_1002DD3  +
push 800401E4h  +
call ebx  +
jmp loc_1006076  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1005BCC  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1005BD7  +
jmp loc_1006063  +
cmp dword ptr [esi+24h] 0 +
jz loc_1005BDD  +
cmp ecx 9 +
jz loc_1005BDD  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1006063  +
jmp ds:off_100607F[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1005C4B  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1005C4B  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1003E66  +
test eax eax +
jnz loc_1005C2B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006071  +
push 8  +
call ds:SetLastError  +
jmp loc_1006071  +
push 3  +
push offset asc_100131C  +
push eax  +
call sub_1003FDB  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_1006071  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1005CC6  +
test ebx ebx +
jz loc_100605E  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10048ED  +
test eax eax +
jnz loc_1005CC6  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1005C9D  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005C9D  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1004B39  +
push eax  +
push 3  +
call sub_10040F3  +
add esp 14h +
jmp loc_1005CB6  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1004B39  +
push eax  +
push 2  +
call sub_10040F3  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1006076  +
test ebx ebx +
jz loc_100605E  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1005D1F  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1005D1F  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1005D05  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1005D05  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1005CA6  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1004B39  +
push eax  +
push 1  +
call sub_10040F3  +
add esp 0Ch +
jmp loc_1005CB6  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1005D6F  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1005D52  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_10072A4  +
cmp eax 0FFFFFFFFh +
jnz loc_100605E  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1006C24  +
cmp eax 0FFFFFFFFh +
jnz loc_100605E  +
jmp loc_1005C10  +
cmp [ebp+var_C] ecx +
jz loc_1005DAE  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1005DAE  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1005D9F  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1005D9F  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1005CA6  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1005D0D  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1005DD8  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1003203  +
test eax eax +
jz loc_1005C10  +
mov [esi+2Ch] eax +
jmp loc_1005DDE  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_100390C  +
jmp loc_100605E  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_100605E  +
push 0  +
push ebx  +
call sub_1003002  +
test eax eax +
jz loc_1005EB7  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_100470A  +
test eax eax +
jz loc_1005EB7  +
push 0Ah  +
push ebx  +
call sub_1004524  +
cmp [ebp+var_C] 1 +
jnz loc_1005E39  +
mov dword ptr [ebp+String2] eax +
jmp loc_1005E3C  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1005EA1  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1005E7A  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1005E67  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1007218  +
jmp loc_1005E71  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100723B  +
cmp eax 0FFFFFFFFh +
jnz loc_100605E  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1005E92  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1006C9B  +
jmp loc_1005D61  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1006CF0  +
jmp loc_1005D61  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1005EB0  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_100605E  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1005EC9  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1005F1D  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1005EEB  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005EEB  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1005CA6  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1005D0D  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100605E  +
push ebx  +
call sub_1004501  +
test eax eax +
jnz loc_1005F56  +
and edi 10h +
or edi eax +
jz loc_1005F27  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1005F27  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1006078  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1005F49  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005F49  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1005CA6  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1005D0D  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1005F67  +
call sub_100433C  +
fstp  [ebp+var_18] +
jmp loc_1005F6F  +
call sub_100433C  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1005FE5  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1005FB6  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1005F9F  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100725E  +
jmp loc_1005FAD  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1007281  +
cmp eax 0FFFFFFFFh +
jnz loc_100605E  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1005FD2  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1006D45  +
jmp loc_1005D61  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1006D9A  +
jmp loc_1005D61  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1005FF5  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_100605E  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_100605E  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1006078  +
cmp [ebp+lpString2] 0 +
jz loc_1006055  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1006036  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006036  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1005CA6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100604B  +
push 42Bh  +
call ds:SetLastError  +
call sub_1002DD3  +
jmp loc_1005CB6  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1006078  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006071  +
push 57h  +
call ebx  +
call sub_1002DD3  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100616D  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100616D  +
cmp [ebp+arg_8] edi +
jz loc_100616D  +
push [ebp+arg_8]  +
call sub_10056A3  +
test eax eax +
jnz loc_10060F2  +
push 490h  +
jmp loc_1006179  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_10060E8  +
add esi 20h +
jmp loc_1006101  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_100614E  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_1006119  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_100613E  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_100613E  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10048ED  +
cmp eax 1 +
jz loc_1006168  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_10060FF  +
jmp loc_10060E8  +
call ds:GetLastError  +
test eax eax +
jnz loc_100615F  +
push 42Bh  +
call ebx  +
call sub_1002DD3  +
xor eax eax +
jmp loc_100617E  +
mov eax [ebp+arg_4] +
jmp loc_100617E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100617B  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1006262  +
cmp [ebp+arg_4] edi +
jz loc_1006262  +
cmp [ebp+lpString] edi +
jz loc_1006262  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1006262  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_10033EB  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1006273  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1003E66  +
mov [esi] eax +
test eax eax +
jnz loc_1006219  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006270  +
push 8  +
call ds:SetLastError  +
jmp loc_1006270  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1003E66  +
mov [esi+4] eax +
test eax eax +
jz loc_1006205  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_100390C  +
test edi edi +
jz loc_1006253  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_100390C  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10060AC  +
jmp loc_1006273  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006270  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_10062FE  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_10062FE  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1002D40  +
test eax eax +
jnz loc_10062AF  +
push 7  +
call sub_1002CCF  +
jmp loc_10062BB  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1003E66  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10062FE  +
test ebx ebx +
jbe loc_10062E8  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_10062E2  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_10062E2  +
push esi  +
call sub_1003564  +
add esi 50h +
dec ebx  +
jnz loc_10062C9  +
push [ebp+arg_0]  +
call sub_1002D6C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_1006300  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1003E66  +
mov ebx eax +
cmp ebx edi +
jz loc_100638F  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_10063A1  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_1006338  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_10063A8  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_10063A1  +
call esi  +
test eax eax +
jnz loc_10063A1  +
push 57h  +
jmp loc_100639B  +
call ds:GetLastError  +
test eax eax +
jnz loc_10063A1  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100656E  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1003203  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_10063A1  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_10063D5  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1003564  +
jmp loc_10063A1  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_10063CA  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1003E66  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_10063CA  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_10037EB  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_100644C  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100640A  +
cmp dword ptr [ebp+lpString] edi +
jz loc_10063CA  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1003002  +
cmp eax 4 +
ja loc_1006484  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1003564  +
call ds:GetLastError  +
test eax eax +
jnz loc_10063A1  +
push 42Bh  +
jmp loc_100639B  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10034DC  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_10064BE  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_10012F4 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_100650E  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1003E66  +
mov esi eax +
cmp esi edi +
jnz loc_10064F5  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1003564  +
jmp loc_100638F  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_0  +
push [ebp+dwLen]  +
push esi  +
call sub_10037EB  +
add esp 14h +
jmp loc_100652E  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_100651C  +
push 7  +
call sub_1002CCF  +
jmp loc_1006528  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1003E66  +
mov esi eax +
cmp esi edi +
jz loc_10064E7  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1003E66  +
mov esi eax +
cmp esi edi +
jz loc_10064E7  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1004B39  +
push eax  +
push 50h  +
push esi  +
call sub_10037EB  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1003564  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_10065F0  +
cmp [ebp+arg_4] ebx +
jz loc_10065F0  +
cmp [ebp+arg_C] ebx +
jz loc_10065F0  +
cmp [ebp+dwErrCode] ebx +
jz loc_10065F0  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_10065F0  +
call sub_1002E85  +
test eax eax +
jnz loc_10065D0  +
push 157Fh  +
call sub_1004B39  +
push eax  +
call sub_1002D6C  +
push 47Eh  +
call edi  +
jmp loc_10065F9  +
call sub_1002BF9  +
test eax eax +
jz loc_10065F4  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_1006618  +
cmp eax [ebp+arg_C] +
jl loc_1006602  +
call ds:GetLastError  +
test eax eax +
jnz loc_10065F4  +
push 57h  +
call edi  +
call sub_1002DD3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_100573D  +
mov esi eax +
cmp esi ebx +
jz loc_10065F4  +
push esi  +
call sub_100630B  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_10065F4  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_10057DE  +
test eax eax +
jz loc_10065F4  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_100677A  +
jmp loc_100664F  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1006668  +
mov edi [ecx+4] +
jmp loc_100666A  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10060AC  +
cmp eax 0FFFFFFFFh +
jnz loc_10066AF  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100618A  +
cmp eax 0FFFFFFFFh +
jnz loc_10066A2  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_10067B7  +
mov edi ebx +
xor ebx ebx +
jmp loc_10066A8  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_10067EA  +
test edi edi +
jz loc_100670A  +
cmp [ebp+arg_8] 2 +
jnz loc_100670A  +
push dword ptr [esi+8]  +
call sub_10056FE  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1006705  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10060AC  +
cmp eax 0FFFFFFFFh +
jnz loc_10066FC  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100618A  +
cmp eax 0FFFFFFFFh +
jz loc_100670A  +
mov [ebp+arg_8] 1 +
jmp loc_1006708  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1005ACF  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_1006863  +
mov eax [esi+18h] +
test eax eax +
jz loc_1006745  +
cmp eax [esi+1Ch] +
jz loc_1006808  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_100675E  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_100664C  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_10067AC  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_10067AC  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_100684D  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_10067A3  +
cmp [ecx+1Ch] ebx +
jz loc_1006873  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1006784  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_10065FB  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1004B39  +
push eax  +
push esi  +
call sub_10040F3  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100627F  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_10065F9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10065F4  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_10065F4  +
test ebx ebx +
jz loc_1006835  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006835  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1004B39  +
push eax  +
push 3  +
call sub_10040F3  +
add esp 14h +
jmp loc_10067CF  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1004B39  +
push eax  +
push 2  +
jmp loc_10067C7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100685E  +
push 42Bh  +
call edi  +
call sub_1002DD3  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100627F  +
jmp loc_10065F9  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100688D  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_100684D  +
mov edi [ecx+24h] +
jmp loc_10068A5  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_10068A3  +
push ebx  +
push eax  +
call sub_100573D  +
mov edi eax +
test edi edi +
jnz loc_10068A9  +
jmp loc_100685E  +
mov edi ecx +
test edi edi +
jz loc_10068BF  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_10068BF  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_1006840  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1004B39  +
push eax  +
push 1  +
call sub_10040F3  +
add esp 0Ch +
jmp loc_10067CF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10068F7  +
cmp dword ptr [eax] 9 +
jnz loc_10068F7  +
xor eax eax +
inc eax  +
jmp loc_10068F9  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1006912  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10068E1  +
test eax eax +
jz loc_100696D  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1006961  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1006A6E  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1003564  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1006945  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_10068E1  +
test eax eax +
jz loc_1006998  +
push ecx  +
call sub_1006927  +
push esi  +
call sub_1003564  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10068E1  +
test eax eax +
jz loc_10069B7  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10068E1  +
test eax eax +
jnz loc_10069D6  +
xor eax eax +
jmp loc_10069FB  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_10069D2  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_10069F1  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_10069E9  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_10069FA  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10068E1  +
test eax eax +
jnz loc_1006A1C  +
or eax 0FFFFFFFFh +
jmp loc_1006A64  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_1006A17  +
push 14h  +
call sub_1003203  +
test eax eax +
jz loc_1006A17  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_1006A57  +
mov [esi+8] eax +
jmp loc_1006A5D  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1006AE2  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_1006AAD  +
jz loc_1006AC9  +
cmp eax 20000h +
jz loc_1006AC9  +
cmp eax 30000h +
jz loc_1006AC9  +
cmp eax 40000h +
jz loc_1006AC9  +
cmp eax 50000h +
jz loc_1006AC9  +
cmp eax 60000h +
jz loc_1006AC9  +
jmp loc_1006AE2  +
cmp eax 80000h +
jz loc_1006AD4  +
cmp eax 90000h +
jz loc_1006AC9  +
cmp eax 0A0000h +
jz loc_1006AC9  +
cmp eax 0B0000h +
jnz loc_1006AE2  +
add edx 0Ch +
push edx  +
call sub_1003564  +
jmp loc_1006AE2  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1006977  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10068E1  +
test eax eax +
jnz loc_1006B06  +
or eax 0FFFFFFFFh +
jmp loc_1006C15  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1006C10  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1006C00  +
mov ecx 70000h +
cmp eax ecx +
ja loc_1006B94  +
jz loc_1006B82  +
cmp eax 20000h +
jz loc_1006B66  +
cmp eax 30000h +
jz loc_1006BF7  +
cmp eax 40000h +
jz loc_1006BF7  +
cmp eax 60000h +
jnz loc_1006C00  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_1006B89  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1003023  +
test eax eax +
jz loc_1006C1A  +
mov edx [ebp+arg_0] +
jmp loc_1006C00  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1006C00  +
mov eax edx +
jmp loc_1006C13  +
cmp eax 90000h +
jz loc_1006BF7  +
cmp eax 0A0000h +
jz loc_1006BBA  +
cmp eax 0B0000h +
jnz loc_1006C00  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1006C00  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1006BFE  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1006C00  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1006C00  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1006C00  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1006C00  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1006C00  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1006BFE  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_1006B90  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_1006B1C  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1006C13  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10068E1  +
test eax eax +
jnz loc_1006C3F  +
or eax 0FFFFFFFFh +
jmp locret_1006C92  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1006C52  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1003203  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006C8D  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_100390C  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz loc_1006C90  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10068E1  +
test eax eax +
jz loc_1006CE4  +
push 4  +
call sub_1003203  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006CE4  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz locret_1006CE7  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10068E1  +
test eax eax +
jz loc_1006D39  +
push 4  +
call sub_1003203  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006D39  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz locret_1006D3C  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10068E1  +
test eax eax +
jz loc_1006D8E  +
push 4  +
call sub_1003203  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006D8E  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz locret_1006D91  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10068E1  +
test eax eax +
jz loc_1006DE3  +
push 8  +
call sub_1003203  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006DE3  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz locret_1006DE6  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10068E1  +
test eax eax +
jz loc_1006E5D  +
call sub_1006902  +
push eax  +
mov [ebp+var_4] eax +
call sub_10068E1  +
test eax eax +
jz loc_1006E5D  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1006E37  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jz loc_1006E37  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1006E21  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1006E54  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jnz loc_1006E60  +
lea eax [ebp+var_4] +
push eax  +
call sub_1006977  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_10068E1  +
test eax eax +
jnz loc_1006E80  +
or eax 0FFFFFFFFh +
jmp loc_1006EA4  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1006EA1  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_1006A04  +
cmp eax 0FFFFFFFFh +
jz loc_1006EA1  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1006E88  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_10069C0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1006F09  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1006EE6  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_1006EEC  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1006EF4  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1006A6E  +
lea eax [ebp+var_4] +
push eax  +
call sub_1003564  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1006F3F  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1006F3F  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1006EAD  +
jmp loc_1006F41  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1006F73  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1006F73  +
push dword ptr [eax+0Ch]  +
call sub_10069A2  +
jmp loc_1006F75  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jnz loc_1006F98  +
xor eax eax +
jmp loc_1006FAE  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_1006FAB  +
cmp ecx 80000h +
jnz loc_1006F94  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jnz loc_1006FD1  +
xor eax eax +
jmp loc_1006FDD  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1006FCD  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1007012  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007012  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1006F7E  +
jmp loc_1007014  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1007049  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007049  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1006FB7  +
jmp loc_100704B  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1007065  +
xor eax eax +
jmp loc_1007095  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1007061  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1007088  +
test ecx ecx +
jz loc_100708C  +
jmp loc_1007061  +
test ecx ecx +
jnz loc_100708F  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
mov esi eax +
cmp esi edi +
jnz loc_10070BE  +
xor eax eax +
jmp loc_100713D  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_10070CF  +
cmp eax edi +
jnz loc_1007124  +
cmp [ebp+arg_C] edi +
jnz loc_10070E0  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_1007104  +
lea edi [eax+eax] +
push edi  +
call sub_1003203  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1007124  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100712B  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100712B  +
lea edi [esi+0Ch] +
push edi  +
call sub_1003564  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1003203  +
mov [edi] eax +
test eax eax +
jnz loc_1007128  +
xor eax eax +
jmp loc_100713C  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100390C  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_1007177  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007177  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007054  +
jmp loc_1007179  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_10071B4  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10071B4  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100709F  +
jmp loc_10071B6  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_10071D8  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10069C0  +
test eax eax +
jz loc_100720D  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100720D  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10071BF  +
jmp loc_100720F  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1006AEB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1006AEB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1006AEB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1006AEB  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1006AEB  +
pop ebp  +
retn 10h  +
***
retf 0FFB3h  +
***
retf   +
***
