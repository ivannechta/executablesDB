push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push ebx  +
call loc_404740  +
push 24h  +
mov dword ptr [ebp-28h] offset aVk_ext_display +
mov dword ptr [ebp-24h] offset aVk_khr_display +
mov dword ptr [ebp-20h] offset aVk_khr_get_phy +
mov dword ptr [ebp-1Ch] offset aVk_khr_externa +
mov dword ptr [ebp-18h] offset aVk_khr_get_sur +
mov dword ptr [ebp-14h] offset aVk_khr_shared_ +
mov dword ptr [ebp-10h] offset aVk_khr_surface +
mov dword ptr [ebp-0Ch] offset aVk_khr_device_ +
mov dword ptr [ebp-8] offset aVk_khr_win32_s +
call sub_40D4AA  +
add esp 8 +
mov [ebx+14h] eax +
xor eax eax +
mov dword ptr [ebx+18h] 0 +
mov [ebp-2Ch] eax +
push esi  +
push edi  +
xor esi esi +
cmp [ebx+0Ch] esi +
jbe loc_4010DC  +
mov ecx [ebp+eax*4-28h] +
mov edi [ebx+10h] +
mov [ebp-30h] ecx +
mov eax edi +
inc eax  +
mov [ebp-2Ch] eax +
cmp eax 9 +
jb loc_401077  +
lea eax [ebp-64h] +
mov dword ptr [ebp-64h] 0 +
mov [ebp-78h] eax +
xorps xmm0 xmm0 +
mov eax [ebx+18h] +
mov [ebp-6Ch] eax +
mov eax [ebx+14h] +
mov [ebp-68h] eax +
lea eax [ebp-48h] +
push ebx  +
mov [ebp-80h] eax +
lea eax [ebp-84h] +
movups oword ptr [ebp-48h] xmm0 +
push 0  +
push eax  +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] offset ConsoleTitle +
mov dword ptr [ebp-58h] 1 +
mov dword ptr [ebp-54h] offset ConsoleTitle +
mov dword ptr [ebp-50h] 1 +
mov dword ptr [ebp-4Ch] 400000h +
mov dword ptr [ebp-84h] 1 +
mov dword ptr [ebp-7Ch] 0 +
mov dword ptr [ebp-74h] 0 +
mov dword ptr [ebp-70h] 0 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-48h] 3B9AF4F8h +
mov dword ptr [ebp-40h] 0Ah +
mov dword ptr [ebp-3Ch] offset dword_407DE0 +
call vkCreateInstance  +
pop edi  +
pop esi  +
cmp eax 0FFFFFFF7h +
jnz loc_4011FC  +
push offset aCannotCreateVu  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 0FFFFFFF7h  +
call sub_408BC0  +
add esp 0Ch +
push eax  +
push 343h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-34h] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40131C  +
jmp loc_401314  +
test eax eax +
jz loc_401260  +
push eax  +
call sub_408BC0  +
add esp 4 +
push eax  +
push 345h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-34h] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40132B  +
jmp loc_401323  +
push offset aVkgetphysicald  +
push dword ptr [ebx]  +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_0  +
push dword ptr [ebx]  +
mov [ebx+1Ch] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_1  +
push dword ptr [ebx]  +
mov [ebx+20h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_2  +
push dword ptr [ebx]  +
mov [ebx+24h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_3  +
push dword ptr [ebx]  +
mov [ebx+28h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_4  +
push dword ptr [ebx]  +
mov [ebx+2Ch] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_5  +
push dword ptr [ebx]  +
mov [ebx+30h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_6  +
push dword ptr [ebx]  +
mov [ebx+34h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_7  +
push dword ptr [ebx]  +
mov [ebx+38h] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_8  +
push dword ptr [ebx]  +
mov [ebx+3Ch] eax +
call vkGetInstanceProcAddr  +
push offset aVkgetphysica_9  +
push dword ptr [ebx]  +
mov [ebx+40h] eax +
call vkGetInstanceProcAddr  +
mov ecx [ebp-4] +
mov [ebx+44h] eax +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
sub esp 14h +
mov ecx [ebp+arg_0] +
mov [ebp+var_14] 3B9AED28h +
mov [ebp+var_10] 0 +
mov [ebp+var_C] 0 +
mov eax [ecx+118h] +
mov [ebp+var_8] eax +
mov eax [ecx+11Ch] +
mov [ebp+var_4] eax +
lea eax [ecx+108h] +
push eax  +
push 0  +
lea eax [ebp+var_14] +
push eax  +
push dword ptr [ecx]  +
call vkCreateWin32SurfaceKHR  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push edi  +
mov edi [ebp+8] +
push 0  +
call ds:GetModuleHandleA  +
push 7F00h  +
push 0  +
mov [edi+118h] eax +
mov dword ptr [ebp-44h] 30h +
mov dword ptr [ebp-40h] 3 +
mov dword ptr [ebp-3Ch] offset sub_408C70 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-30h] eax +
call ds:LoadIconA  +
push 7F00h  +
push 0  +
mov [ebp-2Ch] eax +
call ds:LoadCursorA  +
push 0  +
mov [ebp-28h] eax +
call ds:GetStockObject  +
push 7F05h  +
mov [ebp-24h] eax +
mov eax [edi+118h] +
push 0  +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] offset ConsoleTitle +
mov [ebp-30h] eax +
call ds:LoadIconA  +
mov [ebp-18h] eax +
lea eax [ebp-44h] +
push eax  +
call ds:RegisterClassExA  +
test ax ax +
jz loc_4014C3  +
mov eax [edi+110h] +
mov [ebp-0Ch] eax +
mov eax [edi+114h] +
push 0  +
mov [ebp-8] eax +
lea eax [ebp-14h] +
push 0CF0000h  +
push eax  +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 0 +
call ds:AdjustWindowRect  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push 0  +
push dword ptr [edi+118h]  +
push 0  +
push 0  +
push eax  +
mov eax [ebp-0Ch] +
sub eax [ebp-14h] +
push eax  +
push 64h  +
push 64h  +
push 0CF0000h  +
push offset ConsoleTitle  +
push offset ConsoleTitle  +
push 0  +
call ds:CreateWindowExA  +
mov [edi+11Ch] eax +
pop edi  +
test eax eax +
jnz loc_4014B5  +
push offset aFailedToCreate  +
jmp loc_4014C8  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aFailedToRegist  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
add esp 8 +
push 1  +
call sub_40DB8C  +
mov eax [ebp+arg_0] +
push dword ptr [eax+11Ch]  +
call ds:DestroyWindow  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
cmp byte_4348A0 0 +
push edi  +
mov edi [ebp+0Ch] +
jz loc_40152E  +
push offset aDetailsSummary  +
push edi  +
call sub_408D80  +
jmp loc_40154B  +
cmp byte_434000 0 +
jz loc_40154E  +
push offset aFormatProperti  +
call sub_409DF0  +
push offset asc_42071C  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_40156E  +
push offset asc_420730  +
call sub_409DF0  +
push offset aArrayofvkforma  +
call sub_409DF0  +
add esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov byte ptr [ebp-1] 1 +
xor esi esi +
push edi  +
lea eax [ebp-1] +
push eax  +
push esi  +
push ebx  +
call loc_4015D0  +
inc esi  +
add esp 10h +
cmp esi 0B9h +
jl loc_401580  +
cmp byte_4348A0 0 +
pop esi  +
pop ebx  +
jz loc_4015B1  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 8 +
cmp byte_4348A1 0 +
pop edi  +
jz loc_4015C8  +
push offset asc_420754  +
call sub_409DF0  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
mov edi [ebp+14h] +
mov [ebp-30h] ecx +
lea ecx [ebp-28h] +
push ecx  +
push ebx  +
push dword ptr [eax+4]  +
mov [ebp-2Ch] ebx +
call vkGetPhysicalDeviceFormatProperties  +
cmp byte_4348A0 0 +
mov eax [ebp-28h] +
mov [ebp-18h] eax +
mov eax [ebp-24h] +
mov [ebp-10h] eax +
mov eax [ebp-20h] +
mov dword ptr [ebp-1Ch] offset aLineartilingFo +
mov dword ptr [ebp-14h] offset aOptimaltilingF +
mov dword ptr [ebp-0Ch] offset aBufferfeatures +
mov [ebp-8] eax +
jz loc_401648  +
push ebx  +
call sub_408350  +
push eax  +
push offset aDetailsSumma_0  +
push edi  +
call sub_408D80  +
add esp 10h +
jmp loc_401665  +
cmp byte_434000 0 +
jz loc_401665  +
push ebx  +
call sub_408350  +
push eax  +
push offset aFormat_S  +
call sub_409DF0  +
add esp 0Ch +
push esi  +
xor esi esi +
mov ebx offset unk_41FC66 +
cmp byte_4348A0 0 +
jz loc_4017B1  +
push dword ptr [ebp+esi*8-1Ch]  +
push offset aDetailsOpenS_0  +
push edi  +
call sub_408D80  +
mov ecx [ebp+esi*8-18h] +
add esp 0Ch +
test ecx ecx +
jnz loc_4016B8  +
push offset asc_41F4D4  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_1  +
push edi  +
call sub_408D80  +
add esp 8 +
jmp loc_4018CE  +
test ecx 8000h +
mov eax offset asc_41FBF8 +
cmovz eax ebx +
test ecx 4000h +
push eax  +
mov eax offset asc_41FC68 +
cmovz eax ebx +
test ecx 2000h +
push eax  +
mov eax offset asc_41FCD8 +
cmovz eax ebx +
test ecx 1000h +
push eax  +
mov eax offset asc_41FD58 +
cmovz eax ebx +
test ecx 800h +
push eax  +
mov eax offset asc_41FDD8 +
cmovz eax ebx +
test ecx 400h +
push eax  +
mov eax offset asc_41FE40 +
cmovz eax ebx +
test ecx 200h +
push eax  +
mov eax offset asc_41FEA8 +
cmovz eax ebx +
test ecx 100h +
push eax  +
mov eax offset asc_41FF20 +
cmovz eax ebx +
test cl 80h +
push eax  +
mov eax offset asc_41FF98 +
cmovz eax ebx +
test cl 40h +
push eax  +
mov eax offset asc_420008 +
cmovz eax ebx +
test cl 20h +
push eax  +
mov eax offset asc_420078 +
cmovz eax ebx +
test cl 10h +
push eax  +
mov eax offset asc_4200F8 +
cmovz eax ebx +
test cl 8 +
push eax  +
mov eax offset asc_420170 +
cmovz eax ebx +
test cl 4 +
push eax  +
mov eax offset asc_4201E8 +
cmovz eax ebx +
test cl 2 +
push eax  +
mov eax offset asc_420260 +
cmovz eax ebx +
test cl 1 +
push eax  +
mov eax offset asc_4202D0 +
cmovz eax ebx +
push eax  +
push offset aSSSSSSSSSSSSSS  +
push edi  +
call sub_408D80  +
add esp 48h +
push offset aDetails_1  +
push edi  +
call sub_408D80  +
add esp 8 +
jmp loc_4018CE  +
cmp byte_434000 0 +
jz loc_4018CE  +
push dword ptr [ebp+esi*8-1Ch]  +
push offset aS_0  +
call sub_409DF0  +
mov ecx [ebp+esi*8-18h] +
add esp 8 +
test ecx ecx +
jnz loc_4017E9  +
push offset aNone_0  +
call sub_409DF0  +
add esp 4 +
jmp loc_4018CE  +
test ecx 8000h +
mov eax offset aVk_format_feat +
cmovz eax ebx +
test ecx 4000h +
push eax  +
mov eax offset aVk_format_fe_0 +
cmovz eax ebx +
test ecx 2000h +
push eax  +
mov eax offset aVk_format_fe_1 +
cmovz eax ebx +
test ecx 1000h +
push eax  +
mov eax offset aVk_format_fe_2 +
cmovz eax ebx +
test ecx 800h +
push eax  +
mov eax offset aVk_format_fe_3 +
cmovz eax ebx +
test ecx 400h +
push eax  +
mov eax offset aVk_format_fe_4 +
cmovz eax ebx +
test ecx 200h +
push eax  +
mov eax offset aVk_format_fe_5 +
cmovz eax ebx +
test ecx 100h +
push eax  +
mov eax offset aVk_format_fe_6 +
cmovz eax ebx +
test cl 80h +
push eax  +
mov eax offset aVk_format_fe_7 +
cmovz eax ebx +
test cl 40h +
push eax  +
mov eax offset aVk_format_fe_8 +
cmovz eax ebx +
test cl 20h +
push eax  +
mov eax offset aVk_format_fe_9 +
cmovz eax ebx +
test cl 10h +
push eax  +
mov eax offset aVk_format_f_10 +
cmovz eax ebx +
test cl 8 +
push eax  +
mov eax offset aVk_format_f_11 +
cmovz eax ebx +
test cl 4 +
push eax  +
mov eax offset aVk_format_f_12 +
cmovz eax ebx +
test cl 2 +
push eax  +
mov eax offset aVk_format_f_13 +
cmovz eax ebx +
test cl 1 +
push eax  +
mov eax offset aVk_format_f_14 +
cmovz eax ebx +
push eax  +
push offset aSSSSSSSSSSSSSS  +
call sub_409DF0  +
add esp 44h +
inc esi  +
cmp esi 3 +
jb loc_401670  +
cmp byte_4348A0 0 +
pop esi  +
jz loc_4018F2  +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
add esp 8 +
jmp loc_401908  +
cmp byte_434000 0 +
jz loc_401908  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
cmp byte_4348A1 0 +
mov ebx [ebp-2Ch] +
jz loc_401993  +
cmp dword ptr [ebp-28h] 0 +
jnz loc_401926  +
cmp dword ptr [ebp-24h] 0 +
jnz loc_401926  +
cmp dword ptr [ebp-20h] 0 +
jz loc_401993  +
mov eax [ebp-30h] +
cmp byte ptr [eax] 0 +
jnz loc_40193D  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
jmp loc_401940  +
mov byte ptr [eax] 0 +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_420654  +
call sub_409DF0  +
push ebx  +
push offset aFormatidD  +
call sub_409DF0  +
push dword ptr [ebp-28h]  +
push offset aLineartilingfe  +
call sub_409DF0  +
push dword ptr [ebp-24h]  +
push offset aOptimaltilingf  +
call sub_409DF0  +
push dword ptr [ebp-20h]  +
push offset aBufferfeatur_0  +
call sub_409DF0  +
push offset asc_4206D0  +
call sub_409DF0  +
add esp 2Ch +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov ah byte_4348A0 +
mov edx [ebp+8] +
push edi  +
mov edi [ebp+18h] +
test ah ah +
jz loc_4019DC  +
push edx  +
push offset aSDetailsSummar  +
push edi  +
call sub_408D80  +
mov ah byte_4348A0 +
add esp 0Ch +
mov edx [ebp+8] +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jz loc_401A2E  +
mov ecx esi +
lea edi [ecx+1] +
mov [ebp+0Ch] edi +
mov edi [ebp+18h] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4019F3  +
sub ecx [ebp+0Ch] +
jz loc_401A2E  +
test ah ah +
jz loc_401A14  +
push esi  +
push offset aSExtensions  +
push edi  +
call sub_408D80  +
add esp 0Ch +
jmp loc_401A56  +
cmp byte_434000 0 +
jz loc_401A96  +
push esi  +
push edx  +
push offset aSSExtensions  +
call sub_409DF0  +
add esp 0Ch +
jmp loc_401A56  +
test ah ah +
jz loc_401A3F  +
push offset aExtensions  +
push edi  +
call sub_408D80  +
jmp loc_401A53  +
cmp byte_434000 0 +
jz loc_401A96  +
push edx  +
push offset aSextensions  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_401A7F  +
push ebx  +
push offset aCountDivClassV  +
push edi  +
call sub_408D80  +
add esp 0Ch +
test ebx ebx +
jz loc_401A96  +
push offset asc_41DD94  +
push edi  +
call sub_408D80  +
jmp loc_401A93  +
cmp byte_434000 0 +
jz loc_401A96  +
push ebx  +
push offset aCountD  +
call sub_409DF0  +
add esp 8 +
mov eax offset aDevice +
jz loc_401AF1  +
push offset asc_420730  +
call sub_409DF0  +
push offset aArrayofvkexten  +
call sub_409DF0  +
add esp 8 +
mov esi [ebp+14h] +
push offset loc_407D10  +
push 104h  +
push ebx  +
push esi  +
call sub_40D5A0  +
mov eax [ebp+10h] +
add esp 10h +
xor ebx ebx +
test eax eax +
jz loc_401BE9  +
cmp byte_4348A0 0 +
jz loc_401B4E  +
push dword ptr [ebp+8]  +
push offset aSDetailsSumm_0  +
push edi  +
call sub_408D80  +
push dword ptr [esi+100h]  +
push esi  +
push offset aDivClassType_0  +
push edi  +
call sub_408D80  +
push offset aSummaryDetails  +
push edi  +
call sub_408D80  +
add esp 24h +
jmp loc_401B78  +
cmp byte_434000 0 +
jz loc_401B7B  +
push dword ptr [ebp+8]  +
push offset aS_1  +
call sub_409DF0  +
push dword ptr [esi+100h]  +
push esi  +
push offset a36sExtensionRe  +
call sub_409DF0  +
add esp 14h +
mov eax [ebp+10h] +
cmp byte ptr [ebp+0Fh] 0 +
jz loc_401BDA  +
cmp byte_4348A1 0 +
jz loc_401BDA  +
test ebx ebx +
jz loc_401B9B  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_420654  +
call sub_409DF0  +
push esi  +
push offset aExtensionnameS  +
call sub_409DF0  +
push dword ptr [esi+100h]  +
push offset aSpecversionU_0  +
call sub_409DF0  +
push offset asc_4206D0  +
call sub_409DF0  +
mov eax [ebp+10h] +
add esp 1Ch +
inc ebx  +
add esi 104h +
cmp ebx eax +
jb loc_401B15  +
cmp byte_4348A0 0 +
pop esi  +
pop ebx  +
jz loc_401C19  +
test eax eax +
jz loc_401C0B  +
push dword ptr [ebp+8]  +
push offset aSDetails  +
push edi  +
call sub_408D80  +
add esp 0Ch +
jmp loc_401C19  +
push offset aDetails_2  +
push edi  +
call sub_408D80  +
add esp 8 +
cmp byte ptr [ebp+0Fh] 0 +
jz loc_401C48  +
cmp byte_4348A1 0 +
jz loc_401C48  +
cmp dword ptr [ebp+10h] 0 +
jbe loc_401C3B  +
push offset asc_42B6D0  +
call sub_409DF0  +
add esp 4 +
push offset asc_42B6D4  +
call sub_409DF0  +
add esp 4 +
push edi  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 0Ch +
pop edi  +
pop ebp  +
retn   +
***
cmp byte_4348A0 0 +
push edi  +
mov edi [ebp+arg_0] +
jz loc_4024EA  +
push esi  +
mov esi [ebp+arg_4] +
push offset aDetailsSumma_1  +
push esi  +
call sub_408D80  +
push dword ptr [edi]  +
push offset aDetailsSumma_2  +
push esi  +
call sub_408D80  +
push dword ptr [edi+4]  +
push offset aDetailsSumma_3  +
push esi  +
call sub_408D80  +
push dword ptr [edi+8]  +
push offset aDetailsSumma_4  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0Ch]  +
push offset aDetailsSumma_5  +
push esi  +
call sub_408D80  +
push dword ptr [edi+10h]  +
push offset aDetailsSumma_6  +
push esi  +
call sub_408D80  +
add esp 44h +
push dword ptr [edi+14h]  +
push offset aDetailsSumma_7  +
push esi  +
call sub_408D80  +
push dword ptr [edi+18h]  +
push offset aDetailsSumma_8  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1Ch]  +
push offset aDetailsSumma_9  +
push esi  +
call sub_408D80  +
push dword ptr [edi+20h]  +
push offset aDetailsSumm_10  +
push esi  +
call sub_408D80  +
push dword ptr [edi+24h]  +
push offset aDetailsSumm_11  +
push esi  +
call sub_408D80  +
push dword ptr [edi+28h]  +
push offset aDetailsSumm_12  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+34h]  +
push dword ptr [edi+30h]  +
push offset aDetailsSumm_13  +
push esi  +
call sub_408D80  +
push dword ptr [edi+3Ch]  +
push dword ptr [edi+38h]  +
push offset aDetailsSumm_14  +
push esi  +
call sub_408D80  +
push dword ptr [edi+40h]  +
push offset aDetailsSumm_15  +
push esi  +
call sub_408D80  +
push dword ptr [edi+44h]  +
push offset aDetailsSumm_16  +
push esi  +
call sub_408D80  +
push dword ptr [edi+48h]  +
push offset aDetailsSumm_17  +
push esi  +
call sub_408D80  +
add esp 44h +
push dword ptr [edi+4Ch]  +
push offset aDetailsSumm_18  +
push esi  +
call sub_408D80  +
push dword ptr [edi+50h]  +
push offset aDetailsSumm_19  +
push esi  +
call sub_408D80  +
push dword ptr [edi+54h]  +
push offset aDetailsSumm_20  +
push esi  +
call sub_408D80  +
push dword ptr [edi+58h]  +
push offset aDetailsSumm_21  +
push esi  +
call sub_408D80  +
push dword ptr [edi+5Ch]  +
push offset aDetailsSumm_22  +
push esi  +
call sub_408D80  +
push dword ptr [edi+60h]  +
push offset aDetailsSumm_23  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+64h]  +
push offset aDetailsSumm_24  +
push esi  +
call sub_408D80  +
push dword ptr [edi+68h]  +
push offset aDetailsSumm_25  +
push esi  +
call sub_408D80  +
push dword ptr [edi+6Ch]  +
push offset aDetailsSumm_26  +
push esi  +
call sub_408D80  +
push dword ptr [edi+70h]  +
push offset aDetailsSumm_27  +
push esi  +
call sub_408D80  +
push dword ptr [edi+74h]  +
push offset aDetailsSumm_28  +
push esi  +
call sub_408D80  +
push dword ptr [edi+78h]  +
push offset aDetailsSumm_29  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+7Ch]  +
push offset aDetailsSumm_30  +
push esi  +
call sub_408D80  +
push dword ptr [edi+80h]  +
push offset aDetailsSumm_31  +
push esi  +
call sub_408D80  +
push dword ptr [edi+84h]  +
push offset aDetailsSumm_32  +
push esi  +
call sub_408D80  +
push dword ptr [edi+88h]  +
push offset aDetailsSumm_33  +
push esi  +
call sub_408D80  +
push dword ptr [edi+8Ch]  +
push offset aDetailsSumm_34  +
push esi  +
call sub_408D80  +
push dword ptr [edi+90h]  +
push offset aDetailsSumm_35  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+94h]  +
push offset aDetailsSumm_36  +
push esi  +
call sub_408D80  +
push dword ptr [edi+98h]  +
push offset aDetailsSumm_37  +
push esi  +
call sub_408D80  +
push dword ptr [edi+9Ch]  +
push offset aDetailsSumm_38  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0A0h]  +
push offset aDetailsSumm_39  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0A4h]  +
push offset aDetailsSumm_40  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0A8h]  +
push offset aDetailsSumm_41  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+0ACh]  +
push offset aDetailsSumm_42  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0B0h]  +
push offset aDetailsSumm_43  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0B4h]  +
push offset aDetailsSumm_44  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0B8h]  +
push offset aDetailsSumm_45  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0BCh]  +
push offset aDetailsSumm_46  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0C0h]  +
push offset aDetailsSumm_47  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+0C4h]  +
push offset aDetailsSumm_48  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0C8h]  +
push offset aDetailsSumm_49  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0CCh]  +
push offset aDetailsSumm_50  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0D0h]  +
push offset aDetailsSumm_51  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0D4h]  +
push offset aDetailsSumm_52  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0D8h]  +
push offset aDetailsSumm_53  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+0DCh]  +
push offset aDetailsSumm_54  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0E0h]  +
push offset aDetailsSumm_55  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0E4h]  +
push offset aDetailsSumm_56  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0E8h]  +
push offset aDetailsSumm_57  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0ECh]  +
push offset aDetailsSumm_58  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0F0h]  +
push offset aDetailsSumm_59  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+0F4h]  +
push offset aDetailsSumm_60  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0F8h]  +
push offset aDetailsSumm_61  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0FCh]  +
push offset aDetailsSumm_62  +
push esi  +
call sub_408D80  +
push dword ptr [edi+100h]  +
push offset aDetailsSumm_63  +
push esi  +
call sub_408D80  +
push dword ptr [edi+104h]  +
push offset aDetailsSumm_64  +
push esi  +
call sub_408D80  +
push dword ptr [edi+108h]  +
push offset aDetailsSumm_65  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+10Ch] +
add esp 48h +
cvtps2pd xmm0 xmm0 +
sub esp 8 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_66  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+110h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_67  +
push esi  +
call sub_408D80  +
push dword ptr [edi+114h]  +
push offset aDetailsSumm_68  +
push esi  +
call sub_408D80  +
push dword ptr [edi+118h]  +
push offset aDetailsSumm_69  +
push esi  +
call sub_408D80  +
push dword ptr [edi+11Ch]  +
push offset aDetailsSumm_70  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+120h] +
add esp 2Ch +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_71  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+124h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_72  +
push esi  +
call sub_408D80  +
push dword ptr [edi+128h]  +
push offset aDetailsSumm_73  +
push esi  +
call sub_408D80  +
push dword ptr [edi+12Ch]  +
push offset aDetailsSumm_74  +
push esi  +
call sub_408D80  +
push dword ptr [edi+134h]  +
push dword ptr [edi+130h]  +
push offset aDetailsSumm_75  +
push esi  +
call sub_408D80  +
push dword ptr [edi+13Ch]  +
push dword ptr [edi+138h]  +
push offset aDetailsSumm_76  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+144h]  +
push dword ptr [edi+140h]  +
push offset aDetailsSumm_77  +
push esi  +
call sub_408D80  +
push dword ptr [edi+148h]  +
push offset aDetailsSumm_78  +
push esi  +
call sub_408D80  +
push dword ptr [edi+14Ch]  +
push offset aDetailsSumm_79  +
push esi  +
call sub_408D80  +
push dword ptr [edi+150h]  +
push offset aDetailsSumm_80  +
push esi  +
call sub_408D80  +
push dword ptr [edi+154h]  +
push offset aDetailsSumm_81  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+158h] +
add esp 40h +
cvtps2pd xmm0 xmm0 +
sub esp 8 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_82  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+15Ch] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset aDetailsSumm_83  +
push esi  +
call sub_408D80  +
push dword ptr [edi+160h]  +
push offset aDetailsSumm_84  +
push esi  +
call sub_408D80  +
push dword ptr [edi+164h]  +
push offset aDetailsSumm_85  +
push esi  +
call sub_408D80  +
push dword ptr [edi+168h]  +
push offset aDetailsSumm_86  +
push esi  +
call sub_408D80  +
push dword ptr [edi+16Ch]  +
push offset aDetailsSumm_87  +
push esi  +
call sub_408D80  +
add esp 40h +
push dword ptr [edi+170h]  +
push offset aDetailsSumm_88  +
push esi  +
call sub_408D80  +
push dword ptr [edi+174h]  +
push offset aDetailsSumm_89  +
push esi  +
call sub_408D80  +
push dword ptr [edi+178h]  +
push offset aDetailsSumm_90  +
push esi  +
call sub_408D80  +
push dword ptr [edi+17Ch]  +
push offset aDetailsSumm_91  +
push esi  +
call sub_408D80  +
push dword ptr [edi+180h]  +
push offset aDetailsSumm_92  +
push esi  +
call sub_408D80  +
push dword ptr [edi+184h]  +
push offset aDetailsSumm_93  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+18Ch]  +
push offset aDetailsSumm_94  +
push esi  +
call sub_408D80  +
push dword ptr [edi+190h]  +
push offset aDetailsSumm_95  +
push esi  +
call sub_408D80  +
push dword ptr [edi+188h]  +
push offset aDetailsSumm_96  +
push esi  +
call sub_408D80  +
push dword ptr [edi+194h]  +
push offset aDetailsSumm_97  +
push esi  +
call sub_408D80  +
push dword ptr [edi+198h]  +
push offset aDetailsSumm_98  +
push esi  +
call sub_408D80  +
push dword ptr [edi+19Ch]  +
push offset asc_427250  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1A0h] +
add esp 48h +
cvtps2pd xmm0 xmm0 +
sub esp 8 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_4272C8  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1A4h]  +
push offset asc_427340  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1A8h]  +
push offset asc_4273B8  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1ACh]  +
push offset asc_427430  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1B0h]  +
push offset asc_4274A8  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1B4h] +
add esp 40h +
cvtps2pd xmm0 xmm0 +
sub esp 8 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427520  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1B8h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427598  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1BCh] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427610  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1C0h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427688  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1C4h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427700  +
push esi  +
call sub_408D80  +
movss xmm0 dword ptr [edi+1C8h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+10h+var_10] xmm0 +
push offset asc_427778  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1CCh]  +
push offset asc_4277F0  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1D0h]  +
push offset asc_427868  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1DCh]  +
push dword ptr [edi+1D8h]  +
push offset asc_4278E0  +
push esi  +
call sub_408D80  +
push dword ptr [edi+1E4h]  +
push dword ptr [edi+1E0h]  +
push offset asc_427958  +
push esi  +
call sub_408D80  +
add esp 48h +
push dword ptr [edi+1ECh]  +
push dword ptr [edi+1E8h]  +
push offset asc_4279D0  +
push esi  +
call sub_408D80  +
push offset aDetails  +
push esi  +
call sub_408D80  +
add esp 18h +
pop esi  +
jmp loc_402CC7  +
cmp byte_434000 0 +
jz loc_402CC7  +
push offset aVkphysicaldevi  +
call sub_409DF0  +
push offset asc_427A64  +
call sub_409DF0  +
push dword ptr [edi]  +
push offset aMaximagedimens  +
call sub_409DF0  +
push dword ptr [edi+4]  +
push offset aMaximagedime_0  +
call sub_409DF0  +
push dword ptr [edi+8]  +
push offset aMaximagedime_1  +
call sub_409DF0  +
push dword ptr [edi+0Ch]  +
push offset aMaximagedime_2  +
call sub_409DF0  +
push dword ptr [edi+10h]  +
push offset aMaximagearrayl  +
call sub_409DF0  +
push dword ptr [edi+14h]  +
push offset aMaxtexelbuffer  +
call sub_409DF0  +
push dword ptr [edi+18h]  +
push offset aMaxuniformbuff  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+1Ch]  +
push offset aMaxstoragebuff  +
call sub_409DF0  +
push dword ptr [edi+20h]  +
push offset aMaxpushconstan  +
call sub_409DF0  +
push dword ptr [edi+24h]  +
push offset aMaxmemoryalloc  +
call sub_409DF0  +
push dword ptr [edi+28h]  +
push offset aMaxsamplerallo  +
call sub_409DF0  +
push dword ptr [edi+34h]  +
push dword ptr [edi+30h]  +
push offset aBufferimagegra  +
call sub_409DF0  +
push dword ptr [edi+3Ch]  +
push dword ptr [edi+38h]  +
push offset aSparseaddresss  +
call sub_409DF0  +
push dword ptr [edi+40h]  +
push offset aMaxbounddescri  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+44h]  +
push offset aMaxperstagedes  +
call sub_409DF0  +
push dword ptr [edi+48h]  +
push offset aMaxperstaged_0  +
call sub_409DF0  +
push dword ptr [edi+4Ch]  +
push offset aMaxperstaged_1  +
call sub_409DF0  +
push dword ptr [edi+50h]  +
push offset aMaxperstaged_2  +
call sub_409DF0  +
push dword ptr [edi+54h]  +
push offset aMaxperstaged_3  +
call sub_409DF0  +
push dword ptr [edi+58h]  +
push offset aMaxperstaged_4  +
call sub_409DF0  +
push dword ptr [edi+5Ch]  +
push offset aMaxperstageres  +
call sub_409DF0  +
push dword ptr [edi+60h]  +
push offset aMaxdescriptors  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+64h]  +
push offset aMaxdescripto_0  +
call sub_409DF0  +
push dword ptr [edi+68h]  +
push offset aMaxdescripto_1  +
call sub_409DF0  +
push dword ptr [edi+6Ch]  +
push offset aMaxdescripto_2  +
call sub_409DF0  +
push dword ptr [edi+70h]  +
push offset aMaxdescripto_3  +
call sub_409DF0  +
push dword ptr [edi+74h]  +
push offset aMaxdescripto_4  +
call sub_409DF0  +
push dword ptr [edi+78h]  +
push offset aMaxdescripto_5  +
call sub_409DF0  +
push dword ptr [edi+7Ch]  +
push offset aMaxdescripto_6  +
call sub_409DF0  +
push dword ptr [edi+80h]  +
push offset aMaxvertexinput  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+84h]  +
push offset aMaxvertexinp_0  +
call sub_409DF0  +
push dword ptr [edi+88h]  +
push offset aMaxvertexinp_1  +
call sub_409DF0  +
push dword ptr [edi+8Ch]  +
push offset aMaxvertexinp_2  +
call sub_409DF0  +
push dword ptr [edi+90h]  +
push offset aMaxvertexoutpu  +
call sub_409DF0  +
push dword ptr [edi+94h]  +
push offset aMaxtessellatio  +
call sub_409DF0  +
push dword ptr [edi+98h]  +
push offset aMaxtessellat_0  +
call sub_409DF0  +
push dword ptr [edi+9Ch]  +
push offset aMaxtessellat_1  +
call sub_409DF0  +
push dword ptr [edi+0A0h]  +
push offset aMaxtessellat_2  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+0A4h]  +
push offset aMaxtessellat_3  +
call sub_409DF0  +
push dword ptr [edi+0A8h]  +
push offset aMaxtessellat_4  +
call sub_409DF0  +
push dword ptr [edi+0ACh]  +
push offset aMaxtessellat_5  +
call sub_409DF0  +
push dword ptr [edi+0B0h]  +
push offset aMaxtessellat_6  +
call sub_409DF0  +
push dword ptr [edi+0B4h]  +
push offset aMaxgeometrysha  +
call sub_409DF0  +
push dword ptr [edi+0B8h]  +
push offset aMaxgeometryinp  +
call sub_409DF0  +
push dword ptr [edi+0BCh]  +
push offset aMaxgeometryout  +
call sub_409DF0  +
push dword ptr [edi+0C0h]  +
push offset aMaxgeometryo_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+0C4h]  +
push offset aMaxgeometrytot  +
call sub_409DF0  +
push dword ptr [edi+0C8h]  +
push offset aMaxfragmentinp  +
call sub_409DF0  +
push dword ptr [edi+0CCh]  +
push offset aMaxfragmentout  +
call sub_409DF0  +
push dword ptr [edi+0D0h]  +
push offset aMaxfragmentdua  +
call sub_409DF0  +
push dword ptr [edi+0D4h]  +
push offset aMaxfragmentcom  +
call sub_409DF0  +
push dword ptr [edi+0D8h]  +
push offset aMaxcomputeshar  +
call sub_409DF0  +
push dword ptr [edi+0DCh]  +
push offset aMaxcomputework  +
call sub_409DF0  +
push dword ptr [edi+0E0h]  +
push offset aMaxcomputewo_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+0E4h]  +
push offset aMaxcomputewo_1  +
call sub_409DF0  +
push dword ptr [edi+0E8h]  +
push offset aMaxcomputewo_2  +
call sub_409DF0  +
push dword ptr [edi+0ECh]  +
push offset aMaxcomputewo_3  +
call sub_409DF0  +
push dword ptr [edi+0F0h]  +
push offset aMaxcomputewo_4  +
call sub_409DF0  +
push dword ptr [edi+0F4h]  +
push offset aMaxcomputewo_5  +
call sub_409DF0  +
push dword ptr [edi+0F8h]  +
push offset aSubpixelprecis  +
call sub_409DF0  +
push dword ptr [edi+0FCh]  +
push offset aSubtexelprecis  +
call sub_409DF0  +
push dword ptr [edi+100h]  +
push offset aMipmapprecisio  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+104h]  +
push offset aMaxdrawindexed  +
call sub_409DF0  +
push dword ptr [edi+108h]  +
push offset aMaxdrawindirec  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+10Ch] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxsamplerlodb  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+110h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxsampleranis  +
call sub_409DF0  +
push dword ptr [edi+114h]  +
push offset aMaxviewportsU  +
call sub_409DF0  +
push dword ptr [edi+118h]  +
push offset aMaxviewportdim  +
call sub_409DF0  +
push dword ptr [edi+11Ch]  +
push offset aMaxviewportd_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+120h] +
add esp 1Ch +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aViewportbounds  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+124h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aViewportboun_0  +
call sub_409DF0  +
push dword ptr [edi+128h]  +
push offset aViewportsubpix  +
call sub_409DF0  +
push dword ptr [edi+12Ch]  +
push offset aMinmemorymapal  +
call sub_409DF0  +
push dword ptr [edi+134h]  +
push dword ptr [edi+130h]  +
push offset aMintexelbuffer  +
call sub_409DF0  +
push dword ptr [edi+13Ch]  +
push dword ptr [edi+138h]  +
push offset aMinuniformbuff  +
call sub_409DF0  +
push dword ptr [edi+144h]  +
push dword ptr [edi+140h]  +
push offset aMinstoragebuff  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+148h]  +
push offset aMintexeloffset  +
call sub_409DF0  +
push dword ptr [edi+14Ch]  +
push offset aMaxtexeloffset  +
call sub_409DF0  +
push dword ptr [edi+150h]  +
push offset aMintexelgather  +
call sub_409DF0  +
push dword ptr [edi+154h]  +
push offset aMaxtexelgather  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+158h] +
add esp 18h +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMininterpolati  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+15Ch] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxinterpolati  +
call sub_409DF0  +
push dword ptr [edi+160h]  +
push offset aSubpixelinterp  +
call sub_409DF0  +
push dword ptr [edi+164h]  +
push offset aMaxframebuffer  +
call sub_409DF0  +
push dword ptr [edi+168h]  +
push offset aMaxframebuff_0  +
call sub_409DF0  +
push dword ptr [edi+16Ch]  +
push offset aMaxframebuff_1  +
call sub_409DF0  +
push dword ptr [edi+170h]  +
push offset aFramebuffercol  +
call sub_409DF0  +
push dword ptr [edi+174h]  +
push offset aFramebufferdep  +
call sub_409DF0  +
push dword ptr [edi+178h]  +
push offset aFramebufferste  +
call sub_409DF0  +
add esp 44h +
push dword ptr [edi+17Ch]  +
push offset aFramebuffernoa  +
call sub_409DF0  +
push dword ptr [edi+180h]  +
push offset aMaxcolorattach  +
call sub_409DF0  +
push dword ptr [edi+184h]  +
push offset aSampledimageco  +
call sub_409DF0  +
push dword ptr [edi+18Ch]  +
push offset aSampledimagede  +
call sub_409DF0  +
push dword ptr [edi+190h]  +
push offset aSampledimagest  +
call sub_409DF0  +
push dword ptr [edi+188h]  +
push offset aSampledimagein  +
call sub_409DF0  +
push dword ptr [edi+194h]  +
push offset aStorageimagesa  +
call sub_409DF0  +
push dword ptr [edi+198h]  +
push offset aMaxsamplemaskw  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+19Ch]  +
push offset aTimestampcompu  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1A0h] +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aTimestampperio  +
call sub_409DF0  +
push dword ptr [edi+1A4h]  +
push offset aMaxclipdistanc  +
call sub_409DF0  +
push dword ptr [edi+1A8h]  +
push offset aMaxculldistanc  +
call sub_409DF0  +
push dword ptr [edi+1ACh]  +
push offset aMaxcombinedcli  +
call sub_409DF0  +
push dword ptr [edi+1B0h]  +
push offset aDiscretequeuep  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1B4h] +
add esp 24h +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aPointsizerange  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1B8h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aPointsizeran_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1BCh] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aLinewidthrange  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C0h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aLinewidthran_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C4h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aPointsizegranu  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C8h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aLinewidthgranu  +
call sub_409DF0  +
push dword ptr [edi+1CCh]  +
push offset aStrictlinesU  +
call sub_409DF0  +
push dword ptr [edi+1D0h]  +
push offset aStandardsample  +
call sub_409DF0  +
push dword ptr [edi+1DCh]  +
push dword ptr [edi+1D8h]  +
push offset aOptimalbufferc  +
call sub_409DF0  +
push dword ptr [edi+1E4h]  +
push dword ptr [edi+1E0h]  +
push offset aOptimalbuffe_0  +
call sub_409DF0  +
push dword ptr [edi+1ECh]  +
push dword ptr [edi+1E8h]  +
push offset aNoncoherentato  +
call sub_409DF0  +
add esp 40h +
cmp byte_4348A1 0 +
jz loc_403529  +
push offset asc_420730  +
call sub_409DF0  +
push offset aLimits  +
call sub_409DF0  +
push dword ptr [edi]  +
push offset aMaximagedime_3  +
call sub_409DF0  +
push dword ptr [edi+4]  +
push offset aMaximagedime_4  +
call sub_409DF0  +
push dword ptr [edi+8]  +
push offset aMaximagedime_5  +
call sub_409DF0  +
push dword ptr [edi+0Ch]  +
push offset aMaximagedime_6  +
call sub_409DF0  +
push dword ptr [edi+10h]  +
push offset aMaximagearra_0  +
call sub_409DF0  +
push dword ptr [edi+14h]  +
push offset aMaxtexelbuff_0  +
call sub_409DF0  +
push dword ptr [edi+18h]  +
push offset aMaxuniformbu_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+1Ch]  +
push offset aMaxstoragebu_0  +
call sub_409DF0  +
push dword ptr [edi+20h]  +
push offset aMaxpushconst_0  +
call sub_409DF0  +
push dword ptr [edi+24h]  +
push offset aMaxmemoryall_0  +
call sub_409DF0  +
push dword ptr [edi+28h]  +
push offset aMaxsampleral_0  +
call sub_409DF0  +
push dword ptr [edi+34h]  +
push dword ptr [edi+30h]  +
push offset aBufferimageg_0  +
call sub_409DF0  +
push dword ptr [edi+3Ch]  +
push dword ptr [edi+38h]  +
push offset aSparseaddres_0  +
call sub_409DF0  +
push dword ptr [edi+40h]  +
push offset aMaxbounddesc_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+44h]  +
push offset aMaxperstaged_5  +
call sub_409DF0  +
push dword ptr [edi+48h]  +
push offset aMaxperstaged_6  +
call sub_409DF0  +
push dword ptr [edi+4Ch]  +
push offset aMaxperstaged_7  +
call sub_409DF0  +
push dword ptr [edi+50h]  +
push offset aMaxperstaged_8  +
call sub_409DF0  +
push dword ptr [edi+54h]  +
push offset aMaxperstaged_9  +
call sub_409DF0  +
push dword ptr [edi+58h]  +
push offset aMaxperstage_10  +
call sub_409DF0  +
push dword ptr [edi+5Ch]  +
push offset aMaxperstager_0  +
call sub_409DF0  +
push dword ptr [edi+60h]  +
push offset aMaxdescripto_7  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+64h]  +
push offset aMaxdescripto_8  +
call sub_409DF0  +
push dword ptr [edi+68h]  +
push offset aMaxdescripto_9  +
call sub_409DF0  +
push dword ptr [edi+6Ch]  +
push offset aMaxdescript_10  +
call sub_409DF0  +
push dword ptr [edi+70h]  +
push offset aMaxdescript_11  +
call sub_409DF0  +
push dword ptr [edi+74h]  +
push offset aMaxdescript_12  +
call sub_409DF0  +
push dword ptr [edi+78h]  +
push offset aMaxdescript_13  +
call sub_409DF0  +
push dword ptr [edi+7Ch]  +
push offset aMaxdescript_14  +
call sub_409DF0  +
push dword ptr [edi+80h]  +
push offset aMaxvertexinp_3  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+84h]  +
push offset aMaxvertexinp_4  +
call sub_409DF0  +
push dword ptr [edi+88h]  +
push offset aMaxvertexinp_5  +
call sub_409DF0  +
push dword ptr [edi+8Ch]  +
push offset aMaxvertexinp_6  +
call sub_409DF0  +
push dword ptr [edi+90h]  +
push offset aMaxvertexout_0  +
call sub_409DF0  +
push dword ptr [edi+94h]  +
push offset aMaxtessellat_7  +
call sub_409DF0  +
push dword ptr [edi+98h]  +
push offset aMaxtessellat_8  +
call sub_409DF0  +
push dword ptr [edi+9Ch]  +
push offset aMaxtessellat_9  +
call sub_409DF0  +
push dword ptr [edi+0A0h]  +
push offset aMaxtessella_10  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+0A4h]  +
push offset aMaxtessella_11  +
call sub_409DF0  +
push dword ptr [edi+0A8h]  +
push offset aMaxtessella_12  +
call sub_409DF0  +
push dword ptr [edi+0ACh]  +
push offset aMaxtessella_13  +
call sub_409DF0  +
push dword ptr [edi+0B0h]  +
push offset aMaxtessella_14  +
call sub_409DF0  +
push dword ptr [edi+0B4h]  +
push offset aMaxgeometrys_0  +
call sub_409DF0  +
push dword ptr [edi+0B8h]  +
push offset aMaxgeometryi_0  +
call sub_409DF0  +
push dword ptr [edi+0BCh]  +
push offset aMaxgeometryo_1  +
call sub_409DF0  +
push dword ptr [edi+0C0h]  +
push offset aMaxgeometryo_2  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+0C4h]  +
push offset aMaxgeometryt_0  +
call sub_409DF0  +
push dword ptr [edi+0C8h]  +
push offset aMaxfragmenti_0  +
call sub_409DF0  +
push dword ptr [edi+0CCh]  +
push offset aMaxfragmento_0  +
call sub_409DF0  +
push dword ptr [edi+0D0h]  +
push offset aMaxfragmentd_0  +
call sub_409DF0  +
push dword ptr [edi+0D4h]  +
push offset aMaxfragmentc_0  +
call sub_409DF0  +
push dword ptr [edi+0D8h]  +
push offset aMaxcomputesh_0  +
call sub_409DF0  +
push offset aMaxcomputewo_6  +
call sub_409DF0  +
push dword ptr [edi+0DCh]  +
push offset aU  +
call sub_409DF0  +
push dword ptr [edi+0E0h]  +
push offset aU  +
call sub_409DF0  +
add esp 44h +
push dword ptr [edi+0E4h]  +
push offset aU_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
push dword ptr [edi+0E8h]  +
push offset aMaxcomputewo_7  +
call sub_409DF0  +
push offset aMaxcomputewo_8  +
call sub_409DF0  +
push dword ptr [edi+0ECh]  +
push offset aU  +
call sub_409DF0  +
push dword ptr [edi+0F0h]  +
push offset aU  +
call sub_409DF0  +
push dword ptr [edi+0F4h]  +
push offset aU_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
push dword ptr [edi+0F8h]  +
push offset aSubpixelprec_0  +
call sub_409DF0  +
push dword ptr [edi+0FCh]  +
push offset aSubtexelprec_0  +
call sub_409DF0  +
add esp 44h +
push dword ptr [edi+100h]  +
push offset aMipmapprecis_0  +
call sub_409DF0  +
push dword ptr [edi+104h]  +
push offset aMaxdrawindex_0  +
call sub_409DF0  +
push dword ptr [edi+108h]  +
push offset aMaxdrawindir_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+10Ch] +
add esp 10h +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxsamplerlo_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+110h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxsampleran_0  +
call sub_409DF0  +
push dword ptr [edi+114h]  +
push offset aMaxviewports_0  +
call sub_409DF0  +
push offset aMaxviewportd_1  +
call sub_409DF0  +
push dword ptr [edi+118h]  +
push offset aU  +
call sub_409DF0  +
push dword ptr [edi+11Ch]  +
push offset aU_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
push offset aViewportboun_1  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+120h] +
cvtps2pd xmm0 xmm0 +
add esp 28h +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+124h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
push dword ptr [edi+128h]  +
push offset aViewportsubp_0  +
call sub_409DF0  +
push dword ptr [edi+12Ch]  +
push offset aMinmemorymap_0  +
call sub_409DF0  +
push dword ptr [edi+134h]  +
push dword ptr [edi+130h]  +
push offset aMintexelbuff_0  +
call sub_409DF0  +
push dword ptr [edi+13Ch]  +
push dword ptr [edi+138h]  +
push offset aMinuniformbu_0  +
call sub_409DF0  +
push dword ptr [edi+144h]  +
push dword ptr [edi+140h]  +
push offset aMinstoragebu_0  +
call sub_409DF0  +
add esp 44h +
push dword ptr [edi+148h]  +
push offset aMintexeloffs_0  +
call sub_409DF0  +
push dword ptr [edi+14Ch]  +
push offset aMaxtexeloffs_0  +
call sub_409DF0  +
push dword ptr [edi+150h]  +
push offset aMintexelgath_0  +
call sub_409DF0  +
push dword ptr [edi+154h]  +
push offset aMaxtexelgath_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+158h] +
add esp 18h +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMininterpola_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+15Ch] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aMaxinterpola_0  +
call sub_409DF0  +
push dword ptr [edi+160h]  +
push offset aSubpixelinte_0  +
call sub_409DF0  +
push dword ptr [edi+164h]  +
push offset aMaxframebuff_2  +
call sub_409DF0  +
push dword ptr [edi+168h]  +
push offset aMaxframebuff_3  +
call sub_409DF0  +
push dword ptr [edi+16Ch]  +
push offset aMaxframebuff_4  +
call sub_409DF0  +
push dword ptr [edi+170h]  +
push offset aFramebufferc_0  +
call sub_409DF0  +
push dword ptr [edi+174h]  +
push offset aFramebufferd_0  +
call sub_409DF0  +
push dword ptr [edi+178h]  +
push offset aFramebuffers_0  +
call sub_409DF0  +
add esp 44h +
push dword ptr [edi+17Ch]  +
push offset aFramebuffern_0  +
call sub_409DF0  +
push dword ptr [edi+180h]  +
push offset aMaxcoloratta_0  +
call sub_409DF0  +
push dword ptr [edi+184h]  +
push offset aSampledimage_0  +
call sub_409DF0  +
push dword ptr [edi+188h]  +
push offset aSampledimage_1  +
call sub_409DF0  +
push dword ptr [edi+18Ch]  +
push offset aSampledimage_2  +
call sub_409DF0  +
push dword ptr [edi+190h]  +
push offset aSampledimage_3  +
call sub_409DF0  +
push dword ptr [edi+194h]  +
push offset aStorageimage_0  +
call sub_409DF0  +
push dword ptr [edi+198h]  +
push offset aMaxsamplemas_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [edi+19Ch]  +
push offset aTimestampcom_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1A0h] +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aTimestampper_0  +
call sub_409DF0  +
push dword ptr [edi+1A4h]  +
push offset aMaxclipdista_0  +
call sub_409DF0  +
push dword ptr [edi+1A8h]  +
push offset aMaxculldista_0  +
call sub_409DF0  +
push dword ptr [edi+1ACh]  +
push offset aMaxcombinedc_0  +
call sub_409DF0  +
push dword ptr [edi+1B0h]  +
push offset aDiscretequeu_0  +
call sub_409DF0  +
push offset aPointsizeran_1  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1B4h] +
add esp 28h +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1B8h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
push offset aLinewidthran_1  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1BCh] +
add esp 0Ch +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C0h] +
add esp 4 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aG_0  +
call sub_409DF0  +
push offset asc_429958  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C4h] +
add esp 8 +
cvtps2pd xmm0 xmm0 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aPointsizegra_0  +
call sub_409DF0  +
movss xmm0 dword ptr [edi+1C8h] +
cvtps2pd xmm0 xmm0 +
add esp 4 +
movsd [esp+0Ch+var_10+4] xmm0 +
push offset aLinewidthgra_0  +
call sub_409DF0  +
push dword ptr [edi+1CCh]  +
push offset aStrictlinesU_0  +
call sub_409DF0  +
push dword ptr [edi+1D0h]  +
push offset aStandardsamp_0  +
call sub_409DF0  +
push dword ptr [edi+1DCh]  +
push dword ptr [edi+1D8h]  +
push offset aOptimalbuffe_1  +
call sub_409DF0  +
push dword ptr [edi+1E4h]  +
push dword ptr [edi+1E0h]  +
push offset aOptimalbuffe_2  +
call sub_409DF0  +
push dword ptr [edi+1ECh]  +
push dword ptr [edi+1E8h]  +
push offset aNoncoherenta_0  +
call sub_409DF0  +
add esp 40h +
push offset asc_4206D0  +
call sub_409DF0  +
add esp 4 +
pop edi  +
pop ebp  +
retn   +
***
cmp byte_4348A0 0 +
push edi  +
mov edi [ebp+arg_0] +
jz loc_4035A8  +
push esi  +
mov esi [ebp+arg_4] +
push offset asc_423F88  +
push esi  +
call sub_408D80  +
push dword ptr [edi]  +
push offset asc_423FD0  +
push esi  +
call sub_408D80  +
push dword ptr [edi+4]  +
push offset asc_424048  +
push esi  +
call sub_408D80  +
push dword ptr [edi+8]  +
push offset asc_4240C0  +
push esi  +
call sub_408D80  +
push dword ptr [edi+0Ch]  +
push offset asc_424138  +
push esi  +
call sub_408D80  +
push dword ptr [edi+10h]  +
push offset asc_4241B0  +
push esi  +
call sub_408D80  +
add esp 44h +
push offset aDetails  +
push esi  +
call sub_408D80  +
add esp 8 +
pop esi  +
jmp loc_403608  +
cmp byte_434000 0 +
jz loc_403608  +
push offset aVkphysicalde_0  +
call sub_409DF0  +
push offset asc_424248  +
call sub_409DF0  +
push dword ptr [edi]  +
push offset aResidencystand  +
call sub_409DF0  +
push dword ptr [edi+4]  +
push offset aResidencysta_0  +
call sub_409DF0  +
push dword ptr [edi+8]  +
push offset aResidencysta_1  +
call sub_409DF0  +
push dword ptr [edi+0Ch]  +
push offset aResidencyalign  +
call sub_409DF0  +
push dword ptr [edi+10h]  +
push offset aResidencynonre  +
call sub_409DF0  +
add esp 30h +
cmp byte_4348A1 0 +
jz loc_403672  +
push offset asc_420730  +
call sub_409DF0  +
push offset aSparseproperti  +
call sub_409DF0  +
push dword ptr [edi]  +
push offset aResidencysta_2  +
call sub_409DF0  +
push dword ptr [edi+4]  +
push offset aResidencysta_3  +
call sub_409DF0  +
push dword ptr [edi+8]  +
push offset aResidencysta_4  +
call sub_409DF0  +
push dword ptr [edi+0Ch]  +
push offset aResidencyali_0  +
call sub_409DF0  +
push dword ptr [edi+10h]  +
push offset aResidencynon_0  +
call sub_409DF0  +
push offset asc_4206D0  +
call sub_409DF0  +
add esp 34h +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
mov edi [ebp+0Ch] +
mov eax [edi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_surface  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_404167  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov eax [ebx+20h] +
lea esi [ebx+48h] +
push esi  +
push dword ptr [ebx+10Ch]  +
push dword ptr [ebx+108h]  +
push dword ptr [edi+4]  +
call eax  +
cmp byte_4348A0 0 +
mov edi [ebp+10h] +
jz loc_403A7B  +
push offset asc_41DEA4  +
push edi  +
call sub_408D80  +
push dword ptr [esi]  +
push offset asc_41DEE0  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+4Ch]  +
push offset asc_41DF38  +
push edi  +
call sub_408D80  +
push offset asc_41DF90  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+50h]  +
push offset asc_41DFC8  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+54h]  +
push offset asc_41E018  +
push edi  +
call sub_408D80  +
add esp 40h +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push offset asc_41E080  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+58h]  +
push offset asc_41DFC8  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+5Ch]  +
push offset asc_41E018  +
push edi  +
call sub_408D80  +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push offset asc_41E0B4  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+60h]  +
push offset asc_41DFC8  +
push edi  +
call sub_408D80  +
add esp 44h +
push dword ptr [ebx+64h]  +
push offset asc_41E018  +
push edi  +
call sub_408D80  +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push dword ptr [ebx+68h]  +
push offset asc_41E0E8  +
push edi  +
call sub_408D80  +
push offset asc_41E148  +
push edi  +
call sub_408D80  +
add esp 28h +
cmp dword ptr [ebx+6Ch] 0 +
jnz loc_4037CA  +
push offset asc_41E180  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 1 +
jz loc_4037DE  +
push offset asc_41E1B8  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 2 +
jz loc_4037F2  +
push offset asc_41E228  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 4 +
jz loc_403806  +
push offset asc_41E298  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 8 +
jz loc_40381A  +
push offset asc_41E308  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 10h +
jz loc_40382E  +
push offset asc_41E378  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 20h +
jz loc_403842  +
push offset asc_41E3F0  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 40h +
jz loc_403856  +
push offset asc_41E470  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+6Ch] 80h +
jz loc_40386A  +
push offset asc_41E4F8  +
push edi  +
call sub_408D80  +
add esp 8 +
test dword ptr [ebx+6Ch] 100h +
jz loc_403881  +
push offset asc_41E580  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push offset asc_41E5EC  +
push edi  +
call sub_408D80  +
add esp 10h +
cmp dword ptr [ebx+70h] 0 +
jnz loc_4038AE  +
push offset asc_41E180  +
push edi  +
call sub_408D80  +
add esp 8 +
mov eax [ebx+70h] +
test al 1 +
jz loc_4038BC  +
push offset asc_41E1B8  +
jmp loc_403915  +
test al 2 +
jz loc_4038C7  +
push offset asc_41E620  +
jmp loc_403915  +
test al 4 +
jz loc_4038D2  +
push offset asc_41E690  +
jmp loc_403915  +
test al 8 +
jz loc_4038DD  +
push offset asc_41E700  +
jmp loc_403915  +
test al 10h +
jz loc_4038E8  +
push offset asc_41E770  +
jmp loc_403915  +
test al 20h +
jz loc_4038F3  +
push offset asc_41E7E8  +
jmp loc_403915  +
test al 40h +
jz loc_4038FE  +
push offset asc_41E868  +
jmp loc_403915  +
test al al +
jns loc_403909  +
push offset asc_41E8E8  +
jmp loc_403915  +
test eax 100h +
jz loc_40391E  +
push offset asc_41E968  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push offset asc_41E9D4  +
push edi  +
call sub_408D80  +
add esp 10h +
cmp dword ptr [ebx+74h] 0 +
jnz loc_40394B  +
push offset asc_41E180  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+74h] 1 +
jz loc_40395F  +
push offset asc_41EA10  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+74h] 2 +
jz loc_403973  +
push offset asc_41EA78  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+74h] 4 +
jz loc_403987  +
push offset asc_41EAE8  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+74h] 8 +
jz loc_40399B  +
push offset asc_41EB60  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
push offset asc_41EBCC  +
push edi  +
call sub_408D80  +
add esp 10h +
cmp dword ptr [ebx+78h] 0 +
jnz loc_4039C8  +
push offset asc_41E180  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 1 +
jz loc_4039DC  +
push offset asc_41EC08  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 2 +
jz loc_4039F0  +
push offset asc_41EC70  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 4 +
jz loc_403A04  +
push offset asc_41ECD8  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 8 +
jz loc_403A18  +
push offset asc_41ED40  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 10h +
jz loc_403A2C  +
push offset asc_41EDA8  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 20h +
jz loc_403A40  +
push offset asc_41EE18  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 40h +
jz loc_403A54  +
push offset asc_41EE90  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+78h] 80h +
jz loc_403A68  +
push offset asc_41EF00  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
add esp 8 +
jmp loc_403DA8  +
cmp byte_434000 0 +
jz loc_403DA8  +
push offset aVksurfacecapab  +
call sub_409DF0  +
push dword ptr [esi]  +
push offset aMinimagecountU  +
call sub_409DF0  +
push dword ptr [ebx+4Ch]  +
push offset aMaximagecountU  +
call sub_409DF0  +
push offset aCurrentextent  +
call sub_409DF0  +
push dword ptr [ebx+50h]  +
push offset aWidthU  +
call sub_409DF0  +
push dword ptr [ebx+54h]  +
push offset aHeightU  +
call sub_409DF0  +
push offset aMinimageextent  +
call sub_409DF0  +
push dword ptr [ebx+58h]  +
push offset aWidthU  +
call sub_409DF0  +
push dword ptr [ebx+5Ch]  +
push offset aHeightU  +
call sub_409DF0  +
push offset aMaximageextent  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebx+60h]  +
push offset aWidthU  +
call sub_409DF0  +
push dword ptr [ebx+64h]  +
push offset aHeightU  +
call sub_409DF0  +
push dword ptr [ebx+68h]  +
push offset aMaximagearra_1  +
call sub_409DF0  +
push offset aSupportedtrans  +
call sub_409DF0  +
add esp 1Ch +
cmp dword ptr [ebx+6Ch] 0 +
jnz loc_403B47  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 1 +
jz loc_403B5A  +
push offset aVk_surface_tra  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 2 +
jz loc_403B6D  +
push offset aVk_surface_t_0  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 4 +
jz loc_403B80  +
push offset aVk_surface_t_1  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 8 +
jz loc_403B93  +
push offset aVk_surface_t_2  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 10h +
jz loc_403BA6  +
push offset aVk_surface_t_3  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 20h +
jz loc_403BB9  +
push offset aVk_surface_t_4  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 40h +
jz loc_403BCC  +
push offset aVk_surface_t_5  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+6Ch] 80h +
jz loc_403BDF  +
push offset aVk_surface_t_6  +
call sub_409DF0  +
add esp 4 +
test dword ptr [ebx+6Ch] 100h +
jz loc_403BF5  +
push offset aVk_surface_t_7  +
call sub_409DF0  +
add esp 4 +
push offset aCurrenttransfo  +
call sub_409DF0  +
add esp 4 +
cmp dword ptr [ebx+70h] 0 +
jnz loc_403C15  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
mov eax [ebx+70h] +
test al 1 +
jz loc_403C23  +
push offset aVk_surface_tra  +
jmp loc_403C7C  +
test al 2 +
jz loc_403C2E  +
push offset aVk_surface_t_0  +
jmp loc_403C7C  +
test al 4 +
jz loc_403C39  +
push offset aVk_surface_t_1  +
jmp loc_403C7C  +
test al 8 +
jz loc_403C44  +
push offset aVk_surface_t_2  +
jmp loc_403C7C  +
test al 10h +
jz loc_403C4F  +
push offset aVk_surface_t_3  +
jmp loc_403C7C  +
test al 20h +
jz loc_403C5A  +
push offset aVk_surface_t_4  +
jmp loc_403C7C  +
test al 40h +
jz loc_403C65  +
push offset aVk_surface_t_5  +
jmp loc_403C7C  +
test al al +
jns loc_403C70  +
push offset aVk_surface_t_6  +
jmp loc_403C7C  +
test eax 100h +
jz loc_403C84  +
push offset aVk_surface_t_7  +
call sub_409DF0  +
add esp 4 +
push offset aSupportedcompo  +
call sub_409DF0  +
add esp 4 +
cmp dword ptr [ebx+74h] 0 +
jnz loc_403CA4  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+74h] 1 +
jz loc_403CB7  +
push offset aVk_composite_a  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+74h] 2 +
jz loc_403CCA  +
push offset aVk_composite_0  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+74h] 4 +
jz loc_403CDD  +
push offset aVk_composite_1  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+74h] 8 +
jz loc_403CF0  +
push offset aVk_composite_2  +
call sub_409DF0  +
add esp 4 +
push offset aSupportedusage  +
call sub_409DF0  +
add esp 4 +
cmp dword ptr [ebx+78h] 0 +
jnz loc_403D10  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 1 +
jz loc_403D23  +
push offset aVk_image_usage  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 2 +
jz loc_403D36  +
push offset aVk_image_usa_0  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 4 +
jz loc_403D49  +
push offset aVk_image_usa_1  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 8 +
jz loc_403D5C  +
push offset aVk_image_usa_2  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 10h +
jz loc_403D6F  +
push offset aVk_image_usa_3  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 20h +
jz loc_403D82  +
push offset aVk_image_usa_4  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 40h +
jz loc_403D95  +
push offset aVk_image_usa_5  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+78h] 80h +
jz loc_403DA8  +
push offset aVk_image_usa_6  +
call sub_409DF0  +
add esp 4 +
mov eax [ebp+0Ch] +
mov eax [eax+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_ext_display  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_403EBE  +
push 40h  +
lea esi [ebx+0C4h] +
push 0  +
push esi  +
call sub_40A9E0  +
mov eax [ebp+0Ch] +
add esp 0Ch +
mov dword ptr [esi] 3B9C2990h +
mov dword ptr [ebx+0C8h] 0 +
push esi  +
push dword ptr [ebx+10Ch]  +
push dword ptr [ebx+108h]  +
push dword ptr [eax+4]  +
mov eax [ebx+44h] +
call eax  +
cmp byte_4348A0 0 +
jz loc_403E72  +
push offset asc_41F454  +
push edi  +
call sub_408D80  +
push offset asc_41F494  +
push edi  +
call sub_408D80  +
add esp 10h +
cmp dword ptr [ebx+100h] 0 +
jnz loc_403E40  +
push offset asc_41F4D4  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [ebx+100h] 1 +
jz loc_403E57  +
push offset asc_41F508  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_1  +
push edi  +
call sub_408D80  +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
add esp 10h +
jmp loc_403EBE  +
cmp byte_434000 0 +
jz loc_403EBE  +
push offset aVksurfacecap_0  +
call sub_409DF0  +
push offset aSupportedsurfa  +
call sub_409DF0  +
add esp 8 +
cmp dword ptr [ebx+100h] 0 +
jnz loc_403EA8  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
test byte ptr [ebx+100h] 1 +
jz loc_403EBE  +
push offset aVk_surface_cou  +
call sub_409DF0  +
add esp 4 +
mov eax [ebp+0Ch] +
mov eax [eax+680h] +
mov esi [eax+18h] +
mov eax [eax+14h] +
push esi  +
push eax  +
push offset aVk_khr_get_sur  +
mov [ebp-4] eax +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_40414E  +
push esi  +
push dword ptr [ebp-4]  +
push offset aVk_khr_shared_  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_403F1A  +
lea eax [ebx+0B8h] +
mov dword ptr [ebx+0BCh] 0 +
mov dword ptr [eax] 3B9C7B98h +
mov [ebx+80h] eax +
jmp loc_403F24  +
mov dword ptr [ebx+80h] 0 +
mov eax [ebx+108h] +
lea ecx [ebx+7Ch] +
mov [ebp-0Ch] eax +
mov eax [ebx+10Ch] +
mov [ebp-8] eax +
lea eax [ebp-14h] +
push ecx  +
push eax  +
mov eax [ebp+0Ch] +
mov dword ptr [ecx] 3B9C9AD9h +
mov dword ptr [ebp-14h] 3B9C9AD8h +
mov dword ptr [ebp-10h] 0 +
push dword ptr [eax+4]  +
mov eax [ebx+40h] +
call eax  +
mov esi [ebx+80h] +
test esi esi +
jz loc_40414E  +
cmp byte_4348A0 0 +
jz loc_404074  +
push offset asc_41F5E0  +
push edi  +
call sub_408D80  +
push offset asc_41F630  +
push edi  +
call sub_408D80  +
add esp 10h +
cmp dword ptr [esi+8] 0 +
jnz loc_403FB6  +
push offset asc_41F4D4  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 1 +
jz loc_403FCA  +
push offset asc_41F678  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 2 +
jz loc_403FDE  +
push offset asc_41F6E0  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 4 +
jz loc_403FF2  +
push offset asc_41F748  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 8 +
jz loc_404006  +
push offset asc_41F7B0  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 10h +
jz loc_40401A  +
push offset asc_41F818  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 20h +
jz loc_40402E  +
push offset asc_41F888  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 40h +
jz loc_404042  +
push offset asc_41F900  +
push edi  +
call sub_408D80  +
add esp 8 +
test byte ptr [esi+8] 80h +
jz loc_404056  +
push offset asc_41F970  +
push edi  +
call sub_408D80  +
add esp 8 +
push offset aDetails_1  +
push edi  +
call sub_408D80  +
push offset aDetails_0  +
push edi  +
call sub_408D80  +
add esp 10h +
jmp loc_404143  +
cmp byte_434000 0 +
jz loc_404143  +
push offset aVksharedpresen  +
call sub_409DF0  +
push offset aSharedpresents  +
call sub_409DF0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jnz loc_4040AB  +
push offset aNone  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 1 +
jz loc_4040BE  +
push offset aVk_image_usage  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 2 +
jz loc_4040D1  +
push offset aVk_image_usa_0  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 4 +
jz loc_4040E4  +
push offset aVk_image_usa_1  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 8 +
jz loc_4040F7  +
push offset aVk_image_usa_2  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 10h +
jz loc_40410A  +
push offset aVk_image_usa_3  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 20h +
jz loc_40411D  +
push offset aVk_image_usa_4  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 40h +
jz loc_404130  +
push offset aVk_image_usa_5  +
call sub_409DF0  +
add esp 4 +
test byte ptr [esi+8] 80h +
jz loc_404143  +
push offset aVk_image_usa_6  +
call sub_409DF0  +
add esp 4 +
mov esi [esi+4] +
test esi esi +
jnz near ptr dword_403F6C+4  +
cmp byte_4348A0 0 +
pop esi  +
pop ebx  +
jz loc_404167  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 8 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
mov edi [ebp+8] +
push dword ptr [edi+18h]  +
push dword ptr [edi+14h]  +
push dword ptr [ebx]  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_4042A6  +
mov eax [ebx+4] +
push edi  +
call eax  +
xor ebx ebx +
add esp 4 +
cmp [ebp+10h] ebx +
jbe loc_40429A  +
push esi  +
mov esi [ebp+0Ch] +
cmp byte_4348A0 0 +
jz loc_4041EE  +
lea eax [esi+1Ch] +
push eax  +
push ebx  +
push offset asc_41FA28  +
push dword ptr [ebp+20h]  +
call sub_408D80  +
mov eax [ebp+14h] +
push dword ptr [eax]  +
push offset asc_41FA78  +
push dword ptr [ebp+20h]  +
call sub_408D80  +
add esp 1Ch +
jmp loc_404218  +
cmp byte_434000 0 +
jz loc_404218  +
lea eax [esi+1Ch] +
push eax  +
push ebx  +
push offset aGpuIdUS_0  +
call sub_409DF0  +
mov eax [ebp+14h] +
push dword ptr [eax]  +
push offset aSurfaceTypeS  +
call sub_409DF0  +
add esp 14h +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
call sub_4042B0  +
push dword ptr [ebp+20h]  +
mov ecx [ebp+18h] +
push esi  +
push edi  +
add [ecx] eax +
call loc_404460  +
push dword ptr [ebp+20h]  +
mov ecx [ebp+1Ch] +
push esi  +
push edi  +
add [ecx] eax +
call loc_403680  +
add esp 24h +
push 0  +
push dword ptr [edi+10Ch]  +
push dword ptr [edi+108h]  +
push dword ptr [edi]  +
call vkDestroySurfaceKHR  +
cmp byte_4348A0 0 +
jz loc_404273  +
push offset aDetails_4  +
push dword ptr [ebp+20h]  +
call sub_408D80  +
add esp 8 +
jmp loc_404289  +
cmp byte_434000 0 +
jz loc_404289  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
inc ebx  +
add esi 0C70h +
cmp ebx [ebp+10h] +
jb near ptr dword_4041AC+4  +
pop esi  +
mov eax [ebp+14h] +
push edi  +
mov eax [eax+0Ch] +
call eax  +
add esp 4 +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push edi  +
mov edi [ebp+arg_4] +
push 0  +
push eax  +
push dword ptr [esi+10Ch]  +
mov eax [esi+24h] +
push dword ptr [esi+108h]  +
mov [ebp+var_4] 0 +
push dword ptr [edi+4]  +
call eax  +
mov eax [ebp+var_4] +
shl eax 3 +
push eax  +
call sub_40D4AA  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_404350  +
push offset aVk_error_out_o  +
push 521h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp+var_C] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_404458  +
jmp loc_404450  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [esi+10Ch]  +
mov eax [esi+24h] +
push dword ptr [esi+108h]  +
push dword ptr [edi+4]  +
call eax  +
cmp byte_4348A0 0 +
mov edi [ebp+arg_8] +
jz loc_4043A6  +
push [ebp+var_4]  +
push offset asc_41DD48  +
push edi  +
call sub_408D80  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jbe loc_404399  +
push offset asc_41DD94  +
push edi  +
call sub_408D80  +
jmp loc_4043BC  +
push offset aDetails_2  +
push edi  +
call sub_408D80  +
jmp loc_4043BC  +
cmp byte_434000 0 +
jz loc_4043BF  +
push [ebp+var_4]  +
push offset aFormatsCountD  +
call sub_409DF0  +
add esp 8 +
xor esi esi +
cmp [ebp+var_4] esi +
jbe loc_40442A  +
cmp byte_4348A0 0 +
jz loc_4043E8  +
push dword ptr [ebx+esi*8]  +
call sub_408350  +
push eax  +
push offset asc_41DDC0  +
push edi  +
call sub_408D80  +
add esp 10h +
jmp loc_404407  +
cmp byte_434000 0 +
jz loc_404407  +
push dword ptr [ebx+esi*8]  +
call sub_408350  +
push eax  +
push offset aS  +
call sub_409DF0  +
add esp 0Ch +
mov eax [ebp+var_4] +
inc esi  +
cmp esi eax +
jb loc_4043C6  +
test eax eax +
jz loc_40442A  +
cmp byte_4348A0 0 +
jz loc_40442A  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 8 +
push edi  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push ebx  +
call sub_40D4A5  +
mov eax [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
int 3  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+0Ch] +
lea eax [ebp-4] +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0  +
push eax  +
push dword ptr [esi+10Ch]  +
mov eax [esi+28h] +
push dword ptr [esi+108h]  +
mov dword ptr [ebp-4] 0 +
push dword ptr [ebx+4]  +
call eax  +
mov eax [ebp-4] +
shl eax 5 +
push eax  +
call sub_40D4AA  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_404500  +
push offset aVk_error_out_o  +
push 54Bh  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-0Ch] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_4046AC  +
jmp loc_4046A4  +
push edi  +
lea eax [ebp-4] +
push eax  +
push dword ptr [esi+10Ch]  +
mov eax [esi+28h] +
push dword ptr [esi+108h]  +
push dword ptr [ebx+4]  +
call eax  +
cmp byte_4348A0 0 +
mov ebx [ebp+10h] +
jz loc_404556  +
push dword ptr [ebp-4]  +
push offset asc_41DE28  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
cmp dword ptr [ebp-4] 0 +
jbe loc_404549  +
push offset asc_41DD94  +
push ebx  +
call sub_408D80  +
jmp loc_40456C  +
push offset aDetails_3  +
push ebx  +
call sub_408D80  +
jmp loc_40456C  +
cmp byte_434000 0 +
jz loc_40456F  +
push dword ptr [ebp-4]  +
push offset aPresentModesCo  +
call sub_409DF0  +
add esp 8 +
xor esi esi +
cmp [ebp-4] esi +
jbe loc_40467E  +
cmp byte_4348A0 0 +
jz loc_404610  +
mov eax [edi+esi*4] +
cmp eax 3 +
ja loc_4045FA  +
jmp dword ptr ds:loc_4046B4[eax*4]  +
mov eax offset aImmediate_khr +
push eax  +
push offset asc_41DDC0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404657  +
mov eax offset aMailbox_khr +
push eax  +
push offset asc_41DDC0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404657  +
mov eax offset aFifo_khr +
push eax  +
push offset asc_41DDC0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404657  +
mov eax offset aFifo_relaxed_k +
push eax  +
push offset asc_41DDC0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404657  +
mov eax offset aUnknown_format +
push eax  +
push offset asc_41DDC0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404657  +
cmp byte_434000 0 +
jz loc_404657  +
mov eax [edi+esi*4] +
cmp eax 3 +
ja loc_404644  +
jmp dword ptr ds:(loc_4046C3+1)[eax*4]  +
mov eax offset aImmediate_khr +
jmp loc_404649  +
mov eax offset aMailbox_khr +
jmp loc_404649  +
mov eax offset aFifo_khr +
jmp loc_404649  +
mov eax offset aFifo_relaxed_k +
jmp loc_404649  +
mov eax offset aUnknown_format +
push eax  +
push offset aS  +
call sub_409DF0  +
add esp 8 +
mov eax [ebp-4] +
inc esi  +
cmp esi eax +
jb loc_404580  +
test eax eax +
jz loc_40467E  +
cmp byte_4348A0 0 +
jz loc_40467E  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
push ebx  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push edi  +
call sub_40D4A5  +
mov eax [ebp-4] +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
nop   +
pushf   +
inc ebp  +
inc eax  +
add [ebp-31FFBFBBh] dh +
inc ebp  +
inc eax  +
add ah ah +
inc ebp  +
inc eax  +
add [eax] ch +
inc esi  +
inc eax  +
add [edi] ch +
inc esi  +
inc eax  +
add [esi] dh +
inc esi  +
inc eax  +
add ds:0CC004046h bh +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call vkEnumerateInstanceExtensionProperties  +
test esi esi +
jz loc_40470B  +
push esi  +
call sub_40D4A5  +
add esp 4 +
imul eax [ebp+var_4] +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov esi eax +
lea eax [ebp+var_4] +
push esi  +
push eax  +
push edi  +
call vkEnumerateInstanceExtensionProperties  +
cmp eax 5 +
jz loc_4046F2  +
mov ecx [ebp+arg_4] +
mov eax [ebp+var_4] +
pop edi  +
mov [ecx] eax +
mov eax [ebp+arg_8] +
mov [eax] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor ebx ebx +
mov dword ptr [ebp-4] 0 +
push edi  +
xor esi esi +
push 0  +
lea eax [ebp-4] +
push eax  +
call vkEnumerateInstanceLayerProperties  +
test ebx ebx +
jz loc_40476C  +
push ebx  +
call sub_40D4A5  +
add esp 4 +
imul eax [ebp-4] +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov ebx eax +
test esi esi +
jz loc_40478B  +
push esi  +
call sub_40D4A5  +
add esp 4 +
imul ecx [ebp-4] +
push ecx  +
call sub_40D4AA  +
add esp 4 +
mov esi eax +
lea eax [ebp-4] +
push ebx  +
push eax  +
call vkEnumerateInstanceLayerProperties  +
cmp eax 5 +
jz loc_404754  +
mov edi [ebp+8] +
mov eax [ebp-4] +
mov [ebp-18h] ebx +
mov dword ptr [ebp-0Ch] 0 +
mov [edi+4] eax +
mov [edi+8] esi +
test eax eax +
jz loc_404865  +
xor ecx ecx +
mov [ebp-10h] ecx +
nop   +
mov eax [edi+8] +
mov esi ebx +
add eax ecx +
mov dword ptr [ebp-8] 0 +
mov ecx 82h +
mov [ebp-14h] eax +
mov edi eax +
movs   +
xor esi esi +
push 0  +
lea eax [ebp-8] +
push eax  +
push ebx  +
call vkEnumerateInstanceExtensionProperties  +
test esi esi +
jz loc_404809  +
push esi  +
call sub_40D4A5  +
add esp 4 +
imul eax [ebp-8] +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov esi eax +
lea eax [ebp-8] +
push esi  +
push eax  +
push ebx  +
call vkEnumerateInstanceExtensionProperties  +
cmp eax 5 +
jz loc_4047F0  +
mov ecx [ebp-14h] +
add ebx 208h +
mov eax [ebp-8] +
mov edx [ebp-0Ch] +
mov edi [ebp+8] +
inc edx  +
mov [ecx+208h] eax +
mov [ecx+20Ch] esi +
mov ecx [ebp-10h] +
add ecx 210h +
mov [ebp-0Ch] edx +
mov [ebp-10h] ecx +
cmp edx [edi+4] +
jb loc_4047D0  +
mov ebx [ebp-18h] +
push ebx  +
call sub_40D4A5  +
lea eax [edi+10h] +
mov dword ptr [edi+0Ch] 0 +
lea ecx [edi+0Ch] +
push eax  +
push ecx  +
push 0  +
call sub_4046E0  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
call vkEnumerateDeviceExtensionProperties  +
test esi esi +
jz loc_4048C2  +
push esi  +
call sub_40D4A5  +
add esp 4 +
imul eax [ebp+var_4] +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov esi eax +
lea eax [ebp+var_4] +
push esi  +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
call vkEnumerateDeviceExtensionProperties  +
cmp eax 5 +
jz loc_4048A6  +
mov ecx [ebp+arg_8] +
mov eax [ebp+var_4] +
pop edi  +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
push dword ptr [ebx+0C68h]  +
call sub_40D4A5  +
mov eax [ebx+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 10h +
test al al +
jz loc_404952  +
mov eax [ebx+0B80h] +
test eax eax +
jz loc_404952  +
xor esi esi +
cmp [ebx+670h] esi +
jbe loc_40497E  +
xor edi edi +
nop   +
mov eax [ebx+67Ch] +
push dword ptr [edi+eax+14h]  +
call sub_40D4A5  +
inc esi  +
lea edi [edi+18h] +
add esp 4 +
cmp esi [ebx+670h] +
jb loc_404960  +
push dword ptr [ebx+67Ch]  +
call sub_40D4A5  +
push dword ptr [ebx+674h]  +
call sub_40D4A5  +
mov eax [ebx+680h] +
add esp 8 +
xor esi esi +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov [ebp+8] eax +
test edi edi +
jz loc_404A18  +
mov eax [eax+esi*4] +
mov ecx offset aVk_khr_get_phy +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_4049D8  +
test dl dl +
jz loc_4049D4  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_4049D8  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_4049B8  +
xor eax eax +
jmp loc_4049DD  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4049EE  +
mov eax [ebp+8] +
inc esi  +
cmp esi edi +
jb loc_4049B0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push dword ptr [ebx+678h]  +
call sub_40D4A5  +
mov eax [ebx+33Ch] +
add esp 4 +
test eax eax +
jz loc_404A18  +
mov esi [eax+4] +
push eax  +
call sub_40D4A5  +
add esp 4 +
mov eax esi +
test esi esi +
jnz loc_404A06  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
cmp byte_4348A0 0 +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
jz loc_404A46  +
push dword ptr [esi]  +
push offset asc_42C2F4  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_404A72  +
cmp byte_434000 0 +
jz loc_404A72  +
push offset aDeviceProperti  +
call sub_409DF0  +
push offset asc_423EF8  +
call sub_409DF0  +
push dword ptr [esi]  +
push offset aGpuU  +
call sub_409DF0  +
add esp 10h +
push ebx  +
push esi  +
call loc_4061B0  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_404AA6  +
push ebx  +
push dword ptr [esi+0C68h]  +
push dword ptr [esi+0C64h]  +
push offset aDevice  +
push offset asc_42C34C  +
call loc_4019B0  +
add esp 14h +
jmp loc_404AE2  +
cmp byte_434000 0 +
jz loc_404AE2  +
push offset asc_41DD94  +
call sub_409DF0  +
push ebx  +
push dword ptr [esi+0C68h]  +
push dword ptr [esi+0C64h]  +
push offset aDevice  +
push offset unk_41FC66  +
call loc_4019B0  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 1Ch +
cmp byte_4348A1 0 +
jz loc_404B02  +
push offset asc_420730  +
call sub_409DF0  +
push offset aArrayofvkqueue  +
call sub_409DF0  +
add esp 8 +
push edi  +
xor edi edi +
cmp [esi+670h] edi +
jbe loc_404B61  +
cmp byte_4348A1 0 +
jz loc_404B37  +
test edi edi +
jz loc_404B2A  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
push ebx  +
push edi  +
push esi  +
call sub_406D20  +
add esp 0Ch +
cmp byte_434000 0 +
jz loc_404B58  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
inc edi  +
cmp edi [esi+670h] +
jb loc_404B10  +
cmp byte_4348A1 0 +
pop edi  +
jz loc_404B8E  +
cmp dword ptr [esi+670h] 0 +
jbe loc_404B81  +
push offset asc_42B6D0  +
call sub_409DF0  +
add esp 4 +
push offset asc_42B6D4  +
call sub_409DF0  +
add esp 4 +
push ebx  +
push esi  +
call loc_405B80  +
add esp 8 +
cmp byte_434000 0 +
jz loc_404BAE  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
push ebx  +
push esi  +
call loc_404C00  +
add esp 8 +
cmp byte_434000 0 +
jz loc_404BCE  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
push ebx  +
push esi  +
call loc_401510  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_404BEF  +
push offset aDetails_4  +
push ebx  +
call sub_408D80  +
add esp 8 +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0DCh +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov eax [ebx+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
lea edi [ebp-0DCh] +
lea esi [ebx+0B84h] +
mov ecx 37h +
test al al +
jnz loc_404C43  +
lea esi [ebx+0AA0h] +
cmp byte_4348A0 0 +
movs   +
mov edi [ebp+0Ch] +
mov esi [ebp-4] +
jz loc_40500C  +
push offset asc_420758  +
push edi  +
call sub_408D80  +
mov eax [ebp-0DCh] +
push eax  +
push offset asc_420798  +
push edi  +
call sub_408D80  +
mov eax [ebp-0D8h] +
push eax  +
push offset asc_420810  +
push edi  +
call sub_408D80  +
mov eax [ebp-0D4h] +
push eax  +
push offset asc_420888  +
push edi  +
call sub_408D80  +
mov eax [ebp-0D0h] +
push eax  +
push offset asc_420900  +
push edi  +
call sub_408D80  +
mov eax [ebp-0CCh] +
push eax  +
push offset asc_420978  +
push edi  +
call sub_408D80  +
mov eax [ebp-0C8h] +
add esp 44h +
push eax  +
push offset asc_4209F0  +
push edi  +
call sub_408D80  +
mov eax [ebp-0C4h] +
push eax  +
push offset asc_420A68  +
push edi  +
call sub_408D80  +
mov eax [ebp-0C0h] +
push eax  +
push offset asc_420AE0  +
push edi  +
call sub_408D80  +
mov eax [ebp-0BCh] +
push eax  +
push offset asc_420B58  +
push edi  +
call sub_408D80  +
mov eax [ebp-0B8h] +
push eax  +
push offset asc_420BD0  +
push edi  +
call sub_408D80  +
mov eax [ebp-0B4h] +
push eax  +
push offset asc_420C48  +
push edi  +
call sub_408D80  +
mov eax [ebp-0B0h] +
add esp 48h +
push eax  +
push offset asc_420CC0  +
push edi  +
call sub_408D80  +
mov eax [ebp-0ACh] +
push eax  +
push offset asc_420D38  +
push edi  +
call sub_408D80  +
mov eax [ebp-0A8h] +
push eax  +
push offset asc_420DB0  +
push edi  +
call sub_408D80  +
mov eax [ebp-0A4h] +
push eax  +
push offset asc_420E28  +
push edi  +
call sub_408D80  +
mov eax [ebp-0A0h] +
push eax  +
push offset asc_420EA0  +
push edi  +
call sub_408D80  +
mov eax [ebp-9Ch] +
push eax  +
push offset asc_420F18  +
push edi  +
call sub_408D80  +
mov eax [ebp-98h] +
add esp 48h +
push eax  +
push offset asc_420F90  +
push edi  +
call sub_408D80  +
mov eax [ebp-94h] +
push eax  +
push offset asc_421008  +
push edi  +
call sub_408D80  +
mov eax [ebp-90h] +
push eax  +
push offset asc_421080  +
push edi  +
call sub_408D80  +
mov eax [ebp-8Ch] +
push eax  +
push offset asc_4210F8  +
push edi  +
call sub_408D80  +
mov eax [ebp-88h] +
push eax  +
push offset asc_421170  +
push edi  +
call sub_408D80  +
mov eax [ebp-84h] +
push eax  +
push offset asc_4211E8  +
push edi  +
call sub_408D80  +
mov eax [ebp-80h] +
add esp 48h +
push eax  +
push offset asc_421260  +
push edi  +
call sub_408D80  +
mov eax [ebp-7Ch] +
push eax  +
push offset asc_4212D8  +
push edi  +
call sub_408D80  +
mov eax [ebp-78h] +
push eax  +
push offset asc_421350  +
push edi  +
call sub_408D80  +
mov eax [ebp-74h] +
push eax  +
push offset asc_4213C8  +
push edi  +
call sub_408D80  +
mov eax [ebp-70h] +
push eax  +
push offset asc_421440  +
push edi  +
call sub_408D80  +
mov eax [ebp-6Ch] +
push eax  +
push offset asc_4214B8  +
push edi  +
call sub_408D80  +
mov eax [ebp-68h] +
add esp 48h +
push eax  +
push offset asc_421530  +
push edi  +
call sub_408D80  +
mov eax [ebp-64h] +
push eax  +
push offset asc_4215A8  +
push edi  +
call sub_408D80  +
mov eax [ebp-60h] +
push eax  +
push offset asc_421620  +
push edi  +
call sub_408D80  +
mov eax [ebp-5Ch] +
push eax  +
push offset asc_421698  +
push edi  +
call sub_408D80  +
mov eax [ebp-58h] +
push eax  +
push offset asc_421710  +
push edi  +
call sub_408D80  +
mov eax [ebp-54h] +
push eax  +
push offset asc_421788  +
push edi  +
call sub_408D80  +
mov eax [ebp-50h] +
add esp 48h +
push eax  +
push offset asc_421800  +
push edi  +
call sub_408D80  +
mov eax [ebp-4Ch] +
push eax  +
push offset asc_421878  +
push edi  +
call sub_408D80  +
mov eax [ebp-48h] +
push eax  +
push offset asc_4218F0  +
push edi  +
call sub_408D80  +
mov eax [ebp-44h] +
push eax  +
push offset asc_421968  +
push edi  +
call sub_408D80  +
mov eax [ebp-40h] +
push eax  +
push offset asc_4219E0  +
push edi  +
call sub_408D80  +
mov eax [ebp-3Ch] +
push eax  +
push offset asc_421A58  +
push edi  +
call sub_408D80  +
mov eax [ebp-38h] +
add esp 48h +
push eax  +
push offset asc_421AD0  +
push edi  +
call sub_408D80  +
mov eax [ebp-34h] +
push eax  +
push offset asc_421B48  +
push edi  +
call sub_408D80  +
mov eax [ebp-30h] +
push eax  +
push offset asc_421BC0  +
push edi  +
call sub_408D80  +
mov eax [ebp-2Ch] +
push eax  +
push offset asc_421C38  +
push edi  +
call sub_408D80  +
mov eax [ebp-28h] +
push eax  +
push offset asc_421CB0  +
push edi  +
call sub_408D80  +
mov eax [ebp-24h] +
push eax  +
push offset asc_421D28  +
push edi  +
call sub_408D80  +
mov eax [ebp-20h] +
add esp 48h +
push eax  +
push offset asc_421DA0  +
push edi  +
call sub_408D80  +
mov eax [ebp-1Ch] +
push eax  +
push offset asc_421E18  +
push edi  +
call sub_408D80  +
mov eax [ebp-18h] +
push eax  +
push offset asc_421E90  +
push edi  +
call sub_408D80  +
mov eax [ebp-14h] +
push eax  +
push offset asc_421F08  +
push edi  +
call sub_408D80  +
mov eax [ebp-10h] +
push eax  +
push offset asc_421F80  +
push edi  +
call sub_408D80  +
mov eax [ebp-0Ch] +
push eax  +
push offset asc_421FF8  +
push edi  +
call sub_408D80  +
mov eax [ebp-8] +
add esp 48h +
push eax  +
push offset asc_422070  +
push edi  +
call sub_408D80  +
push esi  +
push offset asc_4220E8  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 20h +
jmp loc_405386  +
cmp byte_434000 0 +
jz loc_405386  +
push offset aVkphysicalde_1  +
call sub_409DF0  +
push offset asc_422178  +
call sub_409DF0  +
mov eax [ebp-0DCh] +
push eax  +
push offset aRobustbufferac  +
call sub_409DF0  +
mov eax [ebp-0D8h] +
push eax  +
push offset aFulldrawindexu  +
call sub_409DF0  +
mov eax [ebp-0D4h] +
push eax  +
push offset aImagecubearray  +
call sub_409DF0  +
mov eax [ebp-0D0h] +
push eax  +
push offset aIndependentble  +
call sub_409DF0  +
mov eax [ebp-0CCh] +
push eax  +
push offset aGeometryshader  +
call sub_409DF0  +
mov eax [ebp-0C8h] +
push eax  +
push offset aTessellationsh  +
call sub_409DF0  +
mov eax [ebp-0C4h] +
push eax  +
push offset aSamplerateshad  +
call sub_409DF0  +
mov eax [ebp-0C0h] +
add esp 40h +
push eax  +
push offset aDualsrcblendU  +
call sub_409DF0  +
mov eax [ebp-0BCh] +
push eax  +
push offset aLogicopU  +
call sub_409DF0  +
mov eax [ebp-0B8h] +
push eax  +
push offset aMultidrawindir  +
call sub_409DF0  +
mov eax [ebp-0B4h] +
push eax  +
push offset aDrawindirectfi  +
call sub_409DF0  +
mov eax [ebp-0B0h] +
push eax  +
push offset aDepthclampU  +
call sub_409DF0  +
mov eax [ebp-0ACh] +
push eax  +
push offset aDepthbiasclamp  +
call sub_409DF0  +
mov eax [ebp-0A8h] +
push eax  +
push offset aFillmodenonsol  +
call sub_409DF0  +
mov eax [ebp-0A4h] +
push eax  +
push offset aDepthboundsU  +
call sub_409DF0  +
mov eax [ebp-0A0h] +
add esp 40h +
push eax  +
push offset aWidelinesU  +
call sub_409DF0  +
mov eax [ebp-9Ch] +
push eax  +
push offset aLargepointsU  +
call sub_409DF0  +
mov eax [ebp-98h] +
push eax  +
push offset aAlphatooneU  +
call sub_409DF0  +
mov eax [ebp-94h] +
push eax  +
push offset aMultiviewportU  +
call sub_409DF0  +
mov eax [ebp-90h] +
push eax  +
push offset aSampleranisotr  +
call sub_409DF0  +
mov eax [ebp-8Ch] +
push eax  +
push offset aTexturecompres  +
call sub_409DF0  +
mov eax [ebp-88h] +
push eax  +
push offset aTexturecompr_0  +
call sub_409DF0  +
mov eax [ebp-84h] +
push eax  +
push offset aTexturecompr_1  +
call sub_409DF0  +
mov eax [ebp-80h] +
add esp 40h +
push eax  +
push offset aOcclusionquery  +
call sub_409DF0  +
mov eax [ebp-7Ch] +
push eax  +
push offset aPipelinestatis  +
call sub_409DF0  +
mov eax [ebp-78h] +
push eax  +
push offset aVertexpipeline  +
call sub_409DF0  +
mov eax [ebp-74h] +
push eax  +
push offset aFragmentstores  +
call sub_409DF0  +
mov eax [ebp-70h] +
push eax  +
push offset aShadertessella  +
call sub_409DF0  +
mov eax [ebp-6Ch] +
push eax  +
push offset aShaderimagegat  +
call sub_409DF0  +
mov eax [ebp-68h] +
push eax  +
push offset aShaderstoragei  +
call sub_409DF0  +
mov eax [ebp-64h] +
push eax  +
push offset aShaderstorag_0  +
call sub_409DF0  +
mov eax [ebp-60h] +
add esp 40h +
push eax  +
push offset aShaderstorag_1  +
call sub_409DF0  +
mov eax [ebp-5Ch] +
push eax  +
push offset aShaderstorag_2  +
call sub_409DF0  +
mov eax [ebp-58h] +
push eax  +
push offset aShaderuniformb  +
call sub_409DF0  +
mov eax [ebp-54h] +
push eax  +
push offset aShadersampledi  +
call sub_409DF0  +
mov eax [ebp-50h] +
push eax  +
push offset aShaderstorageb  +
call sub_409DF0  +
mov eax [ebp-4Ch] +
push eax  +
push offset aShaderstorag_3  +
call sub_409DF0  +
mov eax [ebp-48h] +
push eax  +
push offset aShaderclipdist  +
call sub_409DF0  +
mov eax [ebp-44h] +
push eax  +
push offset aShaderculldist  +
call sub_409DF0  +
mov eax [ebp-40h] +
add esp 40h +
push eax  +
push offset aShaderfloat64U  +
call sub_409DF0  +
mov eax [ebp-3Ch] +
push eax  +
push offset aShaderint64U  +
call sub_409DF0  +
mov eax [ebp-38h] +
push eax  +
push offset aShaderint16U  +
call sub_409DF0  +
mov eax [ebp-34h] +
push eax  +
push offset aShaderresource  +
call sub_409DF0  +
mov eax [ebp-30h] +
push eax  +
push offset aShaderresour_0  +
call sub_409DF0  +
mov eax [ebp-2Ch] +
push eax  +
push offset aSparsebindingU  +
call sub_409DF0  +
mov eax [ebp-28h] +
push eax  +
push offset aSparseresidenc  +
call sub_409DF0  +
mov eax [ebp-24h] +
push eax  +
push offset aSparsereside_0  +
call sub_409DF0  +
mov eax [ebp-20h] +
add esp 40h +
push eax  +
push offset aSparsereside_1  +
call sub_409DF0  +
mov eax [ebp-1Ch] +
push eax  +
push offset aSparsereside_2  +
call sub_409DF0  +
mov eax [ebp-18h] +
push eax  +
push offset aSparsereside_3  +
call sub_409DF0  +
mov eax [ebp-14h] +
push eax  +
push offset aSparsereside_4  +
call sub_409DF0  +
mov eax [ebp-10h] +
push eax  +
push offset aSparsereside_5  +
call sub_409DF0  +
mov eax [ebp-0Ch] +
push eax  +
push offset aSparsereside_6  +
call sub_409DF0  +
mov eax [ebp-8] +
push eax  +
push offset aVariablemultis  +
call sub_409DF0  +
push esi  +
push offset aInheritedqueri  +
call sub_409DF0  +
add esp 40h +
cmp byte_4348A1 0 +
jz loc_4056D7  +
push offset asc_420730  +
call sub_409DF0  +
push offset aVkphysicalde_2  +
call sub_409DF0  +
push dword ptr [ebp-0DCh]  +
push offset aRobustbuffer_0  +
call sub_409DF0  +
push dword ptr [ebp-0D8h]  +
push offset aFulldrawinde_0  +
call sub_409DF0  +
push dword ptr [ebp-0D4h]  +
push offset aImagecubearr_0  +
call sub_409DF0  +
push dword ptr [ebp-0D0h]  +
push offset aIndependentb_0  +
call sub_409DF0  +
push dword ptr [ebp-0CCh]  +
push offset aGeometryshad_0  +
call sub_409DF0  +
push dword ptr [ebp-0C8h]  +
push offset aTessellation_0  +
call sub_409DF0  +
push dword ptr [ebp-0C4h]  +
push offset aSampleratesh_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-0C0h]  +
push offset aDualsrcblend_0  +
call sub_409DF0  +
push dword ptr [ebp-0BCh]  +
push offset aLogicopU_0  +
call sub_409DF0  +
push dword ptr [ebp-0B8h]  +
push offset aMultidrawind_0  +
call sub_409DF0  +
push dword ptr [ebp-0B4h]  +
push offset aDrawindirect_0  +
call sub_409DF0  +
push dword ptr [ebp-0B0h]  +
push offset aDepthclampU_0  +
call sub_409DF0  +
push dword ptr [ebp-0ACh]  +
push offset aDepthbiascla_0  +
call sub_409DF0  +
push dword ptr [ebp-0A8h]  +
push offset aFillmodenons_0  +
call sub_409DF0  +
push dword ptr [ebp-0A4h]  +
push offset aDepthboundsU_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-0A0h]  +
push offset aWidelinesU_0  +
call sub_409DF0  +
push dword ptr [ebp-9Ch]  +
push offset aLargepointsU_0  +
call sub_409DF0  +
push dword ptr [ebp-98h]  +
push offset aAlphatooneU_0  +
call sub_409DF0  +
push dword ptr [ebp-94h]  +
push offset aMultiviewpor_0  +
call sub_409DF0  +
push dword ptr [ebp-90h]  +
push offset aSampleraniso_0  +
call sub_409DF0  +
push dword ptr [ebp-8Ch]  +
push offset aTexturecompr_2  +
call sub_409DF0  +
push dword ptr [ebp-88h]  +
push offset aTexturecompr_3  +
call sub_409DF0  +
push dword ptr [ebp-84h]  +
push offset aTexturecompr_4  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-80h]  +
push offset aOcclusionque_0  +
call sub_409DF0  +
push dword ptr [ebp-7Ch]  +
push offset aPipelinestat_0  +
call sub_409DF0  +
push dword ptr [ebp-78h]  +
push offset aVertexpipeli_0  +
call sub_409DF0  +
push dword ptr [ebp-74h]  +
push offset aFragmentstor_0  +
call sub_409DF0  +
push dword ptr [ebp-70h]  +
push offset aShadertessel_0  +
call sub_409DF0  +
push dword ptr [ebp-6Ch]  +
push offset aShaderimageg_0  +
call sub_409DF0  +
push dword ptr [ebp-68h]  +
push offset aShaderstorag_4  +
call sub_409DF0  +
push dword ptr [ebp-64h]  +
push offset aShaderstorag_5  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-60h]  +
push offset aShaderstorag_6  +
call sub_409DF0  +
push dword ptr [ebp-5Ch]  +
push offset aShaderstorag_7  +
call sub_409DF0  +
push dword ptr [ebp-58h]  +
push offset aShaderunifor_0  +
call sub_409DF0  +
push dword ptr [ebp-54h]  +
push offset aShadersample_0  +
call sub_409DF0  +
push dword ptr [ebp-50h]  +
push offset aShaderstorag_8  +
call sub_409DF0  +
push dword ptr [ebp-4Ch]  +
push offset aShaderstorag_9  +
call sub_409DF0  +
push dword ptr [ebp-48h]  +
push offset aShaderclipdi_0  +
call sub_409DF0  +
push dword ptr [ebp-44h]  +
push offset aShaderculldi_0  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-40h]  +
push offset aShaderfloat6_0  +
call sub_409DF0  +
push dword ptr [ebp-3Ch]  +
push offset aShaderint64U_0  +
call sub_409DF0  +
push dword ptr [ebp-38h]  +
push offset aShaderint16U_0  +
call sub_409DF0  +
push dword ptr [ebp-34h]  +
push offset aShaderresour_1  +
call sub_409DF0  +
push dword ptr [ebp-30h]  +
push offset aShaderresour_2  +
call sub_409DF0  +
push dword ptr [ebp-2Ch]  +
push offset aSparsebindin_0  +
call sub_409DF0  +
push dword ptr [ebp-28h]  +
push offset aSparsereside_7  +
call sub_409DF0  +
push dword ptr [ebp-24h]  +
push offset aSparsereside_8  +
call sub_409DF0  +
add esp 40h +
push dword ptr [ebp-20h]  +
push offset aSparsereside_9  +
call sub_409DF0  +
push dword ptr [ebp-1Ch]  +
push offset aSparseresid_10  +
call sub_409DF0  +
push dword ptr [ebp-18h]  +
push offset aSparseresid_11  +
call sub_409DF0  +
push dword ptr [ebp-14h]  +
push offset aSparseresid_12  +
call sub_409DF0  +
push dword ptr [ebp-10h]  +
push offset aSparseresid_13  +
call sub_409DF0  +
push dword ptr [ebp-0Ch]  +
push offset aSparseresid_14  +
call sub_409DF0  +
push dword ptr [ebp-8]  +
push offset aVariablemult_0  +
call sub_409DF0  +
push esi  +
push offset aInheritedque_0  +
call sub_409DF0  +
add esp 40h +
push offset asc_41D9F0  +
call sub_409DF0  +
add esp 4 +
mov eax [ebx+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_405B6D  +
mov esi [ebx+0B80h] +
test esi esi +
jz loc_405B6D  +
mov eax [esi] +
cmp eax 3B9D7D68h +
jnz loc_4057D9  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_khr_8bit_st  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_4057D7  +
cmp byte_4348A0 0 +
jz loc_40578F  +
push offset asc_423350  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423398  +
push edi  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_423408  +
push edi  +
call sub_408D80  +
push dword ptr [esi+10h]  +
push offset asc_423478  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 34h +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicalde_7  +
call sub_409DF0  +
push offset asc_42350C  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aStoragebuffer8  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aUniformandstor  +
call sub_409DF0  +
push dword ptr [esi+10h]  +
push offset aStoragepushcon  +
jmp loc_405B5A  +
mov eax [esi] +
cmp eax 3B9C0E38h +
jnz loc_4058C3  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_khr_16bit_s  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_4058C1  +
cmp byte_4348A0 0 +
jz loc_405864  +
push offset asc_4235D0  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423618  +
push edi  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_423688  +
push edi  +
call sub_408D80  +
push dword ptr [esi+10h]  +
push offset asc_4236F8  +
push edi  +
call sub_408D80  +
push dword ptr [esi+14h]  +
push offset asc_423768  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 40h +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicalde_8  +
call sub_409DF0  +
push offset asc_42350C  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aStoragebuffer1  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aUniformandst_0  +
call sub_409DF0  +
push dword ptr [esi+10h]  +
push offset aStoragepushc_0  +
call sub_409DF0  +
push dword ptr [esi+14h]  +
push offset aStorageinputou  +
call sub_409DF0  +
add esp 28h +
jmp loc_405B62  +
mov eax [esi] +
cmp eax 3B9D2B64h +
jnz loc_405958  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_khr_sampler  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_405956  +
cmp byte_4348A0 0 +
jz loc_405920  +
push offset asc_4238D0  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423928  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 1Ch +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicalde_9  +
call sub_409DF0  +
push offset asc_4239BC  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aSamplerycbcrco  +
call sub_409DF0  +
add esp 10h +
jmp loc_405B62  +
mov eax [esi] +
cmp eax 3B9C9EC0h +
jnz loc_405A0C  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_khr_variabl  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_405A0A  +
cmp byte_4348A0 0 +
jz loc_4059C7  +
push offset asc_423A30  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423A80  +
push edi  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_423AE8  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 28h +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicald_10  +
call sub_409DF0  +
push offset asc_423B7C  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aVariablepointe  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aVariablepoin_0  +
call sub_409DF0  +
add esp 18h +
jmp loc_405B62  +
mov eax [esi] +
cmp eax 3B9D0C20h +
jnz loc_405AA1  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_ext_blend_o  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_405A9F  +
cmp byte_4348A0 0 +
jz loc_405A69  +
push offset asc_423C18  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423C70  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 1Ch +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicald_11  +
call sub_409DF0  +
push offset asc_4239BC  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aAdvancedblendc  +
call sub_409DF0  +
add esp 10h +
jmp loc_405B62  +
mov eax [esi] +
cmp eax 3B9B9909h +
jnz loc_405B62  +
push dword ptr [ebx+0C64h]  +
push dword ptr [ebx+0C68h]  +
push offset aVk_khr_multivi  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_405B62  +
cmp byte_4348A0 0 +
jz loc_405B1B  +
push offset asc_423D50  +
push edi  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_423D98  +
push edi  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_423E00  +
push edi  +
call sub_408D80  +
push dword ptr [esi+10h]  +
push offset asc_423E68  +
push edi  +
call sub_408D80  +
push offset aDetails  +
push edi  +
call sub_408D80  +
add esp 34h +
jmp loc_405B62  +
cmp byte_434000 0 +
jz loc_405B62  +
push offset aVkphysicald_12  +
call sub_409DF0  +
push offset asc_423EF8  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aMultiviewU  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aMultiviewgeome  +
call sub_409DF0  +
push dword ptr [esi+10h]  +
push offset aMultiviewtesse  +
call sub_409DF0  +
add esp 20h +
mov esi [esi+4] +
test esi esi +
jnz loc_405710  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
lea edi [ebp-20Ch] +
mov ecx 82h +
test al al +
jz loc_405BCC  +
add esi 898h +
jmp loc_405BD2  +
add esi 688h +
cmp byte_4348A0 0 +
movs   +
mov edi [ebp-108h] +
jz loc_405C11  +
push offset asc_42BA68  +
push ebx  +
call sub_408D80  +
push edi  +
push offset asc_42BAB0  +
push ebx  +
call sub_408D80  +
add esp 14h +
test edi edi +
jz loc_405C3C  +
push offset asc_41DD94  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_405C3C  +
cmp byte_434000 0 +
jz loc_405C3C  +
push offset aVkphysicalde_3  +
call sub_409DF0  +
push offset asc_42BB24  +
call sub_409DF0  +
push edi  +
push offset aMemoryheapcoun  +
call sub_409DF0  +
add esp 10h +
cmp byte_4348A1 0 +
jz loc_405C66  +
push offset asc_420730  +
call sub_409DF0  +
push offset aVkphysicalde_4  +
call sub_409DF0  +
push offset aMemoryheaps  +
call sub_409DF0  +
add esp 0Ch +
xor esi esi +
test edi edi +
jz loc_405E1E  +
lea eax [ebp-0FCh] +
mov [ebp-214h] eax +
mov edi [eax-8] +
mov eax [eax-4] +
push edi  +
mov [ebp-218h] eax +
call sub_407E90  +
add esp 4 +
mov [ebp-210h] eax +
cmp byte_4348A0 0 +
jz loc_405CCE  +
push esi  +
push offset asc_42BBA8  +
push ebx  +
call sub_408D80  +
push dword ptr [ebp-210h]  +
push dword ptr [ebp-218h]  +
push edi  +
push edi  +
push offset asc_42BBF8  +
push ebx  +
call sub_408D80  +
add esp 24h +
jmp loc_405CFD  +
cmp byte_434000 0 +
jz loc_405D03  +
push esi  +
push offset aMemoryheapsU  +
call sub_409DF0  +
push dword ptr [ebp-210h]  +
push dword ptr [ebp-218h]  +
push edi  +
push edi  +
push offset aSizeIu0xLlxS  +
call sub_409DF0  +
add esp 1Ch +
mov eax [ebp-210h] +
push eax  +
call sub_40D4A5  +
mov eax [ebp-214h] +
add esp 4 +
cmp byte_4348A0 0 +
mov eax [eax] +
mov [ebp-210h] eax +
jz loc_405D7A  +
push offset aDetailsOpenS_1  +
push ebx  +
call sub_408D80  +
push offset asc_42BCF4  +
push ebx  +
call sub_408D80  +
test byte ptr [ebp-210h] 1 +
mov ecx offset aNone_1 +
mov eax offset aDivClassTypeVk +
cmovz eax ecx +
push eax  +
push ebx  +
call sub_408D80  +
push offset aSummaryDetails  +
push ebx  +
call sub_408D80  +
push offset aDetails_5  +
push ebx  +
call sub_408D80  +
push offset aDetails_1  +
push ebx  +
call sub_408D80  +
add esp 30h +
jmp loc_405DAA  +
cmp byte_434000 0 +
jz loc_405DAA  +
push offset aFlags  +
call sub_409DF0  +
test byte ptr [ebp-210h] 1 +
mov ecx offset aNone_2 +
mov eax offset aVk_memory_heap +
cmovz eax ecx +
push eax  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_405E00  +
test esi esi +
jz loc_405DC4  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_42BDA0  +
call sub_409DF0  +
push dword ptr [ebp-210h]  +
push offset aFlagsU  +
call sub_409DF0  +
push edi  +
push offset aSizeIu  +
call sub_409DF0  +
push offset asc_42BDD0  +
call sub_409DF0  +
add esp 1Ch +
mov eax [ebp-214h] +
inc esi  +
mov edi [ebp-108h] +
add eax 10h +
mov [ebp-214h] eax +
cmp esi edi +
jb loc_405C80  +
cmp byte_4348A0 0 +
jz loc_405E47  +
test edi edi +
jz loc_405E39  +
push offset asc_42BDD8  +
push ebx  +
call sub_408D80  +
add esp 8 +
push offset aDetails_2  +
push ebx  +
call sub_408D80  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_405E6E  +
test edi edi +
jz loc_405E61  +
push offset asc_42BDE0  +
call sub_409DF0  +
add esp 4 +
push offset asc_42B6D4  +
call sub_409DF0  +
add esp 4 +
cmp byte_4348A0 0 +
mov esi [ebp-20Ch] +
jz loc_405E9D  +
push esi  +
push offset asc_42BDE8  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
test esi esi +
jz loc_405EB4  +
push offset asc_41DD94  +
push ebx  +
call sub_408D80  +
jmp loc_405EB1  +
cmp byte_434000 0 +
jz loc_405EB4  +
push esi  +
push offset aMemorytypecoun  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_405ED4  +
push offset asc_420730  +
call sub_409DF0  +
push offset aMemorytypes  +
call sub_409DF0  +
add esp 8 +
xor edi edi +
test esi esi +
jz loc_406116  +
nop   +
cmp byte_4348A0 0 +
jz loc_405F4D  +
push edi  +
push offset asc_42BE70  +
push ebx  +
call sub_408D80  +
push dword ptr [ebp+edi*8-204h]  +
push offset asc_42BEC0  +
push ebx  +
call sub_408D80  +
mov esi [ebp+edi*8-208h] +
push esi  +
push offset aDetailsOpenSum  +
push ebx  +
call sub_408D80  +
add esp 24h +
test esi esi +
jnz loc_405F37  +
push offset aDetails_2  +
push ebx  +
call sub_408D80  +
mov esi [ebp-20Ch] +
add esp 8 +
jmp loc_405F86  +
push offset asc_41DD94  +
push ebx  +
call sub_408D80  +
mov esi [ebp-20Ch] +
add esp 8 +
jmp loc_405F86  +
cmp byte_434000 0 +
jz loc_405F86  +
push edi  +
push offset aMemorytypesU  +
call sub_409DF0  +
push dword ptr [ebp+edi*8-204h]  +
push offset aHeapindexU  +
call sub_409DF0  +
push dword ptr [ebp+edi*8-208h]  +
push offset aPropertyflags0  +
call sub_409DF0  +
add esp 18h +
cmp byte_4348A1 0 +
jz loc_405FE3  +
test edi edi +
jz loc_405FA0  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_42BDA0  +
call sub_409DF0  +
push dword ptr [ebp+edi*8-204h]  +
push offset aHeapindexU_0  +
call sub_409DF0  +
push dword ptr [ebp+edi*8-208h]  +
push offset aPropertyflagsU  +
call sub_409DF0  +
push offset asc_42BDD0  +
call sub_409DF0  +
add esp 1Ch +
cmp byte_4348A0 0 +
mov eax [ebp+edi*8-208h] +
mov [ebp-210h] eax +
jz loc_406097  +
test al 1 +
jz loc_406015  +
push offset asc_42BFF0  +
push ebx  +
call sub_408D80  +
mov eax [ebp-210h] +
add esp 8 +
test al 2 +
jz loc_40602D  +
push offset asc_42C060  +
push ebx  +
call sub_408D80  +
mov eax [ebp-210h] +
add esp 8 +
test al 4 +
jz loc_406045  +
push offset asc_42C0D0  +
push ebx  +
call sub_408D80  +
mov eax [ebp-210h] +
add esp 8 +
test al 8 +
jz loc_40605D  +
push offset asc_42C140  +
push ebx  +
call sub_408D80  +
mov eax [ebp-210h] +
add esp 8 +
test al 10h +
jz loc_406075  +
push offset asc_42C1B0  +
push ebx  +
call sub_408D80  +
mov eax [ebp-210h] +
add esp 8 +
test eax eax +
jz loc_406087  +
push offset aDetails_5  +
push ebx  +
call sub_408D80  +
add esp 8 +
push offset aDetails_1  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_40610D  +
cmp byte_434000 0 +
jz loc_40610D  +
test al 1 +
jz loc_4060B7  +
push offset aVk_memory_prop  +
call sub_409DF0  +
mov eax [ebp-210h] +
add esp 4 +
test al 2 +
jz loc_4060CE  +
push offset aVk_memory_pr_0  +
call sub_409DF0  +
mov eax [ebp-210h] +
add esp 4 +
test al 4 +
jz loc_4060E5  +
push offset aVk_memory_pr_1  +
call sub_409DF0  +
mov eax [ebp-210h] +
add esp 4 +
test al 8 +
jz loc_4060FC  +
push offset aVk_memory_pr_2  +
call sub_409DF0  +
mov eax [ebp-210h] +
add esp 4 +
test al 10h +
jz loc_40610D  +
push offset aVk_memory_pr_3  +
call sub_409DF0  +
add esp 4 +
inc edi  +
cmp edi esi +
jb loc_405EE0  +
cmp byte_4348A0 0 +
jz loc_40614A  +
test esi esi +
jz loc_406131  +
push offset asc_42BDD8  +
push ebx  +
call sub_408D80  +
add esp 8 +
push offset aDetails_2  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 10h +
cmp byte_4348A1 0 +
jz loc_40617B  +
test esi esi +
jz loc_406164  +
push offset asc_42BDE0  +
call sub_409DF0  +
add esp 4 +
push offset asc_42C2F0  +
call sub_409DF0  +
push offset asc_41D9F0  +
call sub_409DF0  +
add esp 8 +
push ebx  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
mov ecx [ebp-4] +
add esp 0Ch +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 340h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov edi [ebp+8] +
mov [ebp-33Ch] edi +
mov eax [edi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
lea esi [edi+340h] +
mov ecx 0CCh +
test al al +
jnz loc_4061FD  +
lea esi [edi+8] +
lea edi [ebp-334h] +
movs   +
mov esi [ebp-334h] +
mov eax esi +
shr eax 16h +
mov edi esi +
mov [ebp-338h] eax +
mov eax esi +
shr edi 0Ch +
and eax 0FFFh +
and edi 3FFh +
mov [ebp-340h] eax +
cmp byte_4348A0 0 +
jz loc_4062D3  +
push offset asc_42A0DC  +
push ebx  +
call sub_408D80  +
push dword ptr [ebp-340h]  +
push edi  +
push dword ptr [ebp-338h]  +
push esi  +
push offset asc_42A120  +
push ebx  +
call sub_408D80  +
mov eax [ebp-330h] +
push eax  +
push eax  +
push offset asc_42A1A0  +
push ebx  +
call sub_408D80  +
push dword ptr [ebp-32Ch]  +
push offset asc_42A218  +
push ebx  +
call sub_408D80  +
push dword ptr [ebp-328h]  +
push offset asc_42A270  +
push ebx  +
call sub_408D80  +
add esp 48h +
push dword ptr [ebp-324h]  +
call sub_408B70  +
push eax  +
push offset asc_42A2C8  +
push ebx  +
call sub_408D80  +
lea eax [ebp-320h] +
push eax  +
push offset asc_42A308  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 24h +
jmp loc_40636B  +
cmp byte_434000 0 +
jz loc_40636B  +
push offset aVkphysicalde_5  +
call sub_409DF0  +
push offset asc_42A368  +
call sub_409DF0  +
push dword ptr [ebp-340h]  +
push edi  +
push dword ptr [ebp-338h]  +
push esi  +
push offset aApiversion0xXD  +
call sub_409DF0  +
mov eax [ebp-330h] +
push eax  +
push eax  +
push offset aDriverversionU  +
call sub_409DF0  +
push dword ptr [ebp-32Ch]  +
push offset aVendorid0x04x  +
call sub_409DF0  +
push dword ptr [ebp-328h]  +
push offset aDeviceid0x04x  +
call sub_409DF0  +
push dword ptr [ebp-324h]  +
call sub_408B70  +
push eax  +
push offset aDevicetypeS  +
call sub_409DF0  +
add esp 44h +
lea eax [ebp-320h] +
push eax  +
push offset aDevicenameS  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_406445  +
push offset asc_420730  +
call sub_409DF0  +
push offset aVkphysicalde_6  +
call sub_409DF0  +
push esi  +
push offset aApiversionU  +
call sub_409DF0  +
push dword ptr [ebp-330h]  +
push offset aDriverversio_0  +
call sub_409DF0  +
push dword ptr [ebp-32Ch]  +
push offset aVendoridU  +
call sub_409DF0  +
push dword ptr [ebp-328h]  +
push offset aDeviceidU  +
call sub_409DF0  +
push dword ptr [ebp-324h]  +
push offset aDevicetypeU  +
call sub_409DF0  +
lea eax [ebp-320h] +
push eax  +
push offset aDevicenameS_0  +
call sub_409DF0  +
push offset aPipelinecacheu  +
call sub_409DF0  +
add esp 3Ch +
xor esi esi +
test esi esi +
jz loc_406408  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
movzx eax byte ptr [ebp+esi-220h] +
push eax  +
push offset aU_1  +
call sub_409DF0  +
inc esi  +
add esp 0Ch +
cmp esi 10h +
jb loc_4063F7  +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_42A504  +
call sub_409DF0  +
add esp 8 +
mov esi [ebp-33Ch] +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
lea eax [esi+468h] +
push ebx  +
jnz loc_406475  +
lea eax [esi+130h] +
push eax  +
call sub_401C70  +
mov eax [esi+680h] +
add esp 8 +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
lea eax [esi+658h] +
push ebx  +
jnz loc_4064A8  +
lea eax [esi+320h] +
push eax  +
call sub_403530  +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_4064C7  +
push offset asc_42A508  +
call sub_409DF0  +
add esp 4 +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_406CF5  +
mov ecx esi +
mov esi [ecx+33Ch] +
test esi esi +
jz loc_406CF5  +
mov edx [esi] +
cmp edx 3B9D0C21h +
jnz loc_406576  +
mov eax [ecx+0C68h] +
xor edi edi +
mov [ebp-338h] eax +
cmp [ecx+0C64h] edi +
jbe loc_406576  +
mov ecx eax +
mov eax offset aVk_ext_blend_o +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_406547  +
test dl dl +
jz loc_406543  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_406547  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_406527  +
xor eax eax +
jmp loc_40654C  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4065DB  +
mov ecx [ebp-33Ch] +
inc edi  +
mov eax [ebp-338h] +
add eax 104h +
mov [ebp-338h] eax +
cmp edi [ecx+0C64h] +
jb loc_406520  +
mov edx [esi] +
cmp edx 3B9C9308h +
jnz loc_4066FF  +
mov eax [ecx+0C68h] +
xor edi edi +
mov [ebp-338h] eax +
cmp [ecx+0C64h] edi +
jbe loc_4066FF  +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4066D0  +
test dl dl +
jz loc_4065D4  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4066D0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4065B0  +
xor eax eax +
jmp loc_4066D5  +
cmp byte_4348A0 0 +
jz loc_406659  +
push offset asc_42A510  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42A568  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_42A5E8  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+10h]  +
push offset asc_42A668  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+14h]  +
push offset asc_42A6E8  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+18h]  +
push offset asc_42A768  +
push ebx  +
call sub_408D80  +
add esp 44h +
push dword ptr [esi+1Ch]  +
push offset asc_42A7E8  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 14h +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_13  +
call sub_409DF0  +
push offset asc_42A898  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aAdvancedblendm  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aAdvancedblendi  +
call sub_409DF0  +
push dword ptr [esi+10h]  +
push offset aAdvancedblendn  +
call sub_409DF0  +
push dword ptr [esi+14h]  +
push offset aAdvancedblen_0  +
call sub_409DF0  +
push dword ptr [esi+18h]  +
push offset aAdvancedblen_1  +
call sub_409DF0  +
push dword ptr [esi+1Ch]  +
push offset aAdvancedblenda  +
call sub_409DF0  +
add esp 38h +
jmp loc_406CE4  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_406754  +
mov ecx [ebp-33Ch] +
inc edi  +
mov eax [ebp-338h] +
add eax 104h +
mov [ebp-338h] eax +
cmp edi [ecx+0C64h] +
jb near ptr byte_4065A0  +
mov edx [esi] +
cmp edx 3B9C0280h +
jnz loc_4067F2  +
mov eax [ecx+0C68h] +
xor edi edi +
mov [ebp-338h] eax +
cmp [ecx+0C64h] edi +
jbe loc_4067F2  +
mov ecx offset aVk_khr_push_de +
cmp byte_4348A0 0 +
jz loc_406789  +
push offset asc_42AA30  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42AA80  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 1Ch +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_18  +
call sub_409DF0  +
push offset asc_423B7C  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aPointclippingb  +
call sub_409DF0  +
add esp 10h +
jmp loc_406CE4  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_406858  +
mov ecx [ebp-33Ch] +
inc edi  +
mov eax [ebp-338h] +
add eax 104h +
mov [ebp-338h] eax +
cmp edi [ecx+0C64h] +
jb loc_406725  +
mov edx [esi] +
cmp edx 3B9C4CB8h +
jnz loc_4068FB  +
push dword ptr [ecx+0C64h]  +
push dword ptr [ecx+0C68h]  +
push offset aVk_ext_discard  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_4068F9  +
cmp byte_4348A0 0 +
jz loc_4068C3  +
push offset asc_42ACB8  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42AD08  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 1Ch +
jmp loc_406CE4  +
cmp byte_4348A0 0 +
jz loc_40688D  +
push offset asc_42AB60  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42ABB0  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 1Ch +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_19  +
call sub_409DF0  +
push offset asc_42AC48  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aMaxpushdescrip  +
call sub_409DF0  +
add esp 10h +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_14  +
call sub_409DF0  +
push offset asc_42AC48  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aMaxdiscardrect  +
call sub_409DF0  +
add esp 10h +
jmp loc_406CE4  +
mov edx [esi] +
cmp edx 3B9B990Ah +
jnz loc_4069B6  +
mov edi [ebp-33Ch] +
push dword ptr [edi+0C64h]  +
push dword ptr [edi+0C68h]  +
push offset aVk_khr_multivi  +
call sub_407CB0  +
add esp 0Ch +
test al al +
jz loc_4069B4  +
cmp byte_4348A0 0 +
jz loc_406971  +
push offset asc_42ADD0  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42AE18  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+0Ch]  +
push offset asc_42AE80  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 28h +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_15  +
call sub_409DF0  +
push offset asc_42AC48  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aMaxmultiviewvi  +
call sub_409DF0  +
push dword ptr [esi+0Ch]  +
push offset aMaxmultiviewin  +
call sub_409DF0  +
add esp 18h +
jmp loc_406CE4  +
mov edx [esi] +
cmp edx 3B9D5A40h +
jnz loc_406A4B  +
cmp byte_4348A0 0 +
jz loc_406A05  +
push offset asc_42AF58  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+8]  +
push offset asc_42AFA8  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push offset asc_42B010  +
push ebx  +
call sub_408D80  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
jmp loc_406CE1  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_16  +
call sub_409DF0  +
push offset asc_42B0A0  +
call sub_409DF0  +
push dword ptr [esi+8]  +
push offset aMaxpersetdescr  +
call sub_409DF0  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push offset aMaxmemoryall_1  +
call sub_409DF0  +
add esp 1Ch +
jmp loc_406CE4  +
cmp edx 3B9BDF5Ch +
jnz loc_406CE4  +
cmp byte_4348A0 0 +
jz loc_406BA5  +
push offset asc_42B110  +
push ebx  +
call sub_408D80  +
movzx eax byte ptr [esi+17h] +
push eax  +
movzx eax byte ptr [esi+16h] +
push eax  +
movzx eax byte ptr [esi+15h] +
push eax  +
movzx eax byte ptr [esi+14h] +
push eax  +
movzx eax byte ptr [esi+13h] +
push eax  +
movzx eax byte ptr [esi+12h] +
push eax  +
movzx eax byte ptr [esi+11h] +
push eax  +
movzx eax byte ptr [esi+10h] +
push eax  +
movzx eax byte ptr [esi+0Fh] +
push eax  +
movzx eax byte ptr [esi+0Eh] +
push eax  +
movzx eax byte ptr [esi+0Dh] +
push eax  +
movzx eax byte ptr [esi+0Ch] +
push eax  +
movzx eax byte ptr [esi+0Bh] +
push eax  +
movzx eax byte ptr [esi+0Ah] +
push eax  +
movzx eax byte ptr [esi+9] +
push eax  +
movzx eax byte ptr [esi+8] +
push eax  +
push offset asc_42B150  +
push ebx  +
call sub_408D80  +
movzx eax byte ptr [esi+27h] +
add esp 50h +
push eax  +
movzx eax byte ptr [esi+26h] +
push eax  +
movzx eax byte ptr [esi+25h] +
push eax  +
movzx eax byte ptr [esi+24h] +
push eax  +
movzx eax byte ptr [esi+23h] +
push eax  +
movzx eax byte ptr [esi+22h] +
push eax  +
movzx eax byte ptr [esi+21h] +
push eax  +
movzx eax byte ptr [esi+20h] +
push eax  +
movzx eax byte ptr [esi+1Fh] +
push eax  +
movzx eax byte ptr [esi+1Eh] +
push eax  +
movzx eax byte ptr [esi+1Dh] +
push eax  +
movzx eax byte ptr [esi+1Ch] +
push eax  +
movzx eax byte ptr [esi+1Bh] +
push eax  +
movzx eax byte ptr [esi+1Ah] +
push eax  +
movzx eax byte ptr [esi+19h] +
push eax  +
movzx eax byte ptr [esi+18h] +
push eax  +
push offset asc_42B1F0  +
push ebx  +
call sub_408D80  +
cmp dword ptr [esi+34h] 0 +
mov eax offset aTrue +
mov ecx offset aFalse +
cmovz eax ecx +
push eax  +
push offset asc_42B2A0  +
push ebx  +
call sub_408D80  +
add esp 54h +
cmp dword ptr [esi+34h] 0 +
jz loc_406B92  +
movzx eax byte ptr [esi+2Fh] +
push eax  +
movzx eax byte ptr [esi+2Eh] +
push eax  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
movzx eax byte ptr [esi+2Ch] +
push eax  +
movzx eax byte ptr [esi+2Bh] +
push eax  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
movzx eax byte ptr [esi+29h] +
push eax  +
movzx eax byte ptr [esi+28h] +
push eax  +
push offset asc_42B300  +
push ebx  +
call sub_408D80  +
push dword ptr [esi+30h]  +
push offset asc_42B378  +
push ebx  +
call sub_408D80  +
add esp 34h +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_406CE4  +
cmp byte_434000 0 +
jz loc_406CE4  +
push offset aVkphysicald_17  +
call sub_409DF0  +
push offset asc_42AC48  +
call sub_409DF0  +
movzx eax byte ptr [esi+17h] +
push eax  +
movzx eax byte ptr [esi+16h] +
push eax  +
movzx eax byte ptr [esi+15h] +
push eax  +
movzx eax byte ptr [esi+14h] +
push eax  +
movzx eax byte ptr [esi+13h] +
push eax  +
movzx eax byte ptr [esi+12h] +
push eax  +
movzx eax byte ptr [esi+11h] +
push eax  +
movzx eax byte ptr [esi+10h] +
push eax  +
movzx eax byte ptr [esi+0Fh] +
push eax  +
movzx eax byte ptr [esi+0Eh] +
push eax  +
movzx eax byte ptr [esi+0Dh] +
push eax  +
movzx eax byte ptr [esi+0Ch] +
push eax  +
movzx eax byte ptr [esi+0Bh] +
push eax  +
movzx eax byte ptr [esi+0Ah] +
push eax  +
movzx eax byte ptr [esi+9] +
push eax  +
movzx eax byte ptr [esi+8] +
push eax  +
push offset aDeviceuuid02x0  +
call sub_409DF0  +
movzx eax byte ptr [esi+27h] +
add esp 4Ch +
push eax  +
movzx eax byte ptr [esi+26h] +
push eax  +
movzx eax byte ptr [esi+25h] +
push eax  +
movzx eax byte ptr [esi+24h] +
push eax  +
movzx eax byte ptr [esi+23h] +
push eax  +
movzx eax byte ptr [esi+22h] +
push eax  +
movzx eax byte ptr [esi+21h] +
push eax  +
movzx eax byte ptr [esi+20h] +
push eax  +
movzx eax byte ptr [esi+1Fh] +
push eax  +
movzx eax byte ptr [esi+1Eh] +
push eax  +
movzx eax byte ptr [esi+1Dh] +
push eax  +
movzx eax byte ptr [esi+1Ch] +
push eax  +
movzx eax byte ptr [esi+1Bh] +
push eax  +
movzx eax byte ptr [esi+1Ah] +
push eax  +
movzx eax byte ptr [esi+19h] +
push eax  +
movzx eax byte ptr [esi+18h] +
push eax  +
push offset aDriveruuid02x0  +
call sub_409DF0  +
cmp dword ptr [esi+34h] 0 +
mov ecx offset aFalse +
mov eax offset aTrue +
cmovz eax ecx +
push eax  +
push offset aDeviceluidvali  +
call sub_409DF0  +
add esp 4Ch +
cmp dword ptr [esi+34h] 0 +
jz loc_406CE4  +
movzx eax byte ptr [esi+2Fh] +
push eax  +
movzx eax byte ptr [esi+2Eh] +
push eax  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
movzx eax byte ptr [esi+2Ch] +
push eax  +
movzx eax byte ptr [esi+2Bh] +
push eax  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
movzx eax byte ptr [esi+29h] +
push eax  +
movzx eax byte ptr [esi+28h] +
push eax  +
push offset aDeviceluid02x0  +
call sub_409DF0  +
push dword ptr [esi+30h]  +
push offset aDevicenodemask  +
call sub_409DF0  +
add esp 2Ch +
mov esi [esi+4] +
mov ecx [ebp-33Ch] +
test esi esi +
jnz loc_406500  +
push ebx  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
mov ecx [ebp-4] +
add esp 0Ch +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
mov edx [ebp+arg_4] +
add esp 0Ch +
test al al +
jz loc_406D68  +
mov eax [esi+678h] +
mov ecx edx +
shl ecx 5 +
movups xmm0 oword ptr [eax+ecx+8] +
movups oword ptr [ebp+var_18] xmm0 +
movq xmm0 qword ptr [eax+ecx+18h] +
jmp loc_406D7F  +
mov eax [esi+674h] +
lea ecx [edx+edx*2] +
movups xmm0 oword ptr [eax+ecx*8] +
movups oword ptr [ebp+var_18] xmm0 +
movq xmm0 qword ptr [eax+ecx*8+10h] +
cmp byte_4348A0 0 +
mov esi [ebp+arg_8] +
movq [ebp+var_8] xmm0 +
mov edi dword ptr [ebp+var_8+4] +
mov ebx dword ptr [ebp+var_8] +
jz loc_406DB2  +
push edx  +
push offset asc_42B6D8  +
push esi  +
call sub_408D80  +
push offset asc_42B730  +
push esi  +
call sub_408D80  +
add esp 14h +
jmp loc_406DE1  +
cmp byte_434000 0 +
jz loc_406EFD  +
push edx  +
push offset aVkqueuefamilyp  +
call sub_409DF0  +
push offset asc_42A368  +
call sub_409DF0  +
push offset aQueueflags  +
call sub_409DF0  +
add esp 10h +
cmp byte_4348A0 0 +
jnz loc_406DF7  +
cmp byte_434000 0 +
jz loc_406EFD  +
mov bl byte ptr [ebp+var_18] +
mov eax offset unk_41FC66 +
test bl 1 +
jz loc_406E17  +
push offset aGraphics  +
push esi  +
call sub_408D80  +
add esp 8 +
mov eax offset asc_42B79C +
test bl 2 +
jz loc_406E30  +
push eax  +
push offset aScompute  +
push esi  +
call sub_408D80  +
add esp 0Ch +
mov eax offset asc_42B79C +
test bl 4 +
jz loc_406E49  +
push eax  +
push offset aStransfer  +
push esi  +
call sub_408D80  +
add esp 0Ch +
mov eax offset asc_42B79C +
test bl 8 +
jz loc_406E5D  +
push eax  +
push offset aSsparse  +
push esi  +
call sub_408D80  +
add esp 0Ch +
cmp byte_4348A0 0 +
jz loc_406EB3  +
push offset aSummaryDetails  +
push esi  +
call sub_408D80  +
mov eax dword ptr [ebp+var_18+4] +
push eax  +
push offset asc_42B7C8  +
push esi  +
call sub_408D80  +
mov eax dword ptr [ebp+var_18+8] +
push eax  +
push offset asc_42B828  +
push esi  +
call sub_408D80  +
mov ebx dword ptr [ebp+var_8] +
mov eax dword ptr [ebp+var_18+0Ch] +
push edi  +
push ebx  +
push eax  +
push offset asc_42B888  +
push esi  +
call sub_408D80  +
push offset aDetails  +
push esi  +
call sub_408D80  +
add esp 3Ch +
jmp loc_406EFD  +
cmp byte_434000 0 +
jz loc_406EFA  +
push offset asc_41DD94  +
call sub_409DF0  +
mov eax dword ptr [ebp+var_18+4] +
push eax  +
push offset aQueuecountU  +
call sub_409DF0  +
mov eax dword ptr [ebp+var_18+8] +
push eax  +
push offset aTimestampvalid  +
call sub_409DF0  +
mov ebx dword ptr [ebp+var_8] +
mov eax dword ptr [ebp+var_18+0Ch] +
push edi  +
push ebx  +
push eax  +
push offset aMinimagetransf  +
call sub_409DF0  +
add esp 24h +
jmp loc_406EFD  +
mov ebx dword ptr [ebp+var_8] +
cmp byte_4348A1 0 +
jz loc_406F7B  +
push offset asc_420654  +
call sub_409DF0  +
push offset aMinimagetran_0  +
call sub_409DF0  +
push edi  +
push offset aDepthU  +
call sub_409DF0  +
push ebx  +
push offset aHeightU_0  +
call sub_409DF0  +
push dword ptr [ebp+var_18+0Ch]  +
push offset aWidthU_0  +
call sub_409DF0  +
push offset asc_42B9F4  +
call sub_409DF0  +
push dword ptr [ebp+var_18+4]  +
push offset aQueuecountU_0  +
call sub_409DF0  +
push dword ptr [ebp+var_18]  +
push offset aQueueflagsU  +
call sub_409DF0  +
push dword ptr [ebp+var_18+8]  +
push offset aTimestampval_0  +
call sub_409DF0  +
push offset asc_4206D0  +
call sub_409DF0  +
add esp 40h +
push esi  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0C70h  +
push 0  +
push esi  +
mov [ebp-48h] ebx +
call sub_40A9E0  +
mov eax [ebp+10h] +
add esp 0Ch +
mov ecx [ebp+14h] +
mov [esi] eax +
lea eax [esi+8] +
mov [esi+4] ecx +
push eax  +
push ecx  +
mov [esi+680h] ebx +
call vkGetPhysicalDeviceProperties  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_40708E  +
push 7  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-3Ch] 3B9D0C21h +
lea edi [esi+338h] +
mov dword ptr [ebp-38h] 20h +
push eax  +
push edi  +
mov dword ptr [ebp-34h] 3B9C9308h +
mov dword ptr [ebp-30h] 0Ch +
mov dword ptr [ebp-2Ch] 3B9C0280h +
mov dword ptr [ebp-28h] 0Ch +
mov dword ptr [ebp-24h] 3B9C4CB8h +
mov dword ptr [ebp-20h] 0Ch +
mov dword ptr [ebp-1Ch] 3B9B990Ah +
mov dword ptr [ebp-18h] 10h +
mov dword ptr [ebp-14h] 3B9D5A40h +
mov dword ptr [ebp-10h] 18h +
mov dword ptr [ebp-0Ch] 3B9BDF5Ch +
mov dword ptr [ebp-8] 38h +
mov dword ptr [edi] 3B9BB079h +
call loc_408CD0  +
mov eax [ebx+2Ch] +
add esp 0Ch +
push edi  +
push dword ptr [esi+4]  +
call eax  +
push 0  +
lea ebx [esi+670h] +
push ebx  +
push dword ptr [esi+4]  +
call vkGetPhysicalDeviceQueueFamilyProperties  +
mov eax [ebx] +
lea eax [eax+eax*2] +
shl eax 3 +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov [esi+674h] eax +
test eax eax +
jnz loc_407115  +
push offset aVk_error_out_o  +
push 396h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-4Ch] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40750F  +
jmp loc_407507  +
push eax  +
push ebx  +
push dword ptr [esi+4]  +
call vkGetPhysicalDeviceQueueFamilyProperties  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_4071F6  +
mov eax [ebx] +
shl eax 5 +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov [esi+678h] eax +
test eax eax +
jnz loc_4071B3  +
push offset aVk_error_out_o  +
push 39Fh  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-4Ch] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40751E  +
jmp loc_407516  +
xor edx edx +
cmp [ebx] edx +
jbe loc_4071E4  +
xor ecx ecx +
push dword ptr [esi+678h]  +
mov eax [ebp-48h] +
push ebx  +
push dword ptr [esi+4]  +
mov eax [eax+34h] +
call eax  +
mov eax [ebx] +
lea eax [eax+eax*2] +
shl eax 3 +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov [esi+67Ch] eax +
test eax eax +
jnz loc_40726C  +
push offset aVk_error_out_o  +
push 3ADh  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-4Ch] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40752D  +
jmp loc_407525  +
cmp dword ptr [ebx] 0 +
mov dword ptr [ebp-44h] 0 +
jbe loc_4073B0  +
xor edi edi +
xor ebx ebx +
mov [ebp-40h] ebx +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_4072AC  +
mov eax [esi+678h] +
mov eax [eax+ebx+0Ch] +
jmp loc_4072B6  +
mov eax [esi+674h] +
mov eax [edi+eax+4] +
shl eax 2 +
push eax  +
call sub_40D4AA  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4074B3  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_4072F8  +
mov eax [esi+678h] +
mov ecx [ebp-40h] +
mov eax [eax+ecx+0Ch] +
jmp loc_407302  +
mov eax [esi+674h] +
mov eax [edi+eax+4] +
shl eax 2 +
push eax  +
push 0  +
push ebx  +
call sub_40A9E0  +
mov eax [esi+67Ch] +
add esp 0Ch +
mov ecx [ebp-44h] +
mov dword ptr [edi+eax] 2 +
mov eax [esi+67Ch] +
mov dword ptr [edi+eax+4] 0 +
mov eax [esi+67Ch] +
mov dword ptr [edi+eax+8] 0 +
mov eax [esi+67Ch] +
mov [edi+eax+0Ch] ecx +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
mov ecx [esi+67Ch] +
add esp 0Ch +
test al al +
jz loc_407379  +
mov eax [esi+678h] +
mov edx [ebp-40h] +
mov eax [eax+edx+0Ch] +
jmp loc_407383  +
mov eax [esi+674h] +
mov eax [edi+eax+4] +
mov [edi+ecx+10h] eax +
mov eax [esi+67Ch] +
mov [edi+eax+14h] ebx +
add edi 18h +
mov eax [ebp-44h] +
mov ebx [ebp-40h] +
inc eax  +
add ebx 20h +
mov [ebp-44h] eax +
mov [ebp-40h] ebx +
cmp eax [esi+670h] +
jb loc_407283  +
lea eax [esi+688h] +
push eax  +
push dword ptr [esi+4]  +
call vkGetPhysicalDeviceMemoryProperties  +
lea eax [esi+0AA0h] +
push eax  +
push dword ptr [esi+4]  +
call vkGetPhysicalDeviceFeatures  +
mov eax [esi+680h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push offset aVk_khr_get_phy  +
call sub_407BB0  +
add esp 0Ch +
test al al +
jz loc_407489  +
mov ebx [ebp-48h] +
lea eax [esi+890h] +
push eax  +
push dword ptr [esi+4]  +
mov dword ptr [eax] 3B9BB07Eh +
mov dword ptr [esi+894h] 0 +
mov eax [ebx+3Ch] +
call eax  +
push 6  +
lea eax [ebp-34h] +
mov dword ptr [ebp-34h] 3B9D7D68h +
lea edi [esi+0B7Ch] +
mov dword ptr [ebp-30h] 14h +
push eax  +
push edi  +
mov dword ptr [ebp-2Ch] 3B9C0E38h +
mov dword ptr [ebp-28h] 18h +
mov dword ptr [ebp-24h] 3B9D2B64h +
mov dword ptr [ebp-20h] 0Ch +
mov dword ptr [ebp-1Ch] 3B9C9EC0h +
mov dword ptr [ebp-18h] 10h +
mov dword ptr [ebp-14h] 3B9D0C20h +
mov dword ptr [ebp-10h] 0Ch +
mov dword ptr [ebp-0Ch] 3B9B9909h +
mov dword ptr [ebp-8] 14h +
mov dword ptr [edi] 3B9BB078h +
call loc_408CD0  +
mov eax [ebx+38h] +
add esp 0Ch +
push edi  +
push dword ptr [esi+4]  +
call eax  +
lea eax [esi+0C68h] +
push eax  +
lea eax [esi+0C64h] +
push eax  +
push 0  +
push esi  +
call sub_404890  +
mov ecx [ebp-4] +
add esp 10h +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aVk_error_out_o  +
push 3B8h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-4Ch] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_40753C  +
jmp loc_407534  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
cmp byte_4348A0 0 +
mov eax [ebp+10h] +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
push edi  +
mov edi [ebp+8] +
mov [ebp-0B4h] eax +
mov eax [ebp+0Ch] +
mov [ebp-0ACh] ebx +
jz loc_4075A6  +
push eax  +
push offset asc_42C378  +
push ebx  +
call sub_408D80  +
push dword ptr [edi+8]  +
push offset asc_42C3C0  +
push ebx  +
call sub_408D80  +
add esp 18h +
jmp loc_4075CA  +
cmp byte_434000 0 +
jz loc_4075CA  +
push eax  +
push offset aDeviceGroupPro  +
call sub_409DF0  +
push dword ptr [edi+8]  +
push offset aPhysicaldevice  +
call sub_409DF0  +
add esp 10h +
imul eax [edi+8] +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov [ebp-0A8h] eax +
test eax eax +
jnz loc_407642  +
push offset aVk_error_out_o  +
push 0C85h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-0B8h] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_407B9F  +
jmp loc_407B97  +
xor esi esi +
cmp [edi+8] esi +
jbe loc_407683  +
mov ebx eax +
lea eax [edi+0Ch] +
mov [ebp-0A4h] eax +
push ebx  +
push dword ptr [eax]  +
call vkGetPhysicalDeviceProperties  +
mov eax [ebp-0A4h] +
inc esi  +
add eax 4 +
add ebx 330h +
mov [ebp-0A4h] eax +
cmp esi [edi+8] +
jb loc_407654  +
mov ebx [ebp-0ACh] +
mov eax [ebp-0A8h] +
xor esi esi +
cmp [edi+8] esi +
jbe loc_4076DD  +
add eax 14h +
mov [ebp-0A0h] eax +
cmp byte_4348A0 0 +
jz loc_4076AE  +
push esi  +
push eax  +
push offset asc_42C458  +
push ebx  +
call sub_408D80  +
add esp 10h +
jmp loc_4076C6  +
cmp byte_434000 0 +
jz loc_4076CC  +
push esi  +
push eax  +
push offset aSIdD  +
call sub_409DF0  +
add esp 0Ch +
mov eax [ebp-0A0h] +
inc esi  +
add eax 330h +
mov [ebp-0A0h] eax +
cmp esi [edi+8] +
jb loc_407693  +
cmp byte_4348A0 0 +
jz loc_407713  +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_407713  +
push dword ptr [edi+8Ch]  +
push offset asc_42C4C0  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_40772F  +
cmp byte_434000 0 +
jz loc_40772F  +
push dword ptr [edi+8Ch]  +
push offset aSubsetallocati  +
call sub_409DF0  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_407746  +
push offset aDetails_4  +
push ebx  +
call sub_408D80  +
add esp 8 +
mov eax [edi+8] +
lea ecx [ebp-0C8h] +
mov [ebp-104h] ecx +
lea ecx [ebp-0E0h] +
mov [ebp-0F8h] ecx +
lea ecx [ebp-10h] +
mov [ebp-0E8h] ecx +
lea ecx [ebp-0B0h] +
push ecx  +
push 0  +
lea ecx [ebp-108h] +
mov [ebp-0C0h] eax +
lea eax [edi+0Ch] +
mov dword ptr [ebp-10h] offset aVk_khr_surface +
push ecx  +
push dword ptr [eax]  +
mov dword ptr [ebp-0Ch] offset aVk_khr_swapcha +
mov dword ptr [ebp-8] offset aVk_khr_devic_0 +
mov dword ptr [ebp-0C8h] 3B9BDB71h +
mov dword ptr [ebp-0C4h] 0 +
mov [ebp-0BCh] eax +
mov dword ptr [ebp-0E0h] 2 +
mov dword ptr [ebp-0DCh] 0 +
mov dword ptr [ebp-0D8h] 0 +
mov dword ptr [ebp-0D4h] 0 +
mov dword ptr [ebp-0D0h] 1 +
mov dword ptr [ebp-0CCh] 0 +
mov dword ptr [ebp-108h] 3 +
mov dword ptr [ebp-100h] 0 +
mov dword ptr [ebp-0FCh] 1 +
mov dword ptr [ebp-0F4h] 0 +
mov dword ptr [ebp-0F0h] 0 +
mov dword ptr [ebp-0ECh] 3 +
mov dword ptr [ebp-0E4h] 0 +
mov dword ptr [ebp-0B0h] 0 +
call vkCreateDevice  +
test eax eax +
jnz loc_407B6B  +
cmp byte_4348A0 al +
jz loc_407869  +
mov eax [ebp+0Ch] +
push eax  +
push offset asc_42C560  +
push ebx  +
call sub_408D80  +
add esp 0Ch +
jmp loc_407883  +
cmp byte_434000 0 +
jz loc_407883  +
mov eax [ebp+0Ch] +
push eax  +
push offset aDeviceGroupPre  +
call sub_409DF0  +
add esp 8 +
push 84h  +
lea eax [ebp-98h] +
mov dword ptr [ebp-9Ch] 3B9BB467h +
push 0  +
push eax  +
call sub_40A9E0  +
mov eax [ebp-0B4h] +
add esp 0Ch +
mov dword ptr [ebp-14h] 0 +
push offset aVkgetdevicegro  +
push dword ptr [eax]  +
call vkGetInstanceProcAddr  +
lea ecx [ebp-9Ch] +
push ecx  +
push dword ptr [ebp-0B0h]  +
call eax  +
xor esi esi +
mov [ebp-0A0h] esi +
cmp [edi+8] esi +
jbe loc_407A5D  +
mov eax [ebp-0A8h] +
add eax 14h +
mov [ebp-0A4h] eax +
cmp byte_4348A0 0 +
jz loc_4079AB  +
push esi  +
push eax  +
push offset asc_42C610  +
push ebx  +
call sub_408D80  +
push offset asc_42C660  +
push ebx  +
call sub_408D80  +
add esp 18h +
cmp dword ptr [ebp+esi*4-94h] 0 +
jz loc_40798A  +
xor esi esi +
cmp [edi+8] esi +
jbe loc_407971  +
mov ebx [ebp-0A8h] +
add ebx 14h +
mov ecx esi +
mov eax 1 +
shl eax cl +
mov ecx [ebp-0A0h] +
test [ebp+ecx*4-94h] eax +
jz loc_40795F  +
push esi  +
push ebx  +
push offset asc_42C458  +
push dword ptr [ebp-0ACh]  +
call sub_408D80  +
add esp 10h +
inc esi  +
add ebx 330h +
cmp esi [edi+8] +
jb loc_407932  +
mov ebx [ebp-0ACh] +
mov esi [ebp-0A0h] +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_407A3C  +
push offset asc_42C6B4  +
push ebx  +
call sub_408D80  +
add esp 8 +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_407A3C  +
cmp byte_434000 0 +
jz loc_407A42  +
push esi  +
push eax  +
push offset aSIdD_0  +
call sub_409DF0  +
push offset aCanPresentImag  +
call sub_409DF0  +
add esp 10h +
cmp dword ptr [ebp+esi*4-94h] 0 +
jz loc_407ADC  +
xor esi esi +
cmp [edi+8] esi +
jbe loc_407A29  +
mov ebx [ebp-0A8h] +
add ebx 14h +
nop   +
mov ecx esi +
mov eax 1 +
shl eax cl +
mov ecx [ebp-0A0h] +
test [ebp+ecx*4-94h] eax +
jz loc_407A17  +
push esi  +
push ebx  +
push offset aSIdD_1  +
call sub_409DF0  +
add esp 0Ch +
inc esi  +
add ebx 330h +
cmp esi [edi+8] +
jb loc_4079F0  +
mov ebx [ebp-0ACh] +
mov esi [ebp-0A0h] +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
mov eax [ebp-0A4h] +
inc esi  +
add eax 330h +
mov [ebp-0A0h] esi +
mov [ebp-0A4h] eax +
cmp esi [edi+8] +
jb loc_4078F0  +
cmp byte_4348A0 0 +
jz loc_407AEE  +
push offset asc_42C748  +
push ebx  +
call sub_408D80  +
mov eax [ebp-14h] +
add esp 8 +
test al 1 +
jz loc_407A90  +
push offset asc_42C778  +
push ebx  +
call sub_408D80  +
mov eax [ebp-14h] +
add esp 8 +
test al 2 +
jz loc_407AA5  +
push offset asc_42C7D0  +
push ebx  +
call sub_408D80  +
mov eax [ebp-14h] +
add esp 8 +
test al 4 +
jz loc_407ABA  +
push offset asc_42C830  +
push ebx  +
call sub_408D80  +
mov eax [ebp-14h] +
add esp 8 +
test al 8 +
jz loc_407ACC  +
push offset asc_42C888  +
push ebx  +
call sub_408D80  +
add esp 8 +
push offset aDetails  +
push ebx  +
call sub_408D80  +
add esp 8 +
jmp loc_407B54  +
push offset aNone_3  +
call sub_409DF0  +
add esp 4 +
jmp loc_407A2F  +
***
cmp byte_434000 0 +
jz loc_407B6B  +
push offset aPresentModes  +
call sub_409DF0  +
mov eax [ebp-14h] +
add esp 4 +
test al 1 +
jz loc_407B1B  +
push offset aVk_device_grou  +
call sub_409DF0  +
mov eax [ebp-14h] +
add esp 4 +
test al 2 +
jz loc_407B2F  +
push offset aVk_device_gr_0  +
call sub_409DF0  +
mov eax [ebp-14h] +
add esp 4 +
test al 4 +
jz loc_407B43  +
push offset aVk_device_gr_1  +
call sub_409DF0  +
mov eax [ebp-14h] +
add esp 4 +
test al 8 +
jz loc_407B54  +
push offset aVk_device_gr_2  +
call sub_409DF0  +
add esp 4 +
cmp byte_4348A0 0 +
jz loc_407B6B  +
push offset aDetails_4  +
push ebx  +
call sub_408D80  +
add esp 8 +
push dword ptr [ebp-0A8h]  +
call sub_40D4A5  +
add esp 4 +
push 0  +
push dword ptr [ebp-0B0h]  +
call vkDestroyDevice  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
xor esi esi +
test edi edi +
jz loc_407BF6  +
mov ebx [ebp+arg_4] +
mov eax [ebx+esi*4] +
mov ecx [ebp+arg_0] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_407BE8  +
test dl dl +
jz loc_407BE4  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_407BE8  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_407BC8  +
xor eax eax +
jmp loc_407BED  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_407BFD  +
inc esi  +
cmp esi edi +
jb loc_407BC2  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push 6  +
push esi  +
push offset aJson  +
call sub_40DF20  +
add esp 0Ch +
test eax eax +
jz loc_407C60  +
mov ecx offset aJ +
mov eax esi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_407C52  +
test dl dl +
jz loc_407C4E  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_407C52  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_407C32  +
xor eax eax +
jmp loc_407C57  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_407C60  +
xor al al +
pop esi  +
pop ebp  +
retn   +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_407C65  +
sub ecx edx +
cmp ecx 7 +
jbe loc_407C9B  +
push 7  +
push esi  +
push offset aJson_0  +
call sub_40DF20  +
add esp 0Ch +
test eax eax +
jnz loc_407C9B  +
push 0Ah  +
push eax  +
lea eax [esi+7] +
push eax  +
call sub_40DE9D  +
add esp 0Ch +
mov dword_4348A4 eax +
mov byte_434000 0 +
mov al 1 +
mov byte_4348A1 1 +
pop esi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
xor esi esi +
push edi  +
test ebx ebx +
jz loc_407CFB  +
mov edi [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov eax edi +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_407CE7  +
test dl dl +
jz loc_407CE3  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_407CE7  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_407CC7  +
xor eax eax +
jmp loc_407CEC  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_407D02  +
inc esi  +
add edi 104h +
cmp esi ebx +
jb loc_407CC2  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_407D40  +
test dl dl +
jz loc_407D3C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_407D40  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_407D20  +
xor eax eax +
pop ebp  +
retn   +
***
sbb eax eax +
or eax 1 +
pop ebp  +
retn   +
***
sub esp 28h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov esi eax +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push esi  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jz loc_407D97  +
mov ecx dword ptr [ebp+ConsoleScreenBufferInfo.dwSize.X] +
mov eax 4E20h +
add ecx 1Eh +
mov [ebp+dwSize.Y] ax +
mov [ebp+dwSize.X] cx +
push dword ptr [ebp+dwSize.X]  +
push esi  +
call ds:SetConsoleScreenBufferSize  +
xor eax eax +
mov dword ptr [ebp+ConsoleWindow.Left] eax +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.dwSize.X] +
add eax 1Dh +
mov [ebp+ConsoleWindow.Right] ax +
mov eax 32h +
mov [ebp+ConsoleWindow.Bottom] ax +
lea eax [ebp+ConsoleWindow] +
push eax  +
push 1  +
push esi  +
call ds:SetConsoleWindowInfo  +
push offset ConsoleTitle  +
call ds:SetConsoleTitleA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
and byte ptr (unk_4337FF-43380Fh)[eax] ch +
rol dword ptr [ecx+0] 0EBh +
xor al 0A8h +
add dh [esi+ecx+57h] +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+20h]  +
push offset aWarningSCodeDS  +
jmp loc_407E50  +
test al 1 +
jz loc_407E40  +
push edi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+20h]  +
push offset aInfoSCodeDS  +
jmp loc_407E50  +
test al 10h +
jz loc_407E59  +
push edi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+20h]  +
push offset aDebugSCodeDS  +
push esi  +
call sub_409E20  +
add esp 14h +
push esi  +
push offset aS_2  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push esi  +
call sub_40D4A5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 24h  +
***
sub esp 34h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov al ds:byte_42BA54 +
or ecx 0FFFFFFFFh +
movq xmm0 ds:qword_42BA4C +
movsd xmm2 ds:qword_42D250 +
mov [ebp+var_8] al +
mov eax [ebp+arg_0] +
movq [ebp+var_10] xmm0 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_42D260[eax*8] +
comisd xmm0 xmm2 +
jbe loc_407EF5  +
movsd xmm1 ds:qword_42D248 +
cmp ecx 7 +
jge loc_407EF5  +
mulsd xmm0 xmm1 +
inc ecx  +
comisd xmm0 xmm2 +
ja loc_407EE5  +
mov ax ds:word_42BA58 +
mov word ptr [ebp+var_34] ax +
mov al ds:byte_42BA5A +
mov byte ptr [ebp+var_34+2] al +
test ecx ecx +
js loc_407F12  +
mov al byte ptr [ebp+ecx+var_10] +
mov byte ptr [ebp+var_34] al +
lea eax [ebp+var_34] +
push eax  +
sub esp 8 +
lea eax [ebp+var_30] +
movsd [esp+40h+var_40] xmm0 +
push offset a_2fSb  +
push 20h  +
push eax  +
call sub_408C90  +
lea eax [ebp+var_30] +
push eax  +
call loc_40DEC9  +
mov ecx [ebp+var_4] +
add esp 1Ch +
xor ecx ebp +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push offset aDoctypeHtml  +
push esi  +
call sub_408D80  +
push offset aHtml  +
push esi  +
call sub_408D80  +
push offset aHead  +
push esi  +
call sub_408D80  +
push offset aTitleVulkaninf  +
push esi  +
call sub_408D80  +
push offset aStyleTypeTextC  +
push esi  +
call sub_408D80  +
push offset aHtml_0  +
push esi  +
call sub_408D80  +
push offset aBackgroundColo  +
push esi  +
call sub_408D80  +
push offset aBackgroundImag  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aBackgroundPosi  +
push esi  +
call sub_408D80  +
push offset aWebkitBackgrou  +
push esi  +
call sub_408D80  +
push offset aMozBackgroundS  +
push esi  +
call sub_408D80  +
push offset aOBackgroundSiz  +
push esi  +
call sub_408D80  +
push offset aBackgroundSize  +
push esi  +
call sub_408D80  +
push offset aBackgroundAtta  +
push esi  +
call sub_408D80  +
push offset aBackgroundRepe  +
push esi  +
call sub_408D80  +
push offset aHeight100  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aHeader  +
push esi  +
call sub_408D80  +
push offset aZIndex1  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aHeaderImg  +
push esi  +
call sub_408D80  +
push offset aPositionAbsolu  +
push esi  +
call sub_408D80  +
push offset aWidth160px  +
push esi  +
call sub_408D80  +
push offset aMarginLeft280p  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aTop10px  +
push esi  +
call sub_408D80  +
push offset aLeft50  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aHeaderH1  +
push esi  +
call sub_408D80  +
push offset aFontFamilyAria  +
push esi  +
call sub_408D80  +
push offset aFontSize44px  +
push esi  +
call sub_408D80  +
push offset aFontWeight200  +
push esi  +
call sub_408D80  +
push offset aTextShadow4px4  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aColorEee  +
push esi  +
call sub_408D80  +
push offset aPositionAbsolu  +
push esi  +
call sub_408D80  +
push offset aWidth400px  +
push esi  +
call sub_408D80  +
push offset aMarginLeft80px  +
push esi  +
call sub_408D80  +
push offset aTop8px  +
push esi  +
call sub_408D80  +
push offset aLeft50  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aBody  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aFontFamilyCons  +
push esi  +
call sub_408D80  +
push offset aFontSize14px  +
push esi  +
call sub_408D80  +
push offset aLineHeight20px  +
push esi  +
call sub_408D80  +
push offset aColorEee  +
push esi  +
call sub_408D80  +
push offset aHeight100  +
push esi  +
call sub_408D80  +
push offset aMargin0  +
push esi  +
call sub_408D80  +
push offset aOverflowHidden  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aWrapper  +
push esi  +
call sub_408D80  +
push offset aBackgroundCo_0  +
push esi  +
call sub_408D80  +
push offset aBorder1pxSolid  +
push esi  +
call sub_408D80  +
push offset aBoxShadow0px0p  +
push esi  +
call sub_408D80  +
push offset aPadding8px12px  +
push esi  +
call sub_408D80  +
push offset aDisplayInlineB  +
push esi  +
call sub_408D80  +
push offset aPositionAbsolu  +
push esi  +
call sub_408D80  +
push offset aTop80px  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset aBottom25px  +
push esi  +
call sub_408D80  +
push offset aLeft50px  +
push esi  +
call sub_408D80  +
push offset aRight50px  +
push esi  +
call sub_408D80  +
push offset aOverflowAuto  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aDetailsDetails  +
push esi  +
call sub_408D80  +
push offset aMarginLeft22px  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset asc_41D770  +
push esi  +
call sub_408D80  +
push offset aDisplayNone  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset a_var_type_val  +
push esi  +
call sub_408D80  +
push offset aDisplayInline  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset a_var  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset a_type  +
push esi  +
call sub_408D80  +
push offset aColorAcf  +
push esi  +
call sub_408D80  +
push offset aMargin012px  +
push esi  +
call sub_408D80  +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset a_val  +
push esi  +
call sub_408D80  +
push offset aColorAfa  +
push esi  +
call sub_408D80  +
push offset aBackground222  +
push esi  +
call sub_408D80  +
push offset aTextAlignRight  +
push esi  +
call sub_408D80  +
add esp 40h +
push offset asc_41D3FC  +
push esi  +
call sub_408D80  +
push offset aStyle  +
push esi  +
call sub_408D80  +
push offset aHead_0  +
push esi  +
call sub_408D80  +
push offset aBody_0  +
push esi  +
call sub_408D80  +
push offset aDivIdHeader  +
push esi  +
call sub_408D80  +
push offset aH1VulkaninfoH1  +
push esi  +
call sub_408D80  +
push offset aDiv  +
push esi  +
call sub_408D80  +
push offset aDivIdWrapper  +
push esi  +
call sub_408D80  +
add esp 40h +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp eax 0B8h +
ja loc_408877  +
jmp ds:off_408880[eax*4]  +
mov eax offset aUndefined +
pop ebp  +
retn   +
mov eax offset aR4g4_unorm_pac +
pop ebp  +
retn   +
mov eax offset aR4g4b4a4_unorm +
pop ebp  +
retn   +
mov eax offset aB4g4r4a4_unorm +
pop ebp  +
retn   +
mov eax offset aR5g6b5_unorm_p +
pop ebp  +
retn   +
mov eax offset aB5g6r5_unorm_p +
pop ebp  +
retn   +
mov eax offset aR5g5b5a1_unorm +
pop ebp  +
retn   +
mov eax offset aB5g5r5a1_unorm +
pop ebp  +
retn   +
mov eax offset aA1r5g5b5_unorm +
pop ebp  +
retn   +
mov eax offset aR8_unorm +
pop ebp  +
retn   +
mov eax offset aR8_snorm +
pop ebp  +
retn   +
mov eax offset aR8_uscaled +
pop ebp  +
retn   +
mov eax offset aR8_sscaled +
pop ebp  +
retn   +
mov eax offset aR8_uint +
pop ebp  +
retn   +
mov eax offset aR8_sint +
pop ebp  +
retn   +
mov eax offset aR8_srgb +
pop ebp  +
retn   +
mov eax offset aR8g8_unorm +
pop ebp  +
retn   +
mov eax offset aR8g8_snorm +
pop ebp  +
retn   +
mov eax offset aR8g8_uscaled +
pop ebp  +
retn   +
mov eax offset aR8g8_sscaled +
pop ebp  +
retn   +
mov eax offset aR8g8_uint +
pop ebp  +
retn   +
mov eax offset aR8g8_sint +
pop ebp  +
retn   +
mov eax offset aR8g8_srgb +
pop ebp  +
retn   +
mov eax offset aR8g8b8_unorm +
pop ebp  +
retn   +
mov eax offset aR8g8b8_snorm +
pop ebp  +
retn   +
mov eax offset aR8g8b8_uscaled +
pop ebp  +
retn   +
mov eax offset aR8g8b8_sscaled +
pop ebp  +
retn   +
mov eax offset aR8g8b8_uint +
pop ebp  +
retn   +
mov eax offset aR8g8b8_sint +
pop ebp  +
retn   +
mov eax offset aR8g8b8_srgb +
pop ebp  +
retn   +
mov eax offset aB8g8r8_unorm +
pop ebp  +
retn   +
mov eax offset aB8g8r8_snorm +
pop ebp  +
retn   +
mov eax offset aB8g8r8_uscaled +
pop ebp  +
retn   +
mov eax offset aB8g8r8_sscaled +
pop ebp  +
retn   +
mov eax offset aB8g8r8_uint +
pop ebp  +
retn   +
mov eax offset aB8g8r8_sint +
pop ebp  +
retn   +
mov eax offset aB8g8r8_srgb +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_unorm +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_snorm +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_uscal +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_sscal +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_uint +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_sint +
pop ebp  +
retn   +
mov eax offset aR8g8b8a8_srgb +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_unorm +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_snorm +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_uscal +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_sscal +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_uint +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_sint +
pop ebp  +
retn   +
mov eax offset aB8g8r8a8_srgb +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_unorm +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_snorm +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_uscal +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_sscal +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_uint_ +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_sint_ +
pop ebp  +
retn   +
mov eax offset aA8b8g8r8_srgb_ +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_un +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_sn +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_us +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_ss +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_ui +
pop ebp  +
retn   +
mov eax offset aA2r10g10b10_si +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_un +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_sn +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_us +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_ss +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_ui +
pop ebp  +
retn   +
mov eax offset aA2b10g10r10_si +
pop ebp  +
retn   +
mov eax offset aR16_unorm +
pop ebp  +
retn   +
mov eax offset aR16_snorm +
pop ebp  +
retn   +
mov eax offset aR16_uscaled +
pop ebp  +
retn   +
mov eax offset aR16_sscaled +
pop ebp  +
retn   +
mov eax offset aR16_uint +
pop ebp  +
retn   +
mov eax offset aR16_sint +
pop ebp  +
retn   +
mov eax offset aR16_sfloat +
pop ebp  +
retn   +
mov eax offset aR16g16_unorm +
pop ebp  +
retn   +
mov eax offset aR16g16_snorm +
pop ebp  +
retn   +
mov eax offset aR16g16_uscaled +
pop ebp  +
retn   +
mov eax offset aR16g16_sscaled +
pop ebp  +
retn   +
mov eax offset aR16g16_uint +
pop ebp  +
retn   +
mov eax offset aR16g16_sint +
pop ebp  +
retn   +
mov eax offset aR16g16_sfloat +
pop ebp  +
retn   +
mov eax offset aR16g16b16_unor +
pop ebp  +
retn   +
mov eax offset aR16g16b16_snor +
pop ebp  +
retn   +
mov eax offset aR16g16b16_usca +
pop ebp  +
retn   +
mov eax offset aR16g16b16_ssca +
pop ebp  +
retn   +
mov eax offset aR16g16b16_uint +
pop ebp  +
retn   +
mov eax offset aR16g16b16_sint +
pop ebp  +
retn   +
mov eax offset aR16g16b16_sflo +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_u +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_s +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_0 +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_1 +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_2 +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_3 +
pop ebp  +
retn   +
mov eax offset aR16g16b16a16_4 +
pop ebp  +
retn   +
mov eax offset aR32_uint +
pop ebp  +
retn   +
mov eax offset aR32_sint +
pop ebp  +
retn   +
mov eax offset aR32_sfloat +
pop ebp  +
retn   +
mov eax offset aR32g32_uint +
pop ebp  +
retn   +
mov eax offset aR32g32_sint +
pop ebp  +
retn   +
mov eax offset aR32g32_sfloat +
pop ebp  +
retn   +
mov eax offset aR32g32b32_uint +
pop ebp  +
retn   +
mov eax offset aR32g32b32_sint +
pop ebp  +
retn   +
mov eax offset aR32g32b32_sflo +
pop ebp  +
retn   +
mov eax offset aR32g32b32a32_u +
pop ebp  +
retn   +
mov eax offset aR32g32b32a32_s +
pop ebp  +
retn   +
mov eax offset aR32g32b32a32_0 +
pop ebp  +
retn   +
mov eax offset aR64_uint +
pop ebp  +
retn   +
mov eax offset aR64_sint +
pop ebp  +
retn   +
mov eax offset aR64_sfloat +
pop ebp  +
retn   +
mov eax offset aR64g64_uint +
pop ebp  +
retn   +
mov eax offset aR64g64_sint +
pop ebp  +
retn   +
mov eax offset aR64g64_sfloat +
pop ebp  +
retn   +
mov eax offset aR64g64b64_uint +
pop ebp  +
retn   +
mov eax offset aR64g64b64_sint +
pop ebp  +
retn   +
mov eax offset aR64g64b64_sflo +
pop ebp  +
retn   +
mov eax offset aR64g64b64a64_u +
pop ebp  +
retn   +
mov eax offset aR64g64b64a64_s +
pop ebp  +
retn   +
mov eax offset aR64g64b64a64_0 +
pop ebp  +
retn   +
mov eax offset aB10g11r11_uflo +
pop ebp  +
retn   +
mov eax offset aE5b9g9r9_ufloa +
pop ebp  +
retn   +
mov eax offset aD16_unorm +
pop ebp  +
retn   +
mov eax offset aX8_d24_unorm_p +
pop ebp  +
retn   +
mov eax offset aD32_sfloat +
pop ebp  +
retn   +
mov eax offset aS8_uint +
pop ebp  +
retn   +
mov eax offset aD16_unorm_s8_u +
pop ebp  +
retn   +
mov eax offset aD24_unorm_s8_u +
pop ebp  +
retn   +
mov eax offset aD32_sfloat_s8_ +
pop ebp  +
retn   +
mov eax offset aBc1_rgb_unorm_ +
pop ebp  +
retn   +
mov eax offset aBc1_rgb_srgb_b +
pop ebp  +
retn   +
mov eax offset aBc1_rgba_unorm +
pop ebp  +
retn   +
mov eax offset aBc1_rgba_srgb_ +
pop ebp  +
retn   +
mov eax offset aBc2_unorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc2_srgb_block +
pop ebp  +
retn   +
mov eax offset aBc3_unorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc3_srgb_block +
pop ebp  +
retn   +
mov eax offset aBc4_unorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc4_snorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc5_unorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc5_snorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc6h_ufloat_bl +
pop ebp  +
retn   +
mov eax offset aBc6h_sfloat_bl +
pop ebp  +
retn   +
mov eax offset aBc7_unorm_bloc +
pop ebp  +
retn   +
mov eax offset aBc7_srgb_block +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8_un +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8_sr +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8a1_ +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8a_0 +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8a8_ +
pop ebp  +
retn   +
mov eax offset aEtc2_r8g8b8a_1 +
pop ebp  +
retn   +
mov eax offset aEac_r11_unorm_ +
pop ebp  +
retn   +
mov eax offset aEac_r11_snorm_ +
pop ebp  +
retn   +
mov eax offset aEac_r11g11_uno +
pop ebp  +
retn   +
mov eax offset aEac_r11g11_sno +
pop ebp  +
retn   +
mov eax offset aAstc_4x4_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_4x4_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_5x4_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_5x4_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_5x5_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_5x5_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_6x5_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_6x5_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_6x6_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_6x6_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_8x5_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_8x5_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_8x6_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_8x6_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_8x8_unorm +
pop ebp  +
retn   +
mov eax offset aAstc_8x8_srgb_ +
pop ebp  +
retn   +
mov eax offset aAstc_10x5_unor +
pop ebp  +
retn   +
mov eax offset aAstc_10x5_srgb +
pop ebp  +
retn   +
mov eax offset aAstc_10x6_unor +
pop ebp  +
retn   +
mov eax offset aAstc_10x6_srgb +
pop ebp  +
retn   +
mov eax offset aAstc_10x8_unor +
pop ebp  +
retn   +
mov eax offset aAstc_10x8_srgb +
pop ebp  +
retn   +
mov eax offset aAstc_10x10_uno +
pop ebp  +
retn   +
mov eax offset aAstc_10x10_srg +
pop ebp  +
retn   +
mov eax offset aAstc_12x10_uno +
pop ebp  +
retn   +
mov eax offset aAstc_12x10_srg +
pop ebp  +
retn   +
mov eax offset aAstc_12x12_uno +
pop ebp  +
retn   +
mov eax offset aAstc_12x12_srg +
pop ebp  +
retn   +
mov eax offset aUnknown_format +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp eax 4 +
ja loc_408BA5  +
jmp ds:off_408BAC[eax*4]  +
mov eax offset aOther +
pop ebp  +
retn   +
mov eax offset aIntegrated_gpu +
pop ebp  +
retn   +
mov eax offset aDiscrete_gpu +
pop ebp  +
retn   +
mov eax offset aVirtual_gpu +
pop ebp  +
retn   +
mov eax offset aCpu +
pop ebp  +
retn   +
mov eax offset aUnknown_device +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 9 +
cmp eax 0Dh +
ja loc_408C30  +
jmp ds:off_408C38[eax*4]  +
mov eax offset aVk_success +
pop ebp  +
retn   +
mov eax offset aVk_not_ready +
pop ebp  +
retn   +
mov eax offset aVk_timeout +
pop ebp  +
retn   +
mov eax offset aVk_event_set +
pop ebp  +
retn   +
mov eax offset aVk_event_reset +
pop ebp  +
retn   +
mov eax offset aVk_error_initi +
pop ebp  +
retn   +
mov eax offset aVk_error_out_o +
pop ebp  +
retn   +
mov eax offset aVk_error_out_0 +
pop ebp  +
retn   +
mov eax offset aVk_error_devic +
pop ebp  +
retn   +
mov eax offset aVk_error_layer +
pop ebp  +
retn   +
mov eax offset aVk_error_exten +
pop ebp  +
retn   +
mov eax offset aVk_error_memor +
pop ebp  +
retn   +
mov eax offset aVk_error_incom +
pop ebp  +
retn   +
mov eax offset aUnknown_result +
pop ebp  +
retn   +
***
pop ebp  +
jmp ds:DefWindowProcA  +
***
retn   +
***
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_408C80  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 1 +
push ecx  +
call sub_40D481  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+8] +
cmp [ebp+10h] esi +
jbe loc_408D06  +
mov ebx [ebp+0Ch] +
push dword ptr [ebx+esi*8+4]  +
call sub_40D4AA  +
add esp 4 +
mov [edi+4] eax +
test eax eax +
jz loc_408D14  +
mov edi eax +
mov eax [ebx+esi*8] +
inc esi  +
mov [edi] eax +
cmp esi [ebp+10h] +
jb loc_408CE6  +
mov dword ptr [edi+4] 0 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aVk_error_out_o  +
push 1FEh  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-8] +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_408D6E  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_408C80  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_40D40A  +
add esp 18h +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 1D4h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
push 1  +
mov [ebp-1ACh] eax +
call sub_40B40F  +
add esp 4 +
mov esi eax +
lea eax [ebp-1C4h] +
mov [ebp-1B0h] esi +
push 2  +
push eax  +
call ds:GetConsoleProcessList  +
cmp eax 1 +
ja loc_408E0A  +
call sub_407D50  +
push offset aVkenumerateins  +
push 0  +
call vkGetInstanceProcAddr  +
mov ebx 400000h +
mov [ebp-1D0h] ebx +
test eax eax +
jz loc_408E34  +
lea ecx [ebp-1D0h] +
push ecx  +
call eax  +
mov ebx [ebp-1D0h] +
mov eax ebx +
mov edi 1 +
shr ebx 0Ch +
shr eax 16h +
and ebx 3FFh +
mov [ebp-1B4h] eax +
mov [ebp-1B8h] ebx +
cmp [ebp+8] edi +
jle loc_408EBE  +
mov eax [ebp-1ACh] +
push dword ptr [eax+edi*4]  +
call sub_407C10  +
add esp 4 +
test al al +
jnz loc_408EB8  +
mov eax [ebp-1ACh] +
mov ecx offset aHtml_2 +
mov eax [eax+edi*4] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_408EA3  +
test dl dl +
jz loc_408E9F  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_408EA3  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_408E83  +
xor eax eax +
jmp loc_408EA8  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_408EFB  +
mov byte_434000 al +
mov byte_4348A0 1 +
inc edi  +
cmp edi [ebp+8] +
jl loc_408E60  +
cmp byte_4348A0 0 +
jz loc_408FA3  +
push offset aW  +
push offset aVulkaninfo_htm  +
call sub_40B831  +
mov esi eax +
mov [ebp-1B0h] eax +
push esi  +
call sub_407F50  +
push offset asc_42CD20  +
push esi  +
call sub_408D80  +
add esp 14h +
jmp loc_408FD1  +
mov esi [ebp-1ACh] +
mov edx offset aHelp +
mov eax [esi+edi*4] +
mov ecx eax +
dec edx  +
mov ecx offset asc_42CD08 +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_408F7E  +
test dl dl +
jz loc_408F5C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_408F7E  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_408F40  +
push dword ptr [esi]  +
xor eax eax +
call sub_409D60  +
add esp 4 +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
sbb eax eax +
or eax 1 +
push dword ptr [esi]  +
call sub_409D60  +
add esp 4 +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp byte_434000 0 +
jz loc_40903D  +
push offset asc_42CD38  +
call sub_409DF0  +
push offset aVulkaninfo_0  +
call sub_409DF0  +
push offset asc_42CD50  +
call sub_409DF0  +
add esp 0Ch +
cmp byte_4348A0 0 +
jnz loc_408FE3  +
cmp byte_434000 0 +
jz loc_40903D  +
push offset aVulkanInstance  +
push esi  +
call sub_408D80  +
add esp 8 +
cmp byte_4348A0 0 +
jz loc_40901E  +
push 5Ch  +
push ebx  +
push dword ptr [ebp-1B4h]  +
push offset aDivClassValD_D  +
push esi  +
call sub_408D80  +
push offset aBr  +
push esi  +
call sub_408D80  +
add esp 1Ch +
jmp loc_40903D  +
cmp byte_434000 0 +
jz loc_40903D  +
push 5Ch  +
push ebx  +
push dword ptr [ebp-1B4h]  +
push offset aD_D_D  +
call sub_409DF0  +
add esp 10h +
lea eax [ebp-1A4h] +
push eax  +
call loc_401000  +
add esp 4 +
lea eax [ebp-1A8h] +
push 0  +
push eax  +
push dword ptr [ebp-1A4h]  +
call vkEnumeratePhysicalDevices  +
test eax eax +
jz loc_4090C8  +
push eax  +
call sub_408BC0  +
add esp 4 +
push eax  +
push 0D78h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409CFA  +
jmp loc_409CF2  +
mov eax [ebp-1A8h] +
shl eax 2 +
push eax  +
call sub_40D4AA  +
add esp 4 +
mov [ebp-1D4h] eax +
test eax eax +
jnz loc_409143  +
push offset aVk_error_out_o  +
push 0D7Dh  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D09  +
jmp loc_409D01  +
push eax  +
lea eax [ebp-1A8h] +
push eax  +
push dword ptr [ebp-1A4h]  +
call vkEnumeratePhysicalDevices  +
test eax eax +
jz loc_4091BE  +
push eax  +
call sub_408BC0  +
add esp 4 +
push eax  +
push 0D82h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D18  +
jmp loc_409D10  +
imul eax [ebp-1A8h] +
push eax  +
call sub_40D4AA  +
mov ecx eax +
add esp 4 +
mov [ebp-1BCh] ecx +
test ecx ecx +
jnz loc_40923C  +
push offset aVk_error_out_o  +
push 0D87h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D27  +
jmp loc_409D1F  +
mov eax [ebp-1A8h] +
xor edi edi +
test eax eax +
jz loc_409297  +
mov esi [ebp-1D4h] +
mov ebx ecx +
push dword ptr [esi+edi*4]  +
lea eax [ebp-1A4h] +
push edi  +
push eax  +
push ebx  +
call loc_406FA0  +
add esp 10h +
cmp byte_434000 0 +
jz loc_40927A  +
push offset asc_42CDCC  +
call sub_409DF0  +
add esp 4 +
mov eax [ebp-1A8h] +
inc edi  +
add ebx 0C70h +
cmp edi eax +
jb loc_409250  +
mov esi [ebp-1B0h] +
mov ebx [ebp-1B8h] +
cmp byte_4348A1 0 +
jz loc_4092FC  +
cmp dword_4348A4 eax +
push offset asc_41D908  +
sbb eax eax +
and dword_4348A4 eax +
call sub_409DF0  +
push offset aSchemaHttpsSch  +
call sub_409DF0  +
push offset aComments  +
call sub_409DF0  +
push dword_4348A4  +
push offset aDescJsonConfig  +
call sub_409DF0  +
push 5Ch  +
push ebx  +
push dword ptr [ebp-1B4h]  +
push offset aVulkanapiversi  +
call sub_409DF0  +
push offset asc_41D9F0  +
call sub_409DF0  +
add esp 28h +
cmp byte_434000 0 +
jz loc_40931C  +
push offset aInstanceExtens  +
call sub_409DF0  +
push offset asc_42CDE8  +
call sub_409DF0  +
add esp 8 +
push esi  +
push dword ptr [ebp-194h]  +
push dword ptr [ebp-198h]  +
push offset aInstance  +
push offset unk_41FC66  +
call loc_4019B0  +
add esp 14h +
cmp byte_4348A0 0 +
jz loc_409371  +
push dword ptr [ebp-1A0h]  +
push offset asc_42CE10  +
push esi  +
call sub_408D80  +
add esp 0Ch +
cmp dword ptr [ebp-1A0h] 0 +
jbe loc_409397  +
push offset asc_41DD94  +
push esi  +
call sub_408D80  +
add esp 8 +
jmp loc_409397  +
cmp byte_434000 0 +
jz loc_409397  +
push dword ptr [ebp-1A0h]  +
push offset aLayersCountD  +
call sub_409DF0  +
push offset asc_42CE70  +
call sub_409DF0  +
add esp 0Ch +
cmp byte_4348A1 0 +
jz loc_4093C0  +
cmp dword ptr [ebp-1A0h] 0 +
jbe loc_4093C0  +
push offset asc_420730  +
call sub_409DF0  +
push offset aArrayofvklayer  +
call sub_409DF0  +
add esp 8 +
push offset loc_407D10  +
push 210h  +
push dword ptr [ebp-1A0h]  +
push dword ptr [ebp-19Ch]  +
call sub_40D5A0  +
mov eax [ebp-1A0h] +
add esp 10h +
mov dword ptr [ebp-1B0h] 0 +
test eax eax +
jz loc_409717  +
xor ebx ebx +
mov [ebp-1B8h] ebx +
nop   +
mov edi [ebp-19Ch] +
add edi ebx +
mov ecx [edi+100h] +
mov eax ecx +
and eax 0FFFh +
push eax  +
mov eax ecx +
shr ecx 16h +
shr eax 0Ch +
and eax 3FFh +
push eax  +
push ecx  +
push offset aD_D_D_0  +
lea eax [ebp-84h] +
push 40h  +
push eax  +
call sub_408C90  +
push dword ptr [edi+104h]  +
lea eax [ebp-44h] +
push offset aD  +
push 40h  +
push eax  +
call sub_408C90  +
add esp 28h +
cmp byte_4348A0 0 +
jz loc_4094B7  +
push offset asc_42CEAC  +
push esi  +
call sub_408D80  +
lea eax [ebp-84h] +
push eax  +
lea eax [edi+108h] +
push eax  +
push edi  +
push offset aDivClassTypeSD  +
push esi  +
call sub_408D80  +
lea eax [ebp-44h] +
push eax  +
push offset aLayerVersionDi  +
push esi  +
call sub_408D80  +
mov eax [ebp-19Ch] +
push esi  +
push dword ptr [ebx+eax+20Ch]  +
push dword ptr [ebx+eax+208h]  +
push offset aLayer  +
push offset asc_42C34C  +
call loc_4019B0  +
add esp 3Ch +
jmp loc_409504  +
cmp byte_434000 0 +
jz loc_409504  +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-84h] +
push eax  +
lea eax [edi+108h] +
push eax  +
push edi  +
push offset aSSVulkanVersio  +
call sub_409DF0  +
mov eax [ebp-19Ch] +
push esi  +
push dword ptr [ebx+eax+20Ch]  +
push dword ptr [ebx+eax+208h]  +
push offset aLayer  +
push offset asc_42CF80  +
call loc_4019B0  +
add esp 28h +
cmp byte_4348A1 0 +
jz loc_409580  +
cmp dword ptr [ebp-1B0h] 0 +
jbe loc_409523  +
push offset asc_420650  +
call sub_409DF0  +
add esp 4 +
push offset asc_41DD94  +
call sub_409DF0  +
push offset asc_420654  +
call sub_409DF0  +
push edi  +
push offset aLayernameS  +
call sub_409DF0  +
push dword ptr [edi+100h]  +
push offset aSpecversionU  +
call sub_409DF0  +
push dword ptr [edi+104h]  +
push offset aImplementation  +
call sub_409DF0  +
lea eax [edi+108h] +
push eax  +
push offset aDescriptionS  +
call sub_409DF0  +
push offset asc_4206D0  +
call sub_409DF0  +
add esp 2Ch +
cmp byte_4348A0 0 +
jz loc_40959F  +
push dword ptr [ebp-1A8h]  +
push offset asc_42CFF0  +
push esi  +
call sub_408D80  +
add esp 0Ch +
jmp loc_4095BB  +
cmp byte_434000 0 +
jz loc_4095BB  +
push dword ptr [ebp-1A8h]  +
push offset aDevicesCountD  +
call sub_409DF0  +
add esp 8 +
add ebx [ebp-19Ch] +
xor edi edi +
mov [ebp-1C0h] ebx +
cmp [ebp-1A8h] edi +
jbe loc_4096B0  +
mov ebx [ebp-1BCh] +
add ebx 1Ch +
nop   +
cmp byte_4348A0 0 +
jz loc_409606  +
push offset asc_42D054  +
push esi  +
call sub_408D80  +
push ebx  +
push edi  +
push offset aGpuIdDivClassV  +
push esi  +
call sub_408D80  +
add esp 18h +
jmp loc_40961E  +
cmp byte_434000 0 +
jz loc_40961E  +
push ebx  +
push edi  +
push offset aGpuIdUS  +
call sub_409DF0  +
add esp 0Ch +
lea eax [ebp-1ACh] +
mov dword ptr [ebp-1B4h] 0 +
push eax  +
lea eax [ebp-1B4h] +
push eax  +
push dword ptr [ebp-1C0h]  +
lea eax [ebx-1Ch] +
push eax  +
call sub_404890  +
mov eax [ebp-1ACh] +
add esp 10h +
cmp byte_4348A0 0 +
jz loc_40966B  +
push esi  +
push eax  +
push dword ptr [ebp-1B4h]  +
push offset aLayerDevice  +
push offset asc_42D0D8  +
jmp loc_409686  +
cmp byte_434000 0 +
jz loc_409694  +
push esi  +
push eax  +
push dword ptr [ebp-1B4h]  +
push offset aLayerDevice  +
push offset asc_42C34C  +
call loc_4019B0  +
mov eax [ebp-1ACh] +
add esp 14h +
push eax  +
call sub_40D4A5  +
inc edi  +
add esp 4 +
add ebx 0C70h +
cmp edi [ebp-1A8h] +
jb loc_4095E0  +
cmp byte_4348A0 0 +
jz loc_4096D4  +
push offset aDetails  +
push esi  +
call sub_408D80  +
push offset aDetails_4  +
push esi  +
call sub_408D80  +
add esp 10h +
jmp loc_4096EA  +
cmp byte_434000 0 +
jz loc_4096EA  +
push offset asc_41DD94  +
call sub_409DF0  +
add esp 4 +
mov ecx [ebp-1B0h] +
mov ebx [ebp-1B8h] +
inc ecx  +
mov eax [ebp-1A0h] +
add ebx 210h +
mov [ebp-1B0h] ecx +
mov [ebp-1B8h] ebx +
cmp ecx eax +
jb loc_409400  +
cmp byte_4348A0 0 +
jz loc_409734  +
push offset aDetails_6  +
push esi  +
call sub_408D80  +
mov eax [ebp-1A0h] +
add esp 8 +
cmp byte_4348A1 0 +
jz loc_40974E  +
test eax eax +
jz loc_40974E  +
push offset asc_420754  +
call sub_409DF0  +
add esp 4 +
push esi  +
call sub_40B717  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 0Ch +
cmp byte_4348A0 0 +
jz loc_40979E  +
push offset asc_42D0EC  +
push esi  +
call sub_408D80  +
add esp 8 +
cmp dword ptr [ebp-1A8h] 0 +
jbe loc_409791  +
push offset asc_41DD94  +
push esi  +
call sub_408D80  +
jmp loc_4097BB  +
push offset aDetails_2  +
push esi  +
call sub_408D80  +
jmp loc_4097BB  +
cmp byte_434000 0 +
jz loc_4097BE  +
push offset aPresentableSur  +
call sub_409DF0  +
push offset asc_42D138  +
call sub_409DF0  +
add esp 8 +
push esi  +
lea eax [ebp-1B0h] +
mov dword ptr [ebp-94h] 100h +
push eax  +
lea eax [ebp-1B8h] +
mov dword ptr [ebp-90h] 100h +
push eax  +
lea eax [ebp-1CCh] +
mov dword ptr [ebp-1B8h] 0 +
push eax  +
push dword ptr [ebp-1A8h]  +
lea eax [ebp-1A4h] +
mov dword ptr [ebp-1B0h] 0 +
push dword ptr [ebp-1BCh]  +
mov dword ptr [ebp-1CCh] offset aVk_khr_win32_s +
push eax  +
mov dword ptr [ebp-1C8h] offset loc_401390 +
mov dword ptr [ebp-1C4h] offset sub_401340 +
mov dword ptr [ebp-1C0h] offset sub_4014F0 +
call loc_404170  +
add esp 1Ch +
cmp dword ptr [ebp-1B8h] 0 +
jnz loc_409880  +
cmp dword ptr [ebp-1B0h] 0 +
jnz loc_409880  +
cmp byte_4348A0 0 +
jz loc_40986A  +
push offset asc_42D150  +
push esi  +
call sub_408D80  +
add esp 8 +
jmp loc_409880  +
cmp byte_434000 0 +
jz loc_409897  +
push offset aNoneFound  +
call sub_409DF0  +
add esp 4 +
cmp byte_4348A0 0 +
jz loc_409897  +
push offset aDetails_6  +
push esi  +
call sub_408D80  +
add esp 8 +
mov ebx [ebp-18Ch] +
xor edi edi +
test ebx ebx +
jz loc_409B13  +
mov eax [ebp-190h] +
mov ecx [eax+edi*4] +
mov eax offset aVk_khr_device_ +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4098E0  +
test dl dl +
jz loc_4098DC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4098E0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4098C0  +
xor eax eax +
jmp loc_4098E5  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4098F3  +
inc edi  +
cmp edi ebx +
jb loc_4098B0  +
jmp loc_409B13  +
push offset aVkenumeratephy  +
push dword ptr [ebp-1A4h]  +
call vkGetInstanceProcAddr  +
mov edi eax +
lea eax [ebp-1ACh] +
push 0  +
push eax  +
push dword ptr [ebp-1A4h]  +
call edi  +
test eax eax +
jz loc_40997E  +
push eax  +
call sub_408BC0  +
add esp 4 +
push eax  +
push 0E6Ch  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D36  +
jmp loc_409D2E  +
mov eax [ebp-1ACh] +
lea eax [eax+eax*8] +
shl eax 4 +
push eax  +
call sub_40D4AA  +
mov ebx eax +
add esp 4 +
mov [ebp-1C0h] ebx +
test ebx ebx +
jnz loc_4099FE  +
push offset aVk_error_out_o  +
push 0E71h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D45  +
jmp loc_409D3D  +
push ebx  +
lea eax [ebp-1ACh] +
push eax  +
push dword ptr [ebp-1A4h]  +
call edi  +
test eax eax +
jz loc_409A76  +
push eax  +
call sub_408BC0  +
add esp 4 +
push eax  +
push 0E76h  +
push offset aCVulkansdkbuil  +
push offset aSDFailedWithS  +
push 2  +
call sub_40B40F  +
add esp 4 +
push eax  +
call sub_408D80  +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
push 2  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 24h +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409D54  +
jmp loc_409D4C  +
cmp byte_4348A0 0 +
jz loc_409A8C  +
push offset asc_42D1BC  +
push esi  +
call sub_408D80  +
jmp loc_409AA9  +
cmp byte_434000 0 +
jz loc_409AAC  +
push offset aGroups  +
call sub_409DF0  +
push offset asc_42D1F0  +
call sub_409DF0  +
add esp 8 +
xor edi edi +
cmp [ebp-1ACh] edi +
jbe loc_409AF3  +
push esi  +
lea eax [ebp-1A4h] +
push eax  +
push edi  +
push ebx  +
call loc_407550  +
add esp 10h +
cmp byte_434000 0 +
jz loc_409ADE  +
push offset asc_42CDCC  +
call sub_409DF0  +
add esp 4 +
inc edi  +
add ebx 90h +
cmp edi [ebp-1ACh] +
jb loc_409AB6  +
mov ebx [ebp-1C0h] +
cmp byte_4348A0 0 +
jz loc_409B0A  +
push offset aDetails_6  +
push esi  +
call sub_408D80  +
add esp 8 +
push ebx  +
call sub_40D4A5  +
add esp 4 +
cmp byte_4348A0 0 +
jz loc_409B2A  +
push offset asc_42D200  +
push esi  +
call sub_408D80  +
add esp 8 +
mov eax [ebp-1A8h] +
xor ebx ebx +
test eax eax +
jz loc_409B99  +
mov edi [ebp-1BCh] +
cmp byte_4348A1 0 +
jz loc_409B68  +
cmp dword_4348A4 ebx +
jz loc_409B68  +
push esi  +
push edi  +
mov byte_4348A1 0 +
call loc_404A20  +
mov byte_4348A1 1 +
jmp loc_409B6F  +
push esi  +
push edi  +
call loc_404A20  +
add esp 8 +
cmp byte_434000 0 +
jz loc_409B88  +
push offset asc_42CDCC  +
call sub_409DF0  +
add esp 4 +
mov eax [ebp-1A8h] +
inc ebx  +
add edi 0C70h +
cmp ebx eax +
jb loc_409B40  +
cmp byte_4348A0 0 +
jz loc_409BB6  +
push offset aDetails_6  +
push esi  +
call sub_408D80  +
mov eax [ebp-1A8h] +
add esp 8 +
xor ebx ebx +
test eax eax +
jz loc_409BDA  +
mov edi [ebp-1BCh] +
push edi  +
call loc_404900  +
inc ebx  +
add esp 4 +
add edi 0C70h +
cmp ebx [ebp-1A8h] +
jb loc_409BC2  +
push dword ptr [ebp-1BCh]  +
call sub_40D4A5  +
push dword ptr [ebp-1D4h]  +
call sub_40D4A5  +
push dword ptr [ebp-194h]  +
call sub_40D4A5  +
xor ebx ebx +
add esp 0Ch +
cmp [ebp-1A0h] ebx +
jbe loc_409C34  +
xor edi edi +
push dword ptr [ebp-19Ch]  +
call sub_40D4A5  +
push dword ptr [ebp-190h]  +
call sub_40D4A5  +
add esp 8 +
push 0  +
push dword ptr [ebp-1A4h]  +
call vkDestroyInstance  +
cmp byte_4348A0 0 +
jz loc_409C93  +
push offset aDiv  +
push esi  +
call sub_408D80  +
push offset aBody_1  +
push esi  +
call sub_408D80  +
push offset aHtml_1  +
push esi  +
call sub_408D80  +
push esi  +
call sub_40B717  +
push esi  +
call sub_40B509  +
add esp 20h +
cmp byte_4348A1 0 +
jz loc_409CA9  +
push offset asc_42D244  +
call sub_409DF0  +
add esp 4 +
push 1  +
call sub_40B40F  +
push eax  +
call sub_40B717  +
add esp 8 +
lea eax [ebp-1C4h] +
push 2  +
push eax  +
mov eax ds:GetConsoleProcessList +
call eax  +
cmp eax 1 +
ja loc_409CDF  +
cmp byte_434000 0 +
jz loc_409CDF  +
push 0FFFFFFFFh  +
call ds:Sleep  +
mov ecx [ebp-4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push 0FFFFFFFFh  +
call ds:Sleep  +
push 0FFFFFFFFh  +
call sub_40DB8C  +
push offset aVulkaninfoSumm  +
call sub_409DF0  +
push [ebp+arg_0]  +
push offset aUsageSOptions  +
call sub_409DF0  +
push offset aOptions  +
call sub_409DF0  +
push offset aHHelpPrintThis  +
call sub_409DF0  +
push offset aHtmlProduceAnH  +
call sub_409DF0  +
push offset aVulkaninfo_h_0  +
call sub_409DF0  +
push offset aRun_  +
call sub_409DF0  +
push offset aJJsonProduceAJ  +
call sub_409DF0  +
push offset aOutput_  +
call sub_409DF0  +
push offset aJsonGpuNumberF  +
call sub_409DF0  +
push offset aSpecifyingTheG  +
call sub_409DF0  +
push offset aInterest_ThisN  +
call sub_409DF0  +
add esp 34h +
mov [ebp+arg_0] offset aVulkaninfoWith +
pop ebp  +
jmp sub_409DF0  +
***
push esi  +
mov esi [ebp+arg_0] +
push 1  +
call sub_40B40F  +
add esp 4 +
lea ecx [ebp+arg_4] +
push ecx  +
push 0  +
push esi  +
push eax  +
call sub_408C80  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_40D40A  +
add esp 18h +
pop esi  +
pop ebp  +
retn   +
***
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
call sub_408C80  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 1 +
push ecx  +
call sub_40D481  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
cmp ecx dword_434008 +
call sub_40E111  +
call sub_40A713  +
call sub_40A6CC  +
push eax  +
call sub_40EA5A  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_40A6CF  +
test al al +
jnz loc_40A0D5  +
push dword ptr [ebp-20h]  +
call sub_40DB3E  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_40A0E0  +
call sub_40DB20  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_40A4A2  +
push 0  +
sub esp 324h +
mov eax dword_434008 +
mov eax [ebp+arg_0] +
call sub_40A9C5  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_40A7D0  +
call sub_40A9C5  +
cmp byte_434BE4 0 +
mov eax dword_434008 +
push [ebp+arg_0]  +
sub esp 14h +
retn   +
***
push 0  +
call sub_408C80  +
xor eax eax +
sub esp 324h +
mov ecx eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_434BF8 0 +
mov esi offset unk_4328E8 +
mov esi offset unk_4328F0 +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push ebp  +
mov ebp esp +
and dword_434BFC 0 +
sub esp 28h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_434020 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_40A9BE  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_434020 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_434BFC ebx +
lea edi [ebp-28h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-28h] +
mov ecx [ebp-1Ch] +
mov [ebp-8] eax +
xor ecx 49656E69h +
mov eax [ebp-20h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-24h] +
push 1  +
xor eax 756E6547h +
or ecx eax +
pop eax  +
push 0  +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jnz loc_40A8FB  +
mov eax [ebp-28h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_40A8EA  +
cmp eax 20660h +
jz loc_40A8EA  +
cmp eax 20670h +
jz loc_40A8EA  +
cmp eax 30650h +
jz loc_40A8EA  +
cmp eax 30660h +
jz loc_40A8EA  +
cmp eax 30670h +
jnz loc_40A8FB  +
mov edi dword_434C00 +
or edi 1 +
mov dword_434C00 edi +
jmp loc_40A901  +
mov edi dword_434C00 +
cmp dword ptr [ebp-8] 7 +
mov eax [ebp-1Ch] +
mov [ebp-18h] eax +
mov eax [ebp-20h] +
mov [ebp-4] eax +
mov [ebp-14h] eax +
jl loc_40A948  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-28h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-24h] +
test eax 200h +
mov [ebp-10h] eax +
mov eax [ebp-4] +
jz loc_40A948  +
or edi 2 +
mov dword_434C00 edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_40A9BE  +
or dword_434020 4 +
mov dword_434BFC 2 +
test eax 8000000h +
jz loc_40A9BE  +
test eax 10000000h +
jz loc_40A9BE  +
xor ecx ecx +
xor eax eax +
cmp dword_4352C0 eax +
setnz al  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_40AB33  +
imul eax eax +
cmp ecx 20h +
jle loc_40AAE5  +
cmp ecx 80h +
jl loc_40AA9D  +
bt dword_434C00 1 +
jnb loc_40AA25  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_434020 1 +
jnb loc_40AAE5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jle loc_40AA9D  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_40AA60  +
jmp loc_40AAB0  +
bt dword_434020 1 +
jnb loc_40AAE5  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_40AAD1  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_40AAB5  +
test ecx 1Fh +
jz loc_40AB33  +
lea edi [ecx+edi-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_40AAFB  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_40AAED  +
test ecx 4 +
jz loc_40AB0B  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_40AB33  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_40AB20  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_40AB5F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_409EB2  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_409EB2  +
***
sub esp 1Ch +
call sub_40B1E7  +
cmp [ebp+arg_0] 0 +
jnz loc_40AD2A  +
call sub_40AEDD  +
call sub_40AF34  +
push 0  +
call sub_40B1B5  +
pop ecx  +
mov al 1 +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_40AE05  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_409EB2  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_40AD30  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov eax [ebp+lpMem] +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
mov edi offset CriticalSection +
test esi esi +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_434008 +
cmp [ebp+arg_0] 0 +
mov eax dword_434008 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
xor eax eax +
ror eax cl +
xor eax dword_434008 +
mov dword_434C7C eax +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_40B228  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_40B230  +
push large dword ptr fs:0  +
mov eax dword_434008 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_40B2E7  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_40B2BA  +
cmp esi [esp+18h+arg_4] +
jbe loc_40B2E7  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_40B2E5  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_40B325  +
mov eax [ebx+esi*4+8] +
call sub_40B344  +
jmp loc_40B29E  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_40B230 +
jnz locret_40B31B  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_40B31B  +
mov eax 1 +
retn   +
***
mov ebx offset unk_434040 +
mov eax dword_434CBC +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_40A7D0  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_40A7D0  +
pop ecx  +
call sub_40A7D0  +
test esi esi +
mov edi edi +
call sub_40A7D0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_40D062  +
test al al +
jnz loc_40C01E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_40C0E5  +
call sub_40F462  +
mov dword ptr [eax] 16h +
call sub_40F3A6  +
or eax 0FFFFFFFFh +
jmp loc_40C0FB  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_40C0D2  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_40C0E5  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_40BF1B  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_40C02A  +
cmp eax 7 +
ja loc_40C03A  +
jmp ds:off_40C101[eax*4]  +
mov ecx esi +
call sub_40C27A  +
jmp loc_40C0CA  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_40C0D2  +
mov ecx esi +
call sub_40C23D  +
jmp loc_40C0CA  +
mov ecx esi +
call sub_40CB26  +
jmp loc_40C0CA  +
mov [esi+28h] ebx +
jmp loc_40C0D2  +
mov ecx esi +
call sub_40C3CE  +
jmp loc_40C0CA  +
mov ecx esi +
call sub_40C3F6  +
jmp loc_40C0CA  +
mov ecx esi +
call sub_40C6C8  +
test al al +
jz loc_40C03A  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_40C04D  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_40C042  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_40D083  +
test al al +
jnz loc_40C13A  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_40C201  +
call sub_40F462  +
mov dword ptr [eax] 16h +
call sub_40F3A6  +
or eax 0FFFFFFFFh +
jmp loc_40C217  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_40C1EE  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_40C201  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_40BF1B  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_40C146  +
cmp eax 7 +
ja loc_40C156  +
jmp ds:off_40C21D[eax*4]  +
mov ecx esi +
call sub_40C299  +
jmp loc_40C1E6  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_40C1EE  +
mov ecx esi +
call sub_40C23D  +
jmp loc_40C1E6  +
mov ecx esi +
call sub_40CB26  +
jmp loc_40C1E6  +
mov [esi+28h] ebx +
jmp loc_40C1EE  +
mov ecx esi +
call sub_40C3CE  +
jmp loc_40C1E6  +
mov ecx esi +
call sub_40C55F  +
jmp loc_40C1E6  +
mov ecx esi +
call sub_40C8F7  +
test al al +
jz loc_40C156  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_40C169  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_40C15E  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
call sub_40C2B8  +
call sub_40C2E2  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov al [ecx+31h] +
mov al [ecx+31h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_40CB77  +
jmp ds:off_40CB7D[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_40CB67  +
push 8  +
jmp loc_40CB67  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov eax [ecx] +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_40F094  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_40D547  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_40D513  +
jmp loc_40D4F0  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_41C19C  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_40D507  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_40D4F0  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_40D53C  +
test eax eax +
jz loc_40D53C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_40D521  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_40D4E3  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_40D596  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_40D595  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_40D580  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_41AD70  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 1  +
push [ebp+arg_8]  +
push ecx  +
push ecx  +
mov eax esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_40DBD5  +
add esp 0Ch +
push 0  +
call sub_40DBF0  +
add esp 14h +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jnz loc_40DED8  +
xor eax eax +
pop ebp  +
retn   +
***
mov ecx [ebp+8] +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40DEDE  +
sub ecx edx +
push ebx  +
push edi  +
lea ebx [ecx+1] +
push ebx  +
call sub_40D4AA  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_40DEFD  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push ebx  +
push edi  +
call sub_40F0E2  +
add esp 0Ch +
test eax eax +
jnz loc_40DF12  +
mov eax edi +
jmp loc_40DEF9  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_40F3B6  +
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_434008 +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_40E120  +
pop ecx  +
mov dword_434CD8 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_434DE8 +
cmp dword_434DE8 0 +
mov edi edi +
mov edi edi +
mov edi edi +
push edi  +
mov edi dword_434DEC +
test edi edi +
jnz loc_40E65D  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push ebx  +
push esi  +
xor ebx ebx +
jmp loc_40E6B4  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
push ebx  +
push ebx  +
call ds:WideCharToMultiByte  +
mov ebx eax +
test ebx ebx +
jz loc_40E6C5  +
push 1  +
push ebx  +
call sub_40F17F  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_40E6BE  +
push 0  +
push 0  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
xor ebx ebx +
push ebx  +
push ebx  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_40E6BE  +
push ebx  +
push esi  +
call sub_4137CC  +
push ebx  +
call sub_40F05A  +
add esp 0Ch +
add edi 4 +
cmp [edi] ebx +
jnz loc_40E663  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
push esi  +
call sub_40F05A  +
pop ecx  +
or eax 0FFFFFFFFh +
jmp loc_40E6BA  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_434008 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_40E6F4  +
mov ecx [ebp+8] +
push esi  +
call ds:off_41C19C  +
call dword ptr [ebp+8]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_40E6E3  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_434DF4 +
jz loc_40E723  +
push eax  +
call sub_40E61C  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax dword_434DF4 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
xor eax eax +
call sub_40A7D0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
mov eax [ebp+10h] +
call sub_40A7D0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40EF6A  +
mov [esp+4+var_4] offset unk_434E28 +
call sub_40EE15  +
pop ecx  +
mov al 1 +
retn   +
***
mov eax dword_434008 +
pop ecx  +
retn   +
***
mov edi edi +
call sub_4143ED  +
call sub_414470  +
mov edi edi +
call sub_41AD70  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_414653  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
test eax eax +
mov edi edi +
mov edi edi +
call sub_411947  +
call sub_411947  +
push offset aComparestringe  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_434008 +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_434F08 +
test ecx ecx +
jz loc_40F954  +
xor eax eax +
cmp ecx 1 +
setz al  +
jmp loc_40F9A8  +
push esi  +
push offset aGetcurrentpack  +
push offset unk_42E2FC  +
push offset aGetcurrentpack  +
push 8  +
call sub_40F48F  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_40F99B  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push 0  +
push eax  +
mov ecx esi +
call ds:off_41C19C  +
call esi  +
cmp eax 7Ah +
jnz loc_40F99B  +
xor ecx ecx +
mov edx offset dword_434F08 +
inc ecx  +
xchg ecx [edx] +
mov al 1 +
jmp loc_40F9A7  +
push 2  +
pop eax  +
mov ecx offset dword_434F08 +
xchg eax [ecx] +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
call sub_40A7D0  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
shr eax 0Dh +
test al 1 +
jz loc_40FAC6  +
mov eax [edi] +
shr eax 6 +
test al 1 +
jz loc_40FAC6  +
push dword ptr [esi+4]  +
call sub_40F05A  +
pop ecx  +
mov eax 0FFFFFEBFh +
and [edi] eax +
xor eax eax +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 48h +
lea eax [ebp-48h] +
push eax  +
call ds:GetStartupInfoW  +
cmp word ptr [ebp-16h] 0 +
jz loc_40FB7C  +
mov eax [ebp-14h] +
test eax eax +
jz loc_40FB7C  +
push ebx  +
push esi  +
mov esi [eax] +
lea ebx [eax+4] +
lea eax [ebx+esi] +
mov [ebp-4] eax +
mov eax 2000h +
cmp esi eax +
jl loc_40FB0A  +
mov esi eax +
push esi  +
call sub_413886  +
mov eax dword_435110 +
pop ecx  +
cmp esi eax +
jle loc_40FB1C  +
mov esi eax +
push edi  +
xor edi edi +
test esi esi +
jz loc_40FB79  +
mov eax [ebp-4] +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_40FB6D  +
cmp ecx 0FFFFFFFEh +
jz loc_40FB6D  +
mov dl [ebx] +
test dl 1 +
jz loc_40FB6D  +
test dl 8 +
jnz loc_40FB49  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_40FB6A  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_434F10[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [ebx] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
inc ebx  +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_40FB26  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_434F10[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_40FBAD  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_40FBAD  +
or byte ptr [esi+28h] 80h +
jmp loc_40FC28  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_40FBC8  +
sub eax 1 +
jz loc_40FBC4  +
push 0FFFFFFF4h  +
sub eax 1 +
jmp loc_40FBCA  +
push 0FFFFFFF5h  +
jmp loc_40FBCA  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_40FBE6  +
test ebx ebx +
jz loc_40FBE6  +
push ebx  +
call ds:GetFileType  +
jmp loc_40FBE8  +
xor eax eax +
test eax eax +
jz loc_40FC0A  +
and eax 0FFh +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_40FBFF  +
or byte ptr [esi+28h] 40h +
jmp loc_40FC28  +
cmp eax 3 +
jnz loc_40FC28  +
or byte ptr [esi+28h] 8 +
jmp loc_40FC28  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax lpMem +
test eax eax +
jz loc_40FC28  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_40FB87  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_40A7D0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
lea esi [ebp+var_10] +
stos   +
stos   +
mov edi ebx +
movs   +
movs   +
movs   +
mov eax dword_434E18 +
mov esi [ebp+arg_4] +
mov [ebx+4] eax +
jmp loc_410A82  +
inc esi  +
cmp byte ptr [esi] 20h +
jz loc_410A81  +
mov al [esi] +
xor ecx ecx +
cmp al 61h +
jz loc_410AAE  +
cmp al 72h +
jz loc_410AA3  +
cmp al 77h +
jnz loc_410C6F  +
mov dword ptr [ebx] 301h +
jmp loc_410AB4  +
mov [ebx] ecx +
mov dword ptr [ebx+4] 1 +
jmp loc_410ABB  +
mov dword ptr [ebx] 109h +
mov dword ptr [ebx+4] 2 +
mov dl cl +
mov [ebp-3] cl +
mov ch cl +
mov [ebp+var_4] cl +
inc esi  +
mov [ebp+var_2] dl +
mov [ebp+var_1] ch +
mov cl 1 +
mov al [esi] +
test al al +
jz loc_410BB9  +
movsx eax al +
cmp eax 53h +
jg loc_410B52  +
jz loc_410B3F  +
sub eax 20h +
jz loc_410BA3  +
sub eax 0Bh +
jz loc_410B32  +
sub eax 1 +
jz loc_410B29  +
sub eax 18h +
jz loc_410B21  +
sub eax 0Ah +
jz loc_410B14  +
sub eax 4 +
jnz loc_410C6F  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_410B2E  +
or dword ptr [ebx] 10h +
jmp loc_410B49  +
or dword ptr [ebx] 80h +
mov cl 1 +
jmp loc_410BA3  +
push ebx  +
call sub_410D0D  +
jmp loc_410B9D  +
mov ch 1 +
mov [ebp+var_1] ch +
xor cl cl +
jmp loc_410BA6  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_410DAB  +
pop ecx  +
jmp loc_410B9D  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_410B2E  +
or dword ptr [ebx] 20h +
mov dl 1 +
mov [ebp+var_2] dl +
mov cl dl +
jmp loc_410BA6  +
sub eax 54h +
jz loc_410B97  +
sub eax 0Eh +
jz loc_410B8F  +
sub eax 1 +
jz loc_410B83  +
sub eax 0Bh +
jz loc_410B77  +
sub eax 6 +
jnz loc_410C6F  +
push ebx  +
call sub_410DE0  +
jmp loc_410B9D  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_410D89  +
jmp loc_410B3C  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_410D67  +
jmp loc_410B3C  +
push ebx  +
call sub_410D47  +
jmp loc_410B9D  +
push ebx  +
call sub_410D28  +
mov dl [ebp+var_2] +
pop ecx  +
mov cl al +
mov ch [ebp+var_1] +
xor eax eax +
test cl cl +
setnz al  +
add esi eax +
test cl cl +
jnz loc_410ACE  +
jmp loc_410BBC  +
mov ch [ebp+var_1] +
test ch ch +
jz loc_410BC1  +
inc esi  +
cmp byte ptr [esi] 20h +
jz loc_410BC0  +
test ch ch +
jnz loc_410BDC  +
cmp byte ptr [esi] 0 +
jnz loc_410C6F  +
mov byte ptr [ebx+8] 1 +
jmp loc_410C7F  +
push 3  +
push offset aCcs  +
push esi  +
call sub_40DF20  +
add esp 0Ch +
test eax eax +
jnz loc_410C6F  +
push 20h  +
add esi 3 +
pop eax  +
jmp loc_410BF9  +
inc esi  +
cmp [esi] al +
jz loc_410BF8  +
cmp byte ptr [esi] 3Dh +
jnz loc_410C6F  +
inc esi  +
cmp [esi] al +
jz loc_410C02  +
push 5  +
push offset aUtf8  +
push esi  +
call sub_415116  +
add esp 0Ch +
test eax eax +
jnz loc_410C26  +
add esi 5 +
or dword ptr [ebx] 40000h +
jmp loc_410C65  +
push 8  +
push offset aUtf16leunicode  +
push esi  +
call sub_415116  +
add esp 0Ch +
test eax eax +
jnz loc_410C45  +
add esi 8 +
or dword ptr [ebx] 20000h +
jmp loc_410C65  +
push 7  +
push (offset aUtf16leunicode+8)  +
push esi  +
call sub_415116  +
add esp 0Ch +
test eax eax +
jnz loc_410C6F  +
add esi 7 +
or dword ptr [ebx] 10000h +
jmp loc_410C65  +
inc esi  +
cmp byte ptr [esi] 20h +
jz loc_410C64  +
jmp loc_410BCA  +
call sub_40F462  +
mov dword ptr [eax] 16h +
call sub_40F3A6  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push dword ptr [ebp+WideCharStr]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_411135  +
add esp 14h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_434BFC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_411300  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_4112A0  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_4112B3  +
cmp byte ptr [ecx] 0 +
jz loc_4112B3  +
inc ecx  +
cmp ecx edi +
jnz loc_4112A9  +
sub ecx esi +
cmp ecx edx +
jnz loc_411394  +
mov edi eax +
add ecx esi +
sub edi edx +
mov eax edi +
and eax 1Fh +
sub edi eax +
push edi  +
leave   +
add edi ecx +
jmp loc_4112E1  +
cmp ecx edi +
jnz near ptr word_4112D2  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_4112F2  +
cmp byte ptr [ecx] 0 +
jz loc_4112F6  +
inc ecx  +
cmp ecx eax +
jnz loc_4112EC  +
sub ecx esi +
cmp eax 1 +
jl loc_41137A  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_411321  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_411334  +
cmp byte ptr [ecx] 0 +
jz loc_411334  +
inc ecx  +
cmp ecx edi +
jnz loc_41132A  +
sub ecx esi +
cmp ecx edx +
jnz loc_411394  +
mov edi eax +
add ecx esi +
sub edi edx +
pxor xmm1 xmm1 +
mov eax edi +
and eax 0Fh +
sub edi eax +
add edi ecx +
jmp loc_411361  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_411365  +
add ecx 10h +
cmp ecx edi +
jnz loc_41134F  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_411372  +
cmp byte ptr [ecx] 0 +
jz loc_411376  +
inc ecx  +
cmp ecx eax +
jnz loc_41136C  +
sub ecx esi +
jmp loc_411394  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_411392  +
cmp byte ptr [ecx] 0 +
jz loc_411392  +
inc ecx  +
cmp ecx eax +
jnz loc_411388  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_434BFC +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_41146F  +
test cl 1 +
jz loc_4113DF  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_4113FA  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_411416  +
cmp [edx] di +
jz loc_411416  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_411409  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_411549  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
call sub_40A7D0  +
mov eax [ebp+10h] +
call sub_40A7D0  +
mov eax [ebp+10h] +
call sub_40A7D0  +
mov eax [ebp+10h] +
call sub_40A7D0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_42DB90 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
mov dword ptr [eax+48h] offset unk_434508 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 5  +
call sub_41170D  +
lea eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push 4  +
call sub_4116BD  +
add esp 10h +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_434140 eax +
mov eax dword_434140 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_434008 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_4126B7  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 720h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+CPInfo] +
push edi  +
push eax  +
push dword ptr [esi+4]  +
call ds:GetCPInfo  +
xor ebx ebx +
mov edi 100h +
test eax eax +
jz loc_412EC2  +
mov eax ebx +
mov [ebp+eax+MultiByteStr] al +
inc eax  +
cmp eax edi +
jb loc_412DD4  +
mov al [ebp+CPInfo.LeadByte] +
lea ecx [ebp+CPInfo.LeadByte] +
mov [ebp+MultiByteStr] 20h +
jmp loc_412E14  +
movzx edx byte ptr [ecx+1] +
movzx eax al +
jmp loc_412E0B  +
cmp eax edi +
jnb loc_412E0F  +
mov [ebp+eax+MultiByteStr] 20h +
inc eax  +
cmp eax edx +
jbe loc_412DFE  +
add ecx 2 +
mov al [ecx] +
test al al +
jnz loc_412DF5  +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+CharType] +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 1  +
push ebx  +
call sub_413E8C  +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+DestStr] +
push edi  +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push edi  +
push dword ptr [esi+21Ch]  +
push ebx  +
call sub_415E03  +
add esp 40h +
lea eax [ebp+var_304] +
push ebx  +
push dword ptr [esi+4]  +
push edi  +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 200h  +
push dword ptr [esi+21Ch]  +
push ebx  +
call sub_415E03  +
add esp 24h +
mov ecx ebx +
movzx eax [ebp+ecx*2+CharType] +
test al 1 +
jz loc_412E9B  +
or byte ptr [esi+ecx+19h] 10h +
mov al byte ptr [ebp+ecx+DestStr] +
jmp loc_412EAB  +
test al 2 +
jz loc_412EB4  +
or byte ptr [esi+ecx+19h] 20h +
mov al byte ptr [ebp+ecx+var_304] +
mov [esi+ecx+119h] al +
jmp loc_412EBB  +
mov [esi+ecx+119h] bl +
inc ecx  +
cmp ecx edi +
jb loc_412E81  +
jmp loc_412F1B  +
push 0FFFFFF9Fh  +
lea edx [esi+119h] +
mov ecx ebx +
pop eax  +
sub eax edx +
mov [ebp+var_720] eax +
add edx ecx +
add eax edx +
mov [ebp+var_71C] eax +
add eax 20h +
cmp eax 19h +
ja loc_412EF1  +
or byte ptr [esi+ecx+19h] 10h +
lea eax [ecx+20h] +
jmp loc_412F04  +
cmp [ebp+var_71C] 19h +
ja loc_412F08  +
lea eax [esi+ecx] +
or byte ptr [eax+19h] 20h +
lea eax [ecx-20h] +
mov [edx] al +
jmp loc_412F0A  +
mov [edx] bl +
mov eax [ebp+var_720] +
lea edx [esi+119h] +
inc ecx  +
cmp ecx edi +
jb loc_412ED5  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
cmp byte_435280 0 +
call sub_40A7D0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
xor edi edi +
test esi esi +
jz loc_413476  +
push esi  +
call sub_4133D2  +
pop ecx  +
push edi  +
push edi  +
push edi  +
mov ebx eax +
push edi  +
sub ebx esi +
sar ebx 1 +
push ebx  +
push esi  +
push edi  +
push edi  +
call ds:WideCharToMultiByte  +
mov [ebp+cchMultiByte] eax +
test eax eax +
jz loc_413476  +
push eax  +
call sub_40F094  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_41346B  +
xor eax eax +
push eax  +
push eax  +
push [ebp+cchMultiByte]  +
push edi  +
push ebx  +
push esi  +
push eax  +
push eax  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_41346B  +
mov ebx edi +
xor edi edi +
jmp loc_41346D  +
xor ebx ebx +
push edi  +
call sub_40F05A  +
pop ecx  +
jmp loc_413478  +
mov ebx edi +
test esi esi +
jz loc_413483  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
push 30h  +
push 40h  +
call sub_40F17F  +
mov edi eax +
xor ebx ebx +
mov [ebp+var_8] edi +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_4137FA  +
mov edi ebx +
jmp loc_413842  +
lea eax [edi+0C00h] +
cmp edi eax +
jz loc_413842  +
push esi  +
lea esi [edi+20h] +
mov edi eax +
push ebx  +
push 0FA0h  +
lea eax [esi-20h] +
push eax  +
call sub_40F7C3  +
or dword ptr [esi-8] 0FFFFFFFFh +
mov [esi] ebx +
lea esi [esi+30h] +
mov [esi-2Ch] ebx +
lea eax [esi-20h] +
mov dword ptr [esi-28h] 0A0A0000h +
mov byte ptr [esi-24h] 0Ah +
and byte ptr [esi-23h] 0F8h +
mov [esi-22h] bl +
cmp eax edi +
jnz loc_41380A  +
mov edi [ebp+var_8] +
pop esi  +
push ebx  +
call sub_40F05A  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_40A7D0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
pop ecx  +
call sub_40A7D0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4118C3  +
call sub_41AD70  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_41487C  +
push 3  +
call sub_410089  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
push esi  +
call sub_418982  +
mov eax [esi] +
and eax 1Fh +
pop ecx  +
cmp al 1Fh +
jnz loc_415F25  +
mov byte ptr [esi+8] 0 +
jmp loc_415F30  +
push esi  +
call sub_4189E8  +
pop ecx  +
mov byte ptr [esi+8] 1 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_41778A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_417972  +
***
push esi  +
mov edi edi +
mov edi edi +
call sub_41302F  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A7D0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov eax hObject +
cmp eax 0FFFFFFFFh +
jz locret_417E09  +
cmp eax 0FFFFFFFEh +
jz locret_417E09  +
push eax  +
call ds:CloseHandle  +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_418982  +
pop ecx  +
test eax eax +
jz loc_418A0A  +
xor eax eax +
inc eax  +
jmp loc_418A33  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_41899F  +
pop ecx  +
test eax eax +
jnz loc_418A05  +
call sub_414961  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_4352D4 0 +
jz loc_418ACF  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_418A74  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_418ACF  +
jmp loc_4194B8  +
***
cmp dword_4352D4 0 +
jz loc_418ABB  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_418AB0  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_418ABB  +
jmp sub_4194A0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_419BB8  +
call sub_418AD8  +
add esp 0Ch +
retn   +
***
jz loc_418B2B  +
cmp dword_4352D4 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_4352D4 eax +
xor eax eax +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_4194BE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_4319B0 +
movapd xmm2 oword ptr ds:oword_4319C0 +
movapd xmm3 oword ptr ds:oword_431A20 +
movapd xmm4 oword ptr ds:oword_4319D0 +
movapd xmm6 oword ptr ds:oword_4319E0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_431FE0[eax] +
movapd xmm7 oword ptr ds:oword_431BD0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_419616  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_431A70 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_431A80 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_431A90 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_4319F0 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_431A00[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_431AA0 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_431A30 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_41967B  +
cmp ecx 0FFFFFFFFh +
jz loc_419696  +
cmp ecx 7FEh +
ja loc_4196AC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_4319B0 +
movapd xmm2 oword ptr ds:oword_431A20 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_419674  +
fld  ds:dbl_431A58 +
retn   +
mov edx 3E9h +
jmp loc_4196CA  +
movlpd xmm2 oword ptr ds:oword_431A20 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_431A50 +
mov edx 8 +
jmp loc_4196CA  +
movlpd xmm1 oword ptr ds:oword_431A40 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4194C3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_4196F7  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_419D13  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_4196BD  +
mov edx 3E9h +
jmp loc_4196CA  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_41987E  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_419764  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_41976B  +
fscale   +
or ch ch +
jz loc_419771  +
fchs   +
jmp loc_419A28  +
***
call sub_4198C1  +
or eax eax +
jz loc_419793  +
xor ch ch +
cmp eax 2 +
jz loc_419788  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_41973D  +
***
jmp loc_419A48  +
***
jmp loc_419AE3  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_431AB0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_419793  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_431ABA +
retn   +
***
or cl cl +
jnz loc_41982B  +
retn   +
***
fldlg2   +
jmp loc_4197DF  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_419793  +
fyl2x   +
retn   +
***
jmp loc_419A48  +
***
call sub_4198C1  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_419808  +
fldz   +
cmp eax 1 +
jnz locret_419807  +
or ch ch +
jz locret_419807  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_431AB0 +
cmp eax 1 +
jnz locret_419807  +
or ch ch +
jz locret_419807  +
fchs   +
jmp locret_419807  +
***
fstp  st +
***
jmp loc_419A36  +
***
fstp  st +
jmp loc_419AE5  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_419853  +
fstp  st +
fld  ds:tbyte_431AB0 +
or ch ch +
jz locret_419852  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_419A36  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_4198E7  +
fld  st +
fmul  ds:dbl_431AE2 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_4198EE  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_4198E6  +
mov eax 2 +
jmp locret_4198E6  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_41A04E  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_419926  +
jmp sub_419AF6  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_419947  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_41994B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_431B3E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4199AE  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4199B2  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_431B3E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_419AF6  +
***
fxch  st(1) +
fstp  st +
retn   +
***
call sub_419AF6  +
jmp loc_419A2A  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_419A47  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_419A6C  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_431B2E +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_419A9A  +
mov byte ptr [ebp-90h] 0 +
jmp loc_419AA1  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_419AD9  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_419AD9  +
mov byte ptr [ebp-90h] 0 +
jmp loc_419AE0  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_431B24 +
or ch ch +
jz loc_419B10  +
fchs   +
or cl cl +
jz locret_419B1C  +
fld  ds:dbl_431B36 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_419B23  +
fchs   +
retn   +
***
fld  st +
frndint   +
fsubr st(1) st +
fxch  st(1) +
fchs   +
f2xm1   +
fld1   +
faddp st(1) st +
fscale   +
fstp  st(1) +
retn   +
***
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_419BC9  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_419BD9  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_419C03  +
and ax 20h +
jz loc_419C00  +
fstsw  ax +
and ax 20h +
jz loc_419C00  +
mov eax 8 +
call sub_419CD7  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_419C2D  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_419C6A  +
cmp eax 7FF00000h +
jz loc_419C93  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_419C68  +
and ax 20h +
jnz loc_419C65  +
fstsw  ax +
and ax 20h +
jz loc_419C65  +
mov eax 8 +
cmp edx 1Dh +
jz loc_419C5E  +
call sub_419CD7  +
pop edx  +
retn   +
***
call sub_419CC0  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  ds:dbl_431B7C +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_431B6C +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_419C52  +
fmul  ds:dbl_431B8C +
jmp loc_419C52  +
***
fld  ds:dbl_431B74 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_431B64 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_419C52  +
fmul  ds:dbl_431B84 +
jmp loc_419C52  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_434008 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_4352B0 0 +
push esi  +
push edi  +
jz loc_419D40  +
push dword_4352D0  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_419D45  +
mov edi offset sub_40E16C +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_419E72  +
jz loc_419E66  +
cmp eax 0Eh +
jg loc_419E07  +
jz loc_419DF4  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_419DE5  +
sub eax 1 +
jz loc_419DDC  +
sub eax 5 +
jz loc_419DCD  +
sub eax 1 +
jnz loc_419F1B  +
mov [ebp+var_20] offset aLog10_0 +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_41C19C  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_419F16  +
call sub_40F462  +
mov dword ptr [eax] 21h +
jmp loc_419F16  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset aLog10_0 +
jmp loc_419EE0  +
mov [ebp+var_20] offset unk_431B94 +
jmp loc_419D87  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset unk_431B94 +
jmp loc_419EE0  +
mov [ebp+var_24] 3 +
mov [ebp+var_20] offset aExp +
jmp loc_419EE0  +
sub eax 0Fh +
jz loc_419E5D  +
sub eax 9 +
jz loc_419E54  +
sub eax 1 +
jnz loc_419F1B  +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_41C19C  +
call edi  +
pop ecx  +
jmp loc_419F16  +
mov [ebp+var_24] 3 +
jmp loc_419ED9  +
mov [ebp+var_20] offset aExp +
jmp loc_419E21  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_419F1B  +
sub eax 1Bh +
jz loc_419ED2  +
sub eax 1 +
jz loc_419EC6  +
sub eax 15h +
jz loc_419EBA  +
sub eax 9 +
jz loc_419EAE  +
sub eax 3 +
jz loc_419EA2  +
sub eax 3ABh +
jz loc_419E9B  +
sub eax 1 +
jnz loc_419F1B  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_419E68  +
mov [ebp+var_20] offset aAsin +
jmp loc_419D87  +
mov [ebp+var_20] offset aAcos +
jmp loc_419D87  +
mov [ebp+var_20] offset aSqrt +
jmp loc_419D87  +
mov [ebp+var_20] offset aPow +
jmp loc_419D87  +
mov [ebp+var_24] 2 +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_41C19C  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_419F16  +
call sub_40F462  +
mov dword ptr [eax] 22h +
fld  [ebp+var_C] +
fstp  qword ptr [esi] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_409EB2  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_41ABBC  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_41ABB4  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_41ABBE  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_41ABA4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_432D28  +
push offset sub_40AB80  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_434008 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_41AC90  +
add esp 4 +
test eax eax +
jz loc_41AC6F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_41AB80  +
add esp 8 +
test eax eax +
jz loc_41AC6F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_41ACA4  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_41ACBF  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_41AD01  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_41AD48  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_41AD0F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41AD3D  +
cmp edx [esp+arg_4] +
ja loc_41AD3D  +
jb loc_41AD46  +
cmp eax [esp+arg_0] +
jbe loc_41AD46  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_409EB2  +
jmp sub_40A816  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_41ADE9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_41AE34  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_41AE24  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_41AE64  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_41AE80  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_41AEAC  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_41AEF3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_41AEBA  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41AEE8  +
cmp edx [esp+arg_4] +
ja loc_41AEE8  +
jb loc_41AEF1  +
cmp eax [esp+arg_0] +
jbe loc_41AEF1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_41AF05  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_41AF19  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_41AF3A  +
cmp cl 20h +
jnb loc_41AF30  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41AE10  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41AE10  +
***
cmp cl 40h +
jnb loc_41AF8A  +
cmp cl 20h +
jnb loc_41AF80  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp dword_434BFC 0 +
jz loc_41AFD0  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_434BFC 0 +
jz loc_41AFD0  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_41AF99  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  dword ptr [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_41B02F  +
fsubp st(1) st +
test edx edx +
jns loc_41B017  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_41B043  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_41B043  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_41AFF3  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41B070  +
cmp edi eax +
jb loc_41B304  +
cmp ecx 20h +
jb loc_41B54B  +
cmp ecx 80h +
jnb loc_41B094  +
bt dword_434020 1 +
jb loc_41B51D  +
jmp loc_41B277  +
bt dword_434C00 1 +
jnb loc_41B0A7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41B0C0  +
bt dword_434020 1 +
jb loc_41B4A0  +
bt dword_434C00 0 +
jnb loc_41B277  +
test edi 3 +
jnz loc_41B277  +
test esi 3 +
jnz loc_41B292  +
bt edi 2 +
jnb loc_41B0F9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41B110  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41B17D  +
bt esi 3 +
jnb loc_41B1D6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41B22C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_41B244  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41B22C  +
***
bt ecx 2 +
jnb loc_41B257  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41B26E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41B2B4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41B292  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41B27F  +
mov edx ecx +
cmp ecx 20h +
jb loc_41B54B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41B2B4[edx*4]  +
jmp dword ptr ds:loc_41B2C4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_41B464  +
bt dword_434020 1 +
jb loc_41B3B5  +
test edi 3 +
jz loc_41B33D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41B330  +
cmp ecx 20h +
jb loc_41B464  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41B360[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41B3CC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41B3BD  +
cmp ecx 80h +
jb loc_41B43C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41B3CC  +
cmp ecx 20h +
jb loc_41B464  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41B441  +
test ecx 0FFFFFFFCh +
jz loc_41B481  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41B46C  +
test ecx ecx +
jz loc_41B494  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41B485  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_41B4A0  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_41B590  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41B51D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41B4C0  +
test ecx ecx +
jz loc_41B580  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41B54B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41B530  +
and ecx 1Fh +
jz loc_41B580  +
mov eax ecx +
shr ecx 2 +
jz loc_41B566  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41B557  +
mov ecx eax +
and ecx 3 +
jz loc_41B580  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41B56D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_41B5AC  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41B5A3  +
shr eax 2 +
jz loc_41B5BE  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_41B5B1  +
pop ecx  +
jmp loc_41B4AD  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41B5F0  +
cmp edi eax +
jb loc_41B884  +
cmp ecx 20h +
jb loc_41BACB  +
cmp ecx 80h +
jnb loc_41B614  +
bt dword_434020 1 +
jb loc_41BA9D  +
jmp loc_41B7F7  +
bt dword_434C00 1 +
jnb loc_41B627  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41B640  +
bt dword_434020 1 +
jb loc_41BA20  +
bt dword_434C00 0 +
jnb loc_41B7F7  +
test edi 3 +
jnz loc_41B7F7  +
test esi 3 +
jnz loc_41B812  +
bt edi 2 +
jnb loc_41B679  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41B690  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41B6FD  +
bt esi 3 +
jnb loc_41B756  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41B7AC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_41B7C4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41B7AC  +
***
bt ecx 2 +
jnb loc_41B7D7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41B7EE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41B834[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41B812  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41B7FF  +
mov edx ecx +
cmp ecx 20h +
jb loc_41BACB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41B834[edx*4]  +
jmp dword ptr ds:loc_41B844[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_41B9E4  +
bt dword_434020 1 +
jb loc_41B935  +
test edi 3 +
jz loc_41B8BD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41B8B0  +
cmp ecx 20h +
jb loc_41B9E4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41B8E0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41B94C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41B93D  +
cmp ecx 80h +
jb loc_41B9BC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41B94C  +
cmp ecx 20h +
jb loc_41B9E4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41B9C1  +
test ecx 0FFFFFFFCh +
jz loc_41BA01  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41B9EC  +
test ecx ecx +
jz loc_41BA14  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41BA05  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_41BA20  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_41BB10  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41BA9D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41BA40  +
test ecx ecx +
jz loc_41BB00  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41BACB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41BAB0  +
and ecx 1Fh +
jz loc_41BB00  +
mov eax ecx +
shr ecx 2 +
jz loc_41BAE6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41BAD7  +
mov ecx eax +
and ecx 3 +
jz loc_41BB00  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41BAED  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_41BB2C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41BB23  +
shr eax 2 +
jz loc_41BB3E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_41BB31  +
pop ecx  +
jmp loc_41BA2D  +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_434BFC 1 +
jb loc_41BC5E  +
mov edi [ebp+8] +
ja loc_41BBDD  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_41BBBD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_41BB8D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_41BC1E  +
xor eax eax +
test edi 0Fh +
jz loc_41BC04  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_41BC1B  +
inc edi  +
test edi 0Fh +
jnz loc_41BBEF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_41BC57  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_41BC43  +
bsf edx edi +
add eax edx +
jmp loc_41BC1B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_41BC81  +
xor eax eax +
jmp loc_41BC83  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_434BFC 1 +
jb loc_41BCF8  +
movzx eax [esp+arg_4] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+arg_0] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_41BCE7  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_41BCC3  +
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
xor eax eax +
mov al [esp+arg_4] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+4+arg_0] +
test edx 3 +
jz loc_41BD25  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_41BD72  +
test cl cl +
jz loc_41BD6E  +
test edx 3 +
jnz loc_41BD10  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_41BD77  +
and eax 81010100h +
jz loc_41BD30  +
and eax 1010100h +
jnz loc_41BD6C  +
and esi 80000000h +
jnz loc_41BD30  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
lea eax [edx-1] +
pop ebx  +
retn   +
mov eax [edx-4] +
cmp al bl +
jz loc_41BDB4  +
test al al +
jz loc_41BD6C  +
cmp ah bl +
jz loc_41BDAD  +
test ah ah +
jz loc_41BD6C  +
shr eax 10h +
cmp al bl +
jz loc_41BDA6  +
test al al +
jz loc_41BD6C  +
cmp ah bl +
jz loc_41BD9F  +
test ah ah +
jz loc_41BD6C  +
jmp loc_41BD30  +
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
