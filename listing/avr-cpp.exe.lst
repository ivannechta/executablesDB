sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_4D95F0 1 +
mov ds:dword_4D95EC 1 +
mov ds:dword_4D95E8 1 +
mov ds:dword_4D95F8 1 +
jz loc_4010B0  +
mov ds:dword_4D7008 eax +
mov eax ds:dword_4D95FC +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_46FCF0  +
mov edx ds:dword_4D9600 +
mov ds:dword_4DA380 eax +
mov ds:dword_4DA384 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_46FF30  +
cmp dword_483714 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_46FFA0 +
call sub_46FF90  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_4D9604 +
mov dword ptr [esp+10h] offset dword_4D7000 +
mov dword ptr [esp+8] offset dword_4D7014 +
mov dword ptr [esp+4] offset dword_4D7018 +
mov ds:dword_4D7000 eax +
mov eax ds:dword_4D9608 +
mov dword ptr [esp] offset dword_4D701C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_4D7010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_4D95FC +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_4DA388 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_4DA38C +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_4DA38C +
test eax eax +
jz loc_401481  +
mov ds:dword_4D7004 1 +
mov eax ds:dword_4DA38C +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_4D4C60 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_4702A0  +
mov [esp+88h+var_88] offset sub_46FDE0 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_4D960C eax +
mov [esp+88h+var_88] offset dword_401000 +
call sub_483768  +
call sub_470570  +
mov eax ds:_acmdln +
mov ds:dword_4DA370 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_4DA36C eax +
mov ebx ds:dword_4D95FC +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_483000 eax +
mov eax ds:dword_4D701C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_4D7018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_4D7018 esi +
call sub_470600  +
mov edx ds:dword_4D7014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_4D701C +
mov ecx ds:dword_4D7014 +
mov edx ds:dword_4D7018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_4825D0  +
mov ecx ds:dword_4D7008 +
test ecx ecx +
mov ds:dword_4D700C eax +
jz loc_4014AB  +
mov edx ds:dword_4D7004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_4D700C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4DA38C +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_4DA38C +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_4DD008 +
mov [esp+88h+var_88] offset unk_4DD000 +
call _initterm  +
test ebx ebx +
mov ds:dword_4DA38C 2 +
jnz loc_401261  +
xchg ebx ds:dword_4DA388 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_4DA38C 1 +
mov [esp+88h+var_84] offset unk_4DD018 +
mov [esp+88h+var_88] offset unk_4DD00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_4D95FC 1 +
call sub_470620  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_4D95FC 0 +
call sub_470620  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_4881C4 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_4881C4 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jz loc_401597  +
cmp dl 20h +
jz loc_4015B0  +
lea ecx [edx-9] +
cmp cl 1 +
jbe loc_4015B0  +
cmp dl 23h +
jnz locret_4015B9  +
lea esi [esi+0] +
mov edx eax +
cmp byte ptr [edx+1] 0Ah +
lea eax [eax+1] +
jnz loc_401580  +
lea eax [edx+2] +
movzx edx byte ptr [edx+2] +
cmp dl 0Ah +
jnz loc_401568  +
movzx edx byte ptr [eax+1] +
cmp dl 0Ah +
jnz loc_4015B4  +
cmp byte ptr [eax+2] 0Ah +
jnz loc_4015B4  +
add eax 1 +
retn   +
movzx edx byte ptr [eax+1] +
add eax 1 +
jmp loc_401563  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call sub_452ED0  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi eax +
push ebx  +
sub esp 10h +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_401631  +
xor ecx ecx +
xor ebx ebx +
cmp dl 9 +
jz loc_40161D  +
cmp dl 20h +
jnz loc_401620  +
add ecx 1 +
add ebx 1 +
movzx edx byte ptr [esi+ebx] +
test dl dl +
jnz loc_401613  +
test ecx ecx +
mov eax esi +
jnz loc_401638  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [ecx+ebx+1] +
mov [esp+14h+var_14] eax +
call sub_452ED0  +
xor edx edx +
xor ecx ecx +
mov edi eax +
lea esi [esi+0] +
movzx eax byte ptr [esi+ecx] +
cmp al 9 +
jz loc_40165C  +
cmp al 20h +
jnz loc_401663  +
mov byte ptr [edi+edx] 5Ch +
add edx 1 +
add ecx 1 +
mov [edi+edx] al +
add edx 1 +
cmp ecx ebx +
jle loc_401650  +
mov [esp+14h+var_14] esi +
call free  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_401690  +
***
push esi  +
sub esp 48h +
cmp edx 1 +
jz loc_401780  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call _access_0  +
add esp 48h +
pop ebx  +
retn   +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
test eax eax +
js loc_4017AC  +
movzx eax [esp+48h+var_32] +
mov edx [esp+48h+var_3C] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_40176B  +
add esp 48h +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
sub esp 18h +
cmp [esp+18h+arg_0] 2 +
mov ebx [esp+18h+arg_4] +
jnz loc_4017E5  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_4017F6  +
cmp al 2Fh +
jz loc_4017F6  +
test al al +
jnz loc_4017F0  +
mov eax [ebx+4] +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [edx+1] 3Ah +
jnz loc_4017E2  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] edx +
call _access_0  +
test eax eax +
jnz loc_4017E2  +
mov eax [ebx] +
add esp 18h +
pop ebx  +
retn   +
***
jmp sub_401820  +
***
sub esp 1Ch +
cmp [esp+1Ch+arg_0] 1 +
jz loc_401830  +
xor eax eax +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_401850  +
cmp al 2Fh +
jz loc_401850  +
test al al +
jz loc_40182A  +
cmp byte ptr [edx+1] 3Ah +
jnz loc_40182A  +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edx +
call _access_0  +
test eax eax +
jnz loc_40182A  +
mov eax [esp+1Ch+arg_4] +
mov eax [eax] +
jmp loc_40182C  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp ds:dword_4D70E4 +
shl edi 4 +
mov [esp+34h+var_20] edi +
lea ebx [ebp+edi+0] +
mov ecx [ebx] +
mov [esp+34h+var_24] ecx +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_401920  +
cmp edx 1 +
jbe loc_4019C0  +
mov ecx [esp+34h+var_24] +
movzx edx byte ptr [ecx] +
lea ecx [edx-4Fh] +
cmp cl 1Eh +
mov [esp+34h+var_19] dl +
ja loc_401908  +
mov esi 1 +
shl esi cl +
test esi 41800100h +
jnz loc_401937  +
and esi 1 +
jz loc_401908  +
mov esi ds:dword_4D70E0 +
add eax 1 +
cmp eax esi +
jge loc_401908  +
mov edx [esp+34h+var_20] +
mov edx [ebp+edx+10h] +
cmp byte ptr [edx] 4Fh +
jz loc_401A50  +
mov ecx [esp+34h+var_20] +
lea edx [ebp+ecx+20h] +
jmp loc_401901  +
mov ecx [edx] +
add edx 10h +
cmp byte ptr [ecx] 4Fh +
jz loc_401A50  +
add eax 1 +
cmp eax esi +
jnz loc_4018F3  +
mov dword ptr [ebx+8] 1 +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
and eax 0Bh +
cmp eax 1 +
setz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+34h+var_24] +
mov edi offset aNo_2 +
lea esi [ecx+1] +
mov ecx 3 +
mov [esp+34h+var_18] esi +
cmps   +
mov edi ds:dword_4D70E0 +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
lea esi [eax+1] +
jnz loc_4019D0  +
cmp esi edi +
jge loc_401908  +
mov eax [esp+34h+var_20] +
mov [esp+34h+var_20] ebx +
movzx ebx [esp+34h+var_19] +
lea ebp [ebp+eax+10h] +
mov eax [esp+34h+var_24] +
add eax 4 +
mov [esp+34h+var_24] eax +
jmp loc_401995  +
add esi 1 +
add ebp 10h +
cmp esi edi +
jz loc_401A43  +
mov eax [ebp+0] +
cmp bl [eax] +
jnz loc_401987  +
mov edx [esp+34h+var_24] +
add eax 1 +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_30] edx +
call strcmp  +
test eax eax +
jnz loc_401987  +
mov ebx [esp+34h+var_20] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_401A33  +
jmp loc_401A37  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edi +
jge loc_401908  +
mov eax [esp+34h+var_20] +
movzx edx [esp+34h+var_19] +
lea ebp [ebp+eax+10h] +
jmp loc_4019F5  +
add esi 1 +
add ebp 10h +
cmp esi edi +
jz loc_401908  +
mov eax [ebp+0] +
cmp dl [eax] +
jnz loc_4019E7  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_4019E7  +
cmp byte ptr [eax+2] 6Fh +
jnz loc_4019E7  +
cmp byte ptr [eax+3] 2Dh +
jnz loc_4019E7  +
mov [esp+34h+var_24] edx +
mov edx [esp+34h+var_18] +
add eax 4 +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_30] edx +
call strcmp  +
mov edx [esp+34h+var_24] +
test eax eax +
jnz loc_4019E7  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_401A37  +
mov byte ptr [ebx+0Dh] 1 +
mov dword ptr [ebx+8] 2 +
jmp loc_401914  +
mov ebx [esp+34h+var_20] +
jmp loc_401908  +
mov byte ptr [ebx+0Dh] 1 +
xor eax eax +
mov dword ptr [ebx+8] 2 +
jmp loc_401914  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax off_4835AC +
mov [esp+20h+var_1C] offset aTargetS +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
call sub_4244D0  +
mov [esp+20h+var_18] offset a__GccConfigure +
mov [esp+20h+var_1C] offset aConfiguredWith +
mov [esp+20h+var_20] ebx +
call sub_4244D0  +
mov [esp+20h+var_18] offset aSingle +
mov [esp+20h+var_1C] offset aThreadModelS +
mov [esp+20h+var_20] ebx +
call sub_4244D0  +
test ds:byte_4C680B 0DFh +
jz loc_401B57  +
xor edx edx +
add edx 1 +
test ds:byte_4C680B[edx] 0DFh +
jnz loc_401AD0  +
mov esi ds:dword_4D7230 +
mov edi edx +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_20] offset byte_4C680B +
mov [esp+20h+var_1C] esi +
call strncmp  +
test eax eax +
jnz loc_401B02  +
cmp byte ptr [esi+edi] 0 +
jz loc_401B30  +
mov [esp+20h+var_10] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] offset aGcc +
mov [esp+20h+var_18] offset byte_4C680B +
mov [esp+20h+var_1C] offset aGccDriverVersi +
call sub_4244D0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] offset aGcc +
mov [esp+20h+var_18] offset byte_4C680B +
mov [esp+20h+var_1C] offset aGccVersionSS +
call sub_4244D0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi ds:dword_4D7230 +
xor edi edi +
jmp loc_401AFC  +
***
jmp sub_401B70  +
***
push esi  +
mov esi eax +
push ebx  +
movzx eax dl +
sub esp 2Ch +
movzx edx byte ptr [esi] +
mov [esp+30h+var_19] al +
mov [esp+30h+var_1B] 0 +
mov [esp+30h+var_1A] 0 +
mov [esp+30h+var_14] eax +
cmp dl 9 +
jz loc_401C82  +
cmp dl 20h +
jz loc_401C82  +
cmp dl 21h +
jz loc_401D43  +
and edx 0FFFFFFFDh +
cmp dl 2Ch +
jnz loc_401BBC  +
add esi 1 +
mov [esp+30h+var_1A] 1 +
mov ebx esi +
jmp loc_401BC3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_4D0720[edx+edx] 204h +
jnz loc_401BC0  +
lea edx [eax-2Bh] +
cmp dl 3 +
jbe loc_401BC0  +
cmp al 3Dh +
jz loc_401BC0  +
cmp al 40h +
jz loc_401BC0  +
cmp al 2Ah +
mov edi ebx +
jz loc_401D66  +
cmp al 20h +
jnz loc_401D7A  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_401BF7  +
cmp al 20h +
jz loc_401BF7  +
cmp [esp+30h+var_1A] 0 +
jnz loc_401C71  +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_401C71  +
mov ebp ds:dword_4D70E4 +
shl eax 4 +
sub edi esi +
mov [esp+30h+var_18] ebx +
add eax ebp +
mov ebx ebp +
mov [esp+30h+var_20] eax +
mov ebp esi +
nop   +
mov esi [ebx] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] esi +
call strncmp  +
test eax eax +
jnz loc_401C64  +
cmp [esp+30h+var_1B] 0 +
jnz loc_401C53  +
cmp byte ptr [esi+edi] 0 +
jnz loc_401C64  +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_401C60  +
cmp [esp+30h+var_19] 0 +
jz loc_401C64  +
mov byte ptr [ebx+0Dh] 1 +
add ebx 10h +
cmp ebx [esp+30h+var_20] +
jnz loc_401C30  +
mov ebx [esp+30h+var_18] +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_401C8E  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [esi+1] +
add esi 1 +
jmp loc_401B91  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
test dl dl +
jz loc_401CCC  +
cmp cl 26h +
jz loc_401CD8  +
cmp cl 7Ch +
jz loc_401CD8  +
cmp cl 3Ah +
jnz loc_401CCC  +
cmp dl 3Bh +
jz loc_401CC8  +
test dl dl +
nop   +
jz loc_401CC8  +
cmp dl 7Dh +
jz loc_401CDF  +
cmp dl 25h +
jz loc_401D03  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 3Bh +
jnz loc_401CAD  +
test dl dl +
jnz loc_401CDF  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
jmp loc_401B91  +
movzx edx byte ptr [eax+1] +
lea esi [eax+1] +
test dl dl +
jz loc_401DA5  +
cmp byte ptr [eax] 3Bh +
jz loc_401B91  +
add esp 2Ch +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
lea ecx [eax+1] +
cmp dl 3Ch +
jz loc_401D1D  +
cmp dl 7Bh +
jz loc_401D1D  +
cmp dl 57h +
jz loc_401D31  +
mov eax ecx +
jmp loc_401CA8  +
mov edx [esp+30h+var_14] +
add eax 2 +
call sub_401B70  +
movzx edx byte ptr [eax] +
jmp loc_401CA8  +
cmp byte ptr [eax+2] 7Bh +
jz loc_401D87  +
mov eax ecx +
mov edx 57h +
jmp loc_401CA8  +
movzx edx byte ptr [esi+1] +
lea eax [esi+1] +
mov esi eax +
cmp dl 20h +
jnz loc_401D9B  +
add esi 1 +
movzx edx byte ptr [esi] +
cmp dl 9 +
jz loc_401D51  +
cmp dl 20h +
jz loc_401D51  +
jmp loc_401BAC  +
movzx eax byte ptr [edi+1] +
add ebx 1 +
mov [esp+30h+var_1B] 1 +
cmp al 20h +
jz loc_401BF7  +
cmp al 9 +
jz loc_401BF7  +
jmp loc_401C05  +
mov edx [esp+30h+var_14] +
add eax 3 +
call sub_401B70  +
movzx edx byte ptr [eax] +
jmp loc_401CA8  +
cmp dl 9 +
jz loc_401D51  +
jmp loc_401BAC  +
mov eax esi +
mov ebx eax +
jmp loc_401CCE  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp ds:dword_4D7060 +
mov [esp+1Ch+var_10] eax +
test ebp ebp +
jle loc_401E07  +
mov edi edx +
mov ebx ds:dword_4D7064 +
xor esi esi +
jmp loc_401DDB  +
add esi 1 +
add ebx 8 +
cmp esi ebp +
jz loc_401E07  +
cmp [ebx+4] edi +
jnz loc_401DD1  +
mov [esp+1Ch+var_14] edi +
mov eax [ebx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_401DD1  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_401E20  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_2C] offset asc_4890EA +
call sub_452FA0  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jle loc_401EEA  +
xor ebx ebx +
jmp loc_401E6E  +
mov [esp+2Ch+var_2C] ebp +
mov esi offset a_a +
call strlen  +
mov ecx 3 +
lea edi [ebp+eax-2] +
cmps   +
jz loc_401EF6  +
add ebx 1 +
cmp [esp+2Ch+arg_0] ebx +
jle loc_401EEA  +
mov edx [esp+2Ch+arg_4] +
lea eax ds:0[ebx*4] +
mov ebp [edx+ebx*4] +
cmp byte ptr [ebp+0] 2Dh +
jnz loc_401E47  +
cmp byte ptr [ebp+1] 6Ch +
jnz loc_401E47  +
cmp byte ptr [ebp+2] 0 +
jnz loc_401F22  +
add ebx 1 +
cmp [esp+2Ch+arg_0] ebx +
jle loc_401EEA  +
mov ecx [esp+2Ch+arg_4] +
mov ebp [ecx+eax+4] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] offset asc_4890EA +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aPluginOptPassT +
mov [esp+2Ch+var_2C] eax +
call sub_4530C0  +
mov esi eax +
mov eax [esp+2Ch+var_10] +
cmp esi eax +
jz loc_401E65  +
mov [esp+2Ch+var_2C] eax +
add ebx 1 +
call free  +
cmp [esp+2Ch+arg_0] ebx +
mov [esp+2Ch+var_10] esi +
jg loc_401E6E  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] offset asc_4890EA +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aPluginOptPas_0 +
mov [esp+2Ch+var_2C] eax +
call sub_4530C0  +
mov esi eax +
jmp loc_401ECD  +
add ebp 2 +
jmp loc_401EA3  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
test eax eax +
jz loc_40200A  +
cmp eax 1 +
jnz loc_401FF5  +
mov eax ds:dword_4D703C +
test eax eax +
jns loc_401F90  +
mov eax [esp+10h+arg_4] +
mov esi [eax] +
mov [esp+10h+var_10] esi +
call strlen  +
cmp eax 2 +
jle loc_401FE0  +
lea ebx [eax-3] +
mov edi offset a_gk +
add esi ebx +
mov ecx 4 +
cmps   +
jnz loc_401FE0  +
mov edx ds:dword_4D705C +
test edx edx +
jz loc_401FA0  +
add esp 10h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
retn   +
add eax 7 +
mov [esp+10h+var_10] eax +
call sub_452ED0  +
mov dword ptr [eax] 7875612Dh +
mov esi eax +
mov dword ptr [eax+4] 65736162h +
mov byte ptr [eax+8] 20h +
mov eax [esp+10h+arg_4] +
mov edx [eax] +
lea eax [esi+9] +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call memcpy  +
mov edx esi +
mov byte ptr [esi+ebx+9] 0 +
jmp loc_401F84  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aArgumentToComp +
mov [esp+10h+var_10] eax +
call sub_425A80  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aTooManyArgumen +
mov [esp+10h+var_10] eax +
call sub_425A80  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_C] offset aTooFewArgument +
mov [esp+10h+var_10] eax +
call sub_425A80  +
nop   +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+2Ch+var_C] +
mov ebx [esp+2Ch+var_8] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov edx [ebx] +
mov ecx [ebx+8] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_24] ecx +
mov edi eax +
lea eax [esi+eax] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add edi [ebx+8] +
test eax eax +
jnz loc_402080  +
add edi esi +
mov byte ptr [edi] 0 +
mov edx [ebx+10h] +
mov eax esi +
call sub_401760  +
xor edx edx +
test eax eax +
cmovz edx esi +
add esp 10h +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+4] +
add eax 1 +
add edi esi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov edx [ebx+10h] +
mov eax esi +
call sub_401760  +
mov edx esi +
test eax eax +
jnz loc_40205C  +
add esp 10h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_4020C0  +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call strlen  +
mov ebx ds:dword_4D711C +
test ebx ebx +
mov ebp eax +
jnz loc_4020EF  +
jmp loc_4021B2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_402137  +
cmp [ebx+10h] ebp +
jnz loc_4020E8  +
mov [esp+24h+var_20] esi +
mov eax [ebx] +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_4020E8  +
mov esi [ebx+8] +
cmp byte ptr [edi] 2Bh +
mov ebp [esi] +
jnz loc_402182  +
movzx eax byte ptr [edi+1] +
test byte ptr ds:word_4D0720[eax+eax] 40h +
jz loc_402182  +
add edi 1 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebp +
call sub_4530C0  +
jmp loc_40218A  +
mov [esp+24h+var_24] 1Ch +
call sub_452ED0  +
mov [esp+24h+var_24] esi +
mov ebx eax +
call sub_452FA0  +
lea esi [ebx+4] +
mov [ebx+10h] ebp +
mov ebp offset unk_489040 +
mov [ebx+8] esi +
mov byte ptr [ebx+15h] 0 +
mov dword ptr [ebx+4] offset unk_489040 +
mov dword ptr [ebx+18h] 0 +
mov [ebx] eax +
mov eax ds:dword_4D711C +
mov ds:dword_4D711C ebx +
mov [ebx+0Ch] eax +
cmp byte ptr [edi] 2Bh +
jz loc_402110  +
mov [esp+24h+var_24] edi +
call sub_452FA0  +
test ebp ebp +
mov [esi] eax +
jz loc_40219E  +
cmp byte ptr [ebx+15h] 0 +
jz loc_40219E  +
mov [esp+24h+var_24] ebp +
call free  +
movzx eax byte ptr [esp+24h+var_18] +
mov byte ptr [ebx+15h] 1 +
mov [ebx+14h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset off_4834D4 +
jmp loc_4021C2  +
mov ebx eax +
mov [edx+0Ch] ebx +
mov eax edx +
sub edx 1Ch +
cmp edx offset unk_483004 +
jnz loc_4021C0  +
mov ds:dword_4D711C offset off_483020 +
mov ebx offset off_483020 +
jmp loc_4020EF  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_58] eax +
mov [ebp+var_4C] edx +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+58h+var_3D] +
and ebx 0FFFFFFF0h +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] edi +
mov [esp+58h+var_58] ebx +
call memcpy  +
lea eax [ebx+esi] +
mov edx [ebp+var_4C] +
movzx ecx byte ptr [eax-1] +
cmp cl 5Ch +
jz loc_402240  +
cmp cl 2Fh +
jnz loc_4022A0  +
test dl dl +
mov byte ptr [eax] 2Eh +
mov byte ptr [eax+1] 0 +
jz loc_402266  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jnz loc_4022A8  +
add eax 1 +
sub eax ebx +
cmp eax 6 +
jz loc_402302  +
cmp eax 0Ah +
jz loc_4022B0  +
lea eax [ebp+var_48] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] ebx +
call ds:_stati64  +
test eax eax +
js loc_40228F  +
movzx edx [ebp+var_42] +
mov eax 1 +
and dx 0F000h +
cmp dx 4000h +
jz loc_402291  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [eax] 2Fh +
add eax 1 +
jmp loc_402240  +
cmp dl 2Fh +
jnz loc_402266  +
jmp loc_402253  +
lea eax [ebx+1] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aUsr +
mov [esp+58h+var_58] eax +
call sub_453240  +
test eax eax +
jnz loc_402266  +
movzx eax byte ptr [ebx+4] +
cmp al 5Ch +
jz loc_4022DB  +
cmp al 2Fh +
jnz loc_402266  +
lea eax [ebx+5] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aLib_0 +
mov [esp+58h+var_58] eax +
call sub_453240  +
test eax eax +
jnz loc_402266  +
xor eax eax +
jmp loc_402291  +
lea eax [ebx+1] +
mov [esp+58h+var_50] 3 +
mov [esp+58h+var_54] offset aLib_0 +
mov [esp+58h+var_58] eax +
call sub_453240  +
test eax eax +
jnz loc_402266  +
xor eax eax +
jmp loc_402291  +
***
sub esp 14h +
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 9Ch +
mov [esp+0A0h+var_A0] 2000h +
call sub_452ED0  +
mov [esp+0A0h+var_A0] ebx +
mov [esp+0A0h+var_9C] 0 +
mov ebp eax +
call _open_0  +
mov [esp+0A0h+var_9C] 0 +
mov [esp+0A0h+var_A0] esi +
mov ebx eax +
call _open_0  +
mov [esp+0A0h+var_88] eax +
shr eax 1Fh +
test al al +
jnz loc_402912  +
mov eax ebx +
shr eax 1Fh +
test al al +
jz loc_402940  +
mov [esp+0A0h+var_A0] ebp +
call free  +
mov [esp+0A0h+var_A0] ebx +
call _close_0  +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _close_0  +
xor eax eax +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+0A0h+var_70] +
mov esi ds:_fstati64 +
mov [esp+0A0h+var_9C] eax +
mov [esp+0A0h+var_A0] ebx +
call esi  +
test eax eax +
js loc_402912  +
lea eax [esp+0A0h+var_40] +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call esi  +
test eax eax +
js loc_402912  +
mov esi [esp+0A0h+var_58] +
mov edi [esp+0A0h+var_54] +
mov edx [esp+0A0h+var_24] +
mov eax [esp+0A0h+var_28] +
xor edx edi +
xor eax esi +
or edx eax +
jnz loc_402912  +
mov eax edi +
or eax esi +
jz loc_402A52  +
lea eax [ebp+1000h] +
mov [esp+0A0h+var_74] eax +
mov [esp+0A0h+var_84] ebp +
mov [esp+0A0h+var_78] ebx +
cmp esi 1000h +
mov ebp esi +
jg loc_4029E0  +
mov ebx esi +
mov [esp+0A0h+var_80] esi +
mov [esp+0A0h+var_7C] edi +
mov eax [esp+0A0h+var_84] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_78] +
mov [esp+0A0h+var_A0] eax +
call _read_0  +
cmp eax ebp +
jz loc_402A00  +
mov ebp [esp+0A0h+var_84] +
mov ebx [esp+0A0h+var_78] +
jmp loc_402912  +
mov ebp 1000h +
mov ebx 1000h +
mov [esp+0A0h+var_80] 1000h +
mov [esp+0A0h+var_7C] 0 +
jmp loc_4029B4  +
mov eax [esp+0A0h+var_74] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _read_0  +
cmp ebp eax +
jnz loc_4029D0  +
mov eax [esp+0A0h+var_74] +
mov [esp+0A0h+var_98] ebx +
mov [esp+0A0h+var_9C] eax +
mov eax [esp+0A0h+var_84] +
mov [esp+0A0h+var_A0] eax +
call memcmp  +
test eax eax +
jnz loc_4029D0  +
sub esi [esp+0A0h+var_80] +
sbb edi [esp+0A0h+var_7C] +
mov eax edi +
or eax esi +
jnz loc_4029A0  +
mov ebp [esp+0A0h+var_84] +
mov ebx [esp+0A0h+var_78] +
mov [esp+0A0h+var_A0] ebp +
call free  +
mov [esp+0A0h+var_A0] ebx +
call _close_0  +
mov eax [esp+0A0h+var_88] +
mov [esp+0A0h+var_A0] eax +
call _close_0  +
mov eax 1 +
jmp loc_402930  +
***
push esi  +
mov esi 1 +
push ebx  +
mov ebx edx +
sub esp 11Ch +
mov [esp+120h+var_11C] offset aRb_2 +
mov [esp+120h+var_120] eax +
call fopen  +
mov [esp+120h+var_120] ebx +
lea ebx [esp+120h+var_110] +
mov [esp+120h+var_11C] offset aWb_1 +
mov ebp eax +
call fopen  +
mov edi eax +
jmp loc_402AE3  +
mov [esp+120h+var_11C] edi +
mov [esp+120h+var_120] ebx +
call fputs  +
mov [esp+120h+var_11C] 0Ah +
mov [esp+120h+var_120] ebx +
call strchr  +
test eax eax +
setnz al  +
mov esi eax +
mov [esp+120h+var_118] ebp +
mov [esp+120h+var_11C] 100h +
mov [esp+120h+var_120] ebx +
call fgets  +
test eax eax +
jz loc_402B23  +
mov eax esi +
test al al +
jz loc_402AC0  +
mov [esp+120h+var_114] edi +
mov [esp+120h+var_118] 3 +
mov [esp+120h+var_11C] 1 +
mov [esp+120h+var_120] offset asc_4892E5 +
call fwrite  +
jmp loc_402AC0  +
mov [esp+120h+var_120] ebp +
call fclose  +
mov [esp+120h+var_120] edi +
call fclose  +
add esp 11Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov ebx [eax] +
mov edi [esp+28h+arg_0] +
test ebx ebx +
jz loc_402B6F  +
cmp edi [ebx+0Ch] +
jge loc_402B65  +
jmp loc_402B6F  +
cmp [ebx+0Ch] edi +
jg loc_402B6F  +
lea esi [ebx+4] +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_402B60  +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call sub_41F230  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
cmp eax [ebp+4] +
jle loc_402B8D  +
mov [ebp+4] eax +
mov [esp+28h+var_28] 14h +
call sub_452ED0  +
mov edx [esp+28h+arg_4] +
mov [eax+8] edx +
mov edx [esp+28h+arg_8] +
mov [eax] ebx +
mov [eax+0Ch] edi +
mov [eax+10h] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
test ecx ecx +
mov [esp+30h+var_1C] eax +
mov [esp+30h+var_20] edx +
jz loc_402CB0  +
lea esi [esi+0] +
cmp byte ptr [esi] 2Ah +
jz loc_402C40  +
mov eax ds:dword_4D7148 +
mov edi ds:dword_4D714C +
lea eax [eax+eax*4] +
lea ebx [edi+eax*4-14h] +
cmp edi ebx +
jbe loc_402C2F  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] offset aLanguageSNotRe +
call sub_4256B0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+1] +
mov [esp-0Ch+arg_0] esi +
mov [esp+0] eax +
call strcmp  +
test eax eax +
jz loc_402C4A  +
sub ebx 14h +
cmp edi ebx +
ja loc_402BFB  +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 40h +
jnz loc_402C28  +
jmp loc_402C15  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp-0Ch+arg_10] +
test esi esi +
jz loc_402E1E  +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jnz loc_402E1E  +
mov edi offset a@cHeader +
mov ecx 0Ah +
mov esi ebp +
cmps   +
jz loc_402C8C  +
mov edi offset a@cHeader_0 +
mov ecx 0Ch +
mov esi ebp +
cmps   +
jnz loc_402E1E  +
mov eax ds:dword_4D7108 +
test eax eax +
jnz loc_402E1E  +
mov eax ds:dword_4D9188 +
mov [esp-0Ch+arg_0] offset aCannotUseAsInp +
mov [esp+0] eax +
call sub_425A80  +
nop   +
mov eax ds:dword_4D714C +
mov [esp-0Ch+arg_14] eax +
mov eax ds:dword_4D7148 +
mov ecx [esp-0Ch+arg_14] +
lea eax [eax+eax*4] +
lea eax [ecx+eax*4-14h] +
cmp ecx eax +
mov [esp-0Ch+arg_18] eax +
ja loc_402C40  +
mov ebp eax +
mov ebx [ebp+0] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_402D00  +
mov esi [esp-0Ch+arg_10] +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jz loc_402E02  +
mov [esp+0] ebx +
call strlen  +
cmp eax [esp-0Ch+arg_C] +
jnb loc_402D2E  +
mov edx [esp-0Ch+arg_C] +
mov [esp+0] ebx +
sub edx eax +
mov eax [esp-0Ch+arg_10] +
add eax edx +
mov [esp-0Ch+arg_0] eax +
call strcmp  +
test eax eax +
jz loc_402E02  +
sub ebp 14h +
cmp [esp-0Ch+arg_14] ebp +
jbe loc_402CD7  +
mov ebp [esp-0Ch+arg_18] +
jmp loc_402D63  +
mov [esp-0Ch+arg_0] offset aAbcdefghijklmn +
mov [esp+0] ebx +
call strpbrk  +
test eax eax +
jz loc_402DB0  +
sub ebp 14h +
cmp ds:dword_4D714C ebp +
ja loc_402C40  +
mov ebx [ebp+0] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_402D88  +
mov esi [esp-0Ch+arg_10] +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
jz loc_402DC1  +
mov [esp+0] ebx +
call strlen  +
cmp eax [esp-0Ch+arg_C] +
jnb loc_402D54  +
mov esi [esp-0Ch+arg_C] +
mov [esp+0] ebx +
sub esi eax +
add esi [esp-0Ch+arg_10] +
mov [esp-0Ch+arg_0] esi +
call strcmp  +
test eax eax +
jnz loc_402D40  +
mov [esp-0Ch+arg_0] esi +
mov [esp+0] ebx +
call ds:_stricmp  +
test eax eax +
jnz loc_402D54  +
mov eax ds:dword_4D714C +
mov [esp-0Ch+arg_18] ebp +
mov [esp-0Ch+arg_14] eax +
mov eax [esp-0Ch+arg_14] +
cmp [esp-0Ch+arg_18] eax +
jb loc_402C40  +
mov esi [ebp+4] +
cmp byte ptr [esi] 40h +
jnz loc_402E14  +
add esi 1 +
mov [esp-0Ch+arg_10] 0 +
jnz loc_402BE0  +
mov [esp-0Ch+arg_C] 0 +
jmp loc_402CB9  +
cmp [esp-0Ch+arg_14] ebp +
ja loc_402D37  +
mov esi [ebp+4] +
cmp byte ptr [esi] 40h +
jz loc_402DE4  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
jmp loc_402C42  +
***
sub esp 1Ch +
mov eax ds:dword_4D9094 +
test eax eax +
jnz loc_402E64  +
mov eax offset off_4834D4 +
xor edx edx +
jmp loc_402E47  +
mov edx ecx +
mov [eax+0Ch] edx +
mov ecx eax +
sub eax 1Ch +
cmp eax offset unk_483004 +
jnz loc_402E45  +
mov ds:dword_4D711C offset off_483020 +
add esp 1Ch +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_18] offset aUsingBuiltInSp +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_4244D0  +
jmp loc_402E3C  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax] +
test ebx ebx +
jnz loc_402E95  +
jmp loc_402EAE  +
mov ebx esi +
mov eax [ebx] +
mov esi [ebx+4] +
mov [esp+28h+var_28] eax +
call free  +
mov [esp+28h+var_28] ebx +
call free  +
test esi esi +
jnz loc_402E93  +
mov dword ptr [edi] 0 +
mov dword ptr [ebp+0] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 1 +
mov edi [esp+10h+arg_4] +
jnz loc_402F35  +
mov eax ds:dword_4D7030 +
xor ebx ebx +
test eax eax +
jle loc_402F2C  +
lea esi [esi+0] +
mov eax ds:dword_4D702C +
lea esi ds:0[ebx*4] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_402F21  +
mov edx [edi] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call sub_4531F0  +
test eax eax +
jnz loc_402F21  +
mov eax ds:dword_4D702C +
mov dword ptr [eax+esi] 0 +
add ebx 1 +
cmp ds:dword_4D7030 ebx +
jg loc_402EF0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_8] offset aRemove_outfile +
mov [esp+10h+var_C] 24B5h +
mov [esp+10h+var_10] offset a____GccGccGcc_ +
call sub_424560  +
jmp sub_402F60  +
***
push ebx  +
sub esp 1Ch +
mov eax ds:dword_4D70DC +
test eax eax +
jz loc_403008  +
cmp eax ds:dword_4D70E0 +
jz loc_403027  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 100h +
mov ds:dword_4D70DC 10h +
call sub_452ED0  +
mov ds:dword_4D70E4 eax +
add esp 1Ch +
retn   +
lea edx [eax+eax] +
shl eax 5 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70DC edx +
mov [esp+1Ch+var_1C] eax +
call sub_452F50  +
mov ds:dword_4D70E4 eax +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_20] eax +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_1C] ecx +
mov esi [esp+38h+arg_4] +
call sub_402FF0  +
mov ecx ds:dword_4D70E0 +
mov eax [esp+38h+var_20] +
mov ebx ecx +
shl ebx 4 +
add eax 1 +
add ebx ds:dword_4D70E4 +
test ebp ebp +
mov [ebx] eax +
jnz loc_4030C0  +
mov dword ptr [ebx+4] 0 +
mov eax edi +
add ecx 1 +
mov [ebx+0Dh] al +
mov eax esi +
mov dword ptr [ebx+8] 0 +
mov [ebx+0Ch] al +
mov byte ptr [ebx+0Eh] 0 +
mov ds:dword_4D70E0 ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp ds:4[ebp*4] +
mov [esp+38h+var_38] ebp +
call sub_452ED0  +
mov ecx ds:dword_4D70E0 +
mov [esp+38h+var_20] ecx +
mov [ebx+4] eax +
mov ebx ecx +
shl ebx 4 +
add ebx ds:dword_4D70E4 +
lea eax [ebp-4] +
mov edx [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+var_1C] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebx+4] +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax+ebp-4] 0 +
jmp loc_403093  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
cmp byte ptr [eax+1] 57h +
jz loc_403141  +
cmp dword ptr [edx] 500h +
mov eax 1 +
jz loc_403180  +
add esp 1Ch +
retn   +
cmp byte ptr [eax+2] 6Eh +
jnz loc_403130  +
cmp byte ptr [eax+3] 6Fh +
jnz loc_403130  +
cmp byte ptr [eax+4] 2Dh +
jnz loc_403130  +
test byte ptr [edx+28h] 20h +
jnz loc_403130  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] 0 +
sub edx 1 +
call sub_403050  +
xor eax eax +
jmp loc_40313D  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
sub edx 1 +
call sub_403050  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_4D70B4 +
test eax eax +
jz loc_4031C8  +
cmp eax ds:dword_4D7030 +
jz loc_4031E7  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 100h +
mov ds:dword_4D70B4 10h +
call sub_452ED0  +
mov ds:dword_4D70B8 eax +
add esp 1Ch +
retn   +
lea edx [eax+eax] +
shl eax 5 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D70B8 +
mov ds:dword_4D70B4 edx +
mov [esp+1Ch+var_1C] eax +
call sub_452F50  +
mov ds:dword_4D70B8 eax +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
call sub_4031B0  +
mov ebx ds:dword_4D7030 +
mov ecx ebx +
add ebx 1 +
shl ecx 4 +
add ecx ds:dword_4D70B8 +
mov [ecx] esi +
mov [ecx+4] edi +
mov ds:dword_4D7030 ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [edx] +
shl eax 6 +
test ds:byte_4A8DA8[eax] 40h +
jnz loc_403273  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 0 +
sub edx 1 +
jmp sub_403050  +
***
mov eax [edx+0Ch] +
mov dword ptr [esp+4] offset aUnrecognized_5 +
mov [esp+8] eax +
jmp sub_4256B0  +
***
push esi  +
push ebx  +
sub esp 5Ch +
test cl cl +
mov [esp+5Ch+var_14] eax +
mov eax ds:dword_4D7138 +
mov [esp+5Ch+var_10] edx +
mov [esp+5Ch+var_40] eax +
mov eax ds:dword_4D7134 +
mov [esp+5Ch+var_1C] eax +
jz loc_40332D  +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_4036C0  +
mov ecx 2 +
mov edi offset a__1 +
mov esi eax +
cmps   +
mov [esp+5Ch+var_34] 0 +
setnbe cl  +
setb dl  +
cmp cl dl +
jnz loc_4036CD  +
mov eax ds:dword_4D7124 +
test eax eax +
jz loc_403335  +
mov ecx 2 +
mov edi offset a__1 +
mov esi eax +
cmps   +
mov [esp+5Ch+var_30] 0 +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40333D  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_4530C0  +
mov [esp+5Ch+var_30] eax +
jmp loc_40333D  +
mov [esp+5Ch+var_34] 0 +
mov [esp+5Ch+var_30] 0 +
mov eax ds:dword_4D7120 +
mov [esp+5Ch+var_2C] 0 +
test eax eax +
jz loc_40336A  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_4530C0  +
mov [esp+5Ch+var_2C] eax +
mov eax [esp+5Ch+var_34] +
test eax eax +
jz loc_403728  +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov [esp+5Ch+var_20] eax +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_403745  +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call strlen  +
mov byte ptr [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_35] 0 +
mov [esp+5Ch+var_24] eax +
mov eax [esp+5Ch+var_2C] +
test eax eax +
jz loc_403664  +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov edi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
mov ebx eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call strlen  +
test ebp ebp +
mov [esp+5Ch+var_18] eax +
jz loc_40367F  +
mov eax [esp+5Ch+var_14] +
mov esi [eax] +
test esi esi +
jz loc_4035E2  +
lea eax [ebx+1] +
mov [esp+5Ch+var_3C] eax +
mov eax edi +
mov edi esi +
add eax 1 +
mov [esp+5Ch+var_28] eax +
jmp loc_403458  +
mov eax [edi+8] +
test eax eax +
jnz loc_40344D  +
mov esi [edi+10h] +
test esi esi +
jz loc_403566  +
cmp [esp+5Ch+var_35] 0 +
jnz loc_40344D  +
mov eax [esp+5Ch+var_24] +
mov ecx [esp+5Ch+var_30] +
test eax eax +
jnz loc_403581  +
mov byte ptr [ebp+ebx+0] 0 +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jnz loc_4034FE  +
mov edi [edi+4] +
test edi edi +
jz loc_4035E2  +
mov esi [edi] +
mov [esp+5Ch+var_5C] esi +
call strlen  +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_54] eax +
mov ebx eax +
call memcpy  +
cmp byte ptr [esp+5Ch+var_48] 0 +
jnz loc_403408  +
mov eax [esp+5Ch+var_3C] +
lea ecx [ebp+ebx+0] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
mov ecx [esp+5Ch+var_44] +
test eax eax +
jnz loc_4034FE  +
mov eax [edi+8] +
cmp eax 2 +
jz loc_4035A0  +
test eax eax +
jnz loc_40344D  +
mov eax ds:dword_4D7120 +
test eax eax +
jz loc_403735  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jz loc_403408  +
mov ebx [esp+5Ch+var_34] +
test ebx ebx +
jz loc_403532  +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_48] +
mov edx [esp+5Ch+var_30] +
test edx edx +
jz loc_40354A  +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_48] eax +
call free  +
mov eax [esp+5Ch+var_48] +
cmp ebp eax +
jz loc_40355E  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_48] eax +
call free  +
mov eax [esp+5Ch+var_48] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+5Ch+var_48] 0 +
jnz loc_40344D  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jz loc_403431  +
add ebx ebp +
add eax 1 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] ebx +
call memcpy  +
jmp loc_403436  +
mov eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_44] ecx +
add eax 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_58] eax +
call memcpy  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call [esp+5Ch+arg_4]  +
test eax eax +
jnz loc_4034FE  +
mov eax [edi+8] +
mov ecx [esp+5Ch+var_44] +
jmp loc_4034BE  +
mov ecx [esp+5Ch+var_30] +
test ecx ecx +
jz loc_4036AC  +
mov eax [esp+5Ch+var_34] +
test eax eax +
jz loc_40366B  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax ds:dword_4D7138 +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax ds:dword_4D7134 +
mov [esp+5Ch+var_1C] eax +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_403678  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_24] 0 +
mov [esp+5Ch+var_20] 0 +
mov [esp+5Ch+var_30] 0 +
test eax eax +
mov [esp+5Ch+var_34] 0 +
jnz loc_4033B6  +
xor edi edi +
jmp loc_4033C0  +
mov eax [esp+5Ch+var_30] +
mov byte ptr [esp+5Ch+var_48] 1 +
test eax eax +
jnz loc_403630  +
mov [esp+5Ch+var_35] 1 +
jmp loc_403638  +
mov eax [esp+5Ch+var_10] +
mov ecx [esp+5Ch+var_24] +
mov edx [esp+5Ch+arg_0] +
add edx [eax] +
cmp ebx edi +
mov eax edi +
cmovnb eax ebx +
cmp eax ecx +
cmovb eax ecx +
lea eax [edx+eax+1] +
mov [esp+5Ch+var_5C] eax +
call sub_452ED0  +
mov ebp eax +
jmp loc_4033E6  +
mov edx [esp+5Ch+var_34] +
test edx edx +
jnz loc_4035EE  +
xor eax eax +
jmp loc_40354A  +
mov [esp+5Ch+var_34] 0 +
jmp loc_4032E6  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] offset asc_48D8F1 +
mov [esp+5Ch+var_5C] eax +
call sub_4530C0  +
mov [esp+5Ch+var_54] 0 +
mov ebx eax +
mov [esp+5Ch+var_34] eax +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] eax +
call sub_4530C0  +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_1C] +
mov [esp+5Ch+var_5C] eax +
call sub_4530C0  +
mov [esp+5Ch+var_1C] eax +
jmp loc_4032E6  +
mov [esp+5Ch+var_20] 0 +
jmp loc_403386  +
mov eax [edi+10h] +
test eax eax +
jnz loc_40341A  +
jmp loc_403571  +
xor ebp ebp +
mov byte ptr [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_35] 0 +
mov [esp+5Ch+var_24] 0 +
jmp loc_4033AA  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] offset unk_4D71C0 +
mov [esp+38h+var_1C] cl +
mov [esp+38h+var_1B] 1 +
call strlen  +
mov edx ds:dword_4D71CC +
mov ebx eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp ebx eax +
ja loc_403866  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ebp +
call memcpy  +
add ebx ds:dword_4D71CC +
cmp ds:dword_4D71D0 ebx +
mov edx ebx +
mov ds:dword_4D71CC ebx +
jz loc_403890  +
lea eax [edx+1] +
mov ds:dword_4D71CC eax +
mov eax edi +
movzx ecx al +
lea eax [esp+38h+var_20] +
mov byte ptr [edx] 3Dh +
lea edx [esi+4] +
mov [esp+38h+var_30] eax +
mov eax esi +
mov [esp+38h+var_34] offset sub_403A50 +
mov [esp+38h+var_38] 0 +
call sub_403290  +
mov eax ds:dword_4D71CC +
cmp ds:dword_4D71D0 eax +
jz loc_4038B0  +
lea edx [eax+1] +
mov ds:dword_4D71CC edx +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D71C8 +
mov edx ds:dword_4D71CC +
cmp edx eax +
jz loc_403881  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add edx ecx +
not ecx  +
and edx ecx +
mov ecx ds:dword_4D71D0 +
mov esi edx +
sub esi ebx +
mov ds:dword_4D71CC edx +
mov edi ecx +
sub edi ebx +
cmp esi edi +
jbe loc_403858  +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov ds:dword_4D71C8 edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edx ds:dword_4D71CC +
jmp loc_40379F  +
or ds:byte_4D71E8 2 +
jmp loc_403826  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edx ds:dword_4D71CC +
jmp loc_4037C9  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_40380B  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 3Ch +
movzx edx byte ptr [edx] +
mov ecx [esp+48h+arg_0] +
cmp dl 5Ch +
jz loc_403966  +
cmp dl 2Fh +
jz loc_403966  +
test dl dl +
mov edi eax +
jnz loc_403960  +
test ebp 1 +
mov eax offset unk_489040 +
mov esi offset a_exe +
cmovz esi eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] ecx +
mov [esp+48h+var_2C] ebx +
mov [esp+48h+var_28] esi +
call strlen  +
mov [esp+48h+var_48] esi +
lea esi [esp+48h+var_2C] +
mov ebx eax +
mov [esp+48h+var_24] eax +
call strlen  +
mov ecx [esp+48h+var_3C] +
lea edx [edi+4] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] offset loc_402020 +
mov [esp+48h+var_1C] ebp +
movzx ecx cl +
add ebx eax +
mov [esp+48h+var_20] eax +
mov eax edi +
mov [esp+48h+var_48] ebx +
call sub_403290  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_4038F2  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call _access_0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_403955  +
mov [esp+48h+var_48] ebx +
call sub_452FA0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp [esp+18h+arg_0] 1 +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
cmp byte ptr [ebx+4] 0 +
jnz loc_403AB7  +
cmp byte ptr [ebx+5] 0 +
jnz loc_403A7E  +
mov esi [ebx] +
mov eax [esi+0Ch] +
cmp [esi+10h] eax +
jz loc_403AE1  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
mov byte ptr [eax] 3Bh +
mov esi [ebx] +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov edx [esi+0Ch] +
mov edi eax +
mov eax [esi+10h] +
sub eax edx +
cmp edi eax +
ja loc_403AD0  +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edx +
call memcpy  +
xor eax eax +
add [esi+0Ch] edi +
mov byte ptr [ebx+5] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edx edx +
mov eax ebp +
call sub_4021F0  +
test eax eax +
jnz loc_403A65  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call sub_4592E0  +
mov edx [esi+0Ch] +
jmp loc_403A96  +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] esi +
call sub_4592E0  +
mov eax [esi+0Ch] +
jmp loc_403A75  +
***
cmp [esp+28h+arg_0] 1 +
sub esp 48h +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
test eax eax +
js loc_403BAC  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_403BB1  +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
test eax eax +
jns loc_403BAC  +
mov eax ds:dword_4D9094 +
test eax eax +
jz loc_403BAC  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aSM +
call sub_4256B0  +
jmp loc_403BAC  +
***
mov ebx ds:dword_4D70E8 +
test ebx ebx +
jz loc_403BFE  +
nop   +
mov eax [ebx] +
call sub_403B80  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_403BF0  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx ds:dword_4D70EC +
test ebx ebx +
jz loc_403C2E  +
nop   +
mov eax [ebx] +
call sub_403B80  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_403C20  +
mov ds:dword_4D70EC 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call signal  +
call sub_403BE0  +
call sub_403C10  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp loc_47D078  +
***
sub esp 0Ch +
call sub_4244B0  +
xor edx edx +
test al al +
jz loc_403C8E  +
mov eax ds:dword_4D9058 +
mov dl 1 +
test eax eax +
cmovnz edx dword_4835A4 +
mov eax edx +
add esp 0Ch +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_403CB7  +
cmp al 2Fh +
jnz loc_403D40  +
mov eax ds:dword_4D724C +
test eax eax +
jz loc_403D14  +
mov [esp+10h+var_10] eax +
call sub_452FA0  +
mov edi ds:dword_4D724C +
mov [esp+10h+var_10] edi +
mov esi eax +
call strlen  +
test eax eax +
jnz loc_403D67  +
mov eax ds:dword_4D7244 +
test eax eax +
jz loc_403D84  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] esi +
call sub_4530C0  +
mov ebx eax +
mov [esp+10h+var_10] esi +
call free  +
mov edx offset off_489406 +
mov [esp+10h+var_8] 1 +
mov ecx edx +
mov eax offset unk_483508 +
mov [esp+10h+var_C] 0 +
mov edx ebx +
mov [esp+10h+var_10] 1 +
call sub_402B40  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test al al +
jz loc_403D4E  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_403CB7  +
mov eax ds:dword_4D9188 +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] offset aSystemPathQsIs +
mov [esp+10h+var_10] eax +
call sub_425A80  +
cmp byte ptr [edi+eax-1] 2Fh +
jnz loc_403CE0  +
mov byte ptr [esi+eax-1] 0 +
mov eax ds:dword_4D7244 +
test eax eax +
jnz loc_403CED  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_10] esi +
call sub_4530C0  +
mov ebx eax +
jmp loc_403D07  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D713C +
test ebx ebx +
mov edi eax +
jz loc_403EE0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_403E69  +
cmp byte ptr [ebx+3] 0 +
jns loc_403E80  +
mov ds:dword_4D713C 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452F50  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D713C eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_403EF1  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D713C +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41F4C0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D713C +
test eax eax +
jz loc_403EFA  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452F50  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D713C eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_403E69  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_403DEB  +
mov ebx eax +
xor edx edx +
jmp loc_403E69  +
xor esi esi +
jmp loc_403EAB  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D7140 +
test ebx ebx +
mov edi eax +
jz loc_404040  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_403FC9  +
cmp byte ptr [ebx+3] 0 +
jns loc_403FE0  +
mov ds:dword_4D7140 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452F50  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7140 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_404051  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D7140 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41F4C0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7140 +
test eax eax +
jz loc_40405A  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452F50  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D7140 eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_403FC9  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_403F4B  +
mov ebx eax +
xor edx edx +
jmp loc_403FC9  +
xor esi esi +
jmp loc_40400B  +
***
push esi  +
push ebx  +
sub esp 1Ch +
call sub_4015C0  +
mov ebx ds:dword_4D7144 +
test ebx ebx +
mov edi eax +
jz loc_4041A0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_404129  +
cmp byte ptr [ebx+3] 0 +
jns loc_404140  +
mov ds:dword_4D7144 0 +
lea eax [esi+1] +
mov [esp+1Ch+var_D] 1 +
cmp eax 4 +
mov ebp 4 +
cmovnb ebp eax +
lea eax ds:8[ebp*4] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_452F50  +
mov ecx ebp +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7144 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+1Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_4041B1  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov ebx ds:dword_4D7144 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+1Ch+var_18] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_41F4C0  +
mov ebp eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7144 +
test eax eax +
jz loc_4041BA  +
mov esi [eax+4] +
mov [esp+1Ch+var_18] edx +
and ebp 7FFFFFFFh +
mov [esp+1Ch+var_1C] eax +
call sub_452F50  +
mov edx esi +
mov ecx [eax] +
mov ebx eax +
mov ds:dword_4D7144 eax +
mov [eax+4] esi +
and ecx 80000000h +
or ecx ebp +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_404129  +
mov [esp+1Ch+var_D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_4040AB  +
mov ebx eax +
xor edx edx +
jmp loc_404129  +
xor esi esi +
jmp loc_40416B  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset aAssemblerOptio +
call sub_47D5B0  +
mov [esp+1Ch+var_1C] offset aUseWaOptionToP +
call sub_47D5B0  +
mov eax ds:_iob +
add eax 20h +
mov [esp+1Ch+var_1C] eax +
call fflush  +
xor eax eax +
add esp 1Ch +
retn   +
***
jmp sub_404200  +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call getenv  +
cmp byte ptr [edi+1] 0 +
mov esi eax +
jz loc_40500C  +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aEnv_managerGet +
add eax 40h +
mov [esp+18h+var_18] eax +
call sub_47D600  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
***
push edi  +
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 13h +
jbe loc_4057E2  +
mov dword ptr [eax] 4C4C4F43h +
mov edi ds:dword_4D70E0 +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 5F434347h +
mov dword ptr [eax+0Ch] 4954504Fh +
mov dword ptr [eax+10h] 3D534E4Fh +
mov eax ds:dword_4D71CC +
mov [ebp+var_24] 0 +
add eax 14h +
test edi edi +
mov ds:dword_4D71CC eax +
jle loc_40572A  +
mov edi [ebp+var_24] +
mov ecx ds:dword_4D70E4 +
shl edi 4 +
add ecx edi +
mov edx [ecx+8] +
mov [ebp+var_20] edi +
and edx 14h +
cmp edx 4 +
jz loc_405493  +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 1 +
jbe loc_40579D  +
mov esi 2D27h +
mov [eax] si +
mov eax ds:dword_4D71CC +
mov ebx [ecx] +
lea edx [eax+2] +
mov ds:dword_4D71CC edx +
jmp loc_40542F  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] edx +
call memcpy  +
mov eax ds:dword_4D71D0 +
add esi ds:dword_4D71CC +
sub eax esi +
cmp eax 3 +
mov ds:dword_4D71CC esi +
jbe loc_405475  +
mov dword ptr [esi] 27275C27h +
mov eax ds:dword_4D71CC +
lea ebx [edi+1] +
lea edx [eax+4] +
mov ds:dword_4D71CC edx +
mov [esp+38h+var_34] 27h +
mov [esp+38h+var_38] ebx +
mov [ebp+var_1C] edx +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
mov edi eax +
jz loc_4054C7  +
mov eax ds:dword_4D71D0 +
mov esi edi +
sub esi ebx +
sub eax edx +
cmp esi eax +
jbe loc_4053F0  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edx ds:dword_4D71CC +
jmp loc_4053F0  +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov esi ds:dword_4D71CC +
jmp loc_405418  +
mov eax edx +
add [ebp+var_24] 1 +
mov ebx [ebp+var_24] +
cmp ds:dword_4D70E0 ebx +
jle loc_40572A  +
cmp ds:dword_4D71D0 eax +
jz loc_4057C4  +
mov byte ptr [eax] 20h +
mov eax ds:dword_4D71CC +
add eax 1 +
mov ds:dword_4D71CC eax +
jmp loc_4053A3  +
mov [esp+38h+var_38] ebx +
call strlen  +
mov edx [ebp+var_1C] +
mov esi eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp esi eax +
ja loc_4056F0  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] edx +
call memcpy  +
add esi ds:dword_4D71CC +
cmp ds:dword_4D71D0 esi +
mov ds:dword_4D71CC esi +
jz loc_40570B  +
mov byte ptr [esi] 27h +
mov eax ds:dword_4D71CC +
mov ebx [ebp+var_20] +
lea edx [eax+1] +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D71CC edx +
mov eax [eax+ebx+4] +
test eax eax +
mov [ebp+var_20] eax +
jz loc_405491  +
mov ebx [eax] +
test ebx ebx +
jz loc_405491  +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp eax 1 +
jbe loc_405697  +
lea esi [esi+0] +
mov ecx 2720h +
mov [edx] cx +
mov eax ds:dword_4D71CC +
lea ecx [eax+2] +
mov eax [ebp+var_20] +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov ebx [eax] +
jmp loc_4055B1  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ecx +
call memcpy  +
mov eax ds:dword_4D71D0 +
add esi ds:dword_4D71CC +
sub eax esi +
cmp eax 3 +
mov ds:dword_4D71CC esi +
jbe loc_405600  +
mov dword ptr [esi] 27275C27h +
mov eax ds:dword_4D71CC +
lea ebx [edi+1] +
lea ecx [eax+4] +
mov ds:dword_4D71CC ecx +
mov edx ecx +
mov [esp+38h+var_34] 27h +
mov [esp+38h+var_38] ebx +
mov [ebp+var_1C] edx +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
mov edi eax +
jz loc_405620  +
mov eax ds:dword_4D71D0 +
mov esi edi +
mov ecx edx +
sub esi ebx +
sub eax edx +
cmp esi eax +
jbe loc_405570  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov ecx ds:dword_4D71CC +
jmp loc_405570  +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov esi ds:dword_4D71CC +
jmp loc_405598  +
mov [esp+38h+var_38] ebx +
call strlen  +
mov edx [ebp+var_1C] +
mov ecx edx +
mov esi eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp esi eax +
ja loc_4056B6  +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ecx +
call memcpy  +
add esi ds:dword_4D71CC +
cmp ds:dword_4D71D0 esi +
mov ds:dword_4D71CC esi +
jz loc_4056D1  +
mov byte ptr [esi] 27h +
mov eax ds:dword_4D71CC +
add eax 1 +
add [ebp+var_20] 4 +
mov ds:dword_4D71CC eax +
jz loc_405493  +
mov edi [ebp+var_20] +
mov edx [edi] +
test edx edx +
jz loc_405493  +
mov edx eax +
mov eax ds:dword_4D71D0 +
sub eax edx +
cmp eax 1 +
ja loc_405550  +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edx ds:dword_4D71CC +
jmp loc_405550  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov ecx ds:dword_4D71CC +
jmp loc_40563A  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov esi ds:dword_4D71CC +
jmp loc_40565E  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edx ds:dword_4D71CC +
jmp loc_4054E3  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov esi ds:dword_4D71CC +
jmp loc_40550B  +
cmp ds:dword_4D71D0 eax +
jz loc_40580C  +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D71CC +
mov ecx ds:dword_4D71C8 +
add eax 1 +
cmp eax ecx +
jz loc_405800  +
mov edx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_405780  +
mov ds:dword_4D71CC edx +
mov eax edx +
mov [esp+38h+var_38] ecx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov ecx [ebp+var_20] +
mov eax ds:dword_4D71CC +
add ecx ds:dword_4D70E4 +
jmp loc_4053D4  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_4054B2  +
mov [esp+38h+var_34] 14h +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_40535F  +
or ds:byte_4D71E8 2 +
jmp loc_40574F  +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_405736  +
***
mov ebp esp +
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov [esp+10h+var_10] eax +
call sub_452FA0  +
test ebx ebx +
mov esi eax +
jz loc_40676C  +
mov ebx ds:dword_4D70EC +
test ebx ebx +
jnz loc_4067AF  +
lea esi [esi+0] +
mov [esp+10h+var_10] 8 +
call sub_452ED0  +
mov edx ds:dword_4D70EC +
mov [eax] esi +
mov [eax+4] edx +
mov ds:dword_4D70EC eax +
test edi edi +
jz loc_4067CD  +
mov ebx ds:dword_4D70E8 +
test ebx ebx +
jnz loc_406787  +
jmp loc_4067D4  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_4067D4  +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_4531F0  +
test eax eax +
jnz loc_406780  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_406750  +
mov eax [ebx] +
mov [esp+0] esi +
mov [esp-0Ch+arg_0] eax +
call sub_4531F0  +
test eax eax +
jnz loc_4067A8  +
mov [esp+0] esi +
call free  +
test edi edi +
jnz loc_406770  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 8 +
call sub_452ED0  +
mov edx ds:dword_4D70E8 +
mov [eax] esi +
mov [eax+4] edx +
mov ds:dword_4D70E8 eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx ds:dword_4D7114 +
mov [esp+38h+var_24] edx +
test ebx ebx +
jz loc_406985  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_4068D2  +
cmp byte ptr [ebx+3] 0 +
jns loc_406905  +
mov ds:dword_4D7114 0 +
lea eax [esi+1] +
mov [esp+38h+var_1D] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax ds:8[edx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [esp+38h+var_1C] edx +
call sub_452F50  +
mov edx [esp+38h+var_1C] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov ds:dword_4D7114 eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+38h+var_1D] 0 +
mov [eax+3] dl +
jz loc_406996  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call memcpy  +
mov ebx ds:dword_4D7114 +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov eax [esp+38h+var_24] +
mov [ebx+edx*4+8] edi +
or eax ebp +
jz loc_4068FD  +
cmp byte ptr [edi] 2Dh +
jz loc_406968  +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_30] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] eax +
call sub_406720  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+38h+var_34] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41F4C0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40699F  +
mov ebx [eax+4] +
mov [esp+38h+var_34] edx +
and esi 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_452F50  +
mov edx [eax] +
mov ds:dword_4D7114 eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_4068D2  +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 3Dh +
call strrchr  +
lea edx [eax+1] +
test eax eax +
cmovnz edi edx +
jmp loc_4068E9  +
mov [esp+38h+var_1D] 0 +
xor esi esi +
mov eax 1 +
jmp loc_40684C  +
mov ebx eax +
xor edx edx +
jmp loc_4068D2  +
xor ebx ebx +
jmp loc_406930  +
***
push ebx  +
sub esp 10h +
mov eax ds:dword_4D720C +
cmp ds:dword_4D7210 eax +
jz loc_406AE0  +
lea edx [eax+1] +
mov ds:dword_4D720C edx +
mov byte ptr [eax] 0 +
mov ebx ds:dword_4D7208 +
mov ecx ds:dword_4D720C +
cmp ebx ecx +
jz loc_406AD4  +
mov eax ds:dword_4D7218 +
mov edx ds:dword_4D7204 +
add ecx eax +
not eax  +
and ecx eax +
mov eax ds:dword_4D7210 +
mov esi ecx +
sub esi edx +
mov ds:dword_4D720C ecx +
mov edi eax +
sub edi edx +
cmp esi edi +
jbe loc_406A16  +
mov ds:dword_4D720C eax +
mov ecx eax +
mov ds:dword_4D7208 ecx +
mov ecx ds:dword_4D7074 +
test ecx ecx +
jnz loc_406AA0  +
mov edx ds:dword_4D7070 +
test edx edx +
jz loc_406A5E  +
mov [esp+10h+var_10] 1 +
mov ecx 4 +
mov edx ebx +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
mov esi eax +
jz loc_406AC2  +
xor ecx ecx +
xor edx edx +
mov eax offset aScript +
mov ebx esi +
call sub_406800  +
mov ecx ds:dword_4D7078 +
mov eax ebx +
mov edx ds:dword_4D707C +
call sub_406800  +
mov eax ds:dword_4D7078 +
test eax eax +
jnz loc_406A90  +
mov ds:dword_4D7080 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D702C +
mov edx ds:dword_4D709C +
mov [eax+edx*4] ebx +
jmp loc_406A7A  +
mov edx ebx +
mov ecx 4 +
mov [esp+10h+var_10] 1 +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
cmovnz ebx eax +
jmp loc_406A26  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] offset aUnableToLocate +
call sub_4256B0  +
jmp loc_406A84  +
or ds:byte_4D7228 2 +
jmp loc_4069E7  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset unk_4D7200 +
call sub_4592E0  +
mov eax ds:dword_4D720C +
jmp loc_4069C7  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
mov ds:dword_4D70A0 ebx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov ds:dword_4D7028 eax +
call sub_459F50  +
mov [esp+18h+var_18] eax +
mov ebx eax +
mov ds:dword_4D7090 eax +
call strlen  +
lea edx [ebx+eax] +
cmp ebx edx +
mov ds:dword_4D7098 eax +
mov ds:dword_4D7094 eax +
jnz loc_406B4C  +
jmp loc_406B73  +
sub edx 1 +
cmp ebx edx +
jz loc_406B73  +
cmp byte ptr [edx] 2Eh +
nop   +
jnz loc_406B45  +
mov eax edx +
add edx 1 +
sub eax ebx +
mov ds:dword_4D7098 eax +
mov ds:dword_4D708C edx +
mov ds:dword_4D7088 0 +
add esp 18h +
pop ebx  +
retn   +
mov ds:dword_4D708C offset unk_489040 +
mov ds:dword_4D7088 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov ds:byte_4D7268 al +
mov eax [esp+arg_4] +
mov ds:byte_4D7269 al +
retn 8  +
***
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [edi+4] +
mov [esp+18h+var_18] eax +
call free  +
mov esi [edi+0Ch] +
test esi esi +
jz loc_406C1E  +
mov eax [esi] +
test eax eax +
jz loc_406C16  +
mov edx [eax+4] +
test edx edx +
jz loc_406C25  +
xor edx edx +
xor ebx ebx +
jmp loc_406BFC  +
cmp ebx [eax+4] +
jnb loc_406C25  +
mov eax [eax+edx*4+8] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov esi [edi+0Ch] +
mov edx ebx +
mov eax [esi] +
test eax eax +
jnz loc_406BF7  +
mov [esp+18h+var_18] esi +
call sub_480FE0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_406C40  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi] 0 +
jmp loc_406C16  +
mov dword ptr [eax+4] 0 +
jmp loc_406C16  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strlen  +
add eax ebx +
cmp ebx eax +
jnz loc_406C74  +
jmp loc_406C7D  +
cmp dl 2Fh +
jz loc_406C7D  +
sub eax 1 +
cmp ebx eax +
jz loc_406C7D  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_406C68  +
mov [esp+18h+var_18] eax +
mov ds:dword_4D91A0 eax +
call sub_452E70  +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov eax [esp+20h] +
mov esi [ebx] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_45A2F0  +
cmp [ebx] esi +
jz loc_406CC6  +
mov ds:byte_4D7264 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 28h +
call sub_420340  +
call sub_420390  +
call sub_419710  +
mov [esp+28h+var_24] offset unk_4D7740 +
mov [esp+28h+var_28] offset unk_4D8400 +
call sub_419750  +
lea eax [ebx+8] +
add ebx 4 +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] 80000h +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_41CDD0  +
add esp 28h +
pop ebx  +
retn 8  +
***
sub esp 2Ch +
mov edi offset off_48EA44 +
push esi  +
mov esi offset a_MmcuAvr2MmcuA +
push ebx  +
mov ebx 0EBh +
sub esp 2Ch +
mov [esp+34h+var_24] offset loc_425BE0 +
mov [esp+34h+var_28] offset loc_425BA0 +
mov [esp+34h+var_2C] 0 +
mov [esp+34h+var_30] 0 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_459280  +
mov ebp ds:dword_4D718C +
jmp loc_406EE2  +
mov [esp+34h+var_2C] ebx +
add edi 4 +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] ebp +
call memcpy  +
mov esi [edi-4] +
add ebx ds:dword_4D718C +
test esi esi +
mov ebp ebx +
mov ds:dword_4D718C ebx +
jz loc_406F05  +
mov [esp+34h+var_34] esi +
call strlen  +
mov ebx eax +
mov eax ds:dword_4D7190 +
sub eax ebp +
cmp ebx eax +
jbe loc_406EB0  +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov ebp ds:dword_4D718C +
jmp loc_406EB0  +
cmp ds:dword_4D7190 ebx +
jz loc_407270  +
lea eax [ebp+1] +
mov ds:dword_4D718C eax +
mov byte ptr [ebp+0] 0 +
mov eax ds:dword_4D7188 +
mov edi ds:dword_4D718C +
cmp edi eax +
jz loc_407240  +
mov edx ds:dword_4D7198 +
mov ecx ds:dword_4D7184 +
add edi edx +
not edx  +
and edi edx +
mov edx ds:dword_4D7190 +
mov ebx edi +
sub ebx ecx +
mov ds:dword_4D718C edi +
mov esi edx +
sub esi ecx +
cmp ebx esi +
jbe loc_406F62  +
mov ds:dword_4D718C edx +
mov edi edx +
mov ds:dword_4D7188 edi +
mov ebx 14h +
mov esi offset aMmcuAvr2MmcuAv +
mov ds:dword_4D7168 eax +
mov ebp offset off_48DAC4 +
jmp loc_406FB8  +
mov [esp+34h+var_30] esi +
add ebp 4 +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_2C] ebx +
call memcpy  +
mov edi ds:dword_4D718C +
mov esi [ebp-4] +
add edi ebx +
test esi esi +
mov ds:dword_4D718C edi +
jz loc_406FD6  +
mov [esp+34h+var_34] esi +
call strlen  +
mov edx ds:dword_4D7190 +
mov ebx eax +
sub edx edi +
cmp edx ebx +
jnb loc_406F80  +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov edi ds:dword_4D718C +
jmp loc_406F80  +
cmp ds:dword_4D7190 edi +
jz loc_407290  +
lea eax [edi+1] +
mov ds:dword_4D718C eax +
mov byte ptr [edi] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407250  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_407208  +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D7164 ecx +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407260  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4071F0  +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D715C ecx +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407220  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
ja loc_4071C0  +
sub edx eax +
cmp edx 8 +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7158 ecx +
jbe loc_4071D2  +
mov dword ptr [eax] 75636D6Dh +
mov dword ptr [eax+4] 7276613Dh +
mov byte ptr [eax+8] 32h +
mov eax ds:dword_4D718C +
add eax 9 +
cmp ds:dword_4D7190 eax +
mov ds:dword_4D718C eax +
jz loc_4072B0  +
lea edx [eax+1] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov ecx ds:dword_4D7188 +
mov eax ds:dword_4D718C +
cmp eax ecx +
jz loc_407230  +
mov edx ds:dword_4D7198 +
mov ebx ds:dword_4D7184 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4071AB  +
mov ds:dword_4D718C edx +
mov eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7160 ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4D718C edx +
mov ds:dword_4D7188 edx +
mov ds:dword_4D7158 ecx +
mov [esp+34h+var_30] 9 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
jmp loc_407131  +
cmp eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D715C ecx +
jnz loc_4070CF  +
jmp loc_4070B6  +
cmp eax edx +
mov ds:dword_4D7188 eax +
mov ds:dword_4D7164 ecx +
jnz loc_407058  +
jmp loc_40703F  +
or ds:byte_4D71A8 2 +
jmp loc_4070EE  +
or ds:byte_4D71A8 2 +
jmp loc_40717A  +
or ds:byte_4D71A8 2 +
jmp loc_406F30  +
or ds:byte_4D71A8 2 +
jmp loc_407000  +
or ds:byte_4D71A8 2 +
jmp loc_407077  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov ebp ds:dword_4D718C +
jmp loc_406F11  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov edi ds:dword_4D718C +
jmp loc_406FE2  +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
jmp loc_40715B  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [ebp+arg_0] +
mov [esp+38h+var_28] offset loc_425BE0 +
mov [esp+38h+var_2C] offset loc_425BA0 +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_459280  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 0Bh +
jbe loc_4073D0  +
mov dword ptr [eax] 4C4C4F43h +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 3D434347h +
mov eax ds:dword_4D71CC +
mov [esp+38h+var_38] esi +
lea edi [eax+0Ch] +
mov ds:dword_4D71CC edi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax edi +
cmp ebx eax +
ja loc_4073F0  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov ecx ds:dword_4D71C8 +
add eax ebx +
cmp eax ecx +
jz loc_407410  +
mov edx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi edx +
sub edi ebx +
cmp esi edi +
jbe loc_4073B0  +
mov ds:dword_4D71CC edx +
mov eax edx +
mov [ebp+arg_0] ecx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4050E0  +
mov [esp+38h+var_34] 0Ch +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_40731E  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] offset unk_4D71C0 +
call sub_4592E0  +
mov edi ds:dword_4D71CC +
jmp loc_40735A  +
or ds:byte_4D71E8 2 +
jmp loc_40737F  +
***
mov eax ds:dword_4D7110 +
test eax eax +
jz loc_407430  +
retn   +
push ebp  +
mov ecx 1 +
mov ebp esp +
mov edx offset aLtoWrapper +
push edi  +
mov eax offset unk_483514 +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+3Ch+var_3C] 0 +
call sub_4038D0  +
test eax eax +
jz loc_40755F  +
call sub_401600  +
mov [esp+3Ch+var_2C] offset loc_425BE0 +
mov [esp+3Ch+var_30] offset loc_425BA0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
mov off_483560 eax +
call sub_459280  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71D0 +
sub edx eax +
cmp edx 13h +
jbe loc_407588  +
mov dword ptr [eax] 4C4C4F43h +
mov edi off_483560 +
mov dword ptr [eax+4] 5F544345h +
mov dword ptr [eax+8] 5F4F544Ch +
mov dword ptr [eax+0Ch] 50415257h +
mov dword ptr [eax+10h] 3D524550h +
mov eax ds:dword_4D71CC +
mov [esp+3Ch+var_3C] edi +
lea esi [eax+14h] +
mov ds:dword_4D71CC esi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax esi +
cmp ebx eax +
ja loc_407567  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71C8 +
add eax ebx +
cmp eax edx +
jz loc_4075A6  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71D0 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D71C4 +
mov edi ebx +
mov esi eax +
mov ds:dword_4D71CC eax +
sub esi ecx +
sub edi ecx +
cmp esi edi +
jbe loc_40754A  +
mov ds:dword_4D71CC ebx +
mov eax ebx +
mov [esp+3Ch+var_3C] edx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
call sub_4592E0  +
mov edi off_483560 +
mov esi ds:dword_4D71CC +
jmp loc_4074F4  +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
jmp loc_4074A8  +
or ds:byte_4D71E8 2 +
jmp loc_407519  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx ds:dword_4D722C +
test edx edx +
jz loc_407731  +
cmp byte ptr [edx] 0 +
mov eax edx +
jz loc_4076B0  +
mov eax ds:dword_4D71CC +
mov edi edx +
mov ecx ds:dword_4D71D0 +
sub ecx eax +
cmp ecx 14h +
jbe loc_407701  +
mov dword ptr [eax] 4C46464Fh +
mov dword ptr [eax+4] 5F44414Fh +
mov dword ptr [eax+8] 47524154h +
mov dword ptr [eax+0Ch] 4E5F5445h +
mov dword ptr [eax+10h] 53454D41h +
mov byte ptr [eax+14h] 3Dh +
mov eax ds:dword_4D71CC +
mov [esp+28h+var_28] edi +
lea esi [eax+15h] +
mov ds:dword_4D71CC esi +
call strlen  +
lea ebx [eax+1] +
mov eax ds:dword_4D71D0 +
sub eax esi +
cmp ebx eax +
ja loc_4076E0  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
call memcpy  +
mov eax ds:dword_4D71CC +
mov edx ds:dword_4D71C8 +
add eax ebx +
cmp eax edx +
jz loc_407725  +
mov ecx ds:dword_4D71D8 +
mov ebx ds:dword_4D71C4 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D71D0 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D71CC eax +
mov edi ecx +
sub edi ebx +
cmp esi edi +
ja loc_4076D0  +
mov [esp+28h+var_28] edx +
mov ecx offset byte_4D7268 +
mov ds:dword_4D71C8 eax +
call sub_4050E0  +
mov eax ds:dword_4D722C +
sub esp 4 +
mov [esp+28h+var_28] eax +
call free  +
mov ds:dword_4D722C 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4D71CC ecx +
mov eax ecx +
jmp loc_407696  +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] offset unk_4D71C0 +
call sub_4592E0  +
mov edi ds:dword_4D722C +
mov esi ds:dword_4D71CC +
jmp loc_407648  +
mov [esp+28h+var_24] 15h +
mov [esp+28h+var_28] offset unk_4D71C0 +
call sub_4592E0  +
mov eax ds:dword_4D71CC +
mov edi ds:dword_4D722C +
jmp loc_4075FA  +
or ds:byte_4D71E8 2 +
jmp loc_40766D  +
xor eax eax +
jmp loc_4076B0  +
***
mov edi ecx +
sub esp 18h +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax ds:dword_4D70E0 +
test eax eax +
jg loc_4079E3  +
jmp loc_407A30  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_407A30  +
mov eax ds:dword_4D70E4 +
mov esi ebx +
shl esi 4 +
add eax esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4079D8  +
mov eax [eax] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_407970  +
sub esp 4 +
test eax eax +
jz loc_407A38  +
mov edx ds:dword_4D70E4 +
add ebx 1 +
mov edx [edx+esi] +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_28] offset aUnrecognizedCo +
mov [esp+28h+var_24] edx +
call sub_4256B0  +
cmp ebx ds:dword_4D70E0 +
jl loc_4079E3  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D70E4 +
mov eax [eax+esi] +
mov [esp+28h+var_28] offset aUnrecognized_0 +
mov [esp+28h+var_24] eax +
call sub_4256B0  +
jmp loc_4079D8  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp ds:dword_4D907C +
test ebp ebp +
jz loc_407AF7  +
mov eax ds:dword_4D7130 +
mov edx offset unk_489040 +
test eax eax +
jz loc_407B94  +
mov [esp+4Ch+var_44] edx +
xor ebp ebp +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aInstallSS +
call sub_47D5B0  +
xor ecx ecx +
mov edx offset unk_489040 +
mov [esp+4Ch+var_4C] 0 +
mov eax offset unk_483514 +
call sub_403760  +
mov [esp+4Ch+var_4C] offset aProgramsS +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
xor ecx ecx +
mov edx offset unk_489040 +
mov [esp+4Ch+var_4C] 1 +
mov eax offset unk_483508 +
call sub_403760  +
mov [esp+4Ch+var_4C] offset aLibrariesS +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx ds:dword_4D9064 +
test ebx ebx +
jz loc_407B38  +
mov edx ebx +
mov ecx 4 +
mov [esp+4Ch+var_4C] 1 +
mov eax offset unk_483508 +
call sub_4038D0  +
mov [esp+4Ch+var_4C] offset aS_1 +
test eax eax +
cmovz eax ebx +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_4D9078 +
test edx edx +
jz loc_407BC1  +
mov eax ds:dword_4D7250 +
test eax eax +
jz loc_407B5B  +
mov edi offset aLd_0 +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_407BA4  +
mov [esp+4Ch+var_4C] 0 +
mov ecx 1 +
mov eax offset unk_483514 +
call sub_4038D0  +
mov [esp+4Ch+var_4C] offset aS_1 +
test eax eax +
cmovz eax ds:dword_4D9078 +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_4D7138 +
mov eax offset aHomeJenkinsM_0 +
jmp loc_407A87  +
mov [esp+4Ch+var_4C] edx +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
call sub_4530C0  +
mov ds:dword_4D9078 eax +
mov edx eax +
jmp loc_407B5B  +
mov eax ds:dword_4D906C +
test eax eax +
jnz loc_407C1D  +
mov edx ds:dword_4D9068 +
test edx edx +
jz loc_407BF6  +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_407E42  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_1 +
call sub_47D5B0  +
jmp loc_407AED  +
mov eax ds:dword_4D9074 +
test eax eax +
jz loc_407DDB  +
mov eax ds:dword_4D7120 +
test eax eax +
jnz loc_407BE1  +
mov [esp+4Ch+var_4C] offset asc_489B09 +
call sub_47D5B0  +
jmp loc_407AED  +
mov eax ds:dword_4D7168 +
mov [esp+4Ch+var_18] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_10] ebp +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+var_2C] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40883F  +
cmp dl 0Ah +
jz loc_407E22  +
mov eax [esp+4Ch+var_2C] +
cmp dl 20h +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_28] +
jnz loc_407C70  +
jmp loc_40885D  +
test cl cl +
jz loc_407DBD  +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 20h +
jnz loc_407C68  +
cmp dl 2Eh +
mov [esp+4Ch+var_28] eax +
mov [esp+4Ch+var_24] 0 +
jz loc_407E93  +
mov eax ds:dword_4D715C +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_30] eax +
mov eax [esp+4Ch+var_30] +
movzx eax byte ptr [eax] +
test al al +
jz loc_40886A  +
cmp al 0Ah +
mov edx 1 +
jz loc_407E18  +
cmp al 3Bh +
jz loc_407F03  +
test al al +
jz loc_408010  +
test edx edx +
nop   +
lea esi [esi+0] +
jz loc_407DA4  +
cmp al 20h +
mov edi [esp+4Ch+var_30] +
jnz loc_407CF6  +
nop   +
jmp loc_407F92  +
cmp al 20h +
jz loc_407D00  +
test al al +
nop   +
lea esi [esi+0] +
jz loc_408010  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 3Bh +
jnz loc_407CE5  +
mov [esp+4Ch+var_1D] al +
mov eax [esp+4Ch+var_28] +
mov ebp edi +
sub ebp [esp+4Ch+var_30] +
add eax 1 +
movzx ebx byte ptr [eax] +
cmp bl 3Bh +
jz loc_407DB9  +
test bl bl +
jz loc_407DBD  +
cmp bl 20h +
jz loc_407DAB  +
mov esi eax +
jmp loc_407D3F  +
cmp bl 20h +
jz loc_407D4A  +
test bl bl +
jz loc_407DBD  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jnz loc_407D32  +
mov edx esi +
sub edx eax +
mov ecx [esp+4Ch+var_30] +
cmp edx ebp +
cmovl edx ebp +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call strncmp  +
test eax eax +
jz loc_407D83  +
mov eax [esp+4Ch+var_30] +
mov edx ebp +
call sub_401DB0  +
test eax eax +
jnz loc_407D83  +
cmp bl 20h +
jz loc_407DB1  +
mov eax esi +
jmp loc_407D11  +
mov edx 1 +
xor eax eax +
cmp [esp+4Ch+var_1D] 20h +
setz al  +
add eax edi +
mov [esp+4Ch+var_30] eax +
mov eax [esp+4Ch+var_30] +
movzx eax byte ptr [eax] +
jmp loc_407CB9  +
add [esp+4Ch+var_30] 1 +
jmp loc_407D98  +
xor edx edx +
mov esi eax +
jmp loc_407D4E  +
lea eax [esi+1] +
jmp loc_407D11  +
xor edx edx +
jmp loc_407D88  +
mov eax ds:dword_4D7168 +
mov [esp+4Ch+var_48] offset aMultilibSele_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_4C] eax +
call sub_425A80  +
mov eax ds:dword_4D9080 +
test eax eax +
jz loc_407E2C  +
mov eax ds:dword_4D724C +
test eax eax +
jz loc_407AED  +
mov edx ds:dword_4D7244 +
test edx edx +
jz loc_407BE1  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aSS_3 +
call sub_47D5B0  +
jmp loc_407AED  +
add [esp+4Ch+var_30] 1 +
jmp loc_407C9D  +
add [esp+4Ch+var_2C] 1 +
jmp loc_407C3A  +
mov eax ds:dword_4D9070 +
test eax eax +
jz loc_407E55  +
mov eax ds:dword_4D7124 +
test eax eax +
jnz loc_407BE1  +
mov [esp+4Ch+var_4C] offset a_ +
xor ebp ebp +
call sub_47D5B0  +
jmp loc_407AED  +
mov eax ds:dword_4D9084 +
test eax eax +
jz loc_407EB4  +
mov eax off_483540 +
cmp byte ptr [eax] 0 +
jz loc_408848  +
mov edx ds:dword_4D7240 +
mov eax offset unk_489040 +
mov [esp+4Ch+var_4C] offset aS_1 +
test edx edx +
cmovnz eax edx +
xor ebp ebp +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
jmp loc_407AED  +
mov eax [esp+4Ch+var_2C] +
cmp byte ptr [eax+1] 3Ah +
jnz loc_407C90  +
cmp byte ptr [eax+2] 3Ah +
setnz al  +
movzx eax al +
mov [esp+4Ch+var_24] eax +
jmp loc_407C90  +
mov eax ds:dword_4D7260 +
test eax eax +
jnz loc_4080C9  +
mov esi ds:dword_4D725C +
test esi esi +
jnz loc_40802D  +
mov ecx ds:dword_4D9094 +
mov ebp 1 +
test ecx ecx +
jz loc_407AED  +
mov eax ds:_iob +
add eax 40h +
call sub_401A70  +
mov edx ds:dword_4D7030 +
xor eax eax +
test edx edx +
setnz al  +
mov ebp eax +
jmp loc_407AED  +
test edx edx +
jz loc_407E18  +
mov ebp [esp+4Ch+var_28] +
mov eax [esp+4Ch+var_1C] +
add ebp 1 +
mov [esp+4Ch+var_2C] eax +
mov edi [esp+4Ch+var_18] +
mov [esp+4Ch+var_24] 1 +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jz loc_407F9C  +
test al al +
jz loc_407DBD  +
mov ebx [esp+4Ch+var_24] +
test ebx ebx +
jnz loc_407F8D  +
xor ebx ebx +
cmp al 21h +
setnz bl  +
jnz loc_407F75  +
cmp al 20h +
jnz loc_407F67  +
jmp loc_407F8D  +
add ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jz loc_407F89  +
cmp al 20h +
jz loc_407F89  +
test al al +
jz loc_407DBD  +
test ebx ebx +
jz loc_407F50  +
mov [esp+4Ch+var_4C] eax +
call putchar  +
jmp loc_407F50  +
mov [esp+4Ch+var_4C] 40h +
call putchar  +
movsx eax byte ptr [ebp+0] +
cmp al 3Bh +
jnz loc_407F5B  +
cmp al 20h +
jnz loc_407F26  +
add ebp 1 +
jmp loc_407F26  +
mov [esp+4Ch+var_1D] 20h +
jmp loc_407D04  +
mov ecx [esp+4Ch+var_24] +
test ecx ecx +
jnz loc_407FF1  +
mov ebx off_4835B4 +
test ebx ebx +
jz loc_407FE5  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_407FE5  +
mov edx 1 +
cmp al 20h +
jz loc_408009  +
test edx edx +
jz loc_407FCE  +
mov [esp+4Ch+var_4C] 40h +
call putchar  +
movsx eax byte ptr [ebx] +
mov [esp+4Ch+var_4C] eax +
call putchar  +
xor edx edx +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_407FBA  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_18] edi +
mov [esp+4Ch+var_1C] eax +
lea eax [ebp+1] +
mov [esp+4Ch+var_2C] eax +
jmp loc_407C3A  +
mov edx 1 +
jmp loc_407FDB  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] offset aMultilibExcl_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_4C] eax +
call sub_425A80  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_40] offset byte_4C680B +
mov [esp+4Ch+var_44] offset aGcc +
mov [esp+4Ch+var_4C] offset aSSS_1 +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
mov [esp+4Ch+var_48] offset aC +
mov [esp+4Ch+var_4C] offset aCopyrightS2017 +
call sub_47D5B0  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 98h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aThisIsFreeSoft +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov ebx ds:dword_4D9094 +
test ebx ebx +
jz loc_407AED  +
mov eax ds:_iob +
mov [esp+4Ch+var_4C] 0Ah +
add eax 20h +
mov [esp+4Ch+var_48] eax +
call fputc  +
mov eax ds:_iob +
add eax 20h +
mov [esp+4Ch+var_4C] eax +
call fflush  +
jmp loc_407ECF  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_4C] offset aUsageSOptionsF +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 9 +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aOptions +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 46h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPassExitCodesE +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 35h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aHelpDisplayThi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 49h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aTargetHelpDisp +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 5Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aHelpCommonOpti +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDisplaySpecifi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:dword_4D9094 +
test eax eax +
jnz loc_4081FF  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 46h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aUseVHelpToDisp +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 41h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aVersionDisplay +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpspecsDispl +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 40h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpversionDis +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 44h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aDumpmachineDis +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 52h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSearchDir +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintLibgccFil +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 43h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintFileNameL +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Fh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintProgNameP +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 8Ch +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiarch +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiDire +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 90h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiLibD +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 47h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintMultiOsDi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 43h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSysrootDi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPrintSysrootHe +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Fh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWaOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 52h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWpOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Ch +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aWlOptionsPassC +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXassemblerArgP +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXpreprocessorA +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 38h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXlinkerArgPass +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSaveTempsDoNot +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 3Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSaveTempsArgDo +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 89h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aNoCanonicalPre +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPipeUsePipesRa +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aTimeTimeTheExe +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 50h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSpecsFileOverr +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Dh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aStdStandardAss +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 77h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSysrootDirecto +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Bh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aBDirectoryAddD +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 49h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aVDisplayThePro +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 51h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aLikeVButOption +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 4Eh +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aEPreprocessOnl +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSCompileOnlyDo +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 42h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aCCompileAndAss +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 39h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aOFilePlaceTheO +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 45h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPieCreateAPosi +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 34h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aSharedCreateAS +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 137h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aXLanguageSpeci +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:dword_4D91A0 +
mov [esp+4Ch+var_4C] offset aOptionsStartin +
mov [esp+4Ch+var_48] eax +
call sub_47D5B0  +
mov edi ds:dword_4D9094 +
test edi edi +
jz loc_40893B  +
mov eax ds:_iob +
mov [esp+4Ch+var_4C] 0Ah +
add eax 20h +
mov [esp+4Ch+var_48] eax +
call fputc  +
mov eax ds:_iob +
add eax 20h +
mov [esp+4Ch+var_4C] eax +
call fflush  +
jmp loc_407EC1  +
mov ebp [esp+4Ch+var_10] +
jmp loc_407AED  +
mov eax ds:dword_4D9188 +
mov [esp+4Ch+var_48] offset aNotConfiguredW +
mov [esp+4Ch+var_4C] eax +
call sub_425A80  +
mov [esp+4Ch+var_24] 0 +
jmp loc_407C90  +
mov edi [esp+4Ch+var_24] +
test edi edi +
jnz loc_407F0B  +
mov esi [esp+4Ch+var_1C] +
mov edi [esp+4Ch+var_28] +
sub edi [esp+4Ch+var_2C] +
test esi esi +
jz loc_408890  +
cmp edi [esp+4Ch+var_18] +
jz loc_408962  +
mov eax [esp+4Ch+var_28] +
lea ebp [eax+1] +
mov esi ebp +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jz loc_4088FD  +
test bl bl +
jz loc_407DBD  +
cmp bl 21h +
jz loc_4088F0  +
cmp bl 20h +
mov eax esi +
jnz loc_4088C6  +
jmp loc_4088D5  +
cmp bl 20h +
jz loc_4088D1  +
test bl bl +
nop   +
jz loc_407DBD  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Bh +
jnz loc_4088B7  +
test eax eax +
jz loc_4088E2  +
mov edx esi +
sub edx eax +
call sub_401DB0  +
test eax eax +
jnz loc_4088F4  +
cmp bl 20h +
jnz loc_408899  +
add esi 1 +
jmp loc_408899  +
xor eax eax +
jmp loc_4088C6  +
mov [esp+4Ch+var_18] edi +
jmp loc_407F1A  +
mov ecx [esp+4Ch+var_28] +
mov ebx [esp+4Ch+var_2C] +
cmp ebx ecx +
jnb loc_40892A  +
movsx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_408919  +
jmp loc_40892A  +
movsx eax byte ptr [ebx] +
cmp al 3Ah +
jz loc_40892A  +
mov [esp+4Ch+var_4C] eax +
add ebx 1 +
call putchar  +
cmp ebx [esp+4Ch+var_28] +
jnz loc_408912  +
mov [esp+4Ch+var_4C] 3Bh +
call putchar  +
jmp loc_407F26  +
mov [esp+4Ch+var_4C] offset aForBugReportin +
xor ebp ebp +
call sub_47D5B0  +
mov [esp+4Ch+var_48] offset aHttpsGcc_gnu_o +
mov [esp+4Ch+var_4C] offset aS_ +
call sub_47D5B0  +
jmp loc_407AED  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_1C] +
mov [esp+4Ch+var_4C] eax +
call sub_453240  +
test eax eax +
jnz loc_408890  +
mov ebp [esp+4Ch+var_28] +
add ebp 1 +
jmp loc_407F1A  +
***
push esi  +
sub esp 1Ch +
call sub_4244B0  +
test al al +
jnz loc_408B90  +
call sub_403C10  +
mov eax ds:dword_4D7260 +
test eax eax +
jz loc_408B8A  +
mov [esp+1Ch+var_1C] offset aForBugReportin +
call sub_47D5B0  +
mov [esp+1Ch+var_18] offset aHttpsGcc_gnu_o +
mov [esp+1Ch+var_1C] offset aS_1 +
call sub_47D5B0  +
add esp 1Ch +
retn   +
call sub_403BE0  +
jmp loc_408B5C  +
***
mov eax ds:dword_4D70F8 +
test eax eax +
jz loc_408BB0  +
mov eax 2 +
retn   +
***
jmp sub_403C70  +
***
sub esp 1Ch +
push esi  +
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi ds:dword_4D70A0 +
test esi esi +
jz loc_4096A2  +
mov edi offset asc_4892E9 +
mov ecx 2 +
cmps   +
mov edx eax +
jz loc_4096A2  +
mov eax [eax] +
test eax eax +
jz loc_4096A2  +
mov [ebp+var_40] 0 +
xor ebx ebx +
mov [ebp+var_44] 0FFFFFFFFh +
mov [ebp+var_3C] edx +
jmp loc_409656  +
mov edi offset aFtimeReport +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_4096A2  +
mov eax [ebp+var_3C] +
lea esi [ebx+1] +
lea ecx ds:0[esi*4] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_409698  +
mov ebx esi +
mov esi eax +
mov ecx 3 +
mov edi offset aE +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4096A2  +
cmp byte ptr [eax] 2Dh +
jz loc_4096B0  +
mov ecx 7 +
mov edi offset aQuiet +
mov esi eax +
cmps   +
setnbe dl  +
setb cl  +
cmp dl cl +
jnz loc_409630  +
mov [ebp+var_40] 1 +
jmp loc_409640  +
mov eax [ebp+var_40] +
mov edx [ebp+var_3C] +
test eax eax +
jnz loc_4096C4  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [eax+1] 6Fh +
jnz loc_409677  +
cmp [ebp+var_44] 0FFFFFFFFh +
jnz loc_4096A2  +
mov [ebp+var_44] ebx +
jmp loc_409640  +
cmp [ebp+var_44] 0FFFFFFFFh +
jz loc_4096A2  +
xor eax eax +
mov [ebp+eax+var_30] 0 +
add eax 4 +
cmp eax 18h +
jb loc_4096CC  +
lea edi ds:14h[ebx*4] +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
mov [ebp+var_3C] ecx +
call sub_470CF0  +
sub esp eax +
lea esi [esp+68h+var_4D] +
and esi 0FFFFFFF0h +
lea eax [edi-0Ch] +
mov [esp+68h+var_64] edx +
mov [esp+68h+var_60] eax +
mov [esp+68h+var_68] esi +
mov [ebp+var_4D+1] eax +
call memcpy  +
mov edx [ebp+var_44] +
lea eax [ebx+3] +
mov ecx [ebp+var_3C] +
mov [ebp+var_40] eax +
lea eax [esi+edi-8] +
mov [ebp-50h] eax +
shl edx 2 +
mov dword ptr [esi+ecx] offset aFrandomSeed0 +
mov dword ptr [esi+edi-0Ch] offset aFdumpNoaddr +
mov dword ptr [eax] 0 +
lea eax [esi+edx] +
mov ecx [eax] +
cmp byte ptr [ecx+2] 0 +
jnz loc_4097F6  +
mov dword ptr [esi+edx+4] offset asc_4892E9 +
xor ebx ebx +
mov [esp+68h+var_68] offset a_out +
call sub_45C290  +
mov [esp+68h+var_68] offset a_err +
mov [ebp+ebx*4+var_30] eax +
call sub_45C290  +
mov edx [ebp+ebx*4+var_30] +
mov ecx eax +
mov [ebp+ebx*4+var_24] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] eax +
mov eax esi +
call sub_409490  +
cmp eax 2 +
jnz loc_409932  +
add ebx 1 +
cmp ebx 3 +
jnz loc_409754  +
mov ebx [ebp+var_30] +
mov edx [ebp+var_2C] +
mov eax ebx +
call sub_4028C0  +
test al al +
jnz loc_409801  +
mov eax ds:_iob +
mov [esp+68h+var_64] offset aTheBugIsNotRep +
add eax 40h +
mov [esp+68h+var_68] eax +
call sub_4244D0  +
lea esi [ebp+var_30] +
lea edi [ebp+var_18] +
jmp loc_4097D4  +
mov ebx [esi] +
test ebx ebx +
jz loc_4097EA  +
mov ebx [esi] +
mov [esp+68h+var_68] ebx +
call _unlink  +
mov [esp+68h+var_68] ebx +
call free  +
add esi 4 +
cmp esi edi +
jnz loc_4097D2  +
jmp loc_4096A2  +
mov dword ptr [eax] offset aO +
jmp loc_409752  +
mov edx [ebp+var_20] +
mov eax [ebp+var_24] +
call sub_4028C0  +
test al al +
jz loc_4097B2  +
mov eax [ebp+var_28] +
mov edx eax +
mov edi eax +
mov [ebp+var_48] eax +
mov eax [ebp+var_1C] +
call sub_402A80  +
mov [esp+68h+var_64] 0Ah +
mov [esp+68h+var_68] edi +
call _open_0  +
test eax eax +
mov [ebp+var_44] eax +
js loc_4097CA  +
mov eax [ebp+var_44] +
xor edi edi +
mov [esp+68h+var_60] 3 +
mov [esp+68h+var_64] offset asc_48AE8C +
mov [esp+68h+var_68] eax +
call _write  +
mov [ebp+var_54] ebx +
mov ebx [ebp+var_44] +
mov [ebp+var_3C] esi +
nop   +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_64] offset asc_4890EA +
mov [esp+68h+var_68] ebx +
call _write  +
mov eax [ebp+var_3C] +
mov esi [eax+edi*4] +
add edi 1 +
mov [esp+68h+var_68] esi +
call strlen  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_60] eax +
call _write  +
cmp [ebp+var_40] edi +
jg loc_409860  +
mov edi [ebp+var_44] +
mov [esp+68h+var_60] 2 +
mov esi [ebp+var_3C] +
mov [esp+68h+var_64] offset asc_48AE90 +
mov ebx [ebp+var_54] +
mov [esp+68h+var_68] edi +
call _write  +
mov [esp+68h+var_68] edi +
call _close_0  +
mov eax [ebp-50h] +
mov edx [ebp+var_48] +
mov dword ptr [eax] offset aE +
mov eax [ebp+var_4D+1] +
mov ecx edx +
mov dword ptr [esi+eax+8] 0 +
mov eax esi +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] 0 +
call sub_409490  +
cmp eax 1 +
jnz loc_4097CA  +
mov eax ds:_iob +
mov edi [ebp+var_48] +
mov [esp+68h+var_64] offset aPreprocessedSo +
add eax 40h +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_60] edi +
call sub_4244D0  +
mov [esp+68h+var_68] edi +
call free  +
mov [ebp+var_28] 0 +
jmp loc_4097CA  +
mov eax ds:_iob +
mov [esp+68h+var_64] offset aTheBugIsNotRep +
add eax 40h +
mov [esp+68h+var_68] eax +
call sub_4244D0  +
mov ebx [ebp+var_30] +
jmp loc_4097CA  +
***
push edi  +
push edi  +
sub esp 1Ch +
mov edx ds:dword_4D7114 +
test edx edx +
jz loc_40C004  +
mov dword ptr [edx+4] 0 +
xor edx edx +
xor ecx ecx +
mov ds:dword_4D7080 0 +
mov ds:dword_4D707C 0 +
mov ds:dword_4D7078 0 +
mov ds:dword_4D7074 0 +
mov ds:dword_4D7070 0 +
mov ds:dword_4D706C 0 +
mov ds:dword_4D7068 0 +
call sub_40A640  +
mov edx ds:dword_4D7080 +
test edx edx +
jz loc_40C06A  +
mov [esp+1Ch+var_10] eax +
call sub_4069B0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
test eax eax +
jz loc_40C1CC  +
mov eax [eax+4] +
test eax eax +
jz loc_40C1CC  +
mov eax [esi+8] +
xor ecx ecx +
mov edx 1 +
mov ebx 1 +
call sub_40A640  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
jmp loc_40C1C7  +
mov eax [esi+ebx*4+8] +
xor ecx ecx +
mov edx 1 +
add ebx 1 +
call sub_40A640  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
cmp [esi+4] ebx +
ja loc_40C1A6  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax ds:dword_4D70E4 +
shl ebp 4 +
add eax ebp +
test byte ptr [eax+8] 4 +
jnz loc_40C298  +
test edx edx +
jz loc_40C2C0  +
mov edi [eax+4] +
test edi edi +
jz loc_40C280  +
mov ebx [edi] +
test ebx ebx +
jz loc_40C280  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov eax ds:dword_4D7068 +
test eax eax +
jz loc_40C2B0  +
mov [esp+28h+var_28] ebx +
call strlen  +
test eax eax +
jz loc_40C2A0  +
sub eax 1 +
movzx edx byte ptr [ebx+eax] +
lea esi [ebx+eax] +
cmp dl 5Ch +
jz loc_40C2A0  +
cmp dl 2Fh +
jz loc_40C2A0  +
cmp dl 2Eh +
jnz loc_40C235  +
mov byte ptr [esi] 0 +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
mov byte ptr [esi] 2Eh +
mov eax ds:dword_4D7068 +
xor ecx ecx +
mov edx 1 +
call sub_40A640  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_40C212  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
mov byte ptr [eax+ebp+0Dh] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
jmp loc_40C266  +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_40A640  +
jmp loc_40C277  +
xor ecx ecx +
mov eax offset asc_4892E9 +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
xor ecx ecx +
mov edx 1 +
mov eax [eax+ebp] +
call sub_40A640  +
mov eax ds:dword_4D70E4 +
add eax ebp +
jmp loc_40C205  +
***
push esi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 6Ch +
mov [esp+74h+var_44] eax +
mov [esp+74h+var_3E] 0 +
mov byte ptr [esp+74h+var_58] 0 +
mov [esp+74h+var_3F] 1 +
mov byte ptr [esp+74h+var_54] 0 +
mov byte ptr [esp+74h+var_5C] 0 +
mov [esp+74h+var_40] 0 +
mov [esp+74h+var_48] 0 +
mov [esp+74h+var_50] 0 +
mov byte ptr [esp+74h+var_15] 0 +
movzx eax byte ptr [edi] +
cmp al 20h +
jnz loc_40C8AB  +
nop   +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40C6F0  +
cmp al 20h +
jz loc_40C6F0  +
cmp al 21h +
mov byte ptr [esp+74h+var_64] 0 +
jz loc_40C9C1  +
movzx eax byte ptr [edi] +
cmp al 20h +
jnz loc_40C9D4  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40C716  +
cmp al 20h +
jz loc_40C716  +
cmp al 25h +
jz loc_40C984  +
cmp al 2Eh +
nop   +
jz loc_40C9F2  +
xor ebx ebx +
cmp al 2Ch +
mov byte ptr [esp+74h+var_60] 0 +
jz loc_40C8B8  +
mov esi edi +
jmp loc_40C753  +
add esi 1 +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:word_4D0720[edx+edx] 204h +
jnz loc_40C750  +
lea edx [eax-2Bh] +
cmp dl 3 +
jbe loc_40C750  +
cmp al 3Dh +
jz loc_40C750  +
cmp al 40h +
jz loc_40C750  +
xor ecx ecx +
cmp al 2Ah +
mov ebp esi +
jz loc_40C9E1  +
cmp al 20h +
jnz loc_40C9B4  +
lea esi [esi+0] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 9 +
jz loc_40C790  +
cmp al 20h +
jz loc_40C790  +
cmp al 3Ah +
jz loc_40C8C5  +
jle loc_40C97A  +
cmp al 7Ch +
nop   +
jz loc_40C8C5  +
cmp al 7Dh +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_5C] 0 +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_58] 0 +
jnz loc_40C955  +
test bl bl +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_64] 0 +
jnz loc_40C955  +
cmp edi esi +
jz loc_40C955  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40C955  +
movzx eax cl +
mov ecx 0FFFFFFFFh +
sub esi edi +
test eax eax +
mov [esp+74h+var_60] eax +
mov eax ecx +
cmovnz eax esi +
xor ebx ebx +
mov [esp+74h+var_5C] eax +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_40C87F  +
mov [esp+74h+var_64] edi +
mov [esp+74h+var_58] ebp +
mov ebp ebx +
mov eax [esp+74h+var_64] +
shl ebp 4 +
add ebp ds:dword_4D70E4 +
mov edi [ebp+0] +
mov [esp+74h+var_6C] esi +
mov [esp+74h+var_70] eax +
mov [esp+74h+var_74] edi +
call strncmp  +
test eax eax +
jnz loc_40C870  +
mov eax [esp+74h+var_60] +
test eax eax +
jnz loc_40C85A  +
cmp byte ptr [edi+esi] 0 +
jnz loc_40C870  +
mov edx [esp+74h+var_5C] +
mov eax ebx +
call sub_401870  +
test eax eax +
jz loc_40C870  +
mov byte ptr [ebp+0Eh] 1 +
lea esi [esi+0] +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jl loc_40C826  +
mov ebp [esp+74h+var_58] +
cmp byte ptr [ebp+0] 7Dh +
jz loc_40CB9B  +
lea edi [ebp+1] +
mov byte ptr [esp+74h+var_15] 0 +
movzx eax byte ptr [edi] +
mov byte ptr [esp+74h+var_58] 0 +
mov [esp+74h+var_40] 1 +
mov byte ptr [esp+74h+var_5C] 0 +
cmp al 20h +
jz loc_40C6F0  +
cmp al 9 +
jz loc_40C6F0  +
jmp loc_40C6FE  +
add edi 1 +
mov byte ptr [esp+74h+var_60] 1 +
jmp loc_40C745  +
cmp [esp+74h+var_40] 0 +
jnz loc_40C955  +
cmp edi esi +
setz byte ptr [esp+74h+var_5C]  +
test edi edi +
setnz dl  +
and dl byte ptr [esp+74h+var_5C] +
mov byte ptr [esp+74h+var_5C] dl +
jz loc_40CA04  +
cmp byte ptr [esp+74h+var_58] 0 +
jz loc_40C955  +
cmp byte ptr [esp+74h+var_54] 0 +
jnz loc_40C955  +
cmp al 7Ch +
jz loc_40C955  +
test bl bl +
nop   +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_64] 0 +
jnz loc_40C955  +
test cl cl +
jnz loc_40C955  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40C955  +
movzx eax [esp+74h+var_3E] +
mov [esp+74h+var_3F] 0 +
mov byte ptr [esp+74h+var_4C] 1 +
xor eax 1 +
mov byte ptr [esp+74h+var_54] al +
movzx ecx byte ptr [ebp+0] +
mov byte ptr [esp+74h+var_5C] 1 +
cmp cl 3Ah +
jz loc_40CB3B  +
cmp cl 7Dh +
lea edi [ebp+1] +
jz loc_40CD5A  +
cmp byte ptr [esp+74h+var_4C] 0 +
jz loc_40C6DB  +
mov ebp edi +
movsx eax byte ptr [ebp+0] +
mov [esp+74h+var_70] offset aBracedSpecQsIs +
mov [esp+74h+var_68] eax +
mov eax [esp+74h+var_44] +
mov [esp+74h+var_6C] eax +
mov eax ds:dword_4D9188 +
mov [esp+74h+var_74] eax +
call sub_425A80  +
cmp al 26h +
jz loc_40C7BE  +
jmp loc_40C955  +
xor ebx ebx +
cmp byte ptr [edi+1] 3Ah +
mov byte ptr [esp+74h+var_60] 0 +
jnz loc_40C745  +
lea eax [edi+2] +
xor esi esi +
lea edx [esp+74h+var_15] +
xor edi edi +
call sub_40C2F0  +
xor ecx ecx +
mov ebp eax +
movzx eax byte ptr [eax] +
cmp al 20h +
jz loc_40C790  +
cmp al 9 +
jz loc_40C790  +
jmp loc_40C79F  +
add edi 1 +
movzx eax byte ptr [edi] +
mov byte ptr [esp+74h+var_64] 1 +
cmp al 20h +
jz loc_40C716  +
cmp al 9 +
jz loc_40C716  +
jmp loc_40C724  +
lea ebp [esi+1] +
movzx eax byte ptr [esi+1] +
mov ecx 1 +
jmp loc_40C781  +
add edi 1 +
mov ebx 1 +
mov byte ptr [esp+74h+var_60] 0 +
jmp loc_40C745  +
cmp byte ptr [esp+74h+var_60] 0 +
jnz loc_40CA13  +
test bl bl +
jz loc_40CAAF  +
test cl cl +
jnz loc_40C955  +
mov [esp+74h+var_3F] 0 +
movzx edx [esp+74h+var_3E] +
movzx eax byte ptr [esp+74h+var_54] +
mov byte ptr [esp+74h+var_4C] 0 +
xor edx 1 +
xor eax 1 +
and dl al +
mov [esp+74h+var_3D] dl +
jz loc_40C92A  +
test edi edi +
jz loc_40CEB1  +
test bl bl +
jnz loc_40CAC2  +
cmp byte ptr [esp+74h+var_60] 0 +
jz loc_40CD64  +
mov eax ds:dword_4D7084 +
test eax eax +
jz loc_40CEBF  +
mov edx [eax] +
xor ebx ebx +
test edx edx +
jz loc_40CAA5  +
cmp byte ptr [edx] 0 +
jz loc_40CAA5  +
mov ecx esi +
sub ecx edi +
lea eax [edx+1] +
mov [esp+74h+var_6C] ecx +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] eax +
mov [esp+74h+var_5C] ecx +
mov [esp+74h+var_60] edx +
call strncmp  +
mov edx [esp+74h+var_60] +
mov ecx [esp+74h+var_5C] +
test eax eax +
jnz loc_40CAA5  +
cmp byte ptr [edx+ecx+1] 0 +
setz bl  +
mov byte ptr [esp+74h+var_15] bl +
mov byte ptr [esp+74h+var_5C] bl +
jmp loc_40CB01  +
movzx eax [esp+74h+var_3F] +
test cl cl +
cmovz eax ebx +
mov [esp+74h+var_3F] al +
jmp loc_40CA20  +
mov ebx ds:dword_4D708C +
test ebx ebx +
jz loc_40CF25  +
mov ecx esi +
sub ecx edi +
mov [esp+74h+var_6C] ecx +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] ebx +
mov [esp+74h+var_60] ecx +
call strncmp  +
xor edx edx +
mov ecx [esp+74h+var_60] +
test eax eax +
jnz loc_40CAF9  +
cmp byte ptr [ebx+ecx] 0 +
setz dl  +
mov byte ptr [esp+74h+var_15] dl +
mov byte ptr [esp+74h+var_5C] dl +
movzx eax byte ptr [esp+74h+var_5C] +
movzx ecx byte ptr [esp+74h+var_64] +
mov byte ptr [esp+74h+var_4C] 0 +
mov byte ptr [esp+74h+var_5C] 1 +
cmp cl al +
movzx ecx byte ptr [ebp+0] +
cmovz esi [esp+74h+var_48] +
cmovz edi [esp+74h+var_50] +
setnz byte ptr [esp+74h+var_54]  +
cmp cl 3Ah +
mov [esp+74h+var_48] esi +
mov [esp+74h+var_50] edi +
jnz loc_40C93C  +
movzx eax [esp+74h+var_3E] +
lea edi [ebp+1] +
xor ebx ebx +
movzx edx byte ptr [ebp+1] +
mov ecx 1 +
mov ebp edi +
mov esi 1 +
xor eax 1 +
and al byte ptr [esp+74h+var_54] +
jmp loc_40CB8D  +
cmp dl 7Dh +
jz loc_40CC00  +
cmp dl 3Bh +
jz loc_40CC50  +
cmp dl 25h +
jz loc_40CC60  +
test dl dl +
lea esi [esi+0] +
jz loc_40CEF1  +
movzx edx byte ptr [ebp+1] +
add ebp 1 +
cmp dl 7Bh +
jnz loc_40CB60  +
add ecx 1 +
movzx edx byte ptr [ebp+1] +
jmp loc_40CB8A  +
mov eax ds:dword_4D70E0 +
test eax eax +
jle loc_40CF1A  +
xor ebx ebx +
jmp loc_40CBB7  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_40CBE0  +
mov eax ebx +
shl eax 4 +
add eax ds:dword_4D70E4 +
cmp byte ptr [eax+0Eh] 0 +
jz loc_40CBAC  +
mov byte ptr [eax+0Eh] 0 +
xor edx edx +
mov eax ebx +
call sub_40C1E0  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jl loc_40CBB7  +
movzx ecx byte ptr [ebp+0] +
mov byte ptr [esp+74h+var_58] 0 +
mov byte ptr [esp+74h+var_5C] 0 +
mov [esp+74h+var_40] 1 +
mov byte ptr [esp+74h+var_4C] 0 +
jmp loc_40C93C  +
sub ecx 1 +
jnz loc_40CB86  +
mov esi 7Dh +
movzx edx byte ptr [ebp-1] +
cmp dl 20h +
jnz loc_40CF0A  +
mov edx ebp +
sub edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 9 +
jz loc_40CC19  +
cmp cl 20h +
jz loc_40CC19  +
test bl bl +
jnz loc_40CEE6  +
test al al +
mov ecx esi +
jnz loc_40CC78  +
cmp cl 3Bh +
jz loc_40CD25  +
mov byte ptr [esp+74h+var_5C] 1 +
jmp loc_40C93C  +
cmp ecx 1 +
jnz loc_40CB86  +
mov esi 3Bh +
jmp loc_40CC0A  +
movzx edx byte ptr [ebp+1] +
cmp dl 2Ah +
jnz loc_40CB8A  +
cmp ecx 1 +
cmovz ebx esi +
jmp loc_40CB8A  +
sub edx edi +
mov eax edi +
call sub_4015C0  +
test bl bl +
mov edi eax +
jz loc_40CEC6  +
mov eax ds:dword_4D70E0 +
mov esi [esp+74h+var_48] +
sub esi [esp+74h+var_50] +
test eax eax +
jle loc_40CD14  +
xor ebx ebx +
mov [esp+74h+var_64] ebp +
jmp loc_40CCAF  +
add ebx 1 +
cmp ebx ds:dword_4D70E0 +
jge loc_40CD10  +
mov eax [esp+74h+var_50] +
mov ebp ebx +
shl ebp 4 +
add ebp ds:dword_4D70E4 +
mov [esp+74h+var_6C] esi +
mov [esp+74h+var_70] eax +
mov eax [ebp+0] +
mov [esp+74h+var_74] eax +
call strncmp  +
test eax eax +
jnz loc_40CCA4  +
mov edx esi +
mov eax ebx +
call sub_401870  +
test eax eax +
jz loc_40CCA4  +
mov ecx [ebp+0] +
xor edx edx +
mov eax edi +
add ecx esi +
call sub_40A640  +
test eax eax +
js loc_40CED7  +
mov edx 1 +
mov eax ebx +
call sub_40C1E0  +
mov ds:dword_4D7068 0 +
jmp loc_40CCA4  +
mov ebp [esp+74h+var_64] +
mov [esp+74h+var_74] edi +
call free  +
movzx ecx byte ptr [ebp+0] +
jmp loc_40CC38  +
movzx eax byte ptr [esp+74h+var_54] +
lea edi [ebp+1] +
or [esp+74h+var_3E] al +
mov byte ptr [esp+74h+var_58] 1 +
mov [esp+74h+var_3F] 1 +
mov byte ptr [esp+74h+var_54] 0 +
mov byte ptr [esp+74h+var_5C] 1 +
mov [esp+74h+var_48] 0 +
mov [esp+74h+var_50] 0 +
jmp loc_40C948  +
mov eax edi +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax cl +
mov ebx 0FFFFFFFFh +
mov ecx eax +
mov [esp+74h+var_4C] eax +
mov eax esi +
sub eax edi +
test ecx ecx +
mov ecx ebx +
mov ebx ds:dword_4D70E4 +
cmovnz ecx eax +
mov [esp+74h+var_3C] ecx +
mov ecx ds:dword_4D70E0 +
mov [esp+74h+var_54] eax +
sub eax 1 +
mov [esp+74h+var_34] eax +
lea eax [edi+1] +
mov [esp+74h+var_60] 0 +
test ecx ecx +
mov [esp+74h+var_38] ecx +
mov [esp+74h+var_30] eax +
jg loc_40CDCA  +
jmp loc_40CEA3  +
add [esp+74h+var_60] 1 +
add ebx 10h +
mov eax [esp+74h+var_38] +
cmp [esp+74h+var_60] eax +
jz loc_40CEA3  +
mov edx [ebx] +
mov eax [esp+74h+var_54] +
mov [esp+74h+var_70] edi +
mov [esp+74h+var_74] edx +
mov [esp+74h+var_6C] eax +
mov [esp+74h+var_2C] edx +
call strncmp  +
mov edx [esp+74h+var_2C] +
test eax eax +
jnz loc_40CE13  +
mov eax [esp+74h+var_4C] +
test eax eax +
jnz loc_40CDFE  +
mov eax [esp+74h+var_54] +
cmp byte ptr [edx+eax] 0 +
jnz loc_40CE13  +
mov edx [esp+74h+var_3C] +
mov eax [esp+74h+var_60] +
call sub_401870  +
test eax eax +
jnz loc_40CE9A  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_40CDB4  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
cmp al 55h +
jz loc_40CE27  +
cmp al 44h +
jnz loc_40CDB4  +
cmp al [edi] +
jnz loc_40CDB4  +
mov eax [esp+74h+var_34] +
mov ecx [ecx] +
mov [esp+74h+var_28] edx +
mov [esp+74h+var_6C] eax +
mov eax [esp+74h+var_30] +
mov [esp+74h+var_74] ecx +
mov [esp+74h+var_2C] ecx +
mov [esp+74h+var_70] eax +
call strncmp  +
mov ecx [esp+74h+var_2C] +
mov edx [esp+74h+var_28] +
test eax eax +
jnz loc_40CDB4  +
mov eax [esp+74h+var_4C] +
test eax eax +
jnz loc_40CE84  +
cmp byte ptr [edx+1] 0 +
jnz loc_40CDB4  +
mov eax [esp+74h+var_54] +
mov edx 0FFFFFFFFh +
cmp byte ptr [ecx+eax-1] 0 +
jz loc_40CE89  +
jmp loc_40CDB4  +
mov edx 1 +
mov eax [esp+74h+var_60] +
call sub_401870  +
test eax eax +
jz loc_40CDB4  +
movzx eax [esp+74h+var_3D] +
mov byte ptr [esp+74h+var_5C] al +
movzx eax byte ptr [esp+74h+var_5C] +
mov byte ptr [esp+74h+var_15] al +
jmp loc_40CB01  +
movzx eax byte ptr [esp+74h+var_15] +
mov byte ptr [esp+74h+var_5C] al +
jmp loc_40CB01  +
xor ebx ebx +
jmp loc_40CAA5  +
xor ecx ecx +
xor edx edx +
call sub_40A640  +
test eax eax +
jns loc_40CD14  +
mov [esp+74h+var_74] edi +
call free  +
xor eax eax +
jmp loc_40CD5C  +
cmp [esp+74h+var_3F] 1 +
jz loc_40CC32  +
mov eax ds:dword_4D9188 +
mov [esp+74h+var_6C] edi +
mov [esp+74h+var_70] offset aBracedSpecBody +
mov [esp+74h+var_74] eax +
call sub_425A80  +
cmp dl 9 +
jz loc_40CC17  +
mov edx ebp +
jmp loc_40CC2A  +
lea eax [ebp+1] +
lea esi [esi+0] +
jmp loc_40CD5C  +
xor edx edx +
jmp loc_40CAF9  +
***
sub esp 1Ch +
push ebx  +
push ebx  +
sub esp 50h +
call sub_40BFF0  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
mov edx ds:dword_4D70E0 +
mov eax ds:dword_4D70E4 +
mov ecx edx +
shl ecx 4 +
add ecx eax +
test edx edx +
jle loc_40D295  +
nop   +
mov edx [eax+8] +
test dl 4 +
jz loc_40D28E  +
or edx 8 +
mov [eax+8] edx +
add eax 10h +
cmp eax ecx +
jnz loc_40D280  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40D430  +
mov eax [eax+4] +
test eax eax +
jz loc_40D430  +
lea eax ds:4[eax*4] +
mov [esp+50h+var_50] eax +
call sub_452ED0  +
mov esi ds:dword_4D7114 +
test esi esi +
mov ebx eax +
mov dword ptr [eax] offset unk_489040 +
jz loc_40D487  +
mov edi [esi+4] +
lea edx [esi+8] +
lea eax [eax+4] +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
lea ecx ds:0[edi*4] +
mov [esp+50h+var_48] ecx +
call memcpy  +
mov edx [esi+4] +
add edx 1 +
lea eax [esp+50h+var_2C] +
mov esi 1 +
mov [esp+50h+var_40] eax +
lea eax [esp+50h+var_30] +
mov [esp+50h+var_44] eax +
mov [esp+50h+var_4C] ebx +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_48] 80000h +
call sub_41CDD0  +
mov [esp+50h+var_50] ebx +
mov ebx 2Ch +
call free  +
cmp [esp+50h+var_2C] 1 +
mov [esp+50h+var_28] offset sub_403120 +
mov [esp+50h+var_24] offset loc_403240 +
mov [esp+50h+var_1C] 3 +
mov [esp+50h+var_18] offset sub_404200 +
mov [esp+50h+var_14] 80000h +
mov [esp+50h+var_10] offset sub_41A990 +
mov [esp+50h+var_C] 200000h +
mov [esp+50h+var_8] offset loc_419690 +
mov [esp+50h+var_4] 100000h +
jbe loc_40D40A  +
mov edx [esp+50h+var_30] +
add edx ebx +
mov eax [edx] +
cmp eax 4A1h +
jz loc_40D3DA  +
jbe loc_40D3D0  +
cmp eax 503h +
jnz loc_40D437  +
mov eax [edx+8] +
mov edi offset asc_4892E9 +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_40D472  +
mov [esp+50h+var_48] eax +
mov eax ds:dword_4D9188 +
mov [esp+50h+var_4C] offset aSwitchQsDoesNo +
mov [esp+50h+var_50] eax +
call sub_425A80  +
lea esi [esi+0] +
sub eax 221h +
cmp eax 2 +
ja loc_40D437  +
mov eax [edx+10h] +
lea ecx [edx+14h] +
mov edx [edx+20h] +
mov [esp+50h+var_4C] 1 +
mov [esp+50h+var_50] 0 +
sub edx 1 +
call sub_403050  +
add esi 1 +
add ebx 2Ch +
cmp [esp+50h+var_2C] esi +
ja loc_40D381  +
mov eax [esp+50h+var_30] +
mov [esp+50h+var_50] eax +
call free  +
call sub_402FF0  +
mov eax ds:dword_4D70E0 +
shl eax 4 +
add eax ds:dword_4D70E4 +
mov dword ptr [eax] 0 +
nop   +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax off_483600 +
mov [esp+50h+var_40] 80000h +
mov [esp+50h+var_44] 0 +
mov [esp+50h+var_48] edx +
mov [esp+50h+var_38] eax +
lea eax [esp+50h+var_28] +
mov [esp+50h+var_3C] eax +
mov [esp+50h+var_4C] offset unk_4D7740 +
mov [esp+50h+var_50] offset unk_4D8400 +
call sub_41EA50  +
jmp loc_40D3FA  +
mov eax ds:dword_4D9188 +
mov [esp+50h+var_4C] offset aSpecGeneratedS +
mov [esp+50h+var_50] eax +
call sub_425A80  +
mov edx 1 +
jmp loc_40D2F8  +
***
jmp sub_40D4A0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
call sub_40BFF0  +
test eax eax +
jnz loc_40D504  +
mov edx ds:dword_4D7114 +
test edx edx +
jz loc_40D4E6  +
mov ebx [edx+4] +
test ebx ebx +
jz loc_40D4E6  +
lea ebp [ebx-1] +
mov ecx 2 +
mov esi [edx+ebp*4+8] +
mov edi offset asc_48AEE4 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_40D520  +
mov [esp+1Ch+var_10] eax +
call sub_405340  +
mov edx ds:dword_4D7114 +
mov eax [esp+1Ch+var_10] +
test edx edx +
jz loc_40D504  +
mov edx [edx+4] +
test edx edx +
jnz loc_40D510  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_409960  +
mov [edx+4] ebp +
jmp loc_40D4E6  +
***
push edi  +
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov [ebp+var_2C] ecx +
mov ecx [ecx] +
test ecx ecx +
jz loc_40DCB3  +
mov eax [ebp+var_2C] +
mov esi [eax+4] +
test esi esi +
jle loc_40DCA7  +
mov eax [ebp+var_2C] +
mov edx esi +
xor edi edi +
mov esi [ebp+arg_4] +
mov ebx [eax] +
jmp loc_40DC74  +
add edi 1 +
add ebx 10h +
cmp edi edx +
jz loc_40DCA7  +
cmp [ebx+8] esi +
jnz loc_40DC6A  +
mov [esp+48h+var_40] esi +
mov eax [ebx] +
mov [ebp+var_1C] edx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call strncmp  +
mov edx [ebp+var_1C] +
test eax eax +
jnz loc_40DC6A  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov edi ds:dword_4D7164 +
movzx edx byte ptr [edi] +
test dl dl +
jz loc_40DF58  +
mov ebx edx +
mov eax edi +
mov [ebp+var_1C] 0 +
xor ecx ecx +
cmp bl 3Bh +
setz cl  +
add eax 1 +
movzx ebx byte ptr [eax] +
add [ebp+var_1C] ecx +
test bl bl +
jnz loc_40DCCF  +
mov eax [ebp+var_1C] +
shl eax 4 +
add eax 10h +
call sub_470CF0  +
sub esp eax +
mov esi edx +
lea eax [esp+1Bh] +
mov ecx esi +
mov [ebp+var_20] eax +
mov edx edi +
and [ebp+var_20] 0FFFFFFF0h +
test cl cl +
mov ebx [ebp+var_20] +
jz loc_40DD99  +
cmp cl 20h +
mov eax edx +
mov [ebx] edx +
jnz loc_40DD28  +
jmp loc_40DF51  +
test cl cl +
jz loc_40DF66  +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 20h +
jnz loc_40DD20  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
lea ecx [eax+1] +
movzx eax byte ptr [eax+1] +
mov [ebx+8] edx +
mov [ebx+4] ecx +
test al al +
jz loc_40DF48  +
cmp al 3Bh +
jz loc_40DF48  +
cmp al 20h +
jz loc_40DF66  +
mov edx ecx +
jmp loc_40DD6E  +
cmp al 3Bh +
jz loc_40DD78  +
cmp al 20h +
jz loc_40DF66  +
add edx 1 +
movzx eax byte ptr [edx] +
test al al +
jnz loc_40DD62  +
mov esi edx +
sub esi ecx +
mov ecx esi +
cmp al 3Bh +
setz al  +
add ebx 10h +
movzx eax al +
add edx eax +
mov [ebx-4] ecx +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_40DD10  +
mov edx ds:dword_4D70E0 +
mov eax 1 +
test edx edx +
cmovnz eax edx +
add eax ds:dword_4D7060 +
shl eax 4 +
mov [esp+48h+var_48] eax +
call sub_452ED0  +
mov edx ds:dword_4D70E0 +
mov ecx [ebp+var_2C] +
mov esi ds:dword_4D70E4 +
mov [ebp+var_28] eax +
mov [ecx] eax +
mov eax edx +
shl eax 4 +
add eax esi +
test edx edx +
mov [ebp+var_24] eax +
jle loc_40DE6B  +
test byte ptr [esi+8] 4 +
jnz loc_40DE5F  +
mov eax [esi] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] eax +
call strlen  +
mov ecx eax +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40DE5F  +
mov ebx [ebp+var_20] +
xor edi edi +
jmp loc_40DE0E  +
add edi 1 +
add ebx 10h +
cmp edi [ebp+var_1C] +
jz loc_40DE5F  +
cmp [ebx+8] ecx +
jnz loc_40DE03  +
mov [esp+48h+var_40] ecx +
mov eax [ebx] +
mov [ebp+var_34] ecx +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_30] +
mov [esp+48h+var_48] eax +
call strncmp  +
mov ecx [ebp+var_34] +
test eax eax +
jnz loc_40DE03  +
mov edi [ebp+var_2C] +
mov edx [ebx+4] +
mov ebx [ebx+0Ch] +
mov ecx [edi+4] +
mov eax ecx +
add ecx 1 +
shl eax 4 +
add eax [ebp+var_28] +
mov [eax] edx +
mov [eax+8] ebx +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [edi+4] ecx +
add esi 10h +
cmp esi [ebp+var_24] +
jnz loc_40DDE0  +
mov edx ds:dword_4D7060 +
mov [ebp+var_30] 0 +
test edx edx +
jle loc_40DC52  +
mov eax off_4835B0 +
mov [ebp+var_20] eax +
mov eax [ebp+var_30] +
shl eax 3 +
mov [ebp+var_34] eax +
add eax ds:dword_4D7064 +
mov [ebp+var_28] eax +
mov eax [ebp+var_20] +
movzx eax byte ptr [eax] +
test al al +
mov byte ptr [ebp+var_24] al +
jz loc_40DFF0  +
cmp al 20h +
mov edx [ebp+var_20] +
jnz loc_40DEC2  +
add edx 1 +
movzx eax byte ptr [edx] +
cmp al 20h +
jz loc_40DEB2  +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_24] al +
mov eax [ebp+var_28] +
movzx ebx byte ptr [ebp+var_24] +
mov edi [ebp+var_20] +
mov esi [eax+4] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_44] eax +
call strncmp  +
test eax eax +
jnz loc_40DF07  +
movsx eax byte ptr [edi+esi] +
mov [esp+48h+var_48] offset asc_48B7B7 +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jnz loc_40DF8E  +
cmp bl 20h +
jz loc_40DF80  +
cmp bl 2Fh +
nop   +
jz loc_40DF80  +
test bl bl +
jz loc_40DFF0  +
mov eax edi +
lea esi [esi+0] +
jmp loc_40DF2F  +
cmp dl 20h +
jz loc_40DF3A  +
test dl dl +
jz loc_40DFF0  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 2Fh +
jnz loc_40DF22  +
cmp dl 2Fh +
jnz loc_40DF89  +
lea edi [eax+1] +
movzx ebx byte ptr [eax+1] +
jmp loc_40DED4  +
mov edx ecx +
xor ecx ecx +
jmp loc_40DD7E  +
xor edx edx +
jmp loc_40DD39  +
xor eax eax +
mov [ebp+var_1C] 0 +
jmp loc_40DCEA  +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aMultilibSpecQs +
mov [esp+48h+var_48] eax +
call sub_425A80  +
nop   +
mov edx ebx +
mov eax edi +
cmp dl 2Fh +
jz loc_40DF3F  +
movzx ebx byte ptr [eax] +
mov edi eax +
test bl 0DFh +
jz loc_40E058  +
test byte ptr [ebp+var_24] 0DFh +
jz loc_40DFF0  +
mov edx [ebp+var_20] +
movzx eax byte ptr [ebp+var_24] +
cmp al 2Fh +
mov ebx edx +
jz loc_40E008  +
test al 0DFh +
jnz loc_40DFB4  +
jmp loc_40E008  +
test al 0DFh +
jz loc_40DFBE  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_40DFB0  +
mov eax ebx +
sub eax edx +
mov [esp+48h+var_44] eax +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_48] edx +
call sub_40DC40  +
sub esp 8 +
test eax eax +
jnz loc_40DFF0  +
cmp byte ptr [ebx] 2Fh +
jnz loc_40E00C  +
movzx eax byte ptr [ebx+1] +
lea edx [ebx+1] +
test al 0DFh +
jnz loc_40DFA4  +
lea esi [esi+0] +
add [ebp+var_30] 1 +
mov eax [ebp+var_30] +
cmp ds:dword_4D7060 eax +
jg loc_40DE80  +
jmp loc_40DC52  +
xor eax eax +
jmp loc_40DFC2  +
mov edi [ebp+var_2C] +
mov ecx [ebp+var_34] +
add ecx ds:dword_4D7064 +
add [ebp+var_30] 1 +
mov edx [edi+4] +
mov ebx [ecx] +
mov ecx [ecx+4] +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [edi] +
mov [eax] ebx +
mov [eax+8] ecx +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [ebp+var_30] +
cmp ds:dword_4D7060 eax +
mov [edi+4] edx +
jg loc_40DE80  +
jmp loc_40DC52  +
test bl bl +
jz loc_40DFF0  +
lea eax [edi+1] +
mov [ebp+var_20] eax +
jmp loc_40DE9A  +
***
push edi  +
push esi  +
mov esi offset off_48D100 +
push ebx  +
sub esp 3Ch +
mov edx [ecx+4] +
mov eax [ecx+8] +
call sub_405830  +
mov [esp+48h+var_48] 5A0h +
call sub_452ED0  +
mov edi eax +
test edi 1 +
mov ds:dword_4D714C eax +
mov eax 5A0h +
jnz loc_40EF36  +
test edi 2 +
jnz loc_40EF21  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_40E0D1  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_40E0DC  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_38] offset asc_48D8F1 +
mov [esp+48h+var_3C] offset unk_489040 +
mov [esp+48h+var_40] offset a7_3_0 +
mov [esp+48h+var_44] offset asc_48D8F1 +
mov [esp+48h+var_48] offset aAvr +
mov ds:dword_4D7148 47h +
call sub_4530C0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] offset asc_48D8F1 +
mov ds:dword_4D7138 eax +
mov eax off_4835AC +
mov [esp+48h+var_48] eax +
call sub_4530C0  +
mov ecx 4 +
mov edx offset aSpecs +
mov [esp+48h+var_48] 1 +
mov ds:dword_4D7134 eax +
mov eax offset unk_483508 +
call sub_4038D0  +
test eax eax +
jz loc_40E174  +
mov edi offset aSpecs +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_40EF10  +
mov eax ds:dword_4D711C +
test eax eax +
jz loc_40EF52  +
mov edx ds:dword_4D7134 +
mov [esp+48h+var_48] edx +
mov [ebp+var_1C] edx +
call strlen  +
sub eax 0FFFFFF80h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov esi offset aHomeJenkinsM_0 +
mov ecx 17h +
mov edx [ebp+var_1C] +
sub esp eax +
lea ebx [esp+2Bh] +
and ebx 0FFFFFFF0h +
mov edi ebx +
movs   +
lea eax [ebx+5Ch] +
mov edi 73h +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_45C6F0  +
mov dword ptr [eax] 63657073h +
mov [eax+4] di +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
call _access_0  +
test eax eax +
jz loc_40E9D5  +
xor ebx ebx +
mov eax ds:off_48D788[ebx*4] +
add ebx 1 +
call sub_40D250  +
cmp ebx 6 +
jnz loc_40E1EF  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40EC45  +
mov eax off_483544 +
cmp byte ptr [eax] 0 +
jz loc_40E229  +
mov esi ds:dword_4D84B4 +
test esi esi +
jz loc_40EBF3  +
mov ebx ds:dword_4D724C +
test ebx ebx +
jz loc_40E30E  +
mov eax ds:dword_4D720C +
mov edx ds:dword_4D7210 +
sub edx eax +
cmp edx 0Fh +
jbe loc_40EE3B  +
mov dword ptr [eax] 79732825h +
mov edi off_483580 +
mov dword ptr [eax+4] 6F6F7273h +
mov dword ptr [eax+8] 70735F74h +
mov dword ptr [eax+0Ch] 20296365h +
mov eax ds:dword_4D720C +
mov [esp+48h+var_48] edi +
lea ebx [eax+10h] +
mov ds:dword_4D720C ebx +
call strlen  +
lea edx [eax+1] +
mov esi eax +
mov eax ds:dword_4D7210 +
sub eax ebx +
cmp eax edx +
jb loc_40EE1A  +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call memcpy  +
add esi ds:dword_4D720C +
lea eax [esi+1] +
mov ds:dword_4D720C eax +
mov byte ptr [esi] 0 +
mov edx ds:dword_4D7208 +
mov eax ds:dword_4D720C +
cmp eax edx +
jz loc_40EE59  +
mov ecx ds:dword_4D7218 +
mov ebx ds:dword_4D7204 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D7210 +
mov esi eax +
sub esi ebx +
mov ds:dword_4D720C eax +
mov edi ecx +
sub edi ebx +
cmp esi edi +
jbe loc_40E2FD  +
mov ds:dword_4D720C ecx +
mov eax ecx +
mov ds:dword_4D7208 eax +
xor ecx ecx +
mov eax offset aLink +
call sub_4020C0  +
mov eax off_483540 +
cmp byte ptr [eax] 0 +
jz loc_40E326  +
mov ecx ds:dword_4D84B4 +
test ecx ecx +
jz loc_40EB40  +
mov eax off_48354C +
cmp byte ptr [eax] 0 +
jnz loc_40EB88  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40E348  +
mov edi ds:dword_4D724C +
test edi edi +
jz loc_40E390  +
mov eax off_4834F4 +
cmp byte ptr [eax] 0 +
jnz loc_40EB21  +
mov eax off_4834F0 +
cmp byte ptr [eax] 0 +
jnz loc_40EB07  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jz loc_40EAAB  +
mov edx offset aBinutils +
mov eax offset aLib +
call sub_403CA0  +
mov edx offset aBinutils +
mov eax offset aUsrLib +
call sub_403CA0  +
mov ebx ds:dword_4D7154 +
test ebx ebx +
jnz loc_40E3B2  +
jmp loc_40E3D4  +
xor edx edx +
mov ecx 1 +
call sub_408BF0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_40E3D4  +
mov edx [ebx+4] +
mov ecx 4 +
mov eax offset unk_483508 +
mov [esp+48h+var_48] 1 +
call sub_4038D0  +
test eax eax +
jnz loc_40E3A0  +
mov eax [ebx+4] +
jmp loc_40E3A0  +
mov ebx ds:dword_4D711C +
test ebx ebx +
jnz loc_40E3E7  +
jmp loc_40E40E  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40E40E  +
cmp dword ptr [ebx+10h] 9 +
jnz loc_40E3E0  +
mov esi [ebx] +
mov edi offset aSelf_spec +
mov ecx 0Ah +
cmps   +
jnz loc_40E3E0  +
mov eax [ebx+8] +
mov eax [eax] +
call sub_40D250  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40E3E7  +
mov eax ds:dword_4D703C +
test eax eax +
jz loc_40E45A  +
mov esi ds:dword_4D7038 +
test esi esi +
jz loc_40EA2A  +
mov ebx ds:dword_4D723C +
neg eax  +
mov ds:dword_4D703C eax +
mov eax offset aCompareDebugSe +
mov ds:dword_4D723C 0 +
call sub_40D250  +
mov ds:dword_4D723C ebx +
mov ebx ds:dword_4D7038 +
test ebx ebx +
jz loc_40E9E8  +
mov eax ds:dword_4D7130 +
test eax eax +
jz loc_40E4A0  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] offset asc_48D8F1 +
mov [esp+48h+var_38] offset unk_489040 +
mov [esp+48h+var_3C] offset a7_3_0 +
mov [esp+48h+var_40] offset asc_48D8F1 +
mov [esp+48h+var_44] offset aAvr +
mov [esp+48h+var_48] eax +
call sub_4530C0  +
mov ds:dword_4D7130 eax +
mov ebx ds:dword_4D714C +
mov eax [ebx+4] +
test eax eax +
jz loc_40E4E0  +
lea esi [esi+0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
test dl dl +
jz loc_40E4D6  +
lea esi [esi+0] +
cmp dl 25h +
movzx edx byte ptr [eax+1] +
jz loc_40E828  +
mov eax ecx +
test dl dl +
lea ecx [eax+1] +
jnz loc_40E4C0  +
add ebx 14h +
mov eax [ebx+4] +
test eax eax +
jnz loc_40E4B0  +
mov ebx ds:dword_4D711C +
test ebx ebx +
jz loc_40E51D  +
mov eax [ebx+8] +
movzx esi byte ptr [ebx+14h] +
mov eax [eax] +
movzx ecx byte ptr [eax] +
lea edx [eax+1] +
test cl cl +
jz loc_40E516  +
lea esi [esi+0] +
cmp cl 25h +
movzx ecx byte ptr [eax+1] +
jz loc_40E860  +
mov eax edx +
test cl cl +
lea edx [eax+1] +
jnz loc_40E500  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_40E4EA  +
mov eax off_483554 +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
test dl dl +
jz loc_40E546  +
lea esi [esi+0] +
cmp dl 25h +
movzx edx byte ptr [eax+1] +
jz loc_40E892  +
mov eax ecx +
test dl dl +
lea ecx [eax+1] +
jnz loc_40E530  +
mov eax ds:dword_4D7160 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jnz loc_40EEFD  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jz loc_40E557  +
cmp dl 20h +
jz loc_40E557  +
xor ecx ecx +
test dl dl +
jz loc_40E5B5  +
add ecx 1 +
cmp dl 9 +
jz loc_40E598  +
cmp dl 20h +
jnz loc_40E58D  +
jmp loc_40E598  +
cmp dl 20h +
jz loc_40E598  +
test dl dl +
jz loc_40E8C5  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jnz loc_40E580  +
cmp dl 20h +
jnz loc_40EF5C  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 9 +
jz loc_40E5A1  +
cmp dl 20h +
jz loc_40E5A1  +
test dl dl +
jnz loc_40E56D  +
test ecx ecx +
mov ds:dword_4D7060 ecx +
jnz loc_40EC91  +
mov ecx ds:dword_4D715C +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_40E665  +
cmp dl 0Ah +
mov eax 1 +
jz loc_40E657  +
nop   +
cmp dl 3Bh +
jz loc_40E64F  +
test dl dl +
jz loc_40E9B7  +
test eax eax +
nop   +
jz loc_40E8D0  +
cmp dl 20h +
mov ebx ecx +
jnz loc_40E60E  +
lea esi [esi+0] +
jmp loc_40E621  +
cmp al 20h +
jz loc_40E618  +
test al al +
jz loc_40E9B7  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Bh +
jnz loc_40E602  +
cmp dl 21h +
jz loc_40E8E0  +
mov eax ebx +
sub eax ecx +
mov [esp+48h+var_48] ecx +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] eax +
call sub_40DC40  +
mov ecx ebx +
sub esp 8 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jnz loc_40E5E0  +
movzx edx byte ptr [ebx+1] +
lea ecx [ebx+1] +
cmp dl 3Bh +
jnz loc_40E5E5  +
test eax eax +
jnz loc_40E9AF  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jnz loc_40E5D4  +
mov eax ds:dword_4D7168 +
mov [ebp+var_1C] eax +
mov eax ds:dword_4D7158 +
cmp byte ptr [eax] 0 +
jnz loc_40EFD0  +
mov [ebp+var_2C] 1 +
mov eax [ebp+var_1C] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40E993  +
cmp dl 0Ah +
jz loc_40EEA3  +
cmp dl 20h +
mov eax [ebp+var_1C] +
jnz loc_40E6AE  +
jmp loc_40EFBC  +
test dl dl +
jz loc_40EED6  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jnz loc_40E6A6  +
mov esi eax +
sub esi [ebp+var_1C] +
mov [ebp+var_28] esi +
movzx edx byte ptr [eax+1] +
lea esi [eax+1] +
mov edi 1 +
mov ecx 1 +
cmp dl 3Bh +
jz loc_40E77C  +
test dl dl +
jz loc_40EED6  +
test ecx ecx +
jz loc_40EE65  +
cmp dl 20h +
mov ebx esi +
jnz loc_40E706  +
jmp loc_40E719  +
cmp al 20h +
jz loc_40E710  +
test al al +
lea esi [esi+0] +
jz loc_40EED6  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Bh +
jnz loc_40E6F4  +
cmp dl 21h +
jz loc_40EE71  +
mov edx ebx +
mov ecx offset dword_4D7020 +
sub edx esi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] esi +
mov [ebp+var_20] edx +
call sub_40DC40  +
mov edx [ebp+var_20] +
mov [ebp+var_24] esi +
mov esi ebx +
sub esp 8 +
mov ecx eax +
test ecx ecx +
mov eax 0 +
cmovz edi eax +
mov eax [ebp+var_24] +
mov [ebp+var_20] ecx +
call sub_401DB0  +
mov ecx [ebp+var_20] +
movzx edx byte ptr [ebx] +
test eax eax +
mov eax 1 +
cmovnz ecx eax +
cmp dl 20h +
jnz loc_40E6D2  +
movzx edx byte ptr [ebx+1] +
lea esi [ebx+1] +
cmp dl 3Bh +
jnz loc_40E6DB  +
test ecx ecx +
jz loc_40E7ED  +
mov ecx [ebp+var_2C] +
test ecx ecx +
jz loc_40E7ED  +
cmp [ebp+var_28] 1 +
jnz loc_40E79C  +
mov eax [ebp+var_1C] +
mov [ebp+var_2C] 0 +
cmp byte ptr [eax] 2Eh +
jz loc_40E7ED  +
mov eax [ebp+var_28] +
add eax 1 +
mov [esp+48h+var_48] eax +
call sub_452ED0  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] ecx +
mov ebx eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call strncpy  +
mov eax [ebp+var_28] +
mov byte ptr [ebx+eax] 0 +
mov [esp+48h+var_44] 3Ah +
mov [esp+48h+var_48] ebx +
call strchr  +
test eax eax +
jz loc_40E7E0  +
mov byte ptr [eax] 0 +
mov ds:dword_4D7128 ebx +
mov [ebp+var_2C] 0 +
test edi edi +
jz loc_40E81D  +
mov edi [ebp+var_1C] +
mov eax [ebp+var_28] +
add eax edi +
cmp edi eax +
jnb loc_40E81D  +
cmp byte ptr [edi] 3Ah +
jz loc_40EFC8  +
mov edx edi +
jmp loc_40E816  +
cmp byte ptr [edx] 3Ah +
lea esi [esi+0] +
jz loc_40EEAC  +
add edx 1 +
cmp edx eax +
jnz loc_40E80A  +
lea eax [esi+1] +
mov [ebp+var_1C] eax +
jmp loc_40E682  +
cmp dl 3Ch +
jz loc_40E84B  +
cmp dl 7Bh +
jz loc_40E84B  +
cmp dl 57h +
jnz loc_40E4CD  +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
cmp dl 7Bh +
jnz loc_40E4CD  +
lea eax [ecx+1] +
xor edx edx +
call sub_401B70  +
jmp loc_40E4B0  +
cmp cl 3Ch +
jz loc_40E883  +
cmp cl 7Bh +
jz loc_40E883  +
cmp cl 57h +
jnz loc_40E50D  +
movzx ecx byte ptr [eax+2] +
lea edx [eax+2] +
cmp cl 7Bh +
jnz loc_40E50D  +
lea eax [edx+1] +
mov edx esi +
call sub_401B70  +
jmp loc_40E4F3  +
cmp dl 3Ch +
jz loc_40E8B6  +
cmp dl 7Bh +
jz loc_40E8B6  +
cmp dl 57h +
nop   +
jnz loc_40E53D  +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
cmp dl 7Bh +
jnz loc_40E53D  +
lea eax [ecx+1] +
xor edx edx +
call sub_401B70  +
jmp loc_40E522  +
xor edx edx +
jmp loc_40E569  +
movzx edx byte ptr [ecx+1] +
add ecx 1 +
jmp loc_40E5E0  +
add ecx 1 +
mov eax ebx +
sub eax ecx +
mov [esp+48h+var_48] ecx +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] eax +
call sub_40DC40  +
mov ecx ebx +
sub esp 8 +
test eax eax +
setz al  +
movzx eax al +
jmp loc_40E63B  +
cmp byte ptr [ebx] 3Ah +
jz loc_40E91B  +
add ebx 1 +
cmp ebx eax +
jnz loc_40E90A  +
cmp byte ptr [ebx] 3Ah +
jnz loc_40E91D  +
mov eax ebx +
sub eax [ebp+var_1C] +
cmp eax 1 +
mov esi eax +
jz loc_40EF6B  +
mov [esp+48h+var_48] eax +
call sub_452ED0  +
mov [esp+48h+var_44] edi +
mov ecx eax +
lea eax [esi-1] +
mov [esp+48h+var_48] ecx +
mov [esp+48h+var_40] eax +
mov [ebp+var_1C] ecx +
call memcpy  +
mov ecx [ebp+var_1C] +
mov byte ptr [ecx+esi-1] 0 +
mov ds:dword_4D7124 ecx +
cmp ebx [ebp+var_20] +
jnb loc_40E993  +
cmp byte ptr [ebx] 3Ah +
jnz loc_40E993  +
mov esi [ebp+var_20] +
sub esi ebx +
add ebx 1 +
mov [esp+48h+var_48] esi +
call sub_452ED0  +
mov [esp+48h+var_44] ebx +
mov edi eax +
lea eax [esi-1] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+esi-1] 0 +
mov ds:dword_4D7120 edi +
mov eax ds:dword_4D7128 +
test eax eax +
jz loc_40EF81  +
mov edx ds:dword_4D7124 +
test edx edx +
jnz loc_40E9AF  +
mov ds:dword_4D7124 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D715C +
mov [esp+48h+var_44] offset aMultilibExclus +
mov [esp+48h+var_40] eax +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_48] eax +
call sub_425A80  +
xor ecx ecx +
mov edx 1 +
mov eax ebx +
call sub_408BF0  +
jmp loc_40E1ED  +
mov eax ds:dword_4D70E0 +
neg ds:dword_4D703C  +
mov ds:dword_4D70D0 eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C8 eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70D8 eax +
mov eax ds:dword_4D70CC +
mov ds:dword_4D70E0 eax +
mov ds:dword_4D70DC eax +
mov eax ds:dword_4D70D4 +
mov ds:dword_4D70E4 eax +
jmp loc_40E45A  +
mov eax ds:dword_4D70E0 +
mov ds:dword_4D70D0 eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C8 eax +
shl eax 4 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] eax +
mov eax ds:dword_4D70E4 +
mov [esp+48h+var_48] eax +
call sub_45C730  +
mov ds:dword_4D70D8 eax +
mov eax offset aCompareDebugSe +
call sub_40D250  +
mov eax ds:dword_4D70E0 +
mov ds:dword_4D70CC eax +
mov eax ds:dword_4D70DC +
mov ds:dword_4D70C4 eax +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D70D4 eax +
mov eax ds:dword_4D70D0 +
mov ds:dword_4D70E0 eax +
mov eax ds:dword_4D70C8 +
mov ds:dword_4D70DC eax +
mov eax ds:dword_4D70D8 +
mov ds:dword_4D70E4 eax +
mov eax ds:dword_4D703C +
jmp loc_40E425  +
mov edx ds:dword_4D7130 +
mov eax offset aHomeJenkinsM_0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] offset a______ +
test edx edx +
cmovnz eax edx +
mov edx ds:dword_4D7138 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_4530C0  +
xor ecx ecx +
mov [esp+48h+var_40] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 1 +
mov edx eax +
mov eax offset unk_483508 +
call sub_402B40  +
jmp loc_40E372  +
mov edx offset off_489406 +
call sub_403CA0  +
mov eax off_4835A8 +
cmp byte ptr [eax] 30h +
jnz loc_40E372  +
jmp loc_40EAAB  +
mov edx offset off_489406 +
call sub_403CA0  +
mov eax off_4834F0 +
cmp byte ptr [eax] 0 +
jz loc_40E364  +
jmp loc_40EB07  +
call sub_40BFF0  +
test eax eax +
jnz loc_40E326  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E326  +
cmp dword ptr [eax+4] 1 +
ja loc_40EC80  +
jnz loc_40E326  +
mov eax [eax+8] +
mov [esp+48h+var_48] eax +
call sub_452FA0  +
mov ds:dword_4D7240 eax +
mov eax off_48354C +
cmp byte ptr [eax] 0 +
jz loc_40E334  +
call sub_40BFF0  +
test eax eax +
jnz loc_40E334  +
xor ecx ecx +
xor edx edx +
mov eax offset asc_4890EA +
call sub_40A640  +
test eax eax +
jnz loc_40E334  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E390  +
mov edx [eax+4] +
test edx edx +
jz loc_40E390  +
xor edx edx +
xor ebx ebx +
jmp loc_40EBD2  +
cmp ebx [eax+4] +
jnb loc_40E390  +
mov eax [eax+edx*4+8] +
mov edx offset aBinutils +
add ebx 1 +
call sub_403CA0  +
mov eax ds:dword_4D7114 +
mov edx ebx +
test eax eax +
jnz loc_40EBC9  +
jmp loc_40E390  +
call sub_40BFF0  +
test eax eax +
lea esi [esi+0] +
jnz loc_40E229  +
mov eax ds:dword_4D7114 +
test eax eax +
jz loc_40E229  +
cmp dword ptr [eax+4] 1 +
ja loc_40EC34  +
jnz loc_40E229  +
mov eax [eax+8] +
mov [esp+48h+var_48] eax +
call sub_452FA0  +
mov ds:dword_4D7244 eax +
jmp loc_40E229  +
mov [esp+48h+var_48] offset aSpecFailureMor +
call sub_4256B0  +
jmp loc_40E229  +
mov edx off_4834F8 +
cmp byte ptr [edx] 0 +
jz loc_40E211  +
mov [esp+48h+var_40] 0 +
mov ecx offset off_489406 +
mov eax offset unk_483514 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 1 +
call sub_402B40  +
jmp loc_40E211  +
mov [esp+48h+var_48] offset aSpecFailureM_0 +
call sub_4256B0  +
jmp loc_40E326  +
shl ecx 3 +
mov [esp+48h+var_48] ecx +
call sub_452ED0  +
mov edi ds:dword_4D7160 +
mov ds:dword_4D7064 eax +
movzx eax byte ptr [edi] +
test al al +
jz loc_40E5C3  +
cmp al 20h +
mov [ebp+var_1C] 0 +
jnz loc_40EDC9  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_40ECC1  +
cmp al 20h +
jz loc_40ECC1  +
test al al +
jz loc_40E5C3  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 9 +
jnz loc_40ECEE  +
jmp loc_40ECF2  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_40ECF2  +
test al 0DFh +
jnz loc_40ECE4  +
mov eax ds:dword_4D718C +
mov esi ebx +
mov edx ds:dword_4D7190 +
sub esi edi +
sub edx eax +
cmp esi edx +
ja loc_40EDD6  +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call memcpy  +
mov eax ds:dword_4D718C +
add eax esi +
cmp ds:dword_4D7190 eax +
mov ds:dword_4D718C eax +
jz loc_40EDFC  +
lea edx [eax+1] +
mov ecx [ebp+var_1C] +
mov ds:dword_4D718C edx +
mov byte ptr [eax] 0 +
mov eax ds:dword_4D7188 +
add ecx ds:dword_4D7064 +
mov edi eax +
mov [ebp+var_24] eax +
mov eax ds:dword_4D718C +
mov [ebp+var_20] ecx +
cmp edi eax +
jz loc_40EDF0  +
mov edx ds:dword_4D7198 +
add eax edx +
not edx  +
and eax edx +
mov edx ds:dword_4D7190 +
mov ecx eax +
sub ecx ds:dword_4D7184 +
mov ds:dword_4D718C eax +
mov edi edx +
sub edi ds:dword_4D7184 +
cmp ecx edi +
jbe loc_40ED95  +
mov ds:dword_4D718C edx +
mov eax edx +
mov ds:dword_4D7188 eax +
mov edi [ebp+var_24] +
mov eax [ebp+var_20] +
mov [eax] edi +
mov [eax+4] esi +
cmp byte ptr [ebx] 0 +
jz loc_40E5C3  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
add [ebp+var_1C] 8 +
test al al +
jz loc_40E5C3  +
cmp al 20h +
jz loc_40ECC1  +
cmp al 9 +
jz loc_40ECC1  +
jmp loc_40ECCF  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
jmp loc_40ED0B  +
or ds:byte_4D71A8 2 +
jmp loc_40ED62  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] offset unk_4D7180 +
call sub_4592E0  +
mov eax ds:dword_4D718C +
jmp loc_40ED33  +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] offset unk_4D7200 +
call sub_4592E0  +
mov edi off_483580 +
mov ebx ds:dword_4D720C +
jmp loc_40E298  +
mov [esp+48h+var_44] 10h +
mov [esp+48h+var_48] offset unk_4D7200 +
call sub_4592E0  +
mov eax ds:dword_4D720C +
jmp loc_40E24D  +
or ds:byte_4D7228 2 +
jmp loc_40E2CC  +
movzx edx byte ptr [esi+1] +
add esi 1 +
jmp loc_40E6D2  +
lea eax [esi+1] +
mov edx ebx +
sub edx eax +
mov ecx offset dword_4D7020 +
mov [esp+48h+var_44] edx +
mov esi ebx +
mov [esp+48h+var_48] eax +
mov [ebp+var_20] edx +
mov [ebp+var_24] eax +
call sub_40DC40  +
xor ecx ecx +
mov edx [ebp+var_20] +
sub esp 8 +
test eax eax +
setz cl  +
jmp loc_40E73E  +
add [ebp+var_1C] 1 +
jmp loc_40E682  +
mov [ebp+var_1C] edx +
mov [ebp+var_20] eax +
mov esi [ebp+var_1C] +
lea edi [esi+1] +
cmp edi eax +
mov ebx edi +
jnb loc_40E916  +
mov esi [ebp+var_1C] +
mov ebx edi +
cmp byte ptr [esi+1] 3Ah +
jnz loc_40E90F  +
jmp loc_40E91B  +
mov eax ds:dword_4D7158 +
mov [esp+48h+var_44] offset aMultilibSelect +
mov [esp+48h+var_3C] eax +
mov eax ds:dword_4D7168 +
mov [esp+48h+var_40] eax +
mov eax ds:dword_4D9188 +
mov [esp+48h+var_48] eax +
call sub_425A80  +
cmp dl 9 +
jz loc_40E557  +
jmp loc_40E567  +
xor ecx ecx +
mov edx 1 +
call sub_408BF0  +
jmp loc_40E181  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_40E0B9  +
movzx eax byte ptr ds:off_48D100 +
add edi 1 +
mov esi 48D101h +
mov [edi-1] al +
mov eax 59Fh +
jmp loc_40E0AD  +
call sub_402E30  +
jmp loc_40E181  +
cmp dl 9 +
nop   +
jz loc_40E5A1  +
jmp loc_40E569  +
mov [esp+48h+var_48] offset a__1 +
call sub_452FA0  +
mov ds:dword_4D7124 eax +
jmp loc_40E959  +
mov eax ds:dword_4D7124 +
test eax eax +
jz loc_40E9AF  +
mov edi offset a__1 +
mov ecx 2 +
mov esi eax +
cmps   +
jnz loc_40E9AF  +
mov [esp+48h+var_48] eax +
call free  +
mov ds:dword_4D7124 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_28] 0 +
jmp loc_40E6C1  +
mov [ebp+var_20] eax +
jmp loc_40EEB2  +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] eax +
call sub_4530C0  +
mov [ebp+var_1C] eax +
jmp loc_40E67B  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [ecx] +
mov [esp] eax +
call free  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
mov ecx offset byte_4D7268 +
push edi  +
push esi  +
mov esi 47h +
push ebx  +
sub esp 1Ch +
call loc_406640  +
call sub_4203A0  +
mov eax off_483600 +
mov [esp] eax +
call sub_423F20  +
mov dword ptr [esp] offset unk_4D8400 +
mov ds:dword_4D7044 0 +
mov ds:byte_4D7264 0 +
mov ds:dword_4D7260 0 +
mov ds:dword_4D725C 0 +
mov ds:dword_4D7258 0 +
mov ds:dword_4D7254 0 +
mov ds:dword_4D7250 0 +
mov ds:dword_4D7040 0 +
mov ds:dword_4D724C 0 +
mov ds:dword_4D7248 0 +
mov ds:dword_4D7244 0 +
mov ds:dword_4D7240 0 +
mov ds:dword_4D723C 0 +
mov ds:dword_4D7238 0 +
mov ds:dword_4D7234 0 +
mov off_4835AC offset aAvr +
mov dword_4835A4 1 +
call loc_4198B0  +
mov dword ptr [esp] offset unk_4D7740 +
call loc_4198B0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_4593F0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset dword_4D90C0 +
call sub_4593F0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D71C0 +
call sub_4593F0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7180 +
mov off_483554 offset aFsyntaxOnlyCMM +
call sub_4593F0  +
mov edi ds:dword_4D7148 +
mov ebp ds:dword_4D714C +
mov ds:dword_4D7154 0 +
mov ds:dword_4D7150 0 +
cmp edi 47h +
mov ebx ebp +
jle loc_40F1AE  +
mov eax [ebx+58Ch] +
add esi 1 +
add ebx 14h +
mov [esp] eax +
call free  +
mov eax [ebx+57Ch] +
mov [esp] eax +
call free  +
cmp esi edi +
jnz loc_40F188  +
mov [esp] ebp +
call free  +
mov eax ds:dword_4D7144 +
mov ds:dword_4D714C 0 +
mov ds:dword_4D7148 0 +
test eax eax +
jz loc_40F1DA  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D7140 +
test eax eax +
jz loc_40F1EA  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D713C +
test eax eax +
jz loc_40F1FA  +
mov dword ptr [eax+4] 0 +
mov edx offset unk_483518 +
mov eax offset unk_483514 +
call sub_402E80  +
mov edx offset unk_48350C +
mov eax offset unk_483508 +
call sub_402E80  +
mov edx offset unk_483500 +
mov eax offset unk_4834FC +
call sub_402E80  +
mov ebx ds:dword_4D711C +
mov ds:dword_4D7138 0 +
mov ds:dword_4D7134 0 +
mov ds:dword_4D7130 0 +
test ebx ebx +
mov ds:dword_4D712C 0 +
mov off_4834F8 offset unk_489040 +
mov off_4834F4 offset unk_489040 +
mov off_4834F0 offset unk_489040 +
mov ds:dword_4D7128 0 +
mov ds:dword_4D7124 0 +
mov ds:dword_4D7120 0 +
jz loc_40F2CF  +
cmp ebx offset off_483020 +
jnz loc_40F2A2  +
jmp loc_40F2C5  +
mov ebx esi +
mov eax [ebx] +
mov esi [ebx+0Ch] +
mov [esp] eax +
call free  +
mov [esp] ebx +
call free  +
cmp esi offset off_483020 +
mov ds:dword_4D711C esi +
jnz loc_40F2A0  +
mov ds:dword_4D711C 0 +
mov eax offset unk_483035 +
cmp byte ptr [eax] 0 +
jz loc_40F2DC  +
mov byte ptr [eax] 0 +
mov edx [eax-0Dh] +
add eax 1Ch +
mov ecx [eax-19h] +
cmp eax offset unk_483505 +
mov [edx] ecx +
jnz loc_40F2D4  +
mov eax ds:dword_4D7114 +
mov ds:dword_4D7118 0 +
test eax eax +
jz loc_40F308  +
mov dword ptr [eax+4] 0 +
mov eax ds:dword_4D70E4 +
mov ds:dword_4D7110 0 +
mov ds:dword_4D710C 0 +
mov ds:dword_4D7100 0 +
mov [esp] eax +
mov ds:dword_4D70FC 0 +
mov ds:dword_4D70F8 0 +
mov ds:dword_4D70F4 0 +
mov ds:dword_4D70F0 0 +
mov ds:dword_4D70EC 0 +
mov ds:dword_4D70E8 0 +
call free  +
mov eax ds:dword_4D70B8 +
mov ds:dword_4D70E4 0 +
mov ds:dword_4D70E0 0 +
mov ds:dword_4D70DC 0 +
mov [esp] eax +
mov ds:dword_4D703C 0 +
mov ds:dword_4D7038 0 +
mov ds:dword_4D7034 0 +
mov ds:dword_4D70D4 0 +
mov ds:dword_4D70CC 0 +
mov ds:dword_4D70C4 0 +
mov ds:dword_4D70BC 0 +
mov ds:dword_4D70D8 0 +
mov ds:dword_4D70D0 0 +
mov ds:dword_4D70C8 0 +
mov ds:dword_4D70C0 0 +
call free  +
mov eax ds:dword_4D702C +
mov ds:dword_4D70B8 0 +
mov ds:dword_4D7030 0 +
mov ds:dword_4D70B4 0 +
mov [esp] eax +
mov ds:byte_4D70B0 0 +
mov ds:dword_4D70AC 0 +
call free  +
mov eax ds:dword_4D7020 +
mov ds:dword_4D702C 0 +
mov ds:dword_4D70A8 0 +
mov ds:dword_4D70A4 0 +
mov [esp] eax +
mov ds:dword_4D70A0 0 +
mov ds:dword_4D709C 0 +
mov ds:dword_4D7028 0 +
mov ds:dword_4D7098 0 +
mov ds:dword_4D7094 0 +
mov ds:dword_4D7090 0 +
mov ds:dword_4D708C 0 +
mov ds:dword_4D7088 0 +
mov ds:dword_4D7084 0 +
mov ds:dword_4D7080 0 +
mov ds:dword_4D707C 0 +
mov ds:dword_4D7078 0 +
mov ds:dword_4D7074 0 +
mov ds:dword_4D7070 0 +
mov ds:dword_4D706C 0 +
mov ds:dword_4D7068 0 +
mov ds:dword_4D7064 0 +
mov ds:dword_4D7060 0 +
mov ds:dword_4D705C 0 +
call free  +
mov ds:dword_4D7020 0 +
mov ds:dword_4D7024 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov dword ptr [esp+10h] offset loc_425BE0 +
mov dword ptr [esp+0Ch] offset loc_425BA0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_459280  +
call sub_419710  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset dword_4D90C0 +
mov ds:dword_4D70E0 0 +
call sub_4593F0  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_4D7200 +
call sub_4593F0  +
mov ds:dword_4D70E0 0 +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_40F643  +
mov [esp+1Ch+arg_4] 1 +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
jmp sub_452F00  +
mov [esp+1Ch+var_14] offset aGgc_internal_c +
mov [esp+1Ch+var_18] 37h +
mov [esp+1Ch+var_1C] offset a____GccGccGgcN +
call sub_424560  +
nop   +
jmp sub_452F50  +
***
push esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test edi edi +
jz loc_40FC90  +
cmp edi 1 +
jnz loc_40FC40  +
mov edi [ebp+0] +
mov esi offset aDeviceSpecs +
mov ecx 0Dh +
mov eax offset aNodevicelib +
cmps   +
mov esi offset aAvr2 +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_40FC36  +
movzx eax byte ptr [esi] +
test al al +
jz loc_40FC06  +
mov edx esi +
lea esi [esi+0] +
movzx ecx al +
movsx ebx al +
test byte ptr ds:word_4D0720[ecx+ecx] 8Ch +
jnz loc_40FBFC  +
cmp al 2Dh +
jz loc_40FBFC  +
cmp al 5Fh +
jnz loc_40FCB0  +
add edx 1 +
movzx eax byte ptr [edx] +
test al al +
jnz loc_40FBE0  +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] offset aSMmcuAvrNodevi +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] offset aSpecs_0 +
mov [esp+2Ch+var_28] offset asc_48FAD2 +
mov [esp+2Ch+var_2C] offset aSpecsDeviceSpe +
call sub_4530C0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov esi [ebp+4] +
jle loc_40FBD3  +
mov ebx 2 +
jmp loc_40FC5B  +
add ebx 1 +
cmp ebx edi +
jz loc_40FBD3  +
mov eax [ebp+ebx*4+0] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
call strcmp  +
test eax eax +
jz loc_40FC50  +
mov [esp+2Ch+var_28] offset aMmcu +
mov [esp+2Ch+var_2C] offset aSpecifiedOptio +
call sub_4256B0  +
add esp 2Ch +
mov eax offset aNodevicelib +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4D9188 +
mov [esp+2Ch+var_24] offset aDeviceSpecsFil +
mov [esp+2Ch+var_28] offset aBadUsageOfSpec +
mov [esp+2Ch+var_2C] eax +
call sub_425A80  +
lea esi [esi+0] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] offset aMmcu_0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aStrangeDeviceN +
call sub_4256B0  +
mov eax offset aNodevicelib +
jmp loc_40FC36  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx [eax] +
mov eax [esp+arg_4] +
movzx edx byte ptr [ebx] +
mov esi [eax] +
test dl dl +
movsx ecx byte ptr [esi] +
jz loc_40FD58  +
test cl cl +
jnz loc_40FD17  +
jmp loc_40FD7B  +
add ebx 1 +
movzx edx byte ptr [ebx] +
lea eax [esi+1] +
movsx ecx byte ptr [esi+1] +
test dl dl +
jz loc_40FD58  +
test cl cl +
jz loc_40FD60  +
mov esi eax +
movzx edi dl +
movsx eax dl +
movzx edi ds:word_4D0720[edi+edi] +
test di 88h +
jz loc_40FD39  +
movzx ebp cl +
test byte ptr ss:word_4D0720[ebp+ebp] 4 +
jnz loc_40FD67  +
test di 4 +
jz loc_40FD4D  +
movzx edi cl +
test byte ptr ds:word_4D0720[edi+edi] 88h +
jnz loc_40FD71  +
cmp dl cl +
jz loc_40FD00  +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_40FD51  +
movsx eax dl +
xor ecx ecx +
jmp loc_40FD51  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax dl +
jmp loc_40FD51  +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 24h +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_48FAE5 +
call sub_4530C0  +
mov ecx offset aAvr2_0 +
mov edx offset off_491B40 +
mov ebx [edx+0Ch] +
test ebx ebx +
jz loc_40FDB6  +
mov ds:dword_4D72A0[esi*4] ecx +
add esi 1 +
add edx 20h +
mov ecx [edx] +
test ecx ecx +
jnz loc_40FDA5  +
mov dword ptr [esp+0Ch] offset sub_40FCE0 +
mov dword ptr [esp+8] 4 +
mov [esp+4] esi +
mov dword ptr [esp] offset dword_4D72A0 +
mov [esp+1Ch] eax +
call qsort  +
test esi esi +
mov eax [esp+1Ch] +
jz loc_40FE1A  +
xor ebx ebx +
lea esi [esi+0] +
mov edx ds:dword_4D72A0[ebx*4] +
add ebx 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] offset asc_48FAE6 +
mov [esp] eax +
mov [esp+8] edx +
call sub_4530C0  +
cmp ebx esi +
jnz loc_40FDF0  +
mov edx ds:dword_4D9188 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aDevicesNativel +
mov [esp+1Ch] eax +
mov [esp] edx +
call sub_425390  +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx offset off_491B40 +
sub esp 14h +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset unk_48FAE5 +
call sub_4530C0  +
mov esi eax +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_40FEA7  +
add ebx 20h +
mov eax [ebx] +
test eax eax +
jnz loc_40FE70  +
mov eax ds:dword_4D9188 +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aSupportedCoreA +
mov [esp] eax +
call sub_425390  +
mov [esp] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
imul eax [ebx+4] +
mov [esp] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] offset asc_48FAE6 +
mov eax ds:off_494018[eax] +
mov [esp+8] eax +
call sub_4530C0  +
mov esi eax +
jmp loc_40FE77  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
mov [eax] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax] edx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_1C] +
cmp dword ptr [eax+20h] 2 +
mov ecx [eax] +
mov edi [eax+24h] +
ja loc_410D26  +
cmp ecx 15Bh +
jz loc_4106C0  +
jle loc_4102A1  +
cmp ecx 197h +
jz loc_410660  +
cmp ecx 19Ch +
jz loc_4104F2  +
cmp ecx 161h +
jz loc_410310  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0E0h +
jz loc_410370  +
cmp ecx 143h +
jnz loc_410294  +
mov eax [ebx+1C8h] +
test eax eax +
jnz loc_410294  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0DFh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410294  +
mov eax [ebx+380h] +
test eax eax +
jnz loc_410294  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 15Fh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410294  +
mov eax [ebx+14Ch] +
test eax eax +
jz loc_410860  +
mov eax [ebx+1B8h] +
test eax eax +
jz loc_410902  +
mov eax [ebx+1C8h] +
test eax eax +
jz loc_4108B1  +
mov eax [ebx+218h] +
test eax eax +
jz loc_410CD5  +
mov eax [ebx+2A0h] +
test eax eax +
jz loc_410C84  +
mov ecx [ebx+2A8h] +
test ecx ecx +
jz loc_410C33  +
mov edx [ebx+2F0h] +
test edx edx +
jz loc_410BE2  +
mov eax [ebx+308h] +
test eax eax +
jz loc_410B91  +
mov eax [ebx+398h] +
test eax eax +
jz loc_410B40  +
mov eax [ebx+3A4h] +
test eax eax +
jz loc_410AE8  +
mov eax [ebx+438h] +
test eax eax +
jz loc_410A97  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_410953  +
mov eax [ebx+460h] +
test eax eax +
jnz loc_41047C  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410730  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E9C0  +
mov ecx [ebx+480h] +
test ecx ecx +
jnz loc_410294  +
mov eax [esi+45Ch] +
test eax eax +
jz loc_4104A1  +
mov edx [esi+1CCh] +
xor eax eax +
test edx edx +
setnz al  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A6h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E9C0  +
jmp loc_410294  +
mov ecx [ebx+460h] +
test ecx ecx +
jnz loc_410556  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410754  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E9C0  +
mov eax [ebx+464h] +
test eax eax +
jz loc_410766  +
mov eax [ebx+470h] +
test eax eax +
jz loc_410808  +
mov eax [ebx+474h] +
test eax eax +
jz loc_4107B7  +
mov eax [ebx+478h] +
test eax eax +
jz loc_4109A4  +
mov eax [ebx+480h] +
test eax eax +
jnz loc_4105F2  +
mov eax [esi+45Ch] +
test eax eax +
jnz loc_410742  +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_1C] edx +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A6h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] edx +
call sub_41E9C0  +
mov edx [ebx+488h] +
test edx edx +
jz loc_410A46  +
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_410294  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A9h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410294  +
mov eax [ebx+288h] +
test eax eax +
jnz loc_410294  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 118h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410294  +
mov eax [ebx+37Ch] +
test eax eax +
jz loc_4109F5  +
mov eax [ebx+384h] +
test eax eax +
jnz loc_410294  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 161h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410294  +
mov edi [esi+1CCh] +
xor eax eax +
test edi edi +
setnz al  +
jmp loc_410430  +
mov ecx [esi+1CCh] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_4105A6  +
mov edx [esi+1CCh] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_41050A  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 19Eh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410564  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A3h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410580  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A2h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410572  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0BDh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_41037E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0DFh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_41039A  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0D9h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_41038C  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 197h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410418  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A4h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_41058E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 15Dh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4106CE  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 1A8h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_410600  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 192h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_41040A  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 16Ah +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103FC  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 167h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103EE  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 13Ch +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103E0  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 136h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103D2  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 122h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103C4  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 11Eh +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103B6  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_18] 1 +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0F7h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_28] eax +
call sub_41E9C0  +
jmp loc_4103A8  +
mov [esp+3Ch+var_34] offset aCommon_handle_ +
mov [esp+3Ch+var_38] 2E78h +
mov [esp+3Ch+var_3C] offset aOptions_c +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0F0h +
mov ebp [esp+74h] +
jz loc_4112F7  +
jle loc_410E50  +
cmp eax 143h +
jz loc_411780  +
jle loc_411223  +
cmp eax 19Ch +
jz loc_410EE0  +
cmp eax 1A9h +
jz loc_411880  +
cmp eax 18Eh +
jnz loc_410EF0  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
cmp eax 0AFh +
jz loc_411298  +
nop   +
lea esi [esi+0] +
jle loc_410F66  +
cmp eax 0C2h +
jz loc_410F00  +
cmp eax 0E0h +
jz loc_411817  +
cmp eax 0B6h +
jnz loc_410EF0  +
mov eax [ebx+27Ch] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 115h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
mov eax [ebx+48Ch] +
test eax eax +
jz loc_411D37  +
nop   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+1D4h] +
test eax eax +
jz loc_411AA8  +
mov eax [ebx+39Ch] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 168h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
cmp eax 93h +
jz loc_411720  +
cmp eax 9Eh +
jnz loc_410EF0  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_4121B3  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_412255  +
mov edx [ebx+10Ch] +
test edx edx +
jz loc_412204  +
mov eax [ebx+110h] +
test eax eax +
jz loc_412401  +
mov eax [ebx+140h] +
test eax eax +
jz loc_4123B0  +
mov eax [ebx+148h] +
test eax eax +
jz loc_412358  +
mov eax [ebx+150h] +
test eax eax +
jz loc_412307  +
mov eax [ebx+1A8h] +
test eax eax +
jz loc_412545  +
mov eax [ebx+1C0h] +
test eax eax +
jz loc_4124F4  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_411A50  +
mov eax [ebx+204h] +
test eax eax +
jz loc_412162  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_412690  +
mov eax [ebx+248h] +
test eax eax +
jz loc_412638  +
mov ecx [ebx+274h] +
test ecx ecx +
jz loc_4125E7  +
mov edx [ebx+284h] +
test edx edx +
jz loc_4119F0  +
mov eax [ebx+288h] +
test eax eax +
jz loc_412111  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_4120C0  +
mov eax [ebx+290h] +
test eax eax +
jz loc_412068  +
mov eax [ebx+294h] +
test eax eax +
jz loc_412017  +
mov eax [ebx+298h] +
test eax eax +
jz loc_411FC6  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_411F75  +
mov ecx [ebx+2DCh] +
test ecx ecx +
jz loc_411F24  +
mov edx [ebx+2F8h] +
test edx edx +
jz loc_411ED3  +
mov eax [ebx+31Ch] +
test eax eax +
jz loc_411BF3  +
mov eax [ebx+334h] +
test eax eax +
jz loc_411BA2  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_411B51  +
mov eax [ebx+374h] +
test eax eax +
jz loc_411B00  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_412596  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_411162  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_411998  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_4124A3  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_411C95  +
mov eax [ebx+434h] +
test eax eax +
jz loc_411C44  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_412452  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_411940  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_411CE6  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
cmp eax 0F8h +
jz loc_4116B0  +
cmp eax 142h +
jnz loc_410EF0  +
mov eax [ebx+174h] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [ebx+1C0h] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_411360  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411318  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_4113C9  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411381  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_411431  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4113E9  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_41149A  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411452  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_411502  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4114BA  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_41156B  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411523  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_4115D3  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_41158B  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_41163C  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4115F4  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_410EF0  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_411661  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [ebx+224h] +
test eax eax +
jz loc_411D88  +
mov eax [ebx+228h] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [ebx+348h] +
test eax eax +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [ebx+1BCh] +
test eax eax +
jz loc_411DE0  +
mov eax [ebx+284h] +
test eax eax +
jz loc_4118E6  +
mov ecx [ebx+300h] +
test ecx ecx +
jz loc_411E82  +
mov edx [ebx+32Ch] +
test edx edx +
jz loc_411E31  +
mov eax [ebx+334h] +
test eax eax +
jnz loc_410DEE  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410DEE  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_410EF0  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov ecx [ebx+468h] +
test ecx ecx +
jnz loc_410EF0  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 1A0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41179C  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4111B6  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411170  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41104E  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411008  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410F0E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110F6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110E8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110DA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110CC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41119A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41118C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4111C4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410EF0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4116BE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41178E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4117B8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4117AA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 138h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110BE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110B0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4110A2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411094  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411086  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411078  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41106A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41105C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411016  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410F8A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FA6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+0F8h] +
test eax eax +
jnz loc_410F98  +
mov eax [esp+68h] +
mov ecx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410F98  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FDE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FD0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FC2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FB4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4111A8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41117E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FFA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0D5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_410FEC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411104  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411040  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411032  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_411024  +
***
jmp loc_4126F0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0D8h +
mov ebp [esp+74h] +
jz loc_412F97  +
jle loc_4127E0  +
cmp eax 142h +
jz loc_412B03  +
jle loc_412B62  +
cmp eax 18Eh +
jz loc_412782  +
cmp eax 19Ch +
jz loc_413004  +
cmp eax 143h +
jnz loc_412812  +
mov edx [ebx+1BCh] +
test edx edx +
jz loc_4137D5  +
mov eax [ebx+284h] +
test eax eax +
jz loc_413298  +
mov eax [ebx+300h] +
test eax eax +
jz loc_413877  +
mov eax [ebx+32Ch] +
test eax eax +
jz loc_413350  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
cmp eax 0B1h +
jz loc_413130  +
nop   +
lea esi [esi+0] +
jle loc_412820  +
cmp eax 0B4h +
jz loc_4130D0  +
cmp eax 0C2h +
jnz loc_412812  +
mov eax [ebx+1D4h] +
test eax eax +
jz loc_413784  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 93h +
jz loc_413063  +
cmp eax 9Eh +
jnz loc_412812  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_413733  +
mov ecx [ebx+0DCh] +
test ecx ecx +
jz loc_4132F1  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_413681  +
mov eax [ebx+10Ch] +
test eax eax +
jz loc_414024  +
mov ecx [ebx+110h] +
test ecx ecx +
jz loc_413FD3  +
mov edx [ebx+120h] +
test edx edx +
jz loc_413F82  +
mov eax [ebx+124h] +
test eax eax +
jz loc_413F31  +
mov eax [ebx+128h] +
test eax eax +
jz loc_413EE0  +
mov eax [ebx+140h] +
test eax eax +
jz loc_413E88  +
mov eax [ebx+148h] +
test eax eax +
jz loc_413E37  +
mov eax [ebx+150h] +
test eax eax +
jz loc_413DE6  +
mov eax [ebx+184h] +
test eax eax +
jz loc_413826  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_413240  +
mov eax [ebx+204h] +
test eax eax +
jz loc_413C51  +
mov eax [ebx+23Ch] +
test eax eax +
jz loc_413C00  +
mov eax [ebx+248h] +
test eax eax +
jz loc_413D95  +
mov ecx [ebx+274h] +
test ecx ecx +
jz loc_413D44  +
mov edx [ebx+288h] +
test edx edx +
jz loc_413CF3  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_413CA2  +
mov eax [ebx+290h] +
test eax eax +
jz loc_413B06  +
mov eax [ebx+294h] +
test eax eax +
jz loc_413AB5  +
mov eax [ebx+2C0h] +
test eax eax +
jz loc_413A64  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_413A13  +
mov eax [ebx+2DCh] +
test eax eax +
jz loc_4139C2  +
mov ecx [ebx+2F8h] +
test ecx ecx +
jz loc_413971  +
mov edx [ebx+31Ch] +
test edx edx +
jz loc_413920  +
mov eax [ebx+360h] +
test eax eax +
jz loc_4138C8  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_413587  +
mov eax [ebx+374h] +
test eax eax +
jz loc_413536  +
mov eax [ebx+398h] +
test eax eax +
jz loc_4134E5  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_413494  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_412A42  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_4131E8  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_413BA8  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_413B57  +
mov eax [ebx+434h] +
test eax eax +
jz loc_413443  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_4133F2  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_413190  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_4133A1  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+174h] +
test eax eax +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
cmp eax 0E0h +
jz loc_412F30  +
cmp eax 0F0h +
jnz loc_412812  +
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_412BE1  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412B99  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_412C4A  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412C02  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_412CB2  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_412C6A  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_412D1B  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412CD3  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_412D83  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_412D3B  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_412DEC  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412DA4  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_412E54  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_412E0C  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_412EBD  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412E75  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_412812  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_412EE2  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_412812  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+184h] +
test eax eax +
jz loc_413630  +
mov ecx [ebx+2D4h] +
test ecx ecx +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+2CCh] +
test eax eax +
jz loc_4135D8  +
mov ecx [ebx+348h] +
test ecx ecx +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov edx [ebx+2CCh] +
test edx edx +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [ebx+2C0h] +
test eax eax +
jnz loc_412812  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A96  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A50  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128E8  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412766  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 9Dh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41284E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412782  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412AA4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A88  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A7A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4129E4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 167h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4129D6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4129C8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4129BA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_413071  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412FA5  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+0F8h] +
test ecx ecx +
jnz loc_41285C  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41285C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412840  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412812  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412758  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128DA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412774  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 154h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4129AC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41299E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 138h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412990  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412982  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412974  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412966  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412958  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41294A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A6C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412A5E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 102h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412904  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128F6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41293C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41292E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412920  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412912  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128CC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128BE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128B0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B4h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4128A2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412894  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412886  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_412878  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41286A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0E0h +
mov ebp [esp+74h] +
jz loc_4142B0  +
jle loc_414140  +
cmp eax 143h +
jz loc_4140D5  +
cmp eax 151h +
jnz loc_4140C8  +
mov eax [ebx+350h] +
test eax eax +
jz loc_414310  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+0F0h] +
test eax eax +
jz loc_414972  +
mov ecx [ebx+414h] +
test ecx ecx +
jnz loc_4140C8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 189h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4140C8  +
***
cmp eax 9Eh +
jnz loc_4140C8  +
mov eax [ebx+0D4h] +
test eax eax +
jz loc_414921  +
mov eax [ebx+0F0h] +
test eax eax +
jz loc_4148D0  +
mov eax [ebx+12Ch] +
test eax eax +
jz loc_414878  +
mov eax [ebx+144h] +
test eax eax +
jz loc_414827  +
mov eax [ebx+15Ch] +
test eax eax +
jz loc_4147D6  +
mov ecx [ebx+250h] +
test ecx ecx +
jz loc_414785  +
mov edx [ebx+254h] +
test edx edx +
jz loc_414734  +
mov eax [ebx+258h] +
test eax eax +
jz loc_4146E3  +
mov eax [ebx+26Ch] +
test eax eax +
jz loc_414692  +
mov eax [ebx+288h] +
test eax eax +
jz loc_414641  +
mov eax [ebx+34Ch] +
test eax eax +
jz loc_4145F0  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_414598  +
mov eax [ebx+3F0h] +
test eax eax +
jz loc_414547  +
mov ecx [ebx+414h] +
test ecx ecx +
jz loc_4144F6  +
mov edx [ebx+418h] +
test edx edx +
jz loc_4144A5  +
mov eax [ebx+444h] +
test eax eax +
jz loc_414454  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_414403  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_4143B2  +
mov eax [ebx+46Ch] +
test eax eax +
jz loc_414361  +
mov eax [ebx+4C0h] +
test eax eax +
jnz loc_4140C8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B6h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4140C8  +
***
mov edx [ebx+154h] +
test edx edx +
jnz loc_4140C8  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C0h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4140C8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 150h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4140C8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414251  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414243  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414235  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 195h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414227  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414219  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 189h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41420B  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 180h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141FD  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141EF  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141E1  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141D3  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 111h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141C5  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 109h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141B7  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 108h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4141A9  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 107h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41419B  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41418D  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41417F  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414171  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414163  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 9Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414155  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4140E3  +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0F0h +
mov ebp [esp+74h] +
jz loc_414F40  +
jle loc_414AB0  +
cmp eax 143h +
jz loc_4153C3  +
jle loc_414E67  +
cmp eax 19Ch +
jz loc_414B40  +
cmp eax 1A9h +
jz loc_4154C7  +
cmp eax 18Eh +
jnz loc_414B50  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
cmp eax 0AFh +
jz loc_414EE0  +
nop   +
lea esi [esi+0] +
jle loc_414BC6  +
cmp eax 0C2h +
jz loc_414B60  +
cmp eax 0E0h +
jz loc_415460  +
cmp eax 0B6h +
jnz loc_414B50  +
mov eax [ebx+27Ch] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 115h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
mov eax [ebx+48Ch] +
test eax eax +
jz loc_416051  +
nop   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+1D4h] +
test eax eax +
jz loc_415D10  +
mov eax [ebx+39Ch] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 168h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
cmp eax 93h +
jz loc_415364  +
cmp eax 9Eh +
jnz loc_414B50  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_415D61  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_415E03  +
mov edx [ebx+10Ch] +
test edx edx +
jz loc_415DB2  +
mov eax [ebx+110h] +
test eax eax +
jz loc_415FA8  +
mov eax [ebx+140h] +
test eax eax +
jz loc_415F57  +
mov eax [ebx+148h] +
test eax eax +
jz loc_415F06  +
mov eax [ebx+150h] +
test eax eax +
jz loc_415EB5  +
mov eax [ebx+1A8h] +
test eax eax +
jz loc_416195  +
mov eax [ebx+1C0h] +
test eax eax +
jz loc_416144  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_4156A0  +
mov eax [ebx+204h] +
test eax eax +
jz loc_416000  +
mov ecx [ebx+21Ch] +
test ecx ecx +
jz loc_4158E5  +
mov edx [ebx+248h] +
test edx edx +
jz loc_415894  +
mov eax [ebx+274h] +
test eax eax +
jz loc_415843  +
mov eax [ebx+284h] +
test eax eax +
jz loc_415640  +
mov eax [ebx+288h] +
test eax eax +
jz loc_415CB8  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_415C67  +
mov eax [ebx+290h] +
test eax eax +
jz loc_415C16  +
mov eax [ebx+298h] +
test eax eax +
jz loc_415BC5  +
mov ecx [ebx+2D8h] +
test ecx ecx +
jz loc_415B74  +
mov edx [ebx+2DCh] +
test edx edx +
jz loc_415B23  +
mov eax [ebx+31Ch] +
test eax eax +
jz loc_415AD2  +
mov eax [ebx+334h] +
test eax eax +
jz loc_415A81  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_4157A1  +
mov eax [ebx+374h] +
test eax eax +
jz loc_415750  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_4157F2  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_414DA6  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_4155E8  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_415987  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_415A30  +
mov eax [ebx+434h] +
test eax eax +
jz loc_4159D8  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_415936  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_415590  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_4156F8  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
cmp eax 0F8h +
jz loc_4152F7  +
cmp eax 142h +
jnz loc_414B50  +
mov eax [ebx+174h] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [ebx+1C0h] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_414FA9  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414F61  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_415012  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_414FCA  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_41507A  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_415032  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_4150E3  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_41509B  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_41514B  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_415103  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_4151B4  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_41516C  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_41521C  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4151D4  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_415285  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_41523D  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_414B50  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4152AA  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [ebx+224h] +
test eax eax +
jz loc_4161E6  +
mov eax [ebx+228h] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [ebx+348h] +
test eax eax +
jnz loc_414B50  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [ebx+1BCh] +
test eax eax +
jz loc_416237  +
mov eax [ebx+284h] +
test eax eax +
jz loc_415530  +
mov ecx [ebx+300h] +
test ecx ecx +
jz loc_4160F3  +
mov edx [ebx+32Ch] +
test edx edx +
jz loc_4160A2  +
mov eax [ebx+334h] +
test eax eax +
jnz loc_414A4E  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414A4E  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_414B50  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov ecx [ebx+468h] +
test ecx ecx +
jnz loc_414B50  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 1A0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4153DF  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DFA  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DB4  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CAE  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C68  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414E08  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D3A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D2C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D48  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CA0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C92  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C84  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DEC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DC2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DDE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414DD0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 149h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D1E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D10  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414D02  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CF4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CE6  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CD8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CCA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414CBC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B6E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414BEA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C06  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+0F8h] +
test eax eax +
jnz loc_414BF8  +
mov eax [esp+68h] +
mov ecx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414BF8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C3E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C30  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C22  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C14  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C76  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414B50  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4153FB  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4153ED  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C5A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0D5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_414C4C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FBh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_415305  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4153D1  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+58h] +
mov ebx [esp+54h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
cmp eax 0D8h +
mov ebp [esp+74h] +
jz loc_416B20  +
jle loc_416380  +
cmp eax 142h +
jz loc_416687  +
jle loc_4166E6  +
cmp eax 18Eh +
jz loc_416322  +
cmp eax 19Ch +
jz loc_416B90  +
cmp eax 143h +
jnz loc_4163B2  +
mov edx [ebx+1BCh] +
test edx edx +
jz loc_417A70  +
mov eax [ebx+284h] +
test eax eax +
jz loc_416E28  +
mov eax [ebx+300h] +
test eax eax +
jz loc_416FD3  +
mov eax [ebx+32Ch] +
test eax eax +
jz loc_416EE0  +
mov eax [ebx+49Ch] +
test eax eax +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1ADh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
cmp eax 0B1h +
jz loc_416CC0  +
nop   +
lea esi [esi+0] +
jle loc_4163C0  +
cmp eax 0B4h +
jz loc_416C60  +
cmp eax 0C2h +
jnz loc_4163B2  +
mov eax [ebx+1D4h] +
test eax eax +
jz loc_417A18  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 93h +
jz loc_416BF0  +
cmp eax 9Eh +
jnz loc_4163B2  +
mov eax [ebx+0C8h] +
test eax eax +
jz loc_4170D6  +
mov ecx [ebx+0DCh] +
test ecx ecx +
jz loc_416E81  +
mov eax [ebx+0F8h] +
test eax eax +
jz loc_417024  +
mov eax [ebx+10Ch] +
test eax eax +
jz loc_417883  +
mov ecx [ebx+110h] +
test ecx ecx +
jz loc_417832  +
mov edx [ebx+120h] +
test edx edx +
jz loc_4177E1  +
mov eax [ebx+124h] +
test eax eax +
jz loc_417790  +
mov eax [ebx+128h] +
test eax eax +
jz loc_417738  +
mov eax [ebx+140h] +
test eax eax +
jz loc_4176E7  +
mov eax [ebx+148h] +
test eax eax +
jz loc_417696  +
mov eax [ebx+150h] +
test eax eax +
jz loc_417645  +
mov eax [ebx+184h] +
test eax eax +
jz loc_416F82  +
mov ecx [ebx+200h] +
test ecx ecx +
jz loc_416DD0  +
mov eax [ebx+204h] +
test eax eax +
jz loc_417B12  +
mov ecx [ebx+23Ch] +
test ecx ecx +
jz loc_417AC1  +
mov edx [ebx+248h] +
test edx edx +
jz loc_4179C7  +
mov eax [ebx+274h] +
test eax eax +
jz loc_417976  +
mov eax [ebx+288h] +
test eax eax +
jz loc_417925  +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_4178D4  +
mov eax [ebx+290h] +
test eax eax +
jz loc_4175F4  +
mov eax [ebx+2C0h] +
test eax eax +
jz loc_4175A3  +
mov eax [ebx+2D8h] +
test eax eax +
jz loc_417552  +
mov ecx [ebx+2DCh] +
test ecx ecx +
jz loc_417501  +
mov edx [ebx+31Ch] +
test edx edx +
jz loc_4174B0  +
mov eax [ebx+360h] +
test eax eax +
jz loc_417458  +
mov eax [ebx+36Ch] +
test eax eax +
jz loc_417407  +
mov eax [ebx+374h] +
test eax eax +
jz loc_4173B6  +
mov eax [ebx+398h] +
test eax eax +
jz loc_417221  +
mov eax [ebx+3ACh] +
test eax eax +
jz loc_4171D0  +
mov eax [ebx+3B8h] +
test eax eax +
jnz loc_4165C6  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 170h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+3C0h] +
test ecx ecx +
jz loc_416D78  +
mov eax [ebx+3F4h] +
test eax eax +
jz loc_417365  +
mov eax [ebx+41Ch] +
test eax eax +
jz loc_417314  +
mov eax [ebx+434h] +
test eax eax +
jz loc_4172C3  +
mov eax [ebx+44Ch] +
test eax eax +
jz loc_417272  +
mov ecx [ebx+450h] +
test ecx ecx +
jz loc_416D20  +
mov eax [ebx+45Ch] +
test eax eax +
jz loc_416F31  +
mov eax [ebx+4B4h] +
test eax eax +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1B3h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+174h] +
test eax eax +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0C8h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
cmp eax 0E0h +
jz loc_416AB3  +
cmp eax 0F0h +
jnz loc_4163B2  +
mov eax [ebx+1DCh] +
test eax eax +
jnz loc_416765  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_41671D  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E5h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E0h] +
test eax eax +
jnz loc_4167CE  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416786  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1E4h] +
test ecx ecx +
jnz loc_416836  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4167EE  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E7h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1E8h] +
test eax eax +
jnz loc_41689F  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416857  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E9h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1ECh] +
test ecx ecx +
jnz loc_416907  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_4168BF  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1F4h] +
test eax eax +
jnz loc_416970  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416928  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EDh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+1F8h] +
test ecx ecx +
jnz loc_4169D8  +
mov edx [esp+60h] +
xor eax eax +
test edx edx +
jz loc_416990  +
xor eax eax +
cmp ds:dword_4D8600 1 +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EEh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+1FCh] +
test eax eax +
jnz loc_416A41  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_4169F9  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0EFh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
mov eax [ebx+2D8h] +
test eax eax +
jnz loc_4163B2  +
mov ecx [esp+60h] +
xor eax eax +
test ecx ecx +
jz loc_416A66  +
mov edx ds:dword_4D8600 +
xor eax eax +
test edx edx +
setnle al  +
mov edx [esp+68h] +
mov ecx [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+220h] +
test eax eax +
jnz loc_4163B2  +
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0FAh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+184h] +
test eax eax +
jz loc_417178  +
mov ecx [ebx+2D4h] +
test ecx ecx +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+48Ch] +
test eax eax +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1A9h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+2CCh] +
test eax eax +
jz loc_417127  +
mov ecx [ebx+348h] +
test ecx ecx +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 14Eh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov edx [ebx+2CCh] +
test edx edx +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [ebx+2C0h] +
test eax eax +
jnz loc_4163B2  +
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 198h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41661A  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 173h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4165D4  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0F0h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416488  +
***
cmp dword ptr [esp+60h] 1 +
mov edx [esp+68h] +
mov ecx [esp+64h] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] edx +
mov [esp+14h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 117h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416306  +
***
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 9Dh +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163EE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 147h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416322  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 19Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416628  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41647A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 13Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416314  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0A5h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
mov ecx [ebx+0F8h] +
test ecx ecx +
jnz loc_4163FC  +
mov eax [esp+68h] +
mov edx [esp+60h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] eax +
xor eax eax +
test edx edx +
setnz al  +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+8] 0A6h +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163FC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 97h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163E0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416BFE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0CCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416B2E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 16Ch +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416568  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 167h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41655A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 197h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41660C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 191h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4165FE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 18Bh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4165F0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 181h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4165E2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 15Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41654C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 157h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41653E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 154h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416530  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 142h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416522  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 130h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416514  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 12Fh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416506  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 129h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164F8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 11Ah +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164EA  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BEh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41646C  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BCh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41645E  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0BAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416450  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B4h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416442  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416434  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0B1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416426  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ACh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416418  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0ABh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_41640A  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 119h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164DC  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 118h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164CE  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 113h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164C0  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 105h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164B2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0E2h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4163B2  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0DAh +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4162F8  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 102h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_4164A4  +
***
mov eax [esp+68h] +
mov [esp+28h] ebp +
mov dword ptr [esp+24h] 1 +
mov [esp+20h] edi +
mov [esp+18h] eax +
mov eax [esp+64h] +
mov [esp+1Ch] esi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0F1h +
mov [esp+14h] eax +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+10h] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_41E9C0  +
jmp loc_416496  +
***
mov eax [esp+8] +
cmp eax 10Ch +
jz loc_417DA0  +
jle loc_417BD0  +
cmp eax 132h +
jz loc_417D34  +
lea esi [esi+0] +
jle loc_417C16  +
cmp eax 191h +
jz loc_417DB5  +
jg loc_417C85  +
cmp eax 143h +
jz loc_417DE0  +
cmp eax 18Eh +
jnz locret_417D64  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+428h] +
mov [edx+1Ah] al +
retn   +
***
cmp eax 0BEh +
jz loc_417D88  +
jg loc_417C50  +
cmp eax 0AFh +
jz loc_417D10  +
jle loc_417CF0  +
cmp eax 0B1h +
jz loc_417DF2  +
cmp eax 0B6h +
jnz locret_417D62  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+130h] +
mov [edx+4Ah] al +
retn   +
***
cmp eax 115h +
jz loc_417D22  +
jle loc_417CB0  +
cmp eax 120h +
jz loc_417D76  +
cmp eax 126h +
jnz loc_417D66  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+2B4h] +
mov [ecx+19h] al +
retn   +
***
cmp eax 0CDh +
jz loc_417D46  +
jle loc_417CD0  +
cmp eax 0DAh +
jz loc_417E07  +
cmp eax 0DFh +
jnz locret_417D72  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+1C8h] +
mov [ecx+26h] al +
retn   +
***
cmp eax 194h +
jz loc_417DC7  +
cmp eax 1ADh +
jnz locret_417D58  +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+49Ch] +
mov [ecx+1Eh] al +
retn   +
***
cmp eax 112h +
jnz loc_417D5C  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+270h] +
mov [edx+32h] al +
retn   +
***
cmp eax 0C9h +
jnz locret_417D5A  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+178h] +
mov [edx+16h] al +
retn   +
***
cmp eax 0AEh +
jnz locret_417D74  +
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+118h] +
mov [edx+1Fh] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+11Ch] +
mov [ecx+2Fh] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+27Ch] +
mov [ecx+1Bh] al +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+2E0h] +
mov [edx+44h] eax +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+188h] +
mov [ecx+14h] al +
retn   +
***
retn   +
***
retn   +
***
lea esi [esi+0] +
retn   +
***
retn   +
***
retn   +
***
lea esi [esi+0] +
lea edi [edi+0] +
retn   +
***
retn   +
***
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+2A4h] +
mov [edx+17h] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+150h] +
mov [ecx+15h] al +
retn   +
***
mov eax [esp+4] +
mov eax [eax+264h] +
test eax eax +
mov eax [esp+0Ch] +
setnz byte ptr [eax+48h]  +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+434h] +
mov [ecx+18h] al +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+440h] +
mov [edx+25h] al +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov eax [eax+320h] +
mov [ecx+2Ah] al +
retn   +
***
mov eax [esp+4] +
mov edx [eax+120h] +
mov eax [esp+0Ch] +
test edx edx +
setnz byte ptr [eax+4Bh]  +
retn   +
***
mov eax [esp+4] +
mov edx [esp+0Ch] +
mov eax [eax+1BCh] +
mov [edx+1Ch] al +
retn   +
***
cmp dword ptr [edx+54Ch] 0 +
jnz loc_417EFF  +
mov [eax+54Ch] ecx +
cmp dword ptr [edx+968h] 0 +
jnz loc_417F0E  +
mov [eax+968h] ecx +
cmp dword ptr [edx+0BA0h] 0 +
jnz loc_417F1D  +
mov [eax+0BA0h] ecx +
cmp dword ptr [edx+914h] 0 +
jnz loc_417F2C  +
mov [eax+914h] ecx +
cmp dword ptr [edx+0AF0h] 0 +
jnz loc_417F3B  +
mov [eax+0AF0h] ecx +
cmp dword ptr [edx+0BE0h] 0 +
jnz loc_417F4A  +
mov [eax+0BE0h] ecx +
cmp dword ptr [edx+798h] 0 +
jnz loc_417F59  +
mov [eax+798h] ecx +
cmp dword ptr [edx+7B4h] 0 +
jnz loc_417F68  +
mov [eax+7B4h] ecx +
cmp dword ptr [edx+7B8h] 0 +
jnz loc_418001  +
test ecx ecx +
jnz loc_418048  +
cmp dword ptr [edx+938h] 0 +
jnz loc_417F8C  +
mov [eax+938h] ecx +
cmp dword ptr [edx+0A78h] 0 +
jnz loc_417F9B  +
mov [eax+0A78h] ecx +
cmp dword ptr [edx+0BA8h] 0 +
jnz loc_417FAA  +
mov [eax+0BA8h] ecx +
cmp dword ptr [edx+71Ch] 0 +
jnz loc_417FB9  +
mov [eax+71Ch] ecx +
cmp dword ptr [edx+0B48h] 0 +
jnz loc_417FCB  +
cmp dword ptr [edx+0B88h] 0 +
jz loc_418040  +
cmp dword ptr [edx+0B70h] 0 +
jnz loc_417FDD  +
cmp dword ptr [edx+0B88h] 0 +
jz loc_418032  +
cmp dword ptr [edx+0BD0h] 0 +
jnz loc_417FF0  +
mov dword ptr [eax+0BD0h] 2 +
mov edx [edx+0B30h] +
test edx edx +
jnz locret_418030  +
mov [eax+0B30h] ecx +
retn   +
cmp dword ptr [edx+7B0h] 0 +
jnz loc_417F7D  +
test ecx ecx +
jz loc_417F7D  +
cmp dword ptr [eax+7B4h] 0 +
jz loc_417F7D  +
mov [eax+7B0h] ecx +
jmp loc_417F7D  +
retn   +
mov [eax+0B70h] ecx +
jmp loc_417FDD  +
mov [eax+0B48h] ecx +
jmp loc_417FCB  +
cmp dword ptr [eax+7B4h] 0 +
jz loc_418057  +
mov [eax+7B8h] ecx +
cmp dword ptr [edx+7B0h] 0 +
jz loc_418016  +
jmp loc_417F7D  +
***
push esi  +
test bl bl +
jnz sub_418141  +
mov ebx [ecx+8] +
test ebx ebx +
jz loc_418240  +
***
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp al 1 +
jz loc_418116  +
cmp [esp+arg_5C] 1 +
jle loc_418116  +
***
mov edi [esp+arg_78] +
mov esi [esp+arg_70] +
mov ebx [ecx+0Ch] +
mov eax [ecx+8] +
mov [esp+arg_24] edi +
mov edi [esp+arg_74] +
mov [esp+arg_1C] esi +
mov esi [esp+arg_6C] +
mov [esp+arg_20] 1 +
mov [esp+arg_14] 0 +
mov [esp+arg_18] edi +
mov [esp+arg_10] esi +
mov [esp+arg_C] ebx +
mov [esp+arg_8] eax +
***
mov eax [esp-5Ch+arg_94] +
mov [esp-5Ch+arg_60] ebp +
mov [esp-5Ch+arg_5C] eax +
mov eax [esp-5Ch+arg_90] +
mov [esp-5Ch+arg_58] eax +
call sub_41E9C0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_5C] +
test eax eax +
setnle bl  +
jmp sub_418112  +
***
cmp al 1 +
jz loc_418116  +
mov eax [esp+arg_5C] +
test eax eax +
jle loc_418116  +
jmp loc_41813B  +
***
cmp [esp+arg_5C] 2 +
setnle bl  +
jmp sub_418112  +
***
cmp [esp+arg_5C] 2 +
setnle bl  +
or ebx eax +
jmp sub_418112  +
***
mov edi [esp+arg_5C] +
cmp [esp+arg_5C] 1 +
mov eax [esp+arg_5C] +
test eax eax +
setz bl  +
jmp sub_418112  +
***
mov dword ptr [esp+8] offset aMaybe_default_ +
mov dword ptr [esp+4] 18Fh +
mov dword ptr [esp+0] offset a____GccGccOpts +
call sub_424560  +
lea esi [esi+0] +
mov eax ebp +
shl eax 6 +
cmp ds:byte_4A8DA8[eax] 0 +
js loc_418121  +
mov eax [esp+7Ch] +
mov edx [ecx+0Ch] +
mov dword ptr [esp+24h] 1 +
mov [esp-0B8h+arg_CC] 0 +
mov [esp+28h] eax +
mov eax [esp+74h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp-0B8h+arg_D4] eax +
mov eax [esp+78h] +
mov [esp-0B8h+arg_D0] eax +
mov eax [esp+70h] +
mov [esp-0B8h+arg_C8] eax +
xor eax eax +
test edx edx +
setz al  +
mov [esp+10h] eax +
jmp loc_41817F  +
***
push ebx  +
sub esp 20h +
test edx edx +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
setnz byte ptr [ebx+18h]  +
test eax eax +
jnz loc_418300  +
mov esi [ebx+30h] +
test esi esi +
jz loc_418370  +
cmp byte ptr [ecx] 0 +
jnz loc_41834A  +
cmp dword ptr [ebx+2Ch] 1 +
jle loc_418380  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi] +
test edx edx +
jz loc_418340  +
mov edx [ebx+30h] +
test edx edx +
jz loc_418340  +
cmp eax edx +
jz loc_418340  +
mov edx ds:off_4BFA54[eax*4] +
mov [esp+20h+var_1C] offset aDebugFormatQsC +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_4] ecx +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_8] eax +
call sub_425710  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
lea esi [esi+0] +
mov [ebx+30h] eax +
mov [esi] eax +
cmp byte ptr [ecx] 0 +
jz loc_4182EC  +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_8] ecx +
call sub_41C520  +
mov ecx [esp+20h+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_4183B0  +
cmp eax 3 +
jg loc_418390  +
mov [ebx+2Ch] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+30h] 3 +
jmp loc_4182E7  +
mov dword ptr [ebx+2Ch] 2 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+arg_8] ecx +
mov [esp+20h+arg_4] offset aDebugOutputLev +
mov [esp+20h+arg_0] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_425710  +
mov [esp+20h+arg_8] ecx +
mov [esp+20h+arg_4] offset aUnrecognizedDe +
jmp loc_41839C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [eax] +
mov [esp+3Ch+var_1C] eax +
test edi edi +
jz loc_4186DC  +
mov [esp+3Ch+var_3C] edx +
call sub_452FA0  +
mov esi eax +
mov ebp eax +
mov edx eax +
jmp loc_4183ED  +
mov [edx] al +
add esi 1 +
add edx 1 +
movzx eax byte ptr [esi] +
test al al +
jz loc_418413  +
cmp al 2Ch +
jz loc_418430  +
cmp al 5Ch +
jnz loc_4183E5  +
cmp byte ptr [esi+1] 2Ch +
jnz loc_4183E5  +
add esi 2 +
add edx 1 +
mov byte ptr [edx-1] 2Ch +
movzx eax byte ptr [esi] +
test al al +
jnz loc_4183F4  +
cmp byte ptr [ebp+0] 0 +
jnz loc_418590  +
mov eax [esp+3Ch+var_1C] +
mov [eax] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [edx] 0 +
mov ebx [edi] +
lea eax [edx+1] +
mov [esp+3Ch+var_24] eax +
lea eax [esi+1] +
mov [esp+3Ch+var_20] eax +
test ebx ebx +
jz loc_418660  +
mov ecx [ebx] +
mov edx [ebx+4] +
and ecx 7FFFFFFFh +
cmp ecx edx +
jnz loc_418505  +
cmp byte ptr [ebx+3] 0 +
jns loc_418522  +
mov dword ptr [edi] 0 +
lea edx [ecx+1] +
mov [esp+3Ch+var_D] 1 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_18] edx +
call sub_452F50  +
mov edx [esp+3Ch+var_18] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+3Ch+var_14] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+3Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_418743  +
lea edx ds:0[ecx*4] +
add eax 8 +
add ebx 8 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_18] ecx +
call memcpy  +
mov ecx [esp+3Ch+var_18] +
mov ebx [edi] +
mov edx ecx +
mov [ebx+4] ecx +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov ebp [esp+3Ch+var_24] +
movzx eax byte ptr [esi+1] +
mov esi [esp+3Ch+var_20] +
mov edx ebp +
jmp loc_4183F8  +
lea eax [ecx+1] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41F4C0  +
mov ebx eax +
lea ecx ds:8[eax*4] +
mov eax [edi] +
test eax eax +
jz loc_41874C  +
mov edx [eax+4] +
mov [esp+3Ch+var_38] ecx +
and ebx 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_18] edx +
call sub_452F50  +
mov edx [esp+3Ch+var_18] +
mov ecx [eax] +
mov [edi] eax +
mov [eax+4] edx +
and ecx 80000000h +
or ecx ebx +
mov ebx eax +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
jmp loc_418505  +
mov ebx [edi] +
test ebx ebx +
jz loc_41872B  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_418644  +
cmp byte ptr [ebx+3] 0 +
jns loc_418671  +
mov dword ptr [edi] 0 +
lea eax [esi+1] +
mov byte ptr [esp+3Ch+var_24] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax ds:8[edx*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_20] edx +
call sub_452F50  +
mov edx [esp+3Ch+var_20] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+3Ch+var_24] 0 +
mov [eax+3] dl +
jz loc_418755  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
mov ebx [edi] +
mov edx esi +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov eax [esp+3Ch+var_1C] +
mov [eax] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_D] 0 +
xor ecx ecx +
mov edx 1 +
jmp loc_418476  +
add esi 1 +
mov [esp+3Ch+var_38] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41F4C0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [edi] +
test eax eax +
jz loc_41873C  +
mov ebx [eax+4] +
mov [esp+3Ch+var_38] edx +
and esi 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_452F50  +
mov edx [eax] +
mov [edi] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
jmp loc_41864E  +
mov [esp+3Ch+var_3C] 4 +
mov [esp+3Ch+var_24] edx +
call loc_481090  +
mov dword ptr [eax] 0 +
mov edi eax +
mov [esp+3Ch+var_38] 0Ch +
mov [esp+3Ch+var_3C] 0 +
call sub_452F50  +
mov edx [esp+3Ch+var_24] +
mov ecx [eax] +
mov [edi] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx 1 +
mov [eax] ecx +
mov byte ptr [eax+3] 0 +
jmp loc_4183D5  +
mov byte ptr [esp+3Ch+var_24] 0 +
xor esi esi +
mov eax 1 +
jmp loc_4185C5  +
xor ebx ebx +
jmp loc_41869D  +
mov ebx eax +
xor edx edx +
jmp loc_418505  +
xor edx edx +
nop   +
jmp loc_41854E  +
mov ebx eax +
xor edx edx +
jmp loc_418644  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_14] edx +
mov [esp+40h+var_1C] ecx +
call strlen  +
mov edi eax +
mov eax [esp+40h+arg_0] +
sub eax 3 +
mov [esp+40h+var_18] eax +
mov ecx [esp+40h+var_1C] +
mov eax 1Bh +
mov ebx edi +
mov ebp [esp+40h+var_18] +
cmp ecx 1Ah +
cmova eax ecx +
sub ebp eax +
mov eax 0 +
cmp [esp+40h+arg_0] ebp +
cmovb ebp eax +
cmp edi ebp +
jbe loc_418806  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_418870  +
mov al 1 +
cmp dl 20h +
lea ecx [eax-1] +
jz loc_4187FC  +
and edx 0FFFFFFFDh +
cmp dl 2Dh +
movzx edx byte ptr [esi+eax] +
jnz loc_4187E7  +
cmp dl 20h +
jz loc_4187EB  +
test ecx ecx +
jz loc_4187E7  +
movzx ecx byte ptr [esi+eax-2] +
test byte ptr ds:word_4D0720[ecx+ecx] 88h +
cmovnz ebx eax +
test dl dl +
jz loc_418806  +
cmp edi ebx +
lea ecx [eax+1] +
jnz loc_418860  +
mov eax ecx +
cmp dl 20h +
lea ecx [eax-1] +
jnz loc_4187C2  +
movzx edx byte ptr [esi+eax] +
mov ebx ecx +
test dl dl +
jnz loc_4187EB  +
mov eax [esp+40h+var_14] +
mov [esp+40h+var_2C] esi +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_3C] 1Bh +
mov [esp+40h+var_34] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_40] offset a_S_S +
mov [esp+40h+var_38] eax +
call sub_47D5B0  +
lea eax [esi+ebx] +
cmp byte ptr [eax] 20h +
jnz loc_41884C  +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [esi+ebx] 20h +
lea eax [esi+ebx] +
jz loc_418840  +
sub edi ebx +
jz loc_418868  +
mov [esp+40h+var_1C] 0 +
mov esi eax +
jmp loc_418786  +
cmp ebp eax +
jbe loc_418806  +
mov eax ecx +
jmp loc_4187F4  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
jmp loc_418806  +
***
push edi  +
push esi  +
push ebx  +
sub esp 15Ch +
cmp eax 10000h +
mov [esp+168h+var_14C] edx +
mov [esp+168h+var_150] ecx +
jz loc_418CB7  +
mov eax [esp+168h+arg_4] +
mov eax [eax+20h] +
test eax eax +
jz loc_418F07  +
mov esi ds:dword_4BCD44 +
mov eax [esp+168h+arg_4] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_418EDE  +
mov eax ds:dword_4BDAA0 +
mov [esp+168h+var_140] eax +
test esi esi +
jz loc_418C32  +
mov eax [esp+168h+var_14C] +
mov ebx offset off_4A8D80 +
xor edi edi +
mov byte ptr [esp+168h+var_144] 0 +
mov byte ptr [esp+168h+var_148] 0 +
and eax 1000000h +
mov [esp+168h+var_13C] eax +
test ebp ebp +
mov eax [ebx+24h] +
jz loc_418907  +
mov edx eax +
and edx ebp +
cmp edx ebp +
jz loc_418911  +
test [esp+168h+var_150] eax +
jz loc_418B03  +
test [esp+168h+var_14C] eax +
jnz loc_418B03  +
test eax 80000h +
jz loc_418940  +
mov ecx ds:dword_4BCD40 +
mov edx 1 +
shl edx cl +
sub edx 1 +
or edx 300000h +
test edx eax +
jz loc_418B03  +
mov ecx [esp+168h+arg_4] +
mov byte ptr [esp+168h+var_148] 1 +
mov eax [ecx+20h] +
add eax edi +
cmp byte ptr [eax] 0 +
jnz loc_418B03  +
mov byte ptr [eax] 1 +
mov edx [ebx+4] +
test edx edx +
jz loc_418E85  +
movzx eax word ptr [ebx+18h] +
cmp ax 4FEh +
ja loc_418A53  +
shl eax 6 +
mov ecx ds:dword_4A8D84[eax] +
test ecx ecx +
jz loc_418A53  +
cmp edx offset aThisOptionLack +
mov eax ds:off_4A8D80[eax] +
jz loc_418F2E  +
lea ecx [esp+168h+var_118] +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_158] eax +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] offset aSSameAsS_ +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D740  +
mov ecx [esp+168h+var_148] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_418A92  +
mov edx ecx +
mov [esp+168h+var_148] ebx +
mov ebx [edx] +
add edx 4 +
lea eax [ebx-1010101h] +
not ebx  +
and eax ebx +
and eax 80808080h +
jz loc_4189D6  +
mov ebx [esp+168h+var_148] +
mov [esp+168h+var_148] edx +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_15C] offset aUsesOfThisOpti +
mov [esp+168h+var_160] offset aS_2 +
lea edx [edx+2] +
cmovnz edx [esp+168h+var_148] +
add al al +
mov eax 100h +
mov [esp+168h+var_148] edx +
sbb [esp+168h+var_148] 3 +
sub [esp+168h+var_148] ecx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_148] ecx +
sub eax edx +
mov [esp+168h+var_164] eax +
mov eax edx +
add eax ecx +
mov [esp+168h+var_168] eax +
call sub_47D740  +
mov ecx [esp+168h+var_148] +
mov edx ecx +
jmp loc_418A94  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_418A94  +
lea ecx [esp+168h+var_118] +
cmp edx ecx +
jz loc_4189D0  +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_158] offset aUsesOfThisOpti +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] offset aSS_1 +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D740  +
mov ecx [esp+168h+var_148] +
mov edx ecx +
mov [esp+168h+var_168] edx +
mov [esp+168h+var_164] 9 +
mov [esp+168h+var_148] edx +
call strchr  +
mov edx [esp+168h+var_148] +
test eax eax +
jz loc_418E9B  +
mov ecx eax +
add eax 1 +
sub ecx edx +
mov [esp+168h+var_144] ecx +
mov [esp+168h+var_148] eax +
mov eax [esp+168h+arg_4] +
mov ecx [eax+0C88h] +
test ecx ecx +
jz loc_418D5E  +
mov eax [esp+168h+arg_0] +
mov ecx [esp+168h+var_144] +
mov [esp+168h+var_168] eax +
mov eax [esp+168h+var_148] +
call sub_418760  +
cmp dword ptr [ebx+30h] 5 +
mov byte ptr [esp+168h+var_144] 1 +
mov byte ptr [esp+168h+var_148] 1 +
jz loc_418E52  +
add edi 1 +
add ebx 40h +
cmp edi esi +
jnz loc_4188F8  +
cmp byte ptr [esp+168h+var_148] 0 +
jz loc_418C32  +
cmp byte ptr [esp+168h+var_144] 0 +
jz loc_418ECD  +
mov [esp+168h+var_168] 0Ah +
call putchar  +
mov edx [esp+168h+var_140] +
mov [esp+168h+var_148] offset unk_4BDE20 +
mov [esp+168h+var_144] 0 +
test edx edx +
jnz loc_418B6A  +
jmp loc_418CAC  +
add [esp+168h+var_144] 1 +
mov eax [esp+168h+var_144] +
add [esp+168h+var_148] 18h +
cmp ds:dword_4BDAA0 eax +
jbe loc_418CAC  +
mov eax [esp+168h+arg_4] +
mov ecx [esp+168h+var_144] +
mov eax [eax+1Ch] +
cmp byte ptr [eax+ecx] 1 +
jnz loc_418B50  +
mov edi [esp+168h+var_148] +
mov eax [edi] +
test eax eax +
jz loc_418B50  +
mov [esp+168h+var_164] eax +
xor ebp ebp +
mov esi 0Ch +
mov [esp+168h+var_168] offset aS_3 +
mov ebx 4 +
call sub_47D5B0  +
mov edx [edi+8] +
mov edi [edx] +
test edi edi +
jnz loc_418BFA  +
jmp loc_418C76  +
mov [esp+168h+var_168] offset asc_4BE314 +
mov ebx 4 +
call sub_47D5B0  +
mov eax [esp+168h+var_148] +
mov edx [eax+8] +
mov eax [edx+ebp] +
mov [esp+168h+var_168] offset aS_4 +
mov [esp+168h+var_164] eax +
call sub_47D5B0  +
add ebx [esp+168h+var_150] +
mov eax [esp+168h+var_148] +
mov edx [eax+8] +
lea eax [esi+0Ch] +
mov edi [edx+esi] +
test edi edi +
jz loc_418C76  +
mov ebp esi +
mov esi eax +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_14C] edx +
call strlen  +
cmp ebx 4 +
mov edx [esp+168h+var_14C] +
mov [esp+168h+var_150] eax +
jbe loc_418BCA  +
lea ebx [ebx+eax+1] +
cmp [esp+168h+arg_0] ebx +
jb loc_418BB2  +
mov [esp+168h+var_164] edi +
mov [esp+168h+var_168] offset aS_9 +
call sub_47D5B0  +
jmp loc_418BE1  +
mov esi ebp +
and esi 7FFh +
jz loc_418EBC  +
xor eax eax +
xor ebx ebx +
jmp loc_418C54  +
add ebx 1 +
cmp ebx 0Bh +
mov eax ebx +
jz loc_418B27  +
bt esi eax +
jnb loc_418C46  +
mov eax ds:off_4BCDA0[ebx*4] +
mov [esp+168h+var_168] offset aNoneFound_UseH +
mov [esp+168h+var_160] eax +
mov [esp+168h+var_164] eax +
call sub_47D5B0  +
jmp loc_418C46  +
mov [esp+168h+var_168] offset asc_4BE30D +
call sub_47D5B0  +
mov eax [esp+168h+arg_4] +
mov ecx [esp+168h+var_144] +
mov eax [eax+1Ch] +
mov byte ptr [eax+ecx] 2 +
jmp loc_418B50  +
mov [esp+168h+var_168] 0Ah +
call putchar  +
add esp 15Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
xor esi esi +
mov ebp [esp+168h+arg_4] +
and edi 1000000h +
mov [esp+168h+var_150] edi +
jmp loc_418CF8  +
mov [esp+168h+var_168] edi +
call strlen  +
mov ecx [esp+168h+arg_0] +
mov edx edi +
mov [esp+168h+var_168] ecx +
mov ecx eax +
mov eax ebx +
call sub_418760  +
add esi 18h +
cmp esi 1278h +
jz loc_418CA0  +
mov eax ds:dword_4D9140 +
add eax esi +
mov ebx [eax+10h] +
mov edi [eax] +
test ebx ebx +
jz loc_418D0D  +
cmp byte ptr [ebx] 0 +
jnz loc_418D1A  +
mov ecx [esp+168h+var_150] +
test ecx ecx +
jnz loc_418CED  +
mov ebx offset aThisOptionLack +
mov edx [ebp+0C88h] +
test edx edx +
jnz loc_418CD0  +
mov ebx [eax+0Ch] +
mov ecx [eax+8] +
mov eax [eax+4] +
mov [esp+168h+var_160] offset aDefaultDMinimu +
mov [esp+168h+var_154] ebx +
lea ebx [esp+168h+var_118] +
mov [esp+168h+var_158] ecx +
mov [esp+168h+var_15C] eax +
lea eax [esp+168h+var_118] +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_168] eax +
call sub_47D740  +
jmp loc_418CD0  +
mov [esp+168h+var_164] eax +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_148] edx +
call sub_41EBA0  +
lea ecx [esp+168h+var_118] +
mov edx [esp+168h+var_148] +
cmp [esp+168h+var_144] 1Ch +
mov [esp+168h+var_138] eax +
jbe loc_418E71  +
mov eax 9 +
mov word ptr [esp+168h+var_118] ax +
mov eax [esp+168h+var_138] +
test eax eax +
jz loc_418F9A  +
mov eax [ebx+30h] +
mov [esp+168h+var_148] ecx +
cmp eax 6 +
jz loc_418AD8  +
test byte ptr [ebx+26h] 40h +
jz loc_418F5B  +
cmp eax 4 +
jz loc_418FA3  +
cmp eax 5 +
jz loc_419050  +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_134] ebx +
mov ebx edx +
mov [esp+168h+var_148] ecx +
mov eax [eax] +
mov [esp+168h+var_138] eax +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_418DDB  +
mov [esp+168h+var_130] ebx +
mov ebx [esp+168h+var_134] +
mov [esp+168h+var_134] ecx +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
mov ecx [esp+168h+var_148] +
mov [esp+168h+var_164] offset aD +
lea edx [ecx+2] +
cmovz ecx edx +
add al al +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_148] ecx +
sbb [esp+168h+var_148] 3 +
mov [esp+168h+var_160] eax +
mov eax [esp+168h+var_148] +
mov [esp+168h+var_168] eax +
call sub_47D630  +
mov ecx [esp+168h+var_134] +
mov edx [esp+168h+var_130] +
mov [esp+168h+var_148] ecx +
jmp loc_418AD8  +
mov ecx [esp+168h+arg_4] +
movzx eax word ptr [ebx+2Ch] +
add eax [ecx+1Ch] +
cmp byte ptr [eax] 2 +
jz loc_418B03  +
mov byte ptr [eax] 1 +
jmp loc_418B03  +
mov eax 909h +
mov word ptr [esp+168h+var_118] ax +
mov byte ptr [esp+168h+var_118+2] 0 +
jmp loc_418D8F  +
mov eax [esp+168h+var_13C] +
test eax eax +
jnz loc_418B03  +
mov edx offset aThisOptionLack +
jmp loc_418968  +
mov ecx [ebx] +
mov [esp+168h+var_148] edx +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_138] ecx +
call strlen  +
mov ecx [esp+168h+var_138] +
mov edx ecx +
mov [esp+168h+var_144] eax +
jmp loc_418AC3  +
mov [esp+168h+var_168] offset aNoOptionsWithT +
call sub_47D5B0  +
jmp loc_418B27  +
mov [esp+168h+var_168] offset aAllOptionsWith +
call sub_47D5B0  +
jmp loc_418B27  +
mov ebx ds:dword_4BDAA0 +
mov [esp+168h+var_168] 1 +
mov [esp+168h+var_164] ebx +
call sub_452F00  +
mov ecx [esp+168h+arg_4] +
mov [esp+168h+var_140] ebx +
mov [ecx+1Ch] eax +
jmp loc_4188D2  +
mov ebx ds:dword_4BCD44 +
mov [esp+168h+var_168] 1 +
mov [esp+168h+var_164] ebx +
mov esi ebx +
call sub_452F00  +
mov ecx [esp+168h+arg_4] +
mov [ecx+20h] eax +
jmp loc_4188B7  +
lea ecx [esp+168h+var_118] +
mov [esp+168h+var_168] ecx +
mov [esp+168h+var_15C] eax +
mov [esp+168h+var_160] offset aSameAsS_UseThe +
mov [esp+168h+var_164] 100h +
mov [esp+168h+var_148] ecx +
call sub_47D740  +
mov ecx [esp+168h+var_148] +
jmp loc_4189C5  +
mov eax [esp+168h+arg_4] +
mov [esp+168h+var_168] edi +
mov [esp+168h+var_138] edx +
mov [esp+168h+var_164] eax +
call sub_41EBD0  +
mov ecx offset aEnabled +
test eax eax +
mov eax offset aDisabled +
cmovz ecx eax +
mov eax [esp+168h+var_148] +
mov [esp+168h+var_164] ecx +
mov [esp+168h+var_168] eax +
call strcat  +
mov edx [esp+168h+var_138] +
jmp loc_418AD8  +
mov [esp+168h+var_148] ecx +
jmp loc_418AD8  +
mov eax [esp+168h+var_138] +
mov eax [eax] +
test eax eax +
mov [esp+168h+var_134] eax +
jz loc_418AD8  +
mov [esp+168h+var_138] ebx +
mov ebx edx +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_418FBB  +
mov edx eax +
shr edx 10h +
test eax 8080h +
mov [esp+168h+var_130] ebx +
mov ebx [esp+168h+var_138] +
mov [esp+168h+var_138] eax +
mov eax edx +
mov edx [esp+168h+var_148] +
cmovnz eax [esp+168h+var_138] +
mov [esp+168h+var_160] offset aS_4 +
mov [esp+168h+var_138] eax +
lea eax [edx+2] +
cmovz edx eax +
movzx eax byte ptr [esp+168h+var_138] +
add byte ptr [esp+168h+var_138] al +
mov eax [esp+168h+var_134] +
mov [esp+168h+var_148] edx +
sbb [esp+168h+var_148] 3 +
sub [esp+168h+var_148] ecx +
mov edx [esp+168h+var_148] +
mov [esp+168h+var_15C] eax +
mov eax 100h +
mov [esp+168h+var_148] ecx +
sub eax edx +
mov [esp+168h+var_164] eax +
mov eax edx +
add eax ecx +
mov [esp+168h+var_168] eax +
call sub_47D740  +
mov edx [esp+168h+var_130] +
jmp loc_418AD8  +
mov [esp+168h+var_12C] ecx +
movzx ecx word ptr [ebx+2Ch] +
mov eax [esp+168h+var_138] +
mov [esp+168h+var_130] edx +
mov [esp+168h+var_11C] 0 +
lea ecx [ecx+ecx*2] +
lea ecx ds:4BDE20h[ecx*8] +
mov edx [ecx+14h] +
mov [esp+168h+var_148] ecx +
mov [esp+168h+var_168] eax +
call edx  +
mov ecx [esp+168h+var_148] +
mov edx [esp+168h+arg_8] +
mov ecx [ecx+8] +
mov [esp+168h+var_15C] edx +
mov [esp+168h+var_160] eax +
lea eax [esp+168h+var_11C] +
mov [esp+168h+var_164] eax +
mov [esp+168h+var_168] ecx +
call sub_41C630  +
mov eax [esp+168h+var_11C] +
mov edx [esp+168h+var_130] +
mov ecx [esp+168h+var_12C] +
test eax eax +
mov [esp+168h+var_134] eax +
jz loc_4190E3  +
mov [esp+168h+var_138] ebx +
mov ebx edx +
mov [esp+168h+var_148] ecx +
mov eax [esp+168h+var_148] +
mov edx [eax] +
add [esp+168h+var_148] 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4190C2  +
jmp loc_418FD7  +
mov [esp+168h+var_11C] offset aDefault +
mov [esp+168h+var_134] offset aDefault +
jmp loc_4190B8  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax 1 +
sub esp 2Ch +
mov [esp+30h+var_1C] ecx +
movzx ecx byte ptr ds:dword_4BCD40 +
mov [esp+30h+var_20] edx +
mov edi [esp+30h+arg_0] +
shl eax cl +
lea ebx [eax-1] +
cmp eax 10000h +
mov [esp+30h+var_14] ebx +
ja loc_41930B  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_4192B0  +
mov edx [esp+30h+var_20] +
mov ebx 1 +
xor ecx ecx +
and edx [esp+30h+var_14] +
mov ebp offset unk_4BE31A +
xor eax eax +
mov [esp+30h+var_18] edx +
jmp loc_4191AA  +
cmp edx 10000h +
jz loc_419240  +
cmp edx 20000h +
jz loc_419230  +
test edx edx +
jz loc_4191A0  +
cmp ds:dword_4BCD40 ecx +
jbe loc_4191A0  +
mov edx [esp+30h+var_18] +
mov eax offset aTheFollowingOp +
mov ebp ds:off_4BCDA0[ecx*4] +
test edx edx +
mov edx offset aTheFollowing_0 +
cmovz eax edx +
nop   +
add ecx 1 +
add ebx ebx +
cmp ecx 16h +
jz loc_4191E6  +
mov edx ebx +
and edx esi +
cmp edx 40000h +
jz loc_419250  +
jbe loc_419160  +
cmp edx 100000h +
jz loc_419270  +
cmp edx 200000h +
jz loc_419260  +
cmp edx 80000h +
jnz loc_41917C  +
add ecx 1 +
add ebx ebx +
cmp ecx 16h +
jnz loc_4191AA  +
test eax eax +
jz loc_419280  +
mov [esp+30h+var_28] ebp +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] offset aSS_0 +
call sub_47D5B0  +
mov edx [esp+30h+arg_4] +
mov eax [edi+0A0h] +
mov ecx [esp+30h+var_1C] +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_28] edx +
mov edx [esp+30h+var_20] +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_418880  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax offset aTheFollowing_1 +
jmp loc_4191A0  +
mov eax offset aTheParamOption +
jmp loc_4191A0  +
mov eax offset aTheFollowing_2 +
jmp loc_4191A0  +
mov eax offset aTheFollowing_3 +
jmp loc_4191A0  +
mov eax offset aTheFollowing_4 +
jmp loc_4191A0  +
mov eax [esp+30h+var_1C] +
test eax eax +
jnz loc_4192CD  +
test esi 1000000h +
jnz loc_4192E7  +
test esi 800000h +
jnz loc_4192F1  +
test esi 400000h +
jz loc_4192FB  +
mov eax offset aTheFollowing_5 +
jmp loc_4191EE  +
call sub_423CB0  +
mov edx 50h +
cmp eax 7FFFFFFFh +
cmovnz edx eax +
mov [edi+0A0h] edx +
jmp loc_419143  +
mov ebx [esp+30h+var_14] +
mov eax offset aTheFollowing_6 +
mov edx offset aTheFollowing_3 +
test [esp+30h+var_1C] ebx +
cmovz eax edx +
jmp loc_4191EE  +
mov eax offset aTheFollowing_7 +
jmp loc_4191EE  +
mov eax offset aTheFollowing_8 +
jmp loc_4191EE  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] offset aUnrecognizedIn +
call sub_425810  +
mov [esp+30h+var_28] offset aPrint_specific +
mov [esp+30h+var_2C] 54Dh +
mov [esp+30h+var_30] offset a____GccGccOpts +
call sub_424560  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp 4 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_24] +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+var_28] +
mov ebx edx +
mov [esp+6Ch+var_54] eax +
jmp loc_4193DF  +
add ebx 4 +
mov [esp+6Ch+var_60] 0 +
mov esi offset aOrd +
mov edi ebx +
mov ecx ebp +
cmps   +
jnz loc_419430  +
add ebx 4 +
xor edx edx +
mov [esp+6Ch+var_5C] 1 +
mov esi offset aNone_0 +
mov ecx ebp +
mov edi ebx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_419453  +
add ebx 4 +
xor ecx ecx +
cmp [esp+6Ch+var_60] 3 +
jz loc_4194D4  +
mov eax [esp+6Ch+var_5C] +
test eax eax +
jz loc_4193C1  +
mov eax [esp+6Ch+var_58] +
mov edi [esp+6Ch+var_60] +
mov [eax+edi*4+40h] ecx +
test edx edx +
jz loc_4193D1  +
mov eax [esp+6Ch+var_58] +
mov edx [esp+6Ch+var_60] +
mov [eax+edx*4+34h] ecx +
movzx eax byte ptr [ebx] +
cmp al 2Ch +
jnz loc_419510  +
add ebx 1 +
mov esi offset aDfn +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419357  +
mov esi offset aDir +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419550  +
mov esi offset aInd +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419592  +
mov [esp+6Ch+var_60] 3 +
mov esi offset aOrd +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419373  +
nop   +
lea esi [esi+0] +
mov esi offset aGen +
mov edi ebx +
mov ecx ebp +
cmps   +
jz loc_419570  +
mov edx 1 +
mov [esp+6Ch+var_5C] 1 +
jmp loc_419380  +
mov ecx 3 +
mov esi offset aAny +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_419560  +
mov ecx 3 +
mov esi offset aSys +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_419585  +
mov ecx ebp +
mov esi offset aBase +
mov edi ebx +
cmps   +
setnbe al  +
setb cl  +
cmp al cl +
jz loc_4195A2  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_68] offset aArgumentQsToFe +
mov [esp+6Ch+var_50] edx +
mov [esp+6Ch+var_6C] eax +
call sub_425710  +
mov ecx 3 +
mov edx [esp+6Ch+var_50] +
cmp [esp+6Ch+var_60] 3 +
jnz loc_4193AD  +
mov esi [esp+6Ch+var_5C] +
test esi esi +
jz loc_4194E9  +
mov eax [esp+6Ch+var_58] +
mov [eax+40h] ecx +
mov [eax+44h] ecx +
mov [eax+48h] ecx +
test edx edx +
jz loc_4193D1  +
mov eax [esp+6Ch+var_58] +
mov [eax+34h] ecx +
mov [eax+38h] ecx +
mov [eax+3Ch] ecx +
movzx eax byte ptr [ebx] +
cmp al 2Ch +
jz loc_4193DC  +
lea esi [esi+0] +
test al al +
jnz loc_4195B8  +
mov eax [esp+6Ch+var_58] +
mov edx [eax+48h] +
cmp [eax+44h] edx +
jl loc_419530  +
mov edx [eax+3Ch] +
cmp [eax+38h] edx +
jge loc_4195B0  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_28] offset aFemitStructDeb +
mov [esp+6Ch+var_2C] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425710  +
add ebx 4 +
mov [esp+6Ch+var_60] 1 +
jmp loc_419362  +
add ebx 3 +
mov ecx 3 +
jmp loc_4193A2  +
add ebx 4 +
mov edx 1 +
mov [esp+6Ch+var_5C] 0 +
jmp loc_419380  +
add ebx 3 +
mov ecx 2 +
jmp loc_4193A2  +
add ebx 4 +
mov [esp+6Ch+var_60] 2 +
jmp loc_419362  +
add ebx 4 +
mov ecx 1 +
jmp loc_4193A2  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_68] offset aArgumentQsTo_0 +
mov [esp+6Ch+var_6C] eax +
call sub_425710  +
jmp loc_419518  +
***
push ebx  +
mov ecx [esp+0Ch] +
mov eax [esp+8] +
cmp ecx 2 +
jle loc_419619  +
lea ebx [eax+ecx-2] +
cmp byte ptr [ebx] 2Eh +
lea edx [eax+ecx-3] +
mov eax 2 +
jnz loc_419612  +
jmp loc_419620  +
cmp eax 5 +
jg loc_419619  +
mov ebx edx +
sub edx 1 +
cmp byte ptr [edx+1] 2Eh +
jz loc_419620  +
add eax 1 +
cmp ecx eax +
jg loc_419602  +
pop ebx  +
retn   +
***
mov byte ptr [ebx] 0 +
pop ebx  +
retn   +
***
push ebx  +
mov edi [esp+arg_0] +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_419689  +
lea edx [edi+1] +
xor ebx ebx +
jmp loc_419655  +
movzx ecx byte ptr [edx] +
mov edi edx +
mov eax edx +
xor ebx ebx +
add edx 1 +
test cl cl +
jz loc_419674  +
cmp cl 5Ch +
lea esi [edx-1] +
jz loc_419645  +
cmp cl 2Fh +
jz loc_419645  +
cmp cl 2Eh +
movzx ecx byte ptr [edx] +
mov eax edx +
cmovz ebx esi +
add edx 1 +
test cl cl +
jnz loc_419655  +
mov edx ebx +
sub eax edi +
sub edx edi +
test ebx ebx +
cmovnz eax edx +
mov edx [esp+arg_4] +
mov [edx] edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_41967F  +
***
mov [esp+2Ch] ebx +
mov [esp+20h] eax +
mov eax off_4835E0 +
mov [esp+28h] ecx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
sub esp 2Ch +
mov [esp+2Ch+var_1C] offset loc_425BE0 +
mov [esp+2Ch+var_20] offset loc_425BA0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 10000h +
mov [esp+2Ch+var_2C] offset dword_4D90C0 +
call sub_459280  +
add esp 2Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
call sub_420820  +
mov esi ds:dword_4D90C0 +
test esi esi +
jz loc_419891  +
test ebp ebp +
mov esi offset unk_4BCDE0 +
mov ecx 330h +
mov edi ebx +
mov edx eax +
movs   +
jz loc_419860  +
test ebp 1 +
mov edi ebp +
mov esi 0CC0h +
jnz loc_419881  +
test edi 2 +
jnz loc_419870  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jnz loc_419848  +
and esi 1 +
jnz loc_419840  +
lea eax ds:0[edx*4] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_452ED0  +
mov edx [esp+1Ch+var_10] +
mov [ebx+54h] eax +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edx +
call sub_452F00  +
mov [ebp+54h] eax +
mov eax [ebx+54h] +
mov [esp+1Ch+var_1C] eax +
call sub_4207C0  +
mov eax dword_4835F0 +
mov dword ptr [ebx+0A60h] 1 +
mov dword ptr [ebx+0A40h] 2 +
mov [ebx+94h] eax +
movzx eax byte_4835FC +
mov [ebx+0BACh] eax +
mov eax off_4835E4 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov byte ptr [edi] 0 +
jmp loc_4197C3  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_4197C3  +
jmp loc_419840  +
shl edx 2 +
mov [esp+1Ch+var_1C] edx +
call sub_452ED0  +
mov [ebx+54h] eax +
jmp loc_4197F3  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_4197A9  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov si 0CBFh +
jmp loc_41979D  +
mov [esp+1Ch+var_14] offset aInit_options_s +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____GccGccOpts +
call sub_424560  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] eax +
jmp free  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+5Ch] +
mov ebp [esp+50h] +
cmp edi 1 +
jbe loc_419D34  +
mov ebx [esp+58h] +
mov esi 1 +
mov ecx 1 +
mov byte ptr [esp+2Fh] 0 +
mov edx 0FFh +
jmp loc_419932  +
cmp eax 7Fh +
jz loc_419BB8  +
add eax 0FFFFFF80h +
jnz loc_419928  +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+80h] 3 +
mov dword ptr [ebp+88h] 1 +
mov dword ptr [ebp+84h] 0 +
add esi 1 +
add ebx 2Ch +
cmp esi edi +
jz loc_419970  +
mov eax [ebx+2Ch] +
cmp eax 81h +
jz loc_419C20  +
jbe loc_4198F2  +
cmp eax 82h +
jz loc_419BF1  +
cmp eax 33Ch +
jnz loc_419928  +
mov eax [ebx+50h] +
test eax eax +
movzx eax byte ptr [esp+2Fh] +
cmovnz eax ecx +
add esi 1 +
add ebx 2Ch +
cmp esi edi +
mov [esp+2Fh] al +
jnz loc_419932  +
nop   +
mov eax [ebp+84h] +
mov esi [ebp+80h] +
test eax eax +
mov eax [ebp+88h] +
setnz cl  +
test eax eax +
mov eax [ebp+8Ch] +
setnz dl  +
test eax eax +
setnz al  +
movzx edi cl +
movzx eax al +
mov [esp+24h] edi +
mov ebx offset unk_4BF170 +
movzx edi dl +
mov [esp+28h] eax +
mov ecx offset unk_4BF160 +
mov eax [esp+6Ch] +
mov edx [esp+54h] +
mov [esp+8] edi +
mov [esp] esi +
mov [esp+1Ch] eax +
mov eax [esp+60h] +
mov [esp+18h] eax +
mov eax [esp+68h] +
mov [esp+14h] eax +
mov eax [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax ebp +
call sub_418070  +
mov ecx ebx +
add ebx 10h +
mov eax [ebx-10h] +
test eax eax +
jnz loc_4199B2  +
cmp byte ptr [esp+2Fh] 0 +
mov eax [ebp+80h] +
jz loc_419A1F  +
mov edx [esp+54h] +
mov ebx [edx+7CCh] +
test ebx ebx +
jz loc_419C80  +
mov edx [esp+54h] +
cmp eax 1 +
mov ebx [ebp+54h] +
mov esi [edx+54h] +
jle loc_419C9D  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp+4] 64h +
mov dword ptr [esp] 6Dh +
call sub_420700  +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
mov esi [eax+54h] +
mov dword ptr [esp] 86h +
call loc_4207A0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] eax +
mov dword ptr [esp] 86h +
call sub_420700  +
mov ecx [ebp+88h] +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
test ecx ecx +
mov esi [eax+54h] +
mov eax 1 +
jz loc_419D23  +
mov [esp+4] eax +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 0A2h +
call sub_420700  +
mov edx [ebp+8Ch] +
mov eax [esp+54h] +
test edx edx +
jz loc_419C50  +
mov edx [eax+54h] +
mov eax [ebp+54h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 43h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov eax [ebp+84h] +
test eax eax +
jz loc_419B1B  +
mov eax [esp+54h] +
mov edx [eax+54h] +
mov eax [ebp+54h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] 68h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov eax [ebp+84h] +
test eax eax +
mov eax [ebp+88h] +
mov ecx off_4835E8 +
setnz bl  +
mov esi [ebp+80h] +
test eax eax +
mov eax [ebp+8Ch] +
mov edi [ecx] +
setnz dl  +
test eax eax +
setnz al  +
test edi edi +
jz loc_419BB0  +
movzx edi bl +
movzx eax al +
mov [esp+28h] edi +
lea ebx [ecx+10h] +
movzx edi dl +
mov [esp+50h] ebp +
mov ebp [esp+28h] +
mov [esp+24h] eax +
mov eax [esp+6Ch] +
mov edx [esp+54h] +
mov [esp+0Ch] ebp +
mov [esp+8] edi +
mov [esp+1Ch] eax +
mov eax [esp+60h] +
mov [esp] esi +
mov [esp+18h] eax +
mov eax [esp+68h] +
mov [esp+14h] eax +
mov eax [esp+64h] +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
call sub_418070  +
mov ecx ebx +
add ebx 10h +
mov eax [ebx-10h] +
test eax eax +
jnz loc_419B64  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+34h] +
cmp byte ptr [eax] 0 +
jnz loc_419CD5  +
mov dword ptr [ebp+80h] 1 +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419928  +
***
mov dword ptr [ebp+8Ch] 1 +
mov dword ptr [ebp+80h] 2 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419928  +
***
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+80h] 1 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 1 +
jmp loc_419928  +
***
mov esi [eax+54h] +
mov ebx [ebp+54h] +
mov dword ptr [esp] 43h +
call loc_4207A0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 43h +
mov [esp+4] eax +
call sub_420700  +
jmp loc_419AE5  +
***
mov edx [esp+54h] +
cmp eax 1 +
mov dword ptr [ebp+7CCh] 1 +
mov ebx [ebp+54h] +
mov esi [edx+54h] +
jg loc_419A32  +
mov dword ptr [esp] 6Dh +
call loc_4207A0  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov dword ptr [esp] 6Dh +
mov [esp+4] eax +
call sub_420700  +
mov eax [esp+54h] +
mov ebx [ebp+54h] +
mov esi [eax+54h] +
mov eax 3E8h +
jmp loc_419A64  +
***
mov [esp] eax +
mov [esp+28h] edx +
mov [esp+24h] ecx +
call sub_41C520  +
mov ecx [esp+24h] +
mov edx [esp+28h] +
cmp eax 0FFFFFFFFh +
jz loc_419D65  +
cmp eax 0FFh +
cmova eax edx +
mov [ebp+80h] eax +
mov dword ptr [ebp+8Ch] 0 +
mov dword ptr [ebp+88h] 0 +
mov dword ptr [ebp+84h] 0 +
jmp loc_419928  +
***
mov dword ptr [esp] 0A2h +
call loc_4207A0  +
jmp loc_419A99  +
***
mov eax [ebp+84h] +
mov edx [ebp+88h] +
mov ebx [ebp+8Ch] +
mov esi [ebp+80h] +
test eax eax +
setnz cl  +
test edx edx +
setnz dl  +
test ebx ebx +
setnz al  +
mov byte ptr [esp+2Fh] 0 +
jmp loc_419997  +
***
mov eax [esp+60h] +
mov dword ptr [esp+4] offset aArgumentToOSho +
mov [esp] eax +
call sub_425710  +
mov ecx [esp+24h] +
mov edx [esp+28h] +
jmp loc_419928  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov ebp [esp+54h] +
mov eax [ebx+4CCh] +
test eax eax +
jz loc_419DF4  +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_419DF4  +
cmp dl 2Fh +
jz loc_419DF4  +
test dl dl +
jz loc_419DC2  +
cmp byte ptr [eax+1] 3Ah +
nop   +
jz loc_419DF4  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_419DF4  +
mov edx [ebx+4D0h] +
test edx edx +
jz loc_41A549  +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] edx +
call sub_41CAC0  +
mov [ebx+4CCh] eax +
mov byte ptr [ebx+10h] 1 +
mov esi [ebx+0B98h] +
test esi esi +
jnz loc_419E37  +
mov ecx [ebx+0A20h] +
test ecx ecx +
jz loc_419E16  +
mov edx [ebp+0A20h] +
test edx edx +
jnz loc_41A449  +
cmp dword ptr [ebx+0AECh] 1 +
mov dword ptr [ebx+0A20h] 0 +
jz loc_41A49F  +
mov dword ptr [ebx+0AECh] 0 +
mov eax [ebx+0A38h] +
test eax eax +
jz loc_419E4B  +
mov dword ptr [ebx+0AC8h] 1 +
mov eax [ebx+738h] +
test eax eax +
jz loc_419E63  +
mov eax [ebx+8B4h] +
test eax eax +
jnz loc_41A3A5  +
mov eax [ebx+80h] +
test eax eax +
mov eax [ebx+0AECh] +
jnz loc_419E7C  +
cmp eax 2 +
jz loc_41A3E3  +
test eax eax +
jz loc_41A230  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_419EAB  +
mov eax [ebx+4D8h] +
cmp eax 0FFFFFFFFh +
jz loc_41A3B6  +
test eax eax +
jz loc_41A516  +
mov [ebx+4D4h] eax +
mov byte ptr [ebx+14h] 1 +
cmp dword ptr [ebx+0A98h] 0FFFFFFFFh +
jz loc_41A330  +
mov ecx [ebx+80h] +
test ecx ecx +
jnz loc_419ED6  +
mov dword ptr [ebx+240h] 0 +
mov dword ptr [ebx+790h] 1 +
mov [esp] ebx +
call off_4835F4  +
mov edx [ebx+6C8h] +
test edx edx +
mov edx [ebx+9A0h] +
jz loc_419EF7  +
test edx edx +
jnz loc_41A299  +
mov esi [ebx+0BACh] +
test esi esi +
jz loc_41A0E0  +
cmp byte_4835FC 0 +
jnz loc_41A0E0  +
test edx edx +
jnz loc_41A414  +
lea esi [esi+0] +
mov edi [ebx+0A24h] +
test edi edi +
jnz loc_419F34  +
mov dword ptr [ebx+0A28h] 0 +
mov esi [ebx+5E8h] +
test esi esi +
jnz loc_41A2E4  +
mov ecx [ebx+864h] +
test ecx ecx +
jz loc_419F6B  +
mov edx [ebx+6E4h] +
mov dword ptr [ebx+68h] 1 +
mov dword ptr [ebx+0BF8h] 0 +
test edx edx +
jz loc_41A164  +
mov eax [ebx+0A80h] +
cmp eax 0FFFFFFFFh +
jz loc_41A1A7  +
test eax eax +
jnz loc_41A35C  +
cmp dword ptr [ebx+0BD0h] 1 +
jz loc_41A1BE  +
mov eax [ebx+0B48h] +
test eax eax +
jnz loc_41A120  +
mov eax [ebx+0B70h] +
test eax eax +
jnz loc_41A120  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0A0h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov edi [ebx+0C24h] +
test edi edi +
jz loc_419FE1  +
mov dword ptr [ebx+0C1Ch] 2 +
mov eax [ebx+98h] +
mov edx eax +
and edx 6 +
cmp edx 6 +
jz loc_41A4F7  +
mov edx eax +
and edx 9 +
cmp edx 9 +
jz loc_41A4B8  +
and eax 18h +
cmp eax 18h +
jz loc_41A4DE  +
mov esi offset dword_4BF884 +
mov eax offset aAddress +
mov edi [esp+58h] +
jmp loc_41A02A  +
add esi 10h +
mov eax [esi-4] +
test eax eax +
jz loc_41A058  +
mov edx [esi] +
test [ebx+9Ch] edx +
jz loc_41A020  +
cmp byte ptr [esi+8] 0 +
jnz loc_41A020  +
mov [esp+8] eax +
add esi 10h +
mov dword ptr [esp+4] offset aFsanitizeRecov +
mov [esp] edi +
call sub_425710  +
mov eax [esi-4] +
test eax eax +
jnz loc_41A02A  +
mov eax [ebx+98h] +
test eax 180400h +
jz loc_41A06F  +
mov dword ptr [ebx+650h] 0 +
test eax 0FFFFFEEFh +
jz loc_41A08A  +
mov dword ptr [ebx+4F0h] 0 +
mov dword ptr [ebx+0AB8h] 0 +
mov edx eax +
and edx 2 +
jz loc_41A09F  +
mov esi [ebp+9C8h] +
test esi esi +
jz loc_41A133  +
mov ecx [ebx+9C8h] +
test ecx ecx +
jnz loc_41A13D  +
test edx edx +
jz loc_41A0BF  +
mov ecx [ebx+738h] +
test ecx ecx +
jnz loc_41A38E  +
test al 4 +
jz loc_41A0D1  +
mov edx [ebx+738h] +
test edx edx +
jnz loc_41A2D0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test edx edx +
jz loc_419F20  +
cmp byte_4835FD 0 +
jnz loc_41A257  +
mov eax [ebp+9A0h] +
test eax eax +
jnz loc_41A521  +
mov dword ptr [ebx+9A0h] 0 +
mov dword ptr [ebx+998h] 1 +
jmp loc_419F20  +
***
mov eax [ebx+0B38h] +
test eax eax +
jnz loc_419FCD  +
jmp loc_419FAB  +
***
mov dword ptr [ebx+9C8h] 1 +
mov edi [ebx+0A9Ch] +
test edi edi +
jz loc_41A155  +
mov esi [ebp+0A9Ch] +
test esi esi +
jnz loc_41A462  +
mov dword ptr [ebx+0A9Ch] 0 +
jmp loc_41A0AD  +
***
mov eax [ebp+0BB8h] +
test eax eax +
jz loc_419F6B  +
mov eax [ebx+0BB8h] +
test eax eax +
jnz loc_419F6B  +
mov eax [ebp+6E4h] +
test eax eax +
jnz loc_41A660  +
mov eax [ebx+0A80h] +
mov dword ptr [ebx+6E4h] 1 +
cmp eax 0FFFFFFFFh +
jnz loc_419F7A  +
cmp dword ptr [ebx+0BD0h] 1 +
mov dword ptr [ebx+0A80h] 0 +
jnz loc_419F8F  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 6 +
mov dword ptr [esp] 52h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 51h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 53h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
jmp loc_419F8F  +
***
mov edi [ebx+0A20h] +
test edi edi +
jz loc_41A248  +
mov esi [ebp+0A20h] +
test esi esi +
jnz loc_41A486  +
mov dword ptr [ebx+0A20h] 0 +
jmp loc_419E84  +
***
mov edx [ebx+0BACh] +
test edx edx +
jz loc_41A27C  +
cmp byte_4835FC 0 +
jz loc_41A27C  +
cmp eax 2 +
jg loc_41A0F5  +
cmp eax 1 +
jz loc_41A0F5  +
mov eax [ebp+964h] +
test eax eax +
jnz loc_41A33F  +
mov dword ptr [ebx+9A0h] 0 +
jmp loc_419F20  +
***
cmp eax 2 +
jg loc_41A2A7  +
cmp eax 1 +
jnz loc_419EF7  +
mov edi [ebp+9A0h] +
test edi edi +
jnz loc_41A63F  +
mov dword ptr [ebx+9A0h] 0 +
xor edx edx +
mov dword ptr [ebx+998h] 1 +
jmp loc_419EF7  +
***
mov dword ptr [esp] offset aTransactionalM +
call sub_4257B0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 64h +
mov dword ptr [esp] 18h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
mov edx [ebp+54h] +
mov eax [ebx+54h] +
mov dword ptr [esp+4] 28h +
mov dword ptr [esp] 19h +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call sub_420700  +
jmp loc_419F42  +
***
mov dword ptr [ebx+0A98h] 0 +
jmp loc_419EB8  +
***
mov eax [ebp+9A4h] +
test eax eax +
jnz loc_419F20  +
mov dword ptr [ebx+9A4h] 1 +
jmp loc_419F20  +
***
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call off_4835F8  +
test al al +
jnz loc_419F82  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsplitStackIsN +
mov [esp] eax +
call sub_425710  +
jmp loc_41A1A7  +
***
mov dword ptr [esp] offset aTransactiona_0 +
call sub_4257B0  +
mov eax [ebx+98h] +
jmp loc_41A0BF  +
***
mov dword ptr [esp] offset aTransactiona_1 +
call sub_4257B0  +
jmp loc_419E63  +
***
mov eax [ebx+4D4h] +
mov dword ptr [ebx+4D8h] 0 +
cmp eax 0FFFFFFFFh +
jz loc_41A53A  +
test eax eax +
jz loc_419EA7  +
mov dword ptr [ebx+78h] 1 +
jmp loc_419EA7  +
***
mov eax [ebx+0A20h] +
test eax eax +
jz loc_41A3FB  +
mov eax [ebp+0A20h] +
test eax eax +
jnz loc_419E84  +
mov dword ptr [ebx+0AECh] 0 +
mov dword ptr [ebx+0A20h] 0 +
jmp loc_419E84  +
***
cmp eax 2 +
jg loc_41A422  +
cmp eax 1 +
jnz loc_41A0E8  +
mov ecx [ebp+9A0h] +
test ecx ecx +
jz loc_41A103  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBlocks +
mov [esp] eax +
call sub_425390  +
jmp loc_41A103  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aSectionAnchors +
mov [esp] eax +
call sub_425710  +
jmp loc_419E16  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAddre +
mov [esp] eax +
call sub_425710  +
mov eax [ebx+98h] +
mov edx eax +
and edx 2 +
jmp loc_41A155  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aSectionAncho_0 +
mov [esp] eax +
call sub_425710  +
jmp loc_41A248  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aToplevelReorde +
mov [esp] eax +
call sub_425710  +
jmp loc_419E2D  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAdd_0 +
mov [esp] eax +
call sub_425710  +
mov eax [ebx+98h] +
and eax 18h +
cmp eax 18h +
jnz loc_41A00F  +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeLeakI +
mov [esp] eax +
call sub_425710  +
jmp loc_41A00F  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFsanitizeAdd_1 +
mov [esp] eax +
call sub_425710  +
mov eax [ebx+98h] +
jmp loc_419FF5  +
***
mov eax [ebx+4D4h] +
jmp loc_41A3C6  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBloc_0 +
mov [esp] eax +
call sub_425390  +
jmp loc_41A103  +
***
mov dword ptr [ebx+4D4h] 0 +
jmp loc_419EA7  +
***
mov eax [ebx+4C8h] +
test eax eax +
jz loc_419DF0  +
mov edi offset aNul_0 +
mov ecx 4 +
mov esi eax +
cmps   +
jz loc_419DF0  +
lea edx [esp+2Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_419630  +
mov edi [ebx+4C8h] +
mov esi [esp+2Ch] +
cmp edi esi +
jz loc_419DF0  +
mov eax [ebx+4CCh] +
sub esi edi +
mov [esp] eax +
call strlen  +
mov edx ds:dword_4D90D0 +
mov [esp+14h] esi +
mov ecx edx +
lea esi [esi+eax+1] +
mov eax ds:dword_4D90CC +
sub ecx eax +
cmp esi ecx +
ja loc_41A685  +
mov ecx ds:dword_4D90C8 +
add eax esi +
cmp eax ecx +
mov [esp+18h] ecx +
jz loc_41A679  +
mov ecx ds:dword_4D90D8 +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx ds:dword_4D90C4 +
mov esi eax +
mov ds:dword_4D90CC eax +
sub esi ecx +
mov [esp+1Ch] esi +
mov esi edx +
sub esi ecx +
cmp [esp+1Ch] esi +
jbe loc_41A601  +
mov ds:dword_4D90CC edx +
mov eax edx +
mov esi [esp+14h] +
mov [esp+4] edi +
mov edi [esp+18h] +
mov ds:dword_4D90C8 eax +
mov [esp+8] esi +
mov [esp] edi +
call memcpy  +
mov eax [ebx+4CCh] +
mov [esp+4] eax +
mov eax esi +
add eax edi +
mov [esp] eax +
call strcpy  +
mov [ebx+4CCh] edi +
jmp loc_419DF0  +
***
mov [esp+14h] eax +
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFreorderBloc_1 +
mov [esp] eax +
call sub_425390  +
mov eax [esp+14h] +
jmp loc_41A2B5  +
***
mov eax [esp+58h] +
mov dword ptr [esp+4] offset aFnoFatLtoObjec +
mov [esp] eax +
call sub_425710  +
jmp loc_41A18E  +
***
or ds:byte_4D90E8 2 +
jmp loc_41A5D0  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset dword_4D90C0 +
call sub_4592E0  +
mov eax ds:dword_4D90CC +
mov edx ds:dword_4D90D0 +
mov edi [ebx+4C8h] +
jmp loc_41A5BC  +
***
push esi  +
push ebx  +
sub esp 4Ch +
movzx eax [esp+4Ch+arg_14] +
mov ebp [esp+4Ch+arg_0] +
mov [esp+4Ch+var_D] al +
cmp byte ptr [ebp+0] 0 +
jz loc_41A6FB  +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] ebp +
call strchr  +
mov esi eax +
sub esi ebp +
test eax eax +
mov [esp+4Ch+var_24] eax +
jz loc_41A8C1  +
test esi esi +
jnz loc_41A707  +
mov ebp [esp+4Ch+var_24] +
add ebp 1 +
cmp byte ptr [ebp+0] 0 +
jnz loc_41A6CA  +
mov eax [esp+4Ch+arg_C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax offset aAddress +
xor ebx ebx +
jmp loc_41A71D  +
mov eax ds:off_4BF890[edi] +
add ebx 1 +
test eax eax +
jz loc_41A766  +
mov edi ebx +
shl edi 4 +
cmp ds:dword_4BF888[edi] esi +
jnz loc_41A710  +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call memcmp  +
test eax eax +
jnz loc_41A710  +
mov edx [esp+4Ch+arg_10] +
mov eax ds:dword_4BF884[edi] +
test edx edx +
jnz loc_41A8D0  +
not eax  +
and [esp+4Ch+arg_C] eax +
mov ebp [esp+4Ch+var_24] +
test ebp ebp +
jz loc_41A6FB  +
add ebp 1 +
jmp loc_41A6C4  +
cmp [esp+4Ch+var_D] 0 +
jz loc_41A756  +
mov eax esi +
mov ebx offset dword_4BF884 +
shr eax 1 +
mov edi offset aAddress +
mov [esp+4Ch+var_20] eax +
mov eax 0FFFFFFFFh +
mov [esp+4Ch+arg_0] ebp +
mov ebp eax +
mov [esp+4Ch+var_18] 0 +
jmp loc_41A80E  +
cmp byte ptr [ebx+8] 0 +
jnz loc_41A7AC  +
cmp [esp+4Ch+arg_8] 392h +
jnz loc_41A7AC  +
mov eax [esp+4Ch+arg_10] +
test eax eax +
jnz loc_41A804  +
mov [esp+4Ch+var_4C] edi +
call strlen  +
mov edx eax +
mov ecx eax +
sub edx esi +
mov eax edx +
sar eax 1Fh +
xor edx eax +
sub edx eax +
cmp edx ebp +
jnb loc_41A804  +
mov eax ecx +
shr eax 1 +
cmp esi ecx +
cmova eax [esp+4Ch+var_20] +
cmp eax edx +
jb loc_41A804  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_1C] ecx +
call sub_420970  +
cmp eax ebp +
jnb loc_41A804  +
mov ecx [esp+4Ch+var_1C] +
mov ebp eax +
mov [esp+4Ch+var_18] edi +
mov [esp+4Ch+var_14] ecx +
add ebx 10h +
mov edi [ebx-4] +
test edi edi +
jz loc_41A837  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_41A794  +
cmp [esp+4Ch+arg_8] 395h +
jnz loc_41A794  +
mov eax [esp+4Ch+arg_10] +
test eax eax +
jz loc_41A794  +
add ebx 10h +
mov edi [ebx-4] +
test edi edi +
jnz loc_41A80E  +
mov edi [esp+4Ch+var_18] +
mov edx ebp +
mov ebp [esp+4Ch+arg_0] +
test edi edi +
jz loc_41A85C  +
mov ecx [esp+4Ch+var_14] +
mov eax ecx +
shr eax 1 +
cmp esi ecx +
cmova eax [esp+4Ch+var_20] +
cmp edx eax +
ja loc_41A8E8  +
test edx edx +
jz loc_41A8E8  +
mov ecx [esp+4Ch+var_18] +
test ecx ecx +
jz loc_41A8E8  +
mov ebx [esp+4Ch+arg_10] +
mov eax offset aRecover +
mov edx offset unk_4BE31A +
cmp [esp+4Ch+arg_8] 395h +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_38] ebp +
cmovnz edx eax +
test ebx ebx +
mov eax offset aNo +
mov ebx offset unk_4BE31A +
cmovnz eax ebx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_3C] esi +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aUnrecognizedAr +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
jmp loc_41A756  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
mov esi eax +
jmp loc_41A6EA  +
cmp eax 0FFFFFFFFh +
jz loc_41A939  +
cmp [esp+4Ch+arg_8] 392h +
jz loc_41A950  +
or [esp+4Ch+arg_C] eax +
jmp loc_41A756  +
cmp [esp+4Ch+arg_8] 395h +
mov eax offset aRecover +
mov edx offset unk_4BE31A +
mov ecx offset unk_4BE31A +
mov [esp+4Ch+var_38] ebp +
cmovnz edx eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_3C] esi +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aUnrecognized_1 +
test eax eax +
mov eax offset aNo +
cmovnz eax ecx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
jmp loc_41A756  +
cmp [esp+4Ch+arg_8] 395h +
jz loc_41A964  +
or [esp+4Ch+arg_C] 0FFFFF6E7h +
jmp loc_41A756  +
cmp eax 7E7FE0h +
jnz loc_41A8DF  +
or [esp+4Ch+arg_C] 7E76E0h +
jmp loc_41A756  +
cmp [esp+4Ch+var_D] 0 +
jz loc_41A756  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] offset aFsanitizeAllOp +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
jmp loc_41A756  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ecx [esp+5Ch+arg_8] +
mov eax [esp+5Ch+arg_8] +
cmp dword ptr [ecx+20h] 2 +
mov eax [eax] +
mov ebp [ecx+8] +
mov ebx [ecx+24h] +
ja loc_41C15C  +
cmp eax 342h +
jg loc_41AAE4  +
cmp eax 341h +
jge loc_41AA32  +
cmp eax 1F0h +
jz loc_41BCEC  +
jg loc_41AA90  +
cmp eax 0F2h +
jz loc_41BE68  +
nop   +
jle loc_41ABD0  +
cmp eax 188h +
jz loc_41BB49  +
jg loc_41ADC0  +
cmp eax 16Eh +
jz loc_41B178  +
jle loc_41B7D5  +
cmp eax 16Fh +
jz loc_41B984  +
cmp eax 172h +
jnz loc_41B570  +
cmp ebx 1 +
mov esi [esp+5Ch+arg_0] +
sbb eax eax +
not eax  +
and eax 2 +
mov [esi+3C0h] eax +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_10] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_410240  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 25Bh +
jz loc_41AA32  +
jle loc_41AD03  +
cmp eax 2DBh +
jz loc_41BDCD  +
jle loc_41AE85  +
cmp eax 31Eh +
jz loc_41BDA0  +
jg loc_41AF50  +
cmp eax 30Ah +
jz loc_41BB13  +
cmp eax 315h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_1C] +
mov [eax+70h] ebx +
jmp loc_41AA32  +
cmp eax 3D6h +
jz loc_41BE82  +
jg loc_41AB57  +
cmp eax 391h +
jz loc_41BCD1  +
lea esi [esi+0] +
jle loc_41AC50  +
cmp eax 3A5h +
jz loc_41BD12  +
jg loc_41B430  +
cmp eax 395h +
jz loc_41B18E  +
jle loc_41B786  +
cmp eax 3A3h +
jz loc_41B975  +
cmp eax 3A4h +
jnz loc_41B570  +
mov esi [esp+5Ch+arg_0] +
mov eax 0FFFFFFFFh +
test ebx ebx +
cmovnz eax ebx +
mov [esi+0A00h] eax +
jmp loc_41AA32  +
cmp eax 45Bh +
jz loc_41BCA1  +
jg loc_41AD51  +
cmp eax 434h +
jle loc_41B480  +
cmp eax 456h +
jz loc_41BD31  +
jg loc_41AEF0  +
cmp eax 44Fh +
jz loc_41BB2E  +
cmp eax 454h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
mov edx 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_4182C0  +
jmp loc_41AA32  +
cmp eax 67h +
jz loc_41BA3A  +
lea esi [esi+0] +
jg loc_41B3F0  +
cmp eax 1Ch +
jz loc_41B0D1  +
nop   +
jle loc_41B7FB  +
cmp eax 3Dh +
jz loc_41B9A3  +
cmp eax 5Dh +
jnz loc_41B570  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41AA32  +
call [esp+5Ch+arg_20]  +
mov eax [esp+7Ch] +
xor ecx ecx +
mov edx 1000000h +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
mov eax 100000h +
call sub_419100  +
lea esi [esi+0] +
mov eax [esp+70h] +
mov byte ptr [eax+11h] 1 +
jmp loc_41AA32  +
cmp eax 365h +
jz loc_41BD72  +
jle loc_41B4D4  +
cmp eax 36Dh +
jz loc_41B068  +
lea esi [esi+0] +
jg loc_41B761  +
cmp eax 369h +
jz loc_41ACA9  +
cmp eax 36Ah +
jnz loc_41B570  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452FA0  +
mov esi [esp+5Ch+arg_0] +
mov dword ptr [esi+964h] 1 +
mov [esi+954h] eax +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
mov edx [esp+5Ch+arg_4] +
call sub_417EF0  +
mov eax [esp+5Ch+arg_4] +
mov esi [eax+958h] +
test esi esi +
jnz loc_41ACD0  +
mov eax [esp+5Ch+arg_0] +
mov [eax+958h] ebx +
mov eax [esp+5Ch+arg_4] +
mov ecx [eax+65Ch] +
test ecx ecx +
jnz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov edx [eax+0BE0h] +
test edx edx +
jz loc_41AA32  +
mov dword ptr [eax+65Ch] 0 +
jmp loc_41AA32  +
cmp eax 23Bh +
jz loc_41AA32  +
jle loc_41B54F  +
cmp eax 253h +
jz loc_41BB01  +
nop   +
jg loc_41AEC1  +
cmp eax 250h +
jz loc_41BD19  +
cmp eax 252h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+0A3h]  +
jmp loc_41AA32  +
cmp eax 46Dh +
jg loc_41B514  +
cmp eax 46Ch +
jge loc_41B27E  +
cmp eax 468h +
jg loc_41B5A4  +
cmp eax 467h +
jge loc_41BC54  +
cmp eax 466h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_14] +
mov ecx offset unk_4BE31A +
mov edx 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_4182C0  +
jmp loc_41AA32  +
cmp eax 1C4h +
jz loc_41AE60  +
nop   +
lea esi [esi+0] +
jg loc_41B6F5  +
cmp eax 1BCh +
jz loc_41BA4D  +
cmp eax 1BFh +
jnz loc_41B570  +
mov [esp+5Ch+var_5C] ebp +
call sub_452FA0  +
mov [esp+5Ch+var_5C] eax +
mov esi eax +
call strlen  +
cmp eax 2 +
mov ebx eax +
jle loc_41AE3B  +
lea eax [esi+eax-2] +
mov edx 2 +
cmp byte ptr [eax] 2Eh +
lea ecx [esi+ebx-3] +
jnz loc_41AE34  +
jmp loc_41BF46  +
cmp edx 5 +
jg loc_41AE3B  +
mov eax ecx +
sub ecx 1 +
cmp byte ptr [ecx+1] 2Eh +
jz loc_41BF46  +
add edx 1 +
cmp ebx edx +
jg loc_41AE20  +
cmp byte ptr [esi] 0 +
jz loc_41BC35  +
mov eax [esp+5Ch+arg_0] +
mov [eax+4C8h] esi +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+13h] 1 +
nop   +
lea esi [esi+0] +
movsx eax byte ptr [ebp+0] +
test al al +
jz loc_41AA32  +
lea edx [eax-41h] +
add ebp 1 +
cmp dl 37h +
ja loc_41B2B6  +
movzx edx dl +
jmp ds:off_4BEF30[edx*4]  +
cmp eax 2CDh +
jz loc_41B077  +
jle loc_41B5DB  +
cmp eax 2D2h +
jz loc_41BC8C  +
cmp eax 2D3h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov edx ebp +
add eax 0ACh +
call sub_4183C0  +
jmp loc_41AA32  +
cmp eax 254h +
jz loc_41BD61  +
cmp eax 255h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+63h]  +
jmp loc_41AA32  +
cmp eax 458h +
jz loc_41BDE2  +
cmp eax 459h +
jnz loc_41B570  +
lea eax [ebx-2] +
cmp eax 3 +
ja loc_41BEE3  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0C14h] ebx +
mov eax [esp+5Ch+arg_14] +
mov ecx offset unk_4BE31A +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 3 +
call sub_4182C0  +
jmp loc_41AA32  +
cmp eax 339h +
jz loc_41BA1E  +
cmp eax 33Ah +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+12h] 1 +
cmp byte ptr [ebp+0] 0 +
jz loc_41AA32  +
mov ebx offset aDisable_0 +
jmp loc_41AF9A  +
cmp dl 2Ch +
jz loc_41AFE4  +
test eax eax +
jz loc_41AA32  +
cmp byte ptr [eax+1] 0 +
lea ebp [eax+1] +
jz loc_41AA32  +
mov [esp+5Ch+var_58] 2Ch +
mov esi ebp +
mov edi ebx +
mov [esp+5Ch+var_5C] ebp +
call strchr  +
mov ecx 7 +
cmps   +
jnz loc_41AFCC  +
movzx edx byte ptr [ebp+7] +
test dl dl +
jz loc_41BFF9  +
cmp dl 2Ch +
jz loc_41BFF9  +
mov edi offset aHsa +
mov esi ebp +
mov ecx 3 +
cmps   +
jnz loc_41AF85  +
movzx edx byte ptr [ebp+3] +
test dl dl +
jnz loc_41AF80  +
mov [esp+5Ch+var_5C] offset aHsaHasNotBeenE +
mov [esp+5Ch+var_28] eax +
call sub_4257B0  +
mov eax [esp+5Ch+var_28] +
jmp loc_41AF85  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+90h] 1 +
jmp loc_41AE60  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+74h] 1 +
jmp loc_41AE60  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+60h] 1 +
mov dword ptr [eax+74h] 1 +
jmp loc_41AE60  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 16h +
call signal  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+64h] 1 +
jmp loc_41AE60  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+5Ch] 1 +
jmp loc_41AE60  +
xor eax eax +
test ebx ebx +
jz loc_41AA32  +
jmp loc_41AA87  +
mov eax [esp+5Ch+arg_4] +
mov ecx ebx +
shr ecx 1Fh +
add ebx ecx +
sar ebx 1 +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] offset aMaxInlineInsns +
mov [esp+5Ch+var_54] eax +
call sub_420600  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] offset aMaxInlineIns_0 +
mov [esp+5Ch+var_54] eax +
call sub_420600  +
jmp loc_41AA32  +
cmp [esp+5Ch+arg_C] 80000h +
mov [esp+5Ch+var_14] 0 +
mov esi ds:_strnicmp +
mov [esp+5Ch+var_10] 0 +
jz loc_41AA32  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_41B144  +
lea ecx [esp+5Ch+var_14] +
cmp al 5Eh +
mov [esp+5Ch+var_24] ecx +
jz loc_41B390  +
mov [esp+5Ch+var_58] 2Ch +
mov [esp+5Ch+var_5C] ebp +
call strchr  +
mov ebx eax +
sub ebx ebp +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_41B540  +
test ebx ebx +
jnz loc_41B2E0  +
mov ebp [esp+5Ch+var_28] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_41B0FD  +
mov ebx [esp+5Ch+var_14] +
test ebx ebx +
jz loc_41AC40  +
call [esp+5Ch+arg_20]  +
mov eax [esp+7Ch] +
xor ecx ecx +
mov edx [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
mov eax ebx +
call sub_419100  +
jmp loc_41AC40  +
mov eax [esp+5Ch+arg_0] +
cmp ebx 0FFFFFFFFh +
mov [eax+3B4h] ebx +
setnz byte ptr [eax+15h]  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+98h] +
mov [esp+5Ch+var_48] 1 +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_54] 395h +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_41A6B0  +
mov esi [esp+5Ch+arg_0] +
test al 4 +
mov [esi+98h] eax +
jz loc_41AA32  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esi+54h] +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0B1h +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_54] eax +
call sub_420700  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0ACh +
mov [esp+5Ch+var_54] eax +
call sub_420700  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0ABh +
mov [esp+5Ch+var_54] eax +
call sub_420700  +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] 0B0h +
mov [esp+5Ch+var_54] eax +
call sub_420700  +
jmp loc_41AA32  +
xor edx edx +
cmp eax 46Dh +
mov eax [esp+5Ch+arg_14] +
setz dl  +
mov ecx ebp +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 4 +
call sub_4182C0  +
jmp loc_41AA32  +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] offset aUnrecognizedGc +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] eax +
call sub_4254A0  +
jmp loc_41AE60  +
mov eax offset aOptimizers +
xor edi edi +
jmp loc_41B302  +
add edi 1 +
mov eax ds:off_4BF080[edi*8] +
test eax eax +
jz loc_41B4C7  +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
call esi  +
test eax eax +
jnz loc_41B2F0  +
mov eax ds:dword_4BF084[edi*8] +
mov [esp+3Ch] eax +
mov eax ds:dword_4BCD40 +
test eax eax +
jz loc_41B3B0  +
xor edi edi +
jmp loc_41B33B  +
add edi 1 +
cmp edi ds:dword_4BCD40 +
jz loc_41B3B0  +
mov eax ds:off_4BCDA0[edi*4] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] ebp +
mov [esp-10h+arg_0] eax +
call esi  +
test eax eax +
jnz loc_41B330  +
mov ecx edi +
mov edi [esp+3Ch] +
mov edx 1 +
shl edx cl +
test edi edi +
jz loc_41B3E1  +
test edx edx +
jnz loc_41BE97  +
mov eax [esp+38h] +
mov ecx [esp+3Ch] +
or [eax] ecx +
mov ebp [esp+34h] +
test ebp ebp +
jz loc_41B144  +
add ebp 1 +
jmp loc_41B0F5  +
cmp byte ptr [ebp+1] 0 +
lea eax [ebp+1] +
jz loc_41C037  +
mov ebp eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_24] eax +
jmp loc_41B10D  +
mov eax [esp+3Ch] +
test eax eax +
jnz loc_41B36C  +
mov eax [esp+84h] +
mov [esp-10h+arg_C] ebp +
mov [esp-10h+arg_8] ebx +
mov [esp-10h+arg_4] offset aUnrecognized_2 +
mov [esp-10h+arg_0] 0 +
mov [esp+0] eax +
call sub_4254A0  +
jmp loc_41B376  +
test edx edx +
jz loc_41B3B8  +
mov eax [esp+38h] +
or [eax] edx +
jmp loc_41B376  +
cmp eax 0DCh +
jz loc_41BC42  +
jle loc_41C06B  +
cmp eax 0DEh +
jz loc_41BB5B  +
cmp eax 0E1h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+6Ch]  +
jmp loc_41AA32  +
cmp eax 3CEh +
jz loc_41B068  +
jg loc_41C08C  +
cmp eax 3B7h +
jz loc_41BD8E  +
cmp eax 3CDh +
jnz loc_41B570  +
mov edi offset aNo_1 +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_41BF03  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+50h] 0 +
jmp loc_41AA32  +
cmp eax 432h +
jge loc_41AA32  +
cmp eax 422h +
jz loc_41BAC8  +
cmp eax 42Bh +
jz loc_41BA5D  +
cmp eax 3F7h +
jnz loc_41B570  +
test ebx ebx +
jz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+0C04h] 0 +
jmp loc_41AA32  +
mov [esp+5Ch+var_20] 0 +
jmp loc_41B31E  +
cmp eax 358h +
jg loc_41B8E5  +
cmp eax 357h +
jge loc_41AA32  +
cmp eax 349h +
jnz loc_41B570  +
lea eax [ebx-1] +
cmp eax 0Fh +
ja loc_41BEC3  +
test ebx eax +
jnz loc_41BEC3  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0A4h] ebx +
jmp loc_41AA32  +
cmp eax 4A5h +
jz loc_41BDFF  +
jle loc_41C05B  +
cmp eax 4FBh +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+6Dh] 1 +
jmp loc_41AA32  +
mov [esp+5Ch+var_5C] ebp +
call strlen  +
mov ebx eax +
jmp loc_41B12D  +
cmp eax 237h +
jz loc_41AC40  +
jg loc_41C09C  +
lea edx [eax-1FFh] +
cmp edx 1 +
jbe loc_41AA32  +
nop   +
mov esi [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_58] esi +
call sub_41EBA0  +
test eax eax +
jnz loc_41AA32  +
mov [esp+5Ch+var_54] offset aCommon_handl_0 +
mov [esp+5Ch+var_58] 931h +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424560  +
cmp eax 46Bh +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 5 +
call sub_4182C0  +
jmp loc_41AA32  +
cmp eax 281h +
jnz loc_41C07C  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CBAh] 0 +
jnz loc_41B657  +
cmp byte ptr [eax+0CB9h] 0 +
mov [eax+0BA4h] ebx +
jnz loc_41B613  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0AF8h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB8h] 0 +
jnz loc_41B631  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0A64h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB0h] 0 +
jnz loc_41B644  +
mov [eax+520h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB5h] 0 +
jnz loc_41B657  +
mov [eax+980h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB3h] 0 +
jnz loc_41B66A  +
mov [eax+6E8h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB4h] 0 +
jnz loc_41B688  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+870h] eax +
test ebx ebx +
jz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB2h] 0 +
jnz loc_41B6A7  +
mov dword ptr [eax+6CCh] 1 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB7h] 0 +
jnz loc_41B6BE  +
mov dword ptr [eax+0A58h] 0 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB6h] 0 +
jnz loc_41B6D5  +
mov dword ptr [eax+9C0h] 0 +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB1h] 0 +
jnz loc_41AA32  +
mov dword ptr [eax+60Ch] 1 +
jmp loc_41AA32  +
cmp eax 1EAh +
jz loc_41AA32  +
cmp eax 1EFh +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
mov edx [esp+5Ch+arg_4] +
call sub_417EF0  +
mov eax [esp+5Ch+arg_4] +
mov eax [eax+950h] +
test eax eax +
jnz loc_41B732  +
mov eax [esp+5Ch+arg_0] +
mov [eax+950h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+54h] +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+54h] +
mov [esp+5Ch+var_50] edx +
mov [esp+5Ch+var_58] 0Ah +
mov [esp+5Ch+var_5C] 9 +
mov [esp+5Ch+var_54] eax +
call sub_420700  +
jmp loc_41AA32  +
cmp eax 36Eh +
jz loc_41AA32  +
cmp eax 38Fh +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov [eax+9C8h] ebx +
jmp loc_41AA32  +
cmp eax 392h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+9Ch] +
mov [esp+5Ch+var_48] 1 +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_54] 392h +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_41A6B0  +
mov esi [esp+5Ch+arg_0] +
mov [esi+9Ch] eax +
jmp loc_41AA32  +
cmp eax 110h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_0] +
mov ecx ebx +
sar ecx 1Fh +
cmp ebx 0FFFFFFFFh +
mov [eax+8] ebx +
mov [eax+0Ch] ecx +
setnz byte ptr [eax+1Ah]  +
jmp loc_41AA32  +
cmp eax 1Bh +
jnz loc_41B570  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov edi 1 +
mov esi [esp+5Ch+arg_0] +
movzx ecx byte ptr ds:dword_4BCD40 +
mov eax [eax+1CCh] +
or eax [esi+0C94h] +
mov esi 1 +
cmp eax 1 +
sbb ebp ebp +
xor ebx ebx +
shl esi cl +
and ebp 1000000h +
call [esp+5Ch+arg_20]  +
mov eax ds:dword_4BCD40 +
sub esi 1 +
test eax eax +
jz loc_41B88F  +
lea esi [esi+0] +
mov ecx ebx +
mov eax edi +
shl eax cl +
mov ecx [esp+7Ch] +
add ebx 1 +
mov edx eax +
not edx  +
and edx esi +
mov [esp-10h+arg_0] ecx +
mov ecx [esp+70h] +
or edx ebp +
mov [esp+0] ecx +
xor ecx ecx +
call sub_419100  +
cmp ebx ds:dword_4BCD40 +
jnz loc_41B860  +
mov eax [esp+7Ch] +
mov ecx esi +
mov edx ebp +
mov ebx 10000h +
mov [esp-10h+arg_0] eax +
mov eax [esp+70h] +
mov [esp+0] eax +
xor eax eax +
call sub_419100  +
mov esi [esp+70h] +
mov edi [esp+7Ch] +
cmp ebx 80000h +
mov eax 100000h +
cmovz ebx eax +
mov edx ebp +
xor ecx ecx +
mov eax ebx +
mov [esp-10h+arg_0] edi +
add ebx ebx +
mov [esp+0] esi +
call sub_419100  +
cmp ebx 200000h +
jbe loc_41B8B6  +
jmp loc_41AC40  +
cmp eax 364h +
jnz loc_41B570  +
mov eax [esp+5Ch+arg_4] +
mov eax [eax+94Ch] +
test eax eax +
jnz loc_41B908  +
mov eax [esp+5Ch+arg_0] +
mov [eax+94Ch] ebx +
mov eax [esp+5Ch+arg_4] +
mov ebp [eax+968h] +
test ebp ebp +
jnz loc_41B920  +
mov eax [esp+5Ch+arg_0] +
mov [eax+968h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edi [eax+798h] +
test edi edi +
jnz loc_41B938  +
mov eax [esp+5Ch+arg_0] +
mov [eax+798h] ebx +
mov eax [esp+5Ch+arg_4] +
mov esi [eax+7B0h] +
test esi esi +
jnz loc_41B950  +
mov eax [esp+5Ch+arg_0] +
mov [eax+7B0h] ebx +
mov eax [esp+5Ch+arg_4] +
mov ebx [eax+7D8h] +
test ebx ebx +
jnz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+7D8h] 0 +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0A04h] ebx +
jmp loc_41AA32  +
cmp ebx 1 +
ja loc_41C178  +
mov esi [esp+5Ch+arg_0] +
sbb eax eax +
not eax  +
and eax 3 +
mov [esi+3B8h] eax +
jmp loc_41AA32  +
mov [esp+5Ch+var_5C] ebp +
call sub_452FA0  +
mov [esp+5Ch+var_58] 3Dh +
mov [esp+5Ch+var_5C] eax +
mov ebx eax +
call strchr  +
test eax eax +
mov esi eax +
jz loc_41C0AC  +
mov byte ptr [eax] 0 +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
call sub_4203D0  +
test al al +
jnz loc_41BF4E  +
mov [esp+5Ch+var_5C] ebx +
call sub_420430  +
test eax eax +
jz loc_41C118  +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aInvalidParamNa +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
mov [esp+5Ch+var_5C] ebx +
call free  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_58] offset aFoffloadAbiOpt +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41AA32  +
cmp [esp+5Ch+arg_C] 80000h +
jnz loc_41AC40  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+64h] 1 +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB9h] 0 +
jnz loc_41BA7B  +
mov esi [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [esi+0AF8h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB8h] 0 +
jnz loc_41BA99  +
mov ecx [esp+5Ch+arg_0] +
xor eax eax +
test ebx ebx +
setz al  +
mov [ecx+0A64h] eax +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB0h] 0 +
jnz loc_41BAAC  +
mov [eax+520h] ebx +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [eax+0CB5h] 0 +
jnz loc_41AA32  +
mov [eax+980h] ebx +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_4] +
mov ecx [eax+0B48h] +
test ecx ecx +
jnz loc_41BAE0  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0B48h] ebx +
mov eax [esp+5Ch+arg_4] +
mov edx [eax+0B70h] +
test edx edx +
jnz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov [eax+0B70h] ebx +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+58h]  +
jmp loc_41AA32  +
mov esi [esp+5Ch+arg_0] +
xor eax eax +
mov edx offset unk_4BE31A +
test ebx ebx +
cmovnz eax edx +
mov [esi+864h] eax +
jmp loc_41AA32  +
test ebx ebx +
jz loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+0AFCh] 0 +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+6Eh]  +
jmp loc_41AA32  +
cmp [esp+5Ch+arg_C] 80000h +
jz loc_41AA32  +
mov [esp+5Ch+var_5C] ebp +
call strlen  +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call sub_452ED0  +
mov byte ptr [eax] 57h +
mov esi eax +
lea eax [eax+1] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call strcpy  +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_41C330  +
cmp eax 500h +
mov ecx eax +
jz loc_41C138  +
mov edx eax +
shl edx 6 +
mov eax ds:dword_4A8DA4[edx] +
test eax 20000h +
jz loc_41C0CC  +
cmp ebx 1 +
sbb edi edi +
xor ebp ebp +
and edi 2 +
add edi 4 +
test eax 400000h +
jz loc_41BBE1  +
movzx eax ds:byte_4A8D9C[edx] +
lea ebp [esi+eax] +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_38] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] eax +
xor eax eax +
test ebx ebx +
setnz al  +
mov [esp+5Ch+var_50] eax +
call sub_41EDE0  +
mov [esp+5Ch+var_5C] esi +
call free  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+3Ch]  +
jmp loc_41AA32  +
xor edx edx +
cmp eax 468h +
mov eax [esp+5Ch+arg_14] +
setz dl  +
mov ecx ebp +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 1 +
call sub_4182C0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov edx ebp +
add eax 0A8h +
call sub_4183C0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
mov edx 2 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
xor eax eax +
call sub_4182C0  +
jmp loc_41AA32  +
test ebx ebx +
mov eax [esp+5Ch+arg_0] +
jz loc_41BF37  +
or dword ptr [eax+9Ch] 0FFF6E0h +
jmp loc_41AA32  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452FA0  +
mov esi [esp+5Ch+arg_0] +
mov dword ptr [esi+52Ch] 1 +
mov [esi+530h] eax +
jmp loc_41B70B  +
xor eax eax +
jmp loc_41AA87  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_423EF0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov ecx ebp +
xor edx edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
add eax 30h +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
mov eax 2 +
call sub_4182C0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_1C] +
mov eax [eax] +
mov [eax+18h] ebx +
jmp loc_41AA32  +
mov [esp+5Ch+var_5C] ebp +
mov ebx 1 +
call sub_452FA0  +
mov esi [esp+5Ch+arg_0] +
mov [esi+954h] eax +
jmp loc_41B8F0  +
mov eax [esp+5Ch+arg_1C] +
test ebx ebx +
setnz byte ptr [eax+65h]  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_1C] +
mov eax [eax] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_425F20  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] eax +
call sub_423CE0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov [eax+7C0h] ebx +
mov [eax+7C4h] ebx +
jmp loc_41AA32  +
test ebp ebp +
jz loc_41BDF0  +
cmp byte ptr [ebp+0] 0 +
jnz loc_41BFD1  +
mov eax [esp+5Ch+arg_0] +
mov ebx [eax+0C14h] +
jmp loc_41AF06  +
mov eax [esp+5Ch+arg_1C] +
mov byte ptr [eax+66h] 1 +
mov [esp+5Ch+var_38] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_58] 4 +
mov [esp+5Ch+var_5C] 143h +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_44] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_48] eax +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] eax +
xor eax eax +
test ebx ebx +
setnz al  +
mov [esp+5Ch+var_50] eax +
call sub_41EDE0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov esi ebx +
sar esi 1Fh +
cmp ebx 0FFFFFFFFh +
mov [eax] ebx +
mov [eax+4] esi +
setnz byte ptr [eax+19h]  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
test ebx ebx +
mov [eax+0AA0h] ebx +
setnz byte ptr [eax+15h]  +
jmp loc_41AA32  +
mov [esp+3Ch] edx +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] offset aC_2 +
mov [esp+0] ebp +
call esi  +
test eax eax +
jnz loc_41BFA5  +
mov eax [esp+38h] +
mov edx [esp+3Ch] +
or [eax] edx +
jmp loc_41B376  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aStructureAlign +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aDwarfVersionDI +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41AF1C  +
mov edi offset aGeneric +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_41BF27  +
mov edi offset aSpecific +
mov ecx 9 +
mov esi ebp +
cmps   +
jnz loc_41C0F0  +
mov eax [esp+5Ch+arg_0] +
mov dword ptr [eax+50h] 1 +
jmp loc_41AA32  +
and dword ptr [eax+9Ch] 0FF00001Fh +
jmp loc_41AA32  +
mov byte ptr [eax] 0 +
jmp loc_41AE3B  +
lea eax [esp+5Ch+var_14] +
add esi 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] eax +
call sub_420580  +
test al al +
jz loc_41C026  +
mov eax [esp+5Ch+var_14] +
cmp eax 0FFFFFFFFh +
jz loc_41C006  +
mov esi [esp+5Ch+arg_4] +
mov ecx [esi+54h] +
mov esi [esp+5Ch+arg_0] +
mov edx [esi+54h] +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_54] edx +
call sub_420600  +
jmp loc_41BA11  +
mov eax [esp+84h] +
mov [esp-10h+arg_C] ebp +
mov [esp-10h+arg_8] ebx +
mov [esp-10h+arg_4] offset aHelpArgumentQ_ +
mov [esp-10h+arg_0] 0 +
mov [esp+0] eax +
call sub_4254A0  +
jmp loc_41B376  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_4C] ebp +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aGdwarfSIsAmbig +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_0] +
mov byte ptr [eax+12h] 1 +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] offset aInvalidParamVa +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41BA11  +
mov [esp+5Ch+var_5C] esi +
call sub_41C520  +
mov [esp+5Ch+var_14] eax +
jmp loc_41BF75  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] offset aHelp_0 +
mov [esp+5Ch+var_58] offset aMissingArgumen +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41B144  +
cmp eax 46Fh +
jle loc_41AA32  +
jmp loc_41B570  +
lea edx [eax-7Fh] +
cmp edx 3 +
jbe loc_41AA32  +
jmp loc_41B570  +
cmp eax 284h +
jz loc_41AA32  +
jmp loc_41B570  +
cmp eax 3D0h +
jle loc_41AA32  +
jmp loc_41B570  +
cmp eax 238h +
jz loc_41AA32  +
jmp loc_41B570  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aSParamArgument +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41BA11  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aWerrorSSIsNotA +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41BC35  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] offset aUnknownStackCh +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] eax +
call sub_4254A0  +
jmp loc_41AA32  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_58] offset aInvalidParam_0 +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41BA11  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] offset aWerrorSNoOptio +
mov [esp+5Ch+var_5C] eax +
call sub_425710  +
jmp loc_41BC35  +
mov [esp+5Ch+var_54] offset aCommon_handl_0 +
mov [esp+5Ch+var_58] 699h +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424560  +
mov [esp+5Ch+var_54] offset aSet_wstrict_al +
mov [esp+5Ch+var_58] 96Eh +
mov [esp+5Ch+var_5C] offset a____GccGccOpts +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
mov edx [esp+5Ch+var_58] +
xor eax eax +
mov ecx [edx+0AF8h] +
test ecx ecx +
jnz locret_41C1E2  +
mov ecx [edx+0BA4h] +
test ecx ecx +
jz locret_41C1E2  +
mov ecx [edx+6E8h] +
test ecx ecx +
jz locret_41C1E2  +
mov ecx [edx+0A64h] +
test ecx ecx +
jnz locret_41C1E2  +
mov ecx [edx+870h] +
test ecx ecx +
jnz locret_41C1E2  +
cmp dword ptr [edx+6CCh] 1 +
setz al  +
retn   +
***
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+8] +
mov edx [esp+10h] +
mov ecx [esp+14h] +
test eax eax +
jz loc_41C262  +
cmp edx 0Ah +
jnz loc_41C290  +
cmp ecx 4 +
jz loc_41C297  +
shl eax 6 +
mov eax ds:off_4A8D80[eax] +
mov [esp+8] eax +
pop ebx  +
jmp sub_452FA0  +
***
cmp edx 6 +
jnz loc_41C280  +
cmp byte ptr [ebx+3Ch] 0 +
jz loc_41C28A  +
mov eax ds:off_4AC480 +
mov [esp+8] eax +
pop ebx  +
jmp sub_452FA0  +
***
cmp edx 0Ah +
jz loc_41C267  +
cmp ecx 6 +
jz loc_41C267  +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 6 +
jz loc_41C24A  +
jmp loc_41C24F  +
***
shl eax 6 +
mov eax ds:off_4A8D80[eax] +
mov dword ptr [esp+10h] 0 +
add eax 2 +
mov [esp+0Ch] eax +
mov eax ds:off_4AC500 +
mov [esp+8] eax +
pop ebx  +
jmp sub_4530C0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] ecx +
mov ecx [eax] +
test ecx ecx +
jz loc_41C320  +
mov edi [esp+1Ch+arg_0] +
mov esi edx +
mov ebx eax +
lea ebp [eax+0Ch] +
and edi 80000h +
jmp loc_41C2F6  +
test byte ptr [ebx+8] 2 +
jz loc_41C30A  +
mov ebx ebp +
add ebp 0Ch +
mov ecx [ebp-0Ch] +
test ecx ecx +
jz loc_41C320  +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] esi +
call strcmp  +
test eax eax +
jnz loc_41C2EA  +
test edi edi +
jz loc_41C2E4  +
mov eax [ebx+4] +
mov edx [esp+1Ch+var_10] +
mov [edx] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 2Ch +
mov ebp ds:dword_4BCD44 +
mov edi [esp+2Ch+arg_0] +
jmp loc_41C378  +
lea esi [ebp+ebx+0] +
shr esi 1 +
mov eax esi +
shl eax 6 +
movzx edx ds:byte_4A8D9C[eax] +
mov eax ds:off_4A8D80[eax] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
add eax 1 +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
cmovs ebp esi +
cmovns ebx esi +
mov eax ebp +
sub eax ebx +
cmp eax 1 +
ja loc_41C345  +
mov [esp+2Ch+var_14] ebx +
mov [esp+2Ch+var_18] 500h +
lea esi [esi+0] +
mov eax ebx +
shl eax 6 +
lea esi off_4A8D80[eax] +
mov eax ds:off_4A8D80[eax] +
movzx ebp byte ptr [esi+1Ch] +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_41C3E2  +
cmp byte ptr [edi+ebp] 0 +
mov eax [esi+24h] +
jz loc_41C3CC  +
test eax 400000h +
jz loc_41C3E2  +
test [esp+2Ch+arg_4] eax +
jnz loc_41C3FC  +
mov eax [esp+2Ch+var_18] +
cmp eax 500h +
cmovnz ebx eax +
mov [esp+2Ch+var_18] ebx +
movzx ebx word ptr [esi+1Ah] +
cmp ds:dword_4BCD44 ebx +
jnz loc_41C390  +
mov esi [esp+2Ch+var_18] +
cmp esi 500h +
mov ebx esi +
jz loc_41C406  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi] 2Dh +
jnz loc_41C3FC  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov ebp eax +
mov [esp+2Ch+var_18] eax +
call strlen  +
cmp ds:dword_4BCD44 ebp +
mov [esp+2Ch+var_10] eax +
mov eax ebp +
jbe loc_41C3FC  +
shl eax 6 +
mov ebx ebp +
lea ecx off_4A8D80[eax] +
mov eax [esp+2Ch+var_14] +
mov ebp ecx +
mov [esp+2Ch+arg_0] edi +
add eax 2 +
mov [esp+2Ch+var_14] eax +
jmp loc_41C4C5  +
cmp ebx [esp+2Ch+var_18] +
jz loc_41C505  +
mov edx [esp+2Ch+var_14] +
cmp edx ebx +
jnz loc_41C4F2  +
cmp esi [esp+2Ch+var_18] +
jnz loc_41C4F2  +
shl edx 6 +
test byte ptr [edx+4A8DA6h] 40h +
jz loc_41C4F2  +
mov eax esi +
movzx esi ds:byte_4A8D9C[edx] +
shl eax 6 +
movzx edx ds:byte_4A8D9C[eax] +
lea ecx [edx+1] +
cmp esi ecx +
jnz loc_41C4F2  +
mov eax ds:off_4A8D80[eax] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] edi +
add eax 1 +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_41C4F2  +
add ebx 1 +
add ebp 40h +
cmp ds:dword_4BCD44 ebx +
jbe loc_41C4FC  +
mov esi [esp+2Ch+var_18] +
mov eax [ebp+0] +
lea edi [eax+1] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call strncmp  +
test eax eax +
jz loc_41C450  +
mov ebx esi +
jmp loc_41C3FC  +
mov ebx 500h +
jmp loc_41C3FC  +
mov ebx [esp+2Ch+var_18] +
jmp loc_41C3FC  +
mov eax ebx +
shl eax 6 +
test byte ptr [eax+4A8DA6h] 40h +
jz loc_41C4B3  +
jmp loc_41C45A  +
***
mov ecx [esp+18h+arg_0] +
movzx ebx byte ptr [ecx] +
test bl bl +
jz loc_41C554  +
movzx eax bl +
test byte ptr ds:word_4D0720[eax+eax] 4 +
jz loc_41C561  +
mov eax ecx +
jmp loc_41C54A  +
test byte ptr ds:word_4D0720[edx+edx] 4 +
jz loc_41C561  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_41C540  +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp atoi  +
cmp bl 30h +
jnz loc_41C5C5  +
movzx eax byte ptr [ecx+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jnz loc_41C5C5  +
movzx eax byte ptr [ecx+2] +
lea ebx [ecx+2] +
test al al +
jz loc_41C5C5  +
test byte ptr [eax+eax+4D0721h] 1 +
jz loc_41C5C5  +
mov eax ebx +
jmp loc_41C59A  +
test byte ptr [edx+edx+4D0721h] 1 +
jz loc_41C5C5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_41C590  +
cmp ebx eax +
jz loc_41C5C5  +
mov [esp+18h+var_10] 10h +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ecx +
call strtol  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
movzx eax word ptr [eax+2Ch] +
mov [esp+20h] ebx +
lea eax [eax+eax*2] +
mov eax ds:off_4BDE28[eax*8] +
add esp 18h +
pop ebx  +
jmp sub_41C2C0  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_0] +
mov ebx [esp+4+arg_8] +
mov esi [edi] +
test esi esi +
jz loc_41C6D0  +
mov ebp [esp+4+arg_C] +
lea eax [edi+0Ch] +
mov ecx esi +
mov [esp+4+var_4] eax +
mov edx edi +
and ebp 80000h +
jmp loc_41C66C  +
mov edx eax +
add eax 0Ch +
mov ecx [eax-0Ch] +
test ecx ecx +
jz loc_41C695  +
cmp [edx+4] ebx +
jnz loc_41C660  +
mov edx [edx+8] +
test dl 1 +
jz loc_41C660  +
test ebp ebp +
jnz loc_41C682  +
and edx 2 +
jnz loc_41C660  +
mov eax [esp+4+arg_4] +
mov [eax] ecx +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+4+arg_C] +
mov eax [esp+4+var_4] +
and edx 80000h +
jmp loc_41C6B0  +
mov edi eax +
add eax 0Ch +
mov esi [eax-0Ch] +
test esi esi +
jz loc_41C6D0  +
cmp ebx [edi+4] +
jnz loc_41C6A4  +
test edx edx +
jnz loc_41C6C0  +
test byte ptr [edi+8] 2 +
jnz loc_41C6A4  +
nop   +
mov eax [esp+4+arg_4] +
mov [eax] esi +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+arg_4] +
mov dword ptr [eax] 0 +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
test ecx ecx +
jz loc_41CA89  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_41CA6D  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_41CA51  +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_452FA0  +
mov ebp eax +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax] +
test ebx ebx +
jz loc_41CA3A  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_41C7EB  +
cmp byte ptr [ebx+3] 0 +
jns loc_41C9D1  +
mov eax [esp+2Ch+arg_0] +
mov ecx 1 +
mov dword ptr [eax] 0 +
lea eax [esi+1] +
cmp eax 4 +
mov edi 4 +
cmovnb edi eax +
lea eax ds:8[edi*4] +
and edi 7FFFFFFFh +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_14] ecx +
call sub_452F50  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov ecx [esp+2Ch+var_14] +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx edi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
test cl cl +
mov [eax+3] dl +
jz loc_41CA48  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx esi +
mov ebx [eax] +
mov [ebx+4] esi +
lea eax [edx+1] +
mov [ebx+4] eax +
mov [ebx+edx*4+8] ebp +
mov ebp offset off_4BFD60 +
jmp loc_41C80F  +
add ebp 10h +
cmp ebp offset unk_4BFE70 +
jz loc_41C941  +
mov esi [ebp+8] +
mov ebx [ebp+0] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov edi eax +
mov eax [esp+2Ch+arg_4] +
cmp byte ptr [eax+28h] 0 +
jns loc_41C82F  +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_41C800  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call strncmp  +
test eax eax +
jnz loc_41C800  +
add edi [esp+2Ch+arg_8] +
add ebx 1 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
call sub_4530C0  +
mov edi eax +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax] +
test ebx ebx +
jz loc_41C9C0  +
mov esi [ebx] +
mov edx [ebx+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_41C928  +
cmp byte ptr [ebx+3] 0 +
jns loc_41C950  +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+1] +
mov [esp+2Ch+var_D] 1 +
mov dword ptr [eax] 0 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_14] edx +
call sub_452F50  +
mov ecx [esp+2Ch+arg_0] +
mov edx [esp+2Ch+var_14] +
mov [ecx] eax +
mov ecx edx +
mov edx [eax] +
and ecx 7FFFFFFFh +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+2Ch+var_D] 0 +
mov [eax+3] dl +
jz loc_41CAAC  +
lea edx ds:0[esi*4] +
add eax 8 +
add ebx 8 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx esi +
mov ebx [eax] +
mov [ebx+4] esi +
add ebp 10h +
lea eax [edx+1] +
cmp ebp offset unk_4BFE70 +
mov [ebx+4] eax +
mov [ebx+edx*4+8] edi +
jnz loc_41C80F  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov [esp+2Ch+var_28] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_41F4C0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_41CAA5  +
mov ebx [eax+4] +
mov [esp+2Ch+var_28] edx +
and esi 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_452F50  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_41C928  +
mov [esp+2Ch+var_D] 0 +
xor esi esi +
mov edx 1 +
jmp loc_41C8A1  +
add esi 1 +
mov [esp+2Ch+var_28] esi +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_41F4C0  +
mov esi eax +
lea edx ds:8[eax*4] +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_41CAB5  +
mov ebx [eax+4] +
mov [esp+2Ch+var_28] edx +
and esi 7FFFFFFFh +
mov [esp+2Ch+var_2C] eax +
call sub_452F50  +
mov ecx [esp+2Ch+arg_0] +
mov edx [eax] +
mov [ecx] eax +
mov [eax+4] ebx +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx ebx +
mov ebx eax +
jmp loc_41C7EB  +
xor ecx ecx +
xor esi esi +
mov eax 1 +
jmp loc_41C769  +
mov ebx eax +
xor edx edx +
jmp loc_41C7EB  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Ch +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424560  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Bh +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424560  +
mov [esp+2Ch+var_24] offset aAdd_misspellin +
mov [esp+2Ch+var_28] 18Ah +
mov [esp+2Ch+var_2C] offset a____GccGccOp_0 +
call sub_424560  +
xor ebx ebx +
jmp loc_41C980  +
mov ebx eax +
xor edx edx +
jmp loc_41C928  +
xor ebx ebx +
jmp loc_41CA01  +
***
push esi  +
push esi  +
push esi  +
mov edi 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov ebx [esp+24h+arg_10] +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_8] +
mov esi eax +
shl esi 6 +
mov [ebx] eax +
mov dword ptr [ebx+4] 0 +
mov [ebx+8] edx +
mov [ebx+24h] ecx +
mov esi ds:dword_4A8DA4[esi] +
mov ebp esi +
and ebp [esp+24h+arg_C] +
jz loc_41DF26  +
test esi 100000h +
jz loc_41DF90  +
and esi 807FFh +
jz loc_41DF90  +
and ebp 0FFCFFFFFh +
jnz loc_41DF90  +
mov [ebx+28h] edi +
mov [esp+24h+var_24] ebx +
call sub_41CBE0  +
mov eax [ebx+20h] +
cmp eax 1 +
jz loc_41DF94  +
cmp eax 2 +
jnz loc_41DF70  +
mov edx [ebx+14h] +
mov eax [ebx+10h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] offset asc_4BFA9D +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] eax +
call sub_41CAC0  +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+24h+var_1C] offset aGenerate_optio +
mov [esp+24h+var_20] 41Bh +
mov [esp+24h+var_24] offset a____GccGccOp_0 +
call sub_424560  +
lea esi [esi+0] +
xor edi edi +
jmp loc_41DF26  +
mov eax [ebx+10h] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
mov dword ptr [eax] 503h +
mov dword ptr [eax+4] 0 +
mov [eax+8] edx +
mov [eax+0Ch] edx +
mov dword ptr [eax+20h] 1 +
mov [eax+10h] edx +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+24h] 1 +
mov dword ptr [eax+28h] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mov edi [eax] +
mov [esp+2Ch+var_1C] eax +
test edi edi +
jz loc_41E0F2  +
mov eax [edi+4] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_41E0F2  +
mov eax [edi+8] +
mov ebx 1 +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_10] esi +
mov esi edi +
mov edi [esp+2Ch+var_14] +
lea ebp [eax+1] +
mov eax 1 +
jmp loc_41E06D  +
mov eax [esi+eax*4+8] +
add ebx 1 +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebp [ebp+eax+1] +
mov eax ebx +
cmp edi eax +
ja loc_41E058  +
mov esi [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] ebp +
call sub_452ED0  +
mov [esi] eax +
mov ebx eax +
mov eax [esp+2Ch+var_1C] +
mov eax [eax] +
test eax eax +
jz loc_41E0D2  +
mov edx [eax+4] +
test edx edx +
jz loc_41E0D2  +
xor edx edx +
xor edi edi +
jmp loc_41E09D  +
cmp edi [eax+4] +
jnb loc_41E0D2  +
mov ebp [eax+edx*4+8] +
add edi 1 +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call memcpy  +
mov eax [esp+2Ch+var_1C] +
mov edx edi +
mov byte ptr [ebx+esi] 20h +
lea ebx [ebx+esi+1] +
mov eax [eax] +
test eax eax +
jnz loc_41E098  +
mov eax [esp+2Ch+var_1C] +
mov byte ptr [ebx-1] 0 +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4209F0  +
xor ebp ebp +
jmp loc_41E075  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+4Ch+var_2C] edx +
mov edx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_30] eax +
test dl 1 +
jnz loc_41E350  +
test dl 2 +
jz loc_41E151  +
mov eax [esp+4Ch+var_2C] +
mov eax [eax+8] +
mov [esp+4Ch+var_44] ecx +
test eax eax +
jz loc_41E420  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dl 8 +
jnz loc_41E3E7  +
xor eax eax +
and edx 10h +
jz loc_41E149  +
mov eax [esp+4Ch+var_2C] +
movzx eax word ptr [eax+2Ch] +
lea eax [eax+eax*2] +
lea eax ds:4BDE20h[eax*8] +
mov [esp+4Ch+var_28] eax +
mov eax [eax+4] +
test eax eax +
jz loc_41E440  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
mov eax [esp+4Ch+var_28] +
mov ebp 0Ch +
mov edi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_10] 0 +
mov eax [eax+8] +
and edi 80000h +
mov [esp+4Ch+var_34] edi +
mov esi [eax] +
mov ebx eax +
test esi esi +
jnz loc_41E2AB  +
jmp loc_41E2CD  +
mov esi [esp+4Ch+var_10] +
test esi esi +
jz loc_41E3D6  +
mov edi [esi] +
mov edx [esi+4] +
and edi 7FFFFFFFh +
cmp edi edx +
jnz loc_41E28C  +
cmp byte ptr [esi+3] 0 +
jns loc_41E371  +
mov [esp+4Ch+var_10] 0 +
lea edx [edi+1] +
mov [esp+4Ch+var_1D] 1 +
cmp edx 4 +
mov eax 4 +
cmovb edx eax +
lea eax ds:8[edx*4] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_24] edx +
call sub_452F50  +
mov edx [esp+4Ch+var_24] +
mov ecx edx +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [esp+4Ch+var_10] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp [esp+4Ch+var_1D] 0 +
mov [eax+3] dl +
jz loc_41E492  +
lea edx ds:0[edi*4] +
add eax 8 +
add esi 8 +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov esi [esp+4Ch+var_10] +
mov edx edi +
mov [esi+4] edi +
mov eax [ebx] +
lea ecx [edx+1] +
mov [esi+4] ecx +
mov [esi+edx*4+8] eax +
mov eax [esp+4Ch+var_28] +
mov eax [eax+8] +
lea ebx [eax+ebp] +
add ebp 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_41E2CD  +
mov ecx [esp+4Ch+var_34] +
test ecx ecx +
jnz loc_41E1D0  +
test byte ptr [ebx+8] 2 +
jz loc_41E1D0  +
lea ebx [eax+ebp] +
add ebp 0Ch +
mov edx [ebx] +
test edx edx +
jnz loc_41E2AB  +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_41E000  +
test eax eax +
jz loc_41E460  +
mov edi [esp+4Ch+var_2C] +
mov edx [edi] +
mov [esp+4Ch+var_3C] eax +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] offset aValidArguments +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425390  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_41E341  +
cmp byte ptr [eax+3] 0 +
js loc_41E410  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] offset aCommandLineOpt +
call sub_425710  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
mov [esp+4Ch+var_48] edi +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call sub_41F4C0  +
mov edi eax +
lea edx ds:8[eax*4] +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_41E48B  +
mov esi [eax+4] +
mov [esp+4Ch+var_48] edx +
and edi 7FFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call sub_452F50  +
mov edx [eax] +
mov [esp+4Ch+var_10] eax +
mov [eax+4] esi +
and edx 80000000h +
or edx edi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx esi +
mov esi eax +
jmp loc_41E28C  +
mov [esp+4Ch+var_1D] 0 +
xor edi edi +
mov edx 1 +
jmp loc_41E209  +
mov eax [esp+4Ch+var_2C] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aArgumentToQsSh +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
mov eax 1 +
jmp loc_41E149  +
mov dword ptr [eax+4] 0 +
jmp loc_41E341  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] offset aMissingArgum_0 +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
mov eax 1 +
jmp loc_41E149  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] offset aUnrecognized_3 +
mov [esp+4Ch+var_4C] eax +
call sub_425710  +
jmp loc_41E19A  +
mov eax [esp+4Ch+var_2C] +
mov edx [esp+4Ch+var_14] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aValidArgumen_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sub_425390  +
jmp loc_41E31B  +
xor esi esi +
jmp loc_41E39F  +
mov esi eax +
xor edx edx +
jmp loc_41E28C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebp [esp+3Ch+arg_8] +
mov edx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov ebx ebp +
mov ecx [esp+3Ch+arg_14] +
shl ebx 6 +
mov edi [esp+3Ch+arg_1C] +
add ebx offset off_4A8D80 +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_20] eax +
movzx eax word ptr [ebx+2Ah] +
cmp ax 0FFFFh +
jz loc_41E557  +
add edx eax +
jz loc_41E557  +
test ecx ecx +
jnz loc_41E560  +
test esi esi +
jz loc_41E58C  +
movzx eax word ptr [ebx+2Ah] +
xor edi edi +
cmp ax 0FFFFh +
jz loc_41E509  +
movzx edi ax +
add edi esi +
mov eax [ebx+30h] +
cmp eax 6 +
ja loc_41E557  +
jmp ds:off_4BFBA4[eax*4]  +
mov ecx [esp+3Ch+var_24] +
test ecx ecx +
setz cl  +
cmp eax 3 +
setz al  +
cmp cl al +
jz loc_41E746  +
test byte ptr [ebx+29h] 4 +
mov eax [ebx+38h] +
jnz loc_41E830  +
or [edx] eax +
test edi edi +
jz loc_41E557  +
test byte ptr [ebx+29h] 4 +
mov eax [ebx+38h] +
jz loc_41E850  +
or [edi] eax +
mov eax [ebx+3Ch] +
or [edi+4] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_41E4F0  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_18] edx +
call sub_4241B0  +
test esi esi +
mov edx [esp+3Ch+var_18] +
jnz loc_41E4F8  +
xor edi edi +
jmp loc_41E509  +
movzx eax word ptr [ebx+2Ch] +
mov esi [esp+3Ch+var_24] +
lea eax [eax+eax*2] +
lea ebx ds:4BDE20h[eax*8] +
mov eax [ebx+10h] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] edx +
call eax  +
test edi edi +
jz loc_41E557  +
mov eax [ebx+10h] +
mov [esp+3Ch+arg_0] edi +
mov [esp+3Ch+arg_4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov esi [edx] +
test esi esi +
jz loc_41E86E  +
mov ebx [esi] +
test ebx ebx +
jz loc_41E857  +
mov eax [ebx] +
mov ecx [ebx+4] +
mov [esp+3Ch+var_20] eax +
and [esp+3Ch+var_20] 7FFFFFFFh +
cmp [esp+3Ch+var_20] ecx +
jnz loc_41E6B4  +
cmp byte ptr [ebx+3] 0 +
jns loc_41E782  +
mov eax [esp+3Ch+var_20] +
mov dword ptr [esi] 0 +
mov byte ptr [esp+3Ch+var_18] 1 +
add eax 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
call sub_452F50  +
mov ecx [esp+3Ch+var_14] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [esi] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [esp+3Ch+var_10] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [esp+3Ch+var_18] 0 +
mov [eax+3] cl +
jz loc_41E89E  +
lea ecx [eax+8] +
mov eax [esp+3Ch+var_20] +
add ebx 8 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_18] edx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+3Ch+var_34] eax +
call memcpy  +
mov eax [esp+3Ch+var_20] +
mov ebx [esi] +
mov edx [esp+3Ch+var_18] +
mov ecx eax +
mov [ebx+4] eax +
lea eax [ecx+1] +
test edi edi +
mov [ebx+4] eax +
lea eax [ecx+ecx*2] +
lea ecx [ebx+eax*4] +
mov [ecx+8] ebp +
lea eax [ecx+8] +
mov ecx [esp+3Ch+var_1C] +
mov [eax+4] ecx +
mov ecx [esp+3Ch+var_24] +
mov [eax+8] ecx +
mov [edx] esi +
jz loc_41E557  +
mov [edi] esi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
test edi edi +
mov [edx] eax +
jz loc_41E557  +
mov dword ptr [edi] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
test edi edi +
mov [edx] eax +
jz loc_41E557  +
mov dword ptr [edi] offset unk_4BFA9C +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+29h] 4 +
jz loc_41E764  +
mov ebp [esp+3Ch+var_24] +
test ebp ebp +
jnz loc_41E820  +
mov eax [ebx+38h] +
xor ecx ecx +
or eax [ebx+3Ch] +
setz cl  +
xor ebx ebx +
mov [edx] ecx +
mov [edx+4] ebx +
jmp loc_41E775  +
test byte ptr [ebx+29h] 4 +
jz loc_41E840  +
mov ecx [ebx+38h] +
mov eax [ebx+3Ch] +
not ecx  +
not eax  +
and [edx] ecx +
and [edx+4] eax +
jmp loc_41E53E  +
mov esi [esp+3Ch+var_24] +
mov eax [ebx+38h] +
test esi esi +
jz loc_41E810  +
mov [edx] eax +
test edi edi +
jnz loc_41E6F6  +
jmp loc_41E557  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_18] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
mov eax [ebx] +
and eax 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
call sub_41F4C0  +
mov edx [esp+3Ch+var_18] +
mov ebx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+3Ch+var_14] eax +
mov eax [esi] +
test eax eax +
jz loc_41E891  +
mov ecx [eax+4] +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_18] edx +
mov edx [esp+3Ch+var_14] +
and ebx 7FFFFFFFh +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_452F50  +
mov edx [esp+3Ch+var_20] +
mov ecx [eax] +
mov [esi] eax +
mov [eax+4] edx +
and ecx 80000000h +
or ecx ebx +
mov ebx eax +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [eax+3] cl +
mov ecx edx +
mov edx [esp+3Ch+var_18] +
jmp loc_41E6B4  +
or eax [ebx+3Ch] +
setz al  +
movzx eax al +
jmp loc_41E773  +
mov ecx [ebx+38h] +
mov ebx [ebx+3Ch] +
jmp loc_41E73F  +
or [edx] eax +
mov eax [ebx+3Ch] +
or [edx+4] eax +
jmp loc_41E53E  +
mov eax [ebx+38h] +
not eax  +
and [edx] eax +
jmp loc_41E53E  +
or [edi] eax +
jmp loc_41E557  +
mov byte ptr [esp+3Ch+var_18] 0 +
mov eax 1 +
mov [esp+3Ch+var_20] 0 +
jmp loc_41E61B  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_20] edx +
call sub_452F00  +
mov edx [esp+3Ch+var_20] +
mov esi eax +
jmp loc_41E5DA  +
mov [esp+3Ch+var_20] 0 +
jmp loc_41E7C5  +
mov ebx eax +
xor ecx ecx +
jmp loc_41E6B4  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov [esp+54h+var_24] eax +
mov eax [ecx] +
mov [esp+54h+var_20] edx +
mov edx [edi+24h] +
mov [esp+54h+var_1C] ecx +
mov ebp [esp+54h+arg_C] +
mov esi [esp+54h+arg_10] +
mov [esp+54h+var_18] eax +
shl eax 6 +
mov ecx [ecx+8] +
lea edi off_4A8D80[eax] +
movzx eax ds:word_4A8DAA[eax] +
cmp ax 0FFFFh +
jz loc_41E938  +
add eax ebx +
jz loc_41E938  +
mov ebx esi +
mov esi [esp+54h+arg_14] +
xor eax eax +
test bl bl +
cmovz eax [esp+54h+var_20] +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+var_18] +
mov [esp+54h+var_38] esi +
mov esi [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
mov eax [esp+54h+var_24] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_3C] esi +
mov esi [esp+54h+arg_4] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_40] esi +
call sub_41E4A0  +
mov eax [ebp+0Ch] +
xor esi esi +
mov ebx ebp +
test eax eax +
jnz loc_41E950  +
jmp loc_41E9B0  +
add esi 1 +
add ebx 8 +
cmp [ebp+0Ch] esi +
jbe loc_41E9B0  +
mov eax [ebx+14h] +
test [edi+24h] eax +
jz loc_41E945  +
mov edx [ebp+8] +
mov ecx [esp+54h+arg_14] +
mov eax [ebx+10h] +
mov [esp+54h+var_3C] ebp +
mov [esp+54h+var_34] edx +
mov edx [esp+54h+arg_8] +
mov [esp+54h+var_38] ecx +
mov ecx [esp+54h+arg_4] +
mov [esp+54h+var_40] edx +
mov edx [esp+54h+arg_0] +
mov [esp+54h+var_44] ecx +
mov ecx [esp+54h+var_1C] +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+var_20] +
mov [esp+54h+var_4C] ecx +
mov ecx [esp+54h+var_24] +
mov [esp+54h+var_50] edx +
mov [esp+54h+var_54] ecx +
call eax  +
test al al +
jnz loc_41E945  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_10] +
lea esi [esp+50h+var_2C] +
mov ebx [esp+50h+arg_14] +
mov [esp+50h+var_40] esi +
mov edi [esp+50h+arg_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_44] ebx +
mov [esp+50h+var_4C] eax +
mov eax [esp+50h+arg_8] +
mov [esp+50h+var_50] eax +
call sub_41DED0  +
mov eax [esp+50h+arg_28] +
mov ecx esi +
mov edx [esp+50h+arg_4] +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_3C] eax +
mov eax edi +
movzx edi al +
mov eax [esp+50h+arg_20] +
mov [esp+50h+var_40] edi +
mov [esp+50h+var_44] eax +
mov eax [esp+50h+arg_1C] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+arg_18] +
mov [esp+50h+var_4C] eax +
mov eax [esp+50h+arg_0] +
call sub_41E8B0  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_41EA50  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_C] +
mov edi [esp+3Ch+arg_10] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_14] +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+0Ch] +
mov ecx eax +
mov [esp+3Ch+var_10] eax +
mov eax [ebx+4] +
test eax eax +
jz loc_41EAA7  +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_4254A0  +
mov edx [ebx] +
cmp edx 500h +
jz loc_41EB50  +
cmp edx 501h +
jz loc_41EAFA  +
mov eax [ebx+28h] +
test eax eax +
jnz loc_41EB02  +
mov eax [esp+3Ch+var_14] +
mov ecx ebx +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_41E8B0  +
test al al +
jz loc_41EB61  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+8] +
shl edx 6 +
add edx offset off_4A8D80 +
mov [esp+3Ch+var_38] eax +
mov eax esi +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] ecx +
mov ecx [esp+3Ch+var_10] +
call sub_41E100  +
test al al +
jnz loc_41EAFA  +
mov eax [ebx+28h] +
test al 4 +
jnz loc_41EB81  +
test eax eax +
jz loc_41EAC4  +
mov [esp+3Ch+var_34] offset aRead_cmdline_o +
mov [esp+3Ch+var_38] 4C0h +
mov [esp+3Ch+var_3C] offset a____GccGccOp_0 +
call sub_424560  +
nop   +
mov eax [ebp+0] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test al al +
jz loc_41EAFA  +
mov eax [ebx+8] +
jmp loc_41EB65  +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] esi +
mov [esp+3Ch+arg_8] eax +
mov [esp+3Ch+arg_4] offset aUnrecognized_4 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425710  +
mov eax [ebp+4] +
mov [esp+3Ch+arg_4] edi +
mov [esp+3Ch+arg_0] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
mov eax [esp+arg_0] +
shl eax 6 +
movzx eax ds:word_4A8DAA[eax] +
cmp ax 0FFFFh +
jz loc_41EBC0  +
add eax [esp+arg_4] +
retn   +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFFh +
shl ecx 6 +
add ecx offset off_4A8D80 +
movzx edx word ptr [ecx+2Ah] +
cmp dx 0FFFFh +
jz loc_41EC26  +
add edx [esp+arg_4] +
jz loc_41EC26  +
mov eax [ecx+30h] +
cmp eax 1 +
jz loc_41EC60  +
jle loc_41EC28  +
cmp eax 2 +
jz loc_41EC40  +
cmp eax 3 +
jnz loc_41EC37  +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jnz loc_41ECB0  +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
and ebx [ecx+38h] +
and eax edx +
or ebx eax +
setnz al  +
movzx eax al +
pop ebx  +
retn   +
test eax eax +
jnz loc_41EC37  +
mov edx [edx] +
xor eax eax +
pop ebx  +
test edx edx +
setnz al  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jz loc_41EC80  +
mov eax [edx+4] +
and ebx [ecx+38h] +
and eax [ecx+3Ch] +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
test byte ptr [ecx+29h] 4 +
mov ebx [edx] +
jz loc_41EC95  +
mov eax [edx+4] +
xor ebx [ecx+38h] +
xor eax [ecx+3Ch] +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
and ebx [ecx+38h] +
and eax edx +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax ebx +
cdq   +
mov eax [ecx+3Ch] +
xor ebx [ecx+38h] +
xor eax edx +
or ebx eax +
setz al  +
movzx eax al +
pop ebx  +
retn   +
mov eax [edx+4] +
and ebx [ecx+38h] +
and eax [ecx+3Ch] +
or ebx eax +
setnz al  +
movzx eax al +
pop ebx  +
retn   +
***
shl esi 6 +
movzx eax ds:word_4A8DAC[esi] +
mov [ebx] ecx +
lea eax [eax+eax*2] +
mov eax ds:dword_4BDE2C[eax*8] +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
shl esi 6 +
mov [ebx] ecx +
movzx eax ds:byte_4A8DA9[esi] +
shr al 2 +
and eax 1 +
cmp al 1 +
sbb eax eax +
and eax 0FFFFFFFCh +
add eax 8 +
mov [ebx+4] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_1C] +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call sub_41EBD0  +
mov dword ptr [ebx+4] 1 +
mov [ebx+8] al +
lea eax [ebx+8] +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ecx] +
test eax eax +
mov [ebx] eax +
jz loc_41EDB8  +
mov [esp+0] eax +
call strlen  +
add eax 1 +
jmp loc_41ED27  +
mov dword ptr [ebx] offset unk_4BFA9C +
mov eax 1 +
jmp loc_41ED27  +
***
mov eax 1 +
jmp loc_41ED2F  +
***
push esi  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx eax byte ptr [eax] +
cmp al 24h +
mov byte ptr [ebp+var_20] al +
jnz loc_41F21B  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
test al al +
jz loc_41F180  +
cmp al 2Fh +
jz loc_41F180  +
cmp al 5Ch +
jz loc_41F180  +
lea edx [esi+2] +
xor eax eax +
movzx ebx byte ptr [edx] +
add eax 1 +
mov edi eax +
mov [ebp+var_1C] edx +
test bl bl +
jnz loc_41F1A0  +
mov ebx eax +
lea eax [eax+1] +
add eax 1Eh +
mov edi 10h +
xor edx edx +
div  edi +
shl eax 4 +
call sub_470CF0  +
sub esp eax +
lea edi [esp+1Bh] +
and edi 0FFFFFFF0h +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] ecx +
mov [esp+38h+var_38] edi +
call strncpy  +
cmp byte ptr [ebp+var_20] 40h +
mov byte ptr [edi+ebx] 0 +
jz loc_41F1C0  +
mov [esp+38h+var_38] edi +
call getenv  +
mov edx offset aHomeJenkinsM_2 +
test eax eax +
cmovz eax edx +
mov edx [ebp+var_1C] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_4530C0  +
mov [esp+38h+var_38] esi +
mov ebx eax +
call free  +
movzx eax byte ptr [ebx] +
cmp al 24h +
mov byte ptr [ebp+var_20] al +
jnz loc_41F190  +
mov esi ebx +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
test al al +
jnz loc_41F0C8  +
nop   +
mov [ebp+var_1C] ecx +
mov eax 1 +
xor ebx ebx +
jmp loc_41F0F5  +
cmp al 40h +
jz loc_41F16D  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
cmp bl 5Ch +
jz loc_41F1B1  +
cmp bl 2Fh +
jnz loc_41F0DD  +
mov ebx edi +
add eax 1 +
jmp loc_41F0F5  +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] offset a_root +
call sub_4530C0  +
mov [esp+38h+var_38] eax +
mov edi eax +
call getenv  +
test eax eax +
jz loc_41F1F9  +
mov [esp+38h+var_38] edi +
mov [ebp+var_20] eax +
call free  +
mov eax [ebp+var_20] +
jmp loc_41F142  +
mov eax off_4835C0 +
mov [esp+38h+var_38] edi +
mov [ebp+var_20] eax +
call free  +
mov eax [ebp+var_20] +
mov edx offset aHomeJenkinsM_2 +
test eax eax +
cmovz eax edx +
jmp loc_41F142  +
cmp al 40h +
jz loc_41F0B9  +
lea esp [ebp-0Ch] +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp off_4835C0 +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov edi eax +
call sub_453240  +
test eax eax +
jnz loc_41F3D9  +
add edi esi +
movzx eax byte ptr [edi] +
cmp al 2Fh +
jnz loc_41F3C9  +
test ebx ebx +
jz loc_41F3D9  +
cmp byte ptr [ebx] 24h +
jz loc_41F461  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_1C] offset a@ +
call sub_4530C0  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
mov ebx eax +
call sub_4530C0  +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
call sub_41F0A0  +
mov ebx eax +
mov edx ebx +
jmp loc_41F2D3  +
lea edx [esi+1] +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] edx +
call strchr  +
test eax eax +
mov esi eax +
jz loc_41F403  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_41F2D0  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_41F2FF  +
cmp al 2Fh +
jnz loc_41F2D0  +
cmp esi ebx +
jz loc_41F2D0  +
movzx eax byte ptr [esi-1] +
cmp al 5Ch +
jz loc_41F30F  +
cmp al 2Fh +
jnz loc_41F2D0  +
mov byte ptr [esi] 0 +
cmp byte_4835FE 0 +
jz loc_41F3E8  +
mov edx esi +
jmp loc_41F32B  +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jnz loc_41F384  +
lea eax [edx-1] +
cmp ebx eax +
jz loc_41F442  +
movzx edx byte ptr [edx-1] +
cmp dl 5Ch +
jz loc_41F420  +
cmp dl 2Fh +
jz loc_41F420  +
mov edx eax +
nop   +
movzx ecx byte ptr [edx-1] +
cmp cl 2Fh +
jz loc_41F323  +
cmp cl 5Ch +
jz loc_41F323  +
sub edx 1 +
cmp ebx edx +
jz loc_41F378  +
movzx eax byte ptr [edx-1] +
cmp al 5Ch +
jz loc_41F323  +
cmp al 2Fh +
jz loc_41F323  +
sub edx 1 +
cmp ebx edx +
jnz loc_41F365  +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_41F400  +
cmp cl 5Ch +
jz loc_41F400  +
cmp cl 2Fh +
jz loc_41F400  +
movzx ecx byte ptr [esi+3] +
lea eax [esi+3] +
cmp cl 2Fh +
jnz loc_41F453  +
nop   +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jz loc_41F3A0  +
cmp cl 2Fh +
jz loc_41F3A0  +
mov esi edx +
jmp loc_41F3B7  +
movzx ecx byte ptr [eax] +
add esi 1 +
add eax 1 +
test cl cl +
mov [esi-1] cl +
jnz loc_41F3B4  +
jmp loc_41F2D3  +
cmp al 5Ch +
jz loc_41F274  +
test al al +
jz loc_41F274  +
mov [esp+1Ch+var_1C] esi +
call sub_452FA0  +
mov ebx eax +
jmp loc_41F2CA  +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] ebx +
call _access_0  +
test eax eax +
jnz loc_41F31F  +
mov byte ptr [esi] 2Eh +
lea eax [ebx+1] +
jmp loc_41F40F  +
test dl dl +
jz loc_41F449  +
add eax 1 +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_41F408  +
mov byte ptr [eax-1] 2Fh +
jmp loc_41F40C  +
mov edx eax +
sub edx 1 +
cmp ebx edx +
jz loc_41F378  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jz loc_41F422  +
cmp cl 2Fh +
jnz loc_41F350  +
nop   +
jmp loc_41F422  +
mov edx ebx +
jmp loc_41F378  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 5Ch +
jz loc_41F3A0  +
jmp loc_41F3B0  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call sub_4530C0  +
jmp loc_41F2C3  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
lea eax [ebx+1] +
mov [esp+14h+var_14] eax +
call sub_452ED0  +
mov [esp+14h+var_C] ebx +
mov esi eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
mov off_4835C0 esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_4] +
cmp edx eax +
jnb loc_41F4FE  +
test edx edx +
mov ecx 4 +
jz loc_41F4E0  +
cmp edx 0Fh +
ja loc_41F4F0  +
lea ecx [edx+edx] +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
lea ecx [edx+edx*2] +
shr ecx 1 +
cmp ecx eax +
cmovnb eax ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aCalculate_allo +
mov [esp+1Ch+var_18] 0A7h +
mov [esp+1Ch+var_1C] offset a____GccGccVec_ +
call sub_424560  +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_4BFF4D +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D600  +
mov edx ds:dword_4D9138 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_452F00  +
mov [ebp-4Ch] eax +
mov eax ds:dword_4D9138 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_41F581  +
jmp loc_41F8F5  +
add ecx 8 +
cmp edx ecx +
jbe loc_41F8F5  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F576  +
cmp ebx 1 +
jz loc_41F576  +
xor esi esi +
test eax eax +
jz loc_41F8E3  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_41F8C3  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_41F5C4  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F5BD  +
cmp ebx 1 +
jnz loc_41F590  +
add ecx 8 +
cmp edx ecx +
ja loc_41F5B0  +
mov [ebp-48h] esi +
mov eax [ebp-48h] +
mov [esp+98h+var_8C] offset loc_4808A0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] eax +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call qsort  +
mov edx ds:dword_4D9138 +
mov [esp+98h+var_94] 8 +
mov eax [edx+8] +
sub eax [edx+0Ch] +
mov [esp+98h+var_98] eax +
call sub_452F00  +
mov [ebp-50h] eax +
mov eax ds:dword_4D9138 +
mov ecx [eax] +
mov eax [eax+4] +
lea edx [ecx+eax*8] +
cmp ecx edx +
jb loc_41F62B  +
jmp loc_41F8FE  +
add ecx 8 +
cmp edx ecx +
jbe loc_41F8FE  +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F620  +
cmp ebx 1 +
jz loc_41F620  +
xor edi edi +
lea esi [esi+0] +
test eax eax +
jz loc_41F8D6  +
mov ecx [eax] +
mov ebx [eax+4] +
cmp dword ptr [ecx+0Ch] 3 +
jz loc_41F8B0  +
lea ecx [eax+8] +
cmp ecx edx +
jnb loc_41F674  +
nop   +
mov ebx [ecx] +
mov eax ecx +
test ebx ebx +
jz loc_41F66D  +
cmp ebx 1 +
jnz loc_41F640  +
add ecx 8 +
cmp edx ecx +
ja loc_41F660  +
mov esi [ebp-50h] +
mov [esp+98h+var_8C] offset loc_4808A0 +
mov [esp+98h+var_90] 8 +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call qsort  +
test edi edi +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
jz loc_41F720  +
lea eax [esi+edi*8] +
mov edx esi +
mov [ebp-44h] eax +
xor edi edi +
xor esi esi +
mov dword ptr [ebp-40h] 0 +
xor ebx ebx +
xor ecx ecx +
jmp loc_41F6E6  +
mov ecx [ebp-3Ch] +
mov [ebp-40h] eax +
mov eax [edx+4] +
add edx 8 +
add ecx [eax+14h] +
add edi [eax+4] +
add esi [eax+8] +
mov [ebp-3Ch] ecx +
mov ecx [ebp-40h] +
add ecx [eax] +
add ebx [eax+10h] +
cmp edx [ebp-44h] +
mov eax ecx +
mov [ebp-30h] ecx +
mov ecx [ebp-3Ch] +
mov [ebp-2Ch] edi +
mov [ebp-28h] esi +
mov dword ptr [ebp-24h] 0 +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ecx +
jnz loc_41F6E0  +
mov eax [ebp-50h] +
mov ebx 8Ch +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_7C] offset aPeakItems +
mov [esp+98h+var_80] offset aLeakItems +
mov [esp+98h+var_84] offset aTimes +
add eax 40h +
mov [esp+98h+var_88] offset aPeak +
mov [esp+98h+var_8C] offset aLeak +
mov [esp+98h+var_90] offset aHeapVectors +
mov [esp+98h+var_94] offset a48s11s15s10s17 +
mov [esp+98h+var_98] eax +
call sub_47D600  +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F778  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov ebx [ebp-48h] +
sub ebx 1 +
js loc_41F7DB  +
mov edi [ebp-4Ch] +
lea esi [ebp-30h] +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*8] +
mov ecx [edi+ebx*8+4] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_480CC0  +
sub esp 8 +
sub ebx 1 +
jns loc_41F7C0  +
mov ebx 8Ch +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F7E0  +
mov eax ds:_iob +
mov ebx 8Ch +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-20h] +
mov [esp+98h+var_90] offset aTotal +
mov [esp+98h+var_94] offset aS55li25li17li +
mov [esp+98h+var_84] eax +
mov eax [ebp-2Ch] +
mov [esp+98h+var_88] eax +
mov eax [ebp-30h] +
mov [esp+98h+var_8C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D600  +
nop   +
mov eax ds:_iob +
mov [esp+98h+var_98] 2Dh +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
sub ebx 1 +
jnz loc_41F850  +
mov eax ds:_iob +
mov [esp+98h+var_98] 0Ah +
add eax 40h +
mov [esp+98h+var_94] eax +
call fputc  +
mov eax [ebp-4Ch] +
mov [esp+98h+var_98] eax +
call free  +
mov eax ds:_iob +
mov [esp+98h+var_94] offset asc_4BFF4D +
add eax 40h +
mov [esp+98h+var_98] eax +
call sub_47D600  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp-50h] +
lea esi [esi+edi*8] +
add edi 1 +
mov [esi] ecx +
mov [esi+4] ebx +
jmp loc_41F657  +
mov edi [ebp-4Ch] +
lea edi [edi+esi*8] +
add esi 1 +
mov [edi] ecx +
mov [edi+4] ebx +
jmp loc_41F5A7  +
test edx edx +
jnz loc_41F648  +
jmp loc_41F674  +
test edx edx +
jnz loc_41F598  +
nop   +
lea esi [esi+0] +
jmp loc_41F5C4  +
xor edx edx +
xor eax eax +
jmp loc_41F58E  +
xor edx edx +
xor eax eax +
jmp loc_41F638  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
mov ecx ds:dword_4D913C +
mov esi ebx +
mov [ebp-3Ch] eax +
sar esi 3 +
lea eax [ebp-38h] +
mov [esp+4] esi +
mov [esp] eax +
mov [ebp-38h] ebx +
call sub_47F6E0  +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41F9D0  +
mov ecx ds:dword_4D913C +
lea edi [ebp-1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [ebp-1Ch] ebx +
call sub_47F6E0  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_41F986  +
mov eax [eax+4] +
mov edx [eax] +
cmp [ebp+0Ch] edx +
ja loc_41FC7F  +
sub edx [ebp+0Ch] +
cmp byte ptr [ebp-3Ch] 0 +
mov [eax] edx +
jnz loc_41F990  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [ebp-1Ch] ebx +
mov ebx ds:dword_4D913C +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] edi +
mov ecx ebx +
call sub_47F7E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_41F986  +
mov dword ptr [eax] 1 +
add dword ptr [ebx+0Ch] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esp] 14h +
call loc_481090  +
mov dword ptr [eax] 0 +
mov edi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov [ebp-30h] eax +
mov eax ds:dword_4D9138 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-34h] ebx +
mov [ebp-40h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_45D420  +
mov edx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_45D420  +
mov ecx [edi+8] +
mov edx eax +
mov eax 9E3779B9h +
sub eax ecx +
mov edi edx +
sub eax edx +
sub ecx edx +
shr edi 0Dh +
xor edi eax +
mov eax edi +
sub ecx edi +
shl eax 8 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shr ecx 0Dh +
sub edi eax +
xor ecx edx +
mov edx ecx +
sub edi ecx +
shr edx 0Ch +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shl edi 10h +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
sub edx edi +
shr ecx 5 +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 3 +
sub edi ecx +
xor eax edx +
mov edx eax +
sub edi eax +
shl edx 0Ah +
sub ecx eax +
xor edx edi +
mov eax ecx +
mov ecx [ebp-40h] +
sub eax edx +
shr edx 0Fh +
xor edx eax +
lea edi [ebp-30h] +
mov [esp] edi +
mov [esp+4] edx +
call sub_47EAE0  +
mov edi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41FB5D  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_480FE0  +
mov edx [edi+4] +
add dword ptr [edx+0Ch] 1 +
mov eax [ebp-34h] +
lea edi [ebp-34h] +
mov ecx ds:dword_4D913C +
mov [esp] edi +
mov [ebp-40h] edx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F6E0  +
mov edx [ebp-40h] +
mov eax [eax] +
sub esp 8 +
test eax eax +
jnz loc_41F94C  +
mov eax [ebp-34h] +
mov ecx ds:dword_4D913C +
mov dword ptr [esp+8] 1 +
mov [esp] edi +
sar eax 3 +
mov [esp+4] eax +
mov [ebp-40h] edx +
call sub_47F7E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
mov edx [ebp-40h] +
jnz loc_41FB4E  +
mov ecx [ebp-34h] +
mov [eax] ecx +
mov [eax+4] edx +
mov dword ptr [eax+8] 0 +
jmp loc_41F94C  +
***
mov dword ptr [esp] 18h +
call loc_481090  +
mov edi [ebp-30h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [ebp-44h] eax +
mov eax ds:dword_4D9138 +
mov [ebp-40h] eax +
mov eax [edi] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_45D420  +
mov ecx [edi+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-24h] ecx +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
call sub_45D420  +
mov edi [edi+8] +
mov ecx 9E3779B9h +
mov dword ptr [esp+8] 1 +
sub ecx edi +
mov edx eax +
sub ecx eax +
shr eax 0Dh +
sub edi edx +
xor eax ecx +
mov ecx edi +
mov edi eax +
sub ecx eax +
shl edi 8 +
xor edi ecx +
mov ecx edx +
sub ecx eax +
mov edx edi +
sub ecx edi +
sub eax edi +
shr edx 0Dh +
xor edx ecx +
mov ecx edx +
sub eax edx +
shr ecx 0Ch +
sub edi edx +
xor ecx eax +
mov eax edx +
mov edx ecx +
sub edi ecx +
shl edx 10h +
sub eax ecx +
xor edx edi +
mov edi edx +
sub eax edx +
shr edi 5 +
sub ecx edx +
xor edi eax +
mov eax edi +
sub ecx edi +
shr eax 3 +
sub edx edi +
xor eax ecx +
mov ecx eax +
sub edx eax +
shl ecx 0Ah +
sub edi eax +
xor ecx edx +
sub edi ecx +
shr ecx 0Fh +
xor ecx edi +
mov [esp+4] ecx +
mov ecx [ebp-40h] +
lea edi [ebp-30h] +
mov [esp] edi +
call sub_47EC00  +
mov edx [ebp-44h] +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_41FC77  +
mov ecx [ebp-30h] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_41FAEC  +
***
call sub_482630  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp] 14h +
call loc_481090  +
mov esi ds:dword_4D9138 +
mov dword ptr [eax] 0 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 3 +
mov byte ptr [eax+10h] 0 +
mov eax [ebp+8] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-30h] ebx +
mov [ebp-34h] eax +
lea eax [ebp-28h] +
mov [esp] eax +
mov dword ptr [ebp-28h] 0 +
call sub_45D420  +
mov edx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-2Ch] edx +
mov [esp+8] eax +
lea eax [ebp-2Ch] +
mov [esp] eax +
call sub_45D420  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-30h] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_47EAE0  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_41FE80  +
mov eax [ebp-30h] +
mov [esp] eax +
call sub_480FE0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-34h] +
lea ebx [ebp-34h] +
mov ecx ds:dword_4D913C +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F6E0  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_41FE40  +
mov eax [ebp+8] +
mov ecx ds:dword_4D913C +
mov [ebp-1Ch] eax +
sar eax 3 +
mov [esp+4] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_47F6E0  +
mov ebx [eax] +
sub esp 8 +
test ebx ebx +
jz loc_41FE37  +
mov eax [eax+4] +
mov edx [ebp+0Ch] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
ja loc_41FE32  +
mov edx [ebp+10h] +
add edx [eax+10h] +
cmp edx [eax+14h] +
mov [eax+10h] edx +
jbe loc_41FE28  +
mov [eax+14h] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov [eax+8] edx +
jmp loc_41FE17  +
***
xor eax eax +
jmp loc_41FE17  +
***
mov eax [ebp-34h] +
mov ecx ds:dword_4D913C +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F7E0  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_41FE6E  +
mov edx [ebp-34h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
jmp loc_41FDDD  +
***
mov dword ptr [esp] 18h +
call loc_481090  +
mov edx [ebp-30h] +
mov [ebp-40h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax ds:dword_4D9138 +
mov [ebp-3Ch] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
mov [esp] eax +
call sub_45D420  +
mov edx [ebp-40h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-24h] +
mov [esp] eax +
mov [ebp-24h] ecx +
call sub_45D420  +
mov edx [ebp-40h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-3Ch] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_47EC00  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_41FF91  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_41FDB9  +
***
push edi  +
sub esp 14h +
sub esp 1Ch +
mov ds:byte_4D9144 1 +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_4D9140 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_4D9140 0 +
mov ds:dword_4D9148 0 +
mov ds:byte_4D9144 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:dword_4D9148 +
mov ebp [esp+1Ch+arg_0] +
test edi edi +
jz loc_420420  +
mov esi ds:dword_4D9140 +
xor ebx ebx +
jmp loc_4203FA  +
add ebx 1 +
add esi 18h +
cmp ebx edi +
jz loc_420420  +
mov [esp+1Ch+var_18] ebp +
mov eax [esi] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_4203F0  +
mov eax [esp+1Ch+arg_4] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx ds:dword_4D9140 +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov ebx [eax+14h] +
test ebx ebx +
jz loc_4205F0  +
mov eax [ebx] +
mov dword ptr [edi] 0FFFFFFFFh +
test eax eax +
jz loc_4205E0  +
xor ebp ebp +
jmp loc_4205C0  +
add ebp 1 +
mov eax [ebx+ebp*4] +
test eax eax +
jz loc_4205E0  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_4205B6  +
mov [edi] ebp +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_C] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_420726  +
cmp ds:byte_4D9144 0 +
jz loc_42072A  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+arg_4] +
mov [edx+eax*4] ecx +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aSet_param_va_0 +
mov [esp+1Ch+var_18] 7Bh +
mov [esp+1Ch+var_1C] offset a____GccGccPara +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
cmp ds:byte_4D9144 0 +
mov eax [esp+38h+var_18] +
jnz loc_420777  +
mov edx ds:dword_4D9140 +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov edx [esp+38h+var_14] +
mov [eax+4] edx +
add esp 1Ch +
retn   +
mov [esp+38h+var_30] offset aSet_default_pa +
mov [esp+38h+var_34] 0EBh +
mov [esp+38h+var_38] offset a____GccGccPara +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+38h+var_34] +
mov edx ds:dword_4D9140 +
lea eax [eax+eax*2] +
lea eax [edx+eax*8] +
mov eax [eax+4] +
retn   +
***
cmp ds:byte_4D9144 0 +
retn   +
***
push edi  +
push esi  +
push ebx  +
lea edi [edx+1] +
sub esp 2Ch +
cmp edi 1FC00000h +
mov [esp+38h+var_20] eax +
mov [esp+38h+var_1C] ecx +
ja loc_420952  +
lea ebx ds:0[edi*4] +
mov [esp+38h+var_38] ebx +
call sub_481000  +
mov esi eax +
mov [esp+38h+var_38] ebx +
call sub_481000  +
test ebp ebp +
mov ebx eax +
js loc_42087B  +
xor eax eax +
mov [esi+eax*4] eax +
add eax 1 +
cmp edi eax +
jnz loc_420871  +
mov eax [esp+38h+arg_0] +
test eax eax +
jle loc_42091B  +
mov [esp+38h+var_28] 0 +
nop   +
add [esp+38h+var_28] 1 +
cmp ebp 0 +
mov eax [esp+38h+var_28] +
mov [ebx] eax +
jle loc_420940  +
xor eax eax +
mov [esp+38h+var_2C] ebx +
mov [esp+38h+var_24] ebp +
nop   +
mov ebx [esp+38h+var_2C] +
mov edx [esp+38h+var_1C] +
mov ebp [esp+38h+var_20] +
mov edi [ebx+eax*4] +
mov ebx [esp+38h+var_28] +
lea ecx [edi+1] +
mov edi [esi+eax*4+4] +
movzx edx byte ptr [edx+ebx-1] +
mov ebx [esp+38h+var_2C] +
add edi 1 +
cmp [ebp+eax+0] dl +
setnz dl  +
movzx edx dl +
add edx [esi+eax*4] +
cmp edi ecx +
cmovbe ecx edi +
cmp ecx edx +
cmova ecx edx +
mov [ebx+eax*4+4] ecx +
add eax 1 +
cmp eax [esp+38h+var_24] +
jnz loc_4208B0  +
mov ebp [esp+38h+var_24] +
xor eax eax +
mov edx [ebx+eax*4] +
mov [esi+eax*4] edx +
add eax 1 +
cmp ebp eax +
jge loc_420900  +
mov eax [esp+38h+var_28] +
cmp eax [esp+38h+arg_0] +
jnz loc_420890  +
test esi esi +
mov edi [ebx+ebp*4] +
jz loc_42092A  +
mov [esp+38h+var_38] esi +
call sub_480FD0  +
test ebx ebx +
jz loc_420936  +
mov [esp+38h+var_38] ebx +
call sub_480FD0  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_4208FE  +
mov eax [esp+38h+var_28] +
cmp eax [esp+38h+arg_0] +
jnz loc_420890  +
jmp loc_42091B  +
mov [esp+38h+var_38] 0FFFFFFFFh +
mov ebx 0FFFFFFFFh +
call sub_481000  +
mov esi eax +
jmp loc_420861  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov ebx [esp+arg_C] +
test edx edx +
jz loc_420997  +
test ebx ebx +
jz loc_420993  +
mov [esp+arg_0] ebx +
pop ebx  +
jmp sub_420830  +
mov eax edx +
pop ebx  +
retn   +
mov eax ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+24h] +
mov ebx [esp+20h] +
mov [esp] edi +
call strlen  +
mov [esp] ebx +
mov esi eax +
call strlen  +
test eax eax +
mov edx eax +
jz loc_4209E4  +
test esi esi +
jnz loc_4209D1  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+20h] esi +
add esp 10h +
mov ecx edi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_420830  +
***
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
xor eax eax +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
jmp loc_420B89  +
lea eax [edx+1] +
cmp eax ecx +
jz loc_420BBE  +
mov edx ecx +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ebx ds:dword_4C65E0[esi] +
ja loc_420B82  +
cmp eax edx +
mov ecx edx +
jz loc_420BBE  +
sub edx eax +
shr edx 1 +
add edx eax +
mov esi edx +
shl esi 4 +
cmp ds:dword_4C65E0[esi] ebx +
jnb loc_420B9E  +
lea eax [edx+1] +
cmp eax ecx +
jnz loc_420B89  +
mov edx eax +
shl edx 4 +
cmp ebx ds:dword_4C65E0[edx] +
ja loc_420BD1  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset aHash_table_hig +
mov [esp+18h+var_14] 60h +
mov [esp+18h+var_18] offset a____GccGccHash +
call sub_424560  +
lea esi [esi+0] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx ds:dword_4D9178 +
mov eax [edx] +
mov edx [edx+4] +
lea esi [eax+edx*8] +
cmp eax esi +
jb loc_420C2B  +
jmp loc_420D4B  +
add eax 8 +
cmp esi eax +
jbe loc_420D4B  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_420C20  +
cmp edx 1 +
jz loc_420C20  +
test ebx ebx +
jz loc_420D3E  +
mov eax [ebx] +
mov [esp+38h+var_38] eax +
call sub_480FE0  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call sub_480FE0  +
lea eax [ebx+8] +
cmp eax esi +
jnb loc_420C74  +
lea esi [esi+0] +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_420C6D  +
cmp edx 1 +
jnz loc_420C38  +
add eax 8 +
cmp esi eax +
ja loc_420C60  +
mov ebx ds:dword_4D9178 +
test ebx ebx +
jz loc_420CB5  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_420C8F  +
sub eax 1 +
cmp edx eax +
ja loc_420C88  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420E75  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_420E84  +
mov [esp+38h+var_38] ebx +
call sub_480FE0  +
mov ebx ds:dword_4D917C +
test ebx ebx +
jz loc_420CFD  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_420CD7  +
lea esi [esi+0] +
sub eax 1 +
cmp edx eax +
ja loc_420CD0  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420DE1  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_420DF0  +
mov [esp+38h+var_38] ebx +
call sub_480FE0  +
mov ebx ds:dword_4D9160 +
test ebx ebx +
jz loc_420D36  +
mov edx [ebx+4] +
lea eax [edx-1] +
cmp edx eax +
jbe loc_420D18  +
sub eax 1 +
cmp edx eax +
ja loc_420D11  +
mov eax [ebx] +
cmp byte ptr [ebx+1Ch] 0 +
mov [esp+38h+var_38] eax +
jnz loc_420D55  +
call free  +
cmp byte ptr [ebx+1Dh] 0 +
jnz loc_420D60  +
mov [esp+38h+var_38] ebx +
call sub_480FE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_420C40  +
jmp loc_420C74  +
xor esi esi +
xor ebx ebx +
nop   +
jmp loc_420C38  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_420D2E  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_1C] ebx +
shl esi 2 +
mov [ebp+var_2C] edx +
call sub_47F160  +
mov ecx [eax] +
sub esp 8 +
test ecx ecx +
jz loc_420D2E  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420F06  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_47F260  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jz loc_420D2E  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_420D2E  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_420CF5  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi [eax+eax*2] +
mov [ebp+var_2C] edx +
shl esi 2 +
mov [ebp+var_1C] ebx +
call sub_47F160  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_420CF5  +
mov eax [eax+4] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420F06  +
sub ecx esi +
mov edx [ebp+var_2C] +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_47F260  +
mov edi [eax] +
sub esp 0Ch +
test edi edi +
jz loc_420CF5  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_420CF5  +
call j_free  +
cmp byte ptr [ebx+1Dh] 0 +
jz loc_420CAD  +
mov eax [ebx+4] +
mov edx ebx +
mov ecx ds:dword_4D917C +
sar edx 3 +
lea edi [ebp+var_1C] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
lea esi ds:0[eax*8] +
mov [ebp+var_2C] edx +
mov [ebp+var_1C] ebx +
call sub_47F160  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_420CAD  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
mov ecx [eax] +
cmp esi ecx +
ja loc_420F06  +
sub ecx esi +
mov esi ds:dword_4D917C +
mov [eax] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] edx +
mov ecx esi +
mov [esp+38h+var_38] edi +
mov [ebp+var_1C] ebx +
call sub_47F260  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jz loc_420CAD  +
mov dword ptr [eax] 1 +
add dword ptr [esi+0Ch] 1 +
jmp loc_420CAD  +
call sub_482670  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax 2 +
retn   +
***
mov eax 2 +
retn   +
***
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
or eax [esp+10h] +
setz al  +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset aHook_int_rtx_i +
mov dword ptr [esp+4] 0D5h +
mov dword ptr [esp] offset a____GccGccHook +
call sub_424560  +
nop   +
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+4] +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+14h] +
test eax eax +
jz loc_4213C3  +
cmp eax [ebx+10h] +
jz loc_4213C3  +
sub eax 1 +
cmp [ebx+18h] eax +
jnb loc_4213C3  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call feof  +
test eax eax +
jnz loc_4213BB  +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
test eax eax +
jnz loc_4213BB  +
mov ecx [ebx+10h] +
mov edx [ebx+14h] +
cmp ecx edx +
jz loc_4213F2  +
mov eax [ebx+0Ch] +
mov esi ecx +
jmp loc_421417  +
lea eax [ecx+ecx] +
test ecx ecx +
mov esi 1000h +
cmovnz esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_452F50  +
mov edx [ebx+14h] +
mov [ebx+10h] esi +
mov [ebx+0Ch] eax +
mov ecx [ebx+8] +
sub esi edx +
add edx eax +
mov [esp+14h+var_14] edx +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_8] ecx +
call fread  +
mov esi eax +
mov eax [ebx+8] +
mov [esp+14h+var_14] eax +
call ferror  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4213BD  +
add [ebx+14h] esi +
test esi esi +
setnz al  +
jmp loc_4213BD  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
mov eax edx +
sub esp 30h +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_4214A5  +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] eax +
call sub_42BA70  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_38] eax +
call sub_42BA90  +
mov ecx [esp+38h+var_1C] +
mov esi eax +
cmp esi 1 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
jbe loc_421520  +
xor eax eax +
test cl cl +
jz loc_421540  +
mov [esp+38h+var_30] eax +
mov eax ds:dword_4D9184 +
lea edx [esp+38h+var_C] +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_42CAD0  +
mov [esp+38h+var_38] ebx +
mov esi eax +
mov [esp+38h+var_2C] eax +
mov eax [esp+38h+var_C] +
mov [esp+38h+var_30] eax +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] eax +
call sub_42D200  +
cmp esi 1 +
mov [ebx+0Ch] edi +
jbe loc_421523  +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
xor eax eax +
mov edx offset aBuiltIn +
test esi esi +
cmovnz eax edx +
mov [ebx] eax +
add esp 30h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D9184 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_42D100  +
mov esi eax +
mov eax 1 +
jmp loc_4214D2  +
***
sub esp 14h +
mov [esp+14h+var_14] 2C4h +
call sub_481000  +
lea ecx [eax+4] +
mov dword ptr [eax] 10h +
lea esi [eax+2C4h] +
mov edx ecx +
lea ebx [eax+2Ch] +
mov dword ptr [edx] 0 +
mov eax edx +
add edx 2Ch +
mov dword ptr [edx-28h] 0 +
sub eax ecx +
mov dword ptr [edx-24h] 0 +
mov dword ptr [edx-20h] 0 +
mov dword ptr [edx-1Ch] 0 +
mov dword ptr [edx-18h] 0 +
mov dword ptr [edx-14h] 0 +
mov dword ptr [edx-10h] 0 +
mov dword ptr [edx-0Ch] 0 +
mov byte ptr [edx-8] 1 +
cmp edx esi +
mov dword ptr [ebx+eax] 0 +
jnz loc_421595  +
mov ds:dword_4D918C ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_421656  +
mov ebx ds:dword_4D918C +
test ebx ebx +
jz loc_421660  +
mov esi 10h +
xor ebp ebp +
nop   +
mov eax [ebx+4] +
test eax eax +
jz loc_42163C  +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_42163C  +
add dword ptr [ebx] 1 +
mov ebp ebx +
add ebx 2Ch +
sub esi 1 +
jnz loc_421620  +
test ebp ebp +
jz loc_421656  +
add dword ptr [ebp+0] 1 +
add esp 1Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_421570  +
mov ebx ds:dword_4D918C +
jmp loc_421617  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+48h+var_34] ecx +
call sub_4213A0  +
mov edi [ebx+18h] +
mov eax [ebx+14h] +
sub eax edi +
jz loc_421910  +
add edi [ebx+0Ch] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] edi +
call memchr  +
test eax eax +
mov esi eax +
jz loc_4218D9  +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
mov eax [ebx+8] +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_48] eax +
call ferror  +
mov ecx [esp+48h+var_30] +
test eax eax +
jnz loc_421910  +
mov eax esi +
sub eax edi +
mov [esp+48h+var_30] eax +
mov eax [ebx+18h] +
cmp eax [ebx+14h] +
mov [esp+48h+var_2C] eax +
jnb loc_42186C  +
mov [ebp+0] edi +
mov eax [ebx+1Ch] +
lea ebp [eax+1] +
mov eax [ebx+20h] +
mov [ebx+1Ch] ebp +
cmp ebp eax +
mov [esp+48h+var_28] eax +
jbe loc_421920  +
test ecx ecx +
jz loc_421B48  +
sub ecx [ebx+0Ch] +
mov [ebx+18h] ecx +
mov eax [esp+48h+var_34] +
mov esi [esp+48h+var_30] +
mov [eax] esi +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+18h] +
mov edi [ebx+0Ch] +
mov eax [ebx+14h] +
mov [esp-4+arg_0] 0Ah +
add edi edx +
sub eax edx +
mov [esp-4+arg_4] eax +
mov [esp+0] edi +
call memchr  +
test eax eax +
jnz loc_421B53  +
mov eax ebx +
call sub_4213A0  +
test al al +
jnz loc_4218B0  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
mov byte ptr [ebx+24h] 1 +
add esi [ebx+14h] +
mov [esp+0] eax +
call ferror  +
test eax eax +
jnz loc_421910  +
test esi esi +
jz loc_421C6F  +
xor ecx ecx +
jmp loc_421855  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+28h] +
test edi edi +
jz loc_421C9B  +
cmp dword ptr [edi+4] 63h +
ja loc_421884  +
cmp [esp+48h+var_28] 64h +
ja loc_421A3B  +
mov eax [edi+4] +
cmp ebp eax +
jbe loc_421884  +
sub esi [ebx+0Ch] +
test edi edi +
mov [esp+48h+var_28] esi +
jz loc_421BD7  +
mov esi [edi] +
mov edx [edi+4] +
and esi 7FFFFFFFh +
cmp esi edx +
jnz loc_421A19  +
cmp byte ptr [edi+3] 0 +
jns loc_421B61  +
mov dword ptr [ebx+28h] 0 +
lea eax [esi+1] +
mov byte ptr [esp+48h+var_1C] 1 +
cmp eax 4 +
mov edx 4 +
cmovnb edx eax +
lea eax [edx+edx*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
mov [esp+48h+var_20] ecx +
mov [esp+48h+var_24] edx +
call sub_452F50  +
mov edx [esp+48h+var_24] +
and edx 7FFFFFFFh +
mov ecx edx +
mov edx [eax] +
mov [ebx+28h] eax +
mov dword ptr [eax+4] 0 +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_20] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
cmp byte ptr [esp+48h+var_1C] 0 +
mov [eax+3] dl +
jz loc_421CCE  +
lea edx [eax+8] +
add edi 8 +
lea eax [esi+esi*2] +
shl eax 2 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_24] ecx +
call memcpy  +
mov edi [ebx+28h] +
mov edx esi +
mov ecx [esp+48h+var_24] +
mov [edi+4] esi +
mov esi [esp+48h+var_2C] +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
mov [edx+8] ebp +
mov [edx+0Ch] esi +
mov esi [esp+48h+var_28] +
mov [edx+10h] esi +
jmp loc_421884  +
mov eax [edi+4] +
test eax eax +
mov [esp+48h+var_24] eax +
jz loc_421A59  +
imul eax ebp +
xor edx edx +
div  [esp+48h+var_28] +
cmp eax [esp+48h+var_24] +
jb loc_421884  +
mov eax [edi] +
mov edx [esp+48h+var_24] +
sub esi [ebx+0Ch] +
and eax 7FFFFFFFh +
cmp edx eax +
jnz loc_421B27  +
cmp byte ptr [edi+3] 0 +
jns loc_421BE8  +
mov eax [esp+48h+var_24] +
mov dword ptr [ebx+28h] 0 +
mov byte ptr [esp+48h+var_28] 1 +
add eax 1 +
cmp eax 4 +
mov [esp+48h+var_1C] ecx +
mov ecx 4 +
cmovb eax ecx +
mov [esp+48h+var_20] eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] 0 +
call sub_452F50  +
mov edx eax +
mov [ebx+28h] eax +
mov eax [esp+48h+var_20] +
mov dword ptr [edx+4] 0 +
and eax 7FFFFFFFh +
mov ecx eax +
mov eax [edx] +
and eax 80000000h +
or eax ecx +
mov ecx [esp+48h+var_1C] +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [esp+48h+var_28] 0 +
mov [edx+3] al +
jz loc_421C8B  +
mov eax [esp+48h+var_24] +
add edx 8 +
add edi 8 +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_28] ecx +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+var_24] +
mov edi [ebx+28h] +
mov ecx [esp+48h+var_28] +
mov edx eax +
mov [edi+4] eax +
lea eax [edx+1] +
mov [edi+4] eax +
lea eax [edx+edx*2] +
lea edx [edi+eax*4] +
lea eax [edx+8] +
mov [edx+8] ebp +
mov edx [esp+48h+var_2C] +
mov [eax+8] esi +
mov [eax+4] edx +
jmp loc_421884  +
mov eax [ebx+14h] +
mov [ebx+18h] eax +
jmp loc_421892  +
mov esi eax +
lea ecx [eax+1] +
mov byte ptr [ebx+24h] 0 +
jmp loc_42183A  +
lea eax [esi+1] +
mov [esp+48h+var_44] eax +
mov eax [edi] +
mov [esp+48h+var_24] ecx +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_41F4C0  +
mov ecx [esp+48h+var_24] +
mov esi eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_421C94  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
and esi 7FFFFFFFh +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_24] ecx +
call sub_452F50  +
mov ecx [esp+48h+var_24] +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx esi +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_421A19  +
mov byte ptr [esp+48h+var_1C] 0 +
xor esi esi +
mov eax 1 +
jmp loc_421986  +
test edi edi +
jz loc_421CA5  +
mov eax [edi+4] +
mov [esp+48h+var_28] ecx +
add eax 1 +
mov [esp+48h+var_44] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+48h+var_48] eax +
call sub_41F4C0  +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_24] eax +
lea eax [eax+eax*2] +
lea edx ds:8[eax*4] +
mov eax [ebx+28h] +
test eax eax +
jz loc_421CC7  +
mov edi [eax+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] ecx +
call sub_452F50  +
mov ecx [esp+48h+var_24] +
and ecx 7FFFFFFFh +
mov edx [eax] +
mov [ebx+28h] eax +
mov [eax+4] edi +
and edx 80000000h +
or edx ecx +
mov ecx [esp+48h+var_28] +
mov [eax] edx +
shr edx 18h +
and edx 7Fh +
mov [eax+3] dl +
mov edx edi +
mov edi eax +
jmp loc_421B27  +
mov [esp-4+arg_4] offset aGet_next_line +
mov [esp-4+arg_0] 221h +
mov dword ptr [esp+0] offset a____GccGccInpu +
call sub_424560  +
mov edi edx +
xor edx edx +
jmp loc_421B27  +
xor edi edi +
jmp loc_421B99  +
cmp [esp+48h+var_28] 64h +
jbe loc_421CC0  +
sub esi [ebx+0Ch] +
mov byte ptr [esp+48h+var_28] 0 +
mov eax 1 +
mov [esp+48h+var_24] 0 +
jmp loc_421A8C  +
xor eax eax +
jmp loc_421943  +
xor edi edi +
jmp loc_421C2D  +
mov edi eax +
xor edx edx +
jmp loc_421A19  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx 1 +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_2C] 20h +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_34] offset aC_3 +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_1C] eax +
call sub_47D600  +
mov [esp+38h+var_34] offset asc_4C6881 +
mov [esp+38h+var_38] esi +
call sub_47D600  +
cmp edi 1 +
jle loc_421D7B  +
mov [esp+38h+var_34] esi +
movzx ecx byte ptr [ebp+19h] +
mov eax ebx +
xor edx edx +
add ebx 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+38h+var_20] +
add eax ecx +
div  [esp+38h+var_1C] +
mov ecx eax +
mov eax 66666667h +
imul  ecx +
mov eax ecx +
sar eax 1Fh +
sar edx 2 +
sub edx eax +
lea eax [edx+edx*4] +
add eax eax +
sub ecx eax +
add ecx 30h +
mov [esp+38h+var_38] ecx +
call fputc  +
cmp ebx edi +
jnz loc_421D35  +
mov [esp+38h+arg_0] esi +
mov [esp+38h+arg_4] offset asc_4C6883 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D600  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] offset aS_10 +
mov [esp+18h+var_18] eax +
call sub_47D600  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset aSource_locatio +
mov [esp+18h+var_C] eax +
call sub_47D600  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] offset asc_4C6883 +
call sub_47D600  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
test eax eax +
jz loc_421E5D  +
call sub_421600  +
test eax eax +
mov ebx eax +
jz loc_421E58  +
mov dword ptr [eax+4] 0 +
mov eax [eax+8] +
test eax eax +
jz loc_421E1D  +
mov [esp] eax +
call fclose  +
mov eax [ebx+28h] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
test eax eax +
mov dword ptr [ebx+1Ch] 0 +
jz loc_421E47  +
mov dword ptr [eax+4] 0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+20h] 0 +
mov byte ptr [ebx+24h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp+8] offset aDiagnostics_fi +
mov dword ptr [esp+4] 113h +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424560  +
nop   +
lea esi [esi+0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov byte ptr [ecx+24h] 1 +
mov dword ptr [ecx+28h] 0 +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
test eax eax +
jz loc_421EEC  +
mov [esp+18h+var_18] eax +
call fclose  +
mov dword ptr [ebx+8] 0 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_421F02  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+28h] +
test eax eax +
jz loc_421F1E  +
cmp byte ptr [eax+3] 0 +
js loc_421F23  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D918C +
test eax eax +
jz locret_421F7F  +
push esi  +
push ebx  +
sub esp 14h +
imul ebx [eax-4] +
add ebx eax +
cmp eax ebx +
jz loc_421F65  +
sub ebx 2Ch +
nop   +
lea esi [esi+0] +
mov ecx ebx +
mov esi ebx +
call sub_421ED0  +
mov eax ds:dword_4D918C +
sub ebx 2Ch +
cmp eax esi +
jnz loc_421F50  +
sub eax 4 +
mov [esp+1Ch+var_1C] eax +
call sub_480FD0  +
mov ds:dword_4D918C 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_421F90  +
***
push esi  +
sub esp 0Ch +
mov eax [esp+0Ch+arg_0] +
call sub_421600  +
test eax eax +
jz loc_422138  +
movzx eax byte ptr [eax+24h] +
add esp 0Ch +
retn   +
mov eax [esp+0Ch+arg_0] +
call sub_421670  +
test eax eax +
jnz loc_422130  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 2Ch +
lea eax [esp+1Ch] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42CAD0  +
cmp eax 1 +
setz al  +
add esp 2Ch +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_421460  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
xor ecx ecx +
sub esp 8 +
mov ebx [esp+10h] +
mov edx [esp+14h] +
mov eax ebx +
call sub_421460  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_0] +
mov edx [esp+8+arg_4] +
mov eax ebx +
call sub_421460  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4D9184 +
mov ebx [esp+20h] +
mov [esp] eax +
mov [esp+4] ebx +
call sub_42CA10  +
test eax eax +
jz loc_422230  +
mov eax ds:dword_4D9184 +
mov [esp+4] ebx +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_42CAD0  +
mov ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42CAD0  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C720  +
mov ebx eax +
mov eax [esp+24h+arg_4] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C640  +
mov esi eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_24] eax +
call sub_42C640  +
mov eax ds:dword_4D9184 +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call sub_42C420  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
xor eax eax +
push esi  +
mov ecx 0Dh +
push ebx  +
sub esp 50h +
lea edx [esp+1Ch] +
mov edi edx +
stos   +
mov eax ds:dword_4D9184 +
mov [esp+4] edx +
mov [esp] eax +
call sub_42D6B0  +
mov eax [esp+40h] +
mov esi [esp+3Ch] +
mov ebx [esp+24h] +
mov dword ptr [esp+4] offset aNumberOfExpand +
lea edi [esi+eax] +
add esi [esp+28h] +
add ebx eax +
add ebx [esp+38h] +
add esi eax +
mov eax [esp+2Ch] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov ecx [esp+2Ch] +
test ecx ecx +
jnz loc_4227D0  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset aLineTableAlloc +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+20h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_422388  +
cmp eax 9FFFFFh +
jg loc_4227C0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdina +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+28h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_4223CB  +
cmp eax 9FFFFFh +
jg loc_4227B0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapUse +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+1Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_42240E  +
cmp eax 9FFFFFh +
jg loc_4227A0  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfOrdi_0 +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+24h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_422451  +
cmp eax 9FFFFFh +
jg loc_422790  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aOrdinaryMapsAl +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+34h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_422494  +
cmp eax 9FFFFFh +
jg loc_422780  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aNumberOfMacroM +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+3Ch] +
mov edx 20h +
cmp eax 27FFh +
jle loc_4224D7  +
cmp eax 9FFFFFh +
jg loc_422770  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsUsedS +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+40h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_42251A  +
cmp eax 9FFFFFh +
jg loc_422760  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aMacroMapsLocat +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
cmp edi 27FFh +
mov eax 20h +
jle loc_42255B  +
cmp edi 9FFFFFh +
jg loc_422750  +
sar edi 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] edi +
mov dword ptr [esp+4] offset aMacroMapsSize5 +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+44h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_42259E  +
cmp eax 9FFFFFh +
jg loc_422740  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aDuplicatedMaps +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
cmp ebx 27FFh +
mov eax 20h +
jle loc_4225DF  +
cmp ebx 9FFFFFh +
jg loc_422730  +
sar ebx 0Ah +
mov eax 6Bh +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTotalAllocated +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
cmp esi 27FFh +
mov edx 20h +
jle loc_422620  +
cmp esi 9FFFFFh +
jg loc_422720  +
sar esi 0Ah +
mov edx 6Bh +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aTotalUsedMapsS +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+48h] +
mov edx 20h +
cmp eax 27FFh +
jle loc_422663  +
cmp eax 9FFFFFh +
jg loc_422710  +
sar eax 0Ah +
mov edx 6Bh +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aAdHocTableSize +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+4Ch] +
mov dword ptr [esp+4] offset aAdHocTableEntr +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax ds:dword_4D9184 +
mov eax [eax+58h] +
mov dword ptr [esp+4] offset aOptimized_rang +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax ds:dword_4D9184 +
mov eax [eax+5Ch] +
mov dword ptr [esp+4] offset aUnoptimized_ra +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax ds:_iob +
mov dword ptr [esp+4] offset asc_4C6883 +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_422663  +
***
sar esi 14h +
mov edx 4Dh +
jmp loc_422620  +
***
sar ebx 14h +
mov eax 4Dh +
jmp loc_4225DF  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_42259E  +
***
sar edi 14h +
mov eax 4Dh +
jmp loc_42255B  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_42251A  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_4224D7  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_422494  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_422451  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_42240E  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_4223CB  +
***
sar eax 14h +
mov edx 4Dh +
jmp loc_422388  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aAverageNumberO +
cdq   +
idiv  ecx +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
jmp loc_42234D  +
***
jmp loc_422A92  +
mov eax ds:dword_4D9184 +
mov [esp+0Ch] ebx +
mov [esp+8] esi +
mov [esp+4] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sub_42D200  +
mov eax [esp+44h] +
mov ebp [esp+3Ch] +
mov edi [esp+40h] +
test eax eax +
jnz loc_422940  +
lea eax [esp+38h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] ebp +
call sub_421F90  +
test eax eax +
jz loc_422A92  +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+0Ch] edi +
mov edi 1 +
mov [esp+8] ebp +
mov [esp+10h] ebx +
mov [esp+14h] eax +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aS3iLoc5i_S +
mov [esp] eax +
call sub_47D600  +
movzx ecx byte ptr [esi+18h] +
mov eax [esp+38h] +
mov [esp] ebp +
shl edi cl +
sub edi 1 +
cmp edi eax +
lea edx [eax+1] +
cmovg edi edx +
call strlen  +
cmp dword ptr [esp+24h] 3E7h +
lea ebp [eax+0Eh] +
ja loc_422A58  +
cmp dword ptr [esp+24h] 63h +
ja loc_422A74  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421CE0  +
mov eax [esp+70h] +
mov ecx esi +
mov dword ptr [esp+8] 1 +
mov edx ebp +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421CE0  +
jmp loc_422940  +
***
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 3E8h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421CE0  +
mov eax [esp+70h] +
mov ecx esi +
mov edx ebp +
mov dword ptr [esp+8] 64h +
mov [esp+4] edi +
mov [esp] ebx +
call sub_421CE0  +
jmp loc_422A1B  +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_4C6883 +
mov [esp] eax +
call sub_47D600  +
mov eax ds:dword_4D9184 +
add dword ptr [esp+28h] 1 +
add dword ptr [esp+2Ch] 1Ch +
mov edx [eax+8] +
cmp [esp+28h] edx +
jb loc_422844  +
mov ebp [esp+70h] +
mov edx [eax+18h] +
mov ebx 7FFFFFFFh +
test edx edx +
jnz loc_422CFE  +
mov ecx [eax+28h] +
mov edx offset aUnallocatedLoc +
mov eax ebp +
mov [esp] ebx +
call sub_421DA0  +
mov eax ds:dword_4D9184 +
mov dword ptr [esp+28h] 0 +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_422C8D  +
mov [esp+70h] ebp +
mov eax [eax+10h] +
sub ebx 1 +
sub ebx [esp+28h] +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*8] +
mov edi [esi+0Ch] +
mov [esp] esi +
call sub_42CA00  +
mov [esp+8] ebx +
xor ebx ebx +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aMacroISUTokens +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_47D600  +
mov eax [esi] +
mov edx [esi+0Ch] +
mov dword ptr [esp+4] offset aSource_locatio +
mov [esp+8] eax +
add edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp] eax +
call sub_47D600  +
mov eax [esi+14h] +
mov dword ptr [esp+4] offset aExpansionPoint +
mov [esp+8] eax +
mov [esp] eax +
call sub_425390  +
mov eax [esi] +
mov dword ptr [esp+4] offset aMapStart_locat +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset aMacro_location +
mov [esp] eax +
call sub_47D600  +
mov eax [esi+0Ch] +
mov dword ptr [esp+24h] 4 +
test eax eax +
jnz loc_422BF0  +
jmp loc_422C5E  +
mov eax [esi] +
cmp ebp eax +
jnb loc_422CC5  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aTokenUHasXLoca +
mov [esp] ebp +
call sub_425390  +
add ebx 1 +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
jbe loc_422C5E  +
mov eax [esi+10h] +
mov edx [esp+24h] +
mov ebp [eax+ebx*8] +
mov edi [eax+edx] +
mov eax [esp+70h] +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov [esp+10h] edi +
mov dword ptr [esp+4] offset aUUU +
mov [esp] eax +
call sub_47D600  +
cmp ebp edi +
jz loc_422BC1  +
mov [esp+8] ebx +
mov [esp+0Ch] ebp +
mov dword ptr [esp+4] offset aTokenUHasXLo_0 +
mov [esp] ebp +
call sub_425390  +
mov [esp+8] ebx +
add ebx 1 +
mov [esp+0Ch] edi +
mov dword ptr [esp+4] offset aTokenUHasYLoca +
mov [esp] ebp +
call sub_425390  +
add dword ptr [esp+24h] 8 +
cmp [esi+0Ch] ebx +
ja loc_422BF0  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset asc_4C6883 +
mov [esp] eax +
call sub_47D600  +
mov eax ds:dword_4D9184 +
add dword ptr [esp+28h] 1 +
mov ebx [eax+18h] +
cmp [esp+28h] ebx +
jb loc_422B04  +
mov ebp [esp+70h] +
mov eax ebp +
mov ecx 7FFFFFFFh +
mov dword ptr [esp] 80000000h +
mov edx offset aMax_source_loc +
call sub_421DA0  +
mov eax ebp +
mov ecx 80000000h +
mov dword ptr [esp] 0FFFFFFFFh +
mov edx offset aAdHocLocations +
call sub_421DA0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
sub edx eax +
mov eax [esp+70h] +
mov [esp+0Ch] edx +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aXLocationYLoca +
mov [esp] eax +
call sub_47D600  +
jmp loc_422BE3  +
***
mov edx [eax+28h] +
mov esi [eax] +
mov [esp+24h] edx +
jmp loc_42285F  +
***
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ebx [edx] +
jmp loc_422AD6  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
lea eax ds:0[ebx*4] +
mov [ecx] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call sub_40F5E0  +
xor edx edx +
test ebx ebx +
mov [edi+4] eax +
jle loc_422D7F  +
mov ecx [esi+edx*4] +
mov [eax+edx*4] ecx +
add edx 1 +
cmp edx ebx +
jnz loc_422D72  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D9184 +
mov [esp+1Ch+var_1C] eax +
call sub_42CAD0  +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4D9184 +
mov [esp+1Ch+var_1C] eax +
call sub_42C640  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_422F0F  +
mov ebx [esp+2Ch+arg_8] +
test ebx ebx +
jz loc_422EF3  +
mov eax [esp+2Ch+arg_0] +
mov ebx ecx +
mov [esp+2Ch+var_2C] eax +
call sub_422D90  +
mov esi [ebx] +
mov edx [esi+18h] +
add dword ptr [esi+10h] 1 +
mov ecx eax +
mov ebp [esi+4] +
mov [esp+2Ch+var_18] eax +
shl edx 4 +
mov edi ds:dword_4C65EC[edx] +
lea eax dword_4C65E0[edx] +
mov [esp+2Ch+var_1C] eax +
mov ebx edi +
mov [esp+2Ch+var_10] edi +
mov edi ds:dword_4C65E0[edx] +
mov [esp+2Ch+var_14] edi +
mov edi eax +
mov eax ecx +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+var_18] +
mov edi [esi] +
mov ecx edx +
mov edx eax +
sub edx ecx +
shr edx 1 +
add edx ecx +
mov ecx ebx +
shr edx cl +
mov ebx eax +
imul edx [esp+2Ch+var_14] +
sub ebx edx +
lea edx [edi+ebx*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_422EC3  +
cmp eax [edx] +
jz loc_422ED0  +
mov ecx [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_18] +
mul  dword ptr [ecx+8] +
mov ecx edx +
mov edx [esp+2Ch+var_18] +
mov eax edx +
sub edx ecx +
shr edx 1 +
add eax 1 +
add edx ecx +
movzx ecx byte ptr [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] eax +
mov eax [esi+14h] +
shr edx cl +
mov ecx [esp+2Ch+var_14] +
sub ecx 2 +
imul edx ecx +
sub [esp+2Ch+var_1C] edx +
lea ecx [eax+1] +
mov eax [esp+2Ch+var_18] +
jmp loc_422EAB  +
add ecx 1 +
cmp eax [edx] +
jz loc_422ED0  +
add ebx [esp+2Ch+var_1C] +
mov [esi+14h] ecx +
mov edx ebx +
sub edx ebp +
cmp ebp ebx +
cmovbe ebx edx +
lea edx [edi+ebx*8] +
cmp dword ptr [edx] 0 +
jnz loc_422EA4  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [edx+4] +
mov esi [esp+2Ch+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
mov [esi] edx +
mov esi [esp+2Ch+arg_8] +
mov [esi] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E5h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_424560  +
mov [esp+2Ch+var_24] offset aGet_string_con +
mov [esp+2Ch+var_28] 4E4h +
mov [esp+2Ch+var_2C] offset a____GccGccInpu +
call sub_424560  +
nop   +
lea esi [esi+0] +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+24h] +
mov esi [ebp+10h] +
test eax eax +
jz loc_423668  +
lea ecx [ebp-58h] +
call sub_42F7A0  +
mov edi [ebp+8] +
mov [ebp-6Ch] esi +
test edi edi +
jz loc_42364C  +
test esi esi +
mov ebx offset aUnknownLocatio +
jnz loc_422F80  +
lea ecx [ebp-58h] +
call sub_42F7D0  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+8] +
mov ebx offset aTrack_macro_ex +
mov [esp+0E8h+var_E8] eax +
call sub_437EF0  +
cmp byte ptr [eax+2Dh] 2 +
jnz loc_422F69  +
mov eax ds:dword_4D9184 +
mov ebx offset aSeenLineDirect +
cmp byte ptr [eax+50h] 0 +
jnz loc_422F69  +
mov ebx [ebp+0Ch] +
lea eax [ebp-6Ch] +
mov dword ptr [ebp-68h] 1 +
mov [ebp-64h] eax +
test ebx ebx +
jz loc_423100  +
lea eax [ebp-64h] +
mov ecx [ebp+0Ch] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp-68h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp-6Ch] +
mov [esp+0E8h+var_E8] eax +
call sub_422DD0  +
mov ecx [ebp-68h] +
mov ebx ecx +
sub esp 0Ch +
test ecx ecx +
jnz loc_423105  +
xor edi edi +
xor esi esi +
xor edx edx +
test esi esi +
jnz loc_4230B4  +
lea ebx [edi+8] +
xor eax eax +
test edi edi +
cmovnz eax ebx +
mov ebx [ebp+14h] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+8] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ebx +
lea ebx [ebp-58h] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_4346E0  +
mov ebx eax +
lea esi [esi+0] +
test esi esi +
jz loc_423046  +
cmp byte ptr [esi+3] 0 +
js loc_4230F0  +
mov [esp+0E8h+var_E8] esi +
call free  +
test edi edi +
jz loc_42308C  +
mov eax [edi+4] +
test eax eax +
jz loc_42307E  +
mov eax [edi+0Ch] +
mov esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax 1 +
jmp loc_423079  +
mov eax [edi+eax*8+0Ch] +
add esi 1 +
mov [esp+0E8h+var_E8] eax +
call free  +
mov eax esi +
cmp eax [edi+4] +
jb loc_423068  +
cmp byte ptr [edi+3] 0 +
js loc_4230E0  +
mov [esp+0E8h+var_E8] edi +
call free  +
test ebx ebx +
jnz loc_422F69  +
mov eax [ebp-54h] +
cmp eax [ebp+18h] +
jle loc_4230C0  +
cmp eax [ebp+1Ch] +
jle loc_4230D0  +
cmp eax [ebp+20h] +
jg loc_42361C  +
mov ebx offset aEnd_idxOutOfRa +
jmp loc_422F69  +
lea edx [esi+8] +
jmp loc_422FF8  +
mov ebx offset aCaret_idxOutOf +
jmp loc_422F69  +
mov ebx offset aStart_idxOutOf +
jmp loc_422F69  +
mov dword ptr [edi+4] 0 +
jmp loc_42308C  +
mov dword ptr [esi+4] 0 +
jmp loc_423046  +
mov ebx 1 +
lea eax ds:8[ebx*8] +
and ebx 7FFFFFFFh +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_452F50  +
mov edi eax +
mov eax [eax] +
mov dword ptr [edi+4] 0 +
and eax 80000000h +
or eax ebx +
mov ebx [ebp-68h] +
mov [edi] eax +
shr eax 18h +
and eax 7Fh +
mov [edi+3] al +
test ebx ebx +
jz loc_423684  +
lea eax [ebx+ebx*2] +
and ebx 7FFFFFFFh +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
call sub_452F50  +
mov ecx [ebp-68h] +
mov esi eax +
mov eax [eax] +
mov dword ptr [esi+4] 0 +
and eax 80000000h +
or eax ebx +
mov [esi] eax +
shr eax 18h +
and eax 7Fh +
test ecx ecx +
mov [esi+3] al +
jle loc_422FEE  +
mov dword ptr [ebp-84h] 0 +
jmp loc_4233AF  +
lea eax [edx+1] +
mov byte ptr [ebp-94h] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*8] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-9Ch] edx +
mov [ebp-98h] ecx +
call sub_452F50  +
mov ecx [ebp-98h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov [ebp-90h] eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov ecx edx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-94h] 0 +
mov [edx+3] al +
mov edx [ebp-9Ch] +
jz loc_42368D  +
mov eax [ebp-90h] +
lea ecx ds:0[edx*8] +
add edi 8 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edi +
mov [ebp-94h] edx +
add eax 8 +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [ebp-90h] +
mov edx [ebp-94h] +
mov edi eax +
mov [eax+4] edx +
mov ecx edx +
lea eax [ecx+1] +
mov [edi+4] eax +
lea eax [edi+ecx*8] +
mov [eax+8] ebx +
mov ebx [ebp-8Ch] +
mov [eax+0Ch] ebx +
lea eax [ebp-5Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-7Ch] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42CAD0  +
mov eax [ebp-80h] +
mov [esp+0E8h+var_DC] eax +
mov eax [ebp-88h] +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp-5Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42C270  +
mov edx ds:dword_4D9184 +
lea ecx [ebp-4Ch] +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_435050  +
sub esp 8 +
test esi esi +
jz loc_4235A3  +
mov ebx [esi] +
mov eax [esi+4] +
and ebx 7FFFFFFFh +
cmp ebx eax +
jnz loc_42337B  +
cmp byte ptr [esi+3] 0 +
jns loc_423544  +
lea eax [ebx+1] +
mov byte ptr [ebp-7Ch] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax [ecx+ecx*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] 0 +
mov [ebp-80h] ecx +
call sub_452F50  +
mov ecx [ebp-80h] +
and ecx 7FFFFFFFh +
mov edx eax +
mov eax [eax] +
mov dword ptr [edx+4] 0 +
and eax 80000000h +
or eax ecx +
mov [edx] eax +
shr eax 18h +
and eax 7Fh +
cmp byte ptr [ebp-7Ch] 0 +
mov [edx+3] al +
jz loc_423696  +
lea ecx [ebx+ebx*2] +
add esi 8 +
lea eax [edx+8] +
shl ecx 2 +
mov [esp+0E8h+var_E4] esi +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
mov [ebp-7Ch] edx +
call memcpy  +
mov edx [ebp-7Ch] +
mov eax ebx +
mov [edx+4] ebx +
mov esi edx +
lea edx [eax+1] +
mov ecx [ebp-68h] +
mov [esi+4] edx +
mov edx [ebp-4Ch] +
lea eax [eax+eax*2] +
lea eax [esi+eax*4] +
add dword ptr [ebp-84h] 1 +
cmp [ebp-84h] ecx +
mov [eax+8] edx +
mov edx [ebp-48h] +
mov [eax+0Ch] edx +
mov edx [ebp-44h] +
mov [eax+10h] edx +
jge loc_4230B4  +
mov ebx [ebp-84h] +
mov eax [ebp-64h] +
mov eax [eax+ebx*4] +
mov [esp+0E8h+var_E4] eax +
mov eax ds:dword_4D9184 +
mov [esp+0E8h+var_E8] eax +
call sub_42C640  +
mov ebx ds:dword_4D9184 +
mov ecx 7FFFFFFFh +
mov [ebp-7Ch] edx +
mov edx [ebx+18h] +
test edx edx +
jz loc_4233ED  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_4235C6  +
cmp eax 5FFFFFFFh +
ja loc_4235D0  +
cmp dword ptr [ebp-7Ch] 5FFFFFFFh +
ja loc_4235E0  +
xor ecx ecx +
mov edx eax +
lea eax [ebp-40h] +
call sub_421460  +
mov eax [ebp-3Ch] +
xor ecx ecx +
mov edx [ebp-7Ch] +
mov ebx [ebp-40h] +
mov [ebp-88h] eax +
mov eax [ebp-38h] +
mov [ebp-80h] eax +
lea eax [ebp-2Ch] +
call sub_421460  +
mov edx [ebp-24h] +
cmp ebx [ebp-2Ch] +
jnz loc_4235EA  +
mov ecx [ebp-88h] +
cmp ecx [ebp-28h] +
jnz loc_4235F4  +
cmp [ebp-80h] edx +
mov [ebp-8Ch] edx +
jg loc_4235FE  +
lea eax [ebp-60h] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebx +
call sub_421F90  +
test eax eax +
jz loc_423608  +
mov ebx [ebp-80h] +
mov edx [ebp-8Ch] +
lea ecx [ebx-1] +
sub edx ebx +
add eax ecx +
lea ebx [edx+1] +
add ecx ebx +
cmp ecx [ebp-60h] +
jg loc_423612  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
call sub_45C730  +
test edi edi +
mov [ebp-8Ch] eax +
jz loc_4235B3  +
mov edx [edi] +
mov ecx [edi+4] +
and edx 7FFFFFFFh +
cmp edx ecx +
jnz loc_423259  +
cmp byte ptr [edi+3] 0 +
js loc_4231A1  +
mov eax ecx +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [edi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_41F4C0  +
mov ecx [edi+4] +
mov [esp+0E8h+var_E8] edi +
mov [ebp-94h] ecx +
mov edx eax +
lea eax ds:8[eax*8] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-90h] edx +
call sub_452F50  +
mov edx [ebp-90h] +
mov ecx [ebp-94h] +
mov edi eax +
mov eax edx +
mov edx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] ecx +
and edx 80000000h +
or edx eax +
mov [edi] edx +
shr edx 18h +
and edx 7Fh +
mov [edi+3] dl +
jmp loc_423259  +
add eax 1 +
mov [esp+0E8h+var_E4] eax +
mov eax [esi] +
and eax 7FFFFFFFh +
mov [esp+0E8h+var_E8] eax +
call sub_41F4C0  +
mov ebx [esi+4] +
mov [esp+0E8h+var_E8] esi +
mov edx eax +
lea eax [eax+eax*2] +
lea eax ds:8[eax*4] +
mov [esp+0E8h+var_E4] eax +
mov [ebp-7Ch] edx +
call sub_452F50  +
mov edx [ebp-7Ch] +
mov esi eax +
mov eax edx +
mov edx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] ebx +
and edx 80000000h +
or edx eax +
mov eax ebx +
mov [esi] edx +
shr edx 18h +
and edx 7Fh +
mov [esi+3] dl +
jmp loc_42337B  +
xor ebx ebx +
mov eax 1 +
mov byte ptr [ebp-7Ch] 0 +
jmp loc_4232FA  +
mov byte ptr [ebp-94h] 0 +
xor edx edx +
mov eax 1 +
jmp loc_4231AB  +
mov ebx offset aMacroExpansion +
jmp loc_423030  +
mov ebx offset aRangeStartsAft +
jmp loc_423030  +
mov ebx offset aRangeEndsAfter +
jmp loc_423030  +
mov ebx offset aRangeEndpoints +
jmp loc_423030  +
mov ebx offset aRangeEndpoin_0 +
jmp loc_423030  +
mov ebx offset aRangeEndpoin_1 +
jmp loc_423030  +
mov ebx offset aUnableToReadSo +
jmp loc_423030  +
mov ebx offset aLineIsNotWideE +
jmp loc_423030  +
mov eax [ebp-58h] +
mov edi [ebp+20h] +
mov ecx [eax+edi*8+4] +
mov edi [ebp+1Ch] +
mov edx [eax+edi*8] +
mov edi [ebp+18h] +
mov eax [eax+edi*8] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_422270  +
mov edi [ebp+24h] +
mov [edi] eax +
jmp loc_422F69  +
mov [esp+0E8h+var_E0] offset aGet_substring_ +
mov [esp+0E8h+var_E4] 528h +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_424560  +
mov [esp+0E8h+var_E0] offset aGet_source_loc +
mov [esp+0E8h+var_E4] 5BBh +
mov [esp+0E8h+var_E8] offset a____GccGccInpu +
call sub_424560  +
xor ecx ecx +
xor esi esi +
jmp loc_422FEE  +
mov edi ecx +
xor ecx ecx +
jmp loc_423259  +
mov esi edx +
xor eax eax +
jmp loc_42337B  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+8] +
mov edi [ebp+0Ch] +
cmp ebx 1 +
jle loc_42380A  +
test edi edi +
jz loc_423826  +
mov eax [edi] +
mov esi ecx +
mov [esp] eax +
call sub_422D90  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 8 +
mov [ebp-1Ch] eax +
call sub_40F5E0  +
test eax eax +
mov [ebp-28h] eax +
jz loc_42370B  +
mov [esp+4] edi +
mov ecx eax +
mov [esp] ebx +
call sub_422D30  +
sub esp 8 +
mov ebx [esi] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx+ecx*2] +
shl eax 2 +
cmp edx eax +
mov [ebp-2Ch] ecx +
jbe loc_4237E6  +
mov eax [ebx+18h] +
mov esi [ebp-1Ch] +
add dword ptr [ebx+10h] 1 +
shl eax 4 +
lea edi dword_4C65E0[eax] +
mov ecx ds:dword_4C65EC[eax] +
mov eax ds:dword_4C65E0[eax] +
mov [ebp-24h] ecx +
mov [ebp-20h] eax +
mov [ebp-30h] eax +
mov eax esi +
mul  dword ptr [edi+4] +
mov eax esi +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [ebp-20h] +
sub esi eax +
mov eax [edi+8] +
mov edi [ebx] +
lea edx [edi+esi*8] +
mov ecx [edx] +
test ecx ecx +
jz loc_4237CD  +
mov ecx [ebp-1Ch] +
cmp ecx [edx] +
jz loc_4237D6  +
mul  ecx +
lea eax [ecx+1] +
mov [ebp-20h] eax +
mov eax ecx +
movzx ecx byte ptr [ebp-24h] +
mov [ebp-24h] edi +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp-30h] +
shr eax cl +
mov ecx [ebp-2Ch] +
sub edx 2 +
imul eax edx +
sub [ebp-20h] eax +
mov eax [ebx+14h] +
lea edx [eax+1] +
jmp loc_4237B0  +
mov edi [ebp-1Ch] +
add edx 1 +
cmp edi [eax] +
jz loc_4237F8  +
add esi [ebp-20h] +
mov [ebx+14h] edx +
mov eax esi +
sub eax ecx +
cmp esi ecx +
cmovnb esi eax +
mov eax [ebp-24h] +
lea eax [eax+esi*8] +
mov edi [eax] +
test edi edi +
jnz loc_4237A6  +
mov edx eax +
mov eax [ebp-1Ch] +
add dword ptr [ebx+8] 1 +
mov [edx] eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_47DD70  +
mov eax [ebx+4] +
mov [ebp-2Ch] eax +
jmp loc_423724  +
***
mov edx eax +
mov eax [ebp-28h] +
mov [edx+4] eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CDh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424560  +
mov dword ptr [esp+8] offset aRecord_string_ +
mov dword ptr [esp+4] 4CEh +
mov dword ptr [esp] offset a____GccGccInpu +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_47D660 +
mov dword ptr [esp] 20h +
call sub_40F5E0  +
test eax eax +
mov ebx eax +
jz loc_4238AD  +
mov dword ptr [esp+0Ch] 1 +
mov ecx eax +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 40h +
call sub_47E030  +
sub esp 10h +
mov [esi] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+14h] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] eax +
call sub_4296E0  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call sub_4261B0  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_425FE0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_8] +
mov ebx [esp+2Ch+arg_10] +
test edi edi +
jz loc_423A40  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_423956  +
mov esi [esp+2Ch+arg_8] +
test esi esi +
jz loc_42395F  +
mov eax [esp+2Ch+arg_8] +
mov edi offset aDiagnostic_c +
mov [esp+2Ch+var_2C] eax +
call sub_459F50  +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_423950  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
cmp eax 13h +
jg loc_423A64  +
mov ecx [esp+2Ch+arg_0] +
add eax 1 +
test ebx ebx +
mov [ecx] eax +
jz loc_423A71  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 400Bh +
call sub_466720  +
test eax eax +
cmovnz ebx eax +
xor edi edi +
mov [esp+2Ch+var_10] eax +
mov ebp ds:off_4C7638[edi*4] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
mov esi eax +
call strncmp  +
test eax eax +
jnz loc_4239C4  +
movzx eax byte ptr [ebx+esi] +
cmp al 28h +
jz loc_423A50  +
test al al +
jz loc_423A50  +
add edi 1 +
cmp edi 4 +
jnz loc_42398B  +
mov edx [esp+2Ch+arg_8] +
mov eax offset a???_0 +
mov ebp eax +
mov [esp+2Ch+var_28] offset a0xLxSSD +
test edx edx +
cmovnz ebp [esp+2Ch+arg_8] +
test ebx ebx +
cmovz ebx eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_47D600  +
mov edx [esp+2Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_423947  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call free  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jnz loc_423917  +
jmp loc_423945  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_423A64  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_10] 0 +
jmp loc_4239CC  +
***
sub esp 2Ch +
mov edx [esp+2Ch+arg_8] +
test edx edx +
js loc_423ABC  +
mov eax offset unk_4C7102 +
mov ecx eax +
jnz loc_423AC0  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] offset aSSS_0 +
mov [esp+2Ch+var_24] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+2Ch+var_2C] eax +
call sub_47D600  +
add esp 2Ch +
retn   +
mov [esp+2Ch+var_2C] edx +
call sub_466800  +
mov ecx offset asc_4C7103 +
jmp loc_423A94  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_466850  +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+30h+var_28] 5 +
mov [esp+30h+var_2C] offset aLocus +
movzx eax byte ptr [eax+27h] +
mov [esp+30h+var_14] edx +
mov [esp+30h+var_30] eax +
call sub_42A1B0  +
mov ebp eax +
movzx eax byte ptr [esi+27h] +
mov [esp+30h+var_30] eax +
call sub_42A220  +
test ebx ebx +
jz loc_423BC2  +
mov edi offset aBuiltIn_0 +
mov ecx 0Bh +
mov esi ebx +
cmps   +
jz loc_423BA2  +
mov edi [esp+30h+var_14] +
cmp byte ptr [edi] 0 +
jnz loc_423B72  +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDS +
mov [esp+30h+var_24] eax +
call sub_423AD0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_1C] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSDDS +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_0] +
mov [esp+30h+var_24] eax +
call sub_423AD0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_24] eax +
mov [esp+30h+var_30] offset aSSS +
call sub_423AD0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_24] eax +
mov eax ds:dword_4D91A0 +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] offset aSSS +
mov [esp+30h+var_28] eax +
call sub_423AD0  +
jmp loc_423B6A  +
***
jmp sub_423BF0  +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_C] +
mov eax [ebx] +
lea edx [ebx+65h] +
mov [esp+18h+var_14] ecx +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ecx +
mov ecx [esp+18h+arg_4] +
call sub_423AF0  +
mov edx [ebx] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_426180  +
mov eax [ebx] +
mov [esp+18h+var_14] offset unk_4C7102 +
mov [esp+18h+var_18] eax +
call sub_4267B0  +
mov eax [ebx] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp sub_4262F0  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+8] 5 +
mov dword ptr [esp+4] offset aLocus +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_42A1B0  +
mov esi eax +
mov eax [ebx] +
movzx eax byte ptr [eax+27h] +
mov [esp] eax +
call sub_42A220  +
mov [esp+4] esi +
mov dword ptr [esp] offset aSSS_2 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_423AD0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] offset aColumns +
call getenv  +
test eax eax +
jz loc_423CD6  +
mov [esp+18h+var_18] eax +
call atoi  +
test eax eax +
cmovg ebx eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
mov [esp+28h+var_28] 28h +
mov ebx [ebp+arg_4] +
call sub_452ED0  +
test eax eax +
mov [esi] eax +
jz loc_423D6A  +
mov [esp+28h+var_24] 0 +
mov ecx eax +
mov [esp+28h+var_28] 0 +
call sub_4261E0  +
sub esp 8 +
lea edi [esi+4] +
mov edx 38h +
test edi 1 +
jnz loc_423EBF  +
test edi 2 +
jnz loc_423ED4  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_423DA1  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_423DA9  +
mov byte ptr [edi] 0 +
lea edi ds:0[ebx*4] +
mov byte ptr [esi+3Ch] 0 +
mov [esi+40h] ebx +
mov [esp+28h+var_28] edi +
call sub_452ED0  +
test ebx ebx +
mov [esi+44h] eax +
lea edx [eax+edi] +
jle loc_423DDD  +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_423DD0  +
mov eax [esi] +
mov byte ptr [esi+58h] 0 +
mov eax [eax+1Ch] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call sub_423CE0  +
mov byte ptr [esi+60h] 5Eh +
mov byte ptr [esi+61h] 5Eh +
mov byte ptr [esi+62h] 5Eh +
mov byte ptr [esi+63h] 0 +
mov byte ptr [esi+64h] 0 +
mov byte ptr [esi+65h] 0 +
mov byte ptr [esi+66h] 0 +
mov byte ptr [esi+67h] 0 +
mov dword ptr [esi+68h] 0 +
mov byte ptr [esi+6Ch] 0 +
mov byte ptr [esi+6Dh] 0 +
mov byte ptr [esi+6Eh] 0 +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+74h] offset sub_424900 +
mov dword ptr [esi+78h] offset sub_423BF0 +
mov dword ptr [esi+7Ch] offset sub_4238C0 +
mov dword ptr [esi+84h] 0 +
mov dword ptr [esi+88h] 0 +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+94h] 0 +
mov dword ptr [esi+98h] 0 +
mov dword ptr [esi+90h] 0 +
mov dword ptr [esi+9Ch] 0 +
mov byte ptr [esi+0A0h] 0 +
mov byte ptr [esi+0A1h] 0 +
mov byte ptr [esi+0A2h] 0 +
mov byte ptr [esi+0A3h] 0 +
mov dword ptr [esi+0A4h] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+5] +
mov dl 37h +
test edi 2 +
mov byte ptr [esi+4] 0 +
jz loc_423D8A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_423D8A  +
***
sub esp 18h +
mov edx [esp+18h+arg_4] +
test edx edx +
cmovns eax edx +
mov edx [esp+18h+arg_0] +
mov ebx [edx] +
mov [esp+18h+var_18] eax +
call sub_42A240  +
mov [ebx+27h] al +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+34h] +
test eax eax +
jz loc_423F5C  +
mov edx ds:dword_4D91A0 +
cmp byte ptr [ebx+3Ch] 0 +
mov eax [ebx] +
mov [esp+14h+var_C] edx +
jnz loc_423FB6  +
mov [esp+14h+var_10] offset aSSomeWarningsB +
mov [esp+14h+var_14] eax +
call sub_427C30  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call sub_427CF0  +
call sub_421F30  +
mov eax [ebx+44h] +
mov [esp+14h+var_14] eax +
call free  +
mov ecx [ebx] +
mov dword ptr [ebx+44h] 0 +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebx] +
mov [esp+14h+var_14] eax +
call free  +
mov esi [ebx+0A4h] +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_423FB0  +
mov eax [esi+4] +
mov [esp+14h+var_14] eax +
call sub_466B00  +
mov [esp+14h+var_14] esi +
call sub_480FE0  +
mov dword ptr [ebx+0A4h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] offset aSAllWarningsBe +
mov [esp+14h+var_14] eax +
call sub_427C30  +
jmp loc_423F52  +
***
mov eax [esp+arg_0] +
mov eax ds:dword_4C7660[eax*4] +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov eax [edi] +
cmp byte ptr [eax+25h] 0 +
jnz loc_424140  +
cmp ebx 1 +
jbe loc_424133  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_4D9184 +
mov [esp+3Ch+var_34] 2 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42CAD0  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_424133  +
cmp eax [edi+98h] +
jz loc_424133  +
mov [edi+98h] eax +
mov eax [eax+10h] +
test eax eax +
js loc_424133  +
mov edx ds:dword_4D9184 +
imul eax eax +
add eax [edx] +
cmp byte ptr [edi+65h] 0 +
mov [esp+3Ch+var_10] eax +
jnz loc_424153  +
mov ebx [eax+1Ch] +
mov edx 0FFFFFFFFh +
movzx ecx byte ptr [eax+18h] +
mov ebp [eax+8] +
mov esi [edi] +
sub ebx 1 +
sub ebx [eax] +
shl edx cl +
and edx ebx +
shr edx cl +
add edx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aInFileIncluded +
mov [esp+3Ch+var_3C] esi +
call sub_427C30  +
mov eax [esp+3Ch+var_10] +
mov esi 1 +
mov edx [eax+10h] +
test edx edx +
js loc_424117  +
nop   +
mov eax ds:dword_4D9184 +
imul edx edx +
add edx [eax] +
mov eax esi +
mov ebx [edx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov ebp [edx+8] +
mov [esp+3Ch+var_10] edx +
sub ebx 1 +
sub ebx [edx] +
shl eax cl +
neg eax  +
and eax ebx +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_38] offset aFromRSDR +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_427C30  +
mov eax [esp+3Ch+var_10] +
mov edx [eax+10h] +
test edx edx +
jns loc_4240C0  +
mov eax [edi] +
mov [esp+3Ch+var_38] offset asc_4C71F0 +
mov [esp+3Ch+var_3C] eax +
call sub_427C30  +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_4262F0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] eax +
call sub_4262F0  +
mov eax [edi] +
mov byte ptr [eax+25h] 0 +
jmp loc_424003  +
movzx esi byte ptr [eax+18h] +
mov edx 1 +
mov ebp [eax+8] +
mov ecx esi +
shl edx cl +
mov ecx [eax+1Ch] +
mov ebx edx +
sub edx 1 +
neg ebx  +
sub ecx 1 +
sub ecx [eax] +
and ebx ecx +
movzx ecx byte ptr [eax+19h] +
and edx ebx +
shr edx cl +
mov ecx esi +
mov [esp+3Ch+var_28] edx +
shr ebx cl +
add ebx [eax+0Ch] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] offset aLocus +
mov [esp+3Ch+var_2C] ebx +
mov [esp+3Ch+var_38] offset aInFileInclud_0 +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call sub_427C30  +
jmp loc_4240AE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_4] +
mov esi [esp+28h+arg_0] +
test ebx ebx +
js loc_424266  +
cmp ebx [esi+40h] +
jge loc_424266  +
cmp [esp+28h+arg_8] 0Dh +
jg loc_424266  +
mov eax [esi+44h] +
mov edx [esp+28h+arg_C] +
lea eax [eax+ebx*4] +
test edx edx +
mov ebp [eax] +
jz loc_424270  +
test ebp ebp +
jz loc_424285  +
mov eax [esi+4Ch] +
mov ecx eax +
sub ecx 1 +
mov [esp+28h+var_1C] eax +
mov eax [esi+48h] +
js loc_424232  +
lea edx [ecx+ecx*2] +
shl edx 2 +
lea edi [eax+edx] +
cmp [edi+4] ebx +
lea edx [eax+edx-0Ch] +
jnz loc_42422A  +
jmp loc_424280  +
mov edi edx +
sub edx 0Ch +
cmp [edx+10h] ebx +
jz loc_424280  +
sub ecx 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_424220  +
mov edi [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
lea edi [edi+edi*2+3] +
shl edi 2 +
mov [esp+28h+var_24] edi +
call sub_452F50  +
mov [esi+48h] eax +
lea eax [eax+edi-0Ch] +
mov edi [esp+28h+arg_C] +
mov [eax+4] ebx +
mov [eax] edi +
mov edi [esp+28h+arg_8] +
mov [eax+8] edi +
mov eax ebp +
add dword ptr [esi+4Ch] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+28h+arg_8] +
mov [eax] esi +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [edi+8] +
jmp loc_424232  +
mov edx [esi+88h] +
mov bp 1 +
mov eax [esi+84h] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] edx +
call eax  +
test eax eax +
jz loc_4242AE  +
cmp byte ptr [esi+3Ch] 1 +
sbb ebp ebp +
and ebp 2 +
add ebp 4 +
mov eax [esi+44h] +
mov [eax+ebx*4] ebp +
jmp loc_4241F9  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [ebx+54h] +
mov eax [ebx+50h] +
lea edx ds:4[edx*4] +
mov [esp+4] edx +
mov [esp] eax +
call sub_452F50  +
mov edx [ebx+54h] +
lea ecx [edx+1] +
mov [ebx+54h] ecx +
mov ecx [ebx+4Ch] +
mov [ebx+50h] eax +
mov [eax+edx*4] ecx +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [ebx+54h] +
test eax eax +
jz loc_42431F  +
mov edx [ebx+50h] +
sub eax 1 +
mov [ebx+54h] eax +
mov edi [edx+eax*4] +
mov eax [ebx+4Ch] +
lea esi [eax+eax*2+3] +
mov eax [ebx+48h] +
shl esi 2 +
mov [esp+4] esi +
mov [esp] eax +
call sub_452F50  +
mov edx [esp+24h] +
mov [ebx+48h] eax +
lea eax [eax+esi-0Ch] +
mov [eax] edx +
mov [eax+4] edi +
mov dword ptr [eax+8] 0Fh +
add dword ptr [ebx+4Ch] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
movzx edx byte ptr [ebp+0] +
cmp dl 2Eh +
jnz loc_424446  +
cmp byte ptr [ebp+1] 2Eh +
jnz loc_42443A  +
movzx eax byte ptr [ebp+2] +
cmp al 5Ch +
jnz loc_424432  +
mov eax ebp +
jmp loc_42439F  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_4243B5  +
movzx edx byte ptr [eax+2] +
cmp dl 5Ch +
jnz loc_4243B0  +
add eax 3 +
movzx edx byte ptr [eax] +
cmp dl 2Eh +
jz loc_424390  +
mov edi edx +
jmp loc_4243BA  +
cmp dl 2Fh +
jz loc_42439F  +
mov edi 2Eh +
mov edx offset a____GccGccDiag +
jmp loc_4243D2  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_4243DD  +
movzx esi byte ptr [edx+2] +
mov ebx esi +
cmp bl 5Ch +
jnz loc_424427  +
add edx 3 +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_4243C1  +
mov ebx edi +
cmp bl cl +
jnz loc_424401  +
mov ebx edi +
test bl bl +
jnz loc_4243F4  +
jmp loc_424401  +
test cl cl +
jz loc_424401  +
add eax 1 +
add edx 1 +
movzx ecx byte ptr [eax] +
cmp cl [edx] +
jz loc_4243F0  +
cmp ebp eax +
jb loc_424419  +
jmp loc_424422  +
cmp dl 2Fh +
lea esi [esi+0] +
jz loc_424422  +
sub eax 1 +
cmp eax ebp +
jz loc_424422  +
movzx edx byte ptr [eax-1] +
cmp dl 5Ch +
jnz loc_424407  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 2Fh +
jz loc_4243D2  +
lea esi [esi+0] +
jmp loc_4243DD  +
cmp al 2Fh +
jz loc_42438B  +
mov eax ebp +
mov edi 2Eh +
jmp loc_4243BA  +
mov edi edx +
mov eax ebp +
jmp loc_4243BA  +
***
sub esp 3Ch +
lea eax [esp+44h] +
mov [esp+18h] eax +
call ds:__imp__errno  +
lea edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+28h] 0 +
mov [esp+24h] eax +
lea eax [esp+18h] +
mov [esp+20h] eax +
mov eax [esp+40h] +
mov [esp+1Ch] eax +
mov eax off_483600 +
mov eax [eax] +
mov [esp+4] edx +
mov [esp] eax +
call sub_427BE0  +
mov eax off_483600 +
mov eax [eax] +
mov [esp] eax +
call sub_427CF0  +
add esp 3Ch +
retn   +
***
mov edx off_483600 +
mov eax 1 +
mov ecx [edx+14h] +
test ecx ecx +
jnz locret_4244CA  +
mov eax [edx+18h] +
test eax eax +
setnz al  +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474580  +
add esp 1Ch +
retn   +
***
sub esp 14h +
sub esp 1Ch +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
cmp eax 0Dh +
ja loc_424655  +
jmp ds:off_4C7360[eax*4]  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_424650  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+6Ch] 0 +
jnz loc_424701  +
add esp 3Ch +
retn   +
cmp eax 3 +
jz loc_4246A0  +
mov [esp+3Ch+var_10] 0 +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jnz loc_424650  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseSubmitAF +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_4244D0  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jle loc_42461A  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aPleaseIncludeT +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_4244D0  +
mov eax ds:_iob +
mov [esp+3Ch+var_34] offset aHttpsGcc_gnu_o +
mov [esp+3Ch+var_38] offset aSeeSForInstruc +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_4244D0  +
mov [esp+3Ch+var_3C] 4 +
call exit  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+64h] 0 +
jz loc_424671  +
call abort  +
mov [esp+3Ch+var_34] offset aDiagnostic_act +
mov [esp+3Ch+var_38] 215h +
mov [esp+3Ch+var_3C] offset a____GccGccDi_0 +
call sub_424560  +
mov [esp+3Ch+var_3C] eax +
call sub_423F20  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationTer +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_4244D0  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] offset sub_423A80 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] 0 +
call sub_44D220  +
mov [esp+3Ch+var_10] 0 +
test eax eax +
jz loc_4245D8  +
lea edx [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_30] offset sub_423A80 +
mov [esp+3Ch+var_34] offset sub_423900 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] eax +
call sub_44D370  +
jmp loc_4245D8  +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset aCompilationT_0 +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call sub_4244D0  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_423F20  +
mov [esp+3Ch+var_3C] 1 +
call exit  +
jmp sub_424740  +
***
sub esp 14h +
sub esp 14h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [ebp+arg_4] +
mov [esp+18h+var_18] 0 +
mov ebx [ebp+arg_0] +
mov ecx esi +
call sub_425DD0  +
sub esp 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ebx +
call sub_423FE0  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_424800  +
mov edx [ebx] +
mov [ebp+arg_0] edx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp sub_426180  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [ebp+0Ch] +
lea esi [ebp-74h] +
mov ebx [ebp+8] +
mov ecx esi +
lea edi [ebp-98h] +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42DCF0  +
lea eax [ebp+14h] +
mov [ebp-9Ch] eax +
lea eax [ebp-9Ch] +
sub esp 8 +
mov [esp+8] eax +
mov eax [ebp+10h] +
mov dword ptr [esp+10h] 8 +
mov [esp+0Ch] esi +
mov [esp] edi +
mov [esp+4] eax +
call sub_4247A0  +
cmp byte ptr [ebx+0A0h] 0 +
jnz loc_424A27  +
mov eax [ebx] +
mov edx [eax+8] +
mov [esp+4] edi +
mov [esp] ebx +
mov [ebp-0ACh] edx +
call sub_424800  +
mov ecx [ebx] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_426180  +
mov eax [ebx] +
mov [esp+4] edi +
mov [esp] eax +
call sub_426800  +
mov eax [ebx] +
mov [esp] eax +
call sub_427B30  +
mov eax [ebx] +
mov [esp] eax +
call sub_4261B0  +
mov eax [ebx] +
mov edx [ebp-0ACh] +
mov [esp] eax +
mov [esp+4] edx +
call sub_426180  +
mov dword ptr [esp+8] 8 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_4296E0  +
mov ecx esi +
call sub_42D9D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 24h +
test eax eax +
jz loc_424B59  +
test edx edx +
mov ebx edx +
jz loc_424B75  +
mov [esp+28h+var_24] 22h +
mov [esp+28h+var_28] eax +
call sub_426340  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_424A9C  +
jmp loc_424AC2  +
cmp cl 22h +
jz loc_424B10  +
cmp cl 5Ch +
nop   +
jnz loc_424AF0  +
mov [esp+28h+var_24] offset asc_4C73A2 +
mov [esp+28h+var_28] esi +
call sub_4267B0  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_424AC2  +
cmp cl 0Ah +
jz loc_424AD8  +
jg loc_424A72  +
cmp cl 9 +
jnz loc_424AF0  +
add ebx 1 +
mov [esp+28h+var_24] offset aT +
mov [esp+28h+var_28] esi +
call sub_4267B0  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_424A9C  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 22h +
call sub_426340  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+28h+var_24] offset aN +
mov [esp+28h+var_28] esi +
call sub_4267B0  +
jmp loc_424A92  +
movzx eax cl +
movsx edx cl +
test byte ptr ds:word_4D0720[eax+eax] 10h +
jz loc_424B25  +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] esi +
call sub_426340  +
jmp loc_424A92  +
mov [esp+28h+var_24] offset asc_4C73AB +
mov [esp+28h+var_28] esi +
call sub_4267B0  +
jmp loc_424A92  +
mov eax ecx +
and eax 7 +
mov [esp+28h+var_18] eax +
mov eax ecx +
shr al 3 +
shr cl 6 +
and eax 7 +
movzx ecx cl +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] offset aOOO +
mov [esp+28h+var_28] esi +
call sub_427C70  +
jmp loc_424A92  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C1h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_424560  +
mov [esp+28h+var_20] offset aPrint_escaped_ +
mov [esp+28h+var_24] 2C2h +
mov [esp+28h+var_28] offset a____GccGccDi_0 +
call sub_424560  +
jmp sub_424BA0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [ebp+arg_4] +
mov [esp+88h+var_88] 0 +
mov esi [ebp+arg_0] +
mov ecx edi +
call sub_425DD0  +
mov edx [edi+1Ch] +
sub esp 4 +
cmp edx 0Ah +
mov [ebp+var_4C] eax +
jz loc_424C30  +
cmp edx 6 +
jz loc_424C30  +
mov eax edx +
cmp eax 8 +
jz loc_424E40  +
mov ecx [esi+9Ch] +
test ecx ecx +
jle loc_424C54  +
cmp eax 0Dh +
jz loc_424BEF  +
cmp eax 3 +
jnz loc_424BF4  +
cmp ecx 1 +
jz loc_424C44  +
cmp ecx 2 +
jle loc_42526D  +
mov eax ds:_iob +
mov [esp+88h+var_84] offset aInternalCompil +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_4244D0  +
mov [esp+88h+var_84] 3 +
mov [esp+88h+var_88] esi +
call sub_424590  +
call abort  +
lea esi [esi+0] +
cmp byte ptr [esi+6Dh] 0 +
jz loc_424E60  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
call sub_427CF0  +
mov edx [ebp+var_50] +
cmp byte ptr [esi+3Ch] 0 +
jz loc_424C64  +
cmp dword ptr [edi+1Ch] 6 +
jz loc_424EB8  +
mov eax [edi+20h] +
test eax eax +
jnz loc_424D91  +
mov eax [edi+1Ch] +
cmp eax 8 +
jz loc_424E30  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] esi +
mov [ebp+var_4C] edx +
call sub_424500  +
mov eax [edi+1Ch] +
add dword ptr [esi+9Ch] 1 +
mov edx [ebp+var_4C] +
cmp eax 0Dh +
jnz loc_4251D1  +
mov ebx [esi+14h] +
test ebx ebx +
jle loc_424EC4  +
cmp byte ptr [esi+64h] 0 +
jz loc_4251E5  +
mov ecx [esi+80h] +
test ecx ecx +
jz loc_424CDE  +
mov eax [edi] +
mov ebx [edi+4] +
mov [ebp+var_4C] edx +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ebx +
call ecx  +
mov eax [edi+1Ch] +
mov edx [ebp+var_4C] +
cmp eax 4 +
jnz loc_424CEC  +
cmp edx 6 +
jz loc_4251B4  +
add dword ptr [esi+eax*4+4] 1 +
mov ebx [edi] +
cmp byte ptr [esi+63h] 0 +
mov [ebp+var_54] ebx +
jnz loc_424ED4  +
lea eax [edi+18h] +
mov [edi+0Ch] eax +
mov eax [esi] +
mov dword ptr [edi+18h] 0 +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] eax +
call sub_426800  +
mov eax [esi+74h] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_427B30  +
mov eax [esi+7Ch] +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] esi +
call eax  +
cmp byte ptr [esi+0A3h] 0 +
jnz loc_424FE0  +
mov eax [edi+1Ch] +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call sub_424590  +
mov ecx [esi+0A4h] +
mov eax [ebp+var_54] +
mov dword ptr [edi+18h] 0 +
test ecx ecx +
mov [edi] eax +
jz loc_424D7D  +
mov eax [edi+14h] +
mov [esp+88h+var_88] eax +
call sub_42B4D0  +
sub esp 4 +
sub dword ptr [esi+9Ch] 1 +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esi+68h] +
jz loc_424C6F  +
mov ebx [esi+88h] +
mov ecx [esi+84h] +
mov [ebp+var_50] edx +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ebx +
call ecx  +
test eax eax +
jz loc_424C3A  +
mov ebx [esi+4Ch] +
mov edx [ebp+var_50] +
test ebx ebx +
jle loc_425196  +
sub ebx 1 +
mov [ebp+arg_4] edi +
jmp loc_424DF0  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4251C5  +
mov edx [ebp+arg_4] +
cmp [edx+20h] ecx +
jz loc_4251C5  +
sub ebx 1 +
js loc_425190  +
mov ecx [esi+48h] +
lea eax [ebx+ebx*2] +
lea edi ds:0[eax*4] +
mov edx [ebp+var_4C] +
mov eax [ecx+eax*4] +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42CD70  +
test eax eax +
js loc_424DE7  +
add edi [esi+48h] +
mov eax [edi+8] +
cmp eax 0Fh +
jnz loc_424DD0  +
mov ebx [edi+4] +
jmp loc_424DE7  +
add dword ptr [esi+9Ch] 1 +
jmp loc_424CEC  +
cmp byte ptr [esi+0A0h] 0 +
jnz loc_424C3A  +
mov ecx [esi+9Ch] +
test ecx ecx +
jg loc_424BE5  +
jmp loc_424C54  +
mov eax [ebp+var_4C] +
mov [ebp+var_50] edx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42CA10  +
mov edx [ebp+var_50] +
test eax eax +
jz loc_424E88  +
cmp byte ptr [esi+6Eh] 0 +
jz loc_424C3A  +
mov eax [edi+1Ch] +
cmp eax 0Ah +
jnz loc_424BD2  +
cmp byte ptr [esi+66h] 1 +
mov ecx [esi+9Ch] +
sbb edx edx +
and edx 2 +
add edx 4 +
test ecx ecx +
mov [edi+1Ch] edx +
mov eax edx +
jg loc_424BE5  +
jmp loc_424C54  +
mov dword ptr [edi+1Ch] 4 +
jmp loc_424C64  +
mov ecx [esi+18h] +
test ecx ecx +
jg loc_424CAF  +
jmp loc_424CB9  +
mov ebx [edi+20h] +
mov ecx [esi+8Ch] +
mov [esp+88h+var_7C] eax +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] esi +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_424D00  +
mov eax [edi+1Ch] +
mov edx ds:dword_4C7660[eax*4] +
mov [esp+88h+var_88] edx +
mov [ebp+var_4C] edx +
call strlen  +
mov edx [ebp+var_4C] +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_80] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_42A1B0  +
mov [ebp+var_4C] eax +
mov eax [esi] +
movzx eax byte ptr [eax+27h] +
mov [esp+88h+var_88] eax +
call sub_42A220  +
mov edx [ebp+var_4C] +
mov ecx eax +
mov eax [edi] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_4C7428 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 4C742Ah +
mov [esp+88h+var_84] 4C742Ch +
mov [esp+88h+var_88] eax +
mov [ebp+var_50] ecx +
call sub_452FE0  +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov ecx [ebp+var_50] +
sub esp eax +
mov eax [edi] +
lea edx [esp+88h+var_59] +
and edx 0FFFFFFF0h +
mov ds:dword_4DA374 edx +
mov edx [ebp+var_4C] +
mov [esp+88h+var_6C] 0 +
mov [esp+88h+var_70] offset asc_4C7428 +
mov [esp+88h+var_74] ecx +
mov [esp+88h+var_78] ebx +
mov [esp+88h+var_7C] edx +
mov [esp+88h+var_80] 4C742Ah +
mov [esp+88h+var_84] 4C742Ch +
mov [esp+88h+var_88] eax +
call sub_453060  +
mov [edi] eax +
mov [esp+88h+var_88] ebx +
call free  +
jmp loc_424D00  +
mov eax [edi+14h] +
mov [ebp+var_50] eax +
mov eax [esi] +
test eax eax +
mov ebx eax +
jz loc_425251  +
mov eax [ebp+var_50] +
test eax eax +
jz loc_425235  +
mov eax [eax+44h] +
test eax eax +
jz loc_425114  +
mov eax [ebp+var_50] +
mov [ebp+arg_0] esi +
mov esi ebx +
mov dword ptr [ebp-5Ch] 0FFFFFFF8h +
mov [ebp+var_4C] 0 +
add eax 44h +
mov [ebp+var_60] eax +
mov [ebp+arg_4] edi +
cmp [ebp+var_4C] 1 +
jle loc_425180  +
mov ebx [ebp+var_50] +
mov eax [ebp-5Ch] +
add eax [ebx+54h] +
mov ebx [eax] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [esp+88h+var_84] eax +
lea eax [ebp+var_40] +
mov [esp+88h+var_88] eax +
call sub_422190  +
mov eax [ebp+var_3C] +
mov [esp+88h+var_84] offset aFixIt +
mov edi [ebp+var_38] +
mov [esp+88h+var_88] esi +
mov [ebp+var_59+1] eax +
call sub_4267B0  +
mov edx [ebp+var_40] +
mov eax esi +
call sub_424A40  +
mov eax [ebx] +
lea ecx [ebp+var_44] +
mov eax [eax+14h] +
mov [esp+88h+var_88] ecx +
mov ecx ebx +
call eax  +
sub esp 4 +
test al al +
jz loc_425121  +
mov eax [ebp+var_44] +
mov [esp+8Ch+var_88] eax +
lea eax [ebp+var_2C] +
mov [esp+8Ch+var_8C] eax +
call sub_422190  +
mov eax [ebp+var_24] +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_8C] esi +
add eax 1 +
mov [esp+8Ch+var_78] eax +
mov eax [ebp+var_28] +
mov [esp+8Ch+var_7C] eax +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_84] eax +
call sub_427C70  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jz loc_42514F  +
cmp eax 1 +
jnz loc_425160  +
mov edx [ebx+0Ch] +
mov eax esi +
call sub_424A40  +
mov [esp+8Ch+var_8C] esi +
call sub_4262F0  +
mov eax [ebp+var_50] +
add [ebp+var_4C] 1 +
mov ebx [ebp+var_4C] +
add dword ptr [ebp-5Ch] 4 +
cmp ebx [eax+44h] +
jb loc_425027  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov eax [esi] +
mov ebx eax +
mov [esp+8Ch+var_8C] ebx +
call sub_425FE0  +
jmp loc_424D4A  +
mov eax [ebp+var_59+1] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_88] offset aIIII +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] esi +
call sub_427C70  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_4250D8  +
mov edx [ebx+8] +
mov eax esi +
call sub_424A40  +
jmp loc_4250EB  +
mov [esp+8Ch+var_84] offset aPrint_parseabl +
mov [esp+8Ch+var_88] 31Bh +
mov [esp+8Ch+var_8C] offset a____GccGccDi_0 +
call sub_424560  +
lea esi [esi+0] +
mov eax [ebp+var_60] +
mov ebx [ebp+var_4C] +
lea eax [eax+ebx*4+4] +
jmp loc_42503A  +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
mov ecx [edi+20h] +
mov eax [esi+44h] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_4251C0  +
mov [edi+1Ch] eax +
cmp eax 1 +
jnz loc_424C72  +
jmp loc_424C3A  +
add dword ptr [esi+34h] 1 +
jmp loc_424CF1  +
mov eax [edi+1Ch] +
jmp loc_4251A6  +
test eax eax +
mov edx [ebp+var_50] +
mov edi [ebp+arg_4] +
jnz loc_4251A3  +
jmp loc_425196  +
cmp eax 3 +
jz loc_424CA4  +
lea esi [esi+0] +
jmp loc_424CDE  +
mov ecx edi +
mov [esp+88h+var_88] 0 +
call sub_425DD0  +
push edx  +
lea edx [ebp+var_2C] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edx +
call sub_422190  +
mov eax [ebp+var_28] +
mov [esp+88h+var_84] offset aSDConfusedByEa +
mov [esp+88h+var_7C] eax +
mov eax [ebp+var_2C] +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call sub_4244D0  +
mov [esp+88h+var_88] 4 +
call exit  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EFh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424560  +
mov [esp+88h+var_80] offset aPrint_parseabl +
mov [esp+88h+var_84] 2EEh +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424560  +
mov eax [esi] +
mov [esp+88h+var_88] eax +
call sub_427CF0  +
jmp loc_424BFD  +
***
sub esp 54h +
mov ebx [esp+54h+arg_10] +
cmp ebx 0Bh +
jz loc_4252E0  +
mov eax [esp+54h+arg_0] +
lea esi [esp+54h+var_28] +
mov [esp+54h+var_44] ebx +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_4247A0  +
cmp ebx 0Ah +
jnz loc_425327  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_8] eax +
mov eax off_483600 +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
call sub_424BA0  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax off_483600 +
lea esi [esp+54h+var_28] +
cmp byte ptr [eax+67h] 1 +
mov [esp+54h+var_54] esi +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 6 +
mov [esp+54h+var_44] eax +
mov eax [esp+54h+arg_0] +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+arg_C] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+arg_8] +
mov [esp+54h+var_50] eax +
call sub_4247A0  +
mov eax off_483600 +
mov edx [eax+68h] +
mov [esp+54h+var_8] edx +
jmp loc_4252C8  +
cmp ebx 6 +
jz loc_4252BB  +
jmp loc_4252C3  +
***
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 8 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_425280  +
mov ecx ebx +
call sub_42D9D0  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_425280  +
add esp 3Ch +
retn   +
***
push esi  +
push ebx  +
lea eax [ebp+arg_8] +
add esp 0FFFFFF80h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 6 +
mov [esp+88h+var_80] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_84] eax +
call sub_425280  +
mov ecx ebx +
mov esi eax +
call sub_42D9D0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
lea eax [ebp+arg_C] +
add esp 0FFFFFF80h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_8] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 6 +
mov [esp+88h+var_80] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_84] eax +
call sub_425280  +
mov ecx ebx +
mov esi eax +
call sub_42D9D0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_425510  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 6 +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_425280  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+14h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42DCF0  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+10h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
call sub_425280  +
mov ecx ebx +
mov esi eax +
call sub_42D9D0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
jmp loc_4255C0  +
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov dword ptr [esp+10h] 0Ah +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_425280  +
add esp 3Ch +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
lea eax [ebp+10h] +
add esp 0FFFFFF80h +
mov [ebp-68h] eax +
mov eax [ebp+8] +
lea ebx [ebp-64h] +
mov ecx ebx +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42DCF0  +
lea eax [ebp-68h] +
sub esp 8 +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
call sub_425280  +
mov ecx ebx +
mov esi eax +
call sub_42D9D0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 0Bh +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_425280  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
lea eax [ebp+arg_8] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_4] +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_78] 4 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_80] eax +
call sub_425280  +
mov ecx ebx +
call sub_42D9D0  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
sub esp 3Ch +
lea eax [esp+48h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_425280  +
add esp 3Ch +
retn   +
***
lea eax [ebp+arg_4] +
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 3 +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_425280  +
mov [esp+88h+var_80] offset aInternal_error +
mov [esp+88h+var_84] 576h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424560  +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+arg_0] +
lea ebx [ebp+var_74] +
mov esi [ebp+arg_18] +
mov ecx ebx +
lea edi [ebp+var_98] +
mov [esp+144h+var_140] eax +
mov eax ds:dword_4D9184 +
mov [esp+144h+var_144] eax +
call sub_42DCF0  +
mov eax [ebp+arg_8] +
sub esp 8 +
mov [esp+144h+var_13C] eax +
mov eax [ebp+arg_10] +
mov [esp+144h+var_140] eax +
mov eax [ebp+arg_C] +
mov [esp+144h+var_144] eax +
call sub_42B6E0  +
mov edx [ebp+arg_14] +
mov [esp+144h+var_134] esi +
mov [esp+144h+var_138] ebx +
mov [esp+144h+var_144] edi +
mov [esp+144h+var_13C] edx +
mov [esp+144h+var_140] eax +
call sub_424740  +
cmp esi 6 +
jnz loc_4258F0  +
mov eax [ebp+arg_4] +
mov [ebp+var_78] eax +
mov eax off_483600 +
mov [esp+144h+var_140] edi +
mov [esp+144h+var_144] eax +
call sub_424BA0  +
mov ecx ebx +
mov esi eax +
call sub_42D9D0  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 8 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_425880  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+54h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+18h] 6 +
mov [esp+10h] eax +
mov eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+48h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_425880  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+50h] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+14h] eax +
mov eax [esp+4Ch] +
mov dword ptr [esp+18h] 4 +
mov dword ptr [esp+4] 0FFFFFFFFh +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call loc_425880  +
add esp 3Ch +
retn   +
***
push ebx  +
sub esp 58h +
lea eax [esp+74h] +
mov [esp+28h] eax +
mov eax [esp+68h] +
lea ebx [esp+2Ch] +
mov [esp+8] eax +
mov eax [esp+70h] +
mov [esp+4] eax +
mov eax [esp+6Ch] +
mov [esp] eax +
call sub_42B6E0  +
mov edx [esp+60h] +
mov [esp] ebx +
mov dword ptr [esp+10h] 6 +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_424740  +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp+4Ch] eax +
mov eax off_483600 +
mov [esp] eax +
call sub_424BA0  +
add esp 58h +
pop ebx  +
retn   +
***
lea eax [ebp+arg_8] +
lea eax [ebp+arg_4] +
push ebx  +
sub esp 84h +
mov [ebp+var_68] eax +
mov eax ds:dword_4D9188 +
lea ebx [ebp+var_64] +
mov ecx ebx +
mov [esp+88h+var_84] eax +
mov eax ds:dword_4D9184 +
mov [esp+88h+var_88] eax +
call sub_42DCF0  +
lea eax [ebp+var_68] +
sub esp 8 +
mov [esp+88h+var_7C] eax +
mov eax [ebp+arg_0] +
mov [esp+88h+var_78] 0Dh +
mov [esp+88h+var_84] 0FFFFFFFFh +
mov [esp+88h+var_88] ebx +
mov [esp+88h+var_80] eax +
call sub_425280  +
mov [esp+88h+var_80] offset aInternal_err_0 +
mov [esp+88h+var_84] 585h +
mov [esp+88h+var_88] offset a____GccGccDi_0 +
call sub_424560  +
mov dword ptr [ecx] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [ecx] +
test eax eax +
jnz loc_425B82  +
jmp loc_425B92  +
mov eax ebx +
mov ebx [eax] +
mov [esp] eax +
call free  +
test ebx ebx +
mov [esi] ebx +
jnz loc_425B80  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
cmp eax 10000h +
jz loc_425BB4  +
mov [esp+4] eax +
jmp sub_452ED0  +
***
mov eax ds:dword_4D9280 +
test eax eax +
jz loc_425BC6  +
mov edx [eax] +
mov ds:dword_4D9280 edx +
retn   +
***
mov dword ptr [esp+4] 10000h +
jmp sub_452ED0  +
***
mov eax [esp+4] +
mov edx [eax] +
sub edx eax +
cmp edx 10000h +
jz loc_425C00  +
mov [esp+4] eax +
jmp free  +
***
mov edx ds:dword_4D9280 +
mov [eax] edx +
mov ds:dword_4D9280 eax +
retn   +
***
push edi  +
mov ebx eax +
sub esp 14h +
mov esi [eax+1Ch] +
test esi esi +
jle loc_425D6C  +
cmp dword ptr [eax+18h] 1 +
jbe loc_425D6C  +
mov eax [eax+8] +
test eax eax +
jz loc_425D81  +
mov [esp+14h+var_14] eax +
call strlen  +
mov edx esi +
sub edx eax +
cmp edx 1Fh +
jle loc_425D75  +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 20h +
mov [ebx+10h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_425D63  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ecx+10h] +
movzx eax byte ptr [ebp+10h] +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+8] eax +
mov eax [ebp+8] +
mov [esp+4] eax +
mov eax ds:dword_4D9184 +
mov [esp] eax +
call sub_42DD60  +
sub esp 10h +
leave   +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
mov ebx ecx +
mov edi ebx +
mov ecx 0Bh +
sub esp 20h +
stos   +
lea esi [ebx+2Ch] +
mov edi esi +
lea edx [ebx+0E8h] +
mov cl 0Bh +
stos   +
mov eax ds:_iob +
mov [ebx+58h] ebx +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+64h] 0 +
add eax 40h +
mov [ebx+60h] eax +
lea eax [ebx+68h] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_425E31  +
mov [esp+28h+var_28] ebx +
mov byte ptr [ebx+0E8h] 1 +
mov [esp+28h+var_18] offset loc_425BE0 +
mov [esp+28h+var_1C] offset loc_425BA0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_459280  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_18] offset loc_425BE0 +
mov [esp+28h+var_1C] offset loc_425BA0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_459280  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 18h +
lea eax [ecx+2Ch] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] 0 +
call sub_4593F0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 0 +
call sub_4593F0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5980 +
mov ecx [ecx+4] +
call sub_425EA0  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
call sub_425ED0  +
mov [esp+18h+var_18] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ebx [esp+18h+arg_0] +
mov edx [ebx+4] +
mov eax [edx+58h] +
mov ecx [eax+8] +
cmp ecx [eax+4] +
jbe loc_425F4B  +
cmp ecx [eax+10h] +
jb loc_425F66  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call sub_4593F0  +
mov edx [ebx+4] +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [eax+0Ch] ecx +
mov dword ptr [edx+64h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+4] +
mov ebx [edi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_425FC8  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [edi+58h] +
mov edx [esi+4] +
mov eax [eax+8] +
mov edx [edx+60h] +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_C] edx +
call fputs  +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_425F30  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] ebx +
call sub_4592E0  +
mov eax [ebx+0Ch] +
jmp loc_425F98  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+4] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp byte ptr [eax+0E8h] 0 +
jnz loc_426004  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call sub_425F80  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
mov [esp] ebx +
call sub_425F80  +
mov eax [ebx+4] +
mov eax [eax+60h] +
mov [esp+20h] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
movzx esi byte ptr [esp+34h] +
mov ebp [edi+4] +
mov ebx [ebp+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_426165  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [ebp+58h] +
mov ebp [eax+8] +
mov eax [edi+4] +
mov ebx [eax+60h] +
movzx eax byte ptr [ebp+0] +
test al al +
jnz loc_4260C5  +
jmp loc_426155  +
cmp al 20h +
jz loc_4260D8  +
cmp al 22h +
lea esi [esi+0] +
jz loc_4260E2  +
cmp al 0Ah +
jz loc_4260F4  +
mov [esp+4] ebx +
movsx eax byte ptr [ebp+0] +
add ebp 1 +
mov [esp] eax +
call fputc  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_426155  +
cmp al 3Ch +
jz loc_4260D8  +
jle loc_426094  +
cmp al 5Ch +
lea esi [esi+0] +
jz loc_426126  +
jg loc_426148  +
cmp al 3Eh +
jnz loc_4260A6  +
mov eax esi +
test al al +
lea esi [esi+0] +
jz loc_4260A6  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_4260A6  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_4C76BD +
call fwrite  +
mov [esp+4] ebx +
mov dword ptr [esp] 5Ch +
call fputc  +
jmp loc_4260A6  +
***
cmp byte ptr [ebp+1] 0 +
jnz loc_4260E2  +
mov dword ptr [esp+8] offset aPp_write_text_ +
mov dword ptr [esp+4] 0BEh +
mov dword ptr [esp] offset a____GccGccPret +
call sub_424560  +
sub eax 7Bh +
cmp al 2 +
ja loc_4260A6  +
jmp loc_4260D8  +
***
mov [esp+30h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425F30  +
***
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_4592E0  +
mov eax [ebx+0Ch] +
jmp loc_426072  +
***
mov ebx [esp+8+arg_0] +
mov eax [esp+8+arg_4] +
mov [ebx+8] eax +
mov eax ebx +
call sub_425D40  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_4261CE  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov dword ptr [ecx] offset off_4D5980 +
mov [esp+14h+var_10] 0ECh +
mov [esp+14h+var_14] 1 +
call sub_452F00  +
test eax eax +
mov esi eax +
jz loc_42620E  +
mov ecx eax +
call sub_425DF0  +
mov eax [esp+14h+arg_4] +
mov [ebx+4] esi +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov [ebx+1Ch] eax +
mov eax [esp+14h+arg_0] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax ebx +
mov byte ptr [ebx+24h] 0 +
mov byte ptr [ebx+25h] 0 +
mov byte ptr [ebx+26h] 1 +
mov byte ptr [ebx+27h] 0 +
call sub_425D40  +
mov byte ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov esi [eax+4] +
mov ebx [esi+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_4262A0  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov eax [esi+58h] +
mov eax [eax+8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_4592E0  +
mov eax [ebx+0Ch] +
jmp loc_426287  +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov edx [eax+58h] +
mov eax [edx+0Ch] +
cmp [edx+8] eax +
jz loc_4262D6  +
sub eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax [eax+10h] +
sub eax [edx+64h] +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+4] +
mov ebx [eax+58h] +
mov eax [ebx+0Ch] +
cmp [ebx+10h] eax +
jz loc_426324  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0Ah +
mov eax [esi+4] +
mov byte ptr [esi+25h] 0 +
mov dword ptr [eax+64h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_4592E0  +
mov eax [ebx+0Ch] +
jmp loc_426307  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+1Ch] +
mov edx [esi+4] +
test eax eax +
jle loc_426362  +
mov eax [esi+10h] +
sub eax [edx+64h] +
test eax eax +
jle loc_426383  +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jz loc_4263A6  +
lea edx [eax+1] +
mov [edi+0Ch] edx +
mov [eax] bl +
mov eax [esi+4] +
add dword ptr [eax+64h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] esi +
call sub_4262F0  +
movzx eax bl +
test byte ptr ds:word_4D0720[eax+eax] 40h +
jnz loc_42637C  +
mov edx [esi+4] +
mov edi [edx+58h] +
mov eax [edi+0Ch] +
cmp [edi+10h] eax +
jnz loc_42636D  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edi +
call sub_4592E0  +
mov eax [edi+0Ch] +
jmp loc_42636D  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+20h] +
mov esi [edi+14h] +
test esi esi +
jle loc_4263EA  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] edi +
call sub_426340  +
cmp ebx esi +
jnz loc_4263D3  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_426400  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [edi+8] +
test esi esi +
jz loc_426484  +
mov eax [edi+18h] +
test eax eax +
jz loc_426490  +
cmp eax 2 +
jnz loc_426484  +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx [edi+4] +
mov edx [ebx+58h] +
mov ebp eax +
mov ecx [edx+0Ch] +
mov eax [edx+10h] +
sub eax ecx +
cmp ebp eax +
ja loc_4264D0  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_10] edx +
call memcpy  +
mov edx [esp+1Ch+var_10] +
add [edx+0Ch] ebp +
xor edx edx +
test ebp ebp +
jg loc_42646C  +
jmp loc_426480  +
add edx 1 +
add dword ptr [ebx+64h] 1 +
cmp ebp edx +
jz loc_426480  +
cmp byte ptr [esi+edx] 0Ah +
jnz loc_426461  +
add edx 1 +
cmp ebp edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_42646C  +
mov byte ptr [edi+24h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+24h] 0 +
jz loc_4264C0  +
mov esi [edi+14h] +
test esi esi +
jle loc_426484  +
xor ebx ebx +
nop   +
mov [esp+1Ch+var_18] 20h +
add ebx 1 +
mov [esp+1Ch+var_1C] edi +
call sub_426340  +
cmp ebx esi +
jnz loc_4264A0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [edi+14h] 3 +
jmp loc_42641E  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_10] edx +
call sub_4592E0  +
mov edx [esp+1Ch+var_10] +
mov ecx [edx+0Ch] +
jmp loc_42643E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [ebp+4] +
mov edx [ebx+64h] +
test edx edx +
jz loc_426566  +
mov ebp [ebx+58h] +
sub edi esi +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
sub eax edx +
cmp edi eax +
ja loc_426594  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] esi +
call memcpy  +
mov eax esi +
add [ebp+0Ch] edi +
test edi edi +
lea edx [esi+edi] +
jg loc_42654B  +
jmp loc_42655E  +
add eax 1 +
add dword ptr [ebx+64h] 1 +
cmp eax edx +
jz loc_42655E  +
cmp byte ptr [eax] 0Ah +
jnz loc_426540  +
add eax 1 +
cmp eax edx +
mov dword ptr [ebx+64h] 0 +
jnz loc_42654B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] ebp +
call sub_426400  +
mov eax [ebp+1Ch] +
test eax eax +
jle loc_42658C  +
cmp esi edi +
jnz loc_426587  +
jmp loc_42658C  +
add esi 1 +
cmp edi esi +
jz loc_42658C  +
cmp byte ptr [esi] 20h +
jz loc_426580  +
mov ebx [ebp+4] +
jmp loc_42650D  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebp +
call sub_4592E0  +
mov edx [ebp+0Ch] +
jmp loc_42651E  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1Ch] +
cmp edx ecx +
mov [esp+28h+var_1C] eax +
jz loc_426640  +
mov ebx edi +
lea esi [esi+0] +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 1 +
jnz loc_4265EB  +
cmp al 0Ah +
jz loc_4265EB  +
add ebx 1 +
cmp esi ebx +
jnz loc_4265D0  +
mov eax [esp+28h+var_1C] +
test eax eax +
jle loc_42660C  +
mov ecx [ebp+4] +
mov edx ebx +
mov eax [ebp+10h] +
sub edx edi +
sub eax [ecx+64h] +
cmp edx eax +
jl loc_42660C  +
mov [esp+28h+var_28] ebp +
call sub_4262F0  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
call sub_4264F0  +
cmp ebx esi +
jz loc_426640  +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 1 +
jnz loc_426648  +
cmp al 0Ah +
jz loc_426669  +
cmp esi ebx +
jz loc_426640  +
mov edi ebx +
jmp loc_4265C8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 20h +
mov [esp+28h+var_28] ebp +
call sub_426340  +
lea edx [ebx+1] +
cmp esi edx +
jz loc_426640  +
movzx eax byte ptr [ebx+1] +
mov ebx edx +
cmp al 0Ah +
jnz loc_426634  +
mov [esp+28h+var_28] ebp +
add ebx 1 +
call sub_4262F0  +
jmp loc_426634  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
cmp ecx 0FFFFFFFFh +
mov [esp+44h+var_2C] edx +
mov [esp+44h+var_28] ecx +
jz loc_426795  +
mov esi [esp+44h+var_28] +
mov eax [esp+44h+var_2C] +
test esi esi +
jz loc_4267A6  +
lea ebx [eax+1] +
mov [esp+44h+var_30] eax +
lea ebp [esp+44h+var_1F] +
jmp loc_4266CC  +
mov edx ebp +
mov eax edi +
call sub_4265B0  +
mov [esp+44h+var_30] ebx +
add ebx 1 +
sub esi 1 +
jz loc_426732  +
movzx eax byte ptr [ebx-1] +
lea ecx [ebx-1] +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 10h +
jnz loc_4266C4  +
cmp ecx [esp+44h+var_30] +
ja loc_426717  +
mov [esp+44h+var_3C] eax +
mov [esp+44h+var_40] offset aX02x +
mov [esp+44h+var_44] ebp +
call sub_47D630  +
mov edx [edi+1Ch] +
test edx edx +
lea ecx [ebp+eax+0] +
jg loc_4266B7  +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
call sub_4264F0  +
jmp loc_4266C0  +
mov eax [edi+1Ch] +
lea ecx [ebx-2] +
test eax eax +
jle loc_426758  +
mov edx [esp+44h+var_30] +
mov eax edi +
call sub_4265B0  +
movzx eax byte ptr [ebx-1] +
jmp loc_4266E6  +
mov eax [esp+44h+var_28] +
add [esp+44h+var_2C] eax +
mov eax [edi+1Ch] +
test eax eax +
jle loc_426775  +
mov ecx [esp+44h+var_2C] +
mov eax edi +
mov edx [esp+44h+var_30] +
call sub_4265B0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_4264F0  +
movzx eax byte ptr [ebx-1] +
jmp loc_4266E6  +
mov eax [esp+44h+var_2C] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_40] eax +
call sub_4264F0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_44] edx +
call strlen  +
mov [esp+44h+var_28] eax +
jmp loc_42669A  +
mov [esp+44h+var_30] eax +
jmp loc_42673A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea ecx [ebx+eax] +
mov eax [esi+1Ch] +
test eax eax +
jle loc_4267E0  +
add esp 14h +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
jmp sub_4265B0  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] ecx +
call sub_4264F0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edi [ebx+18h] +
mov esi [ebx+1Ch] +
mov dword ptr [ebx+18h] 1 +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ebx +
call sub_426800  +
mov [esp+10h+var_10] ebx +
call sub_427B30  +
mov [ebx+18h] edi +
mov [ebx+1Ch] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_24] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-30h+arg_50] eax +
lea eax [esp-30h+arg_44] +
mov [esp-30h+arg_4C] eax +
mov eax [esp-30h+arg_70] +
mov [esp-30h+arg_48] eax +
lea eax [esp-30h+arg_48] +
mov [esp-30h+arg_30] eax +
mov eax [esp-30h+arg_6C] +
mov [esp-30h+arg_2C] eax +
call sub_427BE0  +
add esp 3Ch +
retn   +
***
lea eax [esp+38h+arg_8] +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-34h+arg_2C] ebx +
mov [esp-34h+arg_50] eax +
lea eax [esp-34h+arg_44] +
mov [esp-34h+arg_4C] eax +
mov eax [esp-34h+arg_70] +
mov [esp-34h+arg_48] eax +
lea eax [esp-34h+arg_48] +
mov [esp-34h+arg_30] eax +
call sub_426800  +
mov [esp-34h+arg_2C] ebx +
call sub_427B30  +
add esp 38h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_427CE6  +
mov dword ptr [esp+4] 20h +
mov [esp] ebx +
call sub_426340  +
mov dword ptr [ebx+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_4262F0  +
mov [esp+18h+var_18] ebx +
call sub_425FE0  +
mov byte ptr [ebx+25h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
jmp loc_427D20  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esp+24h] +
add [esi+14h] eax +
mov [esp] esi +
call sub_4262F0  +
mov edi [esi+14h] +
test edi edi +
jle loc_427D59  +
mov dword ptr [esp+4] 20h +
add ebx 1 +
mov [esp] esi +
call sub_426340  +
cmp ebx edi +
jnz loc_427D42  +
mov byte ptr [esi+25h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movsx eax byte ptr [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_426340  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] 20h +
add esp 18h +
pop ebx  +
jmp sub_426340  +
***
push ebp  +
xor ebp ebp +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov eax [esp+50h] +
mov [esp] eax +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_427DE4  +
jmp loc_427E6F  +
mov edx [esp+2Ch] +
cmp edx 1Fh +
jbe loc_427DFB  +
sub edx 7Fh +
cmp edx 20h +
jbe loc_427DFB  +
cmp eax 1 +
cmovnz edi ebp +
add ebx eax +
cmp esi ebx +
jbe loc_427E60  +
mov eax [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add eax ebx +
call sub_425C10  +
test eax eax +
jnz loc_427DC7  +
lea eax ds:1[esi*4] +
mov [esp] eax +
call off_483608  +
mov ebx [esp+50h] +
add esi ebx +
mov edi eax +
mov ebp eax +
jmp loc_427E24  +
add ebx 1 +
add ebp 1 +
mov [ebp-1] al +
cmp ebx esi +
jz loc_427E4D  +
movzx eax byte ptr [ebx] +
lea edx [eax-20h] +
cmp dl 5Eh +
jbe loc_427E17  +
mov [esp] ebp +
add ebx 1 +
add ebp 4 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a03o_0 +
call sub_47D630  +
cmp ebx esi +
jnz loc_427E24  +
mov byte ptr [ebp+0] 0 +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
test al al +
jnz loc_427E6F  +
cmp ds:byte_4D9284 0 +
jz loc_427E80  +
mov eax [esp+50h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esi+esi*4] +
xor ebx ebx +
lea eax [eax+eax+1] +
mov [esp] eax +
call off_483608  +
mov [esp+1Ch] eax +
mov ebp eax +
jmp loc_427EAF  +
movzx eax byte ptr [edi] +
add ebx edx +
add ebp 1 +
mov [ebp-1] al +
cmp esi ebx +
jbe loc_427EF4  +
mov edi [esp+50h] +
mov edx esi +
sub edx ebx +
lea ecx [esp+2Ch] +
add edi ebx +
mov eax edi +
call sub_425C10  +
cmp eax 1 +
mov edx eax +
jz loc_427EA0  +
mov [esp+18h] eax +
mov eax [esp+2Ch] +
mov [esp] ebp +
add ebp 0Ah +
mov dword ptr [esp+4] offset aU08x +
mov [esp+8] eax +
call sub_47D630  +
mov edx [esp+18h] +
add ebx edx +
cmp esi ebx +
ja loc_427EAF  +
mov byte ptr [ebp+0] 0 +
mov eax [esp+1Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov ebx ecx +
push ebx  +
mov ebx ecx +
sub esp 14h +
lea ecx [ecx+20h] +
mov [esp+18h+var_18] 0FFFFFFFFh +
call sub_4281E0  +
mov eax [ebx+4] +
sub esp 4 +
mov [esp+18h+var_18] eax +
call sub_4262F0  +
mov ebx [ebp+var_4] +
leave   +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov eax [ebx] +
cmp eax esi +
jle loc_428332  +
jmp loc_42833F  +
mov eax [edi+4] +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] eax +
call sub_426340  +
mov eax [ebx] +
add eax 1 +
mov [ebx] eax +
cmp esi eax +
jg loc_428318  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 8  +
call sub_4282D0  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_428332  +
***
push edi  +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_0] 0 +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
jz loc_42A208  +
mov edx off_483620 +
test edx edx +
jz loc_42A208  +
mov ebx offset off_483620 +
jmp loc_42A1E9  +
add ebx 0Ch +
mov edx [ebx] +
test edx edx +
jz loc_42A210  +
movzx eax byte ptr [ebx+8] +
cmp eax edi +
jnz loc_42A1E0  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call memcmp  +
test eax eax +
jnz loc_42A1E0  +
mov eax [ebx+4] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax offset unk_4C7A20 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp [esp+arg_0] 0 +
mov edx offset unk_4C7A20 +
mov eax offset aMK +
cmovz eax edx +
retn   +
***
retn   +
***
mov eax [esp+4] +
sub eax [esp+8] +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_42A284  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call sub_466B00  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx ecx +
sub esp 14h +
mov eax [esp+14h+arg_0] +
lea esi [eax+eax+2] +
mov eax [ecx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_452F50  +
mov [ebx+0Ch] esi +
mov [ebx+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 4  +
***
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [esp+8] offset sub_42A260 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset strcmp +
mov byte ptr [ecx] 1 +
call sub_466A10  +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
mov eax [esp+2Ch+arg_4] +
jnz loc_42A302  +
add esp 2Ch +
retn 8  +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_18] al +
lea eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_10] eax +
mov eax [ecx+4] +
mov [esp+2Ch+var_28] offset sub_47FD20 +
mov [esp+2Ch+var_1C] edx +
lea edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] offset sub_47FC90 +
call sub_466EA0  +
add esp 2Ch +
retn 8  +
***
sub esp 1Ch +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_42A415  +
mov [esp+28h+var_28] ebx +
mov esi ecx +
call sub_42A340  +
sub esp 4 +
test eax eax +
jz loc_42A3C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 0Ch +
call loc_481090  +
mov [eax] ebx +
mov edi eax +
mov [esp+28h+var_20] offset sub_42AC80 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] offset loc_42A250 +
call sub_466A10  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov [edi+4] eax +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_466BF0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_20] offset aGet_or_insert_ +
mov [esp+28h+var_24] 169h +
mov [esp+28h+var_28] offset a____GccGccEdit +
call sub_424560  +
nop   +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_3C] offset sub_42AC80 +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_44] offset loc_42A250 +
mov [ecx] eax +
call sub_466A10  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx+4] eax +
add esp 18h +
pop ebx  +
retn 4  +
***
push esi  +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 9 +
mov ebx [ebp+arg_4] +
mov [esp+48h+var_44] offset aDiffHunk +
mov edi [ebp+arg_8] +
movzx eax byte ptr [eax+27h] +
sub edi ebx +
add edi 1 +
mov [esp+48h+var_48] eax +
call sub_42A1B0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] offset a@@IIII@@ +
mov [esp+48h+var_48] eax +
call sub_427C70  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A220  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
cmp [ebp+arg_8] ebx +
jl loc_42A785  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466D60  +
test eax eax +
jz loc_42A741  +
mov edx [eax+4] +
test edx edx +
jz loc_42A741  +
mov edi ebx +
jmp loc_42A59E  +
mov eax [eax+4] +
test eax eax +
jz loc_42A5B1  +
add edi 1 +
mov eax [esi+4] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] eax +
call sub_466D60  +
test eax eax +
jnz loc_42A594  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffDelete +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A1B0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
cmp edi ebx +
jle loc_42A6F0  +
mov [ebp+arg_4] ebx +
lea esi [esi+0] +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
call sub_421F90  +
mov ecx [ebp+var_1C] +
mov [esp+48h+var_44] 2Dh +
mov [esp+48h+var_3C] ecx +
mov ecx esi +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_42A480  +
sub esp 10h +
cmp ebx edi +
jnz loc_42A5F0  +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A220  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A1B0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov [ebp+var_2C] edi +
mov edi [ebp+arg_0] +
jmp loc_42A6BC  +
mov eax [eax+4] +
test eax eax +
jz loc_42A6CF  +
mov edx [eax+8] +
mov ecx esi +
add ebx 1 +
mov eax [eax+4] +
mov [esp+48h+var_44] 2Bh +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
call sub_42A480  +
sub esp 10h +
cmp ebx [ebp+var_2C] +
jz loc_42A547  +
mov eax [esi+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466D60  +
test eax eax +
jnz loc_42A686  +
mov [esp+48h+var_40] offset aPrint_diff_hun +
mov [esp+48h+var_44] 250h +
mov [esp+48h+var_48] offset a____GccGccEdit +
call sub_424560  +
nop   +
lea esi [esi+0] +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A220  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Bh +
mov [esp+48h+var_44] offset aDiffInsert +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A1B0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
jmp loc_42A547  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
add ebx 1 +
mov [esp+48h+var_48] eax +
call sub_421F90  +
mov edx [ebp+var_1C] +
mov ecx esi +
mov [esp+48h+var_44] 20h +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_42A480  +
sub esp 10h +
cmp [ebp+arg_8] ebx +
jge loc_42A56E  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
sub esp 1Ch +
mov eax [ecx+4] +
mov edx [esp+20h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_466D60  +
test eax eax +
jz loc_42A7B3  +
mov eax [eax+4] +
add esp 1Ch +
retn 4  +
***
xor eax eax +
jmp loc_42A7AD  +
***
push ebx  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 3Ch +
mov esi [ebp+arg_0] +
lea eax [ebp+var_1E+1] +
mov [esp+48h+var_48] eax +
mov [ebp+var_30] ecx +
call sub_42A7C0  +
sub esp 4 +
test eax eax +
mov [ebp+var_2C] eax +
jg loc_42A8A3  +
jmp loc_42A902  +
mov eax [eax+4] +
test eax eax +
jz loc_42A8B9  +
mov eax [eax+4] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] eax +
call sub_4267B0  +
cmp [ebp+var_2C] ebx +
jle loc_42A89B  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
call sub_426340  +
add ebx 1 +
cmp [ebp+var_2C] ebx +
jl loc_42A902  +
mov eax [ebp+var_30] +
mov eax [eax+4] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_466D60  +
test eax eax +
jnz loc_42A870  +
mov eax [ebp+var_30] +
lea ecx [ebp+var_1E+2] +
mov eax [eax] +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_421F90  +
test eax eax +
jz loc_42A92D  +
mov edx [ebp+var_1E+2] +
xor edi edi +
test edx edx +
jle loc_42A886  +
mov [ebp+var_34] ebx +
mov ebx edi +
mov edi eax +
movsx edx byte ptr [edi+ebx] +
add ebx 1 +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edx +
call sub_426340  +
cmp [ebp+var_1E+2] ebx +
jg loc_42A8E5  +
mov ebx [ebp+var_34] +
jmp loc_42A886  +
cmp byte ptr [ebp+var_1E+1] 0 +
mov eax 1 +
jnz loc_42A923  +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] esi +
mov [ebp+var_2C] eax +
call sub_426340  +
mov eax [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
cmp [ebp+arg_4] 0 +
jnz loc_42AA1C  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_466DC0  +
test eax eax +
jz loc_42AAAD  +
mov esi [eax+4] +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_42A7C0  +
sub esp 4 +
test esi esi +
mov [ebp+var_30] eax +
jz loc_42AA12  +
mov edx [esi] +
mov ecx 1 +
lea eax [edx-3] +
test eax eax +
cmovg ecx eax +
mov [ebp+var_2C] ecx +
jmp loc_42A9B7  +
mov eax [eax+4] +
test eax eax +
jz loc_42A9CA  +
mov edi [esi] +
mov edx [eax] +
lea ecx [edi+3] +
lea edi [edx-3] +
cmp ecx edi +
jl loc_42A9CF  +
mov esi eax +
mov eax [ebx+4] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_466E40  +
test eax eax +
jnz loc_42A9A0  +
mov eax [esi] +
lea ecx [eax+3] +
mov eax [ebp+var_30] +
cmp ecx eax +
cmovg ecx eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] ecx +
mov ecx ebx +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_42A4E0  +
mov edx [esi] +
mov eax [ebx+4] +
sub esp 0Ch +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call sub_466E40  +
test eax eax +
jz loc_42AA12  +
mov esi [eax+4] +
test esi esi +
jnz loc_42A986  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_40] 0Dh +
mov [esp+48h+var_44] offset aDiffFilename +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A1B0  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_5 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_427C70  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aS_6 +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_427C70  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax+27h] +
mov [esp+48h+var_48] eax +
call sub_42A220  +
mov [esp+48h+var_44] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_4267B0  +
mov eax [ebx+4] +
mov [esp+48h+var_48] eax +
call sub_466DC0  +
test eax eax +
jnz loc_42A968  +
lea eax [ebp+var_19] +
mov ecx ebx +
mov [esp+48h+var_48] eax +
call sub_42A7C0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebx  +
push ebx  +
sub esp 14h +
mov eax [ecx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+10h] +
test eax eax +
jz loc_42ABB4  +
mov edx [eax+4] +
test edx edx +
jz loc_42ABC0  +
xor edx edx +
xor ebx ebx +
jmp loc_42AB9B  +
cmp ebx [eax+4] +
jnb loc_42ABC0  +
mov ecx [eax+edx*4+8] +
test ecx ecx +
jz loc_42ABAB  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
add ebx 1 +
test eax eax +
mov edx ebx +
jnz loc_42AB96  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [eax+3] 0 +
js loc_42ABE0  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+10h] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [eax+4] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [ecx+4] +
mov ebx [ebp+arg_0] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] ebx +
call sub_466D60  +
test eax eax +
jz loc_42AC22  +
mov eax [eax+4] +
test eax eax +
jz loc_42AC22  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+28h+var_28] 14h +
call loc_481090  +
mov [esp+28h+var_24] ebx +
mov edi eax +
mov eax [esi] +
mov ecx edi +
mov [esp+28h+var_28] eax +
call sub_42AAD0  +
mov eax [edi+4] +
sub esp 8 +
test eax eax +
jz loc_42AC61  +
mov eax [esi+4] +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] eax +
call sub_466BF0  +
mov eax edi +
jmp loc_42AC18  +
mov ecx edi +
call sub_42AB70  +
mov [esp+28h+var_28] edi +
call sub_480FE0  +
xor eax eax +
jmp loc_42AC18  +
***
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_42ACA0  +
mov ecx ebx +
call sub_42AB70  +
mov [esp+8+arg_0] ebx +
add esp 8 +
pop ebx  +
jmp sub_480FE0  +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov edx [ecx+10h] +
mov eax [ebp+arg_0] +
test edx edx +
jz loc_42ACF3  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_42ACF3  +
xor ecx ecx +
xor ebx ebx +
jmp loc_42ACD6  +
cmp ebx [edx+4] +
jnb loc_42ACF3  +
mov ecx [edx+ecx*4+8] +
add ebx 1 +
mov edx [ecx] +
mov edx [edx+8] +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [esi+10h] +
mov ecx ebx +
sub esp 4 +
test edx edx +
jnz loc_42ACD1  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_466D60  +
test eax eax +
jz loc_42AD35  +
mov ecx [eax+4] +
mov eax [ebp+arg_4] +
test ecx ecx +
jz locret_42AD31  +
mov [esp+18h+var_18] eax +
call sub_42ACB0  +
sub esp 4 +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_42A340  +
mov ecx eax +
sub esp 4 +
mov eax [ebp+10h] +
test ecx ecx +
jz locret_42AD6F  +
mov [esp+4] eax +
mov eax [ebp+0Ch] +
mov [esp] eax +
call sub_42AD00  +
sub esp 8 +
leave   +
retn 0Ch  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_42ACB0  +
mov esi eax +
sub esp 4 +
sub esi 1 +
mov edi eax +
js loc_42AFAC  +
mov eax [ebx+8] +
cmp esi eax +
jg loc_42AEF1  +
mov edx [ebp+arg_8] +
add edx eax +
cmp edx [ebx+0Ch] +
mov [ebp+var_1C] edx +
jge loc_42AF00  +
mov edx [ebx+4] +
lea ecx [edx+esi] +
add eax edx +
cmp ecx eax +
ja loc_42AFC8  +
sub eax ecx +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_8] +
mov [esp+38h+var_34] ecx +
add eax esi +
add eax edx +
mov [esp+38h+var_38] eax +
call memmove  +
mov eax [ebp+arg_8] +
add esi [ebx+4] +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_4] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [ebp+var_1C] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_42AFE4  +
mov eax [ebx+4] +
mov ecx [ebp+var_1C] +
mov byte ptr [eax+ecx] 0 +
mov [esp+38h+var_38] 0Ch +
call loc_481090  +
mov [eax+4] edi +
mov edi [ebx+10h] +
mov esi eax +
mov dword ptr [eax] offset off_4D5908 +
mov eax [ebp+arg_8] +
test edi edi +
mov [esi+8] eax +
jz loc_42AE5C  +
mov edx [edi] +
and edx 7FFFFFFFh +
cmp edx [edi+4] +
jnz loc_42AED5  +
cmp byte ptr [edi+3] 0 +
js loc_42AF15  +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AFF2  +
mov edi [eax+4] +
lea edx [edi+1] +
mov [esp+38h+var_34] edx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41F4C0  +
mov ecx eax +
lea edi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_42AFFF  +
mov edx [eax+4] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_452F50  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov edi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [edi] +
and eax 7FFFFFFFh +
mov [edi+4] edx +
and ecx 80000000h +
or ecx eax +
mov [edi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [edi+3] cl +
jmp loc_42AED8  +
mov edx [edi+4] +
lea eax [edx+1] +
mov [edi+4] eax +
mov eax 1 +
mov [edi+edx*4+8] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov [esp+38h+var_38] edx +
mov ecx ebx +
call sub_42A290  +
mov eax [ebx+8] +
sub esp 4 +
jmp loc_42ADC2  +
mov dword ptr [ebx+10h] 0 +
lea eax [edx+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_452F50  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_42AFE9  +
lea ecx ds:0[edx*4] +
add eax 8 +
add edi 8 +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov edi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [edi+4] edx +
jmp loc_42AED8  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2E6h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
mov [esp+38h+var_30] offset aApply_insert +
mov [esp+38h+var_34] 2EFh +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
call sub_4826E0  +
mov edi eax +
xor edx edx +
jmp loc_42AED8  +
mov byte ptr [ebp+var_1C] 0 +
xor edx edx +
mov al 1 +
jmp loc_42AF23  +
xor edx edx +
jmp loc_42AE97  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_42ABF0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_42B048  +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42AD80  +
sub esp 0Ch +
leave   +
retn 10h  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_2C] +
mov edx [ebx+4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_422190  +
mov esi [ebp+var_24] +
test esi esi +
jnz loc_42B083  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov eax [ebp+var_2C] +
mov ecx edi +
mov [esp+48h+var_48] eax +
call sub_42A390  +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_42B077  +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_40] edx +
mov edx [ebp+var_28] +
mov [esp+48h+var_3C] ecx +
mov ecx eax +
mov [esp+48h+var_48] edx +
call sub_42B010  +
sub esp 10h +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_42ACB0  +
mov ecx ebx +
mov esi eax +
mov eax [ebp+arg_4] +
sub esp 4 +
mov [esp+38h+var_38] eax +
call sub_42ACB0  +
mov edx esi +
sub esp 4 +
sub edx 1 +
mov edi eax +
mov [ebp+var_1C] edx +
lea eax [eax-1] +
js loc_42B35B  +
test eax eax +
js loc_42B377  +
cmp esi edi +
jg loc_42B296  +
mov edx [ebx+8] +
cmp [ebp+var_1C] edx +
jge loc_42B296  +
cmp eax edx +
jge loc_42B296  +
mov ecx [ebp+arg_C] +
add ecx edx +
mov [ebp+var_20] ecx +
mov ecx eax +
sub ecx [ebp+var_1C] +
add ecx 1 +
sub [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
cmp ecx [ebx+0Ch] +
jge loc_42B2A2  +
mov ecx [ebx+4] +
lea eax [ecx+eax+1] +
add edx ecx +
cmp eax edx +
ja loc_42B398  +
sub edx eax +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_1C] +
add eax [ebp+arg_C] +
mov [esp+38h+var_30] edx +
add ecx eax +
mov [esp+38h+var_38] ecx +
call memmove  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_1C] +
add eax [ebx+4] +
mov [esp+38h+var_30] edx +
mov edx [ebp+arg_8] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call memcpy  +
mov eax [ebp+var_20] +
cmp eax [ebx+0Ch] +
mov [ebx+8] eax +
jge loc_42B393  +
mov edx [ebp+var_20] +
mov eax [ebx+4] +
mov byte ptr [eax+edx] 0 +
mov [esp+38h+var_38] 10h +
call loc_481090  +
mov [eax+8] edi +
not edi  +
mov edx eax +
mov [eax+4] esi +
add esi edi +
add esi [ebp+arg_C] +
mov dword ptr [eax] offset off_4D5968 +
mov [eax+0Ch] esi +
mov esi [ebx+10h] +
test esi esi +
jz loc_42B2C0  +
mov edi [esi] +
and edi 7FFFFFFFh +
cmp edi [esi+4] +
jnz loc_42B356  +
cmp byte ptr [esi+3] 0 +
jns loc_42B2C0  +
mov dword ptr [ebx+10h] 0 +
lea eax [edi+1] +
mov byte ptr [ebp+var_1C] 1 +
cmp eax 4 +
mov ecx 4 +
cmovnb ecx eax +
lea eax ds:8[ecx*4] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] 0 +
mov [ebp+var_24] edx +
mov [ebp+var_20] ecx +
call sub_452F50  +
mov ecx [ebp+var_20] +
and ecx 7FFFFFFFh +
mov edx ecx +
mov ecx [eax] +
mov [ebx+10h] eax +
mov dword ptr [eax+4] 0 +
and ecx 80000000h +
or ecx edx +
mov edx [ebp+var_24] +
mov [eax] ecx +
shr ecx 18h +
and ecx 7Fh +
cmp byte ptr [ebp+var_1C] 0 +
mov [eax+3] cl +
jz loc_42B3B4  +
add eax 8 +
add esi 8 +
lea ecx ds:0[edi*4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] edx +
call memcpy  +
mov esi [ebx+10h] +
mov edx [ebp+var_1C] +
mov [esi+4] edi +
jmp loc_42B33D  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+38h+var_38] ecx +
mov ecx ebx +
mov [ebp+var_24] eax +
call sub_42A290  +
mov edx [ebx+8] +
mov eax [ebp+var_24] +
sub esp 4 +
jmp loc_42B151  +
mov eax [ebx+10h] +
test eax eax +
jz loc_42B3C1  +
mov edi [eax+4] +
mov [ebp+var_1C] edx +
lea ecx [edi+1] +
mov [esp+38h+var_34] ecx +
mov eax [eax] +
and eax 7FFFFFFFh +
mov [esp+38h+var_38] eax +
call sub_41F4C0  +
mov edx [ebp+var_1C] +
mov ecx eax +
lea esi ds:8[eax*4] +
mov eax [ebx+10h] +
test eax eax +
jz loc_42B3BA  +
mov edi [eax+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edx +
call sub_452F50  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_1C] +
mov esi eax +
mov [ebx+10h] eax +
mov eax ecx +
mov ecx [esi] +
and eax 7FFFFFFFh +
mov [esi+4] edi +
and ecx 80000000h +
or ecx eax +
mov [esi] ecx +
shr ecx 18h +
and ecx 7Fh +
mov [esi+3] cl +
lea eax [edi+1] +
mov [esi+4] eax +
mov eax 1 +
mov [esi+edi*4+8] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov edi [esi+4] +
jmp loc_42B33D  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 318h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 319h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
call sub_4826E0  +
mov [esp+38h+var_30] offset aApply_replace +
mov [esp+38h+var_34] 329h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
mov esi eax +
xor edi edi +
jmp loc_42B33D  +
xor edi edi +
jmp loc_42B301  +
mov byte ptr [ebp+var_1C] 0 +
xor edi edi +
mov al 1 +
jmp loc_42B209  +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_42ABF0  +
mov ecx eax +
sub esp 4 +
xor eax eax +
test ecx ecx +
jz locret_42B40F  +
mov eax [ebp+arg_10] +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_C] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_8] +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42B0D0  +
sub esp 10h +
leave   +
retn 14h  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [ebp+arg_0] +
mov [ebp+var_54] ecx +
lea eax [ebp+var_40] +
mov ecx [ebx+4] +
mov edi [ebx+8] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ecx +
call sub_422190  +
mov eax [ebp+var_3C] +
mov [esp+68h+var_64] edi +
mov esi [ebp+var_40] +
mov [ebp+var_4C] eax +
mov eax [ebp+var_38] +
mov [ebp+var_50] eax +
lea eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call sub_422190  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_24] +
cmp eax esi +
jz loc_42B478  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov esi [ebp+var_28] +
cmp esi [ebp+var_4C] +
jnz loc_42B46C  +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_42B46C  +
test edx edx +
jz loc_42B46C  +
mov edi [ebp+var_54] +
mov [esp+68h+var_68] eax +
mov [ebp+var_4C] edx +
mov ecx edi +
call sub_42A390  +
mov edx [ebp+var_4C] +
sub esp 4 +
cmp byte ptr [edi] 0 +
jz loc_42B46C  +
mov ecx [ebx+0Ch] +
mov ebx [ebx+10h] +
mov [esp+68h+var_60] edx +
mov edx [ebp+var_50] +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] ecx +
mov ecx eax +
mov [esp+68h+var_58] ebx +
mov [esp+68h+var_64] edx +
call sub_42B3D0  +
sub esp 14h +
jmp loc_42B46E  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
cmp byte ptr [ecx] 0 +
jz loc_42B546  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+58h] 0 +
jnz loc_42B565  +
add eax 44h +
xor ebx ebx +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov edi 0FFFFFFF8h +
mov eax [eax+44h] +
test eax eax +
jz loc_42B546  +
mov [ebp+var_1C] ecx +
cmp ebx 1 +
jle loc_42B590  +
mov edx [ebp+arg_0] +
mov eax [edx+54h] +
add eax edi +
mov esi [eax] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
test eax eax +
jz loc_42B550  +
cmp eax 1 +
jnz loc_42B572  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_42B420  +
sub esp 4 +
test al al +
jz loc_42B562  +
mov eax [ebp+arg_0] +
add ebx 1 +
add edi 4 +
cmp ebx [eax+44h] +
jb loc_42B503  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov ecx [ebp+var_1C] +
mov [esp+38h+var_38] esi +
call sub_42B050  +
sub esp 4 +
test al al +
jnz loc_42B538  +
mov esi [ebp+var_1C] +
mov byte ptr [esi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov [esp+38h+var_30] offset aAdd_fixits +
mov [esp+38h+var_34] 0F3h +
mov [esp+38h+var_38] offset a____GccGccEdit +
call sub_424560  +
nop   +
mov eax [ebp+var_20] +
lea eax [eax+ebx*4+4] +
jmp loc_42B514  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp [ecx+0Ch] eax +
jle locret_42B5B0  +
leave   +
retn 4  +
***
leave   +
jmp sub_42A290  +
***
mov edx [ecx+4] +
mov byte ptr [edx+eax] 0 +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 40h +
lea ebx [ebp+var_30] +
mov ecx ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] 0 +
call sub_4261E0  +
mov ecx esi +
xor esi esi +
sub esp 8 +
mov [esp+48h+var_48] ebx +
call sub_42A840  +
sub esp 4 +
test al al +
jz loc_42B69B  +
mov [esp+48h+var_48] ebx +
call sub_426270  +
mov [esp+48h+var_48] eax +
call sub_452FA0  +
mov esi eax +
mov ecx ebx +
call sub_425ED0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp byte ptr [ecx] 0 +
jz locret_42B6D3  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov [esp] eax +
call sub_42A390  +
sub esp 4 +
mov ecx eax +
call sub_42B650  +
leave   +
retn 4  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_8] 1 +
cmovz eax [esp+arg_0] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h] +
mov [esp] eax +
call strlen  +
mov esi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_452ED0  +
mov [esp+8] esi +
mov dword ptr [esp+4] 20h +
mov ebx eax +
mov [esp] eax +
call memset  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_42B753  +
pop ebx  +
retn   +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jnz loc_42B751  +
mov ebx [edx+8] +
cmp [ecx+8] ebx +
jnz loc_42B751  +
mov eax [edx+0Ch] +
cmp [ecx+0Ch] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
jmp loc_42B780  +
mov edx [esp+8] +
mov eax [esp+4] +
mov edx [edx] +
add [eax] edx +
mov eax 1 +
retn   +
***
retn 10h  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
cmp edx 4 +
setz dl  +
jnz loc_42B7D8  +
mov eax [eax+18h] +
cmp [ebx+14h] eax +
jz loc_42B800  +
mov edx [ebx+10h] +
lea ecx [eax+eax*2] +
lea esi [edx+ecx*8] +
add ebx 18h +
jmp loc_42B7E8  +
mov eax [eax+8] +
cmp [ebx+4] eax +
jz loc_42B800  +
imul esi eax +
add esi [ebx] +
add ebx 8 +
add eax 1 +
mov [ebx] eax +
mov eax edi +
mov [esi+4] al +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi [ebx+34h] +
mov eax offset sub_452F50 +
test esi esi +
cmovz esi eax +
test dl dl +
mov eax [ebx+38h] +
jz loc_42B878  +
mov edx [ebx+14h] +
lea edx [edx+edx*2+180h] +
shl edx 4 +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [ebx+10h] +
shr edx 4 +
mov [ebx+14h] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call esi  +
mov edx [ebx+18h] +
lea ecx [edx+edx*2] +
mov [ebx+10h] eax +
lea esi [eax+ecx*8] +
mov eax [ebx+14h] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+18h] +
jmp loc_42B7D3  +
mov ecx [ebx+4] +
lea edx [ecx+80h] +
imul edx edx +
mov [esp+18h+var_18] edx +
call eax  +
mov edx 24924925h +
mov ecx [ebx] +
shr eax 2 +
mul  edx +
mov [ebx+4] edx +
imul edx edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] edx +
call esi  +
mov edx [ebx+8] +
imul esi edx +
mov [ebx] eax +
add esi eax +
mov eax [ebx+4] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] esi +
sub eax edx +
imul eax eax +
mov [esp+18h+var_10] eax +
call memset  +
mov eax [ebx+8] +
jmp loc_42B7E5  +
***
sub esp 3Ch +
mov edx [ecx+4] +
lea eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_4221D0  +
mov edx [esp+3Ch+arg_0] +
xor eax eax +
cmp [esp+3Ch+var_20] edx +
jz loc_42B908  +
add esp 3Ch +
retn 8  +
mov eax [esp+3Ch+arg_4] +
cmp [esp+3Ch+var_1C] eax +
setz al  +
add esp 3Ch +
retn 8  +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_4D58C8 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_4D5868 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+8] +
mov dword ptr [ecx] offset off_4D58C8 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_4D5868 +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_4D5928 +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] offset off_4D5868 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax [ecx+0Ch] +
mov dword ptr [ecx] offset off_4D5928 +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
mov dword ptr [ebx] offset off_4D5868 +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx+3Ch] +
mov [esp] eax +
call sub_45CD50  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 14h +
mov esi [esp+20h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_42B740 +
mov dword ptr [esp+4] offset loc_42B730 +
mov dword ptr [esp] 64h +
call sub_45CCB0  +
mov edx [esi+40h] +
test edx edx +
mov [esi+3Ch] eax +
jnz loc_42BA43  +
jmp loc_42BA67  +
mov eax [esi+3Ch] +
mov edx ebx +
add ebx 1 +
mov dword ptr [esp+8] 1 +
shl edx 4 +
add edx [esi+48h] +
mov [esp] eax +
mov [esp+4] edx +
call sub_45D200  +
cmp [esi+40h] ebx +
ja loc_42BA40  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
shl eax 4 +
add eax [edx+48h] +
mov eax [eax] +
retn   +
***
jmp loc_42BAB0  +
push edi  +
mov edx 60h +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test bl 1 +
mov edi ebx +
jnz loc_42BB30  +
test edi 2 +
jnz loc_42BB40  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_42BAE4  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_42BAEC  +
mov byte ptr [edi] 0 +
mov dword ptr [ebx+28h] 1 +
mov dword ptr [ebx+2Ch] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset sub_42B740 +
mov dword ptr [esp+4] offset loc_42B730 +
mov dword ptr [esp] 64h +
call sub_45CCB0  +
mov [ebx+3Ch] eax +
mov eax [esp+24h] +
mov [ebx+4Ch] eax +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
***
lea edi [ebx+1] +
mov dl 5Fh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_42BACD  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_42BACD  +
***
jmp loc_42BB60  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+8] +
lea ebx [eax-1] +
imul ebx ebx +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
js loc_42BBB0  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aLineMap_cFileS +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [ebx+10h] +
xor ebx ebx +
cmp eax 0FFFFFFFFh +
jz loc_42BB74  +
imul ebx eax +
add ebx [esi] +
mov eax [ebx+10h] +
test eax eax +
jns loc_42BB7B  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+28h] +
cmp eax 5FFFFFFFh +
lea edi [eax+1] +
ja loc_42BBF1  +
mov ecx [ebx+54h] +
mov edx 1 +
shl edx cl +
test ecx ecx +
lea edi [edx+eax] +
jnz loc_42BD00  +
cmp esi 1 +
jz loc_42BD0D  +
mov edx esi +
mov eax ebx +
call sub_42B7B0  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_42BC16  +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
jz loc_42BC95  +
cmp esi 3 +
jz loc_42BD70  +
cmp esi 1 +
jz loc_42BCAF  +
movzx eax byte ptr [esp+1Ch+arg_8] +
mov [ebp+0] edi +
mov [ebp+14h] al +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_10] +
mov [ebp+0Ch] eax +
mov eax [ebx+8] +
sub eax 1 +
test esi esi +
mov [ebx+0Ch] eax +
mov byte ptr [ebp+18h] 0 +
mov byte ptr [ebp+19h] 0 +
mov [ebx+28h] edi +
mov [ebx+2Ch] edi +
mov dword ptr [ebx+30h] 0 +
jnz loc_42BD57  +
mov esi [ebx+20h] +
test esi esi +
jz loc_42BDF6  +
mov eax [ebx+8] +
sub eax 2 +
cmp byte ptr [ebx+24h] 0 +
mov [ebp+10h] eax +
lea eax [esi+1] +
mov [ebx+20h] eax +
jnz loc_42BD80  +
mov eax ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 3 +
jz loc_42BD70  +
cmp esi 1 +
mov [esp+1Ch+arg_C] offset aStdin +
jnz loc_42BC28  +
mov ecx [ebp-0Ch] +
xor eax eax +
cmp ecx 0FFFFFFFFh +
jz loc_42BCBE  +
imul eax ecx +
add eax [ebx] +
mov edx [esp+1Ch+arg_C] +
test edx edx +
jnz loc_42BC28  +
mov ecx [eax+8] +
mov [esp+1Ch+arg_C] ecx +
mov ecx [eax+1Ch] +
mov [esp+1Ch+arg_10] ecx +
mov ecx [eax] +
sub [esp+1Ch+arg_10] ecx +
movzx ecx byte ptr [eax+18h] +
shr [esp+1Ch+arg_10] cl +
mov ecx [eax+0Ch] +
movzx eax byte ptr [eax+14h] +
add [esp+1Ch+arg_10] ecx +
mov [esp+1Ch+arg_8] eax +
jmp loc_42BC28  +
neg edx  +
and edi edx +
cmp esi 1 +
jnz loc_42BBFA  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov ebp [eax+10h] +
test ebp ebp +
jns loc_42BBFA  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jz loc_42BE11  +
mov edx 1 +
mov eax ebx +
call sub_42B7B0  +
mov ebp eax +
mov eax [esp+1Ch+arg_C] +
cmp byte ptr [eax] 0 +
mov eax offset aStdin +
cmovnz eax [esp+1Ch+arg_C] +
mov [esp+1Ch+arg_C] eax +
jmp loc_42BCAF  +
cmp esi 2 +
jz loc_42BDC6  +
cmp esi 1 +
mov eax ebp +
jz loc_42BDD6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 2 +
jmp loc_42BC28  +
mov eax ds:_iob +
mov [esp+1Ch+var_1C] 2Eh +
add eax 40h +
mov [esp+1Ch+var_18] eax +
call putc  +
sub esi 1 +
jnz loc_42BD80  +
mov eax [ebp+8] +
mov [esp+1Ch+var_18] offset aS_7 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call sub_47D600  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-0Ch] +
mov [ebp+10h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
mov ecx [ebp-0Ch] +
cmp ecx 0FFFFFFFFh +
jz loc_42BDE9  +
imul eax ecx +
add eax [ebx] +
mov eax [eax+10h] +
mov [ebp+10h] eax +
mov eax ebp +
jmp loc_42BD63  +
cmp byte ptr [ebx+24h] 0 +
mov dword ptr [ebp+10h] 0FFFFFFFFh +
mov dword ptr [ebx+20h] 1 +
jnz loc_42BD9D  +
mov eax ebp +
jmp loc_42BC8D  +
sub dword ptr [ebx+20h] 1 +
xor eax eax +
jmp loc_42BD63  +
***
mov eax [esp+4] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [ebx+34h] +
test esi esi +
cmovz esi eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_42BED4  +
mov ebp 7FFFFFFFh +
xor eax eax +
sub ebp [esp+1Ch+arg_C] +
mov edx 7FFFFFFFh +
cmp ebp [ebx+2Ch] +
jbe loc_42BECC  +
xor eax eax +
cmp edx ebp +
jb loc_42BECC  +
mov edx 4 +
mov eax ebx +
call sub_42B7B0  +
mov [eax] ebp +
mov edi eax +
mov eax [esp+1Ch+arg_4] +
mov [edi+8] eax +
mov eax [esp+1Ch+arg_C] +
mov [edi+0Ch] eax +
lea ebp ds:0[eax*4] +
shl eax 3 +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call esi  +
mov ecx [esp+1Ch+arg_8] +
mov [edi+14h] ecx +
mov [edi+10h] eax +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [ebx+18h] +
sub eax 1 +
mov [ebx+1Ch] eax +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10h] +
lea eax [eax+eax*2-3] +
lea eax [edx+eax*8] +
mov edx [eax] +
xor eax eax +
mov ebp edx +
sub ebp [esp+1Ch+arg_C] +
cmp [ebx+2Ch] ebp +
jb loc_42BE68  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ebx [esp+arg_8] +
mov ecx [edx+10h] +
mov [ecx+eax*8] ebx +
mov ebx [esp+arg_C] +
mov ecx [edx+10h] +
mov [ecx+eax*8+4] ebx +
add eax [edx] +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_0] +
mov edx [esp+4Ch+arg_8] +
mov eax [ebx+8] +
mov edi [ebx+28h] +
mov ebp [ebx+2Ch] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
mov [esp+4Ch+var_28] edi +
mov edi [eax] +
mov esi [eax+0Ch] +
mov ecx edi +
mov [esp+4Ch+var_18] edi +
movzx edi byte ptr [eax+18h] +
mov [esp+4Ch+var_2C] esi +
mov esi ebp +
sub esi ecx +
mov ecx edi +
shr esi cl +
movzx ecx byte ptr [eax+19h] +
add esi [esp+4Ch+var_2C] +
mov [esp+4Ch+var_13] cl +
mov [esp+4Ch+var_20] ecx +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_1C] esi +
sub ecx esi +
mov [esp+4Ch+var_24] ecx +
js loc_42BFA7  +
cmp ecx 0Ah +
jle loc_42C071  +
imul ecx edi +
cmp ecx 3E8h +
jle loc_42C071  +
cmp edx 1000h +
ja loc_42BFBD  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42C0C0  +
cmp [esp+4Ch+var_28] 70000000h +
ja loc_42C0B1  +
mov [esp+4Ch+var_12] 0 +
xor ebp ebp +
xor esi esi +
mov [esp+4Ch+var_11] 0 +
mov [esp+4Ch+var_10] 0 +
mov edx [esp+4Ch+var_24] +
test edx edx +
js loc_42BFF7  +
mov edx [esp+4Ch+var_1C] +
cmp [esp+4Ch+var_2C] edx +
jz loc_42C120  +
mov edx [eax+8] +
mov edi [esp+4Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_3C] edi +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] ebx +
call sub_42BBC0  +
mov edi [eax] +
mov ecx [eax+0Ch] +
movzx edx [esp+4Ch+var_11] +
mov [eax+18h] dl +
movzx edx [esp+4Ch+var_12] +
mov [eax+19h] dl +
mov eax [esp+4Ch+arg_4] +
sub eax ecx +
mov ecx ebp +
shl eax cl +
add eax edi +
mov edx [ebx+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42C057  +
mov ecx [ebx+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp eax ecx +
jnb loc_42C0B1  +
cmp eax [ebx+28h] +
mov [ebx+2Ch] eax +
jbe loc_42C066  +
mov [ebx+28h] eax +
mov [ebx+30h] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edi +
mov esi 1 +
sub ecx [esp+4Ch+var_20] +
shl esi cl +
cmp esi edx +
jbe loc_42BFA7  +
cmp ecx 9 +
jle loc_42C094  +
cmp edx 50h +
jbe loc_42BFA7  +
cmp [esp+4Ch+var_28] 50000000h +
ja loc_42C168  +
mov esi [ebx+30h] +
mov eax [esp+4Ch+var_24] +
mov ecx edi +
shl eax cl +
add eax ebp +
jmp loc_42C03F  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+4Ch+var_28] 50000000h +
jbe loc_42C110  +
mov [esp+4Ch+var_12] 0 +
mov [esp+4Ch+var_10] 0 +
cmp edx 7Fh +
jbe loc_42C1C0  +
mov ecx 7 +
mov ebp 1 +
lea esi [esi+0] +
add ecx 1 +
mov esi ebp +
shl esi cl +
cmp edx esi +
jnb loc_42C0F0  +
mov edx [esp+4Ch+var_10] +
lea ebp [ecx+edx] +
mov edx ebp +
mov [esp+4Ch+var_11] dl +
jmp loc_42BFE1  +
mov esi [ebx+54h] +
mov ecx esi +
mov [esp+4Ch+var_10] esi +
mov [esp+4Ch+var_12] cl +
jmp loc_42C0D7  +
mov ecx edi +
mov edx 1 +
shl edx cl +
mov ecx [esp+4Ch+var_28] +
sub ecx [esp+4Ch+var_18] +
sub edx 1 +
and edx ecx +
movzx ecx [esp+4Ch+var_13] +
shr edx cl +
mov ecx ebp +
sub ecx [esp+4Ch+var_10] +
shr edx cl +
test edx edx +
jnz loc_42BFF7  +
mov edi [esp+4Ch+var_20] +
cmp [esp+4Ch+var_10] edi +
jl loc_42BFF7  +
mov ecx [esp+4Ch+var_2C] +
mov edi [esp+4Ch+var_18] +
jmp loc_42C023  +
cmp [esp+4Ch+var_13] 0 +
jnz loc_42C19D  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42C0A2  +
mov ecx [ebx+30h] +
test ecx ecx +
jnz loc_42BFBD  +
cmp [esp+4Ch+var_28] 6FFFFFFFh +
ja loc_42BFBD  +
xor esi esi +
jmp loc_42C0A5  +
cmp edx 1000h +
ja loc_42BFBD  +
cmp [esp+4Ch+var_28] 60000000h +
jbe loc_42C0CA  +
jmp loc_42BFBD  +
mov esi 80h +
mov ecx 7 +
jmp loc_42C0FB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
cmp [ebx+30h] esi +
mov edx [ebx+2Ch] +
jbe loc_42C207  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+19h] +
shl esi cl +
lea eax [edx+esi] +
cmp eax [ebx+28h] +
jb loc_42C201  +
mov [ebx+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 1000h +
jbe loc_42C217  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp edx 60000000h +
ja loc_42C20F  +
mov eax [ebx+8] +
sub eax 1 +
imul eax eax +
add eax [ebx] +
movzx ecx byte ptr [eax+18h] +
sub edx [eax] +
shr edx cl +
add edx [eax+0Ch] +
lea eax [esi+32h] +
mov [esp+14h+var_C] eax +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ebx +
call sub_42BF30  +
mov edx eax +
mov eax [ebx+8] +
lea ecx [eax-1] +
mov eax edx +
imul ecx ecx +
add ecx [ebx] +
cmp byte ptr [ecx+18h] 0 +
jz loc_42C201  +
mov eax ecx +
jmp loc_42C1F0  +
***
jmp sub_42C270  +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
mov ebx [esp+arg_0] +
movzx ecx byte ptr [edx+18h] +
sub eax [edx+0Ch] +
shl eax cl +
add eax [edx] +
cmp eax 60000000h +
ja loc_42C2A6  +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi [esp+arg_C] +
shl esi cl +
add eax esi +
mov ecx [ebx+18h] +
mov edx 7FFFFFFFh +
test ecx ecx +
jz loc_42C2BE  +
lea edx [ecx+ecx*2-3] +
mov ecx [ebx+10h] +
lea edx [ecx+edx*8] +
mov edx [edx] +
cmp eax edx +
lea ecx [edx-1] +
cmovnb eax ecx +
cmp eax [ebx+28h] +
jbe loc_42C2CE  +
mov [ebx+28h] eax +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_42C2E0  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42C360  +
mov ecx [esi+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42C360  +
shl eax 4 +
mov edx [ecx+eax] +
cmp edx [esi+28h] +
ja loc_42C370  +
cmp edx 1 +
jbe loc_42C411  +
test esi esi +
jz loc_42C411  +
mov ecx [esi+0Ch] +
mov ebx [esi] +
mov ebp [esi+8] +
imul edi ecx +
add edi ebx +
cmp edx [edi] +
jb loc_42C3D5  +
lea eax [ecx+1] +
mov [esp+4+var_4] eax +
mov eax edi +
cmp ebp [esp+4+var_4] +
jz loc_42C390  +
cmp edx [edi+1Ch] +
jb loc_42C390  +
mov eax ecx +
mov ecx ebp +
jmp loc_42C3F1  +
xor eax eax +
test esi esi +
jz loc_42C390  +
cmp [esi+28h] edx +
jnb loc_42C319  +
nop   +
lea esi [esi+0] +
mov ecx [esi+1Ch] +
mov edi [esi+10h] +
mov ebx [esi+18h] +
lea eax [ecx+ecx*2] +
lea ebp [edi+eax*8] +
cmp [ebp+0] edx +
ja loc_42C3AD  +
test ecx ecx +
mov eax ebp +
jz loc_42C390  +
cmp [ebp-18h] edx +
jbe loc_42C40A  +
nop   +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx eax +
mov ebx eax +
jnb loc_42C3C4  +
add eax ecx +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp [edi+ebp*8] edx +
jbe loc_42C398  +
lea ecx [eax+1] +
cmp ebx ecx +
jbe loc_42C3C4  +
lea eax [ecx+ebx] +
shr eax 1 +
lea ebp [eax+eax*2] +
cmp edx [edi+ebp*8] +
jb loc_42C3AA  +
cmp ecx eax +
mov ebx eax +
jb loc_42C39E  +
mov [esi+1Ch] ebx +
lea eax [ebx+ebx*2] +
add esp 4 +
pop ebx  +
lea eax [edi+eax*8] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_42C3F1  +
lea edi [ecx+eax] +
shr edi 1 +
imul ebp edi +
cmp edx [ebx+ebp] +
cmovb ecx edi +
cmovnb eax edi +
mov edi ecx +
sub edi eax +
cmp edi 1 +
ja loc_42C3E0  +
mov [esi+0Ch] eax +
imul eax eax +
add esp 4 +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx-1] +
xor ecx ecx +
jmp loc_42C3AD  +
xor eax eax +
jmp loc_42C390  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_8] +
mov ebp [esp+3Ch+arg_C] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42C44A  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov eax [esp+3Ch+arg_10] +
test eax eax +
setz dl  +
test ebx ebx +
jz loc_42C4C1  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_42C4CF  +
cmp ebx edi +
jz loc_42C534  +
test dl dl +
jnz loc_42C5A6  +
mov eax [esp+3Ch+arg_10] +
lea edx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_18] edi +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
mov eax [esi+3Ch] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_45D200  +
mov edx [eax] +
mov ebx eax +
test edx edx +
jz loc_42C550  +
mov ecx [esi+48h] +
mov eax edx +
sub eax ecx +
sar eax 4 +
or eax 80000000h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test dl dl +
jnz loc_42C4B9  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_42C45F  +
cmp ebx edi +
jnz loc_42C467  +
cmp ebx ebp +
ja loc_42C534  +
cmp ebx 1 +
jbe loc_42C534  +
cmp ebx 4FFFFFFFh +
ja loc_42C534  +
mov eax [esi+18h] +
test eax eax +
jz loc_42C621  +
mov ecx [esi+10h] +
lea eax [eax+eax*2-3] +
lea eax [ecx+eax*8] +
mov eax [eax] +
cmp ebx eax +
jnb loc_42C534  +
cmp ebp eax +
jnb loc_42C534  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] edx +
call sub_42C2E0  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebp +
sub eax ebx +
shl edx cl +
shr eax cl +
cmp eax edx +
mov edx [esp+3Ch+var_30] +
jnb loc_42C534  +
add dword ptr [esi+58h] 1 +
or eax ebx +
jmp loc_42C4B9  +
cmp ebx ebp +
jnz loc_42C467  +
test dl dl +
jz loc_42C46F  +
mov eax ebx +
jmp loc_42C4B9  +
mov edi [esi+40h] +
mov eax [esi+44h] +
cmp edi eax +
jb loc_42C5B0  +
mov edx [esi+34h] +
mov ecx offset sub_452F50 +
mov edi [esi+48h] +
test edx edx +
cmovz edx ecx +
test eax eax +
jnz loc_42C5F0  +
mov dword ptr [esi+44h] 80h +
mov ax 800h +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call edx  +
mov edx eax +
sub edx edi +
mov [esp+3Ch+var_24] edx +
sar edx 1Fh +
cmp dword ptr [esi+44h] 80h +
mov [esi+48h] eax +
mov [esp+3Ch+var_20] edx +
ja loc_42C5FE  +
mov edi [esi+40h] +
jmp loc_42C5B3  +
add dword ptr [esi+5Ch] 1 +
jmp loc_42C46F  +
mov eax [esi+48h] +
mov edx edi +
add edi 1 +
shl edx 4 +
add eax edx +
mov [ebx] eax +
mov eax [esp+3Ch+var_1C] +
mov ecx [esi+48h] +
mov [esi+40h] edi +
mov [ecx+edx] eax +
mov eax [esp+3Ch+var_18] +
mov [ecx+edx+4] eax +
mov eax [esp+3Ch+var_14] +
mov [ecx+edx+8] eax +
mov eax [esp+3Ch+var_10] +
mov [ecx+edx+0Ch] eax +
mov edx [ebx] +
jmp loc_42C4AD  +
lea ecx [eax+eax] +
mov [esi+44h] ecx +
shl eax 5 +
jmp loc_42C57D  +
mov eax [esi+3Ch] +
lea edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset loc_42B780 +
mov [esp+3Ch+var_3C] eax +
call sub_45D360  +
mov eax [esi+48h] +
jmp loc_42C5A1  +
cmp ebx 7FFFFFFEh +
ja loc_42C534  +
mov eax 7FFFFFFFh +
jmp loc_42C4FF  +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C670  +
shl edx 4 +
add edx [eax+48h] +
mov eax [edx+4] +
mov edx [edx+8] +
add esp 8 +
pop ebx  +
retn   +
cmp ebx 1 +
jbe loc_42C6C0  +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42C68D  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_42C6C0  +
cmp ebx 50000000h +
ja loc_42C6C0  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42C2E0  +
mov edx 1 +
movzx ecx byte ptr [eax+19h] +
mov eax ebx +
shl edx cl +
sub edx 1 +
and edx ebx +
sub eax edx +
shl edx cl +
add edx eax +
jmp loc_42C664  +
add esp 8 +
mov eax ebx +
mov edx ebx +
pop ebx  +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C6F0  +
add esp 8 +
pop ebx  +
retn   +
mov eax [esp+8+arg_0] +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42C2E0  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test eax ebx +
setz al  +
add esp 8 +
pop ebx  +
retn   +
***
mov ebx [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42C740  +
shl edx 4 +
add edx [eax+48h] +
mov ebx [edx] +
mov edx [eax+18h] +
mov ecx 7FFFFFFFh +
test edx edx +
jz loc_42C758  +
mov ecx [eax+10h] +
lea edx [edx+edx*2-3] +
lea edx [ecx+edx*8] +
mov ecx [edx] +
cmp ebx ecx +
jnb loc_42C77A  +
cmp ebx 1 +
jbe loc_42C77A  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] eax +
call sub_42C2E0  +
movzx ecx byte ptr [eax+19h] +
mov eax 0FFFFFFFFh +
shl eax cl +
and ebx eax +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
jmp sub_42C790  +
***
push esi  +
mov esi eax +
mov eax edx +
push ebx  +
and eax 7FFFFFFFh +
sub esp 8 +
cmp edx eax +
mov ebx edx +
jz loc_42C7BA  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_42C7BA  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C7CA  +
mov ebx [eax+14h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42C2E0  +
test eax eax +
jnz loc_42C7B1  +
test edi edi +
jz loc_42C7D0  +
mov [edi] eax +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov ebp [ebx+8] +
mov eax [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edx ebp +
and edx 7FFFFFFFh +
mov edi eax +
cmp ebp edx +
mov [esp+2Ch+var_14] ecx +
jz loc_42C812  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42C828  +
mov eax edx +
shl eax 4 +
add eax [esi+48h] +
mov edi [eax] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_42C2E0  +
test eax eax +
mov edx eax +
jz loc_42C850  +
cmp byte ptr [eax+4] 4 +
jnz loc_42C850  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_42C2E0  +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_42C86E  +
cmp byte ptr [eax+4] 4 +
jz loc_42C840  +
cmp edx eax +
jnz loc_42C840  +
mov eax [edx] +
movzx ecx byte ptr [edx+18h] +
sub edi eax +
sub ebp eax +
mov eax ebp +
mov esi edi +
shr eax cl +
shr esi cl +
add eax [edx+0Ch] +
add esi [edx+0Ch] +
cmp eax esi +
jnz loc_42C840  +
mov eax 1 +
shl eax cl +
movzx ecx byte ptr [edx+19h] +
sub eax 1 +
and edi eax +
and eax ebp +
shr eax cl +
shr edi cl +
add eax 1 +
cmp edi eax +
jnz loc_42C840  +
mov eax [esp+2Ch+var_14] +
mov [ebx+8] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edx [ebx+10h] +
mov esi eax +
mov eax [ebx+0Ch] +
lea edx [esi+edx+1] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_452F50  +
mov edi [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [ebx+0Ch] eax +
add eax [ebx+10h] +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add esi [ebx+10h] +
mov [ebx+10h] esi +
mov byte ptr [eax+esi] 0 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_42C920  +
cmp byte ptr [eax+4] 4 +
setz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov ecx eax +
and ecx 7FFFFFFFh +
cmp eax ecx +
jz loc_42C952  +
mov eax ecx +
mov ecx [esp+arg_0] +
shl eax 4 +
add eax [ecx+48h] +
mov eax [eax] +
sub eax [edx] +
mov edx [edx+10h] +
mov eax [edx+eax*8] +
retn   +
***
mov edx [esp+10h+arg_4] +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] 0 +
mov ecx edx +
and ecx 7FFFFFFFh +
cmp edx ecx +
jz loc_42C9D9  +
mov edx [eax+48h] +
shl ecx 4 +
add edx ecx +
mov edx [edx] +
cmp edx 1 +
jbe loc_42C9F2  +
lea ecx [esp+10h+var_4] +
call sub_42C790  +
mov eax [esp+10h+var_4] +
mov eax [eax+8] +
add esp 10h +
retn   +
xor eax eax +
jmp loc_42C9EE  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov eax [eax] +
retn   +
***
sub esp 8 +
mov ebx [esp+8+arg_4] +
mov esi [esp+8+arg_0] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42CA30  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
cmp ebx 1 +
jbe loc_42CA80  +
mov [esp+8+var_4] ebx +
mov [esp+8+var_8] esi +
call sub_42C2E0  +
test eax eax +
jz loc_42CA80  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CA88  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42CA5F  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
mov edx [eax+10h] +
sub ebx [eax] +
mov ebx [edx+ebx*8] +
cmp ebx 1 +
ja loc_42CA35  +
mov ebx [eax+14h] +
mov [esp+8+var_8] esi +
mov [esp+8+var_4] ebx +
call sub_42C2E0  +
test eax eax +
jnz loc_42CA45  +
nop   +
add esp 8 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [eax+14h] +
add esp 8 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+8] +
mov ecx [esp+4] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42CAC2  +
shl eax 4 +
add eax [ecx+48h] +
mov edx [eax] +
cmp [ecx+28h] edx +
setb al  +
retn   +
***
xor eax eax +
test ecx ecx +
jnz loc_42CABB  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov ecx [esp+10h+arg_8] +
mov edi [esp+10h+arg_C] +
mov eax ebx +
mov edx ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42CAFD  +
mov edx eax +
shl edx 4 +
add edx [esi+48h] +
mov edx [edx] +
cmp edx 1 +
jbe loc_42CB73  +
cmp ecx 1 +
jz loc_42CB54  +
cmp ecx 2 +
jz loc_42CB86  +
test ecx ecx +
nop   +
jz loc_42CBB5  +
mov [esp+10h+var_8] offset aLinemap_resolv +
mov [esp+10h+var_C] 631h +
mov [esp+10h+var_10] offset a____GccLibcppL +
call sub_424560  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CB64  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42CB4C  +
shl edx 4 +
add edx [esi+48h] +
mov ebx [edx] +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42C2E0  +
test eax eax +
jnz loc_42CB32  +
test edi edi +
jz loc_42CB6A  +
mov [edi] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_42CB6A  +
mov dword ptr [edi] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ebx eax +
jz loc_42CBA3  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
jmp loc_42CBA3  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CB64  +
sub ebx [eax] +
mov eax [eax+10h] +
mov ebx [eax+ebx*8+4] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
call sub_42C2E0  +
test eax eax +
jnz loc_42CB94  +
jmp loc_42CB64  +
add esp 10h +
mov ecx edi +
mov edx ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_42C790  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42CD10  +
mov ecx [ebx+48h] +
shl eax 4 +
mov edx [ecx+eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp edx eax +
jz loc_42CD10  +
shl eax 4 +
mov ecx [ecx+eax] +
cmp [ebx+28h] ecx +
mov eax edx +
jb loc_42CC22  +
cmp edx 1 +
ja loc_42CC30  +
mov eax edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_42CC20  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_3C] ebx +
call sub_42CAD0  +
mov edx [esp+3Ch+var_10] +
movzx ebp byte ptr [edx+19h] +
mov edi [edx] +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov ecx ebp +
shl eax cl +
mov ecx eax +
mov eax esi +
add ecx esi +
cmp edi ecx +
jnb loc_42CC22  +
movzx ecx byte ptr [edx+18h] +
sub eax edi +
mov edi eax +
mov [esp+3Ch+arg_0] ebx +
shr edi cl +
mov [esp+3Ch+var_20] edi +
mov edi [edx+0Ch] +
add [esp+3Ch+var_20] edi +
mov edi 1 +
shl edi cl +
mov ecx ebp +
sub edi 1 +
and edi eax +
mov eax [ebx+8] +
shr edi cl +
sub eax 1 +
imul eax eax +
add eax [ebx] +
cmp eax edx +
jz loc_42CD3A  +
nop   +
mov ebx [esp+3Ch+arg_8] +
movzx ebp cl +
shl ebx cl +
mov ecx ebx +
add ecx esi +
cmp ecx [edx+1Ch] +
jnb loc_42CD20  +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] edx +
movzx ecx byte ptr [edx+18h] +
mov eax esi +
add edi [esp+3Ch+arg_8] +
sub ecx ebp +
mov ebp 1 +
shl ebp cl +
cmp edi ebp +
jnb loc_42CC22  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] eax +
call sub_42C270  +
cmp eax [ebx+28h] +
mov edi eax +
jbe loc_42CD49  +
mov eax esi +
jmp loc_42CC22  +
test ebx ebx +
jz loc_42CC1B  +
mov ecx edx +
jmp loc_42CC14  +
mov ebx [esp+3Ch+var_20] +
lea ebp [edx+1Ch] +
cmp [edx+28h] ebx +
ja loc_42CD04  +
movzx ecx byte ptr [edx+35h] +
mov edx ebp +
cmp eax edx +
jnz loc_42CCB0  +
mov ebx [esp+3Ch+arg_0] +
movzx ebp cl +
mov edx eax +
mov [esp+3Ch+var_10] eax +
jmp loc_42CCCA  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
call sub_42C2E0  +
cmp eax [esp+3Ch+var_10] +
jnz loc_42CD04  +
mov eax edi +
jmp loc_42CC22  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_8] +
mov eax edi +
mov esi edi +
and eax 7FFFFFFFh +
cmp edi eax +
jz loc_42CD98  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax ebp +
mov edx ebp +
and eax 7FFFFFFFh +
cmp ebp eax +
jz loc_42CDAD  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
cmp esi edx +
jz loc_42CFB0  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42CF06  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
xor ecx ecx +
cmp eax [ebx+28h] +
ja loc_42CEB0  +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_42CEEA  +
shl eax 4 +
add eax [ebx+48h] +
mov eax [eax] +
cmp eax [ebx+28h] +
ja loc_42CE25  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_42CE06  +
shl eax 4 +
add eax [ebx+48h] +
mov esi [eax] +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jz loc_42CE19  +
shl eax 4 +
add eax [ebx+48h] +
mov edx [eax] +
add esp 2Ch +
mov eax edx +
pop ebx  +
sub eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_42CAD0  +
mov ecx [esp+2Ch+var_10] +
cmp eax esi +
mov edx eax +
jnz loc_42CDF3  +
test cl cl +
jz loc_42CDF3  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_42C2E0  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] eax +
call sub_42C2E0  +
mov edx [esp+2Ch+var_10] +
test edx edx +
mov esi eax +
jz loc_42CF57  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CF57  +
test eax eax +
jz loc_42CF66  +
cmp byte ptr [eax+4] 4 +
jnz loc_42CF57  +
cmp edx eax +
jnz loc_42CF28  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
sub eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
call sub_42CAD0  +
mov edx [esp+2Ch+var_10] +
mov ecx 1 +
mov esi eax +
mov eax edx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_42CDE6  +
test ebx ebx +
jnz loc_42CDEE  +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jnz loc_42CDFE  +
jmp loc_42CE06  +
test ebx ebx +
jnz loc_42CF82  +
mov eax edx +
xor ecx ecx +
and eax 7FFFFFFFh +
cmp eax edx +
jnz loc_42CDE6  +
jmp loc_42CDF3  +
cmp esi edx +
jz loc_42CEA1  +
mov eax [esi] +
cmp [edx] eax +
lea esi [esi+0] +
jnb loc_42CF90  +
mov edi [edx+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] edi +
call sub_42C2E0  +
test eax eax +
mov edx eax +
jz loc_42CF57  +
cmp byte ptr [edx+4] 4 +
jnz loc_42CF57  +
test esi esi +
jz loc_42CF66  +
cmp byte ptr [esi+4] 4 +
jz loc_42CF20  +
cmp edx esi +
jnz loc_42CF66  +
test edx edx +
lea esi [esi+0] +
jnz loc_42CEA1  +
mov [esp+2Ch+var_24] offset aLinemap_compar +
mov [esp+2Ch+var_28] 557h +
mov [esp+2Ch+var_2C] offset a____GccLibcppL +
call sub_424560  +
mov eax esi +
jmp loc_42CDCC  +
mov ebp [esi+14h] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] edx +
mov [esp+2Ch+var_28] ebp +
call sub_42C2E0  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
jmp loc_42CF47  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov ebx [esp+20h] +
mov esi [esp+1Ch] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42D060  +
mov edx [esi+48h] +
shl eax 4 +
mov ebx [edx+eax] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42D060  +
shl eax 4 +
mov edx [edx+eax] +
xor eax eax +
cmp [esi+28h] edx +
jb loc_42D003  +
jmp loc_42D053  +
mov ebx eax +
mov [esp+4] ebx +
mov ebp ebx +
mov [esp] esi +
call sub_42C2E0  +
mov edx ebx +
and edx 7FFFFFFFh +
cmp ebx edx +
jz loc_42D025  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
mov ecx [eax] +
mov edi [eax+10h] +
sub ebp ecx +
mov eax [edi+ebp*8] +
mov edx eax +
mov ebp eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42D045  +
shl edx 4 +
add edx [esi+48h] +
mov ebp [edx] +
cmp [esi+28h] ebp +
jb loc_42D001  +
sub ebx ecx +
cmp eax [edi+ebx*8+4] +
setz al  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
test esi esi +
jz loc_42D053  +
mov edx ebx +
jmp loc_42CFF8  +
***
push esi  +
push ebx  +
sub esp 8 +
mov eax [esp+8+arg_4] +
mov esi [esp+8+arg_8] +
mov ebx [esp+8+arg_0] +
mov edx eax +
and edx 7FFFFFFFh +
mov ebp [esi] +
cmp eax edx +
jz loc_42D0AC  +
mov ecx [ebx+48h] +
shl edx 4 +
mov eax [ecx+edx] +
mov edx eax +
and edx 7FFFFFFFh +
cmp eax edx +
jz loc_42D0AC  +
shl edx 4 +
mov eax [ecx+edx] +
mov edx [ebp+10h] +
sub eax [ebp+0] +
mov edi [edx+eax*8] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_42C2E0  +
test eax eax +
jz loc_42D0D7  +
cmp byte ptr [eax+4] 4 +
jnz loc_42D0D7  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebp+14h] +
mov [esp+8+var_8] ebx +
mov [esp+8+var_4] edi +
call sub_42C2E0  +
mov [esi] eax +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42D132  +
shl eax 4 +
add eax [esi+48h] +
mov ebx [eax] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_42C2E0  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_42D14C  +
cmp byte ptr [eax+4] 4 +
jz loc_42D156  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
call sub_42CAD0  +
cmp eax 1 +
jbe loc_42D181  +
mov edx [esp+2Ch+var_10] +
cmp byte ptr [edx+14h] 0 +
jz loc_42D14C  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jz loc_42D1D2  +
cmp byte ptr [edx+4] 4 +
jnz loc_42D1D2  +
lea ebp [esp+2Ch+var_14] +
jmp loc_42D19B  +
cmp byte ptr [edx+4] 4 +
jnz loc_42D1D2  +
cmp eax 1 +
ja loc_42D1F0  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_42D070  +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
mov ebx eax +
call sub_42CAD0  +
mov edx [esp+2Ch+var_14] +
test edx edx +
jnz loc_42D195  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_42D14C  +
mov eax [esp+2Ch+arg_8] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
cmp byte ptr [eax+14h] 0 +
jnz loc_42D1A0  +
jmp loc_42D1D2  +
***
sub esp 14h +
mov edx [esp+14h+arg_C] +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
mov ebx [esp+14h+arg_8] +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jz loc_42D253  +
mov edx esi +
shl edx 4 +
add edx [ecx+48h] +
mov esi [edx+0Ch] +
mov edx [edx] +
mov [eax+0Ch] esi +
cmp edx 1 +
jbe loc_42D2A7  +
test ebx ebx +
jz loc_42D2D4  +
mov esi edx +
and esi 7FFFFFFFh +
cmp edx esi +
jz loc_42D2B0  +
shl esi 4 +
add esi [ecx+48h] +
mov esi [esi] +
cmp [ecx+28h] esi +
jb loc_42D2B8  +
mov ecx [ebx+8] +
sub edx [ebx] +
mov [eax] ecx +
movzx ecx byte ptr [ebx+18h] +
mov esi edx +
shr esi cl +
add esi [ebx+0Ch] +
mov [eax+4] esi +
mov esi 1 +
shl esi cl +
movzx ecx byte ptr [ebx+19h] +
sub esi 1 +
and esi edx +
shr esi cl +
cmp byte ptr [ebx+14h] 0 +
mov [eax+8] esi +
setnz byte ptr [eax+10h]  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_42D275  +
mov esi edx +
jmp loc_42D270  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6D5h +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_424560  +
mov [esp+14h+var_C] offset aLinemap_expand +
mov [esp+14h+var_10] 6CDh +
mov [esp+14h+var_14] offset a____GccLibcppL +
call sub_424560  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+70h+var_10] +
mov edi [esp+70h+var_C] +
mov eax [esp+70h+var_8] +
mov edx [esp+70h+var_4] +
test esi esi +
mov [esp+70h+var_44] offset aLc_enter +
mov [esp+70h+var_40] offset aLc_leave +
mov [esp+70h+var_3C] offset aLc_rename +
mov [esp+70h+var_38] offset aLc_rename_verb +
mov [esp+70h+var_34] offset aLc_enter_macro +
jz loc_42D4B0  +
test dl dl +
jnz loc_42D400  +
imul ebx eax +
add ebx [edi] +
movzx ebp byte ptr [ebx+4] +
mov [esp+70h+var_54] offset a??? +
mov ecx ebp +
cmp cl 4 +
ja loc_42D362  +
movzx ebp cl +
mov ecx [esp+ebp*4+70h+var_44] +
mov [esp+70h+var_54] ecx +
test dl dl +
jnz loc_42D410  +
cmp byte ptr [ebx+14h] 0 +
jnz loc_42D476  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aNo_0 +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_5C] ecx +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_47D600  +
mov ebp [ebx+10h] +
cmp ebp [edi+8] +
jnb loc_42D485  +
mov ecx [ebx+0Ch] +
imul edx ebp +
mov eax [ebx+8] +
add edx [edi] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_64] ecx +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_54] edx +
call sub_47D600  +
mov edx [esp+70h+var_54] +
test edx edx +
jz loc_42D4BE  +
mov eax [edx+8] +
mov [esp+70h+var_64] eax +
mov [esp+70h+var_68] ebp +
mov [esp+70h+var_6C] offset aIncludedFromDS +
mov [esp+70h+var_70] esi +
call sub_47D600  +
jmp loc_42D45E  +
mov ecx [edi+10h] +
lea ebx [eax+eax*2] +
lea ebx [ecx+ebx*8] +
jmp loc_42D344  +
mov edx [ebx] +
mov edi [esp+70h+var_54] +
mov [esp+70h+var_58] offset aNo_0 +
mov [esp+70h+var_64] ebx +
mov [esp+70h+var_60] edx +
mov [esp+70h+var_5C] edi +
mov [esp+70h+var_68] eax +
mov [esp+70h+var_6C] offset aMapUPLocUReaso +
mov [esp+70h+var_70] esi +
call sub_47D600  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov eax [eax] +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_6C] offset aMacroSUTokens +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_68] eax +
call sub_47D600  +
mov [esp+70h+var_10] esi +
mov [esp+70h+var_C] offset asc_4C7C99 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D600  +
mov edx [ebx] +
mov [esp+70h+var_58] offset aYes +
jmp loc_42D37E  +
mov edx [ebx+0Ch] +
mov eax [ebx+8] +
mov [esp+70h+var_6C] offset aFileSD +
mov [esp+70h+var_70] esi +
mov [esp+70h+var_64] edx +
mov [esp+70h+var_68] eax +
call sub_47D600  +
mov eax offset aNone_1 +
jmp loc_42D3E4  +
mov ecx ds:_iob +
lea esi [ecx+40h] +
jmp loc_42D337  +
mov eax offset aNone_1 +
jmp loc_42D3E4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+74h] +
mov eax ebx +
and eax 7FFFFFFFh +
cmp ebx eax +
jz loc_42D4F2  +
mov edi [esp+70h] +
shl eax 4 +
add eax [edi+48h] +
mov ebx [eax] +
test ebx ebx +
jnz loc_42D500  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+4Ch] +
mov [esp+0Ch] eax +
mov eax [esp+70h] +
mov dword ptr [esp+8] 2 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_42CAD0  +
mov edx [esp+4Ch] +
test edx edx +
jz loc_42D5E0  +
mov esi [edx+8] +
mov ebp eax +
movzx ecx byte ptr [edx+18h] +
sub ebp [edx] +
mov [esp+38h] esi +
mov esi 1 +
mov edi ebp +
shr edi cl +
shl esi cl +
movzx ecx byte ptr [edx+19h] +
sub esi 1 +
and esi ebp +
add edi [edx+0Ch] +
shr esi cl +
xor ecx ecx +
cmp byte ptr [edx+14h] 0 +
setnz cl  +
cmp ebx eax +
mov [esp+3Ch] ecx +
jnz loc_42D5C6  +
mov ecx [edx+10h] +
cmp ecx 0FFFFFFFFh +
jz loc_42D5D2  +
mov ebp [esp+70h] +
imul ecx ecx +
add ecx [ebp+0] +
jz loc_42D5D2  +
mov ecx [ecx+8] +
xor ebp ebp +
mov [esp+28h] eax +
mov eax [esp+3Ch] +
mov [esp+24h] ebx +
mov [esp+20h] ebp +
mov [esp+14h] esi +
mov [esp+18h] eax +
mov eax [esp+38h] +
mov [esp+10h] edi +
mov [esp+1Ch] edx +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
mov eax [esp+78h] +
mov dword ptr [esp+4] offset aPSFSLDCDSDMPED +
mov [esp] eax +
call sub_47D600  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp 1 +
mov ecx offset off_4C7CEB +
jmp loc_42D57E  +
***
xor ebp ebp +
mov ecx offset aNull_1 +
jmp loc_42D57E  +
***
mov ecx offset unk_4C7CEA +
mov ebp 0FFFFFFFFh +
mov dword ptr [esp+3Ch] 0FFFFFFFFh +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+38h] ecx +
jmp loc_42D57E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
test ebp ebp +
jz loc_42D690  +
mov esi [ebp+8] +
test esi esi +
jz loc_42D690  +
mov ebx esi +
sub ebx 1 +
js loc_42D690  +
imul esi esi +
sub esi 1Ch +
jmp loc_42D648  +
sub esi 1Ch +
sub ebx 1 +
js loc_42D690  +
mov eax [ebp+0] +
mov eax [eax+esi+8] +
test eax eax +
jz loc_42D640  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_4531F0  +
test eax eax +
jnz loc_42D640  +
mov eax [ebp+8] +
sub eax 1 +
cmp eax ebx +
jz loc_42D6A0  +
add ebx 1 +
imul ebx ebx +
add ebx [ebp+0] +
mov edx [ebx] +
sub edx 1 +
mov eax [esp+1Ch+arg_8] +
mov [eax] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+28h] +
jmp loc_42D67B  +
***
push esi  +
push ebx  +
sub esp 20h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov eax [eax+4] +
mov [esp+20h+var_18] eax +
imul eax eax +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+8] +
mov [esp+20h+var_14] eax +
imul eax eax +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_0] +
mov eax [eax+14h] +
lea eax [eax+eax*2] +
shl eax 3 +
mov [esp+20h+var_8] eax +
mov eax [esp+20h+arg_0] +
mov ebp [eax+10h] +
test ebp ebp +
jz loc_42D7DF  +
mov eax [eax+18h] +
mov [esp+20h+var_4] eax +
lea eax [eax+eax*2-3] +
lea eax [ebp+eax*8+0] +
cmp ebp eax +
mov [esp+20h+var_1C] eax +
ja loc_42D76A  +
xor edx edx +
mov [esp+20h+var_20] 0 +
nop   +
mov esi [ebp+0Ch] +
mov eax [esp+20h+var_20] +
lea eax [eax+esi*8] +
add esi esi +
mov [esp+20h+var_20] eax +
jz loc_42D759  +
mov eax [ebp+10h] +
xor ecx ecx +
mov [esp+20h+arg_4] edi +
lea esi [esi+0] +
mov edi [eax+4] +
lea ebx [edx+4] +
cmp [eax] edi +
cmovz edx ebx +
add ecx 2 +
add eax 8 +
cmp ecx esi +
jb loc_42D740  +
mov edi [esp+20h+arg_4] +
add ebp 18h +
jz loc_42D764  +
cmp ebp [esp+20h+var_1C] +
jbe loc_42D720  +
mov eax [esp+20h+var_4] +
jmp loc_42D777  +
mov eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov esi [esp+20h+var_18] +
mov [edi+18h] eax +
lea eax [eax+eax*2] +
mov ecx ds:dword_4D9290 +
shl eax 3 +
mov [edi+20h] eax +
mov eax [esp+20h+arg_0] +
mov [edi] esi +
mov esi [esp+20h+var_14] +
mov [edi+10h] ecx +
mov ecx ds:dword_4D928C +
mov [edi+28h] edx +
mov eax [eax+44h] +
mov [edi+4] esi +
mov esi [esp+20h+var_10] +
mov [edi+14h] ecx +
shl eax 4 +
mov [edi+8] esi +
mov esi [esp+20h+var_C] +
mov [edi+2Ch] eax +
mov eax [esp+20h+arg_0] +
mov [edi+0Ch] esi +
mov esi [esp+20h+var_8] +
mov eax [eax+40h] +
mov [edi+1Ch] esi +
mov esi [esp+20h+var_20] +
mov [edi+30h] eax +
mov [edi+24h] esi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+20h+arg_0] +
xor edx edx +
mov [esp+20h+var_20] 0 +
mov eax [eax+18h] +
jmp loc_42D777  +
***
jmp loc_42D800  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov esi [esp+40h] +
mov edi [esp+48h] +
mov ebp [esp+4Ch] +
test ebx ebx +
jz loc_42D887  +
test esi esi +
jz loc_42D951  +
mov eax [ebx+8] +
mov dword ptr [esp+4] offset aOfOrdinaryMaps +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D600  +
mov eax [ebx+18h] +
mov dword ptr [esp+4] offset aOfMacroMapsD +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D600  +
mov eax [ebx+20h] +
mov dword ptr [esp+4] offset aIncludeStackDe +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D600  +
mov eax [ebx+28h] +
mov dword ptr [esp+4] offset aHighestLocatio +
mov [esp] esi +
mov [esp+8] eax +
call sub_47D600  +
test edi edi +
jnz loc_42D8F0  +
test ebp ebp +
jnz loc_42D890  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] offset aMacroLineMaps +
mov [esp] esi +
call sub_47D600  +
mov eax [ebx+18h] +
test eax eax +
jz loc_42D8D4  +
xor edi edi +
lea esi [esi+0] +
mov [esp+8] edi +
add edi 1 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] esi +
call loc_42D2F0  +
cmp edi ebp +
jz loc_42D8D4  +
cmp edi [ebx+18h] +
jb loc_42D8B0  +
mov [esp+40h] esi +
mov dword ptr [esp+44h] offset asc_4C7C99 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D600  +
***
mov dword ptr [esp+4] offset aOrdinaryLineMa +
mov [esp] esi +
call sub_47D600  +
mov edx [ebx+8] +
test edx edx +
jz loc_42D93C  +
xor eax eax +
lea esi [esi+0] +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+1Ch] eax +
call loc_42D2F0  +
mov eax [esp+1Ch] +
add eax 1 +
cmp eax edi +
jz loc_42D93C  +
cmp eax [ebx+8] +
jb loc_42D910  +
mov dword ptr [esp+4] offset asc_4C7C99 +
mov [esp] esi +
call sub_47D600  +
jmp loc_42D883  +
***
mov eax ds:_iob +
lea esi [eax+40h] +
jmp loc_42D823  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 44h +
mov edx [ecx] +
lea eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_4221D0  +
mov ebx [esp+48h+var_30] +
cmp ebx [esp+48h+arg_0] +
jz loc_42D990  +
xor eax eax +
add esp 44h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebp esp +
leave   +
jmp loc_42D960  +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [ecx+44h] +
lea edi [ecx+44h] +
test eax eax +
jz loc_42DA14  +
lea esi [esi+0] +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_42D9FE  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_42DA09  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_42D9F0  +
mov eax [ebp+54h] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [ebp+24h] +
mov [esp+28h+var_28] eax +
call free  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_42DA55  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
mov eax [eax] +
retn 4  +
lea eax [ecx+eax*8+8] +
mov eax [eax] +
retn 4  +
***
mov eax [esp+4] +
cmp eax 2 +
jle loc_42DA73  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
***
lea eax [ecx+eax*8+8] +
retn 4  +
***
mov eax [esp+arg_0] +
cmp eax 2 +
jle loc_42DA93  +
mov edx [ecx+24h] +
lea eax [edx+eax*8-18h] +
retn 4  +
lea eax [ecx+eax*8+8] +
retn 4  +
***
sub esp 38h +
mov edx [esp+38h+arg_4] +
mov ebx [esp+38h+arg_0] +
test edx edx +
jnz loc_42DAE0  +
cmp byte ptr [ebx+2Ch] 0 +
jz loc_42DB16  +
mov edx [ebx+30h] +
mov [eax] edx +
mov edx [ebx+34h] +
mov [eax+4] edx +
mov edx [ebx+38h] +
mov [eax+8] edx +
mov edx [ebx+3Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+40h] +
mov [eax+10h] edx +
add esp 38h +
pop ebx  +
retn 8  +
cmp edx 2 +
jle loc_42DB10  +
mov ecx [ebx+24h] +
lea edx [ecx+edx*8-18h] +
mov edx [edx] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_34] edx +
call sub_4221D0  +
mov eax [esp+38h+var_2C] +
add esp 38h +
pop ebx  +
retn 8  +
lea edx [ebx+edx*8+8] +
jmp loc_42DAEC  +
mov [esp+38h+var_2C] ecx +
mov ecx [ebx+8] +
lea edx [esp+38h+var_28] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_34] ecx +
call sub_4221D0  +
mov edx [esp+38h+var_28] +
mov eax [esp+38h+var_2C] +
mov [ebx+30h] edx +
mov edx [esp+38h+var_24] +
mov [ebx+34h] edx +
mov edx [esp+38h+var_20] +
mov [ebx+38h] edx +
mov edx [esp+38h+var_1C] +
mov [ebx+3Ch] edx +
mov edx [esp+38h+var_18] +
mov [ebx+40h] edx +
mov edx [ebx+28h] +
test edx edx +
jz loc_42DB5E  +
mov [ebx+38h] edx +
mov byte ptr [ebx+2Ch] 1 +
jmp loc_42DAB8  +
***
mov eax [esp+arg_0] +
mov byte ptr [ecx+2Ch] 0 +
mov [ecx+28h] eax +
retn 4  +
***
mov eax [ecx+44h] +
test eax eax +
jz loc_42DBA7  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_42DBA0  +
mov edx [ecx+54h] +
lea eax [edx+eax*4-0Ch] +
mov eax [eax] +
retn   +
***
lea eax [ecx+edx*4+48h] +
mov eax [eax] +
retn   +
***
xor eax eax +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFF8h +
push ebx  +
xor ebx ebx +
sub esp 0Ch +
mov eax [ecx+44h] +
mov byte ptr [ecx+58h] 1 +
lea edi [ecx+44h] +
test eax eax +
jz loc_42DBF4  +
nop   +
cmp ebx 1 +
lea eax [edi+ebx*4+4] +
jle loc_42DBDE  +
mov eax [ebp+54h] +
add eax esi +
mov ecx [eax] +
test ecx ecx +
jz loc_42DBE9  +
mov edx [ecx] +
call dword ptr [edx+4]  +
add ebx 1 +
add esi 4 +
cmp ebx [ebp+44h] +
jb loc_42DBD0  +
mov dword ptr [ebp+44h] 0 +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ecx+58h] +
test al al +
jnz locret_42DC28  +
sub esp 0Ch +
cmp dword ptr [esp+10h] 60000000h +
ja loc_42DC30  +
add esp 0Ch +
retn 4  +
***
call sub_42DBB0  +
mov eax 1 +
jmp loc_42DC25  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_4D58C8 +
mov [esp+14h+var_14] esi +
mov [ecx+4] eax +
call sub_452FA0  +
mov [esp+14h+var_14] esi +
mov [ebx+8] eax +
call strlen  +
mov [ebx+0Ch] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov ebx ecx +
sub esp 14h +
mov esi [esp+14h+arg_8] +
mov edx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov dword ptr [ecx] offset off_4D5928 +
mov [esp+14h+var_14] esi +
mov [ecx+8] edx +
mov [ecx+4] eax +
call sub_452FA0  +
mov [esp+14h+var_14] esi +
mov [ebx+0Ch] eax +
call strlen  +
mov [ebx+10h] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 0Ch  +
***
push ebp  +
add ecx 4 +
mov ebp esp +
sub esp 28h +
mov eax [ebp+8] +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov [ebp-0Ch] al +
lea eax [ebp-10h] +
mov [esp] eax +
call sub_47FD50  +
sub esp 4 +
leave   +
retn 8  +
***
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_0] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov [ecx-4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [ecx+24h] 0 +
mov byte ptr [ecx+28h] 0 +
mov dword ptr [ecx+40h] 0 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov dword ptr [ecx+4Ch] 0 +
mov dword ptr [ecx+50h] 0 +
mov byte ptr [ecx+54h] 0 +
mov [esp+28h+var_28] eax +
mov [ebp+var_C] 1 +
call sub_47FD50  +
sub esp 4 +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
cmp ebx [ecx+4] +
mov edx [ebp+arg_C] +
jz loc_42DDA0  +
cmp ebx 2 +
lea eax [ecx+ebx*8+8] +
jg loc_42DD97  +
mov ecx [ebp+arg_8] +
mov [eax+4] dl +
mov [eax] ecx +
test ebx ebx +
jnz loc_42DD8E  +
mov byte ptr [esi+2Ch] 0 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [ecx+24h] +
lea eax [eax+ebx*8-18h] +
jmp loc_42DD7E  +
mov eax [ebp+arg_8] +
lea ecx [ecx+4] +
mov [ebp+var_C] dl +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov [esp+28h+var_28] eax +
call sub_47FD50  +
sub esp 4 +
jmp loc_42DD86  +
***
push ebp  +
add ecx 44h +
mov ebp esp +
sub esp 18h +
lea eax [ebp+8] +
mov [esp] eax +
call sub_47FDF0  +
sub esp 4 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_42C640  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42DE29  +
cmp eax 60000000h +
mov esi eax +
ja loc_42DE22  +
mov eax [ebp+arg_4] +
mov [esp+38h+var_34] 0Ah +
mov [esp+38h+var_38] eax +
call strchr  +
test eax eax +
jz loc_42DE33  +
mov ecx ebx +
call sub_42DBB0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov [esp+38h+var_38] 10h +
call loc_481090  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_42DC40  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_47FDF0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42DDE0  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edx +
call sub_42C640  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42DF22  +
cmp edx 60000000h +
ja loc_42DF30  +
mov eax [ebx] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_30] 1 +
mov [ebp+var_2C] edx +
mov [esp+38h+var_38] eax +
call sub_42CBD0  +
mov edx [ebp+var_2C] +
cmp eax edx +
mov esi eax +
jz loc_42DF30  +
mov [esp+38h+var_38] 10h +
call loc_481090  +
mov [esp+38h+var_38] esi +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [esp+38h+var_34] eax +
call sub_42DC40  +
lea eax [ebp+var_1C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] edi +
sub esp 8 +
mov [esp+38h+var_38] eax +
call sub_47FDF0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_42DBB0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42DEA0  +
sub esp 8 +
leave   +
retn 4  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call sub_42C720  +
mov [esp+48h+var_44] esi +
mov edi eax +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_42C720  +
cmp byte ptr [ebx+58h] 0 +
jnz loc_42DFD4  +
cmp edi 60000000h +
ja loc_42DFCD  +
cmp eax 60000000h +
mov esi eax +
ja loc_42DFCD  +
mov eax [ebp+arg_8] +
mov [esp+48h+var_44] 0Ah +
mov [esp+48h+var_48] eax +
call strchr  +
test eax eax +
jz loc_42DFE0  +
mov ecx ebx +
call sub_42DBB0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx+44h] +
test eax eax +
jz loc_42E028  +
lea edx [eax-1] +
cmp edx 1 +
jle loc_42E070  +
mov edx [ebx+54h] +
lea eax [edx+eax*4-0Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_42E028  +
mov edx [ebx] +
mov eax [ecx] +
mov [ebp+var_2C] edx +
mov edx [ebp+arg_8] +
mov eax [eax+18h] +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_3C] edx +
mov edx [ebp+var_2C] +
mov [esp+48h+var_48] edx +
call eax  +
sub esp 10h +
test al al +
jnz loc_42DFD4  +
mov [esp+58h+var_58] 14h +
call loc_481090  +
mov edx [ebp+arg_8] +
mov [esp+58h+var_58] edi +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_50] edx +
mov ecx eax +
mov [ebp+var_2C] eax +
call sub_42DC80  +
mov eax [ebp+var_2C] +
lea ecx [ebx+44h] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
sub esp 0Ch +
mov [esp+58h+var_58] eax +
call sub_47FDF0  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
lea eax [ebx+edx*4+48h] +
jmp loc_42DFFA  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov dword ptr [esp+8] offset unk_4C7CEA +
mov [esp] eax +
mov [esp+4] edx +
call sub_42DF70  +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42C640  +
mov ecx ebx +
mov [esp+18h+var_10] offset unk_4C7CEA +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42DF70  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov [esp] eax +
call sub_42E0B0  +
sub esp 4 +
leave   +
retn   +
***
push ebx  +
mov ebx ecx +
sub esp 14h +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42C640  +
mov ecx [ebp+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_42DF70  +
mov ebx [ebp+var_4] +
sub esp 0Ch +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov [esp] eax +
mov [esp+4] edx +
call sub_42E110  +
sub esp 8 +
leave   +
retn 4  +
***
sub ecx 39h +
cmp ecx 9 +
ja loc_42E200  +
jmp ds:off_4C7E00[ecx*4]  +
mov ecx [edx+124h] +
mov [eax] ecx +
mov ecx [edx+128h] +
mov edx [edx+12Ch] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+13Ch] +
mov [eax] ecx +
mov ecx [edx+140h] +
mov edx [edx+144h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+130h] +
mov [eax] ecx +
mov ecx [edx+134h] +
mov edx [edx+138h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+148h] +
mov [eax] ecx +
mov ecx [edx+14Ch] +
mov edx [edx+150h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
mov ecx [edx+118h] +
mov [eax] ecx +
mov ecx [edx+11Ch] +
mov edx [edx+120h] +
mov [eax+4] ecx +
mov [eax+8] edx +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov esi [esp+28h] +
mov ecx [ebx+8] +
lea edx [esi+ecx] +
cmp edx [ebx+4] +
ja loc_42E270  +
mov eax [ebx] +
add ecx eax +
mov eax [esp+24h] +
mov [esp+8] esi +
mov [esp] ecx +
mov [esp+4] eax +
call memcpy  +
mov eax 1 +
add [ebx+8] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax edx +
shr eax 2 +
add edx eax +
mov eax [ebx] +
mov [ebx+4] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_452F50  +
mov ecx [ebx+8] +
mov [ebx] eax +
jmp loc_42E24A  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax ecx +
mov [ebp+var_20] ecx +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] eax +
mov eax ds:_stricmp +
mov [ebp+var_28] edx +
mov [esp+48h+var_44] ecx +
mov [ebp+var_24] eax +
call eax  +
test eax eax +
jnz loc_42E2E0  +
mov dword ptr [ebx] offset loc_42E230 +
mov eax ebx +
mov dword ptr [ebx+4] 0FFFFFFFFh +
mov dword ptr [ebx+8] 0FFFFFFFFh +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_20] +
mov [esp+48h+var_48] eax +
call strlen  +
mov ecx [ebp+arg_0] +
mov [esp+48h+var_48] ecx +
mov esi eax +
call strlen  +
mov edi eax +
lea eax [esi+eax+20h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ecx [esp+48h+var_28+3] +
mov [ebp+var_1C] ecx +
mov ecx [ebp+arg_0] +
and [ebp+var_1C] 0FFFFFFF0h +
mov esi [ebp+var_1C] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] esi +
call memcpy  +
mov edx [ebp+var_20] +
lea eax [esi+edi+1] +
mov byte ptr [esi+edi] 2Fh +
xor edi edi +
mov esi offset off_4CC5A0 +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_44] edx +
call strcpy  +
mov [ebp+var_2C] ebx +
mov ebx edi +
mov edi [ebp+var_24] +
nop   +
mov eax [esi] +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
call edi  +
test eax eax +
jz loc_42E3A0  +
add ebx 1 +
add esi 0Ch +
cmp ebx 8 +
jnz loc_42E350  +
mov eax [ebp+var_20] +
mov [esp+48h+var_40] offset aNoIconvImpleme +
mov ebx [ebp+var_2C] +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_38] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_48] eax +
call sub_43CB30  +
jmp loc_42E2BB  +
mov edi ebx +
mov ebx [ebp+var_2C] +
lea eax [edi+edi*2] +
lea eax ds:4CC5A0h[eax*4] +
mov edx [eax+4] +
mov eax [eax+8] +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov [ebx] edx +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_C] +
mov eax [ebx+8] +
mov edi [ebx] +
mov esi [ebx+4] +
add edi eax +
sub esi eax +
cmp esi 3 +
ja loc_42E530  +
cmp [esp+1Ch+arg_8] 0 +
jnz loc_42E6A6  +
mov eax [ebx+4] +
sub eax esi +
mov [ebx+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1Ch+arg_8] +
test ecx ecx +
jz loc_42E517  +
mov eax [esp+1Ch+arg_4] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov byte ptr [esp+1Ch+var_14] al +
jbe loc_42E588  +
mov [esp+1Ch+var_10] edi +
mov ebp ecx +
movzx ecx ds:byte_4C8B16[edx] +
movzx edi byte ptr [edx+4C8B10h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_42E5E1  +
add edx 1 +
cmp edx 7 +
jnz loc_42E556  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_42E524  +
sub [esp+1Ch+arg_8] 1 +
add [esp+1Ch+arg_4] 1 +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jnz loc_42E5CC  +
movzx eax ch +
mov [edi+1] al +
mov eax ecx +
shr eax 10h +
mov [edi+2] al +
mov eax 3 +
mov [edi] cl +
mov edx [esp+1Ch+arg_8] +
shr ecx 18h +
sub esi 4 +
mov [edi+eax] cl +
test edx edx +
jz loc_42E517  +
add edi 4 +
jmp loc_42E507  +
movzx eax ch +
mov [edi+2] al +
mov eax ecx +
shr eax 10h +
mov [edi+1] al +
xor eax eax +
mov [edi+3] cl +
jmp loc_42E5AF  +
cmp [esp+1Ch+arg_8] edx +
mov edi [esp+1Ch+var_10] +
jnb loc_42E5F2  +
mov ebx 16h +
jmp loc_42E57C  +
mov eax [esp+1Ch+arg_4] +
and cl byte ptr [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] edi +
mov edi edx +
movzx ecx cl +
lea ebp [eax+1] +
jmp loc_42E61A  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax [esp+1Ch+arg_4] +
cmp eax edi +
jnb loc_42E630  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov edx eax +
and edx 0FFFFFFC0h +
cmp dl 80h +
jz loc_42E608  +
jmp loc_42E577  +
lea eax [ecx-80h] +
mov edx edi +
mov edi [esp+1Ch+var_14] +
cmp eax 7FFFFF7Fh +
ja loc_42E577  +
cmp ecx 7FFh +
ja loc_42E655  +
cmp edx 2 +
ja loc_42E577  +
cmp ecx 0FFFFh +
ja loc_42E666  +
cmp edx 3 +
ja loc_42E577  +
cmp ecx 1FFFFFh +
ja loc_42E677  +
cmp edx 4 +
ja loc_42E577  +
cmp ecx 3FFFFFFh +
ja loc_42E688  +
cmp edx 5 +
ja loc_42E577  +
lea eax [ecx-0D800h] +
cmp eax 7FFh +
jbe loc_42E577  +
sub [esp+1Ch+arg_8] edx +
mov [esp+1Ch+arg_4] ebp +
jmp loc_42E592  +
mov eax [ebx+4] +
add esi 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edx +
call sub_452F50  +
mov edi [ebx+4] +
mov [ebx] eax +
sub eax esi +
add edi eax +
jmp loc_42E507  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax [esp+28h] +
mov ecx [eax] +
mov eax [esp+2Ch] +
test ecx ecx +
mov ebp [eax] +
mov eax 16h +
jnz loc_42E710  +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx] +
mov dword ptr [esp] 2 +
movzx esi al +
cmp esi 7Fh +
mov [esp+4] al +
jbe loc_42E760  +
mov edx [esp] +
mov [esp+8] ebx +
movzx ebx ds:byte_4C8B16[edx] +
movzx edi byte ptr [edx+4C8B10h] +
movzx eax bl +
not eax  +
and eax esi +
cmp eax edi +
jz loc_42E830  +
add edx 1 +
cmp edx 7 +
jnz loc_42E72D  +
add esp 0Ch +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [esp+28h] +
lea eax [ecx-1] +
mov [edi] eax +
mov edi [esp+24h] +
lea eax [ebx+1] +
mov [edi] eax +
cmp esi 0FFFFh +
mov eax [esp+30h] +
ja loc_42E7B8  +
cmp dword ptr [eax] 1 +
jbe loc_42E7BD  +
mov ebx [esp+20h] +
xor eax eax +
mov ecx esi +
test ebx ebx +
setnz al  +
mov [ebp+eax+0] cl +
setz al  +
mov ecx esi +
movzx eax al +
movzx edx ch +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_42E702  +
***
cmp dword ptr [eax] 3 +
ja loc_42E7D6  +
mov eax [esp+24h] +
mov [eax] ebx +
mov eax [esp+28h] +
mov [eax] ecx +
add esp 0Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+20h] +
lea eax [esi-10000h] +
and esi 3FFh +
shr eax 0Ah +
mov edx esi +
add eax 0D800h +
add edx 0DC00h +
test ecx ecx +
jz loc_42E940  +
mov [ebp+1] al +
movzx eax ah +
mov [ebp+0] al +
mov eax 2 +
mov [ebp+3] dl +
movzx edx dh +
mov [ebp+eax+0] dl +
mov eax [esp+2Ch] +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42E702  +
***
cmp ecx edx +
mov edi ebx +
mov ebx [esp+8] +
mov [esp] edx +
mov eax 16h +
jb loc_42E702  +
mov eax edi +
and al [esp+4] +
lea edi [ebx+1] +
mov [esp+4] ecx +
movzx esi al +
add edi 1 +
movzx eax byte ptr [edi-1] +
mov ecx eax +
and ecx 0FFFFFFC0h +
cmp cl 80h +
jnz loc_42E752  +
and eax 3Fh +
shl esi 6 +
add esi eax +
mov eax edi +
sub eax ebx +
cmp eax edx +
jb loc_42E856  +
lea eax [esi-80h] +
mov ecx [esp+4] +
mov [esp] edx +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFFFF7Fh +
ja loc_42E702  +
cmp esi 7FFh +
ja loc_42E8AA  +
cmp dword ptr [esp] 2 +
ja loc_42E702  +
cmp esi 0FFFFh +
ja loc_42E8C1  +
cmp dword ptr [esp] 3 +
mov eax 2Ah +
ja loc_42E702  +
cmp esi 1FFFFFh +
ja loc_42E8D8  +
cmp dword ptr [esp] 4 +
mov eax 2Ah +
ja loc_42E702  +
cmp esi 3FFFFFFh +
ja loc_42E8EF  +
cmp dword ptr [esp] 5 +
mov eax 2Ah +
ja loc_42E702  +
lea eax [esi-0D800h] +
mov edx eax +
mov eax 2Ah +
cmp edx 7FFh +
jbe loc_42E702  +
mov edx [esp+24h] +
mov [edx] edi +
mov edi ecx +
sub edi [esp] +
cmp esi 10FFFFh +
mov edx edi +
mov edi [esp+28h] +
mov [edi] edx +
jbe loc_42E772  +
mov edi [esp+24h] +
mov esi [esp+28h] +
mov [edi] ebx +
mov [esi] ecx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [ebp+0] al +
movzx eax ah +
mov [ebp+1] al +
mov eax 3 +
mov [ebp+2] dl +
jmp loc_42E80F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+3Ch] +
mov eax [ebx+8] +
mov esi ebx +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
mov eax [esp+38h] +
test eax eax +
jnz loc_42E9A0  +
mov eax [esi+4] +
sub eax ebp +
mov [esi+8] eax +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov edx 2 +
movzx eax byte ptr [eax] +
movzx ecx al +
cmp ecx 7Fh +
mov [esp+0Fh] al +
jbe loc_42E9F0  +
movzx ebx ds:byte_4C8B16[edx] +
movzx edi byte ptr [edx+4C8B10h] +
movzx eax bl +
not eax  +
and eax ecx +
cmp eax edi +
jz loc_42EA80  +
add edx 1 +
cmp edx 7 +
jnz loc_42E9B8  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_42E992  +
***
mov eax [esp+38h] +
lea ebx [eax-1] +
mov eax [esp+34h] +
add eax 1 +
cmp ecx 0FFFFh +
ja loc_42EA46  +
cmp ebp 1 +
jbe loc_42EA4B  +
mov edi [esp+30h] +
xor edx edx +
test edi edi +
mov edi [esp+8] +
setnz dl  +
mov [edi+edx] cl +
setz dl  +
movzx ecx ch +
add dword ptr [esp+8] 2 +
movzx edx dl +
sub ebp 2 +
mov [edi+edx] cl +
test ebx ebx +
jz loc_42E985  +
mov [esp+34h] eax +
mov [esp+38h] ebx +
jmp loc_42E97D  +
***
cmp ebp 3 +
ja loc_42EA90  +
mov eax [esi+4] +
add ebp 100h +
mov edx [esi] +
add eax 100h +
mov [esi+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_452F50  +
mov [esi] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [esi+4] +
add [esp+8] eax +
jmp loc_42E97D  +
***
cmp edx [esp+38h] +
jbe loc_42EAF6  +
mov ebx 16h +
jmp loc_42E9E2  +
***
mov edi [esp+30h] +
lea edx [ecx-10000h] +
and ecx 3FFh +
shr edx 0Ah +
add ecx 0DC00h +
add edx 0D800h +
test edi edi +
jz loc_42EAE0  +
mov edi [esp+8] +
mov [edi+1] dl +
movzx edx dh +
mov [edi] dl +
mov edx 2 +
mov [edi+3] cl +
mov edi [esp+8] +
movzx ecx ch +
sub ebp 4 +
add dword ptr [esp+8] 4 +
mov [edi+edx] cl +
jmp loc_42EA31  +
***
mov edi [esp+8] +
mov [edi] dl +
movzx edx dh +
mov [edi+1] dl +
mov edx 3 +
mov [edi+2] cl +
jmp loc_42EAC7  +
***
mov eax [esp+34h] +
mov edi edx +
and bl [esp+0Fh] +
add eax 1 +
movzx ecx bl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 0FFFFFFC0h +
cmp dl 80h +
jnz loc_42E9DD  +
mov edx eax +
and ebx 3Fh +
sub edx [esp+34h] +
shl ecx 6 +
add ecx ebx +
cmp edx edi +
jb loc_42EB06  +
lea ebx [ecx-80h] +
mov edx edi +
cmp ebx 7FFFFF7Fh +
ja loc_42E9DD  +
cmp ecx 7FFh +
ja loc_42EB4F  +
cmp edi 2 +
ja loc_42E9DD  +
cmp ecx 0FFFFh +
ja loc_42EB60  +
cmp edx 3 +
ja loc_42E9DD  +
cmp ecx 1FFFFFh +
ja loc_42EB71  +
cmp edx 4 +
ja loc_42E9DD  +
cmp ecx 3FFFFFFh +
ja loc_42EB82  +
cmp edx 5 +
ja loc_42E9DD  +
lea ebx [ecx-0D800h] +
cmp ebx 7FFh +
jbe loc_42E9DD  +
mov ebx [esp+38h] +
sub ebx edx +
cmp ecx 10FFFFh +
ja loc_42E9DD  +
jmp loc_42E9FE  +
***
push ebp  +
mov eax 7 +
push edi  +
push esi  +
push ebx  +
sub esp 8 +
mov esi [esp+2Ch] +
cmp dword ptr [esi] 3 +
ja loc_42EBD0  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov edi [eax] +
mov eax [esp+24h] +
mov ebx [eax] +
mov eax 16h +
test ebx ebx +
jz loc_42EBC5  +
movzx eax byte ptr [edi] +
mov edx 2 +
movzx ecx al +
cmp ecx 7Fh +
mov [esp] al +
jbe loc_42EC26  +
mov [esp+4] edi +
mov ebp ecx +
movzx ecx ds:byte_4C8B16[edx] +
movzx edi byte ptr [edx+4C8B10h] +
movzx eax cl +
not eax  +
and eax ebp +
cmp eax edi +
jz loc_42EC8A  +
add edx 1 +
cmp edx 7 +
jnz loc_42EBFE  +
mov eax 2Ah +
jmp loc_42EBC5  +
***
mov eax [esp+24h] +
sub ebx 1 +
add edi 1 +
mov [eax] ebx +
mov eax [esp+20h] +
mov [eax] edi +
mov edx [esp+1Ch] +
mov eax [esp+28h] +
test edx edx +
mov eax [eax] +
jz loc_42EC73  +
movzx edx ch +
mov [eax+2] dl +
mov edx ecx +
shr edx 10h +
mov [eax+1] dl +
xor edx edx +
mov [eax+3] cl +
shr ecx 18h +
mov [eax+edx] cl +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
xor eax eax +
sub dword ptr [esi] 4 +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx ch +
mov [eax+1] dl +
mov edx ecx +
shr edx 10h +
mov [eax+2] dl +
mov edx 3 +
mov [eax] cl +
jmp loc_42EC59  +
***
cmp ebx edx +
mov edi [esp+4] +
mov eax 16h +
jb loc_42EBC5  +
and cl [esp] +
lea ebp [edi+1] +
mov [esp] ebx +
movzx ecx cl +
jmp loc_42ECC0  +
and eax 3Fh +
shl ecx 6 +
add ecx eax +
mov eax ebp +
sub eax edi +
cmp eax edx +
jnb loc_42ECD6  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ebx eax +
and ebx 0FFFFFFC0h +
cmp bl 80h +
jz loc_42ECB0  +
jmp loc_42EC1F  +
***
lea edi [ecx-80h] +
mov ebx [esp] +
mov eax 2Ah +
cmp edi 7FFFFF7Fh +
ja loc_42EBC5  +
cmp ecx 7FFh +
ja loc_42ECFE  +
cmp edx 2 +
ja loc_42EBC5  +
cmp ecx 0FFFFh +
ja loc_42ED14  +
cmp edx 3 +
mov eax 2Ah +
ja loc_42EBC5  +
cmp ecx 1FFFFFh +
ja loc_42ED2A  +
cmp edx 4 +
mov eax 2Ah +
ja loc_42EBC5  +
cmp ecx 3FFFFFFh +
ja loc_42ED40  +
cmp edx 5 +
mov eax 2Ah +
ja loc_42EBC5  +
lea edi [ecx-0D800h] +
mov eax 2Ah +
cmp edi 7FFh +
jbe loc_42EBC5  +
mov eax [esp+20h] +
sub ebx edx +
mov [eax] ebp +
mov eax [esp+24h] +
mov [eax] ebx +
jmp loc_42EC38  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+4Ch] +
mov eax [ebx+8] +
mov edi [ebx] +
mov ebp [ebx+4] +
add edi eax +
mov [esp+8] edi +
sub ebp eax +
cmp dword ptr [esp+48h] 3 +
mov esi 16h +
ja loc_42EDB4  +
mov eax [esp+48h] +
test eax eax +
jnz loc_42EE10  +
mov eax [ebx+4] +
sub eax ebp +
mov [ebx+8] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+40h] +
test edx edx +
jz loc_42EE23  +
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax] +
movzx eax byte ptr [eax+1] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+2] +
shl edx 8 +
add eax edx +
mov edx 3 +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx+edx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_42EE48  +
mov esi 2Ah +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_42EDAC  +
***
test esi esi +
jz loc_42ED8B  +
cmp esi 7 +
jz loc_42EF06  +
jmp loc_42EDFE  +
***
mov eax [esp+44h] +
mov ecx [esp+44h] +
movzx edx byte ptr [eax+3] +
movzx eax byte ptr [eax+2] +
shl edx 18h +
shl eax 10h +
add eax edx +
movzx edx byte ptr [ecx+1] +
shl edx 8 +
add eax edx +
xor edx edx +
jmp loc_42EDE1  +
***
cmp eax 7FFFFFFEh +
ja loc_42EDF9  +
cmp eax 7Fh +
jbe loc_42EEF5  +
lea edx [esp+20h] +
mov ecx 1 +
mov [esp+0Ch] ebp +
mov [esp+4Ch] ebx +
jmp loc_42EE74  +
mov ecx edi +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
lea esi [edx-1] +
mov [edx-1] bl +
lea edi [ecx+1] +
ja loc_42EE70  +
movzx ebp ds:byte_4C8B22[edi] +
test eax ebp +
jnz loc_42EE70  +
mov ebp [esp+0Ch] +
lea esi [edx-2] +
or al ds:byte_4C8B1D[ecx] +
mov ebx [esp+4Ch] +
cmp edi ebp +
mov [edx-2] al +
ja loc_42EF06  +
lea eax [esp+20h] +
cmp esi eax +
jnb loc_42EEE2  +
mov ecx [esp+8] +
mov edx esi +
nop   +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ecx 1 +
mov [ecx-1] al +
lea eax [esp+20h] +
cmp edx eax +
jnz loc_42EEC0  +
add esi 1 +
lea eax [esp+21h] +
sub eax esi +
add [esp+8] eax +
sub ebp edi +
xor esi esi +
add dword ptr [esp+44h] 4 +
sub dword ptr [esp+48h] 4 +
jmp loc_42ED97  +
***
test ebp ebp +
mov edi 1 +
mov [esp+1Fh] al +
lea esi [esp+1Fh] +
jnz loc_42EEB8  +
mov eax [ebx+4] +
add ebp 100h +
mov edx [ebx] +
add eax 100h +
mov [ebx+4] eax +
mov [esp+4] eax +
mov [esp] edx +
call sub_452F50  +
mov [ebx] eax +
sub eax ebp +
mov [esp+8] eax +
mov eax [ebx+4] +
add [esp+8] eax +
jmp loc_42ED8B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+4Ch] +
mov eax [ebp+8] +
mov edi [ebp+0] +
mov esi [ebp+4] +
add edi eax +
mov [esp+8] edi +
sub esi eax +
cmp dword ptr [esp+48h] 1 +
jbe loc_42EFB0  +
mov edx [esp+40h] +
mov ebx [esp+44h] +
test edx edx +
setz al  +
setnz dl  +
movzx eax al +
movzx ecx dl +
movzx eax byte ptr [ebx+eax] +
movzx ecx byte ptr [ebx+ecx] +
shl eax 8 +
lea ebp [eax+ecx] +
lea eax [ebp-0DC00h] +
cmp eax 3FFh +
ja loc_42EFE0  +
mov ebx 2Ah +
call ds:__imp__errno  +
mov [eax] ebx +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx 16h +
mov eax [esp+48h] +
test eax eax +
jnz loc_42F166  +
mov ebp [esp+4Ch] +
mov eax [ebp+4] +
sub eax esi +
mov [ebp+8] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [ebp-0D800h] +
cmp eax 3FFh +
ja loc_42F000  +
cmp dword ptr [esp+48h] 3 +
ja loc_42F063  +
mov ebx 16h +
jmp loc_42EF99  +
***
cmp ebp 7Fh +
ja loc_42F0A3  +
mov eax ebp +
test esi esi +
mov [esp+1Fh] al +
lea edi [esp+1Fh] +
mov ecx 1 +
jnz loc_42F0FC  +
mov eax [esp+4Ch] +
add esi 100h +
mov edx [esp+4Ch] +
mov eax [eax+4] +
mov [esp+8] eax +
add eax 100h +
mov [edx+4] eax +
mov edx [edx] +
mov [esp+4] eax +
mov [esp] edx +
call sub_452F50  +
mov edx [esp+4Ch] +
mov [edx] eax +
sub eax esi +
mov [esp+8] eax +
mov eax [edx+4] +
add [esp+8] eax +
jmp loc_42EF5C  +
***
test dl dl +
jnz loc_42F140  +
mov eax [esp+44h] +
mov edx 2 +
movzx eax byte ptr [eax+3] +
shl eax 8 +
mov ebx [esp+44h] +
movzx edx byte ptr [ebx+edx] +
add eax edx +
lea edx [eax-0DC00h] +
cmp edx 3FFh +
ja loc_42EF94  +
mov edx ebp +
shl edx 0Ah +
lea ebp [eax+edx-35FDC00h] +
mov eax ebp +
mov ebx 1 +
lea edx [esp+20h] +
mov [esp+0Ch] ebp +
jmp loc_42F0B8  +
mov ebx ecx +
mov edx edi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea edi [edx-1] +
lea ecx [ebx+1] +
ja loc_42F0B4  +
movzx ebp ds:byte_4C8B22[ecx] +
test eax ebp +
jnz loc_42F0B4  +
or al ds:byte_4C8B1D[ebx] +
cmp ecx esi +
mov ebp [esp+0Ch] +
lea edi [edx-2] +
mov [edx-2] al +
ja loc_42F020  +
lea eax [esp+20h] +
cmp edi eax +
jnb loc_42F124  +
mov edx [esp+8] +
mov eax edi +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+20h] +
cmp eax ebx +
jnz loc_42F102  +
add edi 1 +
lea eax [esp+21h] +
sub eax edi +
add [esp+8] eax +
sub esi ecx +
cmp ebp 0FFFFh +
jbe loc_42F155  +
add dword ptr [esp+44h] 4 +
xor ebx ebx +
sub dword ptr [esp+48h] 4 +
jmp loc_42EFB5  +
***
mov eax [esp+44h] +
mov edx 3 +
movzx eax byte ptr [eax+2] +
shl eax 8 +
jmp loc_42F07B  +
***
add dword ptr [esp+44h] 2 +
xor ebx ebx +
sub dword ptr [esp+48h] 2 +
jmp loc_42EFB5  +
***
test ebx ebx +
jz loc_42EF5C  +
cmp ebx 7 +
jz loc_42F020  +
jmp loc_42EF99  +
***
push ebp  +
mov eax 16h +
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+2Ch] +
cmp dword ptr [edi] 3 +
ja loc_42F1A0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+24h] +
mov eax [esp+28h] +
test ecx ecx +
mov edx [eax] +
jnz loc_42F1F0  +
movzx eax byte ptr [edx+3] +
movzx ecx byte ptr [edx+2] +
shl eax 18h +
shl ecx 10h +
add eax ecx +
movzx ecx byte ptr [edx+1] +
shl ecx 8 +
add eax ecx +
xor ecx ecx +
movzx edx byte ptr [edx+ecx] +
add eax edx +
lea edx [eax-0D800h] +
cmp edx 7FFh +
ja loc_42F210  +
add esp 10h +
mov eax 2Ah +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
shl ecx 18h +
shl eax 10h +
add eax ecx +
movzx ecx byte ptr [edx+2] +
shl ecx 8 +
add eax ecx +
mov ecx 3 +
jmp loc_42F1C9  +
***
cmp eax 7FFFFFFEh +
ja loc_42F1DD  +
mov esi [esp+30h] +
cmp eax 7Fh +
mov ebp [esi] +
jbe loc_42F2D0  +
lea edx [esp+10h] +
mov ebx 1 +
jmp loc_42F235  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_42F231  +
movzx edi ds:byte_4C8B22[ecx] +
test eax edi +
jnz loc_42F231  +
or al ds:byte_4C8B1D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+34h] +
mov eax [eax] +
cmp ecx eax +
ja loc_42F2E7  +
lea ebx [esp+10h] +
cmp esi ebx +
jnb loc_42F2A6  +
mov edx esi +
mov ebx ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
movzx eax byte ptr [edx-1] +
add ebx 1 +
mov [ebx-1] al +
lea eax [esp+10h] +
cmp edx eax +
jnz loc_42F280  +
lea eax [esp+11h] +
add esi 1 +
sub eax esi +
add ebp eax +
mov eax [esp+34h] +
mov eax [eax] +
mov esi [esp+34h] +
sub eax ecx +
mov [esi] eax +
mov eax [esp+30h] +
mov [eax] ebp +
mov eax [esp+28h] +
add dword ptr [eax] 4 +
mov eax [esp+2Ch] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42F195  +
***
mov [esp+0Fh] al +
mov eax [esp+34h] +
lea esi [esp+0Fh] +
mov ecx 1 +
mov eax [eax] +
test eax eax +
jnz loc_42F277  +
mov eax 7 +
jmp loc_42F195  +
***
jmp loc_42F300  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+2Ch] +
mov ebx [esp+28h] +
mov edx [eax] +
mov eax [esp+30h] +
mov ecx [eax] +
mov eax 16h +
cmp ecx 1 +
jbe loc_42F350  +
xor eax eax +
test ebx ebx +
setz al  +
movzx eax byte ptr [edx+eax] +
shl eax 8 +
test ebx ebx +
setnz bl  +
movzx esi bl +
movzx edi byte ptr [edx+esi] +
add edi eax +
mov eax 2Ah +
lea esi [edi-0DC00h] +
cmp esi 3FFh +
ja loc_42F358  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [edi-0D800h] +
cmp eax 3FFh +
ja loc_42F410  +
cmp ecx 3 +
mov eax 16h +
jbe loc_42F350  +
test bl bl +
jz loc_42F4A0  +
movzx eax byte ptr [edx+2] +
mov ecx 3 +
shl eax 8 +
movzx edx byte ptr [edx+ecx] +
add edx eax +
mov eax 2Ah +
lea ecx [edx-0DC00h] +
cmp ecx 3FFh +
ja loc_42F350  +
mov eax [esp+34h] +
shl edi 0Ah +
lea edi [edx+edi-35FDC00h] +
mov eax [eax] +
mov [esp] eax +
mov eax edi +
mov ebx 1 +
lea edx [esp+14h] +
jmp loc_42F3C4  +
mov ebx ecx +
mov edx esi +
mov ecx eax +
and ecx 3Fh +
shr eax 6 +
or ecx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] cl +
lea esi [edx-1] +
lea ecx [ebx+1] +
ja loc_42F3C0  +
movzx ebp ds:byte_4C8B22[ecx] +
test eax ebp +
jnz loc_42F3C0  +
or al ds:byte_4C8B1D[ebx] +
lea esi [edx-2] +
mov [edx-2] al +
mov eax [esp+38h] +
mov eax [eax] +
cmp ecx eax +
jbe loc_42F495  +
mov eax 7 +
jmp loc_42F350  +
***
mov eax [esp+34h] +
cmp edi 7Fh +
mov eax [eax] +
mov [esp] eax +
ja loc_42F3B3  +
mov eax edi +
mov ecx 1 +
mov [esp+13h] al +
mov eax [esp+38h] +
lea esi [esp+13h] +
mov eax [eax] +
test eax eax +
jz loc_42F402  +
mov edx [esp] +
mov eax esi +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
mov [edx-1] bl +
lea ebx [esp+14h] +
cmp eax ebx +
jnz loc_42F440  +
lea eax [esp+15h] +
add esi 1 +
sub eax esi +
add [esp] eax +
mov eax [esp+38h] +
mov eax [eax] +
mov esi [esp+38h] +
sub eax ecx +
cmp edi 0FFFFh +
mov [esi] eax +
mov eax [esp+34h] +
mov esi [esp] +
mov [eax] esi +
mov eax [esp+2Ch] +
jbe loc_42F4B1  +
add dword ptr [eax] 4 +
mov eax [esp+30h] +
sub dword ptr [eax] 4 +
xor eax eax +
jmp loc_42F350  +
***
lea edx [esp+14h] +
cmp esi edx +
jb loc_42F437  +
jmp loc_42F467  +
***
movzx eax byte ptr [edx+3] +
mov ecx 2 +
shl eax 8 +
jmp loc_42F387  +
***
add dword ptr [eax] 2 +
mov eax [esp+30h] +
sub dword ptr [eax] 2 +
xor eax eax +
jmp loc_42F350  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edx [ebx+2A0h] +
mov ecx [ebx+278h] +
mov esi [ebx+27Ch] +
movzx edi byte ptr [ebx+2A6h] +
cmp edx 1Fh +
jbe loc_42F630  +
mov edx edi +
mov eax offset aUtf32be +
test dl dl +
mov edx offset aUtf32le +
cmovz eax edx +
mov edx offset aUtf8 +
test ecx ecx +
cmovz ecx edx +
test esi esi +
cmovz esi eax +
mov [esp] edx +
lea eax [esp+10h] +
mov edx ebx +
call sub_42E290  +
mov eax [esp+10h] +
mov ecx offset aUtf8 +
mov edx ebx +
mov [ebx+118h] eax +
mov eax [esp+14h] +
mov [ebx+11Ch] eax +
mov eax [ebx+298h] +
mov [ebx+120h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42E290  +
mov eax [esp+10h] +
mov [ebx+124h] eax +
mov eax [esp+14h] +
mov [ebx+128h] eax +
mov eax [ebx+298h] +
mov [ebx+12Ch] eax +
mov eax edi +
test al al +
jz loc_42F654  +
mov ecx offset aUtf16be +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42E290  +
mov eax [esp+10h] +
mov ecx offset aUtf32be +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42E290  +
mov eax [esp+10h] +
mov ecx esi +
mov edx ebx +
mov [ebx+13Ch] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+144h] 20h +
mov [ebx+140h] eax +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42E290  +
mov eax [esp+10h] +
mov [ebx+148h] eax +
mov eax [esp+14h] +
mov [ebx+14Ch] eax +
mov eax [ebx+2A0h] +
mov [ebx+150h] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp edx 0Fh +
mov eax offset aUtf8 +
jbe loc_42F50D  +
mov edx edi +
mov eax offset aUtf16be +
test dl dl +
mov edx offset aUtf16le +
cmovz eax edx +
jmp loc_42F50D  +
***
mov ecx offset aUtf16le +
mov edx ebx +
lea eax [esp+10h] +
mov dword ptr [esp] offset aUtf8 +
call sub_42E290  +
mov eax [esp+10h] +
mov ecx offset aUtf32le +
mov [ebx+130h] eax +
mov eax [esp+14h] +
mov dword ptr [ebx+138h] 10h +
mov [ebx+134h] eax +
jmp loc_42F5C5  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+34h] +
mov esi [esp+30h] +
cmp ebx 7Eh +
ja loc_42F740  +
mov dword ptr [esp] 1 +
mov [esp+13h] bl +
mov dword ptr [esp+18h] 1 +
call sub_452ED0  +
mov edx [esi+11Ch] +
lea ecx [esp+14h] +
mov dword ptr [esp+1Ch] 0 +
mov [esp+14h] eax +
mov eax [esi+118h] +
mov [esp+0Ch] ecx +
lea ecx [esp+13h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
test al al +
jz loc_42F764  +
cmp dword ptr [esp+1Ch] 1 +
jz loc_42F784  +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xLxI +
mov dword ptr [esp+4] 4 +
call sub_43CB30  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+8] offset aCharacter0xL_0 +
mov dword ptr [esp+4] 4 +
call sub_43CB30  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aConvertingToEx +
mov dword ptr [esp+4] 4 +
call sub_43CE30  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+14h] +
movzx ebx byte ptr [edx] +
mov [esp] edx +
call free  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 18h +
mov [esp+18h+var_18] 40h +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 8 +
call sub_452ED0  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [ecx] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
retn   +
***
sub esp 18h +
mov edx [ecx+4] +
mov eax [ecx+8] +
cmp edx eax +
jge loc_42F820  +
mov eax [ecx] +
lea ecx [edx+1] +
mov [ebx+4] ecx +
mov ebx [esp+18h+arg_4] +
mov ecx [esp+18h+arg_0] +
mov [eax+edx*8+4] ebx +
mov [eax+edx*8] ecx +
add esp 18h +
pop ebx  +
retn 8  +
lea edx [eax+eax] +
mov [ecx+8] edx +
mov edx [ecx] +
shl eax 4 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_452F50  +
mov edx [ebx+4] +
mov [ebx] eax +
jmp loc_42F802  +
***
push edi  +
mov edi ecx +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
test eax eax +
jle loc_42F880  +
mov eax [ebx] +
cmp eax 60000000h +
ja loc_42F867  +
mov ecx [ebx+4] +
add ecx eax +
mov [ebx] ecx +
mov [esp+28h+var_28] eax +
mov ecx edi +
add esi 1 +
mov [esp+28h+var_24] eax +
call sub_42F7F0  +
sub esp 8 +
cmp esi [ebp+arg_0] +
jnz loc_42F857  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_18] +
mov ebx [esp+2Ch+arg_1C] +
mov eax [eax] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+248h] 0 +
jnz loc_42F9C0  +
cmp byte ptr [eax+268h] 0 +
jz loc_42FAE3  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+28Ah] 0 +
jle loc_42F9C0  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aC99SUniversalC +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
mov eax [esp+2Ch+var_10] +
movzx edx byte ptr [eax-1] +
mov eax 4 +
cmp dl 75h +
jz loc_42F92E  +
cmp dl 55h +
mov al 8 +
jz loc_42F92E  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aIn_cpp_valid_u +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
mov eax 4 +
mov ebp [esp+2Ch+var_10] +
xor edi edi +
mov [esp+2Ch+var_14] eax +
movzx edx byte ptr [ebp+0] +
test byte ptr [edx+edx+4D0721h] 1 +
jz loc_42F986  +
add ebp 1 +
test ebx ebx +
jz loc_42F969  +
test esi esi +
jz loc_42FCCE  +
mov ecx [ebx] +
cmp ecx 60000000h +
ja loc_42F966  +
mov eax [ebx+4] +
add eax ecx +
mov [ebx] eax +
mov [esi+4] ecx +
movzx edx ds:byte_4D30E0[edx] +
shl edi 4 +
add edi edx +
sub [esp+2Ch+var_14] 1 +
jz loc_42FA10  +
cmp ebp [esp+2Ch+arg_8] +
jb loc_42F938  +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
setnz cl  +
test ebx ebx +
setnz dl  +
test cl cl +
mov eax edx +
jz loc_42FE6D  +
test dl dl +
jz loc_42FE6D  +
mov eax [esp+2Ch+arg_14] +
mov dword ptr [eax] 0 +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jz loc_42F8F4  +
mov edi [esp+2Ch+arg_C] +
test edi edi +
jnz loc_42F8F4  +
mov eax [esp+2Ch+var_10] +
movzx eax byte ptr [eax-1] +
mov [esp+2Ch+var_24] offset aTheMeaningOfCI +
mov [esp+2Ch+var_28] 6 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43CB70  +
jmp loc_42F8F4  +
mov eax [esp+2Ch+arg_C] +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
test eax eax +
setnz al  +
sub esi 2 +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
cmp edi 9Fh +
jbe loc_42FA86  +
test edi edi +
js loc_42FA44  +
lea edx [edi-0D800h] +
cmp edx 7FFh +
ja loc_42FAA2  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset a_SIsNotAValidU +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_20] ebp +
mov eax [esp+2Ch+arg_0] +
mov edi 1 +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
mov eax [esp+2Ch+arg_14] +
mov [eax] edi +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+248h] 0 +
jnz loc_42FA32  +
cmp edi 24h +
jz loc_42FA32  +
cmp edi 40h +
jz loc_42FA32  +
cmp edi 60h +
jnz loc_42FA44  +
cmp edi 24h +
jz loc_42FB00  +
test al al +
jz loc_42FA73  +
cmp edi 10FFFFh +
jbe loc_42FB40  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalChara +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
jmp loc_42FA73  +
mov [esp+2Ch+var_24] offset aUniversalCha_0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
jmp loc_42F8F4  +
test al al +
jz loc_42FA73  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+262h] 0 +
jz loc_42FB40  +
cmp byte ptr [eax+264h] 0 +
jz loc_42FB28  +
cmp byte ptr [eax+0Ah] 0 +
jz loc_42FD0D  +
mov eax [esp+2Ch+arg_10] +
mov edi 24h +
mov dword ptr [eax] 24h +
mov byte ptr [eax+4] 0 +
jmp loc_42FA73  +
xor edx edx +
mov ecx 73Ch +
lea eax [edx+ecx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
cmp ds:dword_4C8B44[eax*8] edi +
jb loc_42FC40  +
cmp edx eax +
mov ecx eax +
jnz loc_42FB47  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_42FC55  +
mov eax [esp+2Ch+arg_0] +
mov ecx 8 +
cmp byte ptr [eax+274h] 0 +
jnz loc_42FBA3  +
cmp byte ptr [eax+268h] 0 +
mov cl 1 +
jnz loc_42FBA3  +
cmp byte ptr [eax+248h] 0 +
jz loc_42FC55  +
mov cl 4 +
movzx eax ds:word_4C8B40[edx*8] +
test ax cx +
jz loc_42FAB7  +
mov esi [esp+2Ch+arg_0] +
cmp byte ptr [esi+274h] 0 +
jnz loc_42FCC4  +
mov ebx [esp+2Ch+arg_0] +
mov ecx eax +
xor esi esi +
and ecx 2 +
cmp byte ptr [ebx+268h] 0 +
cmovnz esi ecx +
movzx ebx ds:byte_4C8B42[edx*8] +
test bl bl +
jz loc_42FC5F  +
mov ecx [esp+2Ch+arg_10] +
cmp bl [ecx+4] +
jnb loc_42FC5F  +
mov dword ptr [ecx+8] 3 +
mov eax [esp+2Ch+arg_10] +
test si si +
mov [eax+4] bl +
jz loc_42FA73  +
cmp [esp+2Ch+arg_C] 1 +
jnz loc_42FA73  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] offset aUniversalCha_1 +
mov [esp+2Ch+var_28] 3 +
sub ebp eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
jmp loc_42FA73  +
lea edx [eax+1] +
cmp ecx edx +
jnz loc_42FB47  +
nop   +
lea esi [esi+0] +
jmp loc_42FB66  +
mov ecx 0Dh +
jmp loc_42FBA3  +
test ah 1 +
jz loc_42FCEA  +
mov eax [esp+2Ch+arg_10] +
mov ecx [eax] +
lea eax [edi-1161h] +
cmp eax 14h +
mov [esp+2Ch+var_10] eax +
ja loc_42FD31  +
sub ecx 1100h +
cmp ecx 12h +
lea eax [edi-11A8h] +
ja loc_42FCB1  +
cmp eax 1Ah +
jbe loc_42FD65  +
cmp [esp+2Ch+var_10] 14h +
jbe loc_42FD65  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
test bl bl +
jnz loc_42FBF6  +
mov eax [esp+2Ch+arg_10] +
mov [eax] edi +
jmp loc_42FBF6  +
mov esi eax +
and esi 10h +
jmp loc_42FBDA  +
mov [esp+2Ch+var_24] offset a_cpp_valid_ucn +
mov [esp+2Ch+var_28] 434h +
mov [esp+2Ch+var_2C] offset a____GccLibcppC +
call sub_424560  +
test al 80h +
jnz loc_42FCB1  +
test al 40h +
jz loc_42FD7E  +
mov ecx [esp+2Ch+arg_10] +
mov eax 1 +
mov edx [ecx+8] +
test edx edx +
cmovg eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42FCB1  +
mov byte ptr [eax+264h] 0 +
mov [esp+2Ch+var_24] offset aInIdentifierOr +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
jmp loc_42FB28  +
lea eax [edi-11A8h] +
cmp eax 1Ah +
ja loc_42FD9F  +
sub ecx 0AC00h +
cmp ecx 2BA3h +
ja loc_42FCB1  +
mov eax ecx +
mov edx 24924925h +
shr eax 2 +
mul  edx +
imul edx edx +
cmp ecx edx +
jnz loc_42FCB1  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42FCB1  +
test al 20h +
jz loc_42FE5D  +
mov ecx [esp+2Ch+arg_10] +
mov eax 2 +
cmp dword ptr [ecx+8] 2 +
cmovge eax [ecx+8] +
mov [ecx+8] eax +
jmp loc_42FCB1  +
cmp edi 338h +
jz loc_42FCB1  +
ja loc_43030F  +
cmp edi 311h +
jz loc_4302FC  +
lea esi [esi+0] +
ja loc_43021C  +
cmp edi 307h +
jz loc_4301D5  +
ja loc_4311A5  +
cmp edi 302h +
jz loc_43115C  +
jbe loc_431C47  +
cmp edi 304h +
jz loc_430173  +
jb loc_430031  +
cmp edi 306h +
jnz loc_42FF8B  +
cmp ecx 3A5h +
jz loc_42FC92  +
ja loc_42FEF5  +
cmp ecx 65h +
jz loc_42FC92  +
ja loc_42FEBF  +
cmp ecx 49h +
lea esi [esi+0] +
jz loc_42FC92  +
ja loc_42FE9F  +
cmp ecx 45h +
nop   +
lea esi [esi+0] +
jz loc_42FC92  +
cmp ecx 47h +
jz loc_42FC92  +
cmp ecx 41h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
mov eax [esp+2Ch+arg_10] +
mov dword ptr [eax+8] 3 +
jmp loc_42FCB1  +
mov esi [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
sub esi 2 +
test cl cl +
mov [esp+2Ch+var_14] esi +
mov [ebx] ebp +
jz loc_42FA2A  +
mov eax ebp +
sub eax esi +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_24] offset aIncompleteUniv +
jmp loc_42FA5A  +
cmp ecx 55h +
jz loc_42FC92  +
cmp ecx 61h +
jz loc_42FC92  +
cmp ecx 4Fh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 75h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
ja loc_42FF3E  +
cmp ecx 69h +
jz loc_42FC92  +
cmp ecx 6Fh +
nop   +
jz loc_42FC92  +
cmp ecx 67h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 430h +
jz loc_42FC92  +
ja loc_42FFB0  +
cmp ecx 410h +
jz loc_42FC92  +
ja loc_42FF65  +
cmp ecx 3B9h +
jz loc_42FC92  +
cmp ecx 3C5h +
jz loc_42FC92  +
cmp ecx 3B1h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jz loc_42FC92  +
ja loc_42FFE6  +
sub ecx 228h +
cmp ecx 1 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 418h +
jz loc_42FC92  +
ja loc_43007B  +
sub ecx 415h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] offset aCharacterXMigh +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
jmp loc_42FCB1  +
cmp ecx 443h +
jz loc_42FC92  +
lea esi [esi+0] +
jbe loc_430008  +
cmp ecx 1FB3h +
jz loc_42FC92  +
nop   +
ja loc_42FFF7  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 399h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FBCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 435h +
jb loc_42FCB1  +
cmp ecx 436h +
jbe loc_42FC92  +
cmp ecx 438h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 76h +
ja loc_4300C5  +
cmp ecx 75h +
lea esi [esi+0] +
jnb loc_42FC92  +
cmp ecx 56h +
ja loc_43009D  +
cmp ecx 55h +
nop   +
jnb loc_42FC92  +
cmp ecx 49h +
jz loc_42FC92  +
nop   +
ja loc_43008C  +
cmp ecx 41h +
jz loc_42FC92  +
cmp ecx 45h +
nop   +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 423h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 65h +
jz loc_42FC92  +
ja loc_43010B  +
cmp ecx 59h +
nop   +
lea esi [esi+0] +
jz loc_42FC92  +
cmp ecx 61h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 0F4h +
jz loc_42FC92  +
ja loc_430147  +
cmp ecx 0CAh +
jz loc_42FC92  +
nop   +
jbe loc_43012D  +
cmp ecx 0E2h +
jz loc_42FC92  +
cmp ecx 0EAh +
jz loc_42FC92  +
cmp ecx 0D4h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 69h +
nop   +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 79h +
jz loc_42FC92  +
cmp ecx 0C2h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1A1h +
ja loc_431CCB  +
cmp ecx 1A0h +
jnb loc_42FC92  +
sub ecx 102h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0F6h +
ja loc_4318D0  +
cmp ecx 0F5h +
jnb loc_42FC92  +
cmp ecx 69h +
jz loc_42FC92  +
ja loc_431895  +
cmp ecx 4Fh +
lea esi [esi+0] +
jz loc_42FC92  +
jbe loc_43186C  +
cmp ecx 61h +
nop   +
jz loc_42FC92  +
ja loc_431855  +
cmp ecx 55h +
nop   +
jz loc_42FC92  +
cmp ecx 59h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 70h +
ja loc_43038F  +
cmp ecx 6Dh +
jnb loc_42FC92  +
cmp ecx 54h +
ja loc_4302D9  +
cmp ecx 52h +
jnb loc_42FC92  +
cmp ecx 41h +
jb loc_42FCB1  +
cmp ecx 49h +
jbe loc_42FC92  +
sub ecx 4Dh +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 326h +
jz loc_431BCC  +
ja loc_431B69  +
cmp edi 31Bh +
jz loc_432B05  +
jbe loc_4317E5  +
cmp edi 324h +
jz loc_4310D5  +
lea esi [esi+0] +
ja loc_431081  +
cmp edi 323h +
jnz loc_42FF8B  +
cmp ecx 17Eh +
ja loc_430C88  +
cmp ecx 174h +
jnb loc_42FC92  +
cmp ecx 0F6h +
ja loc_430C2C  +
cmp ecx 0F1h +
jnb loc_42FC92  +
cmp ecx 69h +
ja loc_430418  +
cmp ecx 68h +
jnb loc_42FC92  +
cmp ecx 4Fh +
ja loc_4303F9  +
cmp ecx 4Bh +
jnb loc_42FC92  +
cmp ecx 45h +
ja loc_4303C6  +
cmp ecx 44h +
jnb loc_42FC92  +
sub ecx 41h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 57h +
jb loc_42FCB1  +
cmp ecx 5Ah +
jbe loc_42FC92  +
sub ecx 61h +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 41h +
cmp ecx 34h +
ja loc_42FCB1  +
jmp ds:off_4C8118[ecx*4]  +
cmp edi 0C56h +
jz loc_430964  +
nop   +
lea esi [esi+0] +
ja loc_430911  +
cmp edi 9BEh +
jz loc_430B86  +
ja loc_430515  +
cmp edi 653h +
jz loc_4305C5  +
jbe loc_43055C  +
cmp edi 655h +
jz loc_430657  +
jb loc_4304DA  +
cmp edi 93Ch +
jnz loc_42FF8B  +
sub ecx 915h +
cmp ecx 1Eh +
ja loc_42FCB1  +
mov edx 1 +
shl edx cl +
and edx 4C483087h +
jz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 15Bh +
ja loc_4303D7  +
cmp ecx 15Ah +
jnb loc_42FC92  +
cmp ecx 72h +
jb loc_42FCB1  +
cmp ecx 74h +
jbe loc_42FC92  +
sub ecx 77h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 48h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 17Fh +
jz loc_42FC92  +
ja loc_43044F  +
sub ecx 160h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 5Ah +
ja loc_430465  +
cmp ecx 59h +
jnb loc_42FC92  +
sub ecx 52h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0CFh +
ja loc_4304AE  +
cmp ecx 0C8h +
jnb loc_42FC92  +
cmp ecx 77h +
ja loc_430488  +
cmp ecx 72h +
jnb loc_42FC92  +
sub ecx 6Bh +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1E62h +
cmp ecx 1 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 61h +
jb loc_42FCB1  +
cmp ecx 62h +
jbe loc_42FC92  +
sub ecx 64h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 79h +
jb loc_42FCB1  +
cmp ecx 7Ah +
jbe loc_42FC92  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0DDh +
ja loc_43067B  +
cmp ecx 0D9h +
jnb loc_42FC92  +
sub ecx 0D1h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 64Ah +
jz loc_42FC92  +
jbe loc_430B97  +
cmp ecx 6D2h +
jz loc_42FC92  +
cmp ecx 6D5h +
jz loc_42FC92  +
cmp ecx 6C1h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 0B56h +
jz loc_430C0A  +
jbe loc_430BE5  +
cmp edi 0BBEh +
jz loc_430BD1  +
cmp edi 0BD7h +
jz loc_430BB4  +
cmp edi 0B57h +
jnz loc_42FF8B  +
cmp ecx 0B47h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp edi 342h +
jz loc_4306A7  +
cmp edi 345h +
jnz loc_42FF8B  +
cmp ecx 1F0Fh +
ja loc_430616  +
cmp ecx 1F00h +
jnb loc_42FC92  +
cmp ecx 3AEh +
jz loc_42FC92  +
ja loc_4305E7  +
cmp ecx 397h +
jz loc_42FC92  +
jbe loc_4305D6  +
cmp ecx 3A9h +
jz loc_42FC92  +
cmp ecx 3ACh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 627h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 391h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B7h +
jz loc_42FC92  +
jbe loc_43070F  +
cmp ecx 3C9h +
jz loc_42FC92  +
cmp ecx 3CEh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F74h +
jz loc_42FC92  +
jbe loc_4308A5  +
cmp ecx 1FB6h +
jz loc_42FC92  +
jbe loc_430893  +
cmp ecx 1FC6h +
jz loc_42FC92  +
cmp ecx 1FF6h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 622h +
cmp ecx 5 +
ja loc_42FCB1  +
mov edx 1 +
shl edx cl +
and edx 23h +
jz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0E0h +
jb loc_42FCB1  +
cmp ecx 0E5h +
jbe loc_42FC92  +
sub ecx 0E8h +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F59h +
jz loc_42FC92  +
ja loc_4307A6  +
cmp ecx 1F09h +
ja loc_430762  +
cmp ecx 1F08h +
jnb loc_42FC92  +
cmp ecx 3C5h +
jz loc_42FC92  +
ja loc_430736  +
cmp ecx 3B1h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
jbe loc_430725  +
cmp ecx 3B7h +
jz loc_42FC92  +
cmp ecx 3B9h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B1h +
jnz loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 0A8h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3C9h +
jb loc_42FCB1  +
cmp ecx 3CBh +
jbe loc_42FC92  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F31h +
ja loc_4307FE  +
cmp ecx 1F30h +
jnb loc_42FC92  +
cmp ecx 1F20h +
jb loc_42FCB1  +
cmp ecx 1F21h +
jbe loc_42FC92  +
sub ecx 1F28h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F99h +
ja loc_430856  +
cmp ecx 1F98h +
jnb loc_42FC92  +
cmp ecx 1F81h +
ja loc_43082A  +
cmp ecx 1F80h +
jnb loc_42FC92  +
cmp ecx 1F60h +
jb loc_42FCB1  +
cmp ecx 1F61h +
jbe loc_42FC92  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F38h +
jb loc_42FCB1  +
cmp ecx 1F39h +
jbe loc_42FC92  +
sub ecx 1F50h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F88h +
jb loc_42FCB1  +
cmp ecx 1F89h +
jbe loc_42FC92  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jz loc_42FC92  +
jbe loc_4308E5  +
cmp ecx 1FC3h +
jz loc_42FC92  +
jbe loc_4308D1  +
cmp ecx 1FF3h +
jz loc_42FC92  +
cmp ecx 1FFEh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F7Ch +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 1F20h +
jb loc_42FCB1  +
cmp ecx 1F2Fh +
jbe loc_42FC92  +
sub ecx 1F60h +
cmp ecx 10h +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FBFh +
jnz loc_42FCB1  +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 1FA0h +
jb loc_42FCB1  +
cmp ecx 1FA1h +
jbe loc_42FC92  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 0DCFh +
jz loc_430AE7  +
lea esi [esi+0] +
jbe loc_430AA9  +
cmp edi 3099h +
jz loc_4309F9  +
ja loc_43099C  +
cmp edi 102Eh +
jz loc_43098B  +
cmp edi 1B35h +
jz loc_430975  +
cmp edi 0DDFh +
jnz loc_42FF8B  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0C46h +
jz loc_42FC92  +
jmp loc_42FCB1  +
sub ecx 1B05h +
cmp ecx 3Dh +
ja loc_42FCB1  +
jmp ds:off_4C81EC[ecx*4]  +
cmp ecx 1025h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp edi 110BAh +
jz loc_430A65  +
cmp edi 11127h +
jz loc_430A50  +
cmp edi 309Ah +
jnz loc_42FF8B  +
cmp ecx 307Bh +
jz loc_42FC92  +
ja loc_430A25  +
cmp ecx 3072h +
jz loc_42FC92  +
jbe loc_430A12  +
cmp ecx 3075h +
jz loc_42FC92  +
cmp ecx 3078h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 3046h +
cmp ecx 0B7h +
ja loc_42FCB1  +
jmp ds:off_4C82E4[ecx*4]  +
cmp ecx 306Fh +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 30D5h +
jz loc_42FC92  +
ja loc_430A8C  +
cmp ecx 30CFh +
jz loc_42FC92  +
cmp ecx 30D2h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 11131h +
cmp ecx 1 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
sub ecx 11099h +
cmp ecx 0Ch +
ja loc_42FCB1  +
mov edx 1 +
shl edx cl +
and edx 1005h +
jz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 30D8h +
jz loc_42FC92  +
cmp ecx 30DBh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 0CD6h +
jz loc_430B64  +
jbe loc_430B29  +
cmp edi 0D57h +
jz loc_430B18  +
cmp edi 0DCAh +
jz loc_430AFB  +
cmp edi 0D3Eh +
jnz loc_42FF8B  +
sub ecx 0D46h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0DD9h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0DD9h +
jz loc_42FC92  +
cmp ecx 0DDCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0D46h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp edi 0CC2h +
jz loc_430B75  +
cmp edi 0CD5h +
jnz loc_42FF8B  +
sub ecx 0CBFh +
cmp ecx 0Bh +
ja loc_42FCB1  +
mov edx 1 +
shl edx cl +
and edx 881h +
jz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0CC6h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 0CC6h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 9C7h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 627h +
jz loc_42FC92  +
cmp ecx 648h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0B92h +
jz loc_42FC92  +
cmp ecx 0BC6h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0BC6h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 9D7h +
jz loc_430C1B  +
cmp edi 0B3Eh +
jnz loc_42FF8B  +
cmp ecx 0B47h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 0B47h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 9C7h +
jz loc_42FC92  +
jmp loc_42FCB1  +
cmp ecx 13Eh +
ja loc_430FDD  +
cmp ecx 13Dh +
jnb loc_42FC92  +
cmp ecx 11Bh +
ja loc_430FB5  +
cmp ecx 11Ah +
jnb loc_42FC92  +
cmp ecx 103h +
ja loc_430CF4  +
cmp ecx 0FFh +
jnb loc_42FC92  +
sub ecx 0F9h +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E45h +
ja loc_430DA5  +
cmp ecx 1E44h +
jnb loc_42FC92  +
cmp ecx 227h +
ja loc_430D61  +
cmp ecx 226h +
jnb loc_42FC92  +
cmp ecx 1E1h +
ja loc_430D35  +
cmp ecx 1DEh +
jnb loc_42FC92  +
cmp ecx 1B0h +
ja loc_430D20  +
cmp ecx 1AFh +
jnb loc_42FC92  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 10Eh +
jb loc_42FCB1  +
cmp ecx 10Fh +
jbe loc_42FC92  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 1FBh +
ja loc_430DF9  +
cmp ecx 1F8h +
jnb loc_42FC92  +
sub ecx 1E8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E17h +
ja loc_430F35  +
cmp ecx 1E14h +
jnb loc_42FC92  +
cmp ecx 1E03h +
ja loc_430F21  +
cmp ecx 1E02h +
jnb loc_42FC92  +
sub ecx 22Ah +
cmp ecx 9 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E99h +
ja loc_430E61  +
cmp ecx 1E97h +
jnb loc_42FC92  +
cmp ecx 1E67h +
ja loc_430E39  +
cmp ecx 1E64h +
jnb loc_42FC92  +
cmp ecx 1E59h +
ja loc_430E25  +
cmp ecx 1E58h +
jnb loc_42FC92  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 200h +
jb loc_42FCB1  +
cmp ecx 217h +
jbe loc_42FC92  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E7Dh +
ja loc_430EA1  +
cmp ecx 1E78h +
jnb loc_42FC92  +
sub ecx 1E6Ah +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1ED7h +
ja loc_430EF9  +
cmp ecx 1ECEh +
jnb loc_42FC92  +
cmp ecx 1EB5h +
ja loc_430ECD  +
cmp ecx 1EAEh +
jnb loc_42FC92  +
sub ecx 1EA2h +
cmp ecx 9 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E80h +
jb loc_42FCB1  +
cmp ecx 1E87h +
jbe loc_42FC92  +
sub ecx 1E8Eh +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EBAh +
jb loc_42FCB1  +
cmp ecx 1EC5h +
jbe loc_42FC92  +
sub ecx 1EC8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EEFh +
ja loc_430F5D  +
cmp ecx 1EE6h +
jnb loc_42FC92  +
sub ecx 1EDAh +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E27h +
ja loc_430F89  +
cmp ecx 1E26h +
jnb loc_42FC92  +
sub ecx 1E22h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EF2h +
jb loc_42FCB1  +
cmp ecx 1EF3h +
jbe loc_42FC92  +
sub ecx 1EF6h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E2Eh +
jb loc_42FCB1  +
cmp ecx 1E31h +
jbe loc_42FC92  +
sub ecx 1E3Eh +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 12Dh +
ja loc_431019  +
cmp ecx 128h +
jnb loc_42FC92  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 155h +
ja loc_431055  +
cmp ecx 154h +
jnb loc_42FC92  +
cmp ecx 148h +
ja loc_43103F  +
cmp ecx 147h +
jnb loc_42FC92  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 130h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 139h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 161h +
ja loc_43111C  +
cmp ecx 160h +
jnb loc_42FC92  +
sub ecx 158h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E1h +
ja loc_431A95  +
cmp ecx 1DEh +
jnb loc_42FC92  +
cmp ecx 0E5h +
ja loc_431A69  +
cmp ecx 0E0h +
jnb loc_42FC92  +
cmp ecx 61h +
jz loc_42FC92  +
ja loc_431148  +
cmp ecx 41h +
jnz loc_42FCB1  +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 171h +
ja loc_431AE9  +
cmp ecx 168h +
jnb loc_42FC92  +
cmp ecx 0DCh +
ja loc_431AD5  +
cmp ecx 0D9h +
jnb loc_42FC92  +
cmp ecx 55h +
jz loc_42FC92  +
cmp ecx 75h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 164h +
jb loc_42FCB1  +
cmp ecx 165h +
jbe loc_42FC92  +
sub ecx 168h +
cmp ecx 9 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0C0h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 65h +
jz loc_42FC92  +
ja loc_432605  +
cmp ecx 53h +
nop   +
jz loc_42FC92  +
ja loc_4317BA  +
cmp ecx 45h +
nop   +
jz loc_42FC92  +
ja loc_431215  +
cmp ecx 41h +
nop   +
jz loc_42FC92  +
cmp ecx 43h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp edi 30Ah +
jz loc_43142C  +
jbe loc_4312B2  +
cmp edi 30Ch +
jz loc_431315  +
jb loc_43127D  +
cmp edi 30Fh +
jnz loc_42FF8B  +
cmp ecx 61h +
jz loc_42FC92  +
nop   +
ja loc_43124C  +
cmp ecx 49h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
jbe loc_431235  +
cmp ecx 52h +
jz loc_42FC92  +
cmp ecx 55h +
nop   +
jz loc_42FC92  +
cmp ecx 4Fh +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 47h +
jb loc_42FCB1  +
cmp ecx 4Ah +
jbe loc_42FC92  +
cmp ecx 4Fh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 41h +
jz loc_42FC92  +
cmp ecx 45h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 72h +
nop   +
jz loc_42FC92  +
ja loc_431355  +
cmp ecx 69h +
nop   +
jz loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
cmp ecx 65h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
jbe loc_43143F  +
cmp ecx 423h +
jz loc_42FC92  +
cmp ecx 443h +
jz loc_42FC92  +
cmp ecx 75h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 308h +
jz loc_4314F3  +
cmp edi 309h +
jnz loc_42FF8B  +
cmp ecx 79h +
jz loc_42FC92  +
ja loc_4314AD  +
cmp ecx 59h +
lea esi [esi+0] +
jz loc_42FC92  +
ja loc_431485  +
cmp ecx 49h +
nop   +
jz loc_42FC92  +
ja loc_43146B  +
cmp ecx 41h +
nop   +
jz loc_42FC92  +
cmp ecx 45h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 61h +
jz loc_42FC92  +
nop   +
jbe loc_4313BF  +
cmp ecx 75h +
jbe loc_431397  +
cmp ecx 0FCh +
jz loc_42FC92  +
ja loc_43137A  +
cmp ecx 7Ah +
jz loc_42FC92  +
cmp ecx 0DCh +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 75h +
jz loc_42FC92  +
nop   +
jb loc_42FCB1  +
sub ecx 474h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1B7h +
jz loc_42FC92  +
cmp ecx 292h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 72h +
jnb loc_42FC92  +
cmp ecx 6Ch +
ja loc_4313EB  +
cmp ecx 67h +
jnb loc_42FC92  +
sub ecx 63h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 4Ch +
ja loc_43140D  +
cmp ecx 4Bh +
jnb loc_42FC92  +
cmp ecx 45h +
ja loc_4313FC  +
cmp ecx 43h +
jnb loc_42FC92  +
cmp ecx 41h +
nop   +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 6Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 47h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 55h +
ja loc_43145B  +
cmp ecx 52h +
jnb loc_42FC92  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 41h +
cmp ecx 38h +
ja loc_42FCB1  +
jmp ds:off_4C85C4[ecx*4]  +
cmp ecx 4Fh +
jz loc_42FC92  +
cmp ecx 55h +
nop   +
lea esi [esi+0] +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 5Ah +
nop   +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 4Fh +
nop   +
jz loc_42FC92  +
cmp ecx 55h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 69h +
jz loc_42FC92  +
nop   +
ja loc_431545  +
cmp ecx 61h +
jz loc_42FC92  +
cmp ecx 65h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0F4h +
jz loc_42FC92  +
ja loc_4315ED  +
cmp ecx 0D4h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
ja loc_4315D0  +
cmp ecx 0C2h +
jz loc_42FC92  +
cmp ecx 0CAh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B9h +
jz loc_42FC92  +
nop   +
ja loc_431619  +
cmp ecx 69h +
ja loc_431595  +
cmp ecx 68h +
jnb loc_42FC92  +
cmp ecx 4Fh +
jz loc_42FC92  +
jbe loc_431575  +
cmp ecx 59h +
ja loc_43155C  +
cmp ecx 57h +
nop   +
lea esi [esi+0] +
jnb loc_42FC92  +
cmp ecx 55h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
cmp ecx 75h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 61h +
nop   +
jz loc_42FC92  +
cmp ecx 65h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 45h +
jz loc_42FC92  +
nop   +
ja loc_43168B  +
cmp ecx 41h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 0D5h +
jz loc_42FC92  +
jbe loc_4316B0  +
cmp ecx 16Bh +
ja loc_43166E  +
cmp ecx 16Ah +
jnb loc_42FC92  +
cmp ecx 0F5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0E2h +
jz loc_42FC92  +
cmp ecx 0EAh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1A1h +
ja loc_43169C  +
cmp ecx 1A0h +
jnb loc_42FC92  +
sub ecx 102h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 430h +
jz loc_42FC92  +
ja loc_431719  +
cmp ecx 418h +
ja loc_4316EE  +
cmp ecx 415h +
jnb loc_42FC92  +
cmp ecx 3D2h +
jz loc_42FC92  +
jbe loc_4316CC  +
cmp ecx 406h +
jz loc_42FC92  +
cmp ecx 410h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 399h +
jz loc_42FC92  +
cmp ecx 3A5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 48h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 75h +
ja loc_4316DD  +
cmp ecx 74h +
jnb loc_42FC92  +
cmp ecx 6Fh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3C5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 77h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 427h +
jz loc_42FC92  +
ja loc_431752  +
cmp ecx 41Eh +
jz loc_42FC92  +
cmp ecx 423h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 44Bh +
jz loc_42FC92  +
ja loc_431785  +
cmp ecx 43Eh +
jz loc_42FC92  +
jbe loc_43176F  +
cmp ecx 443h +
jz loc_42FC92  +
cmp ecx 447h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 42Bh +
jz loc_42FC92  +
cmp ecx 42Dh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 435h +
cmp ecx 3 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 4D9h +
ja loc_432645  +
cmp ecx 4D8h +
jnb loc_42FC92  +
cmp ecx 44Dh +
jz loc_42FC92  +
cmp ecx 456h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 5Ah +
ja loc_433751  +
cmp ecx 59h +
jnb loc_42FC92  +
cmp ecx 55h +
nop   +
jz loc_42FC92  +
cmp ecx 57h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp edi 313h +
jz loc_432903  +
cmp edi 314h +
jnz loc_42FF8B  +
cmp ecx 3B7h +
jz loc_42FC92  +
ja loc_4328C6  +
cmp ecx 39Fh +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
ja loc_432974  +
cmp ecx 395h +
jz loc_42FC92  +
jbe loc_432716  +
cmp ecx 397h +
jz loc_42FC92  +
cmp ecx 399h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 65h +
jz loc_42FC92  +
cmp ecx 67h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 45h +
nop   +
jz loc_42FC92  +
jbe loc_43191F  +
cmp ecx 47h +
nop   +
jz loc_42FC92  +
cmp ecx 49h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 0C6h +
jz loc_42FC92  +
ja loc_431A15  +
cmp ecx 75h +
jz loc_42FC92  +
jbe loc_431A06  +
cmp ecx 79h +
jz loc_42FC92  +
cmp ecx 0C4h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B9h +
jz loc_42FC92  +
lea esi [esi+0] +
ja loc_431974  +
cmp ecx 22Fh +
ja loc_431949  +
cmp ecx 22Eh +
jnb loc_42FC92  +
cmp ecx 1EBh +
ja loc_431935  +
cmp ecx 1EAh +
jnb loc_42FC92  +
cmp ecx 0FCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 41h +
jnz loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
sub ecx 226h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 399h +
jz loc_42FC92  +
jbe loc_4319B3  +
cmp ecx 3A5h +
jz loc_42FC92  +
cmp ecx 3B1h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E37h +
ja loc_4319E2  +
cmp ecx 1E36h +
jnb loc_42FC92  +
cmp ecx 423h +
jz loc_42FC92  +
ja loc_4319C5  +
cmp ecx 3C5h +
jz loc_42FC92  +
cmp ecx 418h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 438h +
jz loc_42FC92  +
cmp ecx 443h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jz loc_42FC92  +
nop   +
ja loc_431A40  +
sub ecx 1E5Ah +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 6Fh +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 0DCh +
jz loc_42FC92  +
jbe loc_431A55  +
cmp ecx 0E4h +
jz loc_42FC92  +
cmp ecx 0E6h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FBCh +
jnz loc_42FCB1  +
lea esi [esi+0] +
jmp loc_42FC92  +
sub ecx 0D5h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 100h +
jb loc_42FCB1  +
cmp ecx 103h +
jbe loc_42FC92  +
sub ecx 1CDh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 227h +
ja loc_431B11  +
cmp ecx 226h +
jnb loc_42FC92  +
cmp ecx 1FAh +
jb loc_42FCB1  +
cmp ecx 1FBh +
jbe loc_42FC92  +
sub ecx 200h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 217h +
ja loc_431B3D  +
cmp ecx 214h +
jnb loc_42FC92  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EA2h +
jb loc_42FCB1  +
cmp ecx 1EABh +
jbe loc_42FC92  +
sub ecx 1EAEh +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E78h +
jb loc_42FCB1  +
cmp ecx 1E7Bh +
jbe loc_42FC92  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 32Dh +
jz loc_43347A  +
jbe loc_432696  +
cmp edi 330h +
jz loc_4334E7  +
cmp edi 331h +
jz loc_432864  +
cmp edi 32Eh +
jnz loc_42FF8B  +
cmp ecx 21Fh +
ja loc_431C1B  +
cmp ecx 21Eh +
jnb loc_42FC92  +
cmp ecx 68h +
jz loc_42FC92  +
ja loc_431C07  +
cmp ecx 48h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 165h +
ja loc_4335DF  +
cmp ecx 164h +
jnb loc_42FC92  +
cmp ecx 74h +
ja loc_43305B  +
cmp ecx 73h +
jnb loc_42FC92  +
sub ecx 53h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E22h +
jb loc_42FCB1  +
cmp ecx 1E23h +
jbe loc_42FC92  +
sub ecx 1E26h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 300h +
jz loc_431FD8  +
cmp edi 301h +
jnz loc_42FF8B  +
cmp ecx 39Fh +
jz loc_42FC92  +
ja loc_431F61  +
cmp ecx 0CAh +
jz loc_42FC92  +
lea esi [esi+0] +
ja loc_431D6F  +
cmp ecx 63h +
jz loc_42FC92  +
nop   +
ja loc_431D2D  +
cmp ecx 50h +
ja loc_431CFB  +
cmp ecx 4Bh +
nop   +
jnb loc_42FC92  +
cmp ecx 45h +
jz loc_42FC92  +
nop   +
ja loc_431CDF  +
cmp ecx 41h +
jz loc_42FC92  +
cmp ecx 43h +
nop   +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 47h +
jz loc_42FC92  +
cmp ecx 49h +
nop   +
lea esi [esi+0] +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 57h +
nop   +
jz loc_42FC92  +
ja loc_431DCC  +
cmp ecx 52h +
nop   +
jb loc_42FCB1  +
cmp ecx 53h +
jbe loc_42FC92  +
cmp ecx 55h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 75h +
jz loc_42FC92  +
ja loc_431EF5  +
cmp ecx 70h +
nop   +
ja loc_431EDF  +
cmp ecx 6Bh +
jnb loc_42FC92  +
cmp ecx 67h +
jz loc_42FC92  +
cmp ecx 69h +
jz loc_42FC92  +
cmp ecx 65h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 103h +
ja loc_431E3B  +
cmp ecx 102h +
jnb loc_42FC92  +
cmp ecx 0E7h +
ja loc_431E0A  +
cmp ecx 0E5h +
jnb loc_42FC92  +
cmp ecx 0D5h +
jbe loc_431DED  +
cmp ecx 0DCh +
jz loc_42FC92  +
cmp ecx 0E2h +
jz loc_42FC92  +
cmp ecx 0D8h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 59h +
nop   +
jb loc_42FCB1  +
cmp ecx 5Ah +
jbe loc_42FC92  +
cmp ecx 61h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0D4h +
jnb loc_42FC92  +
cmp ecx 0CFh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0F5h +
ja loc_431E77  +
cmp ecx 0F4h +
jnb loc_42FC92  +
cmp ecx 0EAh +
jz loc_42FC92  +
cmp ecx 0EFh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1A1h +
ja loc_431EA8  +
cmp ecx 1A0h +
jnb loc_42FC92  +
cmp ecx 14Dh +
ja loc_431E94  +
cmp ecx 14Ch +
jnb loc_42FC92  +
sub ecx 112h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0F8h +
jz loc_42FC92  +
cmp ecx 0FCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 168h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jz loc_42FC92  +
jbe loc_431F27  +
cmp ecx 397h +
jz loc_42FC92  +
cmp ecx 399h +
jz loc_42FC92  +
cmp ecx 395h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 72h +
cmp ecx 1 +
ja loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 0A8h +
jz loc_42FC92  +
ja loc_431F3B  +
cmp ecx 77h +
jz loc_42FC92  +
lea esi [esi+0] +
jb loc_42FCB1  +
sub ecx 79h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1AFh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0C2h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 0C5h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F39h +
ja loc_432595  +
cmp ecx 1F38h +
jnb loc_42FC92  +
cmp ecx 43Ah +
jz loc_42FC92  +
ja loc_432555  +
cmp ecx 3BFh +
jz loc_42FC92  +
ja loc_432062  +
cmp ecx 3B1h +
jz loc_42FC92  +
jbe loc_432045  +
cmp ecx 3B7h +
jz loc_42FC92  +
cmp ecx 3B9h +
jz loc_42FC92  +
cmp ecx 3B5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 415h +
jz loc_42FC92  +
ja loc_4321E7  +
cmp ecx 0FCh +
jz loc_42FC92  +
ja loc_432193  +
cmp ecx 6Fh +
nop   +
ja loc_4320FD  +
cmp ecx 6Eh +
jnb loc_42FC92  +
cmp ecx 55h +
jz loc_42FC92  +
jbe loc_4320DB  +
cmp ecx 61h +
jz loc_42FC92  +
ja loc_43209B  +
cmp ecx 57h +
lea esi [esi+0] +
jz loc_42FC92  +
cmp ecx 59h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 3A5h +
jz loc_42FC92  +
cmp ecx 3A9h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3D2h +
jz loc_42FC92  +
nop   +
jbe loc_4320B5  +
cmp ecx 41Ah +
jz loc_42FC92  +
cmp ecx 433h +
jz loc_42FC92  +
cmp ecx 413h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 65h +
nop   +
jz loc_42FC92  +
cmp ecx 69h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 3C5h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 49h +
jz loc_42FC92  +
ja loc_432135  +
cmp ecx 41h +
jz loc_42FC92  +
cmp ecx 45h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0CAh +
jz loc_42FC92  +
ja loc_432163  +
cmp ecx 79h +
nop   +
jz loc_42FC92  +
ja loc_432146  +
cmp ecx 75h +
nop   +
lea esi [esi+0] +
jz loc_42FC92  +
cmp ecx 77h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
sub ecx 4Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0A8h +
jz loc_42FC92  +
cmp ecx 0C2h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0E2h +
jz loc_42FC92  +
nop   +
ja loc_43225E  +
cmp ecx 0D4h +
jz loc_42FC92  +
cmp ecx 0DCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 397h +
jz loc_42FC92  +
nop   +
jbe loc_4322C3  +
cmp ecx 3B5h +
jz loc_42FC92  +
ja loc_432298  +
cmp ecx 3A5h +
jz loc_42FC92  +
ja loc_43227B  +
cmp ecx 399h +
jz loc_42FC92  +
cmp ecx 39Fh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F51h +
ja loc_4323F5  +
cmp ecx 1F50h +
jnb loc_42FC92  +
cmp ecx 1F21h +
ja loc_4323B1  +
cmp ecx 1F20h +
jnb loc_42FC92  +
cmp ecx 1F09h +
ja loc_432385  +
cmp ecx 1F08h +
jnb loc_42FC92  +
cmp ecx 438h +
jz loc_42FC92  +
ja loc_43236F  +
cmp ecx 418h +
jz loc_42FC92  +
cmp ecx 435h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0EAh +
jz loc_42FC92  +
cmp ecx 0F4h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3A9h +
jz loc_42FC92  +
cmp ecx 3B1h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3BFh +
jz loc_42FC92  +
ja loc_4322F3  +
cmp ecx 3B7h +
jz loc_42FC92  +
cmp ecx 3B9h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 14Dh +
jbe loc_432337  +
cmp ecx 1B0h +
ja loc_43231A  +
cmp ecx 1AFh +
jnb loc_42FC92  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3C5h +
jz loc_42FC92  +
nop   +
jb loc_42FCB1  +
sub ecx 3C9h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jz loc_42FC92  +
cmp ecx 395h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 14Ch +
jnb loc_42FC92  +
cmp ecx 102h +
jb loc_42FCB1  +
cmp ecx 103h +
jbe loc_42FC92  +
sub ecx 112h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 1F10h +
jb loc_42FCB1  +
cmp ecx 1F11h +
jbe loc_42FC92  +
sub ecx 1F18h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F39h +
ja loc_43244B  +
cmp ecx 1F38h +
jnb loc_42FC92  +
cmp ecx 1F28h +
jb loc_42FCB1  +
cmp ecx 1F29h +
jbe loc_42FC92  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F99h +
jbe loc_4324BC  +
cmp ecx 1FBCh +
jz loc_42FC92  +
jbe loc_432494  +
cmp ecx 1FCCh +
jz loc_42FC92  +
nop   +
jbe loc_432477  +
cmp ecx 1FFCh +
jz loc_42FC92  +
cmp ecx 1FFEh +
jz loc_42FC92  +
cmp ecx 1FF3h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F40h +
jb loc_42FCB1  +
cmp ecx 1F41h +
jbe loc_42FC92  +
sub ecx 1F48h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FBFh +
jz loc_42FC92  +
cmp ecx 1FC3h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FA9h +
ja loc_432501  +
cmp ecx 1FA8h +
jnb loc_42FC92  +
sub ecx 1FA0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F98h +
jnb loc_42FC92  +
cmp ecx 1F81h +
ja loc_432529  +
cmp ecx 1F80h +
jnb loc_42FC92  +
cmp ecx 1F61h +
ja loc_432515  +
cmp ecx 1F60h +
jnb loc_42FC92  +
cmp ecx 1F59h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jnz loc_42FCB1  +
lea esi [esi+0] +
jmp loc_42FC92  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F88h +
jb loc_42FCB1  +
cmp ecx 1F89h +
jbe loc_42FC92  +
sub ecx 1F90h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F19h +
ja loc_432727  +
cmp ecx 1F18h +
jnb loc_42FC92  +
cmp ecx 1F09h +
ja loc_4325F1  +
cmp ecx 1F08h +
jnb loc_42FC92  +
sub ecx 1F00h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F91h +
ja loc_4327B4  +
cmp ecx 1F90h +
jnb loc_42FC92  +
cmp ecx 1F61h +
ja loc_43278C  +
cmp ecx 1F60h +
jnb loc_42FC92  +
cmp ecx 1F49h +
ja loc_43274F  +
cmp ecx 1F48h +
jnb loc_42FC92  +
sub ecx 1F40h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1F10h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 7Ah +
ja loc_43266A  +
cmp ecx 79h +
lea esi [esi+0] +
jnb loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
nop   +
jbe loc_432659  +
cmp ecx 75h +
jz loc_42FC92  +
cmp ecx 77h +
nop   +
jz loc_42FC92  +
cmp ecx 73h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
sub ecx 4E8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 67h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EB9h +
ja loc_4339AA  +
cmp ecx 1EB8h +
jnb loc_42FC92  +
sub ecx 1EA0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp edi 327h +
jz loc_432BE8  +
cmp edi 328h +
jnz loc_42FF8B  +
cmp ecx 130h +
jz loc_42FC92  +
ja loc_432B8C  +
cmp ecx 0DCh +
ja loc_4332EF  +
cmp ecx 0D9h +
jnb loc_42FC92  +
cmp ecx 69h +
jz loc_42FC92  +
ja loc_432B5D  +
cmp ecx 4Fh +
jz loc_42FC92  +
ja loc_43299F  +
cmp ecx 45h +
jz loc_42FC92  +
cmp ecx 49h +
jz loc_42FC92  +
cmp ecx 41h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F29h +
ja loc_432778  +
cmp ecx 1F28h +
jnb loc_42FC92  +
sub ecx 1F20h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F50h +
jb loc_42FCB1  +
cmp ecx 1F51h +
jbe loc_42FC92  +
cmp ecx 1F59h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1F30h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F81h +
ja loc_4327FB  +
cmp ecx 1F80h +
jnb loc_42FC92  +
sub ecx 1F68h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jz loc_42FC92  +
jbe loc_432838  +
cmp ecx 1FCCh +
jz loc_42FC92  +
nop   +
ja loc_43280F  +
cmp ecx 1FBFh +
jz loc_42FC92  +
cmp ecx 1FC3h +
jz loc_42FC92  +
cmp ecx 1FBCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1F88h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FFCh +
jz loc_42FC92  +
cmp ecx 1FFEh +
jz loc_42FC92  +
cmp ecx 1FF3h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FA1h +
ja loc_43354B  +
cmp ecx 1FA0h +
jnb loc_42FC92  +
sub ecx 1F98h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 155h +
ja loc_43311A  +
cmp ecx 154h +
jnb loc_42FC92  +
cmp ecx 72h +
jz loc_42FC92  +
ja loc_4330CD  +
cmp ecx 54h +
nop   +
jz loc_42FC92  +
ja loc_43309E  +
cmp ecx 4Ch +
nop   +
ja loc_433087  +
cmp ecx 4Bh +
jnb loc_42FC92  +
cmp ecx 42h +
jz loc_42FC92  +
cmp ecx 44h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jz loc_42FC92  +
ja loc_4329E2  +
cmp ecx 3C1h +
jz loc_42FC92  +
ja loc_432957  +
cmp ecx 3B9h +
jz loc_42FC92  +
cmp ecx 3BFh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B9h +
jz loc_42FC92  +
nop   +
ja loc_432A6F  +
cmp ecx 39Fh +
jz loc_42FC92  +
ja loc_432A42  +
cmp ecx 395h +
jz loc_42FC92  +
jbe loc_432A0F  +
cmp ecx 397h +
jz loc_42FC92  +
cmp ecx 399h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3C5h +
jz loc_42FC92  +
cmp ecx 3C9h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3A9h +
jz loc_42FC92  +
ja loc_4329C5  +
cmp ecx 3A1h +
jz loc_42FC92  +
cmp ecx 3A5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 61h +
jz loc_42FC92  +
cmp ecx 65h +
nop   +
lea esi [esi+0] +
jz loc_42FC92  +
cmp ecx 55h +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
cmp ecx 3B1h +
jz loc_42FC92  +
cmp ecx 3B5h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FCCh +
jz loc_42FC92  +
nop   +
ja loc_432A25  +
cmp ecx 1FBCh +
jz loc_42FC92  +
cmp ecx 1FC3h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 391h +
jnz loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 1FF3h +
jz loc_42FC92  +
cmp ecx 1FFCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3B1h +
jz loc_42FC92  +
nop   +
jbe loc_432AAF  +
cmp ecx 3B5h +
jz loc_42FC92  +
cmp ecx 3B7h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FB3h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
ja loc_432AD6  +
cmp ecx 3C1h +
jz loc_42FC92  +
nop   +
jbe loc_432AC5  +
cmp ecx 3C5h +
jz loc_42FC92  +
cmp ecx 3C9h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 3A9h +
jnz loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 3BFh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FCCh +
jz loc_42FC92  +
ja loc_4339EA  +
cmp ecx 1FBCh +
jz loc_42FC92  +
cmp ecx 1FC3h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 171h +
ja loc_4333BA  +
cmp ecx 168h +
jnb loc_42FC92  +
cmp ecx 0DCh +
ja loc_43338E  +
cmp ecx 0D9h +
jnb loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
nop   +
ja loc_43332B  +
cmp ecx 4Fh +
jz loc_42FC92  +
cmp ecx 55h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0C5h +
ja loc_432C4D  +
cmp ecx 0C0h +
jnb loc_42FC92  +
cmp ecx 6Fh +
jz loc_42FC92  +
cmp ecx 75h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 217h +
ja loc_432CB5  +
cmp ecx 214h +
jnb loc_42FC92  +
cmp ecx 1B0h +
ja loc_432C8D  +
cmp ecx 1AFh +
jnb loc_42FC92  +
cmp ecx 171h +
ja loc_432C79  +
cmp ecx 168h +
jnb loc_42FC92  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 148h +
ja loc_432DCD  +
cmp ecx 147h +
jnb loc_42FC92  +
cmp ecx 0CBh +
ja loc_432D7D  +
cmp ecx 0C8h +
jnb loc_42FC92  +
cmp ecx 54h +
ja loc_432E55  +
cmp ecx 52h +
jnb loc_42FC92  +
cmp ecx 48h +
ja loc_432D5D  +
cmp ecx 47h +
jnb loc_42FC92  +
sub ecx 43h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0C8h +
jb loc_42FCB1  +
cmp ecx 0CFh +
jbe loc_42FC92  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1A0h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E1h +
ja loc_432CF1  +
cmp ecx 1DEh +
jnb loc_42FC92  +
sub ecx 1CDh +
cmp ecx 0Fh +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E1Bh +
ja loc_432D31  +
cmp ecx 1E14h +
jnb loc_42FC92  +
cmp ecx 231h +
ja loc_432D1D  +
cmp ecx 22Ah +
jnb loc_42FC92  +
sub ecx 226h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FAh +
jb loc_42FCB1  +
cmp ecx 1FBh +
jbe loc_42FC92  +
sub ecx 200h +
cmp ecx 0Fh +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1E00h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E53h +
ja loc_432E89  +
cmp ecx 1E4Ch +
jnb loc_42FC92  +
sub ecx 1E2Ch +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 4Bh +
jb loc_42FCB1  +
cmp ecx 4Ch +
jbe loc_42FC92  +
cmp ecx 4Eh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 121h +
ja loc_432ED7  +
cmp ecx 11Ah +
jnb loc_42FC92  +
cmp ecx 0F1h +
jz loc_42FC92  +
ja loc_432E29  +
cmp ecx 0D1h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 0E8h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 21Bh +
ja loc_432F7F  +
cmp ecx 218h +
jnb loc_42FC92  +
cmp ecx 1E9h +
ja loc_432F57  +
cmp ecx 1E6h +
jnb loc_42FC92  +
cmp ecx 15Dh +
ja loc_432EFF  +
cmp ecx 158h +
jnb loc_42FC92  +
sub ecx 154h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 106h +
jb loc_42FCB1  +
cmp ecx 10Fh +
jbe loc_42FC92  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 6Ch +
ja loc_432EB5  +
cmp ecx 6Bh +
lea esi [esi+0] +
jnb loc_42FC92  +
cmp ecx 63h +
jb loc_42FCB1  +
cmp ecx 65h +
jbe loc_42FC92  +
sub ecx 67h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E72h +
jb loc_42FCB1  +
cmp ecx 1E7Bh +
jbe loc_42FC92  +
sub ecx 1EA0h +
cmp ecx 51h +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 6Eh +
jz loc_42FC92  +
nop   +
jb loc_42FCB1  +
sub ecx 72h +
cmp ecx 2 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 13Ah +
ja loc_432F2B  +
cmp ecx 139h +
jnb loc_42FC92  +
sub ecx 124h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 160h +
jb loc_42FCB1  +
cmp ecx 161h +
jbe loc_42FC92  +
sub ecx 164h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 13Dh +
jb loc_42FCB1  +
cmp ecx 13Eh +
jbe loc_42FC92  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F9h +
ja loc_432FBF  +
cmp ecx 1F8h +
jnb loc_42FC92  +
sub ecx 1F4h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E2Bh +
ja loc_433017  +
cmp ecx 1E2Ah +
jnb loc_42FC92  +
cmp ecx 1E0Fh +
ja loc_432FEB  +
cmp ecx 1E0Ah +
jnb loc_42FC92  +
sub ecx 21Eh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 204h +
jb loc_42FCB1  +
cmp ecx 207h +
jbe loc_42FC92  +
sub ecx 210h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E12h +
jb loc_42FCB1  +
cmp ecx 1E1Bh +
jbe loc_42FC92  +
sub ecx 1E20h +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E71h +
ja loc_43364F  +
cmp ecx 1E58h +
jnb loc_42FC92  +
cmp ecx 1E30h +
jb loc_42FCB1  +
cmp ecx 1E3Dh +
jbe loc_42FC92  +
sub ecx 1E44h +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 15Ah +
jb loc_42FCB1  +
cmp ecx 15Dh +
jbe loc_42FC92  +
sub ecx 160h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 4Eh +
jz loc_42FC92  +
cmp ecx 52h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 68h +
jz loc_42FC92  +
ja loc_43316E  +
cmp ecx 62h +
jz loc_42FC92  +
cmp ecx 64h +
jz loc_42FC92  +
cmp ecx 5Ah +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 13Ah +
ja loc_43328A  +
cmp ecx 139h +
jnb loc_42FC92  +
cmp ecx 0F1h +
jz loc_42FC92  +
ja loc_433261  +
cmp ecx 7Ah +
jz loc_42FC92  +
cmp ecx 0D1h +
jz loc_42FC92  +
cmp ecx 74h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E03h +
ja loc_4331CA  +
cmp ecx 1E02h +
jnb loc_42FC92  +
cmp ecx 1E9h +
ja loc_4331A2  +
cmp ecx 1E8h +
jnb loc_42FC92  +
cmp ecx 165h +
ja loc_43318E  +
cmp ecx 164h +
jnb loc_42FC92  +
sub ecx 158h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 6Bh +
jb loc_42FCB1  +
cmp ecx 6Ch +
jbe loc_42FC92  +
cmp ecx 6Eh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 179h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 213h +
ja loc_433212  +
cmp ecx 210h +
jnb loc_42FC92  +
sub ecx 1F8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E45h +
ja loc_433239  +
cmp ecx 1E44h +
jnb loc_42FC92  +
cmp ecx 1E23h +
jz loc_42FC92  +
jbe loc_433225  +
cmp ecx 1E27h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 1E30h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 21Fh +
jnz loc_42FCB1  +
nop   +
jmp loc_42FC92  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E6Bh +
ja loc_4332B2  +
cmp ecx 1E6Ah +
jnb loc_42FC92  +
sub ecx 1E58h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 10Eh +
jb loc_42FCB1  +
cmp ecx 10Fh +
jbe loc_42FC92  +
cmp ecx 125h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 144h +
ja loc_4332DB  +
cmp ecx 143h +
jnb loc_42FC92  +
sub ecx 13Dh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E90h +
jb loc_42FCB1  +
cmp ecx 1E91h +
jbe loc_42FC92  +
cmp ecx 1E97h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 147h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0FCh +
ja loc_433362  +
cmp ecx 0F9h +
jnb loc_42FC92  +
cmp ecx 0EFh +
ja loc_43334E  +
cmp ecx 0E8h +
jnb loc_42FC92  +
sub ecx 0E0h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 75h +
jz loc_42FC92  +
jb loc_42FCB1  +
sub ecx 0D2h +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 117h +
ja loc_4333FA  +
cmp ecx 112h +
jnb loc_42FC92  +
sub ecx 100h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0FCh +
ja loc_433426  +
cmp ecx 0F9h +
jnb loc_42FC92  +
sub ecx 0F2h +
cmp ecx 4 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 231h +
ja loc_43344E  +
cmp ecx 22Ah +
jnb loc_42FC92  +
cmp ecx 20Fh +
ja loc_43343A  +
cmp ecx 20Ch +
jnb loc_42FC92  +
sub ecx 1D1h +
cmp ecx 0Bh +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 11Ah +
jb loc_42FCB1  +
cmp ecx 11Bh +
jbe loc_42FC92  +
sub ecx 128h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 14Ch +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 214h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E7Bh +
ja loc_4339BE  +
cmp ecx 1E72h +
jnb loc_42FC92  +
sub ecx 1E4Ch +
cmp ecx 7 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 13Eh +
ja loc_4337EA  +
cmp ecx 13Dh +
jnb loc_42FC92  +
cmp ecx 0D1h +
jz loc_42FC92  +
ja loc_4337A6  +
cmp ecx 65h +
ja loc_43377C  +
cmp ecx 64h +
jnb loc_42FC92  +
cmp ecx 4Ch +
jz loc_42FC92  +
nop   +
jbe loc_43376B  +
cmp ecx 4Eh +
jz loc_42FC92  +
nop   +
jb loc_42FCB1  +
sub ecx 54h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 171h +
ja loc_43360B  +
cmp ecx 168h +
jnb loc_42FC92  +
cmp ecx 0EFh +
ja loc_43359B  +
cmp ecx 0E8h +
jnb loc_42FC92  +
cmp ecx 69h +
jz loc_42FC92  +
ja loc_433575  +
cmp ecx 49h +
jz loc_42FC92  +
nop   +
lea esi [esi+0] +
jbe loc_43355F  +
cmp ecx 55h +
jz loc_42FC92  +
cmp ecx 65h +
nop   +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1FA8h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 45h +
jnz loc_42FCB1  +
nop   +
lea esi [esi+0] +
jmp loc_42FC92  +
cmp ecx 0CFh +
ja loc_4336A4  +
cmp ecx 0C8h +
jnb loc_42FC92  +
cmp ecx 75h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 11Bh +
ja loc_43367B  +
cmp ecx 11Ah +
jnb loc_42FC92  +
cmp ecx 0F9h +
jb loc_42FCB1  +
cmp ecx 0FCh +
jbe loc_42FC92  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E67h +
ja loc_4336B8  +
cmp ecx 1E64h +
jnb loc_42FC92  +
sub ecx 1E60h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E17h +
ja loc_43370D  +
cmp ecx 1E14h +
jnb loc_42FC92  +
cmp ecx 1DCh +
ja loc_4336E1  +
cmp ecx 1D3h +
jnb loc_42FC92  +
sub ecx 1CFh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E96h +
jb loc_42FCB1  +
cmp ecx 1E97h +
jbe loc_42FC92  +
sub ecx 1EB8h +
cmp ecx 0Fh +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 128h +
jb loc_42FCB1  +
cmp ecx 12Dh +
jbe loc_42FC92  +
cmp ecx 130h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E6Ah +
jb loc_42FCB1  +
cmp ecx 1E6Bh +
jbe loc_42FC92  +
cmp ecx 1E97h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 204h +
jb loc_42FCB1  +
cmp ecx 20Bh +
jbe loc_42FC92  +
sub ecx 214h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EC5h +
ja loc_433A07  +
cmp ecx 1EBAh +
jnb loc_42FC92  +
cmp ecx 1E2Eh +
jb loc_42FCB1  +
cmp ecx 1E2Fh +
jbe loc_42FC92  +
sub ecx 1E78h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 61h +
jz loc_42FC92  +
cmp ecx 63h +
lea esi [esi+0] +
jnz loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 44h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 75h +
nop   +
ja loc_43383E  +
cmp ecx 74h +
jnb loc_42FC92  +
cmp ecx 6Ch +
jz loc_42FC92  +
cmp ecx 6Eh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 10Fh +
ja loc_43395A  +
cmp ecx 10Eh +
jnb loc_42FC92  +
cmp ecx 0EBh +
ja loc_433933  +
cmp ecx 0E8h +
jnb loc_42FC92  +
sub ecx 0D9h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 217h +
ja loc_43388E  +
cmp ecx 214h +
jnb loc_42FC92  +
cmp ecx 171h +
ja loc_433866  +
cmp ecx 168h +
jnb loc_42FC92  +
cmp ecx 148h +
ja loc_433852  +
cmp ecx 147h +
jnb loc_42FC92  +
sub ecx 143h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 0C8h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 164h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1F9h +
ja loc_4338CA  +
cmp ecx 1F8h +
jnb loc_42FC92  +
sub ecx 1D3h +
cmp ecx 9 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1E6Bh +
ja loc_4338F2  +
cmp ecx 1E6Ah +
jnb loc_42FC92  +
cmp ecx 1E17h +
ja loc_4338DE  +
cmp ecx 1E14h +
jnb loc_42FC92  +
sub ecx 1E0Ah +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 204h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1E44h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EC5h +
ja loc_433982  +
cmp ecx 1EBAh +
jnb loc_42FC92  +
cmp ecx 1E78h +
jb loc_42FCB1  +
cmp ecx 1E7Bh +
jbe loc_42FC92  +
cmp ecx 1E97h +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 0F1h +
jz loc_42FC92  +
nop   +
jb loc_42FCB1  +
sub ecx 0F9h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 11Bh +
ja loc_433996  +
cmp ecx 11Ah +
jnb loc_42FC92  +
sub ecx 112h +
cmp ecx 5 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 139h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
sub ecx 1ECCh +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1ECCh +
jb loc_42FCB1  +
cmp ecx 1ED9h +
jbe loc_42FC92  +
sub ecx 1EE4h +
cmp ecx 3 +
ja loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1FF3h +
jz loc_42FC92  +
cmp ecx 1FFCh +
jnz loc_42FCB1  +
jmp loc_42FC92  +
cmp ecx 1EC8h +
jb loc_42FCB1  +
cmp ecx 1EC9h +
jbe loc_42FC92  +
sub ecx 1EE6h +
cmp ecx 1 +
ja loc_42FCB1  +
jmp loc_42FC92  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 0DCh +
mov edx eax +
mov esi [ebp+arg_8] +
mov [ebp+var_C0] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_98] eax +
lea eax [ebp+var_44] +
call sub_42E170  +
mov eax [ebp+var_44] +
test esi esi +
mov edx [ebp+arg_C] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_40] +
mov [ebp+var_90] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_B0] eax +
setnz al  +
test edx edx +
setnz cl  +
mov [ebp+var_A6] al +
xor al cl +
mov [ebp+var_A5] cl +
mov [ebp+var_A7] al +
jnz loc_434682  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_433AD6  +
cmp dword ptr [ebx] 100h +
mov eax 100h +
cmovnb eax [ebx] +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_4C] eax +
call sub_452ED0  +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
mov edi [ebp+var_C0] +
test edi edi +
jz loc_434614  +
mov edi [ebp+var_B0] +
mov eax 1 +
mov edx 0FFFFFFFFh +
mov [ebp+var_B4] esi +
mov [ebp+var_AC] ebx +
mov [ebp+var_B8] 0 +
mov ecx edi +
shl eax cl +
sub eax 1 +
cmp edi 1Fh +
mov edi edx +
cmovbe edi eax +
xor esi esi +
mov [ebp+var_BC] edi +
mov [ebp+var_A4] edi +
mov [ebp+var_7C] esi +
mov eax [ebp+var_7C] +
cmp [ebp+var_A6] 0 +
cmovnz eax [ebp+var_B4] +
mov [ebp+var_7C] eax +
mov eax [ebp+var_AC] +
mov esi [eax+4] +
movzx eax byte ptr [esi] +
cmp al 75h +
jz loc_434481  +
cmp al 55h +
jz loc_433B5C  +
cmp al 4Ch +
mov ecx esi +
jnz loc_433B63  +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 52h +
jz loc_434397  +
cmp al 27h +
jnz loc_43457E  +
mov eax [ebp+var_7C] +
lea ebx [ecx+1] +
test eax eax +
jz loc_433B8E  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433B8E  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_AC] +
mov eax [eax] +
lea esi [esi+eax-1] +
mov edi esi +
lea esi [esi+0] +
cmp ebx edi +
jnb loc_433D3A  +
cmp byte ptr [ebx] 5Ch +
mov esi ebx +
jnz loc_433BBA  +
jmp loc_433C2D  +
cmp byte ptr [esi] 5Ch +
jz loc_434240  +
add esi 1 +
cmp esi edi +
nop   +
jnz loc_433BB1  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_433BF5  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434523  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433C25  +
cmp [ebp+var_8C] offset loc_42E230 +
jnz loc_43461B  +
mov eax [ebp+var_7C] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E4] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E8] eax +
call sub_42F840  +
sub esp 8 +
cmp edi esi +
jbe loc_433D3A  +
mov eax [ebp+arg_0] +
xor ecx ecx +
lea ebx [esi+1] +
test eax eax +
lea eax [ebp+var_50] +
cmovz eax ecx +
mov [ebp+var_88] eax +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433C67  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_80] eax +
ja loc_433C5E  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov [ebp+var_84] eax +
movzx ecx byte ptr [esi+1] +
lea eax [ecx-22h] +
cmp al 59h +
mov byte ptr [ebp+var_6D] cl +
ja loc_433C8E  +
movzx eax al +
jmp ds:off_4C888C[eax*4]  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_433CC0  +
test byte ptr ds:word_4D0720[ecx+ecx] 0ACh +
jz loc_434273  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aUnknownEscapeS +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
nop   +
mov eax [ebp+var_88] +
test eax eax +
jz loc_433CF6  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6D] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] 1 +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434250  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433D2F  +
mov eax [eax] +
cmp eax 60000000h +
mov [ebp+var_84] eax +
ja loc_433D14  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_84] +
mov [esp+0E8h+var_E4] eax +
call sub_42F7F0  +
sub esp 8 +
lea ebx [esi+2] +
cmp ebx edi +
jb loc_433BA8  +
add [ebp+var_B8] 1 +
mov eax [ebp+var_C0] +
add [ebp+var_AC] 8 +
add [ebp+var_B4] 0Ch +
cmp [ebp+var_B8] eax +
jnz loc_433B2A  +
mov esi [ebp+var_7C] +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_433DB4  +
mov ecx [ebp+var_98] +
mov eax [ecx+298h] +
lea edx [ecx+2A6h] +
mov ecx [ebp+var_B0] +
mov [esp+0E8h+var_E4] ecx +
lea ecx [ebp+var_50] +
mov [esp+0E8h+var_E8] ecx +
xor ecx ecx +
call sub_42E3D0  +
mov eax [ebp+var_48] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call sub_452F50  +
mov ecx [ebp+arg_0] +
mov [ebp+var_50] eax +
mov [ecx+4] eax +
mov eax [ebp+var_48] +
mov [ecx] eax +
test esi esi +
jz loc_4345EC  +
mov eax [esi] +
cmp eax 60000000h +
ja loc_433DCC  +
mov edx [esi+4] +
add edx eax +
mov [esi] edx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] eax +
call sub_42F7F0  +
mov [ebp+var_A7] 1 +
movzx eax [ebp+var_A7] +
sub esp 8 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+var_7C] +
movzx eax [ebp+var_A5] +
mov edx [ebp+var_84] +
test ecx ecx +
setnz cl  +
cmp cl al +
mov byte ptr [ebp+var_94] cl +
jnz loc_4345F8  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_434330  +
cmp byte ptr [ebp+var_94] 0 +
lea ebx [esi+2] +
jz loc_433E4E  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_433E4C  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov edx eax +
cmp edi ebx +
jbe loc_43455B  +
movzx eax byte ptr [esi+2] +
movzx eax ds:byte_4D30E0[eax] +
cmp al 63h +
jz loc_43455B  +
xor esi esi +
xor ecx ecx +
mov [ebp+var_9C] edi +
mov edi edx +
mov [ebp+var_A0] esi +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_94] 0 +
jz loc_433EAA  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_433EA8  +
mov edi [ebp+var_7C] +
mov esi [edi+4] +
add esi edx +
mov edi esi +
mov esi [ebp+var_7C] +
mov [esi] edi +
mov edi edx +
mov edx ecx +
shl ecx 4 +
and edx 0F0000000h +
add ecx eax +
or [ebp+var_A0] edx +
cmp ebx [ebp+var_9C] +
jz loc_433ED3  +
movzx eax byte ptr [ebx] +
movzx eax ds:byte_4D30E0[eax] +
cmp al 63h +
jnz loc_433E80  +
mov edx [ebp+var_BC] +
xor eax eax +
mov esi [ebp+var_A0] +
mov [ebp+var_94] edi +
mov edi [ebp+var_9C] +
and edx ecx +
cmp ecx edx +
setnz al  +
or eax esi +
jnz loc_4344CF  +
mov esi [ebp+var_88] +
test esi esi +
jz loc_433F36  +
mov edx [ebp+var_98] +
mov eax [edx+298h] +
add edx 2A6h +
mov [esp+0E8h+var_E8] esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_42E3D0  +
cmp [ebp+var_A5] 0 +
jz loc_433BA0  +
mov eax [ebp+var_80] +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_E4] eax +
call sub_42F7F0  +
sub esp 8 +
jmp loc_433BA0  +
mov byte ptr [ebp+var_6D] 0Bh +
jmp loc_433CC0  +
mov byte ptr [ebp+var_6D] 9 +
jmp loc_433CC0  +
mov byte ptr [ebp+var_6D] 0Dh +
jmp loc_433CC0  +
mov byte ptr [ebp+var_6D] 0Ah +
jmp loc_433CC0  +
mov byte ptr [ebp+var_6D] 0Ch +
jmp loc_433CC0  +
mov byte ptr [ebp+var_6D] 8 +
jmp loc_433CC0  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_434359  +
mov byte ptr [ebp+var_6D] 7 +
jmp loc_433CC0  +
mov eax [ebp+var_80] +
mov [ebp+var_6D+1] ebx +
mov ebx [ebp+var_7C] +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_59+1] eax +
mov eax [ebp+var_84] +
test ebx ebx +
setnz cl  +
mov [ebp+var_30] 0 +
mov [ebp+var_54] eax +
movzx eax [ebp+var_A5] +
mov byte ptr [ebp+var_94] cl +
cmp cl al +
jnz loc_434637  +
add esi 2 +
cmp byte ptr [ebp+var_94] 0 +
mov [ebp+var_6D+1] esi +
jz loc_43401E  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_43401B  +
mov ecx [ebp+var_7C] +
mov edx [ecx+4] +
add edx eax +
mov [ecx] edx +
mov [ebp+var_54] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_CC] eax +
lea eax [ebp+var_59+1] +
mov [esp+0E8h+var_D0] eax +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_D4] eax +
lea eax [ebp+var_38] +
mov [esp+0E8h+var_D8] eax +
lea eax [ebp+var_6D+1] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E8] eax +
call sub_42F890  +
mov eax [ebp+var_68] +
cmp eax 7Fh +
ja loc_4342B1  +
mov byte ptr [ebp+var_59] al +
mov ebx 1 +
lea edx [ebp+var_59] +
lea ecx [ebp+var_64] +
jmp loc_43407A  +
movzx eax byte ptr [edx] +
add ecx 1 +
add edx 1 +
mov [ecx-1] al +
lea eax [ebp+var_59+1] +
cmp edx eax +
jb loc_434077  +
mov eax [ebp+var_88] +
test eax eax +
jz loc_4340BC  +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_64] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434500  +
cmp byte ptr [ebp+var_94] 0 +
jz loc_4340FA  +
test ebx ebx +
jle loc_4340FA  +
xor esi esi +
mov [ebp+var_88] edi +
mov edi esi +
mov esi [ebp+arg_C] +
mov eax [ebp+var_59+1] +
mov ecx esi +
add edi 1 +
mov edx [ebp+var_54] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
call sub_42F7F0  +
sub esp 8 +
cmp ebx edi +
jnz loc_4340D6  +
mov edi [ebp+var_88] +
mov ebx [ebp+var_6D+1] +
jmp loc_433BA0  +
mov eax [ebp+var_84] +
mov edx [ebp+var_7C] +
mov [ebp+var_94] eax +
movzx eax [ebp+var_A5] +
test edx edx +
setnz dl  +
mov byte ptr [ebp+var_9C] dl +
cmp dl al +
jnz loc_4345B4  +
xor edx edx +
cmp edi ebx +
jbe loc_4341DC  +
mov edx [ebp+var_84] +
lea eax [esi+4] +
mov [ebp+var_A0] eax +
xor eax eax +
mov [ebp+var_94] ecx +
lea esi [esi+0] +
add ebx 1 +
cmp byte ptr [ebp+var_9C] 0 +
jz loc_434178  +
mov edx [ebp+var_7C] +
mov edx [edx] +
cmp edx 60000000h +
ja loc_434178  +
mov esi [ebp+var_7C] +
mov ecx [esi+4] +
add ecx edx +
mov esi ecx +
mov ecx [ebp+var_7C] +
mov [ecx] esi +
mov ecx [ebp+var_94] +
cmp ebx edi +
lea eax [ecx+eax*8-30h] +
jz loc_4341A0  +
cmp ebx [ebp+var_A0] +
jz loc_4341A0  +
movzx ecx byte ptr [ebx] +
lea esi [ecx-30h] +
cmp esi 7 +
mov [ebp+var_94] ecx +
jbe loc_434150  +
nop   +
mov [ebp+var_94] edx +
mov edx [ebp+var_A4] +
and edx eax +
cmp eax edx +
jz loc_4341DC  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aOctalEscapeSeq +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
mov edx [ebp+var_9C] +
mov ecx [ebp+var_88] +
test ecx ecx +
jz loc_433F36  +
mov esi [ebp+var_98] +
mov eax [esi+298h] +
add esi 2A6h +
mov [esp+0E8h+var_E8] ecx +
mov ecx edx +
mov edx esi +
mov [ebp+var_88] eax +
mov eax [ebp+var_B0] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
call sub_42E3D0  +
jmp loc_433F36  +
mov eax [ebp+var_98] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_434376  +
mov byte ptr [ebp+var_6D] 1Bh +
jmp loc_433CC0  +
cmp ebx esi +
jnb loc_433C25  +
jmp loc_433BC2  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingEsca +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43CE30  +
jmp loc_433CF6  +
lea ebx [ebp+var_38] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] offset a03o +
mov [esp+0E8h+var_E8] ebx +
call sub_47D630  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_DC] ebx +
mov [esp+0E8h+var_E0] offset aUnknownEscap_0 +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
jmp loc_433CC0  +
lea edx [ebp+var_59+1] +
mov ecx 1 +
mov [ebp+var_9C] edi +
jmp loc_4342C5  +
mov ecx ebx +
mov edx esi +
mov ebx eax +
and ebx 3Fh +
shr eax 6 +
or ebx 0FFFFFF80h +
cmp eax 3Eh +
mov [edx-1] bl +
lea esi [edx-1] +
lea ebx [ecx+1] +
ja loc_4342C1  +
movzx edi ds:byte_4C8B22[ebx] +
test eax edi +
jnz loc_4342C1  +
or al ds:byte_4C8B1D[ecx] +
cmp ebx 6 +
mov edi [ebp+var_9C] +
mov [edx-2] al +
jbe loc_434653  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+var_98] +
mov [esp+7Ch+var_74] offset aConvertingUcnT +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43CE30  +
jmp loc_4340FA  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfXI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
mov [ebp+var_9C] edx +
call sub_43CB70  +
mov edx [ebp+var_9C] +
jmp loc_433E2A  +
mov [esp+0E8h+var_E0] offset aTheMeaningOfAI +
mov [esp+0E8h+var_E4] 6 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB70  +
jmp loc_433FAC  +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] offset aNonIsoStandard +
mov [esp+0E8h+var_E4] 2 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
jmp loc_434236  +
mov eax [ebp+var_7C] +
add ecx 2 +
test eax eax +
jz loc_4343BF  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4343BF  +
mov edi [ebp+var_7C] +
mov edx [edi+4] +
add eax edx +
cmp eax 60000000h +
mov [edi] eax +
ja loc_4343BF  +
add eax edx +
mov [edi] eax +
mov eax [ebp+var_7C] +
mov edx ecx +
cmp byte ptr [edx] 28h +
jz loc_4343E4  +
add edx 1 +
test eax eax +
jz loc_4343C4  +
mov ebx [eax] +
cmp ebx 60000000h +
ja loc_4343C4  +
add ebx [eax+4] +
mov [eax] ebx +
cmp byte ptr [edx] 28h +
jnz loc_4343C9  +
mov eax [ebp+var_7C] +
lea ebx [edx+1] +
test eax eax +
jz loc_4343FF  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4343FF  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
mov eax [ebp+var_AC] +
add esi [eax] +
mov eax ebx +
sub eax ecx +
lea edx [ebx+eax+1] +
cmp esi edx +
jb loc_434417  +
not eax  +
add esi eax +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_43444A  +
lea eax [ebp+var_50] +
mov [esp+0E8h+var_DC] eax +
mov eax esi +
sub eax ebx +
mov [esp+0E8h+var_E0] eax +
mov eax [ebp+var_90] +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_8C] +
call eax  +
test al al +
jz loc_434523  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_433D3A  +
cmp [ebp+var_8C] offset loc_42E230 +
jnz loc_434666  +
mov eax [ebp+var_7C] +
sub esi ebx +
mov ecx [ebp+arg_C] +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] eax +
call sub_42F840  +
sub esp 8 +
jmp loc_433D3A  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_434499  +
mov eax [eax] +
cmp eax 60000000h +
ja loc_434499  +
mov ecx [ebp+var_7C] +
add eax [ecx+4] +
mov [ecx] eax +
movzx eax byte ptr [esi+1] +
lea ecx [esi+1] +
cmp al 38h +
jnz loc_433B63  +
mov ebx [ebp+var_7C] +
lea ecx [esi+2] +
test ebx ebx +
jz loc_4344C6  +
mov eax [ebp+var_7C] +
mov eax [eax] +
cmp eax 60000000h +
ja loc_4344C6  +
mov edx [ebp+var_7C] +
add eax [edx+4] +
mov [edx] eax +
movzx eax byte ptr [esi+2] +
jmp loc_433B63  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aHexEscapeSeque +
mov [esp+0E8h+var_E4] 2 +
mov [ebp+var_9C] edx +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
mov edx [ebp+var_9C] +
mov ecx edx +
jmp loc_433EFC  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingUc_0 +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43CE30  +
jmp loc_4340BC  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aConvertingToEx +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43CE30  +
mov eax [ebp+var_50] +
mov [esp+0E8h+var_E8] eax +
call free  +
movzx eax [ebp+var_A7] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aXUsedWithNoFol +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
jmp loc_433BA0  +
cmp al 22h +
jz loc_433B73  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_4345D0  +
mov eax [ebp+var_98] +
mov [esp+0E8h+var_E0] offset aMissingOpenQuo +
mov [esp+0E8h+var_E4] 3 +
mov [esp+0E8h+var_E8] eax +
call sub_43CB30  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_434541  +
jmp loc_43454C  +
mov [esp+0E8h+var_E0] offset aConvert_oct +
mov [esp+0E8h+var_E4] 540h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 64Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
mov [ebp+var_A7] 1 +
jmp loc_43454C  +
mov [esp+0E8h+var_E0] offset aConvert_hex +
mov [esp+0E8h+var_E4] 4F9h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
xor esi esi +
jmp loc_433D64  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 66Ch +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
mov [esp+0E8h+var_E0] offset aConvert_ucn +
mov [esp+0E8h+var_E4] 48Dh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
sub edx 2 +
lea ecx [ebp+var_59+1] +
cmp edx ecx +
jnb loc_43408A  +
jmp loc_434072  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 641h +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
mov [esp+0E8h+var_E0] offset aCpp_interpret_ +
mov [esp+0E8h+var_E4] 5FCh +
mov [esp+0E8h+var_E8] offset a____GccLibcppC +
call sub_424560  +
nop   +
push esi  +
push ebx  +
mov ebx [esp+0F0h+var_D8] +
mov esi [esp+0F0h+var_D4] +
mov eax [esp+0F0h+var_E4] +
mov edx [esp+0F0h+var_E0] +
mov ecx [esp+0F0h+var_DC] +
mov [esp+0F0h+var_D8] 0 +
mov [esp+0F0h+var_DC] 0 +
mov [esp+0F0h+var_E0] esi +
mov [esp+0F0h+var_E4] ebx +
pop ebx  +
pop esi  +
jmp sub_433A40  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
lea eax [esp+24h+var_10] +
mov ecx [esp+24h+arg_14] +
mov edx ebx +
call sub_42E170  +
mov eax offset aExecutionChara +
cmp [esp+24h+var_10] offset loc_42E230 +
jz loc_434710  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_10] +
mov esi [ebx+210h] +
mov dword ptr [ebx+210h] offset loc_42E220 +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_C] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_14] +
mov [esp+24h+var_20] eax +
mov eax ebx +
call sub_433A40  +
mov [ebx+210h] esi +
mov edx eax +
xor eax eax +
test dl dl +
mov edx offset aCpp_interpre_0 +
cmovz eax edx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_8] +
mov edx [esp+1Ch+arg_4] +
mov eax [ebx+298h] +
mov esi [ebx+120h] +
mov ebp [ebx+118h] +
mov edi [ebx+11Ch] +
mov [ebx+120h] eax +
mov eax [esp+1Ch+arg_C] +
mov dword ptr [ebx+118h] offset loc_42E230 +
mov dword ptr [ebx+11Ch] 0FFFFFFFFh +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 3Eh +
call sub_433A40  +
mov [ebx+118h] ebp +
mov [ebx+11Ch] edi +
mov [ebx+120h] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_4] +
mov [esp+6Ch+var_20] 0 +
mov [esp+6Ch+var_1C] 0 +
movzx eax byte ptr [eax+4] +
mov edx eax +
and edx 0FFFFFFFBh +
cmp dl 38h +
setnz bl  +
xor ecx ecx +
cmp al 3Ch +
movzx edx bl +
setz cl  +
lea edx [edx+ecx*2+2] +
cmp [esi+8] edx +
jz loc_434987  +
mov esi [esp+6Ch+arg_4] +
mov ecx 1 +
mov [esp+6Ch+var_68] eax +
lea eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_60] 0 +
lea edx [esi+8] +
mov [esp+6Ch+var_64] 0 +
call sub_433A40  +
test al al +
jz loc_4349A6  +
test bl bl +
jz loc_4349D0  +
mov eax [esp+6Ch+arg_4] +
mov edx [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+4] +
mov ecx eax +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_44] eax +
mov eax [esp+6Ch+var_1C] +
mov [esp+6Ch+var_40] eax +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A6h] +
mov [esp+6Ch+var_31] al +
lea eax [esp+6Ch+var_18] +
call sub_42E170  +
mov esi [esp+6Ch+arg_0] +
mov eax [esp+6Ch+var_10] +
mov esi [esi+298h] +
cmp eax 1Fh +
mov [esp+6Ch+var_48] eax +
mov [esp+6Ch+var_54] esi +
ja loc_434AE0  +
movzx ecx byte ptr [esp+6Ch+var_48] +
mov eax 1 +
shl eax cl +
sub eax 1 +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] eax +
jbe loc_434AF3  +
mov ebp 0FFFFFFFFh +
mov eax [esp+6Ch+var_48] +
xor edx edx +
mov ecx [esp+6Ch+var_44] +
div  [esp+6Ch+var_54] +
lea esi [eax+eax] +
sub ecx esi +
test eax eax +
mov [esp+6Ch+var_38] esi +
jz loc_434B07  +
mov edi [esp+6Ch+var_40] +
lea esi [ecx+eax] +
xor ebx ebx +
mov [esp+6Ch+var_50] eax +
xor edx edx +
movzx eax [esp+6Ch+var_31] +
add ecx edi +
add esi edi +
mov [esp+6Ch+var_4C] ecx +
jmp loc_43497D  +
mov edi [esp+6Ch+var_4C] +
movzx edi byte ptr [edi+edx] +
movzx ecx byte ptr [esp+6Ch+var_54] +
and edi ebp +
add edx 1 +
sub esi 1 +
shl ebx cl +
mov ecx ebx +
mov ebx edi +
or ebx ecx +
cmp edx [esp+6Ch+var_50] +
jz loc_434B10  +
test al al +
jnz loc_434956  +
movzx edi byte ptr [esi-1] +
jmp loc_43495E  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aEmptyCharacter +
mov [esp+6Ch+var_68] 3 +
mov [esp+6Ch+var_6C] eax +
call sub_43CB30  +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov edi [esp+6Ch+var_20] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+298h] +
mov eax [eax+29Ch] +
mov [esp+6Ch+var_50] eax +
div  ecx +
cmp ecx 1Fh +
mov [esp+6Ch+var_54] eax +
ja loc_434AD3  +
mov ebp 1 +
shl ebp cl +
sub ebp 1 +
sub edi 1 +
jz loc_434C72  +
xor edx edx +
xor eax eax +
jmp loc_434A22  +
mov edx ebx +
movzx ebx byte ptr [esi+eax] +
and ebx ebp +
cmp ecx 1Fh +
ja loc_434A31  +
shl edx cl +
or ebx edx +
add eax 1 +
cmp eax edi +
jnz loc_434A20  +
cmp [esp+6Ch+var_54] edi +
jb loc_434B97  +
cmp edi 1 +
jbe loc_434C10  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_50] +
cmp byte ptr [eax+259h] 0 +
jnz loc_434C44  +
xor eax eax +
mov byte ptr [esp+6Ch+var_54] 0 +
cmp ecx 1Fh +
ja loc_434A97  +
mov edx 1 +
mov ebp edx +
shl ebp cl +
sub ebp 1 +
cmp byte ptr [esp+6Ch+var_54] 0 +
jnz loc_434B90  +
sub ecx 1 +
shl edx cl +
test ebx edx +
jz loc_434B90  +
not ebp  +
or ebx ebp +
mov ecx [esp+6Ch+arg_8] +
mov [ecx] edi +
mov edi [esp+6Ch+arg_C] +
mov [edi] eax +
mov edi [esp+6Ch+arg_4] +
mov eax ebx +
cmp [edi+0Ch] esi +
jz loc_4349C2  +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_54] ebx +
call free  +
mov eax [esp+6Ch+var_54] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp 0FFFFFFFFh +
jmp loc_434A0A  +
cmp [esp+6Ch+var_54] 1Fh +
mov [esp+6Ch+var_30] 0FFFFFFFFh +
ja loc_434914  +
movzx ecx byte ptr [esp+6Ch+var_54] +
mov eax 1 +
shl eax cl +
lea ebp [eax-1] +
jmp loc_434919  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [esp+6Ch+var_44] +
cmp [esp+6Ch+var_38] eax +
mov esi [esp+6Ch+var_40] +
jb loc_434BE0  +
mov eax [esp+6Ch+var_3C] +
sub eax 3Ah +
cmp [esp+6Ch+var_48] 1Fh +
ja loc_434B4D  +
cmp eax 1 +
jbe loc_434B49  +
mov edi [esp+6Ch+arg_0] +
cmp byte ptr [edi+2A5h] 0 +
jz loc_434C27  +
and ebx [esp+6Ch+var_30] +
cmp eax 1 +
jbe loc_434B81  +
mov eax [esp+6Ch+arg_0] +
cmp byte ptr [eax+2A5h] 0 +
jnz loc_434B81  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 0 +
mov eax [esp+6Ch+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_434AA9  +
mov eax [esp+6Ch+arg_C] +
mov dword ptr [eax] 1 +
jmp loc_434B6F  +
and ebx ebp +
jmp loc_434A97  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_50] ecx +
mov [esp+6Ch+var_6C] eax +
call sub_43CB30  +
mov ecx [esp+6Ch+var_50] +
cmp [esp+6Ch+var_54] 1 +
jbe loc_434C08  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov ecx [eax+29Ch] +
jmp loc_434A63  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_64] offset aCharacterConst +
mov [esp+6Ch+var_68] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_43CB30  +
mov esi [esp+6Ch+var_1C] +
jmp loc_434B22  +
mov esi [esp+6Ch+var_1C] +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+2A4h] +
mov byte ptr [esp+6Ch+var_54] al +
jmp loc_434A6A  +
mov edx [esp+6Ch+var_48] +
sub edx 1 +
bt ebx edx +
jnb loc_434B49  +
mov eax [esp+6Ch+var_30] +
not eax  +
or ebx eax +
jmp loc_434B62  +
mov [esp+6Ch+var_64] offset aMultiCharacter +
mov [esp+6Ch+var_68] 5 +
mov [esp+6Ch+var_6C] eax +
call sub_43CB70  +
mov eax [esp+6Ch+arg_0] +
mov esi [esp+6Ch+var_1C] +
mov ecx [eax+29Ch] +
jmp loc_434A63  +
xor ebx ebx +
jmp loc_434C10  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ebp+arg_8] +
add eax 1Fh +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+48h+var_29] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_8] +
and [ebp+var_30] 0FFFFFFF0h +
test eax eax +
jz loc_434E8C  +
mov eax [ebp+var_30] +
xor edi edi +
mov [ebp-2Ch] eax +
jmp loc_434CD7  +
mov esi [ebp-2Ch] +
add edi 1 +
mov [esi] al +
lea eax [esi+1] +
mov [ebp-2Ch] eax +
cmp [ebp+arg_8] edi +
jbe loc_434DA6  +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax+edi] +
cmp al 5Ch +
jnz loc_434CC0  +
mov ecx [ebp+arg_4] +
lea esi [edi+2] +
lea eax [edi+1] +
cmp byte ptr [ecx+edi+1] 75h +
setnz cl  +
cmp [ebp+arg_8] esi +
movzx ecx cl +
lea ecx ds:4[ecx*4] +
jbe loc_434E69  +
mov edx [ebp+arg_4] +
movzx ebx byte ptr [edx+edi+2] +
test byte ptr [ebx+ebx+4D0721h] 1 +
jz loc_434E69  +
xor edx edx +
jmp loc_434D37  +
test ecx ecx +
jz loc_434D50  +
mov ebx [ebp+arg_4] +
movzx ebx byte ptr [ebx+eax] +
test byte ptr [ebx+ebx+4D0721h] 1 +
jz loc_434D50  +
mov esi eax +
movzx eax ds:byte_4D30E0[ebx] +
shl edx 4 +
sub ecx 1 +
add edx eax +
lea eax [esi+1] +
cmp [ebp+arg_8] eax +
mov edi eax +
ja loc_434D20  +
cmp edx 24h +
jnz loc_434D66  +
mov eax [ebp-2Ch] +
mov byte ptr [eax] 24h +
add eax 1 +
mov [ebp-2Ch] eax +
jmp loc_434CCE  +
cmp edx 7Fh +
ja loc_434DD8  +
mov eax [ebp+var_30] +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jnz loc_434E81  +
call ds:__imp__errno  +
mov dword ptr [eax] 7 +
mov eax [ebp+arg_0] +
mov [esp-24h+arg_24] offset aConvertingUcnT +
mov [esp-24h+arg_20] 3 +
mov [esp-24h+arg_1C] eax +
call sub_43CE30  +
mov eax [ebp-2Ch] +
sub eax [ebp+var_30] +
mov edi [ebp+arg_0] +
mov edx [edi+234h] +
mov [esp-24h+arg_24] eax +
mov eax [ebp+var_30] +
mov [esp-24h+arg_28] 1 +
mov [esp-24h+arg_1C] edx +
mov [esp-24h+arg_20] eax +
call sub_43D2E0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_19+1] +
mov edi 1 +
mov [ebp+var_34] eax +
jmp loc_434DE9  +
mov edi ebx +
mov ecx eax +
mov ebx edx +
and ebx 3Fh +
shr edx 6 +
or ebx 0FFFFFF80h +
cmp edx 3Eh +
mov [ecx-1] bl +
lea eax [ecx-1] +
lea ebx [edi+1] +
ja loc_434DE5  +
movzx esi ds:byte_4C8B22[ebx] +
test edx esi +
jnz loc_434DE5  +
or dl ds:byte_4C8B1D[edi] +
lea esi [ecx-2] +
mov eax [ebp+var_34] +
mov [ebp+var_34] esi +
mov [ecx-2] dl +
mov edx [ebp+var_30] +
sub edx [ebp-2Ch] +
add edx [ebp+arg_8] +
cmp edx ebx +
jb loc_434D7F  +
lea edi [ebp+var_19+1] +
cmp esi edi +
jnb loc_434E62  +
mov edx [ebp+var_34] +
mov ecx [ebp-2Ch] +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx-1] +
add ecx 1 +
lea edi [ebp+var_19+1] +
cmp edx edi +
mov [ecx-1] bl +
jnz loc_434E40  +
mov edi [ebp+var_34] +
lea edx [ebp+var_19+2] +
add edi 1 +
sub edx edi +
add [ebp-2Ch] edx +
mov edi eax +
jmp loc_434CCE  +
mov esi eax +
mov eax [ebp+var_30] +
xor edx edx +
sub eax [ebp-2Ch] +
add eax [ebp+arg_8] +
mov byte ptr [ebp+var_19] dl +
test eax eax +
jz loc_434D7F  +
lea eax [ebp+var_19] +
mov [ebp+var_34] eax +
lea eax [esi+1] +
jmp loc_434E37  +
xor eax eax +
jmp loc_434DAC  +
***
push edi  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
mov [ecx+8] ebx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42C640  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] 0 +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] eax +
call sub_42CAD0  +
mov [esp+18h+var_18] ebx +
mov [esi] eax +
mov [esp+18h+var_14] eax +
call sub_42C2E0  +
movzx ecx byte ptr [eax+19h] +
mov eax 1 +
shl eax cl +
mov [esi+4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn 8  +
***
mov edx [ecx] +
cmp edx 60000000h +
ja loc_4350C1  +
mov eax [ecx+4] +
add eax edx +
mov [ecx] eax +
mov eax edx +
retn   +
***
mov eax [esp+8] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D67Fh +
mov eax 1 +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
test eax eax +
jnz loc_435109  +
jmp loc_435122  +
mov ebx [ebx] +
add esi 1 +
test ebx ebx +
jz loc_435122  +
cmp byte ptr [ebx+8] 0 +
jz loc_435100  +
mov eax [ebx+0Ch] +
call sub_4350F0  +
mov ebx [ebx] +
add esi eax +
add esi 1 +
test ebx ebx +
jnz loc_435109  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_441990  +
movzx ecx byte ptr [eax+4] +
cmp cl 35h +
jz loc_435180  +
test byte ptr [eax+6] 10h +
jnz loc_435200  +
cmp cl 16h +
jz loc_4351B4  +
mov [esp+18h+var_10] offset aMacroNamesMust +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43CB30  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
mov eax esi +
test al al +
jz loc_4351A5  +
cmp [ebx+2ACh] edx +
jz loc_435228  +
cmp [ebx+2BCh] edx +
jz loc_4351DE  +
cmp [ebx+2C0h] edx +
jz loc_4351DE  +
xor eax eax +
test byte ptr [edx+14h] 80h +
cmovz eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aNoMacroNameGiv +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_43CB30  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] offset a__has_include_ +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43CB30  +
xor eax eax +
jmp loc_435173  +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+18h+var_10] offset aSCannotBeUsedA +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_43CB30  +
xor eax eax +
jmp loc_435173  +
mov [esp+18h+var_10] offset aDefinedCannotB +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_18] ebx +
call sub_43CB30  +
xor eax eax +
jmp loc_435173  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] eax +
call sub_441990  +
mov ecx eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_435280  +
xor edx edx +
cmp al 16h +
jnz loc_435286  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ecx+8] 1 +
jz loc_4352B8  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] ebx +
call sub_441BB0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aInvalidFlagSIn +
mov [esp+18h+var_14] 3 +
mov [esp+18h+var_C] eax +
call sub_43CB30  +
add esp 14h +
xor edx edx +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+0Ch] +
movzx edx byte ptr [eax] +
sub edx 30h +
cmp edx esi +
jbe loc_435286  +
cmp edx 4 +
ja loc_435286  +
cmp edx 4 +
jnz loc_4352D4  +
cmp esi 3 +
jnz loc_435286  +
cmp edx 2 +
jnz loc_435271  +
test esi esi +
jnz loc_435286  +
lea esi [esi+0] +
jmp loc_435271  +
***
mov ebx eax +
sub esp 14h +
mov [esp+14h+var_14] ebx +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_4352F7  +
cmp dl 16h +
jz loc_435363  +
cmp dl 14h +
jnz loc_435332  +
mov [esp+14h+var_14] ebx +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
mov esi eax +
cmp dl 53h +
jz loc_435312  +
cmp dl 16h +
jz loc_435381  +
sub edx 3Eh +
cmp dl 4 +
jbe loc_435340  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ebx +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jz loc_435340  +
cmp dl 16h +
jz loc_435397  +
cmp dl 15h +
jnz loc_435332  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_439AE0  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_43530D  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
call sub_439AE0  +
movzx edx byte ptr [esi+4] +
jmp loc_43532A  +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_439AE0  +
mov eax [esp+14h+var_8] +
movzx edx byte ptr [eax+4] +
jmp loc_435356  +
***
sub esp 18h +
mov eax [eax+4Ch] +
mov edx [eax+4] +
test edx edx +
jz loc_4353E2  +
mov [esp+18h+var_18] ebx +
call sub_439950  +
mov eax [ebx+4Ch] +
mov eax [eax+4] +
test eax eax +
jnz loc_4353D0  +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_4353FE  +
nop   +
mov [esp+18h+var_18] ebx +
call sub_441990  +
cmp byte ptr [eax+4] 16h +
jnz loc_4353F0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov byte ptr [esi+0Fh] 1 +
jmp loc_43542E  +
cmp dl 35h +
jnz loc_435450  +
mov ebx [eax+8] +
test byte ptr [ebx+14h] 80h +
jz loc_435472  +
mov [esp+14h+var_14] esi +
call sub_441990  +
movzx edx byte ptr [eax+4] +
cmp dl 16h +
jnz loc_435420  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] offset aInvalidPragmaG +
mov [esp+14h+var_10] 3 +
call sub_43CB30  +
mov byte ptr [esi+0Fh] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_43548D  +
mov [esp+14h+var_14] ebx +
call sub_43BA00  +
or word ptr [ebx+14h] 280h +
jmp loc_43542E  +
mov eax [ebx] +
mov [esp+14h+var_C] offset aPoisoningExist +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] eax +
call sub_43CB30  +
jmp loc_43547D  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
add byte ptr [ebx+10h] 1 +
mov dword ptr [edx] 0 +
mov [esp+48h+var_48] ebx +
mov [ebp+var_28] edx +
call sub_43B980  +
mov [ebp+var_20] eax +
movzx eax byte ptr [eax+4] +
cmp al 16h +
jz loc_4356D2  +
cmp al 35h +
mov eax [ebp+var_20] +
jnz loc_4355C0  +
mov edi [eax] +
mov [esp+48h+var_48] ebx +
call sub_43B980  +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_4355F4  +
cmp esi 4 +
jz loc_435683  +
cmp esi 11h +
jnz loc_435514  +
cmp al 16h +
jz loc_435562  +
mov [esp+48h+var_38] offset aMissingAfterPr +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43CC30  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_4356B5  +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [eax+4] edi +
mov edi [ebp+var_28] +
mov dword ptr [eax] 0 +
mov [edi] eax +
mov ecx [ebp+var_20] +
mov eax [ecx+8] +
mov edx [eax+4] +
lea eax [edx+1Fh] +
lea edi [edx+1] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea esi [esp-4+arg_1F] +
and esi 0FFFFFFF0h +
mov byte ptr [esi] 23h +
mov eax [ecx+8] +
mov ecx [eax] +
lea eax [esi+1] +
mov [esp-4+arg_4] edx +
mov [esp+0] eax +
mov [esp-4+arg_0] ecx +
call memcpy  +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_0] esi +
mov [esp+0] ebx +
call sub_442000  +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_38] offset aPredicateMustB +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] 3 +
call sub_43CC30  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 18h +
xor edi edi +
lea eax [ebx+24h] +
mov [ebp+var_2C] eax +
mov [ebp+var_1C] esi +
jmp loc_435634  +
mov esi [eax] +
mov edx edi +
shl edx 4 +
add edx ecx +
test edi edi +
mov [edx+8] esi +
mov esi [eax+4] +
mov [edx+0Ch] esi +
mov esi [eax+8] +
mov [edx+10h] esi +
mov eax [eax+0Ch] +
mov [edx+14h] eax +
jnz loc_43562D  +
and word ptr [ecx+0Eh] 0FFFEh +
add [ebp+var_1C] 10h +
add edi 1 +
mov [esp+48h+var_48] ebx +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 15h +
jz loc_435546  +
cmp dl 16h +
jz loc_435698  +
mov edx [ebx+24h] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
sub edx ecx +
cmp edx [ebp+var_1C] +
jnb loc_435606  +
mov [ebp+var_24] eax +
mov eax [ebp+var_2C] +
mov [esp+48h+var_40] 18h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_43F440  +
mov edx [ebx+24h] +
mov eax [ebp+var_24] +
mov ecx [edx+8] +
jmp loc_435606  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_439AE0  +
jmp loc_435562  +
mov [esp+48h+var_40] offset aMissingToCompl +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43CB30  +
jmp loc_435538  +
mov [esp-4+arg_4] offset aPredicateSAnsw +
mov [esp-4+arg_0] 3 +
mov [esp+0] ebx +
call sub_43CB30  +
jmp loc_435538  +
mov [esp+48h+var_40] offset aAssertionWitho +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
call sub_43CB30  +
xor eax eax +
jmp loc_43553A  +
***
jmp sub_435700  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [eax+18h] +
mov [esp+1Ch+var_10] edx +
lea edx [eax+18h] +
mov [esp+1Ch+var_14] edx +
test ebp ebp +
jnz loc_435730  +
jmp loc_435777  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
mov ebp [eax] +
mov [esp+1Ch+var_14] eax +
test ebp ebp +
jz loc_435777  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebp+4] +
cmp eax [ecx+4] +
jnz loc_435720  +
test eax eax +
jz loc_435777  +
mov eax [esp+1Ch+var_10] +
lea edi [ebp+8] +
xor ebx ebx +
lea esi [eax+8] +
jmp loc_435760  +
mov eax [ebp+4] +
add ebx 1 +
add edi 10h +
add esi 10h +
cmp eax ebx +
jbe loc_435773  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_43ED60  +
test eax eax +
jnz loc_435750  +
mov eax [ebp+4] +
cmp eax ebx +
jnz loc_435720  +
mov eax [esp+1Ch+var_14] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0F0h] +
mov edx [esp+30h+arg_0] +
mov ebp [eax-10h] +
xor eax eax +
test edx edx +
jz loc_435874  +
mov eax [ebx+50h] +
mov eax [eax+4] +
add byte ptr [ebx+10h] 1 +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_14] ecx +
call sub_43F130  +
mov ecx [esp+30h+var_14] +
sub byte ptr [ebx+10h] 1 +
mov [esp+30h+var_20] offset aS_11 +
test ecx ecx +
mov [esp+30h+var_24] 0 +
mov edi eax +
setnz al  +
cmp esi 1 +
mov [esp+30h+var_1C] edi +
mov [esp+30h+var_28] ebp +
jz loc_4358F4  +
test esi esi +
jz loc_4358D4  +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] ebx +
call sub_43CC30  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_4358B8  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_43CC80  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
test al al +
jz loc_4358B4  +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] ecx +
call sub_43CD20  +
mov [esp+30h+arg_0] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov eax [esp+4] +
mov ecx 12h +
mov edx 1 +
mov dword ptr [esp+4] 1 +
jmp sub_435850  +
***
mov eax [esp+4] +
xor ecx ecx +
mov edx 3 +
mov dword ptr [esp+4] 1 +
jmp sub_435850  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_20] 0 +
add byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_43B9F0  +
mov edi eax +
mov eax [eax] +
mov edx [edi+0Ch] +
cmp byte ptr [edi+4] 35h +
mov [esp+4Ch+var_1C] eax +
mov eax [edi+4] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
mov eax [edi+8] +
mov [esp+4Ch+var_14] eax +
jz loc_4359E8  +
cmp dword ptr [esi+1FCh] 0 +
mov eax 1 +
jz loc_4359D6  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_439AE0  +
mov edx [esi+20h] +
mov eax [esi+1FCh] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edx +
call eax  +
movzx eax byte ptr [esi+10h] +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esi+1DCh] +
test ebx ebx +
jnz loc_4359FA  +
jmp loc_4359AA  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4359AA  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_4359F4  +
cmp byte ptr [ebx+8] 0 +
jz loc_435A42  +
movzx edx byte ptr [ebx+0Bh] +
test dl dl +
jz loc_435A14  +
sub byte ptr [esi+10h] 1 +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_30] edx +
call sub_43B980  +
mov edx [esp+4Ch+var_30] +
cmp byte ptr [eax+4] 35h +
mov ebp eax +
jz loc_435AD0  +
xor ebx ebx +
test dl dl +
jz loc_435A3A  +
add byte ptr [esi+10h] 1 +
test ebx ebx +
jz loc_435AF7  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_435A87  +
mov eax [esp+4Ch+var_20] +
mov byte ptr [esi+58h] 51h +
mov [esi+54h] eax +
movzx eax word ptr [edi+6] +
mov [esi+5Ah] ax +
mov eax [ebx+0Ch] +
mov byte ptr [esi+18h] 1 +
mov [esi+5Ch] eax +
movzx eax byte ptr [ebx+0Bh] +
mov [esi+19h] al +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_435A79  +
add eax 1 +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1E0h] +
test eax eax +
jz loc_435AA2  +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] esi +
call eax  +
cmp byte ptr [ebx+0Bh] 0 +
jz loc_435AAC  +
sub byte ptr [esi+10h] 1 +
mov eax [ebx+0Ch] +
mov [esp+4Ch+var_4C] esi +
call eax  +
movzx eax byte ptr [esi+10h] +
cmp byte ptr [ebx+0Bh] 0 +
jnz loc_435A76  +
sub eax 1 +
mov [esi+10h] al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+0Ch] +
mov eax [eax+8] +
test ebx ebx +
jnz loc_435AEA  +
jmp loc_435A32  +
mov ebx [ebx] +
test ebx ebx +
jz loc_435A32  +
cmp eax [ebx+4] +
lea esi [esi+0] +
jnz loc_435AE0  +
jmp loc_435A32  +
cmp dword ptr [esi+1FCh] 0 +
jz loc_4359D6  +
mov eax [esi+4Ch] +
mov eax [eax+4] +
test eax eax +
jz loc_435B80  +
mov [esp+4Ch+var_4C] 20h +
call sub_452ED0  +
mov edx [esp+4Ch+var_1C] +
mov [eax] edx +
mov edx [esp+4Ch+var_18] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_14] +
or word ptr [eax+6] 400h +
mov [eax+8] edx +
mov edx [esp+4Ch+var_10] +
mov [eax+0Ch] edx +
mov edx [ebp+0] +
mov [eax+10h] edx +
mov edx [ebp+4] +
mov [eax+14h] edx +
mov edx [ebp+8] +
mov [eax+18h] edx +
mov edx [ebp+0Ch] +
or word ptr [eax+16h] 400h +
mov [eax+1Ch] edx +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_4396E0  +
jmp loc_4359C4  +
mov eax 2 +
jmp loc_4359B8  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [eax] +
mov [esp+2Ch+var_14] ecx +
mov ecx [eax+1BCh] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_1C] ebx +
mov ebx [eax+1C0h] +
mov edx ebx +
sub edx ecx +
cmp edx 13h +
jbe loc_435C70  +
mov edx [eax+1B8h] +
add ecx 14h +
mov [eax+1BCh] ecx +
cmp ecx edx +
jz loc_435CB0  +
mov edi [eax+1C8h] +
mov esi ebx +
add ecx edi +
not edi  +
and ecx edi +
mov edi [eax+1B4h] +
mov ebp ecx +
mov [eax+1BCh] ecx +
sub ebp edi +
sub esi edi +
cmp ebp esi +
jbe loc_435C01  +
mov [eax+1BCh] ebx +
mov ecx ebx +
mov [eax+1B8h] ecx +
mov esi [esp+2Ch+var_1C] +
mov ecx [eax+20h] +
mov [edx+4] ecx +
mov ecx [esi+34h] +
mov [edx] ecx +
mov ecx 1 +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_435C2A  +
mov ebx [esp+2Ch+var_18] +
test ebx ebx +
setz cl  +
mov [edx+0Ch] cl +
mov esi [esp+2Ch+var_14] +
cmp byte ptr [eax+0Ah] 0 +
setnz byte ptr [edx+0Dh]  +
cmp byte ptr [eax+0ECh] 0 +
mov [edx+10h] esi +
jz loc_435C4F  +
mov ecx [eax+0E4h] +
test ecx ecx +
jz loc_435CA0  +
mov dword ptr [edx+8] 0 +
movzx ebx byte ptr [esp+2Ch+var_18] +
mov [eax+0Ah] bl +
mov eax [esp+2Ch+var_1C] +
mov [eax+34h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1B0h] +
mov [esp+2Ch+var_28] 14h +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] eax +
call sub_4592E0  +
mov eax [esp+2Ch+var_10] +
mov ecx [eax+1BCh] +
mov ebx [eax+1C0h] +
jmp loc_435BBE  +
mov ecx [esp+2Ch+arg_0] +
mov [edx+8] ecx +
jmp loc_435C56  +
or byte ptr [eax+1D8h] 2 +
jmp loc_435BD5  +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_435CE9  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] ebx +
call sub_444E50  +
xor eax 1 +
movzx edx al +
mov eax [ebx+0E8h] +
mov ecx 4 +
mov [esp+18h+arg_0] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_435B90  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_435130  +
test eax eax +
mov esi eax +
jz loc_435D75  +
mov eax [ebx+21Ch] +
cmp byte ptr [ebx+24Ch] 0 +
setz byte ptr [ebx+0Dh]  +
test eax eax +
jz loc_435D45  +
mov [esp+18h+var_18] ebx +
call eax  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call sub_43BB20  +
test al al +
jz loc_435D6F  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_435D6F  +
mov edx [ebx+20h] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] edx +
call eax  +
and word ptr [esi+14h] 0DFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
sub esp 18h +
cmp byte ptr [eax+270h] 0 +
jz loc_435EA0  +
cmp byte ptr [eax+18h] 0 +
jnz loc_435E69  +
sub byte ptr [eax+10h] 1 +
cmp dword ptr [ebx+50h] offset off_4CCFC0 +
jz loc_435E7A  +
mov [esp+18h+var_18] ebx +
call sub_4481C0  +
cmp byte ptr [ebx+24Bh] 0 +
mov byte ptr [ebx+8] 0 +
mov byte ptr [ebx+0Ch] 0 +
setz byte ptr [ebx+0Dh]  +
mov byte ptr [ebx+0Bh] 0 +
mov dword ptr [ebx+50h] 0 +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [eax+18h] 0 +
jnz loc_435E7A  +
test edx edx +
jz loc_435E7A  +
call sub_4353C0  +
mov eax [ebx+10Ch] +
test eax eax +
jnz loc_435E7A  +
lea eax [ebx+0F4h] +
mov [ebx+104h] eax +
mov eax [ebx+0FCh] +
mov [ebx+0F0h] eax +
jmp loc_435E7A  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
test edx edx +
jnz loc_435F24  +
jmp loc_435F40  +
mov edi [esi] +
add esi 4 +
mov [esp+28h+var_28] edi +
call strlen  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_20] eax +
call sub_442000  +
mov [ebx+4] eax +
mov eax [esi-4] +
mov [esp+28h+var_28] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jz loc_435F40  +
cmp byte ptr [ebx+8] 0 +
jz loc_435EF3  +
mov edx [ebx+0Ch] +
mov ecx esi +
mov eax ebp +
call sub_435EE0  +
mov esi eax +
jmp loc_435EF3  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
test eax eax +
jnz loc_435F88  +
jmp loc_435F9C  +
mov eax [ebx+4] +
lea edi [esi+4] +
mov edx [eax+4] +
mov eax [eax] +
lea ecx [edx+1] +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_45C730  +
mov [esi] eax +
mov ebx [ebx] +
test ebx ebx +
jz loc_435FA0  +
mov esi edi +
cmp byte ptr [ebx+8] 0 +
jz loc_435F60  +
mov eax [ebx+0Ch] +
mov edx esi +
call sub_435F50  +
mov esi eax +
jmp loc_435F60  +
mov edi edx +
nop   +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_435FF5  +
test dl dl +
mov esi ecx +
mov [esp+14h+var_14] ebx +
jnz loc_436000  +
call sub_441990  +
cmp byte ptr [eax+4] 16h +
jz loc_435FF5  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+14h+var_C] offset aExtraTokensAtE +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_8] eax +
call sub_43CBB0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_43B980  +
jmp loc_435FD1  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_43B980  +
cmp byte ptr [eax+4] 3Eh +
jnz loc_436052  +
mov edx [ebx+1F8h] +
test edx edx +
jz loc_436043  +
mov ecx [ebx+20h] +
add eax 8 +
mov [esp+8] eax +
mov [esp] ebx +
mov [esp+4] ecx +
call edx  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_435FB0  +
***
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp] ebx +
mov dword ptr [esp+8] offset aInvalidSDirect +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43CB30  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
xor edx edx +
jmp sub_435FB0  +
***
push ebp  +
mov ecx 10h +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
lea edx [esp+1Ch] +
mov eax esi +
call sub_4354B0  +
test eax eax +
mov ebx eax +
jz loc_436116  +
mov edx [esp+1Ch] +
mov dword ptr [edx] 0 +
movzx eax byte ptr [eax+14h] +
mov edi edx +
and eax 3Fh +
cmp al 2 +
jz loc_436128  +
mov eax [edi+4] +
shl eax 4 +
lea ebp [eax+8] +
mov eax [esi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_436120  +
mov [esp] ebp +
call eax  +
mov [esp+4] edi +
mov [esp+8] ebp +
mov [esp] eax +
mov [esp+1Ch] eax +
call memcpy  +
mov edi [esp+1Ch] +
movzx edx byte ptr [ebx+14h] +
xor ecx ecx +
mov eax esi +
mov [ebx+18h] edi +
and edx 0FFFFFFC0h +
or edx 2 +
mov [ebx+14h] dl +
xor edx edx +
call sub_435FB0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+24h] +
add [eax+8] ebp +
jmp loc_4360FB  +
***
mov eax ebx +
call sub_435700  +
mov eax [eax] +
test eax eax +
jz loc_436158  +
mov eax [ebx] +
mov dword ptr [esp+8] offset aSReAsserted +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
add eax 1 +
mov [esp+0Ch] eax +
call sub_43CB30  +
jmp loc_436116  +
***
mov edi [esp+1Ch] +
mov eax [ebx+18h] +
mov [edi] eax +
jmp loc_4360C8  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
lea esi [esi+0] +
mov [esp+38h+var_38] ebx +
call sub_43B980  +
cmp byte ptr [eax+4] 53h +
jz loc_436180  +
mov edx eax +
mov ecx [eax] +
mov eax [esp+38h+arg_0] +
mov [eax] ecx +
movzx eax byte ptr [edx+4] +
cmp al 3Eh +
jz loc_4361F3  +
cmp al 44h +
jz loc_4361FB  +
cmp al 3 +
jnz loc_436260  +
mov eax ebx +
nop   +
call sub_435790  +
cmp dword ptr [ebx+50h] offset off_4CD044 +
mov dword ptr [edi] 1 +
mov esi eax +
jz loc_436253  +
test ebp ebp +
jz loc_4361DB  +
cmp byte ptr [ebx+24Bh] 0 +
jz loc_436297  +
mov eax ebx +
xor ecx ecx +
mov edx 1 +
call sub_435FB0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
cmp byte ptr [eax] 52h +
jz loc_436260  +
mov eax [edx+8] +
mov [esp+38h+var_28] edx +
sub eax 1 +
mov [esp+38h+var_38] eax +
call sub_452ED0  +
mov edx [esp+38h+var_28] +
mov esi eax +
mov eax [edx+8] +
lea ecx [eax-2] +
mov eax [edx+0Ch] +
mov [esp+38h+var_30] ecx +
mov [esp+38h+var_38] esi +
add eax 1 +
mov [esp+38h+var_34] eax +
call memcpy  +
mov edx [esp+38h+var_28] +
mov eax [edx+8] +
mov byte ptr [esi+eax-2] 0 +
xor eax eax +
cmp byte ptr [edx+4] 44h +
setz al  +
cmp dword ptr [ebx+50h] offset off_4CD044 +
mov [edi] eax +
jnz loc_4361CA  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
cmp eax offset off_4CD044 +
jz loc_436364  +
mov eax [eax+4] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aSExpectsFilena +
mov [esp+38h+var_34] 3 +
call sub_43CB30  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] 20h +
call sub_452ED0  +
mov [esp+38h+var_28] eax +
mov eax [ebx+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jz loc_436360  +
mov [esp+38h+var_24] 8 +
xor edi edi +
mov [esp+38h+var_38] ebx +
call sub_441990  +
movzx edx byte ptr [eax+4] +
mov ecx eax +
cmp dl 16h +
jz loc_436345  +
cmp dl 4Fh +
jz loc_436300  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+38h+var_30] offset aExtraTokensAtE +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_2C] eax +
call sub_43CB30  +
jmp loc_4362C1  +
lea edx [edi+1] +
cmp edx [esp+38h+var_24] +
jnb loc_436314  +
mov eax [esp+38h+var_28] +
mov [eax+edi*4] ecx +
mov edi edx +
jmp loc_4362C1  +
shl [esp+38h+var_24] 1 +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+var_24] +
mov [esp+38h+var_1C] edx +
shl eax 2 +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+var_28] +
mov [esp+38h+var_38] eax +
call sub_452F50  +
mov edx [esp+38h+var_1C] +
mov ecx [esp+38h+var_20] +
mov [esp+38h+var_28] eax +
jmp loc_436309  +
shl edi 2 +
mov eax [esp+38h+var_28] +
mov dword ptr [eax+edi] 0 +
mov [ebp+0] eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_436348  +
mov eax offset aPragmaDependen +
jmp loc_436271  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp byte ptr [eax+24Bh] 0 +
lea ecx [esp+44h+var_1C] +
lea edx [esp+44h+var_20] +
setz byte ptr [eax+0Dh]  +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
mov eax ebx +
mov [esp+44h+var_1C] 0 +
call sub_436170  +
test eax eax +
mov esi eax +
jz loc_436426  +
cmp byte ptr [eax] 0 +
jz loc_436460  +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 0C7h +
ja loc_436440  +
mov eax ebx +
call sub_4353C0  +
mov eax [ebx+1ECh] +
test eax eax +
jz loc_4363FE  +
mov edx [ebx+50h] +
mov ebp [esp+44h+var_1C] +
mov ecx [edx+4] +
mov edx [ebx+20h] +
mov [esp+44h+var_30] ebp +
mov ebp [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] ebp +
mov [esp+44h+var_44] ebx +
call eax  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_38] edi +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_3C] eax +
call sub_44B0B0  +
mov [esp+44h+var_44] esi +
call free  +
mov eax [esp+44h+var_1C] +
test eax eax +
jz loc_436436  +
mov [esp+44h+var_44] eax +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_3C] offset aIncludeNestedT +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_44] ebx +
call sub_43CB30  +
jmp loc_43641E  +
mov eax [ebx+50h] +
mov eax [eax+4] +
mov [esp+44h+var_34] offset aEmptyFilenameI +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_30] eax +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] ebx +
mov [esp+44h+var_3C] eax +
call sub_43CC30  +
jmp loc_43641E  +
***
mov eax [esp+arg_0] +
mov edx 2 +
jmp sub_436370  +
***
push ebx  +
mov edx 1 +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_4364D1  +
add esp 18h +
mov eax ebx +
pop ebx  +
jmp sub_436370  +
***
mov [esp] ebx +
mov dword ptr [esp+8] offset aInclude_nextIn +
mov dword ptr [esp+4] 0 +
call sub_43CB30  +
add esp 18h +
mov eax ebx +
pop ebx  +
xor edx edx +
jmp sub_436370  +
***
mov eax [esp+4] +
xor edx edx +
jmp sub_436370  +
***
push esi  +
xor ecx ecx +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
lea eax [esp+1Ch] +
mov [esp] eax +
lea edx [esp+18h] +
mov eax ebx +
call sub_436170  +
test eax eax +
mov esi eax +
jz loc_4365A1  +
mov eax [esp+18h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_44B690  +
test eax eax +
js loc_4365A7  +
jz loc_436599  +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCurrentFileIsO +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_43CB30  +
mov [esp] ebx +
call sub_43B980  +
cmp byte ptr [eax+4] 16h +
jz loc_436599  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_439AE0  +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp] 0 +
mov eax ebx +
call sub_435850  +
mov [esp] esi +
call free  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] offset aCannotFindSour +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_43CB30  +
jmp loc_436599  +
***
push esi  +
mov edx 1 +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax ebx +
call sub_435130  +
test eax eax +
mov esi eax +
jz loc_43661F  +
mov eax [ebx+21Ch] +
test eax eax +
jz loc_4365FA  +
mov [esp] ebx +
call eax  +
mov eax [ebx+1F4h] +
test eax eax +
jz loc_436614  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
movzx eax byte ptr [esi+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_436630  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_435FB0  +
***
movzx eax word ptr [esi+14h] +
shr ax 6 +
test al 10h +
jnz loc_4366A0  +
test al 4 +
jnz loc_436661  +
cmp byte ptr [ebx+267h] 0 +
jnz loc_4366C0  +
mov [esp] esi +
call sub_43BA00  +
add esp 24h +
mov eax ebx +
pop ebx  +
xor ecx ecx +
pop esi  +
xor edx edx +
jmp sub_435FB0  +
***
cmp byte ptr [ebx+25Fh] 0 +
jz loc_436640  +
mov edx [esi] +
mov eax [ebx+20h] +
mov dword ptr [esp+10h] offset aUndefiningS +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Bh +
mov [esp] ebx +
call sub_43CC80  +
jmp loc_436640  +
***
mov eax [esi] +
mov dword ptr [esp+8] offset aUndefiningS +
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
mov [esp+0Ch] eax +
call sub_43CB30  +
jmp loc_436640  +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov [esp] ebx +
call sub_439080  +
jmp loc_436649  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_436710  +
xor esi esi +
mov edi 1 +
mov [esp+20h] esi +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 6 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_435B90  +
***
xor edx edx +
mov eax ebx +
call sub_435130  +
test eax eax +
mov esi eax +
jz loc_4366F0  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4367A0  +
movzx eax word ptr [esi+14h] +
xor edi edi +
shr ax 6 +
test al 80h +
jnz loc_43676F  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_4367D0  +
mov eax [ebx+218h] +
test eax eax +
jz loc_43676F  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_436789  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435FB0  +
jmp loc_4366F7  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr di 0Eh +
xor edi 1 +
shr ax 6 +
and edi 1 +
test al 4 +
jnz loc_436734  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_436734  +
***
test al 4 +
jz loc_4367E7  +
mov eax [ebx+228h] +
test eax eax +
jz loc_4367E7  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_43675F  +
jmp loc_43676F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_436831  +
mov edi 1 +
mov dword ptr [esp+20h] 0 +
add esp 10h +
mov edx edi +
mov eax ebx +
mov ecx 3 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_435B90  +
***
xor edx edx +
mov eax ebx +
call sub_435130  +
test eax eax +
mov esi eax +
jz loc_436810  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4368C0  +
movzx eax word ptr [esi+14h] +
mov edi 1 +
shr ax 6 +
test al 80h +
jnz loc_436893  +
movzx edx word ptr [esi+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [esi+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_4368F0  +
mov eax [ebx+218h] +
test eax eax +
jz loc_436893  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
mov eax [ebx+220h] +
test eax eax +
jz loc_4368AD  +
mov edx [ebx+20h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] edx +
call eax  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435FB0  +
jmp loc_436815  +
***
movzx edi word ptr [esi+14h] +
mov eax edi +
shr ax 6 +
shr di 0Eh +
and edi 1 +
test al 4 +
jnz loc_436858  +
mov eax [esi+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_436858  +
***
test al 4 +
jz loc_436907  +
mov eax [ebx+228h] +
test eax eax +
jz loc_436907  +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov eax [ebx+214h] +
test eax eax +
jnz loc_436883  +
jmp loc_436893  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esi] +
mov ebx [edi+34h] +
test ebx ebx +
jz loc_4369C3  +
movzx eax byte ptr [ebx+0Dh] +
test al al +
jz loc_436974  +
mov edx [ebx] +
test edx edx +
jz loc_436995  +
cmp ebx [esi+1B4h] +
mov [edi+34h] edx +
mov [esi+0Ah] al +
jbe loc_43695B  +
cmp ebx [esi+1C0h] +
jb loc_4369B0  +
add esi 1B0h +
mov [esp+4] ebx +
mov [esp] esi +
call sub_4593F0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp byte ptr [esi+25Ch] 0 +
jz loc_43693F  +
xor edx edx +
mov eax esi +
mov ecx 8 +
call sub_435FB0  +
mov edx [ebx] +
movzx eax byte ptr [ebx+0Dh] +
test edx edx +
jnz loc_436945  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_436945  +
mov byte ptr [esi+0ECh] 1 +
mov [esi+0E4h] ecx +
jmp loc_436945  +
***
mov [esi+1B8h] ebx +
mov [esi+1BCh] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+8] offset aEndifWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43CB30  +
jmp loc_43696D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
call sub_4352F0  +
test eax eax +
mov edx eax +
jz loc_436BB5  +
mov ecx [eax+8] +
lea eax [ecx+20h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov edx [edx+0Ch] +
sub esp eax +
xor eax eax +
lea ebx [esp+38h+var_15] +
and ebx 0FFFFFFF0h +
cmp byte ptr [edx] 4Ch +
lea esi [edx+ecx-1] +
setz al  +
lea eax [edx+eax+1] +
mov edx ebx +
cmp eax esi +
jnb loc_436A67  +
mov edi ebx +
jmp loc_436A3D  +
add eax 1 +
add edx 1 +
cmp esi eax +
mov [edx-1] cl +
jbe loc_436A65  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_436A30  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_436A53  +
cmp bl 5Ch +
jnz loc_436A30  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp esi eax +
mov [edx-1] cl +
ja loc_436A3D  +
mov ebx edi +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_435FB0  +
mov eax [ebp+arg_0] +
call sub_4353C0  +
mov [esp+38h+var_38] 14h +
call sub_452ED0  +
mov edx ebx +
mov esi eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_436AB0  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+38h+var_38] edx +
call sub_452ED0  +
mov [esi+4] eax +
mov edi eax +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] eax +
call strcpy  +
mov eax [ebp+arg_0] +
mov eax [eax+2F8h] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_43E6B0  +
test byte ptr [eax+14h] 3Fh +
mov ebx eax +
jnz loc_436B33  +
or byte ptr [esi+10h] 4 +
mov eax [ebp+arg_0] +
mov [eax+2F8h] esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43C5B0  +
mov [esp+38h+var_38] eax +
mov [ebp+var_1C] eax +
call strlen  +
mov edi eax +
lea eax [eax+2] +
mov [esp+38h+var_38] eax +
call sub_452ED0  +
mov [esi+8] eax +
mov byte ptr [eax+edi] 0Ah +
mov byte ptr [eax+edi+1] 0 +
mov edx [ebx+18h] +
mov edx [edx+8] +
mov [esi+0Ch] edx +
mov edx [ebx+18h] +
movzx ecx byte ptr [edx+14h] +
movzx edx byte ptr [esi+10h] +
shr cl 2 +
and ecx 1 +
and edx 0FFFFFFFEh +
or edx ecx +
mov [esi+10h] dl +
mov ecx [ebx+18h] +
and edx 0FFFFFFFDh +
movzx ecx byte ptr [ecx+14h] +
shr cl 2 +
and ecx 2 +
or edx ecx +
mov [esi+10h] dl +
mov [esp+38h+var_30] edi +
mov edi [ebp+var_1C] +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_34] edi +
call memcpy  +
jmp loc_436B22  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragmaP +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43CC30  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_435FB0  +
mov eax [ebp+arg_0] +
call sub_4353C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_436C42  +
mov eax ebx +
xor ecx ecx +
xor edx edx +
call sub_435FB0  +
mov eax [ebx] +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_44B090  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aPragmaOnceInMa +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_43CB30  +
jmp loc_436C21  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_436D07  +
cmp dword ptr [ebx+10h] 5 +
jz loc_436CC3  +
movzx eax byte ptr [ebx+0Ch] +
mov dword ptr [ebx+10h] 5 +
mov [esi+0Ah] al +
cmp byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+0Ch] 1 +
mov dword ptr [ebx+8] 0 +
jnz loc_436CA4  +
cmp byte ptr [esi+25Ch] 0 +
jnz loc_436CB0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add esp 24h +
mov eax esi +
pop ebx  +
mov ecx 8 +
pop esi  +
xor edx edx +
jmp sub_435FB0  +
***
mov dword ptr [esp+8] offset aElseAfterElse +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43CB30  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset aTheConditional +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
mov [esp] esi +
call sub_43CC30  +
jmp loc_436C7C  +
***
mov dword ptr [esp+8] offset aElseWithoutIf +
mov dword ptr [esp+4] 3 +
mov [esp] esi +
call sub_43CB30  +
jmp loc_436CA4  +
***
jmp loc_436D30  +
push ebx  +
mov ecx 11h +
sub esp 28h +
mov eax [esp+30h] +
lea edx [esp+1Ch] +
call sub_4354B0  +
test eax eax +
mov ebx eax +
jz loc_436D57  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 2 +
jz loc_436D60  +
add esp 28h +
pop ebx  +
retn   +
***
mov edx [esp+1Ch] +
test edx edx +
jz loc_436D98  +
mov eax ebx +
call sub_435700  +
mov edx [eax] +
test edx edx +
jz loc_436D79  +
mov edx [edx] +
mov [eax] edx +
mov eax [ebx+18h] +
test eax eax +
jz loc_436D92  +
mov eax [esp+30h] +
xor ecx ecx +
xor edx edx +
call sub_435FB0  +
add esp 28h +
pop ebx  +
retn   +
***
and byte ptr [ebx+14h] 0C0h +
jmp loc_436D80  +
***
mov [esp] ebx +
call sub_43BA00  +
jmp loc_436D57  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 34h +
mov [esp] eax +
call sub_441990  +
cmp byte ptr [eax+4] 3Eh +
jz loc_436E00  +
mov eax esi +
mov ecx offset aError_0 +
test al al +
mov eax offset aWarning +
cmovz ecx eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset aInvalidPragm_1 +
mov dword ptr [esp+4] 3 +
mov [esp] ebx +
call sub_43CB30  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
add eax 8 +
lea edx [esp+28h] +
mov dword ptr [esp+10h] 3Eh +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_434770  +
test al al +
jz loc_436DC7  +
mov eax [esp+28h] +
test eax eax +
jz loc_436DC7  +
mov eax esi +
mov edx [esp+2Ch] +
cmp al 1 +
sbb eax eax +
not eax  +
and eax 3 +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aS_11 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43CB30  +
mov eax [esp+2Ch] +
mov [esp] eax +
call free  +
jmp loc_436DF4  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_436DB0  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_436DB0  +
***
sub esp 24h +
mov esi [esp+24h+arg_0] +
mov eax [esi] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_436F34  +
cmp dword ptr [ebx+10h] 5 +
jz loc_436EF0  +
cmp byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 9 +
jz loc_436ED0  +
mov byte ptr [esi+0Ah] 1 +
mov dword ptr [ebx+8] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
call sub_444E50  +
mov edx eax +
xor edx 1 +
mov [esi+0Ah] dl +
mov [ebx+0Ch] al +
jmp loc_436EBD  +
mov [esp+24h+var_1C] offset aElifAfterElse +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_43CB30  +
mov eax [ebx+4] +
mov [esp+24h+var_14] offset aTheConditional +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] esi +
call sub_43CC30  +
jmp loc_436EAC  +
mov [esp+24h+var_1C] offset aElifWithoutIf +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] esi +
call sub_43CB30  +
jmp loc_436EC4  +
***
jmp sub_436F60  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+1Ch] +
cmp dword ptr [eax+20h] 1 +
jz loc_436FA0  +
xor ecx ecx +
xor edx edx +
mov eax ebx +
call sub_435FB0  +
mov eax ebx +
call sub_4353C0  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
call sub_44B4E0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset aPragmaSystem_h +
mov [esp+18h+var_14] 0 +
call sub_43CB30  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov [esp+38h+var_20] ecx +
mov ebx [esp+38h+arg_0] +
jz loc_437130  +
mov [esp+38h+var_38] edx +
call strlen  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_442000  +
mov esi eax +
mov eax [edi+1DCh] +
test eax eax +
jnz loc_43700E  +
jmp loc_4370E6  +
mov eax [eax] +
test eax eax +
jz loc_4370E6  +
cmp esi [eax+4] +
jnz loc_437004  +
cmp byte ptr [eax+8] 0 +
jz loc_437165  +
cmp [eax+0Bh] bl +
jnz loc_4371B6  +
lea ecx [eax+0Ch] +
mov esi [esp+38h+var_20] +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] eax +
call sub_442000  +
mov ecx [esp+38h+var_1C] +
mov ebx [ecx] +
mov esi eax +
test ebx ebx +
jnz loc_43705D  +
jmp loc_4370A2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4370A2  +
cmp esi [ebx+4] +
jnz loc_437057  +
cmp byte ptr [ebx+8] 0 +
jnz loc_437165  +
test ebp ebp +
mov eax [esp+38h+var_20] +
jz loc_437190  +
mov [esp+38h+var_28] eax +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aPragmaSSIsAlre +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_43CB30  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_20] ecx +
call sub_441C30  +
mov ecx [esp+38h+var_20] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov edx [ecx] +
mov [eax] edx +
mov [ecx] eax +
mov [eax+4] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] edi +
call sub_441C30  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov ecx [edi+1DCh] +
mov [eax] ecx +
mov [edi+1DCh] eax +
mov [eax+4] esi +
mov byte ptr [eax+8] 1 +
mov [eax+0Bh] bl +
jmp loc_437026  +
test bl bl +
lea ecx [eax+1DCh] +
jz loc_437029  +
mov eax [esp+38h+var_20] +
mov [esp+38h+var_30] offset aRegisteringPra +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
call sub_43CB30  +
xor eax eax +
jmp loc_43709A  +
mov eax [esi] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] offset aRegisteringSAs +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_2C] eax +
call sub_43CB30  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_2C] eax +
mov [esp+38h+var_30] offset aPragmaSIsAlrea +
mov [esp+38h+var_34] 4 +
call sub_43CB30  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_2C] ebp +
mov [esp+38h+var_30] offset aRegisteringP_0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_43CB30  +
xor eax eax +
jmp loc_43709A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [ebp+arg_0] +
cmp byte ptr [ebx+11h] 0 +
setnz [ebp+var_79]  +
cmp byte ptr [ebx+13h] 0 +
setnz [ebp+var_7A]  +
jz loc_437205  +
mov byte ptr [ebx+10h] 0 +
cmp [ebp+var_79] 0 +
jz loc_437220  +
cmp byte ptr [ebx+26Ah] 0 +
jnz loc_437471  +
mov byte ptr [ebx+11h] 0 +
mov byte ptr [ebx+10h] 0 +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+0A8h+var_A8] ebx +
call sub_441990  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_4373C2  +
cmp al 37h +
jz loc_437425  +
cmp al 16h +
jz loc_437348  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_43741C  +
xor esi esi +
mov edi 1 +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_437350  +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] ebx +
mov [ebp+var_88] edx +
call sub_441BB0  +
mov ecx eax +
mov [ebp+var_84] eax +
mov eax [ebx+230h] +
test eax eax +
jz loc_437601  +
mov [esp+0A8h+var_A0] offset off_4CCF60 +
mov [esp+0A8h+var_A4] ecx +
mov [esp+0A8h+var_A8] ebx +
call eax  +
test eax eax +
mov [ebp+var_80] eax +
jz loc_437601  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov ecx [edx] +
lea edx [ebp+var_74] +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] ecx +
mov ecx edx +
call sub_42DCF0  +
mov edx [ebp+var_88] +
mov eax [ebx+1Ch] +
mov edx [edx] +
sub esp 8 +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_A4] edx +
call sub_42C640  +
mov ecx [ebp+var_80] +
mov [esp+0A8h+var_A0] ecx +
mov [esp+0A8h+var_A4] edx +
lea edx [ebp+var_74] +
mov ecx edx +
mov [esp+0A8h+var_A8] eax +
call sub_42DF70  +
mov eax [ebp+var_80] +
mov ecx [ebp+var_84] +
sub esp 0Ch +
mov [esp+0A8h+var_94] eax +
lea eax [ebp+var_74] +
mov [esp+0A8h+var_98] ecx +
mov [esp+0A8h+var_9C] offset aInvalidPreproc +
mov [esp+0A8h+var_A0] eax +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
call sub_43CDC0  +
lea ecx [ebp+var_74] +
call sub_42D9D0  +
jmp loc_437350  +
mov edi 1 +
xor esi esi +
nop   +
cmp byte ptr [ebx+270h] 0 +
mov [ebx+50h] esi +
jnz loc_4373B6  +
test esi esi +
jz loc_4373A0  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+0A8h+var_A8] ebx +
call eax  +
mov edx edi +
mov eax ebx +
call sub_435E50  +
cmp [ebp+var_79] 0 +
jz loc_437387  +
cmp byte ptr [ebx+18h] 0 +
jnz loc_437387  +
mov byte ptr [ebx+11h] 2 +
mov byte ptr [ebx+10h] 1 +
cmp [ebp+var_7A] 0 +
jz loc_437391  +
mov byte ptr [ebx+10h] 1 +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_43736A  +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
call sub_439AE0  +
jmp loc_43736A  +
mov eax ebx +
call sub_435D80  +
lea esi [esi+0] +
jmp loc_43735C  +
mov eax [edx+8] +
movzx eax byte ptr [eax+0Ch] +
test al 1 +
jz loc_43725B  +
shr al 1 +
movzx eax al +
lea eax [eax+eax*2] +
lea esi ds:4CCFC0h[eax*4] +
movzx eax byte ptr [ebx+26Bh] +
test byte ptr [esi+0Bh] 2 +
jnz loc_4373F4  +
mov byte ptr [ebx+0ECh] 0 +
test al al +
jz loc_437490  +
cmp byte ptr [ebx+2A8h] 0 +
jnz loc_4374E6  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_43741C  +
movzx eax byte ptr [esi+0Bh] +
test al 8 +
jnz loc_4374EA  +
xor edi edi +
xor esi esi +
jmp loc_437350  +
cmp dword ptr [ebx+244h] 0Fh +
jz loc_43741C  +
cmp byte ptr [ebx+26Ah] 0 +
mov esi offset off_4CCEDC +
movzx eax byte ptr [ebx+26Bh] +
jz loc_4373E7  +
test al al +
jnz loc_4373E7  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_4373E7  +
mov [esp+0A8h+var_A0] offset aStyleOfLineDir +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_43CB30  +
movzx eax byte ptr [ebx+26Bh] +
jmp loc_4373E7  +
mov [esp+0A8h+var_A0] offset aEmbeddingADire +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
call sub_43CB30  +
jmp loc_437218  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
cmp byte ptr [ebx+0Ah] 0 +
mov [ebx+9] al +
jnz loc_437558  +
cmp byte ptr [esi+0Ah] 2 +
jz loc_437520  +
test byte ptr [esi+0Bh] 20h +
jnz loc_4375D0  +
cmp esi offset off_4CD074 +
jnz loc_437558  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_4375D0  +
cmp byte ptr [ebx+25Ah] 0 +
jnz loc_43756D  +
jmp loc_4374FA  +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+0Bh] al +
movzx eax byte ptr [esi+0Bh] +
and eax 4 +
mov [ebx+9] al +
cmp byte ptr [ebx+0Ah] 0 +
mov edi 1 +
jz loc_437350  +
test byte ptr [esi+0Bh] 1 +
mov eax 0 +
cmovz esi eax +
jmp loc_437350  +
cmp esi offset off_4CD074 +
jz loc_43764C  +
cmp byte ptr [ebx+26Ah] 0 +
jz loc_4374B4  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsAGccExtensi +
mov [esp+0A8h+var_A4] 2 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43CB30  +
cmp byte ptr [ebx+25Ah] 0 +
jz loc_4374FA  +
cmp esi offset off_4CD02C +
jz loc_43762F  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4375A0  +
cmp byte ptr [esi+0Ah] 0 +
jnz loc_4374FA  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aTraditionalCIg +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43CB70  +
jmp loc_4374FA  +
cmp byte ptr [esi+0Ah] 0 +
jz loc_4374FA  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSuggestHidingS +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43CB70  +
jmp loc_4374FA  +
cmp byte ptr [ebx+254h] 0 +
jz loc_437558  +
mov eax [esi+4] +
mov [esp+0A8h+var_A0] offset aSIsADeprecated +
mov [esp+0A8h+var_A4] 1 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43CB70  +
jmp loc_437558  +
mov eax [ebp+var_84] +
mov edi 1 +
xor esi esi +
mov [esp+0A8h+var_A0] offset aInvalidPrepr_0 +
mov [esp+0A8h+var_A4] 3 +
mov [esp+0A8h+var_A8] ebx +
mov [esp+0A8h+var_9C] eax +
call sub_43CB30  +
jmp loc_437350  +
mov [esp+0A8h+var_A0] offset aSuggestNotUsin +
mov [esp+0A8h+var_A4] 6 +
mov [esp+0A8h+var_A8] ebx +
call sub_43CB70  +
jmp loc_4374FA  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_4374D7  +
jmp loc_43752C  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset loc_4350D0 +
mov [esp] eax +
call sub_442090  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov edx [esp+24h+arg_C] +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_14] edx +
mov edx [esp+24h+arg_8] +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
mov edx [esp+24h+arg_10] +
mov [esp+24h+var_1C] edx +
mov edx [esp+24h+arg_4] +
mov [esp+24h+var_20] edx +
call sub_42BBC0  +
test eax eax +
mov esi eax +
jz loc_4376E4  +
mov edx [eax+0Ch] +
mov eax [ebx+1Ch] +
mov [esp+24h+var_1C] 7Fh +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_42BF30  +
mov eax [ebx+1E4h] +
test eax eax +
jz loc_437700  +
mov [esp+24h+arg_4] esi +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp eax  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_0] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov ecx [eax+8] +
movzx eax byte ptr [eax+14h] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_24] ecx +
mov byte ptr [esp+3Ch+var_20] al +
call sub_439AE0  +
mov [esp+3Ch+var_3C] esi +
call sub_43B980  +
cmp byte ptr [eax+4] 37h +
jz loc_437786  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
call sub_441BB0  +
mov [esp+3Ch+var_34] offset aSAfterIsNotAPo +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43CB30  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+8] +
mov ebx [eax+0Ch] +
test ebp ebp +
jz loc_437968  +
movzx ecx byte ptr [ebx] +
lea edx [ebx+1] +
test byte ptr ds:word_4D0720[ecx+ecx] 4 +
jz loc_437756  +
add ebp ebx +
xor ebx ebx +
jmp loc_4377C1  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4D0720[ecx+ecx] 4 +
jz loc_437756  +
lea ebx [ebx+ebx*4] +
cmp edx ebp +
lea ebx [ecx+ebx*2-30h] +
jnz loc_4377B0  +
mov [esp+3Ch+var_3C] esi +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_437860  +
cmp dl 16h +
jnz loc_437830  +
movzx eax byte ptr [esp+3Ch+var_20] +
mov ebp 3 +
mov [esp+3Ch+var_20] eax +
mov eax esi +
call sub_4353C0  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] eax +
call sub_437690  +
mov byte ptr [edi+50h] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_441BB0  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] offset aSIsNotAValidFi +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_30] eax +
call sub_43CB30  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+3Ch+var_14] +
add eax 8 +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_2C] 3Eh +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
call sub_434770  +
test al al +
mov eax [esp+3Ch+var_24] +
cmovnz eax [esp+3Ch+var_10] +
xor edx edx +
mov [esp+3Ch+var_24] eax +
mov eax esi +
call sub_435250  +
cmp eax 1 +
jz loc_437975  +
cmp eax 2 +
mov ebp 3 +
jz loc_4379C4  +
xor edx edx +
cmp eax 3 +
mov [esp+3Ch+var_20] 0 +
jz loc_437998  +
mov eax [esi] +
xor ecx ecx +
mov [eax+3Dh] dl +
xor edx edx +
mov eax esi +
call sub_435FB0  +
mov eax esi +
call sub_4353C0  +
cmp ebp 1 +
jnz loc_437960  +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
mov edx [eax+10h] +
test edx edx +
js loc_437934  +
mov ecx [esp+3Ch+var_24] +
mov eax [esi+1Ch] +
test ecx ecx +
jz loc_4377FE  +
imul edx edx +
add edx [eax] +
jz loc_4377FE  +
mov eax [edx+8] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_4531F0  +
test eax eax +
jz loc_437960  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] offset aFileSLinemarke +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43CB70  +
jmp loc_43777E  +
mov eax [esi+1Ch] +
jmp loc_4377FE  +
xor ebx ebx +
lea esi [esi+0] +
jmp loc_4377CC  +
mov eax [esp+3Ch+var_24] +
xor ebp ebp +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] eax +
call sub_44B490  +
mov edx 1 +
mov eax esi +
call sub_435250  +
jmp loc_4378C6  +
mov edx 3 +
mov eax esi +
call sub_435250  +
cmp eax 4 +
setz dl  +
add edx 1 +
cmp eax 4 +
setz al  +
movzx eax al +
mov [esp+3Ch+var_20] eax +
add [esp+3Ch+var_20] 1 +
jmp loc_4378D9  +
mov edx 2 +
mov eax esi +
call sub_435250  +
mov bp 1 +
jmp loc_4378C6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+60h] +
mov edi [esi+1Ch] +
mov eax [edi+8] +
sub eax 1 +
imul eax eax +
add eax [edi] +
cmp byte ptr [esi+268h] 1 +
movzx ebx byte ptr [eax+14h] +
mov eax [eax+8] +
mov [esp] esi +
mov [esp+2Bh] bl +
mov [esp+24h] eax +
sbb eax eax +
mov [esp+1Ch] eax +
and dword ptr [esp+1Ch] 80008000h +
add dword ptr [esp+1Ch] 7FFFFFFFh +
call sub_43B980  +
mov [esp+20h] eax +
movzx eax byte ptr [eax+4] +
cmp al 37h +
jz loc_437A75  +
cmp al 16h +
jz loc_437B36  +
mov eax [esp+20h] +
mov [esp] esi +
mov [esp+4] eax +
call sub_441BB0  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSAfterLineIsNo +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43CB30  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+20h] +
mov [esp+2Ch] edi +
mov edx [eax+0Ch] +
mov ebx [eax+8] +
xor eax eax +
add ebx edx +
mov ebp ebx +
xor ebx ebx +
jmp loc_437AB4  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test byte ptr ds:word_4D0720[ecx+ecx] 4 +
jz loc_437A41  +
lea edi [ebx+ebx*4] +
lea ecx [ecx+edi*2-30h] +
mov edi 1 +
cmp ebx ecx +
mov ebx ecx +
cmova eax edi +
cmp edx ebp +
jnz loc_437A90  +
cmp byte ptr [esi+26Ah] 0 +
mov edi [esp+2Ch] +
jz loc_437B73  +
test ebx ebx +
jz loc_437B56  +
cmp [esp+1Ch] ebx +
jb loc_437B56  +
test al al +
jnz loc_437B56  +
nop   +
lea esi [esi+0] +
mov [esp] esi +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 3Eh +
jz loc_437BC8  +
cmp dl 16h +
jnz loc_437B98  +
mov eax esi +
call sub_4353C0  +
movzx eax byte ptr [esp+2Bh] +
mov [esp+0Ch] ebx +
mov [esp] esi +
mov dword ptr [esp+4] 3 +
mov [esp+10h] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
call sub_437690  +
mov byte ptr [edi+50h] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
mov dword ptr [esp+8] offset aUnexpectedEndO +
mov dword ptr [esp+4] 3 +
call sub_43CB30  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 2 +
mov [esp] esi +
call sub_43CB30  +
jmp loc_437AE0  +
***
test al al +
jz loc_437AE0  +
mov dword ptr [esp+8] offset aLineNumberOutO +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_43CB30  +
jmp loc_437AE0  +
***
mov [esp] esi +
mov [esp+4] eax +
call sub_441BB0  +
mov [esp] esi +
mov dword ptr [esp+8] offset aSIsNotAValidFi +
mov dword ptr [esp+4] 3 +
mov [esp+0Ch] eax +
call sub_43CB30  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea edx [esp+38h] +
add eax 8 +
mov [esp+0Ch] edx +
mov dword ptr [esp+10h] 3Eh +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] esi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+3Ch] 0 +
call sub_434770  +
mov edx 1 +
test al al +
mov eax [esp+24h] +
cmovnz eax [esp+3Ch] +
xor ecx ecx +
mov [esp+24h] eax +
mov eax esi +
call sub_435FB0  +
jmp loc_437AFE  +
***
jmp loc_437C30  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+2Ch] +
mov eax [esp+20h] +
mov edx [esp+24h] +
mov ecx [esp+28h] +
test ebx ebx +
mov esi [esp+30h] +
jz loc_437C70  +
mov dword ptr [esp] 0 +
call sub_436FC0  +
test eax eax +
jz loc_437C65  +
mov edx esi +
mov [eax+0Bh] dl +
mov [eax+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+28h] offset aRegisteringP_1 +
mov dword ptr [esp+24h] 4 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_43CB30  +
***
push ebx  +
sub esp 18h +
movzx eax byte ptr [esp+34h] +
mov ecx [esp+28h] +
mov edx [esp+24h] +
mov ebx [esp+30h] +
mov [esp] eax +
mov eax [esp+20h] +
call sub_436FC0  +
test eax eax +
jz loc_437CC3  +
mov edx [esp+2Ch] +
mov byte ptr [eax+0Ah] 1 +
mov [eax+0Bh] bl +
mov [eax+0Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 18h +
xor edx edx +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0 +
mov eax ebx +
call sub_436FC0  +
mov ecx offset aPush_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_436C10 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aPop_macro +
xor edx edx +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_4369E0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aPoison +
mov edx offset off_4CCE22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_4381A0 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aSystem_header +
mov edx offset off_4CCE22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_435410 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aDependency +
mov edx offset off_4CCE22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset sub_436F60 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aWarning +
mov edx offset off_4CCE22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_436510 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov ecx offset aError_0 +
mov edx offset off_4CCE22 +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_436E80 +
mov eax ebx +
mov [esp+18h+var_18] 0 +
call sub_436FC0  +
mov byte ptr [eax+9] 1 +
mov dword ptr [eax+0Ch] offset loc_436E70 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov eax [esi+1DCh] +
call sub_4350F0  +
shl eax 2 +
mov [esp] eax +
call sub_452ED0  +
mov ebx eax +
mov eax [esi+1DCh] +
mov edx ebx +
call sub_435F50  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 8 +
mov eax [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+1DCh] +
mov ecx ebx +
call sub_435EE0  +
mov [esp+10h] ebx +
add esp 8 +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edi [esp+28h+arg_0] +
lea edx [esp+28h+var_C] +
mov esi [esp+28h+arg_4] +
mov eax edi +
call sub_4354B0  +
mov dword ptr [esi] 0 +
test eax eax +
mov ebx eax +
jz loc_437EC3  +
movzx eax byte ptr [eax+14h] +
xor ecx ecx +
and eax 3Fh +
cmp al 2 +
jz loc_437EA7  +
mov [esi] ecx +
xor eax eax +
test ebx ebx +
setz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esp+28h+var_C] +
mov cl 1 +
test edx edx +
jz loc_437E97  +
mov eax ebx +
call sub_435700  +
xor ecx ecx +
mov eax [eax] +
test eax eax +
setnz cl  +
jmp loc_437E97  +
mov eax [edi+0F0h] +
cmp byte ptr [eax-0Ch] 16h +
jnz loc_437E99  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] edi +
call sub_439AE0  +
jmp loc_437E99  +
***
jmp sub_437EF0  +
***
mov eax [esp+arg_0] +
add eax 240h +
retn   +
***
mov eax [esp+4] +
add eax 1E0h +
retn   +
***
push edi  +
mov ecx 15h +
push esi  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
lea edi [eax+1E0h] +
movs   +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
mov eax [ebx+180h] +
test eax eax +
jz loc_437F47  +
add esp 8 +
pop ebx  +
retn   +
***
call sub_44BDA0  +
mov [ebx+180h] eax +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov ecx [ebx+1C0h] +
mov eax [ebx+1BCh] +
mov edx ecx +
sub edx eax +
cmp edx 6Fh +
jbe loc_438050  +
mov edx [ebx+1B8h] +
add eax 70h +
mov [ebx+1BCh] eax +
cmp eax edx +
jz loc_438077  +
mov esi [ebx+1C8h] +
add eax esi +
not esi  +
and eax esi +
mov esi [ebx+1B4h] +
mov edi eax +
mov [ebx+1BCh] eax +
sub edi esi +
mov [esp+1Ch+var_10] edi +
mov edi ecx +
sub edi esi +
cmp [esp+1Ch+var_10] edi +
jbe loc_437FD1  +
mov [ebx+1BCh] ecx +
mov eax ecx +
test dl 1 +
mov edi edx +
mov [ebx+1B8h] eax +
mov esi 70h +
jnz loc_438083  +
test edi 2 +
jnz loc_4380A0  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jz loc_43800D  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_438015  +
mov byte ptr [edi] 0 +
movzx ecx [esp+1Ch+arg_C] +
movzx eax byte ptr [edx+3Ch] +
mov [edx+0Ch] ebp +
mov [edx+8] ebp +
and ecx 1 +
add ecx ecx +
and eax 0FFFFFFFDh +
or eax ecx +
mov [edx+3Ch] al +
mov eax [ebx] +
add ebp [esp+1Ch+arg_8] +
mov byte ptr [edx+38h] 1 +
mov [edx+28h] eax +
mov eax edx +
mov [edx+10h] ebp +
mov [ebx] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+1B0h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] 70h +
call sub_4592E0  +
mov eax [ebx+1BCh] +
mov ecx [ebx+1C0h] +
jmp loc_437F88  +
or byte ptr [ebx+1D8h] 2 +
jmp loc_437F9F  +
lea edi [edx+1] +
mov si 6Fh +
test edi 2 +
mov byte ptr [edx] 0 +
jz loc_437FF3  +
lea esi [esi+0] +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_437FF3  +
***
jmp sub_4380C0  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_0] +
mov ebx [eax+2F8h] +
call sub_4352F0  +
test eax eax +
mov ecx eax +
jz loc_438430  +
mov edx [eax+8] +
lea eax [edx+20h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov ecx [ecx+0Ch] +
sub esp eax +
xor eax eax +
lea esi [esp+38h+var_15] +
and esi 0FFFFFFF0h +
cmp byte ptr [ecx] 4Ch +
lea edi [ecx+edx-1] +
mov edx esi +
setz al  +
lea eax [ecx+eax+1] +
cmp eax edi +
jnb loc_438233  +
mov [ebp+var_1C] ebx +
jmp loc_438203  +
add eax 1 +
add edx 1 +
cmp edi eax +
mov [edx-1] cl +
jbe loc_438230  +
movzx ecx byte ptr [eax] +
cmp cl 5Ch +
jnz loc_4381F6  +
movzx ebx byte ptr [eax+1] +
cmp bl 22h +
jz loc_438219  +
cmp bl 5Ch +
jnz loc_4381F6  +
add eax 1 +
add edx 1 +
add eax 1 +
mov ecx ebx +
cmp edi eax +
mov [edx-1] cl +
ja loc_438203  +
nop   +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov byte ptr [edx] 0 +
xor edx edx +
call sub_435FB0  +
mov eax [ebp+arg_0] +
call sub_4353C0  +
test ebx ebx +
jz loc_4382F8  +
mov [ebp+var_1C] 0 +
jmp loc_43826D  +
test eax eax +
jz loc_4382F8  +
mov [ebp+var_1C] ebx +
mov ebx eax +
mov edi [ebx+4] +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edi +
call strcmp  +
test eax eax +
mov eax [ebx] +
jnz loc_438260  +
mov edx [ebp+var_1C] +
test edx edx +
jz loc_43847F  +
mov esi [ebp+var_1C] +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call sub_43E6B0  +
test eax eax +
mov esi eax +
jz loc_4382DA  +
mov eax [ebp+arg_0] +
mov eax [eax+21Ch] +
test eax eax +
jz loc_4382BC  +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
cmp dl 1 +
jz loc_4383F0  +
test dl dl +
jnz loc_4383E0  +
test byte ptr [ebx+10h] 4 +
jz loc_438300  +
mov eax [ebx+8] +
mov [esp+38h+var_38] eax +
call free  +
mov eax [ebx+4] +
mov [esp+38h+var_38] eax +
call free  +
mov [esp+38h+var_38] ebx +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+8] +
mov [esp+38h+var_34] offset asc_4CCE74 +
mov [esp+38h+var_38] esi +
call strcspn  +
mov [esp+38h+var_34] esi +
mov edi eax +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_442000  +
add edi [ebx+8] +
and byte ptr [eax+14h] 0C0h +
mov esi eax +
and word ptr [eax+14h] 0D67Fh +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] 0Ah +
call strchr  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_2C] 1 +
sub eax edi +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_437F60  +
test eax eax +
mov edi eax +
jz loc_4384C5  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43DFA0  +
mov eax [ebp+arg_0] +
mov byte ptr [edi+3Dh] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_43BB20  +
test al al +
jz loc_4384A9  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_4380C0  +
mov eax [esi+18h] +
mov edx [ebx+0Ch] +
mov [eax+8] edx +
mov ecx [esi+18h] +
movzx edx byte ptr [ebx+10h] +
movzx eax byte ptr [ecx+14h] +
mov edi edx +
and edi 1 +
shl edi 2 +
and eax 0FFFFFFFBh +
or eax edi +
mov [ecx+14h] al +
mov ecx [esi+18h] +
shl edx 2 +
and edx 8 +
movzx eax byte ptr [ecx+14h] +
and eax 0FFFFFFF7h +
or eax edx +
mov [ecx+14h] al +
jmp loc_4382DA  +
mov [esp+38h+var_38] esi +
call sub_43BA00  +
jmp loc_4382D4  +
mov eax [ebp+arg_0] +
mov eax [eax+1F4h] +
test eax eax +
jz loc_438413  +
mov edx [ebp+arg_0] +
mov edx [edx+20h] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edx +
mov edx [ebp+arg_0] +
mov [esp+38h+var_38] edx +
call eax  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+267h] 0 +
jnz loc_43848D  +
movzx edx byte ptr [esi+14h] +
and edx 3Fh +
jmp loc_4382CC  +
mov eax [ebp+arg_0] +
mov eax [eax+0F0h] +
mov eax [eax-10h] +
mov [esp+38h+var_28] offset aInvalidPragm_0 +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 3 +
mov [esp+38h+var_30] eax +
mov eax [ebp+arg_0] +
mov [esp+38h+var_38] eax +
call sub_43CC30  +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
call sub_435FB0  +
mov eax [ebp+arg_0] +
call sub_4353C0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+arg_0] +
mov [esi+2F8h] eax +
jmp loc_438292  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] eax +
call sub_439080  +
jmp loc_43841F  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9EDh +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_424560  +
mov [esp+38h+var_30] offset aCpp_pop_defini +
mov [esp+38h+var_34] 9F1h +
mov [esp+38h+var_38] offset a____GccLibcppD +
call sub_424560  +
jmp sub_4384F0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [edx] +
mov [ebp+var_28] ecx +
lea ecx [eax-1] +
add eax 1Dh +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov esi [edx+4] +
sub esp eax +
xor eax eax +
lea edi [esp+48h+var_2C+3] +
and edi 0FFFFFFF0h +
cmp byte ptr [esi] 4Ch +
setz al  +
lea edx [esi+eax+1] +
add esi ecx +
cmp edx esi +
mov eax edi +
jnb loc_438772  +
mov [ebp+var_1C] ebx +
jmp loc_438544  +
add edx 1 +
add eax 1 +
cmp esi edx +
mov [eax-1] cl +
jbe loc_438570  +
movzx ecx byte ptr [edx] +
cmp cl 5Ch +
jnz loc_438537  +
movzx ebx byte ptr [edx+1] +
cmp bl 22h +
jz loc_43855A  +
cmp bl 5Ch +
jnz loc_438537  +
add edx 1 +
add eax 1 +
add edx 1 +
mov ecx ebx +
cmp esi edx +
mov [eax-1] cl +
ja loc_438544  +
lea esi [esi+0] +
mov ebx [ebp+var_1C] +
mov esi eax +
sub esi edi +
mov byte ptr [eax] 0Ah +
mov eax [ebx+4Ch] +
mov [ebp+var_2C] eax +
mov eax [ebx+0F0h] +
mov [ebp+var_30] eax +
mov eax [ebx+104h] +
mov [esp+48h+var_44] 1Ch +
mov [esp+48h+var_48] 1 +
mov [ebp+var_34] eax +
call sub_452F00  +
mov [ebx+4Ch] eax +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebx +
call sub_437F60  +
mov eax [ebx] +
mov edx [eax+28h] +
test edx edx +
jz loc_4385D0  +
mov edx [edx+2Ch] +
mov [eax+2Ch] edx +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [ebx+20h] eax +
mov [esp+48h+var_48] ebx +
call sub_43DFA0  +
mov esi [ebx+50h] +
mov dword ptr [ebx+50h] offset off_4CD044 +
mov [esp+48h+var_48] ebx +
call sub_435960  +
mov edx 1 +
mov eax ebx +
call sub_435E50  +
cmp byte ptr [ebx+58h] 51h +
mov [ebx+50h] esi +
jz loc_4386B7  +
mov [esp+48h+var_48] 10h +
mov esi 1 +
call sub_452ED0  +
mov edi eax +
mov eax [ebx+54h] +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov eax [ebx+1E0h] +
test eax eax +
jz loc_438663  +
mov edx [ebx+0F0h] +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] edx +
call eax  +
mov eax [ebx] +
mov dword ptr [eax+2Ch] 0 +
mov [esp+48h+var_48] ebx +
call sub_4380C0  +
mov eax [ebx+4Ch] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebp+var_2C] +
mov [ebx+4Ch] eax +
mov eax [ebp+var_30] +
mov [ebx+0F0h] eax +
mov eax [ebp+var_34] +
mov [ebx+104h] eax +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] 0 +
call sub_4396E0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] 320h +
call sub_452ED0  +
mov edx 1 +
mov [ebp+var_24] 32h +
mov edi eax +
mov eax [ebx+54h] +
mov ecx edi +
mov [edi] eax +
mov eax [ebx+58h] +
mov [edi+4] eax +
mov eax [ebx+5Ch] +
mov [edi+8] eax +
mov eax [ebx+60h] +
mov [edi+0Ch] eax +
mov edi ebx +
mov ebx edx +
nop   +
mov edx ebx +
add ebx 1 +
shl edx 4 +
mov [esp+48h+var_48] edi +
lea esi [ecx+edx] +
mov [ebp+var_20] edx +
mov [ebp+var_1C] ecx +
call sub_43B980  +
mov edx [ebp+var_20] +
mov ecx [eax] +
mov [esi] ecx +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov eax [eax+0Ch] +
mov ecx [ebp+var_1C] +
or word ptr [esi+6] 400h +
mov [esi+0Ch] eax +
mov eax [ebp+var_28] +
cmp byte ptr [ecx+edx+4] 52h +
mov [esi] eax +
jz loc_438765  +
cmp [ebp+var_24] ebx +
jnz loc_4386F0  +
mov eax [ebp+var_24] +
mov [esp+48h+var_48] ecx +
lea eax [eax+eax*2] +
mov edx eax +
shr edx 1Fh +
add eax edx +
mov [ebp+var_24] eax +
sar [ebp+var_24] 1 +
mov eax [ebp+var_24] +
shl eax 4 +
mov [esp+48h+var_44] eax +
call sub_452F50  +
mov ecx eax +
jmp loc_4386F0  +
mov edx ebx +
mov ebx edi +
mov esi edx +
mov edi ecx +
jmp loc_438663  +
xor esi esi +
jmp loc_438577  +
***
mov ebx [esp+18h+arg_0] +
mov eax ebx +
call sub_4352F0  +
mov byte ptr [ebx+58h] 53h +
test eax eax +
jz loc_4387B0  +
mov ecx [esp+18h+arg_4] +
lea edx [eax+8] +
mov eax ebx +
call sub_4384F0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] offset a_pragmaTakesAP +
mov [esp+18h+var_14] 3 +
call sub_43CB30  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_C] 1 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_437F60  +
mov eax [ebx+1Ch] +
mov byte ptr [ebx+8] 1 +
mov byte ptr [ebx+0Dh] 0 +
mov byte ptr [ebx+58h] 53h +
mov eax [eax+2Ch] +
mov [esp+18h+var_18] ebx +
mov [ebx+20h] eax +
call sub_43DFA0  +
lea eax [esi+esi*2] +
cmp byte ptr [ebx+270h] 0 +
lea eax ds:4CCFC0h[eax*4] +
mov [ebx+50h] eax +
jz loc_438832  +
mov eax ebx +
call sub_435D80  +
mov eax [ebx+50h] +
mov eax [eax] +
mov [esp+18h+var_18] ebx +
call eax  +
mov eax ebx +
mov edx 1 +
call sub_435E50  +
mov [esp+18h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_4380C0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
mov [ebp+var_1C] esi +
call memcpy  +
mov [esp+28h+var_24] 3Dh +
mov [esp+28h+var_28] edi +
call strchr  +
mov edx [ebp+var_1C] +
test eax eax +
jz loc_4388D5  +
sub eax edi +
mov byte ptr [ebx+eax] 20h +
mov eax [ebp+arg_0] +
mov ecx ebx +
xor edx edx +
mov byte ptr [ebx+esi] 0Ah +
mov [esp+28h+var_28] esi +
call sub_4387D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx+edx] 20h +
lea esi [edx+2] +
mov byte ptr [ebx+edx+1] 31h +
jmp loc_4388BA  +
***
push ebx  +
sub esp 18h +
lea eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_466850  +
mov ebx eax +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_438860  +
mov [esp] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+arg_4] +
mov [esp+28h+var_28] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+28h+var_D] +
and ebx 0FFFFFFF0h +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
xor edx edx +
mov [esp+28h+var_28] esi +
call sub_4387D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [ebp+0Ch] +
mov [esp] edi +
call strlen  +
mov esi eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call memcpy  +
mov eax [ebp+8] +
mov ecx ebx +
mov byte ptr [ebx+esi] 0Ah +
mov edx 7 +
mov [esp] esi +
call sub_4387D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp] esi +
mov [ebp-24h] ecx +
mov [ebp-1Ch] eax +
call strlen  +
mov dword ptr [esp+4] 3Dh +
mov [esp] esi +
mov edi eax +
call strchr  +
mov [ebp-20h] eax +
lea eax [edi+20h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+1Bh] +
and ebx 0FFFFFFF0h +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebx +
call memcpy  +
mov ecx [ebp-20h] +
mov edx [ebp-24h] +
test ecx ecx +
jz loc_438A72  +
sub ecx esi +
mov byte ptr [ebx+ecx] 28h +
lea eax [edi+1] +
mov byte ptr [ebx+edi] 29h +
mov byte ptr [ebx+eax] 0Ah +
mov ecx ebx +
mov [esp] eax +
mov eax [ebp-1Ch] +
call sub_4387D0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax edi +
jmp loc_438A59  +
***
mov edx [esp+8] +
mov ecx 10h +
mov eax [esp+4] +
jmp loc_4389F0  +
***
mov edx [esp+8] +
mov ecx 11h +
mov eax [esp+4] +
jmp loc_4389F0  +
***
mov esi offset unk_4CCFC8 +
push ebx  +
xor ebx ebx +
sub esp 10h +
mov edi [esp+14h+arg_0] +
movzx edx word ptr [esi] +
add esi 0Ch +
mov eax [esi-10h] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] eax +
call sub_442000  +
lea edx [ebx+ebx+1] +
add ebx 1 +
and ebx 7Fh +
cmp esi offset unk_4CD0AC +
mov [eax+0Ch] dl +
jnz loc_438AD1  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
jmp sub_435790  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
jz loc_438B78  +
cmp ecx 2 +
jz loc_438B73  +
test ecx ecx +
jz loc_438B40  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov esi [eax] +
test esi esi +
jz loc_438B34  +
test ebx ebx +
jz loc_438B80  +
test ecx ecx +
jnz loc_438B60  +
mov ecx [eax+14h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
cmp ecx 2 +
jz loc_438B86  +
cmp ecx 1 +
lea eax [esi+edx*4] +
jnz loc_438B36  +
mov edx [eax] +
mov [ebx] edx +
jmp loc_438B36  +
mov esi [eax+4] +
jmp loc_438B42  +
lea esi [eax+8] +
jmp loc_438B42  +
lea eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
mov ecx [eax+18h] +
shl edx 2 +
lea eax [esi+edx] +
add ecx edx +
mov [ebx] ecx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
xor ebx ebx +
sub esp 14h +
cmp [esp+1Ch+arg_8] 0 +
lea edx [esp+1Ch+var_C] +
mov ecx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_C] 0 +
cmovnz ebx edx +
mov edx [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] ebx +
call sub_438B20  +
mov [eax] esi +
mov eax [esp+1Ch+var_C] +
test eax eax +
jz loc_438BDC  +
mov [eax] edi +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
lea ecx [esp+14h+var_4] +
mov [esp+14h+var_14] ecx +
mov ecx edx +
xor edx edx +
mov [esp+14h+var_4] 0 +
call sub_438B20  +
test eax eax +
jz loc_438C17  +
mov eax [esp+14h+var_4] +
add esp 14h +
retn   +
xor eax eax +
jmp loc_438C13  +
***
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
test ecx ecx +
lea edi ds:0[edx*4] +
jz loc_438C42  +
shl edx 4 +
mov [esp+14h+var_14] edx +
call sub_452ED0  +
mov [ebx] eax +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] esi +
call sub_43F290  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_438C80  +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 1Ch +
mov esi 1Ch +
call sub_452ED0  +
test al 1 +
mov ecx eax +
jnz loc_438CF0  +
test cl 2 +
jnz loc_438CE0  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_438CA3  +
add ecx edx +
test esi 2 +
jz loc_438CC4  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_438CCC  +
mov byte ptr [ecx] 0 +
mov edx [ebx] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [edx] eax +
jmp loc_438C70  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub esi 2 +
jmp loc_438C9C  +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 1Bh +
jmp loc_438C97  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov edi [esp+28h+arg_0] +
jz loc_438D60  +
add eax 4Ch +
call sub_438C60  +
mov [eax+10h] esi +
mov ebx eax +
mov dword ptr [eax+18h] 2 +
mov [esp+28h+var_28] 0Ch +
call sub_452ED0  +
mov ecx [esp+28h+arg_4] +
mov [eax] ebp +
mov [eax+4] edi +
mov [eax+8] edi +
mov [ebx+14h] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
mov eax [esp+28h+arg_8] +
lea eax [ecx+eax*4] +
mov [ebx+0Ch] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [eax+4Ch] +
test edx edx +
jz loc_438D13  +
cmp dword ptr [edx+18h] 2 +
jz loc_438D72  +
mov ebp [edx+14h] +
jmp loc_438D13  +
mov edx [edx+14h] +
mov ebp [edx] +
jmp loc_438D13  +
***
push edi  +
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [eax+24h] +
mov ebx [edx] +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
lea edx [ebx+1] +
mov eax edx +
shl eax 4 +
sub ecx esi +
cmp ecx eax +
jnb loc_438E46  +
lea eax [ebp+24h] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_20] 10h +
mov [esp+28h+var_28] ebp +
call sub_43F440  +
mov eax [ebp+24h] +
mov ebx [edi] +
mov esi [eax+8] +
lea edx [ebx+1] +
mov [edi] edx +
shl ebx 4 +
add esp 1Ch +
lea eax [esi+ebx] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0F0h] +
mov [esp+44h+var_24] eax +
mov eax edi +
mov [esp+44h+var_28] edx +
lea edx [edx+0Ch] +
call sub_438E00  +
mov [edi+0F0h] eax +
mov [esp+44h+var_44] edi +
call sub_440380  +
mov [edi+0F0h] ebx +
mov [esp+44h+var_18] eax +
movzx eax byte ptr [eax+4] +
cmp al 35h +
jz loc_43903B  +
mov ecx [esp+44h+var_24] +
cmp byte ptr [ecx+25Ah] 0 +
jz loc_439057  +
mov ecx [esp+44h+var_28] +
movzx ebx word ptr [ecx+10h] +
test bx bx +
jz loc_439057  +
cmp al 38h +
jz loc_438ED3  +
cmp al 3Eh +
jnz loc_439057  +
mov ecx [esp+44h+var_18] +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
lea ecx [eax+1] +
lea ebp [eax+edx-1] +
cmp ebp ecx +
jbe loc_439057  +
mov esi ecx +
mov ecx ebp +
cmp ecx esi +
jbe loc_439030  +
movzx eax byte ptr [esi] +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4D0720[edx+edx] +
test dh 2 +
jz loc_438F36  +
jmp loc_439070  +
add esi 1 +
cmp esi ecx +
jz loc_439030  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4D0720[edx+edx] +
test dh 2 +
jnz loc_439070  +
cmp al 24h +
jnz loc_438F14  +
cmp byte ptr [edi+262h] 0 +
jz loc_438F14  +
cmp ecx esi +
jbe loc_439030  +
movzx eax byte ptr [esi] +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
movzx edx al +
movzx edx ds:word_4D0720[edx+edx] +
jmp loc_438F71  +
movzx eax byte ptr [esi] +
movzx edx al +
movzx edx ds:word_4D0720[edx+edx] +
test dx 204h +
jnz loc_438F85  +
cmp al 24h +
jnz loc_438F8C  +
cmp byte ptr [edi+262h] 0 +
jz loc_438F8C  +
add esi 1 +
cmp ecx esi +
ja loc_438F63  +
mov edi esi +
sub edi [esp+44h+var_30] +
test ebx ebx +
jz loc_43901C  +
mov eax [esp+44h+var_28] +
lea edx [ebx+1] +
mov ebx 1 +
mov [esp+44h+var_1C] esi +
mov [esp+44h+var_20] ecx +
mov ebp [eax] +
mov esi ebp +
mov ebp edx +
jmp loc_438FC1  +
add ebx 1 +
cmp ebx ebp +
jz loc_439063  +
mov eax [esi+ebx*4-4] +
cmp [eax+4] edi +
jnz loc_438FB6  +
mov eax [eax] +
mov [esp+44h+var_3C] edi +
mov [esp+44h+var_2C] eax +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_438FB6  +
mov eax [esp+44h+var_2C] +
mov ecx [esp+44h+var_20] +
mov [esp+44h+var_3C] offset aMacroArgumentS +
mov esi [esp+44h+var_1C] +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_30] ecx +
mov [esp+44h+var_44] eax +
call sub_43CB30  +
mov ecx [esp+44h+var_30] +
cmp esi ecx +
jnb loc_439057  +
mov eax [esp+44h+var_28] +
cmp ecx esi +
movzx ebx word ptr [eax+10h] +
ja loc_438EF8  +
mov [esp+44h+var_30] esi +
xor edi edi +
jmp loc_438F92  +
mov ecx [esp+44h+var_18] +
mov edx [ecx+8] +
test byte ptr [edx+15h] 10h +
jz loc_438EA5  +
mov byte ptr [ecx+4] 50h +
movzx eax word ptr [edx+18h] +
mov [ecx+8] eax +
mov eax [esp+44h+var_18] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+44h+var_20] +
mov esi [esp+44h+var_1C] +
jmp loc_43901C  +
mov [esp+44h+var_30] esi +
mov edi [esp+44h+var_24] +
jmp loc_438F71  +
***
sub esp 24h +
mov ebx [esp+24h+arg_4] +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4390A0  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test byte ptr [ebx+15h] 1 +
jnz loc_439094  +
mov esi [ebx+18h] +
test byte ptr [esi+14h] 8 +
jnz loc_439094  +
mov eax [esp+24h+arg_0] +
mov edx [esi+8] +
mov eax [eax+1Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_42C2E0  +
mov eax [eax+10h] +
test eax eax +
jns loc_439094  +
mov eax [esi+8] +
mov edx [ebx] +
mov [esp+24h+var_14] offset aMacroSIsNotUse +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_20] 0Eh +
mov [esp+24h+var_24] eax +
call sub_43CC80  +
jmp loc_439094  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_0] +
mov eax [ebx+18h] +
cmp eax 0Ah +
ja loc_439330  +
jmp ds:off_4CD254[eax*4]  +
mov eax [esi+224h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ebx eax +
nop   +
mov [esp+3Ch+var_38] 15h +
mov [esp+3Ch+var_3C] esi +
call sub_43F4D0  +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] offset aU_0 +
mov [esp+3Ch+var_3C] eax +
mov edi eax +
call sub_47D630  +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+270h] 0 +
jz loc_4393C6  +
mov edx [esi+1Ch] +
mov eax [edx+2Ch] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_42C960  +
mov ebx eax +
jmp loc_439130  +
cmp byte ptr [esi+256h] 0 +
jnz loc_4393A3  +
mov eax [esi+154h] +
test eax eax +
jz loc_439419  +
cmp dword ptr [ebx+18h] 1 +
jz loc_4393F1  +
mov edi [esi+158h] +
test edi edi +
jnz loc_439156  +
mov ebx 1 +
jmp loc_439130  +
cmp eax 2 +
jz loc_439400  +
mov eax [esi+0A0h] +
mov [esp+3Ch+var_3C] eax +
call sub_44B820  +
test eax eax +
mov ebx eax +
jz loc_439588  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+eax+3] +
mov [esp+3Ch+var_38] eax +
call sub_43F4D0  +
mov edi eax +
mov byte ptr [eax] 22h +
lea edx [eax+1] +
lea eax [ebx+ebp] +
cmp ebx eax +
jz loc_43922C  +
add ebx 1 +
movzx ecx byte ptr [ebx-1] +
cmp cl 22h +
jz loc_43921F  +
cmp cl 5Ch +
jnz loc_439358  +
mov byte ptr [edx] 5Ch +
add edx 2 +
mov [edx-1] cl +
cmp ebx eax +
jnz loc_43920A  +
mov byte ptr [edx] 22h +
mov eax edi +
mov byte ptr [edx+1] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
mov ebx [eax+20h] +
sub ebx 1 +
jmp loc_439130  +
mov eax [esi] +
test eax eax +
jz loc_4391B2  +
xor ebx ebx +
cmp byte ptr [eax+3Dh] 0 +
setz bl  +
jmp loc_439130  +
cmp byte ptr [esi+256h] 0 +
jnz loc_439380  +
mov [esp+3Ch+var_3C] esi +
call sub_44B8C0  +
mov edi [eax+30h] +
mov ebx eax +
test edi edi +
jnz loc_4391AE  +
mov [esp+3Ch+var_3C] eax +
call sub_44B8D0  +
test eax eax +
jz loc_439557  +
mov [esp+3Ch+var_3C] eax +
call sub_44B830  +
test eax eax +
jz loc_43955F  +
add eax 24h +
mov [esp+3Ch+var_3C] eax +
call localtime  +
test eax eax +
jz loc_43955F  +
mov [esp+3Ch+var_3C] eax +
call asctime  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_20] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
lea eax [eax+2] +
mov [esp+3Ch+var_38] eax +
call sub_43F4D0  +
mov edx [esp+3Ch+var_20] +
mov byte ptr [eax] 22h +
mov edi eax +
lea eax [eax+1] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov byte ptr [edi+ebp] 22h +
mov [ebx+30h] edi +
jmp loc_4391AE  +
cmp byte ptr [esi+2A8h] 0 +
jz loc_439315  +
cmp byte ptr [esi+8] 0 +
jnz loc_439362  +
mov ebx [esi+2E8h] +
lea eax [ebx+1] +
mov [esi+2E8h] eax +
jmp loc_439130  +
mov eax [ebx] +
mov ebx 1 +
mov [esp+3Ch+var_34] offset aInvalidBuiltIn +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43CB30  +
jmp loc_439130  +
mov [edx] cl +
add edx 1 +
jmp loc_439206  +
mov [esp+3Ch+var_34] offset a__counter__Exp +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] esi +
call sub_43CB30  +
jmp loc_439315  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43CB70  +
jmp loc_439275  +
mov eax [ebx] +
mov [esp+3Ch+var_34] offset aMacroSMightPre +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] eax +
call sub_43CB70  +
jmp loc_439190  +
mov eax [esi+1Ch] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_42CAD0  +
mov edx [esi+1Ch] +
jmp loc_439173  +
mov edi [esi+154h] +
jmp loc_4391AE  +
mov eax [esi+1Ch] +
mov edx [eax+2Ch] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_42C9B0  +
mov ebx eax +
jmp loc_4391E1  +
mov eax [esi+15Ch] +
cmp eax 0FFFFFFFEh +
jz loc_4394CF  +
test eax eax +
js loc_4394E9  +
lea eax [esi+15Ch] +
mov [esp+3Ch+var_3C] eax +
call gmtime  +
mov edi eax +
test edi edi +
jz loc_439526  +
mov [esp+3Ch+var_38] 0Eh +
mov [esp+3Ch+var_3C] esi +
call sub_43F4D0  +
mov ecx [edi+14h] +
mov edx [edi+0Ch] +
add ecx 76Ch +
mov [esi+154h] eax +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] edx +
mov edx [edi+10h] +
mov [esp+3Ch+var_38] offset aS2d4d +
mov [esp+3Ch+var_3C] eax +
mov edx ds:off_4CD9C0[edx*4] +
mov [esp+3Ch+var_34] edx +
call sub_47D630  +
mov [esp+3Ch+var_38] 0Bh +
mov [esp+3Ch+var_3C] esi +
call sub_43F4D0  +
mov ebp [edi] +
mov ecx [edi+4] +
mov edx [edi+8] +
mov [esi+158h] eax +
mov [esp+3Ch+var_2C] ebp +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] offset a02d02d02d +
mov [esp+3Ch+var_3C] eax +
call sub_47D630  +
jmp loc_43919E  +
mov eax [esi+22Ch] +
test eax eax +
jz loc_4394E9  +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov [esi+15Ch] eax +
jmp loc_439428  +
mov edi ds:__imp__errno +
call edi  +
mov dword ptr [eax] 0 +
mov [esp-30h+arg_1C] 0 +
call time  +
cmp eax 0FFFFFFFFh +
mov [esp-30h+arg_48] eax +
jz loc_43951F  +
lea eax [esp-30h+arg_48] +
mov [esp-30h+arg_1C] eax +
call localtime  +
mov edi eax +
jmp loc_439440  +
call edi  +
cmp dword ptr [eax] 0 +
jz loc_43950C  +
mov [esp-30h+arg_24] offset aCouldNotDeterm +
mov [esp-30h+arg_20] 0 +
mov [esp-30h+arg_1C] esi +
call sub_43CE30  +
mov dword ptr [esi+154h] offset a????????? +
mov dword ptr [esi+158h] offset a?????? +
jmp loc_43919E  +
mov edi [ebx+30h] +
jmp loc_4391AE  +
mov [esp+3Ch+var_34] offset aCouldNotDete_0 +
mov edi offset a?????????????? +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] esi +
call sub_43CE30  +
mov dword ptr [ebx+30h] offset a?????????????? +
jmp loc_439156  +
mov [esp+3Ch+var_34] offset a_cpp_builtin_m +
mov [esp+3Ch+var_38] 12Eh +
mov [esp+3Ch+var_3C] offset a____GccLibcppM +
call sub_424560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebx  +
mov edx [esp+40h+var_34] +
mov ebx [esp+40h+var_30] +
mov eax [esp+40h+var_38] +
add ebx edx +
nop   +
cmp edx ebx +
jz loc_4395E2  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp cl 22h +
jz loc_4395D5  +
cmp cl 5Ch +
jnz loc_4395E4  +
mov byte ptr [eax] 5Ch +
add eax 2 +
mov [eax-1] cl +
cmp edx ebx +
jnz loc_4395C4  +
pop ebx  +
retn   +
mov [eax] cl +
add eax 1 +
jmp loc_4395C0  +
***
sub esp 24h +
mov ecx [esp+24h+arg_4] +
mov eax [esp+24h+arg_C] +
mov ebx [esp+24h+arg_8] +
movzx edx word ptr [ecx+10h] +
cmp edx eax +
jz loc_4396B0  +
jbe loc_439694  +
lea esi [eax+1] +
cmp edx esi +
jnz loc_439660  +
movzx ecx byte ptr [ecx+14h] +
test cl 2 +
jz loc_439660  +
mov eax [esp+24h+arg_0] +
mov ebx 1 +
cmp byte ptr [eax+26Ah] 0 +
jz loc_43968C  +
and ecx 4 +
jnz loc_43968C  +
cmp byte ptr [eax+248h] 0 +
jz loc_4396C0  +
mov [esp+24h+var_1C] offset aIsoC11Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_43CB30  +
jmp loc_43968C  +
mov ecx [ebx] +
mov [esp+24h+var_10] eax +
mov [esp+24h+var_14] edx +
mov [esp+24h+var_1C] offset aMacroSRequires +
mov [esp+24h+var_18] ecx +
mov eax [esp+24h+arg_0] +
xor ebx ebx +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] eax +
call sub_43CB30  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov ecx [ebx] +
mov [esp+24h+var_10] edx +
mov [esp+24h+var_14] eax +
mov [esp+24h+var_1C] offset aMacroSPassedUA +
mov [esp+24h+var_18] ecx +
jmp loc_439676  +
mov ebx 1 +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_0] +
mov [esp+24h+var_1C] offset aIsoC99Requires +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_43CB30  +
jmp loc_43968C  +
***
sub esp 4 +
mov ebx [esp+4+arg_4] +
mov esi [esp+4+arg_8] +
test ebx ebx +
jz loc_439723  +
mov eax [esp+4+arg_0] +
add eax 4Ch +
call sub_438C60  +
mov edx [esp+4+arg_C] +
shl edx 4 +
mov [eax+8] esi +
add esi edx +
mov dword ptr [eax+18h] 1 +
mov [eax+14h] ebx +
mov dword ptr [eax+10h] 0 +
mov [eax+0Ch] esi +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+4+arg_0] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4396F1  +
cmp dword ptr [eax+18h] 2 +
jz loc_439740  +
mov ebx [eax+14h] +
jmp loc_4396F1  +
mov eax [eax+14h] +
mov ebx [eax] +
jmp loc_4396F1  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [edx+18h] 7 +
jz loc_439860  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_439100  +
mov [esp+48h+var_48] eax +
mov [ebp+var_2C] eax +
call strlen  +
mov ecx eax +
lea eax [eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
mov eax [ebp+var_2C] +
lea edx [esp+48h+var_2C+3] +
and edx 0FFFFFFF0h +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_44] eax +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] edx +
call memcpy  +
mov edx [ebp+var_2C] +
mov ecx [ebp+var_30] +
mov byte ptr [edx+ecx] 0Ah +
mov [esp+48h+var_40] ecx +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
call sub_437F60  +
mov [esp+48h+var_48] ebx +
call sub_43DFA0  +
mov [esp+48h+var_48] ebx +
call sub_43E870  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_440380  +
mov [ebp+var_2C] eax +
mov [eax] edi +
mov eax [ebx+4Ch] +
cmp dword ptr [eax+18h] 2 +
jz loc_439880  +
mov eax [ebp+var_2C] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_40] eax +
call sub_4396E0  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jz loc_43984A  +
mov eax [esi] +
mov [esp+48h+var_40] offset aInvalidBuiltIn +
mov [esp+48h+var_44] 4 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43CB30  +
mov [esp+48h+var_48] ebx +
call sub_4380C0  +
mov eax 1 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [ebx+8] 0 +
jnz loc_439857  +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] ecx +
call sub_438780  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp+var_1C] +
mov edx 1 +
mov eax ebx +
mov [ebp+var_1C] 0 +
call sub_438C20  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_44] esi +
mov [ebp+var_30] eax +
mov eax [ebx+1Ch] +
mov [esp+48h+var_48] eax +
call sub_42BE30  +
mov edx [ebx+1Ch] +
mov edi [ebp+var_30] +
mov ecx [ebp+var_2C] +
mov edx [edx+4Ch] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] eax +
mov eax edi +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edx +
mov edx [ebp+var_1C] +
call sub_438D80  +
mov eax [edi+4] +
mov ecx edi +
mov [esp+48h+var_40] 1 +
mov edx esi +
mov [esp+48h+var_44] eax +
mov eax [ebp+var_1C] +
mov [esp+48h+var_48] eax +
mov eax ebx +
call sub_438D00  +
jmp loc_439823  +
***
sub esp 4 +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi+4Ch] +
lea eax [edi+30h] +
cmp ebx eax +
jz loc_439A1E  +
mov esi [ebx+14h] +
test esi esi +
jz loc_43999B  +
cmp dword ptr [ebx+18h] 2 +
jz loc_4399C6  +
mov eax [ebx+4] +
test eax eax +
jz loc_439990  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_439A10  +
cmp esi eax +
mov ebp esi +
jz loc_4399F8  +
and word ptr [esi+14h] 0F7FFh +
cmp [edi+68h] esi +
jz loc_4399FF  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4399AA  +
mov [esp+1Ch+var_1C] eax +
call sub_43F4A0  +
mov eax [ebx+4] +
mov [edi+4Ch] eax +
mov dword ptr [eax] 0 +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov edx [ebx+10h] +
mov ebp [esi] +
test edx edx +
jz loc_4399E5  +
mov eax [esi+4] +
test eax eax +
jz loc_4399E5  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov [esp+1Ch+var_1C] esi +
call free  +
test ebp ebp +
mov dword ptr [ebx+14h] 0 +
jnz loc_439A17  +
mov esi ebp +
cmp [edi+68h] esi +
jnz loc_43999B  +
mov eax [ebx+4] +
test eax eax +
jnz loc_43999B  +
mov dword ptr [edi+68h] 0 +
jmp loc_43999B  +
mov eax [eax] +
jmp loc_43998A  +
mov esi ebp +
jmp loc_439976  +
mov [esp+1Ch+var_14] offset a_cpp_pop_conte +
mov [esp+1Ch+var_18] 8FAh +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_424560  +
lea esi [esi+0] +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_439A66  +
test eax eax +
jz loc_439A70  +
mov eax [eax+18h] +
test eax eax +
jz loc_439A70  +
movzx eax byte ptr [eax+14h] +
shr al 2 +
and eax 1 +
retn   +
mov eax [eax] +
test eax eax +
jnz loc_439A54  +
lea esi [esi+0] +
xor eax eax +
retn   +
***
mov edx [esp+arg_4] +
add [eax+108h] edx +
nop   +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_439AD0  +
mov ebx [eax+0F0h] +
lea ecx [ebx-10h] +
mov ebx [eax+104h] +
mov [eax+0F0h] ecx +
cmp ecx [ebx+8] +
jnz loc_439A90  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_439A90  +
mov [eax+104h] ecx +
mov ecx [ecx+0Ch] +
sub edx 1 +
cmp edx 0FFFFFFFFh +
mov [eax+0F0h] ecx +
jnz loc_439A98  +
pop ebx  +
retn   +
***
sub esp 1Ch +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [ebp+var_28] edx +
mov [esp+48h+var_48] eax +
call sub_43E9A0  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] eax +
call sub_43E9A0  +
lea eax [esi+eax+1Fh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
mov eax [edi] +
lea esi [esp+48h+var_1D] +
and esi 0FFFFFFF0h +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_43EA40  +
mov edx [edi] +
cmp byte ptr [edx+4] 7 +
mov [ebp+var_1D+1] eax +
jz loc_439CF0  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+4] 53h +
jnz loc_439CFC  +
mov byte ptr [eax] 0Ah +
sub eax esi +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_437F60  +
mov [esp+48h+var_48] ebx +
call sub_43DFA0  +
mov [esp+48h+var_48] ebx +
call sub_43E870  +
mov [esp+48h+var_48] ebx +
mov [ebx+0F0h] eax +
call sub_440380  +
mov edx [ebx] +
mov ecx [edx+10h] +
cmp [edx] ecx +
jz loc_439D30  +
mov ecx [eax] +
mov [esp+48h+var_48] ebx +
mov [ebp+var_24] eax +
mov [ebp-20h] ecx +
call sub_4380C0  +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_48] ebx +
call sub_439AE0  +
mov eax [ebp+var_1D+1] +
mov byte ptr [eax] 0 +
mov edx [edi] +
mov eax [ebp+var_24] +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov ecx [ebp-20h] +
mov [eax+0Ch] edx +
mov [edi] eax +
xor edi edi +
and word ptr [eax+6] 0FFF7h +
cmp dword ptr [ebx+244h] 0Fh +
mov [eax] ecx +
jz loc_439CE0  +
mov eax [ebp+arg_0] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_441BB0  +
mov [esp+48h+var_34] esi +
mov [esp+48h+var_38] offset aPastingSAndSDo +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_44] 3 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_30] eax +
mov eax [ebp+var_28] +
mov [esp+48h+var_40] eax +
call sub_43CC30  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4] 0 +
jnz loc_439D20  +
mov eax [ebp+var_1D+1] +
mov [esp+48h+var_40] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_43EA40  +
jmp loc_439C02  +
mov edx [ebp+var_1D+1] +
mov eax edx +
add eax 1 +
mov byte ptr [edx] 20h +
jmp loc_439BF5  +
mov [edi] eax +
mov edi 1 +
mov [esp+48h+var_48] ebx +
call sub_4380C0  +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+98h+var_64] edx +
mov byte ptr [ebp+0ECh] 0 +
mov byte ptr [ebp+0Bh] 0 +
mov byte ptr [ebp+6Ch] 1 +
movzx edx word ptr [edx+14h] +
mov [esp+98h+var_58] ecx +
mov eax edx +
shr ax 6 +
mov ecx eax +
and cx 84h +
cmp cx 4 +
jz loc_439F03  +
test al 4 +
jnz loc_439EB8  +
mov esi [esp+98h+var_64] +
xor edi edi +
mov esi [esi+18h] +
test byte ptr [esi+14h] 1 +
mov [esp+98h+var_60] esi +
jnz loc_439F41  +
mov esi [esp+98h+var_64] +
mov ecx eax +
or ecx 20h +
shl ecx 6 +
movzx edx word ptr [esi+14h] +
and edx 3Fh +
or edx ecx +
test al 80h +
mov [esi+14h] dx +
jnz loc_439DF2  +
or al 0A0h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov [esi+14h] dx +
mov eax [ebp+214h] +
test eax eax +
jz loc_439DF2  +
mov edx [ebp+20h] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
call eax  +
mov eax [ebp+220h] +
test eax eax +
jz loc_439E14  +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_94] esi +
call eax  +
mov esi [esp+98h+var_60] +
movzx eax byte ptr [esi+14h] +
or eax 8 +
cmp word ptr [esi+10h] 0 +
mov [esi+14h] al +
jz loc_43A027  +
test edi edi +
jz loc_43A145  +
cmp byte ptr [ebp+8] 0 +
jz loc_43A10B  +
lea eax [ebp+4Ch] +
mov [esp+98h+var_74] eax +
mov [esp+98h+var_78] ebp +
jmp loc_439E52  +
mov edi esi +
mov eax [esp+98h+var_74] +
mov ebp [edi+4] +
mov esi [edi] +
mov ebx [edi+8] +
mov dword ptr [edi] 0 +
call sub_438C60  +
sub ebx ebp +
sar ebx 2 +
lea edx [ebp+ebx*4+0] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+10h] edi +
mov [eax+8] ebp +
mov [eax+0Ch] edx +
mov eax [esp+98h+var_78] +
cmp byte ptr [eax+26Dh] 0 +
jnz loc_439E9C  +
add ds:dword_4D928C ebx +
test esi esi +
jnz loc_439E50  +
mov ebp [esp+98h+var_78] +
mov eax 2 +
mov byte ptr [ebp+6Ch] 0 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+68h] +
mov byte ptr [ebp+6Ch] 0 +
test byte ptr [eax+15h] 1 +
jz loc_439EE8  +
mov eax [ebp+64h] +
mov ecx [esp+98h+arg_0] +
mov edx [esp+98h+var_64] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_439750  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+18h] +
test byte ptr [eax+14h] 1 +
jz loc_439EC5  +
mov eax [ebp+0F0h] +
mov eax [eax-10h] +
mov [esp+98h+arg_0] eax +
jmp loc_439EC8  +
or al 80h +
and edx 3Fh +
shl eax 6 +
or edx eax +
mov eax [esp+98h+var_64] +
mov [eax+14h] dx +
mov eax [ebp+228h] +
test eax eax +
jz loc_439F77  +
mov edi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edi +
call eax  +
test al al +
jz loc_439F77  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_439D8E  +
add byte ptr [ebp+10h] 1 +
xor ebx ebx +
add dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 1 +
mov [esp+98h+var_98] ebp +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
cmp dl 53h +
jnz loc_439FA6  +
test ebx ebx +
jz loc_439FA2  +
test byte ptr [ebx+6] 1 +
jnz loc_439F52  +
mov edx [eax+8] +
test edx edx +
cmovz ebx eax +
jmp loc_439F52  +
mov eax [ebp+214h] +
test eax eax +
jz loc_439F30  +
mov edx [ebp+20h] +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_90] esi +
call eax  +
movzx eax word ptr [esi+14h] +
shr ax 6 +
jmp loc_439D8E  +
mov ebx eax +
jmp loc_439F52  +
cmp dl 14h +
jz loc_43A1A9  +
cmp dl 16h +
jnz loc_439FBE  +
lea edx [ebp+170h] +
cmp eax edx +
jnz loc_439FEE  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_439AE0  +
test ebx ebx +
jz loc_439FEE  +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_4396E0  +
sub dword ptr [ebp+10Ch] 1 +
xor edi edi +
sub byte ptr [ebp+10h] 1 +
mov byte ptr [ebp+11h] 0 +
cmp byte ptr [ebp+25Ah] 0 +
jnz loc_43A171  +
test edi edi +
jz loc_43A01C  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] ebp +
call sub_43F260  +
mov byte ptr [ebp+6Ch] 0 +
xor eax eax +
jmp loc_439EDD  +
test al 20h +
jnz loc_43B2D8  +
mov eax [esp+98h+var_60] +
mov esi [eax+0Ch] +
mov ebx [eax+4] +
mov [esp+98h+var_74] esi +
cmp byte ptr [ebp+26Dh] 0 +
jz loc_43A153  +
mov esi [esp+98h+var_74] +
lea ecx [esp+98h+var_1C] +
mov eax ebp +
mov [esp+98h+var_1C] 0 +
mov edx esi +
call sub_438C20  +
mov ecx [esp+98h+arg_0] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_78] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_64] +
mov [esp+98h+var_8C] esi +
xor esi esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] ecx +
call sub_42BE30  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_43A0D7  +
mov [esp+98h+var_6C] ebp +
mov ebp [esp+98h+var_74] +
mov [esp+98h+var_70] edi +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
add ebx 10h +
mov edx [esp+98h+var_1C] +
mov [esp+98h+var_8C] esi +
add esi 1 +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_78] +
call sub_438D80  +
cmp esi ebp +
jnz loc_43A0A5  +
mov edi [esp+98h+var_70] +
mov ebp [esp+98h+var_6C] +
mov ecx [esp+98h+var_78] +
mov esi [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+4] +
mov [esp+98h+var_90] esi +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_1C] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_438D00  +
mov eax [esp+98h+var_74] +
add ds:dword_4D928C eax +
jmp loc_439E2D  +
mov [esp+98h+var_98] ebp +
call sub_43E870  +
mov esi [esp+98h+var_58] +
xor edx edx +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] dx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_90] eax +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebp +
call sub_4396E0  +
jmp loc_439E3F  +
mov byte ptr [ebp+6Ch] 0 +
mov eax 1 +
jmp loc_439EDD  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] eax +
call sub_4396E0  +
jmp loc_43A0FC  +
mov eax [esp+98h+var_64] +
mov eax [eax+18h] +
test byte ptr [eax+14h] 4 +
jnz loc_43A00C  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aFunctionLikeMa +
mov [esp+98h+var_94] 6 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_43CB70  +
jmp loc_43A00C  +
mov eax [esp+98h+var_64] +
mov byte ptr [ebp+11h] 2 +
cmp byte ptr [ebp+26Dh] 0 +
mov eax [eax+18h] +
setnz byte ptr [esp+98h+var_70]  +
movzx ebx word ptr [eax+10h] +
mov [esp+98h+var_5C] eax +
test bx bx +
jz loc_43AF89  +
imul eax ebx +
imul ebx ebx +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_43F290  +
mov edi eax +
mov [esp+98h+var_40] eax +
mov eax [eax+4] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] 0 +
mov esi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_44] eax +
call memset  +
mov eax esi +
add eax ebx +
lea ecx [ebp+170h] +
mov [edi+8] eax +
mov [esp+98h+var_74] edi +
xor edi edi +
mov [esp+98h+var_48] ecx +
mov [esp+98h+var_50] esi +
mov [esp+98h+var_54] 0 +
lea esi [esi+0] +
mov esi [esp+98h+var_50] +
add [esp+98h+var_54] 1 +
cmp byte ptr [esp+98h+var_70] 0 +
mov [esi] eax +
jnz loc_43A52F  +
mov [esp+98h+var_78] 2 +
mov ecx [esp+98h+var_78] +
xor ebx ebx +
mov [esp+98h+var_6C] 32h +
mov esi [esp+98h+var_50] +
mov [esp+98h+var_68] 0 +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jb loc_43A31C  +
cmp byte ptr [esp+98h+var_70] 0 +
jz loc_43A28D  +
mov eax [esp+98h+var_6C] +
cmp [esp+98h+var_78] eax +
ja loc_43A366  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_43B3F0  +
mov edx eax +
movzx eax byte ptr [eax+4] +
cmp al 53h +
jz loc_43A340  +
cmp al 14h +
jz loc_43A348  +
cmp al 15h +
jz loc_43A350  +
cmp al 13h +
jz loc_43A390  +
cmp al 16h +
jz loc_43A3B8  +
cmp al 25h +
jz loc_43A466  +
cmp al 51h +
jz loc_43A475  +
xor eax eax +
mov ecx [esp+98h+var_1C] +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_94] 0 +
setnz al  +
add ebx 1 +
mov [esp+98h+var_90] eax +
mov eax esi +
call sub_438BA0  +
lea eax [ebx+2] +
mov [esp+98h+var_78] eax +
mov eax [esi] +
mov ecx [esp+98h+var_78] +
lea eax [eax+ecx*4] +
mov ecx [esp+98h+var_74] +
cmp [ecx+0Ch] eax +
jnb loc_43A278  +
mov [esp+98h+var_90] 0FA0h +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] ebp +
call sub_43F330  +
mov [esp+98h+var_74] eax +
mov eax [eax+8] +
mov [esi] eax +
jmp loc_43A278  +
test ebx ebx +
jnz loc_43A2D6  +
mov eax [esi] +
jmp loc_43A308  +
add [esp+98h+var_68] 1 +
jmp loc_43A2D6  +
mov ecx [esp+98h+var_68] +
mov eax ecx +
sub eax 1 +
test ecx ecx +
jz loc_43A3B8  +
mov [esp+98h+var_68] eax +
jmp loc_43A2D6  +
add [esp+98h+var_6C] 3E8h +
mov ecx [esp+98h+var_6C] +
mov eax [esi+14h] +
lea edx ds:0[ecx*4] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_452F50  +
mov [esi+14h] eax +
jmp loc_43A28D  +
mov eax [esp+98h+var_68] +
test eax eax +
jnz loc_43A2D6  +
mov eax [esp+98h+var_5C] +
test byte ptr [eax+14h] 2 +
jz loc_43A3B8  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jz loc_43A2D6  +
mov esi edx +
test ebx ebx +
jz loc_43A3DF  +
mov eax [esp+98h+var_50] +
mov edx [eax] +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jz loc_43A3DA  +
jmp loc_43A3DF  +
mov eax [edx+ebx*4-4] +
cmp byte ptr [eax+4] 53h +
jnz loc_43A3DF  +
sub ebx 1 +
jnz loc_43A3D0  +
mov eax [esp+98h+var_50] +
mov ecx [ebp+170h] +
mov edx [esp+98h+var_48] +
mov [eax+0Ch] ebx +
xor eax eax +
cmp byte ptr [ebp+26Dh] 0 +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] ebx +
setnz al  +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_50] +
call sub_438BA0  +
mov eax [esp+98h+var_5C] +
movzx edx word ptr [eax+10h] +
movzx eax dx +
cmp [esp+98h+var_54] eax +
ja loc_43A44A  +
mov ecx [esp+98h+var_50] +
mov ecx [ecx] +
lea ecx [ecx+ebx*4+4] +
mov ebx [esp+98h+var_74] +
mov [ebx+8] ecx +
mov ebx [esp+98h+var_50] +
mov ecx ebx +
add ecx 1Ch +
cmp [esp+98h+var_54] eax +
cmovz ecx ebx +
mov [esp+98h+var_50] ecx +
movzx eax byte ptr [esi+4] +
lea ecx [eax-15h] +
cmp cl 1 +
jbe loc_43A549  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
jmp loc_43A230  +
test byte ptr [edx+6] 40h +
jz loc_43A2D6  +
jmp loc_43A3B8  +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_4C] edx +
call sub_43E870  +
mov edx [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebx +
mov ecx eax +
mov eax [edx] +
mov ebx ecx +
mov [ecx] eax +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov eax [edx+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_43A4E9  +
mov edx [edi+8] +
mov eax [edi+0Ch] +
sub eax edx +
cmp eax 3 +
ja loc_43A4CA  +
sub edx [edi+4] +
mov [esp+98h+var_98] ebp +
add edx edx +
mov [esp+98h+var_94] edx +
call sub_43F290  +
mov edx [eax+8] +
mov [eax] edi +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jz loc_43A510  +
lea edx [esp+98h+var_1C] +
mov eax ebp +
call sub_43B3F0  +
cmp byte ptr [eax+4] 16h +
mov ebx eax +
jz loc_43A510  +
test edi edi +
jnz loc_43A4A5  +
mov [esp+98h+var_94] 80h +
mov [esp+98h+var_98] ebp +
call sub_43F290  +
mov edx [eax+8] +
mov edi eax +
mov [edx] ebx +
add dword ptr [edi+8] 4 +
cmp byte ptr [ebx+4] 52h +
jnz loc_43A4D6  +
nop   +
mov ecx ebx +
mov ebx [esp+98h+var_4C] +
mov byte ptr [ebp+11h] 2 +
mov byte ptr [ebp+10h] 1 +
cmp byte ptr [ecx+4] 16h +
jnz loc_43A306  +
mov esi ecx +
jmp loc_43A3BA  +
mov [esp+98h+var_98] 0C8h +
call sub_452ED0  +
mov esi [esp+98h+var_50] +
mov [esi+14h] eax +
mov eax [esi] +
jmp loc_43A246  +
mov esi [esp+98h+var_54] +
cmp al 16h +
mov [esp+98h+var_3C] esi +
jz loc_43B0C5  +
cmp [esp+98h+var_54] 1 +
jz loc_43B098  +
mov eax [esp+98h+var_54] +
mov esi [esp+98h+var_5C] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_64] +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] eax +
call sub_4395F0  +
test al al +
jz loc_43B105  +
test byte ptr [esi+14h] 2 +
jz loc_43A5AF  +
mov eax [esp+98h+var_5C] +
movzx eax word ptr [eax+10h] +
cmp [esp+98h+var_54] eax +
jb loc_43B084  +
cmp [esp+98h+var_54] 1 +
jz loc_43B068  +
mov eax [esp+98h+var_60] +
sub byte ptr [ebp+10h] 1 +
sub dword ptr [ebp+10Ch] 1 +
mov byte ptr [ebp+11h] 0 +
cmp word ptr [eax+10h] 0 +
jnz loc_43A655  +
mov eax [esp+98h+var_40] +
xor ebx ebx +
mov esi [eax+4] +
mov eax [esp+98h+var_3C] +
test eax eax +
jz loc_43A638  +
mov [esp+98h+var_78] edi +
mov edi esi +
mov esi [esp+98h+var_3C] +
mov edx [edi+4] +
test edx edx +
jz loc_43A5FE  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+4] 0 +
mov edx [edi+14h] +
test edx edx +
jz loc_43A614  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+14h] 0 +
mov edx [edi+18h] +
test edx edx +
jz loc_43A62A  +
mov [esp+98h+var_98] edx +
call free  +
mov dword ptr [edi+18h] 0 +
add ebx 1 +
add edi 1Ch +
cmp ebx esi +
jnz loc_43A5E8  +
mov edi [esp+98h+var_78] +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] eax +
call sub_43F4A0  +
mov eax [esp+98h+var_64] +
movzx eax word ptr [eax+14h] +
shr ax 6 +
jmp loc_439DAD  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_20] 0 +
mov eax [eax+4] +
mov [esp+98h+var_38] eax +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 20h +
jnz loc_43B298  +
mov esi [esp+98h+var_60] +
mov eax [esi+0Ch] +
mov edx eax +
mov [esp+98h+var_78] eax +
mov eax [esi+4] +
shl edx 4 +
lea esi [eax+edx] +
mov [esp+98h+var_6C] esi +
cmp [esp+98h+var_6C] eax +
jbe loc_43B0B8  +
mov esi [esp+98h+var_78] +
mov [esp+98h+var_4C] edi +
mov [esp+98h+var_74] ebp +
mov [esp+98h+var_70] esi +
mov esi eax +
lea eax [ebp+4Ch] +
mov [esp+98h+var_48] eax +
lea eax [ebp+28h] +
mov [esp+98h+var_50] eax +
jmp loc_43A6CD  +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_43A937  +
cmp byte ptr [esi+4] 50h +
jnz loc_43A6C0  +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
add [esp+98h+var_78] 2 +
add [esp+98h+var_70] 2 +
lea ebp [edi+eax-1Ch] +
movzx eax word ptr [esi+6] +
test al 4 +
jz loc_43A8F1  +
mov eax [ebp+8] +
test eax eax +
jnz loc_43A6C0  +
mov eax [esp+98h+var_74] +
mov edx [eax+28h] +
mov eax [edx+8] +
mov edx [edx+0Ch] +
sub edx eax +
cmp edx 2 +
ja loc_43A732  +
mov eax [esp+98h+var_50] +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_90] 3 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] edi +
call sub_43F440  +
mov eax [edi+28h] +
mov eax [eax+8] +
mov byte ptr [eax] 22h +
mov edi [ebp+0Ch] +
lea ebx [eax+1] +
test edi edi +
jz loc_43A89D  +
mov [esp+98h+var_5C] 0 +
xor edi edi +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_44] esi +
mov eax [ebp+0] +
mov esi [esp+98h+var_68] +
mov esi [eax+esi*4] +
movzx eax byte ptr [esi+4] +
cmp al 53h +
jz loc_43AEF9  +
lea edx [eax-3Eh] +
cmp dl 4 +
jbe loc_43A78F  +
lea edx [eax-38h] +
cmp dl 4 +
jbe loc_43A78F  +
mov [esp+98h+var_98] eax +
call sub_443CC0  +
test al al +
jz loc_43B26F  +
mov [esp+98h+var_98] esi +
call sub_43E9A0  +
mov [esp+98h+var_54] 1 +
shl eax 2 +
lea edx [eax+3] +
mov eax [esp+98h+var_74] +
mov ecx [eax+28h] +
mov eax [ecx+0Ch] +
sub eax ebx +
cmp edx eax +
ja loc_43AF1D  +
mov eax [ecx+8] +
lea ecx [ebx-1] +
cmp eax ecx +
jz loc_43A7D4  +
test edi edi +
cmovz edi esi +
test byte ptr [edi+6] 1 +
jz loc_43A7D4  +
mov byte ptr [ebx] 20h +
add ebx 1 +
mov ecx [esp+98h+var_54] +
test ecx ecx +
jz loc_43AED6  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] edx +
mov [esp+98h+var_98] eax +
call sub_43F290  +
mov edi [eax+8] +
mov [esp+98h+var_54] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_90] edi +
mov [esp+98h+var_98] eax +
call sub_43EA40  +
mov ecx [esp+98h+var_54] +
mov edx eax +
cmp edi edx +
jz loc_43A83D  +
add edi 1 +
movzx eax byte ptr [edi-1] +
cmp al 22h +
jz loc_43A830  +
cmp al 5Ch +
jnz loc_43A8E7  +
mov byte ptr [ebx] 5Ch +
add ebx 2 +
mov [ebx-1] al +
cmp edi edx +
jnz loc_43A81D  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] eax +
call sub_43F260  +
cmp byte ptr [esi+4] 3Dh +
jz loc_43AF51  +
xor edi edi +
mov [esp+98h+var_5C] 0 +
add [esp+98h+var_68] 1 +
mov eax [esp+98h+var_68] +
cmp eax [ebp+0Ch] +
jb loc_43A759  +
test byte ptr [esp+98h+var_5C] 1 +
mov esi [esp+98h+var_44] +
jz loc_43A89D  +
mov eax [esp+98h+var_74] +
sub ebx 1 +
mov [esp+98h+var_90] offset aInvalidStringL +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
call sub_43CB30  +
mov eax [esp+98h+var_74] +
lea edx [ebx+2] +
mov byte ptr [ebx] 22h +
lea ecx [ebx+1] +
mov edi ecx +
mov eax [eax+28h] +
sub edi [eax+8] +
mov [eax+8] edx +
mov eax [esp+98h+var_74] +
sub ecx edi +
mov [esp+98h+var_68] ecx +
mov [esp+98h+var_98] eax +
call sub_43E870  +
mov ecx [esp+98h+var_68] +
xor edx edx +
mov byte ptr [ebx+1] 0 +
mov byte ptr [eax+4] 3Eh +
mov [eax+8] edi +
mov [eax+0Ch] ecx +
mov [eax+6] dx +
mov [ebp+8] eax +
jmp loc_43A6C0  +
mov [ebx] al +
add ebx 1 +
jmp loc_43A819  +
test al 8 +
jnz loc_43A923  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jbe loc_43A904  +
test byte ptr [esi-0Ah] 8 +
jnz loc_43A923  +
mov eax [ebp+4] +
test eax eax +
jz loc_43B129  +
mov edi [esp+98h+var_78] +
mov eax [ebp+10h] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_43A6C0  +
mov edi [esp+98h+var_78] +
mov eax [ebp+0Ch] +
lea eax [edi+eax-1] +
mov [esp+98h+var_78] eax +
jmp loc_43A6C0  +
mov edi [esp+98h+var_4C] +
mov ebp [esp+98h+var_74] +
movzx eax byte ptr [ebp+26Dh] +
test eax eax +
mov [esp+98h+var_48] eax +
jz loc_43ADF1  +
mov esi [esp+98h+var_78] +
lea ecx [esp+98h+var_20] +
mov eax ebp +
mov edx esi +
call sub_438C20  +
mov edx esi +
mov esi [esp+98h+arg_0] +
cmp [esp+98h+var_48] 1 +
cmovz edx [esp+98h+var_70] +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
mov eax [ebp+1Ch] +
mov [esp+98h+var_90] esi +
mov esi [esp+98h+var_64] +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] esi +
call sub_42BE30  +
mov [esp+98h+var_68] eax +
mov eax [esp+98h+var_60] +
mov [esp+98h+var_78] 0 +
mov eax [eax+4] +
mov esi eax +
cmp esi [esp+98h+var_6C] +
lea eax [ebp+160h] +
mov [esp+98h+var_30] eax +
jnb loc_43ACBB  +
mov [esp+98h+var_2C] edi +
jmp loc_43AA17  +
cmp byte ptr [ebp+26Dh] 1 +
mov edx [esp+98h+var_78] +
jbe loc_43AB40  +
mov eax [esi] +
mov ecx esi +
mov edi [esp+98h+var_68] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] edi +
call sub_438D80  +
add [esp+98h+var_78] 1 +
add esi 10h +
cmp esi [esp+98h+var_6C] +
jnb loc_43ACB7  +
cmp byte ptr [esi+4] 50h +
jnz loc_43A9D0  +
movzx edx word ptr [esi+6] +
imul eax [esi+8] +
mov edi [esp+98h+var_38] +
test dl 4 +
lea eax [edi+eax-1Ch] +
jz loc_43AC7A  +
cmp byte ptr [ebp+26Dh] 0 +
lea edi [eax+8] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43AE4B  +
mov [esp+98h+var_4C] 0 +
mov ebx 1 +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
cmp byte ptr [ebp+8] 0 +
jz loc_43AA74  +
cmp byte ptr [ebp+9] 0 +
jz loc_43AA87  +
mov eax [esp+98h+var_60] +
cmp esi [eax+4] +
jz loc_43AA87  +
test byte ptr [esi-0Ah] 8 +
jz loc_43ADA2  +
test ebx ebx +
jz loc_43ABD6  +
mov eax ebx +
mov ebx [esp+98h+var_78] +
mov [esp+98h+var_5C] esi +
mov esi [esp+98h+var_4C] +
mov [esp+98h+var_4C] ebp +
add eax ebx +
mov [esp+98h+var_54] eax +
jmp loc_43AAF0  +
xor ecx ecx +
test edi edi +
mov ebp [esi] +
jz loc_43AABA  +
mov ecx [edi] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_68] +
mov [esp+98h+var_94] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_74] +
call sub_438D80  +
mov eax [esp+98h+var_50] +
test eax eax +
jz loc_43AB20  +
cmp eax 2 +
jz loc_43AB20  +
add ebx 1 +
cmp ebx [esp+98h+var_54] +
jz loc_43AB51  +
mov eax [esp+98h+var_78] +
mov ecx [esp+98h+var_4C] +
cmp [esp+98h+var_48] 2 +
cmovge eax ebx +
cmp byte ptr [ecx+26Dh] 1 +
jbe loc_43AB30  +
mov ecx [esp+98h+var_5C] +
cmp byte ptr [esp+98h+var_70] 0 +
mov edx [ecx] +
jnz loc_43AAB0  +
mov ecx [edi] +
mov ebp [ecx] +
jmp loc_43AABA  +
add edi 4 +
cmp byte ptr [esp+98h+var_70] 0 +
lea eax [esi+4] +
cmovnz esi eax +
jmp loc_43AAE7  +
mov ecx [esp+98h+var_60] +
mov eax [esp+98h+var_5C] +
sub eax [ecx+4] +
sar eax 4 +
jmp loc_43AB09  +
mov eax [esp+98h+var_60] +
mov edx esi +
sub edx [eax+4] +
sar edx 4 +
jmp loc_43A9E1  +
mov esi [esp+98h+var_5C] +
mov ebp [esp+98h+var_4C] +
test byte ptr [esi+6] 8 +
jz loc_43AB71  +
mov eax [esp+98h+var_74] +
mov eax [eax+8] +
mov [esp+98h+var_78] eax +
sub eax 4 +
mov [esp+98h+var_44] eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_43AB81  +
test byte ptr [esi+6] 8 +
jz loc_43AE73  +
mov edi [esp+98h+var_44] +
test edi edi +
jz loc_43ABC9  +
mov [esp+98h+var_98] ebp +
call sub_43E870  +
mov edx [edi] +
movzx edx byte ptr [edx+4] +
mov [eax+4] dl +
mov edx [edi] +
mov edi [esp+98h+var_44] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
mov edx [edi] +
test byte ptr [esi+6] 8 +
movzx edx word ptr [edx+6] +
jz loc_43AD12  +
or edx 8 +
mov [eax+6] dx +
mov edi [esp+98h+var_44] +
mov [edi] eax +
mov eax [esp+98h+var_54] +
mov [esp+98h+var_78] eax +
jmp loc_43AA0A  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_43AC07  +
cmp byte ptr [ebp+268h] 0 +
jnz loc_43AC07  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_43AC07  +
mov eax [ebp+0] +
test eax eax +
jz loc_43AFE1  +
cmp byte ptr [eax+3Dh] 0 +
jz loc_43AFE1  +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_43AC6D  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+248h] 0 +
mov [esp+98h+var_54] eax +
jnz loc_43AB71  +
mov eax [esp+98h+var_60] +
test byte ptr [eax+14h] 4 +
jnz loc_43AB71  +
mov eax [ebp+0] +
test eax eax +
jz loc_43AC44  +
cmp byte ptr [eax+3Dh] 0 +
jnz loc_43AB71  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] 16h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_43CB70  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_43AB71  +
and edx 8 +
jz loc_43AD1E  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43AF69  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_43AA68  +
mov edi [esp+98h+var_2C] +
mov ebx [esp+98h+var_48] +
test ebx ebx +
jnz loc_43AEA6  +
mov esi [esp+98h+var_74] +
lea eax [ebp+4Ch] +
mov ebx [esi+8] +
sub ebx [esi+4] +
call sub_438C60  +
mov ecx [esp+98h+var_64] +
shr ebx 2 +
mov [eax+10h] esi +
mov esi [esp+98h+var_34] +
mov dword ptr [eax+18h] 0 +
mov [eax+14h] ecx +
lea edx [esi+ebx*4] +
mov [eax+8] esi +
mov [eax+0Ch] edx +
mov esi [esp+98h+var_74] +
mov eax [esi+8] +
sub eax [esi+4] +
shr eax 2 +
add ds:dword_4D928C eax +
jmp loc_43A5CD  +
and edx 0FFFFFFF7h +
mov [eax+6] dx +
jmp loc_43ABC3  +
mov edi [esp+98h+var_60] +
cmp esi [edi+4] +
jz loc_43AE16  +
test byte ptr [esi-0Ah] 8 +
jz loc_43AE16  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+0Ch] +
mov edi [eax] +
setnz cl  +
test cl cl +
mov byte ptr [esp+98h+var_70] cl +
mov [esp+98h+var_4C] 0 +
jz loc_43AD5F  +
xor edx edx +
call sub_438BF0  +
mov [esp+98h+var_4C] eax +
mov eax [esp+98h+var_74] +
mov ecx [eax+4] +
mov eax [eax+8] +
mov [esp+98h+var_5C] ecx +
mov edx eax +
sub edx ecx +
cmp edx 3 +
jbe loc_43AF98  +
mov ecx [eax-4] +
lea edx [eax-4] +
mov [esp+98h+var_44] edx +
cmp byte ptr [ecx+4] 13h +
jz loc_43B210  +
xor eax eax +
test ebx ebx +
cmovnz edx eax +
mov [esp+98h+var_50] eax +
mov [esp+98h+var_44] edx +
jmp loc_43AA68  +
mov [esp+98h+var_98] ebp +
call sub_43E870  +
xor edx edx +
mov [eax+6] dx +
mov edx [esp+98h+var_78] +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
cmp byte ptr [ebp+26Dh] 1 +
jbe loc_43AFD0  +
mov ecx [eax] +
mov [esp+98h+var_8C] edx +
mov edx [esp+98h+var_68] +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_90] edx +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_98] ecx +
mov ecx eax +
mov eax [esp+98h+var_74] +
call sub_438D80  +
jmp loc_43AA87  +
mov edx [esp+98h+var_78] +
xor ecx ecx +
mov eax ebp +
call sub_438C20  +
mov [esp+98h+var_68] 0 +
mov [esp+98h+var_74] eax +
mov eax [eax+4] +
mov [esp+98h+var_34] eax +
jmp loc_43A9A0  +
cmp byte ptr [ebp+26Dh] 0 +
mov ebx [eax+10h] +
mov edi [eax+4] +
setnz byte ptr [esp+98h+var_70]  +
jnz loc_43AFAD  +
mov [esp+98h+var_4C] 0 +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
jmp loc_43AA68  +
mov edx 1 +
mov ebx 1 +
call sub_438BF0  +
mov [esp+98h+var_50] 1 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43AA68  +
mov eax [ebp+160h] +
mov ecx [esp+98h+var_30] +
mov edx [esp+98h+var_20] +
mov [esp+98h+var_8C] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] 0 +
call sub_438D80  +
jmp loc_43AB81  +
mov ecx [esp+98h+var_74] +
mov edx [esp+98h+var_64] +
mov eax [ecx+8] +
sub eax [ecx+4] +
shr eax 2 +
mov [esp+98h+var_90] eax +
mov eax [esp+98h+var_34] +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_20] +
mov [esp+98h+var_98] eax +
mov eax ebp +
call sub_438D00  +
jmp loc_43ACFA  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_8C] 1 +
mov [esp+98h+var_94] esi +
mov [esp+98h+var_98] eax +
call sub_43EA40  +
mov ebx eax +
jmp loc_43A84D  +
test edi edi +
jz loc_43B267  +
test byte ptr [edi+6] 1 +
jnz loc_43A861  +
mov esi [esi+8] +
mov eax 0 +
test esi esi +
cmovz edi eax +
jmp loc_43A861  +
mov eax [esp+98h+var_50] +
sub ebx [ecx+8] +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_34] edx +
mov [esp+98h+var_94] eax +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_98] eax +
call sub_43F440  +
mov eax [esp+98h+var_74] +
mov edx [esp+98h+var_34] +
mov eax [eax+28h] +
mov eax [eax+8] +
add ebx eax +
jmp loc_43A7BC  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 5Ch +
jnz loc_43A857  +
add [esp+98h+var_5C] 1 +
xor edi edi +
jmp loc_43A861  +
xor edx edx +
call sub_438BF0  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43AA68  +
mov ebx 1Ch +
mov eax 0E4h +
jmp loc_43A1DA  +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
jmp loc_43AA68  +
mov edx 2 +
call sub_438BF0  +
mov [esp+98h+var_50] 2 +
mov [esp+98h+var_44] 0 +
mov [esp+98h+var_4C] eax +
jmp loc_43AA68  +
mov ecx [esp+98h+var_60] +
mov edx esi +
sub edx [ecx+4] +
sar edx 4 +
jmp loc_43ADC8  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_43B032  +
mov eax [esp+98h+var_78] +
cmp byte ptr [ebp+28Ah] 0 +
mov [esp+98h+var_54] eax +
jz loc_43AB71  +
mov eax [esp+98h+var_64] +
mov ecx [esi+8] +
mov edx [eax] +
setnle al  +
movzx eax al +
add eax 15h +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_8C] edx +
mov [esp+98h+var_90] offset aInvokingMacroS +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] ebp +
call sub_43CBB0  +
jmp loc_43AB71  +
mov eax [esp+98h+var_64] +
mov edx [esi+8] +
mov eax [eax] +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] offset aInvokingMacr_0 +
mov [esp+98h+var_94] 15h +
mov [esp+98h+var_8C] eax +
mov [esp+98h+var_98] ebp +
call sub_43CBB0  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_54] eax +
jmp loc_43AB71  +
mov esi [esp+98h+var_44] +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_43A5AF  +
cmp byte ptr [ebp+269h] 0 +
jnz loc_43A5AF  +
imul eax eax +
mov esi [esp+98h+var_44] +
mov dword ptr [esi+eax-1Ch] 0 +
jmp loc_43A5AF  +
test dx dx +
jnz loc_43A564  +
mov eax [esp+98h+var_44] +
mov ecx [eax+0Ch] +
xor eax eax +
test ecx ecx +
setnz al  +
mov [esp+98h+var_54] eax +
jmp loc_43A564  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_70] eax +
jmp loc_43A93F  +
mov eax [ebp+4Ch] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_43B34E  +
mov [esp+98h+var_94] 1 +
mov [esp+98h+var_98] ebp +
call sub_439AE0  +
mov eax [esp+98h+var_64] +
mov eax [eax] +
mov [esp+98h+var_90] offset aUnterminatedAr +
mov [esp+98h+var_94] 3 +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_8C] eax +
call sub_43CB30  +
mov eax [esp+98h+var_40] +
mov [esp+98h+var_98] ebp +
mov [esp+98h+var_94] eax +
call sub_43F260  +
mov byte ptr [ebp+11h] 0 +
sub dword ptr [ebp+10Ch] 1 +
sub byte ptr [ebp+10h] 1 +
jmp loc_439FFF  +
mov edi [ebp+0Ch] +
mov eax [esp+98h+var_74] +
test edi edi +
movzx ebx byte ptr [eax+26Dh] +
jz loc_43A90F  +
cmp byte ptr [eax+25Ah] 0 +
mov edi eax +
mov byte ptr [eax+25Ah] 0 +
mov [esp+98h+var_98] 400h +
setnz byte ptr [esp+98h+var_68]  +
call sub_452ED0  +
mov [ebp+4] eax +
cmp byte ptr [edi+26Dh] 0 +
jz loc_43B17B  +
mov [esp+98h+var_98] 400h +
call sub_452ED0  +
mov [ebp+18h] eax +
test bl bl +
jz loc_43B3A5  +
mov eax [ebp+14h] +
mov edi [ebp+0Ch] +
mov edx [ebp+0] +
mov [esp+98h+var_98] eax +
mov eax [esp+98h+var_74] +
lea ecx [edi+1] +
mov [esp+98h+var_90] ecx +
xor ecx ecx +
mov [esp+98h+var_94] edx +
xor edx edx +
call sub_438D00  +
mov eax [ebp+10h] +
mov ebx 100h +
lea edx [eax+1] +
cmp ebx edx +
jb loc_43B35D  +
mov edi [esp+98h+var_74] +
lea edx [esp+98h+var_1C] +
mov eax edi +
call sub_43B3F0  +
cmp byte ptr [eax+4] 16h +
jz loc_43B332  +
xor ecx ecx +
mov edx [ebp+10h] +
cmp byte ptr [edi+26Dh] 0 +
mov [esp+98h+var_94] 2 +
setnz cl  +
mov [esp+98h+var_90] ecx +
mov ecx [esp+98h+var_1C] +
mov [esp+98h+var_98] edx +
mov edx eax +
mov eax ebp +
call sub_438BA0  +
mov eax [ebp+10h] +
add eax 1 +
mov [ebp+10h] eax +
jmp loc_43B1AF  +
mov ecx [esp+98h+var_60] +
test byte ptr [ecx+14h] 2 +
jz loc_43AD8E  +
movzx ecx word ptr [ecx+10h] +
cmp [esi+8] ecx +
jnz loc_43AD8E  +
test edi edi +
jz loc_43B241  +
mov ecx [edi] +
mov [esp+98h+var_50] 0 +
test ecx ecx +
jnz loc_43AA68  +
cmp [esp+98h+var_5C] eax +
jnb loc_43AF98  +
mov eax [esp+98h+var_74] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_44] 0 +
mov [eax+8] edx +
jmp loc_43AA68  +
mov edi [esi+8] +
jmp loc_43A861  +
movzx eax byte ptr [esi+4] +
mov [esp+98h+var_98] eax +
call sub_443CD0  +
test al al +
jnz loc_43A78F  +
mov [esp+98h+var_98] esi +
call sub_43E9A0  +
mov [esp+98h+var_54] 0 +
jmp loc_43A7A2  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_43B302  +
mov eax [esp+98h+var_60] +
mov eax [eax+4] +
cmp byte ptr [eax+4] 26h +
mov [esp+98h+var_6C] eax +
jz loc_43B31D  +
add eax 10h +
xor ebx ebx +
add ebx 1 +
cmp ebx ecx +
jz loc_43B302  +
mov edx eax +
add eax 10h +
cmp byte ptr [edx+4] 26h +
jnz loc_43B2B5  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_78] ebx +
mov [esp+98h+var_6C] edx +
jmp loc_43A690  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43B302  +
mov ebx [esi+4] +
cmp byte ptr [ebx+4] 26h +
jz loc_43B310  +
lea edx [ebx+10h] +
xor esi esi +
jmp loc_43B2FB  +
movzx eax byte ptr [edx+4] +
add edx 10h +
cmp al 26h +
jz loc_43B307  +
add esi 1 +
cmp esi ecx +
jnz loc_43B2F0  +
call sub_482700  +
mov [esp+98h+var_74] esi +
jmp loc_43A03D  +
mov [esp+98h+var_74] 0 +
jmp loc_43A03D  +
mov [esp+98h+var_70] 0 +
mov [esp+98h+var_78] 0 +
jmp loc_43A93F  +
mov edi [esp+98h+var_74] +
mov [esp+98h+var_98] edi +
call sub_439950  +
movzx eax byte ptr [esp+98h+var_68] +
mov [edi+25Ah] al +
jmp loc_43A90F  +
cmp byte ptr [ebp+8] 0 +
jz loc_43B0E3  +
jmp loc_43B0D3  +
mov eax [ebp+4] +
lea edi ds:0[edx*8] +
mov [esp+98h+var_94] edi +
lea ebx [edx+edx] +
mov [esp+98h+var_98] eax +
call sub_452F50  +
mov [ebp+4] eax +
mov eax [esp+98h+var_74] +
cmp byte ptr [eax+26Dh] 0 +
jz loc_43B1BA  +
mov eax [ebp+18h] +
test eax eax +
jz loc_43B3DA  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] eax +
call sub_452F50  +
mov [ebp+18h] eax +
jmp loc_43B1BA  +
mov eax [ebp+0Ch] +
mov edi [ebp+0] +
lea ebx [eax+1] +
mov eax [esp+98h+var_48] +
call sub_438C60  +
lea edx [edi+ebx*4] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov [eax+8] edi +
mov [eax+0Ch] edx +
jmp loc_43B1A7  +
mov [esp+98h+var_98] edi +
call sub_452ED0  +
mov [ebp+18h] eax +
jmp loc_43B1BA  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
movzx eax byte ptr [eax+6Ch] +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1D] al +
lea esi [esi+0] +
mov eax [ebx+4Ch] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_43B6F0  +
mov edx [eax+18h] +
cmp edx 1 +
jz loc_43B630  +
test edx 0FFFFFFFDh +
jnz loc_43B8A3  +
mov ecx [eax+8] +
cmp ecx [eax+0Ch] +
jnz loc_43B4E0  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_43B450  +
add ds:dword_4D9290 1 +
mov [esp+4Ch+var_4C] ebx +
call sub_439950  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43B410  +
lea ebp [ebx+160h] +
mov edx [esp+4Ch+var_2C] +
test edx edx +
jz loc_43B4CD  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_43B47B  +
mov eax [ebp+0] +
mov [esp+4Ch+var_30] eax +
mov edi [esp+4Ch+var_2C] +
mov eax [esp+4Ch+var_30] +
mov [edi] eax +
cmp byte ptr [ebx+26Dh] 0 +
jnz loc_43B4B3  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_43B4B3  +
cmp dword ptr [edx+18h] 2 +
mov eax [edx+14h] +
jz loc_43B880  +
test eax eax +
jz loc_43B972  +
mov eax [ebx+64h] +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
cmp byte ptr [ebx+270h] 0 +
movzx ecx byte ptr [ebx+8] +
mov edx [ebx+20h] +
jnz loc_43B7A0  +
mov edi [esp+4Ch+var_2C] +
mov [edi] eax +
movzx eax [esp+4Ch+var_1D] +
mov [ebx+6Ch] al +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jz loc_43B705  +
cmp edx 2 +
jnz loc_43B93A  +
mov edx [eax+14h] +
mov ebp [ecx] +
mov edi [edx+4] +
test edi edi +
jz loc_43B7B0  +
mov esi [edx+8] +
mov edi [esi] +
add esi 4 +
mov [edx+8] esi +
mov [esp+4Ch+var_30] edi +
add ecx 4 +
mov [eax+8] ecx +
test byte ptr [ebp+6] 8 +
jnz loc_43B653  +
cmp byte ptr [ebx+8] 0 +
movzx eax byte ptr [ebp+4] +
jz loc_43B532  +
cmp al 4Fh +
jz loc_43B410  +
cmp al 35h +
jnz loc_43B464  +
mov edx [ebp+8] +
movzx eax byte ptr [edx+14h] +
and eax 3Fh +
cmp al 1 +
jnz loc_43B464  +
test byte ptr [ebp+7] 4 +
jnz loc_43B464  +
test byte ptr [edx+15h] 8 +
jnz loc_43B851  +
cmp byte ptr [ebx+6Ch] 0 +
jnz loc_43B586  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_43B784  +
cmp dword ptr [eax+18h] 2 +
mov eax [eax+14h] +
jz loc_43B792  +
test eax eax +
jz loc_43B784  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_43B464  +
test byte ptr [edx+15h] 40h +
jz loc_43B5E0  +
mov edi [ebx+20Ch] +
test edi edi +
jz loc_43B464  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_441AD0  +
cmp byte ptr [eax+4] 53h +
jz loc_43B5C4  +
test byte ptr [eax+6] 1 +
jz loc_43B8C0  +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jz loc_43B8DE  +
lea esi [esi+0] +
mov eax [esp+4Ch+var_30] +
mov ecx ebp +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_439D50  +
test eax eax +
jz loc_43B464  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43B410  +
cmp eax 2 +
jz loc_43B410  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_43E870  +
xor ecx ecx +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+8] esi +
mov [eax+6] cx +
jmp loc_43B464  +
mov ebp [eax+8] +
cmp ebp [eax+0Ch] +
jz loc_43B442  +
mov edi [ebp+0] +
lea edx [ebp+10h] +
mov [eax+8] edx +
test byte ptr [ebp+6] 8 +
mov [esp+4Ch+var_30] edi +
jz loc_43B520  +
mov edi [ebx+4Ch] +
mov [esp+4Ch+var_14] ebp +
test edi edi +
jz loc_43B956  +
mov eax [edi+18h] +
cmp eax 2 +
jz loc_43B7C0  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_43B956  +
mov ecx [ebx+64h] +
mov [esp+4Ch+var_28] ecx +
mov [esp+4Ch+var_24] ebp +
xor esi esi +
mov ebp [esp+4Ch+var_28] +
jmp loc_43B6C8  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
cmp byte ptr [esi+4] 53h +
jnz loc_43B6AB  +
test byte ptr [esi+6] 8 +
jnz loc_43B887  +
mov [esp+4Ch+var_4C] esi +
lea ecx [esp+4Ch+var_14] +
mov edx ebp +
mov eax ebx +
call sub_439B90  +
test al al +
jz loc_43B730  +
test byte ptr [esi+6] 8 +
jz loc_43B730  +
mov eax [edi+18h] +
cmp eax 1 +
jz loc_43B720  +
test eax eax +
jz loc_43B690  +
cmp eax 2 +
jnz loc_43B69B  +
mov eax [edi+8] +
lea edx [eax+4] +
mov [edi+8] edx +
mov esi [eax] +
mov eax [edi+14h] +
add dword ptr [eax+8] 4 +
jmp loc_43B69B  +
mov [esp+4Ch+var_4C] ebx +
call sub_441990  +
mov ebp eax +
mov eax [eax] +
mov [esp+4Ch+var_30] eax +
jmp loc_43B520  +
mov ebp [ecx] +
add ecx 4 +
mov edi [ebp+0] +
mov [eax+8] ecx +
mov [esp+4Ch+var_30] edi +
jmp loc_43B516  +
mov esi [edi+8] +
lea eax [esi+10h] +
mov [edi+8] eax +
jmp loc_43B69B  +
cmp dword ptr [edi+18h] 2 +
mov ebp [esp+4Ch+var_24] +
jz loc_43B7E0  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_4396E0  +
cmp byte ptr [ebx+8] 0 +
jnz loc_43B410  +
mov [esp+4Ch+var_4C] ebx +
call sub_43E870  +
xor edx edx +
mov [eax+8] ebp +
mov ebp eax +
mov byte ptr [eax+4] 53h +
mov [eax+6] dx +
jmp loc_43B464  +
mov eax [ebp+0] +
mov [ebx+68h] edx +
mov [ebx+64h] eax +
jmp loc_43B586  +
mov eax [eax] +
jmp loc_43B57E  +
test cl cl +
cmovnz eax edx +
jmp loc_43B4C7  +
mov edi [ebp+0] +
mov [esp+4Ch+var_30] edi +
jmp loc_43B510  +
mov edx [edi+14h] +
mov esi [edx] +
test esi esi +
jz loc_43B956  +
mov edx [edx+8] +
mov ecx [edx-4] +
mov [esp+4Ch+var_28] ecx +
jmp loc_43B680  +
lea ecx [esp+4Ch+var_10] +
mov edx 1 +
mov eax ebx +
mov [esp+4Ch+var_10] 0 +
call sub_438C20  +
mov ecx [esp+4Ch+var_14] +
mov edx [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] 0 +
mov esi eax +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_438D80  +
mov eax [esi+4] +
mov ecx esi +
mov edx [edi+14h] +
mov edx [edx] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_44] 1 +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_438D00  +
jmp loc_43B75E  +
mov [esp+4Ch+var_4C] ebx +
mov esi ebp +
call sub_43E870  +
mov edx [esi+0Ch] +
mov ebp eax +
movzx eax byte ptr [esi+4] +
mov [ebp+4] al +
movzx eax word ptr [esi+6] +
or ah 4 +
mov [ebp+6] ax +
mov eax [esi+8] +
mov [ebp+0Ch] edx +
mov [ebp+8] eax +
jmp loc_43B464  +
mov eax [eax] +
jmp loc_43B4A2  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2DFh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424560  +
mov [esp+4Ch+var_44] offset aReached_end_of +
mov [esp+4Ch+var_48] 93Eh +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424560  +
nop   +
mov eax [ebx+20Ch] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
mov edx eax +
jnz loc_43B5E0  +
jmp loc_43B464  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_441AD0  +
cmp byte ptr [eax+4] 53h +
mov esi eax +
jz loc_43B464  +
test byte ptr [eax+6] 1 +
jnz loc_43B464  +
mov [esp+4Ch+var_4C] ebx +
call sub_43E870  +
mov [eax+8] esi +
xor esi esi +
mov byte ptr [eax+4] 53h +
mov [eax+6] si +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
call sub_4396E0  +
jmp loc_43B464  +
mov [esp+4Ch+var_44] offset aConsume_next_t +
mov [esp+4Ch+var_48] 968h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424560  +
mov [esp+4Ch+var_44] offset aPaste_all_toke +
mov [esp+4Ch+var_48] 2B1h +
mov [esp+4Ch+var_4C] offset a____GccLibcppM +
call sub_424560  +
mov eax [esp+4Ch+var_30] +
jmp loc_43B4B3  +
***
mov eax [esp+arg_0] +
xor edx edx +
jmp sub_43B3F0  +
***
nop   +
mov [esp] ebx +
call sub_449010  +
test al al +
jnz loc_43B9B0  +
sub byte ptr [ebx+13h] 1 +
sub byte ptr [ebx+10h] 1 +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
jmp sub_43B3F0  +
***
mov eax [esp+arg_0] +
and byte ptr [eax+14h] 0C0h +
and word ptr [eax+14h] 0D6FFh +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 10h +
jnz loc_43BAE7  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
movzx edi dx +
mov [esp+2Ch+var_10] eax +
lea eax ds:4[edi*4] +
sub [esp+2Ch+var_10] ecx +
cmp [esp+2Ch+var_10] eax +
jb loc_43BAA0  +
mov eax [esp+2Ch+arg_C] +
add edx 1 +
mov [ebp+10h] dx +
mov [ecx+edi*4] eax +
or word ptr [ebx+14h] 1000h +
movzx edx word ptr [ebp+10h] +
mov eax [esi+110h] +
movzx ecx dx +
lea edi ds:0[ecx*8] +
cmp edi [esi+114h] +
ja loc_43BAC6  +
mov esi [ebx+18h] +
add ecx 1FFFFFFFh +
mov [eax+ecx*8] ebx +
mov [eax+ecx*8+4] esi +
xor eax eax +
mov [ebx+18h] dx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esi+24h] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] esi +
call sub_43F440  +
mov eax [esi+24h] +
movzx edx word ptr [ebp+10h] +
mov ecx [eax+8] +
movzx edi dx +
jmp loc_43BA52  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_452F50  +
movzx edx word ptr [ebp+10h] +
mov [esi+114h] edi +
movzx ecx dx +
mov [esi+110h] eax +
jmp loc_43BA82  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] offset aDuplicateMacro +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_20] eax +
call sub_43CB30  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov eax [edi+234h] +
mov eax [eax+34h] +
test eax eax +
jz loc_43C050  +
mov [esp+3Ch+var_3C] 18h +
call eax  +
mov ebx eax +
mov eax [edi+20h] +
xor ecx ecx +
mov dword ptr [ebx] 0 +
mov [ebx+10h] cx +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+14h] +
mov edx eax +
and edx 0FFFFFFFDh +
mov [ebx+14h] dl +
cmp byte ptr [edi+267h] 0 +
mov dword ptr [ebx+0Ch] 0 +
setz dl  +
and eax 0FFFFFFD4h +
shl edx 3 +
or eax edx +
mov [ebx+14h] al +
mov eax [edi] +
test eax eax +
jz loc_43C067  +
cmp byte ptr [eax+3Dh] 0 +
setnz dl  +
movzx eax byte ptr [ebx+14h] +
shl edx 2 +
and eax 0FFFFFFFBh +
or eax edx +
mov [ebx+14h] al +
cmp byte ptr [edi+270h] 0 +
jz loc_43BC64  +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
call sub_449160  +
mov byte ptr [esp+3Ch+var_20] al +
movzx eax word ptr [ebx+10h] +
test eax eax +
lea ecx [eax-1] +
lea edx ds:0FFFFFFF8h[eax*8] +
jz loc_43BBF5  +
mov esi [edi+110h] +
sub ecx 1 +
add esi edx +
sub edx 8 +
mov eax [esi] +
and word ptr [eax+14h] 0EFFFh +
cmp ecx 0FFFFFFFFh +
mov esi [esi+4] +
mov [eax+18h] esi +
jnz loc_43BBD4  +
cmp byte ptr [esp+3Ch+var_20] 0 +
jz loc_43BC57  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_43BFA0  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_43BDB0  +
movzx eax byte ptr [ebp+14h] +
mov edi offset a__stdc_ +
mov ecx 7 +
mov [ebp+18h] ebx +
and eax 0FFFFFFC0h +
or eax 1 +
mov [ebp+14h] al +
mov eax [ebp+0] +
mov esi eax +
cmps   +
jz loc_43BD64  +
movzx eax word ptr [ebp+14h] +
and dx 2FFh +
shl edx 6 +
and eax 3Fh +
or eax edx +
mov [ebp+14h] ax +
movzx eax byte ptr [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] edi +
call sub_441990  +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_43C004  +
cmp al 16h +
jz loc_43BCB6  +
test byte ptr [esi+6] 1 +
jnz loc_43BCB6  +
cmp byte ptr [edi+268h] 0 +
jz loc_43C10E  +
cmp byte ptr [edi+248h] 0 +
jz loc_43C28B  +
mov [esp+3Ch+var_34] offset aIsoC11Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
test byte ptr [ebx+14h] 1 +
jz loc_43BF44  +
mov edx ebx +
mov eax edi +
call sub_438E60  +
mov ecx eax +
mov [esp+3Ch+arg_4] ebp +
xor esi esi +
mov ebp ebx +
mov [esp+3Ch+var_20] 0 +
jmp loc_43BD02  +
add [esp+3Ch+var_20] 1 +
sub eax 1 +
or byte ptr [ebp+14h] 20h +
mov [ecx+8] eax +
cmp bl 26h +
mov edx ebp +
setz al  +
mov esi eax +
mov eax edi +
call sub_438E60  +
mov ecx eax +
mov eax [ebp+0Ch] +
cmp eax 1 +
jbe loc_43BD14  +
cmp byte ptr [ecx-0Ch] 25h +
jz loc_43BDD0  +
movzx ebx byte ptr [ecx+4] +
cmp bl 16h +
jz loc_43BE20  +
cmp bl 26h +
jnz loc_43BCEF  +
cmp eax 1 +
jz loc_43BF70  +
movzx edx word ptr [ecx-0Ah] +
test dl 8 +
jnz loc_43BCE0  +
sub eax 1 +
mov [ebp+0Ch] eax +
mov eax edx +
or eax 8 +
mov [ecx-0Ah] ax +
movzx eax word ptr [ecx+6] +
test al 2 +
jz loc_43BD58  +
or dx 108h +
mov [ecx-0Ah] dx +
test al 1 +
jz loc_43BCEF  +
or word ptr [ecx-0Ah] 200h +
jmp loc_43BCEF  +
mov edi offset a__stdc_format_ +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_43BC42  +
mov edi offset a__stdc_limit_m +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_43BC42  +
mov ecx 17h +
mov esi eax +
mov edi offset a__stdc_constan +
mov eax edx +
cmps   +
setnbe bl  +
setb cl  +
or eax 10h +
cmp bl cl +
cmovnz edx eax +
jmp loc_43BC42  +
movzx eax word ptr [ebp+14h] +
and dx 35Bh +
mov ecx edx +
shl ecx 6 +
and eax 3Fh +
or eax ecx +
mov [ebp+14h] ax +
jmp loc_43BC1B  +
test byte ptr [ebp+14h] 1 +
movzx ebx byte ptr [ecx+4] +
jz loc_43BD18  +
cmp bl 50h +
jz loc_43BEF1  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_43BD18  +
mov [esp+3Ch+var_34] offset aIsNotFollowedB +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
mov byte ptr [esp+3Ch+var_20] 0 +
jmp loc_43BF93  +
mov edx esi +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
test dl dl +
jnz loc_43BF76  +
mov edx [edi+24h] +
sub eax 1 +
mov edx [edx+8] +
and byte ptr [ebx+14h] 0EFh +
test eax eax +
mov [ebx+0Ch] eax +
mov [ebx+4] edx +
jz loc_43BE4C  +
and word ptr [edx+6] 0FFFEh +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_43C038  +
shl eax 4 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
mov esi [esp+3Ch+var_20] +
test esi esi +
mov [esp+3Ch+var_1C] eax +
jz loc_43C250  +
mov edx [ebx+0Ch] +
mov ecx edx +
sub ecx esi +
shl ecx 4 +
add ecx eax +
test edx edx +
jz loc_43BEE0  +
mov eax [ebx+4] +
shl edx 4 +
mov [esp+3Ch+var_20] ebx +
lea esi [eax+edx] +
mov edx [esp+3Ch+var_1C] +
jmp loc_43BEB6  +
mov [edx] ebx +
mov ebx [eax+4] +
add eax 10h +
add edx 10h +
mov [edx-0Ch] ebx +
mov ebx [eax-8] +
mov [edx-8] ebx +
mov ebx [eax-4] +
mov [edx-4] ebx +
cmp eax esi +
jz loc_43BEDC  +
cmp byte ptr [eax+4] 26h +
mov ebx [eax] +
jnz loc_43BE98  +
mov [ecx] ebx +
mov ebx [eax+4] +
add eax 10h +
add ecx 10h +
mov [ecx-0Ch] ebx +
mov ebx [eax-8] +
mov [ecx-8] ebx +
mov ebx [eax-4] +
mov [ecx-4] ebx +
cmp eax esi +
jnz loc_43BEB6  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ebx+4] eax +
jmp loc_43BF93  +
movzx edx word ptr [ecx+6] +
test dl 1 +
jz loc_43BF01  +
or dh 2 +
mov [ecx+6] dx +
mov esi edx +
or si 100h +
test byte ptr [ecx-0Ah] 2 +
cmovnz edx esi +
movzx esi word ptr [ecx-0Ah] +
sub eax 1 +
and edx 0FFFFFFFEh +
or edx 4 +
and esi 1 +
or edx esi +
mov [ecx+6] dx +
mov edx [ecx] +
mov [ecx-10h] edx +
mov edx [ecx+4] +
mov [ecx-0Ch] edx +
mov edx [ecx+8] +
mov [ecx-8] edx +
mov edx [ecx+0Ch] +
mov [ecx-4] edx +
mov [ebp+0Ch] eax +
jmp loc_43BCEF  +
lea edx [ebx+0Ch] +
mov eax edi +
call sub_438E00  +
mov ecx eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
jmp loc_43BCCB  +
mov ebx ebp +
mov ebp [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset aCannotAppearAt +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
mov byte ptr [esp+3Ch+var_20] 0 +
mov byte ptr [edi+0Eh] 0 +
jmp loc_43BBC2  +
cmp byte ptr [edi+267h] 0 +
jnz loc_43C272  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 10h +
jnz loc_43C077  +
test dl 4 +
jz loc_43C15D  +
mov eax [edi+228h] +
test eax eax +
jz loc_43BFEA  +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call eax  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test al al +
jnz loc_43C15D  +
cmp byte ptr [edi+25Fh] 0 +
setnz al  +
test al al +
jnz loc_43C077  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_43BC13  +
test byte ptr [esi+6] 1 +
jnz loc_43BCB6  +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_441990  +
movzx ecx byte ptr [eax+4] +
lea edx [ecx-13h] +
cmp dl 22h +
ja loc_43C404  +
movzx edx dl +
jmp ds:off_4CD810[edx*4]  +
mov ecx [edi+24h] +
shl eax 4 +
add eax edx +
mov byte ptr [esp+3Ch+var_20] 1 +
mov [ecx+8] eax +
jmp loc_43BF93  +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_3C] edi +
call sub_441C30  +
mov ebx eax +
jmp loc_43BB4B  +
xor edx edx +
jmp loc_43BB96  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
and edx 14h +
mov eax 0Bh +
mov ecx [ebp+0] +
cmp dx 4 +
mov edx 0 +
cmovnz eax edx +
mov edx [edi+20h] +
mov [esp+3Ch+var_2C] offset aSRedefined +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43CCD0  +
test al al +
movzx eax byte ptr [ebp+14h] +
jz loc_43C106  +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jnz loc_43C106  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
test dl 4 +
jnz loc_43BDB0  +
mov eax [ebp+18h] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] offset aThisIsTheLocat +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 5 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43CC30  +
movzx eax byte ptr [ebp+14h] +
and eax 3Fh +
jmp loc_43BC0B  +
cmp al 36h +
jz loc_43C44B  +
jbe loc_43C443  +
cmp al 3Dh +
nop   +
jnz loc_43C2A8  +
mov eax [esi+0Ch] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] offset a_? +
mov [esp+3Ch+var_38] eax +
call strchr  +
cmp eax 1 +
sbb eax eax +
and eax 2 +
mov [esp+3Ch+var_34] offset aMissingWhitesp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
jmp loc_43BCB6  +
test dh 1 +
jnz loc_43BFF8  +
mov eax [ebp+18h] +
mov [esp+3Ch+var_1C] eax +
movzx eax word ptr [eax+10h] +
cmp ax [ebx+10h] +
jnz loc_43C077  +
mov esi [esp+3Ch+var_1C] +
movzx ecx byte ptr [ebx+14h] +
xor cl [esi+14h] +
and ecx 3 +
jnz loc_43C077  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_43C1E0  +
mov ecx [esi] +
mov esi [ebx] +
mov eax [esi] +
cmp [ecx] eax +
jnz loc_43C077  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_12] dx +
mov [esp+3Ch+var_18] ebx +
mov ebx ecx +
sub eax 1 +
mov [esp+3Ch+var_10] eax +
xor eax eax +
mov edx [esp+3Ch+var_10] +
jmp loc_43C1D3  +
mov ecx [ebx+eax*4+4] +
add eax 1 +
cmp ecx [esi+eax*4] +
jnz loc_43C06E  +
cmp eax edx +
jnz loc_43C1C3  +
mov ebx [esp+3Ch+var_18] +
movzx edx [esp+3Ch+var_12] +
cmp byte ptr [edi+270h] 0 +
jnz loc_43C518  +
mov eax [esp+3Ch+var_1C] +
mov eax [eax+0Ch] +
cmp eax [ebx+0Ch] +
jnz loc_43C077  +
test eax eax +
jz loc_43BFF8  +
xor esi esi +
jmp loc_43C220  +
mov eax [esp+3Ch+var_1C] +
add esi 1 +
cmp esi [eax+0Ch] +
jnb loc_43C535  +
mov edx [ebx+4] +
mov eax esi +
shl eax 4 +
add edx eax +
mov [esp+3Ch+var_38] edx +
mov edx [esp+3Ch+var_1C] +
add eax [edx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_43ED60  +
test eax eax +
jnz loc_43C210  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43C077  +
mov eax [ebx+0Ch] +
mov edx [ebx+4] +
shl eax 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
jmp loc_43BEE0  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
call sub_439080  +
jmp loc_43BFAD  +
mov [esp+3Ch+var_34] offset aIsoC99Requir_0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
jmp loc_43BCB6  +
cmp al 43h +
jz loc_43C44B  +
xor eax eax +
jmp loc_43C144  +
mov [esp+3Ch+var_34] offset aMissingInMacro +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
mov eax [edi+24h] +
mov byte ptr [esp+3Ch+var_20] 0 +
mov eax [eax+8] +
mov [ebx] eax +
jmp loc_43BF93  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_43C55F  +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_34] eax +
call sub_43BA10  +
test al al +
jnz loc_43C2CF  +
mov [esp+3Ch+var_20] 1 +
jmp loc_43C016  +
mov ecx [esp+3Ch+var_20] +
movzx eax word ptr [ebx+10h] +
test ecx ecx +
jnz loc_43C3A0  +
test ax ax +
jz loc_43C3A0  +
mov [esp+3Ch+var_34] offset aParameterNameM +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
jmp loc_43C2CF  +
mov eax [esp+3Ch+var_20] +
or byte ptr [ebx+14h] 2 +
test eax eax +
jz loc_43C461  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_43C38A  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_43C38A  +
cmp byte ptr [edi+248h] 0 +
jz loc_43C4FB  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotPer +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43CBB0  +
mov [esp+3Ch+var_3C] edi +
call sub_441990  +
cmp byte ptr [eax+4] 15h +
jnz loc_43C2B7  +
movzx eax word ptr [ebx+10h] +
mov edx [edi+24h] +
mov ecx [edx+8] +
mov [esp+3Ch+var_20] ecx +
mov [ebx] ecx +
mov ecx [edi+234h] +
mov ecx [ecx+34h] +
test ecx ecx +
jz loc_43C455  +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call ecx  +
movzx edx word ptr [ebx+10h] +
shl edx 2 +
mov ecx eax +
mov eax [ebx] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_20] ecx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov ecx [esp+3Ch+var_20] +
mov [ebx] ecx +
or byte ptr [ebx+14h] 1 +
jmp loc_43BCB6  +
mov edx [esp+3Ch+var_20] +
test edx edx +
jnz loc_43C00E  +
jmp loc_43C329  +
cmp cl 4Fh +
jnz loc_43C416  +
cmp byte ptr [edi+24Ch] 0 +
jz loc_43C016  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call sub_441BB0  +
mov [esp+3Ch+var_34] offset aSMayNotAppearI +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
call sub_43CB30  +
jmp loc_43C2CF  +
cmp al 34h +
jnz loc_43C2B0  +
mov eax 2 +
jmp loc_43C144  +
mov ecx [esp+3Ch+var_20] +
lea eax [ecx+eax*4] +
mov [edx+8] eax +
jmp loc_43C3EA  +
mov eax [edi+2B8h] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] eax +
call sub_43BA10  +
cmp byte ptr [edi+268h] 0 +
mov byte ptr [edi+0Eh] 1 +
jnz loc_43C4C4  +
cmp byte ptr [edi+26Ah] 0 +
jz loc_43C4C4  +
cmp byte ptr [edi+25Eh] 0 +
jz loc_43C4C4  +
cmp byte ptr [edi+248h] 0 +
jz loc_43C542  +
mov [esp+3Ch+var_34] offset aAnonymousVaria +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43CBB0  +
jmp loc_43C38A  +
cmp byte ptr [edi+28Ah] 0 +
jle loc_43C38A  +
cmp byte ptr [edi+248h] 0 +
jnz loc_43C38A  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
jmp loc_43C38A  +
mov [esp+3Ch+var_34] offset aIsoCDoesNotP_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43CBB0  +
jmp loc_43C38A  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_449390  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43BFF4  +
movzx edx word ptr [ebp+14h] +
shr dx 6 +
jmp loc_43BFF8  +
mov [esp+3Ch+var_34] offset aAnonymousVar_0 +
mov [esp+3Ch+var_38] 0Ah +
mov [esp+3Ch+var_3C] edi +
call sub_43CBB0  +
jmp loc_43C38A  +
mov [esp+3Ch+var_34] offset aMacroParameter +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_3C] edi +
call sub_43CB30  +
jmp loc_43C2CF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
mov edx eax +
and edx 3Fh +
cmp dl 1 +
jz loc_43C5F6  +
and eax 3Fh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] offset aInvalidHashTyp +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call sub_43CB30  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+2Ch+arg_4] +
test byte ptr [ebx+15h] 1 +
jz loc_43C630  +
mov ebx [esp+2Ch+arg_0] +
mov edx [ebx+228h] +
test edx edx +
jz loc_43C5C9  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call edx  +
test al al +
jnz loc_43C630  +
mov eax [esp+2Ch+arg_4] +
movzx eax byte ptr [eax+14h] +
jmp loc_43C5C9  +
mov eax [esp+2Ch+arg_4] +
mov ebx [eax+18h] +
mov eax [eax+4] +
movzx ebp byte ptr [ebx+14h] +
lea esi [eax+eax*4] +
add esi esi +
test ebp 1 +
jnz loc_43C731  +
add esi 2 +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_43C769  +
mov [esp+2Ch+var_2C] ebx +
call sub_449070  +
add esi eax +
mov eax [esp+2Ch+arg_0] +
cmp esi [eax+114h] +
ja loc_43C801  +
mov eax [eax+110h] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_43E9E0  +
test byte ptr [ebx+14h] 1 +
jz loc_43C6F6  +
lea edi [eax+1] +
xor esi esi +
mov byte ptr [eax] 28h +
movzx eax word ptr [ebx+10h] +
cmp esi eax +
jnb loc_43C6F0  +
mov edx [ebx] +
mov ebp [edx+esi*4] +
mov edx [esp+2Ch+arg_0] +
cmp [edx+2B8h] ebp +
jz loc_43C6D7  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
movzx eax word ptr [ebx+10h] +
add edi [ebp+4] +
add esi 1 +
cmp esi eax +
jnb loc_43C7E0  +
mov byte ptr [edi] 2Ch +
movzx eax word ptr [ebx+10h] +
add edi 1 +
cmp esi eax +
jb loc_43C6A9  +
lea eax [edi+1] +
mov byte ptr [edi] 29h +
lea esi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_43C830  +
mov eax [ebx+0Ch] +
test eax eax +
mov [esp+2Ch+var_10] eax +
jnz loc_43C843  +
mov eax [esp+2Ch+arg_0] +
mov byte ptr [esi] 0 +
mov eax [eax+110h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ecx word ptr [ebx+10h] +
add esi 6 +
test ecx ecx +
jz loc_43C652  +
mov edi [ebx] +
shl ecx 2 +
xor eax eax +
mov edx [edi+eax] +
add eax 4 +
cmp eax ecx +
mov edx [edx+4] +
lea esi [esi+edx+1] +
jnz loc_43C747  +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jnz loc_43C663  +
and ebp 20h +
jnz loc_43C91A  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_43C66D  +
xor edi edi +
jmp loc_43C7C5  +
mov eax [ebp+0Ch] +
add esi [eax+4] +
movzx eax word ptr [ebp+6] +
mov ecx eax +
and ecx 4 +
cmp cx 1 +
sbb esi 0FFFFFFFFh +
test al 8 +
lea ecx [esi+3] +
cmovnz esi ecx +
and eax 1 +
cmp ax 1 +
sbb esi 0FFFFFFFFh +
add edi 1 +
cmp edi [esp+2Ch+var_10] +
jz loc_43C66D  +
mov ebp edi +
shl ebp 4 +
add ebp [ebx+4] +
cmp byte ptr [ebp+4] 50h +
jz loc_43C790  +
mov [esp+2Ch+var_2C] ebp +
call sub_43E9A0  +
add esi eax +
jmp loc_43C796  +
test byte ptr [ebx+14h] 2 +
jz loc_43C6A5  +
mov byte ptr [edi] 2Eh +
add edi 3 +
mov byte ptr [edi-2] 2Eh +
mov byte ptr [edi-1] 2Eh +
movzx eax word ptr [ebx+10h] +
jmp loc_43C6A5  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+110h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_452F50  +
mov ecx [esp+2Ch+arg_0] +
mov [ecx+114h] esi +
mov [ecx+110h] eax +
jmp loc_43C683  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4490C0  +
mov esi eax +
jmp loc_43C71C  +
test byte ptr [ebx+14h] 20h +
mov eax [ebx+4] +
jnz loc_43C8EB  +
xor ebp ebp +
mov edi eax +
mov edx ebp +
mov ebp ebx +
mov ebx edx +
jmp loc_43C8A2  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_43EA40  +
mov esi eax +
test byte ptr [edi+6] 8 +
jz loc_43C892  +
mov byte ptr [esi] 20h +
add esi 3 +
mov byte ptr [esi-2] 23h +
mov byte ptr [esi-1] 23h +
add ebx 1 +
cmp ebx [esp+2Ch+var_10] +
jnb loc_43C71C  +
mov edi [ebp+4] +
mov ecx ebx +
shl ecx 4 +
add edi ecx +
movzx eax word ptr [edi+6] +
test al 1 +
jz loc_43C8BB  +
mov byte ptr [esi] 20h +
movzx eax word ptr [edi+6] +
add esi 1 +
test al 4 +
jz loc_43C8C5  +
mov byte ptr [esi] 23h +
add esi 1 +
cmp byte ptr [edi+4] 50h +
jnz loc_43C860  +
mov eax [edi+0Ch] +
mov ecx [eax+4] +
mov eax [eax] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [edi+0Ch] +
add esi [eax+4] +
jmp loc_43C87E  +
cmp byte ptr [eax+4] 26h +
jz loc_43C71C  +
lea edi [eax+10h] +
xor edx edx +
jmp loc_43C90C  +
movzx ecx byte ptr [edi+4] +
add edi 10h +
cmp cl 26h +
jz loc_43C94A  +
add edx 1 +
cmp edx [esp+2Ch+var_10] +
jnz loc_43C900  +
call sub_482700  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_43C915  +
mov eax [ebx+4] +
cmp byte ptr [eax+4] 26h +
jz loc_43C66D  +
add eax 10h +
xor edi edi +
jmp loc_43C941  +
movzx edx byte ptr [eax+4] +
add eax 10h +
cmp dl 26h +
jz loc_43C95F  +
add edi 1 +
cmp edi ecx +
jnz loc_43C935  +
jmp loc_43C915  +
test edx edx +
lea esi [esi+0] +
jz loc_43C71C  +
mov [esp+2Ch+var_10] edx +
jmp loc_43C850  +
mov [esp+2Ch+var_10] edi +
jmp loc_43C779  +
***
push esi  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
cmp byte ptr [eax+270h] 0 +
jz loc_43CA20  +
cmp byte ptr [eax+8] 0 +
jz loc_43CA64  +
mov ecx [eax+20h] +
jmp loc_43CA34  +
mov ecx [eax+104h] +
mov edx [eax+0F0h] +
cmp edx [ecx+8] +
jz loc_43CA70  +
mov ecx [edx-10h] +
mov edx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] edx +
mov edx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call sub_43C970  +
add esp 2Ch +
retn   +
mov edx [eax+1Ch] +
mov ecx [edx+2Ch] +
jmp loc_43CA34  +
xor ecx ecx +
jmp loc_43CA34  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_10] +
mov eax [ebx+210h] +
test eax eax +
jz loc_43CB05  +
mov eax [ebx+1Ch] +
lea esi [ebp+var_74] +
mov edx [ebp+arg_C] +
mov ecx esi +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_94] edx +
call sub_42DCF0  +
sub esp 8 +
test edi edi +
jz loc_43CAC7  +
mov [esp+98h+var_98] edi +
mov ecx esi +
call sub_42DB70  +
sub esp 4 +
mov edx [ebp+arg_18] +
mov eax [ebx+210h] +
mov [esp+98h+var_8C] esi +
mov [esp+98h+var_98] ebx +
mov [esp+98h+var_84] edx +
mov edx [ebp+arg_14] +
mov [esp+98h+var_88] edx +
mov edx [ebp+arg_8] +
mov [esp+98h+var_90] edx +
mov edx [ebp+arg_4] +
mov [esp+98h+var_94] edx +
call eax  +
mov ecx esi +
mov ebx eax +
call sub_42D9D0  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aCpp_diagnost_0 +
mov [esp+98h+var_94] 0AAh +
mov [esp+98h+var_98] offset a____GccLibcppE +
call sub_424560  +
jmp sub_43CB30  +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+4Ch] +
mov [esp+2Ch] eax +
lea eax [esp+2Ch] +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov dword ptr [esp+4] 1 +
mov [esp+0Ch] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_43CA00  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CA80  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
lea eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43C970  +
add esp 3Ch +
retn   +
***
sub esp 3Ch +
sub esp 2Ch +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-40h+arg_3C] eax +
call sub_466800  +
mov [esp-40h+arg_44] offset aSS_2 +
mov [esp-40h+arg_4C] eax +
mov eax [esp-40h+arg_74] +
mov [esp-40h+arg_48] eax +
mov eax [esp-40h+arg_70] +
mov [esp-40h+arg_40] eax +
mov eax [esp-40h+arg_6C] +
mov [esp-40h+arg_3C] eax +
call sub_43CB30  +
add esp 2Ch +
retn   +
***
sub esp 28h +
mov ebx [esp+28h+arg_8] +
cmp byte ptr [ebx] 0 +
cmovz ebx eax +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-44h+arg_3C] eax +
call sub_466800  +
mov [esp-44h+arg_4C] ebx +
mov [esp-44h+arg_48] offset aSS_2 +
mov [esp-44h+arg_50] eax +
mov eax [esp-44h+arg_78] +
mov [esp-44h+arg_44] eax +
mov eax [esp-44h+arg_70] +
mov [esp-44h+arg_40] eax +
mov eax [esp-44h+arg_6C] +
mov [esp-44h+arg_3C] eax +
call sub_43CD70  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 24h +
mov ecx [esp+28h+arg_0] +
mov [esp+28h+var_24] 50h +
mov [esp+28h+var_28] 1 +
shl esi cl +
call sub_452F00  +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_452ED0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] eax +
mov ebx eax +
call sub_459280  +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] 4 +
mov dword ptr [ebx+18h] 0 +
call sub_452F00  +
mov [ebx+38h] esi +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+2Ch] eax +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_4593F0  +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_43CF79  +
mov eax [ebx+2Ch] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_C] +
mov eax [ebx+38h] +
mov edx [ebx+2Ch] +
add dword ptr [ebx+44h] 1 +
mov ebp eax +
mov [esp+3Ch+var_18] eax +
sub eax 1 +
and esi eax +
mov edi [edx+esi*4] +
lea ecx ds:0[esi*4] +
mov [esp+3Ch+var_20] eax +
test edi edi +
jz loc_43D2B8  +
cmp edi 0FFFFFFFFh +
jz loc_43D2AF  +
mov eax [esp+3Ch+arg_C] +
cmp [edi+8] eax +
mov [esp+3Ch+var_1C] ebp +
jz loc_43D241  +
mov eax [esp+3Ch+arg_C] +
mov ecx ebx +
shl eax 4 +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_20] +
and [esp+3Ch+var_24] eax +
mov eax [ebx+48h] +
mov ebx edx +
or [esp+3Ch+var_24] 1 +
mov edx [esp+3Ch+arg_C] +
lea ebp [eax+1] +
jmp loc_43D013  +
add ebp 1 +
add esi [esp+3Ch+var_24] +
and esi [esp+3Ch+var_20] +
mov [ecx+48h] ebp +
mov edi [ebx+esi*4] +
lea eax ds:0[esi*4] +
test edi edi +
jz loc_43D083  +
cmp edi 0FFFFFFFFh +
jz loc_43D070  +
cmp [edi+8] edx +
jnz loc_43D010  +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_43D010  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx [esp+3Ch+var_14] +
mov edx [esp+3Ch+var_10] +
test eax eax +
jnz loc_43D010  +
mov eax edi +
jmp loc_43D12A  +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp eax edi +
cmovnz eax esi +
mov [esp+3Ch+var_1C] eax +
jmp loc_43D010  +
mov ebx ecx +
mov ecx eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_43D2C4  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
cmp edx [esp+3Ch+var_18] +
cmovnz ecx eax +
mov eax [ebx+30h] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx [esp+3Ch+var_24] +
mov edx eax +
mov [esp+3Ch+var_20] eax +
mov eax [ebx+2Ch] +
mov edi edx +
mov [eax+ecx] edx +
mov eax [esp+3Ch+arg_8] +
mov [edx+4] eax +
mov eax [esp+3Ch+arg_C] +
mov [edx+8] eax +
mov eax [ebx+34h] +
test eax eax +
jz loc_43D132  +
mov ecx [esp+3Ch+arg_8] +
lea edx [ecx+1] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+arg_8] +
mov byte ptr [esi+eax] 0 +
mov [edi] esi +
mov eax [ebx+3Ch] +
lea edx [eax+1] +
mov eax [ebx+38h] +
mov [ebx+3Ch] edx +
shl edx 2 +
lea ecx [eax+eax] +
mov [esp+3Ch+var_1C] ecx +
add ecx eax +
mov eax [esp+3Ch+var_20] +
cmp edx ecx +
jnb loc_43D1B0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov edx [ebx+0Ch] +
lea ecx [eax+1] +
mov eax [ebx+10h] +
sub eax edx +
cmp eax ecx +
jb loc_43D29B  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [ebx+0Ch] +
add eax [esp+3Ch+arg_8] +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
mov byte ptr [eax] 0 +
mov edx [ebx+8] +
mov eax [ebx+0Ch] +
cmp eax edx +
jz loc_43D2CB  +
mov ecx [ebx+18h] +
mov esi [ebx+4] +
add eax ecx +
not ecx  +
and eax ecx +
mov ecx [ebx+10h] +
mov edi eax +
sub edi esi +
mov [ebx+0Ch] eax +
mov ebp ecx +
sub ebp esi +
cmp edi ebp +
jbe loc_43D1A2  +
mov [ebx+0Ch] ecx +
mov eax ecx +
mov [ebx+8] eax +
mov eax [esp+3Ch+var_20] +
mov [eax] edx +
jmp loc_43D106  +
mov esi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
lea edi [esi-1] +
call sub_452F00  +
mov ecx [ebx+2Ch] +
mov edx [ebx+38h] +
mov [esp+3Ch+arg_0] ebx +
mov [esp+3Ch+var_18] ecx +
mov ebp ecx +
lea ecx [ecx+edx*4] +
mov [esp+3Ch+var_24] ecx +
nop   +
mov esi [ebp+0] +
lea edx [esi-1] +
cmp edx 0FFFFFFFDh +
ja loc_43D214  +
mov ebx [esi+8] +
mov edx edi +
and edx ebx +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jz loc_43D212  +
mov ecx ebx +
shl ecx 4 +
add ebx ecx +
and ebx edi +
or ebx 1 +
add edx ebx +
and edx edi +
lea ecx [eax+edx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_43D206  +
mov [ecx] esi +
add ebp 4 +
cmp [esp+3Ch+var_24] ebp +
ja loc_43D1E0  +
mov ebx [esp+3Ch+arg_0] +
cmp byte ptr [ebx+4Ch] 0 +
jnz loc_43D285  +
mov [ebx+2Ch] eax +
mov eax [esp+3Ch+var_1C] +
mov byte ptr [ebx+4Ch] 1 +
mov [ebx+38h] eax +
mov eax [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
cmp [edi+4] eax +
jnz loc_43CFE4  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
mov eax [edi] +
mov [esp+3Ch+var_3C] eax +
call memcmp  +
mov ecx eax +
mov eax edi +
test ecx ecx +
jz loc_43D12A  +
mov eax [esp+3Ch+var_18] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_1C] eax +
jmp loc_43CFE4  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_24] +
jmp loc_43D227  +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call sub_4592E0  +
mov edx [ebx+0Ch] +
jmp loc_43D149  +
mov [esp+3Ch+var_1C] esi +
jmp loc_43CFE4  +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jnz loc_43D0A3  +
xor eax eax +
jmp loc_43D12A  +
or byte ptr [ebx+28h] 2 +
jmp loc_43D17F  +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_8] +
mov edi [esp+20h+arg_4] +
test esi esi +
jz loc_43D33B  +
lea ebx [edi+esi] +
mov eax edi +
xor edx edx +
lea esi [esi+0] +
add eax 1 +
movzx ecx byte ptr [eax-1] +
imul edx edx +
cmp eax ebx +
lea edx [edx+ecx-71h] +
jnz loc_43D300  +
mov eax [esp+20h+arg_C] +
add edx esi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+arg_0] +
mov [esp+20h+var_20] eax +
call sub_43CF90  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor edx edx +
jmp loc_43D312  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_43D367  +
add ebx 4 +
cmp ebp ebx +
jbe loc_43D389  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_43D360  +
mov ecx [esi+40h] +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
mov [esp+1Ch+var_14] edx +
call edi  +
test eax eax +
jnz loc_43D360  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_43D3A0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebx [esi+2Ch] +
mov eax [esi+38h] +
lea ebp [ebx+eax*4] +
jmp loc_43D3C7  +
add ebx 4 +
cmp ebp ebx +
jbe loc_43D3F6  +
mov eax [ebx] +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFDh +
ja loc_43D3C0  +
mov ecx [esi+40h] +
mov edx [esp+38h] +
mov [esp+4] eax +
mov [esp] ecx +
mov [esp+8] edx +
call edi  +
test eax eax +
jz loc_43D3C0  +
mov dword ptr [ebx] 0FFFFFFFFh +
add ebx 4 +
cmp ebp ebx +
ja loc_43D3C7  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+30h] +
cmp byte ptr [ebx+4Ch] 0 +
jz loc_43D41E  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov [ebx+2Ch] eax +
mov eax [esp+28h] +
mov [ebx+38h] eax +
mov eax [esp+2Ch] +
mov [ebx+3Ch] eax +
mov eax esi +
mov [ebx+4Ch] al +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
xor ebp ebp +
push edi  +
push esi  +
xor esi esi +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov eax [esp+60h] +
fldz   +
mov dword ptr [esp+20h] 0 +
mov ecx [eax+2Ch] +
mov eax [eax+38h] +
shl eax 2 +
mov [esp+28h] eax +
add eax ecx +
mov [esp+18h] eax +
jmp loc_43D49C  +
test eax eax +
jz loc_43D493  +
mov edi [eax+4] +
xor edx edx +
mov [esp+3Ch] edx +
mov [esp+38h] edi +
add ebp edi +
cmp ebx edi +
fild  qword ptr [esp+38h] +
cmovb ebx edi +
add esi 1 +
fmul st st +
faddp st(1) st +
add ecx 4 +
cmp [esp+18h] ecx +
jbe loc_43D4B1  +
mov eax [ecx] +
cmp eax 0FFFFFFFFh +
jnz loc_43D470  +
add dword ptr [esp+20h] 1 +
add ecx 4 +
cmp [esp+18h] ecx +
ja loc_43D49C  +
mov eax [esp+60h] +
xor edx edx +
mov [esp+1Ch] edx +
mov edx [esp+60h] +
fstp  qword ptr [esp+30h] +
mov eax [eax+3Ch] +
mov [esp] edx +
mov [esp+18h] eax +
call loc_459450  +
mov edx [esp+18h] +
mov dword ptr [esp+4] offset aStringPoolEntr +
mov [esp+8] edx +
mov edx ds:_iob +
mov edi eax +
sub edi ebp +
lea eax [edx+40h] +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+18h] +
mov edx [esp+1Ch] +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aIdentifiersLu_ +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
xor edx edx +
fild  qword ptr [esp+38h] +
fst  qword ptr [esp+18h] +
mov [esp+3Ch] edx +
add eax 40h +
mov [esp+38h] esi +
fild  qword ptr [esp+38h] +
fmul  ds:flt_4CDB74 +
mov [esp] eax +
fdivrp st(1) st +
fstp  qword ptr [esp+0Ch] +
call sub_47D600  +
mov eax [esp+60h] +
mov eax [eax+38h] +
mov dword ptr [esp+4] offset aSlotsLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset aDeletedLu +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
cmp edi 27FFh +
mov ecx 20h +
fld  qword ptr [esp+30h] +
jbe loc_43D5AD  +
cmp edi 9FFFFFh +
ja loc_43D7C0  +
shr edi 0Ah +
mov ecx 6Bh +
cmp ebp 27FFh +
jbe loc_43D5D0  +
cmp ebp 9FFFFFh +
ja loc_43D7B1  +
mov edx ebp +
mov eax 6Bh +
shr edx 0Ah +
jmp loc_43D5D7  +
mov edx ebp +
mov eax 20h +
mov [esp+0Ch] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+20h] +
mov [esp+14h] ecx +
mov [esp+10h] edi +
mov [esp+8] edx +
add eax 40h +
mov dword ptr [esp+4] offset aBytesLuCLuCOve +
mov [esp] eax +
call sub_47D600  +
cmp dword ptr [esp+28h] 27FFh +
fld  qword ptr [esp+20h] +
jbe loc_43D630  +
cmp dword ptr [esp+28h] 9FFFFFh +
ja loc_43D7A0  +
mov eax [esp+28h] +
mov edx 6Bh +
shr eax 0Ah +
jmp loc_43D639  +
mov eax [esp+28h] +
mov edx 20h +
mov [esp+8] eax +
mov eax ds:_iob +
fstp  qword ptr [esp+28h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+4] offset aTableSizeLuC +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
xor edx edx +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov [esp+38h] ebp +
mov eax [eax+48h] +
fild  qword ptr [esp+38h] +
fld  qword ptr [esp+18h] +
fdiv st(1) st +
mov [esp+38h] eax +
mov eax [esp+60h] +
mov [esp+3Ch] edx +
xor edx edx +
mov eax [eax+44h] +
mov dword ptr [esp+4] offset aCollSearch_4f +
fld  st(1) +
fmul st st(2) +
fxch  st(2) +
fstp  qword ptr [esp+30h] +
fxch  st(1) +
fstp  qword ptr [esp+20h] +
fld  qword ptr [esp+28h] +
fdivrp st(1) st +
fstp  qword ptr [esp+28h] +
fild  qword ptr [esp+38h] +
mov [esp+38h] eax +
mov eax ds:_iob +
mov [esp+3Ch] edx +
fild  qword ptr [esp+38h] +
fdivp st(1) st +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_47D600  +
mov eax [esp+60h] +
xor edx edx +
mov eax [eax+44h] +
mov [esp+3Ch] edx +
mov dword ptr [esp+4] offset aInsSearch_4f +
mov [esp+38h] eax +
mov eax ds:_iob +
fild  qword ptr [esp+38h] +
fdivr  qword ptr [esp+18h] +
add eax 40h +
mov [esp] eax +
fstp  qword ptr [esp+8] +
call sub_47D600  +
fld  qword ptr [esp+28h] +
fsub  qword ptr [esp+20h] +
fldz   +
fld  st +
fucomi st st(2) +
fld  qword ptr [esp+30h] +
ja loc_43D7DF  +
fxch  st(3) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_43D7D0  +
fstp  st(1) +
jmp loc_43D732  +
fstp  st(1) +
fld  st +
fld  ds:dbl_4CDB78 +
lea esi [esi+0] +
fld  st(1) +
fmul st st(2) +
fsub st st(3) +
fld  st(2) +
fadd st st(3) +
fdivp st(1) st +
fsub st(2) st +
fucomip st st(1) +
ja loc_43D740  +
fstp  st +
fstp  st(1) +
mov eax ds:_iob +
fstp  qword ptr [esp+10h] +
fstp  qword ptr [esp+8] +
mov dword ptr [esp+4] offset aAvg_Entry_2fBy +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aLongestEntryLu +
add eax 40h +
mov [esp] eax +
call sub_47D600  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+28h] +
mov edx 4Dh +
shr eax 14h +
jmp loc_43D639  +
***
mov edx ebp +
mov eax 4Dh +
shr edx 14h +
jmp loc_43D5D7  +
***
shr edi 14h +
mov ecx 4Dh +
jmp loc_43D5AD  +
***
fucomi st st(1) +
jnz loc_43D730  +
fstp  st +
jmp loc_43D756  +
***
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov dword ptr [esp+8] offset aApprox_sqrt +
mov dword ptr [esp+4] 15Ch +
mov dword ptr [esp] offset a____GccLibcppS +
call sub_424560  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movq mm6 qword ptr ds:oword_4CE5C0 +
movq mm5 qword ptr ds:oword_4CE5D0 +
movq mm4 qword ptr ds:oword_4CE5E0 +
movq mm3 qword ptr ds:oword_4CE5F0 +
mov eax ecx +
and ecx 7 +
and eax 0FFFFFFF8h +
movq mm1 qword ptr [eax] +
shl edx cl +
jmp loc_43D84F  +
add eax 8 +
mov edx 0FFFFFFFFh +
movq mm1 qword ptr [eax] +
movq mm2 mm1 +
movq mm0 mm1 +
pcmpeqb mm2 mm6 +
pcmpeqb mm0 mm5 +
por mm0 mm2 +
movq mm2 mm1 +
pcmpeqb mm2 mm4 +
por mm0 mm2 +
pcmpeqb mm1 mm3 +
por mm0 mm1 +
pmovmskb ecx mm0 +
and edx ecx +
jz loc_43D844  +
emms   +
bsf edx edx +
add eax edx +
retn   +
***
mov ecx [esp+4] +
mov edx 0FFFFFFFFh +
movdqa xmm6 oword ptr ds:oword_4CE5C0 +
movdqa xmm5 oword ptr ds:oword_4CE5D0 +
movdqa xmm4 oword ptr ds:oword_4CE5E0 +
movdqa xmm3 oword ptr ds:oword_4CE5F0 +
mov eax ecx +
and ecx 0Fh +
and eax 0FFFFFFF0h +
movdqa xmm1 oword ptr [eax] +
shl edx cl +
jmp loc_43D8CC  +
add eax 10h +
mov edx 0FFFFFFFFh +
movdqa xmm1 oword ptr [eax] +
movdqa xmm2 xmm1 +
movdqa xmm0 xmm1 +
pcmpeqb xmm2 xmm6 +
pcmpeqb xmm0 xmm5 +
por xmm0 xmm2 +
movdqa xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pcmpeqb xmm2 xmm4 +
por xmm0 xmm2 +
por xmm0 xmm1 +
pmovmskb ecx xmm0 +
and edx ecx +
jz loc_43D8C0  +
bsf edx edx +
add eax edx +
retn   +
***
mov ebx eax +
sub esp 14h +
mov esi [eax+20h] +
cmp esi [eax+24h] +
jz loc_43D936  +
mov eax [eax+18h] +
lea eax [eax+esi*8] +
add esi 1 +
mov [eax] edx +
mov [eax+4] ecx +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esi 64h +
lea eax [esi+esi] +
mov [ebx+24h] eax +
mov eax [ebx+18h] +
shl esi 4 +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_8] ecx +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_14] eax +
call sub_452F50  +
mov esi [ebx+20h] +
mov ecx [esp+14h+var_8] +
mov edx [esp+14h+var_C] +
mov [ebx+18h] eax +
jmp loc_43D922  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax] +
test eax eax +
jz loc_43D983  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 10h +
call sub_452ED0  +
mov [ebx] eax +
mov esi eax +
mov [eax+4] ebx +
mov [esp+14h+var_14] 0FA0h +
call sub_452ED0  +
mov dword ptr [esi] 0 +
mov [esi+8] eax +
add eax 0FA0h +
mov [esi+0Ch] eax +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov esi [eax] +
mov edi [esi] +
movzx eax byte ptr [edi] +
cmp al 24h +
jz loc_43D9F0  +
cmp byte ptr [ebx+263h] 0 +
jz loc_43D9E3  +
cmp al 5Ch +
jz loc_43DA33  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+262h] 0 +
jz loc_43D9E3  +
add edi 1 +
mov ebp 1 +
mov [esi] edi +
cmp byte ptr [ebx+264h] 0 +
jz loc_43D9E3  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43D9E3  +
mov byte ptr [ebx+264h] 0 +
mov [esp+48h+var_40] offset aInIdentifier_0 +
mov [esp+48h+var_44] 2 +
mov [esp+48h+var_48] ebx +
call sub_43CB30  +
jmp loc_43D9E3  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 55h +
jnz loc_43D9E3  +
add edi 2 +
cmp edx 1 +
mov edx [esi+10h] +
sbb eax eax +
not eax  +
mov [esi] edi +
add eax 2 +
lea edi [esp+48h+var_1C] +
mov [esp+48h+var_2C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_34] edi +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebx +
call sub_42F890  +
test al al +
jnz loc_43DA90  +
sub dword ptr [esi] 2 +
jmp loc_43D9E3  +
mov ebp 1 +
jmp loc_43D9E3  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ebx] +
test cl cl +
mov [esp+2Ch+var_10] edx +
mov esi [esp+2Ch+arg_0] +
movzx edx byte ptr [edx] +
mov edi [eax] +
jnz loc_43DB0E  +
movzx eax byte ptr [edi] +
lea ebp [edx-71h] +
test ds:word_4D0720[eax+eax] 204h +
jz loc_43DAE9  +
nop   +
imul ebp ebp +
add edi 1 +
lea ebp [ebp+eax-71h] +
movzx eax byte ptr [edi] +
test ds:word_4D0720[eax+eax] 204h +
jnz loc_43DAD0  +
movzx eax byte ptr [edi-1] +
xor edx edx +
mov ecx esi +
mov byte ptr [esi+4] 0 +
mov [esi] eax +
mov eax [ebx] +
mov [eax] edi +
mov eax ebx +
call sub_43D9C0  +
test al al +
jz loc_43DBE0  +
mov eax [ebx] +
mov edi [eax] +
movzx edx byte ptr [edi] +
test ds:word_4D0720[edx+edx] 204h +
jnz loc_43DB42  +
lea esi [esi+0] +
xor edx edx +
mov ecx esi +
mov eax ebx +
call sub_43D9C0  +
test al al +
jz loc_43DB51  +
mov edx [ebx] +
mov edi [edx] +
movzx edx byte ptr [edi] +
test ds:word_4D0720[edx+edx] 204h +
jz loc_43DB20  +
mov byte ptr [esi+4] 0 +
mov [esi] edx +
mov edx [ebx] +
add dword ptr [edx] 1 +
mov edi [edx] +
jmp loc_43DB33  +
mov eax [ebx] +
mov edi [esp+2Ch+var_10] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_434C80  +
mov esi eax +
mov eax [ebx] +
mov eax [eax] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
sub eax edi +
mov [esp+2Ch+var_24] eax +
call sub_442000  +
mov ecx [esp+2Ch+arg_4] +
mov [ecx] eax +
movzx edx word ptr [esi+14h] +
shr dx 6 +
test dl 8 +
jz loc_43DBD1  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43DBD1  +
and edx 2 +
jnz loc_43DC17  +
cmp [ebx+2B8h] esi +
jz loc_43DC40  +
test byte ptr [esi+15h] 80h +
jz loc_43DBD1  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aIdentifierSIsA +
mov [esp+2Ch+var_28] 0Fh +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_43CB70  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [ebx+234h] +
mov [esp+2Ch+var_1C] 1 +
sub edi ecx +
add ebp edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_43CF90  +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
jmp loc_43DB89  +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_43DBA1  +
mov eax [esi] +
mov [esp+2Ch+var_24] offset aAttemptToUsePo +
mov [esp+2Ch+var_28] 3 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] eax +
call sub_43CB30  +
jmp loc_43DBA1  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_43DBAD  +
cmp byte ptr [ebx+248h] 0 +
jz loc_43DC70  +
mov [esp+2Ch+var_24] offset a__va_args__Can +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_43CB30  +
jmp loc_43DBAD  +
mov [esp+2Ch+var_24] offset a__va_args__C_0 +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_43CB30  +
jmp loc_43DBAD  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebx eax +
and ebx 0FFFFFFFCh +
and eax 3 +
mov edx [ebx] +
jz loc_43DCBB  +
lea ecx ds:0[eax*8] +
mov eax 0FFFFFFFFh +
shl eax cl +
and edx eax +
jmp loc_43DCBB  +
add ebx 4 +
mov edx [ebx] +
mov ecx edx +
mov ebp edx +
xor ecx 0D0D0D0Dh +
xor ebp 0A0A0A0Ah +
mov eax ecx +
add ecx 7EFEFEFFh +
not eax  +
mov edi edx +
xor eax ecx +
mov ecx ebp +
not ecx  +
add ebp 7EFEFEFFh +
xor edi 5C5C5C5Ch +
xor ecx ebp +
or eax ecx +
mov ecx edi +
mov esi edx +
add edi 7EFEFEFFh +
not ecx  +
xor esi 3F3F3F3Fh +
xor ecx edi +
or eax ecx +
mov ecx esi +
not ecx  +
add esi 7EFEFEFFh +
xor ecx esi +
or eax ecx +
test eax 81010100h +
jz loc_43DCB6  +
xor eax eax +
lea ecx ds:0[eax*8] +
mov esi edx +
shr esi cl +
mov ecx esi +
cmp cl 0Ah +
jz loc_43DD48  +
cmp cl 0Dh +
jz loc_43DD48  +
cmp cl 5Ch +
jz loc_43DD48  +
cmp cl 3Fh +
jz loc_43DD48  +
add eax 1 +
cmp eax 4 +
jnz loc_43DD1A  +
jmp loc_43DCB6  +
test eax eax +
js loc_43DCB6  +
add eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [edx] +
test al al +
movzx ebx al +
jns loc_43DE18  +
mov esi ebx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx ebx +
add ecx 1 +
test bl 80h +
jnz loc_43DD80  +
mov ebx 7Fh +
sar ebx cl +
and ebx esi +
cmp ecx 1 +
jz loc_43DE38  +
movzx eax byte ptr [edx+1] +
shl ebx 6 +
lea esi [edx+1] +
mov ebp eax +
and eax 0C0h +
and ebp 3Fh +
or ebx ebp +
add eax 0FFFFFF80h +
jnz loc_43DE1C  +
lea eax [edx+ecx-1] +
jmp loc_43DDDD  +
add esi 1 +
movzx edx byte ptr [esi] +
shl ebx 6 +
mov ebp ebx +
mov ebx edx +
and edx 0C0h +
and ebx 3Fh +
or ebx ebp +
add edx 0FFFFFF80h +
jnz loc_43DE1C  +
cmp esi eax +
jnz loc_43DDC0  +
mov ebp ecx +
mov byte ptr [edi] 5Ch +
lea edx [edi+2] +
mov ecx 1Ch +
mov byte ptr [edi+1] 55h +
mov esi ebx +
add edx 1 +
shr esi cl +
sub ecx 4 +
and esi 0Fh +
cmp ecx 0FFFFFFFCh +
movzx eax ds:byte_4CDC95[esi] +
mov [edx-1] al +
jnz loc_43DDF2  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebp ebp +
jmp loc_43DDE3  +
mov [esp+24h+var_1C] offset aUtf8_to_ucn +
mov [esp+24h+var_20] 0C56h +
mov [esp+24h+var_24] offset a____GccLibcp_0 +
call sub_424560  +
mov ebp 1 +
jmp loc_43DDE3  +
***
sub esp 24h +
movzx esi byte ptr [edx] +
test byte ptr [esi+esi+4D0721h] 2 +
jz loc_43DEC0  +
movzx ebx byte ptr [edx+1] +
sub esi 71h +
lea ecx [edx+1] +
test ds:word_4D0720[ebx+ebx] 204h +
jz loc_43DE81  +
imul esi esi +
add ecx 1 +
lea esi [esi+ebx-71h] +
movzx ebx byte ptr [ecx] +
test ds:word_4D0720[ebx+ebx] 204h +
jnz loc_43DE68  +
mov eax [eax] +
sub ecx edx +
add esi ecx +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] eax +
call sub_43CF90  +
test eax eax +
jz loc_43DEC0  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
push ebx  +
jz loc_43DF51  +
xor eax eax +
cpuid   +
test eax eax +
jz loc_43DF51  +
mov eax 1 +
cpuid   +
and ecx 100000h +
mov eax offset loc_43D880 +
jnz loc_43DF4A  +
test edx 4000000h +
jnz loc_43DF4A  +
and edx 2000000h +
mov eax offset loc_43D810 +
jz loc_43DF93  +
mov ds:dword_4D9294 eax +
pop ebx  +
retn   +
pushf   +
pushf   +
pop eax  +
mov edx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop eax  +
popf   +
xor eax edx +
test eax 200000h +
jz loc_43DF93  +
mov eax 80000000h +
cpuid   +
cmp eax 80000000h +
jbe loc_43DF93  +
mov eax 80000001h +
cpuid   +
and edx offset loc_408000 +
cmp edx offset loc_408000 +
jnz loc_43DF93  +
mov eax offset loc_43D810 +
jmp loc_43DF4A  +
mov eax offset sub_43DC90 +
mov ds:dword_4D9294 eax +
pop ebx  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
mov esi [eax] +
mov ebx [esi+8] +
test byte ptr [esi+3Ch] 2 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+4] ebx +
mov [esi] ebx +
mov byte ptr [esi+38h] 0 +
jz loc_43E006  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_43DFEE  +
cmp al 0Dh +
jnz loc_43DFE4  +
jmp loc_43DFEE  +
cmp al 0Ah +
jz loc_43DFEE  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 0Dh +
jnz loc_43DFE0  +
cmp al 0Dh +
jz loc_43E054  +
lea edx [ebx+1] +
mov ebp edx +
jmp loc_43E03A  +
cmp byte ptr [ebx+1] 3Fh +
jz loc_43E0D8  +
add ebx 1 +
mov eax [esi+10h] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_20] eax +
call ds:dword_4D9294  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_43E067  +
cmp al 3Fh +
jz loc_43DFF9  +
mov edx [esi+10h] +
cmp ebx edx +
jz loc_43DFF2  +
cmp al 0Dh +
mov ebp ebx +
jz loc_43E06E  +
test edi edi +
jnz loc_43E080  +
lea edx [ebx+1] +
add ebp 1 +
mov byte ptr [ebx] 0Ah +
mov eax esi +
mov ecx 0Ah +
call sub_43D910  +
mov [esi+8] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+10h] ebx +
jz loc_43DFF2  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_43DFF2  +
lea ebp [ebx+2] +
lea edx [ebx+1] +
jmp loc_43E03A  +
mov edi ebx +
add ebx 1 +
jmp loc_43E006  +
cmp byte ptr [ebx+1] 0Ah +
jnz loc_43E030  +
lea ebp [ebx+1] +
cmp edx ebp +
jnz loc_43E030  +
lea ebp [ebx+2] +
jmp loc_43E03A  +
movzx eax byte ptr [ebx-1] +
test byte ptr [eax+eax+4D0721h] 8 +
jz loc_43E1E1  +
mov eax ebx +
sub eax 1 +
movzx edx byte ptr [eax-1] +
test byte ptr [edx+edx+4D0721h] 8 +
jnz loc_43E094  +
mov [esp+24h+var_18] eax +
sub eax 1 +
cmp edi eax +
jnz loc_43E034  +
cmp ebx [esp+24h+var_18] +
mov ecx 20h +
mov eax 5Ch +
mov edx edi +
cmovz ecx eax +
mov eax esi +
mov edi edx +
call sub_43D910  +
mov ebx [esp+24h+var_18] +
mov [esi+8] edi +
sub ebx 2 +
jmp loc_43E113  +
movzx ecx byte ptr [ebx+2] +
cmp ds:byte_4D92A0[ecx] 0 +
jz loc_43E003  +
mov eax esi +
mov edx ebx +
call sub_43D910  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_43E003  +
movzx eax byte ptr [ebx+2] +
lea ebp [ebx+2] +
movzx eax ds:byte_4D92A0[eax] +
mov [ebx] al +
mov edi ebx +
lea eax [ebp+1] +
add ebx 1 +
mov [esp+24h+var_18] eax +
movzx eax byte ptr [ebp+1] +
cmp al 0Dh +
mov [edi+1] al +
jnz loc_43E183  +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jz loc_43E1D6  +
cmp byte ptr [ebp+2] 0Ah +
jz loc_43E19A  +
mov edx [esi+8] +
cmp edx ebx +
jz loc_43E174  +
movzx eax byte ptr [edi] +
movzx ecx al +
test byte ptr [ecx+ecx+4D0721h] 8 +
jz loc_43E1B7  +
mov edi ebx +
jmp loc_43E16D  +
movzx eax byte ptr [edi-1] +
movzx ecx al +
test byte ptr [ecx+ecx+4D0721h] 8 +
jz loc_43E1FC  +
sub edi 1 +
cmp edx edi +
jnz loc_43E158  +
mov ebp [esp+24h+var_18] +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_43E03A  +
cmp al 0Ah +
jz loc_43E1A1  +
cmp al 3Fh +
jz loc_43E215  +
mov edi ebx +
mov ebp [esp+24h+var_18] +
jmp loc_43E115  +
lea eax [ebp+2] +
mov [esp+24h+var_18] eax +
mov eax [esp+24h+var_18] +
cmp [esi+10h] eax +
jnz loc_43E13D  +
mov ebp eax +
lea edx [ebx+1] +
add ebp 1 +
jmp loc_43E03A  +
cmp al 5Ch +
jnz loc_43E174  +
mov edi ebx +
mov ecx 5Ch +
lea ebp [edi-1] +
mov eax esi +
mov edx ebp +
call sub_43D910  +
lea ebx [edi-2] +
mov [esi+8] ebp +
jmp loc_43E18F  +
lea edx [ebx+1] +
add ebp 2 +
jmp loc_43E03A  +
lea eax [ebx-1] +
cmp eax edi +
mov edx eax +
jnz loc_43E034  +
mov [esp+24h+var_18] ebx +
mov ecx 5Ch +
jmp loc_43E0C3  +
cmp al 5Ch +
jnz loc_43E174  +
cmp ebx edi +
mov ecx 5Ch +
mov eax 20h +
cmovnz ecx eax +
jmp loc_43E1C2  +
cmp byte ptr [ebp+2] 3Fh +
jnz loc_43E18F  +
movzx ecx byte ptr [ebp+3] +
cmp ds:byte_4D92A0[ecx] 0 +
jz loc_43E18F  +
mov eax esi +
mov edx ebx +
call sub_43D910  +
mov eax [esp+24h+arg_0] +
cmp byte ptr [eax+24Dh] 0 +
jz loc_43E18F  +
movzx eax byte ptr [ebp+3] +
movzx eax ds:byte_4D92A0[eax] +
mov [edi+1] al +
lea eax [ebp+3] +
mov [esp+24h+var_18] eax +
jmp loc_43E18F  +
***
push ebx  +
sub esp 14h +
mov edx [eax] +
jmp loc_43E2A8  +
cmp ebx ecx +
movzx ebx byte ptr [edx+3Ch] +
jbe loc_43E290  +
test bl 2 +
jnz loc_43E290  +
mov [edx+8] ecx +
mov [esp+18h+var_18] esi +
shr bl 2 +
call sub_4380C0  +
mov edx [esi] +
and ebx 1 +
test edx edx +
jz loc_43E2D0  +
test bl bl +
jnz loc_43E2D0  +
movzx eax byte ptr [edx+38h] +
test al al +
jz loc_43E2D8  +
mov ebx [edx+8] +
mov ecx [edx+10h] +
cmp ebx ecx +
jb loc_43E2E3  +
cmp byte ptr [esi+11h] 0 +
jnz loc_43E2D0  +
cmp ecx [edx+0Ch] +
jnz loc_43E280  +
movzx ebx byte ptr [edx+3Ch] +
jmp loc_43E290  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_43DFA0  +
mov eax [esp+18h+var_C] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
mov ebx [ebp+0] +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
nop   +
mov eax [esp+3Ch+var_20] +
mov edi [esp+3Ch+var_1C] +
lea esi [eax+edx*8] +
mov eax [esi] +
cmp eax edi +
mov [esp+3Ch+var_18] eax +
ja loc_43E530  +
lea edi [eax+1] +
mov eax [esi+4] +
add edx 1 +
sub edi [ebx+4] +
mov [ebx+1Ch] edx +
cmp eax 20h +
jnz loc_43E3B3  +
mov eax [esp+3Ch+arg_4] +
test eax eax +
jz loc_43E538  +
mov eax [ebx+10h] +
cmp [ebx+8] eax +
ja loc_43E450  +
mov eax [esi] +
mov esi [ebp+1Ch] +
mov [ebx+4] eax +
mov eax [esi+8] +
lea edx [eax-1] +
imul edx edx +
add edx [esi] +
mov [esp+3Ch+var_34] 0 +
mov eax [esi+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov edi [edx+0Ch] +
sub eax [edx] +
mov [esp+3Ch+var_3C] esi +
shr eax cl +
lea eax [edi+eax+1] +
mov [esp+3Ch+var_38] eax +
call sub_42BF30  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
mov [esp+3Ch+var_20] eax +
mov eax [ebx] +
mov [esp+3Ch+var_1C] eax +
jmp loc_43E320  +
cmp eax 5Ch +
jz loc_43E359  +
movzx ecx ds:byte_4D92A0[eax] +
test cl cl +
mov byte ptr [esp+3Ch+var_14] cl +
jz loc_43E425  +
cmp byte ptr [ebp+258h] 0 +
jz loc_43E320  +
mov ecx [esp+3Ch+arg_4] +
test ecx ecx +
jnz loc_43E481  +
cmp byte ptr [ebp+24Dh] 0 +
jz loc_43E500  +
mov edx [ebp+1Ch] +
movzx ecx byte ptr [esp+3Ch+var_14] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CCon +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_43CC80  +
jmp loc_43E30E  +
test eax eax +
jz loc_43E320  +
mov [esp+3Ch+var_34] offset a_cpp_process_l +
mov [esp+3Ch+var_38] 48Bh +
mov [esp+3Ch+var_3C] offset a____GccLibcp_0 +
call sub_424560  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashNewli +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_43CC30  +
mov eax [ebx+10h] +
mov [ebx+8] eax +
jmp loc_43E365  +
cmp eax 2Fh +
jnz loc_43E320  +
cmp byte ptr [ebp+24Dh] 0 +
mov ecx [esp+3Ch+var_18] +
jnz loc_43E563  +
add ecx 3 +
mov [esp+3Ch+var_14] ecx +
mov ecx [esp+3Ch+var_18] +
movzx ecx byte ptr [ecx+3] +
test byte ptr [ecx+ecx+4D0721h] 8 +
mov byte ptr [esp+3Ch+var_18] cl +
jz loc_43E4E7  +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_18] esi +
add ecx 1 +
movzx ebx byte ptr [ecx] +
movzx esi bl +
test byte ptr [esi+esi+4D0721h] 8 +
jnz loc_43E4C4  +
mov esi [esp+3Ch+var_18] +
mov byte ptr [esp+3Ch+var_18] bl +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_14] ecx +
cmp byte ptr [esp+3Ch+var_18] 0Ah +
jnz loc_43E320  +
mov ecx [esp+3Ch+var_14] +
cmp [esi+8] ecx +
jbe loc_43E320  +
nop   +
mov edx [ebp+1Ch] +
mov edx [edx+2Ch] +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] offset aTrigraph??CIgn +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebp +
call sub_43CC80  +
jmp loc_43E30E  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_2C] offset aBackslashAndNe +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] ebp +
call sub_43CC30  +
jmp loc_43E359  +
cmp ecx [esi+8] +
jz loc_43E3ED  +
lea esi [esi+0] +
jmp loc_43E320  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov edi [ebp+0] +
mov edx [edi] +
movzx eax byte ptr [edx+1] +
lea ebx [edx+1] +
cmp al 2Fh +
jz loc_43E690  +
cmp al 2Fh +
lea esi [ebx+1] +
jz loc_43E5B7  +
cmp al 0Ah +
jz loc_43E610  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
cmp al 2Fh +
lea esi [ebx+1] +
jnz loc_43E5A6  +
cmp byte ptr [ebx-1] 2Ah +
jz loc_43E674  +
cmp byte ptr [ebp+255h] 0 +
jz loc_43E5AA  +
movzx eax byte ptr [ebx+1] +
cmp al 2Ah +
jnz loc_43E5AE  +
cmp byte ptr [ebx+2] 2Fh +
jz loc_43E5AE  +
mov eax [ebp+1Ch] +
mov edx esi +
mov [edi] esi +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_1C] offset aWithinComment +
sub edx [edi+4] +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_2C] ebp +
call sub_43CC80  +
movzx eax byte ptr [ebx+1] +
mov ebx esi +
jmp loc_43E5B0  +
mov [edi] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_43E300  +
mov eax [edi+10h] +
cmp [edi+8] eax +
jnb loc_43E69C  +
mov [esp+2Ch+var_2C] ebp +
call sub_43DFA0  +
mov ebx [ebp+1Ch] +
mov eax [ebx+8] +
lea edx [eax-1] +
mov eax [edi+8] +
imul edx edx +
add edx [ebx] +
sub eax [edi+4] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+2Ch] +
movzx ecx byte ptr [edx+18h] +
mov esi [edx+0Ch] +
sub eax [edx] +
mov [esp+2Ch+var_2C] ebx +
shr eax cl +
lea eax [esi+eax+1] +
mov [esp+2Ch+var_28] eax +
call sub_42BF30  +
mov esi [edi] +
movzx eax byte ptr [esi] +
mov ebx esi +
jmp loc_43E5B0  +
mov [edi] esi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] 1 +
call sub_43E300  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edx+2] +
movzx eax byte ptr [edx+2] +
jmp loc_43E59F  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
movzx ecx byte ptr [esi] +
lea eax [esi+1] +
movzx edx byte ptr [esi+1] +
sub ecx 71h +
test ds:word_4D0720[edx+edx] 204h +
jz loc_43E6EF  +
imul ecx ecx +
add eax 1 +
lea ecx [ecx+edx-71h] +
movzx edx byte ptr [eax] +
test ds:word_4D0720[edx+edx] 204h +
jnz loc_43E6D6  +
mov edx [ebx+234h] +
sub eax esi +
add ecx eax +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_14] 1 +
mov [esp+24h+var_24] edx +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_1C] eax +
call sub_43CF90  +
movzx edx word ptr [eax+14h] +
mov esi eax +
shr dx 6 +
test dl 8 +
jz loc_43E760  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43E760  +
and edx 2 +
jnz loc_43E768  +
cmp esi [ebx+2B8h] +
jz loc_43E78E  +
test byte ptr [esi+15h] 80h +
jz loc_43E760  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aIdentifierSIsA +
mov [esp+24h+var_20] 0Fh +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_43CB70  +
nop   +
lea esi [esi+0] +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
cmp byte ptr [ebx+0Fh] 0 +
jnz loc_43E72F  +
mov eax [esi] +
mov [esp+24h+var_1C] offset aAttemptToUsePo +
mov [esp+24h+var_20] 3 +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_43CB30  +
jmp loc_43E72F  +
cmp byte ptr [ebx+0Eh] 0 +
jnz loc_43E737  +
cmp byte ptr [ebx+248h] 0 +
jz loc_43E7B7  +
mov [esp+24h+var_1C] offset a__va_args__Can +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_43CB30  +
jmp loc_43E737  +
mov [esp+24h+var_1C] offset a__va_args__C_0 +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] ebx +
call sub_43CB30  +
jmp loc_43E737  +
***
mov eax [esp+4] +
add eax 2ECh +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
shl ebx 4 +
mov [esp+14h+var_14] ebx +
call sub_452ED0  +
mov dword ptr [esi] 0 +
add ebx eax +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov eax [esi+104h] +
mov edi [esi+0F0h] +
mov ebp [esi+108h] +
mov ebx [eax+0Ch] +
mov [esp+1Ch+var_10] eax +
mov eax edi +
sub ebx edi +
sar ebx 4 +
test ebp ebp +
jz loc_43E8D0  +
cmp ebx ebp +
jle loc_43E8F3  +
cmp ebx 1 +
jle loc_43E8D0  +
sub ebx 1 +
cmp ebx ebp +
cmovle ebp ebx +
mov [esp+1Ch+var_18] eax +
shl ebp 4 +
add eax 10h +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] eax +
call memmove  +
mov eax [esi+0F0h] +
jmp loc_43E8DD  +
test ebx ebx +
jnz loc_43E8DD  +
mov ecx [esp+1Ch+var_10] +
cmp [ecx+0Ch] eax +
jz loc_43E940  +
lea edx [eax+10h] +
mov [esi+0F0h] edx +
mov edx [edi-10h] +
mov [eax] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+var_10] +
call sub_43D970  +
cmp ebx ebp +
mov edx eax +
jl loc_43E952  +
mov ecx [esi+104h] +
cmp ebx 1 +
mov eax [edx+8] +
mov [esp+1Ch+var_10] ecx +
mov ecx [ecx+0Ch] +
mov edx [ecx-10h] +
mov [eax] edx +
mov edx [ecx-0Ch] +
mov [eax+4] edx +
mov edx [ecx-8] +
mov [eax+8] edx +
mov ecx [ecx-4] +
mov [eax+0Ch] ecx +
mov eax [esi+0F0h] +
jg loc_43E8A8  +
jmp loc_43E8D0  +
mov eax ecx +
call sub_43D970  +
mov [esi+104h] eax +
mov eax [eax+8] +
jmp loc_43E8DD  +
mov ecx [eax+8] +
mov [esp+1Ch+var_10] eax +
mov eax ebp +
sub eax ebx +
shl eax 4 +
mov [esp+1Ch+var_18] ecx +
add ecx 10h +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_1C] ecx +
call memmove  +
mov edx [esp+1Ch+var_10] +
jmp loc_43E902  +
***
mov eax [esp+arg_0] +
cmp byte ptr [eax+8] 0 +
jnz loc_43E990  +
jmp sub_43E270  +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax+4] +
mov edx ds:dword_4CE7E0[edx*8] +
cmp edx 1 +
jz loc_43E9C6  +
cmp edx 2 +
jnz loc_43E9C0  +
mov eax [eax+8] +
retn   +
mov eax 6 +
retn   +
mov eax [eax+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov edi [esp+0Ch+arg_4] +
mov esi [esp+0Ch+arg_0] +
mov eax [edi+4] +
mov ebp [edi] +
test eax eax +
jz loc_43EA2E  +
xor ebx ebx +
jmp loc_43EA0D  +
mov [esi] al +
add ebx 1 +
add esi 1 +
cmp [edi+4] ebx +
jbe loc_43EA2E  +
lea edx [ebp+ebx+0] +
movzx eax byte ptr [edx] +
test al 80h +
jz loc_43EA00  +
mov eax esi +
add esi 0Ah +
call sub_43DD60  +
lea ebx [eax+ebx-1] +
add ebx 1 +
cmp [edi+4] ebx +
ja loc_43EA0D  +
add esp 0Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_8] +
mov ecx [esp+10h+arg_C] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4CE7E0[edx*8] +
cmp eax 1 +
jz loc_43EB00  +
jle loc_43EAC4  +
cmp eax 2 +
jz loc_43EAA2  +
cmp eax 3 +
jnz loc_43EA99  +
mov eax ds:off_4CE7E4[edx*8] +
mov [esp+10h+var_8] offset aUnspellableTok +
mov [esp+10h+var_C] 4 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_4] eax +
call sub_43CB30  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
add ebx [esi+8] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jnz loc_43EA99  +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_43EB46  +
test al 10h +
jnz loc_43EB00  +
mov eax ds:off_4CE7E4[edx*8] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
test al al +
jz loc_43EA99  +
add ebx 1 +
add edx 1 +
mov [ebx-1] al +
movzx eax byte ptr [edx-1] +
test al al +
jnz loc_43EAE5  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test cl cl +
jz loc_43EB30  +
mov eax [esi+0Ch] +
mov edx [eax+4] +
mov eax [eax] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call memcpy  +
mov eax [esi+0Ch] +
add ebx [eax+4] +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+8] +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_43E9E0  +
mov eax ds:dword_4CEA00[edx*4] +
jmp loc_43EADB  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [ecx] +
cmp [ebx+284h] eax +
jge loc_43EBF7  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_43EBF7  +
movzx eax byte ptr [edx+4] +
mov esi edx +
mov eax ds:dword_4CE7E0[eax*8] +
cmp eax 1 +
jz loc_43EC05  +
cmp eax 2 +
jz loc_43EC00  +
mov eax 6 +
mov [esp+20h+var_20] eax +
mov [esp+20h+var_4] ecx +
call sub_452ED0  +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_18] eax +
mov edi eax +
call sub_43EA40  +
mov ecx [esp+20h+var_4] +
mov edx [esi] +
sub eax edi +
cmp dword ptr [ecx] 1 +
mov [esp+20h+var_8] edi +
mov [esp+20h+var_C] eax +
jz loc_43EC15  +
mov [esp+20h+var_10] offset a_SIsNotInNfc +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] 10h +
mov [esp+20h+var_20] ebx +
call sub_43CC80  +
mov [esp+20h+var_20] edi +
call free  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edx+8] +
jmp loc_43EB90  +
mov eax [edx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_43EB90  +
mov [esp+20h+var_10] offset a_SIsNotInNfkc +
jmp loc_43EBD3  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test al 2 +
jnz loc_43EC38  +
test al 10h +
jnz loc_43EC40  +
mov eax ds:off_4CE7E4[edx*8] +
retn   +
***
mov eax ds:dword_4CEA00[edx*4] +
retn   +
***
mov [esp+4] edx +
jmp loc_44CBF0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx edx byte ptr [esi+4] +
mov eax ds:dword_4CE7E0[edx*8] +
cmp eax 1 +
jz loc_43ECC0  +
cmp eax 2 +
jz loc_43ED28  +
test eax eax +
jz loc_43EC84  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax word ptr [esi+6] +
test al 2 +
jnz loc_43ED50  +
test al 10h +
jnz loc_43ECC0  +
mov esi ds:off_4CE7E4[edx*8] +
movzx eax byte ptr [esi] +
nop   +
add esi 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call putc  +
movzx eax byte ptr [esi] +
test eax eax +
jnz loc_43ECA0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+8] +
mov edx [eax+4] +
mov edi [eax] +
test edx edx +
jz loc_43EC7C  +
xor ebp ebp +
jmp loc_43ED0C  +
lea eax [esp+2Ch+var_16] +
call sub_43DD60  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] 1 +
lea ebp [ebp+eax-1] +
lea eax [esp+2Ch+var_16] +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
mov eax [esi+8] +
add ebp 1 +
cmp [eax+4] ebp +
jbe loc_43EC7C  +
lea edx [edi+ebp] +
test byte ptr [edx] 80h +
jnz loc_43ECD0  +
mov [esp+2Ch+var_28] ebx +
mov eax [eax] +
movzx eax byte ptr [eax+ebp] +
mov [esp+2Ch+var_2C] eax +
call fputc  +
jmp loc_43ECFD  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4CEA00[edx*4] +
jmp loc_43EC9B  +
***
push ebx  +
sub esp 14h +
mov ebx [esp+18h+arg_0] +
mov esi [esp+18h+arg_4] +
mov ecx [ebx+4] +
mov edx [esi+4] +
xor ch ch +
xor dh dh +
cmp ecx edx +
jz loc_43ED83  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
movzx ecx byte ptr [ebx+4] +
movzx edx cl +
mov edx ds:dword_4CE7E0[edx*8] +
cmp edx 2 +
jz loc_43EDD0  +
cmp edx 3 +
jz loc_43EDB5  +
cmp edx 1 +
jz loc_43EDF8  +
cmp cl 26h +
mov al 1 +
jnz loc_43ED7D  +
mov eax [esi+8] +
cmp [ebx+8] eax +
setz al  +
movzx eax al +
jmp loc_43ED7D  +
cmp cl 50h +
mov eax 1 +
jnz loc_43ED7D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jz loc_43EE15  +
xor eax eax +
jmp loc_43ED7D  +
mov edx [ebx+8] +
cmp edx [esi+8] +
jnz loc_43ED7D  +
mov [esp+18h+var_10] edx +
mov eax [esi+0Ch] +
mov [esp+18h+var_14] eax +
mov eax [ebx+0Ch] +
mov [esp+18h+var_18] eax +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
jmp loc_43ED7D  +
mov ecx [esi+8] +
cmp [ebx+8] ecx +
jnz loc_43ED7D  +
mov eax [esi+0Ch] +
cmp [ebx+0Ch] eax +
setz al  +
movzx eax al +
jmp loc_43ED7D  +
mov esi [esi+0Ch] +
cmp [ebx+0Ch] esi +
jz loc_43ED7D  +
xor eax eax +
jmp loc_43ED7D  +
***
push ebp  +
mov edx 35h +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov eax [esp+1Ch] +
test byte ptr [ecx+6] 10h +
movzx ebp byte ptr [eax+4] +
movzx eax byte ptr [ecx+4] +
cmovz edx eax +
mov eax [esp+1Ch] +
movzx eax word ptr [eax+6] +
test al 10h +
jnz loc_43EEA1  +
mov ebx ebp +
movzx edi bl +
mov esi edi +
test al 2 +
jz loc_43EE85  +
mov eax ds:dword_4CEA00[esi*4] +
movzx esi byte ptr [eax] +
cmp esi 3Dh +
jnz loc_43EE95  +
cmp edx 0Dh +
mov eax 1 +
jg loc_43EE95  +
***
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_4CE7E0[esi*8] +
test eax eax +
jz loc_43EEB0  +
mov esi 0FFFFFFFFh +
cmp edx 42h +
ja sub_43EF00  +
jmp ds:off_4CDD98[edx*4]  +
***
mov esi 35h +
mov edi 35h +
jmp loc_43EE63  +
***
mov eax ds:off_4CE7E4[esi*8] +
movzx esi byte ptr [eax] +
jmp loc_43EE71  +
***
and esi 0FFFFFFFBh +
xor eax eax +
cmp esi 3Ah +
setz al  +
jmp loc_43EE80  +
***
mov eax [ecx+0Ch] +
xor eax eax +
xor eax eax +
xor eax eax +
cmp esi 2Ah +
cmp esi 3Eh +
setz al  +
cmp esi 2Dh +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_43EE80  +
***
xor eax eax +
cmp esi 2Bh +
setz al  +
jmp loc_43EE80  +
***
cmp esi 25h +
jz loc_43EF70  +
cmp esi 3Ch +
jnz loc_43EEC3  +
nop   +
mov eax 1 +
jmp loc_43EE80  +
***
xor eax eax +
cmp esi 3Eh +
setz al  +
jmp loc_43EE80  +
***
and edi 0FFFFFFFDh +
mov eax 1 +
cmp edi 35h +
jz loc_43EE80  +
cmp esi 2Bh +
jz loc_43EE80  +
sub esi 2Dh +
xor eax eax +
cmp esi 1 +
setbe al  +
jmp loc_43EE80  +
***
cmp edi 37h +
cmp esi 25h +
cmp esi 25h +
setz al  +
cmp esi 23h +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_43EE80  +
***
mov ebx [esp+arg_10] +
xor eax eax +
cmp byte ptr [ebx+271h] 0 +
jz loc_43EE80  +
cmp edi 35h +
jz loc_43EF70  +
mov ebx ebp +
movzx ebp bl +
cmp ds:dword_4CE7E0[ebp*8] 2 +
jnz loc_43EE80  +
mov ebx [esp+arg_18] +
mov edx [ebx+0Ch] +
movzx edx byte ptr [edx] +
test byte ptr [edx+edx+4D0721h] 2 +
jnz loc_43EF70  +
jmp loc_43EE80  +
***
xor eax eax +
cmp esi 2Ah +
setz al  +
jmp loc_43EE80  +
***
mov eax [esp+arg_18] +
mov edx [eax+8] +
test edx edx +
jz loc_43EF70  +
mov eax [eax+0Ch] +
lea ebx [eax+edx] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:word_4D0720[ecx+ecx] 204h +
jnz loc_43F0B1  +
cmp dl 24h +
jnz loc_43EFD3  +
mov ecx [esp+arg_10] +
cmp byte ptr [ecx+262h] 0 +
jz loc_43EFD3  +
add eax 1 +
cmp eax ebx +
jnz loc_43F085  +
jmp loc_43EF70  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
call sub_43B980  +
mov ebx eax +
cmp byte ptr [ebx+4] 16h +
jz loc_43F110  +
mov [esp] ebx +
mov [esp+4] esi +
call sub_43EC50  +
mov [esp] edi +
call sub_43B980  +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_43F0D8  +
mov [esp+4] esi +
mov dword ptr [esp] 20h +
call putc  +
cmp byte ptr [ebx+4] 16h +
jnz loc_43F0DE  +
mov [esp+24h] esi +
mov dword ptr [esp+20h] 0Ah +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp putc  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_43F242  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
lea edi [eax+78h] +
mov ebp eax +
mov [esp+2Ch+var_2C] edi +
add ebp 2 +
call sub_452ED0  +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] offset aS_12 +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call sub_47D630  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_43B980  +
mov ebx eax +
nop   +
movzx eax byte ptr [ebx+4] +
cmp al 16h +
jz loc_43F21A  +
mov eax ds:dword_4CE7E0[eax*8] +
cmp eax 1 +
jz loc_43F228  +
cmp eax 2 +
jnz loc_43F238  +
mov eax [ebx+8] +
lea eax [ebp+eax+2] +
cmp edi eax +
jnb loc_43F1C5  +
add edi edi +
cmp eax edi +
cmovnb edi eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_452F50  +
mov esi eax +
mov eax [esp+2Ch+arg_0] +
lea edx [esi+ebp] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43EA40  +
mov ebp eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_0] +
sub ebp esi +
mov [esp+2Ch+var_2C] eax +
call sub_43B980  +
mov ecx [esp+2Ch+var_10] +
test byte ptr [eax+6] 1 +
mov ebx eax +
jz loc_43F180  +
mov byte ptr [ecx] 20h +
movzx eax byte ptr [ebx+4] +
add ebp 1 +
cmp al 16h +
jnz loc_43F18C  +
mov byte ptr [esi+ebp] 0 +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
add eax eax +
jmp loc_43F1A8  +
mov eax 6 +
jmp loc_43F1A8  +
mov [esp+2Ch+var_2C] 78h +
mov edi 78h +
xor ebp ebp +
call sub_452ED0  +
mov esi eax +
jmp loc_43F171  +
***
mov ecx [esp+arg_0] +
mov edx ebx +
jmp loc_43F272  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_43F270  +
mov eax [ecx+2Ch] +
mov [edx] eax +
mov [ecx+2Ch] ebx +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ecx [esp+14h+arg_4] +
lea ebx [eax+2Ch] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_43F2C8  +
lea esi [ecx+ecx*2] +
shr esi 1 +
add esi 1F40h +
mov edx [eax+0Ch] +
sub edx [eax+4] +
cmp ecx edx +
ja loc_43F2C0  +
cmp edx esi +
jbe loc_43F310  +
mov ebx eax +
mov eax [eax] +
test eax eax +
jnz loc_43F2B2  +
cmp ecx 1F3Fh +
mov eax 1F50h +
mov ebx 1F40h +
ja loc_43F300  +
mov [esp+14h+var_14] eax +
call sub_452ED0  +
lea edx [eax+ebx] +
mov [edx+4] eax +
mov [edx+8] eax +
mov eax edx +
mov [edx+0Ch] edx +
mov dword ptr [edx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ebx [ecx+7] +
and ebx 0FFFFFFF8h +
lea eax [ebx+10h] +
jmp loc_43F2DA  +
mov edx [eax] +
mov [ebx] edx +
mov edx [eax+4] +
mov dword ptr [eax] 0 +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov edx [esp+14h+arg_8] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call sub_43F290  +
mov edx [ebx+8] +
mov [ebx] eax +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
sub eax edx +
mov [esp+14h+var_C] eax +
call memcpy  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+arg_0] +
mov ebp [eax] +
mov eax [esp+34h+arg_4] +
test ebp ebp +
mov ebx [eax] +
jz loc_43F410  +
mov eax [ebx+8] +
mov esi [ebx+0Ch] +
sub esi eax +
cmp ecx esi +
jbe loc_43F3E9  +
mov [esp+34h+var_30] edx +
sub edi esi +
mov [esp+34h+var_2C] esi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call memcpy  +
mov edx [esp+34h+var_18] +
mov eax [esp+34h+var_1C] +
add [ebx+8] esi +
add edx esi +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_18] edx +
call sub_43F330  +
mov edx [esp+34h+var_18] +
mov ebx eax +
mov eax [eax+8] +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_34] eax +
call memcpy  +
mov eax [esp+34h+arg_0] +
add [ebx+8] edi +
mov [eax] ebp +
mov eax [esp+34h+arg_4] +
mov [eax] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_34] eax +
call sub_43F290  +
mov edx [esp+34h+var_18] +
mov ebp eax +
mov eax [eax+8] +
mov ebx ebp +
jmp loc_43F3E9  +
***
jmp sub_43F440  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
mov ebx [edi] +
mov eax [ebx+0Ch] +
sub eax [ebx+8] +
lea eax [edx+eax*2] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_43F290  +
mov edx [ebx+8] +
mov ecx [eax+4] +
mov esi eax +
mov eax [ebx+0Ch] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] ecx +
sub eax edx +
mov [esp+10h+var_8] eax +
call memcpy  +
mov [esi] ebx +
mov [edi] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_43F4A0  +
***
mov eax [esp+18h+arg_0] +
test eax eax +
jnz loc_43F4B2  +
jmp loc_43F4C3  +
mov eax ebx +
mov ebx [eax] +
mov eax [eax+4] +
mov [esp+18h+var_18] eax +
call free  +
test ebx ebx +
jnz loc_43F4B0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
mov ebx [eax] +
lea eax [ebx-1] +
mov [esp+28h+var_1C] eax +
jmp loc_43F559  +
cmp al 2Dh +
jnz loc_43F5F8  +
movzx eax byte ptr [ebx-1] +
and eax 0FFFFFFDFh +
cmp al 45h +
jz loc_43F550  +
cmp al 50h +
jnz loc_43F57C  +
cmp byte ptr [edi+24Fh] 0 +
jz loc_43F57C  +
mov [esi] edx +
add ebx 1 +
mov byte ptr [esi+4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:word_4D0720[edx+edx] 204h +
jnz loc_43F550  +
cmp al 2Eh +
jz loc_43F550  +
cmp al 27h +
jnz loc_43F530  +
cmp byte ptr [edi+276h] 0 +
jnz loc_43F550  +
mov edx [edi] +
mov eax [edx] +
cmp eax ebx +
jnb loc_43F5A2  +
cmp byte ptr [ebx-1] 27h +
jnz loc_43F5A2  +
cmp byte ptr [edi+276h] 0 +
jnz loc_43F59B  +
jmp loc_43F5A2  +
cmp byte ptr [ebx-1] 27h +
jnz loc_43F5A2  +
sub ebx 1 +
cmp ebx eax +
jnz loc_43F595  +
mov [edx] ebx +
mov ecx esi +
xor edx edx +
mov eax edi +
call sub_43D9C0  +
test al al +
jz loc_43F5B9  +
mov eax [edi] +
mov ebx [eax] +
jmp loc_43F559  +
mov esi [esp+28h+var_1C] +
sub ebx esi +
mov [ebp+0] ebx +
add ebx 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edi +
call sub_43F4D0  +
mov ebx eax +
mov eax [ebp+0] +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] eax +
call memcpy  +
mov eax [ebp+0] +
mov byte ptr [ebx+eax] 0 +
mov [ebp+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Bh +
jz loc_43F538  +
jmp loc_43F57C  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
lea edx [ebx+1] +
mov [esp+28h+var_24] edx +
call sub_43F4D0  +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [esp+28h+arg_4] +
mov byte ptr [edi+ebx] 0 +
mov [esi+8] ebx +
mov [esi+0Ch] edi +
mov [esi+4] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov [esp+8Ch+var_6C] eax +
movzx eax byte ptr [ecx] +
mov [esp+8Ch+var_54] ecx +
mov edi [esp+8Ch+var_54] +
mov [esp+8Ch+var_58] edx +
movzx ebp al +
cmp ebp 55h +
jz loc_43F68E  +
cmp ebp 4Ch +
jnz loc_43F70C  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 52h +
jz loc_43F998  +
cmp ebp 22h +
jz loc_43F7B4  +
cmp ebp 27h +
jz loc_43F884  +
mov edi 44h +
mov ebp 3Eh +
movzx ecx byte ptr [esi] +
xor eax eax +
lea ebx [esi+1] +
movzx edx cl +
mov ecx [esp+8Ch+var_6C] +
cmp edx 5Ch +
jz loc_43F6F0  +
nop   +
cmp edx ebp +
jz loc_43F750  +
cmp edx 0Ah +
jz loc_43F740  +
test edx edx +
jnz loc_43F738  +
movzx edx byte ptr [esi+1] +
mov eax 1 +
mov esi ebx +
cmp edx 5Ch +
lea ebx [esi+1] +
jnz loc_43F6D0  +
cmp byte ptr [ecx+0Bh] 0 +
jnz loc_43F738  +
cmp byte ptr [esi+1] 0Ah +
mov edx 0Ah +
jz loc_43F6E6  +
lea ebx [esi+2] +
movzx edx byte ptr [esi+2] +
mov esi ebx +
jmp loc_43F6E8  +
cmp ebp 75h +
lea esi [edi+1] +
jnz loc_43F695  +
movzx ebp byte ptr [edi+1] +
lea esi [edi+2] +
cmp ebp 38h +
jnz loc_43F695  +
mov edi [esp+8Ch+var_54] +
lea esi [edi+3] +
movzx ebp byte ptr [edi+2] +
jmp loc_43F695  +
movzx edx byte ptr [esi+1] +
mov esi ebx +
jmp loc_43F6E8  +
cmp ebp 3Eh +
mov ebx esi +
mov edi 3Dh +
jz loc_43F913  +
test al al +
jz loc_43F762  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_43F97B  +
cmp edi 3Dh +
jz loc_43F852  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_43F7F0  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+28Bh] 0 +
jnz loc_43F926  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_54] +
mov edx [esp+8Ch+var_58] +
mov eax [esi] +
mov [eax] ebx +
sub ebx ecx +
mov eax esi +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] ebx +
call sub_43F610  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Ch +
mov edi 3Fh +
jz loc_43F6BA  +
cmp al 55h +
mov di 41h +
jz loc_43F6BA  +
cmp al 75h +
mov di 3Eh +
jnz loc_43F6BA  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+40h] +
jmp loc_43F6BA  +
add eax 234h +
mov edx ebx +
call sub_43DE40  +
test al al +
jz loc_43F8C0  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_43F789  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43F789  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43CC80  +
jmp loc_43F789  +
mov eax [esp+8Ch+var_6C] +
cmp dword ptr [eax+244h] 0Fh +
jz loc_43F76B  +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] offset aMissingTermina +
mov [esp+8Ch+var_88] 2 +
mov [esp+8Ch+var_8C] eax +
call sub_43CB30  +
jmp loc_43F76B  +
cmp al 4Ch +
mov edi 39h +
jz loc_43F6BA  +
cmp al 55h +
mov di 3Bh +
jz loc_43F6BA  +
cmp al 75h +
mov di 38h +
jnz loc_43F6BA  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea edi [eax+eax+3Ah] +
jmp loc_43F6BA  +
movzx eax byte ptr [ebx] +
test byte ptr [eax+eax+4D0721h] 2 +
jz loc_43F789  +
mov [esp+8Ch+var_8C] edi +
call sub_443C80  +
mov [esp+8Ch+var_8C] eax +
call sub_443C00  +
movzx edx byte ptr [ebx+1] +
test ds:word_4D0720[edx+edx] 204h +
mov edi eax +
lea eax [ebx+1] +
mov ebx eax +
jz loc_43F789  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:word_4D0720[eax+eax] 204h +
jnz loc_43F8FC  +
jmp loc_43F789  +
mov eax [esp+8Ch+var_58] +
mov byte ptr [eax+4] 3 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 234h +
mov edx ebx +
call sub_43DE40  +
test al al +
jz loc_43F789  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_43F789  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aC11RequiresASp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 17h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43CC80  +
jmp loc_43F789  +
mov [esp+8Ch+var_84] offset aNullCharacterS +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call sub_43CB30  +
jmp loc_43F762  +
mov edi [esp+8Ch+var_6C] +
cmp al 4Ch +
mov [esp+8Ch+var_39+1] 0 +
mov [esp+8Ch+var_34] 0 +
mov [esp+8Ch+var_4C] 3Fh +
mov edx [edi] +
mov ecx [edx+1Ch] +
mov edx [edx+18h] +
lea ebx [edx+ecx*8] +
jz loc_43F9DF  +
cmp al 55h +
mov [esp+8Ch+var_4C] 41h +
jz loc_43F9DF  +
cmp al 75h +
mov [esp+8Ch+var_4C] 3Eh +
jz loc_43FEC4  +
mov ebp [esp+8Ch+var_54] +
lea eax [esi+1] +
mov [esp+8Ch+var_40] eax +
mov [esp+8Ch+var_64] eax +
xor eax eax +
mov [esp+8Ch+var_68] 0 +
mov edx ebp +
mov ebp eax +
mov [esp+8Ch+var_60] 0 +
mov [esp+8Ch+var_50] 0 +
mov [esp+8Ch+var_5C] 0 +
mov edi [ebx] +
cmp edi [esp+8Ch+var_64] +
jb loc_43FC63  +
jz loc_43FA57  +
jmp loc_43FA72  +
cmp ds:byte_4D92A0[eax] 0 +
jz loc_4400FF  +
mov byte ptr [esp+8Ch+var_39] al +
mov eax [esp+8Ch+var_6C] +
mov esi ebx +
mov dword ptr [ebx+4] 0 +
cmp byte ptr [eax+24Dh] 0 +
jnz loc_43FB60  +
cmp edi [esi+8] +
lea ebx [esi+8] +
jnz loc_43FA72  +
mov eax [ebx+4] +
cmp eax 20h +
jz loc_43FAC7  +
cmp eax 5Ch +
jz loc_43FAC7  +
test eax eax +
jnz loc_43FA24  +
mov esi ebx +
cmp edi [esi+8] +
lea ebx [esi+8] +
jz loc_43FA57  +
mov eax [esp+8Ch+var_64] +
cmp [esp+8Ch+var_68] 10h +
lea edi [eax+1] +
movzx eax byte ptr [eax] +
movzx ecx al +
jbe loc_44031A  +
mov esi [esp+8Ch+var_60] +
test esi esi +
jnz loc_43FCC1  +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_68] eax +
jbe loc_43FCDA  +
mov esi edx +
mov ecx eax +
movzx eax byte ptr [esp+ecx+8Ch+var_1E] +
lea edx [eax-21h] +
cmp dl 5Dh +
mov [esp+ecx+8Ch+var_2F] al +
ja loc_43FC91  +
movzx edx dl +
jmp ds:off_4CE030[edx*4]  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
lea ebp [esi+ebp+1] +
mov esi ebx +
call sub_43F380  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset asc_4CDEA9 +
mov [esp+8Ch+var_8C] ecx +
mov ecx 1 +
call sub_43F380  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4400E0  +
cmp dword ptr [esi+4] 20h +
jz loc_43FC0A  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDEAD +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 1 +
call sub_43F380  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_43FFF7  +
mov edx edi +
jmp loc_43FA4F  +
lea eax [esp+8Ch+var_34] +
mov esi edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
sub esi edx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
mov ecx esi +
add ebp esi +
call sub_43F380  +
mov eax [esp+8Ch+var_6C] +
lea ecx [esp+8Ch+var_34] +
mov [esp+8Ch+var_88] ecx +
lea ecx [esp+8Ch+var_39+1] +
mov edx offset a?? +
mov [esp+8Ch+var_8C] ecx +
mov ecx 2 +
call sub_43F380  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_440191  +
cmp byte ptr [esp+8Ch+var_39] 2Fh +
jnz loc_43FCE3  +
cmp edi [ebx+8] +
jnz loc_43FCE3  +
mov eax [ebx+0Ch] +
cmp eax 20h +
jnz loc_4401D4  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDEB2 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 3 +
call sub_43F380  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_4401B5  +
lea esi [ebx+8] +
cmp dword ptr [esi+4] 20h +
jnz loc_43FB22  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDEAB +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
call sub_43F380  +
cmp [esp+8Ch+var_68] 10h +
jbe loc_44032E  +
lea eax [esp+8Ch+var_34] +
mov edx offset asc_4CDEAD +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_43F380  +
mov edx edi +
jmp loc_43FA4F  +
add ebx 8 +
jmp loc_43FA14  +
cmp ecx 0Fh +
ja loc_43FC91  +
add ecx 1 +
cmp ecx [esp+8Ch+var_68] +
jb loc_43FAA8  +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
mov [esp+8Ch+var_64] edi +
jmp loc_43FA14  +
cmp al 28h +
mov edx esi +
mov [esp+8Ch+var_5C] ecx +
jnz loc_43FF51  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
mov [esp+eax+8Ch+var_2F] 22h +
jmp loc_43FA14  +
cmp [esp+8Ch+var_60] 2 +
jz loc_43FD23  +
cmp ecx 29h +
jz loc_43FDB1  +
cmp ecx 0Ah +
jz loc_43FDD2  +
mov [esp+8Ch+var_64] edi +
jmp loc_43FA14  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
add edi 1 +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_39] +
mov edx esi +
add ebp 3 +
call sub_43F380  +
movzx ecx byte ptr [esp+8Ch+var_39] +
cmp [esp+8Ch+var_68] 10h +
jbe loc_440146  +
mov edx edi +
jmp loc_43FA8A  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jbe loc_43FD7C  +
cmp [esp+8Ch+var_5C] eax +
jb loc_43FD7C  +
mov esi eax +
movzx eax [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+esi+8Ch+var_1E] al +
jnz loc_43FD8A  +
mov [esp+8Ch+var_48] edx +
mov esi [esp+8Ch+var_68] +
mov [esp+8Ch+var_44] ecx +
mov edx [esp+8Ch+var_5C] +
mov eax [esp+8Ch+var_50] +
jmp loc_43FD69  +
cmp eax edx +
ja loc_43FD70  +
movzx ecx [esp+eax+8Ch+var_2F] +
cmp byte ptr [esp+eax+8Ch+var_1E] cl +
jnz loc_43FE74  +
add eax 1 +
cmp esi eax +
ja loc_43FD56  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
mov eax [esp+8Ch+var_5C] +
cmp [esp+8Ch+var_50] eax +
ja loc_440019  +
mov eax [esp+8Ch+var_50] +
cmp [esp+8Ch+var_68] eax +
jz loc_43FCDA  +
cmp ecx 29h +
mov [esp+8Ch+var_68] 11h +
mov [esp+8Ch+var_60] 1 +
jnz loc_43FCD1  +
mov [esp+8Ch+var_64] edi +
mov [esp+8Ch+var_68] 0 +
mov [esp+8Ch+var_60] 2 +
mov [esp+8Ch+var_50] 0 +
jmp loc_43FA14  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+8] 0 +
jnz loc_440283  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+11h] 0 +
jz loc_43FDF8  +
mov eax [eax] +
mov ebx [eax+10h] +
cmp [eax+8] ebx +
jnb loc_440283  +
mov ebx [esp+8Ch+var_6C] +
lea eax [esp+8Ch+var_34] +
sub edi edx +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
add ebp edi +
mov eax ebx +
call sub_43F380  +
mov eax [ebx] +
mov edi [eax+10h] +
cmp [eax] edi +
jb loc_43FE85  +
mov edi [esp+8Ch+var_64] +
mov byte ptr [eax+38h] 1 +
mov [eax] edi +
mov edi [esp+8Ch+var_6C] +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] edi +
call sub_43E300  +
cmp byte ptr [edi+8] 0 +
jnz loc_43FEDF  +
mov eax [esp+8Ch+var_6C] +
call sub_43E270  +
test al al +
jz loc_43FEDF  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov edx [eax] +
mov ecx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+8Ch+var_64] edx +
lea ebx [eax+ecx*8] +
jmp loc_43FA14  +
mov edx [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_44] +
mov [esp+8Ch+var_50] eax +
jmp loc_43FD8A  +
mov edi [esp+8Ch+var_6C] +
mov edx [edi+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+8Ch+var_84] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+8Ch+var_8C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+8Ch+var_88] eax +
call sub_42BF30  +
mov eax [edi] +
jmp loc_43FE21  +
mov eax [esp+8Ch+var_54] +
cmp byte ptr [eax+1] 38h +
setz al  +
movzx eax al +
lea eax [eax+eax+40h] +
mov [esp+8Ch+var_4C] eax +
jmp loc_43F9DF  +
mov eax [esp+8Ch+var_6C] +
mov edx 40h +
mov edi [esp+8Ch+var_58] +
mov eax [eax+1Ch] +
mov ebx [edi] +
mov byte ptr [edi+4] 16h +
mov eax [eax+2Ch] +
mov [edi+6] dx +
mov [edi] eax +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov edx eax +
jnz loc_43FF12  +
jmp loc_43FF24  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_43FF10  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] ebx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_43CC30  +
jmp loc_43F7A9  +
mov ebx [esp+8Ch+var_6C] +
mov edx [ebx] +
sub edi [edx+4] +
mov edx edi +
add edx 1 +
cmp ecx 10h +
jz loc_44011B  +
cmp al 0Ah +
jz loc_440162  +
mov edi [esp+8Ch+var_58] +
mov ecx [edi] +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_7C] offset aInvalidCharact +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_8C] eax +
call sub_43CC30  +
mov ebx [esp+8Ch+var_6C] +
mov edi [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_40] +
mov edx [ebx] +
sub eax edi +
sub eax 1 +
lea ecx [edi+eax] +
mov [edx] ecx +
mov edx [esp+8Ch+var_58] +
mov ecx edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
mov [esp+8Ch+var_88] 3Dh +
call sub_43F610  +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_43F7A9  +
mov edx eax +
jmp loc_43FFE0  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_43FFDE  +
mov edi [esp+8Ch+var_6C] +
mov ecx [edi+2Ch] +
mov [edx] ecx +
mov [edi+2Ch] eax +
jmp loc_43F7A9  +
mov edx offset asc_4CDEAD +
cmp edi edx +
jz loc_43FA4F  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 0Ah +
jmp loc_43FA4F  +
mov ebx ebp +
mov ebp edx +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+271h] 0 +
jnz loc_440221  +
mov eax [esp+8Ch+var_6C] +
mov eax [eax] +
mov [eax] edi +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
jz loc_440200  +
sub edi ebp +
mov esi ebx +
add esi edi +
lea eax [esi+1] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43F4D0  +
mov ecx [esp+8Ch+var_58] +
mov [ecx+8] esi +
mov ebx eax +
movzx eax byte ptr [esp+8Ch+var_4C] +
mov [ecx+0Ch] ebx +
mov [ecx+4] al +
mov eax [esp+8Ch+var_39+1] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jz loc_4401F9  +
mov edx [eax+4] +
mov eax [eax+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] edx +
sub eax edx +
mov [esp+8Ch+var_84] eax +
call memcpy  +
mov eax [esp+8Ch+var_34] +
add ebx [eax+8] +
sub ebx [eax+4] +
mov eax [eax] +
test eax eax +
mov [esp+8Ch+var_34] eax +
jnz loc_44007F  +
mov eax [esp+8Ch+var_39+1] +
mov edx eax +
jmp loc_4400B5  +
mov edx ecx +
mov ecx [edx] +
test ecx ecx +
jnz loc_4400B3  +
mov esi [esp+8Ch+var_6C] +
mov ecx [esi+2Ch] +
mov [edx] ecx +
mov [esi+2Ch] eax +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] ebx +
call memcpy  +
mov byte ptr [ebx+edi] 0 +
jmp loc_43F7A9  +
cmp edi offset asc_4CDEA9 +
jz loc_43FB18  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 5Ch +
jmp loc_43FB18  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6C3h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_424560  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aRawStringDelim +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] ebx +
call sub_43CC30  +
jmp loc_43FF9E  +
cmp edi esi +
jz loc_43FD1C  +
mov eax [esp+8Ch+var_68] +
mov edx edi +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] cl +
jmp loc_43FA8A  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidNewLine +
mov [esp+8Ch+var_80] edx +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43CC30  +
jmp loc_43FF9E  +
cmp edi offset a?? +
jz loc_43FBAD  +
mov eax [esp+8Ch+var_68] +
mov edx 3F3Fh +
add [esp+8Ch+var_68] 2 +
mov [esp+eax+8Ch+var_1E] dx +
jmp loc_43FBAD  +
cmp edi offset asc_4CDEB2 +
jz loc_43FBFD  +
mov eax [esp+8Ch+var_68] +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 2Fh +
jmp loc_43FBFD  +
cmp eax 5Ch +
jz loc_43FBCD  +
mov [esp+8Ch+var_84] offset aLex_raw_string +
mov [esp+8Ch+var_88] 6B4h +
mov [esp+8Ch+var_8C] offset a____GccLibcp_0 +
call sub_424560  +
xor eax eax +
jmp loc_4400AF  +
mov eax [esp+8Ch+var_4C] +
sub edi ebp +
mov ecx ebp +
mov edx [esp+8Ch+var_58] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_6C] +
call sub_43F610  +
jmp loc_43F7A9  +
add eax 234h +
mov edx edi +
call sub_43DE40  +
test al al +
jz loc_4402C6  +
mov eax [esp+8Ch+var_6C] +
cmp byte ptr [eax+272h] 0 +
jz loc_44002E  +
cmp byte ptr [eax+0Ah] 0 +
jnz loc_44002E  +
mov eax [esp+8Ch+var_58] +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aInvalidSuffixO +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 13h +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43CC80  +
jmp loc_44002E  +
mov eax [esp+8Ch+var_58] +
mov ebx ebp +
mov ebp edx +
mov eax [eax] +
mov [esp+8Ch+var_7C] offset aUnterminatedRa +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 3 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_8C] eax +
call sub_43CC30  +
mov edi [esp+8Ch+var_64] +
mov [esp+8Ch+var_4C] 3Dh +
jmp loc_44001D  +
movzx eax byte ptr [edi] +
test byte ptr [eax+eax+4D0721h] 2 +
jz loc_44002E  +
mov eax [esp+8Ch+var_4C] +
mov [esp+8Ch+var_8C] eax +
call sub_443C00  +
movzx edx byte ptr [edi+1] +
test ds:word_4D0720[edx+edx] 204h +
mov [esp+8Ch+var_4C] eax +
lea eax [edi+1] +
jnz loc_440302  +
jmp loc_44034C  +
mov eax edi +
lea edi [eax+1] +
movzx eax byte ptr [eax+1] +
test ds:word_4D0720[eax+eax] 204h +
jnz loc_440300  +
jmp loc_44002E  +
mov esi [esp+8Ch+var_68] +
mov byte ptr [esp+esi+8Ch+var_1E] al +
lea eax [esi+1] +
mov [esp+8Ch+var_68] eax +
jmp loc_43FA8A  +
cmp edi offset asc_4CDEAB +
jz loc_440353  +
mov eax [esp+8Ch+var_68] +
add ebp 1 +
add [esp+8Ch+var_68] 1 +
mov byte ptr [esp+eax+8Ch+var_1E] 20h +
jmp loc_43FB22  +
mov edi eax +
jmp loc_44002E  +
lea eax [esp+8Ch+var_34] +
mov ecx 1 +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_39+1] +
mov edx offset asc_4CDEAD +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_6C] +
add ebp 2 +
call sub_43F380  +
jmp loc_440004  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+5Ch+arg_0] +
mov byte ptr [esp+5Ch+var_40] 0 +
mov edi [ebp+0F0h] +
lea eax [edi+10h] +
mov [ebp+0F0h] eax +
lea eax [ebp+0F4h] +
mov [esp+5Ch+var_3C] eax +
mov esi [ebp+0] +
xor ebx ebx +
mov [edi+6] bx +
cmp byte ptr [esi+38h] 0 +
jz loc_440425  +
cmp byte ptr [ebp+18h] 0 +
jnz loc_440D20  +
cmp byte ptr [ebp+8] 0 +
jnz loc_4404A0  +
mov eax ebp +
call sub_43E270  +
test al al +
jz loc_4404A0  +
mov eax [ebp+0] +
mov ebx 0 +
movzx ecx byte ptr [esp+5Ch+var_40] +
mov edx [ebp+10Ch] +
cmp eax esi +
cmovnz ecx ebx +
test edx edx +
mov byte ptr [esp+5Ch+var_40] cl +
jnz loc_440414  +
mov edi [ebp+0FCh] +
mov ecx [esp+5Ch+var_3C] +
lea edx [edi+10h] +
mov [ebp+104h] ecx +
mov [ebp+0F0h] edx +
mov esi 40h +
mov [edi+6] si +
mov esi eax +
cmp byte ptr [ebp+11h] 2 +
jz loc_440472  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_440445  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_440C17  +
lea ecx [eax+1] +
mov [esi] ecx +
movzx ebx byte ptr [eax] +
mov eax [ebp+2FCh] +
movzx edx bl +
test eax eax +
mov [esp+5Ch+var_38] edx +
jz loc_440480  +
mov eax [eax] +
mov [edi] eax +
cmp bl 7Eh +
ja loc_440C10  +
jmp ds:off_4CE324[edx*4]  +
mov ebx 41h +
mov [edi+6] bx +
jmp loc_440425  +
mov eax [ebp+1Ch] +
sub ecx [esi+4] +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call sub_42C1D0  +
mov edx [esp+5Ch+var_34] +
mov [edi] eax +
jmp loc_440462  +
mov byte ptr [edi+4] 16h +
cmp byte ptr [ebp+8] 0 +
jnz loc_4404C0  +
mov eax [ebp+1Ch] +
mov ecx 40h +
mov eax [eax+2Ch] +
mov [edi+6] cx +
mov [edi] eax +
nop   +
lea esi [esi+0] +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_18] 0 +
lea edx [edi+8] +
mov eax ebp +
mov [esp+5Ch+var_14] 0 +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_10] 0 +
mov byte ptr [edi+4] 37h +
call sub_43F510  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov eax ebp +
call sub_43EB50  +
mov ebx [edi] +
cmp ebx 1 +
jbe loc_4404C0  +
cmp byte ptr [edi+4] 16h +
jz loc_4404C0  +
mov ecx [esi+1Ch] +
mov edx [esi+18h] +
mov eax [esi] +
cmp eax [edx+ecx*8] +
jb loc_440529  +
mov edx [ebp+4] +
test edx edx +
jz loc_440C62  +
mov edx [ebp+1Ch] +
sub eax [esi+4] +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_42C1D0  +
mov ecx [edi] +
mov edx [ebp+1Ch] +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_50] eax +
call sub_42C420  +
mov [edi] eax +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi] +
lea eax [edi+0Ch] +
sub edx 1 +
mov byte ptr [edi+4] 35h +
xor ecx ecx +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_43DAA0  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_43EB50  +
mov eax [edi+8] +
test byte ptr [eax+14h] 40h +
jz loc_4405C4  +
or word ptr [edi+6] 10h +
movzx eax byte ptr [eax+0Ch] +
shr al 1 +
mov [edi+4] al +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_440504  +
or word ptr [edi+6] 20h +
jmp loc_440504  +
mov ebx [ebp+0] +
xor ecx ecx +
or word ptr [edi+6] 1 +
mov [esp+5Ch+var_34] edi +
mov edi [esp+5Ch+var_38] +
mov eax [ebx] +
jmp loc_440668  +
cmp byte ptr [ebp+8] 0 +
jz loc_440650  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_440650  +
mov edx [ebp+1Ch] +
cmp edi 0Ch +
mov edi offset aFormFeed +
mov [esp+5Ch+var_38] ecx +
mov ecx offset aVerticalTab +
cmovnz edi ecx +
mov edx [edx+2Ch] +
mov [esp+5Ch+var_48] edi +
mov [esp+5Ch+var_4C] offset aSInPreprocessi +
sub eax [ebx+4] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_43CC30  +
mov eax [ebx] +
mov ecx [esp+5Ch+var_38] +
lea esi [esi+0] +
lea edx [eax+1] +
mov [ebx] edx +
movzx edi byte ptr [eax] +
test byte ptr [edi+edi+4D0721h] 8 +
jz loc_440C36  +
mov eax edx +
cmp edi 9 +
jz loc_440650  +
cmp edi 20h +
jz loc_440650  +
test edi edi +
jnz loc_4405F6  +
mov ecx 1 +
jmp loc_440650  +
mov byte ptr [edi+4] 34h +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 5 +
movzx eax byte ptr [edx] +
cmp al 3Eh +
jz loc_440E0B  +
cmp al 2Dh +
jz loc_440F7F  +
cmp al 3Dh +
jnz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ch +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 2 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_440DFD  +
cmp al 3Eh +
jnz loc_440504  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Ch +
cmp byte ptr [edx+1] 3Dh +
jnz loc_440504  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 23h +
jmp loc_440504  +
mov byte ptr [edi+4] 0Eh +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 0 +
cmp byte ptr [eax] 3Dh +
jnz loc_440504  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 17h +
jmp loc_440504  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_440D3B  +
mov edx [esi] +
mov byte ptr [edi+4] 3 +
movzx eax byte ptr [edx] +
cmp al 3Dh +
jz loc_440F63  +
cmp al 3Ch +
jz loc_440FA5  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440504  +
cmp al 3Ah +
jz loc_441342  +
cmp al 25h +
jnz loc_440504  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 29h +
jmp loc_440504  +
mov byte ptr [edi+4] 2Bh +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 12h +
movzx eax byte ptr [edx] +
cmp al 3Ah +
jz loc_440DD4  +
cmp al 3Eh +
jnz loc_440504  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440504  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 28h +
jmp loc_440504  +
mov byte ptr [edi+4] 29h +
jmp loc_440504  +
mov byte ptr [edi+4] 14h +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 9 +
movzx eax byte ptr [edx] +
cmp al 26h +
jz loc_440E47  +
cmp al 3Dh +
jnz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 20h +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 8 +
movzx edx byte ptr [eax] +
cmp dl 3Dh +
jz loc_440E39  +
cmp byte ptr [ebp+24Eh] 0 +
jz loc_440504  +
cmp dl 3Ah +
jz loc_4412CF  +
cmp dl 3Eh +
jnz loc_440504  +
add eax 1 +
mov [esi] eax +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 2Ah +
jmp loc_440504  +
mov byte ptr [edi+4] 2Ah +
jmp loc_440504  +
mov eax [esi+10h] +
cmp [esi] eax +
jb loc_440D8D  +
mov byte ptr [esi+38h] 1 +
jmp loc_4403A9  +
mov byte ptr [edi+4] 13h +
jmp loc_440504  +
cmp edx 4Ch +
mov ebx edx +
jz loc_44190C  +
cmp byte ptr [ebp+252h] 0 +
jnz loc_4408BA  +
cmp edx 52h +
jz loc_440568  +
cmp byte ptr [ebp+250h] 0 +
jz loc_440568  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jz loc_440F71  +
cmp al 22h +
jz loc_440915  +
cmp al 52h +
jz loc_441054  +
cmp al 38h +
jnz loc_44056A  +
cmp ebx 75h +
nop   +
jnz loc_44056A  +
movzx eax byte ptr [edx+1] +
cmp al 22h +
jz loc_440915  +
cmp al 27h +
jz loc_441708  +
cmp al 52h +
jnz loc_44056A  +
cmp byte ptr [edx+2] 22h +
jnz loc_44056A  +
cmp byte ptr [ebp+252h] 0 +
jz loc_44056A  +
lea ecx [edx-1] +
mov eax ebp +
mov edx edi +
call sub_43F660  +
jmp loc_440504  +
mov eax [esi] +
mov [esp+5Ch+var_38] eax +
movzx eax byte ptr [eax] +
cmp eax 2Ah +
mov [esp+5Ch+var_34] eax +
jz loc_440FC6  +
cmp [esp+5Ch+var_34] 2Fh +
jnz loc_4416B8  +
cmp byte ptr [ebp+270h] 0 +
jnz loc_441410  +
mov edx [ebp+0] +
test edx edx +
jz loc_440961  +
cmp byte ptr [edx+3Dh] 0 +
jnz loc_4409A8  +
mov eax [ebp+244h] +
test eax eax +
jnz loc_440980  +
cmp byte ptr [ebp+26Ah] 0 +
jz loc_440980  +
test byte ptr [esi+3Ch] 1 +
jz loc_441376  +
nop   +
cmp byte ptr [ebp+28Ah] 0 +
jle loc_44099C  +
cmp byte ptr [ebp+248h] 0 +
jnz loc_44099C  +
test byte ptr [esi+3Ch] 1 +
jz loc_441306  +
sub eax 3 +
cmp eax 1 +
jbe loc_440FF3  +
mov ecx [edx] +
mov eax [ebp+1Ch] +
cmp byte ptr [ecx] 0Ah +
mov ebx [eax+2Ch] +
lea eax [ecx+1] +
jz loc_4409C3  +
mov [edx] eax +
add eax 1 +
cmp byte ptr [eax-1] 0Ah +
jnz loc_4409B8  +
mov [esp+5Ch+var_58] 1 +
mov [esp+5Ch+var_5C] ebp +
call sub_43E300  +
mov eax [ebp+1Ch] +
cmp ebx [eax+2Ch] +
jz loc_4409FC  +
cmp byte ptr [ebp+255h] 0 +
jz loc_4409FC  +
mov [esp+5Ch+var_54] offset aMultiLineComme +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB70  +
mov eax [ebp+0] +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_30] eax +
movzx eax byte ptr [ebp+260h] +
add ebx 1 +
cmp al 2 +
jz loc_440E63  +
ja loc_440C7B  +
movzx ebx byte ptr [esp+5Ch+var_40] +
cmp al 1 +
mov eax 1 +
cmovz ebx eax +
mov byte ptr [esp+5Ch+var_40] bl +
cmp byte ptr [ebp+0Dh] 0 +
jnz loc_441566  +
or word ptr [edi+6] 1 +
jmp loc_440425  +
mov edx [esi] +
mov byte ptr [edi+4] 30h +
movzx eax byte ptr [edx] +
movzx ecx al +
test byte ptr ds:word_4D0720[ecx+ecx] 4 +
jnz loc_4404D0  +
cmp al 2Eh +
jz loc_440F8D  +
cmp al 2Ah +
jnz loc_440504  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 33h +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax] 23h +
jz loc_440DC6  +
mov dword ptr [edi+8] 0 +
jmp loc_440504  +
mov byte ptr [edi+4] 28h +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 6 +
cmp byte ptr [eax] 3Dh +
jnz loc_440504  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Dh +
jmp loc_440504  +
mov byte ptr [edi+4] 15h +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 4 +
movzx eax byte ptr [edx] +
cmp al 2Bh +
jz loc_440E55  +
cmp al 3Dh +
jnz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Bh +
jmp loc_440504  +
mov eax [esi] +
lea ecx [esp+5Ch+var_18] +
mov edx 1 +
lea ebx [eax-1] +
mov eax ebp +
mov [esi] ebx +
mov [esp+5Ch+var_18] 0 +
mov [esp+5Ch+var_14] 0 +
mov [esp+5Ch+var_10] 0 +
call sub_43D9C0  +
test al al +
jnz loc_440D58  +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
sub ecx 1 +
mov edx edi +
mov [esp+5Ch+var_58] 3Dh +
mov eax ebp +
mov [esp+5Ch+var_5C] 1 +
call sub_43F610  +
jmp loc_440504  +
mov byte ptr [edi+4] 11h +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 1 +
cmp byte ptr [eax] 3Dh +
jnz loc_440504  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 18h +
jmp loc_440504  +
mov edx [esi] +
mov byte ptr [edi+4] 0Ah +
movzx eax byte ptr [edx] +
cmp al 7Ch +
jz loc_440DEF  +
cmp al 3Dh +
jnz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 21h +
jmp loc_440504  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_43F660  +
jmp loc_440504  +
mov eax [esi] +
mov byte ptr [edi+4] 0Bh +
cmp byte ptr [eax] 3Dh +
jnz loc_440504  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 22h +
jmp loc_440504  +
mov byte ptr [edi+4] 27h +
jmp loc_440504  +
mov ecx [esi] +
jmp loc_440B52  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43E300  +
mov eax [ebp+1Ch] +
mov eax [eax+2Ch] +
mov [edi] eax +
mov eax [esi] +
jmp loc_440445  +
test cl cl +
mov edi [esp+5Ch+var_34] +
jz loc_440C58  +
mov [esp+5Ch+var_54] offset aNullCharacte_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
mov edx [ebx] +
sub edx 1 +
mov [ebx] edx +
jmp loc_44042D  +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43E300  +
mov ebx [edi] +
mov eax [esi] +
jmp loc_440529  +
cmp al 4 +
ja loc_440A32  +
mov ecx [esp+5Ch+var_38] +
movzx edx byte ptr [ecx+1] +
cmp dl 40h +
setz cl  +
jz loc_440C9C  +
cmp dl 2Dh +
jnz loc_44106C  +
mov [esp+5Ch+var_2C] ecx +
mov ecx [esp+5Ch+var_30] +
mov eax ebx +
not eax  +
add eax [ecx] +
cmp eax 0Ah +
jbe loc_440A32  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 0Bh +
mov [esp+5Ch+var_58] offset aFallthrough +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov ecx [esp+5Ch+var_2C] +
mov al 0Ch +
test cl cl +
jnz loc_440D06  +
add ebx eax +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax] 2Ah +
jz loc_4416DE  +
cmp byte ptr [ebx] 0Ah +
jnz loc_440A32  +
mov byte ptr [esp+5Ch+var_40] 1 +
jmp loc_440A32  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+0Dh] 40h +
jnz loc_440A32  +
mov eax 0Dh +
jmp loc_440CE4  +
mov byte ptr [edi+4] 52h +
cmp byte ptr [ebp+19h] 0 +
mov byte ptr [ebp+18h] 0 +
jnz loc_4404C0  +
sub byte ptr [ebp+10h] 1 +
jmp loc_4404C0  +
mov eax [esi] +
mov edx edi +
lea ecx [eax-1] +
mov eax ebp +
call sub_43F660  +
cmp byte ptr [edi+4] 3 +
jnz loc_440504  +
jmp loc_44073A  +
lea eax [edi+0Ch] +
mov edx ebx +
mov byte ptr [edi+4] 35h +
mov ecx 1 +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebp +
call sub_43DAA0  +
lea ecx [esp+5Ch+var_10] +
mov edx edi +
mov [edi+8] eax +
mov eax ebp +
call sub_43EB50  +
jmp loc_440504  +
mov edx [ebp+1Ch] +
mov eax [edx+8] +
lea ecx [eax-1] +
imul ecx ecx +
add ecx [edx] +
mov [esp+5Ch+var_54] 0 +
mov eax [edx+2Ch] +
mov ebx [ecx+0Ch] +
sub eax [ecx] +
movzx ecx byte ptr [ecx+18h] +
mov [esp+5Ch+var_5C] edx +
shr eax cl +
lea eax [ebx+eax+1] +
mov [esp+5Ch+var_58] eax +
call sub_42BF30  +
jmp loc_44087B  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
jmp loc_440A9F  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 31h +
jmp loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 10h +
jmp loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 19h +
jmp loc_440504  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 2Fh +
cmp byte ptr [edx+1] 2Ah +
jnz loc_440504  +
cmp byte ptr [ebp+248h] 0 +
jz loc_440504  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 32h +
jmp loc_440504  +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Fh +
jmp loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 0Fh +
jmp loc_440504  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Dh +
jmp loc_440504  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov edx eax +
sub edx ebx +
cmp edx 7 +
jbe loc_440A32  +
movzx edx byte ptr [ebx] +
and edx 0FFFFFFDFh +
cmp dl 46h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 41h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_440F42  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 4Ch +
jnz loc_440F42  +
movzx edx byte ptr [ebx+4] +
mov ecx edx +
and ecx 0FFFFFFDFh +
cmp cl 53h +
jz loc_440F57  +
add ebx 4 +
jmp loc_440ED6  +
add ebx 1 +
movzx edx byte ptr [ebx] +
cmp dl 20h +
jz loc_440ED0  +
cmp dl 9 +
jz loc_440ED0  +
cmp dl 2Dh +
jz loc_440ED0  +
and edx 0FFFFFFDFh +
cmp dl 54h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+1] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+2] +
and edx 0FFFFFFDFh +
cmp dl 52h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+3] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jz loc_440CFC  +
cmp dl 4Fh +
jnz loc_440F42  +
movzx edx byte ptr [ebx+4] +
and edx 0FFFFFFDFh +
cmp dl 55h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+5] +
and edx 0FFFFFFDFh +
cmp dl 47h +
jnz loc_440F42  +
movzx edx byte ptr [ebx+6] +
and edx 0FFFFFFDFh +
cmp dl 48h +
jz loc_440CFC  +
add ebx 1 +
mov edx eax +
sub edx ebx +
cmp edx 7 +
ja loc_440E76  +
jmp loc_440A32  +
movzx edx byte ptr [ebx+5] +
add ebx 5 +
jmp loc_440ED6  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 1Ah +
jmp loc_440504  +
cmp ebx 52h +
jnz loc_440915  +
jmp loc_44056A  +
add edx 1 +
mov [esi] edx +
mov byte ptr [edi+4] 2Eh +
jmp loc_440504  +
cmp byte ptr [edx+1] 2Eh +
jnz loc_440504  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 2Ch +
jmp loc_440504  +
lea eax [edx+1] +
mov [esi] eax +
mov byte ptr [edi+4] 0Dh +
cmp byte ptr [edx+1] 3Dh +
jnz loc_440504  +
add edx 2 +
mov [esi] edx +
mov byte ptr [edi+4] 24h +
jmp loc_440504  +
mov [esp+5Ch+var_5C] ebp +
call sub_43E580  +
test al al +
jz loc_4409FC  +
mov [esp+5Ch+var_54] offset aUnterminatedCo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
jmp loc_4409FC  +
mov eax [esp+5Ch+var_38] +
cmp byte ptr [eax+1] 2Ah +
jz loc_441410  +
test dword ptr [ebp+8] 0FF00FFh +
jnz loc_441410  +
test byte ptr [esi+3Ch] 1 +
jnz loc_4409A8  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 3 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4409A8  +
cmp ebx 52h +
jz loc_44056A  +
cmp byte ptr [edx+1] 22h +
jnz loc_44056A  +
jmp loc_440908  +
cmp dl 6Ch +
nop   +
jz loc_4413B2  +
cmp al 4 +
jz loc_4414B9  +
nop   +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_4412C4  +
cmp dl 9 +
jz loc_4412C4  +
cmp dl 2Eh +
jz loc_4412C4  +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 45h +
mov [esp+5Ch+var_2C] ebx +
jnz loc_441419  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 0Ch +
jbe loc_440A32  +
cmp dl 45h +
lea ecx [ebx+1] +
jz loc_441764  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_4CE2E3 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov edx [esp+5Ch+var_28] +
mov byte ptr [esp+5Ch+var_2C] 0 +
cmp byte ptr [ebx+4] 2Ch +
lea eax [ebx+5] +
lea ecx [ebx+4] +
cmovnz eax ecx +
cmp byte ptr [eax] 20h +
jnz loc_440A32  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
lea ebx [eax+1] +
jz loc_441122  +
cmp byte ptr [eax+1] 66h +
jz loc_440A32  +
cmp dl 65h +
jz loc_4418FD  +
movzx edx byte ptr [eax+1] +
mov eax edx +
and eax 0FFFFFFDFh +
cmp al 46h +
jnz loc_440A32  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
mov [esp+5Ch+var_20] eax +
sub eax ebx +
cmp eax 7 +
jbe loc_440A32  +
cmp dl 46h +
jz loc_44186E  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov [esp+5Ch+var_28] edx +
jnz loc_440A32  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset unk_4CE30A +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_440A32  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 73h +
cmp [esp+5Ch+var_24] eax +
jz loc_4418C5  +
cmp byte ptr [esp+5Ch+var_28] 2Dh +
jz loc_4411C0  +
cmp byte ptr [esp+5Ch+var_28] 20h +
jnz loc_4417B2  +
lea ecx [ebx+5] +
cmp dl 66h +
jz loc_4411D1  +
cmp byte ptr [ecx] 54h +
jz loc_4418D7  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
jnz loc_440A32  +
cmp byte ptr [ecx] 74h +
jnz loc_440A32  +
mov ebx [esp+5Ch+var_20] +
mov eax offset aHru_0 +
sub ebx ecx +
cmp ebx 3 +
jbe loc_440A32  +
lea edx [ecx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_24] ecx +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov ecx [esp+5Ch+var_24] +
test eax eax +
jz loc_44196D  +
cmp ebx 6 +
jbe loc_440A32  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov edx offset aHrough +
mov eax offset aHrough_0 +
mov [esp+5Ch+var_54] 6 +
cmovz eax edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov ecx [esp+5Ch+var_24] +
lea ebx [ecx+7] +
movzx edx byte ptr [ebx] +
lea eax [edx-20h] +
cmp al 1 +
jbe loc_441700  +
cmp dl 9 +
jz loc_441700  +
cmp dl 2Eh +
jz loc_441700  +
cmp dl 2Dh +
mov eax ebx +
jnz loc_440CE6  +
mov ecx [esp+5Ch+var_38] +
add ebx 1 +
lea edx [eax+2] +
cmp byte ptr [ecx] 2Ah +
jz loc_441941  +
movzx eax byte ptr [ebx] +
cmp al 0Ah +
jz loc_440CF3  +
test al al +
jz loc_440CF3  +
cmp al 0Dh +
jz loc_440CF3  +
add ebx 1 +
jmp loc_4412A4  +
add ebx 1 +
movzx edx byte ptr [ebx] +
jmp loc_441080  +
lea edx [eax+1] +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 25h +
cmp byte ptr [eax+1] 25h +
jnz loc_440504  +
cmp byte ptr [eax+2] 3Ah +
jnz loc_440504  +
add eax 3 +
mov [esi] eax +
mov byte ptr [edi+4] 26h +
mov dword ptr [edi+8] 0 +
jmp loc_440504  +
mov [esp+5Ch+var_54] offset aCStyleCommen_0 +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 0 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4409A8  +
cmp byte ptr [ebp+248h] 0 +
jz loc_441363  +
mov eax [ebp+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_441363  +
cmp byte ptr [edx+1] 3Ah +
jz loc_44179E  +
add edx 1 +
mov [esi] edx +
or word ptr [edi+6] 2 +
mov byte ptr [edi+4] 27h +
jmp loc_440504  +
mov [esp+5Ch+var_54] offset aCStyleComments +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
mov [esp+5Ch+var_54] offset aThisWillBeRepo +
mov [esp+5Ch+var_58] 2 +
mov [esp+5Ch+var_5C] ebp +
call sub_43CB30  +
or byte ptr [esi+3Ch] 1 +
mov edx [ebp+0] +
jmp loc_4409A8  +
mov eax [esp+5Ch+var_30] +
not ebx  +
add ebx [eax] +
cmp ebx 0Fh +
jbe loc_440A32  +
mov ebx [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] 10h +
mov [esp+5Ch+var_58] offset aIntFallthrough +
mov eax ebx +
add eax 2 +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov eax ebx +
movzx eax byte ptr [eax+12h] +
lea ebx [ebx+12h] +
cmp al 9 +
jnz loc_441403  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_4413F9  +
cmp al 20h +
jz loc_4413F9  +
jmp loc_440CE6  +
mov byte ptr [edi+4] 7 +
jmp loc_440504  +
cmp al 49h +
nop   +
lea esi [esi+0] +
jnz loc_4416F6  +
mov eax [esp+5Ch+var_30] +
mov eax [eax] +
sub eax ebx +
cmp eax 13h +
jbe loc_440A32  +
cmp dl 49h +
lea ecx [ebx+1] +
jz loc_4417FC  +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
mov edx [esp+5Ch+var_2C] +
test eax eax +
jnz loc_440A32  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_441985  +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset aLy +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov edx [esp+5Ch+var_2C] +
add ebx 0Eh +
cmp dl 69h +
mov byte ptr [esp+5Ch+var_2C] 0 +
jz loc_441975  +
movzx edx byte ptr [ebx] +
jmp loc_44112F  +
cmp dl 20h +
jnz loc_4418B7  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_4414C2  +
cmp al 20h +
jz loc_4414C2  +
mov eax [esp+5Ch+var_30] +
mov ecx [eax] +
mov eax ecx +
sub eax ebx +
cmp eax 7 +
mov [esp+5Ch+var_2C] ecx +
jbe loc_440A32  +
mov [esp+5Ch+var_54] 7 +
mov [esp+5Ch+var_58] offset aFallthr +
mov [esp+5Ch+var_5C] ebx +
call memcmp  +
test eax eax +
jnz loc_440A32  +
cmp byte ptr [ebx+7] 55h +
mov ecx [esp+5Ch+var_2C] +
jz loc_441866  +
lea edx [ebx+7] +
mov eax ecx +
sub eax edx +
cmp eax 3 +
jbe loc_440A32  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Bh +
mov [esp+5Ch+var_58] offset aOugh +
mov [esp+5Ch+var_5C] edx +
call memcmp  +
test eax eax +
jnz loc_440A32  +
movzx eax byte ptr [ebx] +
cmp al 20h +
jnz loc_44191E  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 9 +
jz loc_441553  +
cmp al 20h +
jz loc_441553  +
jmp loc_440CE6  +
cmp byte ptr [esp+5Ch+var_40] 0 +
jz loc_441572  +
or word ptr [edi+6] 20h +
mov eax [esp+5Ch+var_30] +
mov edx [eax] +
mov eax edx +
movzx edx byte ptr [edx-1] +
sub eax [esp+5Ch+var_38] +
test byte ptr [edx+edx+4D0721h] 4 +
lea ecx [eax+1] +
cmovnz ecx eax +
cmp byte ptr [ebp+8] 0 +
jnz loc_4415A0  +
cmp byte ptr [ebp+11h] 0 +
mov [esp+5Ch+var_40] ecx +
jz loc_4415AF  +
cmp [esp+5Ch+var_34] 2Fh +
lea eax [ecx+2] +
cmovnz eax ecx +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_3C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_43F4D0  +
mov ecx [esp+5Ch+var_3C] +
mov byte ptr [edi+4] 4Fh +
lea edx [ecx-1] +
mov ecx [esp+5Ch+var_38] +
mov ebx eax +
mov eax [esp+5Ch+var_40] +
mov [edi+0Ch] ebx +
mov [edi+8] eax +
lea eax [ebx+1] +
mov byte ptr [ebx] 2Fh +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
cmp byte ptr [ebp+8] 0 +
jnz loc_441600  +
cmp byte ptr [ebp+11h] 0 +
jz loc_44160B  +
cmp [esp+5Ch+var_34] 2Fh +
jz loc_44171A  +
cmp dword ptr [ebp+2F4h] 0 +
jnz loc_441630  +
mov dword ptr [ebp+2F4h] 100h +
mov [esp+5Ch+var_5C] 800h +
call sub_452ED0  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
cmp eax [ebp+2F4h] +
jz loc_4417CE  +
mov ebx [edi+8] +
mov edx [ebp+2ECh] +
lea edx [edx+eax*8] +
lea eax [ebx+1] +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_40] edx +
call sub_452ED0  +
mov edx [esp+5Ch+var_40] +
mov ecx [ebp+2F0h] +
mov [edx] eax +
mov eax [ebp+2ECh] +
mov edx [edi+0Ch] +
mov eax [eax+ecx*8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_5C] eax +
call memcpy  +
mov edx [ebp+2F0h] +
mov eax [ebp+2ECh] +
mov eax [eax+edx*8] +
mov byte ptr [eax+ebx] 0 +
mov eax [ebp+2F0h] +
mov ecx [edi] +
mov edx [ebp+2ECh] +
mov [edx+eax*8+4] ecx +
add eax 1 +
mov [ebp+2F0h] eax +
jmp loc_440504  +
cmp [esp+5Ch+var_34] 3Dh +
jnz loc_441410  +
mov eax [esp+5Ch+var_38] +
add eax 1 +
mov [esi] eax +
mov byte ptr [edi+4] 1Eh +
jmp loc_440504  +
cmp byte ptr [edx] 2Fh +
jnz loc_441968  +
cmp byte ptr [ebx] 2Ah +
jnz loc_440A32  +
cmp byte ptr [ebx+1] 2Fh +
jnz loc_440A32  +
jmp loc_440CFC  +
mov byte ptr [esp+5Ch+var_2C] 0 +
jmp loc_44112F  +
add ebx 1 +
jmp loc_441266  +
cmp byte ptr [ebp+251h] 0 +
jnz loc_440915  +
jmp loc_44056A  +
mov eax [esp+5Ch+var_40] +
mov byte ptr [ebx+1] 2Ah +
lea edx [eax-2] +
cmp edx 2 +
mov byte ptr [ebx+eax-2] 2Ah +
mov byte ptr [ebx+eax-1] 2Fh +
jbe loc_44160B  +
mov eax 2 +
jmp loc_44174A  +
add eax 1 +
cmp edx eax +
jz loc_44160B  +
cmp byte ptr [ebx+eax] 2Fh +
jnz loc_44173F  +
cmp byte ptr [ebx+eax-1] 2Ah +
jz loc_44175E  +
cmp byte ptr [ebx+eax+1] 2Ah +
jnz loc_44173F  +
mov byte ptr [ebx+eax] 7Ch +
jmp loc_44173F  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_4CE2DF +
mov [esp+5Ch+var_28] edx +
mov [esp+5Ch+var_2C] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_2C] +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_4410CB  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_4410F8  +
movzx eax byte ptr [edx+2] +
and eax 0FFFFFFFBh +
cmp al 3Ah +
jnz loc_440504  +
jmp loc_441363  +
cmp byte ptr [esp+5Ch+var_2C] 1 +
sbb eax eax +
and eax 20h +
add eax 54h +
cmp [esp+5Ch+var_24] eax +
jnz loc_440A32  +
jmp loc_4411C3  +
mov edx [ebp+2ECh] +
add eax eax +
mov [ebp+2F4h] eax +
shl eax 3 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] edx +
call sub_452F50  +
mov [ebp+2ECh] eax +
mov eax [ebp+2F0h] +
jmp loc_441642  +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_54] 0Ah +
mov [esp+5Ch+var_58] offset aNtentional_0 +
mov [esp+5Ch+var_24] edx +
mov [esp+5Ch+var_28] ecx +
call memcmp  +
mov ecx [esp+5Ch+var_28] +
mov edx [esp+5Ch+var_24] +
test eax eax +
jnz loc_441443  +
cmp byte ptr [ebx+0Bh] 20h +
lea eax [ebx+0Bh] +
jz loc_44192B  +
mov [esp+5Ch+var_54] 4 +
add ebx 0Eh +
mov [esp+5Ch+var_58] offset aLyF +
mov [esp+5Ch+var_5C] eax +
call memcmp  +
test eax eax +
jnz loc_440A32  +
mov byte ptr [esp+5Ch+var_2C] 1 +
jmp loc_4414B1  +
add ebx 8 +
jmp loc_441548  +
lea eax [ebx+1] +
mov [esp+5Ch+var_54] 3 +
mov [esp+5Ch+var_58] offset off_4CE306 +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_28] edx +
call memcmp  +
mov edx [esp+5Ch+var_28] +
test eax eax +
jnz loc_44115A  +
movzx eax byte ptr [ebx+4] +
lea ecx [ebx+4] +
mov byte ptr [esp+5Ch+var_2C] 1 +
mov byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] eax +
mov eax 53h +
jmp loc_4411A4  +
cmp dl 9 +
jz loc_4414C2  +
jmp loc_4414D0  +
cmp byte ptr [ebx+5] 20h +
jnz loc_4411AE  +
lea ecx [ebx+6] +
jmp loc_4411C3  +
mov ebx [esp+5Ch+var_20] +
sub ebx ecx +
cmp ebx 3 +
jbe loc_440A32  +
cmp byte ptr [esp+5Ch+var_2C] 0 +
mov eax offset aHru +
mov edx offset aHru_0 +
cmovz eax edx +
jmp loc_4411F9  +
cmp byte ptr [eax+1] 46h +
jnz loc_44112B  +
jmp loc_440A32  +
mov edx [esi] +
movzx eax byte ptr [edx] +
cmp al 27h +
jnz loc_4408C7  +
jmp loc_440915  +
cmp al 9 +
jz loc_441553  +
jmp loc_440CE6  +
mov eax [esp+5Ch+var_2C] +
add ebx 0Ch +
cmp byte ptr [eax+0Ch] 66h +
jnz loc_44185C  +
jmp loc_440A32  +
movzx eax byte ptr [edx-1] +
lea ebx [edx-1] +
cmp al 2Ah +
jz loc_4416D5  +
test al al +
jz loc_4416DE  +
cmp al 0Ah +
jz loc_4416DE  +
cmp al 0Dh +
jz loc_4416DE  +
add edx 1 +
jmp loc_441941  +
lea ebx [ecx+4] +
jmp loc_441266  +
cmp byte ptr [ebx] 46h +
jnz loc_4414B1  +
nop   +
jmp loc_440A32  +
add ebx 0Ch +
jmp loc_4414A3  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
movzx eax byte ptr [ebx+4] +
mov eax ds:dword_4CE7E0[eax*8] +
cmp eax 1 +
jz loc_441C18  +
cmp eax 2 +
jz loc_441C10  +
mov eax 7 +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_43F4D0  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] eax +
mov edi eax +
call sub_43EA40  +
mov byte ptr [eax] 0 +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+8] +
add eax 1 +
jmp loc_441BD8  +
mov eax [ebx+8] +
mov eax [eax+4] +
lea eax [eax+eax*4] +
lea eax [eax+eax+1] +
jmp loc_441BD8  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov edx [esi+24h] +
mov eax [edx+8] +
mov ecx [edx+0Ch] +
sub ecx eax +
cmp ecx ebx +
jnb loc_441C65  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
call sub_43F290  +
mov edx eax +
mov eax [esi+24h] +
mov [edx] eax +
mov eax [edx+8] +
mov [esi+24h] edx +
add ebx eax +
mov [edx+8] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
movzx ecx byte ptr [eax+4] +
movzx eax cl +
mov edx ds:dword_4CE7E0[eax*8] +
cmp edx 1 +
jz loc_441CD1  +
jle loc_441CC0  +
cmp edx 2 +
mov eax 2 +
jz locret_441CB8  +
cmp edx 3 +
jnz loc_441CD4  +
cmp cl 50h +
mov eax 3 +
jz locret_441CB8  +
cmp cl 53h +
jz loc_441CB3  +
xor eax eax +
cmp cl 51h +
setnz al  +
add eax 5 +
retn   +
***
mov eax 1 +
retn   +
***
test edx edx +
jnz loc_441CD4  +
xor eax eax +
cmp cl 26h +
setnz al  +
lea eax [eax+eax+4] +
retn   +
***
xor eax eax +
retn   +
***
mov eax 6 +
retn   +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+2FCh] edx +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+2FCh] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [eax+40h] +
mov ecx [ebx+194h] +
mov edx [ebx+190h] +
mov eax ecx +
sub eax edx +
cmp eax 1Bh +
jbe loc_441DC0  +
mov eax [ebx+18Ch] +
add edx 1Ch +
mov [ebx+190h] edx +
cmp edx eax +
jz loc_441DE7  +
mov esi [ebx+19Ch] +
mov ebp ecx +
add edx esi +
not esi  +
and edx esi +
mov esi [ebx+188h] +
mov edi edx +
mov [ebx+190h] edx +
sub edi esi +
sub ebp esi +
cmp edi ebp +
jbe loc_441D6A  +
mov [ebx+190h] ecx +
mov edx ecx +
test al 1 +
mov ecx eax +
mov [ebx+18Ch] edx +
mov ebx 1Ch +
jnz loc_441DF3  +
test cl 2 +
jnz loc_441E00  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_441D8B  +
add ecx edx +
test bl 2 +
jz loc_441DA9  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_441DB1  +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+184h] +
mov [esp+1Ch+var_18] 1Ch +
mov [esp+1Ch+var_1C] eax +
call sub_4592E0  +
mov edx [ebx+190h] +
mov ecx [ebx+194h] +
jmp loc_441D27  +
or byte ptr [ebx+1ACh] 2 +
jmp loc_441D3E  +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_441D84  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_441D84  +
***
jmp sub_441E20  +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
test esi esi +
jz loc_441F62  +
mov [esi+40h] ebx +
mov [ebx+234h] esi +
mov [esp+24h+var_24] ebx +
call sub_438AC0  +
mov [esp+24h+var_24] ebx +
call sub_437CD0  +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 7 +
mov [esp+24h+var_20] offset aDefined +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2ACh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 4 +
mov [esp+24h+var_20] offset aTrue_1 +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2B0h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 5 +
mov [esp+24h+var_20] offset aFalse_1 +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2B4h] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Bh +
mov [esp+24h+var_20] offset a__va_args__ +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2B8h] eax +
or word ptr [eax+14h] 200h +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 0Fh +
mov [esp+24h+var_20] offset a__has_includ_0 +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2BCh] eax +
mov eax [ebx+234h] +
mov [esp+24h+var_18] 1 +
mov [esp+24h+var_1C] 14h +
mov [esp+24h+var_20] offset a__has_includ_1 +
mov [esp+24h+var_24] eax +
call sub_43D2E0  +
mov [ebx+2C0h] eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov byte ptr [ebx+2C4h] 1 +
mov [esp+24h+var_24] 0Dh +
call sub_43CED0  +
mov dword ptr [eax+30h] offset sub_441D00 +
mov esi eax +
lea eax [ebx+184h] +
mov [esp+24h+var_14] offset free +
mov [esp+24h+var_18] offset sub_452ED0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] eax +
call sub_459280  +
jmp loc_441E35  +
***
jmp sub_441FC0  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+2C4h] 0 +
jz loc_441FF5  +
mov eax [ebx+234h] +
add ebx 184h +
mov [esp+18h+var_18] eax +
call sub_43CF50  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_4593F0  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_8] +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+234h] +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 1 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call sub_43D2E0  +
add esp 1Ch +
retn   +
***
jmp loc_442040  +
sub esp 1Ch +
mov edx [esp+28h] +
mov eax [esp+20h] +
mov eax [eax+234h] +
mov [esp+8] edx +
mov edx [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
mov [esp+4] edx +
call sub_43D2E0  +
test eax eax +
jz loc_442084  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+234h] +
mov [esp+arg_0] eax +
jmp sub_43D340  +
***
push esi  +
push ebx  +
sub esp 20h +
mov edx [esp+20h+arg_10] +
mov esi [esp+20h+arg_18] +
mov edi [esp+20h+arg_C] +
mov ebp [esp+20h+arg_0] +
mov [esp+20h+var_C] edx +
mov edx [esp+20h+arg_14] +
cmp esi 40h +
mov ebx [esp+20h+arg_4] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_8] +
jbe loc_442130  +
lea ecx [esi-40h] +
cmp ecx 3Fh +
ja loc_442106  +
mov edi ecx +
shr edi 5 +
and edi 1 +
mov esi edi +
xor esi 1 +
shl esi cl +
shl edi cl +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
and ebp esi +
and ebx edi +
mov [eax+8] edx +
mov edx [esp+20h+var_C] +
mov ecx [esp+20h+var_20] +
mov [eax] ebp +
mov [eax+4] ebx +
mov [eax+10h] edx +
mov edx [esp+20h+var_8] +
mov [eax+0Ch] ecx +
mov [eax+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jz loc_442156  +
mov ecx esi +
mov ebp ecx +
shr ebp 5 +
and ebp 1 +
mov edi ebp +
xor edi 1 +
shl edi cl +
shl ebp cl +
add edi 0FFFFFFFFh +
adc ebp 0FFFFFFFFh +
and edx edi +
and [esp+20h+var_20] ebp +
xor ebx ebx +
xor ebp ebp +
jmp loc_442106  +
xor ebp ebp +
xor ebx ebx +
jmp loc_442106  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+88h+arg_0] +
mov ebx [esp+88h+arg_C] +
mov edi eax +
mov [esp+88h+var_60] eax +
mov eax [esp+88h+arg_4] +
mov [esp+88h+var_64] ebx +
mov edx eax +
mov [esp+88h+var_5C] eax +
mov eax [esp+88h+arg_8] +
mov [esp+88h+var_68] eax +
mov eax [esp+88h+arg_10] +
mov [esp+88h+var_20] eax +
mov eax [esp+88h+arg_14] +
mov [esp+88h+var_1C] eax +
mov eax edi +
not eax  +
mov ecx eax +
mov eax edx +
not eax  +
mov ebx eax +
mov eax [esp+88h+var_68] +
not eax  +
mov esi eax +
mov eax [esp+88h+var_64] +
add esi 1 +
not eax  +
mov edi eax +
adc edi 0 +
mov eax edi +
or eax esi +
jnz loc_4421DD  +
add ecx 1 +
adc ebx 0 +
mov eax ecx +
mov [esp+88h+var_2C] ebx +
mov [esp+88h+var_88] eax +
mov eax [esp+88h+var_2C] +
mov [esp+88h+var_24] edi +
mov [esp+88h+var_30] ecx +
mov ecx [esp+88h+arg_18] +
mov [esp+88h+var_28] esi +
mov [esp+88h+var_84] eax +
mov eax [esp+88h+var_24] +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_70] ecx +
mov [esp+88h+var_7C] eax +
mov eax [esp+88h+var_20] +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+var_1C] +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
call sub_4420B0  +
mov eax [esp+88h+var_48] +
mov edi [esp+88h+var_44] +
mov ebx [esp+88h+var_58] +
mov esi [esp+88h+var_54] +
mov edx [esp+88h+var_50] +
mov ecx [esp+88h+var_4C] +
mov [esp+88h+var_1C] edi +
xor edi edi +
test al al +
mov [esp+88h+var_30] ebx +
mov [esp+88h+var_2C] esi +
mov [esp+88h+var_28] edx +
mov [esp+88h+var_24] ecx +
mov [esp+88h+var_20] eax +
jnz loc_44226C  +
xor ecx [esp+88h+var_64] +
xor edx [esp+88h+var_68] +
or ecx edx +
jz loc_4422A6  +
mov eax edi +
mov byte ptr [esp+88h+var_20+1] al +
mov eax [esp+88h+var_30] +
mov [ebp+0] eax +
mov eax [esp+88h+var_2C] +
mov [ebp+4] eax +
mov eax [esp+88h+var_28] +
mov [ebp+8] eax +
mov eax [esp+88h+var_24] +
mov [ebp+0Ch] eax +
mov eax [esp+88h+var_20] +
mov [ebp+10h] eax +
mov eax [esp+88h+var_1C] +
mov [ebp+14h] eax +
add esp 7Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi [esp+88h+var_5C] +
xor ebx [esp+88h+var_60] +
or esi ebx +
jnz loc_44226C  +
mov edx [esp+88h+var_68] +
mov eax [esp+88h+var_64] +
or eax [esp+88h+var_5C] +
or edx [esp+88h+var_60] +
or edx eax +
setnz al  +
mov edi eax +
jmp loc_44226C  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
mov eax [esp+8Ch+arg_0] +
mov ebp [esp+8Ch+arg_18] +
mov [esp+8Ch+var_24] eax +
mov eax [esp+8Ch+arg_4] +
cmp ebp 40h +
mov [esp+8Ch+var_20] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [esp+8Ch+var_20] +
mov [esp+8Ch+var_1C] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_68] edx +
mov [esp+8Ch+var_18] eax +
mov eax [esp+8Ch+arg_10] +
mov edx [esp+8Ch+var_18] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_10] eax +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_64] eax +
jbe loc_442550  +
mov eax [esp+8Ch+var_6C] +
lea ecx [ebp-41h] +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
xor esi esi +
and eax 1 +
xor edi edi +
xor eax 1 +
mov edx eax +
and edx 1 +
cmp byte ptr [esp+8Ch+var_14] 0 +
jnz loc_44238B  +
xor edx 1 +
xor edi edi +
movzx edx dl +
mov esi edx +
neg esi  +
adc edi 0 +
neg edi  +
cmp ebp [esp+8Ch+arg_1C] +
jbe loc_4425A1  +
cmp ebp 3Fh +
ja loc_442560  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4423B5  +
mov edx eax +
xor eax eax +
or eax [esp+8Ch+var_64] +
or edx [esp+8Ch+var_60] +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_68] edi +
cmp [esp+8Ch+arg_1C] 3Fh +
jbe loc_4423F7  +
mov eax [esp+8Ch+var_6C] +
mov edx [esp+8Ch+var_68] +
sub [esp+8Ch+arg_1C] 40h +
mov [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_60] edx +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
mov eax [esp+8Ch+arg_1C] +
test eax eax +
jz loc_4425B0  +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov edx [esp+8Ch+var_60] +
mov eax [esp+8Ch+var_64] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_442424  +
mov eax edx +
xor edx edx +
mov [esp+8Ch+var_5C] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_64] 40h +
sub [esp+8Ch+var_64] eax +
movzx ecx byte ptr [esp+8Ch+var_64] +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_58] edx +
mov edx [esp+8Ch+var_68] +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44245A  +
mov edx eax +
xor eax eax +
movzx ecx byte ptr [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_54] eax +
mov eax [esp+8Ch+var_6C] +
mov [esp+8Ch+var_50] edx +
mov edx [esp+8Ch+var_68] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_442480  +
mov eax edx +
xor edx edx +
movzx ecx byte ptr [esp+8Ch+var_64] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_442493  +
mov edi esi +
xor esi esi +
mov ecx edx +
or eax esi +
mov edx [esp+8Ch+var_50] +
or edi ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_6C] eax +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_68] edi +
or ecx eax +
mov esi ecx +
mov ecx [esp+8Ch+var_58] +
or ecx edx +
mov edi ecx +
mov edx [esp+8Ch+var_6C] +
mov ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_18] edi +
mov [esp+8Ch+var_1C] esi +
mov eax edx +
mov [esp+8Ch+var_20] ecx +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_74] ebp +
mov [esp+8Ch+var_84] esi +
mov [esp+8Ch+var_24] edx +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_18] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+var_10] +
mov [esp+8Ch+var_78] eax +
lea eax [esp+8Ch+var_4C] +
call sub_4420B0  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_14] eax +
mov eax [esp+8Ch+var_4C] +
mov byte ptr [esp+8Ch+var_14+1] 0 +
mov [ebx] eax +
mov eax [esp+8Ch+var_48] +
mov [ebx+4] eax +
mov eax [esp+8Ch+var_44] +
mov [ebx+8] eax +
mov eax [esp+8Ch+var_40] +
mov [ebx+0Ch] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+10h] eax +
mov eax [esp+8Ch+var_38] +
mov [ebx+14h] eax +
add esp 8Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [ebp-1] +
mov eax [esp+8Ch+var_64] +
mov edx [esp+8Ch+var_60] +
jmp loc_442359  +
cmp ebp 7Fh +
ja loc_4423CD  +
lea ecx [ebp-40h] +
mov eax esi +
mov edx edi +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44257E  +
mov edx eax +
xor eax eax +
mov ecx [esp+8Ch+var_6C] +
or ecx eax +
mov [esp+8Ch+var_5C] ecx +
mov ecx [esp+8Ch+var_68] +
or ecx edx +
mov eax ecx +
mov ecx [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
mov [esp+8Ch+var_6C] ecx +
jmp loc_4423CD  +
mov [esp+8Ch+var_6C] esi +
mov [esp+8Ch+var_68] edi +
jmp loc_4424B9  +
mov esi [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_60] +
jmp loc_4424B9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 0CCh +
mov eax [esp+0CCh+arg_0] +
mov edx [esp+0CCh+arg_10] +
mov [esp+0CCh+var_94] eax +
mov eax [esp+0CCh+arg_4] +
mov [esp+0CCh+var_34] edx +
mov [esp+0CCh+var_90] eax +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_9C] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_98] eax +
mov eax [esp+0CCh+arg_14] +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+arg_18] +
cmp [esp+0CCh+arg_1C] eax +
jb loc_4426A0  +
xor eax eax +
test dl dl +
jz loc_4428F7  +
xor esi esi +
xor ebp ebp +
xor edi edi +
mov [esp+0CCh+var_A4] 0 +
mov ecx edi +
mov [esp+0CCh+var_44] edi +
mov edi [esp+0CCh+var_A4] +
mov byte ptr [esp+0CCh+var_34+1] al +
mov byte ptr [esp+0CCh+var_34] dl +
mov [ebx+8] esi +
mov [esp+0CCh+var_40] edi +
mov eax [esp+0CCh+var_40] +
mov [ebx+0Ch] ebp +
mov [esp+0CCh+var_3C] esi +
mov [esp+0CCh+var_38] ebp +
mov [ebx+4] eax +
mov eax [esp+0CCh+var_34] +
mov [ebx] ecx +
mov [ebx+10h] eax +
mov eax [esp+0CCh+var_30] +
mov [ebx+14h] eax +
add esp 0CCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0CCh+arg_1C] 3Fh +
ja loc_4428D0  +
mov eax [esp+0CCh+var_9C] +
mov esi [esp+0CCh+var_94] +
mov edi [esp+0CCh+var_90] +
mov ebp [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_A4] eax +
mov eax [esp+0CCh+var_98] +
mov [esp+0CCh+var_A0] eax +
test ebp ebp +
jz loc_442750  +
mov ecx ebp +
mov eax esi +
mov edx edi +
shld edx esi +
xor esi esi +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax esi +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_A4] +
mov ecx 40h +
mov [esp+0CCh+var_88] edx +
mov edx [esp+0CCh+var_A0] +
sub ecx ebp +
xor edi edi +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
cmovnz edx edi +
mov ecx edx +
mov edx [esp+0CCh+var_88] +
mov [esp+0CCh+var_80] ecx +
mov ecx eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_8C] +
or ecx eax +
mov eax [esp+0CCh+var_A4] +
mov esi ecx +
mov ecx [esp+0CCh+var_80] +
or ecx edx +
mov edx [esp+0CCh+var_A0] +
mov edi ecx +
mov ecx ebp +
xor ebp ebp +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebp +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_A0] edx +
mov eax [esp+0CCh+var_A4] +
mov ecx esi +
mov [esp+0CCh+var_44] esi +
mov edx [esp+0CCh+var_A0] +
mov [esp+0CCh+var_40] edi +
mov [esp+0CCh+var_CC] ecx +
mov esi eax +
mov [esp+0CCh+var_3C] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_38] edx +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_6C] +
call sub_4420B0  +
mov eax [esp+0CCh+var_6C] +
mov ecx [esp+0CCh+var_5C] +
mov [esp+0CCh+var_44] eax +
mov edi [esp+0CCh+var_44] +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_68] +
mov edx ecx +
mov [esp+0CCh+var_34] ecx +
mov [esp+0CCh+var_40] eax +
mov [esp+0CCh+var_84] eax +
mov eax [esp+0CCh+var_64] +
mov [esp+0CCh+var_3C] eax +
mov esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_7C] eax +
mov eax [esp+0CCh+var_60] +
mov [esp+0CCh+var_38] eax +
mov ebp [esp+0CCh+var_38] +
mov [esp+0CCh+var_78] eax +
mov eax [esp+0CCh+var_58] +
mov [esp+0CCh+var_74] eax +
mov [esp+0CCh+var_30] eax +
mov eax [esp+0CCh+var_40] +
mov [esp+0CCh+var_A4] eax +
xor eax eax +
test cl cl +
jnz loc_44263C  +
mov eax [esp+0CCh+arg_1C] +
mov [esp+0CCh+var_70] edx +
mov [esp+0CCh+var_BC] ecx +
mov [esp+0CCh+var_CC] edi +
mov [esp+0CCh+var_B0] eax +
mov eax [esp+0CCh+arg_18] +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_B4] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_74] +
mov [esp+0CCh+var_B8] eax +
lea eax [esp+0CCh+var_24] +
call sub_4422D0  +
mov eax [esp+0CCh+var_98] +
xor eax [esp+0CCh+var_18] +
mov ecx [esp+0CCh+var_9C] +
xor ecx [esp+0CCh+var_1C] +
mov edx eax +
mov eax 1 +
or edx ecx +
mov edx [esp+0CCh+var_70] +
jnz loc_44263C  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
xor eax [esp+0CCh+var_20] +
xor ecx [esp+0CCh+var_24] +
or ecx eax +
setnz al  +
jmp loc_44263C  +
mov eax [esp+0CCh+arg_1C] +
mov esi [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_98] +
mov [esp+0CCh+var_A4] 0 +
lea ebp [eax-40h] +
mov [esp+0CCh+var_A0] 0 +
jmp loc_4426CD  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_90] +
or eax [esp+0CCh+var_98] +
or ecx [esp+0CCh+var_9C] +
or ecx eax +
setnz al  +
jmp loc_44262E  +
***
jmp sub_442920  +
***
mov edi ecx +
push esi  +
push ebx  +
mov ebx edx +
sub esp 28h +
mov ebp [esp+30h+arg_0] +
mov [esp+30h+var_30] eax +
mov eax edx +
mov esi [esp+30h+arg_4] +
mul  ebp +
mov [esp+30h+var_1C] eax +
mov eax ecx +
mov ecx [esp+30h+var_30] +
mov [esp+30h+var_18] edx +
mul  esi +
mov [esp+30h+var_14] eax +
mov [ecx] eax +
mov eax ebx +
mov [esp+30h+var_10] edx +
mov [ecx+4] edx +
mul  esi +
xor esi esi +
mov [esp+30h+var_2C] eax +
mov eax edi +
mov edi [esp+30h+var_2C] +
mov [esp+30h+var_28] edx +
mul  ebp +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] edx +
mov edx [esp+30h+var_18] +
add esi eax +
adc edi edx +
cmp edx edi +
mov [ecx+8] esi +
mov [ecx+0Ch] edi +
jb loc_4429FB  +
jbe loc_4429F5  +
mov ecx [esp+30h+var_14] +
mov ebx [esp+30h+var_10] +
mov eax [esp+30h+var_30] +
add ecx 1 +
adc ebx 0 +
mov [eax] ecx +
mov edx ebx +
mov [eax+4] ebx +
mov eax ecx +
mov ebx [esp+30h+var_24] +
xor ecx ecx +
mov ebp [esp+30h+var_30] +
add ecx esi +
adc ebx edi +
cmp edi ebx +
mov [ebp+8] ecx +
mov [ebp+0Ch] ebx +
jb loc_4429C5  +
jbe loc_442A05  +
add eax 1 +
adc edx 0 +
mov ebx [esp+30h+var_20] +
mov edi [esp+30h+var_28] +
mov ecx ebx +
xor ebx ebx +
mov esi edi +
xor edi edi +
add ecx esi +
adc ebx edi +
add ecx eax +
mov eax [esp+30h+var_30] +
adc ebx edx +
mov [eax] ecx +
mov [eax+4] ebx +
mov byte ptr [eax+10h] 1 +
mov byte ptr [eax+11h] 0 +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+30h+var_1C] esi +
ja loc_44298C  +
mov eax [esp+30h+var_14] +
mov edx [esp+30h+var_10] +
jmp loc_4429A6  +
cmp esi ecx +
jbe loc_4429C5  +
jmp loc_4429BF  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 0CCh +
mov eax [esp+0D0h+arg_0] +
mov ebp [esp+0D0h+arg_10] +
mov edi [esp+0D0h+arg_28] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+arg_4] +
mov ecx [esp+0D0h+var_48] +
mov [esp+0D0h+var_38] ebp +
mov [esp+0D0h+var_50] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+arg_8] +
mov ebx [esp+0D0h+var_44] +
mov [esp+0D0h+var_90] ecx +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+arg_C] +
mov [esp+0D0h+var_8C] ebx +
mov ecx [esp+0D0h+var_40] +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+arg_14] +
mov ebx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+arg_18] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+arg_1C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+arg_20] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+arg_24] +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+arg_2C] +
mov [esp+0D0h+var_4C] eax +
mov [esp+0D0h+var_98] ecx +
mov ecx [esp+0D0h+var_60] +
mov [esp+0D0h+var_94] ebx +
mov ebx [esp+0D0h+var_5C] +
mov eax [edx+294h] +
cmp [esp+0D0h+arg_30] 5 +
mov [esp+0D0h+var_A8] ecx +
mov ecx [esp+0D0h+var_58] +
mov [esp+0D0h+var_A4] ebx +
mov ebx [esp+0D0h+var_54] +
mov [esp+0D0h+var_9C] eax +
mov [esp+0D0h+var_B0] ecx +
mov [esp+0D0h+var_AC] ebx +
jz loc_442EF0  +
jle loc_442D08  +
mov eax [esp+0D0h+arg_30] +
sub eax 0Ch +
cmp eax 1 +
ja loc_4430A8  +
mov eax edi +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_442C1D  +
cmp [esp+0D0h+var_9C] 40h +
mov eax [esp+0D0h+var_9C] +
jbe loc_443258  +
lea ecx [eax-41h] +
mov edx [esp+0D0h+var_A4] +
mov eax [esp+0D0h+var_A8] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
lea ebp [esp+0D0h+var_80] +
jnz loc_442C1D  +
xor eax eax +
cmp [esp+0D0h+arg_30] 0Dh +
setnz al  +
mov [esp+0D0h+arg_30] eax +
mov eax [esp+0D0h+var_9C] +
add [esp+0D0h+arg_30] 0Ch +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_60] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_5C] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_54] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
call sub_442160  +
mov eax [esp+0D0h+var_80] +
mov [esp+0D0h+var_60] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_5C] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_5C] +
mov [esp+0D0h+var_58] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_54] eax +
mov eax [esp+0D0h+var_60] +
mov edx [esp+0D0h+var_54] +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_58] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_B0] eax +
mov ecx [esp+0D0h+var_A4] +
mov eax 0FFFFFFFFh +
mov edx [esp+0D0h+var_A8] +
mov edi ecx +
or edi edx +
cmovz eax [esp+0D0h+var_B0] +
cmp [esp+0D0h+arg_30] 0Dh +
mov [esp+0D0h+var_B4] eax +
mov eax [esp+0D0h+var_9C] +
mov [esp+0D0h+var_B8] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_D0] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_3C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_38] +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_34] +
mov [esp+0D0h+var_BC] eax +
mov eax ebp +
jz loc_443160  +
call sub_4422D0  +
mov eax [esp+0D0h+var_80] +
mov edi [esp+0D0h+var_70] +
mov [esp+0D0h+var_48] eax +
mov eax [esp+0D0h+var_7C] +
mov [esp+0D0h+var_38] edi +
mov [esp+0D0h+var_44] eax +
mov eax [esp+0D0h+var_78] +
mov edx [esp+0D0h+var_44] +
mov [esp+0D0h+var_40] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_A4] edx +
mov [esp+0D0h+var_3C] eax +
mov eax [esp+0D0h+var_6C] +
mov edx [esp+0D0h+var_3C] +
mov [esp+0D0h+var_34] eax +
mov eax [esp+0D0h+var_48] +
mov [esp+0D0h+var_AC] edx +
mov [esp+0D0h+var_A8] eax +
mov eax [esp+0D0h+var_40] +
mov [esp+0D0h+var_B0] eax +
jmp loc_4430EC  +
cmp [esp+0D0h+arg_30] 4 +
jnz loc_4430A8  +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
mov ecx [esp+0D0h+var_90] +
mov ebx [esp+0D0h+var_8C] +
add eax [esp+0D0h+var_B0] +
adc edx [esp+0D0h+var_AC] +
add ecx [esp+0D0h+var_A8] +
adc ebx [esp+0D0h+var_A4] +
cmp edx [esp+0D0h+var_94] +
mov [esp+0D0h+var_88] eax +
mov [esp+0D0h+var_84] edx +
ja loc_442D58  +
jb loc_443190  +
mov eax [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] eax +
jb loc_443190  +
mov edx ebp +
mov eax 1 +
mov ebp [esp+0D0h+var_84] +
test dl dl +
mov edx ecx +
cmovz eax edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_24] ebx +
mov ebx [esp+0D0h+var_9C] +
mov byte ptr [esp+0D0h+var_18] al +
mov eax [esp+0D0h+var_24] +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_20] edi +
mov [esp+0D0h+var_CC] eax +
mov eax [esp+0D0h+var_1C] +
mov [esp+0D0h+var_D0] edx +
mov [esp+0D0h+var_C8] edi +
mov [esp+0D0h+var_28] ecx +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_B8] ebx +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_4420B0  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov edx eax +
shr dx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
jnz loc_442E9E  +
cmp ebx 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_4431B0  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_443082  +
xor edx edx +
mov eax [esp+0D0h+var_28] +
mov byte ptr [esp+0D0h+var_18+1] dl +
mov [esi] eax +
mov eax [esp+0D0h+var_24] +
mov [esi+4] eax +
mov eax [esp+0D0h+var_20] +
mov [esi+8] eax +
mov eax [esp+0D0h+var_1C] +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_18] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_14] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0D0h+var_98] +
mov edx [esp+0D0h+var_94] +
sub eax [esp+0D0h+var_B0] +
sbb edx [esp+0D0h+var_AC] +
mov [esp+0D0h+var_88] eax +
mov eax [esp+0D0h+var_90] +
mov ebx edx +
mov [esp+0D0h+var_84] edx +
mov edx [esp+0D0h+var_8C] +
sub eax [esp+0D0h+var_A8] +
sbb edx [esp+0D0h+var_A4] +
cmp ebx [esp+0D0h+var_94] +
jb loc_442F34  +
ja loc_4431A0  +
mov ebx [esp+0D0h+var_98] +
cmp [esp+0D0h+var_88] ebx +
ja loc_4431A0  +
mov ebx ebp +
mov ecx 1 +
mov ebp [esp+0D0h+var_84] +
test bl bl +
mov ebx eax +
cmovz ecx edi +
mov edi [esp+0D0h+var_88] +
mov [esp+0D0h+var_28] eax +
mov [esp+0D0h+var_1C] ebp +
mov byte ptr [esp+0D0h+var_18] cl +
mov eax edi +
mov [esp+0D0h+var_C8] eax +
mov eax [esp+0D0h+var_1C] +
mov byte ptr [esp+0D0h+var_18+1] 0 +
mov [esp+0D0h+var_24] edx +
mov edx [esp+0D0h+var_24] +
mov [esp+0D0h+var_20] edi +
mov edi [esp+0D0h+var_9C] +
mov [esp+0D0h+var_C4] eax +
mov eax [esp+0D0h+var_18] +
mov [esp+0D0h+var_D0] ebx +
mov [esp+0D0h+var_CC] edx +
mov [esp+0D0h+var_B8] edi +
mov [esp+0D0h+var_C0] eax +
mov eax [esp+0D0h+var_14] +
mov [esp+0D0h+var_BC] eax +
lea eax [esp+0D0h+var_80] +
call sub_4420B0  +
mov eax [esp+0D0h+var_80] +
mov edx [esp+0D0h+var_6C] +
mov [esp+0D0h+var_28] eax +
mov eax [esp+0D0h+var_7C] +
mov edi [esp+0D0h+var_28] +
mov [esp+0D0h+var_14] edx +
mov [esp+0D0h+var_24] eax +
mov eax [esp+0D0h+var_78] +
mov ebp [esp+0D0h+var_24] +
mov [esp+0D0h+var_88] edi +
mov [esp+0D0h+var_20] eax +
mov eax [esp+0D0h+var_74] +
mov [esp+0D0h+var_84] ebp +
mov edi [esp+0D0h+var_20] +
mov [esp+0D0h+var_1C] eax +
mov eax [esp+0D0h+var_70] +
mov ebp [esp+0D0h+var_1C] +
mov ebx eax +
shr bx 8 +
test al al +
mov [esp+0D0h+var_18] eax +
mov edx ebx +
jnz loc_442E9E  +
cmp [esp+0D0h+var_9C] 40h +
mov ecx [esp+0D0h+var_9C] +
jbe loc_443214  +
mov edx [esp+0D0h+var_8C] +
sub ecx 41h +
mov eax [esp+0D0h+var_90] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_A4] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_A8] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jz loc_442E9C  +
mov edx [esp+0D0h+var_84] +
mov eax [esp+0D0h+var_88] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
cmp al bl +
setnz dl  +
jmp loc_442E9E  +
cmp byte ptr [edx+26Ah] 0 +
jz loc_4430D0  +
cmp byte ptr [edx+268h] 0 +
jz loc_443170  +
mov eax [edx+14h] +
test eax eax +
jz loc_443170  +
lea esi [esi+0] +
mov eax [esp+0D0h+var_50] +
mov [esp+0D0h+var_38] eax +
mov eax [esp+0D0h+var_4C] +
mov [esp+0D0h+var_34] eax +
mov edx [esp+0D0h+var_A8] +
mov ecx [esp+0D0h+var_A4] +
mov ebx [esp+0D0h+var_AC] +
mov eax edx +
mov [esp+0D0h+var_44] ecx +
mov ecx [esp+0D0h+var_B0] +
mov [esi] eax +
mov eax [esp+0D0h+var_44] +
mov [esp+0D0h+var_3C] ebx +
mov [esp+0D0h+var_48] edx +
mov [esp+0D0h+var_40] ecx +
mov edx ecx +
mov ecx edi +
mov [esi+4] eax +
mov eax [esp+0D0h+var_3C] +
mov byte ptr [esp+0D0h+var_38] cl +
mov [esi+8] edx +
mov [esi+0Ch] eax +
mov eax [esp+0D0h+var_38] +
mov [esi+10h] eax +
mov eax [esp+0D0h+var_34] +
mov [esi+14h] eax +
add esp 0CCh +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4425C0  +
jmp loc_442C95  +
mov [esp+0D0h+var_C8] offset aCommaOperatorI +
mov [esp+0D0h+var_CC] 15h +
mov [esp+0D0h+var_D0] edx +
call sub_43CBB0  +
jmp loc_4430D0  +
add ecx 1 +
adc ebx 0 +
jmp loc_442D58  +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
jmp loc_442F34  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4431E5  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_442E9C  +
mov eax edi +
mov edx ebp +
shrd eax ebp +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edi eax +
and edi 1 +
xor edi 1 +
mov eax edi +
and eax 1 +
jmp loc_44309E  +
mov edx [esp+0D0h+var_94] +
sub ecx 1 +
mov eax [esp+0D0h+var_98] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov edx [esp+0D0h+var_AC] +
and eax 1 +
xor eax 1 +
mov ebx eax +
mov eax [esp+0D0h+var_B0] +
and ebx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_443249  +
mov eax edx +
and eax 1 +
xor eax 1 +
cmp bl al +
jnz loc_4431F3  +
jmp loc_442E9C  +
lea ecx [eax-1] +
mov edx [esp+0D0h+var_AC] +
mov eax [esp+0D0h+var_B0] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_442B71  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
add byte ptr [edx+12h] 1 +
mov byte ptr [eax+10h] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov byte ptr [eax+11h] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_1C] ecx +
call sub_43B980  +
mov [esp+34h+var_1D] 0 +
mov esi eax +
movzx eax byte ptr [eax+4] +
cmp al 14h +
jz loc_443400  +
cmp al 44h +
setz dl  +
jz loc_4432E0  +
cmp al 3Eh +
jnz loc_443380  +
mov eax [esi+8] +
mov [esp+34h+var_18] edx +
sub eax 1 +
mov [esp+34h+var_34] eax +
call sub_452ED0  +
mov ebp eax +
mov eax [esi+8] +
lea ecx [eax-2] +
mov eax [esi+0Ch] +
mov [esp+34h+var_2C] ecx +
mov [esp+34h+var_34] ebp +
add eax 1 +
mov [esp+34h+var_30] eax +
call memcpy  +
mov eax [esi+8] +
mov edx [esp+34h+var_18] +
mov byte ptr [ebp+eax-2] 0 +
mov esi [esi+8] +
test ebp ebp +
jz loc_44335C  +
mov eax [esp+34h+var_1C] +
mov [esp+34h+var_30] ebp +
mov [esp+34h+var_34] edi +
mov [esp+34h+var_28] eax +
movzx eax dl +
mov [esp+34h+var_2C] eax +
call sub_44BB50  +
test al al +
jnz loc_4433D0  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov [esp+34h+var_34] ebp +
call free  +
cmp [esp+34h+var_1D] 0 +
jnz loc_4433A5  +
test esi esi +
jz loc_44336D  +
mov [edi+0E8h] esi +
sub byte ptr [edi+12h] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 3 +
jz loc_4433E3  +
mov [esp+34h+var_2C] offset aOperator__has_ +
xor esi esi +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_43CB30  +
cmp [esp+34h+var_1D] 0 +
jz loc_443363  +
mov [esp+34h+var_34] edi +
call sub_43B980  +
cmp byte ptr [eax+4] 15h +
jz loc_443363  +
mov [esp+34h+var_2C] offset aMissingAfter__ +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_34] edi +
call sub_43CB30  +
jmp loc_443363  +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_443354  +
mov [esp+34h+var_34] edi +
xor esi esi +
call sub_438B10  +
mov edx 1 +
mov ebp eax +
jmp loc_44331F  +
mov [esp+34h+var_34] edi +
call sub_43B980  +
mov [esp+34h+var_1D] 1 +
mov esi eax +
movzx eax byte ptr [eax+4] +
jmp loc_4432D1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_24] eax +
cmp ebx 2 +
jz loc_443602  +
movzx edx byte ptr [edx] +
test dl dl +
mov [esp+24h+var_5] dl +
jnz loc_443555  +
lea edx [ebx-1] +
test ebx ebx +
jz loc_4436C5  +
movzx esi byte ptr [ecx] +
mov eax [esp+24h+var_24] +
mov ebx esi +
xor edi edi +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_10] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_14] 0 +
sub ebx 44h +
cmp bl 33h +
ja loc_4434C8  +
movzx ebx bl +
jmp ds:off_4CEB9C[ebx*4]  +
mov esi edx +
add ebp 1 +
sub edx 1 +
mov ebx ecx +
test esi esi +
lea ecx [ebx+1] +
jz loc_443922  +
movzx ebx byte ptr [ebx+1] +
sub ebx 44h +
cmp bl 33h +
jbe loc_44349D  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
add edi 1 +
sub edx 1 +
mov ebx ecx +
jmp loc_4434B1  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_20] 1 +
sub edx 1 +
jmp loc_4434B1  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_18] 1 +
sub edx 1 +
jmp loc_4434B1  +
mov esi [esp+24h+var_14] +
add esi 1 +
test edx edx +
jnz loc_443638  +
mov edx [esp+24h+var_10] +
mov ebx esi +
add edx [esp+24h+var_C] +
add edx [esp+24h+var_1C] +
add edx esi +
add edx [esp+24h+var_20] +
add edx edi +
add edx ebp +
xor eax eax +
cmp edx 1 +
ja loc_4434CA  +
cmp [esp+24h+var_18] 1 +
ja loc_4434CA  +
cmp [esp+24h+var_4] 0F0h +
ja loc_4434CA  +
jmp loc_4436FB  +
mov esi edx +
mov ebx ecx +
add [esp+24h+var_1C] 1 +
sub edx 1 +
jmp loc_4434B1  +
test ebx ebx +
jz loc_4436C5  +
movzx edx byte ptr [ecx+ebx-1] +
lea esi [ebx-1] +
cmp dl 52h +
jz loc_443586  +
jbe loc_4437A0  +
cmp dl 6Bh +
jz loc_4437B0  +
cmp dl 72h +
lea esi [esi+0] +
jnz loc_4437A5  +
mov ebp 100000h +
cmp ebx 1 +
jz loc_443870  +
movzx eax byte ptr [ecx] +
mov edi eax +
and edi 0FFFFFFDFh +
mov edx edi +
cmp dl 55h +
jnz loc_4435BC  +
or ebp 1000h +
cmp esi 1 +
jz loc_443870  +
movzx eax byte ptr [ecx+1] +
lea esi [ebx-2] +
add ecx 1 +
cmp al 4Ch +
jz loc_443898  +
jbe loc_443877  +
cmp al 68h +
jz loc_443886  +
cmp al 6Ch +
jnz loc_4434C8  +
cmp esi 1 +
lea esi [esi+0] +
jz loc_4438B9  +
xor eax eax +
cmp esi 2 +
jnz loc_4434CA  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 6Ch +
cmovz eax edx +
jmp loc_4434CA  +
movzx esi byte ptr [ecx] +
mov edi esi +
and edi 0FFFFFFDFh +
mov eax edi +
cmp al 44h +
jnz loc_4437BA  +
mov eax esi +
cmp al 44h +
setz al  +
mov edi eax +
movzx eax byte ptr [ecx+1] +
lea esi [eax-44h] +
mov eax esi +
cmp al 28h +
ja loc_443437  +
movzx esi al +
jmp ds:off_4CEC6C[esi*4]  +
cmp byte ptr [eax] 0 +
movzx ebx byte ptr [ecx+1] +
jnz loc_4436B6  +
mov byte ptr [esp+24h+var_24] bl +
sub ebx 31h +
cmp bl 8 +
ja loc_4436B2  +
mov ebx [esp+24h+var_4] +
test ebx ebx +
jnz loc_4436B2  +
movzx ebx byte ptr [esp+24h+var_24] +
mov esi [esp+24h+var_4] +
mov [esp+24h+var_24] edi +
mov edi eax +
jmp loc_443686  +
cmp esi 0EFh +
ja loc_4438C3  +
lea eax [esi+esi*4] +
add ecx 1 +
sub edx 1 +
lea esi [ebx+eax*2-30h] +
jz loc_4438FD  +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-30h] +
cmp al 9 +
jbe loc_443663  +
cmp bl 78h +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
jnz loc_4438CC  +
lea esi [edx-1] +
sub edx 2 +
add [esp+24h+var_C] 1 +
lea ebx [ecx+1] +
jmp loc_4434B1  +
movzx ebx byte ptr [esp+24h+var_24] +
add ecx 1 +
sub edx 1 +
mov [esp+24h+var_14] esi +
jmp loc_443495  +
mov [esp+24h+var_18] 0 +
xor ebp ebp +
xor edi edi +
xor ebx ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_4] 0 +
mov [esp+24h+var_C] 0 +
mov [esp+24h+var_10] 0 +
mov eax [esp+24h+var_C] +
test eax eax +
setnz al  +
mov esi eax +
jnz loc_443842  +
mov eax [esp+24h+var_10] +
test eax eax +
setnz dl  +
jz loc_44372B  +
cmp [esp+24h+var_4] 10h +
jz loc_44372B  +
xor eax eax +
test byte ptr [esp+24h+var_4] 1Fh +
jnz loc_4434CA  +
cmp [esp+24h+var_4] 60h +
jz loc_443913  +
mov eax [esp+24h+var_18] +
test eax eax +
jz loc_4438E3  +
xor eax eax +
mov ecx 2000h +
cmp [esp+24h+var_5] 0 +
jz loc_4434CA  +
test ebx ebx +
mov eax 10h +
jnz loc_443797  +
mov ebx [esp+24h+var_1C] +
mov al 20h +
test ebx ebx +
jnz loc_443797  +
mov ebx [esp+24h+var_20] +
mov al 40h +
test ebx ebx +
jnz loc_443797  +
test ebp ebp +
mov eax 10000h +
jnz loc_443797  +
test edi edi +
mov eax 20000h +
jnz loc_443797  +
test dl dl +
jz loc_443944  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 400000h +
or eax ecx +
jmp loc_4434CA  +
cmp dl 4Bh +
jz loc_4437B0  +
mov edx esi +
jmp loc_443449  +
mov ebp 200000h +
jmp loc_44358B  +
movzx eax byte ptr [edx] +
mov edx 1 +
test al al +
mov [esp+24h+var_5] al +
jz loc_443454  +
jmp loc_44355D  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_4434CA  +
mov eax 4040h +
jmp loc_4434CA  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_4434CA  +
mov eax 4010h +
jmp loc_4434CA  +
mov ecx edi +
xor eax eax +
test cl cl +
jnz loc_4434CA  +
mov eax 4020h +
jmp loc_4434CA  +
mov eax edi +
test al al +
jz loc_4434C8  +
nop   +
jmp loc_4437DF  +
mov eax edi +
test al al +
jz loc_4434C8  +
lea esi [esi+0] +
jmp loc_4437F5  +
mov eax edi +
test al al +
jz loc_4434C8  +
lea esi [esi+0] +
jmp loc_44380B  +
cmp [esp+24h+var_4] 20h +
jz loc_44370C  +
cmp [esp+24h+var_4] 40h +
jz loc_44370C  +
xor eax eax +
cmp [esp+24h+var_4] 80h +
jz loc_44370C  +
jmp loc_4434CA  +
mov eax ebp +
jmp loc_4434CA  +
cmp al 48h +
lea esi [esi+0] +
jnz loc_4434C8  +
mov edx ebp +
xor eax eax +
or edx 10h +
cmp esi 1 +
cmovz eax edx +
jmp loc_4434CA  +
cmp esi 1 +
jz loc_4438B9  +
xor eax eax +
cmp esi 2 +
jnz loc_4434CA  +
mov edx ebp +
or edx 40h +
cmp byte ptr [ecx+1] 4Ch +
cmovz eax edx +
jmp loc_4434CA  +
mov eax ebp +
or eax 20h +
jmp loc_4434CA  +
mov eax edi +
mov edi [esp+24h+var_24] +
mov [esp+24h+var_4] esi +
lea esi [edx-1] +
mov ebx ecx +
mov [esp+24h+var_24] esi +
mov esi edx +
add [esp+24h+var_10] 1 +
mov edx [esp+24h+var_24] +
jmp loc_4434B1  +
mov eax ebp +
or eax edi +
jz loc_4438F6  +
xor eax eax +
cmp [esp+24h+var_5] 0 +
jz loc_4434CA  +
xor ecx ecx +
jmp loc_443754  +
mov [esp+24h+var_4] esi +
mov eax edi +
xor esi esi +
mov edi [esp+24h+var_24] +
mov ebx ecx +
mov [esp+24h+var_24] 0FFFFFFFFh +
jmp loc_4438D6  +
xor eax eax +
test dl dl +
jz loc_443736  +
jmp loc_4434CA  +
mov ecx [esp+24h+var_14] +
lea eax [ebp+edi+0] +
add eax [esp+24h+var_20] +
add eax [esp+24h+var_1C] +
add eax [esp+24h+var_10] +
add eax [esp+24h+var_C] +
mov ebx ecx +
lea edx [eax+ecx] +
jmp loc_443527  +
mov edx esi +
mov eax 8000h +
test dl dl +
jz loc_443797  +
mov eax [esp+24h+var_4] +
shl eax 18h +
or eax 800000h +
or eax ecx +
jmp loc_4434CA  +
***
push edi  +
xor ebp ebp +
push esi  +
xor edi edi +
push ebx  +
xor esi esi +
lea ebx [ecx-1] +
sub esp 4 +
cmp ebx 0FFFFFFFFh +
mov [esp+10h+var_10] eax +
jz loc_4439AE  +
movzx ecx byte ptr [edx-1] +
lea eax [ecx-49h] +
cmp al 2Ch +
ja loc_443A04  +
movzx eax al +
jmp ds:off_4CED10[eax*4]  +
add ebp 1 +
sub ebx 1 +
sub edx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_44398A  +
xor eax eax +
cmp esi 2 +
ja loc_443A06  +
cmp ebp 1 +
ja loc_443A06  +
cmp edi 1 +
ja loc_443A06  +
test edi edi +
jz loc_443A15  +
mov edi [esp+10h+var_10] +
mov edx 2000h +
cmp byte ptr [edi] 0 +
jz loc_443A06  +
cmp ebp 1 +
sbb eax eax +
not eax  +
and eax 1000h +
or eax edx +
test esi esi +
mov edx 10h +
jz loc_4439F4  +
mov dl 20h +
cmp esi 1 +
mov ecx 40h +
cmovnz edx ecx +
or eax edx +
jmp loc_443A06  +
add esi 1 +
cmp esi 2 +
jnz loc_4439A3  +
cmp cl [edx] +
jz loc_4439A3  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
jmp loc_4439A3  +
xor edx edx +
jmp loc_4439D0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp [esp+1Ch+arg_8] 0 +
mov [esp+1Ch+var_1C] eax +
mov edi [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] ebx +
mov ebx [esp+1Ch+arg_14] +
mov [esp+1Ch+var_10] esi +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_18] edx +
mov ebp [esp+1Ch+arg_10] +
mov [esp+1Ch+var_C] ebx +
mov [esp+1Ch+var_8] esi +
jnz loc_443A64  +
cmp [esp+1Ch+arg_1C] 0 +
jz loc_443AB0  +
cmp [esp+1Ch+var_18] ebp +
jbe loc_443A80  +
add esp 1Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_443B40  +
mov ecx [esp+1Ch+var_1C] +
mov ebx [esp+1Ch+var_18] +
mov eax ecx +
mov edx ebx +
xor eax edi +
xor edx ebp +
or edx eax +
jz loc_443B50  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+arg_20] 40h +
ja loc_443B10  +
mov eax [esp+1Ch+arg_20] +
mov esi [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_14] +
mov edx [esp+1Ch+var_8] +
lea ecx [eax-1] +
mov eax [esp+1Ch+var_C] +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
shrd eax edx +
mov ebx esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
and ecx 1 +
xor ecx 1 +
and ecx 1 +
cmp bl cl +
jz loc_443A64  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_20] +
mov edx ebp +
mov esi [esp+1Ch+var_18] +
mov ebx [esp+1Ch+var_1C] +
lea ecx [eax-41h] +
mov eax edi +
shrd ebx esi +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
mov esi ebx +
and esi 1 +
xor esi 1 +
and esi 1 +
jmp loc_443AE4  +
cmp [esp+1Ch+var_1C] edi +
ja loc_443A6A  +
jmp loc_443A86  +
mov eax [esp+1Ch+var_8] +
cmp [esp+1Ch+var_10] eax +
jb loc_443A9D  +
nop   +
ja loc_443A6A  +
mov eax [esp+1Ch+var_C] +
cmp [esp+1Ch+var_14] eax +
jnb loc_443A6A  +
xor esi esi +
jmp loc_443A9F  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov [esp+4] ecx +
mov ecx [esp+8] +
lea edx [eax+273h] +
add eax 248h +
jmp sub_443420  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
add eax 273h +
jmp sub_443970  +
***
mov edx [esp+arg_0] +
mov eax 4Ah +
cmp edx 3Eh +
jz locret_443C30  +
cmp edx 3Fh +
mov al 4Bh +
jz locret_443C30  +
cmp edx 40h +
mov al 4Ch +
jz locret_443C30  +
cmp edx 41h +
mov al 4Dh +
jz locret_443C30  +
mov al 4Eh +
cmp edx 42h +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov edx [esp+arg_0] +
mov eax 45h +
cmp edx 38h +
jz locret_443CB0  +
cmp edx 39h +
mov al 46h +
jz locret_443CB0  +
cmp edx 3Ah +
mov al 47h +
jz locret_443CB0  +
cmp edx 3Bh +
mov al 48h +
jz locret_443CB0  +
mov al 49h +
cmp edx 3Ch +
cmovnz eax edx +
nop   +
lea esi [esi+0] +
retn   +
***
mov eax [esp+arg_0] +
sub eax 4Ah +
cmp eax 4 +
setbe al  +
retn   +
***
mov eax [esp+arg_0] +
sub eax 45h +
cmp eax 4 +
setbe al  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov esi [eax+8] +
mov edi [eax+0Ch] +
test esi esi +
jz loc_443D4A  +
movzx eax byte ptr [edi] +
cmp al 27h +
jz loc_443D4E  +
cmp al 22h +
jz loc_443D4E  +
lea edx [edi+1] +
xor ecx ecx +
jmp loc_443D15  +
movzx ebx byte ptr [edx] +
mov eax edx +
add edx 1 +
cmp bl 22h +
jz loc_443D23  +
cmp bl 27h +
jz loc_443D23  +
add ecx 1 +
cmp ecx esi +
jnz loc_443D03  +
lea eax [edi+ecx] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp esi ecx +
jz loc_443D1F  +
movzx ecx byte ptr [eax] +
lea eax [esi-1] +
cmp [edi+esi-1] cl +
jnz loc_443D40  +
jmp loc_443D52  +
cmp [edi+eax-1] cl +
lea edx [eax-1] +
jz loc_443D44  +
mov eax edx +
test eax eax +
jnz loc_443D35  +
add eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
jmp loc_443D1F  +
***
mov eax edi +
jmp loc_443D27  +
***
mov eax esi +
add eax edi +
jmp loc_443D46  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_8] +
mov edi [eax+0Ch] +
test ecx ecx +
mov [esp+3Ch+var_14] edi +
jz loc_443D84  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [ecx] 0 +
mov eax [eax+8] +
mov ecx eax +
cmp ecx 1 +
mov [esp+3Ch+var_10] eax +
mov eax 111h +
jz loc_443FA0  +
mov eax [esp+3Ch+var_14] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_444002  +
mov esi [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 0Ah +
xor ecx ecx +
xor ebp ebp +
mov byte ptr [esp+3Ch+var_1C] 0 +
xor edi edi +
jmp loc_443E00  +
and dh 1 +
jz loc_443DCF  +
cmp [esp+3Ch+var_18] 10h +
jz loc_443E10  +
cmp eax 27h +
jz loc_443E25  +
cmp eax 2Eh +
jnz loc_443E36  +
test cl cl +
jnz loc_443FB9  +
cmp byte ptr [ebx] 27h +
jz loc_443FA8  +
test ebp ebp +
lea esi [esi+0] +
jnz loc_444100  +
mov ebp 1 +
movzx eax byte ptr [ebx] +
mov esi ebx +
movzx edx ds:word_4D0720[eax+eax] +
lea ebx [esi+1] +
test dl 4 +
jz loc_443DC3  +
movzx eax ds:byte_4D30E0[eax] +
mov byte ptr [esp+3Ch+var_1C] 1 +
cmp edi eax +
cmovb edi eax +
xor ecx ecx +
jmp loc_443DFB  +
mov edx [esp+3Ch+arg_0] +
cmp byte ptr [edx+276h] 0 +
jnz loc_443FF0  +
mov edx [esp+3Ch+var_14] +
add edx [esp+3Ch+var_10] +
cmp [esp+3Ch+var_18] 0Ah +
mov [esp+3Ch+var_14] edx +
jbe loc_444050  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_44405C  +
and eax 0FFFFFFDFh +
cmp eax 50h +
jnz loc_44405C  +
test cl cl +
jnz loc_4441C0  +
cmp byte ptr [esi+1] 27h +
mov eax 1 +
mov ebp 2 +
jz loc_4441AF  +
cmp [esp+3Ch+var_18] 8 +
jnz loc_44407B  +
cmp edi 9 +
ja loc_444090  +
mov [esp+3Ch+var_18] 0Ah +
cmp ebp 2 +
jz loc_444678  +
mov ebp [esp+3Ch+var_14] +
mov ecx ebx +
mov eax [esp+3Ch+arg_0] +
sub ebp ebx +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ebp +
call sub_443420  +
test eax eax +
mov esi eax +
jnz loc_4444D8  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_4446CC  +
mov edx [esp+3Ch+arg_8] +
test edx edx +
jz loc_444662  +
mov eax [esp+3Ch+arg_8] +
xor edi edi +
mov esi 1000040h +
mov [eax] ebx +
cmp [esp+3Ch+var_14] ebx +
jz loc_443F0F  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_4444E5  +
cmp esi 20h +
jz loc_444620  +
test edi edi +
jz loc_443F27  +
cmp [esp+3Ch+var_18] 0Ah +
jnz loc_44460B  +
test esi 300000h +
jz loc_443F40  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_44466E  +
test edi edi +
jz loc_443F55  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4446E1  +
mov edi esi +
and esi 2000h +
or edi 2 +
test esi esi +
jz loc_443F75  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_444469  +
cmp [esp+3Ch+var_18] 2 +
jz loc_44438B  +
cmp [esp+3Ch+var_18] 0Ah +
jz loc_444381  +
mov ecx [esp+3Ch+var_18] +
mov eax edi +
or edi 200h +
or ah 4 +
cmp ecx 10h +
cmovz eax edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jz loc_443DEA  +
mov [esp+3Ch+var_2C] offset aDigitSeparator +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jnz loc_444260  +
mov ecx 1 +
jmp loc_443DFB  +
mov eax [esp+3Ch+var_14] +
lea esi [eax+1] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_44410D  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
cmp dl 2Eh +
jz loc_444039  +
movzx ecx dl +
test byte ptr [ecx+ecx+4D0721h] 1 +
jz loc_4440CA  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 10h +
lea esi [eax+2] +
movzx eax dl +
jmp loc_443DB6  +
and eax 0FFFFFFDFh +
cmp eax 45h +
jz loc_443E64  +
test cl cl +
jnz loc_444253  +
test ebp ebp +
jz loc_444142  +
test ebp ebp +
mov ebx esi +
setnz al  +
test al al +
jnz loc_443E80  +
cmp edi [esp+3Ch+var_18] +
jb loc_4441CD  +
cmp [esp+3Ch+var_18] 2 +
jz loc_44436D  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigitCI +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
xor eax eax +
jmp loc_443FA0  +
cmp dl 27h +
mov [esp+3Ch+var_18] 8 +
jnz loc_443DB6  +
mov edi [esp+3Ch+arg_0] +
cmp byte ptr [edi+276h] 0 +
jz loc_443DB6  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_0 +
jmp loc_443FC1  +
mov [esp+3Ch+var_2C] offset aTooManyDecimal +
jmp loc_443FC1  +
cmp dl 42h +
jnz loc_444135  +
mov edi [esp+3Ch+var_14] +
movzx edx byte ptr [edi+2] +
lea ecx [edx-30h] +
cmp cl 1 +
ja loc_4440CA  +
lea esi [edi+2] +
movzx eax dl +
mov [esp+3Ch+var_18] 2 +
jmp loc_443DB6  +
mov [esp+3Ch+var_18] 8 +
jmp loc_443DB6  +
cmp [esp+3Ch+var_18] 10h +
jz loc_44406C  +
mov ecx [esp+3Ch+var_14] +
mov eax [esp+3Ch+arg_0] +
sub ecx esi +
lea edx [eax+273h] +
add eax 248h +
mov [esp+3Ch+var_3C] ecx +
mov ecx esi +
call sub_443420  +
test eax 300000h +
mov ebx eax +
jz loc_444362  +
mov ecx [esp+3Ch+var_18] +
mov edi eax +
mov eax 0Ah +
or edi 2 +
cmp ecx 8 +
cmovnz eax ecx +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_44449A  +
mov esi ebx +
and esi 2000h +
jmp loc_443F60  +
mov ecx [esp+3Ch+arg_0] +
cmp byte ptr [ecx+276h] 0 +
jz loc_443E80  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_1 +
jmp loc_443FC1  +
test al al +
jz loc_44428F  +
cmp [esp+3Ch+var_18] 2 +
jz loc_444555  +
cmp [esp+3Ch+var_18] 10h +
jnz loc_443E9C  +
cmp byte ptr [esp+3Ch+var_1C] 0 +
jz loc_4444CB  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_4445A1  +
cmp ebp 2 +
jz loc_444678  +
mov [esp+3Ch+var_2C] offset aHexadecimalFlo +
jmp loc_443FC1  +
mov esi [esp+3Ch+arg_0] +
xor ecx ecx +
cmp al 27h +
jz loc_4446BD  +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 4 +
jnz loc_444221  +
cmp al 27h +
jnz loc_44424B  +
cmp byte ptr [esi+276h] 0 +
jnz loc_444221  +
test cl cl +
jz loc_443EA5  +
mov [esp+3Ch+var_2C] offset aDigitSeparat_2 +
jmp loc_443FC1  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aAdjacentDigitS +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edx +
call sub_43CC30  +
xor eax eax +
jmp loc_443FA0  +
mov eax [esp+3Ch+var_14] +
mov edx ebx +
sub eax ebx +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_0] +
add eax 273h +
call sub_443970  +
test eax eax +
mov edx eax +
jnz loc_4443E7  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+271h] 0 +
jz loc_444562  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_44452E  +
mov eax [esp+3Ch+arg_8] +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
mov [eax] ebx +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Ah] 0 +
jnz loc_444401  +
cmp ebp 40h +
jnz loc_443F60  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_443F60  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aUseOfC11LongLo +
mov edx offset aUseOfC99LongLo +
cmp byte ptr [ecx+248h] 0 +
cmovz eax edx +
cmp byte ptr [ecx+268h] 0 +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 7 +
mov [esp+3Ch+var_34] eax +
jz loc_444544  +
mov [esp+3Ch+var_3C] ecx +
call sub_43CC80  +
jmp loc_443F60  +
mov ebx esi +
xor ebp ebp +
xor eax eax +
jmp loc_44407B  +
add edi 30h +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_2C] offset aInvalidDigit_0 +
jmp loc_44409F  +
mov eax edi +
or ah 1 +
jmp loc_443FA0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+275h] 0 +
jnz loc_4443DD  +
cmp byte ptr [eax+26Ah] 0 +
jz loc_4443DD  +
mov ecx [esp+3Ch+arg_0] +
mov eax offset aBinaryConstant +
mov edx offset aBinaryConsta_0 +
cmp byte ptr [ecx+248h] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
cmovz eax edx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] eax +
call sub_43CC30  +
mov eax edi +
or ah 8 +
jmp loc_443FA0  +
mov ebp eax +
mov esi eax +
mov edi eax +
and ebp 0F0h +
and esi 2000h +
or edi 1 +
jmp loc_4442E9  +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call loc_439A40  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jnz loc_4442FA  +
cmp ebp 40h +
jz loc_4445F0  +
and dh 30h +
jz loc_4442FA  +
mov eax 6 +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_43CC80  +
jmp loc_4442FA  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aImaginaryConst +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
jmp loc_443F75  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
jmp loc_4441A2  +
mov [esp+3Ch+var_2C] offset aNoDigitsInHexa +
jmp loc_443FC1  +
mov edi eax +
and edi 4000h +
jmp loc_443EF8  +
mov [esp+3Ch+var_3C] eax +
call loc_439A40  +
test eax eax +
jnz loc_443F0F  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aTraditionalCRe +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 6 +
mov [esp+3Ch+var_3C] eax +
call sub_43CC80  +
jmp loc_443F0F  +
xor esi esi +
mov edi 1001041h +
mov ebp 40h +
mov edx 1001040h +
jmp loc_4442E9  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CCD0  +
jmp loc_443F60  +
mov [esp+3Ch+var_2C] offset aInvalidPrefix0 +
jmp loc_443FC1  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_2C] offset aInvalidSuffix_ +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 3 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
xor eax eax +
jmp loc_443FA0  +
cmp byte ptr [eax+24Fh] 0 +
jnz loc_444207  +
cmp byte ptr [eax+248h] 0 +
jz loc_444712  +
mov [esp+3Ch+var_2C] offset aUseOfC1zHexade +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
jmp loc_444207  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+25Bh] 0 +
jz loc_444422  +
mov eax 7 +
jmp loc_444430  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_0 +
jmp loc_444576  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+26Ah] 0 +
jz loc_443F40  +
mov [esp+3Ch+var_2C] offset aSuffixForDoubl +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
jmp loc_443F40  +
xor edi edi +
mov esi 1000040h +
jmp loc_443EF8  +
mov [esp+3Ch+var_2C] offset aFixedPointCons +
jmp loc_444639  +
movzx eax byte ptr [ebx] +
cmp al 2Dh +
jz loc_444683  +
cmp al 2Bh +
jnz loc_44468A  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 4 +
jnz loc_44421D  +
cmp al 27h +
jnz loc_4446B0  +
mov eax [esp+3Ch+arg_0] +
cmp byte ptr [eax+276h] 0 +
jnz loc_4441C0  +
mov [esp+3Ch+var_2C] offset aExponentHasNoD +
jmp loc_443FC1  +
cmp byte ptr [esi+276h] 0 +
setnz cl  +
jmp loc_44422B  +
mov [esp+3Ch+var_24] ebx +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] offset aInvalidSuffi_1 +
jmp loc_444576  +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] offset aDecimalFloatCo +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 2 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43CC30  +
jmp loc_443F55  +
mov [esp+3Ch+var_2C] offset aUseOfC99Hexade +
jmp loc_4445C3  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0ACh+arg_0] +
mov eax [esp+0ACh+arg_8] +
mov edi [esp+0ACh+arg_0] +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov ebp [eax+0Ch] +
mov dword ptr [ebx] 0 +
mov eax [eax+8] +
mov dword ptr [ebx+4] 0 +
mov ebx [esp+0ACh+arg_C] +
mov byte ptr [edi+11h] 0 +
lea edx [ebp+eax+0] +
shr ebx 0Ch +
and ebx 1 +
cmp eax 1 +
mov [edi+10h] bl +
mov [esp+0ACh+var_7C] edx +
jz loc_444D36  +
mov eax [esp+0ACh+arg_4] +
mov eax [eax+294h] +
mov [esp+0ACh+var_60] eax +
mov eax [esp+0ACh+arg_C] +
and eax 0F00h +
cmp eax 400h +
jz loc_444D14  +
cmp eax 200h +
jz loc_444D75  +
cmp eax 800h +
jz loc_444DB3  +
mov esi 0FFFFFFF7h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 0Ah +
mov [esp+0ACh+var_78] 0Ah +
cmp [esp+0ACh+var_60] 3Fh +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
ja loc_444805  +
mov ecx 40h +
sub ecx [esp+0ACh+var_60] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_444805  +
mov eax edx +
xor edx edx +
add eax esi +
adc edx edi +
mov edi [esp+0ACh+var_64] +
mov [esp+0ACh+var_A0] 0 +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_A4] edi +
call sub_470D20  +
add eax 1 +
adc edx 0 +
cmp ebp [esp+0ACh+var_7C] +
jnb loc_444B49  +
mov [esp+0ACh+var_4E] 0 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_444879  +
cmp [esp+0ACh+var_78] 10h +
jz loc_444C28  +
cmp dl 27h +
jnz loc_444B26  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+276h] 0 +
jz loc_444B26  +
add ebp 1 +
cmp ebp [esp+0ACh+var_7C] +
jz loc_444B26  +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
movzx ecx ds:word_4D0720[eax+eax] +
test cl 4 +
jz loc_444844  +
movzx ebx ds:byte_4D30E0[eax] +
mov eax [esp+0ACh+arg_0] +
mov edx [eax+0Ch] +
cmp edx [esp+0ACh+var_80] +
mov eax [eax+8] +
jb loc_444C00  +
ja loc_4448B7  +
cmp eax [esp+0ACh+var_84] +
jb loc_444C00  +
mov edi [esp+0ACh+arg_0] +
mov esi [edi] +
mov edi [edi+4] +
mov [esp+0ACh+var_84] esi +
mov [esp+0ACh+var_80] edi +
mov edi [esp+0ACh+arg_0] +
movzx ecx byte ptr [edi+10h] +
mov edi [esp+0ACh+var_78] +
mov [esp+0ACh+var_4F] cl +
cmp edi 2 +
jz loc_444C36  +
cmp edi 10h +
jz loc_444CE0  +
mov ecx [esp+0ACh+var_80] +
mov esi eax +
mov edi edx +
shr ecx 1Dh +
test ecx ecx +
mov ecx edx +
setnz [esp+0ACh+var_4D]  +
shld edi eax +
shl esi 3 +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
shr ecx 1Dh +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi 3 +
or ecx esi +
cmp [esp+0ACh+var_78] 0Ah +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] edi +
jnz loc_444CC2  +
mov esi eax +
mov edi edx +
shld edi eax +
add esi eax +
mov [esp+0ACh+var_5C] esi +
mov esi [esp+0ACh+var_84] +
mov eax edx +
mov [esp+0ACh+var_58] edi +
mov edi [esp+0ACh+var_80] +
shr eax 1Fh +
xor edx edx +
mov ecx ebx +
shld edi esi +
add esi esi +
add eax esi +
mov esi [esp+0ACh+var_5C] +
adc edx edi +
mov edi [esp+0ACh+var_58] +
xor ebx ebx +
add ecx esi +
adc ebx edi +
cmp edi ebx +
jb loc_444985  +
jbe loc_444D60  +
add eax 1 +
adc edx 0 +
mov esi ebx +
mov ebx ecx +
add ebx [esp+0ACh+var_6C] +
adc esi [esp+0ACh+var_68] +
cmp [esp+0ACh+var_68] esi +
jb loc_4449A5  +
ja loc_44499F  +
cmp [esp+0ACh+var_6C] ebx +
jbe loc_4449A5  +
add eax 1 +
adc edx 0 +
add eax [esp+0ACh+var_74] +
adc edx [esp+0ACh+var_70] +
cmp edx [esp+0ACh+var_70] +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jb loc_444CD0  +
ja loc_4449CF  +
mov eax [esp+0ACh+var_74] +
cmp [esp+0ACh+var_84] eax +
jb loc_444CD0  +
movzx ecx [esp+0ACh+var_4D] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_18] esi +
mov edi [esp+0ACh+var_60] +
mov byte ptr [esp+0ACh+var_14+1] cl +
mov [esp+0ACh+var_6C] eax +
mov [esp+0ACh+var_20] edx +
movzx edx [esp+0ACh+var_4F] +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_94] edi +
mov edi [esp+0ACh+var_6C] +
mov [esp+0ACh+var_1C] ebx +
mov byte ptr [esp+0ACh+var_14] dl +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_14] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A4] ebx +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+var_10] +
mov [esp+0ACh+var_98] eax +
lea eax [esp+0ACh+var_4C] +
call sub_4420B0  +
mov edi [esp+0ACh+var_48] +
mov ecx [esp+0ACh+var_40] +
mov edx [esp+0ACh+var_3C] +
mov eax [esp+0ACh+var_4C] +
mov [esp+0ACh+var_6C] edi +
mov [esp+0ACh+var_20] edi +
mov edi [esp+0ACh+var_44] +
xor ebx [esp+0ACh+var_44] +
mov [esp+0ACh+var_18] ecx +
xor ecx esi +
mov [esp+0ACh+var_14] edx +
shr dx 8 +
mov [esp+0ACh+var_1C] edi +
mov edi [esp+0ACh+var_38] +
or ecx ebx +
mov [esp+0ACh+var_24] eax +
mov [esp+0ACh+var_10] edi +
jz loc_444CF5  +
mov edx 1 +
mov byte ptr [esp+0ACh+var_14+1] dl +
mov eax [esp+0ACh+var_24] +
add ebp 1 +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [edx] eax +
mov eax [esp+0ACh+var_20] +
mov edi edx +
mov [edx+4] eax +
mov eax [esp+0ACh+var_1C] +
mov [edx+8] eax +
mov eax [esp+0ACh+var_18] +
mov [edx+0Ch] eax +
mov eax [esp+0ACh+var_14] +
mov ebx eax +
mov [edi+10h] eax +
mov eax [esp+0ACh+var_10] +
shr bx 8 +
or [esp+0ACh+var_4E] bl +
cmp ebp [esp+0ACh+var_7C] +
mov [edi+14h] eax +
jnz loc_444879  +
cmp [esp+0ACh+var_4E] 0 +
jz loc_444B3E  +
test [esp+0ACh+arg_C] 1000000h +
jz loc_444DD5  +
mov eax [esp+0ACh+arg_0] +
movzx ebx byte ptr [eax+10h] +
test bl bl +
jnz loc_444BEC  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+270h] 0 +
jnz loc_444D50  +
mov eax [esp+0ACh+arg_0] +
mov ebx [esp+0ACh+arg_0] +
cmp [esp+0ACh+var_60] 40h +
mov ecx [esp+0ACh+var_60] +
mov edx [eax+4] +
mov esi [ebx+8] +
mov eax [eax] +
mov edi [ebx+0Ch] +
ja loc_444D97  +
sub ecx 1 +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
and esi 1 +
xor esi 1 +
mov eax esi +
and eax 1 +
test al al +
jnz loc_444BEC  +
cmp [esp+0ACh+var_78] 0Ah +
jnz loc_444BE1  +
mov eax [esp+0ACh+arg_4] +
cmp byte ptr [eax+268h] 1 +
mov [esp+0ACh+var_A4] offset aIntegerConstan +
sbb eax eax +
not eax  +
and eax 2 +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] eax +
call sub_43CB30  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [eax+10h] 1 +
mov eax [esp+0ACh+arg_0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0ACh+var_64] +
movzx ecx bl +
xor ebx ebx +
mov esi edi +
imul esi edx +
mul  edi +
add edx esi +
add ecx eax +
mov eax [esp+0ACh+arg_0] +
adc ebx edx +
mov [eax+8] ecx +
mov [eax+0Ch] ebx +
jmp loc_44486C  +
and ch 1 +
jz loc_44484F  +
jmp loc_44488D  +
mov [esp+0ACh+var_5C] 1 +
mov [esp+0ACh+var_54] 3Fh +
movzx ecx byte ptr [esp+0ACh+var_54] +
mov edi [esp+0ACh+var_80] +
mov esi [esp+0ACh+var_84] +
shrd esi edi +
shr edi cl +
test cl 20h +
jz loc_444C61  +
mov esi edi +
xor edi edi +
mov ecx esi +
mov esi eax +
or ecx edi +
movzx ecx byte ptr [esp+0ACh+var_5C] +
mov edi edx +
setnz [esp+0ACh+var_4D]  +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_444C81  +
mov edi esi +
xor esi esi +
mov [esp+0ACh+var_6C] esi +
mov esi [esp+0ACh+var_84] +
mov [esp+0ACh+var_68] edi +
mov edi [esp+0ACh+var_80] +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_444C9F  +
mov edi esi +
xor esi esi +
movzx ecx byte ptr [esp+0ACh+var_54] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_444CB2  +
mov eax edx +
xor edx edx +
mov ecx esi +
or ecx eax +
mov eax edx +
or eax edi +
mov [esp+0ACh+var_74] ecx +
mov [esp+0ACh+var_70] eax +
mov ecx ebx +
xor eax eax +
xor ebx ebx +
xor edx edx +
jmp loc_444985  +
mov ecx 1 +
jmp loc_4449D4  +
mov [esp+0ACh+var_5C] 4 +
mov [esp+0ACh+var_54] 3Ch +
jmp loc_444C46  +
mov ecx [esp+0ACh+var_6C] +
mov ebx [esp+0ACh+var_84] +
mov esi [esp+0ACh+var_80] +
xor eax ebx +
xor ecx esi +
or ecx eax +
mov eax 1 +
cmovnz edx eax +
jmp loc_444AB4  +
add ebp 1 +
mov esi 0FFFFFFF9h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 8 +
mov [esp+0ACh+var_78] 8 +
jmp loc_4447DD  +
movzx eax byte ptr [ebp+0] +
sub eax 30h +
mov [edi+8] eax +
sar eax 1Fh +
mov [edi+0Ch] eax +
jmp loc_444BEC  +
cmp byte ptr [eax+8] 0 +
jnz loc_444BEC  +
jmp loc_444B65  +
cmp [esp+0ACh+var_5C] ecx +
jbe loc_444985  +
lea esi [esi+0] +
jmp loc_44497F  +
add ebp 2 +
mov esi 0FFFFFFF1h +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 10h +
mov [esp+0ACh+var_78] 10h +
jmp loc_4447DD  +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_444BA6  +
add ebp 2 +
mov esi 0FFFFFFFFh +
mov edi 0FFFFFFFFh +
mov [esp+0ACh+var_64] 2 +
mov [esp+0ACh+var_78] 2 +
jmp loc_4447DD  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A4] offset aIntegerConst_0 +
mov [esp+0ACh+var_A8] 2 +
mov [esp+0ACh+var_AC] eax +
call sub_43CB30  +
jmp loc_444BEC  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+238h] +
mov ebx [esi+23Ch] +
mov [esp+10h+var_10] eax +
sub ebx eax +
sar ebx 3 +
imul edx ebx +
lea edi [edx+edx*4+32h] +
shl edi 4 +
mov [esp+10h+var_C] edi +
call sub_452F50  +
add edi eax +
mov [esi+238h] eax +
lea eax [eax+ebx*8] +
mov [esi+23Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1CCh +
mov eax [esp+1CCh+arg_4] +
mov [esp+1CCh+var_EC] 0 +
mov [esp+1CCh+var_127] 1 +
mov [esp+1CCh+var_126] 0 +
mov [esp+1CCh+var_110] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_138] 0 +
mov ebp [eax+238h] +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+0E8h] 0 +
mov dword ptr [ebp+24h] 16h +
lea eax [esp+1CCh+var_EC] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
add [esp+1CCh+var_138] 1 +
mov [esp+1CCh+var_1CC] eax +
call sub_43B9F0  +
mov edi [esp+1CCh+var_EC] +
mov [esp+1CCh+var_150] edi +
movzx edx byte ptr [eax+4] +
mov [esp+1CCh+var_154] eax +
cmp dl 3Ch +
movzx eax dl +
ja loc_445DB2  +
jmp ds:off_4CF684[eax*4]  +
cmp [esp+1CCh+var_127] 0 +
jz loc_444F53  +
sub edx 25h +
cmp dl 17h +
mov [esp+1CCh+var_3C] 0 +
ja loc_446AF2  +
movzx edx dl +
jmp ds:off_4CF778[edx*4]  +
cmp [esp+1CCh+var_127] 0 +
jnz loc_446450  +
movzx edx ds:byte_4CF881[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_446390  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1BC] offset aMissingBinaryO +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
lea esi [esi+0] +
xor eax eax +
add esp 1CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1CCh+var_127] 0 +
jz loc_444F3E  +
mov [esp+1CCh+var_178] 1Bh +
mov [esp+1CCh+var_17C] 1Bh +
mov eax [esp+1CCh+var_178] +
movzx edx ds:byte_4CF881[eax+eax] +
test dl 1 +
jnz loc_44500E  +
mov eax [ebp+24h] +
mov edi eax +
jmp loc_4462BB  +
cmp [esp+1CCh+var_138] 1 +
setz [esp+1CCh+var_126]  +
movzx edx ds:byte_4CF881[eax+eax] +
mov [esp+1CCh+var_178] eax +
test dl 1 +
jz loc_446290  +
mov [esp+1CCh+var_17C] eax +
cmp [esp+1CCh+var_127] 0 +
jz loc_444F53  +
mov eax [ebp+24h] +
mov edi eax +
mov eax edi +
sub eax 1 +
cmp eax 1Bh +
ja loc_445DE6  +
cmp [esp+1CCh+var_17C] 14h +
jz loc_445190  +
mov eax [esp+1CCh+var_178] +
shr dl 1 +
and edx 1 +
movzx eax ds:byte_4CF880[eax+eax] +
mov [esp+1CCh+var_180] eax +
movzx eax ds:byte_4CF880[edi+edi] +
sub [esp+1CCh+var_180] edx +
cmp [esp+1CCh+var_180] eax +
jnb loc_445123  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+25Dh] 0 +
jz loc_445083  +
test ds:byte_4CF881[edi+edi] 4 +
jnz loc_446301  +
cmp edi 1Ch +
ja loc_445DE6  +
jmp ds:off_4CF7D8[edi*4]  +
mov eax [ebp+8] +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
xor ecx [ebp-14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
xor edx [ebp-18h] +
mov esi [ebp-20h] +
mov ebx [ebp-1Ch] +
mov [esp+1CCh+var_174] eax +
xor eax eax +
or ecx edx +
jz loc_446670  +
mov edx eax +
xor edx 1 +
cmp edi 18h +
cmovz eax edx +
movzx eax al +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] eax +
mov dword ptr [ebp-14h] 0 +
mov eax [ebp+20h] +
lea ebx [ebp-28h] +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
cmp byte ptr [ebp-0Fh] 0 +
jz loc_44510C  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jz loc_4463A2  +
mov edi [ebx+24h] +
mov ebp ebx +
movzx eax ds:byte_4CF880[edi+edi] +
cmp [esp+1CCh+var_180] eax +
jb loc_445065  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_445220  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingInExpre +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_444FA0  +
cmp [esp+1CCh+var_17C] 15h +
jnz loc_44747A  +
mov edx [ebp+8] +
mov [ebp-20h] edx +
mov edx [ebp+0Ch] +
mov [ebp-1Ch] edx +
mov edx [ebp+10h] +
mov [ebp-18h] edx +
mov edx [ebp+14h] +
mov [ebp-14h] edx +
mov edx [ebp+18h] +
mov [ebp-10h] edx +
mov edx [ebp+1Ch] +
mov [ebp-0Ch] edx +
mov edx [ebp+20h] +
mov [ebp-8] edx +
sub ebp 28h +
jz loc_444FA0  +
mov eax [esp+1CCh+var_178] +
sub eax 0Fh +
cmp eax 6 +
ja loc_445D48  +
jmp ds:off_4CF84C[eax*4]  +
mov eax [ebp-48h] +
lea ebx [ebp-50h] +
mov edx [ebp-44h] +
or eax [ebp-40h] +
or edx [ebp-3Ch] +
or edx eax +
jz loc_446465  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [ebp-20h] +
mov [ebp-48h] eax +
mov eax [ebp-1Ch] +
mov [ebp-44h] eax +
mov eax [ebp-18h] +
mov [ebp-40h] eax +
mov eax [ebp-14h] +
mov [ebp-3Ch] eax +
mov eax [ebp-10h] +
mov [ebp-38h] eax +
mov eax [ebp-0Ch] +
mov [ebp-34h] eax +
mov eax [ebp-8] +
mov [ebp-30h] eax +
cmp byte ptr [ebp-10h] 0 +
mov eax 1 +
jnz loc_445202  +
movzx eax byte ptr [ebp+18h] +
mov [ebp-38h] al +
jmp loc_44510C  +
mov eax [esp+1CCh+var_17C] +
sub eax 12h +
cmp eax 1 +
ja loc_447456  +
cmp [esp+1CCh+var_17C] 16h +
jnz loc_445190  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+0E8h] +
test eax eax +
jz loc_445258  +
cmp [esp+1CCh+var_126] 0 +
jz loc_447426  +
cmp [esp+1CCh+var_138] 3 +
jnz loc_447426  +
mov eax [esp+1CCh+arg_0] +
cmp [eax+238h] ebp +
jz loc_44773B  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov edx offset aElif +
mov eax offset aIf +
cmovz eax edx +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1BC] offset aUnbalancedStac +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
add esp 1CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jz loc_446494  +
mov eax [esp+1CCh+arg_0] +
xor edx edx +
sub dword ptr [eax+14h] 1 +
mov eax 1 +
mov [ebp-18h] eax +
mov eax [ebp+20h] +
mov [ebp-14h] edx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-10h] 0 +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_44510C  +
mov eax [ebp-20h] +
lea ebx [ebp-28h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_4464B0  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
xor eax eax +
xor edx edx +
jmp loc_4452E9  +
mov eax [ebp+8] +
movzx edx byte ptr [ebp+18h] +
cmp byte ptr [ebp-10h] 0 +
mov ebx [ebp+10h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+0Ch] +
mov esi [ebp-18h] +
mov ecx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_16C] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_164] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_15C] eax +
mov eax 1 +
cmovz eax edx +
cmp edi 9 +
jz loc_446651  +
cmp edi 0Ah +
jz loc_4470C0  +
xor ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
xor ecx [esp+1CCh+var_16C] +
xor edx [esp+1CCh+var_164] +
xor esi [esp+1CCh+var_174] +
mov [ebp-10h] al +
mov eax [ebp+20h] +
mov [ebp-18h] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] edx +
mov [ebp-1Ch] esi +
mov [ebp-14h] ecx +
mov byte ptr [ebp-0Fh] 0 +
mov [ebp-8] eax +
jmp loc_4450F4  +
mov eax [ebp+10h] +
cmp edi 1Bh +
mov edx [ebp+10h] +
mov ecx [ebp+14h] +
mov esi [ebp+8] +
mov [esp+1CCh+var_C4] eax +
mov eax [ebp+14h] +
mov ebx [ebp+0Ch] +
mov [esp+1CCh+var_18C] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_188] ecx +
movzx ecx byte ptr [ebp+19h] +
mov [esp+1CCh+var_C0] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_BC] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_B8] eax +
jz loc_446FC5  +
cmp edi 1Ch +
jz loc_446ED2  +
cmp edi 0Eh +
jz loc_446B10  +
mov eax [esp+1CCh+var_18C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_188] 0 +
or esi eax +
xor eax eax +
or ebx edx +
or esi ebx +
setz al  +
xor ecx ecx +
mov [esp+1CCh+var_18C] eax +
xor edx edx +
xor esi esi +
xor ebx ebx +
mov [ebp-20h] esi +
mov edi [esp+1CCh+var_188] +
mov esi [esp+1CCh+var_18C] +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-14h] edi +
mov [ebp-18h] esi +
mov [ebp-10h] dl +
mov [ebp-0Fh] cl +
mov [ebp-8] eax +
jmp loc_4450F4  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
movzx ebx byte ptr [ebp-10h] +
mov esi [ebp+20h] +
mov [esp+1CCh+var_6C] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_170] edx +
mov edx [ebp-14h] +
test bl bl +
mov [esp+1CCh+var_68] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_64] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_60] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_5C] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_58] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_16C] eax +
movzx eax byte ptr [ebp-0Fh] +
mov byte ptr [esp+1CCh+var_14C] al +
mov eax [ebp+8] +
mov [esp+1CCh+var_54] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_50] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_4C] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_48] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_44] eax +
mov eax [ebp+1Ch] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_40] eax +
mov eax [ebp+8] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp+18h] +
jnz loc_445E10  +
test al al +
jnz loc_445E10  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+294h] +
cmp eax 40h +
mov [esp+1CCh+var_15C] eax +
jbe loc_446D75  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_170] +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_174] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_44558B  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jz loc_446DA9  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_446D50  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_4455CA  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx ecx byte ptr [esp+1CCh+var_130] +
test al al +
mov byte ptr [esp+1CCh+var_12C] 0 +
mov [esp+1CCh+var_125] cl +
jnz loc_445E39  +
mov edx [esp+1CCh+var_18C] +
mov eax ecx +
mov ecx [esp+1CCh+var_188] +
xor eax 1 +
mov [esp+1CCh+var_125] al +
mov byte ptr [esp+1CCh+var_44] 0 +
mov eax edx +
mov [esp+1CCh+var_50] ecx +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_48] ecx +
mov ecx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_18C] edx +
mov [esp+1CCh+var_4C] edx +
mov [esp+1CCh+var_1B4] ecx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_54] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_50] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_50] +
mov [esp+1CCh+var_4C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_48] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_48] +
mov [esp+1CCh+var_44] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_40] eax +
mov eax [esp+1CCh+var_54] +
mov ecx edx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_4C] +
mov [esp+1CCh+var_164] eax +
mov eax [esp+1CCh+var_18C] +
or ecx eax +
jnz loc_445E4B  +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
mov ecx edx +
or ecx eax +
jz loc_446682  +
cmp [esp+1CCh+var_15C] 40h +
mov eax [esp+1CCh+var_15C] +
jbe loc_44721F  +
lea ecx [eax-41h] +
sub eax 1 +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_164] +
xor eax eax +
xor edx edx +
mov esi [esp+1CCh+var_160] +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
and ebx eax +
and esi edx +
or esi ebx +
jnz loc_445799  +
mov [esp+1CCh+var_13C] ebp +
mov ebp [esp+1CCh+var_160] +
mov [esp+1CCh+var_134] edi +
mov edi [esp+1CCh+var_164] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_445776  +
mov ebp [esp+1CCh+var_13C] +
mov edi [esp+1CCh+var_134] +
mov eax [esp+1CCh+var_114] +
sub eax ecx +
mov ecx eax +
jmp loc_445ED9  +
mov [esp+1CCh+var_19C] edi +
mov eax [ebp+8] +
lea ebx [ebp-28h] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1B4] eax +
mov eax [ebp+0Ch] +
mov [esp+1CCh+var_1B0] eax +
mov eax [ebp+10h] +
mov [esp+1CCh+var_1AC] eax +
mov eax [ebp+14h] +
mov [esp+1CCh+var_1A8] eax +
mov eax [ebp+18h] +
mov [esp+1CCh+var_1A4] eax +
mov eax [ebp+1Ch] +
mov [esp+1CCh+var_1A0] eax +
mov eax [ebx+8] +
mov [esp+1CCh+var_1CC] eax +
mov eax [ebx+0Ch] +
mov [esp+1CCh+var_1C8] eax +
mov eax [ebx+10h] +
mov [esp+1CCh+var_1C4] eax +
mov eax [ebx+14h] +
mov [esp+1CCh+var_1C0] eax +
mov eax [ebx+18h] +
mov [esp+1CCh+var_1BC] eax +
mov eax [ebx+1Ch] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442A10  +
mov eax [esp+1CCh+var_10C] +
mov [ebx+8] eax +
mov eax [esp+1CCh+var_108] +
mov [ebx+0Ch] eax +
mov eax [esp+1CCh+var_104] +
mov [ebx+10h] eax +
mov eax [esp+1CCh+var_100] +
mov [ebx+14h] eax +
mov eax [esp+1CCh+var_FC] +
mov [ebx+18h] eax +
mov eax [esp+1CCh+var_F8] +
mov [ebx+1Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_4450F4  +
mov eax [esp+1CCh+arg_0] +
mov edx [ebp-1Ch] +
mov eax [eax+294h] +
mov [esp+1CCh+var_188] edx +
mov edx [ebp-14h] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_160] edx +
mov edx [ebp+8] +
mov [esp+1CCh+var_B4] eax +
mov eax [ebp-1Ch] +
mov [esp+1CCh+var_9C] edx +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_B0] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_98] edx +
mov edx [ebp+10h] +
mov [esp+1CCh+var_AC] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_94] edx +
mov edx [ebp+14h] +
mov [esp+1CCh+var_A8] eax +
mov eax [ebp-10h] +
mov [esp+1CCh+var_90] edx +
mov edx [ebp+18h] +
mov [esp+1CCh+var_A4] eax +
mov eax [ebp-0Ch] +
mov [esp+1CCh+var_A0] eax +
mov eax [ebp-20h] +
mov [esp+1CCh+var_18C] eax +
mov eax [ebp-18h] +
mov [esp+1CCh+var_164] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_8C] edx +
mov edx [ebp+1Ch] +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test al al +
mov [esp+1CCh+var_88] edx +
movzx edx byte ptr [ebp+18h] +
mov [esp+1CCh+var_15C] esi +
mov esi [ebp+10h] +
mov [esp+1CCh+var_158] edi +
mov edi [ebp+14h] +
jnz loc_445931  +
test dl dl +
jz loc_4466D3  +
mov byte ptr [esp+1CCh+var_14C] 1 +
mov byte ptr [esp+1CCh+var_134] 1 +
mov byte ptr [esp+1CCh+var_13C] 0 +
mov edx [esp+1CCh+var_188] +
xor ebx ebx +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_445968  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_158] +
mov ebx eax +
or ebx edx +
setnz bl  +
mov edx [esp+1CCh+var_164] +
lea eax [esp+1CCh+var_84] +
mov ecx [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] edi +
call sub_442920  +
mov eax [esp+1CCh+var_84] +
mov edx [esp+1CCh+var_80] +
mov ecx [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C8] edi +
lea edi [esp+1CCh+var_24] +
mov [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_168] edx +
mov edx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_12C] ecx +
mov ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_130] eax +
mov eax edi +
call sub_442920  +
mov eax [esp+1CCh+var_20] +
mov edx 1 +
or eax [esp+1CCh+var_24] +
mov eax [esp+1CCh+var_15C] +
mov ecx [esp+1CCh+var_160] +
cmovnz ebx edx +
mov edx [esp+1CCh+var_158] +
mov esi [esp+1CCh+var_1C] +
mov [esp+1CCh+var_1CC] eax +
lea eax [esp+1CCh+var_24] +
mov edi [esp+1CCh+var_18] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_164] +
call sub_442920  +
mov eax [esp+1CCh+var_1C] +
add [esp+1CCh+var_16C] eax +
mov eax [esp+1CCh+var_20] +
mov edx [esp+1CCh+var_18] +
adc [esp+1CCh+var_168] edx +
add [esp+1CCh+var_16C] esi +
adc [esp+1CCh+var_168] edi +
mov edi eax +
or edi [esp+1CCh+var_24] +
mov edi 1 +
mov esi [esp+1CCh+var_16C] +
cmovnz ebx edi +
mov edi [esp+1CCh+var_168] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_80] edi +
mov eax [esp+1CCh+var_80] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1B4] edi +
lea edi [esp+1CCh+var_10C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
mov eax edi +
call sub_4420B0  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_12C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
xor ecx [esp+1CCh+var_188] +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_130] +
xor eax [esp+1CCh+var_18C] +
or eax ecx +
jz loc_446632  +
mov ebx 1 +
cmp byte ptr [esp+1CCh+var_13C] 0 +
jnz loc_446560  +
xor edx edx +
cmp byte ptr [esp+1CCh+var_134] 0 +
jnz loc_445BCD  +
test bl bl +
mov eax 1 +
jnz loc_445BCB  +
cmp [esp+1CCh+var_174] 40h +
mov ecx [esp+1CCh+var_174] +
ja loc_446AE6  +
mov eax [esp+1CCh+var_18C] +
sub ecx 1 +
mov edx [esp+1CCh+var_188] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ecx eax +
xor eax eax +
and ecx 1 +
xor ecx 1 +
mov ebx ecx +
movzx ecx byte ptr [esp+1CCh+var_13C] +
and ebx 1 +
xor ecx 1 +
cmp cl bl +
jz loc_445BCB  +
mov eax [esp+1CCh+var_18C] +
mov ebx esi +
mov ecx edi +
mov edx [esp+1CCh+var_188] +
or ebx eax +
or ecx edx +
or ebx ecx +
setnz al  +
mov edx eax +
movzx eax byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] esi +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_80] edi +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_74+1] dl +
mov byte ptr [esp+1CCh+var_74] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_78] ebx +
lea ebx [ebp-28h] +
mov [esp+1CCh+var_84] esi +
mov [esp+1CCh+var_7C] ecx +
mov [ebp-20h] eax +
mov eax [esp+1CCh+var_80] +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
mov eax [esp+1CCh+var_78] +
mov [ebp-14h] eax +
mov eax [esp+1CCh+var_74] +
mov [ebp-10h] eax +
mov eax [esp+1CCh+var_70] +
mov [ebp-0Ch] eax +
mov eax [ebp+20h] +
mov [ebp-8] eax +
jmp loc_4450F4  +
mov eax [ebp+10h] +
mov ebx [ebp-20h] +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+1CCh+var_174] eax +
mov eax [ebp-14h] +
mov [esp+1CCh+var_16C] ebx +
mov ebx [ebp-1Ch] +
mov esi [ebp+14h] +
mov [esp+1CCh+var_15C] ecx +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_164] ebx +
mov ebx [ebp-18h] +
mov [esp+1CCh+var_13C] edx +
mov eax [eax+294h] +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [ebp+18h] +
mov [esp+1CCh+var_1C0] ecx +
mov ecx [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1BC] edx +
mov edx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1B4] esi +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B8] eax +
movzx eax byte ptr [ebp-10h] +
mov [esp+1CCh+var_1CC] ebx +
mov [esp+1CCh+var_1C8] ecx +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
call sub_443A20  +
cmp edi 19h +
jz loc_446513  +
cmp edi 3 +
jz loc_446510  +
cmp edi 2 +
jz loc_4470E0  +
xor ecx ecx +
test al al +
mov edx 1 +
jz loc_445D0A  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
jz loc_4474C5  +
xor edx edx +
xor ecx ecx +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-18h] edx +
mov [ebp-14h] ecx +
jmp loc_4450E3  +
cmp dword ptr [ebp+24h] 11h +
jnz loc_44760D  +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
or eax [ebp-18h] +
or edx [ebp-14h] +
or edx eax +
jnz loc_445D90  +
mov eax [esp+1CCh+arg_0] +
sub dword ptr [eax+14h] 1 +
mov eax [esp+1CCh+arg_0] +
add ebp 28h +
cmp ebp [eax+23Ch] +
jz loc_447013  +
mov eax [esp+1CCh+var_17C] +
mov [esp+1CCh+var_127] 1 +
mov [ebp+24h] eax +
mov eax [esp+1CCh+var_154] +
mov [ebp+0] eax +
mov eax [esp+1CCh+var_150] +
mov [ebp+20h] eax +
jmp loc_444EB3  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_445D48  +
mov eax [esp+1CCh+arg_0] +
add dword ptr [eax+14h] 1 +
jmp loc_445D48  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
or eax [ebp+10h] +
or edx [ebp+14h] +
or edx eax +
jz loc_445D90  +
jmp loc_445D48  +
lea edx [eax-1] +
cmp edx 19h +
jbe loc_444FF5  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1BC] offset aTokenSIsNotVal +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444F76  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] edi +
mov [esp+1CCh+var_1C4] offset aImpossibleOper +
mov [esp+1CCh+var_1C8] 4 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_444FA0  +
mov eax [esp+1CCh+arg_0] +
mov byte ptr [esp+1CCh+var_12C] 1 +
mov byte ptr [esp+1CCh+var_130] 0 +
mov [esp+1CCh+var_125] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_15C] eax +
mov edx [esp+1CCh+var_188] +
mov eax [esp+1CCh+var_18C] +
mov ecx edx +
or ecx eax +
jz loc_445711  +
mov eax [esp+1CCh+var_15C] +
xor edx edx +
mov ebx [esp+1CCh+var_18C] +
lea esi [eax-1] +
lea ecx [eax-41h] +
xor eax eax +
mov [esp+1CCh+var_13C] esi +
mov esi [esp+1CCh+var_188] +
test cl 20h +
setnz dl  +
setz al  +
shl edx cl +
shl eax cl +
mov ecx ebx +
and esi edx +
and ecx eax +
mov ebx esi +
or ebx ecx +
jnz loc_447510  +
mov [esp+1CCh+var_134] ebp +
mov ecx [esp+1CCh+var_13C] +
mov [esp+1CCh+var_124] edi +
mov ebp [esp+1CCh+var_188] +
mov edi [esp+1CCh+var_18C] +
shrd eax edx +
mov ebx edi +
shr edx 1 +
mov esi ebp +
and ebx eax +
and esi edx +
sub ecx 1 +
or esi ebx +
jz loc_445EA2  +
mov eax [esp+1CCh+var_13C] +
mov ebp [esp+1CCh+var_134] +
mov edi [esp+1CCh+var_124] +
mov esi eax +
sub esi ecx +
mov ecx esi +
mov [esp+1CCh+var_114] eax +
mov ebx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_44] 1 +
mov [esp+1CCh+var_1B0] ecx +
mov eax ebx +
mov [esp+1CCh+var_50] esi +
mov esi [esp+1CCh+var_160] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_50] +
mov [esp+1CCh+var_54] ebx +
mov ebx [esp+1CCh+var_164] +
mov [esp+1CCh+var_164] ecx +
mov [esp+1CCh+var_48] esi +
mov esi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_48] +
mov [esp+1CCh+var_4C] ebx +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_44] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_40] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_24] +
call sub_4425C0  +
mov eax [esp+1CCh+var_1C] +
mov ebx [esp+1CCh+var_24] +
mov esi [esp+1CCh+var_20] +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_18C] eax +
movzx eax byte ptr [esp+1CCh+var_14] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_124] ebp +
mov [esp+1CCh+var_120] edi +
mov edi esi +
mov esi ebx +
mov byte ptr [esp+1CCh+var_13C] al +
mov eax 1 +
mov ebx ecx +
mov [esp+1CCh+var_188] edx +
mov ebp eax +
mov [esp+1CCh+var_164] 0 +
mov [esp+1CCh+var_160] 0 +
mov [esp+1CCh+var_11C] 0 +
mov [esp+1CCh+var_118] 0 +
jmp loc_446006  +
test ebx ebx +
jz loc_446226  +
mov edx [esp+1CCh+var_188] +
mov ecx esi +
sub ebx 1 +
mov eax [esp+1CCh+var_18C] +
shl ecx 1Fh +
shrd esi edi +
shr edi 1 +
shrd eax edx +
shr edx 1 +
or ecx edx +
mov [esp+1CCh+var_18C] eax +
mov [esp+1CCh+var_188] ecx +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_188] +
mov [esp+1CCh+var_1C0] esi +
mov [esp+1CCh+var_1BC] edi +
mov [esp+1CCh+var_1AC] eax +
movzx eax byte ptr [esp+1CCh+var_13C] +
mov [esp+1CCh+var_1B4] edx +
mov edx [esp+1CCh+var_168] +
mov byte ptr [esp+1CCh+var_1B0] al +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C8] edx +
mov edx [esp+1CCh+var_170] +
mov [esp+1CCh+var_1B8] eax +
mov eax ebp +
mov byte ptr [esp+1CCh+var_1C4] al +
mov eax [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_174] +
call sub_443A20  +
test al al +
jz loc_445FD8  +
mov edx [esp+1CCh+var_170] +
mov ecx [esp+1CCh+var_168] +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_68] edx +
mov edx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_60] ecx +
mov ecx ebp +
mov ebp [esp+1CCh+var_20] +
mov byte ptr [esp+1CCh+var_5C] cl +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_174] eax +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_64] edx +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B0] ebp +
mov [esp+1CCh+var_18] edx +
mov ecx [esp+1CCh+var_18] +
mov edx [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C] eax +
mov [esp+1CCh+var_1AC] eax +
mov [esp+1CCh+var_1A8] ecx +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_19C] 5 +
mov [esp+1CCh+var_1A4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B4] esi +
mov [esp+1CCh+var_1A0] ecx +
mov [esp+1CCh+var_1C8] edx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442A10  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_58] edx +
mov edx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] edx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ecx +
mov edx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ecx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] edx +
mov [esp+1CCh+var_5C] eax +
mov ebp eax +
shr ax 8 +
cmp ebx 3Fh +
mov [esp+1CCh+var_168] ecx +
mov [esp+1CCh+var_14C] ax +
ja loc_447A1C  +
mov ecx ebx +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_164] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_160] +
or ecx edx +
mov edx [esp+1CCh+var_134] +
test ebx ebx +
mov [esp+1CCh+var_160] ecx +
mov [esp+1CCh+var_164] edx +
jnz loc_445FE0  +
mov edi [esp+1CCh+var_120] +
mov ebp [esp+1CCh+var_124] +
cmp edi 7 +
jz loc_447022  +
xor esi esi +
movzx ecx byte ptr [esp+1CCh+var_12C] +
cmp byte ptr [esp+1CCh+var_130] 0 +
jnz loc_447110  +
mov edi ecx +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov [ebp-18h] eax +
mov eax edi +
mov [ebp-10h] al +
mov eax esi +
mov [ebp-0Fh] al +
mov eax [ebp+20h] +
mov [ebp-1Ch] ebx +
lea ebx [ebp-28h] +
mov [ebp-20h] ecx +
mov [ebp-14h] edx +
mov [ebp-8] eax +
jmp loc_4450F4  +
cmp [esp+1CCh+var_127] 0 +
jz loc_446390  +
cmp eax 15h +
jz loc_446520  +
mov eax [esp+1CCh+var_178] +
cmp eax 16h +
jz loc_446540  +
mov edi [ebp+24h] +
mov [esp+1CCh+var_17C] eax +
mov eax edi +
and eax 0FFFFFFFDh +
cmp eax 14h +
jnz loc_4475D4  +
mov eax [esp+1CCh+var_17C] +
sub eax 15h +
cmp eax 1 +
jbe loc_445021  +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1BC] offset aOperatorSHasNo +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444F76  +
movzx eax byte ptr [ebp+18h] +
cmp al [ebp-10h] +
jz loc_445083  +
test al al +
mov eax [esp+1CCh+arg_0] +
mov ecx [eax+294h] +
jz loc_4463C0  +
cmp ecx 40h +
mov ebx [ebp-20h] +
mov esi [ebp-1Ch] +
mov eax [ebp-18h] +
mov edx [ebp-14h] +
jbe loc_4464F0  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_445083  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov edx [ebp-8] +
mov [esp+1CCh+var_1BC] offset aTheLeftOperand +
mov [esp+1CCh+var_1B8] eax +
jmp loc_446421  +
mov eax [ebp+24h] +
mov edi eax +
mov eax [esp+1CCh+var_178] +
mov [esp+1CCh+var_17C] eax +
jmp loc_445021  +
mov [esp+1CCh+var_1C4] offset aIntegerOverflo +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_44510C  +
cmp ecx 40h +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
jbe loc_4464D0  +
sub ecx 41h +
mov eax ebx +
mov edx esi +
shrd eax esi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
mov ebx eax +
and ebx 1 +
xor ebx 1 +
mov eax ebx +
and eax 1 +
test al al +
jnz loc_445083  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov edx [ebp+20h] +
mov [esp+1CCh+var_1BC] offset aTheRightOperan +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] edx +
mov [esp+1CCh+var_1C8] 0 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
mov edi [ebp+24h] +
jmp loc_445083  +
mov [esp+1CCh+var_178] 1Ch +
mov [esp+1CCh+var_17C] 1Ch +
jmp loc_444FCA  +
mov eax [ebp+8] +
mov [ebp-48h] eax +
mov eax [ebp+0Ch] +
mov [ebp-44h] eax +
mov eax [ebp+10h] +
mov [ebp-40h] eax +
mov eax [ebp+14h] +
mov [ebp-3Ch] eax +
mov eax [ebp+18h] +
mov [ebp-38h] eax +
mov eax [ebp+1Ch] +
mov [ebp-34h] eax +
mov eax [ebp+20h] +
mov [ebp-30h] eax +
jmp loc_4451F3  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or edx [ebp+10h] +
or eax [ebp+14h] +
or edx eax +
setnz al  +
xor edx edx +
movzx eax al +
jmp loc_4452E9  +
mov ecx [ebp+8] +
xor edx edx +
mov eax 1 +
mov esi [ebp+0Ch] +
or ecx [ebp+10h] +
or esi [ebp+14h] +
or esi ecx +
jnz loc_4452E9  +
jmp loc_445332  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4463F4  +
sub ecx 1 +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_446357  +
xor eax 1 +
movzx eax al +
xor ecx ecx +
mov edx eax +
jmp loc_445D0A  +
mov eax [ebp+24h] +
cmp eax 14h +
mov edi eax +
jz loc_447860  +
mov [esp+1CCh+var_17C] 15h +
jmp loc_4462BB  +
mov eax [ebp+24h] +
cmp eax 16h +
mov edi eax +
jz loc_44786D  +
mov [esp+1CCh+var_17C] 16h +
jmp loc_4462BB  +
mov eax [esp+1CCh+var_174] +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_84] +
mov [esp+1CCh+var_1CC] eax +
mov eax [esp+1CCh+var_80] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_78] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_74] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_70] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_84] eax +
mov eax [esp+1CCh+var_108] +
mov esi [esp+1CCh+var_84] +
mov [esp+1CCh+var_80] eax +
mov eax [esp+1CCh+var_104] +
mov edi [esp+1CCh+var_80] +
mov [esp+1CCh+var_7C] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_78] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_78] +
mov [esp+1CCh+var_74] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_70] eax +
mov eax [esp+1CCh+var_7C] +
mov [esp+1CCh+var_18C] eax +
jmp loc_445B5E  +
mov ecx [esp+1CCh+var_168] +
mov edx [esp+1CCh+var_16C] +
mov eax ecx +
mov ecx edx +
xor eax edi +
xor ecx esi +
or eax ecx +
mov eax 1 +
cmovnz ebx eax +
jmp loc_445B50  +
and ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
and ecx [esp+1CCh+var_16C] +
and edx [esp+1CCh+var_164] +
and esi [esp+1CCh+var_174] +
jmp loc_44539C  +
xor esi [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
or esi ebx +
setz al  +
jmp loc_4450BD  +
mov eax [esp+1CCh+arg_0] +
mov edx [eax+14h] +
test edx edx +
jnz loc_4466B4  +
mov [esp+1CCh+var_1BC] offset aDivisionByZero +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
mov edi ebx +
movzx esi byte ptr [esp+1CCh+var_14C] +
mov eax [esp+1CCh+var_16C] +
mov edx [esp+1CCh+var_168] +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
jmp loc_446267  +
cmp [esp+1CCh+var_174] 40h +
jbe loc_446C10  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-41h] +
mov eax [esp+1CCh+var_18C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jz loc_446C43  +
cmp [esp+1CCh+var_174] 40h +
mov eax [esp+1CCh+var_174] +
jbe loc_446BF0  +
lea ecx [eax-41h] +
mov edx [esp+1CCh+var_158] +
mov eax [esp+1CCh+var_15C] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_14C] 0 +
mov byte ptr [esp+1CCh+var_134] 0 +
jnz loc_445949  +
mov [esp+1CCh+var_90] edi +
mov eax [esp+1CCh+var_90] +
mov ebx [esp+1CCh+var_158] +
mov byte ptr [esp+1CCh+var_8C] 0 +
mov ecx [esp+1CCh+var_15C] +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_8C] +
mov [esp+1CCh+var_98] ebx +
mov edx [esp+1CCh+var_98] +
xor byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_88] +
mov [esp+1CCh+var_94] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] ecx +
mov [esp+1CCh+var_1CC] ecx +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_9C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_98] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_98] +
mov [esp+1CCh+var_94] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_158] edx +
mov esi [esp+1CCh+var_94] +
mov [esp+1CCh+var_90] eax +
mov eax [esp+1CCh+var_FC] +
mov edi [esp+1CCh+var_90] +
mov [esp+1CCh+var_8C] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_88] eax +
mov eax [esp+1CCh+var_9C] +
mov [esp+1CCh+var_15C] eax +
movzx eax byte ptr [esp+1CCh+var_134] +
mov byte ptr [esp+1CCh+var_14C] al +
jmp loc_445949  +
lea eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_1C0] eax +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_434800  +
mov esi [esp+1CCh+var_3C] +
xor edx edx +
test esi esi +
mov ecx eax +
jnz loc_447283  +
test ecx ecx +
js loc_447626  +
xor ebx ebx +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_446A21  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C4] 0 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_443D60  +
test eax 1000000h +
mov [esp+1CCh+var_E8] eax +
jnz loc_4474E5  +
mov edx eax +
and edx 0Fh +
cmp edx 1 +
jz loc_4474AF  +
cmp edx 2 +
jnz loc_446933  +
mov [esp+1CCh+var_1BC] offset aFloatingConsta +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
mov edi [esp+1CCh+var_3C] +
test edi edi +
setnz bl  +
jmp loc_4469C9  +
mov eax [esp+1CCh+var_154] +
mov edi [esp+1CCh+arg_0] +
mov eax [eax+8] +
cmp eax [edi+2ACh] +
jz loc_447751  +
mov edi [esp+1CCh+arg_0] +
cmp eax [edi+2BCh] +
jz loc_4475FB  +
mov edi [esp+1CCh+arg_0] +
mov ecx 1 +
cmp eax [edi+2C0h] +
jz loc_4475FD  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+248h] 0 +
jz loc_4469B3  +
mov edx [edi+2B0h] +
cmp eax edx +
jz loc_44743C  +
cmp eax [edi+2B4h] +
jz loc_44743C  +
mov edi [esp+1CCh+arg_0] +
cmp byte ptr [edi+265h] 0 +
jnz loc_447296  +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor eax eax +
xor edx edx +
xor esi esi +
xor edi edi +
jmp loc_446A21  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+0Ah] 0 +
jz loc_44722E  +
lea eax [esp+1CCh+var_E8] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_437E60  +
mov edi [esp+1CCh+var_3C] +
xor edx edx +
mov eax [esp+1CCh+var_E8] +
mov byte ptr [esp+1CCh+var_18C] 0 +
test edi edi +
setnz bl  +
xor esi esi +
xor edi edi +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_14] bl +
mov [esp+1CCh+var_24] esi +
mov [esp+1CCh+var_1C] eax +
mov byte ptr [esp+1CCh+var_14+1] cl +
mov ecx [esp+1CCh+var_14] +
mov [esp+1CCh+var_18] edx +
mov [esp+1CCh+var_20] edi +
mov [esp+1CCh+var_D4] ecx +
mov ecx [esp+1CCh+var_10] +
mov [esp+1CCh+var_D0] ecx +
movzx ecx byte ptr [esp+1CCh+var_18C] +
mov [esp+1CCh+var_18C] eax +
mov eax edx +
mov edx esi +
mov esi edi +
mov [esp+1CCh+var_E0] esi +
mov esi [esp+1CCh+var_18C] +
mov edi edx +
mov [esp+1CCh+var_D8] eax +
mov eax [esp+1CCh+var_E0] +
mov byte ptr [esp+1CCh+var_D4] bl +
mov byte ptr [esp+1CCh+var_D4+1] cl +
mov [esp+1CCh+var_E4] edx +
mov [ebp+0Ch] eax +
mov eax [esp+1CCh+var_D8] +
mov [esp+1CCh+var_DC] esi +
mov [ebp+8] edi +
mov [ebp+10h] esi +
mov [ebp+14h] eax +
mov eax [esp+1CCh+var_D4] +
mov [esp+1CCh+var_127] 0 +
mov [ebp+18h] eax +
mov eax [esp+1CCh+var_D0] +
mov [ebp+1Ch] eax +
jmp loc_444EB3  +
sub ecx 41h +
mov eax esi +
mov edx edi +
jmp loc_445B8D  +
mov [esp+1CCh+var_1C4] offset aEval_token +
mov [esp+1CCh+var_1C8] 4A2h +
mov [esp+1CCh+var_1CC] offset a____GccLibcp_1 +
call sub_424560  +
nop   +
mov edi [esp+1CCh+arg_0] +
not ebx  +
not esi  +
mov [esp+1CCh+var_174] ebx +
mov ebx [esp+1CCh+var_188] +
mov [esp+1CCh+var_16C] ebp +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov edx [esp+1CCh+var_BC] +
not ebx  +
mov [esp+1CCh+var_1CC] esi +
mov esi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1C0] ebx +
mov ebp edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1B4] ebp +
mov [esp+1CCh+var_1C8] esi +
mov [esp+1CCh+var_1BC] edx +
not edi  +
mov [esp+1CCh+var_1C4] edi +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4420B0  +
mov eax [esp+1CCh+var_104] +
xor ecx ecx +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov edx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov edi [esp+1CCh+var_C4] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov ebp [esp+1CCh+var_C0] +
mov [esp+1CCh+var_BC] edx +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_B8] eax +
mov [esp+1CCh+var_188] ebp +
mov ebp [esp+1CCh+var_16C] +
jmp loc_445454  +
lea ecx [eax-1] +
mov edx edi +
mov eax esi +
shrd eax edi +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_44673F  +
mov eax [esp+1CCh+var_174] +
mov edx [esp+1CCh+var_160] +
mov byte ptr [esp+1CCh+var_13C] 0 +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
jnz loc_446711  +
mov ebx [esp+1CCh+var_188] +
mov ecx [esp+1CCh+var_18C] +
mov byte ptr [esp+1CCh+var_A4] 0 +
mov [esp+1CCh+var_B0] ebx +
mov ebx [esp+1CCh+var_160] +
mov edx ecx +
mov [esp+1CCh+var_B4] ecx +
mov ecx [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_A8] ebx +
mov eax [esp+1CCh+var_A8] +
mov ebx [esp+1CCh+var_174] +
mov [esp+1CCh+var_AC] ecx +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_A4] +
mov [esp+1CCh+var_1B4] ebx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_A0] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov byte ptr [esp+1CCh+var_13C] 1 +
mov [esp+1CCh+var_B4] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_B0] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_B0] +
mov [esp+1CCh+var_AC] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_188] edx +
mov [esp+1CCh+var_A8] eax +
mov eax [esp+1CCh+var_FC] +
mov edx [esp+1CCh+var_A8] +
mov [esp+1CCh+var_A4] eax +
mov eax [esp+1CCh+var_F8] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_A0] eax +
mov eax [esp+1CCh+var_B4] +
mov [esp+1CCh+var_18C] eax +
mov eax [esp+1CCh+var_AC] +
mov [esp+1CCh+var_164] eax +
jmp loc_446711  +
lea ecx [eax-1] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_446D67  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_4455D3  +
mov eax [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_168] +
lea ecx [eax-1] +
mov eax [esp+1CCh+var_16C] +
shrd eax edx +
shr edx cl +
test cl 20h +
jz loc_446D90  +
mov eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
test al al +
mov byte ptr [esp+1CCh+var_130] 0 +
jnz loc_4455A4  +
mov ecx [esp+1CCh+var_174] +
mov ebx [esp+1CCh+var_170] +
mov byte ptr [esp+1CCh+var_5C] 0 +
mov edx ecx +
mov [esp+1CCh+var_6C] ecx +
mov ecx [esp+1CCh+var_16C] +
mov [esp+1CCh+var_68] ebx +
mov ebx [esp+1CCh+var_168] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov eax ecx +
mov [esp+1CCh+var_60] ebx +
mov ebx [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] ecx +
movzx ecx byte ptr [esp+1CCh+var_14C] +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+var_60] +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1B4] ebx +
mov byte ptr [esp+1CCh+var_5C+1] cl +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov edx [esp+1CCh+var_F8] +
mov byte ptr [esp+1CCh+var_130] 1 +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov ecx [esp+1CCh+var_6C] +
mov [esp+1CCh+var_58] edx +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov ebx [esp+1CCh+var_68] +
mov [esp+1CCh+var_174] ecx +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] ebx +
mov ecx [esp+1CCh+var_64] +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_FC] +
mov ebx [esp+1CCh+var_60] +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_5C] eax +
mov [esp+1CCh+var_168] ebx +
mov ebx eax +
shr ax 8 +
mov [esp+1CCh+var_14C] ax +
jmp loc_4455A4  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_16C] ebp +
mov ebp [esp+1CCh+var_188] +
mov byte ptr [esp+1CCh+var_BC] dl +
mov byte ptr [esp+1CCh+var_BC+1] cl +
mov edi [edi+294h] +
mov [esp+1CCh+var_C0] ebp +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_1CC] esi +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_174] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C0] edx +
mov edx [esp+1CCh+var_BC] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
mov [esp+1CCh+var_18C] edi +
mov [esp+1CCh+var_C4] edi +
mov edi [esp+1CCh+var_174] +
mov [esp+1CCh+var_1BC] edx +
mov [esp+1CCh+var_1B4] edi +
mov edi [esp+1CCh+var_18C] +
mov [esp+1CCh+var_1C4] edi +
call sub_442160  +
mov eax [esp+1CCh+var_104] +
mov ecx [esp+1CCh+var_FC] +
mov esi [esp+1CCh+var_10C] +
mov ebx [esp+1CCh+var_108] +
mov [esp+1CCh+var_C4] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_BC] ecx +
mov ebp [esp+1CCh+var_16C] +
mov [esp+1CCh+var_CC] esi +
mov [esp+1CCh+var_C8] ebx +
mov [esp+1CCh+var_C0] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_C0] +
mov [esp+1CCh+var_B8] eax +
mov eax [esp+1CCh+var_C4] +
mov [esp+1CCh+var_188] edx +
mov edx ecx +
shr cx 8 +
mov [esp+1CCh+var_18C] eax +
jmp loc_445454  +
mov eax [esp+1CCh+arg_0] +
xor ecx ecx +
cmp byte ptr [eax+25Ah] 0 +
jz loc_445454  +
mov edi [eax+14h] +
test edi edi +
jnz loc_445454  +
mov [esp+1CCh+var_1C4] offset aTraditionalC_0 +
mov [esp+1CCh+var_1C8] 6 +
mov [esp+1CCh+var_1CC] eax +
mov [esp+1CCh+var_16C] ecx +
mov [esp+1CCh+var_174] edx +
call sub_43CB70  +
mov edx [esp+1CCh+var_174] +
mov ecx [esp+1CCh+var_16C] +
jmp loc_445454  +
mov [esp+1CCh+var_1CC] eax +
call sub_444E00  +
mov ebp eax +
jmp loc_445D5E  +
movzx ebx byte ptr [esp+1CCh+var_12C] +
xor ecx ecx +
test bl bl +
jnz loc_44709D  +
cmp [esp+1CCh+var_125] 0 +
jnz loc_44730E  +
cmp [esp+1CCh+var_15C] 40h +
ja loc_4472E0  +
movzx ecx byte ptr [esp+1CCh+var_114] +
mov edx [esp+1CCh+var_160] +
mov eax [esp+1CCh+var_164] +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
movzx edx [esp+1CCh+var_125] +
xor ecx ecx +
xor edx 1 +
cmp dl al +
jz loc_44709D  +
mov edx [esp+1CCh+var_164] +
mov esi [esp+1CCh+var_11C] +
mov edi [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_160] +
or edx esi +
or eax edi +
or edx eax +
setnz cl  +
mov esi ecx +
mov edi ebx +
mov eax [esp+1CCh+var_164] +
mov edx [esp+1CCh+var_160] +
mov ecx [esp+1CCh+var_11C] +
mov ebx [esp+1CCh+var_118] +
jmp loc_446267  +
or ebx esi +
mov edx [esp+1CCh+var_18C] +
mov esi [esp+1CCh+var_15C] +
or ecx [esp+1CCh+var_16C] +
or edx [esp+1CCh+var_164] +
or esi [esp+1CCh+var_174] +
jmp loc_44539C  +
xor edx edx +
xor ecx ecx +
test al al +
jz loc_445D0A  +
mov eax [esp+1CCh+var_18C] +
xor ebx [esp+1CCh+var_174] +
xor eax esi +
or eax ebx +
jz loc_447525  +
mov edx 1 +
xor ecx ecx +
jmp loc_445D0A  +
mov edi [esp+1CCh+var_170] +
mov esi [esp+1CCh+var_174] +
mov byte ptr [esp+1CCh+var_5C] cl +
mov byte ptr [esp+1CCh+var_5C+1] 0 +
mov [esp+1CCh+var_68] edi +
mov edi [esp+1CCh+var_168] +
mov edx esi +
mov [esp+1CCh+var_6C] esi +
mov esi [esp+1CCh+var_16C] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_60] edi +
mov eax [esp+1CCh+var_60] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_64] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_5C] +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_58] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov esi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_6C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_5C] esi +
mov ecx esi +
shr si 8 +
mov [esp+1CCh+var_68] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_68] +
mov [esp+1CCh+var_64] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_170] edx +
mov [esp+1CCh+var_60] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_60] +
mov [esp+1CCh+var_58] eax +
mov eax [esp+1CCh+var_6C] +
mov [esp+1CCh+var_168] edx +
mov [esp+1CCh+var_174] eax +
mov eax [esp+1CCh+var_64] +
mov [esp+1CCh+var_16C] eax +
jmp loc_446255  +
lea ecx [eax-1] +
mov [esp+1CCh+var_114] ecx +
jmp loc_44573F  +
cmp byte ptr [eax+26Ah] 0 +
jnz loc_447545  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+254h] 0 +
jz loc_4469E9  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAreA +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 1 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC80  +
jmp loc_4469E9  +
mov ebx 1 +
xor esi esi +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor edi edi +
jmp loc_446A21  +
mov edx [edi+14h] +
test edx edx +
jnz loc_4469C7  +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aSIsNotDefinedE +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 0Dh +
mov [esp+1CCh+var_1B8] eax +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C4] eax +
call sub_43CC80  +
mov eax [esp+1CCh+var_3C] +
test eax eax +
setnz bl  +
jmp loc_4469C9  +
mov ecx [esp+1CCh+var_15C] +
mov edx [esp+1CCh+var_118] +
mov eax [esp+1CCh+var_11C] +
sub ecx 41h +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
and eax 1 +
xor eax 1 +
and eax 1 +
jmp loc_44706D  +
mov edi [esp+1CCh+var_118] +
mov esi [esp+1CCh+var_11C] +
mov byte ptr [esp+1CCh+var_2C] 0 +
mov byte ptr [esp+1CCh+var_2C+1] 0 +
mov [esp+1CCh+var_38] edi +
mov edi [esp+1CCh+var_160] +
mov edx esi +
mov [esp+1CCh+var_3C] esi +
mov esi [esp+1CCh+var_164] +
mov [esp+1CCh+var_1CC] edx +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_30] edi +
mov eax [esp+1CCh+var_30] +
mov edi [esp+1CCh+var_15C] +
mov [esp+1CCh+var_34] esi +
mov [esp+1CCh+var_1C8] edx +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_2C] +
mov [esp+1CCh+var_1B4] edi +
mov [esp+1CCh+var_1C4] esi +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_28] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_442160  +
mov eax [esp+1CCh+var_10C] +
mov edi [esp+1CCh+var_FC] +
mov [esp+1CCh+var_3C] eax +
mov eax [esp+1CCh+var_108] +
mov [esp+1CCh+var_2C] edi +
mov ebx edi +
mov [esp+1CCh+var_38] eax +
mov eax [esp+1CCh+var_104] +
mov edx [esp+1CCh+var_38] +
mov [esp+1CCh+var_34] eax +
mov eax [esp+1CCh+var_100] +
mov [esp+1CCh+var_118] edx +
mov [esp+1CCh+var_30] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_30] +
mov [esp+1CCh+var_28] eax +
mov eax [esp+1CCh+var_3C] +
mov [esp+1CCh+var_160] edx +
mov [esp+1CCh+var_11C] eax +
mov eax [esp+1CCh+var_34] +
mov [esp+1CCh+var_164] eax +
jmp loc_44703E  +
mov eax [esp+1CCh+arg_0] +
mov dword ptr [eax+0E8h] 0 +
jmp loc_445258  +
cmp eax edx +
setz al  +
xor edx edx +
movzx eax al +
xor ebx ebx +
mov byte ptr [esp+1CCh+var_18C] 0 +
xor esi esi +
xor edi edi +
jmp loc_446A21  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset a?WithoutFollow +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_444FA0  +
mov eax [ebp+0] +
mov eax [eax] +
mov [esp+1CCh+var_1BC] offset aMissingInExp_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
jmp loc_444FA0  +
test ah 20h +
jz loc_447579  +
mov [esp+1CCh+var_1BC] offset aImaginaryNumbe +
jmp loc_44690C  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_445D06  +
jmp loc_445D0A  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aUserDefinedLit +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
mov eax [esp+1CCh+var_E8] +
jmp loc_4468F1  +
mov eax [esp+1CCh+var_13C] +
xor ecx ecx +
mov [esp+1CCh+var_114] eax +
jmp loc_445ED9  +
mov eax [esp+1CCh+var_13C] +
mov ebx [esp+1CCh+var_15C] +
xor eax [esp+1CCh+var_164] +
xor ebx [esp+1CCh+var_16C] +
or eax ebx +
jnz loc_4470FE  +
jmp loc_445D0A  +
mov eax [esp+1CCh+var_150] +
mov [esp+1CCh+var_1BC] offset aAssertionsAr_0 +
mov [esp+1CCh+var_1C0] 0 +
mov [esp+1CCh+var_1C8] 2 +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43CC30  +
jmp loc_4469E9  +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+var_154] +
lea edx [esp+1CCh+var_E4] +
mov [esp+1CCh+var_1CC] edx +
mov [esp+1CCh+var_1C4] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] eax +
call sub_444720  +
mov eax [esp+1CCh+var_DC] +
mov edx [esp+1CCh+var_E4] +
mov esi [esp+1CCh+var_E0] +
movzx ebx byte ptr [esp+1CCh+var_D4] +
mov [esp+1CCh+var_18C] eax +
movzx ecx byte ptr [esp+1CCh+var_D4+1] +
mov eax [esp+1CCh+var_D8] +
jmp loc_446A7B  +
mov eax [ebp+0] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1BC] offset aOperatorSHas_0 +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444F76  +
xor ecx ecx +
mov edx edi +
lea eax [esp+1CCh+var_E4] +
call sub_443280  +
jmp loc_44759F  +
mov [esp+1CCh+var_1BC] offset aWithoutPrecedi +
mov [esp+1CCh+var_1C0] 0 +
mov eax [esp+1CCh+var_150] +
jmp loc_44748F  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_20] 0FFFFFFFFh +
mov byte ptr [esp+1CCh+var_14] 0 +
mov byte ptr [esp+1CCh+var_14+1] 0 +
mov eax [eax+294h] +
mov [esp+1CCh+var_1C] ecx +
mov [esp+1CCh+var_1C4] ecx +
mov [esp+1CCh+var_24] 0FFFFFFFFh +
mov [esp+1CCh+var_1B4] eax +
mov eax [esp+1CCh+var_20] +
mov [esp+1CCh+var_18] 0FFFFFFFFh +
mov [esp+1CCh+var_1CC] 0FFFFFFFFh +
mov [esp+1CCh+var_1C0] 0FFFFFFFFh +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+var_14] +
mov [esp+1CCh+var_1BC] eax +
mov eax [esp+1CCh+var_10] +
mov [esp+1CCh+var_1B8] eax +
lea eax [esp+1CCh+var_10C] +
call sub_4420B0  +
mov eax [esp+1CCh+var_10C] +
mov ecx [esp+1CCh+var_FC] +
mov [esp+1CCh+var_24] eax +
mov eax [esp+1CCh+var_108] +
mov ebx ecx +
mov esi [esp+1CCh+var_24] +
shr bx 8 +
mov word ptr [esp+1CCh+var_18C] bx +
mov ebx [esp+1CCh+var_3C] +
mov [esp+1CCh+var_20] eax +
mov eax [esp+1CCh+var_104] +
mov [esp+1CCh+var_14] ecx +
mov edi [esp+1CCh+var_20] +
test ebx ebx +
mov [esp+1CCh+var_1C] eax +
mov eax [esp+1CCh+var_100] +
setnz bl  +
mov [esp+1CCh+var_18] eax +
mov eax [esp+1CCh+var_F8] +
mov edx [esp+1CCh+var_18] +
mov [esp+1CCh+var_10] eax +
mov eax [esp+1CCh+var_1C] +
jmp loc_446A21  +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
or eax [ebp+14h] +
or edx [ebp+10h] +
or edx eax +
setnz al  +
jmp loc_444FA2  +
add byte ptr [edi+10h] 1 +
mov esi [edi+4Ch] +
mov [esp+1CCh+var_1CC] edi +
call sub_43B980  +
movzx edx byte ptr [eax+4] +
mov ebx eax +
xor eax eax +
cmp dl 14h +
jz loc_447950  +
cmp dl 35h +
jnz loc_447893  +
test eax eax +
mov ebx [ebx+8] +
jnz loc_44796F  +
test ebx ebx +
jz loc_4478BC  +
mov eax [esp+1CCh+arg_0] +
cmp esi [eax+4Ch] +
jz loc_4478FB  +
mov eax [esp+1CCh+arg_0] +
cmp byte ptr [eax+266h] 0 +
jz loc_4477C5  +
mov [esp+1CCh+var_1C4] offset aThisUseOfDefin +
mov [esp+1CCh+var_1C8] 18h +
mov [esp+1CCh+var_1CC] eax +
call sub_43CBB0  +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
movzx eax word ptr [ebx+14h] +
jz loc_4478C9  +
shr ax 6 +
test al 80h +
jnz loc_447829  +
movzx edx word ptr [ebx+14h] +
mov ecx eax +
or cl 80h +
shl ecx 6 +
and edx 3Fh +
or edx ecx +
mov [ebx+14h] dx +
and edx 3Fh +
cmp dl 1 +
jz loc_447910  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+218h] +
test eax eax +
jz loc_447829  +
mov edi [esp+1CCh+arg_0] +
mov edx [edi+20h] +
mov [esp+1CCh+var_1C4] ebx +
mov [esp+1CCh+var_1CC] edi +
mov [esp+1CCh+var_1C8] edx +
call eax  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
mov [eax+0E8h] ebx +
movzx eax byte ptr [ebx+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_4478E5  +
xor eax eax +
xor edx edx +
mov [esp+1CCh+var_18C] eax +
xor ecx ecx +
mov eax edx +
xor ebx ebx +
xor edx edx +
xor esi esi +
jmp loc_446A7B  +
mov [esp+1CCh+var_1BC] offset aMissingExpress +
jmp loc_447615  +
cmp byte ptr [esp+1CCh+var_110] 0 +
mov eax offset aIf +
mov edx offset aElif +
mov [esp+1CCh+var_1BC] offset aSWithNoExpress +
cmovz eax edx +
mov [esp+1CCh+var_1B8] eax +
jmp loc_444F76  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aOperatorDefine +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
test byte ptr [ebx+6] 10h +
jnz loc_4479AC  +
mov eax [esp+1CCh+arg_0] +
sub byte ptr [eax+10h] 1 +
jmp loc_447849  +
shr ax 6 +
test al 4 +
jnz loc_4477DC  +
mov eax [ebx+18h] +
or byte ptr [eax+14h] 8 +
movzx eax word ptr [ebx+14h] +
jmp loc_4477D8  +
xor edx edx +
mov eax 1 +
test byte ptr [ebx+15h] 40h +
jnz loc_447849  +
jmp loc_44784D  +
add eax 30h +
cmp esi eax +
jnz loc_44779D  +
jmp loc_4477C5  +
test al 4 +
jz loc_447935  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+228h] +
test eax eax +
jz loc_447935  +
mov edi [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C8] ebx +
mov [esp+1CCh+var_1CC] edi +
call eax  +
mov eax [esp+1CCh+arg_0] +
mov eax [eax+214h] +
test eax eax +
jnz loc_447812  +
jmp loc_447829  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43B980  +
mov ebx eax +
movzx edx byte ptr [eax+4] +
mov eax 1 +
jmp loc_447771  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43B980  +
cmp byte ptr [eax+4] 15h +
jz loc_447785  +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1C4] offset aMissingAfterDe +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_4478BC  +
movzx eax byte ptr [ebx+4] +
xor ecx ecx +
mov word ptr [esp+1CCh+var_20+2] cx +
mov byte ptr [esp+1CCh+var_20] al +
lea eax [esp+1CCh+var_24] +
mov [esp+1CCh+var_1C8] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1C8] ebx +
mov esi eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_441BB0  +
mov [esp+1CCh+var_1BC] esi +
mov [esp+1CCh+var_1C4] offset aSIsAnAlternati +
mov [esp+1CCh+var_1C8] 3 +
mov [esp+1CCh+var_1C0] eax +
mov eax [esp+1CCh+arg_0] +
mov [esp+1CCh+var_1CC] eax +
call sub_43CB30  +
jmp loc_4478BC  +
lea ecx [ebx-40h] +
xor eax eax +
xor edx edx +
test cl 20h +
setz al  +
setnz dl  +
shl edx cl +
shl eax cl +
mov ecx [esp+1CCh+var_11C] +
or ecx eax +
mov [esp+1CCh+var_134] ecx +
mov ecx [esp+1CCh+var_118] +
or ecx edx +
mov eax ecx +
mov ecx [esp+1CCh+var_134] +
mov [esp+1CCh+var_118] eax +
mov [esp+1CCh+var_11C] ecx +
jmp loc_445FE0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 28h +
mov ecx [esp+3Ch] +
mov ebx [esp+50h] +
mov eax [esp+38h] +
mov edx [esp+54h] +
mov [esp+10h] ecx +
mov ecx [esp+40h] +
mov esi [esp+10h] +
mov [esp+24h] ebx +
mov [esp+14h] ecx +
mov ecx [esp+44h] +
mov edi [esp+14h] +
mov [esp] esi +
mov [esp+18h] ecx +
mov ecx [esp+48h] +
mov ebx [esp+18h] +
mov [esp+4] edi +
mov [esp+1Ch] ecx +
mov ecx [esp+4Ch] +
mov esi [esp+1Ch] +
mov [esp+8] ebx +
test cl cl +
mov [esp+20h] ecx +
mov [esp+0Ch] esi +
jnz loc_447B40  +
cmp edx 40h +
jbe loc_447B90  +
lea ecx [edx-40h] +
cmp ecx 3Fh +
ja loc_447B40  +
mov edi [esp+4] +
lea ecx [edx-41h] +
mov esi [esp] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_447B40  +
mov ecx 80h +
mov edi 0FFFFFFFFh +
sub ecx edx +
mov esi 0FFFFFFFFh +
shrd esi edi +
xor edx edx +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
mov edx esi +
mov edi [esp+4] +
mov esi [esp] +
not edx  +
not ecx  +
or ecx edi +
or edx esi +
mov [esp] edx +
mov [esp+4] ecx +
nop   +
lea esi [esi+0] +
mov esi [esp] +
mov edi [esp+4] +
mov ebx [esp+8] +
mov ecx esi +
mov [esp+10h] esi +
mov esi [esp+0Ch] +
mov [eax] ecx +
mov [esp+14h] edi +
mov ecx [esp+14h] +
mov [eax+8] ebx +
mov [esp+1Ch] esi +
mov edx [esp+1Ch] +
mov [esp+18h] ebx +
mov [eax+4] ecx +
mov [eax+0Ch] edx +
mov edx [esp+20h] +
mov [eax+10h] edx +
mov edx [esp+24h] +
mov [eax+14h] edx +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edi [esp+0Ch] +
lea ecx [edx-1] +
mov esi [esp+8] +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
mov ecx esi +
and ecx 1 +
test ecx ecx +
jz loc_447B40  +
cmp edx 40h +
mov dword ptr [esp] 0FFFFFFFFh +
mov dword ptr [esp+4] 0FFFFFFFFh +
jz loc_447B40  +
mov ecx 40h +
mov esi 0FFFFFFFFh +
sub ecx edx +
mov ebx 0FFFFFFFFh +
shrd ebx esi +
xor edx edx +
shr esi cl +
test cl 20h +
cmovnz ebx esi +
cmovnz esi edx +
mov ecx ebx +
mov ebx [esp+8] +
mov edx ecx +
mov ecx esi +
mov esi [esp+0Ch] +
not edx  +
not ecx  +
or edx ebx +
or ecx esi +
mov [esp+8] edx +
mov [esp+0Ch] ecx +
jmp loc_447B40  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+0Ch+arg_0] +
movzx ebp byte ptr [edi] +
jz loc_447CB9  +
mov edi eax +
lea esi [eax+1] +
mov eax ebp +
mov ebp edi +
lea esi [esi+0] +
movzx ebx byte ptr [edx] +
movzx edi bl +
test ds:word_4D0720[edi+edi] 0C00h +
jz loc_447C90  +
test al al +
jz loc_447C63  +
cmp bl 27h +
jz loc_447C9E  +
cmp bl 22h +
nop   +
jz loc_447C9E  +
jmp loc_447CA8  +
movzx ebx byte ptr [edx] +
test ds:word_4D0720[ebx+ebx] 0C00h +
jz loc_447C6B  +
add edx 1 +
sub ecx 1 +
jnz loc_447C54  +
mov edi esi +
mov byte ptr [esi-1] 20h +
add esi 1 +
test ecx ecx +
jnz loc_447C30  +
mov esi ebp +
mov ebp eax +
sub edi esi +
mov eax edi +
mov edi [esp+0Ch+arg_0] +
mov ecx ebp +
mov [edi] cl +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp bl 22h +
jz loc_447C9A  +
cmp bl 27h +
jnz loc_447CA8  +
test al al +
jz loc_447CB5  +
cmp al bl +
mov edi 0 +
cmovz eax edi +
mov edi esi +
add edx 1 +
mov [esi-1] bl +
sub ecx 1 +
jmp loc_447C71  +
mov eax ebx +
jmp loc_447CA8  +
xor eax eax +
jmp loc_447C80  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax+2D0h] +
mov eax [eax+2CCh] +
sub eax ecx +
cmp edx eax +
jbe loc_447E10  +
mov eax [ebx+2C8h] +
mov edi ecx +
sub edi eax +
add edx edi +
lea esi [edx+edx*2] +
shr esi 1 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call sub_452F50  +
add esi eax +
mov [ebx+2C8h] eax +
add eax edi +
mov [ebx+2CCh] esi +
mov [ebx+2D0h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
test byte ptr [edx+15h] 1 +
jnz loc_447E58  +
mov ecx [edx+18h] +
mov edi [ecx+4] +
or byte ptr [ecx+14h] 18h +
mov ebx [ecx+0Ch] +
mov [esp+30h+var_24] ebx +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_2C] edx +
call sub_439910  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_28] 0 +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_14] edx +
call sub_439100  +
mov [esp+30h+var_30] eax +
mov ebp eax +
call strlen  +
mov [esp+30h+var_30] esi +
mov ebx eax +
lea eax [eax+1] +
mov [esp+30h+var_2C] eax +
call sub_43F4D0  +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_2C] ebp +
mov edi eax +
mov [esp+30h+var_30] eax +
call memcpy  +
mov edx [esp+30h+var_14] +
mov byte ptr [edi+ebx] 0Ah +
jmp loc_447E3C  +
***
push ebx  +
sub esp 14h +
mov ebx [eax+2D0h] +
movzx ecx byte ptr [edx] +
add ebx 1 +
add edx 1 +
mov [ebx-1] cl +
movzx ecx byte ptr [edx] +
movzx eax cl +
test ds:word_4D0720[eax+eax] 204h +
jnz loc_447EC0  +
mov eax [esi+4Ch] +
mov ecx ebx +
mov [eax+8] edx +
mov eax [esi+2D0h] +
mov edx [esi+234h] +
mov [esp+18h+var_C] 1 +
sub ecx eax +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_43D2E0  +
mov [esi+2D0h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov ebp [esi] +
mov edx [eax+2Ch] +
mov eax [esi+4Ch] +
mov [ebp+0] edi +
mov eax [eax+4] +
test eax eax +
jz loc_448012  +
movzx eax byte ptr [edi+1] +
lea ebx [edi+1] +
cmp al 2Fh +
jnz loc_447F57  +
jmp loc_448006  +
movzx eax byte ptr [ebx] +
add ebx 1 +
cmp al 2Fh +
jnz loc_447F54  +
cmp byte ptr [ebx-2] 2Ah +
jnz loc_447F54  +
mov [ebp+0] ebx +
xor ebx ebx +
cmp byte ptr [esi+8] 0 +
jz loc_447FD6  +
test ecx ecx +
jz loc_447FF1  +
cmp byte ptr [esi+24Ch] 0 +
jnz loc_447FDF  +
mov edx [ebp+0] +
mov eax [esi+2D0h] +
mov [esp+34h+var_30] edi +
sub edx edi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_1C] edx +
call memcpy  +
mov edx [esp+34h+var_1C] +
add edx [esi+2D0h] +
test bl bl +
jz loc_448061  +
lea eax [edx+1] +
mov [esi+2D0h] eax +
mov byte ptr [edx] 2Ah +
mov eax [esi+2D0h] +
lea edx [eax+1] +
mov [esi+2D0h] edx +
mov byte ptr [eax] 2Fh +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esi+24Bh] 0 +
jz loc_447F7C  +
mov eax [ebp+0] +
sub dword ptr [esi+2D0h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+2D0h] +
mov byte ptr [eax-1] 20h +
mov eax [ebp+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [edi+2] +
movzx eax byte ptr [edi+2] +
jmp loc_447F57  +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] edx +
call sub_43E580  +
mov ecx [esp+34h+var_1C] +
test al al +
mov ebx eax +
jz loc_447F69  +
mov edx [esp+34h+var_18] +
mov [esp+34h+var_24] offset aUnterminated_0 +
mov [esp+34h+var_28] 0 +
mov [esp+34h+var_30] 3 +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] esi +
call sub_43CC30  +
mov ecx [esp+34h+var_1C] +
jmp loc_447F69  +
mov eax [ebp+0] +
mov [esi+2D0h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax edx +
sub esp 1Ch +
mov edi [esi+2D0h] +
mov [esp+20h+var_14] ecx +
jmp loc_44809B  +
mov eax edx +
mov edi ebx +
lea edx [eax+1] +
movzx ecx byte ptr [edx-1] +
lea ebx [edi+1] +
movzx ebp cl +
test byte ptr [ebp+ebp+4D0721h] 8 +
mov [ebx-1] cl +
jnz loc_448097  +
cmp cl 2Fh +
jnz loc_4480DF  +
cmp byte ptr [eax+1] 2Ah +
jnz loc_4480DF  +
mov ecx [esp+20h+var_14] +
test ecx ecx +
jz loc_4480DF  +
mov [esi+2D0h] ebx +
xor ecx ecx +
mov eax esi +
call sub_447F20  +
mov edi [esi+2D0h] +
jmp loc_44809B  +
mov [esi+2D0h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx ecx word ptr [edx+14h] +
shr cx 6 +
test cl 20h +
jz loc_448160  +
push ebx  +
sub esp 18h +
and ecx 4 +
jnz loc_448163  +
mov ecx [edx+18h] +
movzx ecx byte ptr [ecx+14h] +
and ecx 1 +
test cl cl +
jz loc_448134  +
mov ecx [eax+4Ch] +
xor ebx ebx +
jmp loc_448127  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_448170  +
add ebx 1 +
cmp [ecx+14h] edx +
jnz loc_448120  +
cmp ebx 14h +
jbe loc_448120  +
mov edx [edx] +
mov [esp+1Ch+var_14] offset aDetectedRecurs +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] edx +
call sub_43CB30  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
retn   +
cmp dword ptr [edx+18h] 0Ah +
setz cl  +
jmp loc_448110  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [edx] +
mov ebx [eax] +
mov [edx+4] eax +
mov [edx+2D8h] ebx +
mov ebx [eax+10h] +
mov [edx+2DCh] ebx +
mov ebx [eax+8] +
mov [edx+2E0h] ebx +
mov [eax] ecx +
mov [eax+4] ecx +
add ecx [esp+arg_8] +
mov byte ptr [eax+38h] 0 +
mov [eax+10h] ecx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov ecx [eax+2D8h] +
mov [edx] ecx +
mov ecx [eax+2DCh] +
mov [edx+10h] ecx +
mov ecx [eax+2E0h] +
mov byte ptr [edx+38h] 1 +
mov [edx+4] ecx +
mov dword ptr [eax+4] 0 +
retn   +
***
push esi  +
mov ebx [esp+18h+arg_0] +
jmp loc_44903C  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
call sub_4481F0  +
test al al +
jnz loc_449055  +
mov eax [ebx] +
cmp byte ptr [eax+38h] 0 +
jz loc_449020  +
mov [esp+18h+var_18] ebx +
call sub_43E980  +
test al al +
jnz loc_449020  +
add esp 18h +
pop ebx  +
retn   +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_44903C  +
mov eax [ebx] +
test eax eax +
setnz al  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
mov ecx [esp+arg_0] +
test byte ptr [ecx+14h] 1 +
jz loc_4490B8  +
cmp word ptr [ecx+10h] 0 +
jz loc_4490B8  +
mov edx [ecx+4] +
movzx ebx word ptr [edx+4] +
mov eax [edx] +
test bx bx +
jz loc_4490BB  +
mov esi [ecx] +
mov ecx eax +
mov ebx [esi+ebx*4-4] +
add ecx 0Dh +
and ecx 0FFFFFFF8h +
add edx ecx +
mov ecx [edx] +
mov edi [ebx+4] +
movzx ebx word ptr [edx+4] +
add edi ecx +
add eax edi +
test bx bx +
jnz loc_449096  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+0Ch] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
test byte ptr [edi+14h] 1 +
jz loc_449137  +
cmp word ptr [edi+10h] 0 +
jz loc_449137  +
mov ebx [edi+4] +
jmp loc_44910B  +
mov edx [edi] +
mov esi [edx+eax*4-4] +
mov edx [esi+4] +
mov eax [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [ebx] +
add ebp [esi+4] +
lea edx [eax+0Dh] +
mov esi ebp +
and edx 0FFFFFFF8h +
add ebx edx +
mov edx [ebx] +
lea eax [ebx+6] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_14] edx +
call memcpy  +
movzx eax word ptr [ebx+4] +
add esi [ebx] +
test ax ax +
mov ebp esi +
jnz loc_4490E1  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [edi+0Ch] +
mov eax [edi+4] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
add esi [edi+0Ch] +
add esp 1Ch +
pop ebx  +
mov ebp esi +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [ebx+2C8h] +
mov ebp [ebx+4Ch] +
mov [ebx+2D0h] eax +
mov eax [ebx] +
mov eax [eax] +
mov [ebp+8] eax +
mov edx [ebx] +
mov edx [edx+10h] +
mov [ebp+0Ch] edx +
sub edx eax +
mov eax ebx +
call sub_447DC0  +
mov edx [ebp+8] +
cmp byte ptr [edx] 28h +
jz loc_449225  +
movzx ecx byte ptr [ebx+24Ch] +
mov eax ebx +
mov edi [ebx] +
call sub_448080  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_4481F0  +
sub byte ptr [ebx+10h] 1 +
test esi esi +
jz loc_44930E  +
mov edx [ebx+2C8h] +
mov ecx [ebx+2D0h] +
cmp edx ecx +
jb loc_4491F7  +
jmp loc_449207  +
sub ecx 1 +
cmp ecx edx +
jz loc_449207  +
movzx eax byte ptr [ecx-1] +
test ds:word_4D0720[eax+eax] 0C00h +
jnz loc_4491F0  +
mov [ebx+2D0h] ecx +
mov eax ebx +
xor ecx ecx +
mov edx esi +
call sub_447CC0  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4Ch] +
mov edx [eax+8] +
add edx 1 +
jmp loc_449252  +
mov eax [ebx+4Ch] +
mov ecx 1 +
mov edx [eax+8] +
mov eax ebx +
call sub_448080  +
mov edi eax +
movzx eax byte ptr [eax] +
cmp al 2Ch +
jnz loc_449315  +
lea edx [edi+1] +
mov ecx 1 +
mov eax ebx +
call sub_448080  +
mov edi eax +
movzx eax byte ptr [eax] +
movzx edx al +
test byte ptr [edx+edx+4D0721h] 2 +
jnz loc_449281  +
cmp al 24h +
jnz loc_44936E  +
cmp byte ptr [ebx+262h] 0 +
jz loc_4492A2  +
mov edx edi +
mov eax ebx +
call sub_447EB0  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] eax +
call sub_43BA10  +
test al al +
jz loc_449230  +
mov [esp+1Ch+var_14] offset aSyntaxErrorInM +
mov [esp+1Ch+var_18] 3 +
mov [esp+1Ch+var_1C] ebx +
call sub_43CB30  +
xor edx edx +
mov eax [ebx+4Ch] +
cmp byte ptr [edi] 29h +
setz dl  +
add edi edx +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov eax [eax+8] +
mov [esi] eax +
mov edx [ebp+8] +
mov eax ebx +
movzx ecx byte ptr [ebx+24Ch] +
mov esi [ebx] +
call sub_448080  +
mov [esi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] ebx +
call sub_4481F0  +
xor eax eax +
sub byte ptr [ebx+10h] 1 +
jmp loc_44921D  +
xor eax eax +
jmp loc_44921D  +
cmp al 29h +
jnz loc_4492A2  +
movzx ecx word ptr [esi+10h] +
mov eax [ebx+4Ch] +
add edi 1 +
mov [eax+8] edi +
mov eax [ebx+24h] +
mov edi [ebx] +
mov edx [eax+8] +
mov [esi] edx +
lea edx [edx+ecx*4] +
mov [eax+8] edx +
mov eax ebx +
or byte ptr [esi+14h] 1 +
mov edx [ebp+8] +
movzx ecx byte ptr [ebx+24Ch] +
call sub_448080  +
mov [edi] eax +
add byte ptr [ebx+10h] 1 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebx +
call sub_4481F0  +
sub byte ptr [ebx+10h] 1 +
jmp loc_4491D8  +
cmp al 29h +
jnz loc_4492A2  +
movzx ecx word ptr [esi+10h] +
test cx cx +
jz loc_44931D  +
nop   +
jmp loc_4492A2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov eax [esi+0Ch] +
add eax [ebx+0Ch] +
mov [esp+2Ch+var_2C] eax +
call sub_452ED0  +
mov ecx [ebx+0Ch] +
cmp word ptr [ebx+10h] 0 +
mov byte ptr [esp+2Ch+var_E] 0 +
mov byte ptr [esp+2Ch+var_E+1] 0 +
mov ebp eax +
lea eax [eax+ecx] +
mov [esp+2Ch+var_20] eax +
jz loc_449466  +
mov esi [esi+4] +
mov ebx [ebx+4] +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jz loc_449421  +
jmp loc_44944F  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_44944F  +
cmp word ptr [ebx+4] 0 +
jz loc_4494B0  +
mov eax [ebx] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add ebx eax +
mov eax [esi] +
add eax 0Dh +
and eax 0FFFFFFF8h +
add esi eax +
movzx eax word ptr [esi+4] +
cmp [ebx+4] ax +
jnz loc_44944F  +
mov ecx [ebx] +
lea eax [esp+2Ch+var_E] +
lea edx [ebx+6] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_447C10  +
mov ecx [esi] +
lea edx [esi+6] +
mov edi eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_447C10  +
cmp edi eax +
jz loc_4493E0  +
mov ebx 1 +
mov [esp+2Ch+var_2C] ebp +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+4] +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_447C10  +
mov ecx [esi+0Ch] +
mov edx [esi+4] +
mov ebx eax +
lea eax [esp+2Ch+var_E+1] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_20] +
call sub_447C10  +
cmp ebx eax +
jnz loc_44944F  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
setnz bl  +
jmp loc_449454  +
xor ebx ebx +
jmp loc_449454  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_4494E0  +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp sub_45D3F0  +
mov eax [eax+4] +
mov [esp+arg_0] eax +
jmp sub_45D3F0  +
***
sub esp 18h +
mov eax [eax+18h] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx] +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov eax [eax] +
mov edx [eax+4] +
test edx edx +
jz loc_449552  +
mov ebx [eax+0Ch] +
cmp byte ptr [ebx+62h] 0 +
jnz loc_449552  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_449560  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
cmp word ptr [ebx+60h] 1 +
jnz loc_449552  +
cmp byte ptr [ebx+64h] 0 +
jnz loc_449552  +
mov eax [esp+14h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_449593  +
mov esi [esp+14h+arg_4] +
mov edx [esi+4] +
lea ecx [edx+1] +
shl edx 2 +
mov esi [esp+14h+arg_4] +
mov [esi+4] ecx +
mov ecx [ebx+4] +
mov [eax+edx] ecx +
jmp loc_449552  +
mov eax [esp+14h+arg_4] +
mov eax [eax+4] +
mov [esp+14h+var_10] 4 +
mov [esp+14h+var_14] eax +
call sub_452F00  +
mov esi [esp+14h+arg_4] +
xor edx edx +
mov ecx 1 +
mov [esi] eax +
jmp loc_449584  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4531F0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
mov eax [eax+0Ch] +
test edx edx +
jz loc_449620  +
mov edx [eax] +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_18] eax +
call sub_4531F0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
mov edx [eax+4] +
jmp loc_449603  +
***
sub esp 18h +
mov edx [eax+0ACh] +
mov ecx [edx] +
cmp ecx 7Fh +
jz loc_449654  +
lea eax [ecx+1] +
mov [edx] eax +
shl ecx 4 +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
mov [esp+18h+var_18] 7F8h +
call sub_452ED0  +
mov edx [ebx+0ACh] +
xor ecx ecx +
shl ecx 4 +
mov [eax+4] edx +
mov edx eax +
mov dword ptr [eax] 0 +
mov [ebx+0ACh] eax +
mov eax 1 +
mov [edx] eax +
add esp 18h +
lea eax [edx+ecx+8] +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] edx +
call sub_45D3F0  +
mov edx [edi+0A8h] +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_30] eax +
call sub_45D030  +
mov ebx [eax] +
mov edx eax +
test ebx ebx +
jnz loc_4496D6  +
jmp loc_4496E8  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4496E8  +
mov eax [ebx+4] +
test eax eax +
jnz loc_4496D0  +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_34] 24h +
mov [esp+38h+var_38] 1 +
mov [esp+38h+var_1C] edx +
call sub_452F00  +
mov ebx eax +
mov eax [edi+70h] +
mov [ebx+4] esi +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call strlen  +
mov dword ptr [ebx+18h] 0 +
mov [ebx+8] eax +
mov eax ebp +
mov [ebx+0Ch] al +
mov eax edi +
call sub_449630  +
mov edx [esp+38h+var_1C] +
mov ecx [edx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov ecx [edi+1Ch] +
mov ecx [ecx+28h] +
mov [eax+0Ch] ebx +
mov [eax+8] ecx +
mov [edx] eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
mov eax [esp+arg_4] +
mov eax [eax] +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov eax [eax] +
mov [esp+arg_0] eax +
jmp strcmp  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
cmp byte ptr [eax] 0 +
jnz loc_4498A1  +
mov dword ptr [ebx+58h] 0 +
xor eax eax +
lea edx [ebx+28h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call ds:_fstati64  +
mov esi ds:__imp__errno +
test eax eax +
jnz loc_449880  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jz loc_449872  +
mov dword ptr [ebx+5Ch] 0 +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 2 +
mov eax [ebx+58h] +
mov [esp-58h+arg_4C] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
call esi  +
mov eax [eax] +
mov [ebx+5Ch] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 1B6h +
mov [esp+14h+var_10] 8000h +
mov [esp+14h+var_14] eax +
call _open_0  +
cmp eax 0FFFFFFFFh +
mov [ebx+58h] eax +
jnz loc_449838  +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 0Dh +
jz loc_4498E2  +
call esi  +
cmp dword ptr [eax] 14h +
jnz loc_449892  +
lea esi [esi+0] +
jmp loc_449907  +
mov eax [ebx+4] +
lea edx [ebx+28h] +
mov [esp-58h+arg_50] edx +
mov [esp-58h+arg_4C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_449911  +
movzx eax word ptr [ebx+2Eh] +
and ax 0F000h +
cmp ax 4000h +
jnz loc_449911  +
call esi  +
mov dword ptr [eax] 2 +
jmp loc_449892  +
call esi  +
mov dword ptr [eax] 0Dh +
jmp loc_449892  +
***
mov edi edx +
push esi  +
xor esi esi +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+1Ch] +
cmp dword ptr [eax+2Ch] 1 +
jbe loc_449940  +
mov eax [ebx] +
test eax eax +
jz loc_449940  +
movzx esi byte ptr [eax+3Dh] +
cmp byte ptr [ebx+12h] 0 +
mov ebp [ebx+28Ch] +
jz loc_449954  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:__imp__errno +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
call edx  +
mov edx [edi+5Ch] +
mov ecx [esp-38h+arg_48] +
mov [eax] edx +
xor eax eax +
or esi ecx +
setnz al  +
mov edx [esp-38h+arg_44] +
cmp ebp eax +
jg loc_4499B7  +
cmp dword ptr [ebx+28Ch] 0 +
jz loc_4499C0  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_4499C0  +
mov eax [edi+4] +
test eax eax +
jz loc_449A1D  +
mov edi [esp-38h+arg_6C] +
mov [esp-38h+arg_34] eax +
mov [esp-38h+arg_30] 0 +
mov [esp-38h+arg_2C] ebx +
mov [esp-38h+arg_38] edi +
call sub_43CE70  +
jmp loc_44994C  +
cmp byte ptr [ebx+290h] 0 +
jnz loc_4499F4  +
mov eax [edi+4] +
test eax eax +
jz loc_4499F0  +
mov edi [esp-38h+arg_6C] +
mov [esp-38h+arg_2C] ebx +
mov [esp-38h+arg_34] eax +
mov [esp-38h+arg_30] 6 +
mov [esp-38h+arg_38] edi +
call sub_43CE70  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
jmp loc_4499C7  +
call edx  +
cmp dword ptr [eax] 2 +
jnz loc_4499C0  +
mov edx [edi] +
mov eax [ebx+180h] +
mov [esp-38h+arg_30] edx +
mov [esp-38h+arg_2C] eax +
call sub_44BFB0  +
cmp byte ptr [ebx+293h] 0 +
jnz loc_4499C0  +
jmp loc_44994C  +
mov eax [edi] +
nop   +
jmp loc_449999  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 20h +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
add esp 1Ch +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] edx +
call strlen  +
mov ebp eax +
lea eax [ebx+eax+2] +
mov [esp+24h+var_24] eax +
call sub_452ED0  +
mov edx [esp+24h+var_18] +
mov esi eax +
mov eax [edx] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcpy  +
test ebx ebx +
jz loc_449AAA  +
movzx eax byte ptr [esi+ebx-1] +
cmp al 5Ch +
jnz loc_449AD0  +
add ebx esi +
add ebp 1 +
mov [esp+24h+var_1C] ebp +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
call memcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_449AAA  +
mov byte ptr [esi+ebx] 2Fh +
add ebx 1 +
jmp loc_449AAA  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax+8] +
lea eax [esi+2Ah] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
mov eax [edi+4] +
lea ebx [esp+38h+var_1E+1] +
and ebx 0FFFFFFF0h +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ebx +
call memcpy  +
test esi esi +
jz loc_449B26  +
movzx eax byte ptr [ebx+esi-1] +
cmp al 5Ch +
jnz loc_449C87  +
mov eax 6363h +
mov dword ptr [ebx+esi] 64616568h +
mov dword ptr [ebx+esi+4] 672E7265h +
mov [ebx+esi+8] ax +
mov byte ptr [ebx+esi+0Ah] 0 +
mov [esp+38h+var_34] offset aR +
mov [esp+38h+var_38] ebx +
call j_fopen  +
mov [esp+38h+var_38] 24h +
mov esi eax +
call sub_452ED0  +
test esi esi +
mov [edi+14h] eax +
jz loc_449CC7  +
lea eax [edi+4] +
xor ebx ebx +
mov [ebp+var_1E+2] 9 +
mov [ebp+var_28] eax +
jmp loc_449B8F  +
movzx eax cl +
test ds:word_4D0720[eax+eax] 0C00h +
jz loc_449BC0  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_449B80  +
mov [esp+38h+var_38] esi +
call fclose  +
mov eax [edi+14h] +
lea edi ds:0[ebx*4] +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+2] +
cmp eax [ebp+var_1E+2] +
mov [ebp-20h] eax +
ja loc_449CA0  +
mov eax [edi+14h] +
lea edx ds:0[ebx*4] +
lea ebx [eax+edx] +
mov eax ecx +
mov [ebp+var_24] edx +
mov edx esi +
call sub_449750  +
mov [ebx] eax +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0FFFFFFFFh +
jz loc_449C04  +
movzx edx al +
test byte ptr ds:word_4D0720[edx+edx] 1 +
jnz loc_449BEA  +
mov edx esi +
call sub_449750  +
mov ebx eax +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jnz loc_449C50  +
mov eax [edi+14h] +
mov edx [ebp+var_24] +
mov [eax+edx+4] ebx +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jz loc_449C42  +
nop   +
lea esi [esi+0] +
cmp eax 0FFFFFFFFh +
jz loc_449C42  +
mov [esp+38h+var_38] esi +
call getc  +
cmp eax 0Ah +
jnz loc_449C30  +
mov ebx [ebp-20h] +
jmp loc_449B8F  +
cmp al 2Fh +
jz loc_449C14  +
test al al +
jz loc_449C5E  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_449C14  +
mov edx [ebp+var_24] +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea eax [eax+edx+4] +
mov edx [ebp+var_28] +
mov [ebp+var_24] eax +
mov eax ebx +
call sub_449A60  +
mov edx [ebp+var_24] +
mov [edx] eax +
mov [esp+38h+var_38] ebx +
call free  +
jmp loc_449C35  +
cmp al 2Fh +
jz loc_449B26  +
mov byte ptr [ebx+esi] 2Fh +
add esi 1 +
jmp loc_449B26  +
add [ebp+var_1E+2] 8 +
mov edx [ebp+var_1E+2] +
mov eax [edi+14h] +
mov [ebp+var_24] ecx +
shl edx 2 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] eax +
call sub_452F50  +
mov ecx [ebp+var_24] +
mov [edi+14h] eax +
jmp loc_449BD2  +
xor edi edi +
mov dword ptr [eax+edi] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov dword ptr [esp+8] 8 +
mov [esp] ebx +
mov [esp+4] esi +
call memcmp  +
test eax eax +
jnz loc_449D3A  +
cmp byte ptr [ebx+18h] 0 +
lea edi [ebx+8] +
jz loc_449D41  +
lea eax [esi+8] +
mov dword ptr [esp+8] 10h +
mov [esp+4] eax +
mov [esp] edi +
call memcmp  +
test eax eax +
jnz loc_449D3A  +
cmp byte ptr [ebx+19h] 0 +
jnz loc_449D3A  +
movzx eax byte ptr [esi+18h] +
xor eax 1 +
movzx eax al +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+1Ch] +
lea edi [ebx+8] +
mov edx [eax+14h] +
mov [esp+8] edi +
mov eax [eax+40h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_4679C0  +
mov byte ptr [ebx+18h] 1 +
jmp loc_449D0F  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
movzx ebx byte ptr [edx+65h] +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_1C] ecx +
test bl bl +
jnz loc_449EA5  +
movzx eax byte ptr [edx+63h] +
test al al +
mov [esp+44h+var_16] al +
jnz loc_449EA5  +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_449EA5  +
cmp dword ptr [edx+58h] 0FFFFFFFFh +
jz loc_449EB0  +
movzx eax word ptr [edi+2Eh] +
and ax 0F000h +
cmp ax 3000h +
jz loc_449F14  +
cmp ax 8000h +
jz loc_449F57  +
mov eax 2010h +
mov ebx 2000h +
mov [esp+44h+var_15] 0 +
mov [esp+44h+var_44] eax +
xor ebp ebp +
call sub_452ED0  +
mov esi eax +
lea esi [esi+0] +
mov edx [edi+58h] +
mov eax ebx +
sub eax ebp +
mov [esp+44h+var_3C] eax +
lea eax [esi+ebp] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edx +
call _read_0  +
cmp eax 0 +
jle loc_449E37  +
add ebp eax +
cmp ebp ebx +
jnz loc_449DF0  +
cmp [esp+44h+var_15] 0 +
jnz loc_449F50  +
lea ebx [ebp+ebp+0] +
lea eax [ebx+10h] +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_40] eax +
call sub_452F50  +
mov esi eax +
jmp loc_449DF0  +
jnz loc_449F71  +
cmp ebp ebx +
nop   +
jnz loc_449ED7  +
mov ecx ebp +
mov edx [esp+44h+var_20] +
add ebx 10h +
mov eax [edx+280h] +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_3C] esi +
mov ebp eax +
lea eax [edi+40h] +
mov [esp+44h+var_2C] eax +
lea eax [edi+18h] +
mov [esp+44h+var_30] eax +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edx +
call sub_434EA0  +
mov byte ptr [edi+65h] 1 +
mov [edi+14h] eax +
movzx eax [esp+44h+var_16] +
mov [edi+63h] al +
mov eax [edi+58h] +
mov [esp+44h+var_44] eax +
call _close_0  +
movzx ebx byte ptr [edi+63h] +
mov dword ptr [edi+58h] 0FFFFFFFFh +
xor ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edx +
call sub_449820  +
test al al +
mov ebx eax +
jnz loc_449DB2  +
mov eax [esp+44h+var_1C] +
xor ecx ecx +
mov edx edi +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+var_20] +
call sub_449920  +
jmp loc_449EA5  +
cmp [esp+44h+var_15] 0 +
jz loc_449E46  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsShorterThan +
mov [esp+44h+var_40] 0 +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_43CD70  +
mov ecx ebp +
jmp loc_449E48  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsABlockDevic +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_43CD70  +
mov [esp+44h+var_16] 1 +
jmp loc_449E84  +
mov ecx ebx +
jmp loc_449E48  +
cmp dword ptr [edi+44h] 0 +
mov ebx [edi+40h] +
jle loc_449FA6  +
mov eax [edi+4] +
mov [esp+44h+var_38] offset aSIsTooLarge +
mov [esp+44h+var_34] eax +
jmp loc_449F23  +
mov eax [edi+4] +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_40] 3 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_44] eax +
call sub_43CE70  +
mov [esp+44h+var_44] esi +
call free  +
mov [esp+44h+var_16] 1 +
jmp loc_449E84  +
jl loc_449FB0  +
cmp ebx 7FFFFFFFh +
ja loc_449F60  +
lea eax [ebx+10h] +
mov [esp+44h+var_15] 1 +
jmp loc_449DDD  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
movzx ebx byte ptr [edx] +
mov eax [esp+30h+arg_0] +
cmp bl 5Ch +
jz loc_44A010  +
cmp bl 2Fh +
jz loc_44A010  +
test bl bl +
jz loc_449FE4  +
cmp byte ptr [edx+1] 3Ah +
jz loc_44A010  +
mov ebx [esi] +
test ebx ebx +
jz loc_44A033  +
mov edi [ebx+2Ch] +
cmp eax 1 +
jz loc_44A040  +
test ecx ecx +
jz loc_44A020  +
mov ebx [esi+74h] +
test ebx ebx +
jz loc_44A090  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
lea ebx [esi+78h] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 3 +
jz loc_44A081  +
cmp byte ptr [esi+0E0h] 0 +
jz loc_44A060  +
mov ebx [esi+70h] +
jmp loc_449FF9  +
mov edi [esi+0A0h] +
jmp loc_449FED  +
mov eax [edi+20h] +
test eax eax +
jz loc_44A0FF  +
lea ebp [esi+78h] +
cmp eax ebp +
jz loc_44A0FF  +
mov ebx [eax] +
jmp loc_449FF9  +
test ebx ebx +
jz loc_44A0F8  +
movzx ecx byte ptr [ebx+3Dh] +
mov edx [edi+0Ch] +
test edx edx +
jz loc_44A0B1  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_449690  +
xor ecx ecx +
mov edx offset a__2 +
jmp loc_44A073  +
mov [esp+30h+var_24] edx +
mov [esp+30h+var_28] offset aNoIncludePathI +
mov [esp+30h+var_2C] 3 +
mov [esp+30h+var_30] esi +
call sub_43CB30  +
jmp loc_44A001  +
mov eax [edi+4] +
mov [esp+30h+var_14] ecx +
mov [esp+30h+var_30] eax +
call sub_459F50  +
mov ebx eax +
sub ebx [edi+4] +
lea eax [ebx+1] +
mov [esp+30h+var_30] eax +
call sub_452ED0  +
mov ebp eax +
mov eax [edi+4] +
mov [esp+30h+var_28] ebx +
mov [esp+30h+var_30] ebp +
mov [esp+30h+var_2C] eax +
call memcpy  +
mov edx ebp +
mov ecx [esp+30h+var_14] +
mov byte ptr [ebp+ebx+0] 0 +
mov [edi+0Ch] ebp +
jmp loc_44A073  +
xor ecx ecx +
jmp loc_44A06C  +
test ecx ecx +
jnz loc_449FF6  +
jmp loc_44A025  +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+4] +
mov [ebx+4] ecx +
mov [esp+34h+var_18] eax +
mov eax edx +
call sub_449820  +
test al al +
jnz loc_44A150  +
mov [esp+34h+var_19] 0 +
mov eax [esp+34h+var_18] +
mov [ebx+4] eax +
movzx eax [esp+34h+var_19] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+58h] +
mov eax [esi+200h] +
mov [esp+34h+var_30] edi +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_2C] edx +
call eax  +
and eax 1 +
mov [esp+34h+var_19] al +
jz loc_44A1E0  +
cmp byte ptr [esi+253h] 0 +
jz loc_44A137  +
mov eax [esi+1Ch] +
mov ebp 1 +
cmp dword ptr [eax+20h] 1 +
jbe loc_44A1A9  +
mov eax ds:_iob +
add ebp 1 +
mov [esp+34h+var_34] 2Eh +
add eax 40h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi+1Ch] +
cmp [eax+20h] ebp +
ja loc_44A186  +
cmp [esp+34h+var_19] 1 +
mov [esp+34h+var_28] edi +
mov [esp+34h+var_30] offset aCS +
sbb eax eax +
and eax 57h +
add eax 21h +
mov [esp+34h+var_2C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+34h+var_34] eax +
call sub_47D600  +
jmp loc_44A137  +
mov eax [ebx+58h] +
mov [esp+34h+var_34] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
jmp loc_44A16F  +
***
mov eax [esp+arg_0] +
mov eax [eax+5Ch] +
test eax eax +
setnz al  +
retn   +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+arg_C] +
test edi edi +
mov [esp+7Ch+var_5C] eax +
jz loc_44A930  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_45D3F0  +
mov ecx [esp+7Ch+arg_0] +
mov edx [ecx+0A4h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_78] eax +
call sub_45D030  +
mov [esp+7Ch+var_60] eax +
mov eax [eax] +
test eax eax +
jz loc_44A2A5  +
mov ecx [eax+4] +
cmp [esp+7Ch+arg_8] ecx +
jz loc_44A488  +
mov edx [esp+7Ch+arg_8] +
jmp loc_44A29F  +
cmp edx [eax+4] +
jz loc_44A488  +
mov eax [eax] +
test eax eax +
jnz loc_44A296  +
mov [esp+7Ch+var_78] 68h +
mov [esp+7Ch+var_7C] 1 +
call sub_452F00  +
mov ebp eax +
mov eax [esp+7Ch+arg_0] +
mov edx [eax] +
mov eax [esp+7Ch+arg_8] +
mov dword ptr [ebp+58h] 0FFFFFFFFh +
test edx edx +
mov [ebp+20h] eax +
mov eax [esp+7Ch+arg_4] +
setz byte ptr [ebp+64h]  +
mov [esp+7Ch+var_7C] eax +
call sub_452FA0  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
mov [ebp+0] eax +
jz loc_44A495  +
mov edx 1 +
test bl bl +
mov [ebp+66h] dl +
jnz loc_44A99D  +
mov edi eax +
mov eax [esp+7Ch+arg_0] +
mov esi [ebp+20h] +
mov [esp+7Ch+var_64] ebp +
mov byte ptr [esp+7Ch+var_44] 0 +
add eax 0B4h +
mov [esp+7Ch+var_45] 0 +
mov ebp esi +
mov [esp+7Ch+var_46] 0 +
mov [esp+7Ch+var_40] eax +
jmp loc_44A417  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_44A911  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ebp eax +
test ebp ebp +
jz loc_44A5D0  +
mov eax [esp+7Ch+arg_0] +
cmp byte ptr [eax+2A9h] 0 +
jnz loc_44A372  +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_44A3A8  +
mov [esp+7Ch+var_7C] ebp +
call sub_45C680  +
test eax eax +
mov ebx eax +
jz loc_44A923  +
mov [esp+7Ch+var_7C] eax +
call strlen  +
mov [esp+7Ch+var_7C] ebp +
mov esi eax +
call strlen  +
cmp esi eax +
jnb loc_44A923  +
mov [esp+7Ch+var_7C] ebp +
mov ebp ebx +
call free  +
mov [esp+7Ch+var_7C] ebp +
call sub_45D3F0  +
mov ebx eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_45CEC0  +
test eax eax +
mov eax [esp+7Ch+var_64] +
jz loc_44A710  +
mov dword ptr [eax+5Ch] 2 +
mov ecx [esp+7Ch+var_64] +
mov eax [ecx+20h] +
mov esi [eax] +
test esi esi +
mov [ecx+20h] esi +
jz loc_44A9B0  +
mov eax [esp+7Ch+arg_0] +
cmp esi [eax+74h] +
jz loc_44A5E7  +
cmp esi [eax+70h] +
jz loc_44A700  +
mov eax [esp+7Ch+var_64] +
mov ebp esi +
mov edi [eax] +
mov ecx [esp+7Ch+arg_0] +
mov eax edi +
mov edx ebp +
cmp byte ptr [ecx+261h] 0 +
jz loc_44A337  +
mov eax [ebp+14h] +
test eax eax +
jz loc_44A95F  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_44A451  +
jmp loc_44A4C0  +
mov eax [ebp+14h] +
add ebx 2 +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_44A4C0  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_4531F0  +
test eax eax +
jnz loc_44A444  +
mov eax [ebp+14h] +
mov eax [eax+ebx*4+4] +
mov [esp+7Ch+var_7C] eax +
call sub_452FA0  +
test eax eax +
mov ebp eax +
jnz loc_44A355  +
mov eax [esp+7Ch+var_64] +
mov edx [eax+20h] +
mov eax [eax] +
jmp loc_44A337  +
mov ebx [eax+0Ch] +
add esp 7Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+7Ch+arg_0] +
mov edx [esi] +
test edx edx +
jz loc_44A996  +
mov ecx [edx+2Ch] +
xor edx edx +
cmp byte ptr [ecx+66h] 0 +
jz loc_44A2FD  +
jmp loc_44A2F8  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_44A47A  +
cmp al 2Fh +
jz loc_44A47A  +
test al al +
jz loc_44A4D5  +
cmp byte ptr [edi+1] 3Ah +
jz loc_44A47A  +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] edi +
call strchr  +
mov [esp+7Ch+var_78] 5Ch +
mov [esp+7Ch+var_7C] edi +
mov ebx eax +
call strchr  +
cmp ebx eax +
setnbe cl  +
test ebx ebx +
setz dl  +
or dl cl +
jz loc_44A50C  +
test eax eax +
mov ebx eax +
setz dl  +
cmp edi ebx +
jz loc_44A47A  +
test dl dl +
jnz loc_44A47A  +
mov edx [ebp+8] +
mov eax ebx +
sub eax edi +
mov [esp+7Ch+var_50] eax +
add edx eax +
lea eax [edx+1] +
mov [esp+7Ch+var_54] eax +
lea eax [edx+3] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_4C] edx +
call sub_452ED0  +
mov esi eax +
mov eax [ebp+8] +
lea ecx [esi+eax] +
mov [esp+7Ch+var_58] ecx +
mov ecx [ebp+4] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_78] ecx +
call memcpy  +
mov eax [ebp+8] +
mov edx [esp+7Ch+var_4C] +
test eax eax +
jz loc_44A58E  +
mov ecx [ebp+4] +
movzx eax byte ptr [ecx+eax-1] +
cmp al 5Ch +
jz loc_44A58E  +
cmp al 2Fh +
jz loc_44A58E  +
mov eax [esp+7Ch+var_58] +
lea ecx [edx+2] +
mov [esp+7Ch+var_54] ecx +
mov byte ptr [eax] 2Fh +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edi +
lea edi [ebx+1] +
add eax 1 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+var_54] +
mov edx esi +
mov byte ptr [esi+eax] 0 +
mov eax [esp+7Ch+arg_0] +
movzx ecx byte ptr [ebp+0Ch] +
call sub_449690  +
mov ebp eax +
jmp loc_44A42F  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+5Ch] 2 +
mov dword ptr [eax+4] 0 +
jmp loc_44A3E2  +
mov [esp+7Ch+var_46] 1 +
mov eax [esp+7Ch+var_60] +
mov ebx [eax] +
test ebx ebx +
jnz loc_44A60A  +
jmp loc_44A40F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44A40F  +
cmp esi [ebx+4] +
lea esi [esi+0] +
jnz loc_44A600  +
mov ebp [esp+7Ch+var_64] +
mov eax [ebp+0] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebp [ebx+0Ch] +
mov eax [esp+7Ch+arg_0] +
call sub_449630  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_8] +
cmp [esp+7Ch+var_46] 0 +
mov edx [edi] +
mov [eax+4] ecx +
mov ecx [esp+7Ch+arg_0] +
mov [eax] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
jz loc_44A6A0  +
mov eax [ecx+74h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_44A6A0  +
cmp esi eax +
jz loc_44A6A0  +
mov eax ecx +
call sub_449630  +
mov edi [esp+7Ch+var_60] +
mov ecx [esp+7Ch+arg_0] +
mov edx [edi] +
mov [eax] edx +
mov edx [ecx+74h] +
mov [eax+4] edx +
mov edx [ecx+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [edi] eax +
cmp [esp+7Ch+var_45] 0 +
mov ebx ebp +
jz loc_44A48B  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+70h] +
cmp eax [esp+7Ch+arg_8] +
jz loc_44A48B  +
cmp esi eax +
jz loc_44A48B  +
mov eax [esp+7Ch+arg_0] +
call sub_449630  +
mov esi [esp+7Ch+var_60] +
mov edi [esp+7Ch+arg_0] +
mov edx [esi] +
mov [eax] edx +
mov edx [edi+70h] +
mov [eax+4] edx +
mov edx [edi+1Ch] +
mov edx [edx+28h] +
mov [eax+0Ch] ebp +
mov [eax+8] edx +
mov [esi] eax +
jmp loc_44A48B  +
mov [esp+7Ch+var_45] 1 +
jmp loc_44A5EC  +
mov [eax+4] ebp +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz loc_44A7EB  +
mov eax [esp+7Ch+arg_0] +
mov esi [eax+200h] +
test esi esi +
jz loc_44A7EB  +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_44A747  +
jmp loc_44A757  +
mov eax [eax+10h] +
test eax eax +
jz loc_44A757  +
cmp byte ptr [eax+66h] 0 +
jnz loc_44A740  +
cmp byte ptr [eax+64h] 0 +
jz loc_44A7EB  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov esi eax +
lea eax [eax+5] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_50] eax +
call sub_452ED0  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov edi eax +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_58] eax +
call memcpy  +
mov eax edi +
mov dword ptr [edi+esi] 6863672Eh +
mov byte ptr [edi+esi+4] 0 +
lea edi [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call ds:_stati64  +
test eax eax +
jnz loc_44A7DF  +
movzx eax [esp+7Ch+var_36] +
and ax 0F000h +
cmp ax 4000h +
jz loc_44AAE5  +
mov edx [esp+7Ch+var_64] +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+arg_0] +
call sub_44A110  +
mov edx eax +
test dl dl +
jnz loc_44AA90  +
mov byte ptr [esp+7Ch+var_44] 1 +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
call sub_449820  +
test al al +
jnz loc_44A96E  +
mov eax [esp+7Ch+var_64] +
cmp dword ptr [eax+5Ch] 2 +
jnz loc_44AAA0  +
mov [esp+7Ch+var_7C] ebp +
call strlen  +
mov edi [esp+7Ch+arg_0] +
mov edx [edi+0C4h] +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
lea ecx [esi+1] +
mov eax [eax+0C0h] +
sub edx eax +
cmp edx ecx +
jb loc_44AC37  +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esp+7Ch+arg_0] +
add esi [eax+0C0h] +
lea eax [esi+1] +
mov edx esi +
mov esi [esp+7Ch+arg_0] +
mov [esi+0C0h] eax +
mov byte ptr [edx] 0 +
mov edi [esi+0BCh] +
mov eax [esi+0C0h] +
cmp edi eax +
jz loc_44AC59  +
mov esi [esp+7Ch+arg_0] +
mov edx [esi+0CCh] +
mov ecx [esi+0B8h] +
add eax edx +
not edx  +
and eax edx +
mov edx [esi+0C4h] +
mov [esi+0C0h] eax +
mov esi eax +
sub esi ecx +
mov [esp+7Ch+var_58] esi +
mov esi edx +
sub esi ecx +
cmp [esp+7Ch+var_58] esi +
jbe loc_44A8C7  +
mov eax [esp+7Ch+arg_0] +
mov [eax+0C0h] edx +
mov eax edx +
mov esi [esp+7Ch+arg_0] +
mov [esi+0BCh] eax +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0B0h] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_45D030  +
mov esi [esp+7Ch+var_64] +
mov [eax] edi +
mov eax [esi] +
mov [esi+4] eax +
jmp loc_44A3E2  +
mov ecx [edx+8] +
add edx 4 +
call sub_449A60  +
mov ebp eax +
jmp loc_44A34D  +
mov [esp+7Ch+var_7C] ebx +
call free  +
jmp loc_44A3A8  +
mov eax [esp+7Ch+arg_18] +
mov [esp+7Ch+var_70] offset aNullDirectoryI +
mov [esp+7Ch+var_78] 4 +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_43CD70  +
jmp loc_44A238  +
mov eax ebp +
call sub_449AE0  +
mov eax [ebp+14h] +
jmp loc_44A43A  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+arg_0] +
xor esi esi +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
jmp loc_44A62C  +
xor edx edx +
jmp loc_44A2FD  +
mov [esp+7Ch+var_45] 0 +
mov [esp+7Ch+var_46] 0 +
jmp loc_44A972  +
mov eax [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_64] +
mov eax [eax+208h] +
test eax eax +
jz loc_44AA38  +
mov esi [esp+7Ch+arg_4] +
lea edx [ebp+20h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] esi +
mov esi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] esi +
call eax  +
test eax eax +
mov [ebp+4] eax +
jz loc_44AA32  +
mov eax ebp +
call sub_449820  +
test al al +
jz loc_44AA27  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+9Ch] +
mov [ebp+10h] eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+9Ch] ebp +
mov eax [esp+7Ch+var_60] +
mov eax [eax] +
test eax eax +
jz loc_44AC65  +
mov ebx ebp +
jmp loc_44A48B  +
mov eax [ebp+4] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [ebp+0] +
mov [ebp+4] eax +
cmp byte ptr [esp+7Ch+var_44] 0 +
jnz loc_44ABDB  +
cmp byte ptr [esp+7Ch+var_5C] 0 +
jz loc_44AAC1  +
mov eax [ebp+0] +
xor ebx ebx +
mov [esp+7Ch+var_7C] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov eax [esp+7Ch+var_60] +
mov ecx [eax] +
test ecx ecx +
jnz loc_44A48B  +
mov [eax] ebp +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_45D2C0  +
jmp loc_44A48B  +
mov ebp [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_58] +
mov [ebp+8] eax +
jmp loc_44A972  +
mov ebp eax +
mov eax [esp+7Ch+arg_18] +
xor ecx ecx +
mov edx ebp +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_449920  +
jmp loc_44A972  +
mov eax [esp+7Ch+arg_18] +
mov edx ebp +
mov ecx [esp+7Ch+arg_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+arg_0] +
call sub_449920  +
jmp loc_44A972  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] edi +
call sub_474850  +
test eax eax +
mov [esp+7Ch+var_54] eax +
jz loc_44A7DA  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_44] ebp +
mov ebp ebx +
mov byte ptr [edi+esi+4] 2Fh +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_7C] eax +
call sub_474A10  +
test eax eax +
jz loc_44ABD1  +
lea ebx [eax+8] +
mov edi offset a__0 +
mov [esp+7Ch+var_7C] ebx +
mov esi ebx +
call strlen  +
mov ecx 2 +
cmps   +
jz loc_44AB10  +
mov edi offset a__ +
mov esi ebx +
mov ecx 3 +
cmps   +
jz loc_44AB10  +
lea esi [eax+1] +
mov eax [esp+7Ch+var_50] +
add eax esi +
cmp eax [esp+7Ch+var_4C] +
ja loc_44ABAF  +
mov edi [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] esi +
mov [esp+7Ch+var_78] ebx +
add eax edi +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_64] +
mov ecx edi +
mov eax [esp+7Ch+arg_0] +
call sub_44A110  +
test al al +
jz loc_44AB10  +
mov ebx ebp +
mov ebp [esp+7Ch+var_44] +
mov edx eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] edx +
mov [esp+7Ch+var_7C] eax +
call sub_474B30  +
mov edx [esp+7Ch+var_50] +
jmp loc_44A7D2  +
mov eax [esp+7Ch+var_4C] +
lea eax [eax+esi+40h] +
mov [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
call sub_452F50  +
mov [esp+7Ch+var_58] eax +
jmp loc_44AB5E  +
mov ebx ebp +
xor edx edx +
mov ebp [esp+7Ch+var_44] +
jmp loc_44AB96  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aOneOrMorePchFi +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43CB30  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_437EF0  +
cmp byte ptr [eax+48h] 0 +
jnz loc_44AA43  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] offset aUseWinvalidPch +
mov [esp+7Ch+var_78] 3 +
mov [esp+7Ch+var_7C] eax +
call sub_43CB30  +
jmp loc_44AA43  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] eax +
call sub_4592E0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0C0h] +
jmp loc_44A83B  +
or byte ptr [esi+0DCh] 2 +
jmp loc_44A881  +
mov esi [esp+7Ch+var_60] +
mov ebx ebp +
mov eax [esp+7Ch+arg_0] +
mov [esi] ebp +
mov eax [eax+0A4h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_45D2C0  +
jmp loc_44A48B  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_8] +
mov esi [esp+4Ch+arg_0] +
cmp byte ptr [ebx+62h] 0 +
mov eax ebp +
mov byte ptr [esp+4Ch+var_38] al +
jnz loc_44AD04  +
mov eax ebp +
test al al +
jnz loc_44AD10  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44ACC7  +
movzx eax byte ptr [eax+14h] +
and eax 3Fh +
cmp al 1 +
jz loc_44AD04  +
mov eax [ebx+8] +
test eax eax +
jz loc_44AD24  +
mov ecx [ebx+58h] +
mov edi [ebx+4] +
mov edx [esi+204h] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] esi +
call edx  +
mov eax [ebx+8] +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_4C] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 4Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp word ptr [ebx+60h] 0 +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jz loc_44ACB5  +
jmp loc_44AD04  +
mov ecx [esp+4Ch+arg_C] +
mov edx ebx +
mov eax esi +
call sub_449D70  +
test al al +
mov edi eax +
jz loc_44AD04  +
mov ecx ds:dword_4D9298 +
test ecx ecx +
jz loc_44AE00  +
mov eax ebp +
test al al +
jnz loc_44ADAF  +
cmp byte ptr [ecx+4] 0 +
jz loc_44AE00  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_449CE0 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 0 +
call bsearch  +
test eax eax +
jz loc_44AE00  +
mov byte ptr [esi+0E1h] 1 +
mov byte ptr [ebx+62h] 1 +
jmp loc_44AD04  +
mov eax [ebx+40h] +
add ecx 8 +
mov edx [ebx+44h] +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_10] ebx +
mov [esp+4Ch+var_2C] eax +
mov eax [ecx-8] +
mov [esp+4Ch+var_3C] offset loc_449CE0 +
mov [esp+4Ch+var_40] 20h +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_13] 1 +
call bsearch  +
test eax eax +
jnz loc_44AD04  +
lea esi [esi+0] +
cmp byte ptr [esi+0E1h] 0 +
jz loc_44AED4  +
mov ebp [esi+9Ch] +
test ebp ebp +
jz loc_44AED4  +
mov [esp+4Ch+arg_0] esi +
movzx esi byte ptr [esp+4Ch+var_38] +
jmp loc_44AE31  +
mov ebp [ebp+10h] +
test ebp ebp +
jz loc_44AED0  +
cmp ebx ebp +
jz loc_44AE26  +
mov eax esi +
test al al +
jnz loc_44AE41  +
cmp byte ptr [ebp+62h] 0 +
jz loc_44AE26  +
mov eax [ebp+5Ch] +
test eax eax +
jnz loc_44AE26  +
mov eax [ebx+4Ch] +
cmp [ebp+4Ch] eax +
jnz loc_44AE26  +
mov eax [ebp+40h] +
mov edx [ebp+44h] +
xor edx [ebx+44h] +
xor eax [ebx+40h] +
or edx eax +
jnz loc_44AE26  +
mov ecx [ebp+14h] +
mov [esp+4Ch+var_38] ebp +
test ecx ecx +
jz loc_44AE75  +
cmp byte ptr [ebp+65h] 0 +
jz loc_44AFEF  +
mov edx [esp+4Ch+var_38] +
mov ecx [esp+4Ch+arg_C] +
mov eax [esp+4Ch+arg_0] +
call sub_449D70  +
xor edx edx +
test al al +
jz loc_44AEB0  +
mov eax [esp+4Ch+var_38] +
mov ecx [eax+40h] +
mov eax [eax+44h] +
mov [esp+4Ch+var_34] eax +
mov eax [ebx+44h] +
xor [esp+4Ch+var_34] eax +
mov eax [ebx+40h] +
xor eax ecx +
or eax [esp+4Ch+var_34] +
jz loc_44B069  +
mov eax [ebp+14h] +
test eax eax +
jz loc_44AEC1  +
cmp byte ptr [ebp+65h] 0 +
jz loc_44B04C  +
test dl dl +
jz loc_44AE26  +
jmp loc_44AD04  +
mov esi [esp+4Ch+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_44AFE4  +
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_44AFE4  +
movzx edx byte ptr [eax+3Dh] +
movzx eax byte ptr [ecx+0Ch] +
cmp dl al +
jbe loc_44AFD3  +
movzx ebp dl +
xor ecx ecx +
test ebp ebp +
setnz cl  +
cmp [esi+28Ch] ecx +
movzx eax word ptr [ebx+60h] +
jle loc_44AF44  +
test ax ax +
jnz loc_44AF44  +
cmp byte ptr [ebx+64h] 0 +
jz loc_44AF23  +
cmp byte ptr [esi+292h] 0 +
jnz loc_44AF44  +
mov eax [esi+180h] +
mov ecx [ebx+4] +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] ecx +
call sub_44BFB0  +
movzx eax word ptr [ebx+60h] +
mov edx [esp+4Ch+var_38] +
add eax 1 +
mov [ebx+60h] ax +
xor eax eax +
mov byte ptr [ebx+65h] 0 +
cmp byte ptr [esi+26Bh] 0 +
jz loc_44AF67  +
movzx eax byte ptr [esi+2A8h] +
xor eax 1 +
movzx eax al +
mov ecx [ebx+14h] +
mov [esp+4Ch+var_40] eax +
mov eax [ebx+40h] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_44] eax +
call sub_437F60  +
mov edx [esp+4Ch+var_38] +
mov [eax+3Dh] dl +
mov edx [ebx+18h] +
mov [eax+2Ch] ebx +
mov [eax+14h] edx +
mov eax [ebx+4] +
mov byte ptr [esi+0ECh] 1 +
mov dword ptr [esi+0E4h] 0 +
mov [esp+4Ch+var_3C] ebp +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_437690  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebp al +
xor ecx ecx +
test ebp ebp +
mov edx eax +
setnz cl  +
jmp loc_44AF03  +
xor ebp ebp +
xor edx edx +
xor ecx ecx +
jmp loc_44AF03  +
mov edx [ebp+0] +
mov ecx [ebp+20h] +
mov [esp+4Ch+var_48] 68h +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_30] edx +
mov [esp+4Ch+var_34] ecx +
call sub_452F00  +
mov ecx [esp+4Ch+arg_0] +
mov edx [ecx] +
mov ecx [esp+4Ch+var_34] +
mov dword ptr [eax+58h] 0FFFFFFFFh +
mov [esp+4Ch+var_38] eax +
test edx edx +
mov edx [esp+4Ch+var_30] +
mov [eax+20h] ecx +
setz byte ptr [eax+64h]  +
mov [esp+4Ch+var_4C] edx +
call sub_452FA0  +
mov ecx [esp+4Ch+var_38] +
mov [ecx] eax +
mov eax [ebp+4] +
mov [ecx+4] eax +
jmp loc_44AE75  +
mov eax [esp+4Ch+var_38] +
mov [esp+4Ch+var_34] edx +
mov dword ptr [eax+4] 0 +
call sub_4494F0  +
mov edx [esp+4Ch+var_34] +
jmp loc_44AEC1  +
mov [esp+4Ch+var_44] ecx +
mov eax [ebx+14h] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_38] +
mov eax [eax+14h] +
mov [esp+4Ch+var_4C] eax +
call memcmp  +
test eax eax +
setz dl  +
jmp loc_44AEB0  +
***
mov eax [esp+arg_0] +
mov byte ptr [eax+0E1h] 1 +
mov eax [esp+arg_4] +
mov byte ptr [eax+62h] 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_8] +
cmp ebx 3 +
jz loc_44B174  +
mov [esp+2Ch+var_2C] ebx +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_449FC0  +
test eax eax +
jz loc_44B168  +
mov ecx [esp+2Ch+arg_10] +
cmp ebx 4 +
setz dl  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_14] ecx +
movzx ecx dl +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_10] edx +
call sub_44A210  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ecx eax +
setz al  +
and al dl +
mov edi eax +
jnz loc_44B168  +
mov edx [ecx+8] +
test edx edx +
jz loc_44B1A4  +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_20] eax +
xor eax eax +
cmp ebx 2 +
setz al  +
mov [esp+2Ch+var_24] eax +
call sub_44AC90  +
test al al +
jnz loc_44B195  +
mov eax [esi+1Ch] +
add dword ptr [eax+28h] 1 +
add esp 2Ch +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor edi edi +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+104h] +
mov eax [esi+0F0h] +
cmp eax [edx+8] +
jz loc_44B0D0  +
mov dword ptr [eax-10h] 0 +
jmp loc_44B0D0  +
add esp 2Ch +
mov edi 1 +
pop ebx  +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+5Ch] +
test eax eax +
jnz loc_44B133  +
lea eax [ebx-3] +
cmp eax 1 +
jbe loc_44B133  +
mov eax [esi+1Ch] +
sub dword ptr [eax+28h] 1 +
jmp loc_44B133  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+24h] +
mov [esp] ebx +
call sub_45D3F0  +
mov edx [esp+20h] +
mov edx [edx+0A4h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edx +
call sub_45CEC0  +
test eax eax +
jz loc_44B217  +
nop   +
mov ecx [eax+4] +
test ecx ecx +
jz loc_44B211  +
mov edx [eax+0Ch] +
mov edx [edx+5Ch] +
test edx edx +
jz loc_44B220  +
mov eax [eax] +
test eax eax +
jnz loc_44B200  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov edi [esp+20h] +
mov esi [esp+28h] +
mov [esp] ebx +
call sub_45D3F0  +
mov edx [edi+0A4h] +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+8] eax +
call sub_45CEC0  +
mov ebx eax +
mov eax esi +
and eax 7FFFFFFFh +
cmp esi eax +
jz loc_44B27E  +
mov eax [edi+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
call sub_42BA90  +
mov esi eax +
test ebx ebx +
jz loc_44B29E  +
mov edx [ebx+4] +
test edx edx +
jz loc_44B298  +
mov edx [ebx+0Ch] +
mov eax [edx+5Ch] +
test eax eax +
jnz loc_44B298  +
cmp [ebx+8] esi +
jbe loc_44B2A7  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44B282  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+28h+var_14] offset free +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_18] offset sub_452F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_4495F0 +
mov [esp+28h+var_24] offset sub_4494C0 +
add ebx 0B4h +
mov [esp+28h+var_28] 7Fh +
call sub_45CC40  +
mov [ebx-10h] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_452F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_4495F0 +
mov [esp+28h+var_24] offset sub_4494C0 +
mov [esp+28h+var_28] 7Fh +
call sub_45CC40  +
mov [ebx-0Ch] eax +
mov [esp+28h+var_28] 7F8h +
call sub_452ED0  +
mov edx [ebx-8] +
mov dword ptr [eax] 0 +
mov [eax+4] edx +
mov [ebx-8] eax +
mov [esp+28h+var_14] offset free +
mov [esp+28h+var_18] offset sub_452F00 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] offset sub_4495C0 +
mov [esp+28h+var_24] offset sub_45D3F0 +
mov [esp+28h+var_28] 7Fh +
call sub_45CC40  +
mov [ebx-4] eax +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_18] offset free +
mov [esp+28h+var_1C] offset sub_452ED0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] 0 +
call sub_459280  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+0A4h] +
mov [esp+14h+var_14] eax +
call sub_45CD50  +
mov eax [esi+0A8h] +
mov [esp+14h+var_14] eax +
call sub_45CD50  +
mov eax [esi+0B0h] +
mov [esp+14h+var_14] eax +
call sub_45CD50  +
lea eax [esi+0B4h] +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] 0 +
call sub_4593F0  +
mov eax [esi+0ACh] +
test eax eax +
jnz loc_44B417  +
jmp loc_44B426  +
mov eax ebx +
mov ebx [eax+4] +
mov [esp+14h+var_14] eax +
call free  +
test ebx ebx +
jnz loc_44B415  +
mov eax [esi+9Ch] +
test eax eax +
jnz loc_44B434  +
jmp loc_44B440  +
mov eax ebx +
mov ebx [eax+10h] +
call sub_4494F0  +
test ebx ebx +
jnz loc_44B432  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_44B3C0  +
mov dword ptr [ebx+0ACh] 0 +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+20h] ebx +
add esp 18h +
pop ebx  +
jmp sub_44B2C0  +
***
jmp sub_44B490  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov edx [eax] +
mov edx [edx+2Ch] +
mov edx [edx+20h] +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_44A210  +
add esp 2Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+1Ch] +
mov esi [eax+8] +
lea edx [esi-1] +
imul edx edx +
add edx [eax] +
mov eax [esp+24h+arg_4] +
test eax eax +
jz loc_44B550  +
cmp [esp+24h+arg_8] 1 +
sbb eax eax +
add eax 2 +
cmp [esp+24h+arg_8] 1 +
sbb ecx ecx +
add ecx 2 +
mov esi [ebx] +
mov [esi+3Dh] cl +
mov esi [edx+8] +
mov [esp+24h+var_14] eax +
mov eax [ebx+1Ch] +
movzx ecx byte ptr [edx+18h] +
mov eax [eax+2Ch] +
sub eax [edx] +
shr eax cl +
add eax [edx+0Ch] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
mov [esp+24h+var_20] 2 +
call sub_437690  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
xor ecx ecx +
jmp loc_44B513  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437690  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov eax [ebx+0A4h] +
mov [esp] eax +
call sub_45CAE0  +
lea edx [esp+18h] +
mov [esp+1Ch] eax +
mov eax [ebx+0A4h] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_449530 +
mov [esp] eax +
call sub_45D360  +
mov eax [esp+18h] +
test eax eax +
jz loc_44B689  +
mov edx [esp+1Ch] +
xor ebx ebx +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_449800 +
mov dword ptr [esp+8] 4 +
mov [esp+4] edx +
call qsort  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMultipleInclud +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_44B67D  +
nop   +
mov eax [esp+18h] +
mov ecx ds:_iob +
mov eax [eax+ebx*4] +
add ebx 1 +
lea edx [ecx+40h] +
mov [esp+4] edx +
mov [esp] eax +
call fputs  +
mov eax ds:_iob +
mov dword ptr [esp] 0Ah +
add eax 40h +
mov [esp+4] eax +
call putc  +
cmp [esp+1Ch] ebx +
ja loc_44B640  +
mov eax [esp+18h] +
mov [esp] eax +
call free  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov ebx [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov [esp+20h+var_20] 0 +
mov eax esi +
mov edx ebx +
mov ecx edi +
call sub_449FC0  +
test eax eax +
jz loc_44B720  +
mov [esp+20h+var_1C] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
mov [esp+20h+var_20] esi +
call sub_44A210  +
mov ebx eax +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_44B720  +
mov eax [ebx+58h] +
cmp eax 0FFFFFFFFh +
jz loc_44B704  +
mov [esp+20h+var_20] eax +
call _close_0  +
mov dword ptr [ebx+58h] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+2Ch] +
mov eax [eax+4Ch] +
cmp [ebx+4Ch] eax +
setnle al  +
movzx eax al +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_44B715  +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 3 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_44B0B0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 4 +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_44B0B0  +
add esp 2Ch +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [esp+arg_8] +
cmp byte ptr [edx+0ECh] 0 +
jz loc_44B7CD  +
mov ebx [ecx+1Ch] +
test ebx ebx +
jz loc_44B7E7  +
test eax eax +
mov byte ptr [edx+0ECh] 0 +
jz loc_44B810  +
cmp [ecx+18h] eax +
jz loc_44B7F2  +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
mov ebx [edx+0E4h] +
mov [ecx+1Ch] ebx +
jmp loc_44B7CD  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+14h] 0 +
mov byte ptr [ecx+65h] 0 +
mov [esp+arg_0] eax +
pop ebx  +
jmp free  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
add eax 28h +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edi [esp+20h] +
mov ebx [esp+24h] +
mov esi [esp+28h] +
test eax eax +
setnz byte ptr [edi+0E0h]  +
test ebx ebx +
mov [edi+70h] ebx +
mov [edi+74h] ebx +
jnz loc_44B876  +
jmp loc_44B898  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44B898  +
mov eax [ebx+4] +
mov dword ptr [ebx+14h] 0 +
mov [esp] eax +
call strlen  +
cmp ebx esi +
mov [ebx+8] eax +
jnz loc_44B870  +
mov [edi+74h] ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44B876  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+20h] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+2Ch] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+28h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+9Ch] +
test eax eax +
jz loc_44BA7D  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov eax [eax+10h] +
add edx 1 +
test eax eax +
jnz loc_44B910  +
shl edx 5 +
lea eax [edx+8] +
mov [esp+4] eax +
mov dword ptr [esp] 1 +
call sub_452F00  +
mov esi eax +
mov dword ptr [eax] 0 +
mov byte ptr [eax+4] 0 +
mov eax [esp+40h] +
mov ebx [eax+9Ch] +
test ebx ebx +
jz loc_44BAA5  +
xor ebp ebp +
jmp loc_44B98B  +
mov eax [ebx+14h] +
mov [esp+8] ecx +
mov ecx [ebx+40h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_4679C0  +
mov eax [ebx+40h] +
mov ecx ebp +
mov edx [ebx+44h] +
shl ecx 5 +
mov ebp [esi] +
mov [esi+ecx+8] eax +
mov [esi+ecx+0Ch] edx +
lea esi [esi+0] +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_44BA20  +
cmp byte ptr [ebx+63h] 0 +
jnz loc_44B980  +
mov eax [ebx+5Ch] +
test eax eax +
jnz loc_44B980  +
cmp word ptr [ebx+60h] 0 +
jz loc_44B980  +
lea eax [ebp+1] +
mov [esi] eax +
mov eax ebp +
shl eax 5 +
lea ecx [esi+eax+10h] +
movzx eax byte ptr [ebx+62h] +
mov [ecx+10h] al +
or [esi+4] al +
cmp byte ptr [ebx+65h] 0 +
jnz loc_44B952  +
mov eax [ebx+58h] +
mov [esp+18h] ecx +
mov [esp+1Ch] eax +
mov eax ebx +
call sub_449820  +
mov ecx [esp+18h] +
test al al +
mov edi eax +
jz loc_44BA87  +
mov eax [ebx+58h] +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp+18h] ecx +
mov [esp] eax +
call j__fdopen  +
mov ecx [esp+18h] +
mov [esp+4] ecx +
mov edi eax +
mov [esp] eax +
call sub_467A40  +
mov [esp] edi +
call fclose  +
mov eax [esp+1Ch] +
mov [ebx+58h] eax +
jmp loc_44B968  +
***
mov eax ebp +
shl eax 5 +
lea ebx [eax+8] +
lea eax [esi+8] +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_449A30 +
mov dword ptr [esp+8] 20h +
mov [esp+4] ebp +
call qsort  +
mov eax [esp+44h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] esi +
mov [esp+0Ch] eax +
call fwrite  +
mov [esp] esi +
cmp eax 1 +
setz bl  +
call free  +
mov edi ebx +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 8 +
jmp loc_44B920  +
***
mov eax [esp+40h] +
xor ecx ecx +
mov edx ebx +
mov dword ptr [esp] 0 +
call sub_449920  +
mov [esp] esi +
call free  +
jmp loc_44BA73  +
***
mov ebx 8 +
xor ebp ebp +
jmp loc_44BA28  +
***
jmp loc_44BAC0  +
push ebx  +
sub esp 48h +
mov ebx [esp+54h] +
lea eax [esp+18h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 8 +
mov [esp] eax +
mov [esp+0Ch] ebx +
call fread  +
xor edx edx +
cmp eax 1 +
jz loc_44BAF6  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+18h] +
shl eax 5 +
add eax 8 +
mov [esp] eax +
call sub_452ED0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [eax] edx +
mov [eax+4] ecx +
mov ds:dword_4D9298 eax +
add eax 8 +
mov [esp+0Ch] ebx +
mov [esp+8] edx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call fread  +
cmp eax [esp+18h] +
setz dl  +
add esp 48h +
mov eax edx +
pop ebx  +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [esp+20h+arg_C] +
mov edx esi +
mov ecx edi +
mov [esp+20h+var_20] eax +
mov eax ebx +
call sub_449FC0  +
mov [esp+20h+var_10] edi +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_8] 0 +
mov [esp+20h+var_C] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] eax +
call sub_44A210  +
cmp dword ptr [eax+5Ch] 2 +
setnz al  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 10h +
mov eax [eax+18h] +
test eax eax +
jz loc_44BC22  +
mov edx [edi+20h] +
test edx edx +
jz loc_44BC22  +
xor esi esi +
jmp loc_44BBD3  +
mov eax [edi+18h] +
mov edx [edi+1Ch] +
mov eax [eax+esi*4] +
mov edx [edx+esi*4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_453240  +
test eax eax +
jnz loc_44BC1A  +
mov eax [edi+1Ch] +
mov ecx [eax+esi*4] +
lea eax [ebx+ecx] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_44BC06  +
cmp dl 2Fh +
jnz loc_44BC1A  +
cmp byte ptr [eax+1] 2Eh +
jnz loc_44BC72  +
cmp byte ptr [eax+2] 2Eh +
jnz loc_44BC72  +
movzx eax byte ptr [eax+3] +
cmp al 5Ch +
jnz loc_44BC68  +
add esi 1 +
cmp [edi+20h] esi +
ja loc_44BBD0  +
movzx eax byte ptr [ebx] +
cmp al 2Eh +
jnz loc_44BC52  +
movzx eax byte ptr [ebx+1] +
cmp al 5Ch +
jnz loc_44BC62  +
movzx eax byte ptr [ebx+2] +
lea edx [ebx+2] +
mov ebx edx +
cmp al 2Fh +
jnz loc_44BC5B  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_44BC40  +
cmp al 2Fh +
jz loc_44BC40  +
cmp al 2Eh +
jz loc_44BC29  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp al 5Ch +
jz loc_44BC40  +
nop   +
jmp loc_44BC25  +
cmp al 2Fh +
jz loc_44BC31  +
jmp loc_44BC52  +
cmp al 2Fh +
lea esi [esi+0] +
jz loc_44BC1A  +
lea ebx [ebx+ecx+1] +
jmp loc_44BC22  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx eax byte ptr [eax] +
test al al +
jz loc_44BD8B  +
lea edi [esi-1] +
xor ecx ecx +
mov ebx edi +
jmp loc_44BCBC  +
cmp al 23h +
jz loc_44BCE3  +
cmp al 24h +
setz al  +
movzx eax al +
add ecx eax +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
test al al +
jz loc_44BCF4  +
cmp al 20h +
jz loc_44BCC6  +
jg loc_44BCA0  +
cmp al 9 +
jnz loc_44BCAE  +
cmp esi ebx +
mov edx ebx +
ja loc_44BCE3  +
cmp byte ptr [ebx] 5Ch +
nop   +
jz loc_44BCD9  +
jmp loc_44BCE3  +
cmp byte ptr [edx] 5Ch +
jnz loc_44BCE3  +
sub edx 1 +
add ecx 1 +
cmp edx edi +
jnz loc_44BCD4  +
add ebx 1 +
movzx eax byte ptr [ebx+1] +
add ecx 1 +
add ecx 1 +
test al al +
jnz loc_44BCBC  +
add ecx 1 +
mov [esp+20h+var_20] ecx +
call sub_452ED0  +
movzx edx byte ptr [esi] +
test dl dl +
jz loc_44BD78  +
lea edi [esi-1] +
mov ecx eax +
mov ebx edi +
jmp loc_44BD35  +
cmp dl 23h +
jz loc_44BD70  +
cmp dl 24h +
jnz loc_44BD20  +
mov byte ptr [ecx] 24h +
add ecx 1 +
movzx edx byte ptr [ebx+1] +
add ebx 1 +
add ecx 1 +
mov [ecx-1] dl +
movzx edx byte ptr [ebx+1] +
test dl dl +
jz loc_44BD80  +
cmp dl 20h +
jz loc_44BD42  +
jg loc_44BD10  +
cmp dl 9 +
nop   +
jnz loc_44BD20  +
cmp esi ebx +
mov edx ebx +
mov ebp ecx +
ja loc_44BD65  +
cmp byte ptr [ebx] 5Ch +
jz loc_44BD57  +
nop   +
jmp loc_44BD65  +
cmp byte ptr [edx] 5Ch +
jnz loc_44BD65  +
sub edx 1 +
add ebp 1 +
cmp edi edx +
mov byte ptr [ebp-1] 5Ch +
jnz loc_44BD52  +
lea ecx [ebp+1] +
mov byte ptr [ebp+0] 5Ch +
jmp loc_44BD20  +
mov byte ptr [ecx] 5Ch +
add ecx 1 +
jmp loc_44BD20  +
mov ecx eax +
lea esi [esi+0] +
mov byte ptr [ecx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx 1 +
jmp loc_44BCF7  +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 28h +
mov [esp+1Ch+var_1C] 1 +
call sub_452F00  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_44BDF5  +
mov esi [ebx+4] +
test esi esi +
jz loc_44BDED  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx] +
cmp [ebx+4] esi +
ja loc_44BDD8  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44BE23  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_44BE1B  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+0Ch] +
cmp [ebx+10h] esi +
ja loc_44BE05  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_44BE5C  +
mov edx [ebx+20h] +
test edx edx +
jz loc_44BE49  +
xor esi esi +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+18h] +
cmp [ebx+20h] esi +
ja loc_44BE33  +
mov [esp+14h+var_14] eax +
call free  +
mov eax [ebx+1Ch] +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+4] +
cmp eax [ebx+8] +
jz loc_44BEB7  +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_44BBB0  +
mov edx [esp+14h+arg_8] +
test edx edx +
jnz loc_44BEB0  +
mov [esp+14h+var_14] eax +
call sub_452FA0  +
mov edx [ebx+4] +
mov ecx [ebx] +
lea esi [edx+1] +
mov [ebx+4] esi +
mov [ecx+edx*4] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call sub_44BC80  +
jmp loc_44BE9C  +
add eax 2 +
lea edx [eax+eax] +
mov [ebx+8] edx +
mov edx [ebx] +
shl eax 3 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_452F50  +
mov [ebx] eax +
jmp loc_44BE81  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44BF7B  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_44BF83  +
mov eax [ebp+arg_4] +
mov [esp+28h+var_28] eax +
call sub_459F50  +
mov [esp+28h+var_28] eax +
mov ebx eax +
call strlen  +
mov edi eax +
lea eax [eax+21h] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea esi [esp+28h+var_D] +
and esi 0FFFFFFF0h +
lea eax [edi+1] +
add edi esi +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] esi +
call memcpy  +
mov [esp+28h+var_24] 2Eh +
mov [esp+28h+var_28] esi +
call strrchr  +
mov edx 6F2Eh +
test eax eax +
cmovz eax edi +
mov [eax] dx +
mov byte ptr [eax+2] 0 +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] eax +
call sub_44BE70  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] offset asc_4CFC78 +
mov [esp+28h+var_28] eax +
call sub_44BE70  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [esp+14h+arg_4] +
mov eax ebx +
call sub_44BBB0  +
call sub_44BC80  +
mov edx [ebx+10h] +
cmp edx [ebx+14h] +
mov esi eax +
jz loc_44BFE5  +
mov eax [ebx+0Ch] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add edx 4 +
lea eax [edx+edx] +
mov [ebx+14h] eax +
mov eax [ebx+0Ch] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_452F50  +
mov edx [ebx+10h] +
lea ecx [edx+1] +
mov [ebx+10h] ecx +
mov [ebx+0Ch] eax +
mov [eax+edx*4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+34h] +
mov esi [esp+30h] +
movzx eax byte ptr [edx] +
test al al +
jz loc_44C0FF  +
cmp al 3Ah +
mov ebx edx +
jz loc_44C0B3  +
test al al +
jnz loc_44C04A  +
jmp loc_44C0B3  +
test al al +
jz loc_44C054  +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 3Ah +
jnz loc_44C046  +
mov edi ebx +
sub edi edx +
lea eax [edi+1] +
mov [esp] eax +
mov [esp+0Ch] edx +
call sub_452ED0  +
mov edx [esp+0Ch] +
mov [esp+8] edi +
mov [esp+4] edx +
mov ebp eax +
mov [esp] eax +
call memcpy  +
xor eax eax +
mov byte ptr [ebp+edi+0] 0 +
mov edx [esi+20h] +
cmp byte ptr [ebx] 3Ah +
setz al  +
add ebx eax +
cmp edx [esi+24h] +
jz loc_44C0C0  +
mov eax [esi+18h] +
mov [eax+edx*4] ebp +
mov eax [esi+1Ch] +
mov [eax+edx*4] edi +
add dword ptr [esi+20h] 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_44C0FF  +
mov edx ebx +
cmp al 3Ah +
mov ebx edx +
jnz loc_44C040  +
mov eax 1 +
xor edi edi +
jmp loc_44C05B  +
***
add edx 4 +
lea eax [edx+edx] +
mov [esi+24h] eax +
mov eax [esi+18h] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_452F50  +
mov ecx [esi+24h] +
lea edx ds:0[ecx*4] +
mov [esi+18h] eax +
mov eax [esi+1Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_452F50  +
mov edx [esi+20h] +
mov [esi+1Ch] eax +
jmp loc_44C094  +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+34h+arg_4] +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_24] eax +
mov eax [esp+34h+arg_8] +
mov edx eax +
sub eax 1 +
cmp eax 20h +
mov eax 22h +
cmova eax edx +
mov [esp+34h+var_20] eax +
mov eax [esi+4] +
test eax eax +
jz loc_44C213  +
mov eax [esi] +
xor ebx ebx +
mov ebp [eax] +
mov [esp+34h+var_34] ebp +
call strlen  +
mov edi eax +
nop   +
lea esi [esi+0] +
mov eax [esp+34h+var_24] +
add ebx 1 +
mov [esp+34h+var_34] ebp +
mov [esp+34h+var_30] eax +
call fputs  +
cmp [esi+4] ebx +
jbe loc_44C210  +
lea eax ds:0[ebx*4] +
mov [esp+34h+var_1C] eax +
mov eax [esi] +
mov ebp [eax+ebx*4] +
mov [esp+34h+var_34] ebp +
call strlen  +
add edi eax +
test ebx ebx +
jz loc_44C160  +
cmp edi [esp+34h+var_20] +
jbe loc_44C1E5  +
mov ebp [esp+34h+var_20] +
test ebp ebp +
jz loc_44C1E5  +
mov [esp+34h+var_18] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4CFC7A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov ecx [esp+34h+var_18] +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
lea edi [ecx+1] +
mov ebp [eax+edx] +
jmp loc_44C160  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esi] +
mov edx [esp+34h+var_1C] +
mov ebp [eax+edx] +
jmp loc_44C160  +
add edi 1 +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_34] 3Ah +
mov [esp+34h+var_30] eax +
call putc  +
mov eax [esp+34h+var_20] +
mov edx [esi+10h] +
test eax eax +
setnz byte ptr [esp+34h+var_18]  +
xor ebx ebx +
test edx edx +
jnz loc_44C294  +
jmp loc_44C2D0  +
cmp byte ptr [esp+34h+var_18] 0 +
jz loc_44C2B1  +
mov [esp+34h+var_1C] eax +
mov eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 4 +
mov [esp+34h+var_30] 1 +
mov [esp+34h+var_34] offset asc_4CFC7A +
mov [esp+34h+var_28] eax +
call fwrite  +
mov edx [esp+34h+var_1C] +
lea edi [edx+1] +
mov eax [esi+0Ch] +
add ebx 1 +
mov ecx [esp+34h+var_24] +
mov eax [eax+ebp] +
mov [esp+34h+var_30] ecx +
mov [esp+34h+var_34] eax +
call fputs  +
cmp [esi+10h] ebx +
jbe loc_44C2D0  +
mov eax [esi+0Ch] +
lea ebp ds:0[ebx*4] +
mov eax [eax+ebx*4] +
mov [esp+34h+var_34] eax +
call strlen  +
add edi eax +
cmp edi [esp+34h+var_20] +
ja loc_44C240  +
mov eax [esp+34h+var_24] +
add edi 1 +
mov [esp+34h+var_34] 20h +
mov [esp+34h+var_30] eax +
call putc  +
jmp loc_44C276  +
mov eax [esp+34h+var_24] +
mov [esp+34h+arg_0] 0Ah +
mov [esp+34h+arg_4] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp putc  +
***
mov esi 1 +
push ebx  +
sub esp 10h +
mov edi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
cmp dword ptr [edi+10h] 1 +
jbe loc_44C35A  +
lea esi [esi+0] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
mov eax [edi+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call fputs  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 3Ah +
call putc  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] 0Ah +
call putc  +
cmp [edi+10h] esi +
ja loc_44C310  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_44C370  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+40h] +
mov edi [esp+44h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
lea eax [esi+10h] +
mov [esp+0Ch] edi +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_44C414  +
mov eax [esi+10h] +
xor ebx ebx +
lea ebp [esp+1Ch] +
test eax eax +
jnz loc_44C3E1  +
jmp loc_44C421  +
mov eax [esi+0Ch] +
mov edx [esp+1Ch] +
mov eax [eax+ebx*4] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] eax +
call fwrite  +
cmp eax 1 +
jnz loc_44C414  +
add ebx 1 +
cmp [esi+10h] ebx +
jbe loc_44C421  +
mov eax [esi+0Ch] +
mov eax [eax+ebx*4] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 4 +
mov [esp] ebp +
mov [esp+1Ch] eax +
call fwrite  +
cmp eax 1 +
jz loc_44C3B2  +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+54h] +
lea eax [esp+28h] +
mov dword ptr [esp+8] 4 +
mov ebp [esp+58h] +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
mov [esp+0Ch] edi +
call fread  +
cmp eax 4 +
jnz loc_44C562  +
mov dword ptr [esp] 200h +
call sub_452ED0  +
mov ebx eax +
mov eax [esp+28h] +
test eax eax +
jz loc_44C550  +
mov dword ptr [esp+1Ch] 200h +
xor esi esi +
jmp loc_44C4E3  +
mov [esp+0Ch] edi +
mov [esp+8] eax +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call fread  +
cmp eax [esp+2Ch] +
jnz loc_44C537  +
test ebp ebp +
mov byte ptr [ebx+eax] 0 +
jz loc_44C4DA  +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_4531F0  +
test eax eax +
jz loc_44C4DA  +
mov eax [esp+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44BFB0  +
add esi 1 +
cmp [esp+28h] esi +
jbe loc_44C550  +
lea eax [esp+2Ch] +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call fread  +
cmp eax 4 +
jnz loc_44C537  +
mov eax [esp+2Ch] +
lea edx [eax+1] +
cmp edx [esp+1Ch] +
jbe loc_44C490  +
sub eax 0FFFFFF80h +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+1Ch] eax +
call sub_452F50  +
mov ebx eax +
mov eax [esp+2Ch] +
jmp loc_44C490  +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov [esp+28h+var_28] eax +
call sub_440380  +
cmp byte ptr [eax+4] 25h +
jz loc_44C5A1  +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
call sub_439AE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_440380  +
cmp byte ptr [eax+4] 37h +
jz loc_44C5C7  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 2 +
call sub_439AE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebx +
call sub_440380  +
cmp byte ptr [eax+4] 3Eh +
mov esi eax +
jnz loc_44C650  +
mov edx [eax+8] +
cmp edx 4 +
jbe loc_44C650  +
mov ecx [eax+0Ch] +
movzx eax byte ptr [ecx+edx-2] +
cmp al 5Ch +
jnz loc_44C668  +
movzx eax byte ptr [ecx+edx-3] +
lea edi [edx-3] +
cmp al 5Ch +
jnz loc_44C647  +
mov eax [ebx+1E8h] +
test eax eax +
jz loc_44C599  +
lea eax [edi+1Eh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
sub edx 4 +
lea edi [esp+1Bh] +
add ecx 1 +
and edi 0FFFFFFF0h +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edi +
call memcpy  +
mov eax [esi+8] +
mov byte ptr [edi+eax-4] 0 +
mov eax [ebx+1E8h] +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call eax  +
jmp loc_44C599  +
cmp al 2Fh +
jz loc_44C5F7  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] 3 +
call sub_439AE0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 2Fh +
jz loc_44C5EB  +
jmp loc_44C650  +
***
mov eax [esp+arg_0] +
imul ecx ebx +
mov [eax+244h] ebx +
lea edx dword_4CFF80[ecx] +
movzx ecx byte ptr ds:dword_4CFF80[ecx] +
mov [eax+268h] cl +
movzx ecx byte ptr [edx+1] +
mov [eax+248h] cl +
movzx ecx byte ptr [edx+2] +
mov [eax+24Fh] cl +
movzx ecx byte ptr [edx+3] +
mov [eax+263h] cl +
movzx ecx byte ptr [edx+4] +
mov [eax+274h] cl +
movzx ecx byte ptr [edx+5] +
mov [eax+269h] cl +
movzx ecx byte ptr [edx+6] +
mov [eax+24Eh] cl +
movzx ecx byte ptr [edx+7] +
mov [eax+250h] cl +
movzx ecx byte ptr [edx+8] +
mov [eax+252h] cl +
movzx ecx byte ptr [edx+9] +
mov [eax+271h] cl +
movzx ecx byte ptr [edx+0Ah] +
mov [eax+275h] cl +
movzx ecx byte ptr [edx+0Bh] +
mov [eax+276h] cl +
movzx ecx byte ptr [edx+0Ch] +
mov [eax+24Dh] cl +
movzx edx byte ptr [edx+0Dh] +
mov [eax+251h] dl +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov eax ds:dword_4D93A0 +
test eax eax +
jnz loc_44C78D  +
mov ds:dword_4D93A0 1 +
call sub_43DF00  +
mov ds:byte_4D92DD 23h +
mov ds:byte_4D92C9 5Dh +
mov ds:byte_4D92C1 7Ch +
mov ds:byte_4D92C8 5Bh +
mov ds:byte_4D92C7 5Eh +
mov ds:byte_4D92DE 7Dh +
mov ds:byte_4D92CF 5Ch +
mov ds:byte_4D92DC 7Bh +
mov ds:byte_4D92CD 7Eh +
mov dword ptr [esp+4] 300h +
mov dword ptr [esp] 1 +
call sub_452F00  +
mov ecx 1Ch +
lea esi [eax+30h] +
mov ebx eax +
test esi 1 +
mov edx esi +
jnz loc_44CA11  +
test dl 2 +
jnz loc_44CA23  +
mov edi ecx +
xor eax eax +
and edi 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax edi +
jb loc_44C7C9  +
add edx eax +
test cl 2 +
jz loc_44C7E7  +
xor edi edi +
add edx 2 +
mov [edx-2] di +
and ecx 1 +
jz loc_44C7EF  +
mov byte ptr [edx] 0 +
mov eax [esp+30h] +
lea edi [ebx+0F4h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44C680  +
mov byte ptr [ebx+259h] 1 +
mov byte ptr [ebx+24Bh] 1 +
mov byte ptr [ebx+24Ch] 1 +
mov dword ptr [ebx+240h] 8 +
mov byte ptr [ebx+26Eh] 1 +
mov byte ptr [ebx+258h] 2 +
mov byte ptr [ebx+25Ch] 1 +
mov byte ptr [ebx+28Ah] 0FFh +
mov byte ptr [ebx+28Bh] 0 +
mov byte ptr [ebx+254h] 1 +
mov byte ptr [ebx+25Bh] 0 +
mov byte ptr [ebx+262h] 1 +
mov byte ptr [ebx+264h] 1 +
mov byte ptr [ebx+25Eh] 1 +
mov byte ptr [ebx+25Fh] 1 +
mov byte ptr [ebx+260h] 0 +
mov byte ptr [ebx+26Dh] 2 +
mov dword ptr [ebx+284h] 1 +
mov byte ptr [ebx+272h] 1 +
mov byte ptr [ebx+2A9h] 1 +
mov byte ptr [ebx+273h] 1 +
mov byte ptr [ebx+256h] 0 +
mov dword ptr [ebx+294h] 20h +
mov dword ptr [ebx+298h] 8 +
mov dword ptr [ebx+2A0h] 20h +
mov dword ptr [ebx+29Ch] 20h +
mov byte ptr [ebx+2A4h] 0 +
mov byte ptr [ebx+2A5h] 1 +
mov byte ptr [ebx+2A6h] 1 +
call sub_435040  +
mov dword ptr [ebx+27Ch] 0 +
mov [ebx+278h] eax +
call sub_435040  +
cmp byte ptr [ebx+24Bh] 0 +
mov [esp] edi +
mov dword ptr [esp+4] 0FAh +
setz byte ptr [ebx+0Dh]  +
mov [ebx+280h] eax +
mov eax [esp+38h] +
mov dword ptr [ebx+7Ch] offset unk_4CFC80 +
mov byte ptr [ebx+164h] 53h +
mov dword ptr [ebx+168h] 0 +
mov [ebx+1Ch] eax +
xor eax eax +
mov [ebx+176h] ax +
mov byte ptr [ebx+174h] 16h +
call sub_43E7F0  +
mov eax [ebx+0FCh] +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+104h] edi +
mov [ebx+4Ch] esi +
mov [ebx+0F0h] eax +
mov dword ptr [ebx+44h] 0 +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
call sub_43F290  +
mov [esp] ebx +
mov dword ptr [esp+4] 0 +
mov [ebx+24h] eax +
call sub_43F290  +
mov [esp] ebx +
mov dword ptr [ebx+2F8h] 0 +
mov dword ptr [ebx+2FCh] 0 +
mov dword ptr [ebx+15Ch] 0FFFFFFFEh +
mov [ebx+28h] eax +
call sub_444E00  +
lea eax [ebx+1B0h] +
mov dword ptr [esp+10h] offset free +
mov dword ptr [esp+0Ch] offset sub_452ED0 +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_459280  +
mov [esp] ebx +
call sub_44B2C0  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_441E20  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea edx [eax+31h] +
mov cl 1Bh +
test dl 2 +
mov byte ptr [eax+30h] 0 +
jz loc_44C7C2  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_44C7C2  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+1Ch] edx +
retn   +
***
mov [esp] ebx +
call sub_4380C0  +
mov ecx [ebx] +
test ecx ecx +
jnz loc_44CA70  +
mov eax [ebx+2C8h] +
mov [esp] eax +
call free  +
mov eax [ebx+110h] +
test eax eax +
jz loc_44CAB2  +
mov [esp] eax +
call free  +
mov dword ptr [ebx+110h] 0 +
mov dword ptr [ebx+114h] 0 +
mov eax [ebx+180h] +
test eax eax +
jz loc_44CAC4  +
mov [esp] eax +
call sub_44BDC0  +
lea eax [ebx+1B0h] +
mov [esp] eax +
lea ebp [ebx+0F4h] +
mov dword ptr [esp+4] 0 +
call sub_4593F0  +
mov [esp] ebx +
call sub_441FC0  +
mov [esp] ebx +
call sub_44B3C0  +
mov [esp] ebx +
call near ptr dword_42F6A0  +
***
mov eax [ebx+24h] +
mov [esp] eax +
call sub_43F4A0  +
mov eax [ebx+28h] +
mov [esp] eax +
call sub_43F4A0  +
mov eax [ebx+2Ch] +
mov [esp] eax +
call sub_43F4A0  +
mov eax [ebx+0FCh] +
mov esi [ebx+0F4h] +
mov [esp] eax +
call free  +
test esi esi +
jz loc_44CB50  +
mov eax [esi+8] +
mov edi [esi] +
mov [esp] eax +
call free  +
cmp ebp esi +
jz loc_44CB4A  +
mov [esp] esi +
call free  +
mov esi edi +
test esi esi +
jnz loc_44CB31  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_44CB62  +
jmp loc_44CB70  +
mov eax esi +
mov esi [eax] +
mov [esp] eax +
call free  +
test esi esi +
jnz loc_44CB60  +
mov eax [ebx+2ECh] +
test eax eax +
jz loc_44CBAA  +
mov edx [ebx+2F0h] +
test edx edx +
jle loc_44CBA2  +
xor esi esi +
mov eax [eax+esi*8] +
add esi 1 +
mov [esp] eax +
call free  +
mov eax [ebx+2ECh] +
cmp [ebx+2F0h] esi +
jg loc_44CB86  +
mov [esp] eax +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jz loc_44CBD9  +
mov eax [esi] +
mov [ebx+2F8h] eax +
mov eax [esi+4] +
mov [esp] eax +
call free  +
mov [esp] esi +
call free  +
mov esi [ebx+2F8h] +
test esi esi +
jnz loc_44CBB4  +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
***
mov ecx [esp+4] +
mov eax offset off_4CFDE0 +
lea esi [esi+0] +
movzx edx word ptr [eax+6] +
cmp edx ecx +
jz loc_44CC15  +
add eax 8 +
cmp eax offset a__timestamp__ +
jb loc_44CC00  +
xor eax eax +
retn   +
***
mov eax [eax] +
retn   +
***
push esi  +
mov esi 78h +
push ebx  +
sub esp 1Ch +
mov edi [esp+20h+arg_0] +
cmp byte ptr [edi+270h] 0 +
jnz loc_44CC4A  +
cmp byte ptr [edi+2A7h] 0 +
mov si 84h +
jnz loc_44CCE3  +
add esi offset off_4CFEE0 +
mov ebx offset off_4CFEE0 +
cmp esi ebx +
jbe loc_44CCDB  +
lea esi [esi+0] +
cmp word ptr [ebx+6] 0Ah +
jnz loc_44CC7A  +
cmp dword ptr [edi+244h] 0Fh +
jz loc_44CCD4  +
mov eax [edi+224h] +
test eax eax +
jz loc_44CCD4  +
movzx edx word ptr [ebx+4] +
mov eax [ebx] +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
call sub_442000  +
movzx edx byte ptr [eax+14h] +
and edx 0FFFFFFC0h +
or edx 1 +
mov [eax+14h] dl +
movzx edx word ptr [eax+14h] +
mov ebp edx +
and edx 3Fh +
shr bp 6 +
mov ecx ebp +
or ecx 4 +
shl ecx 6 +
or edx ecx +
mov [eax+14h] dx +
cmp byte ptr [ebx+8] 0 +
jz loc_44CCCD  +
or ebp 14h +
and edx 3Fh +
shl ebp 6 +
or edx ebp +
mov [eax+14h] dx +
movzx edx word ptr [ebx+6] +
mov [eax+18h] edx +
add ebx 0Ch +
cmp ebx esi +
jb loc_44CC60  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+269h] 1 +
sbb esi esi +
and esi 0Ch +
add esi 84h +
jmp loc_44CC4A  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_44CC20  +
cmp byte ptr [ebx+270h] 0 +
jnz loc_44CD38  +
cmp byte ptr [ebx+2A7h] 0 +
jz loc_44CE20  +
cmp byte ptr [ebx+269h] 0 +
jnz loc_44CE20  +
cmp byte ptr [ebx+248h] 0 +
mov eax [ebx+244h] +
jz loc_44CDE2  +
lea edx [eax-0Dh] +
cmp edx 1 +
jbe loc_44CE80  +
lea edx [eax-0Bh] +
cmp edx 1 +
jbe loc_44CEE0  +
sub eax 9 +
cmp eax 1 +
jbe loc_44CEB0  +
mov dword ptr [esp+4] offset a__cplusplus199 +
mov [esp] ebx +
call sub_438930  +
cmp byte ptr [ebx+250h] 0 +
jz loc_44CDBF  +
cmp byte ptr [ebx+248h] 0 +
jz loc_44CD9F  +
mov eax [ebx+244h] +
sub eax 7 +
cmp eax 1 +
jbe loc_44CDBF  +
mov dword ptr [esp+4] offset a__stdc_utf_16_ +
mov [esp] ebx +
call sub_438930  +
mov dword ptr [esp+4] offset a__stdc_utf_32_ +
mov [esp] ebx +
call sub_438930  +
test esi esi +
jz loc_44CE35  +
mov dword ptr [esp+4] offset a__stdc_hosted_ +
mov [esp] ebx +
call sub_438930  +
cmp byte ptr [ebx+24Ah] 0 +
jnz loc_44CE4E  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
cmp eax 0Fh +
jz loc_44CE64  +
cmp eax 4 +
jz loc_44CEC5  +
and eax 0FFFFFFFBh +
cmp eax 2 +
jz loc_44CE95  +
cmp byte ptr [ebx+268h] 0 +
jz loc_44CD7F  +
mov dword ptr [esp+4] offset a__stdc_version +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__stdc__1 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD38  +
***
mov dword ptr [esp+4] offset a__stdc_hoste_0 +
mov [esp] ebx +
call sub_438930  +
cmp byte ptr [ebx+24Ah] 0 +
jz loc_44CDDC  +
mov [esp+20h] ebx +
mov dword ptr [esp+24h] offset a__objc__1 +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_438930  +
***
mov dword ptr [esp+4] offset a__assembler__1 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__cplusplus201 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_0 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_0 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__stdc_versi_1 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
mov dword ptr [esp+4] offset a__cplusplus2_1 +
mov [esp] ebx +
call sub_438930  +
jmp loc_44CD7F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
movzx eax byte ptr [edi+248h] +
test al al +
jz loc_44CF1C  +
mov byte ptr [edi+25Ah] 0 +
cmp byte ptr [edi+26Bh] 0 +
jnz loc_44CFE2  +
cmp byte ptr [edi+258h] 2 +
movzx edx byte ptr [edi+270h] +
jz loc_44D005  +
test dl dl +
jz loc_44CF4F  +
mov byte ptr [edi+24Dh] 0 +
mov byte ptr [edi+258h] 0 +
test al al +
jnz loc_44CFC0  +
cmp byte ptr [edi+26Fh] 0 +
jz loc_44CFB8  +
xor esi esi +
nop   +
or esi 208h +
mov ebx offset off_4CFDE0 +
nop   +
lea esi [esi+0] +
movzx edx word ptr [ebx+4] +
add ebx 8 +
mov eax [ebx-8] +
mov [esp] edi +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_442000  +
movzx ecx word ptr [eax+14h] +
and byte ptr [eax+0Ch] 0FEh +
mov edx ecx +
and ecx 3Fh +
shr dx 6 +
or edx esi +
shl edx 6 +
or ecx edx +
mov [eax+14h] cx +
movzx ecx byte ptr [ebx-2] +
cmp ebx offset a__timestamp__ +
lea edx [ecx+ecx] +
mov [eax+0Ch] dl +
jb loc_44CF70  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
cmp byte ptr [edi+26Eh] 0 +
setnz al  +
cmp byte ptr [edi+26Fh] 0 +
mov esi eax +
jnz loc_44CF60  +
test eax eax +
jz loc_44CFB8  +
mov esi 1 +
jmp loc_44CF66  +
***
cmp byte ptr [edi+2A8h] 0 +
jnz loc_44CFEF  +
mov byte ptr [edi+10h] 1 +
xor edx edx +
cmp byte ptr [edi+258h] 2 +
mov byte ptr [edi+270h] 0 +
jnz loc_44CF3D  +
cmp byte ptr [edi+24Dh] 0 +
setz byte ptr [edi+258h]  +
jmp loc_44CF3D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov eax [ebx+28Ch] +
test eax eax +
jz loc_44D052  +
mov eax [ebx+180h] +
test eax eax +
jz loc_44D152  +
mov [esp+4] esi +
mov [esp] eax +
call sub_44BEE0  +
lea eax [ebx+78h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_44A210  +
mov [ebx+0A0h] eax +
mov [esp] eax +
call sub_44A200  +
mov edx eax +
xor eax eax +
test dl dl +
jnz loc_44D0C8  +
mov eax [ebx+0A0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44AC90  +
mov eax esi +
cmp byte ptr [ebx+26Bh] 0 +
jnz loc_44D0D0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] ebx +
call sub_440380  +
cmp byte ptr [eax+4] 25h +
mov esi eax +
jz loc_44D108  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_439AE0  +
mov edx [ebx+1Ch] +
mov eax [edx+8] +
sub eax 1 +
imul eax eax +
add eax [edx] +
mov eax [eax+8] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov byte ptr [ebx+8] 1 +
mov [esp] ebx +
call sub_440380  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
call sub_439AE0  +
mov byte ptr [ebx+8] 0 +
cmp byte ptr [edi+4] 37h +
jnz loc_44D0E0  +
movzx eax word ptr [esi+6] +
mov [esp] ebx +
and eax 1 +
mov [esp+4] eax +
call sub_4371E0  +
test eax eax +
jz loc_44D0E0  +
mov eax ebx +
call sub_44C570  +
nop   +
jmp loc_44D0F0  +
***
call sub_44BDA0  +
mov [ebx+180h] eax +
jmp loc_44D046  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
cmp byte ptr [ebx+267h] 0 +
jz loc_44D190  +
jmp loc_44D1E4  +
mov [esp] ebx +
call sub_4380C0  +
mov eax [ebx] +
test eax eax +
jnz loc_44D188  +
mov edx [ebx+28Ch] +
test edx edx +
jz loc_44D1C7  +
test esi esi +
jz loc_44D1C7  +
mov eax [ebx+180h] +
mov dword ptr [esp+8] 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_44C110  +
cmp byte ptr [ebx+291h] 0 +
jnz loc_44D1FE  +
cmp byte ptr [ebx+253h] 0 +
jnz loc_44D1D6  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_44B5A0  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_439080 +
mov [esp] ebx +
call sub_442090  +
jmp loc_44D190  +
***
mov eax [ebx+180h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_44C2F0  +
jmp loc_44D1C7  +
***
sub esp 48h +
mov ecx 0Ah +
lea edx [esp+48h+var_30] +
mov edi edx +
stos   +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_44] 28h +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_2C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_40] eax +
call sub_44D420  +
test eax eax +
jz loc_44D2AC  +
mov edx [esp+48h+var_30] +
mov [eax] edx +
mov edx [esp+48h+var_2C] +
mov [eax+4] edx +
mov edx [esp+48h+var_28] +
mov [eax+8] edx +
mov edx [esp+48h+var_24] +
mov [eax+0Ch] edx +
mov edx [esp+48h+var_20] +
mov [eax+10h] edx +
mov edx [esp+48h+var_1C] +
mov [eax+14h] edx +
mov edx [esp+48h+var_18] +
mov [eax+18h] edx +
mov edx [esp+48h+var_14] +
mov [eax+1Ch] edx +
mov edx [esp+48h+var_10] +
mov [eax+20h] edx +
mov edx [esp+48h+var_C] +
mov [eax+24h] edx +
add esp 48h +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 34h +
lea eax [esp+2Ch] +
mov ebx [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov dword ptr [esp+2Ch] 0 +
mov [esp] eax +
call sub_471360  +
mov edx [ebx] +
test edx edx +
jle loc_44D2F8  +
sub edx 1 +
xor eax eax +
mov [ebx] edx +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+18h] +
cmp dword ptr [esp+2Ch] 1 +
sbb eax 0 +
test edx edx +
jz loc_44D340  +
mov esi [ebx+10h] +
mov ecx [ebx+8] +
mov edx [ebx+4] +
mov [esp+10h] esi +
mov esi [ebx+0Ch] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] edx +
mov [esp+0Ch] esi +
call sub_44D750  +
mov [ebx+14h] eax +
cmp eax 1 +
sbb eax eax +
add esp 34h +
not eax  +
and eax 5 +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [ebx+10h] +
mov edx [ebx+8] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call edx  +
mov [ebx+14h] eax +
jmp loc_44D32E  +
***
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 0 +
add eax 1 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_44] 1000h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_20] ebx +
mov [esp+48h+var_1C] eax +
mov eax [esp+48h+arg_C] +
mov [esp+48h+var_10] 0 +
mov [esp+48h+var_18] eax +
mov eax [esp+48h+arg_10] +
mov [esp+48h+var_14] eax +
call sub_44D420  +
test eax eax +
jz loc_44D414  +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_3C] 0 +
mov [esp+48h+var_40] 1000h +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_44D470  +
mov [esp+48h+var_C] 1 +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset loc_44D2C0 +
call sub_471660  +
mov eax [esp+48h+var_10] +
add esp 48h +
pop ebx  +
retn   +
mov [esp+48h+var_C] 0 +
jmp loc_44D3F7  +
***
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_44D440  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+18h+arg_8] +
test eax eax +
jz loc_44D436  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-54h+arg_50] offset aMalloc +
mov [esp-54h+arg_54] eax +
mov eax [esp-54h+arg_78] +
mov [esp-54h+arg_4C] eax +
call [esp-54h+arg_74]  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
jmp free  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_10] +
mov esi [esp+10h+arg_4] +
mov ecx [ebx+8] +
cmp ecx esi +
jb loc_44D4B0  +
mov eax [ebx] +
mov edx [ebx+4] +
lea edi [edx+esi] +
sub ecx esi +
mov [ebx+4] edi +
add eax edx +
mov [ebx+8] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_44D4F0  +
lea edx [eax+1000h] +
cmp eax 1000h +
lea ecx [eax+eax] +
cmovb edx ecx +
add eax esi +
cmp edx eax +
cmovnb eax edx +
mov edi eax +
mov eax [ebx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_44D4F7  +
mov edx [ebx+4] +
mov [ebx] eax +
sub edi edx +
mov ecx edi +
jmp loc_44D49A  +
mov edx esi +
shl edx 5 +
jmp loc_44D4C8  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-5Ch+arg_50] offset aRealloc +
mov [esp-5Ch+arg_54] eax +
mov eax [esp-5Ch+arg_78] +
mov [esp-5Ch+arg_4C] eax +
call [esp-5Ch+arg_74]  +
xor eax eax +
jmp loc_44D4A7  +
***
mov ebx [esp+18h+arg_4] +
mov edx [ebx+4] +
mov eax [ebx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
mov [ebx] eax +
jz loc_44D550  +
mov dword ptr [ebx+8] 0 +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-54h+arg_50] offset aRealloc +
mov [esp-54h+arg_54] eax +
mov eax [esp-54h+arg_78] +
mov [esp-54h+arg_4C] eax +
call [esp-54h+arg_74]  +
xor eax eax +
jmp loc_44D54B  +
***
mov eax [esp+18h+arg_C] +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_44D520  +
test eax eax +
jz loc_44D5C7  +
mov eax [ebx] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_C] +
mov edi [esp+1Ch+arg_10] +
mov [esp+1Ch+var_10] eax +
mov ebp [esp+1Ch+arg_8] +
mov eax ebx +
mov edx esi +
mov ecx edi +
call sub_44D5D0  +
test eax eax +
jz loc_44D785  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44D790  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+1Ch+var_10] +
mov eax [ebx+0Ch] +
mov [esp+1Ch+arg_10] edi +
mov [esp+1Ch+arg_C] esi +
mov [esp+1Ch+arg_8] ebp +
mov [esp+1Ch+arg_0] ebx +
mov [esp+1Ch+arg_4] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov ecx [esp+40h] +
mov edx [esp+3Ch] +
mov eax ebx +
call sub_44D5D0  +
test eax eax +
jz loc_44D7E4  +
mov edx [ebx+1Ch] +
xor eax eax +
test edx edx +
jz loc_44D7F0  +
add esp 28h +
pop ebx  +
retn   +
***
mov ecx [esp+40h] +
mov edx [esp+38h] +
mov eax [ebx+14h] +
mov [esp] ebx +
mov [esp+10h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+0Ch] ecx +
mov [esp+4] edx +
call eax  +
add esp 28h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_C] +
mov esi [esp+10h+arg_0] +
test ebx ebx +
jz loc_44D8A5  +
mov dword ptr [ebx] 0 +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open_0  +
test eax eax +
js loc_44D863  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi ds:__imp__errno +
call edi  +
cmp dword ptr [eax] 2 +
jz loc_44D893  +
call edi  +
mov eax [eax] +
mov [esp-0C8h+arg_BC] esi +
mov [esp-0C8h+arg_C0] eax +
mov eax [esp-0C8h+arg_E0] +
mov [esp-0C8h+arg_B8] eax +
call [esp-0C8h+arg_DC]  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx] 1 +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 8000h +
mov [esp+10h+var_10] esi +
call _open_0  +
mov edi ds:__imp__errno +
test eax eax +
jns loc_44D85C  +
jmp loc_44D870  +
***
jmp sub_44D8D0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call _close_0  +
mov edx 1 +
test eax eax +
js loc_44D8F0  +
mov eax edx +
add esp 1Ch +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-50h+arg_50] offset aClose +
mov [esp-50h+arg_54] eax +
mov eax [esp-50h+arg_74] +
mov [esp-50h+arg_4C] eax +
call [esp-50h+arg_70]  +
xor edx edx +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] 0FFFFFFFFh +
mov [esp+1Ch+var_18] offset aNoDebugInfoInP +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_C]  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [esp+14h] +
mov dword ptr [esp+0Ch] 0FFFFFFFFh +
mov dword ptr [esp+8] offset aNoSymbolTableI +
mov [esp+4] eax +
mov eax [esp+10h] +
jmp eax  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx] +
cmp edx [eax+4] +
jb loc_44D9B0  +
cmp edx [eax+0Ch] +
setnb al  +
movzx eax al +
retn   +
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+30h] +
mov eax [ebx+4] +
test eax eax +
jnz loc_44DA43  +
mov ebx [ebx+18h] +
test ebx ebx +
jz loc_44DA80  +
lea esi [esp+34h] +
jmp loc_44D9EB  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44DA80  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_44D990 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jz loc_44D9E1  +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
add ebx 18h +
lea esi [esp+34h] +
jmp loc_44DA7A  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov dword ptr [esp+10h] offset sub_44D990 +
mov dword ptr [esp+0Ch] 8 +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] esi +
call bsearch  +
test eax eax +
jnz loc_44DA15  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44DA50  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
jmp loc_44DA2A  +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov eax [esp+10Ch+arg_C] +
lea ebx [esp+10Ch+var_84] +
mov ebp [esp+10Ch+arg_0] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 40h +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
test eax eax +
jz loc_44DBC5  +
mov eax [esp+10Ch+var_84] +
cmp byte ptr [eax] 4Dh +
jnz loc_44DB13  +
cmp byte ptr [eax+1] 5Ah +
jz loc_44DCBE  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E900  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
test eax eax +
jz loc_44DBEF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E900  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aExecutableFile +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44DBCF  +
xor esi esi +
mov [esp+10Ch+var_BC] 0 +
mov [esp+10Ch+var_C0] 0 +
mov ebx [esp+10Ch+var_BC] +
test ebx ebx +
jnz loc_44DC90  +
mov ecx [esp+10Ch+var_C0] +
test ecx ecx +
jnz loc_44DC60  +
test esi esi +
jnz loc_44DC30  +
cmp [esp+10Ch+arg_4] 0FFFFFFFFh +
jz loc_44DC1E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D8D0  +
add esp 10Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_54] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
jmp loc_44DBEF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
jmp loc_44DBEB  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_6C] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
jmp loc_44DBE3  +
mov edi [eax+3Ch] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E900  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F4] ebx +
mov [esp+10Ch+var_100] 18h +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
test eax eax +
jz loc_44DBC5  +
test edi edi +
jz loc_44DB76  +
mov esi [esp+10Ch+var_84] +
mov [esp+10Ch+var_104] 4 +
mov [esp+10Ch+var_108] offset aPe +
mov [esp+10Ch+var_10C] esi +
call memcmp  +
mov [esp+10Ch+var_C0] eax +
movzx eax word ptr [esi+6] +
mov [esp+10Ch+var_AA] ax +
mov eax [esi+0Ch] +
mov [esp+10Ch+var_B8] eax +
mov eax [esi+10h] +
movzx esi word ptr [esi+14h] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_A8] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44E900  +
mov eax [esp+10Ch+var_C0] +
test eax eax +
jnz loc_44DB98  +
movzx eax [esp+10Ch+var_AA] +
lea ecx [esp+10Ch+var_78] +
movzx ebx si +
mov [esp+10Ch+var_F4] ecx +
mov ecx [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B0] eax +
lea eax [eax+eax*4] +
lea eax [ebx+eax*8] +
mov [esp+10Ch+var_100] eax +
lea eax [edi+18h] +
mov [esp+10Ch+var_F8] ecx +
mov ecx [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_FC] ecx +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
test eax eax +
jz loc_44DBC5  +
cmp si 20h +
mov edx [esp+10Ch+var_78] +
jbe loc_44E46E  +
movzx eax word ptr [edx] +
cmp ax 10Bh +
jz loc_44E676  +
cmp ax 20Bh +
jnz loc_44E640  +
mov eax [edx+18h] +
mov [esp+10Ch+var_A0] eax +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_44E48F  +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_C0] edx +
lea eax [eax+eax*8] +
add eax eax +
mov edi eax +
mov [esp+10Ch+var_98] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_FC] eax +
mov eax edi +
add eax 4 +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_B8] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
mov edx [esp+10Ch+var_C0] +
test eax eax +
jz loc_44E4BC  +
mov eax [esp+10Ch+var_60] +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_C0] 1 +
mov [esp+10Ch+var_BC] 0 +
mov eax [eax+edi] +
cmp eax 4 +
mov [esp+10Ch+var_A4] eax +
ja loc_44E69F  +
lea eax [edx+ebx] +
mov ecx 0Fh +
lea edx [esp+10Ch+var_48] +
mov esi eax +
mov [esp+10Ch+var_9C] eax +
mov edi edx +
xor eax eax +
stos   +
mov eax [esp+10Ch+var_B0] +
mov [esp+10Ch+var_B8] 0 +
test eax eax +
jz loc_44DF65  +
mov [esp+10Ch+arg_0] ebp +
lea esi [esi+0] +
xor edi edi +
cmp byte ptr [esi] 2Fh +
jz loc_44E380  +
mov eax [esp+10Ch+var_6C] +
xor ebx ebx +
mov ebp [esp+10Ch+var_64] +
add eax edi +
mov [esp+10Ch+var_B4] eax +
test edi edi +
mov ecx ds:off_4D01E8[ebx*4] +
jz loc_44E096  +
cmp edi ebp +
jnb loc_44DF44  +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_10C] ecx +
mov [esp+10Ch+var_108] eax +
call strcmp  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jnz loc_44E0C0  +
add ebx 1 +
cmp ebx 5 +
jnz loc_44DF11  +
add [esp+10Ch+var_B8] 1 +
add esi 28h +
mov eax [esp+10Ch+var_B8] +
cmp [esp+10Ch+var_B0] eax +
ja loc_44DEF0  +
mov ebp [esp+10Ch+arg_0] +
mov eax [esp+10Ch+var_A8] +
xor ebx ebx +
test eax eax +
jz loc_44E23F  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44D420  +
test eax eax +
mov [esp+10Ch+var_94] eax +
jz loc_44E066  +
mov eax [esp+10Ch+var_6C] +
mov edx 38E38E39h +
mov [esp+10Ch+var_90] eax +
mov eax [esp+10Ch+var_60] +
mov ecx eax +
mov [esp+10Ch+var_B0] eax +
mov eax [esp+10Ch+var_98] +
mul  edx +
mov [esp+10Ch+var_B8] edx +
shr [esp+10Ch+var_B8] 2 +
mov eax [esp+10Ch+var_B8] +
test eax eax +
jz loc_44E794  +
xor edi edi +
xor edx edx +
mov [esp+10Ch+var_A8] edi +
mov edi ecx +
mov [esp+10Ch+var_98] 0 +
nop   +
lea eax [edx+edx*8] +
lea eax [edi+eax*2] +
movzx ecx word ptr [eax+0Eh] +
mov word ptr [esp+10Ch+var_B4] cx +
movzx ecx word ptr [eax+0Ch] +
test cx cx +
jle loc_44E0E6  +
cmp [esp+10Ch+var_AA] cx +
jnb loc_44E0E6  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aInvalidSection +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0Ch +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_94] +
mov [esp+10Ch+var_108] eax +
call sub_44D470  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
jmp loc_44DBD7  +
xor eax eax +
movzx edx byte ptr [ecx+eax] +
cmp dl [esi+eax] +
jnz loc_44DF44  +
test dl dl +
jz loc_44E0C0  +
add eax 1 +
cmp eax 8 +
jnz loc_44E098  +
xor eax eax +
cmp byte ptr [ecx+8] 0 +
setz al  +
jmp loc_44DF3C  +
mov edx [esi+14h] +
lea eax [ebx+ebx*2] +
shl eax 2 +
mov [esp+eax+10Ch+var_48] edx +
mov edx [esi+8] +
cmp [esi+10h] edx +
cmovbe edx [esi+10h] +
mov [esp+eax+10Ch+var_44] edx +
jmp loc_44DF4C  +
movzx esi byte ptr [eax] +
mov ebx esi +
test bl bl +
jnz loc_44E0FC  +
mov ebx [esp+10Ch+var_A4] +
cmp ebx [eax+4] +
jbe loc_44E017  +
movzx ebx word ptr [esp+10Ch+var_B4] +
shr bx 4 +
cmp bx 2 +
jz loc_44E3A8  +
movzx eax byte ptr [eax+11h] +
lea edx [edx+eax+1] +
cmp [esp+10Ch+var_B8] edx +
ja loc_44DFF0  +
mov eax [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov edi [esp+10Ch+var_A8] +
lea ebx ds:8[eax*8] +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] ebx +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44D420  +
test eax eax +
mov [esp+10Ch+var_A8] eax +
jz loc_44E038  +
test edi edi +
mov [esp+10Ch+var_B4] 0 +
jnz loc_44E732  +
mov edi [esp+10Ch+var_A8] +
xor esi esi +
mov [esp+10Ch+arg_0] ebp +
nop   +
lea esi [esi+0] +
mov ecx [esp+10Ch+var_B0] +
lea eax [esi+esi*8] +
lea ebx [ecx+eax*2] +
movsx edx word ptr [ebx+0Ch] +
movzx ecx word ptr [ebx+0Eh] +
test dx dx +
jle loc_44E1A3  +
cmp [esp+10Ch+var_AA] dx +
jnb loc_44E1A3  +
call abort  +
movzx ebp byte ptr [ebx] +
mov eax ebp +
test al al +
jz loc_44E392  +
mov eax ebx +
shr cx 4 +
cmp cx 2 +
jz loc_44E3E6  +
movzx eax byte ptr [ebx+11h] +
lea esi [esi+eax+1] +
cmp [esp+10Ch+var_B8] esi +
ja loc_44E180  +
mov ebp [esp+10Ch+arg_0] +
mov dword ptr [edi] 0 +
mov esi [esp+10Ch+var_A8] +
mov dword ptr [edi+4] 0FFFFFFFFh +
mov edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_100] offset sub_44D970 +
mov [esp+10Ch+var_104] 8 +
mov [esp+10Ch+var_10C] esi +
mov [esp+10Ch+var_108] edi +
call sub_44E950  +
mov eax [esp+10Ch+var_94] +
mov dword ptr [eax] 0 +
mov [eax+4] esi +
mov [eax+8] edi +
mov eax [ebp+4] +
test eax eax +
jz loc_44E704  +
lea ecx [ebp+18h] +
mov edx ecx +
jmp loc_44E22A  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_44E228  +
mov edi [esp+10Ch+var_94] +
cmpxchg [edx] edi +
jnz loc_44E224  +
mov ebx 1 +
mov eax [esp+10Ch+arg_C] +
xor edi edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_78] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
lea eax [esp+10Ch+var_60] +
mov [esp+10Ch+var_108] eax +
call sub_44E900  +
lea eax [esp+10Ch+var_44] +
xor ecx ecx +
mov [esp+10Ch+var_C0] ebx +
mov edx [eax] +
test edx edx +
jz loc_44E2BA  +
test ecx ecx +
jnz loc_44E47B  +
mov ecx [eax-4] +
mov ebx ecx +
add edx ebx +
cmp edi edx +
cmovl edi edx +
add eax 0Ch +
lea ebx [esp+10Ch+var_8] +
cmp eax ebx +
jnz loc_44E2A0  +
test edi edi +
mov ebx [esp+10Ch+var_C0] +
jz loc_44E2D8  +
test ecx ecx +
jnz loc_44E4D1  +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D8D0  +
test eax eax +
jz loc_44DBCF  +
mov [esp+10Ch+var_88] offset sub_44D920 +
mov eax [ebp+4] +
test eax eax +
jnz loc_44E342  +
test ebx ebx +
jz loc_44E362  +
mov dword ptr [ebp+14h] offset loc_44D9C0 +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_44E350  +
cmp eax offset sub_44D920 +
jz loc_44E350  +
add esp 10Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_44E372  +
mov dword ptr [ebp+14h] offset loc_44D9C0 +
jmp loc_44E324  +
mov eax [esp+10Ch+var_88] +
mov edi [esp+10Ch+arg_10] +
mov [edi] eax +
jmp loc_44E332  +
mov edx [ebp+14h] +
test edx edx +
jnz loc_44E324  +
mov dword ptr [ebp+14h] offset loc_44D950 +
jmp loc_44E324  +
mov edx offset loc_44D950 +
mov eax ebx +
cmpxchg [ebp+14h] edx +
jmp loc_44E324  +
lea eax [esi+1] +
mov [esp+10Ch+var_10C] eax +
call atoi  +
mov edi eax +
jmp loc_44DEFB  +
mov eax [ebx+4] +
cmp [esp+10Ch+var_A4] eax +
jbe loc_44E19E  +
add eax [esp+10Ch+var_90] +
jmp loc_44E1B2  +
test cx cx +
jle loc_44E10F  +
mov ecx esi +
add [esp+10Ch+var_98] 1 +
test cl cl +
jz loc_44E10F  +
xor ecx ecx +
cmp byte ptr [eax+ecx] 0 +
jz loc_44E3D5  +
add ecx 1 +
cmp ecx 8 +
jnz loc_44E3C2  +
mov ecx 8 +
mov esi [esp+10Ch+var_A8] +
lea ecx [esi+ecx+1] +
mov [esp+10Ch+var_A8] ecx +
jmp loc_44E10F  +
test dx dx +
jle loc_44E1C0  +
mov ecx ebp +
test cl cl +
jz loc_44E442  +
xor edx edx +
cmp byte ptr [eax+edx] 0 +
jz loc_44E682  +
add edx 1 +
cmp edx 8 +
jnz loc_44E3F7  +
mov [esp+10Ch+var_C0] 9 +
mov ebp 8 +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+var_B4] +
mov [esp+10Ch+var_104] ebp +
mov [esp+10Ch+var_10C] eax +
call memcpy  +
mov ecx [esp+10Ch+var_B4] +
mov byte ptr [ecx+ebp] 0 +
mov ebp [esp+10Ch+var_C0] +
mov eax ecx +
movsx edx word ptr [ebx+0Ch] +
add ecx ebp +
mov [esp+10Ch+var_B4] ecx +
xor ecx ecx +
cmp byte ptr [eax] 5Fh +
setz cl  +
add edi 8 +
add eax ecx +
mov ecx [esp+10Ch+var_A0] +
mov [edi-8] eax +
lea eax [edx+edx*4] +
mov edx [esp+10Ch+var_9C] +
add ecx [edx+eax*8-1Ch] +
mov eax [ebx+8] +
add eax ecx +
mov [edi-4] eax +
jmp loc_44E1C0  +
mov [esp+10Ch+var_A0] 0 +
jmp loc_44DE20  +
mov esi [eax-4] +
cmp esi ecx +
mov ebx esi +
jge loc_44E2B3  +
mov ecx esi +
jmp loc_44E2B1  +
mov [esp+10Ch+var_A4] 0 +
mov [esp+10Ch+var_A8] 0 +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_98] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44DEBB  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44E066  +
lea eax [esp+10Ch+var_54] +
sub edi ecx +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
xor esi esi +
mov [esp+10Ch+var_100] edi +
mov [esp+10Ch+var_104] ecx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_C0] ecx +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
test eax eax +
jz loc_44DBCF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_10C] eax +
call sub_44D8D0  +
mov ecx [esp+10Ch+var_C0] +
test eax eax +
jz loc_44E728  +
mov esi [esp+10Ch+var_54] +
lea edx [esp+10Ch+var_44] +
mov edi [edx] +
test edi edi +
jnz loc_44E690  +
mov dword ptr [edx+4] 0 +
add edx 0Ch +
lea eax [esp+10Ch+var_8] +
cmp eax edx +
jnz loc_44E55C  +
lea eax [esp+10Ch+var_88] +
mov esi 1 +
mov [esp+10Ch+var_D0] eax +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_DC] 0 +
mov [esp+10Ch+var_108] 0 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_D4] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_D8] eax +
mov eax [esp+10Ch+var_14] +
mov [esp+10Ch+var_E0] eax +
mov eax [esp+10Ch+var_10] +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+var_20] +
mov [esp+10Ch+var_E8] eax +
mov eax [esp+10Ch+var_1C] +
mov [esp+10Ch+var_EC] eax +
mov eax [esp+10Ch+var_2C] +
mov [esp+10Ch+var_F0] eax +
mov eax [esp+10Ch+var_28] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+var_38] +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+var_34] +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_44] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_40] +
mov [esp+10Ch+var_104] eax +
call sub_4524E0  +
mov [esp+10Ch+arg_4] 0FFFFFFFFh +
test eax eax +
jz loc_44DBCF  +
jmp loc_44E312  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] 0 +
mov [esp+10Ch+var_108] offset aBadMagicInPeOp +
mov [esp+10Ch+var_10C] eax +
call [esp+10Ch+arg_8]  +
mov [esp+10Ch+var_C0] 0 +
mov [esp+10Ch+var_BC] 0 +
jmp loc_44E066  +
mov eax [edx+1Ch] +
mov [esp+10Ch+var_A0] eax +
jmp loc_44DE20  +
lea ecx [edx+1] +
mov ebp edx +
mov [esp+10Ch+var_C0] ecx +
jmp loc_44E416  +
mov eax esi +
sub eax ecx +
add eax [edx-4] +
mov [edx+4] eax +
jmp loc_44E56D  +
lea eax [esp+10Ch+var_6C] +
mov edi [esp+10Ch+var_B8] +
mov [esp+10Ch+var_F4] eax +
mov eax [esp+10Ch+arg_C] +
add edi [esp+10Ch+var_98] +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_B4] edx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+var_A4] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_4] +
mov [esp+10Ch+var_108] eax +
call sub_44E7E0  +
mov edx [esp+10Ch+var_B4] +
test eax eax +
jz loc_44E066  +
mov [esp+10Ch+var_BC] 1 +
jmp loc_44DEBB  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_44E712  +
jmp loc_44E78F  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_44E710  +
mov eax [esp+10Ch+var_94] +
mov ebx 1 +
mov [edx] eax +
jmp loc_44E23F  +
mov esi 1 +
jmp loc_44DBCF  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] edi +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44D420  +
test eax eax +
mov [esp+10Ch+var_B4] eax +
jnz loc_44E16E  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_104] ebx +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_FC] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+var_A8] +
mov [esp+10Ch+var_108] eax +
call sub_44D470  +
jmp loc_44E038  +
lea edx [ebp+18h] +
jmp loc_44E718  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_108] 8 +
mov [esp+10Ch+var_10C] ebp +
mov [esp+10Ch+var_100] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_104] eax +
call sub_44D420  +
test eax eax +
mov edi eax +
mov [esp+10Ch+var_A8] eax +
jz loc_44E038  +
mov [esp+10Ch+var_98] 0 +
jmp loc_44E1D5  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] 0 +
mov ebx [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_18] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call _lseek  +
test eax eax +
js loc_44E8A0  +
mov eax [esp+1Ch+arg_14] +
xor ebp ebp +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_44D420  +
test eax eax +
mov [esi+4] eax +
jz loc_44E85E  +
mov [esi] eax +
mov [esi+8] ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call _read_0  +
test eax eax +
js loc_44E8D0  +
cmp ebx eax +
mov ebp 1 +
ja loc_44E868  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_14] +
xor bp bp +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] offset aFileTooShort +
mov [esp+1Ch+var_1C] eax +
call [esp+1Ch+arg_10]  +
mov eax [esi+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
xor ebp ebp +
mov eax [eax] +
mov [esp-50h+arg_40] offset aLseek +
mov [esp-50h+arg_44] eax +
mov eax [esp-50h+arg_80] +
mov [esp-50h+arg_3C] eax +
call [esp-50h+arg_7C]  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp-50h+arg_40] offset aRead +
mov [esp-50h+arg_44] eax +
mov eax [esp-50h+arg_80] +
mov [esp-50h+arg_3C] eax +
call [esp-50h+arg_7C]  +
mov eax [esi+4] +
mov [esp-50h+arg_3C] eax +
call free  +
jmp loc_44E85E  +
***
mov ebx [esp+28h+arg_4] +
mov ecx [esp+28h+arg_C] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+28h+var_18] ecx +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_28] eax +
call sub_44D470  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
add esp 28h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_4] 1 +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
jbe loc_44EA7D  +
lea esi [esi+0] +
mov edx [esp+2Ch+arg_4] +
shr edx 1 +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_44E998  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_44E981  +
xor eax eax +
mov edi 1 +
lea ebx [ebp+esi+0] +
mov [esp+2Ch+arg_0] ebp +
mov ebp eax +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
test eax eax +
jle loc_44E9FE  +
add ebp 1 +
cmp edi ebp +
jz loc_44E9FE  +
mov edx ebp +
imul edx esi +
add edx [esp+2Ch+arg_0] +
test esi esi +
jz loc_44E9FE  +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
mov [esp+2Ch+var_D] cl +
movzx ecx byte ptr [ebx+eax] +
mov [edx+eax] cl +
movzx ecx [esp+2Ch+var_D] +
mov [ebx+eax] cl +
add eax 1 +
cmp eax esi +
jnz loc_44E9E0  +
add edi 1 +
add ebx esi +
cmp edi [esp+2Ch+arg_4] +
jb loc_44E9B0  +
mov eax ebp +
mov edi ebp +
mov ebp [esp+2Ch+arg_0] +
test eax eax +
jz loc_44EA39  +
mov edx eax +
imul edx esi +
add edx ebp +
test esi esi +
jz loc_44EA39  +
xor eax eax +
movzx ebx byte ptr [ebp+eax+0] +
movzx ecx byte ptr [edx+eax] +
mov [ebp+eax+0] cl +
mov [edx+eax] bl +
add eax 1 +
cmp eax esi +
jnz loc_44EA22  +
mov eax edi +
add eax eax +
cmp eax [esp+2Ch+arg_4] +
jnb loc_44EA85  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] eax +
call sub_44E950  +
mov eax edi +
add eax 1 +
imul eax esi +
add ebp eax +
mov eax [esp+2Ch+arg_4] +
sub eax edi +
sub eax 1 +
mov [esp+2Ch+arg_4] eax +
cmp [esp+2Ch+arg_4] 1 +
ja loc_44E970  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
sub eax 1 +
sub eax edi +
mov [esp+2Ch+var_28] eax +
mov eax edi +
add eax 1 +
imul eax esi +
add eax ebp +
mov [esp+2Ch+var_2C] eax +
call sub_44E950  +
mov [esp+2Ch+arg_4] edi +
jmp loc_44EA72  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_44EAE0  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_44EAF7  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44EAD7  +
jb loc_44EAF3  +
cmp ecx [edx+8] +
jnb loc_44EAD7  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_44EAD2  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44EAD7  +
jmp loc_44EAEC  +
***
xor ebx ebx +
mov eax [esp+arg_0] +
cmp ebx [edx+4] +
mov ecx [eax] +
jnb loc_44EB30  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
jbe loc_44EB47  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44EB27  +
jb loc_44EB43  +
cmp ecx [edx+8] +
jnb loc_44EB27  +
xor eax eax +
pop ebx  +
retn   +
cmp ecx [edx] +
jb loc_44EB22  +
cmp ebx [edx+0Ch] +
mov eax 1 +
ja loc_44EB27  +
jmp loc_44EB3C  +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov edx [edx] +
cmp edx [eax] +
jb loc_44EB78  +
cmp edx [eax+10h] +
setnb al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov ecx [edx+4] +
mov esi [edx] +
mov edx [eax+4] +
mov ebx [eax] +
cmp ecx edx +
jnb loc_44EBA3  +
mov eax 0FFFFFFFFh +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
jbe loc_44EBC0  +
cmp ecx edx +
mov eax 1 +
ja loc_44EBA0  +
nop   +
jb loc_44EBB6  +
cmp esi ebx +
ja loc_44EBA0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
cmp esi ebx +
jb loc_44EB98  +
cmp ecx edx +
mov eax 1 +
ja loc_44EBA0  +
jmp loc_44EBAE  +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
mov ebp ebx +
mov ecx [esp+54h+arg_0] +
mov esi [esp+54h+arg_20] +
mov [esp+54h+var_2C] ecx +
mov ecx [esp+54h+arg_4] +
add edi [esp+54h+var_2C] +
mov [esp+54h+var_28] ecx +
mov ecx [esp+54h+arg_8] +
adc ebp [esp+54h+var_28] +
mov [esp+54h+var_24] ecx +
mov ecx [esp+54h+arg_C] +
mov [esp+54h+var_20] ecx +
mov ecx [esp+54h+arg_10] +
mov [esp+54h+var_1C] ecx +
mov ecx [esp+54h+arg_14] +
mov [esp+54h+var_18] ecx +
mov ecx edx +
mov edx [esi+0Ch] +
add ecx [esp+54h+var_24] +
adc ebx [esp+54h+var_20] +
test edx edx +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_30] ebx +
jz loc_44EC72  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+54h+var_3C] ecx +
mov ecx [esp+54h+var_3C] +
mov [esp+54h+var_38] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_44ECF0  +
mov ecx [esp+54h+var_3C] +
mov ebx [esp+54h+var_38] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_44ECF0  +
mov edx [esp+54h+arg_1C] +
mov [esp+54h+var_44] esi +
mov [esp+54h+var_50] 18h +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_48] edx +
mov edx [esp+54h+arg_18] +
mov [esp+54h+var_4C] edx +
call sub_44D480  +
test eax eax +
jz loc_44ED28  +
mov edx edi +
mov [eax] edx +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
mov edx [esp+54h+var_28] +
mov [esp+54h+var_2C] edi +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_20] ebp +
mov [eax+4] edx +
mov edx [esp+54h+var_20] +
mov [eax+8] edi +
mov [esp+54h+var_24] edi +
mov [eax+0Ch] edx +
mov edx [esp+54h+var_1C] +
mov [eax+10h] edx +
mov edx [esp+54h+var_18] +
mov [eax+14h] edx +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [edx+10h] +
cmp [esp+54h+var_1C] ebx +
jnz loc_44EC72  +
mov eax [esp+54h+var_38] +
cmp [esp+54h+var_30] eax +
jb loc_44ED30  +
ja loc_44ED13  +
mov eax [esp+54h+var_3C] +
cmp [esp+54h+var_34] eax +
jbe loc_44ED30  +
mov esi [esp+54h+var_34] +
mov eax 1 +
mov edi [esp+54h+var_30] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_44ECE2  +
xor eax eax +
jmp loc_44ECE2  +
mov eax 1 +
jmp loc_44ECE2  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [edx+20h] +
mov esi [esp+38h+arg_0] +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_28] esi +
mov ecx [edx+1Ch] +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
lea edx ds:0[ecx*4] +
mov [esp+38h+var_30] edx +
call sub_44D470  +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_2C] ebp +
shl edx 2 +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
call sub_44D470  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [edx] +
test eax eax +
jz loc_44EDED  +
xor ebx ebx +
mov eax [ebp+4] +
lea ecx [ebx+ebx*2] +
add ebx 1 +
mov edx [esp+38h+arg_0] +
lea eax [eax+ecx*8] +
mov ecx [eax+14h] +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_2C] edi +
mov eax [eax+10h] +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_34] ecx +
shl eax 3 +
mov [esp+38h+var_30] eax +
call sub_44D470  +
mov eax [ebp+0] +
cmp eax ebx +
ja loc_44EDB5  +
mov ecx [ebp+4] +
lea eax [eax+eax*2] +
mov edx [esp+38h+arg_0] +
shl eax 3 +
mov [esp+38h+var_2C] edi +
mov [esp+38h+var_38] esi +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_28] edx +
mov [esp+38h+var_34] ecx +
call sub_44D470  +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [esp+14h] +
mov ebx [edx+4] +
mov ecx [eax+4] +
mov edi [edx] +
mov esi [eax] +
cmp ebx ecx +
jnb loc_44EE52  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_44EE60  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_44EE49  +
cmp ebx ecx +
jb loc_44EE6C  +
cmp edi esi +
ja loc_44EE54  +
mov ebx [edx+0Ch] +
mov ecx [eax+0Ch] +
mov edi [edx+8] +
mov esi [eax+8] +
cmp ebx ecx +
jb loc_44EE54  +
ja loc_44EE49  +
cmp edi esi +
jb loc_44EE54  +
cmp ebx ecx +
jb loc_44EE8A  +
cmp edi esi +
ja loc_44EE49  +
mov ecx [edx+10h] +
xor ebx ebx +
mov edx [eax+10h] +
mov eax [edx+18h] +
cmp [ecx+18h] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_44EEE0  +
mov eax 1 +
ja loc_44EED9  +
mov eax [edx+0Ch] +
xor ebx ebx +
cmp [ecx+0Ch] eax +
mov eax 0FFFFFFFFh +
setnle bl  +
cmovge eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax [ecx] +
test eax eax +
jnz loc_44EF10  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [edx] +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] offset sub_44EAC0 +
mov [esp+2Ch+var_20] 18h +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call bsearch  +
test eax eax +
mov esi eax +
jz loc_44EF03  +
mov eax [edi] +
mov edx esi +
mov ecx eax +
sub edx ecx +
sar edx 3 +
imul edx edx +
mov [esp+2Ch+var_18] eax +
mov eax [ebx] +
add edx 1 +
cmp eax edx +
jbe loc_44F062  +
mov ebx [esp+2Ch+var_10] +
xor ebp ebp +
cmp dword ptr [esi+1Ch] 0 +
mov [esp+2Ch+var_14] ebx +
mov edi ebx +
ja loc_44EF7B  +
cmp [esi+18h] ebx +
jbe loc_44F002  +
mov eax [esp+2Ch+var_14] +
mov edx esi +
mov esi [esp+2Ch+arg_C] +
mov ebx [edx+10h] +
mov [esp+2Ch+var_20] esi +
mov esi [esp+2Ch+arg_8] +
lea ecx [ebx+10h] +
lea edx [ebx+0Ch] +
mov [esp+2Ch+var_24] esi +
mov esi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] esi +
call sub_44EEF0  +
test eax eax +
jnz loc_44EF05  +
mov eax [esp+2Ch+arg_C] +
mov ecx [ebx] +
mov edx [eax] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_0]  +
test eax eax +
jnz loc_44EF05  +
mov edx [ebx+4] +
mov ecx [esp+2Ch+arg_8] +
mov [ecx] edx +
mov edx [ebx+8] +
mov ebx [esp+2Ch+arg_C] +
mov [ebx] edx +
jmp loc_44EF05  +
cmp dword ptr [esi+24h] 0 +
ja loc_44F011  +
cmp [esi+20h] ebx +
jbe loc_44EF7B  +
mov edx esi +
mov ecx edi +
mov ebx ebp +
add edx 18h +
mov edi edx +
sub edi [esp+2Ch+var_18] +
sar edi 3 +
imul edi edi +
add edi 1 +
cmp edi eax +
jnb loc_44F03D  +
mov ebp edx +
sub ebp esi +
lea edi [esi+30h] +
cmp [ebp+edi-14h] ebx +
jbe loc_44F046  +
mov eax [esp+2Ch+var_14] +
jmp loc_44EF81  +
jb loc_44F04E  +
cmp [ebp+edi-18h] ecx +
ja loc_44F03D  +
cmp [ebp+edi-0Ch] ebx +
jb loc_44F03D  +
ja loc_44F017  +
cmp [ebp+edi-10h] ecx +
jbe loc_44F03D  +
lea esi [esi+0] +
jmp loc_44F017  +
mov eax [esp+2Ch+var_10] +
mov edx esi +
jmp loc_44EF81  +
***
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 4Ch +
add esi 0FFFFFFFFh +
mov ebx [eax] +
adc edi 0FFFFFFFFh +
cmp edi 0 +
ja loc_44F0F0  +
cmp esi ebx +
jnb loc_44F0F0  +
mov esi [eax+4] +
lea eax [edx+edx*2] +
lea eax [esi+eax*8-18h] +
mov ebp [eax+4] +
mov edi [eax] +
xor ebp ecx +
xor edi edx +
or ebp edi +
jz loc_44F0E5  +
xor eax eax +
mov [esp+eax+54h+var_2C] 0 +
add eax 4 +
cmp eax 18h +
jb loc_44F0A5  +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_44] offset loc_44EB80 +
mov [esp+54h+var_48] 18h +
mov [esp+54h+var_4C] ebx +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_2C] edx +
mov [esp+54h+var_28] ecx +
call bsearch  +
test eax eax +
jz loc_44F0F5  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [eax+4] +
jmp loc_44F0A3  +
mov eax [esp+54h+arg_4] +
mov [esp+54h+var_4C] 0 +
mov [esp+54h+var_50] offset aInvalidAbbrevi +
mov [esp+54h+var_54] eax +
call [esp+54h+arg_0]  +
xor eax eax +
jmp loc_44F0E5  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_10] +
mov edi [esp+38h+arg_0] +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_44F149  +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [ebx] +
cmp [edx] ecx +
jz loc_44F1A0  +
mov edx [esp+38h+arg_C] +
mov [esp+38h+var_28] ebx +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_2C] edx +
mov edx [esp+38h+arg_8] +
mov [esp+38h+var_30] edx +
call sub_44D480  +
test eax eax +
jz loc_44F1B5  +
mov edx [ebx+0Ch] +
mov ecx [esp+38h+arg_4] +
add esi [ebp+0] +
mov [eax+4] edi +
mov [eax+0Ch] edx +
add edx 1 +
mov [eax] esi +
mov [eax+8] ecx +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [edx+4] edi +
jnz loc_44F149  +
mov ecx [esp+38h+arg_4] +
cmp [edx+8] ecx +
jnz loc_44F149  +
mov eax 1 +
jmp loc_44F191  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov ebp ebx +
mov esi [esp+44h+arg_18] +
mov [esp+44h+var_20] ecx +
mov ecx edx +
add edi [esp+44h+arg_0] +
adc ebp [esp+44h+arg_4] +
mov edx [esi+0Ch] +
add ecx [esp+44h+arg_8] +
adc ebx [esp+44h+arg_C] +
test edx edx +
mov [esp+44h+var_1C] ecx +
mov [esp+44h+var_18] ebx +
jz loc_44F22F  +
lea ecx [edx+edx*2] +
mov edx [esi] +
lea edx [edx+ecx*8-18h] +
mov ecx [edx+8] +
mov ebx [edx+0Ch] +
mov [esp+44h+var_2C] ecx +
mov ecx [esp+44h+var_2C] +
mov [esp+44h+var_28] ebx +
xor ebx ebp +
xor ecx edi +
or ebx ecx +
jz loc_44F282  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
add ecx 1 +
adc ebx 0 +
xor ecx edi +
xor ebx ebp +
or ebx ecx +
jz loc_44F282  +
mov edx [esp+44h+arg_14] +
mov [esp+44h+var_34] esi +
mov [esp+44h+var_40] 18h +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_38] edx +
mov edx [esp+44h+arg_10] +
mov [esp+44h+var_3C] edx +
call sub_44D480  +
test eax eax +
jz loc_44F2B6  +
mov [eax] edi +
mov edi [esp+44h+var_1C] +
mov [eax+4] ebp +
mov ebp [esp+44h+var_18] +
mov [eax+8] edi +
mov edi [esp+44h+var_20] +
mov [eax+0Ch] ebp +
mov [eax+10h] edi +
mov eax 1 +
add dword ptr [esi+0Ch] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+44h+var_20] +
cmp [edx+10h] ebx +
jnz loc_44F22F  +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_18] eax +
jb loc_44F2C0  +
ja loc_44F2A1  +
mov eax [esp+44h+var_2C] +
cmp [esp+44h+var_1C] eax +
jbe loc_44F2C0  +
mov esi [esp+44h+var_1C] +
mov eax 1 +
mov edi [esp+44h+var_18] +
mov [edx+8] esi +
mov [edx+0Ch] edi +
jmp loc_44F27A  +
xor eax eax +
jmp loc_44F27A  +
mov eax 1 +
jmp loc_44F27A  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [eax+4] +
mov ecx [edx+4] +
mov edi [eax] +
mov esi [edx] +
cmp ebx ecx +
jnb loc_44F2F2  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
jbe loc_44F300  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
cmp edi esi +
jb loc_44F2E9  +
cmp ebx ecx +
jb loc_44F30C  +
cmp edi esi +
ja loc_44F2F4  +
mov ebx [eax+0Ch] +
mov ecx [edx+0Ch] +
mov edi [eax+8] +
mov esi [edx+8] +
cmp ebx ecx +
jb loc_44F2F4  +
ja loc_44F2E9  +
cmp edi esi +
jb loc_44F2F4  +
cmp ebx ecx +
jb loc_44F32A  +
cmp edi esi +
ja loc_44F2E9  +
mov edx [edx+10h] +
mov edx [edx] +
mov [esp+14h] edx +
mov eax [eax+10h] +
mov eax [eax] +
mov [esp+10h] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp strcmp  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aSInSAtD +
mov [esp+1Ch+var_18] 0C8h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
mov ebx eax +
sub esp 0F4h +
mov ecx [eax] +
mov eax [eax+8] +
lea esi [esp+0F4h+var_CC] +
sub eax [ebx+4] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_E4] ecx +
mov [esp+0F4h+var_F4] esi +
mov [esp+0F4h+var_E0] eax +
mov [esp+0F4h+var_EC] offset aSInSAtD +
mov [esp+0F4h+var_F0] 0C8h +
call sub_44F350  +
mov edx [ebx+18h] +
mov eax [ebx+14h] +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F4] edx +
call eax  +
add esp 0F4h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_44F400  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44F412  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
sub eax edx +
mov [ebx+0Ch] eax +
mov eax 1 +
add [ebx+8] edx +
add esp 8 +
pop ebx  +
retn   +
mov edx offset aDwarfUnderflow +
mov eax ebx +
call sub_44F380  +
mov dword ptr [ebx+1Ch] 1 +
jmp loc_44F3F4  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F497  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_44F473  +
movzx eax byte ptr [esi+3] +
movzx edx byte ptr [esi+2] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi] +
or eax edx +
movzx edx byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx eax byte ptr [esi] +
movzx edx byte ptr [esi+1] +
shl eax 18h +
shl edx 10h +
or eax edx +
movzx edx byte ptr [esi+3] +
or eax edx +
movzx edx byte ptr [esi+2] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov esi eax +
sub esp 4 +
mov ebx [eax+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F581  +
mov esi [esi+10h] +
test esi esi +
jnz loc_44F522  +
movzx ecx byte ptr [ebx+7] +
xor edx edx +
movzx eax byte ptr [ebx+6] +
movzx esi byte ptr [ebx] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+5] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+4] +
or ecx eax +
movzx eax byte ptr [ebx+3] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+2] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+1] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
movzx ecx byte ptr [ebx] +
xor edx edx +
movzx eax byte ptr [ebx+1] +
movzx esi byte ptr [ebx+7] +
shl ecx 18h +
shl eax 10h +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl eax 8 +
or ecx eax +
movzx eax byte ptr [ebx+3] +
or ecx eax +
movzx eax byte ptr [ebx+4] +
shld edx eax +
shl eax 18h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+5] +
xor edx edx +
shld edx eax +
shl eax 10h +
or ecx edx +
or esi eax +
movzx eax byte ptr [ebx+6] +
xor edx edx +
add esp 4 +
pop ebx  +
shld edx eax +
shl eax 8 +
or ecx edx +
or esi eax +
mov edx ecx +
mov eax esi +
pop esi  +
retn   +
xor esi esi +
add esp 4 +
xor ecx ecx +
mov eax esi +
mov edx ecx +
pop ebx  +
pop esi  +
retn   +
***
test edx edx +
jnz loc_44F5A2  +
sub esp 0Ch +
call sub_44F430  +
xor edx edx +
add esp 0Ch +
retn   +
jmp sub_44F4A0  +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov esi [eax+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F5F3  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_44F5E1  +
movzx edx byte ptr [esi+1] +
movzx eax byte ptr [esi] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
movzx edx byte ptr [esi] +
movzx eax byte ptr [esi+1] +
add esp 4 +
pop ebx  +
pop esi  +
shl edx 8 +
or eax edx +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov ebx [eax+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F620  +
movzx eax byte ptr [ebx] +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_44F674  +
mov eax ebx +
mov ecx edi +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44F667  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or ebp eax +
add edi 7 +
test bl bl +
jns loc_44F6B2  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F6C0  +
cmp edi 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_44F650  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_44F66D  +
mov edx offset aLeb128Overflow +
mov eax esi +
call sub_44F380  +
add edi 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_44F674  +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 2 +
jz loc_44F740  +
jle loc_44F700  +
cmp edx 4 +
jz loc_44F6F0  +
cmp edx 8 +
jnz loc_44F726  +
add esp 8 +
pop ebx  +
jmp sub_44F4A0  +
call sub_44F430  +
xor edx edx +
add esp 8 +
pop ebx  +
retn   +
cmp edx 1 +
jnz loc_44F726  +
mov edx 1 +
mov ebx [eax+8] +
call sub_44F3E0  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_44F6F7  +
movzx eax byte ptr [ebx] +
add esp 8 +
xor edx edx +
pop ebx  +
retn   +
mov edx offset aUnrecognizedAd +
call sub_44F380  +
add esp 8 +
xor eax eax +
xor edx edx +
pop ebx  +
retn   +
call sub_44F5B0  +
add esp 8 +
xor edx edx +
pop ebx  +
movzx eax ax +
retn   +
***
push edi  +
xor edi edi +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_1C] 0 +
jmp loc_44F794  +
mov eax ebx +
mov ecx ebp +
and eax 7Fh +
xor edx edx +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_44F787  +
mov edx eax +
xor eax eax +
or [esp+28h+var_1C] edx +
or edi eax +
add ebp 7 +
test bl bl +
jns loc_44F7D2  +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44F3E0  +
test eax eax +
jz loc_44F810  +
cmp ebp 3Fh +
movzx ebx byte ptr [ebx] +
jbe loc_44F770  +
mov eax [esp+28h+var_20] +
test eax eax +
jnz loc_44F78D  +
mov edx offset aSignedLeb128Ov +
mov eax esi +
call sub_44F380  +
add ebp 7 +
test bl bl +
mov [esp+28h+var_20] 1 +
js loc_44F794  +
and ebx 40h +
jz loc_44F7FB  +
cmp ebp 3Fh +
ja loc_44F7FB  +
mov ecx ebp +
mov eax 0FFFFFFFFh +
shl eax cl +
xor ebx ebx +
mov edx 0FFFFFFFFh +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebx +
or [esp+28h+var_1C] edx +
or edi eax +
mov edx [esp+28h+var_1C] +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov ebp [esp+30h+arg_0] +
mov edi [esp+30h+arg_4] +
mov ebx [esp+30h+arg_10] +
mov [esp+30h+var_1C] edx +
mov edx [esp+30h+arg_C] +
mov [esp+30h+var_18] edx +
cmp eax 10h +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
jz loc_44FC12  +
ja loc_44F8C0  +
cmp eax 8 +
jz loc_44FAE0  +
jbe loc_44F940  +
cmp eax 0Ch +
lea esi [esi+0] +
jz loc_44F9F2  +
ja loc_44F9A0  +
cmp eax 0Ah +
nop   +
jz loc_44FBE0  +
ja loc_44F9F2  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44F630  +
mov edx eax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44F3E0  +
cmp eax 17h +
jz loc_44F9D0  +
jbe loc_44F916  +
cmp eax 1F01h +
jz loc_44FA90  +
ja loc_44F971  +
cmp eax 19h +
nop   +
jz loc_44FBC0  +
jb loc_44FB70  +
cmp eax 20h +
nop   +
jnz loc_44F98A  +
mov dword ptr [ebx] 7 +
mov eax esi +
call sub_44F4A0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 13h +
jz loc_44FB30  +
jbe loc_44FA27  +
cmp eax 15h +
jz loc_44FB80  +
nop   +
ja loc_44FB03  +
mov dword ptr [ebx] 4 +
jmp loc_44F8FC  +
cmp eax 4 +
jz loc_44FB17  +
jbe loc_44FA60  +
cmp eax 6 +
jz loc_44FC07  +
nop   +
lea esi [esi+0] +
ja loc_44FB51  +
mov dword ptr [ebx] 1 +
jmp loc_44FA3F  +
cmp eax 1F20h +
jz loc_44F9D0  +
cmp eax 1F21h +
jz loc_44F9D0  +
cmp eax 1F02h +
jz loc_44FA90  +
mov eax esi +
mov edx offset aUnrecognizedDw +
call sub_44F380  +
xor eax eax +
jmp loc_44F9EA  +
cmp eax 0Eh +
jz loc_44FB90  +
ja loc_44FB60  +
mov dword ptr [ebx] 2 +
mov eax esi +
call sub_44F750  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_44F9EA  +
mov dword ptr [ebx] 6 +
mov edx ecx +
mov eax esi +
call sub_44F590  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 1 +
mov edx 1 +
mov eax esi +
mov edi [esi+8] +
call sub_44F3E0  +
xor edx edx +
xor ecx ecx +
test eax eax +
jz loc_44FA14  +
movzx edx byte ptr [edi] +
xor ecx ecx +
mov [ebx+8] edx +
mov eax 1 +
mov [ebx+0Ch] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 11h +
jz loc_44FAD0  +
cmp eax 12h +
jnz loc_44F98A  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_44F5B0  +
mov dword ptr [ebx+0Ch] 0 +
movzx eax ax +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F9EA  +
cmp eax 1 +
jz loc_44FAB0  +
cmp eax 3 +
jnz loc_44F98A  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44F5B0  +
movzx edx ax +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44F3E0  +
mov dword ptr [ebx] 6 +
mov eax esi +
call sub_44F630  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx] 0 +
mov edx edi +
mov eax esi +
call sub_44F6D0  +
mov [ebx+8] eax +
mov eax 1 +
mov [ebx+0Ch] edx +
jmp loc_44F9EA  +
mov dword ptr [ebx] 4 +
jmp loc_44F9F8  +
mov eax [esi+8] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov edx [esi+0Ch] +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_2C] edx +
call sub_474CD0  +
lea edx [eax+1] +
jmp loc_44FA7E  +
mov eax esi +
mov [esp+30h+var_14] ecx +
call sub_44F630  +
mov ecx [esp+30h+var_14] +
jmp loc_44F845  +
mov dword ptr [ebx] 8 +
mov eax esi +
call sub_44F430  +
mov edx eax +
jmp loc_44F8AB  +
mov dword ptr [ebx] 4 +
mov eax esi +
call sub_44F430  +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F9EA  +
mov dword ptr [ebx] 1 +
jmp loc_44F8FC  +
mov dword ptr [ebx] 1 +
jmp loc_44FA96  +
mov dword ptr [ebx] 9 +
jmp loc_44F8A2  +
mov dword ptr [ebx] 4 +
jmp loc_44FA96  +
mov edx ecx +
mov eax esi +
call sub_44F590  +
cmp edx 0 +
ja loc_44FBA8  +
cmp eax [esp+30h+var_18] +
jb loc_44FC26  +
mov eax esi +
mov edx offset aDw_form_strpOu +
call sub_44F380  +
xor eax eax +
jmp loc_44F9EA  +
mov dword ptr [ebx] 1 +
mov eax 1 +
mov dword ptr [ebx+8] 1 +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_44F9EA  +
mov dword ptr [ebx] 8 +
mov edx 1 +
mov eax esi +
mov ebx [esi+8] +
call sub_44F3E0  +
xor edx edx +
test eax eax +
jz loc_44FA7E  +
movzx edx byte ptr [ebx] +
jmp loc_44FA7E  +
mov dword ptr [ebx] 1 +
jmp loc_44FB36  +
cmp ebp 2 +
mov dword ptr [ebx] 5 +
jnz loc_44F9D6  +
jmp loc_44FAB6  +
add eax [esp+30h+var_1C] +
mov dword ptr [ebx] 3 +
mov [ebx+8] eax +
mov eax 1 +
jmp loc_44F9EA  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov edi [esp+0ACh+arg_1C] +
lea esi [esp+0ACh+var_2C] +
mov [esp+0ACh+var_54] eax +
mov [esp+0ACh+var_50] edx +
mov [esp+0ACh+var_88] ecx +
lea eax [edi+28h] +
mov [esp+0ACh+var_5C] eax +
mov eax [esp+0ACh+var_88] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44FEC4  +
mov eax [esp+0ACh+var_88] +
call sub_44F630  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_44FEC4  +
mov ebx [esp+0ACh+arg_18] +
mov edx eax +
mov eax [esp+0ACh+var_5C] +
mov [esp+0ACh+var_A8] ebx +
mov ebx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] ebx +
call sub_44F070  +
test eax eax +
mov ebp eax +
jz loc_45008F  +
mov eax [eax+10h] +
test eax eax +
jz loc_450010  +
mov edx [ebp+14h] +
xor ebx ebx +
mov [esp+0ACh+var_6C] 0 +
mov [esp+0ACh+var_64] 0 +
mov [esp+0ACh+var_60] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_7C] 0 +
mov [esp+0ACh+var_84] 0 +
mov [esp+0ACh+var_80] 0 +
mov [esp+0ACh+var_68] 0 +
mov [esp+0ACh+var_74] 0 +
mov [esp+0ACh+var_70] 0 +
jmp loc_44FD4E  +
cmp eax 1Bh +
jz loc_44FFB0  +
cmp eax 55h +
jz loc_44FF72  +
cmp eax 12h +
jz loc_44FF40  +
nop   +
lea esi [esi+0] +
add ebx 1 +
cmp [ebp+10h] ebx +
jbe loc_44FDD8  +
mov edx ecx +
mov eax [edx+ebx*8+4] +
mov edx [esp+0ACh+arg_4] +
mov ecx [edi+10h] +
mov [esp+0ACh+var_9C] esi +
mov [esp+0ACh+var_A0] edx +
mov edx [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_A8] edx +
mov edx [edi+0Ch] +
mov [esp+0ACh+var_AC] edx +
mov edx [esp+0ACh+var_88] +
call sub_44F820  +
test eax eax +
jz loc_44FED0  +
mov ecx [ebp+14h] +
mov eax [ecx+ebx*8] +
cmp eax 11h +
jz loc_44FF07  +
ja loc_44FD20  +
cmp eax 3 +
jz loc_44FEE0  +
cmp eax 10h +
jnz loc_44FD40  +
cmp dword ptr [ebp+8] 11h +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jnz loc_4500A0  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
add ebx 1 +
cmp [ebp+10h] ebx +
ja loc_44FD4C  +
mov eax [ebp+8] +
cmp eax 2Eh +
jz loc_44FDE9  +
cmp eax 11h +
jnz loc_450010  +
mov eax [esp+0ACh+var_6C] +
test eax eax +
jnz loc_4500B8  +
mov ebx [esp+0ACh+var_68] +
test ebx ebx +
jz loc_450010  +
mov ecx [esp+0ACh+var_7C] +
test ecx ecx +
jz loc_450010  +
mov edx [esp+0ACh+var_58] +
test edx edx +
jz loc_44FE25  +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
add [esp+0ACh+var_84] eax +
adc [esp+0ACh+var_80] edx +
mov edx [esp+0ACh+var_74] +
mov ecx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_80] +
mov [esp+0ACh+var_1C] edi +
mov eax edx +
mov [esp+0ACh+var_28] ecx +
mov ecx [esp+0ACh+var_84] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_28] +
mov [esp+0ACh+var_2C] edx +
mov [esp+0ACh+var_20] ebx +
mov edx ecx +
mov [esp+0ACh+var_24] ecx +
mov ecx [esp+0ACh+arg_20] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_A4] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] ecx +
mov ecx [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_18] +
mov [esp+0ACh+var_90] ecx +
mov ecx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
mov [esp+0ACh+var_94] ecx +
call sub_44EBD0  +
test eax eax +
jz loc_44FED0  +
cmp dword ptr [ebp+8] 11h +
jnz loc_450010  +
mov eax 1 +
lea esi [esi+0] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+8] 11h +
jnz loc_44FD40  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov [edi+1Ch] eax +
jmp loc_44FD40  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_68] 1 +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jmp loc_44FD40  +
mov eax [esp+0ACh+var_2C] +
test eax eax +
jnz loc_44FFD7  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_44FD40  +
mov eax [esp+0ACh+var_2C] +
cmp eax 6 +
jz loc_44FF87  +
cmp eax 1 +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 1 +
mov [esp+0ACh+var_64] eax +
mov eax [esp+0ACh+var_20] +
mov [esp+0ACh+var_60] eax +
jmp loc_44FD40  +
cmp dword ptr [ebp+8] 11h +
jnz loc_44FD40  +
cmp [esp+0ACh+var_2C] 3 +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov [edi+20h] eax +
jmp loc_44FD40  +
cmp eax 1 +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_20] +
mov [esp+0ACh+var_58] 1 +
mov [esp+0ACh+var_7C] 1 +
mov [esp+0ACh+var_84] eax +
mov [esp+0ACh+var_80] edx +
jmp loc_44FD40  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_44FC6B  +
mov eax [esp+0ACh+arg_20] +
mov ecx [esp+0ACh+var_88] +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_9C] eax +
mov eax [esp+0ACh+arg_C] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+arg_8] +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_54] +
call sub_44FC40  +
test eax eax +
jnz loc_44FC6B  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_44FD40  +
mov eax [esp+0ACh+var_24] +
mov [edi+18h] eax +
jmp loc_44FDCC  +
cmp [esp+0ACh+var_60] 0 +
jbe loc_4500E4  +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset aRangesOffsetOu +
mov [esp+0ACh+var_AC] eax +
call [esp+0ACh+arg_14]  +
xor eax eax +
jmp loc_450091  +
mov eax [esp+0ACh+var_64] +
cmp eax [esp+0ACh+arg_C] +
jnb loc_4500BF  +
mov eax [esp+0ACh+arg_8] +
mov ecx [esp+0ACh+var_64] +
mov [esp+0ACh+var_2C] offset a_debug_ranges +
mov [esp+0ACh+var_10] 0 +
mov [esp+0ACh+var_28] eax +
mov eax [esp+0ACh+arg_8] +
add eax ecx +
mov [esp+0ACh+var_24] eax +
mov eax [esp+0ACh+arg_C] +
sub eax ecx +
xor ecx ecx +
mov [esp+0ACh+var_20] eax +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_1C] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_18] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_14] eax +
test ecx ecx +
jnz loc_45008F  +
mov edx [edi+14h] +
mov eax esi +
call sub_44F6D0  +
mov [esp+0ACh+var_78] edx +
mov edx [edi+14h] +
mov [esp+0ACh+var_7C] eax +
mov eax esi +
call sub_44F6D0  +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_80] edx +
mov ecx [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_78] +
mov ebx [esp+0ACh+var_80] +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_450269  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_450230  +
jle loc_450210  +
cmp ecx 4 +
jz loc_450250  +
cmp ecx 8 +
jnz loc_450280  +
mov ecx [esp+0ACh+var_7C] +
mov ebx [esp+0ACh+var_78] +
mov eax ecx +
and eax ebx +
cmp eax 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_450280  +
mov ecx [esp+0ACh+var_10] +
mov eax [esp+0ACh+var_84] +
mov edx [esp+0ACh+var_80] +
test ecx ecx +
mov [esp+0ACh+var_74] eax +
mov [esp+0ACh+var_70] edx +
jz loc_45016D  +
xor eax eax +
jmp loc_450091  +
cmp ecx 1 +
jnz loc_450280  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor bl 0FFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_4501DE  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
xor ebx 0FFFFh +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_4501DE  +
mov eax [esp+0ACh+var_7C] +
mov edx [esp+0ACh+var_78] +
mov ebx eax +
not ebx  +
or ebx edx +
setz cl  +
movzx ecx cl +
jmp loc_4501DE  +
mov eax [esp+0ACh+var_10] +
test eax eax +
jz loc_44FEBA  +
xor eax eax +
jmp loc_450091  +
mov ecx [esp+0ACh+var_7C] +
mov eax [esp+0ACh+var_74] +
mov edx [esp+0ACh+var_70] +
mov ebx [esp+0ACh+var_78] +
mov [esp+0ACh+var_34] edi +
add ecx eax +
mov [esp+0ACh+var_7C] ecx +
adc ebx edx +
add eax [esp+0ACh+var_84] +
mov [esp+0ACh+var_44] ecx +
mov [esp+0ACh+var_40] ebx +
mov ecx eax +
mov [esp+0ACh+var_3C] eax +
mov eax [esp+0ACh+arg_20] +
adc edx [esp+0ACh+var_80] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_9C] edi +
mov [esp+0ACh+var_8C] eax +
mov eax [esp+0ACh+arg_18] +
mov [esp+0ACh+var_38] edx +
mov edx [esp+0ACh+var_50] +
mov [esp+0ACh+var_90] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_94] eax +
mov eax [esp+0ACh+var_7C] +
mov [esp+0ACh+var_AC] eax +
mov eax [esp+0ACh+var_40] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+var_38] +
mov [esp+0ACh+var_A0] eax +
mov eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_98] eax +
mov eax [esp+0ACh+var_54] +
call sub_44EBD0  +
test eax eax +
jz loc_45008F  +
mov ecx [esp+0ACh+var_10] +
jmp loc_450165  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
mov ebx edx +
sub esp 5Ch +
mov esi [ebx+8] +
mov edx [esp+68h+arg_4] +
mov eax [esp+68h+arg_0] +
cmp edi edx +
jbe loc_450361  +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] offset aAbstractOrigin +
mov [esp+68h+var_68] eax +
call [esp+68h+arg_8]  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jnb loc_4504C0  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_45033C  +
cmp eax ecx +
jnb loc_45033C  +
mov edx [ebp+10h] +
sub ecx eax +
mov [esp+68h+var_2C] ecx +
mov [esp+68h+var_38] offset a_debug_info +
mov [esp+68h+var_1C] 0 +
mov [esp+68h+var_34] edx +
mov edx [ebx] +
add edx eax +
mov eax [ebp+30h] +
mov [esp+68h+var_30] edx +
mov [esp+68h+var_28] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_24] eax +
mov eax [esp+68h+arg_C] +
mov [esp+68h+var_20] eax +
lea eax [esp+68h+var_38] +
call sub_44F630  +
mov esi eax +
mov eax edx +
or eax esi +
mov ecx edx +
jz loc_45056A  +
mov edi [esp+68h+arg_C] +
mov edx esi +
lea eax [ebx+28h] +
mov [esp+68h+var_64] edi +
mov edi [esp+68h+arg_8] +
mov [esp+68h+var_68] edi +
call sub_44F070  +
test eax eax +
mov esi eax +
jz loc_450560  +
mov eax [eax+10h] +
test eax eax +
jz loc_450560  +
mov [esp+68h+var_54] 0 +
mov [esp+68h+var_4C] 0 +
jmp loc_450439  +
cmp eax 3 +
jnz loc_450427  +
mov eax [esp+68h+var_4C] +
cmp [esp+68h+var_48] 3 +
cmovz eax [esp+68h+var_40] +
mov [esp+68h+var_4C] eax +
add [esp+68h+var_54] 1 +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
jbe loc_450550  +
mov eax [esp+68h+var_54] +
mov edx [ebp+2Ch] +
mov ecx [ebx+10h] +
lea edi ds:0[eax*8] +
mov eax [esi+14h] +
mov [esp+68h+var_50] edx +
lea edx [esp+68h+var_48] +
mov eax [eax+edi+4] +
mov [esp+68h+var_58] edx +
mov edx [esp+68h+var_50] +
mov [esp+68h+var_5C] edx +
mov edx [ebp+28h] +
mov [esp+68h+var_60] edx +
mov edx [ebx+14h] +
mov [esp+68h+var_64] edx +
mov edx [ebx+0Ch] +
mov [esp+68h+var_68] edx +
lea edx [esp+68h+var_38] +
call sub_44F820  +
test eax eax +
jz loc_450560  +
add edi [esi+14h] +
mov eax [edi] +
cmp eax 47h +
jz loc_4504E0  +
jbe loc_450410  +
cmp eax 6Eh +
jz loc_4504A6  +
cmp eax 2007h +
jnz loc_450427  +
cmp [esp+68h+var_48] 3 +
jnz loc_450427  +
mov eax [esp+68h+var_40] +
jmp loc_450359  +
cmp esi eax +
ja loc_45033C  +
sub eax esi +
mov ecx [ebx+4] +
sbb edx edi +
cmp edx 0 +
ja loc_45033C  +
jmp loc_450373  +
mov eax [edi+4] +
cmp eax 10h +
jz loc_450427  +
cmp eax 20h +
nop   +
jz loc_450427  +
mov eax [esp+68h+var_48] +
cmp eax 4 +
jz loc_450508  +
cmp eax 1 +
jnz loc_450427  +
mov eax [esp+68h+arg_C] +
mov edx [esp+68h+var_3C] +
mov [esp+68h+var_5C] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_64] edx +
mov edx ebx +
mov [esp+68h+var_60] eax +
mov eax [esp+68h+var_40] +
mov [esp+68h+var_68] eax +
mov eax ebp +
call sub_450320  +
test eax eax +
cmovz eax [esp+68h+var_4C] +
add [esp+68h+var_54] 1 +
mov [esp+68h+var_4C] eax +
mov eax [esp+68h+var_54] +
cmp [esi+10h] eax +
ja loc_450439  +
lea esi [esi+0] +
mov eax [esp+68h+var_4C] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+68h+var_38] +
mov edx offset aInvalidAbstrac +
call sub_44F380  +
xor eax eax +
jmp loc_450359  +
***
mov edi edx +
push esi  +
mov esi edi +
push ebx  +
mov edi ecx +
sub esp 0ACh +
mov [esp+0B4h+var_40] eax +
mov eax [esp+0B4h+arg_0] +
mov edx [esp+0B4h+arg_4] +
mov [esp+0B4h+var_4C] eax +
lea eax [ecx+28h] +
mov [esp+0B4h+var_48] edx +
mov [esp+0B4h+var_58] eax +
mov eax [esp+0B4h+arg_8] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_450E9C  +
mov eax [esp+0B4h+arg_8] +
call sub_44F630  +
mov ebx edx +
mov ecx edx +
or ebx eax +
jz loc_450E9C  +
mov ebx [esp+0B4h+arg_14] +
mov edx eax +
mov eax [esp+0B4h+var_58] +
mov [esp+0B4h+var_B0] ebx +
mov ebx [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ebx +
call sub_44F070  +
test eax eax +
mov ebp eax +
jz loc_450B74  +
mov eax [eax+8] +
cmp eax 2Eh +
jz loc_4507B0  +
cmp eax 3 +
jz loc_4507B0  +
xor edx edx +
cmp eax 1Dh +
setz dl  +
mov [esp+0B4h+var_78] edx +
cmp eax 1Dh +
mov eax [esp+0B4h+arg_1C] +
cmovnz eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_6C] 0 +
mov [esp+0B4h+var_38] eax +
mov eax [esp+0B4h+var_78] +
test eax eax +
jnz loc_450BB5  +
mov eax [ebp+10h] +
mov [esp+0B4h+var_5C] 0 +
mov [esp+0B4h+var_50] 0 +
mov [esp+0B4h+var_44] 0 +
test eax eax +
mov [esp+0B4h+var_3C] 0 +
mov [esp+0B4h+var_68] 0 +
mov [esp+0B4h+var_74] 0 +
mov [esp+0B4h+var_70] 0 +
mov [esp+0B4h+var_54] 0 +
mov [esp+0B4h+var_64] 0 +
mov [esp+0B4h+var_60] 0 +
jz loc_450817  +
mov [esp+0B4h+var_8C] 0 +
jmp loc_450714  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_450702  +
add ebx [ebp+14h] +
mov eax [ebx] +
cmp eax 47h +
jz loc_450A8E  +
jbe loc_4507C0  +
cmp eax 59h +
jz loc_450A32  +
lea esi [esi+0] +
ja loc_450A12  +
cmp eax 55h +
jz loc_450B00  +
cmp eax 58h +
jnz loc_450702  +
cmp [esp+0B4h+var_34] 1 +
jz loc_450C10  +
add [esp+0B4h+var_8C] 1 +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
jbe loc_450817  +
mov eax [esp+0B4h+var_8C] +
mov edx [esi+2Ch] +
mov ecx [edi+10h] +
lea ebx ds:0[eax*8] +
mov eax [ebp+14h] +
mov [esp+0B4h+var_84] edx +
lea edx [esp+0B4h+var_34] +
mov eax [eax+ebx+4] +
mov [esp+0B4h+var_A4] edx +
mov edx [esp+0B4h+var_84] +
mov [esp+0B4h+var_A8] edx +
mov edx [esi+28h] +
mov [esp+0B4h+var_AC] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_B0] edx +
mov edx [edi+0Ch] +
mov [esp+0B4h+var_B4] edx +
mov edx [esp+0B4h+arg_8] +
call sub_44F820  +
test eax eax +
jz loc_450B74  +
cmp dword ptr [ebp+8] 11h +
jnz loc_4506B5  +
mov eax [ebp+14h] +
cmp dword ptr [eax+ebx] 11h +
jnz loc_4506B5  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_4506B5  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_4C] eax +
mov [esp+0B4h+var_48] edx +
jmp loc_4506B5  +
mov [esp+0B4h+var_78] 1 +
jmp loc_450626  +
cmp eax 11h +
jz loc_450A53  +
jbe loc_4509D7  +
cmp eax 12h +
jnz loc_450A85  +
mov eax [esp+0B4h+var_34] +
test eax eax +
jnz loc_450B81  +
mov eax [esp+0B4h+var_2C] +
add [esp+0B4h+var_8C] 1 +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov eax [esp+0B4h+var_8C] +
cmp [ebp+10h] eax +
mov [esp+0B4h+var_70] edx +
ja loc_450714  +
mov eax [esp+0B4h+var_78] +
test eax eax +
jz loc_450CDB  +
mov eax [esp+0B4h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_450CA9  +
mov ecx [esp+0B4h+var_5C] +
test ecx ecx +
jnz loc_450B38  +
mov eax [esp+0B4h+var_68] +
test eax eax +
jz loc_450CA9  +
mov eax [esp+0B4h+var_54] +
test eax eax +
jz loc_450CA9  +
mov eax [esp+0B4h+var_3C] +
test eax eax +
jnz loc_450C70  +
mov eax [esp+0B4h+var_38] +
mov edx [esi+4] +
mov ecx [esp+0B4h+var_74] +
mov ebx [esp+0B4h+var_70] +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] ecx +
mov ecx [esp+0B4h+var_64] +
mov [esp+0B4h+var_A8] ebx +
mov ebx [esp+0B4h+var_60] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] ebx +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+var_40] +
call sub_44F1C0  +
test eax eax +
jz loc_450B74  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_4505B1  +
lea eax [esp+0B4h+var_34] +
mov edx [esp+0B4h+var_48] +
mov ecx edi +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_34] 0 +
mov [esp+0B4h+var_30] 0 +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_2C] 0 +
mov [esp+0B4h+var_28] 0 +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_450580  +
test eax eax +
jz loc_450B74  +
mov ebp [esp+0B4h+var_28] +
test ebp ebp +
jz loc_4505B1  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
lea eax [esp+0B4h+var_34] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44D520  +
test eax eax +
jz loc_450B74  +
mov ebx [esp+0B4h+var_34] +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] offset loc_44F2D0 +
mov [esp+0B4h+var_AC] 18h +
mov [esp+0B4h+var_B4] ebx +
mov [esp+0B4h+var_B0] eax +
call sub_44E950  +
mov ecx [esp+0B4h+var_6C] +
mov eax [esp+0B4h+var_28] +
mov [ecx+0Ch] ebx +
mov [ecx+10h] eax +
jmp loc_4505B1  +
cmp eax 3 +
jnz loc_450702  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_450702  +
mov eax [esp+0B4h+var_6C] +
mov ecx [eax] +
test ecx ecx +
jnz loc_450702  +
lea esi [esi+0] +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx] eax +
jmp loc_450702  +
cmp eax 6Eh +
jz loc_450A22  +
cmp eax 2007h +
jnz loc_450702  +
cmp [esp+0B4h+var_34] 3 +
jnz loc_450702  +
jmp loc_450A00  +
cmp [esp+0B4h+var_34] 1 +
jnz loc_450702  +
mov eax [esp+0B4h+var_2C] +
mov ecx [esp+0B4h+var_6C] +
mov [ecx+8] eax +
jmp loc_450702  +
mov edx [esp+0B4h+var_34] +
test edx edx +
jnz loc_450702  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_54] 1 +
mov [esp+0B4h+var_64] eax +
mov [esp+0B4h+var_60] edx +
jmp loc_450702  +
cmp eax 31h +
jnz loc_450702  +
mov eax [ebx+4] +
cmp eax 10h +
jz loc_450702  +
cmp eax 20h +
jz loc_450702  +
mov eax [esp+0B4h+var_34] +
cmp eax 4 +
jz loc_450AB8  +
cmp eax 1 +
jnz loc_450702  +
mov eax [esp+0B4h+arg_14] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B0] edx +
mov edx edi +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_B4] eax +
mov eax esi +
call sub_450320  +
test eax eax +
jnz loc_450A07  +
jmp loc_450702  +
mov eax [esp+0B4h+var_34] +
cmp eax 6 +
jz loc_450B15  +
cmp eax 1 +
jnz loc_450702  +
mov eax [esp+0B4h+var_2C] +
mov [esp+0B4h+var_5C] 1 +
mov [esp+0B4h+var_50] eax +
mov eax [esp+0B4h+var_28] +
mov [esp+0B4h+var_44] eax +
jmp loc_450702  +
xor edx edx +
mov ecx [esi+24h] +
cmp edx [esp+0B4h+var_44] +
ja loc_450D51  +
jb loc_450B53  +
cmp ecx [esp+0B4h+var_50] +
ja loc_450D51  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 0 +
mov [esp+0B4h+var_B0] offset aFunctionRanges +
mov [esp+0B4h+var_B4] eax +
call [esp+0B4h+arg_10]  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_450702  +
mov eax [esp+0B4h+var_2C] +
mov edx [esp+0B4h+var_28] +
mov [esp+0B4h+var_3C] 1 +
mov [esp+0B4h+var_68] 1 +
mov [esp+0B4h+var_74] eax +
mov [esp+0B4h+var_70] edx +
jmp loc_450702  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_B0] 14h +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44D420  +
test eax eax +
mov [esp+0B4h+var_6C] eax +
jz loc_450B74  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
jmp loc_450650  +
mov edx [esp+0B4h+var_28] +
mov eax [esp+0B4h+var_2C] +
mov ecx edx +
or ecx eax +
jnz loc_450C34  +
mov eax [esp+0B4h+var_6C] +
mov dword ptr [eax+4] offset unk_4D0369 +
jmp loc_450702  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0B4h+var_84] ecx +
mov ecx [esp+0B4h+arg_C] +
mov [esp+0B4h+var_80] ebx +
cmp [esp+0B4h+var_80] 0 +
mov ecx [ecx+24h] +
jbe loc_450C85  +
mov eax [esp+0B4h+arg_8] +
mov edx offset aInvalidFileN_0 +
call sub_44F380  +
jmp loc_450B74  +
mov eax [esp+0B4h+var_64] +
mov edx [esp+0B4h+var_60] +
add [esp+0B4h+var_74] eax +
adc [esp+0B4h+var_70] edx +
jmp loc_450861  +
cmp [esp+0B4h+var_84] ecx +
jnb loc_450C57  +
mov ecx [esp+0B4h+arg_C] +
add eax 3FFFFFFFh +
mov edx [ecx+28h] +
mov ecx [esp+0B4h+var_6C] +
mov eax [edx+eax*4] +
mov [ecx+4] eax +
jmp loc_450702  +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_AC] 14h +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+var_6C] +
mov [esp+0B4h+var_B0] eax +
mov eax [esp+0B4h+var_40] +
mov [esp+0B4h+var_B4] eax +
call sub_44D470  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_4505B1  +
mov eax [esp+0B4h+arg_1C] +
mov ecx edi +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_98] eax +
mov eax [esp+0B4h+arg_18] +
mov [esp+0B4h+var_B0] edx +
mov edx esi +
mov [esp+0B4h+var_9C] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_A0] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_A4] eax +
mov eax [esp+0B4h+arg_C] +
mov [esp+0B4h+var_A8] eax +
mov eax [esp+0B4h+arg_8] +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_40] +
call sub_450580  +
test eax eax +
jnz loc_4505B1  +
jmp loc_450B74  +
mov eax [esi+20h] +
mov ebx [esp+0B4h+var_50] +
mov edx [esp+0B4h+var_48] +
mov [esp+0B4h+var_34] offset a_debug_ranges +
mov [esp+0B4h+var_30] eax +
add eax ebx +
sub ecx ebx +
mov [esp+0B4h+var_2C] eax +
mov eax [esi+30h] +
mov [esp+0B4h+var_28] ecx +
xor ecx ecx +
mov [esp+0B4h+var_18] 0 +
mov [esp+0B4h+var_80] edx +
mov [esp+0B4h+var_24] eax +
mov eax [esp+0B4h+arg_10] +
mov [esp+0B4h+var_78] esi +
mov [esp+0B4h+var_20] eax +
mov eax [esp+0B4h+arg_14] +
mov [esp+0B4h+var_1C] eax +
mov eax [esp+0B4h+var_4C] +
mov [esp+0B4h+var_84] eax +
test ecx ecx +
jnz loc_450B74  +
mov edx [edi+14h] +
lea eax [esp+0B4h+var_34] +
call sub_44F6D0  +
mov esi edx +
mov ebx eax +
mov [esp+0B4h+var_88] edx +
mov edx [edi+14h] +
mov [esp+0B4h+var_8C] eax +
lea eax [esp+0B4h+var_34] +
call sub_44F6D0  +
mov ecx ebx +
mov ebx esi +
or ecx eax +
or ebx edx +
or ebx ecx +
jz loc_450EA6  +
mov ecx [edi+14h] +
cmp ecx 2 +
jz loc_450E70  +
jle loc_450E56  +
cmp ecx 4 +
jz loc_450E88  +
cmp ecx 8 +
jnz loc_450EC0  +
mov ecx [esp+0B4h+var_8C] +
mov ebx [esp+0B4h+var_88] +
mov esi ecx +
and esi ebx +
cmp esi 0FFFFFFFFh +
setz cl  +
movzx ecx cl +
test ecx ecx +
jz loc_450EC0  +
mov ecx [esp+0B4h+var_18] +
mov [esp+0B4h+var_84] eax +
mov [esp+0B4h+var_80] edx +
test ecx ecx +
jz loc_450DCB  +
jmp loc_450B74  +
cmp ecx 1 +
jnz loc_450EC0  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor bl 0FFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_450E32  +
mov ebx [esp+0B4h+var_8C] +
mov ecx [esp+0B4h+var_88] +
xor ebx 0FFFFh +
or ebx ecx +
setz cl  +
movzx ecx cl +
jmp loc_450E32  +
mov ebx [esp+0B4h+var_8C] +
mov esi [esp+0B4h+var_88] +
not ebx  +
or ebx esi +
setz cl  +
movzx ecx cl +
jmp loc_450E32  +
mov eax 1 +
jmp loc_450B76  +
mov eax [esp+0B4h+var_18] +
mov esi [esp+0B4h+var_78] +
test eax eax +
jz loc_4508B6  +
jmp loc_450B74  +
mov ecx [esp+0B4h+var_84] +
mov esi [esp+0B4h+var_38] +
mov ebx [esp+0B4h+var_80] +
add eax ecx +
mov [esp+0B4h+var_AC] eax +
mov eax [esp+0B4h+var_8C] +
mov [esp+0B4h+var_9C] esi +
mov esi [esp+0B4h+arg_14] +
adc edx ebx +
mov [esp+0B4h+var_A8] edx +
mov edx [esp+0B4h+var_88] +
add eax ecx +
mov ecx [esp+0B4h+var_6C] +
mov [esp+0B4h+var_A0] esi +
mov esi [esp+0B4h+arg_10] +
mov [esp+0B4h+var_B4] eax +
mov eax [esp+0B4h+var_78] +
adc edx ebx +
mov [esp+0B4h+var_B0] edx +
mov [esp+0B4h+var_A4] esi +
mov edx [eax+4] +
mov eax [esp+0B4h+var_40] +
call sub_44F1C0  +
test eax eax +
jz loc_450B74  +
mov ecx [esp+0B4h+var_18] +
jmp loc_450DC3  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0ECh +
mov edi [esp+0ECh+arg_C] +
mov [esp+0ECh+var_C0] eax +
mov eax [ebx+8] +
mov [esp+0ECh+var_C8] edx +
mov [esp+0ECh+var_90] ecx +
mov dword ptr [edi] 1 +
mov edx [edx+0Ch] +
mov [esp+0ECh+var_E8] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_44EB10 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E4] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
jz loc_451320  +
mov edi [ebx+8] +
mov edx eax +
mov ebx [ebx+0Ch] +
sub edx edi +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] ebx +
add edx 1 +
cmp edx ebx +
jnb loc_450FC2  +
xor ebx ebx +
mov ecx [esp+0ECh+var_90] +
cmp ebx [eax+1Ch] +
jb loc_450FC2  +
ja loc_450FB7  +
cmp ecx [eax+18h] +
jb loc_450FC2  +
cmp ebx [eax+24h] +
jb loc_450FCB  +
lea esi [esi+0] +
jbe loc_450FC6  +
mov ebp eax +
jmp loc_450FFA  +
cmp ecx [eax+20h] +
jnb loc_450FC2  +
mov ebp eax +
lea esi [esi+0] +
add ebp 18h +
mov edx ebp +
sub edx edi +
sar edx 3 +
imul edx edx +
add edx 1 +
cmp edx [esp+0ECh+var_CC] +
jnb loc_450FFA  +
mov esi ebp +
sub esi eax +
lea edx [eax+30h] +
cmp [esi+edx-14h] ebx +
jbe loc_451186  +
mov esi [ebp+10h] +
cmp ebp edi +
mov ebx [esi+30h] +
jbe loc_451019  +
xor edx edx +
mov eax [esp+0ECh+var_90] +
cmp [ebp-14h] edx +
jb loc_4511BE  +
jbe loc_4511B5  +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
mov [esp+0ECh+var_C4] eax +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
jnz loc_451246  +
test ebx ebx +
jz loc_451361  +
cmp ebx 0FFFFFFFFh +
jz loc_451300  +
mov eax [ebp+10h] +
mov eax [eax+34h] +
mov [esp+0ECh+var_DC] offset loc_44EB60 +
mov [esp+0ECh+var_E0] 10h +
mov [esp+0ECh+var_E8] ebx +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov [esp+0ECh+var_C8] eax +
jz loc_45133A  +
mov edx [ebp+10h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_451260  +
mov edx [edx+38h] +
mov [esp+0ECh+var_E4] eax +
lea eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_DC] offset sub_44EAC0 +
mov [esp+0ECh+var_E0] 18h +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_EC] eax +
call bsearch  +
test eax eax +
mov ebx eax +
jz loc_451260  +
mov edx [ebp+10h] +
mov eax [edx+38h] +
mov edi [edx+3Ch] +
mov edx ebx +
sub edx eax +
sar edx 3 +
imul edx edx +
mov [esp+0ECh+var_CC] edi +
add edx 1 +
cmp edx edi +
jnb loc_4516D9  +
mov edi [esp+0ECh+var_90] +
mov [esp+0ECh+var_C4] edi +
mov esi edi +
xor edi edi +
cmp edi [ebx+1Ch] +
jb loc_451106  +
ja loc_4510F7  +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+18h] +
jb loc_451106  +
cmp edi [ebx+24h] +
jb loc_4512AB  +
jbe loc_45129E  +
mov eax [esp+0ECh+var_C4] +
mov edx ebx +
lea esi [esi+0] +
mov edi [esp+0ECh+var_C8] +
lea esi [esp+0ECh+var_38] +
mov ebx [edx+10h] +
mov edx [edi+4] +
lea ecx [ebx+10h] +
mov [esp+0ECh+var_58] edx +
mov edx [edi+8] +
mov edi [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] esi +
lea esi [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_38] edx +
lea edx [ebx+0Ch] +
mov [esp+0ECh+var_E8] edi +
mov edi [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] edi +
call sub_44EEF0  +
test eax eax +
jnz loc_451293  +
mov eax [ebx] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_58] +
jmp loc_451276  +
jb loc_451192  +
cmp [esi+edx-18h] ecx +
ja loc_450FFA  +
cmp [esi+edx-0Ch] ebx +
jb loc_450FFA  +
ja loc_450FD0  +
cmp [esi+edx-10h] ecx +
jbe loc_450FFA  +
lea esi [esi+0] +
jmp loc_450FD0  +
cmp [ebp-18h] eax +
ja loc_451019  +
cmp edx [ebp-0Ch] +
jb loc_4511D6  +
ja loc_451019  +
cmp eax [ebp-10h] +
lea esi [esi+0] +
jnb loc_451019  +
mov edi [esp+0ECh+var_C0] +
lea ecx [ebp-28h] +
mov edi [edi+4] +
mov [esp+0ECh+var_C4] edi +
mov [esp+0ECh+var_CC] edi +
mov edi [esp+0ECh+var_CC] +
test edi edi +
jnz loc_451250  +
cmp ebx 0FFFFFFFFh +
jnz loc_451024  +
mov edi [esp+0ECh+var_C8] +
sub ebp 18h +
mov esi [ebp+10h] +
cmp [edi+8] ebp +
mov ebx [esi+30h] +
jnb loc_451024  +
cmp edx [ecx-4] +
jb loc_451024  +
ja loc_451226  +
cmp eax [ecx-8] +
lea esi [esi+0] +
jb loc_451024  +
sub ecx 18h +
cmp edx [ecx+1Ch] +
ja loc_451024  +
jb loc_4511E8  +
cmp eax [ecx+18h] +
jb loc_4511E8  +
mov ecx [esp+0ECh+var_C4] +
test ecx ecx +
nop   +
jz loc_451030  +
mov ebx [esi+30h] +
jmp loc_451030  +
mov ebx [esi+30h] +
mov edi [esp+0ECh+var_CC] +
mov [esp+0ECh+var_C4] edi +
jmp loc_4511F0  +
mov eax [esp+0ECh+var_C8] +
mov edx [eax+8] +
mov eax [eax+4] +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] edx +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_90] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_0]  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0ECh+var_C4] +
cmp ecx [ebx+20h] +
jnb loc_451106  +
mov edx ebx +
lea esi [esi+0] +
add edx 18h +
mov ecx edx +
sub ecx eax +
sar ecx 3 +
imul ecx ecx +
add ecx 1 +
cmp ecx [esp+0ECh+var_CC] +
jnb loc_4512D6  +
mov ebp edx +
sub ebp ebx +
lea ecx [ebx+30h] +
cmp [ebp+ecx-14h] edi +
jbe loc_4512E0  +
mov eax [esp+0ECh+var_C4] +
jmp loc_451110  +
jb loc_4512E8  +
cmp [ebp+ecx-18h] esi +
ja loc_4512D6  +
cmp [ebp+ecx-0Ch] edi +
jb loc_4512D6  +
nop   +
ja loc_4512B0  +
cmp [ebp+ecx-10h] esi +
jbe loc_4512D6  +
jmp loc_4512B0  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] 0 +
jmp loc_45127A  +
mov eax [esp+0ECh+arg_C] +
mov dword ptr [eax] 0 +
add esp 0ECh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+10h] +
mov ebx [eax+24h] +
test ebx ebx +
jz loc_4515DC  +
mov [esp+0ECh+var_DC] 0 +
mov [esp+0ECh+var_E0] 0 +
mov [esp+0ECh+var_E4] ebx +
jmp loc_45127A  +
mov eax [ebp+10h] +
mov ecx 0Bh +
lea edi [esp+0ECh+var_38] +
mov [esp+0ECh+var_88] 0 +
mov [esp+0ECh+var_84] 0 +
mov edx eax +
mov [esp+0ECh+var_A4] eax +
mov eax ebx +
stos   +
mov edi [esp+0ECh+var_C8] +
mov [esp+0ECh+var_80] 0 +
mov [esp+0ECh+var_7C] 0 +
mov eax [edx+18h] +
mov edx [edi+1Ch] +
cmp eax edx +
jnb loc_4515AE  +
mov edi [esp+0ECh+var_C8] +
sub edx eax +
xor ebx ebx +
mov [esp+0ECh+var_78] offset a_debug_line +
mov [esp+0ECh+var_6C] edx +
mov [esp+0ECh+var_5C] 0 +
mov ecx [edi+18h] +
mov [esp+0ECh+var_74] ecx +
add ecx eax +
mov eax [edi+30h] +
mov [esp+0ECh+var_70] ecx +
mov [esp+0ECh+var_68] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_64] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_60] eax +
lea eax [esp+0ECh+var_78] +
call sub_44F430  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_451B53  +
mov [esp+0ECh+var_6C] eax +
lea eax [esp+0ECh+var_78] +
call sub_44F5B0  +
movzx eax ax +
mov [esp+0ECh+var_38] eax +
sub eax 2 +
cmp eax 2 +
ja loc_4516BE  +
mov edx ebx +
lea eax [esp+0ECh+var_78] +
call sub_44F590  +
mov edx [esp+0ECh+var_78] +
lea edi [esp+0ECh+var_88] +
mov [esp+0ECh+var_58] edx +
mov edx [esp+0ECh+var_74] +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_54] edx +
mov edx [esp+0ECh+var_70] +
mov [esp+0ECh+var_50] edx +
mov edx [esp+0ECh+var_68] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_40] edx +
mov edx [esp+0ECh+var_5C] +
mov [esp+0ECh+var_3C] edx +
mov edx eax +
lea eax [esp+0ECh+var_78] +
call sub_44F3E0  +
mov [esp+0ECh+var_CC] edi +
test eax eax +
jnz loc_4516E4  +
mov eax [esp+0ECh+var_84] +
mov ebx 0FFFFFFFFh +
add [esp+0ECh+var_80] eax +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_C0] +
mov [esp+0ECh+var_84] 0 +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E8] eax +
call sub_44D520  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax edi +
xor edi edi +
call sub_44ED40  +
xor eax eax +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_CC] 0 +
mov ecx [esp+0ECh+var_C0] +
mov ecx [ecx+4] +
test ecx ecx +
mov ecx [esp+0ECh+var_C4] +
jnz loc_4516A9  +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+34h] ecx +
mov [esi+30h] ebx +
mov [esi+3Ch] edi +
cmp ebx 0FFFFFFFFh +
jnz loc_451041  +
test eax eax +
jz loc_451300  +
mov eax [esp+0ECh+arg_C] +
mov ecx [esp+0ECh+var_90] +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+arg_0] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_450F30  +
add esp 0ECh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E4] 0 +
mov [esp+0ECh+var_E8] offset aUnitLineOffset +
mov [esp+0ECh+var_EC] eax +
call [esp+0ECh+arg_4]  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_4514C1  +
mov ebx [eax+1Ch] +
test ebx ebx +
jz loc_4516A1  +
movzx edx byte ptr [ebx] +
cmp dl 5Ch +
jz loc_4516A1  +
cmp dl 2Fh +
jz loc_4516A1  +
test dl dl +
jz loc_45160A  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_4516A1  +
mov edx [eax+20h] +
test edx edx +
mov [esp+0ECh+var_C8] edx +
jz loc_4516A1  +
mov [esp+0ECh+var_EC] ebx +
call strlen  +
mov edx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_EC] edx +
mov edi eax +
mov [esp+0ECh+var_CC] eax +
call strlen  +
mov esi eax +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
lea eax [edi+esi+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44D420  +
mov edx [esp+0ECh+var_C8] +
test eax eax +
mov edi eax +
jz loc_451320  +
mov [esp+0ECh+var_E8] edx +
mov [esp+0ECh+var_E4] esi +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov edx [esp+0ECh+var_CC] +
lea eax [edi+esi+1] +
mov byte ptr [edi+esi] 2Fh +
mov [esp+0ECh+var_E8] ebx +
mov ebx edi +
mov [esp+0ECh+var_EC] eax +
add edx 1 +
mov [esp+0ECh+var_E4] edx +
call memcpy  +
mov eax [ebp+10h] +
mov [eax+24h] ebx +
jmp loc_451348  +
mov [esi+34h] ecx +
mov [esi+38h] edi +
mov edi [esp+0ECh+var_CC] +
mov [esi+3Ch] edi +
mov [esi+30h] ebx +
jmp loc_451556  +
lea eax [esp+0ECh+var_78] +
mov edx offset aUnsupportedLin +
call sub_44F380  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_4514C1  +
mov eax [esp+0ECh+var_90] +
mov edx ebx +
jmp loc_451110  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
xor edx edx +
test eax eax +
jz loc_451705  +
movzx edx byte ptr [ebx] +
cmp [esp+0ECh+var_38] 3 +
mov [esp+0ECh+var_34] edx +
jg loc_451B63  +
mov [esp+0ECh+var_30] 1 +
lea eax [esp+0ECh+var_58] +
call sub_44F600  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
test eax eax +
jz loc_451750  +
movsx eax byte ptr [ebx] +
mov [esp+0ECh+var_2C] eax +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
xor edx edx +
test eax eax +
jz loc_451778  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_28] edx +
lea eax [esp+0ECh+var_58] +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
call sub_44F3E0  +
test eax eax +
jz loc_451B47  +
movzx eax byte ptr [ebx] +
lea edx [eax-1] +
mov [esp+0ECh+var_24] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_20] eax +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
test eax eax +
jz loc_451B3A  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_1C] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_4523E5  +
cmp byte ptr [ebx] 0 +
jnz loc_451805  +
jmp loc_4523E5  +
cmp byte ptr [ebx] 0 +
jz loc_45182E  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E8] eax +
call sub_474CD0  +
lea ebx [ebx+eax+1] +
mov eax [esp+0ECh+var_1C] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_1C] eax +
ja loc_451800  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
xor ebx ebx +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_44D420  +
test eax eax +
mov [esp+0ECh+var_18] eax +
jnz loc_4518BD  +
jmp loc_451B3A  +
mov edx [esp+0ECh+var_3C] +
test edx edx +
jnz loc_451B3A  +
mov edx [esp+0ECh+var_18] +
mov [edx+ebx] eax +
mov eax [esp+0ECh+var_4C] +
add ebx 4 +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_50] +
mov [esp+0ECh+var_EC] eax +
call sub_474CD0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
test eax eax +
jz loc_451B3A  +
mov eax [esp+0ECh+var_50] +
cmp byte ptr [eax] 0 +
jnz loc_451870  +
mov edx 1 +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
test eax eax +
jz loc_451B3A  +
mov ebx [esp+0ECh+var_50] +
mov edi [esp+0ECh+var_4C] +
mov [esp+0ECh+var_14] 0 +
add edi ebx +
cmp ebx edi +
jnb loc_4523DE  +
cmp byte ptr [ebx] 0 +
jz loc_4523DE  +
mov eax edi +
sub eax ebx +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_474CD0  +
lea edx [ebx+eax+1] +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_451936  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_45192C  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_45194C  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_451942  +
add edx eax +
mov eax 1 +
cmp byte ptr [edx] 0 +
jns loc_451962  +
add eax 1 +
cmp byte ptr [edx+eax-1] 0 +
js loc_451958  +
lea ebx [edx+eax] +
mov eax [esp+0ECh+var_14] +
add eax 1 +
cmp edi ebx +
mov [esp+0ECh+var_14] eax +
jbe loc_45197F  +
cmp byte ptr [ebx] 0 +
jnz loc_45190E  +
shl eax 2 +
mov edx [esp+0ECh+var_60] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E0] edx +
mov edx [esp+0ECh+var_64] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E4] edx +
call sub_44D420  +
test eax eax +
mov [esp+0ECh+var_10] eax +
jz loc_451B3A  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_451BF5  +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_451B3A  +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_C4] esi +
jmp loc_451AE1  +
cmp cl 2Fh +
jz loc_451B1F  +
test cl cl +
jz loc_451A07  +
cmp byte ptr [edi+1] 3Ah +
jz loc_451B1F  +
mov ebx edx +
or ebx eax +
jnz loc_451B90  +
mov eax [esp+0ECh+var_A4] +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_451B1F  +
mov [esp+0ECh+var_EC] ecx +
mov [esp+0ECh+var_B4] ecx +
call strlen  +
mov [esp+0ECh+var_EC] edi +
mov ebx eax +
call strlen  +
mov ebp eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+ebp+2] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44D420  +
mov ecx [esp+0ECh+var_B4] +
test eax eax +
mov esi eax +
jz loc_451B32  +
mov [esp+0ECh+var_E8] ecx +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
lea eax [esi+ebx+1] +
lea ecx [ebp+1] +
mov byte ptr [esi+ebx] 2Fh +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_E4] ecx +
mov [esp+0ECh+var_EC] eax +
call memcpy  +
mov eax [esp+0ECh+var_10] +
mov edi [esp+0ECh+var_BC] +
mov [eax+edi] esi +
lea eax [esp+0ECh+var_58] +
call sub_44F630  +
lea eax [esp+0ECh+var_58] +
call sub_44F630  +
mov edi [esp+0ECh+var_50] +
cmp byte ptr [edi] 0 +
jz loc_451BED  +
mov eax [esp+0ECh+var_3C] +
add [esp+0ECh+var_BC] 4 +
test eax eax +
jnz loc_451B32  +
mov eax [esp+0ECh+var_4C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_474CD0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
test eax eax +
jz loc_451B32  +
lea eax [esp+0ECh+var_58] +
call sub_44F630  +
movzx ecx byte ptr [edi] +
cmp cl 5Ch +
jnz loc_4519F0  +
mov eax [esp+0ECh+var_10] +
mov ebx [esp+0ECh+var_BC] +
mov [eax+ebx] edi +
jmp loc_451AA9  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_4514C1  +
mov edx 0FFFFFFFFh +
xor eax eax +
jmp loc_4517A5  +
lea eax [esp+0ECh+var_78] +
mov bl 1 +
call sub_44F4A0  +
jmp loc_451415  +
mov edx 1 +
mov ebx [esp+0ECh+var_50] +
lea eax [esp+0ECh+var_58] +
call sub_44F3E0  +
xor edx edx +
test eax eax +
jz loc_451B84  +
movzx edx byte ptr [ebx] +
mov [esp+0ECh+var_30] edx +
jmp loc_451725  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
mov [esp+0ECh+var_B0] ebx +
mov ebx [esp+0ECh+var_1C] +
cmp [esp+0ECh+var_B0] 0 +
mov [esp+0ECh+var_B4] ecx +
jbe loc_451BD3  +
lea eax [esp+0ECh+var_78] +
mov edx offset aInvalidDirecto +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
call sub_44F380  +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
jmp loc_4514C1  +
cmp [esp+0ECh+var_B4] ebx +
jnb loc_451BB0  +
mov edx [esp+0ECh+var_18] +
add eax 3FFFFFFFh +
mov ecx [edx+eax*4] +
jmp loc_451A20  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_C4] +
mov eax [esp+0ECh+var_3C] +
test eax eax +
jnz loc_451B3A  +
mov edx [esp+0ECh+var_14] +
test edx edx +
jnz loc_452352  +
mov [esp+0ECh+var_94] offset unk_4D0369 +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
lea eax [esp+0ECh+var_88] +
mov [esp+0ECh+var_CC] eax +
mov eax [esp+0ECh+var_C8] +
mov [esp+0ECh+var_B8] 0 +
mov [esp+0ECh+var_A0] ebp +
add eax 4 +
mov [esp+0ECh+var_A8] eax +
lea esi [esi+0] +
mov eax [esp+0ECh+var_6C] +
test eax eax +
jz loc_452091  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
lea eax [esp+0ECh+var_78] +
call sub_44F3E0  +
test eax eax +
jnz loc_451CD0  +
mov edx [esp+0ECh+var_24] +
test edx edx +
jz loc_451D28  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
mov edx 1 +
mov ebx [esp+0ECh+var_70] +
mov edi eax +
lea eax [esp+0ECh+var_78] +
call sub_44F3E0  +
test eax eax +
jnz loc_451CF7  +
lea edx [edi-1] +
lea eax [esp+0ECh+var_78] +
call sub_44F3E0  +
test eax eax +
jnz loc_451C60  +
mov ebp [esp+0ECh+var_A0] +
jmp loc_4514C1  +
movzx eax byte ptr [ebx] +
mov edx [esp+0ECh+var_24] +
movzx ebp al +
cmp ebp edx +
jnb loc_451D2A  +
test ebp ebp +
jz loc_451C94  +
cmp al 0Ch +
ja loc_451EF6  +
lea esi [esi+0] +
jmp ds:off_4D04A4[ebp*4]  +
movzx eax byte ptr [ebx] +
cmp al 2 +
lea esi [esi+0] +
jz loc_451F23  +
jbe loc_45204F  +
cmp al 3 +
nop   +
jz loc_451F40  +
cmp al 4 +
jnz loc_451CB5  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
jmp loc_451C60  +
xor ebp ebp +
mov eax ebp +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
div  [esp+0ECh+var_28] +
add edi eax +
mov eax [esp+0ECh+var_34] +
mov ebp edx +
xor edx edx +
imul eax edi +
div  [esp+0ECh+var_30] +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  [esp+0ECh+var_30] +
add ebp [esp+0ECh+var_2C] +
add [esp+0ECh+var_B4] ebp +
mov [esp+0ECh+var_C4] edx +
mov eax [esp+0ECh+var_CC] +
mov ecx [esp+0ECh+var_BC] +
mov edx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_DC] eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_44F120  +
jmp loc_451C60  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
mov edi edx +
or edi eax +
jz loc_452084  +
mov ecx eax +
mov ebx edx +
mov edi [esp+0ECh+var_14] +
add ecx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
jbe loc_452380  +
mov edx offset aInvalidFileNum +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_44F380  +
jmp loc_4514C1  +
lea eax [esp+0ECh+var_78] +
call sub_44F750  +
add [esp+0ECh+var_B4] eax +
jmp loc_451C60  +
lea eax [esp+0ECh+var_78] +
call sub_44F5B0  +
xor edx edx +
mov [esp+0ECh+var_C4] 0 +
movzx eax ax +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
jmp loc_451C60  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
mov edi [esp+0ECh+var_30] +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_9C] eax +
mov eax [esp+0ECh+var_C4] +
mov [esp+0ECh+var_98] edx +
xor edx edx +
add [esp+0ECh+var_9C] eax +
adc [esp+0ECh+var_98] edx +
xor ebp ebp +
mov eax [esp+0ECh+var_34] +
mov ecx [esp+0ECh+var_98] +
mov [esp+0ECh+var_E0] ebp +
imul ecx eax +
mul  [esp+0ECh+var_9C] +
add edx ecx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_470D20  +
mov [esp+0ECh+var_E4] edi +
mov [esp+0ECh+var_E0] ebp +
add [esp+0ECh+var_BC] eax +
adc [esp+0ECh+var_B8] edx +
mov eax [esp+0ECh+var_9C] +
mov edx [esp+0ECh+var_98] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call sub_470E30  +
mov [esp+0ECh+var_C4] eax +
jmp loc_451C60  +
mov eax 0FFh +
mov edi [esp+0ECh+var_C4] +
xor ebx ebx +
sub eax edx +
xor edx edx +
mov ebp [esp+0ECh+var_30] +
div  [esp+0ECh+var_28] +
xor edx edx +
add edi eax +
mov eax [esp+0ECh+var_34] +
imul eax edi +
div  ebp +
add [esp+0ECh+var_BC] eax +
mov eax edi +
adc [esp+0ECh+var_B8] ebx +
xor edx edx +
div  ebp +
mov [esp+0ECh+var_C4] edx +
jmp loc_451C60  +
mov eax [esp+0ECh+var_20] +
movzx ebx byte ptr [eax+ebp-1] +
test ebx ebx +
jz loc_451C60  +
lea esi [esi+0] +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
sub ebx 1 +
jnz loc_451F10  +
jmp loc_451C60  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+14h] +
lea eax [esp+0ECh+var_78] +
call sub_44F6D0  +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B8] edx +
jmp loc_451C60  +
mov eax [esp+0ECh+var_70] +
mov edi eax +
mov [esp+0ECh+var_AC] eax +
mov eax [esp+0ECh+var_6C] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_474CD0  +
lea edx [eax+1] +
lea eax [esp+0ECh+var_78] +
call sub_44F3E0  +
test eax eax +
jz loc_451CC5  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
mov ebx eax +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
lea eax [esp+0ECh+var_78] +
call sub_44F630  +
movzx eax byte ptr [edi] +
cmp al 5Ch +
jz loc_451C60  +
cmp al 2Fh +
jz loc_451C60  +
test al al +
jz loc_451FB3  +
mov eax [esp+0ECh+var_AC] +
cmp byte ptr [eax+1] 3Ah +
jz loc_451C60  +
test ebx ebx +
jnz loc_452364  +
mov eax [esp+0ECh+var_A4] +
mov edx [eax+20h] +
mov [esp+0ECh+var_EC] edx +
mov [esp+0ECh+var_9C] edx +
call strlen  +
mov ebx eax +
mov eax [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
call strlen  +
mov ecx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] ecx +
mov edi eax +
mov eax [esp+0ECh+var_60] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+var_64] +
mov [esp+0ECh+var_E4] eax +
lea eax [ebx+edi+2] +
mov [esp+0ECh+var_E8] eax +
call sub_44D420  +
test eax eax +
mov ebp eax +
jz loc_451CC5  +
mov edx [esp+0ECh+var_9C] +
add edi 1 +
mov [esp+0ECh+var_E4] ebx +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edx +
call memcpy  +
lea eax [ebp+ebx+1] +
mov byte ptr [ebp+ebx+0] 2Fh +
mov [esp+0ECh+var_E4] edi +
mov edi [esp+0ECh+var_AC] +
mov [esp+0ECh+var_EC] eax +
mov [esp+0ECh+var_E8] edi +
call memcpy  +
mov [esp+0ECh+var_AC] ebp +
jmp loc_451C60  +
cmp al 1 +
jnz loc_451CB5  +
mov eax [esp+0ECh+var_94] +
mov [esp+0ECh+var_B4] 1 +
mov [esp+0ECh+var_C4] 0 +
mov [esp+0ECh+var_BC] 0 +
mov [esp+0ECh+var_AC] eax +
mov [esp+0ECh+var_B8] 0 +
jmp loc_451C60  +
mov [esp+0ECh+var_AC] offset unk_4D0369 +
jmp loc_451C60  +
mov eax [esp+0ECh+var_5C] +
mov ebp [esp+0ECh+var_A0] +
test eax eax +
jnz loc_4514C1  +
mov eax [esp+0ECh+var_7C] +
test eax eax +
jz loc_4514C1  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_CC] +
mov ebx [esp+0ECh+var_C0] +
mov [esp+0ECh+var_E8] 10h +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_DC] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E4] eax +
call sub_44D480  +
test eax eax +
jz loc_4514C1  +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+arg_8] +
mov [esp+0ECh+var_E8] edi +
mov [esp+0ECh+var_EC] ebx +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
mov [esp+0ECh+var_E4] eax +
call sub_44D520  +
test eax eax +
jz loc_4514C1  +
mov eax [esp+0ECh+var_7C] +
mov ebx [esp+0ECh+var_88] +
mov [esp+0ECh+var_E0] offset sub_44EEB0 +
mov [esp+0ECh+var_E4] 10h +
mov [esp+0ECh+var_E8] eax +
mov [esp+0ECh+var_EC] ebx +
call sub_44E950  +
mov eax [esp+0ECh+var_7C] +
mov [esp+0ECh+var_C4] eax +
mov eax [esp+0ECh+var_C0] +
mov eax [eax+4] +
test eax eax +
jz loc_45233B  +
lea eax [esp+0ECh+var_78] +
mov edi [ebp+10h] +
mov [esp+0ECh+var_B4] 0 +
mov [esp+0ECh+var_78] 0 +
mov [esp+0ECh+var_74] 0 +
mov [esp+0ECh+var_70] 0 +
mov [esp+0ECh+var_6C] 0 +
mov [esp+0ECh+var_BC] eax +
mov ecx [esp+0ECh+var_C8] +
mov [esp+0ECh+var_58] offset a_debug_info +
mov [esp+0ECh+var_CC] ebp +
mov [esp+0ECh+var_AC] esi +
mov eax [ecx+10h] +
mov esi ecx +
mov edx [ecx+30h] +
mov [esp+0ECh+var_A8] ebx +
mov ebx [esp+0ECh+var_BC] +
mov [esp+0ECh+var_54] eax +
mov eax [edi] +
mov [esp+0ECh+var_50] eax +
mov eax [edi+4] +
mov [esp+0ECh+var_48] edx +
mov edx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_3C] 0 +
mov [esp+0ECh+var_4C] eax +
mov [esp+0ECh+var_44] edx +
mov edx [esp+0ECh+arg_8] +
mov [esp+0ECh+var_40] edx +
mov ebp edx +
jmp loc_45226E  +
mov eax [esp+0ECh+arg_4] +
mov ecx edi +
mov edx esi +
mov [esp+0ECh+var_D0] ebx +
mov [esp+0ECh+var_D4] ebx +
mov [esp+0ECh+var_D8] ebp +
mov [esp+0ECh+var_DC] eax +
lea eax [esp+0ECh+var_38] +
mov [esp+0ECh+var_E0] eax +
lea eax [esp+0ECh+var_58] +
mov [esp+0ECh+var_E4] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] 0 +
mov [esp+0ECh+var_E8] 0 +
call sub_450580  +
test eax eax +
jz loc_452323  +
mov eax [esp+0ECh+var_4C] +
test eax eax +
jnz loc_452216  +
mov eax [esp+0ECh+var_BC] +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+0ECh+var_CC] eax +
jz loc_45232F  +
mov eax [esp+0ECh+arg_8] +
mov edi [esp+0ECh+var_B4] +
mov [esp+0ECh+var_E0] eax +
mov eax [esp+0ECh+arg_4] +
test edi edi +
mov [esp+0ECh+var_E4] eax +
jz loc_4523A0  +
mov edi [esp+0ECh+var_C0] +
mov eax [esp+0ECh+var_B4] +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44D580  +
test eax eax +
mov edi eax +
jz loc_45232F  +
mov eax [esp+0ECh+var_B4] +
mov dword ptr [eax+0Ch] 0 +
mov eax [esp+0ECh+var_CC] +
mov [esp+0ECh+var_E0] offset loc_44F2D0 +
mov [esp+0ECh+var_E4] 18h +
mov [esp+0ECh+var_EC] edi +
mov [esp+0ECh+var_E8] eax +
call sub_44E950  +
mov eax [esp+0ECh+arg_8] +
lea edx [esp+0ECh+var_38] +
mov ecx [esp+0ECh+arg_4] +
mov [esp+0ECh+var_EC] eax +
mov eax [esp+0ECh+var_C0] +
call sub_44ED40  +
mov eax 1 +
jmp loc_451533  +
mov ebp [esp+0ECh+var_CC] +
mov esi [esp+0ECh+var_AC] +
mov ebx [esp+0ECh+var_A8] +
mov [esp+0ECh+var_CC] 0 +
xor edi edi +
jmp loc_4522F8  +
mov eax [esp+0ECh+var_C8] +
mov edi [ebp+10h] +
add eax 34h +
mov [esp+0ECh+var_BC] eax +
mov [esp+0ECh+var_B4] eax +
jmp loc_4521A0  +
mov eax [esp+0ECh+var_10] +
mov eax [eax] +
mov [esp+0ECh+var_94] eax +
jmp loc_451C1B  +
lea eax [ebx-1] +
cmp eax [esp+0ECh+var_1C] +
jnb loc_4523C7  +
mov eax [esp+0ECh+var_18] +
mov edx [eax+ebx*4-4] +
jmp loc_451FC2  +
cmp ecx edi +
jnb loc_451DE6  +
mov edx [esp+0ECh+var_10] +
add eax 3FFFFFFFh +
mov eax [edx+eax*4] +
mov [esp+0ECh+var_AC] eax +
jmp loc_451C60  +
lea eax [esp+0ECh+var_78] +
mov [esp+0ECh+var_E8] eax +
mov eax [esp+0ECh+var_C0] +
mov [esp+0ECh+var_EC] eax +
call sub_44D520  +
test eax eax +
jz loc_45232F  +
mov eax [esp+0ECh+var_BC] +
mov edi [eax] +
jmp loc_4522D8  +
mov edx offset aInvalidDirec_0 +
mov ebp [esp+0ECh+var_A0] +
lea eax [esp+0ECh+var_78] +
call sub_44F380  +
jmp loc_4514C1  +
xor eax eax +
jmp loc_451982  +
xor eax eax +
jmp loc_451831  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_452460  +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_4524A4  +
lea ebp [esp+3Ch+var_10] +
jmp loc_452432  +
mov edx [esp+3Ch+var_10] +
test edx edx +
jnz loc_4524D1  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4524A4  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_450F30  +
test eax eax +
jz loc_452420  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
lea ebp [esp+3Ch+var_10] +
lea ebx [eax+10h] +
jmp loc_45249E  +
mov eax [esp+3Ch+arg_C] +
mov edx ebx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] esi +
call sub_450F30  +
test eax eax +
jnz loc_452458  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jnz loc_4524D1  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_452470  +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] eax +
call esi  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+0FCh+arg_8] +
mov edx [esp+0FCh+arg_C] +
mov [esp+0FCh+var_9C] 0 +
mov [esp+0FCh+var_98] 0 +
mov [esp+0FCh+var_88] eax +
mov [esp+0FCh+var_84] eax +
mov eax [esp+0FCh+arg_C] +
test edx edx +
mov [esp+0FCh+var_94] 0 +
mov [esp+0FCh+var_90] 0 +
mov [esp+0FCh+var_8C] offset a_debug_info +
mov [esp+0FCh+var_80] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_70] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [esp+0FCh+var_7C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_78] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_74] eax +
jz loc_452E59  +
mov eax [esp+0FCh+arg_8] +
mov [esp+0FCh+var_B0] eax +
nop   +
lea esi [esi+0] +
lea eax [esp+0FCh+var_8C] +
call sub_44F430  +
mov [esp+0FCh+var_D0] 0 +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_4529D2  +
mov eax [esp+0FCh+var_8C] +
mov [esp+0FCh+var_60] edx +
mov [esp+0FCh+var_6C] eax +
mov eax [esp+0FCh+var_88] +
mov [esp+0FCh+var_68] eax +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_64] eax +
mov eax [esp+0FCh+var_7C] +
mov [esp+0FCh+var_5C] eax +
mov eax [esp+0FCh+var_78] +
mov [esp+0FCh+var_58] eax +
mov eax [esp+0FCh+var_74] +
mov [esp+0FCh+var_54] eax +
mov eax [esp+0FCh+var_70] +
mov [esp+0FCh+var_50] eax +
lea eax [esp+0FCh+var_8C] +
call sub_44F3E0  +
test eax eax +
jz loc_452682  +
lea eax [esp+0FCh+var_6C] +
call sub_44F5B0  +
movzx eax ax +
mov [esp+0FCh+var_C8] eax +
sub eax 2 +
cmp eax 2 +
ja loc_452E43  +
mov edx [esp+0FCh+var_D0] +
lea eax [esp+0FCh+var_6C] +
call sub_44F590  +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
cmp edx 0 +
jbe loc_4526F0  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 0 +
mov [esp+0FCh+var_F8] offset aAbbrevOffsetOu +
mov [esp+0FCh+var_FC] eax +
call [esp+0FCh+arg_34]  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44EDA0  +
mov ebx [esp+0FCh+var_90] +
mov esi [esp+0FCh+var_9C] +
test ebx ebx +
jz loc_4526E3  +
mov edi [esp+0FCh+arg_34] +
xor ebx ebx +
mov ebp [esp+0FCh+arg_38] +
nop   +
mov eax [esi+10h] +
mov ecx edi +
add ebx 1 +
mov [esp+0FCh+var_FC] ebp +
add esi 18h +
lea edx [eax+28h] +
mov eax [esp+0FCh+arg_0] +
call sub_44EDA0  +
cmp ebx [esp+0FCh+var_90] +
jb loc_4526C0  +
add esp 0FCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax [esp+0FCh+arg_1C] +
jnb loc_452661  +
mov edi [esp+0FCh+arg_18] +
mov edx eax +
xor ebx ebx +
mov ecx [esp+0FCh+arg_1C] +
mov [esp+0FCh+var_4C] offset a_debug_abbrev +
mov [esp+0FCh+var_30] 0 +
add edx edi +
mov [esp+0FCh+var_48] edi +
mov edi [esp+0FCh+arg_30] +
sub ecx eax +
mov eax ecx +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_40] ecx +
mov ecx [esp+0FCh+arg_38] +
mov [esp+0FCh+var_3C] edi +
mov edi [esp+0FCh+arg_34] +
mov [esp+0FCh+var_44] edx +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_34] ecx +
mov [esp+0FCh+var_38] edi +
mov edi [esp+0FCh+arg_18] +
mov [esp+0FCh+var_2C] offset a_debug_abbrev +
mov [esp+0FCh+var_18] eax +
lea eax [esp+0FCh+var_2C] +
mov [esp+0FCh+var_24] edx +
mov [esp+0FCh+var_28] edi +
mov [esp+0FCh+var_14] ecx +
mov [esp+0FCh+var_10] 0 +
call sub_44F630  +
or edx eax +
jz loc_452831  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_452682  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_44F630  +
lea eax [esp+0FCh+var_2C] +
call sub_44F600  +
jmp loc_452805  +
call sub_44F630  +
lea eax [esp+0FCh+var_2C] +
call sub_44F630  +
or edx eax +
lea eax [esp+0FCh+var_2C] +
jnz loc_452800  +
call sub_44F630  +
lea eax [esp+0FCh+var_2C] +
call sub_44F630  +
or edx eax +
jnz loc_4527D3  +
mov eax [esp+0FCh+var_10] +
test eax eax +
jnz loc_452682  +
test ebx ebx +
jnz loc_4529EA  +
mov edx 1 +
mov ebx [esp+0FCh+var_64] +
lea eax [esp+0FCh+var_6C] +
call sub_44F3E0  +
test eax eax +
mov esi eax +
jz loc_452869  +
movzx esi byte ptr [ebx] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 40h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D420  +
test eax eax +
mov ebx eax +
jz loc_452682  +
mov eax [esp+0FCh+var_64] +
lea ecx [esp+0FCh+var_6C] +
mov edx [esp+0FCh+var_60] +
mov [ebx+14h] esi +
lea esi [esp+0FCh+var_9C] +
mov dword ptr [ebx+1Ch] 0 +
mov [ebx] eax +
sub eax [esp+0FCh+var_B0] +
mov [ebx+4] edx +
mov edx [esp+0FCh+var_A0] +
mov dword ptr [ebx+20h] 0 +
mov [ebx+8] eax +
mov eax [esp+0FCh+var_C8] +
mov dword ptr [ebx+24h] 0 +
mov [ebx+2Ch] edx +
mov dword ptr [ebx+18h] 0 +
mov [ebx+0Ch] eax +
mov eax [esp+0FCh+var_D0] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0 +
mov [ebx+10h] eax +
mov eax [esp+0FCh+var_A4] +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+0FCh+var_A4] 0 +
mov [esp+0FCh+var_A0] 0 +
mov [ebx+28h] eax +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_DC] esi +
mov [esp+0FCh+var_E0] ebx +
mov [esp+0FCh+var_E4] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_E8] eax +
mov eax [esp+0FCh+arg_30] +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_24] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_20] +
mov edx [esp+0FCh+arg_4] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_2C] +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+arg_28] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44FC40  +
test eax eax +
jz loc_452C40  +
mov eax [esp+0FCh+var_50] +
test eax eax +
jnz loc_452C40  +
mov ebp [esp+0FCh+var_80] +
test ebp ebp +
jz loc_452CBF  +
mov eax [esp+0FCh+var_70] +
test eax eax +
jnz loc_452682  +
mov eax [esp+0FCh+var_84] +
mov [esp+0FCh+var_B0] eax +
jmp loc_452590  +
lea eax [esp+0FCh+var_8C] +
call sub_44F4A0  +
mov [esp+0FCh+var_D0] 1 +
mov edx eax +
jmp loc_4525AC  +
lea eax [ebx+ebx*2] +
mov [esp+0FCh+var_A4] ebx +
lea ebx ds:0[eax*8] +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D420  +
test eax eax +
mov [esp+0FCh+var_A0] eax +
jz loc_452682  +
mov [esp+0FCh+var_F4] ebx +
mov [esp+0FCh+var_F8] 0 +
mov [esp+0FCh+var_FC] eax +
call memset  +
mov eax [esp+0FCh+var_30] +
test eax eax +
jnz loc_452BA9  +
mov [esp+0FCh+var_C4] 0 +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
mov ecx edx +
or ecx eax +
mov [esp+0FCh+var_C0] eax +
mov [esp+0FCh+var_BC] edx +
jz loc_452C96  +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
mov edx 1 +
mov ebx [esp+0FCh+var_44] +
mov [esp+0FCh+var_B8] eax +
lea eax [esp+0FCh+var_4C] +
call sub_44F3E0  +
test eax eax +
mov [esp+0FCh+var_CC] eax +
jz loc_452AAD  +
movzx eax byte ptr [ebx] +
mov [esp+0FCh+var_CC] eax +
mov eax [esp+0FCh+var_4C] +
xor ebx ebx +
mov [esp+0FCh+var_2C] eax +
mov eax [esp+0FCh+var_48] +
mov [esp+0FCh+var_28] eax +
mov eax [esp+0FCh+var_44] +
mov [esp+0FCh+var_24] eax +
mov eax [esp+0FCh+var_40] +
mov [esp+0FCh+var_20] eax +
mov eax [esp+0FCh+var_3C] +
mov [esp+0FCh+var_1C] eax +
mov eax [esp+0FCh+var_38] +
mov [esp+0FCh+var_18] eax +
mov eax [esp+0FCh+var_34] +
mov [esp+0FCh+var_14] eax +
mov eax [esp+0FCh+var_30] +
mov [esp+0FCh+var_10] eax +
jmp loc_452B30  +
lea eax [esp+0FCh+var_2C] +
add ebx 1 +
call sub_44F630  +
lea eax [esp+0FCh+var_2C] +
call sub_44F630  +
or edx eax +
jnz loc_452B21  +
test ebx ebx +
jnz loc_452BD0  +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
mov [esp+0FCh+var_B4] 0 +
mov eax [esp+0FCh+var_C4] +
mov ecx [esp+0FCh+var_C0] +
add eax [esp+0FCh+var_A0] +
mov edi [esp+0FCh+var_CC] +
add [esp+0FCh+var_C4] 18h +
mov [eax] ecx +
mov ecx [esp+0FCh+var_BC] +
mov [eax+0Ch] edi +
mov [eax+10h] ebx +
mov [eax+4] ecx +
mov ecx [esp+0FCh+var_B8] +
mov [eax+8] ecx +
mov ecx [esp+0FCh+var_B4] +
mov [eax+14h] ecx +
mov eax [esp+0FCh+var_30] +
test eax eax +
jz loc_452A58  +
mov eax [esp+0FCh+arg_38] +
lea edx [esp+0FCh+var_A4] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44EDA0  +
jmp loc_452682  +
mov eax [esp+0FCh+arg_38] +
shl ebx 3 +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D420  +
test eax eax +
mov esi eax +
mov [esp+0FCh+var_B4] eax +
jz loc_452BA9  +
xor ebx ebx +
jmp loc_452C1B  +
mov [esi] edi +
add ebx 1 +
add esi 8 +
mov [esi-4] eax +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
mov edi eax +
mov ebp edx +
lea eax [esp+0FCh+var_4C] +
call sub_44F630  +
or ebp edi +
jnz loc_452C10  +
jmp loc_452B68  +
mov eax [esp+0FCh+arg_38] +
lea edx [ebx+28h] +
mov ecx [esp+0FCh+arg_34] +
mov [esp+0FCh+var_FC] eax +
mov eax [esp+0FCh+arg_0] +
call sub_44EDA0  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F4] 40h +
mov [esp+0FCh+var_F8] ebx +
mov [esp+0FCh+var_EC] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D470  +
jmp loc_452682  +
mov eax [esp+0FCh+var_A4] +
mov [esp+0FCh+var_F0] offset loc_44EB80 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_F8] eax +
mov eax [esp+0FCh+var_A0] +
mov [esp+0FCh+var_FC] eax +
call sub_44E950  +
jmp loc_452848  +
mov edi [esp+0FCh+var_70] +
test edi edi +
jnz loc_452682  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] esi +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D520  +
test eax eax +
jz loc_4526E3  +
mov ebx [esp+0FCh+var_9C] +
mov esi [esp+0FCh+var_90] +
mov [esp+0FCh+var_F0] offset loc_44EE30 +
mov [esp+0FCh+var_F4] 18h +
mov [esp+0FCh+var_FC] ebx +
mov [esp+0FCh+var_F8] esi +
call sub_44E950  +
mov eax [esp+0FCh+arg_38] +
mov [esp+0FCh+var_F8] 44h +
mov [esp+0FCh+var_F0] eax +
mov eax [esp+0FCh+arg_34] +
mov [esp+0FCh+var_F4] eax +
mov eax [esp+0FCh+arg_0] +
mov [esp+0FCh+var_FC] eax +
call sub_44D420  +
test eax eax +
mov edx eax +
jz loc_4526E3  +
mov dword ptr [eax] 0 +
mov eax [esp+0FCh+arg_4] +
mov dword ptr [edx+34h] 0 +
mov dword ptr [edx+38h] 0 +
mov dword ptr [edx+3Ch] 0 +
mov [edx+4] eax +
mov eax [esp+0FCh+arg_8] +
mov dword ptr [edx+40h] 0 +
mov [edx+8] ebx +
mov [edx+0Ch] esi +
mov [edx+10h] eax +
mov eax [esp+0FCh+arg_C] +
mov [edx+14h] eax +
mov eax [esp+0FCh+arg_10] +
mov [edx+18h] eax +
mov eax [esp+0FCh+arg_14] +
mov [edx+1Ch] eax +
mov eax [esp+0FCh+arg_20] +
mov [edx+20h] eax +
mov eax [esp+0FCh+arg_24] +
mov [edx+24h] eax +
mov eax [esp+0FCh+arg_28] +
mov [edx+28h] eax +
mov eax [esp+0FCh+arg_2C] +
mov [edx+2Ch] eax +
mov eax [esp+0FCh+arg_30] +
mov [edx+30h] eax +
mov eax [esp+0FCh+arg_0] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_452E2D  +
mov eax [esp+0FCh+arg_0] +
lea ebx [eax+10h] +
mov ecx ebx +
jmp loc_452E04  +
mov ecx eax +
mov eax [ecx] +
test eax eax +
jnz loc_452E02  +
cmpxchg [ecx] edx +
jnz loc_452DFE  +
mov eax [esp+0FCh+arg_3C] +
mov dword ptr [eax] offset sub_4523F0 +
add esp 0FCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+10h] +
mov eax [eax+10h] +
test eax eax +
jz loc_452E3F  +
mov ecx eax +
mov eax [eax] +
test eax eax +
jnz loc_452E37  +
mov [ecx] edx +
jmp loc_452E10  +
mov edx offset aUnrecognized_6 +
lea eax [esp+0FCh+var_6C] +
call sub_44F380  +
jmp loc_452682  +
lea esi [esp+0FCh+var_9C] +
jmp loc_452CCE  +
***
mov eax [esp+arg_0] +
mov off_4836E8 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 14h +
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_452ED0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 14h +
mov edx [esp+18h+arg_0] +
lea ebx [esp+18h+arg_4] +
test edx edx +
jz loc_453007  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_452FF3  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_45304D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_453027  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_4DA374 +
mov ebx [esp+1Ch+arg_0] +
lea edi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_4530A6  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_453080  +
mov byte ptr [esi] 0 +
mov eax ds:dword_4DA374 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_453135  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_4530D7  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_452ED0  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_453100  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_452ED0  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_453126  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_4531D9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_453167  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_452ED0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_453190  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_4531CD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_452ED0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_4531B6  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_45320B  +
test eax eax +
jz loc_453234  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_4D0620[eax] +
movzx edx ds:byte_4D0620[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_453201  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_453281  +
jmp loc_4532B2  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_4532B0  +
mov ecx ebp +
test cl cl +
jnz loc_4532B0  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_4532B7  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_4D0620[eax] +
movzx edx ds:byte_4D0620[edx] +
cmp eax 2Fh +
jnz loc_453258  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_45326E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_4532F9  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_4D0620[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_4532D7  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_4531F0  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_45C680  +
mov ebx eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_45C680  +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
mov esi eax +
call sub_4531F0  +
mov [esp+10h+var_10] ebx +
mov edi eax +
call free  +
mov [esp+10h+var_10] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1 +
mov esi [edx] +
mov ebx [esp+2+arg_1] +
cmp esi ecx +
jz loc_453440  +
lea ecx [esi+1] +
mov [edx] ecx +
mov ecx [esp+2+arg_5] +
shl ecx 0Fh +
sar ecx 1Fh +
and ecx 0Bh +
test ebx ebx +
jz loc_453450  +
movzx eax al +
movsx edx byte ptr [ebx+eax] +
movzx eax byte ptr [esi] +
movzx edi byte ptr [ebx+eax] +
cmp edi edx +
jb loc_45345B  +
mov ebp 1 +
mov esi ebx +
jmp loc_4533FC  +
movzx ecx byte ptr [esi+edx] +
add edx 1 +
movzx eax cl +
and ecx 7 +
sar eax 3 +
add eax [esp+2+arg_9] +
movzx ebx byte ptr [eax] +
mov [esp+2+var_2] bl +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
movzx ebx [esp+2+var_2] +
or ebx ecx +
cmp edi edx +
mov [eax] bl +
jb loc_453430  +
test esi esi +
jnz loc_4533D0  +
mov eax edx +
mov ebx ebp +
sar eax 3 +
add eax [esp+2+arg_9] +
movzx ecx byte ptr [eax] +
mov [esp+2+var_2] cl +
mov ecx edx +
add edx 1 +
and ecx 7 +
shl ebx cl +
mov ecx ebx +
movzx ebx [esp+2+var_2] +
or ebx ecx +
cmp edi edx +
mov [eax] bl +
jnb loc_4533FC  +
lea esi [esi+0] +
xor eax eax +
add esp 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1 +
mov eax 0Bh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx edx al +
movzx edi byte ptr [esi] +
jmp loc_4533BD  +
mov eax ecx +
jmp loc_453432  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov ebx [eax] +
lea eax [ebx+1] +
mov [esp+0Ch] eax +
cmp byte ptr [ebx] 1Dh +
ja loc_4534D0  +
mov edi ecx +
movzx ecx byte ptr [ebx] +
jmp ds:off_4D0960[ecx*4]  +
movzx ebx byte ptr [ebx+1] +
mov ecx edi +
lea eax [esp+0Ch] +
call sub_4535B0  +
lea edx [edi+ebx*4] +
movzx ecx byte ptr [edx] +
mov ebx ecx +
and ebx 3 +
cmp bl 3 +
jz loc_453527  +
test al al +
jz loc_4534D0  +
mov eax [esp+0Ch] +
lea esi [esi+0] +
mov [esi] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx edx byte ptr [ebx+1] +
test byte ptr [edi+edx*4] 3 +
jnz loc_4534B0  +
lea esi [esi+0] +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea ecx [ebx+3] +
movsx edx byte ptr [ebx+4] +
mov [esp+0Ch] ecx +
movzx edi byte ptr [ebx+3] +
shl edx 8 +
add edx edi +
jnz loc_4534D0  +
mov [esp+0Ch] eax +
movsx eax byte ptr [ebx+2] +
movzx edx byte ptr [ebx+1] +
shl eax 8 +
add eax edx +
add eax ecx +
jmp loc_4534B0  +
movsx edx byte ptr [ebx+2] +
add ebx 3 +
movzx ecx byte ptr [ebx-2] +
shl edx 8 +
add edx ecx +
js loc_4534D0  +
lea eax [ebx+edx] +
jmp loc_4534B0  +
mov ebx eax +
and ecx 0FFFFFFFCh +
and ebx 3 +
or ecx ebx +
mov [edx] cl +
jmp loc_4534A5  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
mov [esp+18h+var_C] eax +
nop   +
cmp esi eax +
jbe loc_453579  +
cmp byte ptr [eax] 0Fh +
jnz loc_453585  +
lea edx [eax+1] +
mov [esp+18h+var_C] edx +
movsx ebx byte ptr [eax+2] +
movzx edx byte ptr [eax+1] +
shl ebx 8 +
add ebx edx +
lea eax [eax+ebx+3] +
cmp esi eax +
mov [esp+18h+var_C] eax +
ja loc_453554  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx edi +
mov edx esi +
lea eax [esp+18h+var_C] +
call sub_453460  +
test al al +
jz loc_4535A0  +
mov eax [esp+18h+var_C] +
jmp loc_453550  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov eax [eax] +
lea ecx [eax+2] +
mov [esp+28h+var_1C] ecx +
cmp edi ecx +
jbe loc_4536B0  +
movzx eax byte ptr [ecx] +
cmp al 7 +
jz loc_453680  +
cmp al 0Fh +
jnz loc_453693  +
lea eax [ecx+1] +
add ecx 3 +
mov [esp+28h+var_1C] eax +
movsx edx byte ptr [ecx-1] +
movzx ebx byte ptr [ecx-2] +
mov eax ecx +
mov [esp+28h+var_1C] ecx +
shl edx 8 +
add ebx edx +
jns loc_453646  +
jmp loc_4535C6  +
mov ecx esi +
call sub_453540  +
test al al +
jz loc_4536B0  +
add ebx [esp+28h+var_1C] +
mov [esp+28h+var_1C] ebx +
mov edx ebx +
cmp byte ptr [ebx] 0Fh +
jnz loc_4536C0  +
lea eax [ebx+1] +
mov [esp+28h+var_1C] eax +
movsx eax byte ptr [ebx+2] +
movzx ebx byte ptr [ebx+1] +
shl eax 8 +
add ebx eax +
lea eax [edx+3] +
mov [esp+28h+var_1C] eax +
cmp byte ptr [eax+ebx-3] 0Eh +
jnz loc_4536C4  +
lea edx [eax+ebx-3] +
cmp byte ptr [edx] 0Eh +
jz loc_453602  +
movsx edx byte ptr [eax-1] +
mov ecx esi +
movzx ebx byte ptr [eax-2] +
shl edx 8 +
add ebx edx +
lea edx [eax+ebx] +
call sub_453540  +
test al al +
jz loc_4536B0  +
mov ecx [esp+28h+var_1C] +
add ecx ebx +
mov [esp+28h+var_1C] ecx +
jmp loc_4535C6  +
add ecx 2 +
mov eax 1 +
mov [ebp+0] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx edi +
lea eax [esp+28h+var_1C] +
call sub_453460  +
test al al +
jz loc_4536B0  +
mov ecx [esp+28h+var_1C] +
jmp loc_4535C6  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
jmp loc_45364F  +
mov [esp+28h+var_1C] edx +
mov eax edx +
jmp loc_45364F  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov ebx [eax+10h] +
mov eax [eax] +
mov [ebp+var_20] eax +
add eax [esi+8] +
mov [ebp+var_24] eax +
mov eax 30h +
call sub_470CF0  +
mov edx 100h +
sub esp eax +
mov edi ebx +
lea eax [esp+48h+var_2E+1] +
mov [ebp+var_1C] eax +
and [ebp+var_1C] 0FFFFFFF0h +
test bl 1 +
jnz loc_4537B0  +
test edi 2 +
jnz loc_4537C6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_453733  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_45373B  +
mov byte ptr [edi] 0 +
movzx eax byte ptr [esi+1Ch] +
xor edi edi +
mov ecx 1 +
mov [ebp+var_28] 5 +
or eax 8 +
and eax 0FFFFFFFEh +
mov [esi+1Ch] al +
***
mov edx [ebp-24h] +
mov eax [ebp-20h] +
cmp eax edx +
jz loc_453780  +
movzx eax byte ptr [eax] +
cmp al 1 +
jz loc_453780  +
mov edx [ebp-20h] +
add edx 1 +
cmp al 1Dh +
mov [ebp-2Ch] edx +
ja sub_453A2D  +
jmp ds:off_4D09D8[eax*4]  +
***
movzx eax byte ptr [esi+1Ch] +
mov edx eax +
and eax 0FFFFFFFEh +
and edx 1 +
or edx ecx +
or eax edx +
test edi edi +
mov [esi+1Ch] al +
jz loc_4537E1  +
mov eax [ebp-1Ch] +
sub edi 1 +
mov ecx 1 +
mov eax [eax+edi*4] +
mov [ebp-20h] eax +
jmp loc_453756  +
***
lea edi [ebx+1] +
mov dx 0FFh +
test edi 2 +
mov byte ptr [ebx] 0 +
jz loc_45371C  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_45371C  +
***
test byte ptr [esi+1Ch] 1 +
jz loc_4539BA  +
***
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add dword ptr [ebp-20h] 5 +
mov byte ptr [ebp-2Dh] 0 +
mov eax [ebp-2Ch] +
mov edx [ebp-20h] +
mov edx [ebp-20h] +
movsx eax byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
add eax edx +
mov edx [ebp-20h] +
test eax eax +
lea edx [edx+eax+3] +
mov [ebp-20h] edx +
jg loc_453756  +
movzx eax byte ptr [edx] +
cmp al 15h +
jz loc_4538A2  +
cmp al 0Fh +
jnz loc_453756  +
mov edx [ebp-20h] +
movsx eax byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
add eax edx +
mov edx [ebp-20h] +
test edi edi +
lea eax [edx+eax+3] +
mov [ebp-20h] eax +
jz loc_453756  +
mov eax [ebp-1Ch] +
mov edx [ebp-20h] +
cmp [eax+edi*4-4] edx +
setz al  +
movzx eax al +
sub edi eax +
jmp loc_453756  +
***
or byte ptr [esi+1Ch] 1 +
add dword ptr [ebp-20h] 3 +
mov eax [ebp-20h] +
mov eax [ebp-20h] +
movzx edx byte ptr [ebx+0Ah] +
mov eax [ebp-20h] +
xor eax eax +
call abort  +
or byte ptr [esi+1Ch] 1 +
jmp loc_453838  +
***
mov eax dword_4836EC +
mov [ebp-38h] ecx +
mov ecx [ebp-28h] +
lea edx [eax+eax*8] +
lea eax [eax+edx*2] +
cmp ecx eax +
ja loc_453AA0  +
lea eax ds:1Eh[ecx*8] +
xor edx edx +
mov ecx 10h +
div  ecx +
shl eax 4 +
call sub_470CF0  +
mov ecx [ebp-28h] +
sub esp eax +
lea edx ds:0[ecx*4] +
mov ecx [ebp-1Ch] +
lea eax [esp+1Bh] +
and eax 0FFFFFFF0h +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] eax +
call memcpy  +
test eax eax +
mov [ebp-1Ch] eax +
jz loc_453AA0  +
shl dword ptr [ebp-28h] 1 +
mov ecx [ebp-38h] +
jmp loc_45382C  +
***
mov eax 0FFFFFFFEh +
jmp loc_4537E3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov esi [eax] +
mov [ebp+var_88] eax +
mov edi [ebp+arg_10] +
mov [ebp+var_58] edx +
mov [ebp+var_54] ecx +
mov [ebp+var_38] esi +
add esi [eax+8] +
mov [ebp+var_44] esi +
mov esi [eax+14h] +
mov eax [eax+18h] +
mov [ebp+var_8C] esi +
mov [ebp+var_A8] eax +
mov esi eax +
add eax 1 +
mov [ebp+var_48] eax +
mov eax 30h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_4C] eax +
and [ebp+var_4C] 0FFFFFFF0h +
test esi esi +
jnz loc_454F35  +
mov [ebp+var_A0] 0 +
xor ebx ebx +
xor esi esi +
mov [ebp+var_9C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_94] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov eax [ebp+arg_8] +
test eax eax +
js loc_455518  +
mov eax [ebp+var_54] +
add eax [ebp+arg_4] +
cmp [ebp+arg_8] eax +
jg loc_455518  +
cmp [ebp+var_48] 1 +
mov eax 1 +
mov edx 1 +
jbe loc_453BBD  +
mov [ebp+arg_10] edi +
mov edi [ebp+var_34] +
lea esi [esi+0] +
mov ecx [ebp+var_60] +
add edx 1 +
mov dword ptr [ecx+eax*4] offset unk_4D9400 +
mov ecx [ebp+var_5C] +
mov dword ptr [ecx+eax*4] offset unk_4D9400 +
lea ecx [edi+eax*4] +
mov dword ptr [ebx+eax*4] offset unk_4D9400 +
mov dword ptr [esi+eax*4] offset unk_4D9400 +
movzx eax byte ptr [ecx] +
or eax 3 +
and eax 0FFFFFFE3h +
cmp edx [ebp+var_48] +
mov [ecx] al +
mov eax edx +
jnz loc_453B80  +
mov edi [ebp+arg_10] +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_453CAA  +
mov eax [ebp+var_58] +
test eax eax +
jz loc_453CAA  +
mov eax [ebp+var_54] +
mov [ebp+var_68] 0 +
mov [ebp+var_90] 0 +
mov [ebp+var_54] 0 +
mov [ebp+arg_4] eax +
mov eax [ebp+var_58] +
mov [ebp+var_58] 0 +
mov [ebp+arg_0] eax +
xor eax eax +
mov edx [ebp+arg_0] +
add edx [ebp+arg_4] +
cmp [ebp+var_54] edi +
mov [ebp+var_84] edx +
jl loc_454F1C  +
add edi [ebp+var_58] +
mov [ebp+var_70] edi +
mov edi [ebp+arg_0] +
mov [ebp+var_6C] edi +
test al al +
jz loc_454F02  +
mov eax [ebp+var_58] +
add eax [ebp+arg_8] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_70] +
mov [ebp+var_64] eax +
mov eax [ebp+arg_0] +
xor edi edi +
mov [ebp+var_7C] 5 +
mov [ebp+var_50] 0 +
mov [ebp+var_74] 0 +
sub eax 1 +
mov [ebp+var_80] 0 +
mov [ebp+var_40] 100h +
mov [ebp+var_30] 101h +
mov [ebp+var_A4] 0 +
mov [ebp+var_98] eax +
lea esi [esi+0] +
***
mov eax [ebp-44h] +
cmp [ebp-38h] eax +
jz loc_453DA2  +
mov eax [ebp-38h] +
lea edx [eax+1] +
movzx eax byte ptr [eax] +
mov [ebp-2Ch] edx +
cmp al 1Dh +
ja loc_455026  +
movzx edx al +
jmp ds:off_4D0A50[edx*4]  +
***
mov ecx [ebp-38h] +
mov ecx [ebp-2Ch] +
movsx eax byte ptr [ecx+1] +
movzx edx byte ptr [ecx] +
shl eax 8 +
add eax edx +
lea eax [ecx+eax+2] +
mov [ebp-38h] eax +
mov eax [ebp-44h] +
cmp [ebp-38h] eax +
jnz loc_453C8C  +
mov eax [ebp-6Ch] +
cmp [ebp-3Ch] eax +
jz sub_453F3C  +
mov eax [ebp-74h] +
cmp [ebp-58h] eax +
setbe dl  +
ja loc_454EDE  +
mov eax [ebp-54h] +
test eax eax +
jz loc_454EDE  +
mov eax [ebp-68h] +
cmp [ebp-74h] eax +
mov eax [ebp-70h] +
setnbe cl  +
cmp [ebp-64h] eax +
setz al  +
cmp cl al +
jz loc_454EF4  +
mov eax [ebp-74h] +
cmp [ebp-3Ch] eax +
setnbe al  +
test edi edi +
jz loc_455792  +
test al al +
jnz loc_453E02  +
mov eax [ebp-80h] +
test eax eax +
jnz loc_4548F2  +
cmp dword ptr [ebp-48h] 1 +
jbe loc_453E43  +
mov ecx [ebp-94h] +
mov eax 1 +
mov edx 1 +
mov [ebp-38h] edi +
mov edi [ebp-78h] +
mov [ebp-2Ch] ecx +
mov [ebp-30h] edi +
mov edi [esi+eax*4] +
add edx 1 +
mov ecx [ebp-2Ch] +
cmp edx [ebp-48h] +
mov [ecx+eax*4] edi +
mov ecx [ebp-30h] +
mov edi [ebx+eax*4] +
mov [ecx+eax*4] edi +
mov eax edx +
jnz loc_453E24  +
mov edi [ebp-38h] +
mov eax [ebp-3Ch] +
mov dword ptr [ebp-80h] 1 +
mov [ebp-74h] eax +
jmp loc_4548F2  +
***
mov eax [ebp-2Ch] +
mov [ebp-38h] eax +
jmp loc_453C80  +
***
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_454087  +
mov eax [ebp-88h] +
movzx eax byte ptr [eax+1Ch] +
test al 10h +
jnz loc_454087  +
and eax 6 +
jz loc_4550F9  +
cmp al 2 +
mov eax [ebp+14h] +
mov eax [eax] +
jz loc_45557E  +
test eax eax +
jz loc_454087  +
mov eax [ebp+14h] +
mov edi [ebp+10h] +
mov ecx [ebp-70h] +
mov eax [eax+4] +
mov [eax] edi +
mov [ebp-2Ch] eax +
mov eax [ebp+14h] +
mov eax [eax+8] +
mov edi eax +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov edx eax +
sub eax [ebp-58h] +
sub edx [ebp+8] +
add edx [ebp-54h] +
cmp [ebp-64h] ecx +
cmovnz eax edx +
mov [edi] eax +
mov eax [ebp+14h] +
mov edi [ebp-48h] +
mov eax [eax] +
mov edx edi +
cmp edi eax +
cmova edx eax +
cmp edx 1 +
jbe loc_454058  +
mov [ebp-34h] esi +
mov ecx 1 +
mov edx 1 +
mov [ebp-38h] ebx +
mov esi edi +
mov eax [ebp-34h] +
lea ebx ds:0[ecx*4] +
mov eax [eax+ecx*4] +
cmp eax offset unk_4D9400 +
jz loc_4551C1  +
mov edi [ebp-38h] +
mov ecx [edi+ecx*4] +
cmp ecx offset unk_4D9400 +
jz loc_4551C1  +
mov edi [ebp-2Ch] +
add edi ebx +
cmp dword ptr [ebp-54h] 0 +
jz loc_4551B4  +
cmp [ebp-58h] eax +
ja loc_4551DA  +
cmp eax [ebp-68h] +
ja loc_4551DA  +
sub eax [ebp-58h] +
add ebx [ebp-30h] +
mov [edi] eax +
cmp [ebp-58h] ecx +
ja loc_454035  +
mov eax ecx +
sub eax [ebp-58h] +
cmp ecx [ebp-68h] +
jbe loc_45403D  +
mov eax [ebp-54h] +
sub ecx [ebp+8] +
add eax ecx +
mov [ebx] eax +
mov eax [ebp+14h] +
add edx 1 +
mov ecx edx +
mov eax [eax] +
cmp esi eax +
mov ebx eax +
cmovbe ebx esi +
cmp edx ebx +
jb loc_453FD3  +
mov edx [ebp-48h] +
cmp edx eax +
jnb loc_454087  +
mov ecx [ebp+14h] +
mov eax edx +
mov ebx [ebp-2Ch] +
mov esi [ebp-30h] +
lea esi [esi+0] +
mov dword ptr [esi+eax*4] 0FFFFFFFFh +
add edx 1 +
mov dword ptr [ebx+eax*4] 0FFFFFFFFh +
mov eax edx +
cmp edx [ecx] +
jb loc_454070  +
mov eax [ebp-3Ch] +
mov edx [ebp+8] +
mov esi [ebp-70h] +
sub eax [ebp+10h] +
sub edx [ebp-90h] +
cmp [ebp-64h] esi +
cmovz edx [ebp-58h] +
sub eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp-4Ch] +
mov eax [ebp-40h] +
mov eax [ebp-40h] +
add eax 1 +
sub eax [ebp-30h] +
lea ecx [eax+eax*2+4] +
mov eax [ebp-7Ch] +
sub eax edi +
cmp eax ecx +
jnb loc_454312  +
mov eax dword_4836EC +
lea edx [eax+eax*8] +
lea eax [eax+edx*2] +
mov edx [ebp-7Ch] +
mov [ebp-38h] eax +
cmp edx eax +
ja loc_455346  +
mov [ebp-0B0h] ecx +
mov ecx [ebp-4Ch] +
mov [ebp-0ACh] ebx +
mov ebx edx +
mov [ebp-7Ch] esi +
lea eax ds:1Eh[ebx*8] +
mov esi 10h +
xor edx edx +
div  esi +
shl eax 4 +
call sub_470CF0  +
sub esp eax +
lea eax [esp+arg_17] +
and eax 0FFFFFFF0h +
lea edx ds:0[ebx*4] +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
mov [esp+0] eax +
call memcpy  +
test eax eax +
mov ecx eax +
jz loc_455346  +
add ebx ebx +
mov eax ebx +
sub eax edi +
cmp eax [ebp-0B0h] +
jb loc_4554C5  +
mov esi [ebp-7Ch] +
mov [ebp-7Ch] ebx +
mov ebx [ebp-0ACh] +
mov [ebp-4Ch] ecx +
mov edx [ebp-40h] +
mov eax [ebp-30h] +
cmp eax edx +
ja loc_45434B  +
mov edx [ebp-4Ch] +
mov ecx [ebp-34h] +
lea edx [edx+edi*4] +
mov [ebp-38h] ecx +
mov ecx [esi+eax*4] +
add edi 3 +
add edx 0Ch +
mov [edx-0Ch] ecx +
mov ecx [ebx+eax*4] +
mov [edx-8] ecx +
mov ecx [ebp-38h] +
mov ecx [ecx+eax*4] +
add eax 1 +
mov [edx-4] ecx +
cmp [ebp-40h] eax +
jnb loc_454328  +
mov edx [ebp-4Ch] +
lea eax ds:0[edi*4] +
mov ecx [ebp-30h] +
mov [edx+edi*4] ecx +
mov ecx [ebp-40h] +
add edi 4 +
mov dword ptr [edx+eax+8] 0 +
mov dword ptr [edx+eax+0Ch] 0 +
mov [edx+eax+4] ecx +
jmp sub_453D80  +
***
mov ecx [ebp-38h] +
movsx eax byte ptr [ecx+2] +
movzx edx byte ptr [ecx+1] +
shl eax 8 +
add eax edx +
lea edx [ecx+3] +
cmp [ebp-44h] edx +
mov [ebp-0ACh] eax +
mov [ebp-38h] edx +
mov [ebp-1Ch] edx +
jbe loc_4543EB  +
movzx eax byte ptr [ecx+3] +
test al al +
jnz loc_4557C2  +
mov eax ecx +
add eax 4 +
mov [ebp-2Ch] esi +
mov ecx eax +
mov esi [ebp-44h] +
jmp loc_4543DF  +
***
cmp al 5 +
mov eax [ebp-64h] +
setz cl  +
cmp [ebp-3Ch] eax +
mov [ebp-0B0h] cl +
mov [ebp-0ACh] cl +
jnz loc_4558BB  +
cmp [ebp-6Ch] eax +
jz loc_455573  +
mov eax [ebp+8] +
mov edx [ebp-6Ch] +
mov [ebp-64h] eax +
cmp eax edx +
jz loc_454811  +
mov [ebp-64h] edx +
mov eax [ebp+8] +
jmp loc_4558BE  +
***
mov eax [ebp-64h] +
mov eax [ebp-54h] +
mov eax [ebp-38h] +
lea edx [eax+2] +
mov [ebp-0B8h] edx +
movzx edx byte ptr [eax+1] +
mov ecx [esi+edx*4] +
lea eax ds:0[edx*4] +
cmp ecx offset unk_4D9400 +
jz loc_45498E  +
add eax ebx +
mov [ebp-0C0h] eax +
mov eax [eax] +
cmp eax offset unk_4D9400 +
mov [ebp-38h] eax +
jz loc_45498E  +
mov edx [ebp-54h] +
test edx edx +
jz loc_45463D  +
cmp [ebp-58h] ecx +
mov edx 1 +
ja loc_45461A  +
cmp ecx [ebp-68h] +
setnbe dl  +
mov eax [ebp-38h] +
cmp [ebp-58h] eax +
mov byte ptr [ebp-2Ch] 0 +
ja loc_454630  +
mov eax [ebp-68h] +
cmp [ebp-38h] eax +
setbe byte ptr [ebp-2Ch]  +
mov eax [ebp-38h] +
cmp [ebp-2Ch] dl +
cmovz eax [ebp-70h] +
mov [ebp-38h] eax +
mov eax [ebp-34h] +
mov edx [ebp-30h] +
mov [ebp-0B0h] ebx +
mov ebx [ebp-8Ch] +
mov [ebp-0B4h] edi +
mov edi [ebp-3Ch] +
mov [ebp-0ACh] esi +
lea eax [eax+edx*4] +
mov [ebp-0BCh] eax +
cmp ecx [ebp-38h] +
jz loc_455522  +
cmp edi [ebp-64h] +
jnz loc_4553AB  +
cmp [ebp-6Ch] edi +
jz loc_455561  +
mov eax [ebp-6Ch] +
cmp [ebp+8] eax +
jnz loc_4553A5  +
mov eax [ebp+8] +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov [ebp-64h] eax +
jmp loc_454811  +
***
mov eax [ebp-38h] +
mov eax [ebp-2Ch] +
mov edx [ebp-84h] +
mov ecx [ebp-54h] +
mov eax [ebp-64h] +
mov eax [ebp-64h] +
mov ecx [ebp-38h] +
mov edx [ebp-38h] +
mov eax [ebp-38h] +
mov ecx [ebp-38h] +
mov eax [ebp-54h] +
mov edx [ebp-84h] +
mov eax [ebp-3Ch] +
cmp eax edx +
jz loc_455556  +
mov edx [ebp-68h] +
cmp eax edx +
jz loc_4555F1  +
mov eax [ebp-98h] +
cmp [ebp-3Ch] eax +
jz loc_4556F3  +
mov eax [ebp-3Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
mov eax [ebp-3Ch] +
jnz loc_454811  +
mov eax [ebp-54h] +
test eax eax +
mov eax [ebp-58h] +
cmovz eax [ebp+8] +
cmp eax [ebp-3Ch] +
jz sub_453ED1  +
mov eax [ebp+0Ch] +
test eax eax +
jz sub_453ED1  +
mov eax [ebp-3Ch] +
sub eax 1 +
cmp [ebp-68h] eax +
jz loc_455BA5  +
mov eax [ebp-3Ch] +
cmp eax [ebp+8] +
jz loc_455B83  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax-1] +
jmp loc_454B9F  +
***
mov eax [ebp-54h] +
mov eax [ebp-84h] +
mov edx [ebp-38h] +
mov eax [ebp-54h] +
test eax eax +
mov eax [ebp-58h] +
cmovz eax [ebp+8] +
cmp eax [ebp-3Ch] +
jz loc_45498E  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_45498E  +
mov eax [ebp-84h] +
cmp [ebp-3Ch] eax +
jz loc_45498E  +
mov eax [ebp-3Ch] +
sub eax 1 +
cmp [ebp-68h] eax +
jz loc_455A5C  +
mov eax [ebp-3Ch] +
cmp eax [ebp+8] +
jz loc_455A50  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax-1] +
cmp ds:byte_4D9420[eax] 1 +
mov eax [ebp-68h] +
setz dl  +
cmp [ebp-3Ch] eax +
jz loc_4557E3  +
mov eax [ebp-98h] +
cmp [ebp-3Ch] eax +
jz loc_4557D7  +
mov eax [ebp-3Ch] +
movzx eax byte ptr [eax] +
cmp ds:byte_4D9420[eax] 1 +
mov eax [ebp-3Ch] +
setz cl  +
cmp dl cl +
jnz loc_454811  +
jmp sub_453ED1  +
***
lea edx [eax+3] +
mov eax edx +
jmp loc_453CF4  +
***
cmp al 16h +
jnz loc_454EAC  +
mov ecx [ebp-38h] +
mov eax ecx +
add eax 1 +
mov [ebp-1Ch] eax +
movsx eax byte ptr [ecx+2] +
movzx edx byte ptr [ecx+1] +
shl eax 8 +
add eax edx +
lea eax [ecx+eax+3] +
mov [ebp-1Ch] eax +
cmp byte ptr [eax] 15h +
jz loc_4548EA  +
mov eax [ebp-68h] +
cmp [ebp-3Ch] eax +
ja loc_454760  +
mov eax [ebp-3Ch] +
cmp [ebp-58h] eax +
ja loc_454760  +
mov eax [ebp-70h] +
mov dword ptr [ebp-50h] 0 +
mov [ebp-64h] eax +
jmp loc_453C80  +
mov edi [ebp-50h] +
jmp loc_45489B  +
***
mov eax [ebp-70h] +
mov ecx 1 +
cmp [ebp-64h] eax +
setz al  +
cmp cl al +
jnz loc_453DE2  +
mov eax [ebp-70h] +
cmp [ebp-64h] eax +
setnz al  +
jmp loc_453DEB  +
***
mov eax [ebp+arg_8] +
sub eax [ebp+var_90] +
add eax [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_6C] +
mov [ebp+var_64] eax +
jmp loc_453C38  +
mov edx [ebp+arg_0] +
sub edi [ebp+var_90] +
add edx edi +
mov edi [ebp+var_68] +
mov [ebp+var_6C] edx +
mov [ebp+var_70] edi +
jmp loc_453C21  +
mov eax [ebp+var_48] +
lea edx ds:0[eax*4] +
lea eax [edx+1Eh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea esi [esp+0D8h+var_BD] +
lea eax [edx+1Eh] +
and esi 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea ebx [esp+0D8h+var_BD] +
lea eax [edx+1Eh] +
and ebx 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_5C] eax +
lea eax [edx+1Eh] +
and [ebp+var_5C] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_60] eax +
lea eax [edx+1Eh] +
and [ebp+var_60] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_94] eax +
lea eax [edx+1Eh] +
and [ebp+var_94] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_78] eax +
lea eax [edx+1Eh] +
and [ebp+var_78] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_34] eax +
lea eax [edx+1Eh] +
and [ebp+var_34] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_9C] eax +
lea eax [edx+1Eh] +
and [ebp+var_9C] 0FFFFFFF0h +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+0D8h+var_BD] +
mov [ebp+var_A0] eax +
and [ebp+var_A0] 0FFFFFFF0h +
jmp loc_453B4D  +
***
call abort  +
mov ecx [ebp-38h] +
mov eax esi +
jmp loc_454A80  +
***
add dword ptr [ebp-38h] 5 +
jmp loc_453C80  +
***
cmp eax offset unk_4D9400 +
cmovz eax [ebp-3Ch] +
jmp loc_4546CD  +
***
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
jmp loc_453F0D  +
***
mov eax [ebp-88h] +
test byte ptr [eax+1Ch] 20h +
jz sub_453ED1  +
jmp loc_45498E  +
***
movzx eax byte ptr [eax+2] +
mov [ebp-0ACh] al +
movzx edx byte ptr [ecx+3] +
cmp dl 2 +
jz loc_4540AA  +
lea eax [edx-4] +
cmp al 1 +
ja loc_453D6A  +
cmp dl 5 +
movzx edx byte ptr [ebp-0ACh] +
setz al  +
mov [ebp-0B4h] al +
movzx eax al +
mov [ebp-0B0h] eax +
movzx eax byte ptr [ecx+4] +
shl eax 3 +
cmp edx eax +
jnb loc_4550E6  +
movzx edx byte ptr [ebp-0ACh] +
mov eax edx +
shr al 3 +
movzx eax al +
movzx eax byte ptr [ecx+eax+5] +
mov ecx edx +
and ecx 7 +
bt eax ecx +
jnb loc_4550E6  +
movzx eax byte ptr [ebp-0B4h] +
xor eax 1 +
movzx eax al +
mov [ebp-0B0h] eax +
mov eax [ebp-0B0h] +
test eax eax +
jnz loc_453D6A  +
jmp loc_4540BA  +
***
mov eax [ebp-0A8h] +
mov edx 1Eh +
mov edi [ebp+14h] +
add eax 2 +
cmp eax 1Eh +
cmovb eax edx +
mov [edi] eax +
lea edi ds:0[eax*4] +
mov [esp] edi +
call malloc  +
mov edx eax +
mov eax [ebp+14h] +
mov [ebp-2Ch] edx +
mov [eax+4] edx +
mov [esp] edi +
call malloc  +
mov edx [ebp-2Ch] +
mov edi [ebp+14h] +
test edx edx +
mov [edi+8] eax +
jz loc_455346  +
test eax eax +
jz loc_455346  +
mov edi [ebp-88h] +
movzx eax byte ptr [edi+1Ch] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [edi+1Ch] al +
jmp loc_453F77  +
***
mov edx [ebp-64h] +
cmp [ebp-3Ch] edx +
jz loc_45519A  +
lea edx [ecx+1] +
movzx ecx byte ptr [ecx] +
add dword ptr [ebp-3Ch] 1 +
cmp [eax] cl +
mov [ebp-38h] edx +
jnz loc_45498E  +
sub dword ptr [ebp-2Ch] 1 +
jz loc_454ABA  +
mov ecx [ebp-38h] +
mov edx [ebp-64h] +
cmp [ebp-3Ch] edx +
mov eax [ebp-3Ch] +
jnz loc_45516D  +
mov edx [ebp-3Ch] +
cmp [ebp-6Ch] edx +
jz loc_455BB0  +
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
mov eax [ebp+8] +
mov [ebp-3Ch] eax +
jmp loc_45518F  +
***
sub eax [ebp+8] +
add ebx [ebp-30h] +
mov [edi] eax +
jmp loc_454035  +
***
mov eax [ebp-30h] +
mov dword ptr [eax+ebx] 0FFFFFFFFh +
mov eax [ebp-2Ch] +
mov dword ptr [eax+ebx] 0FFFFFFFFh +
jmp loc_45403F  +
***
sub eax [ebp+8] +
add eax [ebp-54h] +
add ebx [ebp-30h] +
mov [edi] eax +
jmp loc_454026  +
***
cmp dl 16h +
jnz loc_455490  +
mov eax [ebp-38h] +
movsx edx byte ptr [eax+5] +
movzx ecx byte ptr [eax+4] +
shl edx 8 +
add ecx edx +
mov edx eax +
add edx 8 +
add edx ecx +
test ecx ecx +
mov [ebp-1Ch] edx +
jns loc_455490  +
cmp byte ptr [edx] 0Fh +
jnz loc_455490  +
cmp byte ptr [edx+3] 6 +
jnz loc_455490  +
mov eax [ebp-38h] +
movzx ecx byte ptr [edx+4] +
cmp cl [eax+1] +
jnz loc_455490  +
mov eax [ebp-34h] +
lea eax [eax+ecx*4] +
movzx ecx byte ptr [eax] +
test cl 10h +
jz loc_455289  +
mov edx [ebp-38h] +
and ecx 0FFFFFFEFh +
mov [eax] cl +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx+2] +
add edx eax +
cmp eax edx +
jnb loc_455286  +
mov edx [ebp-5Ch] +
mov ecx [edx+eax*4] +
mov edx [ebp-60h] +
mov [esi+eax*4] ecx +
mov edx [edx+eax*4] +
cmp ecx edx +
ja loc_455272  +
mov [ebx+eax*4] edx +
mov edx [ebp-38h] +
add eax 1 +
movzx ecx byte ptr [edx+2] +
movzx edx byte ptr [edx+1] +
add edx ecx +
cmp edx eax +
ja loc_45525C  +
mov edx [ebp-1Ch] +
lea eax [edx+1] +
mov [ebp-1Ch] eax +
movsx eax byte ptr [edx+2] +
movzx ecx byte ptr [edx+1] +
shl eax 8 +
add eax ecx +
mov [ebp-38h] eax +
mov eax [ebp-40h] +
lea ecx [edx+3] +
mov [ebp-1Ch] ecx +
add eax 1 +
sub eax [ebp-30h] +
lea eax [eax+eax*2+4] +
mov edx eax +
mov [ebp-2Ch] eax +
mov eax [ebp-7Ch] +
sub eax edi +
cmp eax edx +
jnb loc_455AFB  +
mov eax dword_4836EC +
lea edx [eax+eax*8] +
lea edx [eax+edx*2] +
mov eax [ebp-7Ch] +
mov [ebp-50h] edx +
cmp eax edx +
ja loc_455346  +
mov [ebp-0ACh] ecx +
mov ecx eax +
mov [ebp-7Ch] ebx +
lea eax ds:1Eh[ecx*8] +
mov ebx 10h +
xor edx edx +
div  ebx +
shl eax 4 +
call sub_470CF0  +
mov ebx [ebp-4Ch] +
sub esp eax +
lea eax [esp+arg_17] +
and eax 0FFFFFFF0h +
lea edx ds:0[ecx*4] +
mov [esp+arg_4] edx +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
mov [ebp-0B0h] ecx +
call memcpy  +
test eax eax +
mov [ebp-4Ch] eax +
jz loc_455346  +
mov ecx [ebp-0B0h] +
add ecx ecx +
mov eax ecx +
sub eax edi +
cmp eax [ebp-2Ch] +
jnb loc_455AEF  +
cmp ecx [ebp-50h] +
jbe loc_4552E4  +
***
lea esp [ebp-0Ch] +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp-38h] +
add eax 3 +
cmp [ebp-44h] eax +
mov [ebp-2Ch] eax +
jbe loc_455490  +
mov ecx [ebp-38h] +
mov edx ecx +
add edx 4 +
mov [ebp-1Ch] edx +
movzx edx byte ptr [ecx+3] +
cmp dl 13h +
ja loc_4551EA  +
cmp dl 11h +
jnb loc_45538B  +
cmp dl 0Dh +
jnz loc_455490  +
mov eax [ebp-38h] +
movsx edx byte ptr [eax+5] +
movzx ecx byte ptr [eax+4] +
shl edx 8 +
add ecx edx +
mov edx eax +
add edx 6 +
jmp loc_455208  +
***
mov edi [ebp+8] +
mov [ebp-64h] eax +
mov edx [ebp-64h] +
mov eax [ebp-38h] +
sub edx edi +
sub eax ecx +
cmp edx eax +
cmovle eax edx +
test ebx ebx +
mov esi eax +
mov [ebp-3Ch] eax +
jz loc_455763  +
test eax eax +
jz loc_45540F  +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [edi] +
movzx eax byte ptr [ebx+eax] +
cmp [ebx+edx] al +
jnz loc_4555E7  +
mov eax esi +
sub eax 1 +
mov [ebp-2Ch] eax +
xor eax eax +
jmp loc_45540A  +
movzx edx byte ptr [ecx+eax+1] +
movzx esi byte ptr [edi+eax+1] +
add eax 1 +
movzx edx byte ptr [ebx+edx] +
cmp [ebx+esi] dl +
jnz loc_4555E7  +
cmp eax [ebp-2Ch] +
jnz loc_4553F0  +
xor eax eax +
test al al +
jnz loc_455B6A  +
mov eax [ebp-3Ch] +
add edi eax +
add ecx eax +
mov eax [ebp-50h] +
test eax eax +
jnz loc_454667  +
mov esi [ebp-40h] +
mov edx [ebp-30h] +
cmp edx esi +
ja loc_455448  +
mov eax [ebp-0BCh] +
add edx 1 +
or byte ptr [eax] 18h +
add eax 4 +
cmp esi edx +
jnb loc_45543B  +
mov dword ptr [ebp-50h] 1 +
jmp loc_454667  +
***
mov esi [ebp-2Ch] +
cmp al 6 +
jnz loc_4543EB  +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx+2] +
add edx eax +
mov [ebp-40h] edx +
mov edx [ebp-30h] +
cmp edx 101h +
cmovnz eax edx +
mov [ebp-30h] eax +
jmp loc_4543EB  +
***
cmp ebx [ebp-2Ch] +
jbe loc_454432  +
jmp loc_455346  +
***
mov eax [ebp-2Ch] +
mov dword ptr [ebp-50h] 0 +
mov [ebp-38h] eax +
jmp loc_453C80  +
***
cmp [ebp-2Ch] ebx +
jnb loc_454D0D  +
jmp loc_455346  +
***
cmp ebx [ebp-38h] +
jbe loc_454191  +
lea esi [esi+0] +
jmp loc_455346  +
***
cmp ebx [ebp-38h] +
jbe loc_4542AF  +
nop   +
jmp loc_455346  +
***
mov esi [ebp-40h] +
mov [ebp-2Ch] cl +
mov [ebp-40h] edx +
jmp loc_45473B  +
mov eax [ebp-38h] +
mov dword ptr [ebp-40h] 100h +
mov dword ptr [ebp-30h] 101h +
movzx eax byte ptr [eax+1] +
mov [ebp-2Ch] al +
jmp loc_45473B  +
***
mov edx [ebp-6Ch] +
cmp edx esi +
jz loc_455B8F  +
mov esi [ebp+8] +
mov [ebp-64h] edx +
mov eax esi +
jmp loc_454A80  +
***
mov eax 0FFFFFFFFh +
jmp loc_4540A2  +
***
cmp [ebp-6Ch] ecx +
jz loc_455740  +
mov eax [ebp-0C0h] +
mov eax [eax] +
cmp ecx eax +
mov [ebp-38h] eax +
jz loc_455740  +
mov ecx [ebp+8] +
jmp loc_454667  +
***
mov eax [ebp-88h] +
test byte ptr [eax+1Ch] 40h +
jz sub_453ED1  +
mov eax [ebp-84h] +
jmp loc_454811  +
***
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov eax [ebp-6Ch] +
mov [ebp-64h] eax +
jmp loc_454811  +
***
mov edx [ebp-0A8h] +
add edx 2 +
cmp eax edx +
jnb loc_453F6F  +
mov eax [ebp+14h] +
mov [eax] edx +
mov eax [eax+4] +
shl edx 2 +
mov [esp+4] edx +
mov [esp] eax +
call realloc  +
mov edi [ebp+14h] +
mov [edi+4] eax +
mov eax [edi+8] +
mov edi [edi] +
mov [esp] eax +
lea edx ds:0[edi*4] +
mov [esp+4] edx +
mov [ebp-2Ch] edi +
call realloc  +
mov edi [ebp+14h] +
mov edx [edi+4] +
mov [edi+8] eax +
test edx edx +
jz loc_455346  +
test eax eax +
jz loc_455346  +
mov eax [edi] +
jmp loc_453F6F  +
***
mov eax 1 +
jmp loc_455411  +
***
mov eax [ebp+8] +
movzx edx byte ptr [eax] +
jmp loc_454BE8  +
***
movzx edx byte ptr [ecx+3] +
cmp dl 2 +
jz loc_4556FF  +
cmp dl 5 +
jz loc_455A67  +
cmp dl 4 +
jnz loc_453D6A  +
movzx edx byte ptr [eax+1] +
test edx edx +
mov [ebp-0B0h] edx +
jz loc_4540BA  +
movzx edx byte ptr [ecx+4] +
test edx edx +
mov [ebp-0ACh] edx +
jz loc_455AE0  +
movzx edx byte ptr [eax+2] +
test [ecx+5] dl +
jnz loc_455AE0  +
mov edx [ebp-0B0h] +
mov [ebp-0C4h] ebx +
sub edx 1 +
mov [ebp-0BCh] edx +
mov edx [ebp-0ACh] +
sub edx 1 +
mov [ebp-0C0h] edx +
xor edx edx +
cmp edx [ebp-0BCh] +
lea ebx [edx+1] +
mov [ebp-0B8h] ebx +
mov [ebp-0B4h] ebx +
jz loc_455A1D  +
cmp edx [ebp-0C0h] +
jz loc_455A1D  +
movzx ebx byte ptr [eax+edx+3] +
test [ecx+edx+6] bl +
jnz loc_455A1D  +
mov edx [ebp-0B8h] +
jmp loc_455672  +
***
mov eax [ebp+8] +
cmp byte ptr [eax] 0Ah +
setz al  +
jmp loc_454C8F  +
***
mov ecx [ebp-34h] +
lea eax [ebp-1Ch] +
mov edx [ebp-44h] +
call sub_4535B0  +
mov ecx [ebp-2Ch] +
movzx edx byte ptr [ecx] +
and eax 3 +
and edx 0FFFFFFFCh +
or edx eax +
mov eax [ebp-38h] +
mov [ecx] dl +
mov edx [ebp-34h] +
movzx eax byte ptr [eax+1] +
shl eax 2 +
add edx eax +
mov [ebp-2Ch] edx +
jmp loc_454793  +
***
mov eax [ebp-68h] +
movzx edx byte ptr [eax-1] +
jmp loc_454BE8  +
***
movzx edx byte ptr [ecx+5] +
movzx ecx byte ptr [eax+1] +
mov [ebp-0ACh] dl +
shl ecx 3 +
cmp ecx edx +
jle loc_4540BA  +
movzx ecx byte ptr [ebp-0ACh] +
mov edx ecx +
shr dl 3 +
movzx edx dl +
movzx edx byte ptr [eax+edx+2] +
mov eax ecx +
and eax 7 +
bt edx eax +
jb loc_453D6A  +
jmp loc_4540BA  +
***
mov eax [ebp-0B8h] +
mov [ebp-3Ch] edi +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
mov [ebp-38h] eax +
jmp loc_453C80  +
***
mov eax [ebp-3Ch] +
mov [esp+4] ecx +
mov [esp] edi +
mov [ebp-2Ch] ecx +
mov [esp+8] eax +
call memcmp  +
mov ecx [ebp-2Ch] +
test eax eax +
setnz al  +
jmp loc_455411  +
***
mov byte ptr [ebp-0ACh] 0Ah +
jmp loc_455076  +
***
test al al +
jnz sub_453F3C  +
mov edi [ebp-80h] +
test edi edi +
jz sub_453F3C  +
mov eax [ebp-74h] +
mov [ebp-3Ch] eax +
jmp loc_453EF3  +
***
mov edi [ebp-0ACh] +
mov dword ptr [ebp-50h] 0 +
jmp sub_453D80  +
***
mov edx [ebp-38h] +
jmp loc_455457  +
***
mov eax esi +
mov esi [ebp-0ACh] +
jmp loc_454811  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454E59  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454E59  +
***
mov eax [ebp-3Ch] +
cmp eax [ebp-68h] +
jz loc_455846  +
cmp eax [ebp-98h] +
jz loc_45584E  +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
jnz loc_454811  +
mov ecx [ebp-50h] +
test ecx ecx +
jnz loc_453ECB  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_453EC4  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_455833  +
jmp loc_453EC4  +
***
mov edx [ebp+8] +
movzx edx byte ptr [edx] +
jmp loc_455801  +
***
mov edx [ebp-68h] +
movzx edx byte ptr [edx-1] +
jmp loc_455801  +
***
mov eax [ebp-3Ch] +
cmp eax [ebp-68h] +
jz loc_4558B3  +
cmp eax [ebp-98h] +
jz loc_45598B  +
movzx edx byte ptr [eax] +
cmp ds:byte_4D9420[edx] 1 +
jz loc_454811  +
mov edx [ebp-50h] +
test edx edx +
jnz loc_453ECB  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_453EC4  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_4558A0  +
jmp loc_453EC4  +
***
mov edx [ebp+8] +
movzx edx byte ptr [edx] +
jmp loc_45586E  +
***
mov eax [ebp-3Ch] +
mov ecx [ebp-8Ch] +
test ecx ecx +
jz loc_455980  +
movzx edx byte ptr [eax] +
movzx edx byte ptr [ecx+edx] +
mov [ebp-3Ch] dl +
mov edx [ebp-38h] +
movzx ecx byte ptr [ebp-3Ch] +
movzx edx byte ptr [edx+1] +
mov [ebp-0B4h] edx +
shl edx 3 +
cmp ecx edx +
jnb loc_455926  +
movzx edx byte ptr [ebp-3Ch] +
mov ecx [ebp-2Ch] +
shr dl 3 +
movzx edx dl +
movzx edx byte ptr [ecx+edx+1] +
movzx ecx byte ptr [ebp-3Ch] +
and ecx 7 +
sar edx cl +
movzx ecx byte ptr [ebp-0B0h] +
xor ecx 1 +
and edx 1 +
movzx edx byte ptr [ebp-0B0h] +
cmovnz edx ecx +
mov [ebp-0ACh] dl +
cmp byte ptr [ebp-0ACh] 0 +
jz loc_454811  +
mov ecx [ebp-50h] +
test ecx ecx +
jnz loc_455965  +
mov edx [ebp-30h] +
mov ecx [ebp-34h] +
cmp edx [ebp-40h] +
lea ecx [ecx+edx*4] +
mov [ebp-38h] ecx +
mov ecx edx +
ja loc_45595E  +
mov edx [ebp-38h] +
or byte ptr [edx] 18h +
add ecx 1 +
add edx 4 +
cmp [ebp-40h] ecx +
jnb loc_455950  +
mov dword ptr [ebp-50h] 1 +
mov edx [ebp-2Ch] +
add eax 1 +
mov ecx [ebp-0B4h] +
mov [ebp-3Ch] eax +
lea edx [edx+ecx+1] +
mov [ebp-38h] edx +
jmp loc_453C80  +
***
movzx edx byte ptr [eax] +
mov [ebp-3Ch] dl +
jmp loc_4558D6  +
***
mov edx [ebp-68h] +
movzx edx byte ptr [edx-1] +
jmp loc_45586E  +
***
mov [ebp-40h] edx +
jmp loc_45473B  +
***
test byte ptr [ebp-38h] 80h +
jz loc_453E99  +
mov ecx [ebp-8Ch] +
test ecx ecx +
jz loc_4559D0  +
movzx edx byte ptr [eax] +
movzx ecx byte ptr [ecx+edx] +
jmp loc_453E91  +
movzx ecx byte ptr [eax] +
cmp cl 0Ah +
jnz loc_453E8B  +
jmp loc_454811  +
movzx ecx byte ptr [eax] +
jmp loc_453E91  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_45494B  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_45494B  +
***
mov eax [ebp-68h] +
movzx edx byte ptr [eax-1] +
jmp loc_454B61  +
mov eax [ebp+8] +
movzx edx byte ptr [eax] +
jmp loc_454B61  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454976  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454976  +
***
mov eax [ebp-0B8h] +
cmp [ebp-0B0h] eax +
mov ebx [ebp-0C4h] +
jz loc_4540BA  +
mov eax [ebp-0B4h] +
cmp [ebp-0ACh] eax +
jnz loc_453D6A  +
jmp loc_4540BA  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454E2E  +
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454E2E  +
***
movzx edx byte ptr [eax+1] +
test edx edx +
mov [ebp-0ACh] edx +
jz loc_4540BA  +
xor edx edx +
mov [ebp-0B0h] esi +
mov [ebp-0B4h] ebx +
mov [ebp-0B8h] eax +
jmp loc_455AAA  +
movzx ebx byte ptr [ecx+edx+5] +
mov eax esi +
movzx esi al +
not ebx  +
test esi ebx +
jnz loc_455AC3  +
add edx 1 +
cmp edx [ebp-0ACh] +
jge loc_455AC3  +
mov eax [ebp-0B8h] +
movzx esi byte ptr [eax+edx+2] +
mov ebx esi +
test bl bl +
jz loc_455A9F  +
movzx ebx byte ptr [ecx+4] +
cmp ebx edx +
jg loc_455A8F  +
cmp edx [ebp-0ACh] +
mov esi [ebp-0B0h] +
mov ebx [ebp-0B4h] +
jnz loc_453D6A  +
jmp loc_4540BA  +
mov dword ptr [ebp-0B4h] 0 +
jmp loc_455A35  +
***
mov ebx [ebp-7Ch] +
mov [ebp-7Ch] ecx +
mov ecx [ebp-0ACh] +
mov edx [ebp-40h] +
mov eax [ebp-30h] +
cmp eax edx +
ja loc_455BA0  +
mov edx [ebp-4Ch] +
lea edx [edx+edi*4] +
mov ecx [esi+eax*4] +
add edi 3 +
add edx 0Ch +
mov [edx-0Ch] ecx +
mov ecx [ebx+eax*4] +
mov [edx-8] ecx +
mov ecx [ebp-34h] +
mov ecx [ecx+eax*4] +
add eax 1 +
mov [edx-4] ecx +
cmp [ebp-40h] eax +
jnb loc_455B0F  +
mov eax [ebp-1Ch] +
mov [ebp-2Ch] eax +
mov edx [ebp-4Ch] +
lea eax ds:0[edi*4] +
mov ecx [ebp-30h] +
mov [edx+edi*4] ecx +
mov ecx [ebp-40h] +
add edi 4 +
mov [edx+eax+4] ecx +
mov ecx [ebp-2Ch] +
add ecx [ebp-38h] +
mov [edx+eax+8] ecx +
mov ecx [ebp-3Ch] +
mov [edx+eax+0Ch] ecx +
mov eax ecx +
jmp loc_454811  +
***
mov eax edi +
mov esi [ebp-0ACh] +
mov ebx [ebp-0B0h] +
mov edi [ebp-0B4h] +
jmp loc_454811  +
***
mov eax [ebp-68h] +
movzx eax byte ptr [eax-1] +
jmp loc_454B9F  +
***
mov edx [ebp-6Ch] +
mov esi [ebp-0ACh] +
mov [ebp-64h] edx +
jmp loc_454811  +
***
mov [ebp-2Ch] ecx +
jmp loc_455B38  +
***
mov eax [ebp+8] +
movzx eax byte ptr [eax] +
jmp loc_454B9F  +
***
mov edx [ebp-6Ch] +
mov [ebp-64h] edx +
jmp loc_454811  +
***
push edi  +
mov eax ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+10h] +
mov [esp+58h+var_2C] edx +
mov edx [ebp+14h] +
add eax [esp+58h+arg_4] +
mov ebx [esp+58h+arg_8] +
mov esi [esp+58h+arg_C] +
mov [esp+58h+var_24] edx +
mov edx eax +
mov [esp+58h+var_38] eax +
cmp ebx edx +
mov [esp+58h+var_34] ecx +
lea eax [ebx+esi] +
jg loc_455E26  +
mov edx ebx +
shr edx 1Fh +
test dl dl +
jnz loc_455E26  +
test eax eax +
js loc_455EB0  +
mov ecx [esp+58h+var_38] +
mov edx ecx +
sub edx ebx +
cmp ecx eax +
mov eax [ebp+8] +
cmovl esi edx +
test eax eax +
jnz loc_455DF4  +
test edi edi +
jz loc_455C35  +
test byte ptr [ebp+1Ch] 8 +
jz loc_455E90  +
test edi edi +
mov eax [esp+58h+arg_0] +
setnz [esp+58h+var_2D]  +
sub eax [esp+58h+var_34] +
mov [esp+58h+var_1C] eax +
cmp ebx [esp+58h+var_38] +
jge loc_455D10  +
cmp [esp+58h+var_2D] 0 +
jz loc_455D10  +
test byte ptr [ebp+1Ch] 1 +
jnz loc_455D10  +
test esi esi +
jle loc_455D85  +
cmp ebx [esp+58h+var_34] +
jge loc_455DD0  +
lea eax [ebx+esi] +
cmp [esp+58h+var_34] eax +
mov [esp+58h+var_28] 0 +
jg loc_455C96  +
mov eax ebx +
sub eax [esp+58h+var_34] +
add eax esi +
mov [esp+58h+var_28] eax +
mov eax [esp+58h+var_2C] +
mov edx [esp+58h+var_24] +
add eax ebx +
test edx edx +
jz loc_455E40  +
cmp esi [esp+58h+var_28] +
jle loc_455EC0  +
lea edx [eax+1] +
mov ecx [esp+58h+var_24] +
movzx eax byte ptr [eax] +
movzx eax byte ptr [ecx+eax] +
cmp byte ptr [edi+eax] 0 +
jnz loc_455EC0  +
mov [esp+58h+var_20] ebp +
mov eax esi +
mov ebp ecx +
mov [esp+58h+arg_8] ebx +
mov ebx [esp+58h+var_28] +
jmp loc_455CF2  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
movzx ecx byte ptr [ebp+ecx+0] +
cmp byte ptr [edi+ecx] 0 +
jnz loc_455CF9  +
sub eax 1 +
cmp eax ebx +
jnz loc_455CE0  +
mov ebp [esp+58h+var_20] +
sub esi eax +
mov ebx [esp+58h+arg_8] +
mov edx esi +
mov esi eax +
add ebx edx +
lea esi [esi+0] +
test esi esi +
js loc_455D2B  +
cmp ebx [esp+58h+var_38] +
jnz loc_455D2B  +
cmp [esp+58h+var_2D] 0 +
jz loc_455D2B  +
test byte ptr [ebp+1Ch] 1 +
jz loc_455E26  +
mov eax [esp+58h+arg_14] +
mov ecx [esp+58h+var_34] +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_50] ebx +
mov [esp+58h+var_48] eax +
mov eax [esp+58h+arg_10] +
mov [esp+58h+var_4C] eax +
mov eax [esp+58h+arg_4] +
mov [esp+58h+var_54] eax +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_453AB0  +
test eax eax +
jns loc_455E83  +
cmp eax 0FFFFFFFEh +
jz loc_455EA0  +
cmp esi 0 +
jz loc_455E26  +
jle loc_455DC0  +
sub esi 1 +
add ebx 1 +
nop   +
jmp loc_455C48  +
cmp ebx [esp+58h+var_34] +
jge loc_455D97  +
mov eax [esp+58h+var_34] +
test eax eax +
jnz loc_455E33  +
mov edx [esp+58h+arg_0] +
mov eax ebx +
sub eax [esp+58h+var_34] +
movzx eax byte ptr [edx+eax] +
mov edx [esp+58h+var_24] +
test edx edx +
jz loc_455DB1  +
movzx eax byte ptr [edx+eax] +
cmp byte ptr [edi+eax] 0 +
jnz loc_455D10  +
test esi esi +
jz loc_455E26  +
nop   +
add esi 1 +
sub ebx 1 +
jmp loc_455C48  +
mov eax [esp+58h+var_1C] +
mov ecx [esp+58h+var_24] +
mov [esp+58h+var_28] 0 +
add eax ebx +
test ecx ecx +
jnz loc_455CB2  +
mov edx [esp+58h+var_24] +
mov [esp+58h+var_28] edx +
jmp loc_455E46  +
test esi esi +
jle loc_455C27  +
mov eax [ebp+0] +
movzx eax byte ptr [eax] +
cmp al 0Bh +
jz loc_455E18  +
cmp al 9 +
jnz loc_455C27  +
cmp byte ptr [ebp+1Ch] 0 +
js loc_455C27  +
test ebx ebx +
jnz loc_455E26  +
mov esi 1 +
jmp loc_455C27  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_2C] +
movzx eax byte ptr [eax+ebx] +
jmp loc_455DA5  +
cmp esi [esp+58h+var_28] +
jle loc_455EC0  +
movzx ecx byte ptr [eax] +
lea edx [eax+1] +
mov eax esi +
cmp byte ptr [edi+ecx] 0 +
jnz loc_455EC0  +
mov [esp+58h+var_20] ebp +
mov ebp [esp+58h+var_28] +
jmp loc_455E6D  +
add edx 1 +
movzx ecx byte ptr [edx-1] +
cmp byte ptr [edi+ecx] 0 +
jnz loc_455E74  +
sub eax 1 +
cmp eax ebp +
jnz loc_455E60  +
sub esi eax +
mov ebp [esp+58h+var_20] +
mov edx esi +
mov esi eax +
jmp loc_455D07  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_4536D0  +
cmp eax 0FFFFFFFEh +
jnz loc_455C35  +
add esp 4Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ebx +
neg esi  +
jmp loc_455C27  +
xor edx edx +
jmp loc_455D07  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 12Ch +
mov ebp [esp+12Ch+arg_0] +
mov [esp+12Ch+var_104] eax +
mov [esp+12Ch+var_90] eax +
mov [esp+12Ch+var_118] ecx +
mov eax [ebp+14h] +
mov [esp+12Ch+var_12C] 280h +
mov [esp+12Ch+var_114] eax +
call malloc  +
test eax eax +
mov [esp+12Ch+var_FC] eax +
jz loc_455FE0  +
mov eax [esp+12Ch+var_118] +
and byte ptr [ebp+1Ch] 97h +
mov dword ptr [ebp+8] 0 +
mov [ebp+0Ch] eax +
mov eax ds:dword_4D93C0 +
mov dword ptr [ebp+18h] 0 +
test eax eax +
jz loc_456027  +
mov eax [ebp+4] +
test eax eax +
jz loc_455FF0  +
mov ecx [esp+12Ch+var_104] +
mov edi [ebp+0] +
mov esi [esp+12Ch+var_118] +
add ebx [esp+12Ch+var_104] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_F4] 0 +
mov eax esi +
and eax 2 +
mov [esp+12Ch+var_F8] eax +
mov eax esi +
mov [esp+12Ch+var_110] ebx +
and eax 200h +
xor ebx ebx +
mov [esp+12Ch+var_EC] 20h +
mov [esp+12Ch+var_F0] 0 +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
mov [esp+12Ch+var_E8] eax +
mov [esp+12Ch+var_10C] ebx +
cmp [esp+12Ch+var_110] ecx +
jz loc_45724C  +
mov eax [esp+12Ch+var_114] +
lea edx [ecx+1] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [ecx] +
test eax eax +
jz loc_455FBE  +
movzx ebx byte ptr [eax+ebx] +
lea eax [ebx-0Ah] +
cmp al 72h +
ja loc_4560C5  +
movzx eax al +
jmp ds:off_4D0B14[eax*4]  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
nop   +
mov eax 0Ch +
add esp 12Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
test eax eax +
jz loc_457048  +
mov [esp+12Ch+var_128] 20h +
mov [esp+12Ch+var_12C] eax +
call realloc  +
mov [ebp+0] eax +
test eax eax +
jz loc_455FD3  +
mov dword ptr [ebp+4] 20h +
mov ecx [esp+12Ch+var_90] +
mov edi eax +
jmp loc_455F49  +
mov esi ds:isalnum +
mov edx offset byte_4D9420 +
mov ecx 40h +
xor eax eax +
mov edi edx +
stos   +
xor edi edi +
nop   +
mov [esp+12Ch+var_12C] edi +
call esi  +
test eax eax +
jz loc_456050  +
mov ds:byte_4D9420[edi] 1 +
add edi 1 +
cmp edi 100h +
jnz loc_456040  +
mov ds:byte_4D947F 1 +
mov eax [ebp+4] +
mov ds:dword_4D93C0 1 +
test eax eax +
jz loc_455FF0  +
jmp loc_455F42  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_10C] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov eax edi +
add edi 1 +
sub eax ebx +
sub eax 3 +
mov byte ptr [edi-1] 14h +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_457886  +
test [esp+12Ch+var_118] 20000h +
jz loc_456A83  +
mov ebx 29h +
mov esi [esp+12Ch+var_100] +
test esi esi +
jz loc_4560DF  +
movzx eax byte ptr [esi] +
movzx edx al +
lea esi [esi+edx+1] +
cmp esi edi +
jz loc_45705C  +
mov byte ptr [esp+12Ch+var_108] bl +
mov edx edi +
mov ebx edi +
mov esi [ebp+0] +
mov edi [esp+12Ch+var_10C] +
nop   +
mov eax [ebp+4] +
mov ecx edx +
sub ecx esi +
add ecx 2 +
cmp ecx eax +
jbe loc_4562B9  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_456155  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] esi +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax esi +
mov edx [esp+12Ch+var_11C] +
jz loc_456151  +
mov ecx eax +
sub ecx esi +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea esi [edi+ecx] +
cmovnz edi esi +
add ecx ebx +
test ebx ebx +
cmovnz ebx ecx +
mov esi eax +
jmp loc_4560F0  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456115  +
add esp 12Ch +
mov eax 0Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test [esp+12Ch+var_118] 402h +
jnz loc_4560C5  +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_457324  +
mov eax [esp+12Ch+var_90] +
xor ecx ecx +
xor esi esi +
mov [esp+12Ch+var_108] edi +
lea esi [esi+0] +
cmp bl 2Bh +
setnz dl  +
or esi edx +
cmp bl 3Fh +
setnz dl  +
or ecx edx +
cmp [esp+12Ch+var_110] eax +
jz loc_457243  +
mov edi [esp+12Ch+var_114] +
lea edx [eax+1] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [eax] +
test edi edi +
jz loc_4561D3  +
movzx ebx byte ptr [edi+ebx] +
cmp bl 2Ah +
jz loc_45620E  +
mov edi [esp+12Ch+var_F8] +
test edi edi +
jz loc_456209  +
cmp bl 5Ch +
jnz loc_456217  +
cmp [esp+12Ch+var_110] edx +
jz loc_45784F  +
mov edi [esp+12Ch+var_114] +
lea edx [eax+2] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [eax+1] +
test edi edi +
jz loc_456209  +
movzx ebx byte ptr [edi+ebx] +
cmp bl 3Fh +
jnz loc_456212  +
mov eax edx +
jmp loc_4561A0  +
cmp bl 2Bh +
jz loc_45620E  +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_90] eax +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_45698F  +
test cl cl +
jz loc_4570BB  +
mov eax esi +
mov edx edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov esi [esp+12Ch+var_11C] +
mov byte ptr [esp+12Ch+var_108] al +
mov eax [ebp+4] +
mov ecx edx +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_4576CF  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457026  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
mov edx [esp+12Ch+var_11C] +
jz loc_4562B5  +
mov ecx eax +
sub ecx ebx +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ebx [edi+ecx] +
cmovnz edi ebx +
add ecx esi +
test esi esi +
cmovnz esi ecx +
mov ebx eax +
jmp loc_456249  +
mov [esp+12Ch+var_11C] ebx +
movzx ebx byte ptr [esp+12Ch+var_108] +
lea eax [edx+1] +
mov [esp+12Ch+var_10C] edi +
lea esi [edx+2] +
mov byte ptr [edx] 2 +
mov byte ptr [edx+1] 0 +
mov [esp+12Ch+var_100] eax +
mov edi [ebp+0] +
mov byte ptr [esp+12Ch+var_E4] bl +
mov ebx [esp+12Ch+var_100] +
mov [esp+12Ch+var_108] esi +
mov esi [esp+12Ch+var_11C] +
mov edx edi +
mov edi [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_456970  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_456367  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_456363  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ecx [edi+ecx] +
cmovnz edi ecx +
test esi esi +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovnz ebx edx +
mov edx eax +
jmp loc_4562F0  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45631B  +
test [esp+12Ch+var_118] 2000h +
jz loc_4560C5  +
mov eax [esp+12Ch+var_10C] +
test eax eax +
jz loc_4560A6  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_10C] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx eax +
mov ecx [esp+12Ch+var_10C] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_45607C  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457015  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_45641C  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_10C] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_4563A2  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov [esp+12Ch+var_108] edi +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_45718A  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_456FC0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_4564A8  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_456431  +
cmp [esp+12Ch+var_110] edx +
jz loc_457D25  +
mov ecx edi +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_10C] +
mov edx [ebp+4] +
mov eax ecx +
sub eax ebx +
add eax 22h +
cmp eax edx +
jbe loc_4571AC  +
cmp edx 10000h +
jz loc_456163  +
add edx edx +
cmp edx 10000h +
ja loc_456FD1  +
mov [ebp+4] edx +
mov [esp+12Ch+var_128] edx +
mov [esp+12Ch+var_12C] ebx +
mov [esp+12Ch+var_11C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
mov ecx [esp+12Ch+var_11C] +
jz loc_45652E  +
mov edx eax +
sub edx ebx +
add ecx edx +
add [esp+12Ch+var_120] edx +
test edi edi +
lea ebx [edi+edx] +
cmovnz edi ebx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov ebx eax +
jmp loc_4564C3  +
cmp [esp+12Ch+var_110] edx +
jz loc_45784F  +
lea edx [ecx+2] +
mov [esp+12Ch+var_90] edx +
movzx ebx byte ptr [ecx+1] +
lea eax [ebx-27h] +
cmp al 55h +
ja loc_4569B4  +
movzx eax al +
jmp ds:off_4D0CE0[eax*4]  +
mov eax [esp+12Ch+var_104] +
add eax 1 +
cmp edx eax +
jz loc_4565AB  +
test byte ptr [esp+12Ch+var_118] 8 +
jnz loc_4565AB  +
lea edx [ecx-1] +
xor eax eax +
cmp [esp+12Ch+var_104] edx +
jnb loc_456583  +
cmp byte ptr [ecx-2] 5Ch +
setz al  +
movzx edx byte ptr [ecx-1] +
cmp dl 28h +
jz loc_45783C  +
cmp dl 7Ch +
jnz loc_4560C5  +
test [esp+12Ch+var_118] 8000h +
jnz loc_4565AB  +
test al al +
jz loc_4560C5  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_108] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_457302  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_456FF3  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_45663A  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_4565C0  +
test [esp+12Ch+var_118] 8000h +
jz loc_4560C5  +
mov ebx 7Ch +
test [esp+12Ch+var_118] 400h +
jnz loc_4560C5  +
mov esi edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx esi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_4573ED  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457004  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_4566C4  +
mov ecx eax +
sub ecx ebx +
add esi ecx +
add [esp+12Ch+var_120] ecx +
add ecx edi +
test edi edi +
cmovnz edi ecx +
mov ebx eax +
jmp loc_456668  +
test [esp+12Ch+var_118] 800h +
jnz loc_456651  +
jmp loc_4560C5  +
cmp [esp+12Ch+var_110] edx +
jz loc_456725  +
mov esi [esp+12Ch+var_118] +
and esi 8 +
jnz loc_456725  +
movzx eax byte ptr [ecx+1] +
cmp al 5Ch +
setz dl  +
add ecx 2 +
cmp [esp+12Ch+var_110] ecx +
cmovbe ecx esi +
test [esp+12Ch+var_118] 2000h +
jz loc_45733F  +
cmp al 29h +
jz loc_456725  +
test [esp+12Ch+var_118] 8000h +
jz loc_457727  +
cmp al 7Ch +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_108] edi +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
lea esi [esi+0] +
mov ecx [esp+12Ch+var_108] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_4572E0  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_456FE2  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_4567B7  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_108] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_456740  +
test [esp+12Ch+var_118] 2000h +
jz loc_4560C5  +
mov eax [esp+12Ch+var_EC] +
add dword ptr [ebp+18h] 1 +
add [esp+12Ch+var_F0] 1 +
cmp [esp+12Ch+var_F4] eax +
jz loc_4579B8  +
mov eax [esp+12Ch+var_F4] +
mov ebx [esp+12Ch+var_FC] +
mov edx [esp+12Ch+var_120] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
mov ebx [ebp+0] +
sub edx ebx +
mov [eax] edx +
mov edx [esp+12Ch+var_10C] +
test edx edx +
jz loc_457967  +
sub edx ebx +
add edx 1 +
mov esi [esp+12Ch+var_F0] +
mov [eax+4] edx +
mov edx edi +
sub edx ebx +
mov [eax+0Ch] edx +
cmp esi 0FFh +
mov [eax+10h] esi +
ja loc_45715D  +
add edx 2 +
mov [eax+8] edx +
mov eax [ebp+4] +
mov edx edi +
sub edx ebx +
add edx 3 +
cmp edx eax +
jbe loc_45714A  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457037  +
mov [ebp+4] eax +
mov edx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_45687E  +
mov edx eax +
sub edx ebx +
add edi edx +
mov ebx eax +
jmp loc_45682D  +
mov eax [esp+12Ch+var_118] +
and eax 1200h +
cmp eax 1200h +
jnz loc_4560C5  +
mov [esp+12Ch+var_E4] edx +
mov eax [esp+12Ch+var_E4] +
cmp [esp+12Ch+var_110] eax +
jz loc_457365  +
mov edx [esp+12Ch+var_E4] +
mov esi 0FFFFFFFFh +
mov ecx [esp+12Ch+var_114] +
jmp loc_4568DC  +
cmp esi 7FFFh +
jg loc_4568D2  +
xor ebx ebx +
cmp esi 0FFFFFFFFh +
jz loc_4568CB  +
lea ebx [esi+esi*4] +
add ebx ebx +
movzx esi al +
lea esi [ebx+esi-30h] +
cmp [esp+12Ch+var_110] edx +
jz loc_4575CE  +
add edx 1 +
test ecx ecx +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
jz loc_4568F2  +
movzx eax byte ptr [ecx+eax] +
lea ebx [eax-30h] +
cmp bl 9 +
jbe loc_4568B7  +
cmp al 2Ch +
mov ebx 0FFFFFFFFh +
jnz loc_4575CE  +
cmp edx [esp+12Ch+var_110] +
jz loc_456950  +
mov ecx [esp+12Ch+var_114] +
add edx 1 +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
test ecx ecx +
jz loc_456927  +
movzx eax byte ptr [ecx+eax] +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_456950  +
cmp ebx 7FFFh +
jg loc_456907  +
xor ecx ecx +
cmp ebx 0FFFFFFFFh +
jz loc_456943  +
lea ecx [ebx+ebx*4] +
add ecx ecx +
cmp edx [esp+12Ch+var_110] +
movzx ebx al +
lea ebx [ecx+ebx-30h] +
jnz loc_45690D  +
cmp ebx 0FFFFFFFFh +
jz loc_457CA3  +
cmp ebx esi +
mov [esp+12Ch+var_108] esi +
setl cl  +
mov esi ebx +
jmp loc_4575D4  +
mov eax ebx +
mov [esp+12Ch+var_100] ebx +
movzx ebx byte ptr [esp+12Ch+var_E4] +
mov [esp+12Ch+var_11C] esi +
mov esi [esp+12Ch+var_108] +
mov [esp+12Ch+var_10C] edi +
mov [esi] bl +
lea edi [esi+1] +
add byte ptr [eax] 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
mov eax [esp+12Ch+var_118] +
and eax 1200h +
cmp eax 200h +
jz loc_456896  +
mov ebx 7Bh +
mov eax [esp+12Ch+var_114] +
test eax eax +
jz loc_4560C5  +
movzx ebx byte ptr [eax+ebx] +
jmp loc_4560C5  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457DFA  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4573BA  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456A57  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_4569DE  +
test [esp+12Ch+var_118] 2000h +
jnz loc_4569B4  +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_456383  +
test [esp+12Ch+var_118] 20000h +
jnz loc_4569B4  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 10h +
jmp loc_455FE5  +
test [esp+12Ch+var_118] 2000h +
jnz loc_4569B4  +
jmp loc_4567C9  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457D51  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4574AD  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456B41  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456AC8  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457DA2  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457398  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456BD3  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456B5A  +
test [esp+12Ch+var_118] 4000h +
jnz loc_4560C5  +
lea esi [ebx-30h] +
mov eax esi +
movzx ecx al +
cmp [esp+12Ch+var_F0] ecx +
jb loc_457CE9  +
mov eax [esp+12Ch+var_F4] +
sub eax 1 +
js loc_456C33  +
lea edx [eax+eax*4] +
mov [esp+12Ch+var_108] eax +
mov eax [esp+12Ch+var_FC] +
shl edx 2 +
cmp ecx [eax+edx+10h] +
jz loc_4560C5  +
lea edx [eax+edx+14h] +
mov eax [esp+12Ch+var_108] +
jmp loc_456C2E  +
sub edx 14h +
cmp ecx [edx-4] +
jz loc_4560C5  +
sub eax 1 +
jns loc_456C22  +
mov ebx [ebp+0] +
mov [esp+12Ch+var_11C] edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 2 +
cmp ecx eax +
jbe loc_457CD1  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457CC0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456CBB  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ecx +
test ebx ebx +
lea ecx [ebx+edx] +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
mov [esp+12Ch+var_11C] ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456C3A  +
mov eax [esp+12Ch+var_F8] +
test eax eax +
jnz loc_456181  +
jmp loc_4569B4  +
test [esp+12Ch+var_118] 8400h +
jnz loc_4569B4  +
jmp loc_45664C  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457DE4  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4574CF  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456D75  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456CF9  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457D3B  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4573DC  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456E07  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456D8E  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457DB8  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4573CB  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456E99  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456E20  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi edi +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457DCE  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4574BE  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456F29  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456EB0  +
test [esp+12Ch+var_118] 80000h +
jnz loc_4560C5  +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_11C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 1 +
cmp ecx eax +
jbe loc_457D8C  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4573A9  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_456FBB  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_100] +
test esi esi +
mov [esp+12Ch+var_10C] ecx +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_100] edx +
mov ebx eax +
jmp loc_456F42  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456460  +
mov dword ptr [ebp+4] 10000h +
mov edx 10000h +
jmp loc_4564F2  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45676F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4565EF  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456695  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4563D1  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456276  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_45685A  +
mov [esp+12Ch+var_12C] 20h +
call malloc  +
mov [ebp+0] eax +
jmp loc_45600E  +
cmp al 0FFh +
jz loc_4560DF  +
mov edx [esp+12Ch+var_90] +
movzx eax byte ptr [edx] +
cmp al 2Ah +
jz loc_4560DF  +
cmp al 5Eh +
jz loc_4560DF  +
mov edi [esp+12Ch+var_F8] +
test edi edi +
jz loc_457825  +
cmp al 5Ch +
jz loc_457A46  +
mov ecx [esp+12Ch+var_E8] +
test ecx ecx +
jz loc_4562D7  +
test [esp+12Ch+var_118] 1000h +
jz loc_457BDA  +
cmp al 7Bh +
jnz loc_4562D7  +
mov edi esi +
jmp loc_4560DF  +
mov byte ptr [esp+12Ch+var_108] 0 +
mov eax esi +
mov edx edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov esi [esp+12Ch+var_11C] +
mov byte ptr [esp+12Ch+var_100] al +
mov eax [ebp+4] +
mov ecx edx +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_4574F6  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_45713C  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
mov [esp+12Ch+var_11C] edx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
mov edx [esp+12Ch+var_11C] +
jz loc_457138  +
mov ecx eax +
sub ecx ebx +
add edx ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
lea ebx [edi+ecx] +
cmovnz edi ebx +
add ecx esi +
test esi esi +
cmovnz esi ecx +
mov ebx eax +
jmp loc_4570D3  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4570FC  +
movzx eax byte ptr [esp+12Ch+var_F0] +
add edi 3 +
mov byte ptr [edi-3] 6 +
mov byte ptr [edi-1] 0 +
mov [edi-2] al +
add [esp+12Ch+var_F4] 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_10C] 0 +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
jmp loc_455F9B  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 3 +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
mov [esp+12Ch+var_10C] edi +
mov edi esi +
mov esi ecx +
mov [esp+12Ch+var_11C] ecx +
mov ecx ebx +
mov ebx [esp+12Ch+var_10C] +
jmp loc_45720E  +
mov [ebp+4] edx +
mov [esp+12Ch+var_128] edx +
mov [esp+12Ch+var_12C] ecx +
mov [esp+12Ch+var_10C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov ecx [esp+12Ch+var_10C] +
cmp eax ecx +
jz loc_457209  +
mov edx eax +
sub edx ecx +
lea ecx [ebx+edx] +
add [esp+12Ch+var_11C] edx +
add [esp+12Ch+var_120] edx +
test ebx ebx +
cmovnz ebx ecx +
test esi esi +
lea ecx [esi+edx] +
cmovnz esi ecx +
add edx edi +
test edi edi +
cmovnz edi edx +
mov edx [ebp+4] +
mov ecx eax +
mov eax [esp+12Ch+var_11C] +
sub eax ecx +
add eax 1 +
cmp eax edx +
jbe loc_457745  +
cmp edx 10000h +
jz loc_456163  +
add edx edx +
cmp edx 10000h +
jbe loc_4571C0  +
mov dword ptr [ebp+4] 10000h +
mov edx 10000h +
jmp loc_4571C3  +
mov edi [esp+12Ch+var_108] +
jmp loc_456222  +
mov ebx [esp+12Ch+var_10C] +
test ebx ebx +
jz loc_457267  +
mov eax edi +
sub eax ebx +
sub eax 3 +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov eax [esp+12Ch+var_F4] +
test eax eax +
jnz loc_4574E0  +
test [esp+12Ch+var_118] 40000h +
jz loc_45786B  +
mov ebx [ebp+0] +
mov eax [ebp+4] +
mov edx edi +
sub edx ebx +
add edx 1 +
cmp edx eax +
jbe loc_457865  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4572D2  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_4572CE  +
mov edx eax +
sub edx ebx +
add edi edx +
mov ebx eax +
jmp loc_457284  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4572AD  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 0Ah +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
mov [esp+12Ch+var_11C] edi +
mov edi [esp+12Ch+var_108] +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_10C] ebx +
mov byte ptr [edi] 9 +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
test byte ptr [esp+12Ch+var_118] 20h +
jnz loc_457E1D  +
test byte ptr [esp+12Ch+var_118] 10h +
jz loc_4560C5  +
jmp loc_45618D  +
test ecx ecx +
jz loc_45670F  +
test dl dl +
lea esi [esi+0] +
jz loc_45670F  +
cmp byte ptr [ecx] 29h +
jnz loc_45670F  +
nop   +
jmp loc_456725  +
mov ecx [esp+12Ch+var_118] +
test ecx 200000h +
jz loc_457D67  +
and ecx 1000h +
mov eax [esp+12Ch+var_E4] +
test ecx ecx +
mov ebx 7Bh +
mov [esp+12Ch+var_90] eax +
jnz loc_4560C5  +
jmp loc_4569AF  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456B87  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456F6F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456A0B  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456E4D  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456DBB  +
mov ebx [esp+12Ch+var_120] +
mov eax esi +
mov [esp+12Ch+var_10C] edi +
mov edi esi +
mov ecx [esp+12Ch+var_120] +
lea esi [esi+3] +
sub eax ebx +
cmp edi ebx +
lea edx [eax+3] +
jz loc_457416  +
sub edi 1 +
movzx eax byte ptr [edi] +
cmp edi ecx +
mov [edi+3] al +
jnz loc_457409  +
mov eax [esp+12Ch+var_120] +
mov [eax+1] dl +
sar edx 8 +
mov byte ptr [eax] 0Fh +
mov [eax+2] dl +
mov eax [esp+12Ch+var_10C] +
test eax eax +
jz loc_457445  +
mov ebx [esp+12Ch+var_10C] +
mov eax esi +
sub eax ebx +
sub eax 3 +
mov [ebx+1] al +
sar eax 8 +
mov byte ptr [ebx] 0Eh +
mov [ebx+2] al +
mov ebx [ebp+0] +
mov edi esi +
mov eax [ebp+4] +
mov edx esi +
sub edx ebx +
add edx 3 +
cmp edx eax +
jbe loc_4579EB  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_45749F  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_45749B  +
mov edx eax +
sub edx ebx +
add esi edx +
add edx edi +
test edi edi +
cmovnz edi edx +
mov ebx eax +
jmp loc_45744A  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_457473  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456AF5  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456EDD  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456D26  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 8 +
jmp loc_455FE5  +
mov ecx esi +
mov eax edx +
sub eax ecx +
cmp byte ptr [esp+12Ch+var_108] 1 +
mov [esp+12Ch+var_10C] edi +
lea ebx [edx+3] +
mov edi edx +
mov [esp+12Ch+var_11C] esi +
movzx esi byte ptr [esp+12Ch+var_100] +
sbb edx edx +
add edx 10h +
cmp edi ecx +
jz loc_457535  +
mov ecx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_108] eax +
sub edi 1 +
movzx eax byte ptr [edi] +
cmp edi ecx +
mov [edi+3] al +
jnz loc_457524  +
mov eax [esp+12Ch+var_108] +
mov edi [esp+12Ch+var_11C] +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
mov eax esi +
test al al +
mov [edi] dl +
jnz loc_4579A2  +
mov edi ebx +
mov esi [ebp+0] +
mov ebx [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx esi +
add ecx 3 +
cmp ecx eax +
jbe loc_457BF5  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_4575C0  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] esi +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax esi +
jz loc_4575BC  +
mov ecx eax +
sub ecx esi +
lea esi [ebx+ecx] +
add edi ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
cmovnz ebx esi +
mov esi [esp+12Ch+var_11C] +
add ecx esi +
test esi esi +
cmovz ecx esi +
mov [esp+12Ch+var_11C] ecx +
mov esi eax +
jmp loc_457557  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_457580  +
mov [esp+12Ch+var_108] esi +
xor ecx ecx +
mov edx [esp+12Ch+var_108] +
shr edx 1Fh +
test dl dl +
jnz loc_457365  +
test cl cl +
jnz loc_457365  +
mov ecx [esp+12Ch+var_118] +
and ecx 1000h +
jnz loc_457629  +
cmp al 5Ch +
jnz loc_457365  +
mov eax [esp+12Ch+var_90] +
cmp eax [esp+12Ch+var_110] +
jz loc_457365  +
mov ebx [esp+12Ch+var_114] +
lea edx [eax+1] +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [eax] +
test ebx ebx +
jz loc_457629  +
movzx eax byte ptr [ebx+eax] +
cmp al 7Dh +
jnz loc_457365  +
mov eax [esp+12Ch+var_11C] +
test eax eax +
jz loc_457CFF  +
cmp esi 7FFFh +
jg loc_45886F  +
test esi esi +
jnz loc_4586E1  +
mov esi edi +
mov ebx [ebp+0] +
mov edi [esp+12Ch+var_10C] +
mov eax [ebp+4] +
mov ecx esi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_45796E  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
mov [ebp+4] eax +
jbe loc_45768F  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_4576CB  +
mov ecx eax +
sub ecx ebx +
lea ebx [edi+ecx] +
add esi ecx +
add [esp+12Ch+var_120] ecx +
test edi edi +
cmovnz edi ebx +
mov ebx [esp+12Ch+var_11C] +
add ecx ebx +
test ebx ebx +
cmovz ecx ebx +
mov [esp+12Ch+var_11C] ecx +
mov ebx eax +
jmp loc_45765A  +
mov ebx [esp+12Ch+var_114] +
mov [esp+12Ch+var_11C] esi +
mov eax [esp+12Ch+var_90] +
mov [esp+12Ch+var_10C] edi +
movzx esi byte ptr [esp+12Ch+var_108] +
mov edi edx +
test ebx ebx +
jz loc_457C95  +
movzx edx byte ptr [eax-2] +
movsx ecx byte ptr [ebx+edx] +
movsx edx byte ptr [ebx+2Eh] +
cmp ecx edx +
jz loc_457C36  +
mov eax [esp+12Ch+var_11C] +
mov byte ptr [edi] 12h +
mov byte ptr [esp+12Ch+var_108] 0 +
sub eax edi +
sub eax 6 +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
add edi 3 +
jmp loc_4570C0  +
test ecx ecx +
jz loc_4560C5  +
test dl dl +
jz loc_4560C5  +
cmp byte ptr [ecx] 7Ch +
jnz loc_4560C5  +
jmp loc_456725  +
mov [esp+12Ch+var_100] edi +
mov edi [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ebx +
mov [esp+12Ch+var_11C] esi +
lea eax [edi+1] +
mov [esp+12Ch+var_E4] eax +
mov eax [esp+12Ch+var_90] +
cmp byte ptr [eax] 5Eh +
setz al  +
add eax 4 +
mov [edi] al +
mov eax [esp+12Ch+var_90] +
cmp byte ptr [eax] 5Eh +
mov [esp+12Ch+var_D4] eax +
jnz loc_45778C  +
add eax 1 +
mov [esp+12Ch+var_90] eax +
mov [esp+12Ch+var_D4] eax +
mov ebx [ebp+0] +
mov esi [esp+12Ch+var_100] +
mov edi [esp+12Ch+var_11C] +
mov edx ebx +
mov ebx [esp+12Ch+var_10C] +
mov ecx [esp+12Ch+var_E4] +
mov eax [ebp+4] +
sub ecx edx +
add ecx 1 +
cmp ecx eax +
jbe loc_457A63  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457817  +
mov [ebp+4] eax +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
mov edx [esp+12Ch+var_11C] +
cmp eax edx +
jz loc_457813  +
mov ecx eax +
sub ecx edx +
mov edx ecx +
add [esp+12Ch+var_E4] ecx +
add [esp+12Ch+var_120] ecx +
test ebx ebx +
lea ecx [ebx+ecx] +
cmovnz ebx ecx +
test edi edi +
lea ecx [edi+edx] +
cmovnz edi ecx +
add edx esi +
test esi esi +
cmovnz esi edx +
mov edx eax +
jmp loc_45779D  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_4577C8  +
cmp al 3Fh +
jz loc_4570B4  +
cmp al 2Bh +
jnz loc_457092  +
mov edi esi +
jmp loc_4560DF  +
test [esp+12Ch+var_118] 2000h +
jz loc_4565A3  +
jmp loc_4565AB  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 5 +
jmp loc_455FE5  +
mov byte ptr [edi] 1 +
add edi 1 +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax edi +
sub eax [ebp+0] +
mov [ebp+8] eax +
xor eax eax +
jmp loc_455FE5  +
sub [esp+12Ch+var_F4] 1 +
mov esi 0 +
mov eax [esp+12Ch+var_F4] +
mov ebx [esp+12Ch+var_FC] +
mov edx [ebp+0] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
mov ebx [eax] +
mov ecx [eax+4] +
add ebx edx +
mov [esp+12Ch+var_120] ebx +
test ecx ecx +
lea ebx [edx+ecx-1] +
cmovz ebx esi +
mov esi [eax+10h] +
mov [esp+12Ch+var_10C] ebx +
mov ebx [eax+0Ch] +
add ebx edx +
cmp esi 0FFh +
mov [esp+12Ch+var_11C] ebx +
ja loc_457A32  +
movzx ebx byte ptr [esp+12Ch+var_F0] +
mov ecx esi +
mov eax [eax+8] +
sub ebx ecx +
mov byte ptr [esp+12Ch+var_108] bl +
mov [edx+eax] bl +
mov ebx [ebp+0] +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx 3 +
cmp ecx eax +
jbe loc_458885  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
ja loc_457959  +
mov [ebp+4] eax +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ebx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_457955  +
mov edx [esp+12Ch+var_10C] +
mov ecx eax +
sub ecx ebx +
add edi ecx +
add [esp+12Ch+var_120] ecx +
mov ebx edx +
add ebx ecx +
test edx edx +
cmovz ebx edx +
mov [esp+12Ch+var_10C] ebx +
mov ebx [esp+12Ch+var_11C] +
add ecx ebx +
test ebx ebx +
cmovz ecx ebx +
mov [esp+12Ch+var_11C] ecx +
mov ebx eax +
jmp loc_4578E7  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_457910  +
xor edx edx +
jmp loc_45680A  +
mov eax esi +
mov [esp+12Ch+var_10C] edi +
lea ebx [esi+3] +
mov edi esi +
mov esi [esp+12Ch+var_11C] +
sub eax esi +
cmp edi esi +
jz loc_457992  +
sub edi 1 +
movzx edx byte ptr [edi] +
cmp edi [esp+12Ch+var_11C] +
mov [edi+3] dl +
jnz loc_457983  +
mov esi [esp+12Ch+var_11C] +
mov [esi+1] al +
sar eax 8 +
mov byte ptr [esi] 0Dh +
mov [esi+2] al +
mov ecx [esp+12Ch+var_90] +
mov edi ebx +
mov [esp+12Ch+var_100] 0 +
jmp loc_455F9B  +
mov ebx [esp+12Ch+var_F4] +
lea eax [ebx+ebx*4] +
shl eax 3 +
mov [esp+12Ch+var_128] eax +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call realloc  +
test eax eax +
mov [esp+12Ch+var_FC] eax +
jz loc_455FE0  +
mov eax ebx +
add eax eax +
mov [esp+12Ch+var_EC] eax +
jmp loc_4567E0  +
mov [esp+12Ch+var_10C] edi +
lea edi [esi+3] +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_120] edi +
mov [esp+12Ch+var_11C] 0 +
mov [esp+12Ch+var_100] 0 +
jmp loc_455F9B  +
mov ecx [esp+12Ch+var_100] +
mov edx [esp+12Ch+var_108] +
mov esi [esp+12Ch+var_11C] +
mov eax edx +
sar eax 8 +
mov byte ptr [esi] 17h +
mov [esi+1] dl +
mov [esi+2] al +
mov [esi+3] bl +
mov [esi+4] cl +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_100] 0 +
jmp loc_455F9B  +
movzx ecx byte ptr [edx+1] +
cmp cl 3Fh +
jz loc_4570B4  +
cmp cl 2Bh +
jnz loc_457092  +
mov edi esi +
jmp loc_4560DF  +
mov [esp+12Ch+var_10C] ebx +
mov ebx [esp+12Ch+var_E4] +
mov edx 20h +
mov [esp+12Ch+var_100] esi +
mov [esp+12Ch+var_11C] edi +
mov eax ebx +
add eax 1 +
mov byte ptr [ebx] 20h +
mov ebx eax +
and ebx 1 +
mov [esp+12Ch+var_DC] eax +
jnz loc_4580CD  +
test al 2 +
jnz loc_4580BC  +
mov ebx edx +
xor ecx ecx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+ecx] 0 +
add ecx 4 +
cmp ecx ebx +
jb loc_457A9E  +
add eax ecx +
test dl 2 +
jz loc_457ABC  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and edx 1 +
jz loc_457AC4  +
mov byte ptr [eax] 0 +
mov eax [esp+12Ch+var_E4] +
cmp byte ptr [eax-1] 5 +
jz loc_4580A5  +
mov esi [esp+12Ch+var_118] +
xor ebx ebx +
mov [esp+12Ch+arg_0] ebp +
mov edx [esp+12Ch+var_90] +
mov edi ebx +
mov ebp [esp+12Ch+var_110] +
mov [esp+12Ch+var_E0] 0FFFFFFFFh +
mov eax esi +
and eax 1 +
mov [esp+12Ch+var_A4] eax +
mov eax esi +
and eax 4 +
mov [esp+12Ch+var_A0] eax +
mov eax [esp+12Ch+var_DC] +
mov [esp+12Ch+var_108] eax +
cmp ebp edx +
jz loc_457D25  +
mov ebx [esp+12Ch+var_114] +
lea esi [edx+1] +
mov [esp+12Ch+var_90] esi +
movzx eax byte ptr [edx] +
test ebx ebx +
jz loc_457B35  +
movzx eax byte ptr [ebx+eax] +
mov ecx [esp+12Ch+var_A4] +
test ecx ecx +
jz loc_457B48  +
cmp al 5Ch +
jz loc_458058  +
cmp al 5Dh +
jz loc_457EB1  +
cmp al 2Dh +
jnz loc_457E33  +
mov ebx edi +
test bl bl +
jnz loc_457E9D  +
movzx ecx byte ptr [edx+1] +
lea ebx [edx-1] +
cmp [esp+12Ch+var_104] ebx +
ja loc_457B79  +
cmp byte ptr [edx-1] 5Bh +
jz loc_457E37  +
lea ebx [edx-2] +
cmp [esp+12Ch+var_104] ebx +
ja loc_457B8C  +
cmp byte ptr [edx-2] 5Bh +
jz loc_458932  +
cmp cl 5Dh +
jnz loc_458012  +
mov ecx 5Dh +
mov ebx [esp+12Ch+var_A0] +
test ebx ebx +
jz loc_457BAD  +
cmp al 5Bh +
jz loc_457F18  +
mov ebx [esp+12Ch+var_108] +
mov edx eax +
mov ecx eax +
shr dl 3 +
and ecx 7 +
movzx esi dl +
mov edx 1 +
shl edx cl +
xor edi edi +
or [ebx+esi] dl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457B14  +
cmp al 5Ch +
jnz loc_4562D7  +
cmp byte ptr [edx+1] 7Bh +
jnz loc_4562D7  +
mov edi esi +
nop   +
jmp loc_4560DF  +
mov [esp+12Ch+var_10C] ebx +
mov ebx edi +
cmp ebx [esp+12Ch+var_11C] +
lea edi [edi+3] +
jz loc_457C13  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp ebx [esp+12Ch+var_11C] +
mov [ebx+3] al +
jnz loc_457C04  +
mov eax [esp+12Ch+var_11C] +
mov [esp+12Ch+var_100] 0 +
mov byte ptr [eax] 13h +
mov byte ptr [eax+1] 3 +
mov byte ptr [eax+2] 0 +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
test esi 1 +
jz loc_457705  +
cmp eax [esp+12Ch+var_110] +
jnb loc_457705  +
mov ebx [esp+12Ch+var_114] +
test ebx ebx +
jz loc_457E10  +
movzx eax byte ptr [eax] +
movsx edx byte ptr [ebx+eax] +
movsx eax byte ptr [ebx+0Ah] +
cmp edx eax +
jnz loc_457705  +
test byte ptr [esp+12Ch+var_118] 40h +
jnz loc_457705  +
mov eax [esp+12Ch+var_11C] +
mov byte ptr [edi] 0Dh +
mov byte ptr [esp+12Ch+var_108] 1 +
sub eax edi +
sub eax 3 +
mov [edi+1] al +
sar eax 8 +
mov [edi+2] al +
jmp loc_45771F  +
movsx ecx byte ptr [eax-2] +
mov edx 2Eh +
jmp loc_4576FD  +
cmp esi 7FFFh +
mov [esp+12Ch+var_108] esi +
setnle cl  +
mov esi 7FFFh +
jmp loc_4575D4  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
jmp loc_456C67  +
mov eax esi +
add edi 2 +
mov byte ptr [edi-2] 8 +
mov [edi-1] al +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 6 +
jmp loc_455FE5  +
mov eax [esp+12Ch+var_118] +
and eax 200020h +
cmp eax 20h +
jz loc_457E1D  +
test byte ptr [esp+12Ch+var_118] 10h +
jz loc_45737B  +
mov [esp+12Ch+var_11C] edi +
jmp loc_45763D  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 7 +
jmp loc_455FE5  +
mov byte ptr [edi] 1Ch +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 1Bh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax [esp+12Ch+var_110] +
cmp [esp+12Ch+var_90] eax +
setnz al  +
movzx eax al +
add eax 9 +
jmp loc_455FE5  +
mov byte ptr [edi] 1Dh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 1Ah +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 0Bh +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 19h +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 18h +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
mov byte ptr [edi] 0Ch +
add edi 1 +
mov ecx [esp+12Ch+var_90] +
mov [esp+12Ch+var_11C] esi +
jmp loc_455F9B  +
movsx edx byte ptr [eax] +
mov eax 0Ah +
jmp loc_457C63  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Dh +
jmp loc_455FE5  +
movzx ecx byte ptr [edx+1] +
cmp cl 2Dh +
jnz loc_457B9A  +
cmp byte ptr [edx+2] 5Dh +
jz loc_457B9A  +
cmp ebp esi +
jz loc_4588C3  +
mov ebx [esp+12Ch+var_108] +
add edx 2 +
mov ecx ebp +
mov [esp+12Ch+var_90] edx +
lea edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_124] ebx +
mov ebx [esp+12Ch+var_118] +
mov [esp+12Ch+var_128] ebx +
mov ebx [esp+12Ch+var_114] +
mov [esp+12Ch+var_12C] ebx +
call sub_453380  +
test eax eax +
jnz loc_458043  +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] 0FFFFFFFFh +
jmp loc_457B14  +
cmp byte ptr [edx+1] 5Dh +
jnz loc_4588AD  +
mov ecx 5Dh +
jmp loc_457B66  +
mov ebx [esp+12Ch+var_D4] +
lea ecx [ebx+1] +
cmp esi ecx +
jz loc_457E33  +
mov eax [esp+12Ch+var_E4] +
mov ebp [esp+12Ch+arg_0] +
movzx eax byte ptr [eax] +
test al al +
jz loc_4586D8  +
mov ebx [esp+12Ch+var_DC] +
movzx edi al +
sub eax 1 +
mov ecx esi +
cmp byte ptr [ebx+edi-1] 0 +
jnz loc_457F0F  +
mov ebx [esp+12Ch+var_E4] +
test al al +
mov [ebx] al +
jz loc_4586CA  +
mov ebx [esp+12Ch+var_DC] +
movzx edi al +
sub eax 1 +
cmp byte ptr [ebx+edi-1] 0 +
jz loc_457EE9  +
mov ecx [esp+12Ch+var_90] +
add edi [esp+12Ch+var_DC] +
jmp loc_455F9B  +
cmp cl 3Ah +
jz loc_45825B  +
cmp cl 3Dh +
jz loc_458136  +
cmp cl 2Eh +
jnz loc_457BAD  +
cmp ebp esi +
jz loc_4588C3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457D25  +
mov esi [esp+12Ch+var_114] +
xor eax eax +
mov edi edx +
mov ebx [esp+12Ch+var_108] +
mov ecx eax +
lea edx [edi+1] +
test esi esi +
mov [esp+12Ch+var_90] edx +
movzx eax byte ptr [edx-1] +
jz loc_457F71  +
movzx eax byte ptr [esi+eax] +
cmp al 2Eh +
jz loc_457F9E  +
cmp ebp edx +
jz loc_4580DF  +
test cl cl +
js loc_457F92  +
movzx edi cl +
add ecx 1 +
mov byte ptr [esp+edi+12Ch+var_8C] al +
mov edi edx +
jmp loc_457F5B  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov edi edx +
jmp loc_457F5B  +
cmp byte ptr [edx] 5Dh +
jnz loc_457F75  +
mov eax ecx +
mov ecx edi +
movzx edi al +
mov esi edx +
mov [esp+12Ch+var_108] ebx +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
movzx ebx byte ptr [esp+12Ch+var_8C] +
test bl bl +
jz loc_458957  +
cmp al 1 +
jnz loc_458941  +
cmp ebp esi +
jz loc_4588C3  +
mov esi [esp+12Ch+var_108] +
add ecx 2 +
mov edx ebx +
mov [esp+12Ch+var_90] ecx +
shr dl 3 +
mov ecx ebx +
movzx edx dl +
and ecx 7 +
mov eax 1 +
xor edi edi +
shl eax cl +
or [esi+edx] al +
movzx eax bl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457B14  +
mov eax [esp+12Ch+var_108] +
mov ecx ebp +
lea edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_124] eax +
mov eax [esp+12Ch+var_118] +
mov [esp+12Ch+var_128] eax +
mov eax [esp+12Ch+var_114] +
mov [esp+12Ch+var_12C] eax +
mov eax [esp+12Ch+var_E0] +
call sub_453380  +
test eax eax +
jz loc_457E89  +
mov edi eax +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax edi +
jmp loc_455FE5  +
cmp ebp esi +
jz loc_45784F  +
mov ebx [esp+12Ch+var_114] +
lea eax [edx+2] +
mov [esp+12Ch+var_90] eax +
movzx eax byte ptr [edx+1] +
test ebx ebx +
jz loc_45807A  +
movzx eax byte ptr [ebx+eax] +
mov ebx [esp+12Ch+var_108] +
mov edx eax +
mov ecx eax +
shr dl 3 +
and ecx 7 +
movzx esi dl +
mov edx 1 +
shl edx cl +
or [ebx+esi] dl +
mov edx [esp+12Ch+var_90] +
mov [esp+12Ch+var_E0] eax +
jmp loc_457B14  +
test [esp+12Ch+var_118] 100h +
jz loc_457AD2  +
or byte ptr [eax+2] 4 +
jmp loc_457AD2  +
xor esi esi +
add eax 2 +
mov [eax-2] si +
sub edx 2 +
jmp loc_457A97  +
mov eax [esp+12Ch+var_E4] +
mov dl 1Fh +
mov byte ptr [eax+1] 0 +
add eax 2 +
jmp loc_457A8F  +
mov byte ptr [esp+12Ch+var_E0] al +
mov eax ecx +
mov ecx edi +
cmp byte ptr [esp+12Ch+var_E0] 2Eh +
movzx edi al +
mov [esp+12Ch+var_108] ebx +
mov esi ebp +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
jz loc_45812B  +
cmp al 0FFh +
jz loc_458110  +
mov edx edi +
not edx  +
add edx esi +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 2Eh +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+6] 40h +
jmp loc_457B14  +
cmp byte ptr [ecx+1] 5Dh +
jnz loc_4580FF  +
jmp loc_457FB8  +
cmp ebp esi +
jz loc_4588C3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457D25  +
mov edi [esp+12Ch+var_114] +
mov esi edx +
xor eax eax +
mov ebx [esp+12Ch+var_108] +
lea edx [esi+1] +
test edi edi +
mov [esp+12Ch+var_90] edx +
movzx ecx byte ptr [edx-1] +
jz loc_458172  +
movzx ecx byte ptr [edi+ecx] +
cmp cl 3Dh +
jz loc_4581A0  +
cmp ebp edx +
jz loc_45820A  +
cmp al 4 +
ja loc_458194  +
movzx esi al +
add eax 1 +
mov byte ptr [esp+esi+12Ch+var_8C] cl +
mov esi edx +
jmp loc_45815C  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov esi edx +
jmp loc_45815C  +
cmp byte ptr [edx] 5Dh +
jnz loc_458177  +
movzx edi al +
mov [esp+12Ch+var_108] ebx +
mov ebx edx +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
movzx ecx byte ptr [esp+12Ch+var_8C] +
test cl cl +
jz loc_458257  +
cmp al 1 +
jnz loc_458941  +
cmp ebp ebx +
jz loc_4588C3  +
mov ebx [esp+12Ch+var_108] +
mov edx ecx +
add esi 2 +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
mov [esp+12Ch+var_90] esi +
shl eax cl +
mov edi 1 +
or [ebx+edx] al +
mov edx [esp+12Ch+var_90] +
jmp loc_457B14  +
movzx edi al +
cmp cl 3Dh +
mov [esp+12Ch+var_108] ebx +
mov ebx ebp +
mov byte ptr [esp+edi+12Ch+var_8C] 0 +
jz loc_45824C  +
cmp al 0FFh +
jz loc_458231  +
mov edx edi +
not edx  +
add edx ebx +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 3Dh +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+8] 20h +
jmp loc_457B14  +
cmp byte ptr [esi+1] 5Dh +
jnz loc_458220  +
jmp loc_4581B6  +
mov ebx edx +
jmp loc_458220  +
cmp ebp esi +
lea esi [esi+0] +
jz loc_4588C3  +
add edx 2 +
cmp ebp edx +
mov [esp+12Ch+var_90] edx +
jz loc_457D25  +
mov esi [esp+12Ch+var_114] +
xor eax eax +
mov edi edx +
mov ebx [esp+12Ch+var_108] +
lea edx [edi+1] +
test esi esi +
mov [esp+12Ch+var_90] edx +
movzx ecx byte ptr [edx-1] +
jz loc_45829A  +
movzx ecx byte ptr [esi+ecx] +
cmp cl 3Ah +
jz loc_4582C8  +
cmp ebp edx +
jz loc_4588CD  +
cmp al 5 +
ja loc_4582BC  +
movzx edi al +
add eax 1 +
mov byte ptr [esp+edi+12Ch+var_8C] cl +
mov edi edx +
jmp loc_458284  +
mov byte ptr [esp+12Ch+var_8C] 0 +
mov edi edx +
jmp loc_458284  +
cmp byte ptr [edx] 5Dh +
jnz loc_45829F  +
movzx eax al +
mov [esp+12Ch+var_108] ebx +
mov [esp+12Ch+var_D8] edi +
mov byte ptr [esp+eax+12Ch+var_8C] 0 +
lea eax [esp+12Ch+var_8C] +
mov edi offset aAlnum +
mov esi eax +
mov ecx 6 +
cmps   +
mov esi eax +
mov edi offset aAlpha +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
cmps   +
movsx ebx bl +
mov esi eax +
mov [esp+12Ch+var_D0] ebx +
mov edi offset aBlank +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
cmps   +
movsx ebx bl +
mov edi offset aCntrl +
mov [esp+12Ch+var_CC] ebx +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C8] esi +
mov esi eax +
cmps   +
mov edi offset aDigit +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C4] esi +
mov esi eax +
cmps   +
mov edi offset aGraph +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_C0] esi +
mov esi eax +
cmps   +
mov edi offset aLower +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_BC] esi +
mov esi eax +
cmps   +
mov edi offset aPrint +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
test esi esi +
mov [esp+12Ch+var_A8] esi +
mov esi eax +
setz [esp+12Ch+var_AA]  +
cmps   +
mov edi offset aPunct +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B8] esi +
mov esi eax +
cmps   +
mov edi offset aSpace +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B4] esi +
mov esi eax +
cmps   +
mov edi offset aUpper +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 6 +
movsx esi bl +
mov [esp+12Ch+var_B0] esi +
mov esi eax +
cmps   +
mov edi offset aXdigit +
setb cl  +
setnbe bl  +
sub ebx ecx +
mov ecx 7 +
movsx esi bl +
test esi esi +
mov ebx esi +
mov esi eax +
setz [esp+12Ch+var_A9]  +
cmps   +
setnbe cl  +
setb al  +
sub ecx eax +
movsx esi cl +
mov ecx [esp+12Ch+var_CC] +
test ecx ecx +
jz loc_4584B3  +
test ebx ebx +
jz loc_4584B3  +
mov eax [esp+12Ch+var_A8] +
test eax eax +
jz loc_4584B3  +
mov eax [esp+12Ch+var_C0] +
test eax eax +
jz loc_4584B3  +
mov eax [esp+12Ch+var_D0] +
test eax eax +
jz loc_4584B3  +
test esi esi +
jz loc_4584B3  +
mov eax [esp+12Ch+var_B0] +
test eax eax +
jz loc_4584B3  +
mov eax [esp+12Ch+var_B8] +
test eax eax +
jz loc_4584B3  +
mov eax [esp+12Ch+var_B4] +
test eax eax +
jz loc_4584B3  +
mov edi [esp+12Ch+var_BC] +
test edi edi +
jz loc_4584B3  +
mov ebx [esp+12Ch+var_C4] +
test ebx ebx +
jz loc_4584B3  +
mov ecx [esp+12Ch+var_C8] +
test ecx ecx +
jnz loc_45891C  +
cmp ebp edx +
jz loc_4588C3  +
mov eax [esp+12Ch+var_D8] +
add eax 2 +
cmp ebp eax +
mov [esp+12Ch+var_90] eax +
jz loc_457D25  +
xor edi edi +
mov ebx edi +
mov edi [esp+12Ch+var_108] +
jmp loc_4585D6  +
mov [esp+12Ch+var_12C] ebx +
call ds:isprint  +
test eax eax +
jz loc_45865E  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isspace  +
test eax eax +
jnz loc_45865E  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov ecx [esp+12Ch+var_B4] +
test ecx ecx +
jnz loc_45852C  +
mov [esp+12Ch+var_12C] ebx +
call ds:ispunct  +
test eax eax +
jnz loc_458569  +
mov edx [esp+12Ch+var_B0] +
test edx edx +
jnz loc_458541  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isspace  +
test eax eax +
jnz loc_458569  +
cmp [esp+12Ch+var_A9] 0 +
jz loc_458558  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isupper  +
test eax eax +
jnz loc_458569  +
test esi esi +
jnz loc_458580  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isxdigit  +
test eax eax +
jz loc_458580  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov eax [esp+12Ch+var_114] +
test eax eax +
jz loc_4585C7  +
cmp [esp+12Ch+var_A9] 0 +
jz loc_4586A0  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_isupper  +
test eax eax +
jnz loc_4585B0  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_islower  +
test eax eax +
jz loc_4585C7  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
add ebx 1 +
cmp ebx 100h +
jz loc_4586B5  +
mov edx [esp+12Ch+var_D0] +
test edx edx +
jnz loc_4585EB  +
mov [esp+12Ch+var_12C] ebx +
call ds:isalnum  +
test eax eax +
jnz loc_458627  +
mov eax [esp+12Ch+var_CC] +
test eax eax +
jnz loc_458600  +
mov [esp+12Ch+var_12C] ebx +
call ds:isalpha  +
test eax eax +
jnz loc_458627  +
mov eax [esp+12Ch+var_C8] +
test eax eax +
jnz loc_458612  +
cmp ebx 9 +
jz loc_458627  +
cmp ebx 20h +
jz loc_458627  +
mov eax [esp+12Ch+var_C4] +
test eax eax +
jnz loc_45863E  +
mov [esp+12Ch+var_12C] ebx +
call ds:iscntrl  +
test eax eax +
jz loc_45863E  +
mov edx ebx +
mov ecx ebx +
shr dl 3 +
and ecx 7 +
movzx edx dl +
mov eax 1 +
shl eax cl +
or [edi+edx] al +
mov eax [esp+12Ch+var_C0] +
test eax eax +
jnz loc_458652  +
lea eax [ebx-30h] +
cmp eax 9 +
jbe loc_458500  +
mov eax [esp+12Ch+var_BC] +
test eax eax +
jz loc_4584DE  +
cmp [esp+12Ch+var_AA] 0 +
jz loc_458679  +
mov [esp+12Ch+var_12C] ebx +
call ds:__imp_islower  +
test eax eax +
jnz loc_458500  +
mov eax [esp+12Ch+var_B8] +
test eax eax +
jnz loc_458517  +
mov [esp+12Ch+var_12C] ebx +
call ds:isprint  +
test eax eax +
jz loc_458517  +
jmp loc_458500  +
cmp [esp+12Ch+var_AA] 0 +
jz loc_4585C7  +
nop   +
jmp loc_458596  +
mov [esp+12Ch+var_108] edi +
mov edx [esp+12Ch+var_90] +
mov edi 1 +
jmp loc_457B14  +
mov ecx [esp+12Ch+var_90] +
xor edi edi +
jmp loc_457F0F  +
mov ecx esi +
xor edi edi +
jmp loc_457F0F  +
mov ebx 14h +
cmp esi 2 +
mov eax 0Ah +
cmovge eax ebx +
mov ebx [ebp+0] +
mov [esp+12Ch+var_100] eax +
mov eax [ebp+4] +
mov ecx edi +
sub ecx ebx +
add ecx [esp+12Ch+var_100] +
cmp ecx eax +
jbe loc_458775  +
cmp eax 10000h +
jz loc_456163  +
add eax eax +
cmp eax 10000h +
mov [ebp+4] eax +
jbe loc_45872A  +
mov dword ptr [ebp+4] 10000h +
mov eax 10000h +
mov ecx [ebp+0] +
mov [esp+12Ch+var_128] eax +
mov [esp+12Ch+var_12C] ecx +
call realloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_455FE0  +
cmp eax ebx +
jz loc_458771  +
mov edx eax +
sub edx ebx +
mov ebx [esp+12Ch+var_10C] +
add edi edx +
add [esp+12Ch+var_120] edx +
lea ecx [ebx+edx] +
test ebx ebx +
cmovz ecx ebx +
mov ebx [esp+12Ch+var_11C] +
mov [esp+12Ch+var_10C] ecx +
add edx ebx +
test ebx ebx +
cmovz edx ebx +
mov [esp+12Ch+var_11C] edx +
mov ebx eax +
jmp loc_4586F8  +
mov ebx [esp+12Ch+var_11C] +
xor edx edx +
cmp esi 2 +
setnl dl  +
mov ecx edi +
lea edx [edx+edx*4+5] +
mov eax edi +
sub ecx ebx +
cmp edi ebx +
lea ecx [ecx+edx-3] +
lea edx [edi+5] +
jz loc_4587A5  +
sub edi 1 +
movzx ebx byte ptr [edi] +
cmp edi [esp+12Ch+var_11C] +
mov [edi+5] bl +
jnz loc_458796  +
mov edi [esp+12Ch+var_11C] +
mov [edi+1] cl +
sar ecx 8 +
mov [edi+2] cl +
mov ecx [esp+12Ch+var_108] +
mov byte ptr [edi] 15h +
mov ebx ecx +
sar ebx 8 +
cmp [esp+12Ch+var_11C] edx +
mov [edi+3] cl +
mov [edi+4] bl +
lea edi [eax+0Ah] +
mov byte ptr [esp+12Ch+var_108] cl +
mov ecx edi +
jz loc_4587EC  +
mov [esp+12Ch+var_100] eax +
sub edx 1 +
movzx eax byte ptr [edx] +
sub ecx 1 +
cmp edx [esp+12Ch+var_11C] +
mov [ecx] al +
jnz loc_4587D7  +
mov eax [esp+12Ch+var_100] +
mov edx [esp+12Ch+var_11C] +
cmp esi 1 +
movzx ecx byte ptr [esp+12Ch+var_108] +
mov byte ptr [edx] 17h +
mov byte ptr [edx+1] 5 +
mov byte ptr [edx+2] 0 +
mov [edx+3] cl +
mov [edx+4] bl +
jle loc_457A32  +
lea ebx [esi-1] +
mov esi [esp+12Ch+var_11C] +
mov ecx ebx +
sar ecx 8 +
mov byte ptr [eax+0Ah] 16h +
mov edx esi +
sub edx edi +
add edx 2 +
mov [eax+0Bh] dl +
sar edx 8 +
mov [eax+0Ch] dl +
lea edx [eax+0Fh] +
mov edi edx +
sub edi esi +
mov esi ecx +
cmp [esp+12Ch+var_11C] edx +
mov [esp+12Ch+var_108] edi +
lea edi [eax+14h] +
mov [eax+0Dh] bl +
mov [eax+0Eh] cl +
mov eax edi +
jz loc_457A16  +
mov [esp+12Ch+var_100] ecx +
sub eax 1 +
sub edx 1 +
cmp edx [esp+12Ch+var_11C] +
mov ecx esi +
mov [eax] cl +
jz loc_457A12  +
movzx esi byte ptr [edx-1] +
jmp loc_458855  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Ah +
jmp loc_455FE5  +
mov eax esi +
add edi 3 +
mov [edi-2] al +
movzx eax byte ptr [esp+12Ch+var_108] +
mov byte ptr [edi-3] 7 +
mov [esp+12Ch+var_100] 0 +
mov [edi-1] al +
mov ecx [esp+12Ch+var_90] +
jmp loc_455F9B  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 0Bh +
jmp loc_455FE5  +
mov eax 0Eh +
jmp loc_455FE5  +
movzx esi al +
cmp cl 3Ah +
mov [esp+12Ch+var_108] ebx +
mov [esp+12Ch+var_D8] edi +
mov byte ptr [esp+esi+12Ch+var_8C] 0 +
jz loc_458911  +
cmp al 0FFh +
jz loc_4588F6  +
not esi  +
mov edx esi +
add edx ebp +
mov [esp+12Ch+var_90] edx +
mov eax [esp+12Ch+var_E4] +
xor edi edi +
mov [esp+12Ch+var_E0] 3Ah +
or byte ptr [eax+0Ch] 8 +
or byte ptr [eax+8] 4 +
jmp loc_457B14  +
cmp byte ptr [edi+1] 5Dh +
jnz loc_4588E5  +
jmp loc_4582E0  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 4 +
jmp loc_455FE5  +
cmp byte ptr [edx-1] 5Eh +
jnz loc_457B8C  +
jmp loc_457E37  +
mov eax [esp+12Ch+var_FC] +
mov [esp+12Ch+var_12C] eax +
call free  +
mov eax 3 +
jmp loc_455FE5  +
mov esi edx +
jmp loc_4580FF  +
***
mov edx [esp+4] +
mov eax ds:dword_4DA378 +
mov ds:dword_4DA378 edx +
retn   +
***
mov eax [esp+4] +
jmp sub_4536D0  +
***
push ebx  +
mov ecx [esp+10h] +
mov edx [esp+8] +
mov eax [esp+0Ch] +
test ecx ecx +
jnz loc_4589B0  +
and byte ptr [edx+1Ch] 0F9h +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
pop ebx  +
retn   +
***
movzx ebx byte ptr [edx+1Ch] +
and ebx 0FFFFFFF9h +
or ebx 2 +
mov [edx+1Ch] bl +
mov edx [esp+14h] +
mov [eax] ecx +
mov [eax+4] edx +
mov edx [esp+18h] +
mov [eax+8] edx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+18h] +
mov ecx [esp+14h] +
mov ebx [esp+1Ch] +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov eax [esp+10h] +
mov [esp+24h] edx +
mov [esp+14h] edx +
xor edx edx +
mov [esp+10h] ecx +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+1Ch] esi +
mov [esp+18h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_455BC0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebp [esp+34h] +
mov edi [esp+28h] +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp+28h] ebp +
mov ebp [esp+30h] +
mov eax [esp+14h] +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
mov [esp+24h] ebp +
mov ebp [esp+2Ch] +
mov [esp+1Ch] edi +
mov [esp+18h] esi +
mov [esp+14h] ebx +
mov [esp+20h] ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_455BC0  +
***
push esi  +
push ebx  +
mov edx [esp+14h] +
mov ecx [esp+10h] +
mov ebx [esp+18h] +
mov esi [esp+1Ch] +
mov eax [esp+0Ch] +
mov [esp+1Ch] edx +
mov [esp+10h] edx +
xor edx edx +
mov [esp+0Ch] ecx +
xor ecx ecx +
mov [esp+18h] esi +
mov [esp+14h] ebx +
pop ebx  +
pop esi  +
jmp sub_453AB0  +
***
push edi  +
push esi  +
push ebx  +
mov edi [esp+2Ch] +
mov esi [esp+20h] +
mov ebx [esp+1Ch] +
mov eax [esp+10h] +
mov [esp+20h] edi +
mov edi [esp+28h] +
mov edx [esp+14h] +
mov ecx [esp+18h] +
mov [esp+14h] esi +
mov [esp+1Ch] edi +
mov edi [esp+24h] +
mov [esp+10h] ebx +
mov [esp+18h] edi +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_453AB0  +
***
sub esp 1Ch +
mov ecx ds:dword_4DA378 +
mov edx [esp+28h] +
movzx eax byte ptr [edx+1Ch] +
and eax 0FFFFFFE9h +
or eax 0FFFFFF80h +
mov [edx+1Ch] al +
mov eax [esp+20h] +
mov [esp] edx +
mov edx [esp+24h] +
call sub_455ED0  +
test eax eax +
jz loc_458B20  +
mov eax ds:off_4D0FE0[eax*4] +
add esp 1Ch +
retn   +
***
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jz loc_458B80  +
mov eax ds:dword_4D93E0 +
test eax eax +
jz loc_458B96  +
mov [esp] ebx +
mov esi ds:dword_4DA378 +
or ds:byte_4D93FC 80h +
call strlen  +
mov dword ptr [esp] offset dword_4D93E0 +
mov ecx esi +
mov edx eax +
mov eax ebx +
call sub_455ED0  +
test eax eax +
jz loc_458BD5  +
mov eax ds:off_4D0FE0[eax*4] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov edx ds:dword_4D93E0 +
mov eax offset aNoPreviousRegu +
test edx edx +
cmovnz eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 0C8h +
call malloc  +
test eax eax +
mov ds:dword_4D93E0 eax +
jz loc_458BCE  +
mov dword ptr [esp] 100h +
mov ds:dword_4D93E4 0C8h +
call malloc  +
test eax eax +
mov ds:dword_4D93F0 eax +
jnz loc_458B46  +
mov eax offset aMemoryExhaus_0 +
jmp loc_458B78  +
***
xor eax eax +
jmp loc_458B78  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov [esp] ebx +
call strlen  +
xor ecx ecx +
xor edx edx +
mov [esp] ebx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+14h] eax +
mov [esp+0Ch] eax +
mov [esp+4] eax +
mov eax offset dword_4D93E0 +
call sub_455BC0  +
add esp 28h +
pop ebx  +
not eax  +
shr eax 1Fh +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+5Ch+arg_4] +
mov ebx [esp+5Ch+arg_0] +
mov esi [esp+5Ch+arg_8] +
mov ebp [esp+5Ch+arg_10] +
mov [esp+5Ch+var_5C] edi +
call strlen  +
test byte ptr [ebx+1Ch] 10h +
mov ecx eax +
jnz loc_458DA2  +
test esi esi +
jnz loc_458E35  +
mov eax [ebx] +
mov edx [ebx+1Ch] +
mov [esp+5Ch+var_2C] eax +
mov eax [ebx+4] +
mov [esp+5Ch+var_10] edx +
and edx 0FFFFFFDFh +
mov [esp+5Ch+var_28] eax +
mov eax [ebx+8] +
mov [esp+5Ch+var_24] eax +
mov eax [ebx+0Ch] +
mov [esp+5Ch+var_20] eax +
mov eax [ebx+10h] +
mov [esp+5Ch+var_1C] eax +
mov eax [ebx+14h] +
mov [esp+5Ch+var_18] eax +
mov eax [ebx+18h] +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] ecx +
xor ecx ecx +
mov [esp+5Ch+var_14] eax +
mov eax ebp +
and eax 1 +
shl eax 5 +
shr ebp 1 +
or edx eax +
and ebp 1 +
and edx 0FFFFFFB9h +
shl ebp 6 +
or edx ebp +
or edx 4 +
mov byte ptr [esp+5Ch+var_10] dl +
lea eax [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_5C] edi +
call sub_455BC0  +
mov ebx eax +
mov eax ebx +
shr eax 1Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_40] eax +
mov eax [ebx] +
mov edx ebp +
and edx 1 +
shl edx 5 +
shr ebp 1 +
mov [esp+5Ch+var_2C] eax +
mov eax [ebx+4] +
and ebp 1 +
shl ebp 6 +
mov [esp+5Ch+var_38] esi +
mov [esp+5Ch+var_28] eax +
mov eax [ebx+8] +
mov [esp+5Ch+var_24] eax +
mov eax [ebx+0Ch] +
mov [esp+5Ch+var_20] eax +
mov eax [ebx+10h] +
mov [esp+5Ch+var_1C] eax +
mov eax [ebx+14h] +
mov [esp+5Ch+var_18] eax +
mov eax [ebx+18h] +
mov [esp+5Ch+var_14] eax +
mov eax [ebx+1Ch] +
mov [esp+5Ch+var_10] eax +
and eax 0FFFFFFDFh +
or eax edx +
and eax 0FFFFFFB9h +
or eax ebp +
or eax 4 +
mov byte ptr [esp+5Ch+var_10] al +
lea eax ds:0[esi*8] +
mov [esp+5Ch+var_5C] eax +
call malloc  +
mov ecx [esp+5Ch+var_40] +
test eax eax +
mov [esp+5Ch+var_34] eax +
jz loc_458F1B  +
lea eax [eax+esi*4] +
xor edx edx +
mov [esp+5Ch+var_30] eax +
lea eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] ecx +
xor ecx ecx +
mov [esp+5Ch+var_5C] edi +
mov [esp+5Ch+var_54] 0 +
call sub_455BC0  +
mov edi [esp+5Ch+var_34] +
test eax eax +
mov ebx eax +
js loc_458F0E  +
mov ebp [esp+5Ch+var_30] +
xor edx edx +
mov ecx [esp+5Ch+arg_C] +
mov eax [edi+edx*4] +
add ecx 8 +
mov [ecx-8] eax +
mov eax [ebp+edx*4+0] +
add edx 1 +
mov [ecx-4] eax +
cmp edx esi +
jnz loc_458EF7  +
mov [esp+5Ch+var_5C] edi +
call free  +
jmp loc_458E28  +
mov eax 1 +
jmp loc_458E2D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov ebx [esp+2Ch] +
cmp eax 10h +
ja loc_458FA9  +
mov edi ds:off_4D0FE0[eax*4] +
mov [esp] edi +
call strlen  +
test ebx ebx +
lea esi [eax+1] +
jz loc_458F71  +
cmp esi ebx +
ja loc_458F80  +
mov eax [esp+28h] +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
lea eax [ebx-1] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
mov eax [esp+28h] +
mov byte ptr [eax+ebx-1] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
call abort  +
nop   +
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx] +
mov [esp] eax +
call free  +
mov eax [ebx+10h] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov [esp] eax +
call free  +
mov eax [ebx+14h] +
and byte ptr [ebx+1Ch] 0F7h +
mov dword ptr [ebx+10h] 0 +
mov [esp] eax +
call free  +
mov dword ptr [ebx+14h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 5 +
mov ecx [esp+4+arg_1] +
mov eax [esp+4+arg_5] +
cmp ecx eax +
jz loc_459150  +
lea esi [ecx+1] +
mov [esp+1] esi +
movzx esi byte ptr [ecx] +
lea ecx [eax+1] +
movzx eax byte ptr [eax] +
mov ebx esi +
cmp bl 30h +
mov edx eax +
mov [esp+4+var_4] al +
movzx eax bl +
setz bl  +
movzx ebx bl +
mov ebp ebx +
movzx ebx ds:word_4D0720[eax+eax] +
shr bx 2 +
mov edi ebx +
movzx ebx dl +
and edi 1 +
add edi ebp +
sub eax ebx +
jnz loc_4590BA  +
mov edx esi +
test dl dl +
jz loc_4590BA  +
mov esi [esp+1] +
jmp loc_459076  +
test dl dl +
jz loc_4590B6  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ecx 1 +
movzx eax byte ptr [ecx-1] +
xor ebx ebx +
cmp dl 30h +
setz bl  +
mov [esp+4+var_4] al +
movzx eax dl +
mov ebp ebx +
movzx ebx ds:word_4D0720[eax+eax] +
shr bx 2 +
and ebx 1 +
add ebx ebp +
or ebx ds:dword_4D1140[edi*4] +
mov edi ebx +
movzx ebx [esp+4+var_4] +
sub eax ebx +
jz loc_459072  +
mov [esp+1] esi +
movzx esi ds:word_4D0720[ebx+ebx] +
xor edx edx +
cmp [esp+4+var_4] 30h +
setz dl  +
shr si 2 +
mov ebp edx +
mov ebx esi +
and ebx 1 +
add ebx ebp +
shl edi 2 +
or ebx edi +
mov esi ds:dword_4D1040[ebx*4] +
mov ebx eax +
cmp esi 2 +
jz loc_45912B  +
cmp esi 3 +
jnz loc_459135  +
mov edx [esp+1] +
jmp loc_459107  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
test byte ptr ds:word_4D0720[ebx+ebx] 4 +
jz loc_459141  +
add edx 1 +
movzx ebx byte ptr [edx-1] +
test byte ptr ds:word_4D0720[ebx+ebx] 4 +
jnz loc_4590F6  +
movzx edx byte ptr [ecx] +
mov ebx 0FFFFFFFFh +
test byte ptr ds:word_4D0720[edx+edx] 4 +
cmovz ebx eax +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
mov ebx esi +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
mov ebx 1 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5 +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_4591A5  +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+1Ch] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
test ecx ecx +
jz loc_459220  +
mov esi ecx +
lea eax [ecx-1] +
neg esi  +
test edx edx +
mov ecx 0FE0h +
cmovz edx ecx +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx] edx +
call sub_459190  +
test eax eax +
jz loc_459231  +
lea edx [eax+edi+7] +
and edx esi +
mov [ebx+8] edx +
mov [ebx+0Ch] edx +
mov edx [ebx] +
mov [ebx+4] eax +
add edx eax +
mov [eax] edx +
mov [ebx+10h] edx +
mov dword ptr [eax+4] 0 +
mov eax 1 +
and byte ptr [ebx+28h] 0F9h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov esi 0FFFFFFF8h +
mov eax 7 +
mov edi 8 +
jmp loc_4591D5  +
mov [esp+1Ch+var_10] eax +
call off_4836F0  +
mov eax [esp+1Ch+var_10] +
jmp loc_4591EF  +
***
jmp sub_459250  +
***
sub esp 1Ch +
test byte ptr [eax+28h] 1 +
jnz loc_459265  +
mov eax [eax+20h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
mov ecx [eax+20h] +
mov eax [eax+24h] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+1Ch+var_10] +
and byte ptr [eax+28h] 0FEh +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+8] +
jmp loc_4591C0  +
***
mov eax [esp+4] +
mov edx [esp+10h] +
mov ecx [esp+0Ch] +
or byte ptr [eax+28h] 1 +
mov [eax+1Ch] edx +
mov edx [esp+14h] +
mov [eax+20h] edx +
mov edx [esp+18h] +
mov [eax+24h] edx +
mov edx [esp+8] +
jmp loc_4591C0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov esi [ebx+0Ch] +
sub esi [ebx+8] +
mov eax [ebx+18h] +
mov ecx [ebx+4] +
add edx esi +
mov edi esi +
shr edi 3 +
add eax edx +
lea ebp [eax+edi+64h] +
mov edi [ebx] +
cmp eax edi +
cmovnb edi eax +
cmp edi ebp +
cmovb edi ebp +
cmp edx eax +
jbe loc_459386  +
mov [esp+1Ch+var_10] ecx +
xor ebp ebp +
call off_4836F0  +
mov ecx [esp+1Ch+var_10] +
mov eax [ebx+18h] +
add edi ebp +
mov [ebx+4] ebp +
mov [ebp+4] ecx +
mov [ebx+10h] edi +
mov [ebp+0] edi +
lea edi [ebp+eax+8] +
not eax  +
and edi eax +
mov eax [ebx+8] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test byte ptr [ebx+28h] 2 +
jnz loc_459372  +
mov edx [ebx+18h] +
mov ecx [esp+1Ch+var_10] +
lea eax [ecx+edx+8] +
not edx  +
and eax edx +
cmp [ebx+8] eax +
jz loc_4593A6  +
add esi edi +
mov [ebx+8] edi +
mov [ebx+0Ch] esi +
and byte ptr [ebx+28h] 0FDh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
ja loc_459318  +
mov edx edi +
mov eax ebx +
mov [esp+1Ch+var_10] ecx +
call sub_459190  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
mov ebp eax +
jnz loc_459328  +
jmp loc_459318  +
mov eax [ecx+4] +
mov edx ecx +
mov [ebp+4] eax +
mov eax ebx +
call sub_459250  +
jmp loc_459372  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_4593DF  +
nop   +
cmp edx eax +
jbe loc_4593D8  +
cmp edx [eax] +
jbe loc_4593E2  +
mov eax [eax+4] +
test eax eax +
jnz loc_4593D0  +
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push ebx  +
mov ebx [esp+8+arg_0] +
mov edi [esp+8+arg_4] +
mov edx [ebx+4] +
test edx edx +
jnz loc_459406  +
jmp loc_459424  +
mov edx esi +
cmp edi edx +
jbe loc_459412  +
mov eax [edx] +
cmp edi eax +
nop   +
jbe loc_459430  +
mov esi [edx+4] +
mov eax ebx +
call sub_459250  +
or byte ptr [ebx+28h] 2 +
test esi esi +
jnz loc_459404  +
test edi edi +
jnz loc_459440  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+0Ch] edi +
mov [ebx+8] edi +
mov [ebx+10h] eax +
mov [ebx+4] edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+8+var_4] +
mov edx [eax+4] +
xor eax eax +
test edx edx +
jz locret_45946F  +
lea esi [esi+0] +
mov ecx [edx] +
sub ecx edx +
mov edx [edx+4] +
add eax ecx +
test edx edx +
jnz loc_459460  +
retn   +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov edi eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax ds:_environ +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_4596A6  +
mov ebx [eax] +
test ebx ebx +
jz loc_45967F  +
mov ebp eax +
xor esi esi +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call strncmp  +
test eax eax +
jnz loc_4594F2  +
cmp byte ptr [ebx+edi] 3Dh +
jz loc_4595D0  +
add ebp 4 +
mov ebx [ebp+0] +
add esi 1 +
test ebx ebx +
jnz loc_4594D0  +
lea eax ds:8[esi*4] +
mov edx ds:dword_4D9520 +
cmp [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_10] edx +
jz loc_459668  +
mov [esp+2Ch+var_2C] eax +
call malloc  +
mov ebx eax +
test ebx ebx +
jz loc_45969F  +
lea eax [edi+1] +
mov [esp+2Ch+var_14] eax +
shl esi 2 +
add eax [esp+2Ch+var_18] +
lea ebp [ebx+esi] +
mov [esp+2Ch+var_2C] eax +
call malloc  +
test eax eax +
mov [ebp+0] eax +
jz loc_45968B  +
mov ecx ds:_environ +
mov ecx [ecx] +
cmp [esp+2Ch+var_10] ecx +
jz loc_459571  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] ebx +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+var_18] +
mov byte ptr [eax+edi] 3Dh +
mov eax [esp+2Ch+var_14] +
add eax [ebp+0] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
xor ecx ecx +
mov dword ptr [ebx+esi+4] 0 +
mov eax ds:_environ +
mov ds:dword_4D9520 ebx +
mov [eax] ebx +
add esp 2Ch +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebp+0] +
mov ecx eax +
test ebx ebx +
jz loc_4594FF  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_45965E  +
mov [esp+2Ch+var_2C] ebx +
lea esi [edi+1] +
mov [esp+2Ch+var_14] ecx +
call strlen  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
add edx esi +
add eax 1 +
cmp eax edx +
jnb loc_45961E  +
mov [esp+2Ch+var_2C] edx +
call malloc  +
test eax eax +
jz loc_45969F  +
mov ecx [esp+2Ch+var_14] +
mov ebx eax +
mov [ebp+0] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_28] eax +
call memcpy  +
mov eax [ebp+0] +
mov edx [esp+2Ch+var_18] +
mov byte ptr [eax+edi] 3Dh +
mov eax [ebp+0] +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
add eax esi +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov ecx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call realloc  +
mov ebx eax +
jmp loc_459524  +
mov eax 8 +
xor esi esi +
jmp loc_459506  +
mov [esp+2Ch+var_2C] ebx +
call free  +
call ds:__imp__errno  +
mov dword ptr [eax] 0Ch +
mov ecx 0FFFFFFFFh +
jmp loc_45965E  +
mov eax ds:dword_4D9520 +
xor esi esi +
mov [esp+2Ch+var_10] eax +
mov eax 8 +
jmp loc_45951A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebx eax +
mov eax ds:_environ +
mov ebp [eax] +
mov edi [ebp+0] +
test edi edi +
jnz loc_4596EF  +
jmp loc_459727  +
add ebp 4 +
mov edi [ebp+0] +
test edi edi +
jz loc_459727  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call strncmp  +
test eax eax +
jnz loc_4596E5  +
cmp byte ptr [edi+ebx] 3Dh +
jnz loc_4596E5  +
mov edx ebp +
nop   +
lea esi [esi+0] +
mov ecx [edx+4] +
add edx 4 +
mov [edx-4] ecx +
test ecx ecx +
jnz loc_459710  +
add ebp 4 +
mov edi [ebp+0] +
test edi edi +
jnz loc_4596EF  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_4597DE  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_4597D6  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_4597C4  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_459826  +
jmp loc_45993F  +
cmp eax 5Ch +
jz loc_4598B1  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_4598B1  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_459810  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_459988  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_459910  +
mov edx esi +
jmp loc_459864  +
cmp eax 5Ch +
jz loc_4598D3  +
cmp eax 2Fh +
jz loc_4598D3  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_459858  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_459886  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_459770  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_45998F  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_45995C  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_4598CA  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_4598C0  +
cmp al 2Fh +
jz loc_4598C0  +
jmp loc_459829  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_459966  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_4598E0  +
cmp al 2Fh +
jz loc_4598E0  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_459770  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_459973  +
mov esi ebx +
jmp loc_459854  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_459920  +
cmp al 2Fh +
jnz loc_459854  +
mov edx 3 +
mov eax esi +
call sub_459770  +
test eax eax +
mov [edi] eax +
jz loc_45999D  +
add esi 3 +
mov ebp 1 +
jmp loc_459854  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_45994F  +
cmp al 2Fh +
jnz loc_459826  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_459826  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_4598E0  +
jmp loc_4598EE  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_4597B0  +
xor eax eax +
jmp loc_4598A9  +
xor eax eax +
jmp loc_4598A9  +
mov eax edi +
call sub_4597B0  +
xor eax eax +
jmp loc_4598A9  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_4598A9  +
***
push edi  +
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_4599B0  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_4599B0  +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_459EE0  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_4D0720[ecx+ecx] 88h +
jz loc_459F1A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_459F40  +
test dl dl +
jz locret_459F37  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_459F2B  +
cmp dl 2Fh +
jnz loc_459F2D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_459F21  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_459F1A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
test ebp ebp +
jz loc_459FDB  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_459FD0  +
xor eax eax +
add eax 1 +
mov edx [ebp+eax*4+0] +
test edx edx +
jnz loc_459F78  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_452ED0  +
mov edx [ebp+0] +
test edx edx +
mov edi eax +
jz loc_459FD7  +
mov ebx 4 +
xor esi esi +
jmp loc_459FA8  +
mov esi ebx +
mov ebx eax +
mov [esp+1Ch+var_1C] edx +
add esi edi +
call sub_452FA0  +
mov [esi] eax +
mov edx [ebp+ebx+0] +
lea eax [ebx+4] +
test edx edx +
jnz loc_459FA4  +
mov dword ptr [edi+ebx] 0 +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_459F8A  +
xor ebx ebx +
jmp loc_459FBF  +
xor eax eax +
jmp loc_459FC8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_45A014  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_45A006  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_459FF5  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_0] +
test esi esi +
jz loc_45A2AC  +
mov ebx [edi] +
test ebx ebx +
jnz loc_45A27C  +
jmp loc_45A2DD  +
cmp al 27h +
jz loc_45A297  +
cmp al 22h +
jz loc_45A297  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45A2AC  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45A2C0  +
movzx edx al +
movsx ebp al +
test byte ptr ds:word_4D0720[edx+edx] 40h +
jnz loc_45A297  +
cmp al 5Ch +
jnz loc_45A260  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_45A268  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45A2AC  +
add edi 4 +
jmp loc_45A253  +
xor eax eax +
nop   +
jmp loc_45A2B1  +
***
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_60] 7D0h +
mov ecx [eax] +
lea esi [esi+0] +
lea ebx [ebp+1] +
cmp ebx ecx +
jge loc_45A338  +
mov eax [esp+78h+arg_4] +
lea esi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_45A340  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_45A317  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+78h+var_60] 1 +
jz loc_45A61A  +
lea edi [eax+1] +
lea eax [esp+78h+var_48] +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] edi +
call ds:_stati64  +
test eax eax +
js loc_45A580  +
movzx edx [esp+78h+var_42] +
and dx 0F000h +
cmp dx 4000h +
jz loc_45A5E7  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_74] offset aR_2 +
call fopen  +
test eax eax +
mov edi eax +
jz loc_45A580  +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45A568  +
mov [esp+78h+var_78] edi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_5C] eax +
jz loc_45A568  +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] edi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45A568  +
mov edx [esp+78h+var_5C] +
lea eax [edx+1] +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_58] edx +
call sub_452ED0  +
mov edx [esp+78h+var_58] +
mov [esp+78h+var_6C] edi +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_70] edx +
mov [esp+78h+var_78] eax +
mov [esp+78h+var_5C] eax +
call fread  +
mov edx [esp+78h+var_58] +
cmp edx eax +
mov ecx eax +
jz loc_45A442  +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_58] eax +
call ferror  +
mov ecx [esp+78h+var_58] +
test eax eax +
jnz loc_45A568  +
mov eax [esp+78h+var_5C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_45A47D  +
test byte ptr ds:word_4D0720[eax+eax] 40h +
jz loc_45A590  +
mov eax [esp+78h+var_5C] +
jmp loc_45A473  +
test byte ptr ds:word_4D0720[edx+edx] 40h +
jz loc_45A590  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45A465  +
mov [esp+78h+var_78] 4 +
call sub_452ED0  +
mov dword ptr [eax] 0 +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_459F60  +
mov ecx [esp+78h+arg_4] +
xor edx edx +
mov [ecx] eax +
xor ecx ecx +
mov [esp+78h+var_54] eax +
mov [esp+78h+var_4C] ecx +
mov ecx [esp+78h+arg_0] +
mov eax edx +
mov [esp+78h+var_50] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+var_54] +
mov [esp+78h+var_78] eax +
call sub_452F50  +
mov ecx [esp+78h+arg_4] +
mov edx [esp+78h+var_50] +
mov [esp+78h+var_54] edx +
mov [ecx] eax +
mov ecx [esp+78h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+78h+var_70] ecx +
lea ecx [eax+esi+4] +
lea eax [eax+ebx*4] +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_78] eax +
call memmove  +
mov eax [esp+78h+arg_4] +
mov ecx [esp+78h+var_4C] +
mov ebx [esp+78h+var_58] +
add esi [eax] +
mov [esp+78h+var_70] ecx +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_78] esi +
call memcpy  +
mov eax [esp+78h+arg_0] +
mov edx [esp+78h+var_54] +
mov esi [esp+78h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [esi] eax +
mov [esp+78h+var_78] ebx +
mov ebx ebp +
call free  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_78] edi +
mov ebp ebx +
call fclose  +
mov eax [esp+78h+arg_0] +
mov ecx [eax] +
jmp loc_45A310  +
mov eax [esp+78h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_45A331  +
mov eax [esp+78h+var_5C] +
mov [esp+78h+var_78] eax +
call sub_45A020  +
mov edx [eax] +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_4] +
mov [esp+78h+var_50] edx +
mov eax [eax] +
mov [esp+78h+var_78] eax +
call sub_459F60  +
mov edx [esp+78h+var_50] +
mov ecx [esp+78h+arg_4] +
test edx edx +
mov [esp+78h+var_54] eax +
mov [ecx] eax +
jz loc_45A62A  +
mov eax [esp+78h+var_58] +
xor edx edx +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ecx ds:0[edx*4] +
jnz loc_45A5D2  +
jmp loc_45A4B5  +
mov eax [esp+78h+arg_4] +
mov eax [eax] +
mov eax [eax] +
mov [esp+78h+var_74] offset aSError@FileRef +
mov [esp+78h+var_70] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+78h+var_78] eax +
call fprintf  +
mov [esp+78h+var_78] 1 +
call sub_467B50  +
mov eax [edx] +
mov [esp+78h+var_74] offset aSErrorTooMany@ +
mov [esp+78h+var_70] eax +
jmp loc_45A5FE  +
xor ecx ecx +
jmp loc_45A4B5  +
***
jmp loc_45A640  +
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_45A662  +
mov ecx [edx] +
test ecx ecx +
jz locret_45A660  +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_45A650  +
retn   +
***
retn   +
***
retn   +
***
jmp loc_47D1E8  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [esp+18h+var_18] ebx +
call ds:_get_osfhandle  +
cmp eax 0FFFFFFFFh +
jz loc_45A730  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] eax +
call ds:SetHandleInformation  +
sub esp 0Ch +
test eax eax +
jz loc_45A730  +
test esi esi +
mov eax offset aWb +
mov edx offset aW_0 +
cmovz eax edx +
mov [ebp+arg_0] ebx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _fdopen  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [esp+18h+var_18] ebx +
call ds:_get_osfhandle  +
cmp eax 0FFFFFFFFh +
jz loc_45A7A0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] eax +
call ds:SetHandleInformation  +
sub esp 0Ch +
test eax eax +
jz loc_45A7A0  +
test esi esi +
mov eax offset aRb +
mov edx offset aR_3 +
cmovz eax edx +
mov [ebp+arg_0] ebx +
mov [ebp+arg_4] eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _fdopen  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
cmp [esp+arg_8] 1 +
mov edx [esp+arg_4] +
mov [esp+arg_4] 100h +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8080h +
mov [esp+arg_8] eax +
mov eax ds:_pipe +
mov [esp+arg_0] edx +
jmp eax  +
***
push ebx  +
sub esp 24h +
mov eax [ebp+arg_C] +
mov ebx [ebp+arg_4] +
test eax eax +
jz loc_45A80C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [esp+28h+var_24] 0FFFFFFFFh +
mov [esp+28h+var_28] ebx +
call ds:WaitForSingleObject  +
sub esp 8 +
test eax eax +
jnz loc_45A870  +
lea eax [ebp+var_C] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ebx +
call ds:GetExitCodeProcess  +
sub esp 8 +
mov [esp+28h+var_28] ebx +
call ds:CloseHandle  +
mov eax [ebp+var_C] +
sub esp 4 +
cmp eax 3 +
jz loc_45A860  +
mov edx [ebp+arg_8] +
shl eax 8 +
and eax 0FFFFh +
mov [edx] eax +
xor eax eax +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov eax [ebp+arg_8] +
mov ebx [ebp+var_4] +
mov dword ptr [eax] 16h +
xor eax eax +
leave   +
retn   +
mov [esp+28h+var_28] ebx +
call ds:CloseHandle  +
mov eax [ebp+arg_18] +
mov dword ptr [eax] 0Ah +
mov eax [ebp+arg_14] +
sub esp 4 +
mov dword ptr [eax] offset aWaitforsingleo +
mov eax 0FFFFFFFFh +
jmp loc_45A85A  +
***
mov eax [esp+arg_4] +
mov [esp+arg_0] eax +
mov eax ds:_close +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:__imp_tolower +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax] +
mov eax [esp+1Ch+arg_4] +
mov esi [eax] +
jmp loc_45A8EB  +
mov ecx [esp+1Ch+var_10] +
test bl bl +
setnz bl  +
cmp al 3Dh +
mov eax 0 +
cmovz edx eax +
cmp cl dl +
jnz loc_45A925  +
test bl bl +
jz loc_45A925  +
add ebp 1 +
movsx eax byte ptr [ebp-1] +
add esi 1 +
mov [esp+1Ch+var_1C] eax +
call edi  +
mov ecx eax +
mov ebx eax +
movsx eax byte ptr [esi-1] +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call edi  +
cmp bl 3Dh +
movzx edx al +
jnz loc_45A8D0  +
xor ecx ecx +
xor ebx ebx +
cmp al 3Dh +
mov eax 0 +
cmovz edx eax +
cmp cl dl +
jz loc_45A8E7  +
add esp 1Ch +
movzx eax cl +
pop ebx  +
sub eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov [ebp+var_28] edx +
mov edx [ebp+arg_0] +
mov [ebp+var_20] eax +
mov [ebp+var_24] ecx +
test edx edx +
jz loc_45AEC5  +
mov edi [edx] +
test edi edi +
jz loc_45AEC5  +
xor ebx ebx +
lea esi [esi+0] +
add ebx 1 +
mov esi [edx+ebx*4] +
lea ecx ds:0[ebx*4] +
test esi esi +
jnz loc_45A970  +
lea eax [ecx+1Eh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
xor esi esi +
sub esp eax +
lea edi [esp+68h+var_31] +
and edi 0FFFFFFF0h +
mov [esp+68h+var_60] ecx +
mov [esp+68h+var_64] edx +
mov [esp+68h+var_68] edi +
mov [ebp+var_2C] edx +
call memcpy  +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] edi +
mov [esp+68h+var_5C] offset sub_45A8B0 +
mov [esp+68h+var_60] 4 +
call qsort  +
mov edx [ebp+var_2C] +
mov ecx 1 +
mov [ebp+var_1C] ebx +
mov [ebp+var_2C] edi +
mov edi ecx +
mov ebx edx +
mov eax [ebx+esi*4] +
add esi 1 +
mov [esp+68h+var_68] eax +
call strlen  +
cmp esi [ebp+var_1C] +
lea edi [edi+eax+1] +
jl loc_45A9D8  +
mov ecx edi +
mov ebx [ebp+var_1C] +
xor esi esi +
mov [esp+68h+var_68] ecx +
mov edi [ebp+var_2C] +
call sub_452ED0  +
mov [ebp+var_2C] eax +
mov edx eax +
mov eax [edi+esi*4] +
add esi 1 +
mov [esp+68h+var_68] edx +
mov [esp+68h+var_64] eax +
call sub_45C6F0  +
cmp esi ebx +
lea edx [eax+1] +
jl loc_45AA06  +
mov byte ptr [eax+1] 0 +
mov esi [ebp+var_20] +
mov [esp+68h+var_68] esi +
call strlen  +
mov [esp+68h+var_64] 2Fh +
mov [esp+68h+var_68] esi +
mov edi eax +
call strchr  +
test eax eax +
jz loc_45AED9  +
mov ebx offset unk_4D121E +
mov ecx ebx +
xor esi esi +
movzx eax byte ptr [ecx] +
test al al +
jz loc_45AA91  +
cmp al 3Bh +
mov eax ecx +
jnz loc_45AA68  +
jmp loc_45AD51  +
cmp dl 3Bh +
jz loc_45AA72  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45AA63  +
mov byte ptr [ebp+var_1C] dl +
mov edx eax +
sub edx ecx +
cmp esi edx +
cmovb esi edx +
cmp byte ptr [ebp+var_1C] 3Bh +
jz loc_45AD51  +
mov ecx eax +
movzx eax byte ptr [ecx] +
test al al +
jnz loc_45AA58  +
lea eax [esi+edi+6] +
mov esi ebx +
mov [esp+68h+var_68] eax +
call sub_452ED0  +
mov [ebp+var_28] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45AEB1  +
cmp al 3Bh +
jnz loc_45AABA  +
jmp loc_45AEB1  +
cmp al 3Bh +
jz loc_45AAC4  +
add esi 1 +
movzx eax byte ptr [esi] +
test al al +
jnz loc_45AAB6  +
mov eax [ebp+var_28] +
mov edi esi +
sub edi ebx +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] eax +
call memcpy  +
mov eax [ebp+var_28] +
cmp esi ebx +
lea ecx [eax+edi] +
mov eax ecx +
jz loc_45AAED  +
add eax 1 +
mov byte ptr [ecx] 5Ch +
mov ebx [ebp+var_20] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_64] ebx +
call strcpy  +
xor eax eax +
mov ebx [ebp+var_28] +
cmp byte ptr [esi] 3Bh +
setz al  +
add esi eax +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45AB1F  +
jmp loc_45AF1A  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45AB30  +
cmp al 2Fh +
jnz loc_45AB15  +
mov byte ptr [ebx] 5Ch +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45AB1F  +
mov edi offset off_4D1254 +
mov eax offset a_com +
mov [ebp+var_1C] esi +
mov esi edi +
mov edi ebx +
mov ebx [ebp+var_28] +
jmp loc_45AB53  +
add esi 4 +
mov eax [esi] +
test eax eax +
jz loc_45AE97  +
mov byte ptr [edi] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call strcat  +
mov [esp+68h+var_50] 0 +
mov [esp+68h+var_54] 80h +
mov [esp+68h+var_58] 3 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 3 +
mov [esp+68h+var_64] 80000000h +
mov [esp+68h+var_68] ebx +
call ds:CreateFileA  +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_45AB46  +
mov [esp+68h+var_68] eax +
mov eax ds:CloseHandle +
mov [ebp-34h] eax +
call eax  +
mov eax [ebp+var_24] +
mov edx [eax] +
sub esp 4 +
test edx edx +
jz loc_45AF2D  +
add eax 4 +
xor edi edi +
mov [ebp+var_20] eax +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_45AEB9  +
mov [ebp+var_1C] 0 +
xor eax eax +
jmp loc_45ABF0  +
movzx ecx byte ptr [edx+eax+1] +
lea ebx [eax+1] +
mov esi ebx +
test cl cl +
jz loc_45AC40  +
mov eax ebx +
cmp cl 9 +
jz loc_45ABFA  +
cmp cl 20h +
jnz loc_45AC01  +
mov [ebp+var_1C] 1 +
cmp cl 22h +
jnz loc_45ABE0  +
lea ecx [eax-1] +
cmp ecx 0FFFFFFFFh +
jz loc_45AC28  +
cmp byte ptr [edx+eax-1] 5Ch +
jz loc_45AC1D  +
jmp loc_45AC28  +
cmp byte ptr [edx+ecx] 5Ch +
jnz loc_45AC28  +
sub ecx 1 +
add edi 1 +
cmp ecx 0FFFFFFFFh +
jnz loc_45AC17  +
movzx ecx byte ptr [edx+eax+1] +
add edi 1 +
lea ebx [eax+1] +
mov [ebp+var_1C] 1 +
mov esi ebx +
test cl cl +
jnz loc_45ABEE  +
mov ecx [ebp+var_1C] +
test ecx ecx +
jnz loc_45AD6B  +
xor eax eax +
add [ebp+var_20] 4 +
lea edi [edi+esi+1] +
add edi eax +
mov eax [ebp+var_20] +
mov edx [eax-4] +
test edx edx +
jnz loc_45ABC8  +
mov [esp+68h+var_68] edi +
call sub_452ED0  +
mov esi [ebp+var_24] +
mov ebx [esi] +
mov [ebp+var_31+1] eax +
test ebx ebx +
jz loc_45AF25  +
lea edi [esi+4] +
mov [ebp+var_20] edi +
mov edi eax +
movzx eax byte ptr [ebx] +
test al 0DFh +
jz loc_45AE76  +
cmp al 9 +
jz loc_45AE76  +
cmp al 22h +
jz loc_45AE76  +
xor edx edx +
jmp loc_45ACBA  +
mov ecx eax +
and ecx 0FFFFFFFDh +
cmp cl 20h +
jz loc_45AE76  +
cmp al 9 +
jz loc_45AE76  +
add edx 1 +
movzx eax byte ptr [ebx+edx] +
test al al +
jnz loc_45ACA4  +
mov [ebp+var_24] 0 +
mov edx [esi] +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_45AD7B  +
mov eax 0FFFFFFFFh +
xor ebx ebx +
mov [ebp+var_1C] eax +
mov eax ebx +
mov ebx 0FFFFFFFFh +
jmp loc_45AD12  +
movzx eax byte ptr [edx+eax] +
lea ecx [edi+1] +
mov [ebp+var_1C] ecx +
mov [edi] al +
mov edx [esi] +
lea eax [ebx+2] +
mov edi eax +
movzx ecx byte ptr [edx+ebx+2] +
add ebx 1 +
test cl cl +
jz loc_45AD80  +
mov edi [ebp+var_1C] +
cmp cl 22h +
jnz loc_45ACF0  +
cmp ebx 0FFFFFFFFh +
mov ecx ebx +
jz loc_45AE88  +
cmp byte ptr [edx+ebx] 5Ch +
mov edx edi +
jz loc_45AD38  +
jmp loc_45AD47  +
mov edi [esi] +
cmp byte ptr [edi+ecx] 5Ch +
jnz loc_45AD47  +
sub ecx 1 +
add edx 1 +
cmp ecx 0FFFFFFFFh +
mov byte ptr [edx-1] 5Ch +
jnz loc_45AD30  +
lea edi [edx+1] +
mov byte ptr [edx] 5Ch +
mov edx [esi] +
jmp loc_45ACF0  +
add eax 1 +
mov ecx eax +
jmp loc_45AA8A  +
sub eax 1 +
add edi 1 +
cmp eax 0FFFFFFFFh +
jz loc_45AD71  +
cmp byte ptr [edx+eax] 5Ch +
jz loc_45AD60  +
mov eax 2 +
jmp loc_45AC4D  +
mov [ebp+var_1C] edi +
xor edi edi +
mov eax [ebp+var_24] +
test eax eax +
jz loc_45ADC0  +
lea eax [edi-1] +
cmp eax 0FFFFFFFFh +
jz loc_45AED1  +
cmp byte ptr [edx+edi-1] 5Ch +
mov edx [ebp+var_1C] +
jz loc_45ADA8  +
jmp loc_45ADB7  +
mov ecx [esi] +
cmp byte ptr [ecx+eax] 5Ch +
jnz loc_45ADB7  +
sub eax 1 +
add edx 1 +
cmp eax 0FFFFFFFFh +
mov byte ptr [edx-1] 5Ch +
jnz loc_45ADA0  +
lea eax [edx+1] +
mov [ebp+var_1C] eax +
mov byte ptr [edx] 22h +
mov eax [ebp+var_1C] +
mov esi [ebp+var_20] +
add [ebp+var_20] 4 +
lea edi [eax+1] +
mov byte ptr [eax] 20h +
mov eax [ebp+var_20] +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_45AC85  +
mov esi [ebp+var_31+1] +
mov byte ptr [edi-1] 0 +
test esi esi +
jz loc_45AF7F  +
mov eax [ebp+arg_C] +
mov [esp+68h+var_4C] 0 +
mov [esp+68h+var_58] 1 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_44] eax +
mov eax [ebp+arg_8] +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_48] eax +
mov eax [ebp+var_2C] +
mov [esp+68h+var_50] eax +
mov eax [ebp+arg_4] +
mov [esp+68h+var_54] eax +
mov eax [ebp+var_28] +
mov [esp+68h+var_68] eax +
call ds:CreateProcessA  +
sub esp 28h +
test eax eax +
jz loc_45AF5F  +
mov eax [ebp+arg_C] +
mov eax [eax+4] +
mov [esp+68h+var_68] eax +
call dword ptr [ebp-34h]  +
mov eax [ebp+var_28] +
sub esp 4 +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [ebp+var_2C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [ebp+arg_C] +
mov eax [eax] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [edi] 22h +
add edi 1 +
mov [ebp+var_24] 1 +
jmp loc_45ACCC  +
mov edx edi +
lea edi [edx+1] +
mov byte ptr [edx] 5Ch +
mov edx [esi] +
jmp loc_45ACF0  +
mov esi [ebp+var_1C] +
movzx eax byte ptr [esi] +
test al al +
jz loc_45AF35  +
mov ebx esi +
test al al +
mov esi ebx +
jnz loc_45AAAD  +
mov eax [ebp+var_28] +
jmp loc_45AAED  +
mov eax 2 +
xor esi esi +
jmp loc_45AC4D  +
mov [ebp+var_2C] 0 +
jmp loc_45AA23  +
mov edx [ebp+var_1C] +
jmp loc_45ADB7  +
mov eax [ebp+var_20] +
mov [esp+68h+var_64] 5Ch +
mov [esp+68h+var_68] eax +
call strchr  +
test eax eax +
jnz loc_45AA48  +
mov ebx [ebp+var_28] +
test ebx ebx +
jz loc_45AA48  +
mov [esp+68h+var_68] offset aPath_0 +
call getenv  +
test eax eax +
mov ebx eax +
jnz loc_45AA4D  +
jmp loc_45AA48  +
mov ebx [ebp+var_28] +
lea esi [esi+0] +
jmp loc_45AB30  +
mov edi [ebp+var_31+1] +
jmp loc_45ADDE  +
xor edi edi +
nop   +
jmp loc_45AC65  +
mov eax [ebp+var_28] +
xor ebx ebx +
mov [esp+68h+var_68] eax +
call free  +
mov eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call free  +
mov [esp+68h+var_68] ebx +
call free  +
mov eax 0FFFFFFFFh +
jmp loc_45AE6E  +
mov eax [ebp+var_2C] +
mov [esp+68h+var_68] eax +
call free  +
mov eax [ebp+var_28] +
mov [esp+68h+var_68] eax +
call free  +
mov eax 0FFFFFFFFh +
jmp loc_45AE6E  +
mov ebx [ebp+var_28] +
jmp loc_45AF42  +
***
mov ecx [esp+arg_C] +
mov edx [esp+arg_4] +
mov eax [esp+arg_8] +
test ecx ecx +
jnz loc_45AFC6  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8301h +
mov [esp+arg_4] eax +
mov eax ds:_open +
mov [esp+arg_8] 180h +
mov [esp+arg_0] edx +
jmp eax  +
mov eax 0FFFFFFFFh +
retn   +
***
cmp [esp+arg_8] 1 +
mov edx [esp+arg_4] +
sbb eax eax +
and eax 0FFFFC000h +
add eax 8000h +
mov [esp+arg_4] eax +
mov eax ds:_open +
mov [esp+arg_0] edx +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 24Ch +
mov eax [ebp+arg_4] +
mov ebx ds:_dup +
shr eax 3 +
xor eax 1 +
and eax 1 +
mov [ebp+var_231] al +
movzx eax al +
mov esi eax +
mov [ebp+var_228] eax +
mov eax [ebp+arg_14] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_18] +
mov [esp+258h+var_258] eax +
call ebx  +
test esi esi +
mov [ebp+var_220] eax +
jnz loc_45B1F2  +
mov eax [ebp+var_21C] +
mov ebx ds:_get_osfhandle +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_22C] eax +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ebx  +
mov ebx eax +
mov esi eax +
lea eax [ebp+var_1B8] +
mov [ebp+var_1B8] 94h +
mov [esp+258h+var_258] eax +
call ds:GetVersionExA  +
mov [ebp+var_224] 0 +
sub esp 4 +
cmp [ebp+var_1A8] 1 +
jz loc_45B10D  +
mov [esp+258h+var_240] 0 +
mov [esp+258h+var_244] 80h +
mov [esp+258h+var_248] 3 +
mov [esp+258h+var_24C] 0 +
mov [esp+258h+var_250] 2 +
mov [esp+258h+var_254] 40000000h +
mov [esp+258h+var_258] offset aConout +
call ds:CreateFileA  +
mov [ebp+var_224] 8000000h +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_45B10D  +
mov [esp+258h+var_258] eax +
call ds:CloseHandle  +
mov [ebp+var_224] 0 +
sub esp 4 +
xor eax eax +
mov ecx 11h +
mov edx [ebp+arg_4] +
lea edi [ebp+var_1FC] +
stos   +
mov eax [ebp+var_22C] +
mov ecx [ebp+arg_C] +
shr edx 1 +
and edx 1 +
mov [ebp+var_1C4] eax +
lea eax [ebp+var_20C] +
mov [esp+258h+var_24C] eax +
lea eax [ebp+var_1FC] +
mov [esp+258h+var_250] eax +
mov eax [ebp+var_224] +
mov [ebp+var_1BC] ebx +
mov [ebp+var_1FC] 44h +
mov [ebp+var_1D0] 100h +
mov [esp+258h+var_254] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1C0] esi +
mov [esp+258h+var_258] eax +
mov eax [ebp+arg_8] +
call sub_45A940  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45B271  +
mov eax [ebp+arg_14] +
test eax eax +
jnz loc_45B260  +
cmp [ebp+arg_18] 1 +
jz loc_45B1A7  +
mov eax [ebp+arg_18] +
mov [esp+258h+var_258] eax +
call ds:_close  +
cmp [ebp+var_230] 2 +
jnz loc_45B238  +
mov eax [ebp+var_21C] +
mov [esp+258h+var_258] eax +
call ds:_close  +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ds:_close  +
mov edx [ebp+var_228] +
test edx edx +
jz loc_45B1E8  +
mov eax [ebp+arg_1C] +
mov [esp+258h+var_258] eax +
call ds:_close  +
lea esp [ebp-0Ch] +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_1C] +
mov [esp+258h+var_258] eax +
call ebx  +
mov ebx ds:_get_osfhandle +
mov edi eax +
mov eax [ebp+var_21C] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [ebp+var_22C] eax +
mov eax [ebp+var_220] +
mov [esp+258h+var_258] eax +
call ebx  +
mov [esp+258h+var_258] edi +
mov esi eax +
call ebx  +
mov ebx eax +
mov eax [ebp+arg_1C] +
mov [ebp+arg_1C] edi +
mov [ebp+var_230] eax +
jmp loc_45B079  +
cmp [ebp+var_231] 0 +
jz loc_45B1B4  +
mov eax [ebp+var_230] +
mov [esp+258h+var_258] eax +
call ds:_close  +
jmp loc_45B1B4  +
mov eax [ebp+arg_14] +
mov [esp+258h+var_258] eax +
call ds:_close  +
jmp loc_45B195  +
mov eax ds:__imp__errno +
mov [ebp+var_23C] eax +
call eax  +
mov eax [eax] +
mov [esp+1ECh+var_1E8] 0 +
mov [ebp+var_238] eax +
mov eax [ebp+arg_8] +
mov [esp+1ECh+var_1EC] eax +
call ds:_open  +
test eax eax +
mov edi eax +
js loc_45B2D5  +
lea esi [ebp+var_121] +
mov [esp+1ECh+var_1E4] 108h +
mov [esp+1ECh+var_1E8] esi +
mov [esp+1ECh+var_1EC] eax +
call ds:_read  +
mov [esp+1ECh+var_1EC] edi +
mov [ebp+var_22C] eax +
call ds:_close  +
mov edx [ebp+var_22C] +
cmp edx 3 +
jg loc_45B300  +
mov eax [ebp+var_23C] +
call eax  +
mov ecx [ebp+var_238] +
mov [eax] ecx +
mov eax [ebp+arg_28] +
mov dword ptr [eax] 2 +
mov eax [ebp+arg_24] +
mov dword ptr [eax] offset aCreateprocess +
jmp loc_45B1B4  +
mov [esp+1ECh+var_1E8] 0Ah +
mov [esp+1ECh+var_1EC] esi +
mov byte ptr [ebp+edx+var_121] 0 +
call strchr  +
test eax eax +
jz loc_45B2D5  +
mov edi offset asc_4D1231 +
mov ecx 2 +
cmps   +
jnz loc_45B2D5  +
lea esi [esi+0] +
mov byte ptr [eax] 0 +
sub eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jz loc_45B330  +
and edx 0FFFFFFFBh +
cmp dl 9 +
jz loc_45B330  +
movzx eax byte ptr [ebp+var_121+2] +
cmp al 20h +
jz loc_45B360  +
cmp al 9 +
setz al  +
test al al +
lea edi [ebp+var_121+2] +
jz loc_45B374  +
lea edi [ebp+var_121+2] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 9 +
jz loc_45B366  +
cmp al 20h +
jz loc_45B366  +
mov eax edi +
jmp loc_45B37B  +
mov byte ptr [eax] 5Ch +
mov [esp+1ECh+var_1E8] 2Fh +
mov [esp+1ECh+var_1EC] eax +
call strchr  +
test eax eax +
jnz loc_45B378  +
mov eax [ebp+arg_C] +
mov esi [eax] +
test esi esi +
jz loc_45B447  +
lea esi [esi+0] +
add eax 4 +
mov ecx [eax] +
test ecx ecx +
jnz loc_45B3A0  +
sub eax [ebp+arg_C] +
sar eax 2 +
lea eax ds:8[eax*4] +
lea ecx [eax-4] +
mov [ebp+var_22C] ecx +
mov [esp+1ECh+var_1EC] eax +
call sub_452ED0  +
mov ecx [ebp+var_22C] +
mov [eax] edi +
mov esi eax +
mov [esp+1ECh+var_1E4] ecx +
mov ecx [ebp+arg_C] +
lea eax [eax+4] +
mov [esp+1ECh+var_1EC] eax +
mov [esp+1ECh+var_1E8] ecx +
call memcpy  +
mov [esp+1ECh+var_1EC] edi +
mov [esp+1ECh+var_1E8] 5Ch +
call strrchr  +
lea ecx [ebp+var_20C] +
mov edx 1 +
mov [esp+1ECh+var_1E0] ecx +
lea ecx [ebp+var_1FC] +
mov [esp+1ECh+var_1E4] ecx +
mov ecx [ebp+var_224] +
mov [esp+1ECh+var_1E8] ecx +
mov ecx [ebp+arg_10] +
add eax 1 +
cmovz eax edi +
mov [esp+1ECh+var_1EC] ecx +
mov ecx esi +
call sub_45A940  +
mov [esp+1ECh+var_1EC] esi +
mov edi eax +
call free  +
cmp edi 0FFFFFFFFh +
jz loc_45B2D5  +
mov ebx edi +
jmp loc_45B18A  +
mov [ebp+var_22C] 4 +
mov eax 8 +
jmp loc_45B3BF  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] offset off_4D1280 +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_45B680  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+1Ch] +
cmp [ebx+2Ch] eax +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] ecx +
jz loc_45B556  +
mov edx [ebx+24h] +
shl eax 2 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_452F50  +
test byte ptr [ebx] 1 +
mov [ebx+24h] eax +
jnz loc_45B563  +
mov esi [ebx+2Ch] +
cmp esi [ebx+1Ch] +
jge loc_45B580  +
mov edi esi +
mov ebp 1 +
shl edi 4 +
mov eax [ebx+44h] +
mov edx [eax+10h] +
mov eax [ebx+28h] +
lea ecx [eax+edi] +
test eax eax +
mov eax 0 +
cmovnz eax ecx +
mov ecx [ebx+20h] +
mov ecx [ecx+esi*4] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+24h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_18] ecx +
mov ecx [esp+3Ch+arg_0] +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_2C] ecx +
call edx  +
test eax eax +
mov eax 0 +
cmovs ebp eax +
add esi 1 +
add edi 10h +
cmp esi [ebx+1Ch] +
jl loc_45B4E1  +
mov [ebx+2Ch] esi +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
mov edx [ebx+28h] +
shl eax 4 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call sub_452F50  +
mov [ebx+28h] eax +
jmp loc_45B4CB  +
mov ebp 1 +
jmp loc_45B549  +
***
push ebx  +
sub esp 10h +
test ecx ecx +
jz loc_45B5C8  +
and edx 4 +
jz loc_45B5BF  +
mov eax [eax] +
test eax eax +
jz loc_45B632  +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_10] eax +
call sub_4530C0  +
mov ecx eax +
add esp 10h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [eax] +
test ebx ebx +
jz loc_45B650  +
mov [esp+10h+var_10] ebx +
call strlen  +
cmp eax 5 +
jle loc_45B5F1  +
lea esi [ebx+eax-6] +
mov edi offset aXxxxxx +
mov ecx 7 +
cmps   +
jz loc_45B640  +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_C] offset aXxxxxx +
call sub_4530C0  +
mov ebx eax +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ebx +
call sub_467B70  +
test eax eax +
js loc_45B663  +
mov [esp+10h+var_10] eax +
call _close_0  +
add esp 10h +
mov ecx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] ecx +
call sub_45C290  +
mov ecx eax +
jmp loc_45B5BF  +
mov [esp+10h+var_10] ebx +
call sub_452FA0  +
mov ebx eax +
jmp loc_45B60B  +
mov [esp+10h+var_10] 0 +
call sub_45C290  +
mov ecx eax +
jmp loc_45B5BF  +
mov [esp+10h+var_10] ebx +
call free  +
xor ecx ecx +
jmp loc_45B5BF  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4Ch +
call sub_452ED0  +
mov edx [esp+1Ch+arg_0] +
mov [eax] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0FFFFFFFFh +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_C] +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov dword ptr [eax+40h] 0 +
mov [eax+44h] edx +
mov dword ptr [eax+48h] 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_0] +
mov eax [ebx+30h] +
test eax eax +
jz loc_45B74A  +
mov [esp+5Ch+var_5C] eax +
call fclose  +
cmp eax 0FFFFFFFFh +
jz loc_45B950  +
mov dword ptr [ebx+30h] 0 +
mov esi [ebx+10h] +
test esi esi +
jz loc_45B780  +
mov eax [esp+5Ch+arg_1C] +
xor edx edx +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_5C] eax +
mov eax ebx +
call sub_45B490  +
test eax eax +
jnz loc_45B830  +
mov eax [esp+5Ch+var_18] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebx+0Ch] +
test esi esi +
js loc_45B930  +
test byte ptr [esp+5Ch+arg_4] 1 +
jz loc_45B876  +
mov edx [esp+5Ch+arg_14] +
xor ebp ebp +
test edx edx +
jz loc_45BBB7  +
test byte ptr [esp+5Ch+arg_4] 4 +
mov edi 0FFFFFFFFh +
jnz loc_45BAB0  +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
test edi edi +
js loc_45BD10  +
test ebp ebp +
jnz loc_45B9F6  +
mov eax [esp+5Ch+arg_18] +
test eax eax +
jz loc_45BC9C  +
test byte ptr [esp+5Ch+arg_4] 40h +
jnz loc_45B960  +
cmp dword ptr [ebx+18h] 0FFFFFFFFh +
jz loc_45BADE  +
mov eax [esp+5Ch+arg_1C] +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
xor ebp ebp +
mov [esp+5Ch+var_18] offset aPex_stderr_to_ +
mov dword ptr [eax] 0 +
mov eax edi +
not eax  +
shr eax 1Fh +
mov [esp+5Ch+var_1D] 0 +
and byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
jmp loc_45B997  +
mov eax [ebx+44h] +
mov ecx [ebx+10h] +
mov edx [eax] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_5C] ebx +
shr eax 4 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
call edx  +
test eax eax +
mov esi eax +
js loc_45BBC1  +
mov ecx [ebx+14h] +
test ecx ecx +
jnz loc_45BA96  +
test byte ptr [esp+5Ch+arg_4] 1 +
mov dword ptr [ebx+10h] 0 +
jnz loc_45B796  +
test byte ptr [ebx] 2 +
jnz loc_45BA10  +
mov edx [esp+5Ch+arg_4] +
lea eax [ebx+8] +
mov ecx [esp+5Ch+arg_14] +
call sub_45B590  +
test eax eax +
mov edx eax +
jz loc_45BBDF  +
xor eax eax +
cmp [esp+5Ch+arg_14] edx +
setnz al  +
test byte ptr [ebx] 4 +
mov edi eax +
jz loc_45BA4B  +
mov [ebx+10h] edx +
xor ebp ebp +
mov [ebx+14h] eax +
mov eax [ebx+44h] +
mov [esp+5Ch+var_28] edx +
mov ecx [eax+4] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] ebx +
shr eax 8 +
and eax 1 +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_4] +
shr eax 5 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
call ecx  +
mov edx [esp+5Ch+var_28] +
mov [esp+5Ch+arg_14] edx +
test eax eax +
mov edi eax +
jns loc_45B7C6  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov [esp-10h+arg_3B] 0 +
mov [esp-10h+arg_30] 0 +
mov [esp-10h+arg_34] 0FFFFFFFFh +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenTemporaryO +
mov [edx] eax +
jmp loc_45B997  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aPipelineAlread +
mov dword ptr [eax] 0 +
jmp loc_45B770  +
mov [esp+5Ch+var_18] offset aClosingPipelin +
jmp loc_45B770  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aBothErrnameAnd +
mov dword ptr [eax] 0 +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
xor ebp ebp +
and byte ptr [esp+5Ch+var_28] al +
mov [esp+5Ch+var_1D] 0 +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
test esi esi +
jz loc_45B9AA  +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
cmp byte ptr [esp+5Ch+var_28] 0 +
jz loc_45B9C0  +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
cmp [esp+5Ch+var_1D] 0 +
jz loc_45B9DA  +
mov eax [ebx+44h] +
mov edi [esp+5Ch+var_24] +
mov eax [eax+0Ch] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_5C] ebx +
call eax  +
test ebp ebp +
jz loc_45B770  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_45B770  +
mov eax [esp+5Ch+arg_14] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_45B7CE  +
mov eax [ebx+44h] +
mov edx [eax+14h] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 5 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
lea eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
js loc_45BC1D  +
mov eax [esp+5Ch+var_14] +
xor ebp ebp +
mov edi [esp+5Ch+var_10] +
mov [ebx+0Ch] eax +
jmp loc_45B7BE  +
mov eax [ebx+3Ch] +
mov ecx [ebx+40h] +
mov [esp+5Ch+var_28] edx +
add eax 1 +
mov [ebx+3Ch] eax +
shl eax 2 +
mov [esp+5Ch+var_5C] ecx +
mov [esp+5Ch+var_58] eax +
call sub_452F50  +
mov edx [esp+5Ch+var_28] +
test edi edi +
mov ecx edx +
mov [ebx+40h] eax +
jnz loc_45BA88  +
mov [esp+5Ch+var_5C] edx +
call sub_452FA0  +
mov edx [esp+5Ch+var_28] +
mov ecx eax +
mov eax [ebx+40h] +
mov edi [ebx+3Ch] +
mov [eax+edi*4-4] ecx +
xor eax eax +
jmp loc_45B8B3  +
mov eax [ebx+10h] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov dword ptr [ebx+14h] 0 +
jmp loc_45B864  +
mov eax [ebx+8] +
mov bp 1 +
mov edx [esp+5Ch+arg_14] +
mov [esp+5Ch+var_54] 0 +
mov [esp+5Ch+var_5C] eax +
mov [esp+5Ch+var_58] edx +
call sub_4530C0  +
mov [esp+5Ch+arg_14] eax +
jmp loc_45B7B7  +
mov eax [ebx+44h] +
mov edx [eax+4] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 9 +
and eax 1 +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_4] +
shr eax 7 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_18] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
mov [esp+5Ch+var_24] eax +
js loc_45BC64  +
test byte ptr [ebx] 2 +
mov eax 0FFFFFFFFh +
jz loc_45BB29  +
mov eax [ebx+0Ch] +
mov edx [ebx+44h] +
mov ecx [esp+5Ch+arg_1C] +
mov edx [edx+8] +
mov [esp+5Ch+var_3C] eax +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
lea ecx [esp+5Ch+var_18] +
mov [esp+5Ch+var_38] ecx +
mov [esp+5Ch+var_44] edi +
mov [esp+5Ch+var_40] eax +
mov eax [esp+5Ch+arg_10] +
mov [esp+5Ch+var_48] esi +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_C] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
mov ebp eax +
jns loc_45BC38  +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz byte ptr [esp+5Ch+var_28]  +
and byte ptr [esp+5Ch+var_28] al +
mov eax [esp+5Ch+var_24] +
cmp eax 2 +
not eax  +
setnz [esp+5Ch+var_1D]  +
xor ebp ebp +
shr eax 1Fh +
and [esp+5Ch+var_1D] al +
jmp loc_45B997  +
mov edi 1 +
jmp loc_45B7B7  +
call ds:__imp__errno  +
mov esi [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenTemporaryF +
mov [esi] eax +
jmp loc_45B770  +
mov eax [esp+5Ch+arg_1C] +
mov [esp+5Ch+var_18] offset aCouldNotCreate +
mov [esp+5Ch+arg_14] 0 +
mov dword ptr [eax] 0 +
mov [esp+5Ch+var_1D] 0 +
xor ebp ebp +
mov edi 0FFFFFFFFh +
mov byte ptr [esp+5Ch+var_28] 0 +
mov [esp+5Ch+var_24] 0FFFFFFFFh +
jmp loc_45B997  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aPipe +
mov [edx] eax +
jmp loc_45BBFF  +
mov eax [ebx+1Ch] +
mov edx [ebx+20h] +
add eax 1 +
mov [ebx+1Ch] eax +
shl eax 2 +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_58] eax +
call sub_452F50  +
mov edx [ebx+1Ch] +
mov [ebx+20h] eax +
mov [eax+edx*4-4] ebp +
xor eax eax +
jmp loc_45B774  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov [esp-10h+arg_3B] 0 +
mov eax [eax] +
mov [esp-10h+arg_40] offset aOpenErrorFile +
mov [edx] eax +
mov eax edi +
not eax  +
shr eax 1Fh +
cmp edi 1 +
setnz [esp-10h+arg_30]  +
xor ebp ebp +
and [esp-10h+arg_30] al +
jmp loc_45B997  +
cmp dword ptr [ebx+18h] 0FFFFFFFFh +
jnz loc_45B7F2  +
test byte ptr [esp+5Ch+arg_4] 40h +
mov [esp+5Ch+var_24] 2 +
jz loc_45BB1C  +
mov eax [ebx+44h] +
mov edx [eax+14h] +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ebx +
shr eax 7 +
and eax 1 +
mov [esp+5Ch+var_54] eax +
lea eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_58] eax +
call edx  +
test eax eax +
js loc_45BCF2  +
mov eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_24] eax +
mov eax [esp+5Ch+var_14] +
mov [ebx+18h] eax +
jmp loc_45BB1C  +
call ds:__imp__errno  +
mov edx [esp-10h+arg_88] +
mov eax [eax] +
mov [esp-10h+arg_40] offset aPipe +
mov [edx] eax +
jmp loc_45B975  +
mov edx [esp+5Ch+arg_14] +
jmp loc_45B8BB  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_14] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45B720  +
add esp 2Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov ecx [ebx+1Ch] +
test ecx ecx +
jnz loc_45BD8E  +
mov edx [ebx+0Ch] +
test edx edx +
jg loc_45BD8E  +
mov eax [ebx+10h] +
test eax eax +
jz loc_45BDA2  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+28h] +
lea eax [ebx+8] +
mov edx [esp+24h] +
call sub_45B590  +
test eax eax +
mov esi eax +
jz loc_45BDF2  +
test byte ptr [esp+24h] 20h +
mov edx offset aW_1 +
mov eax offset aWb_0 +
mov [esp] esi +
cmovz eax edx +
mov [esp+4] eax +
call fopen  +
test eax eax +
jz loc_45BDF6  +
xor edx edx +
cmp esi [esp+28h] +
mov [ebx+30h] eax +
mov [ebx+10h] esi +
setnz dl  +
mov [ebx+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_45BD9C  +
***
mov [esp] esi +
call free  +
xor eax eax +
jmp loc_45BD9C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
mov edi [ebx+1Ch] +
test edi edi +
jg loc_45BE34  +
test byte ptr [ebx] 2 +
jz loc_45BE34  +
mov esi [ebx+0Ch] +
test esi esi +
jg loc_45BE34  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_45BE50  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+34h] +
xor ecx ecx +
mov eax [ebx+44h] +
test edx edx +
setnz cl  +
mov eax [eax+14h] +
mov esi ecx +
lea edx [esp+18h] +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_45BEA1  +
mov eax [ebx+44h] +
mov edx [esp+1Ch] +
mov eax [eax+1Ch] +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_45BEA5  +
mov edx [esp+18h] +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_45BE42  +
***
mov esi ds:__imp__errno +
call esi  +
mov edx [esp+18h] +
mov edi [eax] +
mov eax [ebx+44h] +
mov eax [eax+0Ch] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
mov eax [ebx+44h] +
mov edx [esp+1Ch] +
mov eax [eax+0Ch] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
call esi  +
mov [eax] edi +
xor eax eax +
jmp loc_45BE42  +
***
push ebx  +
sub esp 28h +
mov ebx [esp+30h] +
mov eax [ebx+10h] +
test eax eax +
jz loc_45BF43  +
lea eax [esp+1Ch] +
xor edx edx +
mov [esp] eax +
lea ecx [esp+18h] +
mov eax ebx +
call sub_45B490  +
test eax eax +
jz loc_45BF87  +
mov edx [esp+34h] +
mov eax offset aRb_1 +
test edx edx +
mov edx offset aR_4 +
cmovz eax edx +
mov edx [ebx+10h] +
mov [esp+4] eax +
mov [esp] edx +
call fopen  +
mov ecx [ebx+14h] +
test ecx ecx +
mov [ebx+34h] eax +
jnz loc_45BF70  +
mov dword ptr [ebx+10h] 0 +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [ebx+0Ch] +
test eax eax +
jle loc_45BF97  +
mov edx [ebx+44h] +
mov ecx [esp+34h] +
mov edx [edx+18h] +
mov [esp] ebx +
mov [esp+8] ecx +
mov [esp+4] eax +
call edx  +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov [ebx+34h] eax +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [ebx+10h] +
mov [esp] eax +
call free  +
mov eax [ebx+34h] +
mov dword ptr [ebx+14h] 0 +
jmp loc_45BF37  +
***
call ds:__imp__errno  +
mov edx [esp+1Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_45BF3E  +
***
xor eax eax +
jmp loc_45BF3E  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+18h] +
test eax eax +
jle loc_45BFD5  +
mov edx [ebx+44h] +
mov ecx [esp+24h] +
mov edx [edx+18h] +
mov [esp+8] ecx +
mov [esp+4] eax +
mov [esp] ebx +
call edx  +
mov dword ptr [ebx+18h] 0FFFFFFFFh +
mov [ebx+38h] eax +
add esp 18h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_45BFD0  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [ebx+24h] +
test eax eax +
jz loc_45C043  +
mov eax [ebx+1Ch] +
cmp eax esi +
jl loc_45C022  +
mov eax [ebx+24h] +
shl esi 2 +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_20] edi +
mov [esp+20h+var_1C] eax +
call memcpy  +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
sub esi eax +
shl esi 2 +
lea eax [edi+eax*4] +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] 0 +
mov [esp+20h+var_20] eax +
call memset  +
mov esi [ebx+1Ch] +
jmp loc_45C000  +
lea eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] eax +
lea ecx [esp+20h+var_8] +
mov eax ebx +
call sub_45B490  +
test eax eax +
jnz loc_45BFF9  +
jmp loc_45C01B  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
mov esi [esp+20h+arg_4] +
mov edi [esp+20h+arg_8] +
mov eax [ebx+24h] +
test eax eax +
jz loc_45C0D4  +
mov eax [ebx+28h] +
test eax eax +
jz loc_45C0D0  +
mov edx [ebx+1Ch] +
cmp edx esi +
jl loc_45C0A6  +
shl esi 4 +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edi +
call memcpy  +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
sub esi edx +
shl edx 4 +
shl esi 4 +
add edx edi +
mov [esp+20h+var_18] esi +
mov [esp+20h+var_1C] 0 +
mov [esp+20h+var_20] edx +
call memset  +
mov esi [ebx+1Ch] +
mov eax [ebx+28h] +
jmp loc_45C087  +
xor eax eax +
jmp loc_45C09F  +
lea eax [esp+20h+var_4] +
xor edx edx +
mov [esp+20h+var_20] eax +
lea ecx [esp+20h+var_8] +
mov eax ebx +
call sub_45B490  +
test eax eax +
jnz loc_45C079  +
jmp loc_45C09F  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_45C10F  +
mov edx [ebx+44h] +
mov edx [edx+0Ch] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] ebx +
call edx  +
mov eax [ebx+18h] +
test eax eax +
jle loc_45C125  +
mov edx [ebx+44h] +
mov edx [edx+0Ch] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] ebx +
call edx  +
mov eax [ebx+34h] +
test eax eax +
jz loc_45C134  +
mov [esp+24h+var_24] eax +
call fclose  +
mov eax [ebx+38h] +
test eax eax +
jz loc_45C143  +
mov [esp+24h+var_24] eax +
call fclose  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_45C1E0  +
mov edx [ebx+14h] +
test edx edx +
jnz loc_45C1D0  +
mov eax [ebx+20h] +
xor esi esi +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+24h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+28h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+3Ch] +
test eax eax +
jle loc_45C1AF  +
nop   +
mov eax [ebx+40h] +
mov eax [eax+esi*4] +
mov [esp+24h+var_24] eax +
call remove  +
mov eax [ebx+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+24h+var_24] eax +
call free  +
cmp [ebx+3Ch] esi +
jg loc_45C180  +
mov eax [ebx+40h] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [ebx+44h] +
mov eax [eax+20h] +
test eax eax +
jz loc_45C1BE  +
mov [esp+24h+var_24] ebx +
call eax  +
mov [esp+24h+arg_0] ebx +
add esp 24h +
pop ebx  +
pop esi  +
jmp free  +
mov eax [ebx+10h] +
mov [esp+24h+var_24] eax +
call free  +
jmp loc_45C155  +
and dword ptr [ebx] 0FFFFFFFEh +
mov edx 1 +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_24] eax +
lea ecx [esp+24h+var_C] +
mov eax ebx +
call sub_45B490  +
jmp loc_45C14E  +
***
mov eax ds:dword_4D9524 +
test eax eax +
jz loc_45C210  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_45C248  +
mov eax ds:dword_4D9524 +
test eax eax +
jz loc_45C27C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_452ED0  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_4D9524 eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_45C238  +
mov eax ds:dword_4D9524 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_4D9524 0 +
mov [esp+1Ch+var_1C] offset a__3 +
call sub_452FA0  +
mov ds:dword_4D9524 eax +
jmp loc_45C241  +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:dword_4D9588 +
test esi esi +
jnz loc_45C3B0  +
xor eax eax +
mov edx offset unk_4D14C0 +
mov ecx [edx] +
cmp eax ecx +
lea ebx [ecx+1] +
cmovle eax ebx +
add edx 0Ch +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_45C397  +
mov ds:dword_4D9588 eax +
mov ebx ds:dword_4D958C +
test ebx ebx +
jz loc_45C424  +
mov edx ds:dword_4D9580 +
test edx edx +
jz loc_45C3D0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx ds:dword_4D9588 +
lea edi ds:0[ebx*4] +
mov [esp+10h+var_10] edi +
call malloc  +
test eax eax +
mov esi eax +
mov ds:dword_4D9580 eax +
jz loc_45C3C4  +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] eax +
call memset  +
mov edx offset unk_4D14C0 +
mov ds:dword_4D9584 ebx +
nop   +
mov ecx [edx] +
add edx 0Ch +
mov ebx [edx-4] +
mov eax [edx+4] +
mov [esi+ecx*4] ebx +
test eax eax +
jnz loc_45C410  +
jmp loc_45C3C4  +
mov eax ds:dword_4D9588 +
lea ebx ds:0[eax*4] +
mov [esp+10h+var_10] ebx +
call malloc  +
test eax eax +
mov esi eax +
mov ds:dword_4D958C eax +
jz loc_45C3BA  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] eax +
call memset  +
mov ecx offset aSigint +
mov edx offset unk_4D14C0 +
mov ebx [edx] +
add edx 0Ch +
mov [esi+ebx*4] ecx +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_45C465  +
jmp loc_45C3BA  +
***
sub esp 0Ch +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45C4A5  +
mov eax ds:dword_4D9588 +
cmp ds:dword_4D9584 eax +
cmovge eax ds:dword_4D9584 +
add esp 0Ch +
sub eax 1 +
retn   +
***
call sub_45C380  +
jmp loc_45C48C  +
***
mov eax ds:dword_4D958C +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_45C510  +
test ebx ebx +
js loc_45C504  +
cmp ebx ds:dword_4D9584 +
jge loc_45C504  +
mov eax ds:dword_4D9580 +
test eax eax +
jz loc_45C4E2  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_45C4E2  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSignalD +
mov [esp+18h+var_18] offset unk_4D9560 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D9560 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
call sub_45C380  +
jmp loc_45C4C1  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4D958C +
mov ebx [esp+20h] +
test eax eax +
jz loc_45C580  +
test ebx ebx +
js loc_45C574  +
cmp ebx ds:dword_4D9588 +
jge loc_45C574  +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45C552  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_45C552  +
add esp 18h +
pop ebx  +
retn   +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aSignalD +
mov dword ptr [esp] offset unk_4D9540 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D9540 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_45C380  +
jmp loc_45C531  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
test ebp ebp +
jz loc_45C5DE  +
mov eax ds:dword_4D958C +
test eax eax +
jz loc_45C5EA  +
mov esi ds:dword_4D9588 +
cmp esi 0 +
jle loc_45C5DE  +
mov edi ds:dword_4D958C +
xor ebx ebx +
nop   +
lea esi [esi+0] +
mov eax [edi+ebx*4] +
test eax eax +
jz loc_45C5D7  +
mov [esp+4] eax +
mov [esp] ebp +
call strcmp  +
test eax eax +
jz loc_45C5E0  +
add ebx 1 +
cmp ebx esi +
jnz loc_45C5C0  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_45C380  +
jmp loc_45C5A8  +
***
jmp loc_45C600  +
push ebx  +
sub esp 18h +
mov eax ds:dword_4D958C +
mov ebx [esp+20h] +
test eax eax +
jz loc_45C673  +
test ebx ebx +
jle loc_45C61D  +
cmp ebx ds:dword_4D9584 +
jl loc_45C642  +
mov eax [esp+24h] +
mov dword ptr [esp+4] offset aSUnknownSignal +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D9580 +
mov eax [eax+ebx*4] +
mov dword ptr [esp+4] offset aSS_4 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 18h +
pop ebx  +
retn   +
***
call sub_45C380  +
jmp loc_45C611  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_45C6E0  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] esi +
call sub_452ED0  +
cmp esi ebx +
mov edi eax +
jbe loc_45C76A  +
sub esi ebx +
lea eax [eax+ebx] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov [esp+1Ch+arg_8] ebx +
mov [esp+1Ch+arg_4] ebp +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_45CA4C  +
shl edx 3 +
cmp ebx edx +
ja loc_45CA43  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_45CA6B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_45CA87  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_45C945  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_45CA22  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_45C938  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_4D1580[eax] +
mov edx ds:dword_4D158C[eax] +
mov eax ds:dword_4D1580[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_45CA0F  +
cmp eax 1 +
jz loc_45CAC1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_45C9FA  +
cmp edx 1 +
jz loc_45CAC1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_45C9F1  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_45C945  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_45CA91  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_45C8ED  +
call sub_45C820  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_4D1580[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_45C8FC  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_45C918  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_45CA3B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_0] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_45C820  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_4D1580[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_45CB93  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_45CB80  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_45CB93  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_45C820  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4D1580[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_45CC2F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_45CC20  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_45CC2F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45CBA0  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset sub_452F00 +
mov [esp+2Ch+var_1C] offset sub_452F00 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45CBA0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset calloc +
mov dword ptr [esp+10h] offset calloc +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_45CBA0  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_45CD81  +
sub ebx 1 +
js loc_45CD81  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_45CD67  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_45CD6C  +
mov eax [edi+28h] +
test eax eax +
jz loc_45CDA0  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_45CDC2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_45CE0B  +
lea esi [esi+0] +
sub ebx 1 +
js loc_45CE0B  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_45CDF0  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_45CDF5  +
cmp edi 40000h +
jbe loc_45CE60  +
mov eax 100h +
call sub_45C820  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4D1580[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_45CE90  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_45CEA8  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_45CE77  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_45CE37  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_45CE37  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_45CE55  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_4D1580[eax] +
mov eax ds:dword_4D1580[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_45CFE0  +
cmp edx 1 +
jz loc_45CFF0  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_45CFD4  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_4D1580[eax] +
mov eax ds:dword_4D1580[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_45CFE0  +
cmp ebp 1 +
jz loc_45CF93  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45CFD2  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45CF93  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_45CF64  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_45CEC0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_45D1B1  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_4D1580[eax] +
mov ecx ds:dword_4D158C[eax] +
mov eax ds:dword_4D1580[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_45D1DD  +
cmp eax 1 +
jz loc_45D0F2  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_45D1A4  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_4D1580[edx] +
mov ecx ds:dword_4D158C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_4D1580[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_45D180  +
cmp ecx 1 +
jz loc_45D170  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45D1A4  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45D125  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_45D125  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_45D1D9  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_45D1E8  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_45D04D  +
mov eax ebx +
call sub_45C8B0  +
test eax eax +
jz loc_45D1D9  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_45D04D  +
xor eax eax +
jmp loc_45D19C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_45D1D9  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_45D030  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_45D030  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_45D287  +
mov edx [ebx+8] +
test edx edx +
jz loc_45D27D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_45D240  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_45D337  +
add ebx 4 +
cmp esi ebx +
jbe loc_45D349  +
cmp dword ptr [ebx] 1 +
jbe loc_45D330  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_45D330  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_45D360  +
***
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_45D384  +
cmp edx 20h +
ja loc_45D398  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_45D310  +
mov eax ebx +
call sub_45C8B0  +
jmp loc_45D384  +
***
jmp loc_45D3B0  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_45D3E1  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz locret_45D414  +
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_45D400  +
retn   +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_45D606  +
cmp esi 0Bh +
jbe loc_45D52E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_45D450  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_45D59C  +
jmp ds:off_4D1544[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_45D52E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_45D615  +
mov ebx ecx +
mov ecx edi +
jmp loc_45D52E  +
***
cmp edx 4Fh +
ja loc_45D6F5  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4D1760[edx*4]  +
test ecx ecx +
jz loc_45D6F1  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jl loc_45D6C1  +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
add esi 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] esi +
mov [eax+8] ecx +
mov ecx [esp+8+arg_0] +
mov [eax] edx +
mov [eax+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
test ecx ecx +
jz loc_45D6F1  +
mov eax [esp+8+arg_0] +
test eax eax +
jnz loc_45D6B4  +
xor eax eax +
jmp loc_45D6BE  +
xor eax eax +
retn   +
***
mov esi [eax+14h] +
cmp esi [eax+18h] +
jge loc_45D727  +
mov ebx esi +
add esi 1 +
shl ebx 4 +
add ebx [eax+10h] +
test edx edx +
mov dword ptr [ebx+4] 0 +
mov [eax+14h] esi +
jz loc_45D727  +
test ecx ecx +
jnz loc_45D730  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx] 0 +
mov eax ebx +
mov [ebx+8] edx +
mov [ebx+0Ch] ecx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_45D750  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_45D790  +
test dl dl +
jnz loc_45D794  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_45D6A0  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_45D789  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_45D773  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_45D7C7  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Fh +
ja loc_45D7C7  +
mov ecx [ebx] +
jmp ds:off_4D18A0[ecx*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_45D7B0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+8] +
jmp loc_45D7C3  +
mov ecx [ebx+8] +
cmp dword ptr [ecx] 5 +
jnz loc_45D7E3  +
add dword ptr [edi] 1 +
mov ecx [ebx+8] +
mov edx edi +
mov eax esi +
call sub_45D7A0  +
mov ebx [ebx+0Ch] +
jmp loc_45D7C3  +
add dword ptr [esi] 1 +
mov ecx [ebx+8] +
jmp loc_45D7E3  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_45D830  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+124h] 1 +
jmp loc_45D815  +
***
test edx edx +
js locret_45D8A9  +
test eax eax +
jnz loc_45D89E  +
jmp loc_45D8A3  +
test edx edx +
jz loc_45D8A6  +
mov eax [eax+0Ch] +
sub edx 1 +
test eax eax +
jz locret_45D8B0  +
cmp dword ptr [eax] 2Fh +
jz loc_45D890  +
xor eax eax +
retn   +
mov eax [eax+8] +
retn   +
retn   +
***
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_45D8D8  +
cmp eax 4Ch +
jz loc_45D8D8  +
sub eax 4Eh +
cmp eax 1 +
jbe loc_45D8D8  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_45D924  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_45D933  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_45D900  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_45D8F1  +
xor eax eax +
jmp loc_45D917  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_45D973  +
push ebx  +
mov ebx edx +
shl ebx 4 +
add edx 1 +
add ebx [eax+10h] +
add eax 0Ch +
mov dword ptr [ebx+4] 0 +
mov [eax+8] edx +
mov dword ptr [ebx] 41h +
call sub_45D8E0  +
mov [ebx+8] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_45D9B0  +
cmp al 6Eh +
jz loc_45D9B4  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
add eax 1 +
js loc_45D9B4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_45D9B4  +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
xor eax eax +
jmp loc_45D9A6  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_45D9D0  +
xor eax eax +
pop ebx  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_45D980  +
test eax eax +
js loc_45D9CB  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_45D9CB  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [ebx+10h] +
mov dword ptr [edx+4] 0 +
mov [ebx+14h] ecx +
mov [edx+8] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_45D8E0  +
test eax eax +
mov esi eax +
jle loc_45DAC4  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_45DAC8  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_45DA80  +
cmp esi 9 +
jle loc_45DA67  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_45DA90  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_45D700  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_45DA46  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_45DA46  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_45DAA0  +
cmp al 5Fh +
jz loc_45DAA0  +
cmp al 24h +
jnz loc_45DA67  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_45DA67  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_45D700  +
jmp loc_45DA72  +
xor eax eax +
jmp loc_45DA75  +
xor eax eax +
lea esi [esi+0] +
jmp loc_45DA72  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_45DB1E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45DA10  +
mov ecx edi +
mov edx 4Bh +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_45DAF6  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_45DB50  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_45DBA0  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_45DB7F  +
test cl cl +
jnz loc_45DB7F  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_2 +
cmp dl [eax] +
jz loc_45DC34  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_45DB87  +
jmp loc_45DB41  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_45DCF8  +
cmp dl 5Fh +
jz loc_45DC30  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_45DBF3  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_45DB41  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_45DC08  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_45DC10  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_45DBC4  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_45DB41  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_45DBCB  +
xor edx edx +
mov eax ecx +
jmp loc_45DBEB  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_45DB41  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_45DC13  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_45DCE8  +
mov edi [eax+18h] +
xor esi esi +
mov edx [ebx+14h] +
mov [esp+1Ch+var_10] edi +
mov edi [ebx+18h] +
cmp edx edi +
jge loc_45DC77  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov [esi+8] ebp +
mov ebp [esp+1Ch+var_10] +
mov dword ptr [esi] 18h +
mov [esi+0Ch] ebp +
mov [ebx+2Ch] esi +
test ecx ecx +
jz loc_45DCF0  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edi edx +
jle loc_45DCAE  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [eax] 18h +
mov [eax+8] esi +
mov [eax+0Ch] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_45DB43  +
mov edx eax +
mov eax ebx +
call sub_45DAE0  +
test eax eax +
jz loc_45DB41  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_45DB43  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_45DB43  +
mov edi [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_45DC7A  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_45DC84  +
cmp dl 5Fh +
jz loc_45DBB5  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_45DBBA  +
jmp loc_45DB60  +
***
jmp sub_45DD20  +
***
push ebx  +
mov ebx eax +
jnz loc_45DD3E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_45DD35  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_45DD70  +
cmp edx 76h +
jnz loc_45DD30  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_45D8E0  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_45DD30  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_45D8E0  +
jmp loc_45DD78  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_45DD32  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_45DD32  +
***
movzx edx byte ptr [eax] +
cmp dl 72h +
jz loc_45DDC3  +
cmp dl 56h +
jz loc_45DDC3  +
cmp dl 4Bh +
jz loc_45DDC3  +
cmp dl 44h +
jz loc_45DDB0  +
xor eax eax +
retn   +
movzx eax byte ptr [eax+1] +
lea edx [eax-77h] +
cmp dl 1 +
jbe loc_45DDC3  +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_45DDA7  +
mov eax 1 +
retn   +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_45DDE4  +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov esi 1 +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 5Fh +
jz loc_45DE20  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
test eax eax +
js loc_45DE30  +
cmp eax 9 +
jle loc_45DDDC  +
cmp esi 1 +
jle loc_45DDDC  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_45DDE1  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_45DDE1  +
add eax 2 +
mov si 2 +
mov [ebx+0Ch] eax +
jmp loc_45DDF5  +
xor eax eax +
jmp loc_45DDE1  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_45DE57  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+0Ch] +
jmp sub_45D880  +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_45DEA5  +
cmp dword ptr [ebx] 4Bh +
ja loc_45DE90  +
mov edx [ebx] +
jmp ds:off_4D1A00[edx*4]  +
mov edx [ebx+8] +
mov eax esi +
call sub_45DE70  +
test eax eax +
jnz loc_45DEA7  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_45DE7D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+8] +
mov eax esi +
call sub_45DE40  +
test eax eax +
jz loc_45DEA5  +
cmp dword ptr [eax] 2Fh +
jnz loc_45DEA5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_45DF53  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_45DF0C  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_45DF53  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45DEF1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+124h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_45DEF4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_4D1B30 +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_45E000  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_45DFB2  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_45E000  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45DF97  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_45DF9A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_45E070  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_45E040  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_45E033  +
test ebx ebx +
jnz loc_45E082  +
cmp eax 2 +
mov bl 2 +
jbe loc_45E088  +
add ebx ebx +
cmp eax ebx +
ja loc_45E082  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_45E0A1  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_45E02C  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_45E033  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_88] edx +
jz loc_45E0EE  +
mov eax [ecx+4] +
cmp eax 1 +
jle loc_45E103  +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 1 +
mov esi [ebx+128h] +
mov [ecx+4] eax +
lea edx [esp+98h+var_68] +
mov [esp+98h+var_68] ecx +
mov ecx [ebx+118h] +
mov [ebx+128h] edx +
mov [esp+98h+var_64] esi +
test ecx ecx +
jnz loc_45E1D4  +
mov edi [ebp+0] +
cmp edi 4Fh +
ja loc_45FC16  +
jmp ds:off_4D1DA8[edi*4]  +
mov eax [ebx+11Ch] +
xor edi edi +
mov esi [ebp+8] +
test eax eax +
jnz loc_45E15A  +
cmp dword ptr [esi] 5 +
jz loc_46125C  +
mov eax [esi] +
cmp eax 23h +
jz loc_45E171  +
cmp eax [ebp+0] +
jz loc_45E171  +
cmp eax 24h +
jz loc_4611EF  +
mov esi ebp +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] ecx +
mov [esp+98h+var_54] esi +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [esi+8] +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
mov ecx [esp+98h+var_50] +
test ecx ecx +
jz loc_46045B  +
mov eax [esp+98h+var_58] +
test edi edi +
mov [ebx+114h] eax +
jz loc_45E1CD  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
sub eax 1 +
mov [ebx+128h] esi +
mov [ebp+4] eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aClone +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
jmp loc_45E229  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1DA3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E206  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E209  +
mov edx [ebp+8] +
mov eax ebx +
call sub_45DE70  +
test eax eax +
jz loc_46196E  +
xor edx edx +
jmp loc_45E29A  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_45E29F  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_460A6D  +
cmp dword ptr [eax] 2Fh +
jz loc_45E285  +
mov eax [ebp+8] +
test edx edx +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jz loc_461962  +
mov eax [esp+98h+var_84] +
xor edi edi +
mov [esp+98h+var_78] ebp +
mov ebp [esp+98h+var_88] +
sub eax 1 +
mov [esp+98h+var_7C] eax +
mov ecx [esp+98h+var_80] +
mov edx ebp +
mov eax ebx +
mov [ebx+120h] edi +
call sub_45E0D0  +
cmp edi [esp+98h+var_7C] +
jge loc_45FC28  +
mov eax [ebx+100h] +
mov esi offset asc_4D1CCF +
jmp loc_45E314  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_4D1CCF+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FC28  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E2F1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45E2F4  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_45E38A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1CBAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FC94  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E367  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E36A  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aAbi +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
jmp loc_45E413  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B38h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460364  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E3F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E3F3  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_45E489  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C9Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460147  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E466  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E469  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType +
jmp loc_45E503  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D9Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460161  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E4E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45E4E3  +
mov eax [ebx+100h] +
mov esi offset aLambda +
jmp loc_45E579  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FFAB  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E556  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E559  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestruct +
jmp loc_45E5F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D7Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460235  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E5D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E5D3  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstruc +
jmp loc_45E669  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D62h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF52  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E646  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E649  +
mov eax [ebx+100h] +
mov esi offset aDecltype +
jmp loc_45E6E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D34h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF6C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E6C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E6C3  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1B30 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_45E74A  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_460407  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_45E7AF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460407  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E790  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45E793  +
cmp dword ptr [ebx+100h] 0FFh +
mov edi [ebp+8] +
jz loc_46107D  +
mov eax [ebx+100h] +
mov ecx edi +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_45E0D0  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx edi +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462E50  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_45E8A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1CE4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46003D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E880  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E883  +
mov eax [ebx+100h] +
mov esi offset aOperator +
jmp loc_45E919  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1CE4h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460096  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45E8F6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45E8F9  +
mov edi [ebp+8] +
mov esi offset aOperator_0 +
mov eax [edi+8] +
mov [esp+98h+var_84] eax +
mov eax [ebx+100h] +
jmp loc_45E999  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1CDAh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4600B0  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45E976  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45E979  +
mov ecx [ebp+8] +
mov esi [ebp+0Ch] +
test ecx ecx +
jz loc_45E9F4  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46101E  +
lea edx [eax+1] +
mov ecx esi +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460ECE  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_45EA69  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_46131C  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_460D50  +
mov edi offset asc_4D1CCF +
jmp loc_45EAB3  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_4D1CCF+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460423  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_45EA90  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov edx [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_45EA93  +
cmp word ptr [ebp+0Eh] 0 +
jnz loc_460973  +
mov ecx [ebp+8] +
cmp dword ptr [ecx+8] offset off_4D28E0 +
jz loc_460A7D  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_461328  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+0Ch] 0 +
jz loc_460749  +
mov esi offset a_accum +
jmp loc_45EB7A  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1CC7h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_46073D  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45EB57  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45EB5A  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ebp+0Ch] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_45E0D0  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_45EC0D  +
mov edx [esp+98h+var_88] +
mov ecx ebp +
mov eax ebx +
call sub_461C30  +
mov eax [esp+98h+var_58] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 3Ah +
jz loc_4607E1  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 38h +
jz loc_4608A5  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov [esp+98h+var_7C] eax +
mov eax [eax] +
mov [esp+98h+var_84] edi +
cmp eax 31h +
jz loc_460AD7  +
cmp eax 33h +
jnz loc_461BFF  +
mov edx 28h +
mov eax ebx +
call sub_45D800  +
mov eax [esp+98h+var_7C] +
mov edx [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
call sub_45E0D0  +
mov edx 29h +
mov eax ebx +
call sub_45D800  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462F00  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebx+114h] +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov [ebx+114h] eax +
mov edi ecx +
mov [esp+98h+var_7C] ecx +
test edi edi +
mov [esp+98h+var_58] ecx +
mov ecx eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_461BD7  +
mov eax [edi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_461BD7  +
mov eax edi +
mov esi 1 +
mov [esp+98h+var_78] ebp +
mov [esp+98h+var_80] edx +
jmp loc_45ED4D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_45ED9F  +
mov edx [eax+8] +
test edx edx +
jnz loc_45ED99  +
cmp esi 3 +
ja loc_460E27  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea edi [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [edi+4] ebp +
mov ebp [eax+8] +
mov [edi+8] ebp +
mov ebp [eax+0Ch] +
mov [edi+0Ch] ebp +
mov edi [esp+98h+var_80] +
mov [esp+edx+98h+var_58] ecx +
lea ecx [edi+edx] +
mov [ebx+114h] ecx +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_45ED40  +
mov ebp [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov ecx [ebp+0Ch] +
call sub_45E0D0  +
mov eax [esp+98h+var_7C] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_45EE09  +
cmp esi 1 +
jz loc_45EDF2  +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
jmp loc_45EDDD  +
sub esi 1 +
mov ecx [edi] +
mov eax ebx +
sub edi 10h +
mov edx [esp+98h+var_88] +
call sub_461C30  +
cmp esi 1 +
jnz loc_45EDDA  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_4628E0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
test byte ptr [esp+98h+var_88] 20h +
jnz loc_460A31  +
cmp dword ptr [ebp+8] 0 +
jz loc_45EE31  +
test byte ptr [esp+98h+var_88] 40h +
jz loc_460E3A  +
mov eax [ebx+114h] +
lea ecx [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_462B60  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+8] +
xor esi esi +
cmp dword ptr [eax] 27h +
jnz loc_45EE8C  +
mov eax [eax+8] +
mov esi [eax+10h] +
cmp esi 1 +
jb loc_45EE8C  +
cmp esi 6 +
jbe loc_460E9B  +
cmp esi 7 +
jnz loc_45EE8C  +
mov eax [ebp+0Ch] +
cmp dword ptr [eax] 0 +
jnz loc_45EE8C  +
cmp dword ptr [eax+0Ch] 1 +
jz loc_461B7C  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4610ED  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+8] +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4610BB  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Dh +
jz loc_46149F  +
cmp esi 8 +
jz loc_46146D  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebx+100h] +
mov esi offset aJavaResource +
jmp loc_45EF58  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF38  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EF35  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EF38  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_45EFD3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BD8h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF1E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45EFB0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45EFB3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_45F049  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BC2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FF04  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F026  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F029  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_45F0C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BB1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FEEA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F0A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F0A3  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_45F139  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B9Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FED0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F116  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F119  +
mov eax [ebx+100h] +
mov esi offset aConstructionVt +
jmp loc_45F1B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B8Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FE36  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F190  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F193  +
mov eax [ebx+100h] +
mov esi offset aVttFor +
jmp loc_45F229  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B72h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FE1C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F206  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F209  +
mov eax [ebx+100h] +
mov esi offset aVtableFor +
jmp loc_45F2A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B69h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FE02  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F280  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F283  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_460FE4  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+0Ch] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_45F377  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FCAE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F354  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F357  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_45F3F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD4C  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F3D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F3D3  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_45F469  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C5Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FDB4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F446  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F449  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_45F4E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD80  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F4C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F4C3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_45F559  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C70h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FCC8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F536  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F539  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_45F5D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C15h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD66  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F5B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F5B3  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_45F649  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C40h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FDCE  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F626  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F629  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_45F6C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1BEAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FD9A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45F6A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45F6A3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
test byte ptr [esp+98h+var_88] 4 +
mov edx [ebp+8] +
jnz loc_4606B7  +
mov edi [edx+4] +
mov ecx edi +
mov edi [edx] +
test ecx ecx +
jz loc_45E1D4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F76F  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4607D1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_45F750  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_45F753  +
mov ecx [ebx+114h] +
test ecx ecx +
mov eax ecx +
jz loc_45F7E4  +
mov edx [eax+8] +
test edx edx +
jnz loc_45F7DE  +
mov edx [eax+4] +
mov edx [edx] +
lea esi [edx-19h] +
cmp esi 2 +
ja loc_45F7E4  +
cmp edi edx +
jz loc_460C91  +
mov eax [eax] +
test eax eax +
jnz loc_45F7C2  +
mov esi ebp +
xor edi edi +
jmp loc_45E177  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_45E1D4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F82F  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460413  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_45F810  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45F813  +
mov esi ebp +
xor edi edi +
mov ecx [ebx+114h] +
jmp loc_45E177  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov [esp+98h+var_6C] eax +
mov eax [ebp+8] +
test eax eax +
mov [esp+98h+var_7C] eax +
jz loc_461237  +
mov eax [ebx+110h] +
xor ecx ecx +
mov edi [esp+98h+var_7C] +
mov [esp+98h+var_74] esi +
mov [esp+98h+var_70] ebp +
mov ebp ecx +
mov [esp+98h+var_78] eax +
lea eax [esp+98h+var_58] +
mov edx eax +
mov [esp+98h+var_84] eax +
mov esi edx +
xor eax eax +
mov [esp+98h+var_80] ebx +
mov [esi] eax +
mov eax [esp+98h+var_80] +
add ebp 1 +
mov ebx [edi] +
mov [esi+4] edi +
mov dword ptr [esi+8] 0 +
mov [eax+114h] esi +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_7C] esi +
mov [esi+0Ch] eax +
mov eax ebx +
call sub_45D8C0  +
test eax eax +
jz loc_46172A  +
mov edi [edi+8] +
test edi edi +
jz loc_46122B  +
add esi 10h +
cmp ebp 4 +
jz loc_46046D  +
mov eax [esp+98h+var_7C] +
jmp loc_45F8D4  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+8] +
mov edx edi +
call sub_45E0D0  +
and edi 4 +
jnz loc_45FC45  +
mov eax [ebx+100h] +
mov esi offset asc_4D1B39 +
jmp loc_45F96F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1B3Bh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45FC6F  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45F94C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_45F94F  +
test byte ptr [esp+98h+var_88] 4 +
jnz loc_460F00  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edi [ebp+8] +
test ecx ecx +
jz loc_45E1D4  +
mov [esp+98h+var_84] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_45F9FF  +
lea ecx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46048B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [edi+esi] +
jnz loc_45F9E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45F9E3  +
mov ecx [ebx+11Ch] +
test ecx ecx +
jz loc_4609E9  +
mov eax [ebx+100h] +
mov esi offset aAuto_0 +
jmp loc_45FA84  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B5Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46049B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FA61  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45FA64  +
test byte ptr [esp+98h+var_88] 4 +
mov esi [ebx+144h] +
mov edi [ebx+114h] +
mov [ebx+144h] ebp +
mov dword ptr [ebx+114h] 0 +
mov ecx [ebp+8] +
jz loc_45FB00  +
mov eax [ecx] +
test eax eax +
jnz loc_45FB00  +
cmp dword ptr [ecx+0Ch] 6 +
jz loc_4614B0  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46136B  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461159  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+0Ch] +
call sub_45E0D0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_46135A  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_461127  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov [ebx+144h] esi +
mov eax [ebp+4] +
mov [ebx+114h] edi +
mov esi [esp+98h+var_64] +
jmp loc_45E1D4  +
mov edi [ebp+8] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_460571  +
mov esi offset aThis +
jmp loc_45FBD0  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1D3Dh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4605DD  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_45FBAD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_45FBB0  +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
add edi 1 +
cmp edi [esp+98h+var_84] +
jnz loc_45E2C7  +
mov ebp [esp+98h+var_78] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4613F9  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov esi [ebp+0Ch] +
cmp dword ptr [esi] 46h +
jz loc_461050  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
jmp loc_45FD06  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1C76h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FDE8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FCE3  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45FCE6  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aIn +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
jmp loc_45FE70  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1B90h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_45FEB6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FE51  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_84] +
jmp loc_45FE54  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460DE9  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [ebp+4] +
jmp loc_45E1D4  +
add dword ptr [ebx+11Ch] 1 +
mov eax ebx +
mov ecx [ebp+8] +
mov esi offset asc_4D1D89 +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
sub dword ptr [ebx+11Ch] 1 +
jmp loc_45FFF7  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D8Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46024F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_45FFD4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_45FFD7  +
mov eax [ebx+144h] +
test eax eax +
jz loc_46005F  +
mov edx [ebx+110h] +
mov [esp+98h+var_54] eax +
mov [esp+98h+var_58] edx +
lea edx [esp+98h+var_58] +
mov [ebx+110h] edx +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 4 +
jz loc_460CAB  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_45E0D0  +
mov edi [ebx+144h] +
test edi edi +
jz loc_46008A  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [edi+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_460A88  +
mov edi [esp+98h+var_84] +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
movzx eax al +
sub edi eax +
jz loc_46158C  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_460101  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46044F  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4600E2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_4600E5  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1B30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_460185  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_4603D5  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_4601EF  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4603DB  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4601D0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_4601D3  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+0Ch] +
mov [esp+98h+var_94] offset unk_4D1B30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_98] eax +
mov edi eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_460273  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
sbb edi 3 +
sub edi [esp+98h+var_84] +
jz loc_4603A3  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
add edi esi +
jmp loc_4602DF  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4603A9  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_4602C0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_4602C3  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46118B  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_460DB7  +
lea edx [eax+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4611BD  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_460D85  +
lea eax [edx+1] +
mov esi [esp+98h+var_64] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
mov edi [ebx+124h] +
call sub_45E0D0  +
cmp edi [ebx+124h] +
jz loc_460AB6  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_461C30  +
jmp loc_45E1B5  +
mov ebx [esp+98h+var_80] +
mov esi [esp+98h+var_74] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ebp [esp+98h+var_84] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+8] +
mov [esp+98h+var_94] offset unk_4D1B30 +
add eax 1 +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_58] +
mov edi eax +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] eax +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4604C1  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+98h+var_84] +
jz loc_460565  +
mov esi [esp+98h+var_84] +
mov eax [ebx+100h] +
lea edi [esi+edx] +
jmp loc_46051F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_460565  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_460504  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] edx +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+98h+var_88] +
jmp loc_460507  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi offset aParm +
jmp loc_460597  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1D44h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4605E9  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460578  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_46057B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edi +
mov edi esi +
mov [esp+98h+var_94] offset unk_4D1B30 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_460681  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_46063B  +
lea edx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_460681  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460620  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_460623  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461433  +
mov eax [ebx+100h] +
mov esi [esp+98h+var_64] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edi [edx+0Ch] +
mov ecx edi +
mov edi [edx+8] +
test ecx ecx +
jz loc_45E1D4  +
mov [esp+98h+var_88] ebp +
mov eax [ebx+100h] +
xor esi esi +
mov ebp ecx +
jmp loc_4606F6  +
lea edx [eax+1] +
add esi 1 +
cmp ebp esi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4607C1  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [edi+esi] +
jnz loc_4606D7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_4606DA  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi offset a_fract +
jmp loc_46076F  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1CCEh +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_4607B5  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460750  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_88] +
jmp loc_460753  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [eax+0Ch] +
cmp dword ptr [eax] 3Bh +
jnz loc_45EC2F  +
mov ecx [ebp+8] +
lea eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_462FF0  +
test eax eax +
jnz loc_4613ED  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov [esp+98h+var_80] ecx +
mov esi [eax+8] +
mov [esp+98h+var_84] esi +
mov esi [eax+0Ch] +
mov [esp+98h+var_94] offset aQu +
mov eax [edi+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [esp+98h+var_80] +
test eax eax +
jz loc_4619B6  +
mov edx offset aNew +
mov eax ebx +
mov [esp+98h+var_80] ecx +
call sub_45DED0  +
mov ecx [esp+98h+var_80] +
cmp dword ptr [ecx+8] 0 +
jz loc_460875  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_462F00  +
mov edx 20h +
mov eax ebx +
call sub_45D800  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
test esi esi +
jz loc_461C0C  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_462F00  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46137C  +
mov edx [esp+98h+var_88] +
lea eax [ebp+0Ch] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_462FF0  +
test eax eax +
jnz loc_4613ED  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_46185B  +
mov [esp+98h+var_94] offset aCl +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_98] eax +
call strcmp  +
mov ecx [ebp+0Ch] +
test eax eax +
jnz loc_460904  +
mov eax [ecx+8] +
cmp dword ptr [eax] 3 +
jz loc_461A53  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462F00  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov edi [eax] +
mov [esp+98h+var_94] offset aIx +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jz loc_461928  +
mov [esp+98h+var_94] offset aCl +
mov [esp+98h+var_98] edi +
call strcmp  +
test eax eax +
jnz loc_461A00  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_462F00  +
mov eax [ebp+8] +
cmp dword ptr [eax] 31h +
jz loc_4618F7  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_4609A3  +
lea edx [eax+1] +
add esi 1 +
cmp esi 4D1CC0h +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_45EB04  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460980  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov ecx [esp+98h+var_84] +
jmp loc_460983  +
lea edx [ebp+8] +
mov eax ebx +
call sub_45DE40  +
test eax eax +
jz loc_46189B  +
cmp dword ptr [eax] 2Fh +
jz loc_461888  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [ebp+4] +
mov [ebx+110h] esi +
mov esi [esp+98h+var_64] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_88] +
lea ecx [ebp+0Ch] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_462B60  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_461956  +
mov edx esi +
mov eax ebx +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebp+8] +
mov [esp+98h+var_84] edx +
mov [esp+98h+var_80] eax +
jmp loc_45E2B2  +
mov eax [ebx+100h] +
jmp loc_45EB45  +
cmp edx 0FFh +
jz loc_4618BD  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [edi+4] +
jmp loc_4600C1  +
cmp [ebx+100h] esi +
jnz loc_460443  +
sub esi 2 +
mov eax [ebp+4] +
mov [ebx+100h] esi +
mov esi [esp+98h+var_64] +
jmp loc_45E1D4  +
mov eax [esp+98h+var_7C] +
mov eax [eax+8] +
mov eax [eax] +
mov [esp+98h+var_94] offset aAd +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_80] eax +
call strcmp  +
test eax eax +
jnz loc_460B05  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 3 +
jz loc_461994  +
mov eax [esp+98h+var_84] +
cmp dword ptr [eax] 38h +
jz loc_461A2A  +
mov esi [esp+98h+var_80] +
test esi esi +
jz loc_460B42  +
mov edi offset aSz +
mov ecx 3 +
cmps   +
jz loc_460BC7  +
mov esi [esp+98h+var_80] +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_4614FA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462E50  +
cmp [esp+98h+var_80] 0 +
jz loc_45ECBD  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aGs +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jz loc_461571  +
mov eax [esp+98h+var_80] +
mov [esp+98h+var_94] offset aSt +
mov [esp+98h+var_98] eax +
call strcmp  +
test eax eax +
jnz loc_45ECBD  +
mov edx 28h +
mov eax ebx +
call sub_45D800  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax ebx +
mov edx 29h +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [esp+98h+var_84] +
mov eax ebx +
call sub_45DE70  +
xor edx edx +
test eax eax +
jnz loc_460BF1  +
jmp loc_460BF6  +
mov esi [eax+8] +
test esi esi +
jz loc_460BF6  +
mov eax [eax+0Ch] +
add edx 1 +
test eax eax +
jz loc_460BF6  +
cmp dword ptr [eax] 2Fh +
jz loc_460BE0  +
lea esi [esp+98h+var_58] +
mov [esp+98h+var_90] edx +
mov edi esi +
mov [esp+98h+var_94] offset unk_4D1B30 +
mov [esp+98h+var_98] esi +
call sprintf  +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov edx ecx +
not edx  +
mov ecx edx +
sub ecx 1 +
jz loc_460E1B  +
mov eax [ebx+100h] +
lea edi [esi+ecx] +
jmp loc_460C50  +
add esi 1 +
lea edx [eax+1] +
cmp esi edi +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_460E1B  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_460C31  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_88] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
mov ecx [esp+98h+var_88] +
add dword ptr [ebx+124h] 1 +
jmp loc_460C31  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
cmp dword ptr [ebx+144h] 0 +
jz loc_460CCC  +
mov eax [esp+98h+var_58] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_4616FB  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_4616C1  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_88] +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [ebp+8] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45E0D0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_461692  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461658  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
jmp loc_46008A  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45EA85  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_4603E7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_460383  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FF8B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ebp [esp+98h+var_78] +
mov dword ptr [ebx+118h] 1 +
jmp loc_45EE09  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_88] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_45E0D0  +
mov eax [esp+98h+var_58] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jnz loc_4618B1  +
mov edx 20h +
mov eax ebx +
call sub_45D800  +
jmp loc_45EE31  +
mov ecx [ebp+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_45EE8C  +
cmp edi 3Dh +
jz loc_461B58  +
mov edx [esp+98h+var_88] +
mov eax ebx +
sub esi 2 +
call sub_45E0D0  +
cmp esi 4 +
ja loc_461B4C  +
jmp ds:off_4D1EE8[esi*4]  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45EA37  +
mov edi [ebp+8] +
mov ecx [ebp+0Ch] +
add ecx edi +
cmp edi ecx +
jnb loc_45E1D4  +
mov [esp+98h+var_88] ebp +
mov ebp ecx +
jmp loc_460F35  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add edi 1 +
cmp ebp edi +
jbe loc_460FD4  +
mov eax ebp +
sub eax edi +
cmp eax 3 +
movzx eax byte ptr [edi] +
jle loc_460F45  +
cmp al 5Fh +
jz loc_460F8A  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jnz loc_460F18  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_84] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
xor edx edx +
mov eax [esp+98h+var_84] +
add dword ptr [ebx+124h] 1 +
jmp loc_460F18  +
cmp byte ptr [edi+1] 5Fh +
jnz loc_460F45  +
cmp byte ptr [edi+2] 55h +
jnz loc_460F45  +
lea esi [edi+3] +
cmp ebp esi +
jbe loc_460F45  +
xor ecx ecx +
jmp loc_460FB7  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add esi 1 +
add ecx eax +
cmp esi ebp +
jz loc_461C18  +
movzx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_460FA1  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_461246  +
movsx eax dl +
sub eax 37h +
jmp loc_460FA7  +
mov ebp [esp+98h+var_88] +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45F2F9  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45EA05  +
mov edx offset aDefaultArg +
mov eax ebx +
call sub_45DED0  +
mov eax [esi+0Ch] +
lea edx [eax+1] +
mov eax ebx +
call sub_45DF60  +
mov edx offset asc_4D1B4A +
mov eax ebx +
call sub_45DED0  +
mov esi [esi+8] +
jmp loc_45FC7B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov esi [esp+98h+var_64] +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45E808  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45EED5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45EE9C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FB69  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_45FB29  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_460344  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_4603B5  +
mov eax [ebx+114h] +
mov ecx [esi+8] +
mov esi ebp +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
test ecx ecx +
mov [esp+98h+var_4C] eax +
jnz loc_45E19E  +
jmp loc_45E19B  +
mov esi [esp+98h+var_74] +
mov ebx [esp+98h+var_80] +
mov ebp [esp+98h+var_70] +
mov dword ptr [ebx+118h] 1 +
jmp loc_460483  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_461623  +
movsx eax dl +
sub eax 57h +
jmp loc_460FA7  +
mov eax [ebx+130h] +
mov ecx [ebx+12Ch] +
test eax eax +
mov [esp+98h+var_80] eax +
jle loc_461297  +
cmp esi [ecx] +
jz loc_461598  +
lea eax [ecx+8] +
jmp loc_46128E  +
mov ecx eax +
add eax 8 +
cmp esi [eax-8] +
jz loc_461598  +
add edi 1 +
cmp edi [esp+98h+var_80] +
jnz loc_461280  +
mov eax [ebx+130h] +
cmp eax [ebx+134h] +
jge loc_461BB0  +
mov edx [ebx+12Ch] +
lea edi [edx+eax*8] +
add eax 1 +
mov [ebx+130h] eax +
add edi 4 +
mov eax [ebx+110h] +
mov [edi-4] esi +
jmp loc_4612F9  +
mov ecx [ebx+13Ch] +
cmp ecx [ebx+140h] +
jge loc_461BB0  +
mov edx [ebx+138h] +
lea edx [edx+ecx*8] +
add ecx 1 +
mov [ebx+13Ch] ecx +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov [edi] edx +
mov eax [eax] +
mov edi edx +
test eax eax +
jnz loc_4612C9  +
mov dword ptr [edi] 0 +
cmp dword ptr [ebx+118h] 0 +
jz loc_4615B5  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_45EB31  +
mov edx 20h +
mov eax ebx +
call sub_45D800  +
jmp loc_45FB58  +
mov edx 20h +
mov eax ebx +
call sub_45D800  +
jmp loc_45FB18  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_461392  +
sub eax 72h +
cmp al 1 +
ja loc_4608B7  +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_462E50  +
mov edx 3Ch +
mov eax ebx +
call sub_45D800  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_45E0D0  +
mov edx offset asc_4D1DA4 +
mov eax ebx +
call sub_45DED0  +
mov eax [ebp+0Ch] +
mov edx edi +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45E0D0  +
mov eax ebx +
mov edx 29h +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_45FC55  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460691  +
mov edx 5Bh +
mov eax ebx +
call sub_45D800  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax ebx +
mov edx 5Dh +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx 2Dh +
mov eax ebx +
call sub_45D800  +
jmp loc_45EEF3  +
mov [esp+98h+var_90] 6 +
mov [esp+98h+var_94] offset aJarray +
mov eax [ecx+8] +
mov [esp+98h+var_84] ecx +
mov [esp+98h+var_98] eax +
call strncmp  +
mov ecx [esp+98h+var_84] +
test eax eax +
jnz loc_45FB00  +
mov edx [esp+98h+var_88] +
mov eax ebx +
mov ecx [ebp+0Ch] +
call sub_45E0D0  +
mov edx offset asc_4D1B55 +
mov eax ebx +
call sub_45DED0  +
jmp loc_45FB7D  +
mov edi [esp+98h+var_84] +
cmp dword ptr [edi] 2Fh +
jnz loc_46155A  +
mov eax [edi+8] +
xor esi esi +
test eax eax +
jnz loc_461526  +
jmp loc_46155C  +
add esi 1 +
mov edi [edi+0Ch] +
test edi edi +
jz loc_46155C  +
cmp dword ptr [edi] 2Fh +
jnz loc_46155C  +
mov eax [edi+8] +
test eax eax +
jz loc_46155C  +
cmp dword ptr [eax] 4Ah +
jnz loc_461510  +
mov edx [eax+8] +
mov eax ebx +
call sub_45DE70  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_461551  +
jmp loc_461556  +
mov ecx [edx+8] +
test ecx ecx +
jz loc_461556  +
mov edx [edx+0Ch] +
add eax 1 +
test edx edx +
jz loc_461556  +
cmp dword ptr [edx] 2Fh +
jz loc_461540  +
add esi eax +
jmp loc_461513  +
xor esi esi +
mov edx esi +
mov eax ebx +
call sub_45DF60  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [esp+98h+var_84] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax edx +
jmp loc_4615A7  +
mov eax [eax+4] +
test eax eax +
jz loc_461609  +
mov edi [eax] +
cmp esi edi +
jz loc_4615B5  +
cmp ebp edi +
jnz loc_4615A0  +
cmp eax edx +
jz loc_4615A0  +
xor edi edi +
lea edx [esi+8] +
mov eax ebx +
call sub_45DE40  +
test eax eax +
mov esi eax +
jz loc_4615E5  +
cmp dword ptr [eax] 2Fh +
jnz loc_45E15A  +
mov edx [ebx+120h] +
call sub_45D880  +
test eax eax +
mov esi eax +
jnz loc_45E15A  +
test edi edi +
jz loc_4615F3  +
mov eax [esp+98h+var_84] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [ebx+110h] +
mov edi 1 +
mov [esp+98h+var_84] eax +
mov eax [ecx+4] +
mov [ebx+110h] eax +
jmp loc_4615B7  +
cmp ebp esi +
mov eax 5Fh +
jbe loc_460F45  +
cmp dl 5Fh +
jnz loc_460F45  +
cmp ecx 0FFh +
mov eax edx +
ja loc_460F45  +
movsx edx cl +
mov eax ebx +
call sub_45D800  +
mov edi esi +
jmp loc_460F2A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460D31  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461AB2  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_460D21  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460CE9  +
cmp dword ptr [ebx+100h] 0FFh +
jz loc_461A78  +
mov eax [ebx+100h] +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_460CD9  +
mov [esp+98h+var_7C] edi +
mov edi ebx +
mov esi [esp+98h+var_74] +
cmp edi 4 +
mov ebx [esp+98h+var_80] +
mov [esp+98h+var_74] ebp +
mov ebp [esp+98h+var_70] +
jz loc_46183C  +
cmp edi 2 +
jnz loc_4617C7  +
mov eax [esp+98h+var_7C] +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 46h +
jz loc_461B6C  +
mov eax [esp+98h+var_74] +
lea edi [eax-1] +
shl edi 4 +
add edi [esp+98h+var_84] +
jmp loc_4617B4  +
cmp [esp+98h+var_74] 4 +
jz loc_461237  +
mov eax [edi+4] +
mov ecx [esp+98h+var_78] +
mov [edi+10h] edi +
mov [edi+4] edx +
mov [edi+14h] eax +
mov eax [edi+8] +
add [esp+98h+var_74] 1 +
mov dword ptr [edi+8] 0 +
mov [edi+18h] eax +
mov eax [edi+0Ch] +
mov [edi+0Ch] ecx +
mov [edi+1Ch] eax +
lea eax [edi+10h] +
mov [ebx+114h] eax +
mov edx [edx+8] +
mov edi eax +
mov eax [edx] +
mov [esp+98h+var_80] edx +
call sub_45D8C0  +
mov edx [esp+98h+var_80] +
test eax eax +
jnz loc_461770  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax] 4 +
jnz loc_4617E8  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov esi [esp+98h+var_74] +
mov edi [esp+98h+var_84] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
cmp dword ptr [edi] 0 +
jz loc_46180D  +
sub edi 10h +
test esi esi +
jz loc_461829  +
sub esi 1 +
jmp loc_4617FC  +
mov eax ebx +
mov edx 20h +
call sub_45D800  +
mov ecx [edi-4] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_461C30  +
jmp loc_461801  +
mov eax [esp+98h+var_6C] +
mov esi [esp+98h+var_64] +
mov [ebx+114h] eax +
jmp loc_460483  +
mov eax [esp+98h+var_78] +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] eax +
jmp loc_4617C7  +
mov edx [eax+8] +
cmp dword ptr [edx+8] 1 +
jnz loc_4608DC  +
mov edx [edx+4] +
cmp byte ptr [edx] 3Eh +
jnz loc_4608DC  +
mov eax ebx +
mov edx 28h +
call sub_45D800  +
mov eax [ebp+8] +
jmp loc_4608DC  +
mov edx [ebx+120h] +
call sub_45D880  +
test eax eax +
jnz loc_460A04  +
mov dword ptr [ebx+118h] 1 +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_460A94  +
mov eax [eax+8] +
cmp dword ptr [eax+8] 1 +
jnz loc_460967  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_460967  +
mov eax ebx +
mov edx 29h +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax ebx +
mov edx 5Bh +
call sub_45D800  +
mov eax [ebp+0Ch] +
mov edx [esp+98h+var_88] +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_45E0D0  +
mov edx 5Dh +
mov eax ebx +
call sub_45D800  +
jmp loc_46095B  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462F00  +
mov eax ebx +
mov edx offset a___ +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax [eax+8] +
cmp dword ptr [eax] 1 +
jnz loc_460B12  +
mov edi [esp+98h+var_84] +
mov edx [edi+0Ch] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_84] eax +
jmp loc_460B12  +
mov edx [esp+98h+var_88] +
mov eax ebx +
call sub_462F00  +
mov ecx edi +
mov edi [esp+98h+var_88] +
mov eax ebx +
mov edx edi +
call sub_462E50  +
mov ecx [esp+98h+var_84] +
mov edx edi +
mov eax ebx +
call sub_462F00  +
mov edx offset asc_4D1CFD +
mov eax ebx +
call sub_45DED0  +
mov ecx esi +
mov eax ebx +
mov edx edi +
call sub_462F00  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [esp+98h+var_88] +
mov ecx esi +
mov eax ebx +
call sub_462E50  +
jmp loc_46094A  +
mov eax ebx +
mov edx offset aLl +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edi [esp+98h+var_88] +
mov ecx [eax+8] +
mov eax ebx +
mov edx edi +
call sub_462F00  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_462E50  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx [eax+0Ch] +
cmp dword ptr [edx] 29h +
jz loc_461A65  +
mov dword ptr [ebx+118h] 1 +
mov ecx [eax+8] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_462F00  +
jmp loc_460912  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_46170B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+124h] 1 +
jmp loc_4616A2  +
mov eax ebx +
mov edx offset aUl +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax ebx +
mov edx 6Ch +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax ebx +
mov edx 75h +
call sub_45D800  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax ebx +
mov edx offset aUll +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov edx 2Dh +
mov eax ebx +
call sub_45D800  +
mov ecx [ebp+0Ch] +
jmp loc_460EB0  +
mov edx [edx+8] +
test edx edx +
jz loc_461237  +
jmp loc_46175E  +
cmp edi 3Ch +
nop   +
jnz loc_45EE8C  +
mov eax [eax+8] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_461BBF  +
cmp al 31h +
jnz loc_45EE8C  +
mov eax ebx +
mov edx offset aTrue +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov dword ptr [ebx+118h] 1 +
jmp loc_461303  +
mov eax ebx +
mov edx offset aFalse +
call sub_45DED0  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov ecx [ebp+0Ch] +
mov eax ebx +
mov edx [esp+98h+var_88] +
call sub_45E0D0  +
mov eax [esp+98h+var_7C] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_45EDF2  +
jmp loc_45EE09  +
mov [esp+98h+var_80] 0 +
jmp loc_460B42  +
mov esi [esp+98h+var_64] +
mov eax [ebp+4] +
jmp loc_45E1D4  +
mov eax 5Fh +
jmp loc_460F45  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 4Ch +
ja loc_461CD3  +
jmp ds:off_4D1F60[eax*4]  +
mov eax [ebx+100h] +
mov esi offset aThrow +
jmp loc_461C85  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 4D1F39h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4622F7  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_461C60  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461C63  +
mov ecx [ecx+8] +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45E0D0  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_461D15  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F05h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461CF2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461CF5  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_461D93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F0Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461D70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461D73  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_461E13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F16h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461DF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461DF3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4623A4  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_461F26  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4623DB  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_461F56  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462365  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+0Ch] +
jmp loc_461CD3  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_461F45  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462505  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_461F45  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462450  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset asc_4D1F3A +
jmp loc_461F7F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F3Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461F60  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461F63  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_461FF5  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F45h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_461FD2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_461FD5  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_462073  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F50h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462050  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_462053  +
cmp byte ptr [ebx+104h] 28h +
jz loc_4620EE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4624C6  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax ebx +
mov esi offset asc_4D1F51 +
mov edx [esp+2Ch+var_14] +
call sub_45E0D0  +
mov eax [ebx+100h] +
jmp loc_462133  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F54h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462110  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_462113  +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_4621B5  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4D1F5Fh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462360  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_462190  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_462193  +
mov eax [ebx+100h] +
mov esi offset aTransaction_sa +
jmp loc_462233  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1F28h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_461F45  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_462210  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_462213  +
mov eax [ebx+100h] +
mov esi offset aNoexcept +
jmp loc_4622B1  +
lea edi [eax+1] +
add esi 1 +
mov edx ebp +
cmp esi 4D1F32h +
mov [ebx+100h] edi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4622F7  +
mov eax edi +
cmp eax 0FFh +
movzx ebp byte ptr [esi] +
jnz loc_462290  +
mov edi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] edi +
mov edi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_462293  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_461F45  +
cmp edi 0FFh +
jz loc_462487  +
lea eax [edi+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edi] 28h +
mov byte ptr [ebx+104h] 28h +
mov ecx [ecx+0Ch] +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462412  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ecx+8] +
jmp loc_462325  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_461ED4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_461E75  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_461EA5  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462344  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_461F34  +
mov esi [ebx+10Ch] +
xor edi edi +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_462311  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+124h] 1 +
jmp loc_4620DD  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_461F0B  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_34] edx +
jz loc_4625CD  +
mov edi [eax+118h] +
mov esi eax +
test edi edi +
jz loc_46256A  +
jmp loc_4625CD  +
mov ecx [esi+118h] +
test ecx ecx +
jnz loc_4625CD  +
mov edx [ebx+8] +
test edx edx +
jnz loc_4625C7  +
mov eax [esp+4Ch+arg_0] +
mov ecx [ebx+4] +
test eax eax +
mov ebp [ecx] +
jnz loc_462591  +
mov eax ebp +
mov [esp+4Ch+var_38] ecx +
call sub_45D8C0  +
mov ecx [esp+4Ch+var_38] +
test eax eax +
jnz loc_4625C7  +
mov eax [ebx+0Ch] +
cmp ebp 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] eax +
jz loc_4625D5  +
cmp ebp 2Ah +
jz loc_4625F6  +
cmp ebp 2 +
jz loc_462617  +
mov edx [esp+4Ch+var_34] +
mov eax esi +
call sub_461C30  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_462560  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 0Ch +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_462B60  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_4628E0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_34] +
mov ecx [ecx+8] +
call sub_45E0D0  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_34] 4 +
mov [esi+114h] ebp +
jnz loc_4626B1  +
mov ebp offset asc_4D1B39 +
mov [esp+4Ch+var_38] ebx +
jmp loc_462672  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D1B3Bh +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_4626CE  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_462653  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_462656  +
cmp eax 0FFh +
jz loc_46270C  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_4626D2  +
mov ebx [esp+4Ch+var_38] +
mov eax [ebx+4] +
mov ebp [eax+0Ch] +
mov eax [ebp+0] +
cmp eax 46h +
jnz loc_4626E8  +
jmp loc_462743  +
mov ebp [ebp+8] +
mov eax [ebp+0] +
call sub_45D8C0  +
test eax eax +
jnz loc_4626E2  +
mov edx [esp+4Ch+var_34] +
mov ecx ebp +
mov eax esi +
call sub_45E0D0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
jmp loc_4626BB  +
mov ecx offset aDefaultArg +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_462771  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D1B49h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_4627B7  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_462752  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_462755  +
mov eax [ebp+0Ch] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset unk_4D1B30 +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_4628CD  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_38] edi +
mov edi eax +
jmp loc_462810  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_462857  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_4627F5  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+124h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_4627F8  +
mov edi [esp+4Ch+var_38] +
mov ecx offset asc_4D1B4A +
mov ebx ecx +
jmp loc_462887  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D1B4Dh +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_4626E2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_462864  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_38] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+124h] 1 +
mov edx [esp+4Ch+var_38] +
jmp loc_462867  +
mov eax [esi+100h] +
jmp loc_46285B  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46291A  +
mov edx [eax+8] +
test edx edx +
jz loc_4629A0  +
mov eax [eax] +
test eax eax +
jnz loc_4628F5  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462540  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462A60  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_462B07  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_462975  +
mov eax ebx +
mov edx edi +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462AD0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_462B40  +
mov eax [ebx+100h] +
mov esi offset unk_4D2094 +
jmp loc_4629DF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4D2096 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462A25  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4629C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_4629C3  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462540  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_462A97  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_462920  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_46292E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_462A4A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462983  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_46294E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_462540  +
mov edx [ebx+100h] +
jmp loc_46293F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_462C40  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_462C40  +
mov eax esi +
mov edx 1 +
jmp loc_462BAE  +
and ch 0Eh +
jnz loc_462CE0  +
mov eax [eax] +
test eax eax +
jz loc_462C40  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_462C40  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_462B99  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_462B90  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_462CF5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_462E12  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_462D06  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462D09  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_462540  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_462D6D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_462CA1  +
mov eax ebx +
mov edx edi +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462DA4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_462540  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_462BD0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462C09  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_462540  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462DDB  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_462C74  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_462C77  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462CAF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462D50  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+124h] 1 +
jmp loc_462BED  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_462E70  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45E0D0  +
mov eax [ecx+8] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_462EF0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_462EA2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_462EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_462E87  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_462E8A  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_462F13  +
cmp eax 30h +
jnz loc_462F20  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
jmp sub_45E0D0  +
cmp eax 6 +
jz loc_462F13  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462FA8  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_45E0D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_462F74  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_462F5D  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+24h+var_8] ecx +
mov [esp+24h+var_C] edx +
mov [esp+24h+var_1C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_24] ebx +
call eax  +
xor eax eax +
mov ecx [esp+24h+var_8] +
add dword ptr [ebx+124h] 1 +
mov edx [esp+24h+var_C] +
jmp loc_462F35  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx+8] +
mov eax [eax] +
cmp byte ptr [eax] 66h +
jz loc_463010  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi edx +
mov edx [esp+2Ch+arg_0] +
xor ebp ebp +
mov edx [edx] +
mov esi [edx+8] +
mov [esp+2Ch+var_18] esi +
mov esi [edx+0Ch] +
cmp dword ptr [esi] 3Bh +
jz loc_4631F4  +
mov ecx [ebx+120h] +
mov dword ptr [ebx+120h] 0FFFFFFFFh +
movzx eax byte ptr [eax+1] +
mov [esp+2Ch+var_14] ecx +
cmp al 52h +
jz loc_463204  +
jle loc_463200  +
cmp al 6Ch +
jz loc_463120  +
cmp al 72h +
lea esi [esi+0] +
jnz loc_4631DD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463347  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a____0 +
mov byte ptr [ebx+104h] 28h +
call sub_462F00  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_462E50  +
mov eax [ebx+100h] +
jmp loc_4630D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D20A0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4631DD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4630B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_18] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_18] +
jmp loc_4630B3  +
mov eax [ebx+100h] +
mov ebp offset a____1 +
jmp loc_463153  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D209Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4632C0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_463130  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_463133  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_462E50  +
mov ecx ebp +
mov eax ebx +
mov edx edi +
call sub_462F00  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4632D4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
mov eax [esp+2Ch+var_14] +
mov [ebx+120h] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+0Ch] +
mov esi [esi+8] +
jmp loc_46302D  +
cmp al 4Ch +
jnz loc_4631DD  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_463310  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov esi offset a___ +
mov byte ptr [ebx+104h] 28h +
call sub_462F00  +
mov ecx [esp+2Ch+var_18] +
mov eax ebx +
mov edx edi +
call sub_462E50  +
mov eax [ebx+100h] +
jmp loc_463273  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D1D38h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4631A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_463250  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
mov edx [esp+2Ch+var_10] +
jmp loc_463253  +
mov ecx [esp+2Ch+var_18] +
mov edx edi +
mov eax ebx +
call sub_462E50  +
mov ecx esi +
jmp loc_4631AF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_4631CC  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_463218  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+124h] 1 +
jmp loc_46307A  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_4633C0  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_4633C0  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_4633C0  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 0 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_463408  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_463408  +
test edx edx +
jz loc_463408  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 32h +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_463450  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_463450  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_463452  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 7 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_4634A0  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_4634A0  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_4634A2  +
mov eax [esp+8] +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx] 8 +
mov [edx+8] eax +
mov eax [esp+0Ch] +
mov [edx+0Ch] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [ebx+0Ch] +
mov eax esi +
call sub_45DD90  +
test eax eax +
jnz loc_463530  +
movsx edx byte ptr [esi] +
lea eax [edx-30h] +
cmp al 4Ah +
ja loc_463525  +
movzx eax al +
jmp ds:off_4D20B8[eax*4]  +
mov esi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464B50  +
mov edx 42h +
mov [ebx+34h] esi +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_463525  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_463525  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_4635C8  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_4651C0  +
test eax eax +
mov esi eax +
jz loc_463525  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_463590  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_463525  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_4635A0  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_463525  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_463525  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_4643E0  +
mov edx eax +
mov [esi] eax +
jmp loc_463557  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+8] +
mov [edx+8] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_463565  +
mov eax ebx +
call sub_4654C0  +
mov [esp+2Ch+var_10] eax +
nop   +
test eax eax +
jz loc_463525  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463525  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45DA10  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
mov ecx [ebx+14h] +
cmp ecx [ebx+18h] +
jl loc_463BA6  +
mov edx large ds:8 +
xor eax eax +
mov edx [edx+4] +
add esi 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] esi +
jmp loc_463527  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_45DA10  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_463C50  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
movzx eax byte ptr [esi+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_46369C  +
cmp al 5Fh +
jz loc_46369C  +
sub eax 41h +
cmp al 19h +
ja loc_463C0A  +
xor edx edx +
mov eax ebx +
call sub_45DB30  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_463527  +
mov eax ebx +
call sub_465490  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D6A0  +
nop   +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
mov eax ebx +
call sub_45D9C0  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_4635C0  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_463C75  +
test eax eax +
jz loc_463525  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463525  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_465490  +
jmp loc_4636BC  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
test eax eax +
mov esi eax +
jz loc_4638ED  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
test eax eax +
jz loc_4638ED  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4636D0  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
mov eax ebx +
call sub_4643E0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
lea eax [esi+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [esi+1] 0 +
jz loc_463525  +
lea eax [esi+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [esi+1] +
sub eax 46h +
cmp al 30h +
ja loc_463525  +
movzx eax al +
jmp ds:off_4D21E4[eax*4]  +
add esi 1 +
mov [ebx+0Ch] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
lea edx [esi+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [esi+1] +
cmp al 5Fh +
jz loc_463BD7  +
sub eax 30h +
cmp al 9 +
ja loc_463C2B  +
add esi 2 +
mov ecx esi +
mov [ebx+0Ch] esi +
movzx eax byte ptr [ecx] +
add esi 1 +
sub eax 30h +
cmp al 9 +
jbe loc_4638C0  +
sub ecx edx +
mov eax ebx +
call sub_45D700  +
test eax eax +
mov esi eax +
jz loc_4638ED  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_463BD9  +
xor eax eax +
jmp loc_4636D0  +
cmp byte ptr [esi+2] 5Fh +
jz loc_463CE1  +
mov eax ebx +
call sub_45D940  +
mov esi eax +
test esi esi +
jz loc_4638ED  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_4636D0  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4636D0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2A98 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2A98 +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_463527  +
mov ecx 0Eh +
mov edx offset aDecltypeAuto +
mov eax ebx +
call sub_45D700  +
jmp loc_463527  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2A84 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2A84 +
jmp loc_463970  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2A48 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2A48 +
jmp loc_463970  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2A70 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2A70 +
jmp loc_463970  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2A5C +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2A5C +
jmp loc_463970  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2AC0 +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2AC0 +
jmp loc_463970  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_463BFD  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov edx offset off_4D2AAC +
mov dword ptr [eax] 27h +
mov dword ptr [eax+8] offset off_4D2AAC +
jmp loc_463970  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov edx 4Ah +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
jmp loc_4635C0  +
mov eax [ebx+14h] +
xor edi edi +
cmp eax [ebx+18h] +
jge loc_463B23  +
mov edi eax +
add eax 1 +
shl edi 4 +
add edi [ebx+10h] +
mov dword ptr [edi+4] 0 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_10] edi +
mov dword ptr [edi] 2Ch +
movzx eax byte ptr [esi+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [edi+0Ch] ax +
jnz loc_463D02  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov [edi+8] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+8] +
test eax eax +
jz loc_463525  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_463B83  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Eh] dx +
jmp loc_463527  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_45D700  +
jmp loc_463527  +
lea eax [edx+edx*4-1E5h] +
lea edx ds:4D2840h[eax*4] +
mov eax ecx +
shl eax 4 +
add ecx 1 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] ecx +
mov dword ptr [eax] 27h +
mov [eax+8] edx +
jmp loc_46362C  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4636D0  +
mov edx large ds:8 +
xor eax eax +
jmp loc_463970  +
mov eax ebx +
call sub_4654C0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_463525  +
cmp dword ptr [eax] 18h +
jnz loc_4635C8  +
jmp loc_463527  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464B50  +
mov [ebx+34h] edi +
test eax eax +
mov esi eax +
jnz loc_4638E1  +
xor eax eax +
jmp loc_4636D0  +
mov eax ebx +
call sub_465490  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_46365F  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_465490  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_463CB8  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_4635C0  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_463525  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_463525  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4636BC  +
add esi 3 +
mov edi [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
call sub_464B50  +
mov [ebx+34h] edi +
mov esi eax +
jmp loc_463907  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
mov edi [esp+2Ch+var_10] +
jmp loc_463B49  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_463D90  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_463EB9  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+20h+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_463DF0  +
movzx eax [esp+20h+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_463D97  +
mov eax esi +
call sub_45DA10  +
mov ecx [esi+14h] +
cmp ecx [esi+18h] +
jl loc_463E81  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov [esp+20h+var_11] 0 +
mov eax 43h +
xor edx edx +
mov [esp+20h+var_18] eax +
jmp loc_463DB0  +
jge loc_463DE8  +
mov [esp+20h+var_18] ebx +
cmp edx [esp+20h+var_18] +
jz loc_463D80  +
mov ecx [esp+20h+var_18] +
mov eax edi +
sub ecx edx +
mov ebx ecx +
shr ebx 1Fh +
add ebx ecx +
sar ebx 1 +
add ebx edx +
mov ecx ebx +
shl ecx 4 +
lea ebp off_4D2C80[ecx] +
mov ecx ds:off_4D2C80[ecx] +
cmp al [ecx] +
jnz loc_463DA4  +
movzx ecx byte ptr [ecx+1] +
cmp [esp+20h+var_11] cl +
jz loc_463E50  +
cmp cl [esp+20h+var_11] +
jg loc_463DA6  +
lea edx [ebx+1] +
jmp loc_463DAA  +
cmp [esp+20h+var_11] 76h +
jnz loc_463D97  +
mov eax edi +
cmp al 63h +
jnz loc_463D97  +
mov edx [esi+34h] +
xor eax eax +
mov ebx [esi+38h] +
mov [esp+20h+var_20] esi +
test edx edx +
setz al  +
mov [esi+38h] eax +
call sub_4634B0  +
mov ecx [esi+38h] +
mov [esp+20h+var_20] 0 +
test ecx ecx +
mov ecx eax +
jnz loc_463E40  +
mov edx 33h +
mov eax esi +
call sub_45D6A0  +
mov [esi+38h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 34h +
mov eax esi +
call sub_45D6A0  +
jmp loc_463E31  +
mov edx [esi+14h] +
xor eax eax +
cmp edx [esi+18h] +
jge loc_463D82  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov dword ptr [eax] 31h +
mov [eax+8] ebp +
jmp loc_463D82  +
mov edx ecx +
add ecx 1 +
shl edx 4 +
add edx [esi+10h] +
test eax eax +
mov dword ptr [edx+4] 0 +
mov [esi+14h] ecx +
jz loc_463D80  +
movsx ecx [esp+20h+var_11] +
mov [edx+0Ch] eax +
mov eax edx +
mov dword ptr [edx] 32h +
sub ecx 30h +
mov [edx+8] ecx +
jmp loc_463D82  +
mov [esp+20h+var_11] 0 +
jmp loc_463D52  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_463F70  +
cmp dl 45h +
jz loc_463F70  +
cmp dl 2Eh +
jz loc_463F70  +
lea esi [esp+24h+var_8] +
jmp loc_463F44  +
cmp byte ptr [eax+1] 45h +
jz loc_463F54  +
mov [esp+24h+var_24] ebx +
call sub_4634B0  +
test eax eax +
jz loc_463F70  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_45D6A0  +
test eax eax +
mov [esi] eax +
jz loc_463F70  +
lea esi [eax+0Ch] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_463F54  +
cmp dl 45h +
jz loc_463F54  +
cmp dl 2Eh +
jz loc_463F54  +
cmp dl 4Fh +
jz loc_463F00  +
cmp dl 52h +
jnz loc_463F06  +
cmp byte ptr [eax+1] 45h +
jnz loc_463F06  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_463F70  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_463F78  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+8] +
cmp dword ptr [edx] 27h +
jnz loc_463F63  +
mov edx [edx+8] +
cmp dword ptr [edx+10h] 9 +
jnz loc_463F63  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+8] 0 +
jmp loc_463F63  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_464092  +
lea ecx [eax-61h] +
cmp cl 19h +
ja loc_464000  +
cmp al 6Fh +
jz loc_464190  +
mov eax ebx +
call sub_463D20  +
test eax eax +
mov ebp eax +
jz loc_463FE1  +
cmp dword ptr [eax] 31h +
jz loc_4641A5  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jz loc_4640AA  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax-43h] +
cmp cl 1 +
jbe loc_4641F0  +
cmp al 4Ch +
jz loc_464160  +
cmp al 55h +
jnz loc_464182  +
movzx eax byte ptr [edx+1] +
cmp al 6Ch +
jz loc_4640C0  +
cmp al 74h +
jnz loc_464182  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 74h +
jnz loc_463FE7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45D980  +
test eax eax +
js loc_463FE1  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_464085  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 47h +
jl loc_46414A  +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
xor ebp ebp +
jmp loc_463FE7  +
mov eax ebx +
call sub_45DA10  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 42h +
jnz loc_463FF0  +
add esp 1Ch +
mov edx ebp +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45DAE0  +
lea eax [edx+1] +
xor ebp ebp +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edx+1] +
cmp cl 6Ch +
jnz loc_463FE7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_463ED0  +
test eax eax +
mov esi eax +
jz loc_463FE1  +
mov edx [ebx+0Ch] +
movzx ecx byte ptr [edx] +
cmp cl 45h +
jnz loc_463FE7  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45D980  +
test eax eax +
js loc_464085  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_464085  +
mov ebp edx +
add edx 1 +
shl ebp 4 +
add ebp [ebx+10h] +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] edx +
mov [ebp+8] esi +
mov [ebp+0Ch] eax +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
mov dword ptr [ebp+0] 45h +
jge loc_464085  +
mov edx [ebx+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [ebx+20h] eax +
jmp loc_463FE1  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_45DA10  +
test eax eax +
mov ebp eax +
jz loc_464182  +
mov eax ebx +
call sub_45DDD0  +
test eax eax +
jnz loc_463FE1  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_463FCB  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_463FCB  +
mov edx [eax+8] +
mov edi offset unk_4D22A8 +
mov ecx 3 +
mov eax [ebx+30h] +
add eax [edx+8] +
mov esi [edx] +
add eax 7 +
mov [ebx+30h] eax +
cmps   +
jnz loc_463FE1  +
mov eax ebx +
call sub_45DA10  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx ecx byte ptr [eax] +
jmp loc_463FE7  +
mov edi [ebx+2Ch] +
test edi edi +
jz loc_46433E  +
mov esi [edi] +
test esi esi +
jz loc_4642A4  +
cmp esi 18h +
mov ecx eax +
jz loc_4642A4  +
cmp cl 43h +
jz loc_4642B2  +
cmp cl 44h +
jnz loc_46408B  +
movzx eax byte ptr [edx+1] +
sub eax 30h +
cmp al 5 +
ja loc_46429D  +
movzx eax al +
jmp ds:off_4D22AC[eax*4]  +
mov ecx 2 +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46434C  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_46434C  +
mov dword ptr [ebp+0] 8 +
mov [ebp+8] ecx +
mov [ebp+0Ch] edi +
movzx ecx byte ptr [edx+2] +
jmp loc_463FE7  +
mov ecx 1 +
jmp loc_46423C  +
mov ecx 5 +
jmp loc_46423C  +
mov ecx 4 +
jmp loc_46423C  +
mov ecx 3 +
jmp loc_46423C  +
xor ebp ebp +
jmp loc_463FF0  +
mov eax [edi+0Ch] +
add [ebx+30h] eax +
movzx ecx byte ptr [edx] +
jmp loc_464210  +
movzx eax byte ptr [edx+1] +
xor ecx ecx +
cmp al 49h +
jz loc_464355  +
sub eax 31h +
cmp al 4 +
ja loc_46436B  +
movzx eax al +
jmp ds:off_4D22C4[eax*4]  +
mov esi 2 +
add edx 2 +
test ecx ecx +
mov [ebx+0Ch] edx +
jz loc_4642EF  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edi [ebx+2Ch] +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_464345  +
mov ebp eax +
add eax 1 +
shl ebp 4 +
add ebp [ebx+10h] +
test edi edi +
mov dword ptr [ebp+4] 0 +
mov [ebx+14h] eax +
jz loc_464345  +
mov dword ptr [ebp+0] 7 +
mov [ebp+8] esi +
mov [ebp+0Ch] edi +
jmp loc_463FE1  +
mov esi 1 +
jmp loc_4642DA  +
mov esi 4 +
jmp loc_4642DA  +
mov esi 3 +
jmp loc_4642DA  +
mov esi 5 +
jmp loc_4642DA  +
mov ecx eax +
jmp loc_464210  +
xor ebp ebp +
jmp loc_463FE1  +
xor ebp ebp +
nop   +
jmp loc_464278  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [edx+2] +
mov edx ecx +
mov ecx 1 +
jmp loc_4642C0  +
movzx ecx byte ptr [edx] +
xor ebp ebp +
jmp loc_463FE7  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_4643B7  +
xor esi esi +
test edx edx +
jnz loc_4643BD  +
mov eax ebx +
call sub_463ED0  +
test eax eax +
jz loc_4643D0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_45D6A0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_4634B0  +
test eax eax +
mov esi eax +
jnz loc_464395  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_4643B1  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4643F5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_464407  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_464380  +
mov edx eax +
mov eax ebx +
call sub_45D750  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_4643EE  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov [esp+48h+var_1C] 0 +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_35] dl +
mov [esp+48h+var_3C] eax +
cmp [ebx] dl +
jz loc_464A46  +
mov edx ebx +
lea esi [esi+0] +
mov ebx [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_464693  +
cmp al 54h +
jz loc_4646B0  +
cmp al 73h +
jz loc_4645D2  +
cmp al 66h +
jz loc_464610  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_464566  +
cmp al 6Fh +
jz loc_464556  +
cmp al 74h +
setz cl  +
jnz loc_464B41  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4647B0  +
mov eax ebp +
call sub_463D20  +
test eax eax +
mov [esp+48h+var_34] eax +
jz loc_464686  +
mov edx [eax] +
cmp edx 31h +
jz loc_4646C0  +
cmp edx 32h +
jz loc_4647E4  +
cmp edx 33h +
jnz loc_464686  +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_2C] 0 +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_464A76  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_46451C  +
mov edi offset aSp +
mov ecx 3 +
cmps   +
jz loc_464A1A  +
mov eax ebp +
call sub_464B50  +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
test edx edx +
jz loc_46453F  +
mov ecx eax +
mov edx 38h +
mov eax ebp +
call sub_45D6A0  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_34] +
mov edx 36h +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_4644B6  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_463FA0  +
test eax eax +
jz loc_464686  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_4647F8  +
mov [ebp+34h] ebx +
mov [esp+48h+var_48] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_45D6A0  +
mov edi [esp+48h+var_3C] +
test eax eax +
mov [edi] eax +
jz loc_464689  +
mov edx [ebp+0Ch] +
add eax 0Ch +
mov [esp+48h+var_3C] eax +
movzx eax [esp+48h+var_35] +
cmp [edx] al +
jnz loc_464460  +
mov ebx edx +
mov eax [esp+48h+var_1C] +
add ebx 1 +
mov [ebp+0Ch] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_464936  +
cmp al 70h +
jnz loc_4644B6  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_464B50  +
mov edx 4Ah +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
cmp byte ptr [edx+1] 70h +
jnz loc_4644B6  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_4648D0  +
mov eax ebp +
call sub_45D980  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_464686  +
add eax 1 +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_464686  +
mov ecx edx +
add edx 1 +
shl ecx 4 +
add ecx [ebp+10h] +
mov dword ptr [ecx+4] 0 +
mov [ebp+14h] edx +
mov dword ptr [ecx] 6 +
mov [ecx+8] eax +
jmp loc_464583  +
mov [esp+48h+var_48] ebp +
call sub_4634B0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_4647BA  +
mov [ebp+34h] ebx +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_465FE0  +
mov ecx eax +
lea esi [esi+0] +
test ecx ecx +
mov [ebp+34h] ebx +
jnz loc_464586  +
jmp loc_464689  +
mov eax ebp +
call sub_45D9C0  +
mov ecx eax +
jmp loc_4646A0  +
mov eax [eax+8] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_464973  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_464ADD  +
jle loc_464910  +
cmp eax 2 +
jz loc_464820  +
cmp eax 3 +
jnz loc_464686  +
mov esi [esp+48h+var_30] +
test esi esi +
jz loc_464686  +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_464996  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_464AA7  +
cmp al 6Eh +
jnz loc_464686  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_464A9A  +
mov edx 5Fh +
mov eax ebp +
call sub_464430  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_4634B0  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_464A8D  +
cmp al 70h +
jz loc_464ABA  +
cmp al 69h +
jnz loc_464686  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_464686  +
mov eax ebp +
call sub_464B50  +
jmp loc_4649B7  +
xor esi esi +
test cl cl +
jnz loc_46466F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_464430  +
mov ecx esi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_30] 0 +
mov eax [eax+8] +
jmp loc_4646FB  +
mov [esp+48h+var_34] eax +
mov eax ebp +
call sub_465490  +
mov ecx [esp+48h+var_34] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_464686  +
mov eax [esp+48h+var_34] +
mov eax [eax+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4649F3  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 66h +
jz loc_464A66  +
mov eax ebp +
call sub_464B50  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_464983  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4D22D8 +
mov ecx 3 +
cmps   +
jz loc_4648E0  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4D22DB +
mov ecx 3 +
cmps   +
jz loc_4648E0  +
mov eax ebp +
call sub_464B50  +
mov esi eax +
lea esi [esi+0] +
mov ecx [esp+48h+var_2C] +
mov edx 38h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_45D6A0  +
mov ecx [esp+48h+var_34] +
mov edx 37h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
add edx 3 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_464644  +
mov eax ebp +
call sub_463FA0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_4648A0  +
mov eax ebp +
call sub_465490  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov esi eax +
jmp loc_4648A0  +
test eax eax +
jnz loc_464686  +
mov ecx [esp+48h+var_34] +
mov edx 35h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+48h+var_48] ebp +
call sub_4634B0  +
mov esi eax +
mov eax ebp +
call sub_463FA0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_464A26  +
mov [esp+48h+var_48] eax +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
mov [esp+48h+var_48] ebp +
call sub_4634B0  +
mov [esp+48h+var_48] eax +
jmp loc_46453F  +
mov edx 45h +
mov eax ebp +
call sub_464430  +
mov esi eax +
jmp loc_4648A0  +
mov eax ebp +
call sub_464B50  +
mov esi eax +
mov eax ebp +
call sub_464B50  +
mov edi eax +
mov eax ebp +
call sub_464B50  +
test eax eax +
jz loc_464686  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebp +
call sub_45D6A0  +
mov ecx esi +
mov edx 3Ah +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx [esp+48h+var_34] +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov ecx eax +
jmp loc_4646A0  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_464A09  +
sub eax 72h +
cmp al 1 +
ja loc_46483F  +
mov [esp+48h+var_48] ebp +
call sub_4634B0  +
mov [esp+48h+var_2C] eax +
jmp loc_464857  +
mov eax ebp +
call sub_465380  +
jmp loc_464523  +
mov eax ebp +
call sub_465490  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_45D6A0  +
mov [esp+48h+var_48] eax +
jmp loc_46495E  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_45D6A0  +
jmp loc_46468B  +
mov eax ebp +
call sub_463D20  +
mov [esp+48h+var_2C] eax +
jmp loc_464857  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_464430  +
jmp loc_464523  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_4649B7  +
cmp al 77h +
jz loc_464761  +
jmp loc_464686  +
mov eax ebp +
lea esi [esi+0] +
call sub_463D20  +
jmp loc_46499D  +
cmp byte ptr [edx+1] 69h +
nop   +
jnz loc_464686  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_464430  +
jmp loc_4649B7  +
mov eax [esp+48h+var_30] +
test eax eax +
jz loc_464B37  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_464B06  +
cmp al 70h +
mov [esp+48h+var_2C] 0 +
jz loc_464B06  +
cmp edx 33h +
jnz loc_464502  +
jmp loc_4644F6  +
mov esi [esp+48h+var_30] +
mov [esp+48h+var_2C] 0 +
cmp al [esi+1] +
jnz loc_464AF8  +
mov eax [ebp+0Ch] +
mov [esp+48h+var_2C] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_464AF8  +
add eax 1 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_2C] 0 +
jmp loc_464AF8  +
mov [esp+48h+var_2C] 0 +
jmp loc_464AF8  +
cmp al 69h +
jz loc_4644AC  +
jmp loc_4644B6  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_464EA5  +
cmp al 54h +
jz loc_464EB3  +
cmp al 73h +
jz loc_464CD7  +
cmp al 66h +
jz loc_464C70  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_464BB0  +
mov eax ebx +
call sub_463FA0  +
test eax eax +
jz loc_464E83  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_464ED1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_464E90  +
cmp al 74h +
setz cl  +
jnz loc_4651B1  +
cmp byte ptr [edx+1] 6Ch +
jz loc_464E40  +
mov eax ebx +
call sub_463D20  +
test eax eax +
mov ebp eax +
jz loc_464E83  +
mov eax [eax] +
cmp eax 31h +
jz loc_464D14  +
cmp eax 32h +
jz loc_464EC1  +
cmp eax 33h +
jnz loc_464E83  +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_14] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_464FEE  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_464C33  +
mov edi offset aSp +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_46509F  +
mov eax ebx +
call sub_464B50  +
mov edx [esp+1Ch+var_14] +
mov [esp+1Ch+var_1C] eax +
test edx edx +
jz loc_464C56  +
mov ecx eax +
mov edx 38h +
mov eax ebx +
call sub_45D6A0  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 36h +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
cmp byte ptr [edx+1] 70h +
jnz loc_464BCD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_464FE1  +
mov eax ebx +
call sub_45D980  +
mov edx eax +
add eax 1 +
and edx 7FFFFFFFh +
cmp edx 7FFFFFFFh +
jz loc_464E83  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_464E83  +
mov esi edx +
add edx 1 +
shl esi 4 +
add esi [ebx+10h] +
mov dword ptr [esi+4] 0 +
mov [ebx+14h] edx +
mov dword ptr [esi] 6 +
mov [esi+8] eax +
jmp loc_464BA4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_464EF0  +
cmp al 70h +
jnz loc_464BCD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_464B50  +
mov edx 4Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
mov edi [ebp+8] +
mov ecx [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov esi ecx +
mov [esp+1Ch+var_18] ecx +
lea ecx [edi-2] +
add [ebx+30h] ecx +
mov ecx 3 +
mov [esp+1Ch+var_14] edi +
mov edi offset aSt +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_465030  +
mov edi [esp+1Ch+var_10] +
mov ecx [edi+0Ch] +
cmp ecx 1 +
jz loc_465151  +
jle loc_465005  +
cmp ecx 2 +
jz loc_464F30  +
cmp ecx 3 +
jnz loc_464E83  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_464E83  +
mov edi offset aQu +
mov ecx 3 +
mov esi eax +
cmps   +
jz loc_465050  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax] +
cmp al 66h +
jz loc_465124  +
cmp al 6Eh +
jnz loc_464E83  +
mov eax [esp+1Ch+var_18] +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_465115  +
mov edx 5Fh +
mov eax ebx +
call sub_464430  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_4634B0  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_465108  +
cmp al 70h +
jz loc_465130  +
cmp al 69h +
jnz loc_464E83  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_464E83  +
mov eax ebx +
call sub_464B50  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Bh +
mov eax ebx +
call sub_45D6A0  +
mov ecx esi +
mov edx 3Ah +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov ecx ebp +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
xor esi esi +
test cl cl +
jnz loc_464E70  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_464430  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx+1] 0 +
mov esi eax +
jnz loc_464E46  +
xor esi esi +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_464BCD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_464B87  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_465FE0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45D9C0  +
mov ecx [ebp+8] +
mov [esp+1Ch+var_18] 0 +
jmp loc_464D55  +
mov eax ebx +
call sub_465490  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov esi eax +
mov eax ebx +
call sub_463FA0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_4650AB  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
mov eax [esp+1Ch+var_18] +
test eax eax +
jz loc_464E83  +
mov eax [ebp+8] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_465078  +
mov eax [esp+1Ch+var_18] +
cmp byte ptr [eax] 66h +
jz loc_4650CB  +
mov eax ebx +
call sub_464B50  +
mov [esp+1Ch+var_14] eax +
mov esi [esp+1Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46503D  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_4D22D8 +
mov ecx 3 +
cmps   +
jz loc_464FA1  +
mov esi [esp+1Ch+var_18] +
mov edi offset unk_4D22DB +
mov ecx 3 +
cmps   +
jnz loc_4650DB  +
mov eax ebx +
call sub_463FA0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4650E9  +
mov ecx [esp+1Ch+var_14] +
mov edx 38h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_45D6A0  +
mov ecx ebp +
mov edx 37h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_464CA8  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_464430  +
jmp loc_464C3A  +
test ecx ecx +
jnz loc_464E83  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464BA4  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
jmp loc_464C53  +
mov edx 45h +
mov eax ebx +
call sub_464430  +
mov esi eax +
jmp loc_464FB6  +
mov eax ebx +
call sub_464B50  +
mov esi eax +
mov eax ebx +
call sub_464B50  +
mov edi eax +
mov eax ebx +
call sub_464B50  +
test eax eax +
jnz loc_464E04  +
xor esi esi +
jmp loc_464E85  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46508E  +
sub eax 72h +
cmp al 1 +
ja loc_464F4B  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov [esp+1Ch+var_14] eax +
jmp loc_464F63  +
mov eax ebx +
call sub_465380  +
jmp loc_464C3A  +
mov eax ebx +
call sub_465490  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov [esp+1Ch+var_1C] eax +
jmp loc_464F18  +
mov eax ebx +
call sub_463D20  +
mov [esp+1Ch+var_14] eax +
jmp loc_464F63  +
mov eax ebx +
call sub_464B50  +
mov esi eax +
jmp loc_464FB6  +
mov eax ebx +
call sub_465490  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
mov esi eax +
jmp loc_464FB6  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_464E04  +
cmp al 77h +
jz loc_464DBD  +
xor esi esi +
jmp loc_464E85  +
mov eax ebx +
call sub_463D20  +
jmp loc_465057  +
cmp byte ptr [edx+1] 69h +
jnz loc_464E83  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_464430  +
jmp loc_464E04  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
test edi edi +
jz loc_46516E  +
movzx ecx byte ptr [edi] +
cmp cl 6Dh +
jz loc_465180  +
cmp cl 70h +
jz loc_465180  +
cmp eax 33h +
jnz loc_464C17  +
jmp loc_464C0B  +
mov edi [esp+1Ch+var_18] +
mov [esp+1Ch+var_14] 0 +
cmp cl [edi+1] +
jnz loc_46516E  +
mov ecx [ebx+0Ch] +
mov [esp+1Ch+var_14] 1 +
cmp byte ptr [ecx] 5Fh +
jnz loc_46516E  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+1Ch+var_14] 0 +
jmp loc_46516E  +
cmp al 69h +
jz loc_464BC3  +
jmp loc_464BCD  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edi [eax+0Ch] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_18] ecx +
movzx ebp byte ptr [edi] +
jmp loc_465237  +
mov eax ebp +
cmp al 56h +
jz loc_4652C0  +
mov eax ebp +
cmp al 4Bh +
jz loc_4652D8  +
cmp byte ptr [edi+1] 0 +
jz loc_4652B4  +
lea eax [edi+2] +
mov [ebx+0Ch] eax +
movzx ecx byte ptr [edi+1] +
cmp cl 78h +
jnz loc_465267  +
add dword ptr [ebx+30h] 11h +
xor eax eax +
mov edx 4Ch +
mov [esp+20h+var_20] eax +
xor ecx ecx +
mov eax ebx +
call sub_45D6A0  +
test eax eax +
mov [esi] eax +
jz loc_4652B4  +
mov edi [ebx+0Ch] +
lea esi [eax+8] +
movzx ebp byte ptr [edi] +
mov eax edi +
call sub_45DD90  +
test eax eax +
jz loc_465320  +
lea eax [edi+1] +
mov [ebx+0Ch] eax +
mov eax ebp +
cmp al 72h +
jnz loc_4651E0  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_465218  +
mov eax ecx +
and eax 0FFFFFFDFh +
cmp al 4Fh +
jnz loc_4652F0  +
add dword ptr [ebx+30h] 9 +
xor eax eax +
cmp cl 4Fh +
mov edx 4Eh +
jnz loc_465218  +
mov edi [ebx+34h] +
mov eax ebx +
mov dword ptr [ebx+34h] 1 +
call sub_464B50  +
mov [ebx+34h] edi +
test eax eax +
jz loc_4652B4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_4652B4  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Eh +
jmp loc_465218  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_465218  +
cmp [esp+20h+var_18] 1 +
sbb edx edx +
xor eax eax +
and edx 0FFFFFFFDh +
add edx 1Eh +
add dword ptr [ebx+30h] 6 +
jmp loc_465218  +
cmp cl 77h +
jnz loc_4652B4  +
add dword ptr [ebx+30h] 6 +
mov eax ebx +
call sub_463ED0  +
test eax eax +
jz loc_4652B4  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_4652B4  +
add edx 1 +
mov [ebx+0Ch] edx +
mov edx 4Fh +
jmp loc_465218  +
mov eax [esp+20h+var_18] +
test eax eax +
jnz loc_465334  +
mov eax ebp +
cmp al 46h +
jnz loc_465334  +
cmp esi [esp+20h+var_14] +
jnz loc_46535C  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1Bh +
jz loc_465373  +
cmp eax 19h +
jnz loc_465351  +
mov dword ptr [ebp+0] 1Ch +
lea eax [ebp+8] +
cmp esi eax +
mov [esp-0Ch+arg_8] eax +
jz loc_465334  +
mov eax [esp-0Ch+arg_8] +
mov ebp [eax] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_465340  +
mov dword ptr [ebp+0] 1Dh +
jmp loc_465351  +
mov dword ptr [ebp+0] 1Eh +
jmp loc_465351  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov edx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_465465  +
mov [esp+2Ch+var_10] 0 +
lea esi [esp+2Ch+var_10] +
jmp loc_4653E6  +
sub eax 49h +
cmp al 1 +
ja loc_465430  +
mov eax ebx +
call sub_465490  +
mov ecx eax +
test ecx ecx +
jz loc_465414  +
mov [esp+2Ch+var_2C] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_45D6A0  +
test eax eax +
mov [esi] eax +
jz loc_465414  +
mov edx [ebx+0Ch] +
lea esi [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_465450  +
cmp al 4Ch +
jz loc_465440  +
jle loc_4653A8  +
cmp al 58h +
nop   +
jnz loc_465430  +
add edx 1 +
mov ebp [ebx+34h] +
mov eax ebx +
mov [ebx+0Ch] edx +
mov dword ptr [ebx+34h] 1 +
call sub_464B50  +
mov edx [ebx+0Ch] +
mov [ebx+34h] ebp +
cmp byte ptr [edx] 45h +
jz loc_465420  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_4653BC  +
mov [esp+2Ch+var_2C] ebx +
call sub_4634B0  +
mov ecx eax +
jmp loc_4653BC  +
mov eax ebx +
call sub_465FE0  +
mov ecx eax +
jmp loc_4653BC  +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
xor ecx ecx +
mov [ebx+0Ch] edx +
mov eax ebx +
mov edx 2Fh +
mov [esp+2Ch+var_2C] 0 +
call sub_45D6A0  +
jmp loc_465416  +
***
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
sub ecx 49h +
cmp cl 1 +
ja loc_4654B0  +
add edx 1 +
mov [eax+0Ch] edx +
jmp sub_465380  +
xor eax eax +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_465644  +
jle loc_465523  +
cmp al 55h +
jz loc_465510  +
cmp al 5Ah +
nop   +
jnz loc_4655F0  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_4658D0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov edi eax +
jz loc_4657B0  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_463FA0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_4655F0  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_4651C0  +
test eax eax +
mov edi eax +
jz loc_465503  +
xor edx edx +
mov eax esi +
call sub_45D750  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_4655E2  +
cmp bl 44h +
jz loc_465746  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_4656F0  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_4656F0  +
cmp bl 43h +
jz loc_4656F0  +
cmp bl 55h +
jz loc_4656F0  +
cmp bl 4Ch +
jz loc_4656F0  +
cmp bl 53h +
jz loc_465790  +
cmp bl 49h +
jz loc_465770  +
cmp bl 54h +
jz loc_4657A1  +
cmp bl 45h +
nop   +
jz loc_46588D  +
cmp bl 4Dh +
jnz loc_4655E2  +
test ebp ebp +
lea esi [esi+0] +
jz loc_4655E2  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_465564  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_465505  +
mov eax esi +
call sub_463FA0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_465519  +
test eax eax +
jz loc_465503  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_465503  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_465490  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_45D6A0  +
mov ebx eax +
jmp loc_465519  +
cmp byte ptr [edx+1] 74h +
jz loc_465682  +
xor edx edx +
mov eax esi +
call sub_45DB30  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_465519  +
mov eax esi +
call sub_465490  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_45D6A0  +
mov ebx eax +
jmp loc_465519  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_463FA0  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_45D700  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_45D6A0  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_465519  +
test edi edi +
jz loc_465503  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_465503  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_465663  +
mov eax esi +
call sub_463FA0  +
test ebp ebp +
jz loc_465760  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_45D6A0  +
mov ebp eax +
cmp bl 53h +
jz loc_46573B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_465764  +
test ebp ebp +
jz loc_4655E2  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_4655E2  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_465560  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_4656F0  +
mov [esp+30h+var_30] esi +
call sub_4634B0  +
test ebp ebp +
jnz loc_4656FB  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46570E  +
mov ebx 45h +
jmp loc_46556D  +
test ebp ebp +
jz loc_4655E2  +
mov eax esi +
call sub_465490  +
mov edx 4 +
jmp loc_465700  +
mov edx 1 +
mov eax esi +
call sub_45DB30  +
jmp loc_4656F7  +
mov eax esi +
call sub_45D9C0  +
jmp loc_4656F7  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_465862  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_465835  +
mov eax esi +
call sub_4654C0  +
test eax eax +
mov ebx eax +
jz loc_4657E4  +
mov eax [eax] +
cmp eax 45h +
jz loc_4657E4  +
cmp eax 47h +
jnz loc_465850  +
cmp ebp 0FFFFFFFFh +
jz loc_465814  +
mov edx [esi+14h] +
cmp edx [esi+18h] +
jge loc_465831  +
mov eax edx +
add edx 1 +
shl eax 4 +
add eax [esi+10h] +
mov dword ptr [eax+4] 0 +
mov [esi+14h] edx +
mov [eax+8] ebx +
mov ebx eax +
mov dword ptr [eax] 46h +
mov [eax+0Ch] ebp +
mov [esp+30h+var_30] ebx +
mov ecx edi +
mov eax esi +
mov edx 2 +
call sub_45D6A0  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_465814  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_45D980  +
test eax eax +
mov ebp eax +
jns loc_4657CB  +
xor ebx ebx +
jmp loc_465505  +
mov eax esi +
call sub_45DDD0  +
test eax eax +
jnz loc_4657E4  +
xor ebx ebx +
jmp loc_465505  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_45DDD0  +
test eax eax +
jz loc_465503  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_45D700  +
mov [esp+30h+var_30] eax +
jmp loc_465817  +
test ebp ebp +
mov [edi] ebp +
jz loc_465503  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_4658AA  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+8] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_465503  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_465519  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_4659D5  +
cmp cl 47h +
jz loc_4659D5  +
mov eax ebx +
mov edi edx +
call sub_4654C0  +
test eax eax +
mov esi eax +
jnz loc_465980  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_4659ED  +
test dl dl +
jz loc_4659ED  +
cmp dl 45h +
jz loc_4659ED  +
mov edx esi +
mov eax [edx] +
cmp eax 20h +
ja loc_465A80  +
cmp eax 1Ch +
jnb loc_465A8F  +
cmp eax 4 +
jnz loc_465A30  +
mov edx [edx+8] +
test edx edx +
jz loc_465970  +
mov eax [edx] +
cmp eax 8 +
ja loc_465A20  +
cmp eax 7 +
jnb loc_465A30  +
sub eax 1 +
cmp eax 1 +
ja loc_465970  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_46594B  +
nop   +
mov edx 1 +
jmp loc_465A32  +
test edi edi +
jz loc_465904  +
test byte ptr [ebx+8] 1 +
jnz loc_465904  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_4659AD  +
lea esi [esi+0] +
mov esi [esi+8] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_4659A0  +
cmp edx 2 +
mov eax esi +
jnz loc_4659ED  +
mov ebx [esi+0Ch] +
jmp loc_4659C3  +
mov ebx [ebx+8] +
mov eax [ebx] +
call sub_45D8C0  +
test eax eax +
jnz loc_4659C0  +
mov [esi+0Ch] ebx +
mov eax esi +
jmp loc_4659ED  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_465A52  +
cmp dl 47h +
jz loc_4659F5  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4659EB  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_4659EB  +
movzx edx dl +
jmp ds:off_4D22F4[edx*4]  +
cmp eax 34h +
jnz loc_465970  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_464380  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_4659EB  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_4659EB  +
movzx eax al +
jmp ds:off_4D23BC[eax*4]  +
cmp eax 4Ch +
jz loc_465A8F  +
jb loc_465A30  +
sub eax 4Eh +
cmp eax 1 +
ja loc_465A30  +
mov edx [edx+8] +
test edx edx +
jnz loc_465927  +
jmp loc_465A30  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
cmp eax 1 +
jle loc_4659EB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_4659EB  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_4659EB  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_4659EB  +
xor esi esi +
cmp al 24h +
jz loc_465E26  +
nop   +
lea esi [esi+0] +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_465B23  +
cmp al 24h +
jz loc_465B23  +
add esi 1 +
cmp esi ebp +
jl loc_465B10  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_45D700  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_4659EB  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_465E76  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Fh +
mov eax ebx +
call sub_45D6A0  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_4659EB  +
test ebp ebp +
jg loc_465AF6  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Eh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_45D6A0  +
jmp loc_4659ED  +
mov eax ebx +
call sub_4654C0  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
cmp byte ptr [eax+2] 0 +
jz loc_465E7F  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_465E7F  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov eax ebx +
call sub_4654C0  +
mov esi eax +
mov eax ebx +
call sub_45D940  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov eax ebx +
call sub_4654C0  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_45D8E0  +
test eax eax +
js loc_4659EB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_4659EB  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_4634B0  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov edx 76h +
mov eax ebx +
call sub_45DD20  +
test eax eax +
jz loc_4659EB  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov edx 68h +
mov eax ebx +
call sub_45DD20  +
test eax eax +
jz loc_4659EB  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
xor edx edx +
mov eax ebx +
call sub_45DD20  +
test eax eax +
jz loc_4659EB  +
xor edx edx +
mov eax ebx +
call sub_45DD20  +
test eax eax +
jz loc_4659EB  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov eax ebx +
call sub_4654C0  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_465EA9  +
cmp al 5Fh +
jz loc_465EA2  +
cmp al 24h +
jnz loc_4659EB  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_465EB0  +
mov eax edx +
add edx 1 +
shl eax 4 +
sub ebp 2 +
add eax [ebx+10h] +
mov dword ptr [eax+4] 0 +
mov [ebx+14h] edx +
mov [eax+8] ecx +
mov edi [ebx+0Ch] +
mov dword ptr [eax] 40h +
add edi 2 +
mov [ebx+0Ch] edi +
jmp loc_465B40  +
mov [esp+1Ch+var_10] eax +
jmp loc_465B67  +
xor edx edx +
mov eax ebx +
call sub_4658D0  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_45D6A0  +
jmp loc_4659ED  +
mov ecx 2Eh +
jmp loc_465E3F  +
mov ecx 2Fh +
jmp loc_465E3F  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_4659EB  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_465FC0  +
test ebx ebx +
jnz loc_465EE6  +
cmp dl 5Ah +
jz loc_465EEF  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_4658D0  +
test ebx ebx +
mov edi eax +
jz loc_465EE8  +
test byte ptr [esi+8] 1 +
jz loc_465EE8  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_465EE8  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_465F94  +
cmp al 5Fh +
jz loc_465F94  +
sub eax 30h +
cmp al 9 +
ja loc_465F8B  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_465F62  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_465F62  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_465F2E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_465F50  +
cmp cl 2Eh +
jz loc_465F33  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_45D700  +
mov ecx edi +
mov edx 4Dh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_45D6A0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_465F12  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_465FAF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_465FA2  +
cmp cl 5Fh +
jz loc_465FA2  +
jmp loc_465F2E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_465EE1  +
***
jmp sub_465FE0  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_470CF0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_465EC0  +
mov ebx eax +
xor eax eax +
***
test ebx ebx +
jz sub_4661CA  +
cmp dword ptr [ebx] 8 +
ja sub_4661CA  +
mov ecx [ebx] +
jmp ds:off_4D248C[ecx*4]  +
***
mov eax [ebx+8] +
lea esp [ebp-0Ch] +
mov eax [ebx+8] +
jmp loc_4661A7  +
***
jmp loc_4661A7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [ebp+var_54] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_45D7A0  +
mov ecx [ebp+var_2C] +
mov eax 1 +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx ecx +
test ecx ecx +
cmovg eax ecx +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_470CF0  +
sub esp eax +
test edx edx +
mov eax 1 +
cmovg eax edx +
lea eax ds:12h[eax*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov edx [ebp+arg_0] +
sub esp eax +
lea edi [ebp+var_160] +
lea eax [esp+178h+var_16C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_28] eax +
mov eax edi +
call sub_45E0D0  +
mov eax [ebp+var_60] +
mov esp esi +
mov ecx [ebp+var_54] +
mov edx [ebp+var_58] +
mov byte ptr [ebp+eax+var_160] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_48] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_466510  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_4664C0  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_4664B1  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
mov eax edx +
shl eax 5 +
add eax 10h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_470CF0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_466465  +
jb loc_466525  +
cmp esi 3 +
ja loc_466525  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_46641C  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_466540  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_45D700  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 43h +
mov [esp+78h+var_78] 0 +
call sub_45D6A0  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_46647A  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_465EC0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_46648A  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_4664AF  +
test ebx ebx +
jz loc_466537  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_466200  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_4664CC  +
cmp al 5Fh +
jnz loc_466500  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_4664DF  +
cmp al 44h +
jnz loc_46635E  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_46635E  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46636C  +
cmp al 24h +
jnz loc_46635E  +
jmp loc_4664CC  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_46634A  +
mov esi 1 +
nop   +
jmp loc_46636C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_4634B0  +
mov ebx eax +
jmp loc_46647A  +
xor eax eax +
mov esp edi +
jmp loc_4664B1  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_4658D0  +
mov ecx eax +
jmp loc_466438  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_45E010 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_466330  +
test eax eax +
jz loc_4665B6  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_4665B1  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_466643  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_45E010 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_466200  +
test eax eax +
jz loc_466674  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_466656  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_466650  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_46668E  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_4665FC  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_46663E  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_4665FC  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_466560  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_466330  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+20h] +
lea ecx [esp+0Ch] +
call sub_466560  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_466330  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_4660F0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_4660F0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_466820  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_4D95A0 +
call sprintf  +
add esp 18h +
mov eax offset unk_4D95A0 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] esi +
call sub_467E30  +
mov [esp+10h+var_10] eax +
call sub_452ED0  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
mov edi eax +
call vsprintf  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax] +
mov [esp+38h+var_2C] edx +
test esi esi +
jz loc_4669C8  +
mov edx [esi] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
mov edi eax +
jz loc_4669C8  +
mov ebx [esi+0Ch] +
cmovs ebx [esi+8] +
test ebx ebx +
jz loc_4669C8  +
mov edx [ebx] +
mov ecx [esp+38h+var_2C] +
mov eax [ebp+4] +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ecx +
call eax  +
test eax eax +
jz loc_4669B8  +
js loc_466936  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_4669B8  +
mov ecx edi +
xor edx edx +
shr ecx 1Fh +
mov [esp+38h+var_28] ecx +
test edi edi +
setnle cl  +
test eax eax +
setnle al  +
jle loc_466970  +
test cl cl +
jz loc_466970  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
mov [esi+0Ch] edx +
mov eax [edx+8] +
mov [edx+8] esi +
mov [esi+0Ch] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_4668A7  +
mov edx [ebx+8] +
test edx edx +
jz loc_4669B8  +
mov ecx edi +
shr ecx 1Fh +
test cl cl +
mov byte ptr [esp+38h+var_28] cl +
jz loc_4669E4  +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
mov [esi+8] edx +
mov eax [edx+0Ch] +
mov [edx+0Ch] esi +
mov [esi+8] eax +
mov esi edx +
mov [ebp+0] edx +
jmp loc_4668A7  +
cmp byte ptr [esp+38h+var_28] 0 +
jz loc_466990  +
test al al +
jz loc_466990  +
mov edx [ebx+0Ch] +
mov eax [edx+8] +
mov [edx+8] ebx +
mov [ebx+0Ch] eax +
jmp loc_466957  +
test dl dl +
jz loc_4669B0  +
test cl cl +
jz loc_4669B0  +
mov edx [ebx+8] +
mov eax [edx+0Ch] +
mov [edx+0Ch] ebx +
mov [ebx+8] eax +
jmp loc_466920  +
mov esi [ebp+0] +
jmp loc_4668A7  +
test edi edi +
js loc_4669D0  +
mov eax [ebx+8] +
mov [ebx+8] esi +
mov [esi+0Ch] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
mov [ebx+0Ch] esi +
mov [esi+8] eax +
mov [ebp+0] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 1 +
jmp loc_466904  +
***
jmp free  +
***
jmp sub_452ED0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1Ch +
call sub_452ED0  +
mov edx [esp+1Ch+arg_0] +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+10h] offset loc_466A00 +
mov dword ptr [eax+14h] offset loc_4669F0 +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_8] +
mov dword ptr [eax+18h] 0 +
mov [eax+0Ch] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+34h] +
mov esi [esp+2Ch] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call esi  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+10h] esi +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+38h] +
mov dword ptr [esp] 1Ch +
mov [esp+4] ebx +
call dword ptr [esp+2Ch]  +
mov edx [esp+20h] +
mov [eax+4] edx +
mov edx [esp+24h] +
mov dword ptr [eax] 0 +
mov [eax+18h] ebx +
mov [eax+8] edx +
mov edx [esp+28h] +
mov [eax+0Ch] edx +
mov edx [esp+30h] +
mov [eax+10h] edx +
mov edx [esp+34h] +
mov [eax+14h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esi] +
test ebx ebx +
jz loc_466BD5  +
mov eax [esi+8] +
test eax eax +
jz loc_466B23  +
mov edx [ebx] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_466B32  +
mov edx [ebx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov dword ptr [ebx] 0 +
mov eax [ebx+8] +
xor edi edi +
test eax eax +
jz loc_466BB9  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_466B54  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+8] +
mov eax [esi+0Ch] +
mov ebp edx +
test eax eax +
jz loc_466B68  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov ebp [ebx+8] +
mov eax [ebx+0Ch] +
mov [ebp+0] edi +
test eax eax +
jz loc_466BC2  +
mov ecx [esi+8] +
mov edx eax +
test ecx ecx +
jz loc_466B85  +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
mov edx [ebx+0Ch] +
mov eax [esi+0Ch] +
mov edi edx +
test eax eax +
jz loc_466B99  +
mov edx [edx+4] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edi [ebx+0Ch] +
mov [edi] ebp +
mov ebp [ebx] +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] edx +
call eax  +
test ebp ebp +
jz loc_466BC6  +
mov ebx ebp +
mov eax [ebx+8] +
test eax eax +
jnz loc_466B41  +
mov eax [ebx+0Ch] +
mov ebp edi +
test eax eax +
jnz loc_466B72  +
mov edi ebp +
jmp loc_466B9B  +
test edi edi +
jz loc_466BD5  +
mov ebx edi +
lea esi [esi+0] +
jmp loc_466B38  +
mov edx [esi+18h] +
mov eax [esi+14h] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] edx +
call eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_466890  +
mov eax [ebx] +
test eax eax +
jz loc_466C85  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call edx  +
mov edi eax +
mov eax [ebx] +
test eax eax +
jz loc_466C46  +
test edi edi +
jnz loc_466C46  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_466C38  +
mov eax [eax+4] +
mov [esp+10h+var_10] eax +
call edx  +
mov eax [ebx] +
mov ecx [esp+10h+arg_8] +
mov [eax+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov ecx [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] ecx +
jz loc_466CA7  +
test edi edi +
js loc_466CC0  +
mov ecx [edx+8] +
mov [eax+0Ch] edx +
mov [eax+8] ecx +
mov dword ptr [edx+8] 0 +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+18h] +
mov eax [ebx+10h] +
mov [esp+10h+var_10] 10h +
mov [esp+10h+var_C] edx +
call eax  +
mov edx [ebx] +
mov edi [esp+10h+arg_8] +
test edx edx +
mov [eax] esi +
mov [eax+4] edi +
jnz loc_466C6C  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+8] 0 +
mov [ebx] eax +
jmp loc_466C7E  +
mov ecx [edx+0Ch] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov dword ptr [edx+0Ch] 0 +
mov [ebx] eax +
jmp loc_466C7E  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax esi +
mov edx ebx +
call sub_466890  +
mov eax [esi] +
test eax eax +
jz loc_466D4F  +
mov eax [eax] +
mov edx [esi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_466D4F  +
mov edx [esi+0Ch] +
mov eax [esi] +
test edx edx +
mov ebx [eax+8] +
mov edi [eax+0Ch] +
jz loc_466D28  +
mov eax [eax+4] +
mov [esp] eax +
call edx  +
mov eax [esi] +
mov ecx [esi+18h] +
mov edx [esi+14h] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test ebx ebx +
jz loc_466D56  +
test edi edi +
mov [esi] ebx +
jnz loc_466D45  +
jmp loc_466D4F  +
mov ebx eax +
mov eax [ebx+0Ch] +
test eax eax +
jnz loc_466D43  +
mov [ebx+0Ch] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esi] edi +
jmp loc_466D4F  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax ebx +
mov edx esi +
call sub_466890  +
mov eax [ebx] +
test eax eax +
jz loc_466D96  +
mov eax [eax] +
mov edx [ebx+4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call edx  +
test eax eax +
jnz loc_466D96  +
mov eax [ebx] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jnz loc_466DB2  +
jmp loc_466DBB  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_466DB0  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jnz loc_466DD2  +
jmp loc_466DDB  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_466DD0  +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jz loc_466E30  +
mov edx esi +
mov eax ebx +
call sub_466890  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
test eax eax +
mov eax [ebx] +
js loc_466E29  +
mov eax [eax+8] +
test eax eax +
jnz loc_466E22  +
jmp loc_466E30  +
mov eax edx +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_466E20  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax [ebx] +
test eax eax +
jz loc_466E91  +
mov edx esi +
mov eax ebx +
call sub_466890  +
mov edx [ebx] +
mov eax [ebx+4] +
mov edx [edx] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] edx +
call eax  +
test eax eax +
mov eax [ebx] +
jle loc_466E78  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_466E84  +
nop   +
jmp loc_466E91  +
mov eax edx +
mov edx [eax+8] +
test edx edx +
jnz loc_466E82  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_466E72  +
***
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
mov esi [eax] +
mov [esp+28h+var_28] 190h +
call sub_452ED0  +
mov edi eax +
jmp loc_466ED1  +
cmp ebx ebp +
jz loc_466EF7  +
mov [edi+ebx*4] esi +
mov esi [esi+8] +
add ebx 1 +
test esi esi +
jnz loc_466EC4  +
test ebx ebx +
jz loc_466F11  +
sub ebx 1 +
mov eax [esp+28h+arg_8] +
mov esi [edi+ebx*4] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call [esp+28h+arg_4]  +
test eax eax +
jnz loc_466F13  +
mov esi [esi+0Ch] +
jmp loc_466ED1  +
lea eax ds:0[ebx*8] +
mov [esp+28h+var_28] edi +
lea ebp [ebx+ebx] +
mov [esp+28h+var_24] eax +
call sub_452F50  +
mov edi eax +
jmp loc_466EC8  +
xor eax eax +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_1C] eax +
call free  +
mov eax [esp+28h+var_1C] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnle dl  +
cmovge eax edx +
retn   +
***
mov eax [esp+8] +
xor edx edx +
cmp [esp+4] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov edx [esp+0Ch] +
mov eax [esp+10h] +
mov esi [edx] +
mov ebx [edx+4] +
mov ecx [edx+8] +
mov edx [edx+0Ch] +
mov [eax] esi +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] edx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov esi [ebx+18h] +
mov eax [ebx+10h] +
add eax esi +
cmp esi eax +
mov [ebx+10h] eax +
jbe loc_467762  +
add dword ptr [ebx+14h] 1 +
mov edi 38h +
sub edi esi +
cmp esi 37h +
jbe loc_467775  +
mov edi 78h +
sub edi esi +
lea eax [ebx+esi+1Ch] +
add esi edi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] offset unk_4D31E0 +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax [ebx+10h] +
shl eax 3 +
mov [ebx+esi+1Ch] eax +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
lea edx ds:0[ecx*8] +
shr eax 1Dh +
or eax edx +
mov [ebx+esi+20h] eax +
lea eax [ebx+1Ch] +
add esi 8 +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] eax +
call sub_466FF0  +
mov esi [ebx] +
mov eax [ebx+0Ch] +
mov ecx [ebx+4] +
mov edx [ebx+8] +
mov [ebp+0] esi +
mov [ebp+0Ch] eax +
mov eax ebp +
mov [ebp+4] ecx +
mov [ebp+8] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov ebx [esi+18h] +
test ebx ebx +
jnz loc_467928  +
cmp [esp+1Ch+arg_4] 40h +
jbe loc_467914  +
test byte ptr [esp+1Ch+arg_0] 3 +
jz loc_4678F0  +
mov edi [esp+1Ch+arg_4] +
lea ebp [esi+1Ch] +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx] +
sub edi 40h +
add ebx 40h +
mov [ebp+0] ecx +
mov ecx [ebx-3Ch] +
mov [ebp+4] ecx +
mov ecx [ebx-38h] +
mov [ebp+8] ecx +
mov ecx [ebx-34h] +
mov [ebp+0Ch] ecx +
mov ecx [ebx-30h] +
mov [ebp+10h] ecx +
mov ecx [ebx-2Ch] +
mov [ebp+14h] ecx +
mov ecx [ebx-28h] +
mov [ebp+18h] ecx +
mov ecx [ebx-24h] +
mov [ebp+1Ch] ecx +
mov ecx [ebx-20h] +
mov [ebp+20h] ecx +
mov ecx [ebx-1Ch] +
mov [ebp+24h] ecx +
mov ecx [ebx-18h] +
mov [ebp+28h] ecx +
mov ecx [ebx-14h] +
mov [ebp+2Ch] ecx +
mov ecx [ebx-10h] +
mov [ebp+30h] ecx +
mov ecx [ebx-0Ch] +
mov [ebp+34h] ecx +
mov ecx [ebx-8] +
mov [ebp+38h] ecx +
mov ecx [ebx-4] +
mov [ebp+3Ch] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call sub_466FF0  +
cmp edi 40h +
ja loc_467827  +
mov eax [esp+1Ch+arg_4] +
lea edx [eax-41h] +
shr edx 6 +
lea ecx [edx+1] +
shl ecx 6 +
shl edx 6 +
add [esp+1Ch+arg_0] ecx +
neg edx  +
lea eax [eax+edx-40h] +
mov [esp+1Ch+arg_4] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov eax [esp+1Ch+arg_4] +
mov [esi+18h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] esi +
and ebx 0FFFFFFC0h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call sub_466FF0  +
add [esp+1Ch+arg_0] ebx +
and [esp+1Ch+arg_4] 3Fh +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jnz loc_4679AC  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 80h +
sub edx ebx +
cmp [esp+1Ch+arg_4] edx +
cmovbe edx [esp+1Ch+arg_4] +
lea eax [esi+ebx+1Ch] +
mov [esp+1Ch+var_1C] eax +
mov edi edx +
mov [esp+1Ch+var_14] edx +
mov edx [esp+1Ch+arg_0] +
add ebx edi +
mov [esp+1Ch+var_18] edx +
call memcpy  +
add [esi+18h] edi +
cmp ebx 40h +
ja loc_467970  +
add [esp+1Ch+arg_0] edi +
sub [esp+1Ch+arg_4] edi +
jmp loc_467806  +
mov ecx ebx +
and ebx 3Fh +
and ecx 0FFFFFFC0h +
lea ebp [esi+1Ch] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] ecx +
call sub_466FF0  +
mov ecx [esp+1Ch+var_10] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] ebp +
lea ecx [esi+ecx+1Ch] +
mov [esp+1Ch+var_18] ecx +
call memcpy  +
mov [esi+18h] ebx +
jmp loc_46795C  +
lea ebp [esi+1Ch] +
jmp loc_4678C6  +
***
mov eax [esp+0B8h+arg_4] +
lea ebx [esp+0B8h+var_A4] +
mov [esp+0B8h+var_B0] ebx +
mov [esp+0B8h+var_A4] 67452301h +
mov [esp+0B8h+var_A0] 0EFCDAB89h +
mov [esp+0B8h+var_B4] eax +
mov eax [esp+0B8h+arg_0] +
mov [esp+0B8h+var_9C] 98BADCFEh +
mov [esp+0B8h+var_98] 10325476h +
mov [esp+0B8h+var_90] 0 +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_94] 0 +
mov [esp+0B8h+var_8C] 0 +
call sub_4677F0  +
mov eax [esp+0B8h+arg_8] +
mov [esp+0B8h+var_B8] ebx +
mov [esp+0B8h+var_B4] eax +
call sub_467740  +
add esp 0B8h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_470CF0  +
mov edi 1000h +
sub esp eax +
mov esi [esp+10h+arg_110C] +
lea ebx [esp+10h+arg_A4] +
mov [esp+10h+arg_8] 67452301h +
mov [esp+10h+arg_C] 0EFCDAB89h +
mov [esp+10h+arg_10] 98BADCFEh +
mov [esp+10h+arg_14] 10325476h +
mov [esp+10h+arg_1C] 0 +
mov [esp+10h+arg_18] 0 +
mov [esp+10h+arg_20] 0 +
nop   +
lea esi [esi+0] +
xor ebp ebp +
jmp loc_467AA8  +
test eax eax +
jz loc_467AD1  +
mov eax edi +
sub eax ebp +
mov [esp+10h+var_8] eax +
lea eax [ebx+ebp] +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] eax +
call fread  +
add ebp eax +
cmp ebp 0FFFh +
jbe loc_467AA4  +
test eax eax +
jz loc_467AF0  +
lea eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] 1000h +
mov [esp+10h+var_10] ebx +
call sub_466FF0  +
jmp loc_467AA0  +
mov [esp+10h+var_10] esi +
call ferror  +
test eax eax +
mov esi eax +
jnz loc_467B26  +
test ebp ebp +
lea edi [esp+10h+arg_8] +
jnz loc_467B38  +
mov eax [esp+10h+arg_1110] +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] eax +
call sub_467740  +
add esp 110Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 110Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] ebp +
mov [esp+10h+var_10] ebx +
call sub_4677F0  +
jmp loc_467B06  +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_467E1B  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx_0 +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_467E1B  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_474790  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_4D95E0 +
adc edi ds:dword_4D95E4 +
mov ds:dword_4D95E0 esi +
mov ds:dword_4D95E4 edi +
jmp loc_467C5C  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_467C32  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_467E07  +
mov esi ds:dword_4D95E0 +
mov edi ds:dword_4D95E4 +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_4D95E0 esi +
mov ds:dword_4D95E4 edi +
jz loc_467E07  +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470D20  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx+1] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470D20  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx+2] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470D20  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx+3] al +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
call sub_470D20  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov esi eax +
mov edi edx +
mov [esp-9Ch+arg_8C] edx +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx+4] al +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] esi +
mov [esp-9Ch+arg_8C] edi +
call sub_470D20  +
mov [esp-9Ch+arg_90] 3Eh +
mov [esp-9Ch+arg_94] 0 +
mov [esp-9Ch+arg_88] eax +
mov [esp-9Ch+arg_8C] edx +
call sub_470E30  +
movzx eax ds:byte_4D3240[eax] +
mov [ebx+5] al +
mov eax [esp-9Ch+arg_D8] +
mov [esp-9Ch+arg_90] 180h +
mov [esp-9Ch+arg_8C] 8502h +
mov [esp-9Ch+arg_88] eax +
call _open_0  +
test eax eax +
js loc_467C18  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-9Ch+arg_D8] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_10] edi +
call strlen  +
mov edx edi +
lea esi [eax+1] +
jmp loc_467E5F  +
add edx 1 +
mov [esp+2Ch+var_10] edx +
mov edi edx +
cmp byte ptr [edx-1] 25h +
jz loc_467E74  +
cmp byte ptr [edx] 0 +
jnz loc_467E50  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp-10h+arg_18] edi +
movzx ebx byte ptr [edi] +
mov ebp edi +
add edi 1 +
mov dword ptr [esp+0] offset a0_0 +
movsx eax bl +
mov [esp-10h+arg_0] eax +
call strchr  +
test eax eax +
jnz loc_467E70  +
cmp bl 2Ah +
jz loc_467F00  +
lea eax [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] eax +
mov [esp+0] ebp +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
lea edi [eax+esi] +
cmp bl 2Eh +
jnz loc_467EC9  +
jmp loc_467F33  +
mov [esp-10h+arg_18] ecx +
movzx ebx byte ptr [ebp+1] +
movsx eax bl +
mov ebp ecx +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset off_4D3286 +
call strchr  +
lea ecx [ebp+1] +
test eax eax +
jnz loc_467EC1  +
lea eax [ebx-45h] +
cmp al 33h +
lea esi [edi+1Eh] +
ja loc_467F6B  +
movzx eax al +
jmp ds:off_4D328C[eax*4]  +
mov eax [esp-10h+arg_40] +
mov ecx edi +
mov ebx [esp-10h+arg_40] +
mov [esp-10h+arg_18] edi +
mov eax [eax] +
mov edx eax +
mov [esp-10h+arg_8] eax +
mov eax [ebx] +
sar edx 1Fh +
xor eax edx +
sub eax edx +
lea edi [eax+esi] +
mov eax ebx +
movzx ebx byte ptr [ecx] +
add eax 4 +
mov [esp-10h+arg_40] eax +
cmp bl 2Eh +
jnz loc_467EC9  +
lea eax [ecx+1] +
mov [esp-10h+arg_18] eax +
cmp byte ptr [ecx+1] 2Ah +
jz loc_467F9D  +
lea esi [esp-10h+arg_18] +
mov [esp-10h+arg_4] 0Ah +
mov [esp-10h+arg_0] esi +
mov [esp+0] eax +
call strtoul  +
mov ecx [esp-10h+arg_18] +
movzx ebx byte ptr [ecx] +
add edi eax +
jmp loc_467EC9  +
add [esp-10h+arg_40] 4 +
lea edx [ebp+1] +
mov [esp-10h+arg_18] edx +
jmp loc_467E5F  +
mov eax [esp-10h+arg_40] +
lea edi [eax+4] +
mov eax [eax] +
mov [esp+0] eax +
call strlen  +
mov [esp-10h+arg_40] edi +
add esi eax +
jmp loc_467F6B  +
add [esp-10h+arg_40] 8 +
lea esi [edi+151h] +
jmp loc_467F6B  +
mov eax [esp-10h+arg_40] +
lea edx [ecx+2] +
mov [esp-10h+arg_18] edx +
add [esp-10h+arg_40] 4 +
mov esi [eax] +
mov ebx [eax] +
sar esi 1Fh +
xor ebx esi +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
mov ecx edx +
sub eax esi +
add edi eax +
jmp loc_467EC9  +
***
cmp edx 4Bh +
ja loc_468027  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4D34E0[edx*4]  +
test ecx ecx +
jz loc_468023  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_468012  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_468012  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_468023  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_467FE6  +
xor eax eax +
jmp loc_468012  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_468056  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_468056  +
test edx edx +
jz loc_468056  +
test ecx ecx +
jnz loc_468060  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_4680D5  +
test dl dl +
jnz loc_4680E1  +
cmp al 4Bh +
jnz loc_468120  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_467FD0  +
test eax eax +
mov [esi] eax +
jz loc_468115  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_468097  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_468100  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_4680B6  +
test cl cl +
jz loc_4680A7  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_4680B6  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_468163  +
cmp al 46h +
jnz loc_468163  +
cmp esi ebp +
jnz loc_46814A  +
lea esi [esi+0] +
jmp loc_468163  +
cmp eax 1Bh +
jz loc_468170  +
cmp eax 19h +
jnz loc_468143  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_468163  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_468132  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_46814A  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_468143  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_4681C0  +
test dl dl +
jnz loc_4681C4  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_467FD0  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_4681B9  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_4681A3  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
mov edx [eax+0Ch] +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jz loc_468248  +
cmp cl 2Eh +
jnz loc_468222  +
lea esi [esi+0] +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_468222  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_4681E7  +
lea esi [esi+0] +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_468210  +
cmp cl 2Eh +
jz loc_4681F0  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_468030  +
mov ecx edi +
mov edx 4Bh +
mov [esp+0Ch+var_C] eax +
mov eax esi +
call sub_467FD0  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [edx+1] +
lea ebx [eax-61h] +
cmp bl 19h +
jbe loc_46825A  +
cmp al 5Fh +
mov ebx edx +
jnz loc_4681E7  +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_468275  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_468268  +
cmp cl 5Fh +
jz loc_468268  +
jmp loc_4681E7  +
***
mov ecx [eax+0Ch] +
cmp byte ptr [ecx] 53h +
jz loc_468290  +
xor eax eax +
retn   +
push ebp  +
push edi  +
push esi  +
push ebx  +
lea ebx [ecx+1] +
sub esp 0Ch +
mov [eax+0Ch] ebx +
cmp byte ptr [ecx+1] 0 +
jnz loc_4682F0  +
xor ecx ecx +
mov ebx [eax+8] +
shr ebx 3 +
and ebx 1 +
test edx edx +
jz loc_4682C5  +
test bl bl +
jnz loc_4682C5  +
mov edx [eax+0Ch] +
movzx edx byte ptr [edx] +
sub edx 43h +
cmp dl 1 +
setbe bl  +
movzx ebx bl +
mov edx offset unk_4D4240 +
lea esi [esi+0] +
cmp cl [edx] +
jz loc_468375  +
add edx 1Ch +
cmp edx offset unk_4D4304 +
jnz loc_4682D0  +
xor eax eax +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ecx+2] +
mov [eax+0Ch] ebx +
movsx ecx byte ptr [ecx+1] +
lea ebx [ecx-30h] +
cmp bl 9 +
ja loc_46841B  +
cmp cl 5Fh +
jz loc_468371  +
lea ebx [ecx-30h] +
xor edx edx +
cmp bl 9 +
ja loc_468340  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-30h] +
cmp edx ebx +
ja loc_4682E3  +
mov edx [eax+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_468351  +
lea ecx [edx+1] +
mov [eax+0Ch] ecx +
movsx ecx byte ptr [edx] +
cmp cl 5Fh +
jz loc_468357  +
mov edx ebx +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_468315  +
lea ebx [ecx-41h] +
cmp bl 19h +
ja loc_4682E3  +
lea ebx [edx+edx*8] +
lea ebx [ecx+ebx*4-37h] +
jmp loc_46831C  +
xor ecx ecx +
mov edx ebx +
jmp loc_468338  +
add ebx 1 +
cmp ebx [eax+20h] +
jnb loc_4682E3  +
add dword ptr [eax+28h] 1 +
mov eax [eax+1Ch] +
mov eax [eax+ebx*4] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_46835A  +
mov esi [edx+14h] +
test esi esi +
mov [esp+1Ch+var_18] esi +
jz loc_46840B  +
mov ecx [eax+14h] +
mov ebp [eax+18h] +
mov edi [edx+18h] +
mov [esp+1Ch+var_1C] 0 +
cmp ecx ebp +
mov [esp+1Ch+var_14] edi +
jge loc_4683C6  +
mov esi [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_4683C6  +
mov esi [esp+1Ch+var_18] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_1C] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_14] +
mov [edi+8] esi +
mov esi [esp+1Ch+var_1C] +
mov [eax+2Ch] esi +
test ebx ebx +
jz loc_468413  +
mov esi [edx+0Ch] +
mov ebx [edx+10h] +
add [eax+30h] ebx +
cmp ecx ebp +
jge loc_4682E3  +
mov edx [eax+10h] +
lea edi [ecx+ecx*2] +
add ecx 1 +
mov [eax+14h] ecx +
lea edx [edx+edi*4] +
test edx edx +
jz loc_4682E3  +
mov dword ptr [edx] 18h +
mov eax edx +
mov [edx+4] esi +
mov [edx+8] ebx +
jmp loc_4682E5  +
mov ebp [eax+18h] +
mov ecx [eax+14h] +
jmp loc_4683CC  +
mov esi [edx+4] +
mov ebx [edx+8] +
jmp loc_4683D6  +
cmp cl 5Fh +
jz loc_468306  +
lea ebx [ecx-41h] +
cmp bl 19h +
jbe loc_46830B  +
jmp loc_4682A5  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_468470  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_468455  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_468504  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_468513  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_4684E0  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_4684D1  +
xor eax eax +
jmp loc_4684F7  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_468555  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_468551  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_4684C0  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_468588  +
cmp al 6Eh +
jz loc_468581  +
lea eax [ebx+0Ch] +
call sub_4684C0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_468592  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_46858A  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_4685B1  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468560  +
test eax eax +
js loc_4685AC  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_4685AC  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_4685AC  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_468600  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_4684C0  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_4684C0  +
test eax eax +
mov esi eax +
jle loc_4686D4  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_4686D8  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_468690  +
cmp esi 9 +
jle loc_468677  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global__0 +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_4686A0  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_468030  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_468656  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_468656  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_4686B0  +
cmp al 5Fh +
jz loc_4686B0  +
cmp al 24h +
jnz loc_468677  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_468677  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNam_0 +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_468030  +
jmp loc_468682  +
xor eax eax +
jmp loc_468685  +
xor eax eax +
lea esi [esi+0] +
jmp loc_468682  +
***
push ebx  +
mov ebx eax +
jnz loc_46870E  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_468705  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_468740  +
cmp edx 76h +
jnz loc_468700  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_4684C0  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_468700  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_4684C0  +
jmp loc_468748  +
lea eax [ebx+0Ch] +
call sub_4684C0  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_468702  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_468702  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_4687A7  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_4687A0  +
cmp dword ptr [eax] 2Fh +
jnz loc_4687A0  +
cmp edx 0 +
jg loc_46878B  +
jmp loc_468797  +
cmp dword ptr [eax] 2Fh +
jnz loc_4687A0  +
test edx edx +
jz loc_4687A3  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_468782  +
retn   +
jz loc_4687A3  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_4687F5  +
cmp dword ptr [ebx] 4Ah +
ja loc_4687E0  +
mov edx [ebx] +
jmp ds:off_4D3630[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_4687C0  +
test eax eax +
jnz loc_4687F7  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_4687CD  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_468760  +
test eax eax +
jz loc_4687F5  +
cmp dword ptr [eax] 2Fh +
jnz loc_4687F5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+28h] +
mov edi [esp+24h] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_468880  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_468850  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
mov edx [esp+20h] +
add eax [esi+4] +
mov [esp+8] edi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi+0Ch] +
test edx edx +
jnz loc_468843  +
test ebx ebx +
jnz loc_468892  +
cmp eax 2 +
mov bl 2 +
jbe loc_468898  +
add ebx ebx +
cmp eax ebx +
ja loc_468892  +
mov eax [esi] +
mov [esp+4] ebx +
mov [esp] eax +
call realloc  +
test eax eax +
jz loc_4688B1  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_46883C  +
***
mov eax [esi] +
mov [esp] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_468843  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ch +
jz loc_468900  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
cmp dl 5Fh +
setz bl  +
cmp dl 5Ah +
jnz loc_468933  +
test bl bl +
jnz loc_468937  +
xor eax eax +
cmp dl 5Ah +
jz loc_468948  +
cmp dl 45h +
jnz loc_4688F1  +
add ecx 1 +
mov [esi+0Ch] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_468960  +
lea ecx [eax+2] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+2] +
xor eax eax +
cmp dl 5Ah +
jnz loc_468920  +
add ecx 1 +
xor edx edx +
mov [esi+0Ch] ecx +
mov eax esi +
call sub_469850  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_468920  +
mov eax esi +
call sub_468F10  +
test eax eax +
mov edi eax +
jz loc_4688F1  +
cmp dword ptr [eax] 27h +
jz loc_4689E2  +
mov edx [esi+0Ch] +
mov ebp 3Bh +
movzx eax byte ptr [edx] +
cmp al 6Eh +
jz loc_4689D0  +
cmp al 45h +
jz loc_4689F7  +
test al al +
jz loc_4688F1  +
lea ebx [edx+1] +
jmp loc_46899D  +
add ebx 1 +
test al al +
jz loc_4688F1  +
mov [esi+0Ch] ebx +
movzx eax byte ptr [ebx] +
cmp al 45h +
jnz loc_468992  +
mov ecx ebx +
sub ecx edx +
mov eax esi +
call sub_468030  +
mov ecx edi +
mov edx ebp +
mov [esp+20h+var_20] eax +
mov eax esi +
call sub_467FD0  +
mov ecx [esi+0Ch] +
movzx edx byte ptr [ecx] +
jmp loc_468920  +
lea ecx [edx+1] +
mov bp 3Ch +
mov [esi+0Ch] ecx +
movzx eax byte ptr [edx+1] +
mov edx ecx +
jmp loc_468981  +
mov eax [eax+4] +
mov edx [eax+10h] +
test edx edx +
jz loc_468972  +
mov eax [eax+4] +
sub [esi+30h] eax +
jmp loc_468972  +
xor ecx ecx +
jmp loc_4689AB  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov ecx [eax+0Ch] +
mov edi [eax+2Ch] +
movzx eax byte ptr [ecx] +
sub eax 49h +
cmp al 1 +
ja loc_468A97  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 45h +
jz loc_468AE4  +
mov [esp+20h+var_4] 0 +
lea esi [esp+20h+var_4] +
jmp loc_468A72  +
sub eax 49h +
cmp al 1 +
ja loc_468AB0  +
mov eax ebx +
call sub_468A00  +
mov ecx eax +
test ecx ecx +
jz loc_468A97  +
mov [esp+20h+var_20] 0 +
mov edx 2Fh +
mov eax ebx +
call sub_467FD0  +
test eax eax +
mov [esi] eax +
jz loc_468A97  +
mov edx [ebx+0Ch] +
lea esi [eax+8] +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_468AD0  +
cmp al 4Ch +
jz loc_468AC0  +
jle loc_468A38  +
cmp al 58h +
lea esi [esi+0] +
jnz loc_468AB0  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A360  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jz loc_468AA0  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add edx 1 +
mov ecx eax +
mov [ebx+0Ch] edx +
jmp loc_468A48  +
mov eax ebx +
call sub_468F10  +
mov ecx eax +
jmp loc_468A48  +
mov eax ebx +
call sub_4688E0  +
mov ecx eax +
jmp loc_468A48  +
add edx 1 +
mov eax [esp+20h+var_4] +
mov [ebx+2Ch] edi +
mov [ebx+0Ch] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add ecx 2 +
mov edx 2Fh +
mov [ebx+0Ch] ecx +
mov eax ebx +
xor ecx ecx +
mov [esp+20h+var_20] 0 +
call sub_467FD0  +
jmp loc_468A99  +
***
jmp sub_468B10  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
sub eax 4Ch +
cmp al 0Eh +
ja loc_468C70  +
movzx eax al +
jmp ds:off_4D3770[eax*4]  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_469850  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_468DF0  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 74h +
jz loc_468CC4  +
xor edx edx +
mov eax esi +
call sub_468280  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_468BA9  +
mov eax esi +
call sub_468A00  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_467FD0  +
mov ebx eax +
jmp loc_468BA9  +
mov eax esi +
call sub_469F80  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_468080  +
test eax eax +
mov edi eax +
jz loc_468B51  +
xor edx edx +
mov eax esi +
call sub_468180  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
test bl bl +
jz loc_468C63  +
cmp bl 44h +
jz loc_468D86  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_468D30  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_468D30  +
cmp bl 43h +
jz loc_468D30  +
cmp bl 55h +
jz loc_468D30  +
cmp bl 4Ch +
nop   +
jz loc_468D30  +
cmp bl 53h +
jz loc_468DD0  +
cmp bl 49h +
jz loc_468DB0  +
cmp bl 54h +
jz loc_468DE1  +
cmp bl 45h +
jz loc_468ECD  +
cmp bl 4Dh +
jnz loc_468C63  +
test ebp ebp +
jz loc_468C63  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_468BE8  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_468B53  +
mov eax esi +
call sub_469F80  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_468BA9  +
test eax eax +
jz loc_468B51  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468B51  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_468A00  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_467FD0  +
mov ebx eax +
jmp loc_468BA9  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_469F80  +
mov ecx 3 +
mov edx offset aStd_0 +
mov ebx eax +
mov eax esi +
call sub_468030  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_467FD0  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_468BA9  +
test edi edi +
jz loc_468B51  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468B51  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_468B7F  +
mov eax esi +
call sub_469F80  +
test ebp ebp +
jz loc_468DA0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_467FD0  +
mov ebp eax +
cmp bl 53h +
jz loc_468D7B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_468DA4  +
test ebp ebp +
jz loc_468C63  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_468C63  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_468BE4  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_468D30  +
mov eax esi +
call sub_468F10  +
test ebp ebp +
jnz loc_468D3B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_468D4E  +
mov ebx 45h +
jmp loc_468BF1  +
test ebp ebp +
jz loc_468C63  +
mov eax esi +
call sub_468A00  +
mov edx 4 +
jmp loc_468D40  +
mov edx 1 +
mov eax esi +
call sub_468280  +
jmp loc_468D37  +
mov eax esi +
call sub_4685A0  +
jmp loc_468D37  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_468EA2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_468E71  +
mov eax esi +
call sub_468B10  +
test eax eax +
mov edi eax +
jz loc_468E24  +
mov eax [eax] +
cmp eax 44h +
jz loc_468E24  +
cmp eax 46h +
jnz loc_468E90  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_468E54  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_468E54  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_468E54  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_467FD0  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_468560  +
test eax eax +
mov ebp eax +
jns loc_468E0B  +
xor ebx ebx +
jmp loc_468B53  +
mov eax esi +
call sub_4685F0  +
test eax eax +
jnz loc_468E24  +
xor ebx ebx +
jmp loc_468B53  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4685F0  +
test eax eax +
jz loc_468B51  +
mov ecx 0Eh +
mov edx offset aStringLitera_0 +
mov eax esi +
call sub_468030  +
mov [esp+30h+var_30] eax +
jmp loc_468E57  +
test ebp ebp +
mov [edi] ebp +
jz loc_468B51  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_468EEA  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_468B51  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_468BA9  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [eax+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_468F82  +
cmp al 56h +
jz loc_468F82  +
cmp al 4Bh +
jz loc_468F82  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_468F78  +
movzx edx dl +
jmp ds:off_4D37B4[edx*4]  +
mov eax ebx +
call sub_46A360  +
mov edx 41h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468F78  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_468F78  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_46901E  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_468080  +
test eax eax +
mov esi eax +
jz loc_468F78  +
mov eax ebx +
call sub_468F10  +
test eax eax +
mov edx eax +
mov [esi] eax +
jz loc_468F78  +
mov eax [eax] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_468FD6  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_468F78  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_468F78  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_468FAE  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468620  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
test eax eax +
jz loc_468F78  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468F78  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_468B10  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_46965B  +
sub eax 30h +
cmp al 9 +
ja loc_4696B9  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_469070  +
sub ecx edx +
mov eax ebx +
call sub_468030  +
test eax eax +
mov esi eax +
jz loc_46909B  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_46965D  +
xor eax eax +
jmp loc_469105  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468F10  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 59h +
jz loc_46968D  +
mov edx 1 +
mov eax ebx +
call sub_4697F0  +
mov edx eax +
mov eax ebx +
call sub_468180  +
mov edx [ebx+0Ch] +
mov ecx eax +
xor eax eax +
cmp byte ptr [edx] 45h +
jz loc_469680  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468F10  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_468F78  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_468F78  +
movzx eax al +
jmp ds:off_4D38E0[eax*4]  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
lea edi [esp+2Ch+var_10] +
call sub_468F10  +
mov ecx 1 +
mov edx edi +
mov ebp eax +
mov eax ebx +
call sub_468080  +
test eax eax +
mov esi eax +
jz loc_46909B  +
mov eax ebx +
call sub_468F10  +
test eax eax +
mov [esi] eax +
jz loc_46909B  +
cmp esi edi +
jz loc_4691E7  +
mov edx [eax] +
lea ecx [edx-1Fh] +
cmp ecx 1 +
jbe loc_4696D6  +
cmp edx 29h +
jz loc_4691E7  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_46909B  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_46909B  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx 2Bh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469105  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468F10  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468F10  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468F10  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_4692AB  +
cmp al 5Fh +
jz loc_4692AB  +
sub eax 41h +
cmp al 19h +
ja loc_469698  +
xor edx edx +
mov eax ebx +
call sub_468280  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_468F7A  +
mov eax ebx +
call sub_468A00  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
mov eax ebx +
call sub_4685A0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_469016  +
test eax eax +
jz loc_468F78  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468F78  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4692C4  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_468620  +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_468F10  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+2Ch+var_10] eax +
jmp loc_469016  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4D49C0h[eax*4] +
jl loc_469629  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_468F7A  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4C2C +
mov dword ptr [eax+4] offset off_4D4C2C +
lea esi [esi+0] +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_468F7A  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4C04 +
mov dword ptr [eax+4] offset off_4D4C04 +
jmp loc_4693C0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4BC8 +
mov dword ptr [eax+4] offset off_4D4BC8 +
jmp loc_4693C0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4BF0 +
mov dword ptr [eax+4] offset off_4D4BF0 +
jmp loc_4693C0  +
cmp byte ptr [ecx+2] 5Fh +
jz loc_469700  +
mov eax ebx +
call sub_468520  +
mov esi eax +
test esi esi +
jz loc_46909B  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_469105  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468F10  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469105  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4C18 +
mov dword ptr [eax+4] offset off_4D4C18 +
jmp loc_4693C0  +
mov eax ebx +
call sub_468F10  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469105  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4C40 +
mov dword ptr [eax+4] offset off_4D4C40 +
jmp loc_4693C0  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46964E  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469714  +
mov dword ptr [eax] 27h +
mov edx offset off_4D4BDC +
mov dword ptr [eax+4] offset off_4D4BDC +
jmp loc_4693C0  +
mov ecx 4 +
mov edx offset aAuto_1 +
mov eax ebx +
call sub_468030  +
jmp loc_468F7A  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_4695BD  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_4696EF  +
mov eax ebx +
call sub_468F10  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_468F78  +
lea eax [ebx+0Ch] +
call sub_4684C0  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_46961C  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_468F7A  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_46971F  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_469376  +
mov edx large ds:4 +
xor eax eax +
jmp loc_4693C0  +
xor esi esi +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468F10  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469105  +
add edx 1 +
mov eax ecx +
mov [ebx+0Ch] edx +
jmp loc_469105  +
add ecx 2 +
mov [ebx+0Ch] ecx +
jmp loc_4690E0  +
mov eax ebx +
call sub_468B10  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468F78  +
cmp dword ptr [eax] 18h +
jnz loc_46901E  +
jmp loc_468F7A  +
mov eax ebx +
nop   +
lea esi [esi+0] +
call sub_46A360  +
test eax eax +
mov esi eax +
jnz loc_46908F  +
xor eax eax +
jmp loc_469105  +
mov ecx [esp+2Ch+var_10] +
mov edx [eax+4] +
mov [eax+4] ecx +
mov eax [esi] +
mov [esp+2Ch+var_10] eax +
mov [esi] edx +
mov edx [edx] +
jmp loc_4691BE  +
lea eax [ebx+0Ch] +
call sub_4684C0  +
mov esi [esp+2Ch+var_10] +
jmp loc_4695E3  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46A360  +
mov esi eax +
jmp loc_469486  +
mov edx large ds:4 +
jmp loc_4693C0  +
mov esi large ds:4 +
jmp loc_469376  +
***
mov ebx eax +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_469827  +
xor esi esi +
test edx edx +
jnz loc_46982D  +
mov eax ebx +
call sub_469730  +
test eax eax +
jz loc_469840  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_467FD0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_468F10  +
test eax eax +
mov esi eax +
jnz loc_469805  +
lea esi [esi+0] +
xor eax eax +
jmp loc_469821  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_469930  +
cmp cl 47h +
jz loc_469930  +
mov eax ebx +
mov edi edx +
call sub_468B10  +
test eax eax +
mov esi eax +
jnz loc_4698E2  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_469948  +
test dl dl +
jz loc_469948  +
cmp dl 45h +
jz loc_469948  +
mov edx [eax] +
cmp edx 4 +
jz loc_469950  +
jb loc_4698C0  +
sub edx 1Ch +
cmp edx 4 +
ja loc_4698C0  +
mov eax [eax+4] +
test eax eax +
jnz loc_4698A1  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_4697F0  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_469880  +
test byte ptr [ebx+8] 1 +
jnz loc_469880  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_469903  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_4698F6  +
cmp edx 2 +
mov eax esi +
jnz loc_469948  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_469924  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_469917  +
mov [esi+8] eax +
mov eax esi +
jmp loc_469948  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_469990  +
cmp dl 47h +
jz loc_469965  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_4699C0  +
cmp dword ptr [eax] 33h +
ja loc_4699C0  +
mov edx [eax] +
jmp ds:off_4D39A4[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_469946  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_469946  +
movzx edx dl +
jmp ds:off_4D3A74[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_469946  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_469946  +
movzx eax al +
jmp ds:off_4D3B3C[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_469957  +
nop   +
mov edx 1 +
jmp loc_4698C2  +
lea eax [ebx+0Ch] +
call sub_4684C0  +
cmp eax 1 +
jle loc_469946  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_469946  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_469946  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_469946  +
xor esi esi +
cmp al 24h +
jz loc_469D50  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_469A29  +
cmp al 24h +
jz loc_469A29  +
add esi 1 +
cmp esi ebp +
jl loc_469A16  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_468030  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_469946  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_469DA0  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_467FD0  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_469946  +
test ebp ebp +
jg loc_469A01  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468B10  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468B10  +
mov esi eax +
mov eax ebx +
call sub_468520  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
cmp byte ptr [eax+2] 0 +
jz loc_469DA9  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_469DA9  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov edx 76h +
mov eax ebx +
call sub_4686F0  +
test eax eax +
jz loc_469946  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468B10  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468F10  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468F10  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_4684C0  +
test eax eax +
js loc_469946  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_469946  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468F10  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov edx 68h +
mov eax ebx +
call sub_4686F0  +
test eax eax +
jz loc_469946  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
xor edx edx +
mov eax ebx +
call sub_4686F0  +
test eax eax +
nop   +
jz loc_469946  +
xor edx edx +
mov eax ebx +
call sub_4686F0  +
test eax eax +
jz loc_469946  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468B10  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
add ecx 0Fh +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_468F10  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
add ecx 0Ah +
mov eax ebx +
mov [ebx+30h] ecx +
call sub_468F10  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468F10  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468F10  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov eax ebx +
call sub_468F10  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_469DD3  +
cmp al 5Fh +
jz loc_469DCC  +
cmp al 24h +
jnz loc_469946  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_469DDA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_469DDA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_469A46  +
mov [esp+1Ch+var_10] eax +
jmp loc_469A6D  +
xor edx edx +
mov eax ebx +
call sub_469850  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
jmp loc_469948  +
mov ecx 2Eh +
jmp loc_469D69  +
mov ecx 2Fh +
jmp loc_469D69  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_469946  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_469E94  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_469F74  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_469F06  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_469E9B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_468620  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_469EFC  +
mov edi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [edi+10h] +
mov [edi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_469EFC  +
test eax eax +
jz loc_469EFC  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_469EFE  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_469EB8  +
mov ebx edi +
cmp cl bl +
jle loc_469EF3  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_469EFC  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_4D44A0[ecx] +
lea ebp off_4D44A0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_469EA8  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_469F40  +
cmp cl [esp+1Ch+var_11] +
jg loc_469EAE  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_469EB8  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_469E9B  +
mov eax edi +
cmp al 63h +
jnz loc_469E9B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_468F10  +
mov edx 33h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_467FD0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_469EFE  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_469EFE  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_469E2C  +
***
push esi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46A655  +
cmp al 54h +
jz loc_46A663  +
cmp al 73h +
jz loc_46A4A7  +
cmp al 66h +
jz loc_46A450  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_46A3C0  +
mov eax ebx +
call sub_469F80  +
test eax eax +
jz loc_46A630  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_46A681  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_46A640  +
cmp al 74h +
setz cl  +
jnz loc_46A8FA  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46A5F2  +
mov eax ebx +
call sub_469DF0  +
test eax eax +
mov ebp eax +
jz loc_46A630  +
mov eax [eax] +
cmp eax 31h +
jz loc_46A4E4  +
cmp eax 32h +
jz loc_46A671  +
cmp eax 33h +
jnz loc_46A630  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A785  +
mov eax ebx +
call sub_46A360  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_46A438  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_467FD0  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
cmp byte ptr [edx+1] 70h +
jnz loc_46A3DD  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_46A778  +
mov eax ebx +
call sub_468560  +
add eax 1 +
jz loc_46A630  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46A630  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46A630  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_46A3B4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46A6A0  +
cmp al 70h +
jnz loc_46A3DD  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46A360  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset unk_4D3C0F +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46A7C4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_46A8B3  +
jle loc_46A7A0  +
cmp edx 2 +
jz loc_46A6E0  +
cmp edx 3 +
jnz loc_46A630  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3C1B +
mov ecx 3 +
cmps   +
jz loc_46A7E1  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46A630  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46A626  +
mov edx 5Fh +
mov eax ebx +
call sub_46A910  +
mov esi eax +
mov eax ebx +
call sub_468F10  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46A866  +
cmp dl 70h +
jz loc_46A892  +
cmp dl 69h +
jnz loc_46A630  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46A630  +
mov eax ebx +
call sub_46A360  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_467FD0  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
xor esi esi +
test cl cl +
jnz loc_46A7D0  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46A910  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
cmp al 77h +
jz loc_46A56F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46A3DD  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_46A397  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4688E0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4685A0  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_46A51F  +
mov eax ebx +
call sub_468A00  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_468F10  +
mov esi eax +
mov eax ebx +
call sub_469F80  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_46A838  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46A812  +
mov eax ebx +
call sub_46A360  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3C12 +
mov ecx 3 +
cmps   +
jz loc_46A7FF  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3C15 +
mov ecx 3 +
cmps   +
jz loc_46A738  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4D3C18 +
mov ecx 3 +
cmps   +
jnz loc_46A858  +
mov eax ebx +
call sub_469F80  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A873  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_467FD0  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46A476  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A910  +
jmp loc_46A420  +
test edx edx +
jnz loc_46A630  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A3B4  +
mov eax ebx +
call sub_468F10  +
jmp loc_46A435  +
mov eax ebx +
call sub_468F10  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46A5FC  +
mov eax ebx +
call sub_46A360  +
mov esi eax +
mov eax ebx +
call sub_46A360  +
mov edi eax +
mov eax ebx +
call sub_46A360  +
jmp loc_46A5B8  +
mov edx 45h +
mov eax ebx +
call sub_46A910  +
mov esi eax +
jmp loc_46A74D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46A828  +
sub eax 72h +
cmp al 1 +
ja loc_46A6EF  +
mov eax ebx +
call sub_468F10  +
mov [esp+1Ch+var_10] eax +
jmp loc_46A6FA  +
mov eax ebx +
call sub_468A00  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov [esp+1Ch+var_1C] eax +
jmp loc_46A6C7  +
mov eax ebx +
call sub_46A360  +
mov esi eax +
jmp loc_46A74D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46A5B8  +
mov eax ebx +
call sub_468A00  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_467FD0  +
mov esi eax +
jmp loc_46A74D  +
cmp byte ptr [eax+1] 69h +
jnz loc_46A630  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46A910  +
jmp loc_46A5B8  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_46A8CA  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46A8D8  +
cmp dl 70h +
jz loc_46A8D8  +
cmp eax 33h +
jnz loc_46A419  +
jmp loc_46A40D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46A8CA  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46A8CA  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46A8CA  +
cmp al 69h +
jz loc_46A3D3  +
jmp loc_46A3DD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 20h +
mov eax [eax+0Ch] +
mov [esp+28h+var_C] 0 +
lea esi [esp+28h+var_C] +
cmp [eax] dl +
jnz loc_46A957  +
jmp loc_46A981  +
mov ecx eax +
mov edx 2Eh +
mov [esp+28h+var_28] 0 +
mov eax ebx +
call sub_467FD0  +
test eax eax +
mov [esi] eax +
jz loc_46A962  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
mov ecx edi +
cmp [eax] cl +
jz loc_46A970  +
mov eax ebx +
call sub_46A360  +
test eax eax +
jnz loc_46A930  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+28h+var_C] +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
xor ecx ecx +
mov [ebx+0Ch] eax +
mov edx 2Eh +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_467FD0  +
jmp loc_46A964  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_46AA23  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_46A9DC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_46AA23  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46A9C1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_46A9C4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 7Ch +
mov eax [ecx] +
mov [esp+88h+var_7C] edx +
cmp eax 4Bh +
ja loc_46C6A6  +
jmp ds:off_4D3E84[eax*4]  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_58] edi +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
mov esi [esp+88h+var_50] +
test esi esi +
jnz loc_46AA9E  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_46E230  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+114h] +
test edi edi +
jz loc_46DF9E  +
mov edx edi +
jmp loc_46AAC8  +
mov edx [edx] +
test edx edx +
jz loc_46AA57  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_46AAC2  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_46AA57  +
cmp eax ecx +
jnz loc_46AAC2  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46AAA8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46AB23  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46AB08  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46AB0B  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasF_0 +
jmp loc_46ABA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D71h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C973  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AB80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AB83  +
mov eax [ebx+100h] +
mov esi offset aReferenceTem_0 +
jmp loc_46AC23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D59h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C746  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AC00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AC03  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFu_0 +
jmp loc_46ACA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D43h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C733  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AC80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AC83  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunct_0 +
jmp loc_46AD23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D29h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C806  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AD00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AD03  +
mov eax [ebx+100h] +
mov esi offset aGuardVariabl_0 +
jmp loc_46ADA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D12h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C7F3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AD80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AD83  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor_0 +
jmp loc_46AE23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CFEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C820  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AE00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AE03  +
mov eax [ebx+100h] +
mov esi offset aCovariantRet_0 +
jmp loc_46AEA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CEEh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C720  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AE80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AE83  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunk_0 +
jmp loc_46AF23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CD3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C960  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AF00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AF03  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualTh_0 +
jmp loc_46AFA3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CC1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C946  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46AF80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46AF83  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFo_0 +
jmp loc_46B023  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3CABh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C933  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B000  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B003  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoName_0 +
jmp loc_46B0A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C9Ah +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C920  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B083  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor_0 +
jmp loc_46B123  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C87h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C908  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B100  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B103  +
mov eax [ebx+100h] +
mov esi offset aConstruction_0 +
jmp loc_46B1A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C74h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C873  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B180  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B183  +
mov eax [ebx+100h] +
mov esi offset aVttFor_0 +
jmp loc_46B223  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C5Bh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C860  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B200  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B203  +
mov eax [ebx+100h] +
mov esi offset aVtableFor_0 +
jmp loc_46B2A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C52h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C846  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B280  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B283  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D7A8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 7Eh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Eh +
mov ecx [ebp+8] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edi [ecx+4] +
mov [esp+88h+var_70] eax +
test edi edi +
jz loc_46DBC8  +
mov eax [ebx+110h] +
xor edx edx +
xor esi esi +
mov [esp+88h+var_6C] ecx +
mov [esp+88h+var_74] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_78] eax +
mov ecx [esp+88h+var_74] +
add esi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [edi] +
mov [ebx+114h] eax +
mov [eax+4] edi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_46C6C5  +
cmp edx 4 +
mov ebp [esp+88h+var_6C] +
jz loc_46DF3E  +
cmp edx 2 +
jnz loc_46B433  +
mov ecx [edi+8] +
mov eax [ecx] +
cmp eax 45h +
jz loc_46DFF5  +
sub eax 1Ch +
cmp eax 4 +
ja loc_46B433  +
mov eax esi +
shl eax 4 +
add eax [esp+88h+var_78] +
cmp esi 4 +
jz loc_46DFB4  +
mov [esp+88h+var_6C] edi +
mov edi [esp+88h+var_74] +
jmp loc_46B3F5  +
add eax 10h +
cmp esi 4 +
jz loc_46DFB4  +
mov edx [eax-0Ch] +
add esi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] edi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_46B3E9  +
mov edi [esp+88h+var_6C] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
cmp dword ptr [edi] 4 +
jz loc_46DFA5  +
test esi esi +
jz loc_46DC15  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+8] +
mov ebp [edi] +
test ebp ebp +
jz loc_46B47C  +
sub edi 10h +
test esi esi +
jz loc_46DC15  +
mov ebp [edi] +
sub esi 1 +
test ebp ebp +
jnz loc_46B468  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E039  +
lea edx [eax+1] +
mov ecx [edi-4] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 20h +
mov eax ebx +
mov byte ptr [ebx+104h] 20h +
call sub_46E230  +
jmp loc_46B468  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E210  +
and edi 4 +
mov eax [ebx+100h] +
jnz loc_46C6E3  +
mov esi offset asc_4D3C24 +
jmp loc_46B4FA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi (offset asc_4D3C24+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C702  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B4D7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B4DA  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aAbi_0 +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
jmp loc_46B583  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C23h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C986  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B560  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B563  +
mov edx [ecx+4] +
mov eax ebx +
call sub_4687C0  +
test eax eax +
jz loc_46DF59  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_46CDF6  +
mov edx [eax+4] +
test edx edx +
jz loc_46CDF6  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_46B5E4  +
mov eax [ebp+4] +
mov [esp+88h+var_74] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+88h+var_70] eax +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov [ebx+11Ch] edi +
call sub_46E210  +
cmp edi [esp+88h+var_70] +
jge loc_46C6B5  +
mov eax [ebx+100h] +
mov ebp offset asc_4D3DB8 +
jmp loc_46B663  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_4D3DB8+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C6B5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46B640  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B643  +
mov eax [ebx+100h] +
mov esi offset aNonTransacti_0 +
jmp loc_46B6E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DA3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C833  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B6C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B6C3  +
test byte ptr [esp+88h+var_7C] 4 +
jnz loc_46D6D2  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46AAA8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46B772  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46B753  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B756  +
mov ecx [ecx+4] +
mov eax ebx +
mov esi offset aClone_0 +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
jmp loc_46B803  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E7Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C9C0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B7E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46B7E3  +
lea edx [ecx+4] +
mov eax ebx +
call sub_468760  +
test eax eax +
jz loc_46D170  +
cmp dword ptr [eax] 2Fh +
jz loc_46D150  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov [ebx+110h] esi +
jmp loc_46AAA8  +
mov eax [ebx+114h] +
test byte ptr [esp+88h+var_7C] 4 +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+88h+var_78] eax +
jz loc_46B8BF  +
mov esi [edx] +
test esi esi +
jnz loc_46B8BF  +
cmp dword ptr [edx+8] 6 +
jz loc_46DD08  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46DB15  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D884  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 3Ch +
mov eax ebx +
mov byte ptr [ebx+104h] 3Ch +
mov ecx [ebp+8] +
call sub_46E210  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_46DB9D  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D84D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
mov eax [esp+88h+var_78] +
mov [ebx+114h] eax +
jmp loc_46AAA8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov edx [ecx+8] +
cmp dword ptr [edx] 37h +
jz loc_46D07F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+88h+var_74] eax +
mov eax [eax] +
mov [esp+88h+var_78] edi +
cmp eax 31h +
jz loc_46D25D  +
cmp eax 33h +
jz loc_46D32B  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F560  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F610  +
jmp loc_46AAA8  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F560  +
jmp loc_46AAA8  +
mov edi [ecx+4] +
mov eax [ebx+100h] +
test edi edi +
jnz loc_46CEF9  +
mov esi offset aThis_0 +
jmp loc_46BA13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E17h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46B9F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46B9F3  +
mov eax [ebx+100h] +
mov esi offset aDecltype_0 +
jmp loc_46BA93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E0Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CAE3  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BA70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BA73  +
mov eax [ecx+4] +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46BB01  +
mov edx eax +
mov ebp [esp+88h+var_78] +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi ebp +
jz loc_46AAA8  +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46BB64  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46BB45  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BB48  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_46D625  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_46AAA8  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E210  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46E210  +
jmp loc_46AAA8  +
mov eax [ebx+100h] +
mov esi offset aJavaResource_0 +
jmp loc_46BC33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E03h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C9F8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BC10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46BC13  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_46BCB6  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_46BCB6  +
cmp esi 6 +
jbe loc_46D9DE  +
cmp esi 7 +
jnz loc_46BCB6  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_46BCB6  +
cmp dword ptr [edx+8] 1 +
jz loc_46DFFF  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D993  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D92C  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_46DBD7  +
cmp esi 8 +
jz loc_46DB40  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_46B96C  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_46B96C  +
mov eax [eax+4] +
mov edi offset unk_4D3C1B +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+88h+var_78] eax +
mov eax [edx+4] +
mov [esp+88h+var_74] eax +
mov eax [edx+8] +
mov [esp+88h+var_70] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_46DE25  +
mov eax ebx +
mov edx offset aNew_0 +
call sub_46A9A0  +
mov eax [esp+88h+var_78] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_46BDBA  +
mov edx [esp+88h+var_7C] +
mov ecx eax +
mov eax ebx +
call sub_46F610  +
mov edx 20h +
mov eax ebx +
call sub_468440  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_74] +
mov edx edi +
call sub_46E210  +
mov ecx [esp+88h+var_70] +
test ecx ecx +
jz loc_46AAA8  +
mov edx edi +
mov eax ebx +
call sub_46F610  +
jmp loc_46AAA8  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46BDF7  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
mov eax [ebp+8] +
test eax eax +
jz loc_46AAA8  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_46D38C  +
mov edi offset asc_4D3DB8 +
jmp loc_46BE43  +
lea esi [eax+1] +
add edi 1 +
cmp edi (offset asc_4D3DB8+2) +
mov [ebx+100h] esi +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CDAD  +
mov eax esi +
cmp eax 0FFh +
movzx edx byte ptr [edi] +
jnz loc_46BE20  +
mov ecx [ebx+10Ch] +
mov esi 1 +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
mov edx [esp+88h+var_78] +
add dword ptr [ebx+120h] 1 +
jmp loc_46BE23  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_46D18A  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_4D4A60 +
jz loc_46D17F  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46DADE  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp word ptr [ebp+8] 0 +
jz loc_46CE89  +
mov esi offset a_accum_0 +
jmp loc_46BF13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DB0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BEF0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BEF3  +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ecx +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_46E210  +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_46BFAD  +
mov edx [esp+88h+var_7C] +
mov ecx ebp +
mov eax ebx +
call sub_46E230  +
mov eax [esp+88h+var_58] +
mov [ebx+114h] eax +
jmp loc_46AAA8  +
mov edi [ebx+114h] +
lea eax [esp+88h+var_58] +
mov ecx eax +
mov [esp+88h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+88h+var_70] edi +
test esi esi +
mov [esp+88h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_4C] eax +
jz loc_46E1D2  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_46E1D2  +
mov eax esi +
mov esi 1 +
mov [esp+88h+var_6C] ebp +
mov [esp+88h+var_74] ecx +
jmp loc_46C02F  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46C080  +
mov edx [eax+8] +
test edx edx +
jnz loc_46C07A  +
cmp esi 3 +
ja loc_46D8BB  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+88h+var_58] +
mov [esp+edx+88h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+88h+var_58] edi +
mov edi [esp+88h+var_74] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_46C022  +
mov ebp [esp+88h+var_6C] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov ecx [ebp+8] +
call sub_46E210  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
mov eax [esp+88h+var_50] +
test eax eax +
jnz loc_46AAA8  +
cmp esi 1 +
jz loc_46DCFF  +
mov edi [esp+88h+var_78] +
sub esi 1 +
mov [esp+88h+var_78] ebp +
mov ebp [esp+88h+var_7C] +
mov eax esi +
shl eax 4 +
lea edi [eax+edi+4] +
lea esi [esi+0] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_46E230  +
cmp esi 1 +
jz loc_46D05F  +
sub esi 1 +
jmp loc_46C0D0  +
test byte ptr [esp+88h+var_7C] 20h +
jnz loc_46D200  +
cmp dword ptr [ecx+4] 0 +
jz loc_46C10C  +
test byte ptr [esp+88h+var_7C] 40h +
jz loc_46D8CA  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_88] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_46EFF0  +
jmp loc_46AAA8  +
mov eax [ebx+100h] +
mov esi offset aUnnamedType_0 +
jmp loc_46C163  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E74h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CB33  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C140  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C143  +
mov eax [ebx+100h] +
mov esi offset aLambda_0 +
jmp loc_46C1E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E62h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CC30  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C1C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C1C3  +
mov eax [ebx+100h] +
mov esi offset aGlobalDestru_0 +
jmp loc_46C263  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E59h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CB20  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C240  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C243  +
mov eax [ebx+100h] +
mov esi offset aGlobalConstr_0 +
jmp loc_46C2E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E3Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C7E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C2C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C2C3  +
mov eax [ebx+100h] +
mov esi offset aTransactionC_0 +
jmp loc_46C363  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D88h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CAD0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C340  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C343  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_46C3E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DCDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CAB8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C3C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C3C3  +
mov eax [ebx+100h] +
mov esi offset aOperator_1 +
jmp loc_46C463  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DCDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CAA5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C440  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C443  +
mov ebp [ecx+4] +
mov esi offset aOperator_2 +
mov eax [ebx+100h] +
mov edi [ebp+8] +
jmp loc_46C4E6  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DC3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CA10  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C4C3  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C4C6  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_46C545  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D3F8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov ecx esi +
mov byte ptr [ebx+eax] 7Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 7Bh +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D3C1  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46AAA8  +
test byte ptr [esp+88h+var_7C] 4 +
mov eax [ecx+4] +
jnz loc_46CE0A  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_46AAA8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46C5E5  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46C5C6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46C5C9  +
mov eax [ecx+4] +
mov edx [eax] +
cmp edx 5 +
jz loc_46DA66  +
cmp edx 23h +
jz loc_46D052  +
cmp [ebp+0] edx +
jz loc_46D052  +
cmp edx 24h +
jnz loc_46AA51  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
test ecx ecx +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+88h+var_4C] eax +
jnz loc_46AA7E  +
jmp loc_46AA7B  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
add edi 1 +
cmp edi esi +
jnz loc_46B612  +
jmp loc_46AAA8  +
mov edi [edi+4] +
test edi edi +
jz loc_46DBC8  +
add eax 10h +
cmp esi 4 +
jz loc_46CDE7  +
mov edx ebp +
jmp loc_46B379  +
cmp eax 0FFh +
jz loc_46DC91  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Eh +
mov byte ptr [ebx+104h] 2Eh +
mov edi [ebp+8] +
cmp dword ptr [edi] 45h +
jz loc_46D42F  +
mov edx [esp+88h+var_7C] +
mov ecx edi +
mov eax ebx +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor_0 +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
jmp loc_46C780  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3D5Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C7C6  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C761  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C764  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset aIn_0 +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
jmp loc_46C8AF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C79h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C8F5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C890  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46C893  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D5EE  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46AAA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D664  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_46D235  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_46AAA8  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_46CA5F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CA40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CA43  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_46F2E0  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46D7DF  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov eax [ebp+4] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46CB57  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46CC02  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46CBBB  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CC08  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46CBA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CBA3  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46D816  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46AAA8  +
mov ecx [ebp+4] +
mov eax ebx +
mov esi offset asc_4D3E63 +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [ebx+100h] +
jmp loc_46CC6F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E65h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CCB5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CC50  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CC53  +
mov eax [ebp+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_88] eax +
mov esi eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46CCD9  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46CD82  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46CD3B  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CD88  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46CD20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CD23  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46D69B  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46AAA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
mov edi [ebx+120h] +
call sub_46E210  +
cmp edi [ebx+120h] +
jnz loc_46AAA8  +
cmp [ebx+100h] esi +
jnz loc_46AAA8  +
sub esi 2 +
mov [ebx+100h] esi +
jmp loc_46AAA8  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov eax [ebp+4] +
test esi esi +
mov [esp+88h+var_74] eax +
jnz loc_46B609  +
jmp loc_46AAA8  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_46AAA8  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46CE41  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46CE22  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CE25  +
mov esi offset a_fract_0 +
jmp loc_46CEB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DB7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46AAA8  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CE90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CE93  +
mov esi offset aParm_0 +
jmp loc_46CF1F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3E1Eh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46CF65  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CF00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CF03  +
lea eax [esp+88h+var_58] +
mov [esp+88h+var_80] edi +
mov esi eax +
mov [esp+88h+var_84] offset aLd +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx [esi] +
add esi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_46CF83  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [esi+2] +
cmovz esi edx +
add al al +
sbb esi 3 +
sub esi [esp+88h+var_78] +
jz loc_46D027  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+100h] +
add esi ebp +
jmp loc_46CFE0  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D02D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46CFC5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46CFC8  +
mov ecx [ebx+100h] +
cmp ecx 0FFh +
jz loc_46DCC8  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 7Dh +
mov byte ptr [ebx+104h] 7Dh +
jmp loc_46AAA8  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_46AA57  +
mov ebp [esp+88h+var_78] +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
lea ecx [ebp+4] +
mov [esp+88h+var_88] eax +
mov eax ebx +
call sub_46ED70  +
jmp loc_46AAA8  +
mov ecx [ecx+4] +
mov eax [ecx+4] +
mov esi [eax] +
mov [esp+88h+var_78] eax +
cmp byte ptr [esi+1] 63h +
jz loc_46DC24  +
cmp dword ptr [ecx] 31h +
jz loc_46DD3C  +
mov eax [ecx+4] +
mov edi offset unk_4D3C12 +
mov ecx 3 +
mov esi [eax] +
cmps   +
mov ecx [edx+4] +
jnz loc_46D0BD  +
cmp dword ptr [ecx] 3 +
jz loc_46DDB5  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46F610  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx_0 +
mov edx [eax+4] +
mov [esp+88h+var_78] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46DD70  +
mov ecx 3 +
mov esi edx +
mov edi offset unk_4D3C12 +
cmps   +
jnz loc_46DDDA  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46F610  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_46AAA8  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_46AAA8  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_46AAA8  +
mov edx 29h +
mov eax ebx +
call sub_468440  +
jmp loc_46AAA8  +
mov edx [ebx+11Ch] +
jmp loc_46D15D  +
cmp dword ptr [eax] 2Fh +
jnz loc_46D170  +
cmp edx 0 +
jle loc_46DD9E  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_46D158  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov eax [ebx+100h] +
jmp loc_46BEDC  +
mov eax [ebx+100h] +
mov esi offset a_sat_0 +
jmp loc_46D1BA  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3DA9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46BE9B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D197  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46D19A  +
mov esi [esp+88h+var_7C] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+88h+var_88] eax +
mov edx esi +
mov eax ebx +
call sub_46EFF0  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_46AAA8  +
mov edx esi +
mov eax ebx +
call sub_46E210  +
jmp loc_46AAA8  +
cmp ecx 0FFh +
jz loc_46DDEE  +
lea eax [ecx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ecx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi [ebp+4] +
jmp loc_46CA21  +
mov eax [esp+88h+var_74] +
mov edi offset aAd_0 +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+88h+var_78] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_46D285  +
cmp eax 3 +
jz loc_46DF78  +
cmp eax 37h +
jz loc_46E09D  +
mov ecx [esp+88h+var_74] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F560  +
test ebp ebp +
jz loc_46B9B1  +
mov edi offset aGs_0 +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_46D9CA  +
mov edi offset unk_4D3C0F +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_46B9B1  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DF0C  +
lea edx [eax+1] +
mov ecx [esp+88h+var_78] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DEDA  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46AAA8  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DEA3  +
lea edx [eax+1] +
mov ecx [esp+88h+var_74] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
add ecx 4 +
call sub_46F2E0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DE6C  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46B9B1  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_88] ebx +
call edx  +
xor eax eax +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_46BE13  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C58B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C559  +
mov eax [ebx+100h] +
mov esi offset aDefaultArg_0 +
jmp loc_46D45F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3C34h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D4A5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D440  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_78] +
jmp loc_46D443  +
mov eax [edi+8] +
mov [esp+88h+var_84] offset aLd +
add eax 1 +
mov [esp+88h+var_80] eax +
lea eax [esp+88h+var_58] +
mov esi eax +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_78] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_46D4CB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx [esp+88h+var_78] +
jz loc_46D571  +
mov esi [esp+88h+var_78] +
mov eax [ebx+100h] +
lea ebp [edx+esi] +
jmp loc_46D52B  +
lea edx [eax+1] +
add esi 1 +
cmp esi ebp +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jz loc_46D577  +
mov eax edx +
cmp eax 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_46D510  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_78] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+88h+var_78] +
jmp loc_46D513  +
mov edx [ebx+100h] +
mov esi offset asc_4D3C39 +
jmp loc_46D59F  +
lea ecx [edx+1] +
add esi 1 +
cmp esi 4D3C3Ch +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
jz loc_46D5E6  +
mov edx ecx +
cmp edx 0FFh +
movzx eax byte ptr [esi] +
jnz loc_46D580  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_78] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_78] +
jmp loc_46D583  +
mov edi [edi+4] +
jmp loc_46C70E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C9A8  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+88h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+88h+var_7C] +
jmp loc_46BBC7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C9E2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46CD97  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_46D70E  +
jmp loc_46AAA8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46D769  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_46AAA8  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_46D6E3  +
cmp al 5Fh +
jnz loc_46D6E3  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_46D6E3  +
cmp byte ptr [esi+2] 55h +
jnz loc_46D6E3  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_46D6E3  +
xor ecx ecx +
jmp loc_46D74B  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_46E02F  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_46D735  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_46DAC8  +
movsx eax dl +
sub eax 37h +
jmp loc_46D73B  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+88h+var_7C] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_88] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+88h+var_7C] +
jmp loc_46D6F4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B304  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46CB05  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46CC17  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B92D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B8ED  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov eax [ebx+114h] +
mov edx [esp+88h+var_7C] +
mov [esp+88h+var_54] ebp +
mov [esp+88h+var_50] 0 +
mov [esp+88h+var_58] eax +
lea eax [esp+88h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+88h+var_4C] eax +
mov eax ebx +
call sub_46E210  +
mov ecx [esp+88h+var_50] +
mov eax [esp+88h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_46AAA8  +
mov edx 20h +
mov eax ebx +
call sub_468440  +
jmp loc_46C10C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov byte ptr [ebx] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
mov dword ptr [ebx+100h] 1 +
jnz loc_46BD18  +
mov edx 1 +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 2Dh +
mov byte ptr [ebx+104h] 2Dh +
jmp loc_46BD18  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46BCCA  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
jmp loc_46AAA8  +
mov edx [ecx+8] +
mov edi [edx] +
test edi edi +
jnz loc_46BCB6  +
cmp eax 3Ch +
jz loc_46E1AF  +
mov ecx edx +
mov edx [esp+88h+var_7C] +
mov eax ebx +
call sub_46E210  +
cmp esi 6 +
ja loc_46AAA8  +
jmp ds:off_4D3FB4[esi*4]  +
mov edx offset aUll_0 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
mov edx offset aLl_0 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
mov edx offset aUl_0 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
mov edx 6Ch +
mov eax ebx +
call sub_468440  +
jmp loc_46AAA8  +
mov edx 75h +
mov eax ebx +
call sub_468440  +
jmp loc_46AAA8  +
lea edx [eax+4] +
mov eax ebx +
call sub_468760  +
test eax eax +
jz loc_46E1C3  +
mov edx [eax] +
cmp edx 2Fh +
jnz loc_46C63E  +
mov edx [ebx+11Ch] +
jmp loc_46DAA7  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_46E1C3  +
cmp dword ptr [eax] 2Fh +
jnz loc_46E1C3  +
cmp edx 0 +
jg loc_46DA90  +
lea esi [esi+0] +
jnz loc_46E1C3  +
mov eax [eax+4] +
test eax eax +
jz loc_46E1C3  +
mov edx [eax] +
jmp loc_46C63E  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_46E127  +
movsx eax dl +
sub eax 57h +
jmp loc_46D73B  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46BECB  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46DFC3  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46B8DF  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E0F5  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+88h+var_7C] +
mov byte ptr [ebx+eax] 5Bh +
mov eax ebx +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+8] +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E0C3  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
jmp loc_46AAA8  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46E06B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46B91F  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
cmp edx 0FFh +
jnz loc_46D97A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D97A  +
mov eax [esp+88h+var_70] +
mov [ebx+114h] eax +
jmp loc_46AAA8  +
movzx edi byte ptr [esi] +
lea esi [edi-63h] +
mov eax esi +
cmp al 1 +
jbe loc_46DC3D  +
lea esi [edi-72h] +
mov eax esi +
cmp al 1 +
ja loc_46D095  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov edx edi +
call sub_46F560  +
mov eax ebx +
mov edx 3Ch +
call sub_468440  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_46E210  +
mov eax ebx +
mov edx offset asc_4D3E7E +
call sub_46A9A0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_46E210  +
mov edx 29h +
mov eax ebx +
call sub_468440  +
jmp loc_46AAA8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C6F1  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D03C  +
mov eax [esp+88h+var_70] +
jmp loc_46D069  +
mov esi [edx+4] +
mov edi offset aJarray_0 +
mov ecx 6 +
cmps   +
jnz loc_46B8BF  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_46E210  +
mov edx offset asc_4D3C44 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46B93E  +
mov eax [esp+88h+var_78] +
cmp dword ptr [eax+8] 1 +
jnz loc_46D09E  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_46D09E  +
mov edx 28h +
mov eax ebx +
call sub_468440  +
mov ecx [ebp+4] +
mov edx [ebp+8] +
jmp loc_46D09E  +
mov eax ebx +
mov edx 5Bh +
call sub_468440  +
mov eax [ebp+8] +
mov edx [esp+88h+var_7C] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46E210  +
mov edx 5Dh +
mov eax ebx +
call sub_468440  +
jmp loc_46D119  +
jnz loc_46D170  +
mov eax [eax+4] +
test eax eax +
jnz loc_46B86B  +
nop   +
jmp loc_46D170  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_46DDC7  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F610  +
jmp loc_46D0C8  +
mov ecx [esp+88h+var_78] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46F560  +
jmp loc_46D108  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
jmp loc_46D244  +
mov edi [esp+88h+var_7C] +
mov eax ebx +
mov ecx [esp+88h+var_78] +
mov edx edi +
call sub_46F610  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_46F560  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_46F610  +
mov eax ebx +
mov edx offset asc_4D3DD7 +
call sub_46A9A0  +
mov ecx [esp+88h+var_70] +
mov edx edi +
mov eax ebx +
call sub_46F610  +
jmp loc_46AAA8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D376  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D33F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D312  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46D2DE  +
mov eax [esp+88h+var_74] +
mov [esp+88h+var_5C] edi +
mov [esp+88h+var_60] eax +
lea eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_46B433  +
mov edx [esp+88h+var_7C] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_46F610  +
mov edx offset a____2 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
mov eax [esp+88h+var_78] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_46D28E  +
mov edi [esp+88h+var_78] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+88h+var_78] eax +
jmp loc_46D28E  +
xor edi edi +
jmp loc_46AA57  +
mov eax [esp+88h+var_60] +
mov [ebx+110h] eax +
jmp loc_46B44A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46DB27  +
mov ecx [ecx+4] +
mov eax [ecx] +
jmp loc_46B3C5  +
cmp eax 3Bh +
jnz loc_46BCB6  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_46E1FA  +
cmp al 31h +
jnz loc_46BCB6  +
mov edx offset aTrue_0 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
mov eax 5Fh +
jmp loc_46D6E3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46B48D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46DBAF  +
mov eax [esp+88h+var_78] +
mov edi [esp+88h+var_7C] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_46F610  +
mov ecx [esp+88h+var_74] +
mov edx edi +
mov eax ebx +
call sub_46F560  +
jmp loc_46AAA8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46DB84  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46DB51  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_46D6E3  +
cmp dl 5Fh +
jnz loc_46D6E3  +
cmp ecx 0FFh +
mov eax edx +
ja loc_46D6E3  +
cmp dword ptr [ebx+100h] 0FFh +
mov esi ecx +
jnz loc_46E18E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+88h+var_84] 0FFh +
mov [esp+88h+var_80] edx +
mov [esp+88h+var_88] ebx +
call eax  +
add dword ptr [ebx+120h] 1 +
mov dword ptr [ebx+100h] 0 +
mov eax [ebx+100h] +
mov ecx esi +
mov esi ebp +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov [ebx+eax] cl +
mov [ebx+104h] cl +
jmp loc_46D703  +
mov edx 2Dh +
mov eax ebx +
call sub_468440  +
mov edx [ebp+8] +
jmp loc_46D9F4  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46AAA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+88h+var_7C] +
call sub_46E210  +
mov eax [esp+88h+var_70] +
cmp [esp+88h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_46D069  +
jmp loc_46AAA8  +
mov edx offset aFalse_0 +
mov eax ebx +
call sub_46A9A0  +
jmp loc_46AAA8  +
***
test ecx ecx +
jz loc_46E224  +
cmp dword ptr [eax+118h] 0 +
jnz locret_46E222  +
jmp sub_46AA30  +
retn   +
mov dword ptr [eax+118h] 1 +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [ecx] +
mov [esp+2Ch+var_14] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_46E2DB  +
jmp ds:off_4D4014[eax*4]  +
mov eax [ebx+100h] +
mov esi offset a__vector_0 +
jmp loc_46E285  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4D4010h +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E7B0  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_46E260  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ebp +
mov ebp 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E263  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E590  +
mov eax [ebx+118h] +
test eax eax +
jz loc_46E7F0  +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aRestrict_0 +
jmp loc_46E324  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3FD9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E305  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E308  +
mov eax [ebx+100h] +
mov esi offset aConst_0 +
jmp loc_46E3A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3FEAh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E380  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E383  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46E85C  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_46E825  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset aVolatile_0 +
jmp loc_46E473  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3FE3h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E450  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E453  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46E909  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_4D3FEB +
jmp loc_46E513  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3FEDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E4F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E4F3  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E8CA  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
test ecx ecx +
jnz loc_46E2DB  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46E2F0  +
test byte ptr [esp+2Ch+var_14] 4 +
jnz loc_46E2F0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E99D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 2Ah +
mov byte ptr [ebx+104h] 2Ah +
jmp loc_46E2F0  +
mov eax [ebx+100h] +
jmp loc_46E416  +
mov eax [ebx+100h] +
jmp loc_46E4E6  +
mov eax [ebx+100h] +
mov esi offset aComplex_0 +
jmp loc_46E623  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D3FF6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E600  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E603  +
mov eax [ebx+100h] +
mov esi offset aImaginary_0 +
jmp loc_46E6A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D4001h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E680  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E683  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46E71E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E95E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E940  +
mov esi [ebx+118h] +
test esi esi +
jz loc_46E815  +
mov eax [ebx+100h] +
mov esi offset asc_4D4002 +
jmp loc_46E767  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4D4005h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E2F0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E744  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_14] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_14] +
jmp loc_46E747  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46E94F  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46E802  +
cmp ebp 0FFh +
jz loc_46E893  +
lea eax [ebp+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+ebp] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46E2F0  +
mov edx [esp+2Ch+var_14] +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46AA30  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_46AA30  +
mov ebp [ebx+100h] +
jmp loc_46E7C5  +
mov edx [esp+2Ch+var_14] +
mov eax ebx +
call sub_46AA30  +
jmp loc_46E737  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E424  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E405  +
mov edx [ebx+10Ch] +
xor ebp ebp +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
add dword ptr [ebx+120h] 1 +
jmp loc_46E7D4  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E574  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E4D5  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46E737  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46E7C5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_10] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] esi +
mov esi 1 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+2Ch+var_10] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E70D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E5BF  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
test ecx ecx +
mov [esp+4Ch+var_38] edx +
mov ebp [esp+4Ch+arg_0] +
jz loc_46EA61  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_46EA0D  +
jmp loc_46EA61  +
mov edx [esi+118h] +
test edx edx +
jnz loc_46EA61  +
mov eax [ebx+8] +
test eax eax +
jnz loc_46EA5B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_46EA25  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_46EA5B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_46EA69  +
cmp eax 2Ah +
jz loc_46EA8A  +
cmp eax 2 +
jz loc_46EAAB  +
mov edx [esp+4Ch+var_38] +
mov eax esi +
call sub_46E230  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_46EA03  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_46EFF0  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+4Ch+var_38] +
mov [esp+4Ch+var_4C] eax +
mov eax esi +
call sub_46ED70  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+4Ch+var_38] +
mov ecx [ecx+4] +
call sub_46E210  +
mov eax [esi+100h] +
test byte ptr [esp+4Ch+var_38] 4 +
mov [esi+114h] ebp +
jnz loc_46EB45  +
mov ebp offset asc_4D3C24 +
mov [esp+4Ch+var_34] ebx +
jmp loc_46EB06  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4D3C26h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_46EB62  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_46EAE7  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46EAEA  +
cmp eax 0FFh +
jz loc_46EB9F  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_46EB66  +
mov ebx [esp+4Ch+var_34] +
mov eax [ebx+4] +
mov ebp [eax+8] +
mov eax [ebp+0] +
cmp eax 45h +
jnz loc_46EB7C  +
jmp loc_46EBD6  +
mov ebp [ebp+4] +
mov eax [ebp+0] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_46EB76  +
mov edx [esp+4Ch+var_38] +
mov ecx ebp +
mov eax esi +
call sub_46E210  +
mov [esi+110h] edi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46EB4F  +
mov ecx offset aDefaultArg_0 +
mov eax [esi+100h] +
mov ebx ecx +
jmp loc_46EC04  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D3C34h +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_46EC4A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_46EBE5  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_46EBE8  +
mov eax [ebp+8] +
lea ebx [esp+4Ch+var_25] +
mov [esp+4Ch+var_48] offset aLd +
mov [esp+4Ch+var_4C] ebx +
add eax 1 +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
test eax eax +
jz loc_46ED60  +
add eax ebx +
mov edx [esi+100h] +
mov [esp+4Ch+var_34] edi +
mov edi eax +
jmp loc_46ECA3  +
lea eax [edx+1] +
add ebx 1 +
cmp ebx edi +
mov [esi+100h] eax +
mov [esi+edx] cl +
mov [esi+104h] cl +
jz loc_46ECEA  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [ebx] +
jnz loc_46EC88  +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_30] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [esi+120h] 1 +
mov ecx [esp+4Ch+var_30] +
jmp loc_46EC8B  +
mov edi [esp+4Ch+var_34] +
mov ecx offset asc_4D3C39 +
mov ebx ecx +
jmp loc_46ED1A  +
lea ecx [eax+1] +
add ebx 1 +
cmp ebx 4D3C3Ch +
mov [esi+100h] ecx +
mov [esi+eax] dl +
mov [esi+104h] dl +
jz loc_46EB76  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebx] +
jnz loc_46ECF7  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+4Ch+var_34] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] 0FFh +
mov [esp+4Ch+var_4C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
mov edx [esp+4Ch+var_34] +
jmp loc_46ECFA  +
mov eax [esi+100h] +
jmp loc_46ECEE  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46EDAA  +
mov edx [eax+8] +
test edx edx +
jz loc_46EE30  +
mov eax [eax] +
test eax eax +
jnz loc_46ED85  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E9E0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EEF0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_46EF97  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_46EE05  +
mov eax ebx +
mov edx edi +
call sub_46E210  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EF60  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_46EFD0  +
mov eax [ebx+100h] +
mov esi offset unk_4D40C0 +
jmp loc_46EE6F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4D40C2 +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46EEB5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46EE50  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_46EE53  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E9E0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EF27  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46EDB0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EDBE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EEDA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EE13  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EDDE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46E9E0  +
mov edx [ebx+100h] +
jmp loc_46EDCF  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [esp+24h+arg_0] +
mov [esp+24h+var_18] ecx +
test esi esi +
jz loc_46F0D0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_46F0D0  +
mov eax esi +
mov edx 1 +
jmp loc_46F03E  +
and ch 0Eh +
jnz loc_46F1B1  +
mov eax [eax] +
test eax eax +
jz loc_46F0D0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_46F0D0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_46F029  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_46F020  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_46F1C6  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F2A8  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_46F1D7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F1DA  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+24h+var_24] 0 +
call sub_46E9E0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F23A  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+24h+var_18] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_46F12C  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46F167  +
cmp eax 0FFh +
jz loc_46F17D  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+24h+var_24] 1 +
call sub_46E9E0  +
mov [ebx+114h] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_46AA30  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jnz loc_46F133  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F136  +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_46F060  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F099  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+24h+var_24] 0 +
call sub_46E9E0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F271  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_46F104  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F107  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F21D  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+24h+var_20] 0FFh +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_24] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F07D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov ecx [ecx] +
cmp dword ptr [ecx] 4 +
jz loc_46F310  +
mov esi [eax+118h] +
test esi esi +
jz loc_46F3D0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esp+34h+var_1C] +
mov ebp [eax+114h] +
mov dword ptr [eax+114h] 0 +
mov eax [eax+110h] +
mov [ebx+110h] edx +
mov edx [esi] +
mov [esp+34h+var_1C] eax +
mov [esp+34h+var_18] edx +
mov ecx [edx+4] +
test ecx ecx +
jz loc_46F4B6  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46F420  +
cmp byte ptr [ebx+104h] 3Ch +
mov [ebx+110h] eax +
jz loc_46F4C5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F470  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov edx [esi] +
mov ecx [edx+8] +
test ecx ecx +
jz loc_46F4A7  +
mov edx [ebx+118h] +
test edx edx +
jz loc_46F3E0  +
cmp eax 0FFh +
jz loc_46F432  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov [ebx+114h] ebp +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_46AA30  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov edx edi +
call sub_46AA30  +
mov eax [ebx+100h] +
cmp byte ptr [ebx+104h] 3Eh +
jnz loc_46F3A3  +
cmp eax 0FFh +
jz loc_46F4EB  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov eax edx +
mov byte ptr [ebx+104h] 20h +
jmp loc_46F3A3  +
mov eax ebx +
mov edx edi +
call sub_46AA30  +
mov eax [esp+34h+var_1C] +
jmp loc_46F353  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F3B1  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F37B  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46F3A3  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46F353  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F522  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46F36C  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F406  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F4D5  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp dword ptr [ecx] 31h +
jz loc_46F590  +
mov eax [eax+118h] +
test eax eax +
jz loc_46F580  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46AA30  +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_46F578  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46F5C2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46F578  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46F5A7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+1Ch+var_10] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] 0FFh +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+1Ch+var_10] +
jmp loc_46F5AA  +
***
push ebx  +
mov ebx eax +
sub esp 24h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_46F628  +
cmp eax 30h +
jnz loc_46F640  +
mov eax [ebx+118h] +
test eax eax +
jz loc_46F676  +
test esi esi +
jz loc_46F681  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_46F628  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F6E0  +
lea esi [eax+1] +
mov [ebx+100h] esi +
xor esi esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+118h] +
mov byte ptr [ebx+104h] 28h +
test eax eax +
jnz loc_46F632  +
mov eax ebx +
call sub_46AA30  +
test esi esi +
jnz loc_46F636  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F6A8  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F691  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_C] ecx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_20] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
xor eax eax +
mov ecx [esp+28h+var_C] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_10] +
jmp loc_46F659  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 18Ch +
mov [ebp+var_17C] edx +
movzx edx byte ptr [eax] +
mov [ebp+var_180] ecx +
cmp dl 5Fh +
jz loc_46F8F0  +
mov ecx 8 +
mov esi ebx +
mov edi offset a_global__0 +
cmps   +
setnbe cl  +
setb al  +
xor esi esi +
cmp cl al +
jnz loc_46F7A0  +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_46F780  +
cmp al 5Fh +
jnz loc_46F8E0  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz cl  +
jz loc_46F791  +
xor esi esi +
cmp al 44h +
jnz loc_46F7A0  +
xor esi esi +
cmp byte ptr [ebx+0Ah] 5Fh +
jz loc_46F9C0  +
lea esi [esi+0] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] edx +
call strlen  +
mov [ebp+var_170] ebx +
mov [ebp+var_168] 11h +
mov [ebp+var_164] ebx +
mov [ebp+var_15C] 0 +
mov [ebp+var_150] 0 +
mov ecx eax +
lea eax [ebx+eax] +
mov [ebp+var_16C] eax +
lea eax [ecx+ecx] +
mov [ebp+var_158] eax +
lea eax [eax+ecx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_14C] ecx +
mov [ebp+var_148] 0 +
mov [ebp+var_144] 0 +
mov [ebp+var_140] 0 +
call sub_470CF0  +
sub esp eax +
lea eax ds:12h[ecx*4] +
lea edi [esp+198h+var_18C] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
mov edx [ebp+var_184] +
sub esp eax +
cmp esi 1 +
lea eax [esp+198h+var_18C] +
mov [ebp+var_160] edi +
mov [ebp+var_154] eax +
jz loc_46F905  +
jb loc_46F9A0  +
cmp esi 3 +
ja loc_46F9A0  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edi [ebx+0Bh] +
mov [ebp+var_164] edi +
jnz loc_46F880  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_46FA60  +
mov [esp+198h+var_198] edi +
lea ebx [ebp+var_170] +
call strlen  +
mov edx edi +
mov ecx eax +
mov eax ebx +
call sub_468030  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+198h+var_198] 0 +
call sub_467FD0  +
mov ebx [ebp+var_164] +
mov [esp+198h+var_198] ebx +
mov [ebp+var_184] eax +
call strlen  +
mov ecx [ebp+var_184] +
add ebx eax +
mov [ebp+var_164] ebx +
movzx edx byte ptr [ebx] +
jmp loc_46F910  +
cmp al 24h +
jnz loc_46F7A0  +
jmp loc_46F780  +
cmp byte ptr [eax+1] 5Ah +
mov esi 1 +
jnz loc_46F756  +
nop   +
jmp loc_46F7A0  +
xor ecx ecx +
cmp dl 5Fh +
jz loc_46F9D0  +
xor eax eax +
test dl dl +
jnz loc_46F992  +
test ecx ecx +
jz loc_46F992  +
mov eax [ebp+var_17C] +
lea ebx [ebp+var_13C] +
mov edx 11h +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_34] eax +
mov eax [ebp+var_180] +
mov [ebp+var_28] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_30] eax +
mov eax ebx +
mov [ebp+var_24] 0 +
call sub_46AA30  +
mov eax [ebp+var_3C] +
mov edx [ebp+var_30] +
mov [esp+198h+var_198] ebx +
mov byte ptr [ebp+eax+var_13C] 0 +
mov [esp+198h+var_190] edx +
mov [esp+198h+var_194] eax +
call [ebp+var_34]  +
mov edx [ebp+var_24] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_170] +
call sub_468F10  +
mov ecx eax +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_46F910  +
mov esi ecx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46F7A0  +
movzx edx byte ptr [ebx+1] +
lea eax [ebx+1] +
mov [ebp+var_164] eax +
cmp dl 5Ah +
jnz loc_46F910  +
add ebx 2 +
mov edx 1 +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_469850  +
test byte ptr [ebp+var_168] 1 +
mov ecx eax +
jnz loc_46FA2B  +
mov eax [ebp+var_164] +
movzx edx byte ptr [eax] +
jmp loc_46F910  +
mov edx ecx +
mov eax ebx +
call sub_4681D0  +
mov ecx eax +
mov esi [ebp+var_164] +
movzx edx byte ptr [esi] +
cmp dl 2Eh +
jnz loc_46F910  +
movzx eax byte ptr [esi+1] +
lea edx [eax-61h] +
cmp dl 19h +
jbe loc_46FA20  +
cmp al 5Fh +
jz loc_46FA20  +
sub eax 30h +
cmp al 9 +
jbe loc_46FA20  +
movzx edx byte ptr [esi] +
jmp loc_46F910  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_164] ebx +
lea ebx [ebp+var_170] +
mov eax ebx +
call sub_469850  +
mov ecx eax +
jmp loc_46F89B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_46FAA3  +
test esi esi +
jz loc_46FAC0  +
mov ecx [esp+2Ch+arg_8] +
test ecx ecx +
jnz loc_46FAC0  +
test ebx ebx +
jz loc_46FB62  +
mov dword ptr [ebx] 0FFFFFFFDh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+2Ch+var_1C] +
mov edx offset loc_468820 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_10] 0 +
call sub_46F730  +
test eax eax +
jz loc_46FB97  +
mov edx [esp+2Ch+var_10] +
mov ebp 1 +
mov edi [esp+2Ch+var_1C] +
test edx edx +
cmovz ebp [esp+2Ch+var_14] +
test edi edi +
jz loc_46FB53  +
test esi esi +
jz loc_46FB80  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov edx [esp+2Ch+arg_8] +
cmp eax [edx] +
jnb loc_46FB70  +
add eax 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
mov edi esi +
call free  +
test ebx ebx +
jz loc_46FB90  +
mov dword ptr [ebx] 0 +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_46FB62  +
cmp ebp 1 +
jz loc_46FBB0  +
mov dword ptr [ebx] 0FFFFFFFEh +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] esi +
call free  +
mov eax [esp+2Ch+arg_8] +
mov [eax] ebp +
jmp loc_46FB3F  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_46FB78  +
jmp loc_46FB3F  +
mov eax edi +
jmp loc_46FAB3  +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call free  +
test ebx ebx +
jnz loc_46FB5C  +
xor eax eax +
jmp loc_46FB64  +
mov dword ptr [ebx] 0FFFFFFFFh +
xor eax eax +
jmp loc_46FAB3  +
***
sub esp 0Ch +
mov eax [esp+10h] +
mov edx [esp+14h] +
test eax eax +
jz loc_46FBE8  +
test edx edx +
jz loc_46FBE8  +
mov ecx [esp+18h] +
call sub_46F730  +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFEh +
add esp 0Ch +
retn   +
***
mov eax 0FFFFFFFDh +
jmp loc_46FBE4  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_46FC10  +
cmp eax 3 +
jz loc_46FC10  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_470910  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_48370C 2 +
mov eax [esp+18h+arg_4] +
jz loc_46FC5B  +
mov dword_48370C 2 +
cmp eax 2 +
jz loc_46FC71  +
cmp eax 1 +
jz loc_46FCA0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_4DD030 +
cmp ebx offset unk_4DD030 +
jz loc_46FC65  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_46FC88  +
call eax  +
add ebx 4 +
cmp ebx offset unk_4DD030 +
jnz loc_46FC80  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_470910  +
jmp loc_46FC65  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_4DA384 +
mov [esp+28h+var_28] eax +
call sub_46FCE0  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_46FDA0  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_4DA384 +
mov [esp+28h+var_28] eax +
call sub_46FCE0  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_4DA380 +
mov [esp+28h+var_28] eax +
call sub_46FCE0  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_46FCF0  +
mov ds:dword_4DA384 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_46FCF0  +
mov [esp+28h+var_28] 8 +
mov ds:dword_4DA380 eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_46FD00  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_46FE38  +
cmp eax 0C000008Dh +
jnb loc_46FEA0  +
cmp eax 0C0000005h +
jnz loc_46FEA7  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_46FED6  +
test eax eax +
jz loc_46FE4D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_46FE8D  +
cmp eax 0C0000094h +
jz loc_46FE61  +
cmp eax 0C0000096h +
jz loc_46FEAE  +
cmp eax 0C0000093h +
jz loc_46FEA0  +
mov eax ds:dword_4D960C +
test eax eax +
jz loc_46FE92  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_46FF06  +
test eax eax +
jz loc_46FE4D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_46FE63  +
cmp eax 0C000001Dh +
jnz loc_46FE4D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_46FEF0  +
test eax eax +
jz loc_46FE4D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_46FE8D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_46FE8D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_46FE8D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_46FE8D  +
call sub_470570  +
jmp loc_46FE8D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_4D9610 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_46FF81  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_46FF87  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_4D9610 eax +
jmp loc_47D230  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_46FFBD  +
mov edx ds:off_4D4D80[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_470060  +
***
push edi  +
mov eax ds:dword_4D9614 +
retn   +
***
call eax  +
mov eax off_483708 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_483708 edx +
test eax eax +
jnz loc_470590  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_482790 +
cmp ebx 0FFFFFFFFh +
jz loc_4705E3  +
test ebx ebx +
jz loc_4705D2  +
call ds:dword_482790[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_4705C3  +
mov [esp+18h+var_18] offset dword_470580 +
call sub_46FDC0  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_4705E9  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_482790[eax*4] +
test edx edx +
jnz loc_4705E7  +
jmp loc_4705BF  +
***
mov eax ds:dword_4D9620 +
test eax eax +
jz loc_470610  +
retn   +
mov ds:dword_4D9620 1 +
jmp sub_4705B0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_4881BC +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_470652  +
not eax  +
mov dword_4881C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_4706C0  +
mov eax esi +
not eax  +
mov dword_4881BC esi +
mov dword_4881C0 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_4706AC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_4D9988 +
call ds:EnterCriticalSection  +
mov edi ds:dword_4D9980 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_4707B9  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_4707B2  +
test ebx ebx +
jz loc_4707B2  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_470790  +
mov [esp+28h+var_28] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_4707E0  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_470800  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_47085C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_4D9988 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_4D9980 +
mov ds:dword_4D9980 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_4707F3  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_4D9984 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_470890  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_4D9988 +
call ds:EnterCriticalSection  +
mov edx ds:dword_4D9980 +
sub esp 4 +
test edx edx +
jz loc_4708C1  +
mov eax [edx] +
cmp eax ebx +
jnz loc_4708BA  +
jmp loc_4708F8  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_4708D8  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_4708B2  +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_4D9988 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_4708D1  +
***
mov eax [edx+8] +
mov ds:dword_4D9980 eax +
mov eax edx +
jmp loc_4708DE  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_470964  +
jb loc_470935  +
cmp eax 3 +
jnz loc_47092E  +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_470992  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_4D9984 +
test eax eax +
jnz loc_4709A0  +
mov eax ds:dword_4D9984 +
cmp eax 1 +
jnz loc_47092E  +
mov ds:dword_4D9984 0 +
mov [esp+18h+var_18] offset unk_4D9988 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_47092E  +
mov eax ds:dword_4D9984 +
test eax eax +
jz loc_470980  +
mov ds:dword_4D9984 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_4D9988 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_47096D  +
call sub_470760  +
jmp loc_47092E  +
call sub_470760  +
jmp loc_47093E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_4709C0  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_4709E0  +
xor eax eax +
retn   +
***
jmp sub_4709B0  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_470A28  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_470A1E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_470A2A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_470A10  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_470A55  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470A60  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470A55  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_470A9A  +
jmp loc_470A55  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_470AC0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_470A90  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470AE8  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470AE1  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_4709F0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_470B32  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470B2E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_470B68  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470B63  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_470B63  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_470BA3  +
test ebx ebx +
jz loc_470BB4  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_470B96  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_470BD0  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470BCB  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_470C00  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470C36  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_4709F0  +
test eax eax +
jz loc_470C40  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_470C36  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_470C70  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_4709B0  +
test eax eax +
jz loc_470C67  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_470C67  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_4709F0  +
test eax eax +
jz loc_470C67  +
add esi 400000h +
mov edx esi +
jnz loc_470CB6  +
jmp loc_470C67  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_470CC4  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_470CE0  +
test ebx ebx +
jg loc_470CB0  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_470D12  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_470CFD  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_470D70  +
cmp ecx ebp +
ja loc_470DA2  +
test ecx ecx +
mov ebx ecx +
jnz loc_470D57  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_470D96  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_470DB2  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_470E10  +
cmp esi ebp +
jb loc_470E10  +
xor eax eax +
jmp loc_470D65  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_470E20  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_470E03  +
cmp esi edx +
jz loc_470E20  +
mov eax edi +
xor edx edx +
jmp loc_470D65  +
mov eax 1 +
jmp loc_470D65  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] offset dword_4D99A8 +
call pthread_key_create  +
test eax eax +
setz al  +
movzx eax al +
mov dword_483710 eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_470F80 +
mov [esp+1Ch+var_1C] offset unk_4D99A4 +
call pthread_once  +
test eax eax +
jnz loc_470FD8  +
mov eax dword_483710 +
test eax eax +
js loc_470FD8  +
add esp 1Ch +
retn   +
mov dword_483710 0 +
add esp 1Ch +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 20h +
mov ecx [edx] +
jmp loc_471053  +
xor edx edx +
xor ebx ebx +
mov eax [ecx+18h] +
cmp ecx [esi+10h] +
setz bl  +
shl ebx 2 +
test edx edx +
jnz loc_471070  +
test eax eax +
jz loc_471049  +
mov edx [esi] +
mov ecx [esi+4] +
mov [esp+28h+var_14] edi +
mov [esp+28h+var_18] esi +
mov [esp+28h+var_20] edx +
mov edx ebx +
or edx 2 +
mov [esp+28h+var_1C] ecx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] 1 +
call eax  +
cmp eax 7 +
jz loc_471080  +
cmp eax 8 +
jnz loc_471070  +
test ebx ebx +
jnz loc_47108C  +
mov eax [edi] +
mov ecx [eax] +
mov [edi] ecx +
test ecx ecx +
jnz loc_471000  +
xor ebx ebx +
xor eax eax +
cmp ecx [esi+10h] +
mov edx 5 +
setz bl  +
shl ebx 2 +
test edx edx +
jz loc_471014  +
lea esi [esi+0] +
add esp 20h +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call abort  +
jmp sub_4710A0  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx dword_483710 +
mov esi [eax] +
test edx edx +
js loc_4710EB  +
test edx edx +
jnz loc_4710CD  +
mov ds:dword_4D99AC esi +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
mov edx [ebx] +
mov ecx [edx+24h] +
mov ebp [edx+20h] +
mov esp [edx+28h] +
jmp ecx  +
call sub_470FB0  +
mov edx dword_483710 +
jmp loc_4710B6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov eax [eax+0Ch] +
mov [esp+40h+var_1C] eax +
mov eax [esi+10h] +
mov [esp+40h+var_18] eax +
mov eax [edx] +
jmp loc_47112C  +
mov ds:dword_4D99AC edx +
mov eax [ebx] +
mov eax [eax] +
mov [ebx] eax +
test eax eax +
jz loc_4711E0  +
mov edx [eax+18h] +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_14] edx +
mov edx [esi+4] +
mov [esp+40h+var_28] eax +
mov eax [esi] +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
call eax  +
mov edx [esp+40h+var_14] +
test eax eax +
jnz loc_471234  +
test edx edx +
jz loc_4711B5  +
mov edi [esi] +
mov ebp [esi+4] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_38] edi +
mov [esp+40h+var_34] ebp +
mov [esp+40h+var_3C] 0Ah +
mov [esp+40h+var_40] 1 +
call edx  +
cmp eax 7 +
jz loc_471241  +
cmp eax 8 +
jnz loc_471234  +
mov eax [ebx] +
mov edx [eax] +
mov eax dword_483710 +
test eax eax +
js loc_471220  +
test eax eax +
jz loc_471120  +
mov eax ds:dword_4D99A8 +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call pthread_setspecific  +
jmp loc_471126  +
mov eax [esi] +
mov edx [esi+4] +
mov ecx [esp+40h+var_18] +
mov [esp+40h+var_2C] ebx +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_28] ecx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_3C] 1Ah +
mov [esp+40h+var_40] 1 +
call eax  +
test eax eax +
jnz loc_471234  +
add esp 3Ch +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_14] edx +
call sub_470FB0  +
mov eax dword_483710 +
mov edx [esp+40h+var_14] +
jmp loc_4711C2  +
add esp 3Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 7 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax dword_483710 +
mov ebx [esp+18h+arg_0] +
test eax eax +
js loc_4712A0  +
test eax eax +
jnz loc_471277  +
mov eax ds:dword_4D99AC +
mov ds:dword_4D99AC ebx +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_18] eax +
call pthread_getspecific  +
mov [ebx] eax +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_470FB0  +
mov eax dword_483710 +
jmp loc_471261  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax] +
mov eax dword_483710 +
test eax eax +
js loc_4712E8  +
test eax eax +
jnz loc_4712D2  +
mov ds:dword_4D99AC ebx +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call pthread_setspecific  +
add esp 18h +
pop ebx  +
retn   +
call sub_470FB0  +
mov eax dword_483710 +
jmp loc_4712C3  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov eax [eax+edx*4+8] +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
test eax eax +
jz loc_471320  +
mov eax [eax+28h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov [eax+edx*4+8] ecx +
retn   +
***
mov eax [esp+4] +
mov eax [eax] +
mov eax [eax+4] +
add eax 1 +
retn   +
***
mov eax [esp+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_0] +
mov eax [eax] +
test eax eax +
jz loc_471380  +
mov eax [eax+4] +
add eax 1 +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov eax [eax] +
lea edx [ecx-1] +
mov [eax+4] edx +
retn   +
***
jmp sub_4713B0  +
***
mov eax [esp+arg_0] +
mov eax [eax] +
mov eax [eax+1Ch] +
retn   +
***
retn   +
***
xor eax eax +
retn   +
***
retn   +
***
retn   +
***
push ebx  +
sub esp 30h +
mov eax dword_483710 +
mov edi [esp+30h+arg_0] +
test eax eax +
js loc_4714D0  +
test eax eax +
mov esi ds:dword_4D99AC +
jnz loc_471481  +
test esi esi +
mov [esp+30h+var_4] esi +
jz loc_471475  +
mov eax esi +
lea ebx [esp+30h+var_4] +
nop   +
mov eax [eax+18h] +
test eax eax +
jz loc_471467  +
mov [esp+30h+var_1C] ebx +
mov [esp+30h+var_20] edi +
mov edx [edi] +
mov ecx [edi+4] +
mov [esp+30h+var_2C] 1 +
mov [esp+30h+var_30] 1 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_24] ecx +
call eax  +
cmp eax 6 +
jz loc_471492  +
cmp eax 8 +
jnz loc_4714C0  +
mov eax [esp+30h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+30h+var_4] eax +
jnz loc_471430  +
mov eax 5 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+30h+var_30] eax +
call pthread_getspecific  +
mov esi eax +
jmp loc_471421  +
mov eax [esp+30h+var_4] +
mov edx ebx +
mov dword ptr [edi+0Ch] 0 +
mov [esp+30h+var_4] esi +
mov [edi+10h] eax +
mov eax edi +
call sub_470FF0  +
cmp eax 7 +
jnz loc_47147A  +
mov eax ebx +
call sub_4710A0  +
lea esi [esi+0] +
add esp 30h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_470FB0  +
mov eax dword_483710 +
jmp loc_471417  +
***
add esp 28h +
pop ebx  +
retn   +
***
mov eax ds:dword_4D99A8 +
mov [esp] eax +
call pthread_getspecific  +
jmp loc_4714FB  +
***
call sub_470FB0  +
mov edx dword_483710 +
jmp loc_4714F2  +
***
sub esp 24h +
mov edx dword_483710 +
mov ebx [esp+24h+arg_0] +
test edx edx +
js loc_4715AD  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_47159E  +
mov ecx [ebx+0Ch] +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] eax +
mov edx esi +
mov eax ebx +
test ecx ecx +
jnz loc_47158E  +
call sub_470FF0  +
cmp eax 7 +
jz loc_471597  +
call abort  +
nop   +
call sub_471100  +
jmp loc_471584  +
mov eax esi +
call sub_4710A0  +
mov eax ds:dword_4D99A8 +
mov [esp+24h+var_24] eax +
call pthread_getspecific  +
jmp loc_47156C  +
call sub_470FB0  +
mov edx dword_483710 +
jmp loc_471563  +
***
mov ebx [esp+28h+arg_0] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_471600  +
mov edx dword_483710 +
test edx edx +
js loc_471630  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_471620  +
mov [esp+28h+var_C] eax +
lea edx [esp+28h+var_C] +
mov eax ebx +
call sub_471100  +
cmp eax 7 +
jz loc_471610  +
call abort  +
nop   +
lea esi [esi+0] +
mov [esp+28h+var_28] ebx +
call sub_471400  +
add esp 28h +
pop ebx  +
retn   +
lea eax [esp+28h+var_C] +
call sub_4710A0  +
lea esi [esi+0] +
mov eax ds:dword_4D99A8 +
mov [esp+28h+var_28] eax +
call pthread_getspecific  +
jmp loc_4715E2  +
call sub_470FB0  +
mov edx dword_483710 +
jmp loc_4715D9  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+8] +
test eax eax +
jz loc_47165B  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] 1 +
call eax  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov edx dword_483710 +
mov ebx [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
test edx edx +
js loc_4716E0  +
test edx edx +
mov eax ds:dword_4D99AC +
jnz loc_4716D0  +
test eax eax +
mov [esp+20h+var_4] eax +
lea esi [esp+20h+var_4] +
jz loc_4716AB  +
lea esi [esi+0] +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_4716C1  +
mov eax [esp+20h+var_4] +
mov eax [eax] +
test eax eax +
mov [esp+20h+var_4] eax +
jnz loc_471690  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] esi +
call ebx  +
test eax eax +
jnz loc_4716C1  +
add esp 20h +
mov al 5 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 20h +
mov eax 3 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:dword_4D99A8 +
mov [esp+20h+var_20] eax +
call pthread_getspecific  +
jmp loc_471681  +
call sub_470FB0  +
mov edx dword_483710 +
jmp loc_471678  +
***
sub esp 18h +
test eax eax +
jz loc_471718  +
mov eax [eax] +
test eax eax +
jz loc_471718  +
sub edx eax +
cmp edx ecx +
jz loc_471718  +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_471718  +
mov [ebx] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [edx] +
cmp ebx eax +
jz loc_471735  +
mov eax ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add ebx ebx +
mov eax 100h +
cmp ebx 100h +
cmovb ebx eax +
test ecx ecx +
jz loc_471770  +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_C] ecx +
call realloc  +
mov ecx [esp+18h+var_C] +
test eax eax +
jz loc_471780  +
mov [esi] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jnz loc_471761  +
xor eax eax +
jmp loc_47172F  +
mov [esp+18h+var_18] ecx +
call free  +
xor eax eax +
jmp loc_47172F  +
***
test edx edx +
sub esp 18h +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
jz loc_47183E  +
mov esi [eax] +
mov ebp edx +
test esi esi +
jz loc_47183E  +
mov eax [esi] +
test eax eax +
jz loc_47180F  +
xor ebx ebx +
lea esi [esi+0] +
mov eax [esi+ebx*4+8] +
mov eax [eax] +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esi+ebx*4+8] +
add ebx 1 +
cmp [esi] ebx +
mov dword ptr [eax] 0 +
ja loc_4717F0  +
mov ebx [esi+4] +
mov [esp+24h+var_24] esi +
call free  +
test ebx ebx +
jz loc_471822  +
mov esi ebx +
jmp loc_4717E5  +
test ebp ebp +
mov dword ptr [edi] 0 +
jz loc_47183E  +
mov eax [ebp+0] +
mov [esp+24h+var_24] eax +
call free  +
mov dword ptr [ebp+0] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
cmp eax 0FFFFFFFFh +
jz loc_4718C5  +
test edx edx +
mov edi ecx +
jz loc_471887  +
mov eax [edx] +
test eax eax +
jnz loc_471872  +
jmp loc_471881  +
mov eax esi +
mov esi [eax+4] +
mov [esp+28h+var_28] eax +
call free  +
test esi esi +
jnz loc_471870  +
mov dword ptr [ebx] 0 +
test edi edi +
jz loc_47189B  +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call free  +
mov dword ptr [edi] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_4718BB  +
mov eax [esp+28h+arg_0] +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [esp+28h+arg_0] +
mov dword ptr [eax] 0 +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+28h+arg_0] +
mov eax ebx +
call sub_4717D0  +
jmp loc_4718BB  +
***
mov ebx eax +
sub esp 1Ch +
cmp [esp+1Ch+arg_0] 0 +
jz loc_4719B0  +
test byte ptr [edx+1004h] 1 +
jz loc_4719BE  +
sub dword ptr [ecx] 1 +
mov ecx [edx+1008h] +
mov [edx+ecx*4+4] eax +
add ecx 1 +
mov [edx+1008h] ecx +
add esp 1Ch +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_4719A9  +
test byte ptr [edx+1004h] 1 +
jnz loc_471993  +
mov edx [edx] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_18] edx +
call ungetc  +
mov ecx [esp+1Ch+var_10] +
sub dword ptr [ecx] 1 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 0BCh +
test eax eax +
mov [esp+0BCh+var_98] eax +
mov [esp+0BCh+var_74] ecx +
mov [esp+0BCh+var_30] 0 +
mov [esp+0BCh+var_2C] 0 +
mov [esp+0BCh+var_28] 0 +
mov [esp+0BCh+var_24] 0 +
jz loc_473857  +
mov eax [eax] +
test eax eax +
jz loc_473857  +
test edx edx +
mov esi edx +
jz loc_473857  +
mov [esp+0BCh+var_1C] 0 +
call localeconv  +
mov eax [eax] +
mov [esp+0BCh+var_64] eax +
call localeconv  +
mov eax [eax+4] +
test eax eax +
mov edi eax +
mov [esp+0BCh+var_8C] eax +
jz loc_471A71  +
cmp byte ptr [eax] 0 +
mov eax 0 +
cmovnz eax edi +
mov [esp+0BCh+var_8C] eax +
mov eax [esp+0BCh+var_74] +
xor edi edi +
mov [esp+0BCh+var_84] 0 +
mov ebx edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [esp+0BCh+var_7C] 0 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] 0 +
mov [esp+0BCh+var_94] 0 +
mov [esp+0BCh+var_60] 0 +
mov [esp+0BCh+var_78] 0 +
movzx eax byte ptr [esi] +
test al al +
jz loc_4729C9  +
test al al +
js loc_471DD0  +
lea ecx [esi+1] +
cmp al 25h +
mov ebp ecx +
jz loc_471AF0  +
movzx esi al +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jz loc_471B50  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov esi ebp +
jmp loc_471AB5  +
movzx edi byte ptr [esi+1] +
mov eax edi +
movzx eax al +
sub eax 30h +
cmp eax 9 +
jbe loc_471BE7  +
mov eax edi +
mov [esp+0BCh+var_80] 0 +
xor edx edx +
mov ecx [esp+0BCh+var_8C] +
jmp loc_471B41  +
cmp al 27h +
jz loc_471CF0  +
cmp al 49h +
jnz loc_471D40  +
movzx eax byte ptr [ebp+1] +
cmp al 36h +
jz loc_471D00  +
cmp al 33h +
jz loc_471D20  +
or edx 4 +
add ebp 1 +
cmp al 2Ah +
jnz loc_471B17  +
or dl 80h +
movzx eax byte ptr [ebp+1] +
jmp loc_471B3E  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_471BD0  +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jz loc_471BD0  +
mov edi [esp+0BCh+var_98] +
jmp loc_471B8D  +
mov [esp+0BCh+var_BC] eax +
call isspace  +
test eax eax +
jz loc_471BD0  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_471B81  +
mov eax [esp+0BCh+var_7C] +
test eax eax +
cmovz eax ebx +
mov ecx [esp+0BCh+var_94] +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471850  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebx +
jnz loc_471CA0  +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov esi ebp +
jmp loc_471AB5  +
lea edx [esi+2] +
movzx esi byte ptr [esi+2] +
mov [esp+0BCh+var_80] eax +
mov eax esi +
movzx eax al +
lea ebp [eax-30h] +
cmp ebp 9 +
ja loc_471C34  +
mov [esp+0BCh+var_90] ebx +
mov ebx [esp+0BCh+var_80] +
mov ebp ecx +
lea esi [esi+0] +
add edx 1 +
lea ecx [ebx+ebx*4] +
lea ebx [eax+ecx*2-30h] +
movzx ecx byte ptr [edx] +
movzx eax cl +
lea esi [eax-30h] +
cmp esi 9 +
jbe loc_471C10  +
mov [esp+0BCh+var_80] ebx +
mov ebx [esp+0BCh+var_90] +
mov esi ecx +
mov ecx ebp +
mov eax esi +
cmp al 24h +
jz loc_472961  +
mov ebp ecx +
mov eax edi +
mov [esp+0BCh+var_80] 0 +
jmp loc_471B0F  +
test byte ptr [esp+0BCh+var_90] 20h +
jz loc_471CA0  +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp al 28h +
jnz loc_471CA0  +
mov esi offset aNil +
mov edi [esp+0BCh+var_98] +
jmp loc_471C85  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
cmp [esi] al +
jnz loc_471CA0  +
add esi 1 +
cmp byte ptr [esi] 0 +
jz loc_474072  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_471C6D  +
lea esi [esi+0] +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_471980  +
jmp loc_471CC5  +
fstp  st +
jmp loc_471CC5  +
fstp  st +
jmp loc_471CC5  +
fstp  st +
lea eax [esp+0BCh+var_24] +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_BC] eax +
mov eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_30] +
call sub_471850  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_471CF7  +
or dh 1 +
movzx eax byte ptr [ebp+1] +
jmp loc_471B3E  +
cmp byte ptr [ebp+2] 34h +
jnz loc_471B3B  +
movzx eax byte ptr [ebp+3] +
or edx 0Ch +
add ebp 2 +
jmp loc_471B3E  +
cmp byte ptr [ebp+2] 32h +
jnz loc_471B3B  +
movzx eax byte ptr [ebp+3] +
or edx 4 +
add ebp 2 +
jmp loc_471B3E  +
mov [esp+0BCh+var_90] edx +
movzx edx al +
xor esi esi +
lea ecx [edx-30h] +
cmp ecx 9 +
ja loc_4729BF  +
lea eax [esi+esi*4] +
add ebp 1 +
lea esi [edx+eax*2-30h] +
movzx eax byte ptr [ebp+0] +
movzx edx al +
lea ecx [edx-30h] +
cmp ecx 9 +
jbe loc_471D55  +
test esi esi +
mov edx 0FFFFFFFFh +
cmovz esi edx +
cmp al 6Ah +
jz loc_47298D  +
jle loc_471E33  +
cmp al 71h +
jz loc_4729A6  +
nop   +
jg loc_471E74  +
cmp al 6Ch +
jz loc_471EFB  +
cmp al 6Dh +
jnz loc_471EED  +
movzx eax byte ptr [ebp+1] +
cmp al 6Ch +
jz loc_47389E  +
lea edi [ebp+1] +
or [esp+0BCh+var_90] 400h +
mov [esp+0BCh+var_68] edi +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
mov [esp+0BCh+var_BC] esi +
mov ebp esi +
call strlen  +
lea edx [esp+0BCh+var_1C] +
mov [esp+0BCh+var_B4] edx +
mov [esp+0BCh+var_BC] esi +
mov [esp+0BCh+var_B8] eax +
call sub_475010  +
test eax eax +
lea edi [esi+eax] +
jle loc_472959  +
mov esi [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_472C02  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
cmp ebx eax +
jnz loc_472C02  +
cmp ebp edi +
jnz loc_471E00  +
mov esi ebp +
jmp loc_471AB5  +
cmp al 4Ch +
jz loc_4729A6  +
nop   +
lea esi [esi+0] +
jle loc_472980  +
cmp al 61h +
jz loc_471ED3  +
cmp al 68h +
jnz loc_471EED  +
movzx eax byte ptr [ebp+1] +
cmp al 68h +
jz loc_47386C  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 2 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
cmp al 74h +
jz loc_471E7C  +
cmp al 7Ah +
jnz loc_471EED  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 4 +
mov byte ptr [esp+0BCh+var_88] al +
cmp byte ptr [esp+0BCh+var_88] 0 +
jz loc_471CC5  +
mov eax [esp+0BCh+var_68] +
lea ebp [eax+1] +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jnz loc_472570  +
cmp byte ptr [esp+0BCh+var_88] 5Bh +
jnz loc_4727E3  +
movzx eax byte ptr [esp+0BCh+var_88] +
sub eax 25h +
cmp al 53h +
ja loc_471CC5  +
movzx eax al +
jmp ds:off_4D4EAC[eax*4]  +
movzx eax byte ptr [ebp+1] +
mov edx eax +
and edx 0FFFFFFF7h +
cmp dl 53h +
jz loc_472332  +
cmp al 73h +
jz loc_472332  +
movzx eax byte ptr [ebp+0] +
mov [esp+0BCh+var_68] ebp +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
movzx eax byte ptr [ebp+1] +
cmp al 6Ch +
jz loc_473885  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 4 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
test byte ptr [esp+0BCh+var_90] 8 +
jz loc_473A3B  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473FB5  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edi [esp+0BCh+var_2C] +
mov esi ebp +
mov dword ptr [eax+4] 0 +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] edi +
jmp loc_471AB5  +
mov ebx [esp+0BCh+var_90] +
and ebx 4 +
jnz loc_472C2E  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_472014  +
test [esp+0BCh+var_90] 600h +
jz loc_473F2C  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4741E0  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_474334  +
mov [esp+0BCh+var_BC] 64h +
call malloc  +
mov edi [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_60] eax +
mov [edi] eax +
jz loc_472C8E  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_471FF1  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_471FF8  +
call sub_4717B0  +
mov edx [eax] +
mov edi [esp+0BCh+var_94] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov [eax+edx*4+8] edi +
mov [esp+0BCh+var_78] 64h +
mov eax [esp+0BCh+var_68] +
cmp byte ptr [eax+1] 5Eh +
setz cl  +
add eax 2 +
test cl cl +
cmovnz ebp eax +
test esi esi +
mov eax 7FFFFFFFh +
cmovs esi eax +
cmp [esp+0BCh+var_28] 0FFh +
mov byte ptr [esp+0BCh+var_AC] cl +
jbe loc_4736E3  +
mov eax [esp+0BCh+var_24] +
test al 1 +
mov edi eax +
mov edx 100h +
jnz loc_473FC7  +
test edi 2 +
jnz loc_473FA4  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_47207F  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_472087  +
mov byte ptr [edi] 0 +
movzx edx byte ptr [ebp+0] +
cmp dl 2Dh +
jz loc_472098  +
cmp dl 5Dh +
movzx eax dl +
jnz loc_4720C2  +
mov eax [esp+0BCh+var_24] +
add ebp 1 +
mov byte ptr [eax+edx] 1 +
movzx eax byte ptr [ebp+0] +
jmp loc_4720C2  +
mov edx [esp+0BCh+var_24] +
mov byte ptr [edx+eax] 1 +
movzx edx byte ptr [ebp+0] +
movzx eax dl +
add ebp 1 +
test al al +
jz loc_471CC5  +
cmp al 5Dh +
jz loc_4734B0  +
cmp al 2Dh +
jnz loc_4720B0  +
movzx edx byte ptr [ebp+0] +
test dl dl +
jz loc_4720B0  +
cmp dl 5Dh +
jz loc_4720B0  +
movzx ecx byte ptr [ebp-2] +
cmp cl dl +
ja loc_4720B0  +
nop   +
jnb loc_4720BF  +
mov edx [esp+0BCh+var_24] +
movzx eax cl +
add ecx 1 +
mov byte ptr [edx+eax] 1 +
cmp [ebp+0] cl +
ja loc_4720F2  +
jmp loc_4720BB  +
movzx eax byte ptr [esp+0BCh+var_88] +
sub eax 58h +
cmp al 20h +
ja loc_472357  +
movzx eax al +
jmp ds:off_4D4FFC[eax*4]  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
cmp eax 2Dh +
setz [esp+0BCh+var_4D]  +
cmp eax 2Bh +
jz loc_47215C  +
cmp [esp+0BCh+var_4D] 0 +
jz loc_472188  +
test esi esi +
jz loc_471CC5  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471CC5  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp eax 6Eh +
jz loc_473CA9  +
cmp eax 69h +
jz loc_473D8F  +
test esi esi +
mov byte ptr [esp+0BCh+var_5C] 65h +
mov [esp+0BCh+var_58] 0 +
jz loc_4721BC  +
cmp ebx 30h +
jz loc_4740FC  +
mov eax [esp+0BCh+var_90] +
xor ecx ecx +
mov edi ebx +
mov dword ptr [esp+0BCh+var_AC] esi +
mov ebx [esp+0BCh+var_58] +
mov esi ecx +
mov byte ptr [esp+0BCh+var_68] 0 +
mov [esp+0BCh+var_4C] ebp +
and eax 100h +
mov [esp+0BCh+var_54] eax +
jmp loc_47229B  +
mov ecx [esp+0BCh+var_24] +
movzx eax byte ptr [esp+0BCh+var_5C] +
cmp [ecx+ebx-1] al +
jz loc_4731E0  +
cmp byte ptr [esp+0BCh+var_68] 0 +
jnz loc_472218  +
test ebx ebx +
jz loc_472218  +
mov [esp+0BCh+var_BC] edi +
call tolower  +
cmp byte ptr [esp+0BCh+var_5C] al +
jz loc_4733FE  +
mov ecx dword ptr [esp+0BCh+var_AC] +
mov eax 7FFFFFFFh +
test ecx ecx +
cmovg eax ecx +
mov [esp+0BCh+var_88] eax +
mov eax esi +
test al al +
jz loc_473000  +
mov eax [esp+0BCh+var_64] +
cmp byte ptr [eax] 0 +
jz loc_472FE5  +
mov eax [esp+0BCh+var_8C] +
test eax eax +
jz loc_473C81  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_473C81  +
mov ecx dword ptr [esp+0BCh+var_AC] +
mov eax [esp+0BCh+var_88] +
test ecx ecx +
cmovle eax ecx +
mov dword ptr [esp+0BCh+var_AC] eax +
mov ebp dword ptr [esp+0BCh+var_AC] +
test ebp ebp +
jz loc_4732BD  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_4732BD  +
xor eax eax +
test ebp ebp +
setnle al  +
sub dword ptr [esp+0BCh+var_AC] eax +
lea eax [edi-30h] +
cmp eax 9 +
jbe loc_4722C9  +
cmp byte ptr [esp+0BCh+var_68] 0 +
jnz loc_4721E5  +
test byte ptr [esp+0BCh+var_90] 40h +
jz loc_4721FB  +
mov [esp+0BCh+var_BC] edi +
call isxdigit  +
test eax eax +
jz loc_4721FB  +
mov ecx [esp+0BCh+var_24] +
mov eax ebx +
lea edx [esp+0BCh+var_28] +
call sub_471720  +
mov ecx edi +
mov [esp+0BCh+var_24] eax +
mov [eax+ebx] cl +
add ebx 1 +
jmp loc_472269  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
cmp eax 25h +
jz loc_471BD8  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_BC] 1 +
call sub_471980  +
jmp loc_471CC5  +
lea edi [ebp+1] +
mov [esp+0BCh+var_68] edi +
or [esp+0BCh+var_90] 200h +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
or [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_84] 0Ah +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
cmp eax 2Dh +
jz loc_472DE6  +
cmp eax 2Bh +
mov dword ptr [esp+0BCh+var_AC] 0 +
jz loc_472DE6  +
test esi esi +
setnz dl  +
cmp ebx 30h +
mov eax edx +
jnz loc_472CC0  +
test dl dl +
jz loc_472CC0  +
test esi esi +
jle loc_473AD0  +
mov edi dword ptr [esp+0BCh+var_AC] +
lea eax [esp+0BCh+var_28] +
sub esi 1 +
mov ecx [esp+0BCh+var_24] +
mov edx eax +
mov eax edi +
call sub_471720  +
mov ecx edi +
add edi 1 +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+ecx] 30h +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
test esi esi +
mov dword ptr [esp+0BCh+var_AC] edi +
mov ebx eax +
jnz loc_473B11  +
mov edi [esp+0BCh+var_84] +
mov eax 8 +
test edi edi +
cmovnz eax edi +
mov [esp+0BCh+var_84] eax +
test esi esi +
setnz al  +
cmp ebx 0FFFFFFFFh +
jz loc_472458  +
test al al +
jz loc_472458  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_5C] ebp +
and eax 100h +
mov [esp+0BCh+var_68] eax +
lea esi [esi+0] +
cmp [esp+0BCh+var_84] 10h +
jz loc_472E80  +
lea eax [ebx-30h] +
cmp eax 9 +
ja loc_472EF0  +
lea eax [ebx-2Fh] +
cmp eax [esp+0BCh+var_84] +
jle loc_472E90  +
mov ebp [esp+0BCh+var_5C] +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_471C4F  +
cmp dword ptr [esp+0BCh+var_AC] 1 +
jnz loc_472485  +
mov eax [esp+0BCh+var_24] +
movzx eax byte ptr [eax] +
cmp al 2Dh +
jz loc_471CA0  +
cmp al 2Bh +
jz loc_471CA0  +
mov edx [esp+0BCh+var_98] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
lea ecx [esp+0BCh+var_2C] +
call sub_471980  +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edi dword ptr [esp+0BCh+var_AC] +
mov ecx [esp+0BCh+var_24] +
mov edx [esp+0BCh+var_88] +
mov eax edi +
call sub_471720  +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+edi] 0 +
mov edi [esp+0BCh+var_90] +
mov eax [esp+0BCh+var_84] +
and edi 8 +
jz loc_473802  +
mov [esp+0BCh+var_B4] eax +
lea eax [esp+0BCh+var_20] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_BC] eax +
jz loc_473C00  +
call sub_475070  +
mov esi eax +
mov [esp+0BCh+var_48] edx +
mov eax [esp+0BCh+var_20] +
cmp [esp+0BCh+var_24] eax +
jz loc_471CC5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
test edi edi +
jz loc_473B58  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_47404C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edi [esp+0BCh+var_48] +
mov [eax] esi +
mov [eax+4] edi +
add [esp+0BCh+var_7C] 1 +
mov esi ebp +
mov dword ptr [esp+0BCh+var_AC] 0 +
jmp loc_471AB5  +
call _errno  +
mov edi [eax] +
call _errno  +
mov dword ptr [esp+0BCh+var_AC] esi +
mov esi ebx +
mov ebx [esp+0BCh+var_98] +
mov dword ptr [eax] 0 +
jmp loc_4725B1  +
lea edx [esp+0BCh+var_2C] +
mov eax ebx +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4725B6  +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jz loc_4725D7  +
cmp esi 0FFFFFFFFh +
jnz loc_472590  +
call _errno  +
cmp dword ptr [eax] 4 +
nop   +
jz loc_47296D  +
mov esi 0FFFFFFFFh +
mov [esp+0BCh+var_BC] esi +
call isspace  +
test eax eax +
jnz loc_4725B1  +
mov ebx esi +
mov esi dword ptr [esp+0BCh+var_AC] +
call _errno  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [eax] edi +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_471980  +
cmp byte ptr [esp+0BCh+var_88] 63h +
jnz loc_472805  +
test byte ptr [esp+0BCh+var_90] 4 +
jz loc_472B47  +
cmp esi 0FFFFFFFFh +
mov eax 1 +
cmovz esi eax +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_4726BD  +
test ah 6 +
jz loc_472CD7  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473EAA  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_474334  +
cmp esi 400h +
mov eax 400h +
cmovle eax esi +
mov [esp+0BCh+var_78] eax +
add eax eax +
mov [esp+0BCh+var_BC] eax +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [ecx] eax +
jz loc_474384  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_4726A2  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_4726A9  +
call sub_4717B0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [eax+edx*4+8] ecx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov eax [esp+0BCh+var_90] +
mov dword ptr [esp+0BCh+var_AC] esi +
mov esi ebx +
mov [esp+0BCh+var_18] 0 +
mov [esp+0BCh+var_88] ebp +
and eax 600h +
mov [esp+0BCh+var_90] eax +
mov eax esi +
test edi edi +
mov byte ptr [esp+0BCh+var_11] al +
jnz loc_472773  +
mov ebp [esp+0BCh+var_90] +
test ebp ebp +
jz loc_472773  +
mov eax [esp+0BCh+var_94] +
mov ecx [eax] +
mov eax [esp+0BCh+var_78] +
add eax eax +
mov [esp+0BCh+var_80] eax +
add eax ecx +
cmp [esp+0BCh+var_70] eax +
jnz loc_472773  +
mov ebp [esp+0BCh+var_78] +
mov eax dword ptr [esp+0BCh+var_AC] +
cmp ebp eax +
lea ebx [eax-1] +
cmovle ebx ebp +
add ebx ebp +
add ebp 1 +
jmp loc_47274E  +
cmp ebx ebp +
jbe loc_47391F  +
mov eax [esp+0BCh+var_94] +
mov ebx ebp +
mov ecx [eax] +
lea eax [ebx+ebx] +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] ecx +
call realloc  +
test eax eax +
jz loc_47273E  +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_78] ebx +
mov [ecx] eax +
add eax [esp+0BCh+var_80] +
mov [esp+0BCh+var_70] eax +
lea ebx [esp+0BCh+var_11] +
xor ebp ebp +
mov eax ebx +
mov ebx esi +
mov esi eax +
jmp loc_47278B  +
mov byte ptr [esp+0BCh+var_11] al +
mov eax [esp+0BCh+var_70] +
test edi edi +
lea ecx [esp+0BCh+var_18] +
mov [esp+0BCh+var_B0] ecx +
mov [esp+0BCh+var_B4] 1 +
cmovnz eax ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call sub_474E80  +
cmp eax 0FFFFFFFEh +
jnz loc_473434  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472784  +
call _errno  +
mov dword ptr [eax] 2Ah +
jmp loc_471CC5  +
movzx eax byte ptr [esp+0BCh+var_88] +
and eax 0FFFFFFDFh +
cmp al 43h +
jz loc_4727FA  +
cmp byte ptr [esp+0BCh+var_88] 6Eh +
jnz loc_472570  +
cmp byte ptr [esp+0BCh+var_88] 63h +
jz loc_472608  +
cmp byte ptr [esp+0BCh+var_88] 73h +
jnz loc_471EB9  +
test byte ptr [esp+0BCh+var_90] 4 +
jz loc_472A1A  +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_4728B2  +
test ah 6 +
jz loc_472DB8  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473F60  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov eax [esp+0BCh+var_94] +
test eax eax +
jz loc_474334  +
mov [esp+0BCh+var_BC] 0C8h +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [ecx] eax +
jz loc_474384  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_47288F  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_472896  +
call sub_4717B0  +
mov edx [eax] +
mov ebx [esp+0BCh+var_94] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [esp+0BCh+var_78] 64h +
mov [eax] ecx +
mov [eax+edx*4+8] ebx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov [esp+0BCh+var_88] esi +
mov esi [esp+0BCh+var_70] +
mov [esp+0BCh+var_18] 0 +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jnz loc_474256  +
mov byte ptr [esp+0BCh+var_11] bl +
xor ebp ebp +
jmp loc_472907  +
mov byte ptr [esp+0BCh+var_11] al +
test edi edi +
mov eax ebp +
lea ecx [esp+0BCh+var_18] +
cmovz eax esi +
mov [esp+0BCh+var_B0] ecx +
lea ecx [esp+0BCh+var_11] +
mov [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] eax +
call sub_474E80  +
cmp eax 0FFFFFFFEh +
jnz loc_473758  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472900  +
jmp loc_4727D3  +
movzx eax byte ptr [esi] +
jmp loc_471AC8  +
lea ebp [edx+1] +
movzx eax byte ptr [edx+1] +
jmp loc_471B0F  +
mov edi [esp+0BCh+var_7C] +
mov eax 0FFFFFFFFh +
test edi edi +
cmovnz eax edi +
jmp loc_471BAB  +
test al al +
jz loc_471CC5  +
jmp loc_471EED  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 8 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
lea eax [ebp+1] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+1] +
or [esp+0BCh+var_90] 0Ch +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
mov esi 0FFFFFFFFh +
jmp loc_471D78  +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jz loc_471CC5  +
mov esi [esp+0BCh+var_98] +
lea esi [esi+0] +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_4718E0  +
mov [esp+0BCh+var_BC] eax +
mov ebx eax +
call isspace  +
test eax eax +
jnz loc_4729E0  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_471980  +
jmp loc_471CC5  +
mov eax [esp+0BCh+var_90] +
mov edi eax +
and edi 80h +
jnz loc_472AB1  +
test ah 6 +
jz loc_472D8A  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_473F00  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] ecx +
mov edx [esp+0BCh+var_94] +
test edx edx +
jz loc_474334  +
mov [esp+0BCh+var_BC] 64h +
call malloc  +
mov ecx [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_60] eax +
mov [ecx] eax +
jz loc_474384  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_472A8E  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_472A95  +
call sub_4717B0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [esp+0BCh+var_78] 64h +
mov [eax+edx*4+8] ecx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_88] ebp +
mov ebp [esp+0BCh+var_60] +
and eax 600h +
mov dword ptr [esp+0BCh+var_AC] eax +
jmp loc_472B21  +
mov eax [esp+0BCh+var_94] +
mov ebp edx +
mov ecx [esp+0BCh+var_78] +
mov eax [eax] +
add ecx eax +
cmp edx ecx +
jz loc_4733A9  +
test esi esi +
jle loc_472B06  +
sub esi 1 +
jz loc_473215  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_473215  +
mov [esp+0BCh+var_BC] ebx +
call isspace  +
test eax eax +
jnz loc_4738F9  +
test edi edi +
jnz loc_472AF9  +
mov eax dword ptr [esp+0BCh+var_AC] +
lea edx [ebp+1] +
mov [ebp+0] bl +
test eax eax +
jnz loc_472AE3  +
mov ebp edx +
jmp loc_472AF9  +
cmp esi 0FFFFFFFFh +
mov eax 1 +
cmovz esi eax +
mov eax [esp+0BCh+var_90] +
test al 80h +
jnz loc_4743B1  +
and eax 600h +
mov dword ptr [esp+0BCh+var_AC] eax +
jnz loc_472D05  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473ED6  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
test edi edi +
jz loc_471CC5  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47296D  +
mov [esp+0BCh+var_90] ebp +
mov edx ebx +
jmp loc_472BF4  +
mov eax [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_78] +
mov eax [eax] +
mov ecx ebx +
add ecx eax +
cmp edi ecx +
jz loc_47325E  +
sub esi 1 +
test esi esi +
lea ebp [edi+1] +
mov [edi] dl +
jle loc_473721  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_473721  +
mov edi ebp +
mov eax dword ptr [esp+0BCh+var_AC] +
test eax eax +
jnz loc_472BB1  +
mov ebx [esp+0BCh+var_78] +
jmp loc_472BC7  +
mov edx [esp+0BCh+var_98] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
lea ecx [esp+0BCh+var_2C] +
call sub_471980  +
mov edi [esp+0BCh+var_7C] +
mov eax 0FFFFFFFFh +
test edi edi +
cmovnz eax edi +
jmp loc_471BAB  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_472014  +
test [esp+0BCh+var_90] 600h +
jz loc_473F76  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_474226  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov ecx [esp+0BCh+var_94] +
test ecx ecx +
jz loc_474334  +
mov [esp+0BCh+var_BC] 0C8h +
call malloc  +
mov edi [esp+0BCh+var_94] +
test eax eax +
mov [esp+0BCh+var_70] eax +
mov [edi] eax +
jnz loc_471FDF  +
test [esp+0BCh+var_90] 400h +
mov eax 0FFFFFFFFh +
cmovz eax [esp+0BCh+var_7C] +
mov ecx edi +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471850  +
jmp loc_471CE3  +
mov edi [esp+0BCh+var_84] +
mov edx 0Ah +
test edi edi +
cmovnz edx edi +
mov [esp+0BCh+var_84] edx +
jmp loc_47240F  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473EEA  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] ecx +
mov eax [esp+0BCh+var_70] +
test eax eax +
jnz loc_4726BD  +
jmp loc_471CC5  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_473E94  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_94] edi +
mov edx [esp+0BCh+var_94] +
test edx edx +
jz loc_474334  +
cmp esi 400h +
mov eax 400h +
cmovle eax esi +
mov [esp+0BCh+var_BC] eax +
mov [esp+0BCh+var_78] eax +
call malloc  +
mov edi eax +
mov eax [esp+0BCh+var_94] +
test edi edi +
mov [eax] edi +
jz loc_474407  +
mov eax [esp+0BCh+var_30] +
test eax eax +
jz loc_472D6A  +
mov edx [eax] +
cmp edx 1Fh +
jbe loc_472D71  +
call sub_4717B0  +
mov edx [eax] +
lea ecx [edx+1] +
mov [esp+0BCh+var_30] eax +
mov [eax] ecx +
mov ecx [esp+0BCh+var_94] +
mov [eax+edx*4+8] ecx +
jmp loc_472B8E  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473F16  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_60] ecx +
mov eax [esp+0BCh+var_60] +
test eax eax +
jnz loc_472AB1  +
jmp loc_471CC5  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_473EC0  +
mov eax [esp+0BCh+var_6C] +
mov ecx [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] ecx +
mov ebx [esp+0BCh+var_70] +
test ebx ebx +
jnz loc_4728B2  +
jmp loc_471CC5  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov edx eax +
xor eax eax +
call sub_471720  +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov ebx eax +
jmp loc_47238C  +
mov [esp+0BCh+var_84] 0Ah +
jmp loc_472357  +
mov [esp+0BCh+var_84] 10h +
jmp loc_472357  +
and [esp+0BCh+var_90] 0FFFFFFF1h +
or [esp+0BCh+var_90] 24h +
mov [esp+0BCh+var_84] 10h +
jmp loc_472357  +
mov [esp+0BCh+var_84] 8 +
jmp loc_472357  +
or [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_84] 0 +
jmp loc_472357  +
mov [esp+0BCh+var_BC] ebx +
call isxdigit  +
test eax eax +
jz loc_472454  +
mov edi dword ptr [esp+0BCh+var_AC] +
mov ecx [esp+0BCh+var_24] +
lea edx [esp+0BCh+var_28] +
mov eax edi +
call sub_471720  +
lea ecx [edi+1] +
lea edx [esp+0BCh+var_2C] +
mov dword ptr [esp+0BCh+var_AC] ecx +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
test esi esi +
mov ebx eax +
jz loc_472454  +
cmp eax 0FFFFFFFFh +
jnz loc_472430  +
jmp loc_472454  +
cmp [esp+0BCh+var_84] 0Ah +
jnz loc_472454  +
mov eax [esp+0BCh+var_68] +
test eax eax +
jz loc_472454  +
mov ecx [esp+0BCh+var_8C] +
test esi esi +
mov ebp 7FFFFFFFh +
cmovg ebp esi +
movzx edx byte ptr [ecx] +
movzx eax dl +
cmp eax ebx +
jnz loc_473C78  +
mov edi ecx +
add edi 1 +
cmp byte ptr [ecx+1] 0 +
jz loc_473165  +
mov [esp+0BCh+var_88] esi +
mov esi [esp+0BCh+var_98] +
jmp loc_472F65  +
movzx edx byte ptr [edi] +
sub ebp 1 +
movzx eax dl +
cmp eax ebx +
jnz loc_47316C  +
add edi 1 +
cmp byte ptr [edi] 0 +
jz loc_473161  +
test ebp ebp +
jz loc_473175  +
lea edx [esp+0BCh+var_2C] +
mov eax esi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_472F40  +
mov esi [esp+0BCh+var_88] +
movzx edx byte ptr [edi] +
test dl dl +
jnz loc_474355  +
mov edi dword ptr [esp+0BCh+var_AC] +
test esi esi +
cmovle ebp esi +
mov esi ebp +
sub edi 1 +
jmp loc_472E94  +
mov ebx [esp+0BCh+var_58] +
mov [esp+0BCh+var_88] edi +
mov edi eax +
mov eax [esp+0BCh+var_64] +
movzx eax byte ptr [eax] +
test al al +
jz loc_472FE5  +
mov esi [esp+0BCh+var_64] +
mov ecx [esp+0BCh+var_24] +
lea edx [esp+0BCh+var_28] +
mov eax ebx +
mov ebp ebx +
add esi 1 +
add ebx 1 +
call sub_471720  +
mov [esp+0BCh+var_24] eax +
movzx edx byte ptr [esi-1] +
mov [eax+ebp] dl +
cmp byte ptr [esi] 0 +
jnz loc_472FB5  +
mov edx dword ptr [esp+0BCh+var_AC] +
test edx edx +
jle loc_472FF5  +
mov eax [esp+0BCh+var_88] +
mov dword ptr [esp+0BCh+var_AC] eax +
mov esi 1 +
jmp loc_472269  +
mov ecx [esp+0BCh+var_64] +
movzx eax byte ptr [ecx] +
movzx edx al +
cmp edi edx +
jnz loc_4740D1  +
cmp byte ptr [ecx+1] 0 +
lea ebp [ecx+1] +
jz loc_472FAD  +
mov [esp+0BCh+var_58] ebx +
mov edi [esp+0BCh+var_88] +
mov ebx [esp+0BCh+var_98] +
jmp loc_473057  +
movzx edx byte ptr [ebp+0] +
sub edi 1 +
movzx eax dl +
cmp eax ecx +
jnz loc_4731F7  +
add ebp 1 +
cmp byte ptr [ebp+0] 0 +
jz loc_472F9C  +
test edi edi +
jz loc_473206  +
lea edx [esp+0BCh+var_2C] +
mov eax ebx +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ecx eax +
jnz loc_473030  +
mov ebx [esp+0BCh+var_58] +
movzx edx byte ptr [ebp+0] +
mov [esp+0BCh+var_88] edi +
test dl dl +
mov edi eax +
jz loc_472FA6  +
mov eax [esp+0BCh+var_54] +
test eax eax +
jz loc_472241  +
mov edx [esp+0BCh+var_64] +
sub ebp edx +
test ebp ebp +
jle loc_474149  +
mov ecx [esp+0BCh+var_8C] +
movzx eax byte ptr [edx] +
cmp [ecx] al +
jnz loc_472241  +
mov [esp+0BCh+var_58] edi +
mov eax ecx +
mov edi edx +
jmp loc_4730C1  +
movzx edx byte ptr [edi+edx] +
cmp [eax] dl +
jnz loc_4738F0  +
add eax 1 +
mov edx eax +
sub edx ecx +
cmp ebp edx +
jg loc_4730B5  +
mov edi [esp+0BCh+var_58] +
cmp ebp edx +
jnz loc_472245  +
movzx edx byte ptr [eax] +
movzx ecx dl +
cmp ecx edi +
jnz loc_472250  +
movzx edx byte ptr [eax+1] +
lea ebp [eax+1] +
test dl dl +
jz loc_472258  +
mov eax [esp+0BCh+var_88] +
test eax eax +
jz loc_472250  +
mov [esp+0BCh+var_58] ebx +
mov edi [esp+0BCh+var_98] +
mov ebx [esp+0BCh+var_88] +
jmp loc_473138  +
movzx edx byte ptr [ebp+0] +
sub ebx 1 +
movzx ecx dl +
cmp ecx eax +
jnz loc_4740ED  +
add ebp 1 +
movzx edx byte ptr [ebp+0] +
test dl dl +
jz loc_4740DE  +
test ebx ebx +
jz loc_474154  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
jnz loc_47310F  +
mov [esp+0BCh+var_88] ebx +
movzx edx byte ptr [ebp+0] +
mov edi 0FFFFFFFFh +
mov ebx [esp+0BCh+var_58] +
jmp loc_472250  +
mov esi [esp+0BCh+var_88] +
mov ebx eax +
jmp loc_472F89  +
mov esi [esp+0BCh+var_88] +
jmp loc_472F81  +
mov ebp [esp+0BCh+var_5C] +
cmp [esp+0BCh+var_8C] edi +
mov ebx eax +
jnb loc_472458  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_BC] 0 +
lea ebx [edi-1] +
call sub_471980  +
cmp ebx [esp+0BCh+var_8C] +
jbe loc_4731D4  +
mov esi ebx +
movzx eax byte ptr [esi] +
lea ecx [esp+0BCh+var_2C] +
sub esi 1 +
mov edx [esp+0BCh+var_98] +
mov [esp+0BCh+var_BC] 1 +
call sub_471980  +
cmp esi [esp+0BCh+var_8C] +
jnz loc_4731A7  +
mov eax [esp+0BCh+var_8C] +
sub eax edi +
lea ebx [ebx+eax+1] +
movzx ebx byte ptr [ebx] +
jmp loc_472458  +
cmp edi 2Bh +
jz loc_4722D0  +
cmp edi 2Dh +
jnz loc_4721FB  +
jmp loc_4722D0  +
mov eax ecx +
mov ebx [esp+0BCh+var_58] +
mov [esp+0BCh+var_88] edi +
jmp loc_473078  +
mov [esp+0BCh+var_88] edi +
mov ebx [esp+0BCh+var_58] +
mov edi eax +
jmp loc_473082  +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_88] +
test edi edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
mov eax [esp+0BCh+var_60] +
lea esi [eax+1] +
mov byte ptr [eax] 0 +
mov ecx [esp+0BCh+var_78] +
mov edx esi +
mov eax [esp+0BCh+var_94] +
call sub_4716F0  +
mov [esp+0BCh+var_60] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_471AB5  +
cmp ebx esi +
mov ecx esi +
mov edi [esp+0BCh+var_94] +
lea ebp [esi-1] +
cmovl ebp ebx +
add ebp ebx +
mov esi ebp +
mov ebp ecx +
lea ebx [ebx+1] +
mov [esp+0BCh+var_88] edx +
jmp loc_47328C  +
cmp esi ebx +
jbe loc_47391F  +
mov eax [edi] +
mov esi ebx +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_473280  +
mov edi ebp +
mov ebp esi +
mov edx [esp+0BCh+var_88] +
mov esi edi +
mov edi [esp+0BCh+var_94] +
mov ebx ebp +
mov [edi] eax +
mov edi [esp+0BCh+var_78] +
mov [esp+0BCh+var_78] ebp +
add edi eax +
jmp loc_472BC7  +
mov ebp [esp+0BCh+var_4C] +
mov [esp+0BCh+var_58] ebx +
mov ebx edi +
mov eax [esp+0BCh+var_58] +
test eax eax +
jz loc_471CC5  +
test byte ptr [esp+0BCh+var_90] 40h +
jz loc_4732E5  +
cmp [esp+0BCh+var_58] 2 +
jz loc_471CC5  +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edi [esp+0BCh+var_58] +
mov ecx [esp+0BCh+var_24] +
mov edx [esp+0BCh+var_88] +
mov eax edi +
call sub_471720  +
test byte ptr [esp+0BCh+var_90] 8 +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+edi] 0 +
lea eax [esp+0BCh+var_20] +
jnz loc_473B8F  +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 4 +
mov [esp+0BCh+var_BC] eax +
jz loc_473A83  +
call sub_475370  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_473832  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_471CBB  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_47423C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
fstp  [esp+0BCh+var_44] +
fld  [esp+0BCh+var_44] +
jz loc_47338A  +
fchs   +
fstp  qword ptr [eax] +
xor eax eax +
mov esi ebp +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
setz al  +
add [esp+0BCh+var_7C] eax +
jmp loc_471AB5  +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_80] ebx +
mov ebx [esp+0BCh+var_94] +
mov [esp+0BCh+var_68] esi +
lea edx [ecx+ecx] +
lea ebp [ecx+1] +
mov esi edx +
jmp loc_4733CF  +
cmp esi ebp +
jbe loc_4738BA  +
mov eax [ebx] +
mov esi ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_4733C3  +
mov ebp [esp+0BCh+var_78] +
mov edx esi +
mov ecx [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_80] +
mov esi [esp+0BCh+var_68] +
add ebp eax +
mov [ecx] eax +
mov [esp+0BCh+var_78] edx +
jmp loc_472AF9  +
mov ecx [esp+0BCh+var_24] +
mov eax ebx +
mov esi 1 +
lea edx [esp+0BCh+var_28] +
call sub_471720  +
movzx ecx byte ptr [esp+0BCh+var_5C] +
mov byte ptr [esp+0BCh+var_68] 1 +
mov [esp+0BCh+var_24] eax +
mov [eax+ebx] cl +
add ebx 1 +
jmp loc_472269  +
cmp eax 1 +
mov esi ebx +
jnz loc_4727D3  +
sub dword ptr [esp+0BCh+var_AC] 1 +
mov ebx dword ptr [esp+0BCh+var_AC] +
add [esp+0BCh+var_70] 2 +
test ebx ebx +
jle loc_47346C  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jnz loc_4726FA  +
test edi edi +
mov ebp [esp+0BCh+var_88] +
mov ebx esi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
mov eax [esp+0BCh+var_78] +
mov esi ebp +
mov edx [esp+0BCh+var_70] +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_4716F0  +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_471AB5  +
test ebx ebx +
jz loc_473637  +
mov eax [esp+0BCh+var_2C] +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_5C] eax +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov edi [esp+0BCh+var_90] +
mov [esp+0BCh+var_68] ebp +
mov ebp [esp+0BCh+var_98] +
mov [esp+0BCh+var_18] 0 +
mov [esp+0BCh+var_88] 0 +
and edi 80h +
jmp loc_473527  +
sub esi 1 +
jz loc_47393C  +
lea edx [esp+0BCh+var_2C] +
mov eax ebp +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47393C  +
mov eax [esp+0BCh+var_24] +
movzx ecx byte ptr [esp+0BCh+var_AC] +
cmp [eax+ebx] cl +
jz loc_473C10  +
test edi edi +
jnz loc_473505  +
lea eax [esp+0BCh+var_18] +
mov [esp+0BCh+var_B0] eax +
lea eax [esp+0BCh+var_11] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_70] +
mov [esp+0BCh+var_B4] 1 +
mov byte ptr [esp+0BCh+var_11] bl +
mov [esp+0BCh+var_BC] eax +
call sub_474E80  +
cmp eax 0FFFFFFFEh +
jz loc_47362D  +
add [esp+0BCh+var_70] 2 +
test [esp+0BCh+var_90] 600h +
jz loc_473620  +
mov eax [esp+0BCh+var_94] +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_88] 0 +
mov eax [eax] +
add ecx ecx +
mov [esp+0BCh+var_80] ecx +
lea edx [eax+ecx] +
cmp [esp+0BCh+var_70] edx +
jnz loc_473505  +
mov edx ecx +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_88] ebx +
mov ebx edx +
mov [esp+0BCh+var_70] esi +
add ecx 1 +
mov esi ecx +
jmp loc_4735E0  +
cmp ebx esi +
jbe loc_473FD6  +
mov eax [esp+0BCh+var_94] +
mov ebx esi +
mov eax [eax] +
lea ecx [ebx+ebx] +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_4735D0  +
mov ecx [esp+0BCh+var_94] +
mov edx ebx +
mov esi [esp+0BCh+var_70] +
mov ebx [esp+0BCh+var_88] +
mov [esp+0BCh+var_78] edx +
mov [ecx] eax +
add eax [esp+0BCh+var_80] +
mov [esp+0BCh+var_88] 0 +
mov [esp+0BCh+var_70] eax +
jmp loc_473505  +
mov [esp+0BCh+var_88] 0 +
jmp loc_473505  +
add [esp+0BCh+var_88] 1 +
jmp loc_47350E  +
mov eax [esp+0BCh+var_2C] +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_68] eax +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471BA2  +
mov eax [esp+0BCh+var_90] +
mov [esp+0BCh+var_80] ebp +
mov ebp [esp+0BCh+var_60] +
mov edi eax +
and eax 600h +
and edi 80h +
mov [esp+0BCh+var_88] eax +
jmp loc_4736B8  +
mov eax [esp+0BCh+var_94] +
mov ebp edx +
mov ecx [esp+0BCh+var_78] +
mov eax [eax] +
add ecx eax +
cmp edx ecx +
jz loc_4739E1  +
sub esi 1 +
test esi esi +
jle loc_4739AE  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4739AE  +
mov eax [esp+0BCh+var_24] +
movzx ecx byte ptr [esp+0BCh+var_AC] +
cmp [eax+ebx] cl +
jz loc_473C32  +
test edi edi +
jnz loc_473692  +
mov ecx [esp+0BCh+var_88] +
lea edx [ebp+1] +
mov [ebp+0] bl +
test ecx ecx +
jnz loc_47367C  +
mov ebp edx +
jmp loc_473692  +
mov edx [esp+0BCh+var_24] +
mov eax 100h +
mov [esp+0BCh+var_28] 100h +
test edx edx +
jz loc_47370D  +
mov [esp+0BCh+var_BC] edx +
call free  +
mov eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_BC] eax +
call malloc  +
mov [esp+0BCh+var_24] eax +
jmp loc_47204D  +
mov eax ebx +
mov ebx edx +
mov [esp+0BCh+var_60] ebp +
mov ecx eax +
mov ebp [esp+0BCh+var_90] +
mov edx [esp+0BCh+var_60] +
mov eax [esp+0BCh+var_94] +
mov esi ebp +
call sub_4716F0  +
add [esp+0BCh+var_7C] 1 +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [esp+0BCh+var_94] 0 +
jmp loc_471AB5  +
cmp eax 1 +
jnz loc_4727D3  +
add esi 2 +
test edi edi +
jnz loc_47378A  +
test [esp+0BCh+var_90] 600h +
jz loc_47378A  +
mov eax [esp+0BCh+var_94] +
mov ecx [eax] +
mov eax [esp+0BCh+var_78] +
lea edx [eax+eax] +
lea eax [ecx+edx] +
cmp esi eax +
jz loc_474292  +
mov ecx [esp+0BCh+var_88] +
test ecx ecx +
jle loc_473799  +
sub [esp+0BCh+var_88] 1 +
jz loc_4737B4  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_4728E4  +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_70] esi +
test edi edi +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
mov eax [esp+0BCh+var_70] +
xor edx edx +
lea esi [eax+2] +
mov [eax] dx +
mov eax [esp+0BCh+var_78] +
mov edx esi +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_4716F0  +
mov [esp+0BCh+var_70] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov [esp+0BCh+var_94] 0 +
jmp loc_471AB5  +
mov [esp+0BCh+var_B4] eax +
lea eax [esp+0BCh+var_20] +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
test byte ptr [esp+0BCh+var_90] 10h +
mov [esp+0BCh+var_BC] eax +
jz loc_473BEA  +
call strtol  +
mov esi eax +
jmp loc_47250A  +
fstp  st +
jmp loc_47383C  +
fstp  st +
jmp loc_47383C  +
fstp  st +
mov edx [esp+0BCh+var_24] +
mov eax [esp+0BCh+var_20] +
cmp edx eax +
jnz loc_47338C  +
jmp loc_471CC5  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_471CE3  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 1 +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 0Ch +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
lea eax [ebp+2] +
mov [esp+0BCh+var_68] eax +
movzx eax byte ptr [ebp+2] +
or [esp+0BCh+var_90] 404h +
mov byte ptr [esp+0BCh+var_88] al +
jmp loc_471E90  +
test [esp+0BCh+var_90] 400h +
jnz loc_473BF6  +
mov eax [esp+0BCh+var_94] +
mov edi [esp+0BCh+var_78] +
mov eax [eax] +
mov byte ptr [eax+edi-1] 0 +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_94] 0 +
add eax 1 +
jmp loc_471BAB  +
mov edi [esp+0BCh+var_58] +
jmp loc_472245  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_88] +
call sub_471980  +
jmp loc_47321D  +
lea eax [esp+0BCh+var_30] +
lea edx [esp+0BCh+var_24] +
call sub_4717D0  +
mov eax 0FFFFFFFFh +
jmp loc_471CE3  +
mov ebp [esp+0BCh+var_68] +
mov eax [esp+0BCh+var_88] +
test eax eax +
jnz loc_4727D3  +
mov eax [esp+0BCh+var_5C] +
cmp eax [esp+0BCh+var_2C] +
jz loc_471CC5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jnz loc_471AE8  +
mov eax [esp+0BCh+var_70] +
xor edi edi +
lea esi [eax+2] +
mov [eax] di +
mov eax [esp+0BCh+var_78] +
mov edx esi +
lea ecx [eax+eax] +
mov eax [esp+0BCh+var_94] +
call sub_4716F0  +
mov eax [esp+0BCh+var_88] +
mov [esp+0BCh+var_70] esi +
mov esi ebp +
add [esp+0BCh+var_7C] 1 +
mov dword ptr [esp+0BCh+var_AC] eax +
mov [esp+0BCh+var_94] 0 +
jmp loc_471AB5  +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_68] +
cmp eax [esp+0BCh+var_2C] +
jz loc_471CC5  +
test byte ptr [esp+0BCh+var_90] 80h +
mov dword ptr [esp+0BCh+var_AC] 0 +
jz loc_47322D  +
mov esi ebp +
jmp loc_471AB5  +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_60] ebx +
mov ebx [esp+0BCh+var_94] +
mov [esp+0BCh+var_5C] esi +
lea edx [ecx+ecx] +
lea ebp [ecx+1] +
mov esi edx +
jmp loc_473A0C  +
cmp esi ebp +
jbe loc_4738BA  +
mov eax [ebx] +
mov esi ebp +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] eax +
call realloc  +
test eax eax +
jz loc_473A00  +
mov ebp [esp+0BCh+var_78] +
mov edx esi +
mov ecx [esp+0BCh+var_94] +
mov ebx [esp+0BCh+var_60] +
mov esi [esp+0BCh+var_5C] +
add ebp eax +
mov [ecx] eax +
mov [esp+0BCh+var_78] edx +
jmp loc_473692  +
test byte ptr [esp+0BCh+var_90] 4 +
jnz loc_473D5E  +
test byte ptr [esp+0BCh+var_90] 2 +
jz loc_474010  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4741F6  +
mov eax [esp+0BCh+var_6C] +
lea edx [eax+4] +
mov eax [eax] +
mov ecx [esp+0BCh+var_2C] +
mov esi ebp +
mov [esp+0BCh+var_6C] edx +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] cx +
jmp loc_471AB5  +
call sub_4754A0  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_473836  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_471CBF  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_47420C  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
jz loc_473AC9  +
fchs   +
fstp  dword ptr [eax] +
jmp loc_47338C  +
mov edi dword ptr [esp+0BCh+var_AC] +
lea eax [esp+0BCh+var_28] +
mov ecx [esp+0BCh+var_24] +
mov edx eax +
mov eax edi +
call sub_471720  +
mov ecx edi +
add edi 1 +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax+ecx] 30h +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
mov dword ptr [esp+0BCh+var_AC] edi +
mov ebx eax +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
cmp eax 78h +
jnz loc_4723F8  +
test [esp+0BCh+var_84] 0FFFFFFEFh +
jnz loc_47240A  +
xor eax eax +
test esi esi +
setnle al  +
sub esi eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
mov [esp+0BCh+var_84] 10h +
mov ebx eax +
jmp loc_47240A  +
test byte ptr [esp+0BCh+var_90] 4 +
jnz loc_473C58  +
test byte ptr [esp+0BCh+var_90] 2 +
jz loc_4740A4  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4743F5  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov [eax] si +
jmp loc_47255B  +
mov [esp+0BCh+var_B8] eax +
mov eax [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] eax +
call sub_475370  +
test byte ptr [esp+0BCh+var_90] 80h +
jnz loc_47383A  +
mov eax [esp+0BCh+var_24] +
cmp [esp+0BCh+var_20] eax +
jz loc_471CC3  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_474308  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
cmp [esp+0BCh+var_4D] 0 +
jz loc_473BE3  +
fchs   +
fstp  tbyte ptr [eax] +
jmp loc_47338C  +
call strtoul  +
mov esi eax +
jmp loc_47250A  +
mov eax 0FFFFFFFFh +
jmp loc_471BAB  +
call sub_475530  +
mov esi eax +
mov [esp+0BCh+var_48] edx +
jmp loc_47250A  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov ebp [esp+0BCh+var_68] +
call sub_471980  +
jmp loc_473940  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov [esp+0BCh+var_60] ebp +
mov ebp [esp+0BCh+var_80] +
call sub_471980  +
jmp loc_4739B6  +
mov ecx [esp+0BCh+var_80] +
test ecx ecx +
jnz loc_47405E  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov [eax] esi +
jmp loc_47255B  +
mov edi [esp+0BCh+var_8C] +
jmp loc_472F81  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax edi +
mov [esp+0BCh+var_BC] 0 +
mov ebp [esp+0BCh+var_4C] +
mov [esp+0BCh+var_58] ebx +
mov ebx edi +
call sub_471980  +
jmp loc_4732C7  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471720  +
test esi esi +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
jz loc_471CC5  +
mov eax (offset aNan_0+1) +
mov edi 1 +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov ebp eax +
jmp loc_473CF1  +
test esi esi +
jz loc_471CC5  +
mov edi edx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471CC5  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [ebp+0] +
cmp eax edx +
jnz loc_471CC5  +
mov edx [esp+0BCh+var_88] +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
add ebp 1 +
sub esi eax +
mov eax edi +
call sub_471720  +
lea edx [edi+1] +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
cmp byte ptr [ebp+0] 0 +
jnz loc_473CE7  +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_58] edx +
jmp loc_4732F0  +
mov esi [esp+0BCh+var_80] +
test esi esi +
jnz loc_4742F6  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edx [esp+0BCh+var_2C] +
mov esi ebp +
mov [eax] edx +
mov dword ptr [esp+0BCh+var_AC] 0 +
jmp loc_471AB5  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471720  +
test esi esi +
mov [esp+0BCh+var_24] eax +
mov [eax] bl +
jz loc_471CC5  +
mov eax 1 +
mov edi (offset aInf+1) +
mov dword ptr [esp+0BCh+var_AC] ebp +
mov ebp eax +
jmp loc_473DDA  +
test esi esi +
jz loc_471CC5  +
mov ebp edx +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_471CC5  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [edi] +
cmp eax edx +
jnz loc_471CC5  +
mov edx [esp+0BCh+var_88] +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
add edi 1 +
sub esi eax +
mov eax ebp +
call sub_471720  +
lea edx [ebp+1] +
mov [esp+0BCh+var_24] eax +
mov [eax+ebp] bl +
cmp byte ptr [edi] 0 +
jnz loc_473DD0  +
test esi esi +
mov edi ebp +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_58] edx +
jz loc_4732F0  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4732F0  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
cmp eax 69h +
jz loc_47441E  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 0 +
call sub_471980  +
jmp loc_4732F0  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_472D22  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_472656  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_70] eax +
jmp loc_472DD5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov edi eax +
jmp loc_472B86  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_70] eax +
jmp loc_472CF4  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_472A52  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_60] eax +
jmp loc_472DA7  +
mov eax [esp+0BCh+var_80] +
test eax eax +
jnz loc_4742E0  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_60] edi +
mov eax [esp+0BCh+var_60] +
test eax eax +
jnz loc_472014  +
jmp loc_471CC5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_472853  +
mov edx [esp+0BCh+var_80] +
test edx edx +
jnz loc_47427C  +
mov eax [esp+0BCh+var_6C] +
mov edi [eax] +
add eax 4 +
mov [esp+0BCh+var_6C] eax +
mov [esp+0BCh+var_70] edi +
mov eax [esp+0BCh+var_70] +
test eax eax +
jnz loc_472014  +
jmp loc_471CC5  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
sub edx 2 +
jmp loc_472068  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_471F53  +
mov byte ptr [eax] 0 +
add edi 1 +
mov dx 0FFh +
jmp loc_47205C  +
test [esp+0BCh+var_90] 400h +
jnz loc_473BF6  +
mov eax [esp+0BCh+var_94] +
xor edx edx +
mov edi [esp+0BCh+var_78] +
mov eax [eax] +
mov [eax+edi*2-2] dx +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_94] 0 +
add eax 1 +
jmp loc_471BAB  +
test byte ptr [esp+0BCh+var_90] 1 +
jz loc_473D5E  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_474322  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov edx [esp+0BCh+var_2C] +
mov esi ebp +
mov dword ptr [esp+0BCh+var_AC] 0 +
mov [eax] dl +
jmp loc_471AB5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_472552  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [eax] esi +
jmp loc_47255B  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov [esp+0BCh+var_88] eax +
mov edx eax +
xor eax eax +
call sub_471720  +
mov dword ptr [esp+0BCh+var_AC] 1 +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax] 30h +
jmp loc_4724A9  +
test byte ptr [esp+0BCh+var_90] 1 +
jz loc_473C58  +
mov edi [esp+0BCh+var_80] +
test edi edi +
jnz loc_474372  +
mov edi [esp+0BCh+var_6C] +
mov eax [edi] +
add edi 4 +
mov [esp+0BCh+var_6C] edi +
mov ecx esi +
mov [eax] cl +
jmp loc_47255B  +
mov edx eax +
mov ebp [esp+0BCh+var_64] +
mov eax edi +
jmp loc_473078  +
mov [esp+0BCh+var_88] ebx +
mov edi ecx +
mov ebx [esp+0BCh+var_58] +
jmp loc_472258  +
mov [esp+0BCh+var_88] ebx +
mov edi eax +
mov ebx [esp+0BCh+var_58] +
jmp loc_472250  +
mov ecx [esp+0BCh+var_24] +
lea eax [esp+0BCh+var_28] +
mov edx eax +
mov [esp+0BCh+var_88] eax +
xor eax eax +
call sub_471720  +
lea edx [esp+0BCh+var_2C] +
mov [esp+0BCh+var_24] eax +
mov byte ptr [eax] 30h +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
test esi esi +
mov ebx eax +
jle loc_474163  +
sub esi 1 +
jnz loc_474163  +
mov [esp+0BCh+var_58] 1 +
jmp loc_4721BC  +
mov eax [esp+0BCh+var_8C] +
xor edx edx +
jmp loc_4730D0  +
mov [esp+0BCh+var_88] ebx +
mov edi ecx +
mov ebx [esp+0BCh+var_58] +
jmp loc_472250  +
mov [esp+0BCh+var_BC] ebx +
call tolower  +
mov byte ptr [esp+0BCh+var_5C] 65h +
mov [esp+0BCh+var_58] 1 +
cmp eax 78h +
jnz loc_4721BC  +
mov ecx [esp+0BCh+var_24] +
mov al 1 +
mov edx [esp+0BCh+var_88] +
call sub_471720  +
lea edx [esp+0BCh+var_2C] +
and [esp+0BCh+var_90] 0FFFFFEFFh +
or [esp+0BCh+var_90] 40h +
mov [esp+0BCh+var_24] eax +
mov [eax+1] bl +
mov eax [esp+0BCh+var_98] +
call sub_4718E0  +
test esi esi +
mov ebx eax +
jle loc_474360  +
sub esi 1 +
mov byte ptr [esp+0BCh+var_5C] 70h +
mov [esp+0BCh+var_58] 2 +
jmp loc_4721BC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_471FB5  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov edx [esp+0BCh+var_6C] +
jmp loc_473A66  +
mov edx [esp+0BCh+var_80] +
fstp  dword ptr [esp+0BCh+var_AC] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
fld  dword ptr [esp+0BCh+var_AC] +
jmp loc_473AC0  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_94] eax +
jmp loc_472C64  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
fstp  [esp+0BCh+var_AC] +
call sub_471790  +
fld  [esp+0BCh+var_AC] +
jmp loc_473379  +
mov edx [esp+0BCh+var_98] +
lea ecx [esp+0BCh+var_2C] +
mov eax ebx +
mov [esp+0BCh+var_BC] 1 +
mov ebp dword ptr [esp+0BCh+var_AC] +
mov [esp+0BCh+var_70] esi +
call sub_471980  +
jmp loc_4737BC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_70] eax +
jmp loc_473F93  +
mov eax [esp+0BCh+var_78] +
mov ebp edx +
lea esi [eax+1] +
jmp loc_4742AD  +
cmp ebp esi +
jbe loc_473FD6  +
mov eax [esp+0BCh+var_94] +
mov ebp esi +
mov ecx [eax] +
lea eax [ebp+ebp+0] +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] ecx +
mov [esp+0BCh+var_80] edx +
call realloc  +
mov edx [esp+0BCh+var_80] +
test eax eax +
jz loc_47429D  +
mov ecx [esp+0BCh+var_94] +
lea esi [eax+edx] +
mov [esp+0BCh+var_78] ebp +
mov [ecx] eax +
jmp loc_47378A  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
mov [esp+0BCh+var_60] eax +
jmp loc_473F49  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_473D77  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
fstp  [esp+0BCh+var_AC] +
call sub_471790  +
fld  [esp+0BCh+var_AC] +
jmp loc_473BDA  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_474034  +
lea eax [esp+0BCh+var_24] +
xor ecx ecx +
mov [esp+0BCh+var_BC] eax +
mov eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_30] +
call sub_471850  +
jmp loc_471CE3  +
mov ebp [esp+0BCh+var_5C] +
mov eax ebx +
jmp loc_473179  +
mov byte ptr [esp+0BCh+var_5C] 70h +
mov [esp+0BCh+var_58] 2 +
jmp loc_4721BC  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_4740C8  +
test [esp+0BCh+var_90] 400h +
mov eax 0FFFFFFFFh +
cmovz eax [esp+0BCh+var_7C] +
lea edx [esp+0BCh+var_24] +
mov [esp+0BCh+var_BC] edx +
lea edx [esp+0BCh+var_30] +
call sub_471850  +
jmp loc_471CE3  +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_47296D  +
mov eax ebx +
mov edi [esp+0BCh+var_98] +
jmp loc_4743E7  +
lea edx [esp+0BCh+var_2C] +
mov eax edi +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
jz loc_4743EE  +
sub esi 1 +
test esi esi +
jg loc_4743D4  +
mov ebx eax +
jmp loc_471BD8  +
mov edx [esp+0BCh+var_80] +
mov eax [esp+0BCh+var_74] +
call sub_471790  +
jmp loc_473B87  +
mov eax 0FFFFFFFFh +
test [esp+0BCh+var_90] 400h +
cmovz eax [esp+0BCh+var_7C] +
jmp loc_471BAB  +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
mov edx [esp+0BCh+var_88] +
add edi 2 +
sub esi eax +
mov eax [esp+0BCh+var_58] +
call sub_471720  +
test esi esi +
mov dword ptr [esp+0BCh+var_AC] edi +
mov edi [esp+0BCh+var_58] +
mov [esp+0BCh+var_24] eax +
mov [eax+edi] bl +
jz loc_471CC5  +
mov edi offset aNity +
jmp loc_4744C1  +
mov [esp+0BCh+var_BC] eax +
call tolower  +
movsx edx byte ptr [edi] +
cmp eax edx +
jnz loc_471CC5  +
xor eax eax +
test esi esi +
mov ecx [esp+0BCh+var_24] +
setnle al  +
mov edx [esp+0BCh+var_88] +
add edi 1 +
sub esi eax +
mov eax dword ptr [esp+0BCh+var_AC] +
call sub_471720  +
mov ecx dword ptr [esp+0BCh+var_AC] +
lea edx [ecx+1] +
mov [esp+0BCh+var_58] edx +
mov [esp+0BCh+var_24] eax +
mov [eax+ecx] bl +
cmp byte ptr [edi] 0 +
jz loc_4732F0  +
test esi esi +
jz loc_471CC5  +
mov eax [esp+0BCh+var_58] +
mov dword ptr [esp+0BCh+var_AC] eax +
mov eax [esp+0BCh+var_98] +
lea edx [esp+0BCh+var_2C] +
call sub_4718E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_474460  +
jmp loc_471CC5  +
***
push edi  +
mov eax 1014h +
push ebx  +
call sub_470CF0  +
mov ecx 404h +
sub esp eax +
xor eax eax +
mov edi esp +
mov edx [esp+1024h] +
stos   +
mov eax [esp+1020h] +
mov ecx [esp+1028h] +
mov [esp] eax +
mov eax esp +
call sub_4719E0  +
add esp 1014h +
pop ebx  +
pop edi  +
retn   +
***
jmp sub_474530  +
***
push ebx  +
call sub_470CF0  +
mov ecx 404h +
sub esp eax +
xor eax eax +
mov edi esp +
mov edx [esp+4+arg_1018] +
stos   +
mov eax [esp+4+arg_1014] +
mov ecx [esp+4+arg_101C] +
mov [esp+4+arg_FF8] 1 +
mov [esp+4+var_4] eax +
mov eax esp +
call sub_4719E0  +
add esp 1014h +
pop ebx  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_28] eax +
call sub_476E10  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] 6000h +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+2Ch+var_28] eax +
call sub_476E10  +
add esp 2Ch +
retn   +
***
mov eax [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_28] 4000h +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_1C] eax +
call sub_476E10  +
mov byte ptr [ebx+eax] 0 +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov edx [esp+24h+arg_8] +
mov ecx [esp+24h+arg_C] +
test eax eax +
jz loc_474687  +
lea esi [eax-1] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] ecx +
mov [esp+24h+var_18] edx +
mov [esp+24h+var_24] 0 +
call sub_476E10  +
cmp eax esi +
cmovle esi eax +
mov byte ptr [ebx+esi] 0 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_14] ecx +
mov [esp+24h+var_18] edx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_24] 0 +
call sub_476E10  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_4746F5  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_474770  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_474763  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_470D20  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_470E30  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_4746F5  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_4746B0  +
test eax eax +
mov ecx eax +
jnz loc_4747E0  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_4747D1  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_4746B0  +
test eax eax +
mov ecx eax +
jnz loc_474840  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_474831  +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4749FE  +
cmp byte ptr [ebx] 0 +
jz loc_4749C8  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_4749E0  +
test al 10h +
jz loc_4749C8  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4748B4  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_4749EF  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_474943  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_474943  +
cmp al 5Ch +
jz loc_474943  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_474945  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_4749C0  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_4749C0  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_4749C0  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474B12  +
mov eax [ebx+228h] +
test eax eax +
js loc_474AFD  +
jz loc_474AA0  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_474AD0  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_474AFD  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_474AF3  +
mov dword ptr [ebx+228h] 1 +
jmp loc_474A69  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_474B05  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_474ADB  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_474A93  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474B6F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_474B5F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_474B69  +
***
jmp sub_474B90  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474BD3  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_474BBA  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_474BCE  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474C02  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_474BFD  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474CAD  +
cmp esi 0FFFFFFFFh +
jl loc_474CA0  +
jz loc_474C70  +
mov [esp] ebx +
call sub_474B90  +
nop   +
lea esi [esi+0] +
jmp loc_474C5E  +
mov [esp] ebx +
call sub_474A10  +
test eax eax +
jz loc_474C97  +
cmp esi [ebx+228h] +
jg loc_474C52  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_474C83  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_474C97  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_474C97  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_474CF8  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_474CEB  +
jmp loc_474CF8  +
cmp byte ptr [edx] 0 +
jz loc_474CF6  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_474CE6  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
test ebx ebx +
jz loc_474E44  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_474E50  +
mov eax [esi] +
mov dword ptr [esi] 0 +
mov [ebp+var_C] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_474DD0  +
cmp [ebp+arg_14] 1 +
jbe loc_474DB0  +
cmp byte ptr [ebp+var_C] 0 +
jnz loc_474DE1  +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] eax +
call ds:IsDBCSLeadByteEx  +
sub esp 8 +
test eax eax +
jz loc_474DB0  +
cmp [ebp+arg_8] 1 +
jbe loc_474E6C  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_474E57  +
lea esp [ebp-8] +
mov eax 2 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_474E07  +
movzx eax byte ptr [ebx] +
mov edx [ebp+arg_0] +
mov [edx] ax +
lea esp [ebp-8] +
mov eax 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
xor eax eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [ebp+var_C+1] al +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_28] eax +
lea eax [ebp+var_C] +
mov [esp+38h+var_30] eax +
jmp loc_474D83  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_474E57  +
mov eax 1 +
jmp loc_474DDA  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_474DDA  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
jmp loc_474DDA  +
movzx eax byte ptr [ebx] +
mov [esi] al +
mov eax 0FFFFFFFEh +
jmp loc_474DDA  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [esp+38h+arg_0] +
mov word ptr [esp+38h+var_A] ax +
lea eax [esp+38h+var_A] +
mov esi [esp+38h+arg_C] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
mov edi [eax] +
call sub_47D340  +
test esi esi +
mov edx offset unk_4D99B8 +
cmovnz edx esi +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_24] edi +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_34] eax +
call sub_474D00  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov eax offset unk_4D99B4 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+5Ch] +
mov esi [esp+54h] +
mov ebp [esp+50h] +
mov edi [esp+58h] +
test edx edx +
cmovnz eax [esp+5Ch] +
mov [esp+5Ch] eax +
call sub_47D340  +
test esi esi +
mov [esp+18h] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+1Ch] eax +
jz loc_475000  +
mov ecx [esi] +
test ecx ecx +
jz loc_475000  +
test ebp ebp +
jz loc_474FA3  +
test edi edi +
jz loc_475000  +
mov [esp+54h] esi +
xor ebx ebx +
mov esi ebp +
mov ebp [esp+54h] +
jmp loc_474F58  +
mov ecx [ebp+0] +
add ebx eax +
add esi 2 +
add ecx eax +
cmp edi ebx +
mov [ebp+0] ecx +
jbe loc_474F88  +
mov eax [esp+1Ch] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+14h] eax +
mov eax [esp+18h] +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp+0Ch] eax +
mov eax edi +
sub eax ebx +
mov [esp+8] eax +
call sub_474D00  +
test eax eax +
jg loc_474F47  +
test eax eax +
jnz loc_474FF6  +
cmp ebx edi +
nop   +
jnb loc_474FF6  +
mov dword ptr [ebp+0] 0 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor ebx ebx +
test edi edi +
mov [esp+2Eh] ax +
jz loc_474FF6  +
mov [esp+58h] edi +
lea ebp [esp+2Eh] +
mov edi esi +
mov esi [esp+1Ch] +
jmp loc_474FCE  +
mov ecx [edi] +
add ebx eax +
add ecx eax +
cmp [esp+58h] ebx +
mov [edi] ecx +
jbe loc_474FF6  +
mov eax [esp+18h] +
mov [esp+14h] esi +
mov [esp+8] esi +
mov [esp+4] ecx +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_474D00  +
test eax eax +
jg loc_474FC0  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 34h +
mov word ptr [esp+38h+var_A] ax +
mov eax ds:__mb_cur_max +
mov ebx [esp+38h+arg_8] +
mov esi [eax] +
call sub_47D340  +
test ebx ebx +
mov edx offset unk_4D99B0 +
cmovnz edx ebx +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_24] esi +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_34] eax +
lea eax [esp+38h+var_A] +
mov [esp+38h+var_38] eax +
call sub_474D00  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_8] +
test esi esi +
jz loc_47508D  +
mov eax [esp+3Ch+arg_4] +
mov [eax] edi +
cmp ebx 1 +
jz loc_475099  +
cmp ebx 24h +
mov esi ebx +
jbe loc_4750B3  +
call _errno  +
xor edx edx +
mov dword ptr [eax] 21h +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edi 1 +
movzx ebx byte ptr [edi] +
movsx eax bl +
mov [esp+0] eax +
call isspace  +
test eax eax +
jnz loc_4750B0  +
mov [esp-10h+arg_54] esi +
mov esi ebx +
mov edx edi +
mov eax esi +
mov ebx [esp-10h+arg_54] +
cmp al 2Dh +
setz al  +
movzx eax al +
mov [esp-10h+arg_28] eax +
jz loc_4751F8  +
mov eax esi +
cmp al 2Bh +
jz loc_4751F8  +
test ebx ebx +
jnz loc_475207  +
cmp al 30h +
mov bl 0Ah +
jz loc_475310  +
movsx ebp al +
lea edx [ebp-30h] +
cmp edx 9 +
ja loc_4752A8  +
movsx ebp al +
sub ebp 30h +
cmp ebx ebp +
jle loc_475300  +
mov eax ebp +
shr eax 1Fh +
test al al +
jnz loc_475300  +
mov [esp-10h+arg_14] ebp +
mov eax ebx +
add edi 1 +
sar ebp 1Fh +
mov [esp-10h+arg_18] ebp +
sar eax 1Fh +
xor ebp ebp +
mov [esp-10h+arg_1C] ebx +
mov [esp-10h+arg_20] eax +
mov [esp-10h+arg_24] ebp +
jmp loc_4751D5  +
mov esi eax +
cmp ebx esi +
jle loc_47524C  +
test esi esi +
js loc_47524C  +
mov eax [esp-10h+arg_1C] +
mov edx [esp-10h+arg_20] +
mov dword ptr [esp+0] 0FFFFFFFFh +
mov [esp-10h+arg_0] 7FFFFFFFh +
mov [esp-10h+arg_4] eax +
mov [esp-10h+arg_8] edx +
call sub_47D450  +
add eax 2 +
adc edx 0 +
cmp [esp-10h+arg_18] edx +
ja loc_475231  +
jb loc_4751A3  +
cmp [esp-10h+arg_14] eax +
ja loc_475231  +
mov edx [esp-10h+arg_18] +
mov eax [esp-10h+arg_14] +
mov ebp [esp-10h+arg_20] +
imul ebp [esp-10h+arg_14] +
mov ecx edx +
imul ecx ebx +
mul  ebx +
mov [esp-10h+arg_14] esi +
sar esi 1Fh +
mov [esp-10h+arg_18] esi +
add ecx ebp +
add edx ecx +
add [esp-10h+arg_14] eax +
adc [esp-10h+arg_18] edx +
add edi 1 +
movsx esi byte ptr [edi] +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_475151  +
mov [esp+0] esi +
call isupper  +
test eax eax +
jz loc_475240  +
sub esi 37h +
jmp loc_475153  +
add edi 1 +
test ebx ebx +
movzx eax byte ptr [edx+1] +
jz loc_4750F7  +
cmp ebx 10h +
jnz loc_475101  +
cmp al 30h +
jnz loc_475101  +
movzx eax byte ptr [edi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jz loc_475322  +
mov eax 30h +
jmp loc_475110  +
mov [esp-10h+arg_24] 1 +
jmp loc_4751D2  +
mov [esp+0] esi +
call islower  +
test eax eax +
jnz loc_4752A0  +
mov ecx [esp-10h+arg_50] +
mov ebp [esp-10h+arg_24] +
test ecx ecx +
jz loc_47525E  +
mov eax [esp-10h+arg_50] +
mov [eax] edi +
mov edx [esp-10h+arg_28] +
test edx edx +
jz loc_4752D2  +
cmp [esp-10h+arg_18] 80000000h +
ja loc_475333  +
jb loc_475281  +
cmp [esp-10h+arg_14] 0 +
ja loc_475333  +
test ebp ebp +
jnz loc_475333  +
mov eax [esp-10h+arg_14] +
mov edx [esp-10h+arg_18] +
neg eax  +
adc edx 0 +
add esp 3Ch +
pop ebx  +
neg edx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub esi 57h +
jmp loc_475153  +
mov [esp+0] ebp +
call isupper  +
test eax eax +
jnz loc_4752F0  +
mov [esp+0] ebp +
call islower  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_4750A8  +
sub ebp 57h +
jmp loc_475116  +
mov eax [esp-10h+arg_18] +
test eax eax +
js loc_47534A  +
test ebp ebp +
jnz loc_47534A  +
mov eax [esp-10h+arg_14] +
mov edx [esp-10h+arg_18] +
jmp loc_4750A8  +
sub ebp 37h +
cmp ebx ebp +
jg loc_47511E  +
nop   +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [edi+1] +
mov bl 8 +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_475101  +
movzx eax byte ptr [edi+2] +
mov ebx 10h +
add edi 2 +
jmp loc_475101  +
call _errno  +
mov edx 80000000h +
mov dword ptr [eax] 22h +
xor eax eax +
jmp loc_4750A8  +
call _errno  +
mov edx 7FFFFFFFh +
mov dword ptr [eax] 22h +
mov eax 0FFFFFFFFh +
jmp loc_4750A8  +
***
sub esp 4Ch +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] eax +
lea eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_4] +
fldz   +
mov [esp+4Ch+var_44] offset unk_483718 +
fstp  [esp+4Ch+var_18] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_477C60  +
mov edx eax +
and edx 7 +
cmp edx 6 +
ja loc_4753E8  +
jmp ds:off_4D5080[edx*4]  +
movzx ecx word ptr [esp+4Ch+var_24] +
lea edx [ecx+403Eh] +
mov word ptr [esp+4Ch+var_18+8] dx +
mov edx [esp+4Ch+var_20] +
mov word ptr [esp+4Ch+var_18] dx +
shr edx 10h +
mov word ptr [esp+4Ch+var_18+2] dx +
mov edx [esp+4Ch+var_1C] +
mov word ptr [esp+4Ch+var_18+4] dx +
shr edx 10h +
mov word ptr [esp+4Ch+var_18+6] dx +
test al 8 +
jz loc_4753F3  +
or word ptr [esp+4Ch+var_18+8] 8000h +
fld  [esp+4Ch+var_18] +
add esp 4Ch +
retn   +
mov ecx 7FFFh +
mov edx 0FFFF8000h +
mov word ptr [esp+4Ch+var_18+8] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+6] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+2] dx +
mov word ptr [esp+4Ch+var_18+4] cx +
jmp loc_4753E8  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+2] cx +
mov ecx 0FFFFC000h +
mov word ptr [esp+4Ch+var_18+4] dx +
mov edx 7FFFh +
mov word ptr [esp+4Ch+var_18+6] cx +
mov word ptr [esp+4Ch+var_18+8] dx +
jmp loc_4753E8  +
xor ecx ecx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+8] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+6] dx +
xor edx edx +
mov word ptr [esp+4Ch+var_18+4] cx +
xor ecx ecx +
mov word ptr [esp+4Ch+var_18+2] dx +
mov word ptr [esp+4Ch+var_18] cx +
jmp loc_4753E8  +
xor edx edx +
mov word ptr [esp+4Ch+var_18+8] dx +
jmp loc_4753C6  +
***
sub esp 3Ch +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_2C] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_34] offset unk_483730 +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_477C60  +
mov edx eax +
and edx 7 +
cmp edx 5 +
ja loc_475528  +
jmp ds:off_4D509C[edx*4]  +
mov edx 7F800000h +
mov ecx edx +
or ecx 80000000h +
test al 8 +
cmovnz edx ecx +
mov [esp+3Ch+var_20] edx +
fld  [esp+3Ch+var_20] +
add esp 3Ch +
retn   +
mov edx [esp+3Ch+var_14] +
jmp loc_4754E5  +
mov ecx [esp+3Ch+var_10] +
lea edx [ecx+96h] +
mov ecx [esp+3Ch+var_14] +
shl edx 17h +
and ecx 7FFFFFh +
or edx ecx +
jmp loc_4754E5  +
mov edx 7FC00000h +
jmp loc_4754E5  +
xor edx edx +
jmp loc_4754E5  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
test eax eax +
jz loc_475549  +
mov eax [esp+2Ch+arg_4] +
mov [eax] esi +
cmp [esp+2Ch+arg_8] 1 +
jz loc_475557  +
cmp [esp+2Ch+arg_8] 24h +
jbe loc_475573  +
call _errno  +
xor edx edx +
mov dword ptr [eax] 21h +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
movzx ebx byte ptr [esi] +
movsx eax bl +
mov [esp+0] eax +
call isspace  +
test eax eax +
jnz loc_475570  +
xor edx edx +
cmp bl 2Dh +
setz dl  +
mov eax esi +
mov [esp-10h+arg_18] edx +
jz loc_4756D0  +
cmp bl 2Bh +
jz loc_4756D0  +
mov ebp [esp-10h+arg_44] +
test ebp ebp +
jnz loc_4756E3  +
cmp bl 30h +
mov [esp-10h+arg_44] 0Ah +
jz loc_4757D0  +
movsx ebp bl +
lea eax [ebp-30h] +
cmp eax 9 +
ja loc_475760  +
movsx eax bl +
sub eax 30h +
cmp [esp-10h+arg_44] eax +
jle loc_4757C0  +
mov edx eax +
shr edx 1Fh +
test dl dl +
jnz loc_4757C0  +
add esi 1 +
mov edi [esp-10h+arg_44] +
movsx ebx byte ptr [esi] +
mov [esp-10h+arg_C] eax +
sar eax 1Fh +
mov [esp-10h+arg_10] eax +
mov ebp edi +
lea ecx [ebx-30h] +
sar ebp 1Fh +
cmp ecx 9 +
mov [esp-10h+arg_14] 0 +
ja loc_4756AE  +
lea esi [esi+0] +
mov ebx ecx +
cmp [esp-10h+arg_44] ebx +
jle loc_47571C  +
test ebx ebx +
js loc_47571C  +
mov [esp-10h+arg_4] edi +
mov [esp-10h+arg_8] ebp +
mov dword ptr [esp+0] 0FFFFFFFFh +
mov [esp-10h+arg_0] 0FFFFFFFFh +
call sub_470D20  +
add eax 1 +
adc edx 0 +
cmp [esp-10h+arg_10] edx +
ja loc_475694  +
jb loc_475664  +
cmp [esp-10h+arg_C] eax +
ja loc_475694  +
mov edx [esp-10h+arg_10] +
mov eax [esp-10h+arg_C] +
imul edx edi +
imul eax ebp +
lea ecx [edx+eax] +
mov eax [esp-10h+arg_C] +
mul  edi +
add edx ecx +
mov ecx ebx +
sar ebx 1Fh +
add ecx eax +
adc ebx edx +
cmp [esp-10h+arg_10] ebx +
jb loc_4756C2  +
ja loc_475694  +
cmp [esp-10h+arg_C] ecx +
jbe loc_4756C2  +
mov [esp-10h+arg_14] 1 +
add esi 1 +
movsx ebx byte ptr [esi] +
lea ecx [ebx-30h] +
cmp ecx 9 +
jbe loc_475620  +
mov [esp+0] ebx +
call isupper  +
test eax eax +
jz loc_475710  +
sub ebx 37h +
jmp loc_475622  +
mov [esp-10h+arg_C] ecx +
mov [esp-10h+arg_10] ebx +
jmp loc_47569C  +
mov ebp [esp-10h+arg_44] +
add esi 1 +
movzx ebx byte ptr [eax+1] +
test ebp ebp +
jz loc_4755AE  +
cmp [esp-10h+arg_44] 10h +
jnz loc_4755BF  +
cmp bl 30h +
jnz loc_4755BF  +
movzx eax byte ptr [esi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jz loc_4757DB  +
mov ebx 30h +
jmp loc_4755CE  +
mov [esp+0] ebx +
call islower  +
test eax eax +
jnz loc_475752  +
mov edi [esp-10h+arg_40] +
test edi edi +
jz loc_47572A  +
mov eax [esp-10h+arg_40] +
mov [eax] esi +
mov ebx [esp-10h+arg_14] +
test ebx ebx +
jnz loc_475790  +
mov ecx [esp-10h+arg_18] +
mov eax [esp-10h+arg_C] +
mov edx [esp-10h+arg_10] +
test ecx ecx +
jz loc_475566  +
neg eax  +
adc edx 0 +
neg edx  +
jmp loc_475566  +
sub ebx 57h +
jmp loc_475622  +
mov [esp+0] ebp +
call isupper  +
test eax eax +
jnz loc_4757B0  +
mov [esp+0] ebp +
call islower  +
xor edx edx +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_475566  +
lea eax [ebp-57h] +
jmp loc_4755D4  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 22h +
add esp 2Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp-37h] +
cmp [esp-10h+arg_44] eax +
jg loc_4755DE  +
lea esi [esi+0] +
add esp 2Ch +
xor eax eax +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [esi+1] +
and eax 0FFFFFFDFh +
cmp al 58h +
jnz loc_4757EF  +
movzx ebx byte ptr [esi+2] +
add esi 2 +
mov [esp-10h+arg_44] 10h +
jmp loc_4755BF  +
mov [esp-10h+arg_44] 8 +
jmp loc_4755BF  +
***
sub esp 48h +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [esp+24h] eax +
mov eax [esp+48h+arg_8] +
mov [esp+48h+var_20] eax +
mov eax [esp+48h+arg_C] +
fld  tbyte ptr [esp+48h+var_28] +
mov [esp+48h+var_1C] eax +
fxam   +
fstsw  ax +
fstp  st +
test ah 1 +
jz loc_475850  +
test ah 4 +
jz loc_4758D0  +
mov [esp+48h+var_10] 3 +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
jmp loc_475864  +
test ah 4 +
jnz loc_4758B1  +
movzx edx word ptr [esp+48h+var_20] +
xor eax eax +
mov [esp+48h+var_10] 0 +
and edx 8000h +
mov ebx [esp+48h+arg_18] +
mov [ebx] edx +
lea edx [esp+48h+var_C] +
mov [esp+48h+var_2C] edx +
mov edx [esp+48h+arg_14] +
mov [esp+48h+var_38] ecx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] offset unk_483748 +
mov [esp+48h+var_30] edx +
mov edx [esp+48h+arg_10] +
mov [esp+48h+var_34] edx +
lea edx [esp+48h+var_10] +
mov [esp+48h+var_3C] edx +
lea edx [esp+48h+var_28] +
mov [esp+48h+var_40] edx +
call sub_479750  +
add esp 48h +
pop ebx  +
retn   +
test ah 40h +
jz loc_4758E0  +
mov [esp+48h+var_10] 2 +
movzx edx word ptr [esp+48h+var_20] +
mov eax 0FFFFBFC3h +
jmp loc_475864  +
mov [esp+48h+var_10] 4 +
xor eax eax +
xor edx edx +
jmp loc_47586A  +
movzx edx word ptr [esp+48h+var_20] +
mov [esp+48h+var_10] 1 +
mov eax edx +
and eax 7FFFh +
sub eax 403Eh +
jmp loc_475864  +
***
mov ecx [edx+4] +
test ch 40h +
jnz loc_475914  +
mov ebx [edx+20h] +
cmp [edx+24h] ebx +
jle loc_475924  +
and ch 20h +
jnz loc_475930  +
mov ebx [edx] +
mov ecx [edx+20h] +
mov [ebx+ecx] al +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_14] ecx +
call fputc  +
mov edx [esp+18h+var_C] +
mov ebx [edx+20h] +
add ebx 1 +
mov [edx+20h] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
mov [esp+50h+var_38] eax +
lea ebp [esp+50h+var_20] +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov [esp+50h+var_4C] 0 +
mov [esp+50h+var_50] ebp +
call sub_47ACC0  +
mov eax [ebx+0Ch] +
test eax eax +
js loc_475997  +
cmp esi eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_475A22  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_4759B1  +
test byte ptr [ebx+5] 4 +
jz loc_475A2B  +
mov [esp+50h+var_34] esi +
mov eax [esp+50h+var_34] +
test eax eax +
jle loc_475A0D  +
add [esp+50h+var_38] 2 +
lea eax [esp+50h+var_24] +
mov [esp+50h+var_48] eax +
mov eax [esp+50h+var_38] +
movzx eax word ptr [eax-2] +
mov [esp+50h+var_50] ebp +
mov [esp+50h+var_4C] eax +
call sub_47ACC0  +
test eax eax +
jle loc_475A0D  +
lea esi [ebp+eax+0] +
mov edi ebp +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475900  +
cmp edi esi +
jnz loc_4759E8  +
sub [esp+50h+var_34] 1 +
jmp loc_4759B5  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_475A01  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_4759B1  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_475A31  +
jmp loc_4759B1  +
***
mov eax [ecx+0Ch] +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
test eax eax +
js loc_475A65  +
cmp edx eax +
cmovg esi eax +
mov eax [ebx+8] +
cmp esi eax +
jge loc_475AE0  +
sub eax esi +
test eax eax +
mov [ebx+8] eax +
jle loc_475A9A  +
test byte ptr [ebx+5] 4 +
jnz loc_475A9A  +
sub eax 1 +
mov [ebx+8] eax +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jnz loc_475A81  +
test esi esi +
jz loc_475ACC  +
nop   +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475900  +
sub esi 1 +
jnz loc_475AA0  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_475AD9  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_475AC0  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+8] 0FFFFFFFFh +
jmp loc_475A9A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test eax eax +
mov dword ptr [ecx+0Ch] 0FFFFFFFFh +
jz loc_475B40  +
mov ebp [ecx+4] +
lea edi [esp+1Ch+var_10+1] +
mov byte ptr [esp+1Ch+var_10] 2Dh +
lea eax [esp+1Ch+var_10] +
and ebp 20h +
xor esi esi +
movzx ebx byte ptr [edx+esi] +
and ebx 0FFFFFFDFh +
or ebx ebp +
mov [edi+esi] bl +
add esi 1 +
cmp esi 3 +
jnz loc_475B17  +
lea edx [edi+3] +
sub edx eax +
call sub_475A50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ecx+4] +
test ebp 100h +
jz loc_475B60  +
mov byte ptr [esp+1Ch+var_10] 2Bh +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_475B12  +
test ebp 40h +
jz loc_475B77  +
mov byte ptr [esp+1Ch+var_10] 20h +
lea edi [esp+1Ch+var_10+1] +
lea eax [esp+1Ch+var_10] +
jmp loc_475B12  +
lea eax [esp+1Ch+var_10] +
mov edi eax +
jmp loc_475B12  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 3Ch +
mov [ebp+var_30] eax +
mov [ebp+var_28] eax +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov [ebp+var_2C] edx +
mov [ebp+var_24] edx +
test eax eax +
cmovns ebx eax +
add ebx 17h +
test ch 10h +
mov [ebp+var_1C] eax +
jz loc_475BBA  +
cmp word ptr [edi+1Ch] 0 +
jnz loc_475D90  +
mov eax [edi+8] +
cmp ebx eax +
cmovge eax ebx +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
test cl 80h +
lea eax [esp+48h+var_38] +
mov [ebp+var_20] eax +
jz loc_475BEC  +
mov ebx [ebp+var_2C] +
test ebx ebx +
js loc_475E00  +
and cl 7Fh +
mov [edi+4] ecx +
mov eax [ebp+var_28] +
mov edx [ebp+var_24] +
mov esi eax +
mov eax edx +
or eax esi +
jz loc_475E2E  +
mov eax [ebp+var_20] +
mov [ebp+var_28] edi +
mov edi edx +
mov ebx eax +
lea ecx [ebx+1] +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
mov [ebp+var_1C] ecx +
call sub_470E30  +
add eax 30h +
mov [ebx] al +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_40] 0Ah +
mov [esp+48h+var_3C] 0 +
call sub_470D20  +
mov ecx [ebp+var_1C] +
mov esi eax +
mov eax edx +
or eax esi +
mov edi edx +
jz loc_475C94  +
cmp [ebp+var_20] ecx +
jz loc_475C82  +
mov eax [ebp+var_28] +
test byte ptr [eax+5] 10h +
jz loc_475C82  +
cmp word ptr [eax+1Ch] 0 +
jz loc_475C82  +
mov eax ecx +
sub eax [ebp+var_20] +
cdq   +
shr edx 1Eh +
add eax edx +
and eax 3 +
sub eax edx +
cmp eax 3 +
jz loc_475C86  +
mov ebx ecx +
jmp loc_475C08  +
lea ecx [ebx+2] +
mov byte ptr [ebx+1] 2Ch +
mov ebx ecx +
jmp loc_475C08  +
mov edi [ebp+var_28] +
mov ebx ecx +
mov eax [edi+0Ch] +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov esi ebx +
test ecx ecx +
jle loc_475CC1  +
mov eax [ebp+var_20] +
sub eax ebx +
add eax ecx +
test eax eax +
jle loc_475CC1  +
lea esi [ebx+eax] +
add ebx 1 +
cmp ebx esi +
mov byte ptr [ebx-1] 30h +
jnz loc_475CB6  +
cmp esi [ebp+var_20] +
jz loc_475E18  +
mov eax [edi+8] +
test eax eax +
jle loc_475D29  +
mov edx [ebp+var_20] +
sub edx esi +
add edx eax +
mov eax [edi+4] +
test edx edx +
mov [edi+8] edx +
jle loc_475D2C  +
test eax 1C0h +
jz loc_475CEF  +
sub edx 1 +
mov [edi+8] edx +
mov edx [edi+0Ch] +
test edx edx +
js loc_475DB5  +
test ah 4 +
jnz loc_475D2C  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_475D2C  +
lea esi [esi+0] +
mov edx edi +
mov eax 20h +
call sub_475900  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475D10  +
mov eax [edi+4] +
test al 80h +
jz loc_475D81  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Dh +
cmp [ebp+var_20] ebx +
mov esi [ebp+var_20] +
jnb loc_475D6C  +
nop   +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_475900  +
cmp ebx esi +
jnz loc_475D40  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jle loc_475D79  +
nop   +
mov edx edi +
mov eax 20h +
call sub_475900  +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475D60  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ah 1 +
jz loc_475DA7  +
lea ebx [esi+1] +
mov byte ptr [esi] 2Bh +
jmp loc_475D36  +
mov eax ebx +
mov edx 55555556h +
imul  edx +
mov eax ebx +
sar eax 1Fh +
sub edx eax +
add ebx edx +
jmp loc_475BBA  +
test al 40h +
mov ebx esi +
jz loc_475D36  +
add ebx 1 +
mov byte ptr [esi] 20h +
jmp loc_475D36  +
mov edx eax +
and edx 600h +
cmp edx 200h +
jnz loc_475CFA  +
mov edx [edi+8] +
lea ecx [edx-1] +
test edx edx +
mov [edi+8] ecx +
jle loc_475D2C  +
lea esi [esi+0] +
add esi 1 +
mov byte ptr [esi-1] 30h +
mov eax [edi+8] +
lea edx [eax-1] +
test eax eax +
mov [edi+8] edx +
jg loc_475DE0  +
jmp loc_475D29  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
neg eax  +
adc edx 0 +
neg edx  +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
jmp loc_475BEC  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_475CCA  +
mov byte ptr [esi] 30h +
add esi 1 +
jmp loc_475CCA  +
mov ebx [ebp+var_20] +
jmp loc_475C9F  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
cmp eax 6Fh +
mov [ebp+var_28] eax +
mov eax 18h +
mov [ebp+var_34] ecx +
mov ecx 12h +
cmovz ecx eax +
setnz al  +
movzx ebx al +
movzx eax al +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_0] +
lea ebx ds:7[ebx*8] +
mov [ebp+var_24] edx +
add [ebp+var_1C] 3 +
mov eax [eax+0Ch] +
mov edx eax +
mov [ebp+var_30] eax +
xor eax eax +
test edx edx +
cmovns eax edx +
add ecx eax +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
test ah 10h +
mov [ebp+var_38] eax +
jz loc_475EAD  +
mov eax [ebp+arg_0] +
cmp word ptr [eax+1Ch] 0 +
jnz loc_4760D1  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp ecx eax +
cmovl ecx eax +
mov [ebp+var_2C] eax +
lea eax [ecx+0Fh] +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
mov eax [ebp+var_34] +
or eax [ebp+var_24] +
mov [ebp+var_20] esp +
jz loc_476130  +
movzx ecx byte ptr [ebp+var_28] +
mov eax esp +
and ecx 20h +
mov byte ptr [ebp+var_24] cl +
jmp loc_475F02  +
mov [eax-1] cl +
movzx ecx byte ptr [ebp+var_1C] +
xor edx edx +
shrd esi edi +
shr edi cl +
test cl 20h +
cmovnz esi edi +
cmovnz edi edx +
mov ecx edi +
or ecx esi +
jz loc_475F20  +
mov edx esi +
add eax 1 +
and edx ebx +
lea ecx [edx+30h] +
cmp cl 39h +
jle loc_475EE5  +
add edx 37h +
or dl byte ptr [ebp+var_24] +
mov [eax-1] dl +
jmp loc_475EE8  +
cmp [ebp+var_20] eax +
jz loc_476130  +
mov edi [ebp+var_30] +
test edi edi +
jle loc_4760E8  +
mov ecx [ebp+var_20] +
sub ecx eax +
add ecx edi +
test ecx ecx +
jle loc_4760E8  +
lea edi [eax+ecx] +
add eax 1 +
cmp eax edi +
mov byte ptr [eax-1] 30h +
jnz loc_475F46  +
cmp edi [ebp+var_20] +
jz loc_476110  +
mov eax edi +
sub eax [ebp+var_20] +
cmp [ebp+var_2C] eax +
jle loc_476012  +
mov esi [ebp+var_2C] +
sub esi eax +
mov eax [ebp+arg_0] +
test esi esi +
mov [eax+8] esi +
jle loc_475F98  +
cmp [ebp+var_28] 6Fh +
jz loc_475F8A  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_476086  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
js loc_47609D  +
lea eax [esi-1] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_1C] +
cmp [ebp+var_28] 6Fh +
mov ebx eax +
jz loc_475FB6  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 8 +
jnz loc_476070  +
test esi esi +
jle loc_475FC3  +
mov eax [ebp+arg_0] +
test byte ptr [eax+5] 4 +
jz loc_476030  +
cmp edi [ebp+var_20] +
jbe loc_475FED  +
mov [ebp+var_1C] esi +
mov esi [ebp+var_20] +
mov [ebp+var_20] ebx +
mov ebx edi +
mov edi [ebp+arg_0] +
sub ebx 1 +
movsx eax byte ptr [ebx] +
mov edx edi +
call sub_475900  +
cmp ebx esi +
jnz loc_475FD6  +
mov esi [ebp+var_1C] +
mov ebx [ebp+var_20] +
test esi esi +
jle loc_47600A  +
mov esi [ebp+arg_0] +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_475900  +
lea eax [ebx+1] +
test eax eax +
jg loc_475FF4  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov esi 0FFFFFFFFh +
mov [ebp+var_1C] 0FFFFFFFEh +
mov dword ptr [eax+8] 0FFFFFFFFh +
jmp loc_475F9E  +
mov ebx [ebp+var_1C] +
mov esi eax +
mov eax 20h +
sub ebx 1 +
mov edx esi +
call sub_475900  +
lea eax [ebx+1] +
test eax eax +
jg loc_476035  +
mov ebx [ebp+var_1C] +
xor eax eax +
test ebx ebx +
lea esi [ebx-1] +
cmovns eax ebx +
sub esi eax +
lea ebx [esi-1] +
jmp loc_475FC3  +
sub esi 3 +
mov [ebp+var_1C] esi +
mov esi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+var_28] +
add edi 2 +
mov byte ptr [edi-1] 30h +
mov ebx [ebp+var_1C] +
mov [edi-2] al +
jmp loc_475FB6  +
lea eax [esi-2] +
test eax eax +
jle loc_476062  +
mov esi eax +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
jns loc_475F98  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 600h +
cmp eax 200h +
jnz loc_475F98  +
add esi edi +
add edi 1 +
cmp edi esi +
mov byte ptr [edi-1] 30h +
jnz loc_4760B5  +
mov [ebp+var_1C] 0FFFFFFFEh +
mov esi 0FFFFFFFFh +
jmp loc_475F9E  +
mov eax ecx +
mov edx 55555556h +
imul  edx +
mov eax ecx +
sar eax 1Fh +
sub edx eax +
add ecx edx +
jmp loc_475EAD  +
cmp [ebp+var_28] 6Fh +
mov edi eax +
jnz loc_475F51  +
mov esi [ebp+arg_0] +
test byte ptr [esi+5] 8 +
jz loc_475F51  +
add edi 1 +
mov byte ptr [eax] 30h +
jmp loc_475F51  +
mov eax [ebp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_475F5A  +
mov byte ptr [edi] 30h +
mov eax [eax+8] +
add edi 1 +
mov [ebp+var_2C] eax +
jmp loc_475F5A  +
mov eax [ebp+var_38] +
mov edi [ebp+arg_0] +
and ah 0F7h +
mov [edi+4] eax +
mov eax [ebp+var_20] +
jmp loc_475F29  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
cmp dword ptr [eax+10h] 0FFFFFFFDh +
jz loc_4761E5  +
movzx edx word ptr [eax+14h] +
test dx dx +
jz loc_4761C3  +
mov eax [ebx+10h] +
mov [ebp+var_2C] esp +
add eax 0Fh +
and eax 0FFFFFFF0h +
call sub_470CF0  +
sub esp eax +
lea edi [esp+48h+var_38] +
lea eax [ebp+var_1C] +
mov [ebp+var_1C] 0 +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edi +
call sub_47ACC0  +
test eax eax +
jle loc_4761D7  +
lea esi [edi+eax] +
add edi 1 +
movsx eax byte ptr [edi-1] +
mov edx ebx +
call sub_475900  +
cmp edi esi +
jnz loc_4761A6  +
mov esp [ebp+var_2C] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_475900  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
mov eax 2Eh +
call sub_475900  +
jmp loc_4761B8  +
mov [ebp+var_1C] 0 +
call localeconv  +
lea edx [ebp+var_1C] +
mov eax [eax] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_40] 10h +
mov [esp+48h+var_44] eax +
lea eax [ebp-1Eh] +
mov [esp+48h+var_48] eax +
call sub_474E80  +
test eax eax +
jle loc_476225  +
movzx edx [ebp+var_1E] +
mov [ebx+14h] dx +
mov [ebx+10h] eax +
jmp loc_476169  +
movzx edx word ptr [ebx+14h] +
jmp loc_47621D  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
test esi esi +
mov ebx [esp+28h+arg_0] +
mov ecx [ebx+8] +
jle loc_476490  +
cmp esi ecx +
jge loc_476353  +
sub ecx esi +
mov [ebx+8] ecx +
test ecx ecx +
js loc_476353  +
mov eax [ebx+0Ch] +
cmp eax ecx +
jge loc_476353  +
sub ecx eax +
test ecx ecx +
mov [ebx+8] ecx +
jle loc_47635F  +
test eax eax +
jle loc_4764F1  +
sub ecx 1 +
test esi esi +
mov [ebx+8] ecx +
jg loc_476367  +
nop   +
test ecx ecx +
jle loc_4762B2  +
test ebp ebp +
jz loc_476451  +
sub ecx 1 +
test ecx ecx +
mov [ebx+8] ecx +
jz loc_4762B2  +
mov eax [ebx+4] +
test ah 6 +
jz loc_4763D3  +
test ebp ebp +
jnz loc_4763E8  +
mov eax [ebx+4] +
test ah 1 +
jnz loc_4764A5  +
test al 40h +
jnz loc_4764E0  +
mov edx [ebx+8] +
test edx edx +
jle loc_4762E8  +
mov eax [ebx+4] +
and eax 600h +
cmp eax 200h +
jz loc_4764B6  +
lea eax [ebx+1Ch] +
test esi esi +
mov ebp 55555556h +
mov [esp+28h+var_1C] eax +
jle loc_476400  +
lea esi [esi+0] +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_476312  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_475900  +
sub esi 1 +
jz loc_47640C  +
test byte ptr [ebx+5] 10h +
jz loc_476300  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_476300  +
mov eax esi +
imul  ebp +
mov eax esi +
sar eax 1Fh +
sub edx eax +
lea eax [edx+edx*2] +
cmp esi eax +
jnz loc_476300  +
mov eax [esp+28h+var_1C] +
mov ecx ebx +
mov edx 1 +
call sub_475960  +
jmp loc_476300  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov ecx 0FFFFFFFFh +
test esi esi +
jle loc_476290  +
test byte ptr [ebx+5] 10h +
jz loc_476290  +
cmp word ptr [ebx+1Ch] 0 +
jz loc_476290  +
lea eax [esi+2] +
mov edx 55555556h +
mov [esp+28h+var_1C] eax +
imul  edx +
mov eax [esp+28h+var_1C] +
sar eax 1Fh +
sub edx eax +
cmp edx 1 +
jle loc_476290  +
test ecx ecx +
jle loc_4762B2  +
mov eax ecx +
sub eax edx +
add eax 1 +
jmp loc_4763B8  +
test ecx ecx +
jz loc_476505  +
sub ecx 1 +
cmp ecx eax +
jnz loc_4763B0  +
mov [ebx+8] ecx +
jmp loc_476290  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4763C7  +
test ebp ebp +
jz loc_4762BA  +
mov edx ebx +
mov eax 2Dh +
call sub_475900  +
jmp loc_4762CE  +
mov edx ebx +
mov eax 30h +
call sub_475900  +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_476464  +
mov eax ebx +
call sub_476150  +
test esi esi +
mov eax [ebx+0Ch] +
jz loc_47643F  +
jmp loc_476472  +
movzx edx byte ptr [edi] +
mov eax 30h +
test dl dl +
jz loc_476435  +
add edi 1 +
movsx eax dl +
mov edx ebx +
call sub_475900  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_476423  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
test eax 1C0h +
jz loc_4762A9  +
jmp loc_47629C  +
test byte ptr [ebx+5] 8 +
jnz loc_476413  +
test esi esi +
lea esi [esi+0] +
jz loc_47643F  +
add eax esi +
mov [ebx+0Ch] eax +
mov edx ebx +
mov eax 30h +
call sub_475900  +
add esi 1 +
js loc_476477  +
jmp loc_47643C  +
test ecx ecx +
jle loc_476259  +
sub ecx 1 +
mov [ebx+8] ecx +
nop   +
jmp loc_476261  +
mov edx ebx +
mov eax 2Bh +
call sub_475900  +
jmp loc_4762CE  +
sub edx 1 +
mov [ebx+8] edx +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_4764C0  +
jmp loc_4762E8  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
jmp loc_4762CE  +
test byte ptr [ebx+5] 8 +
jz loc_47635F  +
nop   +
lea esi [esi+0] +
jmp loc_476281  +
mov dword ptr [ebx+8] 0 +
jmp loc_4762B2  +
***
jmp sub_476520  +
***
push edi  +
mov ebp edx +
push esi  +
mov esi 1 +
push ebx  +
mov ebx 66666667h +
sub esp 1Ch +
mov [esp+28h+var_24] eax +
mov eax ecx +
mov edi [esp+28h+arg_0] +
sar eax 1Fh +
mov [esp+28h+var_1C] eax +
mov eax ecx +
imul  ebx +
mov [esp+28h+var_20] ecx +
sar ecx 1Fh +
sar edx 2 +
mov ebx edx +
sub ebx ecx +
jz loc_476573  +
mov ecx 66666667h +
mov eax ebx +
add esi 1 +
imul  ecx +
sar ebx 1Fh +
sar edx 2 +
sub edx ebx +
mov ebx edx +
jnz loc_476560  +
mov eax [edi+28h] +
mov edx [edi+8] +
cmp esi eax +
cmovl esi eax +
lea eax [esi+2] +
cmp edx eax +
jg loc_4765E0  +
mov dword ptr [edi+8] 0FFFFFFFFh +
mov eax [esp+28h+var_24] +
mov ecx 1 +
mov edx ebp +
mov [esp+28h+var_28] edi +
add esi 1 +
call sub_476230  +
mov eax [edi+28h] +
mov [edi+0Ch] eax +
mov eax [edi+4] +
mov edx eax +
and eax 20h +
or edx 1C0h +
or eax 45h +
mov [edi+4] edx +
mov edx edi +
call sub_475900  +
mov eax [esp+28h+var_20] +
mov ecx edi +
add [edi+8] esi +
mov edx [esp+28h+var_1C] +
call sub_475B80  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edx eax +
mov [edi+8] edx +
jmp loc_47658C  +
***
mov ebx eax +
sub esp 44h +
mov eax [eax+0Ch] +
test eax eax +
js loc_476670  +
add eax 1 +
fld  [esp+44h+arg_0] +
mov [esp+44h+var_34] eax +
lea edx [esp+44h+var_1C] +
fstp  [esp+44h+var_14] +
mov eax dword ptr [esp+44h+var_14] +
mov [esp+44h+var_2C] edx +
lea edx [esp+44h+var_18] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_44] eax +
mov eax dword ptr [esp+44h+var_14+4] +
mov [esp+44h+var_40] eax +
mov eax dword ptr [esp+44h+var_14+8] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_8] +
mov [esp+44h+var_38] eax +
mov eax 2 +
call sub_475800  +
mov ecx [esp+44h+var_18] +
cmp ecx 0FFFF8000h +
mov esi eax +
jz loc_476680  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov [esp+44h+var_44] ebx +
call sub_476520  +
mov [esp+44h+var_44] esi +
call sub_47AEB0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 7 +
jmp loc_476601  +
mov edx eax +
mov eax [esp+44h+var_1C] +
mov ecx ebx +
call sub_475AF0  +
mov [esp+44h+var_44] esi +
call sub_47AEB0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_476750  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 3 +
call sub_475800  +
mov ecx [esp+40h+var_14] +
cmp ecx 0FFFF8000h +
mov edi eax +
jz loc_476761  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_40] ebx +
call sub_476230  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_47673A  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_476721  +
mov [esp+40h+var_40] edi +
call sub_47AEB0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_4766B3  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_475AF0  +
mov [esp+40h+var_40] edi +
call sub_47AEB0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 40h +
mov eax [eax+0Ch] +
test eax eax +
js loc_4768B0  +
jz loc_476893  +
fld  [esp+40h+arg_0] +
mov [esp+40h+var_30] eax +
lea edx [esp+40h+var_18] +
fstp  [esp+40h+var_10] +
mov eax dword ptr [esp+40h+var_10] +
mov [esp+40h+var_28] edx +
lea edx [esp+40h+var_14] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_40] eax +
mov eax dword ptr [esp+40h+var_10+4] +
mov [esp+40h+var_3C] eax +
mov eax dword ptr [esp+40h+var_10+8] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_4] +
mov [esp+40h+var_34] eax +
mov eax 2 +
call sub_475800  +
mov esi [esp+40h+var_14] +
cmp esi 0FFFF8000h +
mov edi eax +
jz loc_4768D0  +
cmp esi 0FFFFFFFDh +
jl loc_476860  +
mov eax [ebx+0Ch] +
cmp esi eax +
jg loc_476860  +
test byte ptr [ebx+5] 8 +
jnz loc_4768C1  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax esi +
test eax eax +
mov [ebx+0Ch] eax +
js loc_4768E0  +
mov eax [esp+40h+var_18] +
mov edx edi +
mov ecx esi +
mov [esp+40h+var_40] ebx +
call sub_476230  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_476884  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov ecx [ebx+8] +
lea esi [ecx-1] +
test ecx ecx +
mov [ebx+8] esi +
jg loc_476838  +
mov [esp+40h+var_40] edi +
call sub_47AEB0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test byte ptr [ebx+5] 8 +
jnz loc_4768A4  +
mov [esp+40h+var_40] edi +
call strlen  +
sub eax 1 +
mov [ebx+0Ch] eax +
mov eax [esp+40h+var_18] +
mov ecx esi +
mov edx edi +
mov [esp+40h+var_40] ebx +
call sub_476520  +
mov [esp+40h+var_40] edi +
call sub_47AEB0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov dword ptr [ebx+0Ch] 1 +
mov eax 1 +
jmp loc_476799  +
sub dword ptr [ebx+0Ch] 1 +
jmp loc_476874  +
mov dword ptr [ebx+0Ch] 6 +
mov eax 6 +
jmp loc_476799  +
sub eax esi +
mov [ebx+0Ch] eax +
jmp loc_47681B  +
mov edx eax +
mov eax [esp+40h+var_18] +
mov ecx ebx +
call sub_475AF0  +
jmp loc_476884  +
mov edx [ebx+8] +
test edx edx +
jle loc_47681B  +
add eax edx +
mov [ebx+8] eax +
jmp loc_47681B  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
fld  [esp+5Ch+arg_0] +
fld  st +
fstp  tbyte ptr [esp+5Ch+var_36+2] +
fxam   +
fstsw  ax +
and ax 4500h +
cmp ax 100h +
jz loc_476D95  +
movzx edx word ptr [esp+30h] +
mov esi edx +
and esi 8000h +
jnz loc_476AE1  +
fxam   +
fstsw  ax +
fstp  st +
and ax 4500h +
cmp ax 500h +
jz loc_476DA7  +
and dx 7FFFh +
jz loc_476B76  +
mov esi [esp+5Ch+var_36+2] +
lea eax [edx-3FFFh] +
mov edi [esp+2Ch] +
mov edx [ebx+0Ch] +
cmp edx 0Eh +
jbe loc_476AF6  +
mov ecx edi +
or ecx esi +
jz loc_476DBA  +
lea ecx [esp+5Ch+var_24] +
mov ebp ebx +
mov [esp+5Ch+var_48] ecx +
mov [esp+5Ch+var_54] ecx +
nop   +
lea esi [esi+0] +
mov ecx esi +
and ecx 0Fh +
cmp ecx esi +
jz loc_476BD0  +
mov edx [ebp+0Ch] +
test edx edx +
jle loc_4769AA  +
sub edx 1 +
mov [ebp+0Ch] edx +
mov edx [esp+5Ch+var_54] +
shrd esi edi +
shr edi 4 +
test ecx ecx +
jz loc_476BB0  +
lea ebx [edx+1] +
cmp ecx 9 +
mov [esp+5Ch+var_54] ebx +
jle loc_476BC4  +
movzx ebx byte ptr [ebp+4] +
add ecx 37h +
and ebx 20h +
or ecx ebx +
mov [edx] cl +
mov ecx edi +
or ecx esi +
jnz loc_476990  +
mov ebx ebp +
mov ebp [esp+5Ch+var_54] +
cmp ebp [esp+5Ch+var_48] +
jz loc_476DEB  +
mov edi [ebx+4] +
mov [esp+5Ch+var_54] edi +
mov edi [ebx+8] +
test edi edi +
mov [esp+5Ch+var_44] edi +
jle loc_476D49  +
cwde   +
mov edx ebp +
mov esi eax +
mov eax [ebx+0Ch] +
sub edx [esp+5Ch+var_48] +
mov [esp+5Ch+var_40] esi +
test eax eax +
lea ecx [edx+eax] +
mov eax [esp+5Ch+var_54] +
cmovg edx ecx +
and eax 1C0h +
cmp eax 1 +
sbb eax eax +
lea edi [edx+eax+6] +
mov eax esi +
mov edx 66666667h +
imul  edx +
mov eax esi +
sar eax 1Fh +
sar edx 2 +
mov ecx edx +
sub ecx eax +
jz loc_476DE1  +
mov esi 2 +
mov eax 66666667h +
add edi 1 +
imul  ecx +
add esi 1 +
sar ecx 1Fh +
sar edx 2 +
sub edx ecx +
mov ecx edx +
jnz loc_476A51  +
movsx esi si +
cmp [esp+5Ch+var_44] edi +
jle loc_476C30  +
mov eax [esp+5Ch+var_44] +
sub eax edi +
test [esp+5Ch+var_54] 600h +
jnz loc_476D63  +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jle loc_476C37  +
lea esi [esi+0] +
mov edx ebx +
mov eax 20h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_476AA0  +
mov eax [ebx+4] +
mov [esp+5Ch+var_54] eax +
test byte ptr [esp+5Ch+var_54] 80h +
jz loc_476C42  +
nop   +
lea esi [esi+0] +
mov edx ebx +
mov eax 2Dh +
call sub_475900  +
jmp loc_476C5B  +
or dword ptr [ebx+4] 80h +
jmp loc_476939  +
shld edi esi +
add esi esi +
test edi edi +
jns loc_476AF0  +
mov ecx 0Eh +
xor ebp ebp +
shrd esi edi +
sub ecx edx +
shr edi 1 +
mov [esp+5Ch+var_50] edi +
shl ecx 2 +
mov edi 4 +
mov [esp+5Ch+var_54] esi +
shld ebp edi +
xor esi esi +
shl edi cl +
test cl 20h +
cmovnz ebp edi +
cmovnz edi esi +
add [esp+5Ch+var_54] edi +
adc [esp+5Ch+var_50] ebp +
mov ebp [esp+5Ch+var_50] +
mov edi [esp+5Ch+var_54] +
test ebp ebp +
js loc_476D8D  +
shld ebp edi +
add edi edi +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_50] ebp +
mov edi [esp+5Ch+var_50] +
mov ecx 0Fh +
xor ebp ebp +
mov esi [esp+5Ch+var_54] +
sub ecx edx +
shl ecx 2 +
shrd esi edi +
shr edi cl +
and ecx 20h +
cmovnz esi edi +
cmovnz edi ebp +
jmp loc_47697D  +
mov edi [esp+2Ch] +
mov esi [esp+5Ch+var_36+2] +
mov eax edi +
or eax esi +
jz loc_476D58  +
test edi edi +
js loc_476DF0  +
mov edx 0FFFFC001h +
shld edi esi +
mov eax edx +
add esi esi +
sub edx 1 +
test edi edi +
jns loc_476B95  +
jmp loc_476967  +
cmp edx [esp+5Ch+var_48] +
ja loc_476BBD  +
mov ebx [ebp+0Ch] +
test ebx ebx +
js loc_476C25  +
lea ebx [edx+1] +
mov [esp+5Ch+var_54] ebx +
add ecx 30h +
jmp loc_4769D9  +
mov edx [esp+5Ch+var_48] +
cmp [esp+5Ch+var_54] edx +
ja loc_476BF0  +
test byte ptr [ebp+5] 8 +
jnz loc_476BF0  +
mov ebx [ebp+0Ch] +
mov edx [esp+5Ch+var_54] +
test ebx ebx +
jle loc_476BFA  +
nop   +
lea esi [esi+0] +
mov ebx [esp+5Ch+var_54] +
lea edx [ebx+1] +
mov byte ptr [ebx] 2Eh +
cmp edi 0 +
ja loc_476C04  +
cmp esi 1 +
jbe loc_476C1C  +
lea ebx [eax-1] +
shrd esi edi +
mov eax ebx +
shr edi 1 +
cmp edi 0 +
lea ebx [eax-1] +
ja loc_476C07  +
cmp esi 1 +
ja loc_476C07  +
xor esi esi +
xor edi edi +
jmp loc_4769B5  +
mov [esp+5Ch+var_54] edx +
jmp loc_4769DB  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
test byte ptr [esp+5Ch+var_54] 80h +
jnz loc_476AD0  +
test [esp+5Ch+var_54] 100h +
jnz loc_476D6B  +
test byte ptr [esp+5Ch+var_54] 40h +
jnz loc_476D7C  +
mov edx ebx +
mov eax 30h +
call sub_475900  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 58h +
call sub_475900  +
mov eax [ebx+8] +
test eax eax +
jle loc_476CA9  +
test byte ptr [ebx+5] 2 +
jz loc_476CA9  +
sub eax 1 +
mov [ebx+8] eax +
lea esi [esi+0] +
mov edx ebx +
mov eax 30h +
call sub_475900  +
mov eax [ebx+8] +
lea edx [eax-1] +
test eax eax +
mov [ebx+8] edx +
jg loc_476C90  +
cmp ebp [esp+5Ch+var_48] +
mov edi [esp+5Ch+var_48] +
ja loc_476CD7  +
jmp loc_476CFE  +
movzx eax word ptr [ebx+1Ch] +
test ax ax +
mov word ptr [esp+5Ch+var_36] ax +
jz loc_476CD3  +
mov ecx ebx +
mov edx 1 +
lea eax [esp+5Ch+var_36] +
call sub_475960  +
cmp ebp edi +
jz loc_476CFE  +
sub ebp 1 +
movsx eax byte ptr [ebp+0] +
cmp eax 2Eh +
jz loc_476D40  +
cmp eax 2Ch +
jz loc_476CB5  +
mov edx ebx +
call sub_475900  +
nop   +
jmp loc_476CD3  +
mov edx ebx +
mov eax 30h +
call sub_475900  +
mov eax [ebx+0Ch] +
lea edx [eax-1] +
test eax eax +
mov [ebx+0Ch] edx +
jg loc_476CF2  +
mov eax [ebx+4] +
mov edx ebx +
and eax 20h +
or eax 50h +
call sub_475900  +
mov eax [esp+5Ch+var_40] +
mov ecx ebx +
add [ebx+8] esi +
or dword ptr [ebx+4] 1C0h +
cdq   +
call sub_475B80  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_476150  +
jmp loc_476CD3  +
cwde   +
mov esi 2 +
mov [esp+5Ch+var_40] eax +
jmp loc_476C37  +
xor eax eax +
xor esi esi +
xor edi edi +
jmp loc_476967  +
mov [ebx+8] eax +
jmp loc_476C37  +
mov edx ebx +
mov eax 2Bh +
call sub_475900  +
jmp loc_476C5B  +
mov edx ebx +
mov eax 20h +
call sub_475900  +
jmp loc_476C5B  +
add eax 1 +
jmp loc_476B4F  +
fstp  st +
mov ecx ebx +
mov edx offset unk_4D50B4 +
xor eax eax +
call sub_475AF0  +
jmp loc_476D31  +
mov ecx ebx +
mov edx offset unk_4D50B8 +
mov eax esi +
call sub_475AF0  +
jmp loc_476D31  +
lea edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_48] edi +
mov edi [ebx+4] +
test edx edx +
mov [esp+5Ch+var_54] edi +
jle loc_476DFA  +
mov byte ptr [esp+5Ch+var_24] 2Eh +
lea edx [esp+5Ch+var_24+1] +
lea ebp [edx+1] +
mov byte ptr [edx] 30h +
jmp loc_4769F8  +
mov esi 2 +
jmp loc_476A6D  +
mov edx [ebx+0Ch] +
jmp loc_476DC2  +
mov eax 0FFFFC002h +
jmp loc_476967  +
and edi 800h +
mov edx [esp+5Ch+var_48] +
jz loc_476DD6  +
jmp loc_476DCD  +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov edi [esi+10h] +
lea edx [esi+14h] +
lea ebx [edx+edi*4] +
jmp loc_477823  +
add edx 4 +
cmp ebx edx +
mov dword ptr [edx-4] 0 +
jbe loc_477838  +
mov ecx [edx] +
cmp ecx 0FFFFFFFFh +
jz loc_477815  +
add ecx 1 +
mov eax esi +
mov [edx] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [esi+8] +
jge loc_477854  +
lea eax [edi+1] +
mov [esi+10h] eax +
mov eax esi +
mov dword ptr [esi+edi*4+14h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi+4] +
add eax 1 +
mov [esp+10h+var_10] eax +
call sub_47B1E0  +
mov edx [esi+10h] +
lea ecx ds:8[edx*4] +
lea edx [esi+0Ch] +
mov ebx eax +
lea eax [eax+0Ch] +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov [esp+10h+var_10] esi +
mov esi ebx +
call sub_47B2B0  +
mov edi [ebx+10h] +
jmp loc_47783D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
fld  qword ptr [eax] +
lea eax [esp+48h+var_20] +
mov [esp+48h+var_3C] eax +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_40] eax +
fstp  [esp+48h+var_48] +
mov [esp+48h+var_38] ecx +
call sub_47BAF0  +
mov esi [esp+48h+var_20] +
mov edi [ebp+0] +
sub esi edi +
mov ebx eax +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_20] esi +
add eax esi +
test esi esi +
mov [esp+48h+var_1C] eax +
jle loc_477A85  +
cmp edi 35h +
jz loc_477AA2  +
cmp [esp+48h+arg_8] 1 +
jz loc_477940  +
cmp [esp+48h+arg_8] 2 +
jz loc_477922  +
mov ecx esi +
sub ecx 1 +
jnz loc_477930  +
mov edx [esp+48h+arg_4] +
xor eax eax +
test edx edx +
jz loc_477A3B  +
test byte ptr [ebx+14h] 2 +
mov [esp+48h+var_34] 0 +
jz loc_477948  +
mov [esp+48h+var_34] 1 +
jmp loc_477948  +
mov eax ecx +
sar eax 5 +
mov eax [ebx+eax*4+14h] +
shr eax cl +
test al 1 +
jnz loc_477922  +
nop   +
mov [esp+48h+var_34] 0 +
mov dword ptr [esp+48h+var_48+4] esi +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47BE60  +
mov dword ptr [esp+48h+var_48] ebx +
cmp eax 1 +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_20] +
sbb esi esi +
not esi  +
and esi 10h +
mov dword ptr [esp+48h+var_48+4] eax +
call sub_47BEE0  +
mov eax [esp+48h+var_34] +
test eax eax +
jnz loc_477AC0  +
mov eax [esp+48h+var_1C] +
mov ecx [ebp+4] +
cmp ecx eax +
jle loc_477A53  +
mov edx ecx +
sub edx eax +
cmp edi edx +
mov [esp+48h+var_1C] ecx +
jl loc_477A01  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_477A01  +
mov eax [esp+48h+var_30] +
lea ecx [edx-1] +
test eax eax +
setz al  +
test ecx ecx +
jg loc_477B53  +
test al al +
jz loc_4779C2  +
mov ebp [esp+48h+arg_4] +
xor eax eax +
test ebp ebp +
jz loc_477A3B  +
mov ebp 1 +
shl ebp cl +
sar ecx 5 +
and ebp [ebx+ecx*4+14h] +
mov dword ptr [esp+48h+var_48+4] edx +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47BEE0  +
mov eax [esp+48h+arg_C] +
test ebp ebp +
mov dword ptr [eax] 2 +
jnz loc_477B85  +
mov edx [esp+48h+var_30] +
mov eax [esp+48h+var_1C] +
test edx edx +
jz loc_477A16  +
mov esi 50h +
jmp loc_477A16  +
mov eax [esp+48h+arg_C] +
xor esi esi +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [eax] 50h +
mov eax ecx +
mov edx [esp+48h+var_38] +
mov [edx] eax +
mov eax [esp+48h+arg_0] +
mov [esp+48h+var_40] ebx +
mov dword ptr [esp+48h+var_48+4] edi +
mov dword ptr [esp+48h+var_48] eax +
call sub_47BDF0  +
mov eax [esp+48h+arg_C] +
or [eax] esi +
mov eax 1 +
mov dword ptr [esp+48h+var_48] ebx +
mov [esp+48h+var_38] eax +
call sub_47B2B0  +
mov eax [esp+48h+var_38] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+8] +
cmp edx eax +
jge loc_477A16  +
mov eax [esp+48h+arg_C] +
add edx 1 +
xor esi esi +
mov [esp+48h+var_1C] edx +
mov dword ptr [eax] 0A3h +
call _errno  +
mov dword ptr [eax] 22h +
mov eax [esp+48h+var_1C] +
mov dword ptr [ebx+10h] 0 +
jmp loc_477A16  +
mov edx [esp+48h+arg_4] +
test edx edx +
jz loc_477AB7  +
test esi esi +
jnz loc_477B22  +
mov [esp+48h+var_30] 0 +
jmp loc_477982  +
mov ecx [esp+48h+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_477A3B  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_477A3B  +
jmp loc_477940  +
xor eax eax +
jmp loc_477A3B  +
mov dword ptr [esp+48h+var_48] ebx +
call sub_477800  +
mov ecx edi +
and ecx 1Fh +
mov ebx eax +
jz loc_477ADA  +
mov eax 20h +
sub eax ecx +
mov ecx eax +
mov eax [ebx+10h] +
bsr eax [ebx+eax*4+10h] +
xor eax 1Fh +
cmp ecx eax +
jz loc_477B45  +
mov eax [esp+48h+var_30] +
test eax eax +
jnz loc_477AFD  +
mov eax [ebx+14h] +
mov [esp+48h+var_30] eax +
and [esp+48h+var_30] 1 +
mov dword ptr [esp+48h+var_48+4] 1 +
mov esi 20h +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47BEE0  +
mov eax [esp+48h+var_1C] +
add eax 1 +
mov [esp+48h+var_1C] eax +
jmp loc_477982  +
neg esi  +
mov dword ptr [esp+48h+var_48+4] esi +
xor esi esi +
mov dword ptr [esp+48h+var_48] ebx +
call sub_47B720  +
mov [esp+48h+var_30] 0 +
mov ebx eax +
mov eax [esp+48h+var_1C] +
jmp loc_477982  +
mov eax [esp+48h+var_1C] +
mov esi 20h +
jmp loc_477982  +
test al al +
jz loc_4779C2  +
mov dword ptr [esp+48h+var_48+4] ecx +
mov dword ptr [esp+48h+var_48] ebx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_34] ecx +
call sub_47BE60  +
mov edx [esp+48h+var_2C] +
mov ecx [esp+48h+var_34] +
test eax eax +
mov [esp+48h+var_30] eax +
setz al  +
jmp loc_4779B4  +
mov dword ptr [esp+48h+var_48] ebx +
mov esi 60h +
call sub_477800  +
mov ebx eax +
mov eax [esp+48h+var_1C] +
jmp loc_477A16  +
***
mov edx [esp+4] +
lea eax [edx+14h] +
mov edx [edx+10h] +
lea ecx [eax+edx*4] +
jmp loc_477BBE  +
add eax 4 +
cmp ecx eax +
mov dword ptr [eax-4] 0FFFFFFFFh +
jbe locret_477BD0  +
mov edx [eax] +
test edx edx +
jz loc_477BB0  +
sub edx 1 +
mov [eax] edx +
retn   +
***
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
lea ebx [esi+1Fh] +
sar ebx 5 +
cmp ebx [eax+4] +
jg loc_477C43  +
mov edx esi +
and esi 1Fh +
sar edx 5 +
cmp esi 1 +
sbb edx 0FFFFFFFFh +
lea ebx [eax+14h] +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
mov [eax+10h] edx +
jnb loc_477C2F  +
mov edx ebx +
add edx 4 +
cmp ecx edx +
mov dword ptr [edx-4] 0FFFFFFFFh +
ja loc_477C15  +
sub ecx eax +
lea edx [ecx-15h] +
shr edx 2 +
lea ebx [ebx+edx*4+4] +
test esi esi +
jz loc_477C3D  +
mov ecx 20h +
sub ecx esi +
shr dword ptr [ebx-4] cl +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] eax +
call sub_47B2B0  +
mov [esp+14h+var_14] ebx +
call sub_47B1E0  +
jmp loc_477BF8  +
***
push esi  +
push ebx  +
sub esp 0CCh +
call localeconv  +
mov esi [eax] +
mov dword ptr [esp+0CCh+var_CC] esi +
call strlen  +
mov [esp+0CCh+var_28] 0 +
mov [esp+0CCh+var_18] 0 +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+arg_8] +
fldz   +
fstp  [esp+0CCh+var_14] +
mov eax [eax] +
mov [esp+0CCh+var_A0] eax +
mov eax [esp+0CCh+arg_0] +
mov ecx eax +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx] +
cmp dl 2Dh +
ja loc_477E20  +
movzx eax dl +
jmp ds:off_4D526C[eax*4]  +
mov eax [esp+0CCh+arg_0] +
xor ecx ecx +
mov [esp+0CCh+var_28] 6 +
mov [esp+0CCh+var_90] 0 +
mov [esp+0CCh+var_1C] eax +
mov edx [esp+0CCh+arg_4] +
test edx edx +
jz loc_477D0E  +
mov eax [esp+0CCh+var_1C] +
mov esi [esp+0CCh+arg_4] +
mov [esi] eax +
mov eax [esp+0CCh+var_90] +
test eax eax +
jnz loc_477D56  +
test ecx ecx +
jz loc_477D44  +
mov eax [esp+0CCh+var_A0] +
mov [esp+0CCh+var_C4] ecx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+arg_10] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BDF0  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+var_28] +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or [esp+0CCh+var_28] 8 +
jmp loc_477D16  +
mov [esp+0CCh+var_90] 0 +
lea eax [ecx+1] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx+1] +
test dl dl +
jz loc_477CD0  +
mov ecx eax +
cmp dl 30h +
mov [esp+0CCh+var_A4] ecx +
mov [esp+0CCh+var_94] 0 +
jz loc_4783B2  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+10h] +
mov [esp+0CCh+var_54] eax +
lea eax [edx-30h] +
cmp al 9 +
ja loc_479243  +
mov eax [esp+0CCh+var_A4] +
xor edi edi +
xor ebp ebp +
mov [esp+0CCh+var_AC] esi +
xor ebx ebx +
mov esi edi +
add eax 1 +
jmp loc_477DE5  +
lea ecx [ebp+ebp*4+0] +
lea ebp [edx+ecx*2-30h] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
add ebx 1 +
mov edi eax +
add eax 1 +
lea ecx [edx-30h] +
cmp cl 9 +
ja loc_477E30  +
cmp ebx 8 +
jle loc_477DC3  +
cmp ebx 0Fh +
jg loc_477DCB  +
lea ecx [esi+esi*4] +
lea esi [edx+ecx*2-30h] +
jmp loc_477DCB  +
mov [esp+0CCh+var_90] 1 +
jmp loc_477D68  +
add ecx 1 +
mov [esp+0CCh+var_1C] ecx +
movsx edx byte ptr [ecx] +
cmp dl 2Dh +
jbe loc_477CC5  +
nop   +
lea esi [esi+0] +
mov [esp+0CCh+var_90] 0 +
jmp loc_477D80  +
mov dword ptr [esp+0CCh+var_8C] esi +
mov esi [esp+0CCh+var_AC] +
mov ecx edi +
movsx eax byte ptr [esi] +
cmp eax edx +
mov dword ptr [esp+0CCh+var_9C] eax +
jz loc_478400  +
mov [esp+0CCh+var_AC] ebx +
xor edi edi +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 0 +
mov eax edx +
and eax 0FFFFFFDFh +
cmp eax 45h +
jnz loc_477F85  +
mov eax [esp+0CCh+var_AC] +
or eax edi +
or eax [esp+0CCh+var_94] +
jz loc_478080  +
mov eax [esp+0CCh+var_1C] +
mov [esp+0CCh+arg_0] eax +
add eax 1 +
mov [esp+0CCh+var_1C] eax +
mov eax [esp+0CCh+arg_0] +
movsx edx byte ptr [eax+1] +
cmp dl 2Bh +
jz loc_4791E0  +
cmp dl 2Dh +
jz loc_4785A4  +
mov [esp+0CCh+var_80] 0 +
lea eax [edx-30h] +
cmp eax 9 +
ja loc_4786D0  +
cmp edx 30h +
jnz loc_477EE7  +
mov eax [esp+0CCh+var_1C] +
add eax 1 +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
add eax 1 +
cmp edx 30h +
jz loc_477ED5  +
lea ecx [edx-31h] +
xor eax eax +
cmp ecx 8 +
ja loc_477F87  +
mov eax [esp+0CCh+var_1C] +
lea ecx [edx-30h] +
lea esi [eax+1] +
mov [esp+0CCh+var_1C] esi +
mov [esp+0CCh+var_78] eax +
mov [esp+0CCh+var_7C] esi +
mov esi eax +
movzx eax byte ptr [eax+1] +
movsx edx al +
sub eax 30h +
cmp al 9 +
ja loc_477F5B  +
mov eax esi +
mov esi edx +
add eax 2 +
mov [esp+0CCh+var_74] edi +
lea esi [esi+0] +
lea edx [ecx+ecx*4] +
mov edi eax +
lea ecx [esi+edx*2-30h] +
mov [esp+0CCh+var_1C] eax +
movzx edx byte ptr [eax] +
add eax 1 +
movsx esi dl +
sub edx 30h +
cmp dl 9 +
jbe loc_477F30  +
mov [esp+0CCh+var_7C] edi +
mov edi [esp+0CCh+var_74] +
mov edx esi +
mov esi [esp+0CCh+var_7C] +
mov eax 4E1Fh +
sub esi [esp+0CCh+var_78] +
cmp esi 8 +
jg loc_477F76  +
cmp ecx 4E1Fh +
cmovle eax ecx +
mov esi [esp+0CCh+var_80] +
mov ecx eax +
neg ecx  +
test esi esi +
cmovnz eax ecx +
jmp loc_477F87  +
xor eax eax +
mov ecx [esp+0CCh+var_AC] +
test ecx ecx +
jnz loc_4780C6  +
mov eax [esp+0CCh+var_94] +
or eax edi +
jnz loc_4780BA  +
mov eax [esp+0CCh+var_84] +
test eax eax +
jnz loc_478080  +
cmp edx 4Eh +
jz loc_477FC8  +
jle loc_478074  +
cmp edx 69h +
jz loc_479318  +
cmp edx 6Eh +
jnz loc_478080  +
lea ebx [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC+4] offset aAn +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47BDA0  +
test eax eax +
jz loc_478080  +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+arg_C] +
mov edx [esp+0CCh+var_1C] +
mov [esp+0CCh+var_28] 4 +
mov eax [eax+8] +
mov [esp+0CCh+var_94] 0 +
mov [esp+0CCh+var_AC] eax +
add eax 1 +
mov [esi] eax +
cmp byte ptr [edx] 28h +
jz loc_4796B8  +
mov esi [esp+0CCh+arg_C] +
mov [esi] eax +
mov ecx [esp+0CCh+var_18] +
mov edi [esp+0CCh+var_94] +
test edi edi +
jz loc_477CF3  +
mov esi [esp+0CCh+var_54] +
test esi esi +
jnz loc_4786A0  +
mov edx [esp+0CCh+var_28] +
xor eax eax +
mov ebx [ecx+10h] +
and edx 0FFFFFFF8h +
test ebx ebx +
setnle al  +
add eax eax +
or eax edx +
test al 30h +
jnz loc_4780A5  +
mov [esp+0CCh+var_28] eax +
jmp loc_477CF3  +
cmp edx 49h +
jz loc_479318  +
lea esi [esi+0] +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_28] 6 +
mov ecx [esp+0CCh+var_18] +
mov [esp+0CCh+var_1C] eax +
jmp loc_477CF3  +
or eax 40h +
mov [esp+0CCh+var_28] eax +
call _errno  +
mov dword ptr [eax] 22h +
mov ecx [esp+0CCh+var_18] +
jmp loc_477CF3  +
sub eax dword ptr [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_90] +
mov [esp+0CCh+var_28] 1 +
mov [esp+0CCh+var_74] eax +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+0Ch] +
and eax 3 +
mov esi eax +
sub esi edi +
cmp eax 2 +
mov [esp+0CCh+var_64] esi +
jz loc_478111  +
mov esi edi +
add esi 1 +
cmp eax 3 +
mov [esp+0CCh+var_64] esi +
jz loc_478111  +
test eax eax +
setz al  +
movzx eax al +
mov [esp+0CCh+var_64] eax +
mov eax [esp+0CCh+var_AC] +
test ebx ebx +
mov esi 10h +
mov dword ptr [esp+0CCh+var_4C] ebp +
cmovz ebx eax +
cmp eax 10h +
cmovle esi eax +
xor edx edx +
mov dword ptr [esp+0CCh+var_4C+4] edx +
cmp esi 9 +
fild  [esp+0CCh+var_4C] +
fst  [esp+0CCh+var_14] +
jle loc_478175  +
fmul  ds:dbl_4D5418[esi*8] +
xor edx edx +
mov eax dword ptr [esp+0CCh+var_8C] +
mov dword ptr [esp+0CCh+var_4C+4] edx +
mov dword ptr [esp+0CCh+var_4C] eax +
fild  [esp+0CCh+var_4C] +
faddp st(1) st +
fstp  [esp+0CCh+var_14] +
jmp loc_478177  +
fstp  st +
cmp [esp+0CCh+var_AC] 0Fh +
jg loc_478189  +
cmp [esp+0CCh+var_A0] 35h +
jle loc_478303  +
mov eax [esp+0CCh+var_74] +
mov edx [esp+0CCh+var_AC] +
sub edx esi +
add eax edx +
cmp eax 0 +
jle loc_4790F9  +
mov edx eax +
and edx 0Fh +
jz loc_4781BA  +
fld  [esp+0CCh+var_14] +
fmul  ds:dbl_4D5460[edx*8] +
fstp  [esp+0CCh+var_14] +
and eax 0FFFFFFF0h +
jnz loc_4784E6  +
fld  [esp+0CCh+var_14] +
xor esi esi +
lea eax [esp+0CCh+var_24] +
mov [esp+0CCh+var_C0] eax +
lea eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_C4] eax +
fstp  [esp+0CCh+var_CC] +
call sub_47BAF0  +
mov ecx [esp+0CCh+var_24] +
add esi [esp+0CCh+var_20] +
mov edi [esp+0CCh+var_A0] +
mov edx esi +
mov [esp+0CCh+var_20] esi +
mov esi ecx +
sub esi edi +
test esi esi +
mov [esp+0CCh+var_18] eax +
jle loc_478239  +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BEE0  +
mov ecx edi +
add esi [esp+0CCh+var_20] +
mov [esp+0CCh+var_24] edi +
mov edx esi +
mov [esp+0CCh+var_20] esi +
lea eax [ecx+edx] +
mov [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+var_A0] +
sub [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+var_60] +
mov eax [eax+8] +
mov [esp+0CCh+var_94] eax +
add eax 1 +
cmp esi eax +
jg loc_479014  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+4] +
cmp esi eax +
mov [esp+0CCh+var_84] eax +
jge loc_479216  +
mov esi edx +
sub esi eax +
cmp esi 0 +
jle loc_478628  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
add [esp+0CCh+var_24] esi +
mov [esp+0CCh+var_18] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_20] eax +
mov eax [esp+0CCh+var_54] +
test eax eax +
jz loc_4786E5  +
mov eax [esp+0CCh+var_60] +
add eax 1 +
cmp [esp+0CCh+var_84] eax +
jle loc_4786E5  +
mov ecx [esp+0CCh+var_18] +
mov eax [esp+0CCh+arg_C] +
mov ebx [esp+0CCh+var_84] +
mov [esp+0CCh+var_28] 50h +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov [eax] ebx +
jmp loc_478040  +
cmp [esp+0CCh+var_74] 0 +
jz loc_479223  +
jle loc_478659  +
cmp [esp+0CCh+var_74] 16h +
jg loc_479258  +
mov eax [esp+0CCh+var_74] +
mov edx ds:dword_4D5340[eax*4] +
mov eax dword ptr [esp+0CCh+var_14] +
test eax eax +
jz loc_479450  +
bsf ecx eax +
mov eax 35h +
sub eax ecx +
mov edi [esp+0CCh+var_74] +
add eax edx +
fld  [esp+0CCh+var_14] +
cmp eax 35h +
setle al  +
lea ecx [esp+0CCh+var_28] +
movzx eax al +
fmul  ds:dbl_4D5460[edi*8] +
mov edi [esp+0CCh+var_64] +
mov [esp+0CCh+var_C0] ecx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov [esp+0CCh+var_C4] edi +
fstp  [esp+0CCh+var_14] +
mov eax [esp+0CCh+arg_10] +
mov ecx [esp+0CCh+arg_C] +
mov edx [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC] eax +
lea eax [esp+0CCh+var_14] +
call sub_4778A0  +
test eax eax +
jnz loc_4780BA  +
xor eax eax +
jmp loc_47818D  +
movzx eax byte ptr [ecx+1] +
cmp al 58h +
jz loc_479052  +
add ecx 1 +
cmp al 78h +
jz loc_479052  +
lea esi [esi+0] +
mov eax ecx +
mov [esp+0CCh+var_1C] ecx +
add ecx 1 +
movsx edx byte ptr [ecx-1] +
cmp dl 30h +
jz loc_4783D0  +
xor ecx ecx +
test dl dl +
jz loc_477CF3  +
mov [esp+0CCh+var_A4] eax +
mov [esp+0CCh+var_94] 1 +
jmp loc_477D95  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_4795A2  +
cmp al [ecx+1] +
jnz loc_477E49  +
mov eax 1 +
jmp loc_478429  +
cmp dl [ecx+eax] +
jnz loc_4784C7  +
add eax 1 +
movzx edx byte ptr [esi+eax] +
mov edi eax +
test dl dl +
jnz loc_478420  +
add ecx edi +
test ebx ebx +
mov [esp+0CCh+var_1C] ecx +
movsx edx byte ptr [ecx] +
jz loc_4785CD  +
mov [esp+0CCh+var_AC] ebx +
xor edi edi +
mov dword ptr [esp+0CCh+var_9C] 0 +
lea esi [edx-30h] +
cmp esi 9 +
mov [esp+0CCh+var_84] 1 +
ja loc_477E5F  +
mov ecx [esp+0CCh+var_1C] +
add edi 1 +
test esi esi +
jz loc_479305  +
add dword ptr [esp+0CCh+var_9C] edi +
cmp edi 1 +
mov eax [esp+0CCh+var_AC] +
jz loc_47954B  +
add edi eax +
mov [esp+0CCh+var_AC] edi +
sub edi 1 +
mov [esp+0CCh+var_84] ebx +
mov ebx dword ptr [esp+0CCh+var_8C] +
jmp loc_4784B0  +
lea ebp [ebp+ebp*4+0] +
add ebp ebp +
cmp eax edi +
jz loc_47953C  +
add eax 1 +
lea edx [eax-1] +
cmp edx 8 +
jle loc_4784A2  +
cmp eax 10h +
jg loc_4784A8  +
lea ebx [ebx+ebx*4] +
add ebx ebx +
jmp loc_4784A8  +
mov edx dword ptr [esp+0CCh+var_9C] +
xor edi edi +
mov [esp+0CCh+var_AC] ebx +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 0 +
jmp loc_477E5F  +
sar eax 4 +
cmp eax 0Fh +
jle loc_47962C  +
fld  ds:dbl_4D5580 +
mov ecx eax +
xor edi edi +
lea esi [esi+0] +
mov edx dword ptr [esp+0CCh+var_14+4] +
sub ecx 10h +
mov esi edx +
and edx 800FFFFFh +
or edx 3FF00000h +
and esi 7FF00000h +
mov dword ptr [esp+0CCh+var_14+4] edx +
shr esi 14h +
cmp ecx 0Fh +
fld  [esp+0CCh+var_14] +
lea edi [edi+esi-3FFh] +
fmul st st(1) +
fstp  [esp+0CCh+var_14] +
jg loc_478500  +
fstp  st +
and eax 0Fh +
mov ecx dword ptr [esp+0CCh+var_14+4] +
mov edx ecx +
and ecx 800FFFFFh +
and edx 7FF00000h +
or ecx 3FF00000h +
shr edx 14h +
lea esi [edi+edx-3FFh] +
xor edx edx +
mov dword ptr [esp+0CCh+var_14+4] ecx +
test eax eax +
fld  [esp+0CCh+var_14] +
jz loc_4781CC  +
test al 1 +
jz loc_478591  +
fmul  ds:dbl_4D5560[edx*8] +
add edx 1 +
sar eax 1 +
jnz loc_478586  +
fst  [esp+0CCh+var_14] +
jmp loc_4781CC  +
mov [esp+0CCh+var_80] 1 +
mov eax [esp+0CCh+arg_0] +
add eax 2 +
mov [esp+0CCh+var_1C] eax +
mov eax [esp+0CCh+arg_0] +
movsx edx byte ptr [eax+2] +
jmp loc_477EBA  +
cmp edx 30h +
jnz loc_479671  +
lea eax [ecx+1] +
lea esi [esi+0] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [eax] +
mov edi eax +
sub edi ecx +
add eax 1 +
cmp edx 30h +
jz loc_4785E0  +
lea eax [edx-31h] +
cmp eax 8 +
ja loc_4792D1  +
mov eax [esp+0CCh+var_1C] +
lea esi [edx-30h] +
mov dword ptr [esp+0CCh+var_9C] edi +
mov edi 1 +
mov [esp+0CCh+var_AC] 0 +
mov [esp+0CCh+var_A4] eax +
mov ecx eax +
jmp loc_478476  +
jz loc_4782A9  +
add ecx esi +
test ecx ecx +
mov [esp+0CCh+var_24] ecx +
jle loc_479633  +
mov eax [esp+0CCh+var_18] +
neg esi  +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BEE0  +
jmp loc_4782A9  +
mov edi [esp+0CCh+var_74] +
cmp edi 0FFFFFFEAh +
mov eax edi +
jl loc_47818D  +
neg eax  +
fld  [esp+0CCh+var_14] +
fdiv  ds:dbl_4D5460[eax*8] +
lea eax [esp+0CCh+var_28] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_64] +
fstp  [esp+0CCh+var_14] +
mov dword ptr [esp+0CCh+var_CC+4] 0 +
mov [esp+0CCh+var_C4] eax +
jmp loc_47837F  +
mov dword ptr [ecx+10h] 0 +
mov [esp+0CCh+var_28] 50h +
call _errno  +
mov ecx [esp+0CCh+var_18] +
mov dword ptr [eax] 22h +
jmp loc_477CF3  +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_1C] eax +
xor eax eax +
jmp loc_477F87  +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_94] 1 +
mov [esp+0CCh+var_60] eax +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
xor ebx ebx +
mov [esp+0CCh+var_C0] ebp +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_AC] +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BC20  +
mov esi [esp+0CCh+var_74] +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_68] eax +
add eax 0Ch +
mov [esp+0CCh+var_5C] eax +
mov eax [esp+0CCh+var_A0] +
add eax 1 +
mov [esp+0CCh+var_58] eax +
mov eax esi +
neg eax  +
test esi esi +
cmovns eax ebx +
mov [esp+0CCh+var_80] eax +
mov eax [esp+0CCh+var_64] +
and eax 1 +
mov [esp+0CCh+var_50] eax +
jmp loc_478930  +
mov esi [esp+0CCh+var_64] +
test esi esi +
jz loc_478B1D  +
mov eax [esp+0CCh+var_50] +
xor eax ebx +
mov [esp+0CCh+var_78] eax +
jz loc_479380  +
test ebx ebx +
jz loc_478D90  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_28] 21h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_70] 20h +
mov [esp+0CCh+var_7C] 0 +
mov eax [esp+0CCh+var_24] +
mov ebx [esp+0CCh+var_20] +
mov edx [esp+0CCh+var_94] +
add ebx eax +
test edx edx +
mov [esp+0CCh+var_6C] ebx +
jnz loc_4787D1  +
cmp [esp+0CCh+var_A0] eax +
jg loc_478F62  +
lea eax [esp+0CCh+var_2C] +
fld  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_C0] eax +
lea eax [esp+0CCh+var_30] +
mov [esp+0CCh+var_C4] eax +
fstp  [esp+0CCh+var_CC] +
call sub_47BAF0  +
mov ebp eax +
mov eax [esp+0CCh+var_30] +
test eax eax +
js loc_478F97  +
jz loc_478814  +
mov dword ptr [esp+0CCh+var_CC] ebp +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B720  +
mov ebp eax +
mov eax [esp+0CCh+var_7C] +
mov ebx [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebp +
test eax eax +
mov dword ptr [esp+0CCh+var_CC] ebx +
jz loc_478CA6  +
call sub_47B880  +
mov ecx [esp+0CCh+var_94] +
mov edx [ebx+10h] +
test ecx ecx +
mov [esp+0CCh+var_18] eax +
jnz loc_478882  +
lea ecx [edx-1] +
cmp ecx [eax+10h] +
jge loc_478864  +
add edx 3 +
bsr ecx [eax+edx*4+4] +
bsr edx [ebx+edx*4+4] +
xor ecx 1Fh +
xor edx 1Fh +
cmp ecx edx +
jle loc_478882  +
mov ecx [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] ecx +
jnz loc_478D42  +
sub [esp+0CCh+var_24] 1 +
mov [esp+0CCh+var_94] 1 +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47B2B0  +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47B2B0  +
mov eax [esp+0CCh+var_78] +
test eax eax +
jnz loc_478B90  +
test esi esi +
jz loc_4788F0  +
mov eax [esp+0CCh+var_20] +
add eax [esp+0CCh+var_24] +
cmp [esp+0CCh+var_6C] eax +
jnz loc_4788F0  +
fld  [esp+0CCh+var_9C] +
fmul  ds:dbl_4D53B0 +
fld  [esp+0CCh+var_8C] +
fsub  ds:flt_4D53A4 +
fld  st(1) +
fchs   +
fucomip st st(1) +
jbe loc_478F30  +
fstp  st +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
jbe loc_4788F0  +
jmp loc_478F4E  +
fstp  st +
lea esi [esi+0] +
mov eax [esp+0CCh+var_94] +
mov dword ptr [esp+0CCh+var_9C] 0 +
test eax eax +
jz loc_478D76  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov dword ptr [esp+0CCh+var_CC] edi +
call sub_47B2B0  +
mov esi [esp+0CCh+var_68] +
mov eax [esi+4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B1E0  +
mov edx [esi+10h] +
mov esi [esp+0CCh+var_5C] +
lea edx ds:8[edx*4] +
mov [esp+0CCh+var_C4] edx +
mov [esp+0CCh+var_A4] eax +
add eax 0Ch +
mov dword ptr [esp+0CCh+var_CC+4] esi +
xor esi esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call memcpy  +
mov eax [esp+0CCh+var_18] +
mov eax [eax+4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B1E0  +
mov ebx eax +
mov [esp+0CCh+var_AC] eax +
mov eax [esp+0CCh+var_18] +
lea edx [ebx+0Ch] +
mov ecx [eax+10h] +
add eax 0Ch +
mov dword ptr [esp+0CCh+var_CC] edx +
mov dword ptr [esp+0CCh+var_CC+4] eax +
lea ecx ds:8[ecx*4] +
mov [esp+0CCh+var_C4] ecx +
call memcpy  +
mov edi dword ptr [esp+0CCh+var_9C] +
mov ebp [esp+0CCh+var_24] +
mov dword ptr [esp+0CCh+var_CC] 1 +
sub ebp edi +
add edi [esp+0CCh+var_20] +
call sub_47B400  +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+var_74] +
test eax eax +
cmovg esi eax +
test edi edi +
js loc_478D35  +
mov eax [esp+0CCh+var_80] +
mov edx esi +
lea ebx [eax+edi] +
mov eax [esp+0CCh+var_58] +
add edi ebp +
sub edi [esp+0CCh+var_A0] +
sub eax ebp +
cmp [esp+0CCh+var_84] edi +
jle loc_4789FB  +
sub edi [esp+0CCh+var_84] +
add eax edi +
lea edi [ebx+eax] +
add edx eax +
cmp edi edx +
mov eax edx +
cmovle eax edi +
cmp eax ebx +
cmovg eax ebx +
test eax eax +
jle loc_478A16  +
sub edi eax +
sub edx eax +
sub ebx eax +
mov eax [esp+0CCh+var_80] +
test eax eax +
jz loc_478A62  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_A8] +
mov [esp+0CCh+var_7C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B580  +
mov ecx [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC+4] ecx +
mov dword ptr [esp+0CCh+var_CC] eax +
mov [esp+0CCh+var_A8] eax +
call sub_47B430  +
mov ecx [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] ecx +
mov dword ptr [esp+0CCh+var_8C] eax +
call sub_47B2B0  +
mov eax dword ptr [esp+0CCh+var_8C] +
mov edx [esp+0CCh+var_7C] +
mov [esp+0CCh+var_AC] eax +
sub edi dword ptr [esp+0CCh+var_9C] +
cmp edi 0 +
jle loc_478D10  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC+4] edi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
mov edx dword ptr [esp+0CCh+var_9C] +
mov [esp+0CCh+var_AC] eax +
test esi esi +
jz loc_478AAB  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] esi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B580  +
mov edx dword ptr [esp+0CCh+var_9C] +
mov [esp+0CCh+var_A4] eax +
test edx edx +
jle loc_478AC3  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
mov [esp+0CCh+var_A4] eax +
test ebx ebx +
jle loc_478ADB  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
mov [esp+0CCh+var_A8] eax +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B880  +
cmp dword ptr [eax+10h] 1 +
mov edi eax +
jle loc_478B85  +
mov eax [esp+0CCh+var_A8] +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B830  +
test eax eax +
jle loc_478760  +
test eax eax +
js loc_47939B  +
jz loc_47947D  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47BD10  +
fld  ds:flt_4D53A0 +
fucomip st st(1) +
jb loc_478E40  +
fstp  st +
test ebx ebx +
jnz loc_478FC3  +
mov [esp+0CCh+var_78] 0 +
cmp ebp 1 +
jle loc_479569  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_70] 10h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_7C] 1 +
jmp loc_4787AB  +
mov eax [eax+14h] +
test eax eax +
jnz loc_478AFB  +
mov ebp [esp+0CCh+var_AC] +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_4790CF  +
mov eax [esp+0CCh+var_20] +
mov ebx [esp+0CCh+arg_C] +
mov [ebx] eax +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47B2B0  +
mov eax [esp+0CCh+var_A4] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+var_68] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov dword ptr [esp+0CCh+var_CC] edi +
call sub_47B2B0  +
mov eax [esp+0CCh+arg_8] +
mov esi [esp+0CCh+var_20] +
cmp [eax+8] esi +
jge loc_47802D  +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+0Ch] +
and eax 3 +
cmp eax 2 +
jz loc_47952B  +
cmp eax 3 +
jz loc_47946C  +
cmp eax 1 +
jz loc_47901C  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B2B0  +
mov eax [esp+0CCh+arg_8] +
mov ebx [esp+0CCh+arg_C] +
mov [esp+0CCh+var_18] 0 +
mov [esp+0CCh+var_28] 11h +
mov eax [eax+8] +
mov [ebx] eax +
mov eax [esp+0CCh+arg_8] +
mov ebx [esp+0CCh+arg_10] +
mov ecx [eax] +
lea eax [ecx+1Fh] +
sar eax 5 +
lea edx [ebx+eax*4] +
mov eax ebx +
cmp ebx edx +
jnb loc_478C8E  +
lea esi [esi+0] +
add eax 4 +
cmp edx eax +
mov dword ptr [eax-4] 0FFFFFFFFh +
ja loc_478C80  +
and ecx 1Fh +
jz loc_478C9F  +
mov eax 20h +
sub eax ecx +
mov ecx eax +
shr dword ptr [edx-4] cl +
xor ecx ecx +
jmp loc_478034  +
call sub_47C040  +
mov edx [eax+10h] +
mov [esp+0CCh+var_18] eax +
lea ecx [edx-1] +
cmp ecx [ebx+10h] +
jge loc_478CD8  +
add edx 3 +
bsr ecx [eax+edx*4+4] +
bsr edx [ebx+edx*4+4] +
xor ecx 1Fh +
xor edx 1Fh +
cmp ecx edx +
jge loc_478882  +
mov ecx [esp+0CCh+var_94] +
test ecx ecx +
jz loc_478FF0  +
mov eax [esp+0CCh+var_24] +
add eax 1 +
cmp [esp+0CCh+var_A0] eax +
mov [esp+0CCh+var_24] eax +
mov eax 0 +
cmovnz eax ecx +
mov [esp+0CCh+var_94] eax +
jmp loc_478882  +
jz loc_478A8B  +
mov eax [esp+0CCh+var_AC] +
neg edi  +
mov dword ptr [esp+0CCh+var_CC+4] edi +
mov dword ptr [esp+0CCh+var_9C] edx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BEE0  +
mov edx dword ptr [esp+0CCh+var_9C] +
jmp loc_478A8B  +
mov edx esi +
mov ebx [esp+0CCh+var_80] +
sub edx edi +
jmp loc_4789E3  +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
mov dword ptr [esp+0CCh+var_CC] ebp +
sub [esp+0CCh+var_20] 1 +
sub [esp+0CCh+var_60] 1 +
mov [esp+0CCh+var_18] eax +
call sub_47B2B0  +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47B2B0  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47C000  +
mov dword ptr [esp+0CCh+var_9C] eax +
jmp loc_478904  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
mov [esp+0CCh+var_28] 11h +
jz loc_478B5B  +
xor edx edx +
mov esi [esp+0CCh+var_18] +
cmp [esp+0CCh+var_A0] 1Fh +
mov eax [esp+0CCh+var_A0] +
jle loc_478DE7  +
mov ebx [esi+14h] +
test ebx ebx +
jnz loc_478B5B  +
mov eax [esp+0CCh+var_A0] +
xor edx edx +
jmp loc_478DDC  +
mov ecx [esi+edx*4+14h] +
test ecx ecx +
jnz loc_478B5B  +
sub eax 20h +
add edx 1 +
cmp eax 1Fh +
jg loc_478DD0  +
cmp eax 1 +
jle loc_478E06  +
lea edx [esi+edx*4] +
sub eax 1 +
mov ebx [edx+14h] +
bsf ecx ebx +
shr ebx cl +
cmp eax ecx +
mov [edx+14h] ebx +
jg loc_478B5B  +
mov eax [esp+0CCh+var_60] +
mov dword ptr [esp+0CCh+var_CC] esi +
mov ebp [esp+0CCh+var_AC] +
sub eax 1 +
mov [esp+0CCh+var_20] eax +
mov eax [esp+0CCh+var_A0] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov [esp+0CCh+var_24] eax +
call sub_477BE0  +
mov [esp+0CCh+var_18] eax +
jmp loc_478B94  +
fld  ds:flt_4D53A4 +
cmp ebx 1 +
fmul st(1) st +
sbb eax eax +
mov [esp+0CCh+var_70] eax +
xor eax eax +
and [esp+0CCh+var_70] 10h +
add [esp+0CCh+var_70] 10h +
cmp ebx 1 +
setb al  +
fld  st(1) +
fstp  [esp+0CCh+var_8C] +
fld  ds:dbl_4D53A8 +
fucomip st st(2) +
mov [esp+0CCh+var_7C] eax +
jbe loc_478FB0  +
fnstcw  [esp+0CCh+var_42] +
fld  st(1) +
movzx eax [esp+0CCh+var_42] +
mov ah 0Ch +
mov [esp+0CCh+var_44] ax +
mov eax [esp+0CCh+var_64] +
fldcw  [esp+0CCh+var_44] +
fistp  [esp+0CCh+var_40] +
fldcw  [esp+0CCh+var_42] +
mov esi [esp+0CCh+var_40] +
cmp eax 1 +
mov [esp+0CCh+var_40] esi +
fild  [esp+0CCh+var_40] +
fsub st(2) st +
fxch  st(2) +
fst  [esp+0CCh+var_8C] +
jz loc_4791ED  +
cmp eax 2 +
jnz loc_4790BC  +
fstp  st +
fstp  st +
mov ecx [esp+0CCh+var_7C] +
fstp  [esp+0CCh+var_9C] +
test ecx ecx +
jnz loc_478F20  +
fldz   +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
ja loc_478EFE  +
jmp loc_478F20  +
fstp  st +
add esi 1 +
mov eax 30h +
sub eax [esp+0CCh+var_70] +
mov [esp+0CCh+var_40] esi +
fild  [esp+0CCh+var_40] +
mov [esp+0CCh+var_70] eax +
fstp  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_78] 0 +
jmp loc_4787AB  +
fucomip st st(1) +
jbe loc_4788E7  +
fsubr  ds:flt_4D539C +
fld  [esp+0CCh+var_8C] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_4788F0  +
mov eax [esp+0CCh+var_70] +
mov ebp [esp+0CCh+var_AC] +
or [esp+0CCh+var_28] eax +
jmp loc_478B94  +
mov ebp [esp+0CCh+var_A0] +
mov ebx ebp +
sub ebx eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
sub [esp+0CCh+var_20] ebx +
mov [esp+0CCh+var_24] ebp +
mov [esp+0CCh+var_18] eax +
jmp loc_4787D1  +
neg eax  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov dword ptr [esp+0CCh+var_CC] ebp +
call sub_47BEE0  +
jmp loc_478814  +
fstp  st +
fstp  st +
fld  [esp+0CCh+var_8C] +
xor esi esi +
fstp  [esp+0CCh+var_9C] +
jmp loc_478F20  +
fld1   +
xor esi esi +
fst  [esp+0CCh+var_9C] +
mov [esp+0CCh+var_70] 20h +
fstp  [esp+0CCh+var_8C] +
mov [esp+0CCh+var_78] 0 +
mov [esp+0CCh+var_7C] 0 +
jmp loc_4787AB  +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
xor esi esi +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BEE0  +
add [esp+0CCh+var_20] 1 +
add [esp+0CCh+var_60] 1 +
jmp loc_478882  +
mov [esp+0CCh+var_94] 0 +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_28] 0A3h +
mov dword ptr [eax+10h] 0 +
call _errno  +
mov dword ptr [eax] 22h +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+8] +
add eax 1 +
jmp loc_478024  +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_BC] eax +
lea eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+arg_C] +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
lea eax [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47C1C0  +
mov ecx [esp+0CCh+var_18] +
cmp eax 6 +
mov [esp+0CCh+var_28] eax +
jnz loc_477CF3  +
mov eax [esp+0CCh+arg_0] +
mov [esp+0CCh+var_90] 0 +
mov [esp+0CCh+var_1C] eax +
jmp loc_477CF3  +
fucomip st st(1) +
fstp  st +
jnb loc_478EFC  +
fstp  [esp+0CCh+var_9C] +
jmp loc_478F20  +
mov eax [esp+0CCh+var_24] +
mov ebx [esp+0CCh+var_A0] +
sub ebx eax +
cmp ebx 0 +
jnz loc_479294  +
mov eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_94] 0 +
jmp loc_478BA7  +
jz loc_4781C3  +
neg eax  +
mov edx eax +
and edx 0Fh +
jz loc_47911D  +
fld  [esp+0CCh+var_14] +
fdiv  ds:dbl_4D5460[edx*8] +
fstp  [esp+0CCh+var_14] +
and eax 0FFFFFFF0h +
jz loc_4781C3  +
sar eax 4 +
cmp eax 0Fh +
mov edi eax +
jle loc_4796EF  +
fld  ds:dbl_4D5540 +
mov edx eax +
xor esi esi +
nop   +
mov eax dword ptr [esp+0CCh+var_14+4] +
sub edx 10h +
mov ecx eax +
and eax 800FFFFFh +
or eax 3FF00000h +
and ecx 7FF00000h +
mov dword ptr [esp+0CCh+var_14+4] eax +
shr ecx 14h +
cmp edx 0Fh +
fld  [esp+0CCh+var_14] +
lea esi [esi+ecx-3FFh] +
fmul st st(1) +
fstp  [esp+0CCh+var_14] +
jg loc_479140  +
fstp  st +
and edi 0Fh +
mov edx dword ptr [esp+0CCh+var_14+4] +
mov eax edx +
and edx 800FFFFFh +
and eax 7FF00000h +
or edx 3FF00000h +
shr eax 14h +
lea esi [esi+eax-3FFh] +
xor eax eax +
mov dword ptr [esp+0CCh+var_14+4] edx +
test edi edi +
fld  [esp+0CCh+var_14] +
jle loc_4781CC  +
test edi 1 +
jz loc_4791D2  +
fmul  ds:dbl_4D5520[eax*8] +
sar edi 1 +
add eax 1 +
test edi edi +
jg loc_4791C3  +
jmp loc_478598  +
mov [esp+0CCh+var_80] 0 +
jmp loc_4785AC  +
fstp  st +
fstp  st +
mov ebx [esp+0CCh+var_7C] +
fstp  [esp+0CCh+var_9C] +
test ebx ebx +
jz loc_478F20  +
fldz   +
fld  [esp+0CCh+var_8C] +
fucomip st st(1) +
fstp  st +
ja loc_478EFE  +
jmp loc_478F20  +
mov [esp+0CCh+var_94] 0 +
jmp loc_4786F5  +
lea eax [esp+0CCh+var_28] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_64] +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
mov [esp+0CCh+var_C4] eax +
jmp loc_47837F  +
mov ecx [esp+0CCh+var_A4] +
xor ebp ebp +
xor ebx ebx +
mov dword ptr [esp+0CCh+var_8C] 0 +
jmp loc_477E3A  +
mov edi [esp+0CCh+var_74] +
mov edx 25h +
sub edx [esp+0CCh+var_AC] +
cmp edi edx +
mov eax edi +
jg loc_47818D  +
mov eax 0Fh +
fld  [esp+0CCh+var_14] +
sub eax [esp+0CCh+var_AC] +
fmul  ds:dbl_4D5460[eax*8] +
sub edi eax +
fmul  ds:dbl_4D5460[edi*8] +
jmp loc_478678  +
jle loc_479610  +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC+4] ebx +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47B720  +
mov [esp+0CCh+var_18] eax +
mov eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_94] 0 +
sub eax ebx +
mov [esp+0CCh+var_20] eax +
jmp loc_478BA7  +
mov [esp+0CCh+var_AC] 0 +
mov dword ptr [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_84] 1 +
jmp loc_477E5F  +
xor edi edi +
cmp [esp+0CCh+var_AC] 10h +
jg loc_479305  +
mov eax dword ptr [esp+0CCh+var_8C] +
lea eax [eax+eax*4] +
lea eax [esi+eax*2] +
mov dword ptr [esp+0CCh+var_8C] eax +
lea eax [ecx+1] +
mov [esp+0CCh+var_1C] eax +
movsx edx byte ptr [ecx+1] +
jmp loc_478458  +
lea ebx [esp+0CCh+var_1C] +
mov dword ptr [esp+0CCh+var_CC+4] offset unk_4D5260 +
mov dword ptr [esp+0CCh+var_CC] ebx +
call sub_47BDA0  +
test eax eax +
jz loc_478080  +
mov dword ptr [esp+0CCh+var_CC+4] offset aInity +
mov dword ptr [esp+0CCh+var_CC] ebx +
sub [esp+0CCh+var_1C] 1 +
call sub_47BDA0  +
test eax eax +
jnz loc_47935B  +
add [esp+0CCh+var_1C] 1 +
mov eax [esp+0CCh+arg_8] +
mov [esp+0CCh+var_28] 3 +
mov [esp+0CCh+var_94] 0 +
mov eax [eax+8] +
add eax 1 +
jmp loc_478024  +
cmp ebx 1 +
mov ebp [esp+0CCh+var_AC] +
sbb eax eax +
and eax 10h +
add eax 11h +
mov [esp+0CCh+var_28] eax +
jmp loc_478B94  +
cmp ebx 1 +
sbb eax eax +
and eax 10h +
add eax 11h +
test ebx ebx +
mov dword ptr [esp+0CCh+var_9C] ebp +
mov ebp [esp+0CCh+var_AC] +
mov [esp+0CCh+var_28] eax +
jnz loc_478B94  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jg loc_478B94  +
mov eax [esp+0CCh+var_94] +
test eax eax +
jnz loc_478B94  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
jz loc_478B94  +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] 1 +
call sub_47B720  +
mov edi eax +
mov eax [esp+0CCh+var_A8] +
mov dword ptr [esp+0CCh+var_CC] edi +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47B830  +
test eax eax +
jle loc_4790CF  +
mov [esp+0CCh+var_28] 11h +
mov [esp+0CCh+var_94] 0 +
mov eax [esp+0CCh+var_A0] +
sub [esp+0CCh+var_20] eax +
mov [esp+0CCh+var_24] eax +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_477BE0  +
mov [esp+0CCh+var_18] eax +
jmp loc_478B94  +
mov eax dword ptr [esp+0CCh+var_14+4] +
or eax 100000h +
bsf ecx eax +
mov eax 15h +
sub eax ecx +
jmp loc_478344  +
mov ebp [esp+0CCh+var_90] +
test ebp ebp +
jnz loc_47901C  +
jmp loc_478C23  +
test ebx ebx +
mov dword ptr [esp+0CCh+var_9C] ebp +
mov ebp [esp+0CCh+var_AC] +
jz loc_4795AC  +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_479661  +
mov ecx [esp+0CCh+var_24] +
mov esi [esp+0CCh+var_18] +
mov edx ecx +
lea eax [esi+14h] +
sar edx 5 +
lea edx [eax+edx*4] +
cmp eax edx +
jnb loc_4794D5  +
cmp dword ptr [esi+14h] 0FFFFFFFFh +
lea eax [esi+18h] +
jz loc_4794D1  +
jmp loc_479661  +
add eax 4 +
cmp dword ptr [eax-4] 0FFFFFFFFh +
jnz loc_479661  +
cmp edx eax +
ja loc_4794C4  +
and ecx 1Fh +
jz loc_4794EA  +
or edx 0FFFFFFFFh +
shl edx cl +
or edx [eax] +
add edx 1 +
jnz loc_479661  +
mov eax [esp+0CCh+var_A0] +
mov ebx [esp+0CCh+var_84] +
mov dword ptr [esi+10h] 1 +
mov dword ptr [esi+14h] 1 +
mov [esp+0CCh+var_24] 1 +
lea eax [eax+ebx-1] +
mov [esp+0CCh+var_20] eax +
mov eax 1 +
mov [esp+0CCh+var_28] 21h +
jmp loc_4790D6  +
mov eax [esp+0CCh+var_90] +
test eax eax +
jz loc_47901C  +
jmp loc_478C23  +
mov eax [esp+0CCh+var_AC] +
mov dword ptr [esp+0CCh+var_8C] ebx +
mov ebx [esp+0CCh+var_84] +
sub eax 1 +
lea edi [eax+1] +
cmp eax 8 +
mov [esp+0CCh+var_AC] edi +
jg loc_4792EE  +
lea eax [ebp+ebp*4+0] +
xor edi edi +
lea ebp [esi+eax*2] +
jmp loc_479305  +
mov esi [esp+0CCh+var_94] +
test esi esi +
jz loc_478B64  +
mov ebp [esp+0CCh+var_AC] +
mov eax [esp+0CCh+var_18] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_28] 50h +
mov [esp+0CCh+var_20] eax +
jmp loc_478B94  +
mov edi 1 +
jmp loc_478436  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jz loc_479678  +
mov [esp+0CCh+var_28] 21h +
mov eax [esp+0CCh+var_94] +
test eax eax +
jnz loc_4795D8  +
mov eax dword ptr [esp+0CCh+var_9C] +
cmp [esp+0CCh+var_A0] eax +
jg loc_4790CF  +
mov eax [esp+0CCh+var_18] +
mov edx [eax+14h] +
test dl 1 +
jz loc_478B94  +
test ebx ebx +
jnz loc_4796F6  +
cmp dword ptr [esp+0CCh+var_9C] 1 +
jz loc_479580  +
sub edx 1 +
mov [eax+14h] edx +
mov [esp+0CCh+var_28] 11h +
jmp loc_478B94  +
mov eax ebx +
neg eax  +
mov dword ptr [esp+0CCh+var_CC+4] eax +
mov eax [esp+0CCh+var_18] +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_47BEE0  +
jmp loc_4792B4  +
xor edi edi +
jmp loc_478549  +
cmp ecx 0FFFFFFFFh +
jl loc_4782D1  +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_24] 1 +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 1 +
jmp loc_4782A9  +
mov [esp+0CCh+var_28] 11h +
jmp loc_4795C2  +
xor edi edi +
jmp loc_4785F6  +
mov eax [esp+0CCh+var_84] +
cmp [esp+0CCh+var_60] eax +
jnz loc_47973C  +
mov eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_28] 21h +
cmp dword ptr [eax+10h] 1 +
jnz loc_478B94  +
cmp dword ptr [eax+14h] 1 +
mov eax dword ptr [esp+0CCh+var_9C] +
cmovnz eax [esp+0CCh+var_54] +
mov [esp+0CCh+var_54] eax +
jmp loc_478B94  +
mov eax [esp+0CCh+arg_10] +
mov dword ptr [esp+0CCh+var_CC] ebx +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+arg_8] +
mov dword ptr [esp+0CCh+var_CC+4] eax +
call sub_47CB10  +
mov [esp+0CCh+var_28] eax +
mov eax [esp+0CCh+arg_8] +
mov eax [eax+8] +
add eax 1 +
jmp loc_478024  +
xor esi esi +
jmp loc_479187  +
mov dword ptr [esp+0CCh+var_CC] eax +
call sub_477800  +
mov ecx [esp+0CCh+var_24] +
mov edx [eax+10h] +
mov [esp+0CCh+var_18] eax +
bsr eax [eax+edx*4+10h] +
mov edx ecx +
neg edx  +
and edx 1Fh +
xor eax 1Fh +
cmp edx eax +
jz loc_47972C  +
add ecx 1 +
mov [esp+0CCh+var_24] ecx +
mov [esp+0CCh+var_28] 21h +
jmp loc_478B94  +
mov [esp+0CCh+var_28] 1 +
jmp loc_47941F  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_C] +
mov edi [esp+7Ch+arg_C] +
mov ebx [eax] +
mov eax ebx +
and eax 0FFFFFFCFh +
mov [edi] eax +
mov eax ebx +
and eax 7 +
cmp eax 4 +
ja loc_47AC1C  +
jmp ds:off_4D53D0[eax*4]  +
mov eax [esp+7Ch+arg_0] +
xor edx edx +
mov esi [eax] +
cmp esi 20h +
jle loc_4797A1  +
mov eax 20h +
add eax eax +
add edx 1 +
cmp esi eax +
jg loc_479798  +
mov [esp+7Ch+var_7C] edx +
call sub_47B1E0  +
mov edi [esp+7Ch+arg_8] +
mov ebp eax +
lea eax [esi-1] +
sar eax 5 +
lea edi [edi+eax*4] +
mov eax [esp+7Ch+arg_8] +
lea ecx [ebp+14h] +
mov edx ecx +
mov dword ptr [esp+7Ch+var_64] ecx +
nop   +
lea esi [esi+0] +
mov ecx [eax] +
add eax 4 +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
jnb loc_4797D0  +
mov ecx dword ptr [esp+7Ch+var_64] +
sub edx ecx +
sar edx 2 +
jmp loc_4797FA  +
test eax eax +
jz loc_479CB5  +
mov edx eax +
lea eax [edx-1] +
mov edi [ecx+eax*4] +
test edi edi +
jz loc_4797F0  +
bsr eax [ebp+edx*4+10h] +
mov [ebp+10h] edx +
shl edx 5 +
mov [esp+7Ch+var_54] edx +
xor eax 1Fh +
sub [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47C000  +
mov edi [esp+7Ch+arg_4] +
test eax eax +
mov [esp+7Ch+var_10] eax +
jnz loc_479CD0  +
mov ecx [ebp+10h] +
test ecx ecx +
jnz loc_4798E8  +
mov [esp+7Ch+var_7C] ebp +
call sub_47B2B0  +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 1 +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_7C] offset a0_2 +
mov [esp+7Ch+var_78] eax +
call sub_47AE60  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 3 +
mov [esp+7Ch+var_7C] offset aNan +
mov [esp+7Ch+var_78] eax +
call sub_47AE60  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_18] +
mov dword ptr [eax] 0FFFF8000h +
mov eax [esp+7Ch+arg_1C] +
mov [esp+7Ch+var_74] 8 +
mov [esp+7Ch+var_7C] offset aInfinity +
mov [esp+7Ch+var_78] eax +
call sub_47AE60  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47BA00  +
mov eax [esp+7Ch+var_54] +
lea eax [edi+eax-1] +
mov [esp+7Ch+var_24] eax +
fstp  [esp+7Ch+var_64] +
mov edx dword ptr [esp+7Ch+var_64+4] +
and edx 0FFFFFh +
mov [esp+7Ch+var_50] edx +
cdq   +
or [esp+7Ch+var_50] 3FF00000h +
mov ecx [esp+7Ch+var_50] +
mov dword ptr [esp+7Ch+var_64+4] ecx +
mov ecx edx +
fld  [esp+7Ch+var_64] +
xor ecx eax +
fsub  ds:flt_4D53E4 +
sub ecx edx +
sub ecx 435h +
test ecx ecx +
fmul  ds:dbl_4D53E8 +
fadd  ds:dbl_4D53F0 +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D53F8 +
faddp st(1) st +
jle loc_479969  +
mov [esp+7Ch+var_24] ecx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D5400 +
faddp st(1) st +
fnstcw  [esp+7Ch+var_1E] +
movzx ecx [esp+7Ch+var_1E] +
mov ch 0Ch +
mov [esp+7Ch+var_20] cx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_58] +
fldcw  [esp+7Ch+var_1E] +
fldz   +
fucomip st st(1) +
ja loc_47A155  +
fstp  st +
mov ecx eax +
shl ecx 14h +
add ecx [esp+7Ch+var_50] +
cmp [esp+7Ch+var_58] 16h +
mov [esp+7Ch+var_34] 1 +
mov dword ptr [esp+7Ch+var_64+4] ecx +
ja loc_4799D5  +
mov ecx [esp+7Ch+var_58] +
fld  ds:dbl_4D5460[ecx*8] +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jbe loc_479D10  +
sub [esp+7Ch+var_58] 1 +
mov [esp+7Ch+var_34] 0 +
mov edx [esp+7Ch+var_54] +
mov [esp+7Ch+var_44] 0 +
sub edx eax +
sub edx 1 +
mov [esp+7Ch+var_4C] edx +
js loc_47A140  +
mov ecx [esp+7Ch+var_58] +
test ecx ecx +
js loc_47A120  +
add [esp+7Ch+var_4C] ecx +
mov [esp+7Ch+var_30] ecx +
mov [esp+7Ch+var_3C] 0 +
cmp [esp+7Ch+arg_10] 9 +
ja loc_479CF2  +
cmp [esp+7Ch+arg_10] 5 +
jle loc_479CFD  +
sub [esp+7Ch+arg_10] 4 +
xor eax eax +
cmp [esp+7Ch+arg_10] 3 +
jz loc_47A38E  +
jle loc_47A080  +
cmp [esp+7Ch+arg_10] 4 +
mov [esp+7Ch+var_38] 1 +
jz loc_479D20  +
cmp [esp+7Ch+arg_10] 5 +
jnz loc_47A096  +
mov ecx [esp+7Ch+var_58] +
add ecx [esp+7Ch+arg_14] +
mov [esp+7Ch+var_28] ecx +
add ecx 1 +
test ecx ecx +
mov [esp+7Ch+var_50] ecx +
jle loc_47A5E9  +
cmp ecx 0Eh +
setbe dl  +
and edx eax +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_2C] edx +
call sub_47AE20  +
mov edx [esp+7Ch+var_2C] +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
sub eax 1 +
mov [esp+7Ch+var_48] eax +
jz loc_479ADD  +
mov eax 2 +
cmovns eax [esp+7Ch+var_48] +
and ebx 8 +
mov [esp+7Ch+var_48] eax +
jz loc_479ADD  +
mov eax 3 +
sub eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_48] eax +
test dl dl +
jz loc_479DA6  +
mov eax [esp+7Ch+var_48] +
or eax [esp+7Ch+var_58] +
jnz loc_479DA6  +
mov eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_10] 0 +
fld  [esp+7Ch+var_64] +
test eax eax +
jz loc_479B11  +
fld1   +
fucomip st st(1) +
ja loc_47A96F  +
fld  st +
mov eax [esp+7Ch+var_50] +
fadd st st(1) +
fadd  dword ptr ds:dbl_4D5418+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
test eax eax +
jz loc_479D6C  +
mov ecx [esp+7Ch+var_50] +
fld  st +
mov [esp+7Ch+var_2C] 0 +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_47A64A  +
fld  ds:flt_4D5424 +
fdiv  ds:dbl_4D5458[ecx*8] +
fnstcw  [esp+7Ch+var_1E] +
mov edx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 0 +
movzx eax [esp+7Ch+var_1E] +
mov ebx edx +
add ebx 1 +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fsub  [esp+7Ch+var_64] +
fxch  st(1) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [edx] al +
fucomi st st(1) +
ja loc_479C42  +
fld  st(1) +
fsubr  ds:flt_4D5410 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_47A810  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_479D92  +
fld  ds:flt_4D5414 +
jmp loc_479C0B  +
fld  st(1) +
fsubr  ds:flt_4D5410 +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
ja loc_47A818  +
mov eax [esp+7Ch+var_10] +
add eax 1 +
cmp ecx eax +
mov [esp+7Ch+var_10] eax +
jle loc_479D98  +
fxch  st(1) +
fxch  st(2) +
fmul st(1) st +
add ebx 1 +
fmul st(2) st +
fxch  st(2) +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
add eax 30h +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
fxch  st(1) +
mov [ebx-1] al +
fucomi st st(1) +
jbe loc_479BE0  +
fstp  st +
fstp  st(1) +
fstp  st(1) +
jmp loc_479C46  +
fstp  st +
fstp  st(1) +
fldz   +
fxch  st(1) +
mov eax [esp+7Ch+var_2C] +
fucomip st st(1) +
fstp  st +
jp loc_479C5A  +
jz loc_47A584  +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 10h +
lea esi [esi+0] +
mov [esp+7Ch+var_7C] ebp +
call sub_47B2B0  +
mov eax [esp+7Ch+arg_18] +
mov esi [esp+7Ch+var_58] +
mov byte ptr [ebx] 0 +
mov [eax] esi +
mov eax [esp+7Ch+arg_1C] +
test eax eax +
jz loc_479C9C  +
mov eax [esp+7Ch+arg_1C] +
mov [eax] ebx +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_50] +
or [eax] esi +
mov eax [esp+7Ch+var_40] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+10h] 0 +
mov [esp+7Ch+var_54] 0 +
jmp loc_47981A  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] ebp +
call sub_47BEE0  +
mov eax [esp+7Ch+var_10] +
mov edi [esp+7Ch+arg_4] +
sub [esp+7Ch+var_54] eax +
add edi eax +
jmp loc_479835  +
mov [esp+7Ch+arg_10] 0 +
add eax 3FEh +
cmp eax 7F7h +
setbe al  +
jmp loc_479A32  +
mov [esp+7Ch+var_34] 0 +
jmp loc_4799D5  +
mov edx [esp+7Ch+arg_14] +
test edx edx +
jle loc_47A5D4  +
cmp [esp+7Ch+arg_14] 0Eh +
setbe dl  +
mov ecx [esp+7Ch+arg_14] +
and edx eax +
mov [esp+7Ch+var_10] ecx +
mov eax ecx +
mov [esp+7Ch+var_28] ecx +
mov [esp+7Ch+var_50] ecx +
jmp loc_479A96  +
fld  st +
fadd st st(1) +
fadd  dword ptr ds:dbl_4D5418+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
fld  st +
fsub  ds:flt_4D5420 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomi st st(1) +
ja loc_47A71D  +
fxch  st(1) +
fchs   +
fucomip st st(1) +
fstp  st +
ja loc_47A0E5  +
jmp loc_479DA2  +
fstp  st +
fstp  st +
jmp loc_479DA2  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_479DA2  +
fstp  st +
fstp  [esp+7Ch+var_64] +
test edi edi +
js loc_479E61  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_58] +
cmp ebx [eax+14h] +
jg loc_479E61  +
mov eax [esp+7Ch+var_50] +
fld  ds:dbl_4D5460[ebx*8] +
test eax eax +
jg loc_47A4BB  +
mov eax [esp+7Ch+arg_14] +
shr eax 1Fh +
test al al +
jz loc_47A4BB  +
mov edi [esp+7Ch+var_50] +
test edi edi +
jnz loc_47A0E9  +
fmul  ds:flt_4D5420 +
fld  [esp+7Ch+var_64] +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jnb loc_47A0EB  +
mov eax ebx +
xor edi edi +
add eax 2 +
mov [esp+7Ch+var_58] eax +
mov dword ptr [esp+7Ch+var_64] 0 +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 20h +
lea ebx [eax+1] +
mov byte ptr [eax] 31h +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47B2B0  +
test edi edi +
jz loc_479C70  +
cmp [esp+7Ch+var_4C] edi +
jnz loc_47A371  +
mov [esp+7Ch+var_7C] edi +
call sub_47B2B0  +
jmp loc_479C70  +
mov ecx [esp+7Ch+var_38] +
test ecx ecx +
jz loc_47A2F0  +
mov ebx [esp+7Ch+arg_0] +
mov ecx edi +
sub esi [esp+7Ch+var_54] +
mov edx [ebx+4] +
sub ecx esi +
lea eax [esi+1] +
mov [esp+7Ch+var_10] eax +
cmp ecx edx +
jge loc_47A310  +
cmp [esp+7Ch+arg_10] 3 +
jz loc_47A310  +
cmp [esp+7Ch+arg_10] 5 +
jz loc_47A310  +
mov eax edi +
sub eax edx +
add eax 1 +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_10] eax +
jle loc_479ED1  +
mov edx [esp+7Ch+var_50] +
test edx edx +
jle loc_479ED1  +
cmp [esp+7Ch+var_50] eax +
jl loc_47A31E  +
mov esi [esp+7Ch+var_3C] +
mov ebx [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] 1 +
add [esp+7Ch+var_44] eax +
add [esp+7Ch+var_4C] eax +
call sub_47B400  +
mov edi eax +
mov eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_479F12  +
test ebx ebx +
jle loc_479F12  +
mov eax [esp+7Ch+var_4C] +
cmp eax ebx +
cmovg eax ebx +
sub [esp+7Ch+var_44] eax +
sub ebx eax +
sub [esp+7Ch+var_4C] eax +
mov [esp+7Ch+var_10] eax +
mov ecx [esp+7Ch+var_3C] +
test ecx ecx +
jle loc_479F62  +
mov edx [esp+7Ch+var_38] +
test edx edx +
jz loc_47A35A  +
test esi esi +
jle loc_479F56  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] esi +
call sub_47B580  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
mov edi eax +
call sub_47B430  +
mov [esp+7Ch+var_7C] ebp +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_47B2B0  +
mov eax dword ptr [esp+7Ch+var_64] +
mov ebp eax +
mov eax [esp+7Ch+var_3C] +
sub eax esi +
jnz loc_47A35E  +
mov [esp+7Ch+var_7C] 1 +
call sub_47B400  +
mov esi [esp+7Ch+var_30] +
test esi esi +
mov dword ptr [esp+7Ch+var_64] eax +
jle loc_479F8A  +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_47B580  +
mov dword ptr [esp+7Ch+var_64] eax +
cmp [esp+7Ch+arg_10] 1 +
mov [esp+7Ch+var_3C] 0 +
jle loc_47A598  +
mov eax [esp+7Ch+var_30] +
mov esi 1Fh +
test eax eax +
jz loc_479FBC  +
mov esi dword ptr [esp+7Ch+var_64] +
mov eax [esi+10h] +
bsr esi [esi+eax*4+10h] +
xor esi 1Fh +
sub esi [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_44] +
sub esi 4 +
and esi 1Fh +
add edx esi +
mov eax esi +
test edx edx +
mov [esp+7Ch+var_10] esi +
jle loc_479FE8  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] edx +
call sub_47B720  +
mov ebp eax +
mov eax [esp+7Ch+var_10] +
add eax [esp+7Ch+var_4C] +
test eax eax +
jle loc_47A004  +
mov [esp+7Ch+var_78] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47B720  +
mov dword ptr [esp+7Ch+var_64] eax +
mov eax [esp+7Ch+var_34] +
test eax eax +
jnz loc_47A39B  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jg loc_47A170  +
cmp [esp+7Ch+arg_10] 2 +
jle loc_47A170  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jnz loc_47A0F5  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 5 +
mov [esp+7Ch+var_7C] eax +
call sub_47B320  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
mov dword ptr [esp+7Ch+var_64] eax +
call sub_47B830  +
test eax eax +
jle loc_47A0F5  +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E1C  +
cmp [esp+7Ch+arg_10] 2 +
mov [esp+7Ch+var_38] 0 +
jz loc_479D20  +
mov [esp+7Ch+var_24] esi +
xor edx edx +
fild  [esp+7Ch+var_24] +
fmul  ds:dbl_4D5408 +
mov [esp+7Ch+var_38] 1 +
mov [esp+7Ch+var_28] 0FFFFFFFFh +
mov [esp+7Ch+var_50] 0FFFFFFFFh +
mov [esp+7Ch+arg_14] 0 +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
add eax 3 +
mov [esp+7Ch+var_10] eax +
jmp loc_479A96  +
fstp  st +
jmp loc_47A0EB  +
fstp  st +
mov dword ptr [esp+7Ch+var_64] 0 +
xor edi edi +
mov eax [esp+7Ch+arg_14] +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_50] 10h +
neg eax  +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
mov ecx [esp+7Ch+var_58] +
sub [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_30] 0 +
neg ecx  +
mov [esp+7Ch+var_3C] ecx +
jmp loc_479A0C  +
mov ecx edx +
neg ecx  +
mov [esp+7Ch+var_44] ecx +
mov [esp+7Ch+var_4C] 0 +
jmp loc_4799F0  +
fild  [esp+7Ch+var_58] +
fucomip st st(1) +
fstp  st +
jp loc_47A165  +
jz loc_479991  +
sub [esp+7Ch+var_58] 1 +
jmp loc_479991  +
mov eax [esp+7Ch+var_38] +
test eax eax +
jz loc_47A3FB  +
add ebx esi +
test ebx ebx +
jle loc_47A190  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] ebx +
call sub_47B720  +
mov edi eax +
mov ebx [esp+7Ch+var_3C] +
mov esi edi +
test ebx ebx +
jnz loc_47A8FA  +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_10] 1 +
mov [esp+7Ch+var_4C] ebx +
jmp loc_47A289  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_44] eax +
call sub_47B2B0  +
mov eax [esp+7Ch+var_44] +
mov ecx eax +
or ecx [esp+7Ch+arg_10] +
jnz loc_47A1E6  +
mov ecx [esp+7Ch+arg_8] +
test byte ptr [ecx] 1 +
jnz loc_47A1E6  +
mov ecx [esp+7Ch+var_48] +
test ecx ecx +
jz loc_47AADB  +
test ebx ebx +
js loc_47A73A  +
or ebx [esp+7Ch+arg_10] +
jnz loc_47A207  +
mov ebx [esp+7Ch+arg_8] +
test byte ptr [ebx] 1 +
jz loc_47A73A  +
test eax eax +
jg loc_47A9C5  +
add [esp+7Ch+var_4C] 1 +
movzx eax byte ptr [esp+7Ch+var_54] +
mov ebx [esp+7Ch+var_4C] +
mov [ebx-1] al +
mov eax [esp+7Ch+var_50] +
cmp [esp+7Ch+var_10] eax +
jz loc_47A9B6  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47B320  +
cmp edi esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov [esp+7Ch+var_7C] edi +
mov ebp eax +
jz loc_47A300  +
call sub_47B320  +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
mov edi eax +
call sub_47B320  +
mov esi eax +
add [esp+7Ch+var_10] 1 +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47AED0  +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] ebp +
mov ebx eax +
add ebx 30h +
mov [esp+7Ch+var_54] ebx +
mov [esp+7Ch+var_3C] eax +
call sub_47B830  +
mov [esp+7Ch+var_78] esi +
mov ebx eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] eax +
call sub_47B880  +
mov edx eax +
mov eax 1 +
mov ecx [edx+0Ch] +
test ecx ecx +
jnz loc_47A1B3  +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_44] edx +
call sub_47B830  +
mov edx [esp+7Ch+var_44] +
jmp loc_47A1B3  +
mov esi [esp+7Ch+var_3C] +
xor edi edi +
mov ebx [esp+7Ch+var_44] +
jmp loc_479EEF  +
call sub_47B320  +
mov edi eax +
mov esi eax +
jmp loc_47A284  +
cmp [esp+7Ch+arg_10] 1 +
jle loc_479ED1  +
mov edi [esp+7Ch+var_3C] +
mov eax [esp+7Ch+var_50] +
mov esi edi +
sub eax 1 +
sub esi eax +
cmp edi eax +
jge loc_47A341  +
mov edx eax +
xor esi esi +
sub edx [esp+7Ch+var_3C] +
add [esp+7Ch+var_30] edx +
mov [esp+7Ch+var_3C] eax +
mov eax [esp+7Ch+var_50] +
test eax eax +
js loc_47A8CD  +
mov [esp+7Ch+var_10] eax +
mov ebx [esp+7Ch+var_44] +
jmp loc_479ED9  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B580  +
mov ebp eax +
jmp loc_479F62  +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_479E54  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call sub_47B2B0  +
jmp loc_479E54  +
mov [esp+7Ch+var_38] 0 +
jmp loc_479A6A  +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B830  +
test eax eax +
jns loc_47A010  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
sub [esp+7Ch+var_58] 1 +
call sub_47B320  +
mov ebp eax +
mov eax [esp+7Ch+var_38] +
test eax eax +
jnz loc_47AB6C  +
cmp [esp+7Ch+var_28] 0 +
mov eax [esp+7Ch+var_28] +
jg loc_47A3F7  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_47ABA4  +
mov [esp+7Ch+var_50] eax +
mov esi [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] edi +
mov edi dword ptr [esp+7Ch+var_64] +
jmp loc_47A434  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47B320  +
add [esp+7Ch+var_10] 1 +
mov ebp eax +
mov [esp+7Ch+var_78] edi +
add ebx 1 +
mov [esp+7Ch+var_7C] ebp +
call sub_47AED0  +
add eax 30h +
mov [ebx-1] al +
cmp esi [esp+7Ch+var_10] +
jg loc_47A415  +
mov edi [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] eax +
mov [esp+7Ch+var_4C] 0 +
mov eax [esp+7Ch+var_48] +
test eax eax +
jz loc_47A866  +
cmp eax 2 +
jz loc_47A89E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47AA52  +
movzx edx byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
jmp loc_47A496  +
cmp eax ecx +
jz loc_47A62B  +
movzx edx byte ptr [eax-1] +
mov ebx eax +
cmp dl 39h +
lea eax [ebx-1] +
jz loc_47A488  +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
fld  [esp+7Ch+var_64] +
fld  st +
mov edi [esp+7Ch+var_40] +
fdiv st st(2) +
fnstcw  [esp+7Ch+var_1E] +
mov [esp+7Ch+var_10] 1 +
lea ebx [edi+1] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
mov [esp+7Ch+var_20] ax +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(2) +
mov [edi] dl +
fsubp st(1) st +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_47AB5D  +
mov edx [esp+7Ch+var_10] +
cmp [esp+7Ch+var_50] edx +
jz loc_47A607  +
fld  ds:flt_4D5414 +
mov ecx [esp+7Ch+var_50] +
jmp loc_47A53C  +
mov edx [esp+7Ch+var_10] +
cmp ecx edx +
jz loc_47A605  +
add edx 1 +
fmul st(1) st +
add ebx 1 +
mov [esp+7Ch+var_10] edx +
fld  st(1) +
fdiv st st(3) +
fldcw  [esp+7Ch+var_20] +
fistp  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
mov [esp+7Ch+var_24] eax +
lea edx [eax+30h] +
fild  [esp+7Ch+var_24] +
fmul st st(3) +
mov [ebx-1] dl +
fsubp st(2) st +
fldz   +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jp loc_47A530  +
jnz loc_47A530  +
fstp  st +
fstp  st +
fstp  st +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_50] 0 +
jmp loc_479C70  +
cmp [esp+7Ch+var_54] 1 +
jnz loc_479FA0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
add eax 1 +
cmp [esp+7Ch+arg_4] eax +
jle loc_479FA0  +
add [esp+7Ch+var_44] 1 +
add [esp+7Ch+var_4C] 1 +
mov [esp+7Ch+var_3C] 1 +
jmp loc_479FA0  +
mov edx 1 +
mov [esp+7Ch+arg_14] 1 +
jmp loc_479D3A  +
cmp [esp+7Ch+var_50] 0Eh +
mov [esp+7Ch+var_10] 1 +
setbe dl  +
and edx eax +
mov eax 1 +
jmp loc_479A96  +
fstp  st +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_47A93E  +
fstp  st +
fstp  st +
cmp [esp+7Ch+var_48] 1 +
jz loc_47AA3D  +
mov eax [esp+7Ch+var_58] +
jmp loc_479C5A  +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_50] 20h +
mov byte ptr [eax] 31h +
mov eax [esp+7Ch+var_58] +
add eax 2 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
fnstcw  [esp+7Ch+var_1E] +
fld  [esp+7Ch+var_64] +
fmul  ds:dbl_4D5458[ecx*8] +
mov [esp+7Ch+var_10] 1 +
mov ebx [esp+7Ch+var_40] +
movzx eax [esp+7Ch+var_1E] +
mov ah 0Ch +
fld  ds:flt_4D5414 +
fxch  st(2) +
mov [esp+7Ch+var_20] ax +
jmp loc_47A689  +
fmul st st(2) +
add edx 1 +
mov [esp+7Ch+var_10] edx +
fldcw  [esp+7Ch+var_20] +
fist  [esp+7Ch+var_24] +
fldcw  [esp+7Ch+var_1E] +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_47A6A7  +
mov [esp+7Ch+var_24] eax +
fild  [esp+7Ch+var_24] +
fsubp st(1) st +
add ebx 1 +
add eax 30h +
mov [ebx-1] al +
mov edx [esp+7Ch+var_10] +
cmp edx ecx +
jnz loc_47A680  +
fstp  st(2) +
fxch  st(1) +
fld  ds:flt_4D5424 +
fld  st(2) +
fadd st st(1) +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
ja loc_47A822  +
fsubrp st(2) st +
fxch  st(1) +
fucomip st st(1) +
jbe loc_479DA0  +
fstp  st(1) +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_47A6F0  +
jz loc_47AACE  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A706  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 30h +
lea edx [ebx-1] +
jz loc_47A700  +
mov eax [esp+7Ch+var_2C] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479C70  +
fstp  st +
fstp  st +
fstp  st +
mov [esp+7Ch+var_58] 2 +
xor edi edi +
mov dword ptr [esp+7Ch+var_64] 0 +
jmp loc_479E1C  +
mov edx [esp+7Ch+var_48] +
mov ebx [esp+7Ch+var_4C] +
test edx edx +
jz loc_47AA16  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47AA0C  +
cmp [esp+7Ch+var_48] 2 +
jnz loc_47A7C3  +
jmp loc_47AA2C  +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [ebx-1] al +
mov [esp+7Ch+var_7C] esi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47B320  +
cmp edi esi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
cmovz edi eax +
mov [esp+7Ch+var_50] eax +
call sub_47B320  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47AED0  +
mov edx [esp+7Ch+var_50] +
mov esi edx +
add eax 30h +
mov [esp+7Ch+var_54] eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] eax +
call sub_47B830  +
test eax eax +
jg loc_47A760  +
cmp [esp+7Ch+var_54] 39h +
jz loc_47AA6A  +
add [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_50] 20h +
movzx eax byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [ebx-1] al +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
fstp  st +
fstp  st +
fstp  st +
jmp loc_47A82A  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
jmp loc_47A82A  +
fstp  st +
fstp  st +
fstp  st +
fstp  st +
mov ecx [esp+7Ch+var_40] +
jmp loc_47A83E  +
cmp edx ecx +
jz loc_47A8E4  +
movzx eax byte ptr [edx-1] +
mov ebx edx +
cmp al 39h +
lea edx [ebx-1] +
jz loc_47A830  +
mov [esp+7Ch+var_40] ecx +
add eax 1 +
mov [edx] al +
mov eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_50] 20h +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479C70  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_47B720  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B830  +
cmp eax 0 +
jg loc_47A47E  +
jnz loc_47A89E  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_47A47E  +
cmp dword ptr [ebp+10h] 1 +
jle loc_47AC05  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A8B4  +
mov ebx eax +
cmp byte ptr [ebx-1] 30h +
lea eax [ebx-1] +
jz loc_47A8B2  +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
mov ebx [esp+7Ch+var_44] +
xor eax eax +
sub ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_10] 0 +
jmp loc_479ED9  +
mov [esp+7Ch+var_40] ecx +
mov eax 31h +
add [esp+7Ch+var_2C] 1 +
mov byte ptr [ecx] 30h +
jmp loc_47A84C  +
mov eax [edi+4] +
mov [esp+7Ch+var_7C] eax +
call sub_47B1E0  +
lea ecx [eax+0Ch] +
mov ebx eax +
mov eax [edi+10h] +
mov [esp+7Ch+var_7C] ecx +
lea edx ds:8[eax*4] +
lea eax [edi+0Ch] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call memcpy  +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] ebx +
call sub_47B720  +
mov esi eax +
jmp loc_47A19E  +
fadd st st +
fucomi st st(1) +
ja loc_47AA39  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_47A956  +
jz loc_47AB25  +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A706  +
mov eax [esp+7Ch+var_50] +
test eax eax +
jz loc_479D56  +
mov ecx [esp+7Ch+var_28] +
test ecx ecx +
jle loc_479DA2  +
fld  st +
fmul  ds:flt_4D5414 +
mov [esp+7Ch+var_2C] 0FFFFFFFFh +
fld  st +
fmul  dword ptr ds:dbl_4D5418 +
fadd  dword ptr ds:dbl_4D5418+4 +
fstp  [esp+7Ch+var_64] +
sub dword ptr [esp+7Ch+var_64+4] 3400000h +
jmp loc_479B41  +
mov ebx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
jmp loc_47A45F  +
cmp [esp+7Ch+var_48] 2 +
jz loc_47A20F  +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_47AA6A  +
movzx edx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [esp+7Ch+var_50] 20h +
add edx 1 +
mov [eax] dl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_47A754  +
test eax eax +
jg loc_47AA84  +
mov [esp+7Ch+var_50] 0 +
cmp dword ptr [ebp+10h] 1 +
jle loc_47AB46  +
mov [esp+7Ch+var_50] 10h +
jmp loc_47A7EF  +
fstp  st +
fstp  st +
mov edi [esp+7Ch+var_58] +
movzx eax byte ptr [ebx-1] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A83E  +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_47A47E  +
mov [esp+7Ch+var_50] 0 +
jmp loc_47A8B4  +
mov byte ptr [ebx] 39h +
mov edx 39h +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov ecx [esp+7Ch+var_40] +
mov edi esi +
jmp loc_47A496  +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] 1 +
call sub_47B720  +
mov ebp eax +
mov eax dword ptr [esp+7Ch+var_64] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_47B830  +
cmp eax 0 +
jle loc_47ABAD  +
cmp [esp+7Ch+var_54] 39h +
jz loc_47AA6A  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add eax 31h +
mov [esp+7Ch+var_54] eax +
jmp loc_47AA22  +
mov [esp+7Ch+var_50] 0 +
jmp loc_47A706  +
mov ecx ebx +
mov ebx [esp+7Ch+var_4C] +
cmp [esp+7Ch+var_54] 39h +
mov eax ebx +
jz loc_47AA6A  +
test ecx ecx +
jle loc_47ABDB  +
mov ecx [esp+7Ch+var_3C] +
mov [esp+7Ch+var_50] 20h +
add ecx 31h +
mov [esp+7Ch+var_54] ecx +
movzx ecx byte ptr [esp+7Ch+var_54] +
add ebx 1 +
mov [esp+7Ch+var_4C] edi +
mov edi esi +
mov [eax] cl +
mov eax [esp+7Ch+var_58] +
add eax 1 +
mov [esp+7Ch+var_58] eax +
jmp loc_479E36  +
test al 1 +
movzx eax byte ptr [ebx-1] +
jnz loc_47ABCA  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_50] 10h +
mov [esp+7Ch+var_2C] edi +
jmp loc_47A706  +
cmp dword ptr [ebp+14h] 0 +
mov eax 10h +
cmovz eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_50] eax +
jmp loc_47A7EF  +
jnz loc_47A511  +
fstp  st +
fstp  st +
jmp loc_47A580  +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0Ah +
call sub_47B320  +
cmp [esp+7Ch+var_28] 0 +
mov edi eax +
mov eax [esp+7Ch+var_28] +
jg loc_47AB9B  +
cmp [esp+7Ch+arg_10] 2 +
jg loc_47ABA4  +
mov [esp+7Ch+var_50] eax +
jmp loc_47A17C  +
mov [esp+7Ch+var_50] eax +
jmp loc_47A02A  +
lea esi [esi+0] +
jnz loc_47ABBD  +
test byte ptr [esp+7Ch+var_54] 1 +
jnz loc_47AAAF  +
mov [esp+7Ch+var_50] 20h +
jmp loc_47AA22  +
mov esi [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_40] +
mov [esp+7Ch+var_2C] esi +
jmp loc_47A83E  +
cmp dword ptr [ebp+10h] 1 +
mov [esp+7Ch+var_50] 10h +
jg loc_47AB05  +
cmp dword ptr [ebp+14h] 1 +
sbb ecx ecx +
mov [esp+7Ch+var_50] ecx +
not [esp+7Ch+var_50]  +
and [esp+7Ch+var_50] 10h +
jmp loc_47AB05  +
cmp dword ptr [ebp+14h] 0 +
mov [esp+7Ch+var_50] 0 +
jnz loc_47A8A8  +
jmp loc_47A8B4  +
xor eax eax +
jmp loc_479874  +
***
sub esp 48h +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
test edx edx +
mov word ptr [ebp+var_1C] ax +
jnz loc_47AC56  +
cmp ax 0FFh +
ja loc_47ACA8  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
mov eax 1 +
leave   +
retn   +
lea eax [ebp+var_C] +
mov [esp+48h+var_2C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_C] 0 +
mov [esp+48h+var_30] 0 +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_34] eax +
mov eax [ebp+arg_0] +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_38] eax +
lea eax [ebp+var_1C] +
mov [esp+48h+var_40] eax +
call ds:WideCharToMultiByte  +
sub esp 20h +
test eax eax +
jz loc_47ACA8  +
mov edx [ebp+var_C] +
test edx edx +
jz locret_47AC54  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
leave   +
retn   +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_0] +
lea eax [esp+20h+var_5] +
mov esi [esp+20h+arg_4] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
movzx esi si +
mov edi [eax] +
call sub_47D340  +
mov [esp+20h+var_1C] esi +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_14] edi +
mov [esp+20h+var_18] eax +
call sub_47AC30  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp loc_47AD10  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
call sub_47D340  +
mov [esp+1Ch] eax +
mov eax ds:__mb_cur_max +
mov ebp [eax] +
mov eax [esp+54h] +
mov edi [eax] +
test edi edi +
jz loc_47AE03  +
test ebx ebx +
jz loc_47ADB7  +
mov eax [esp+58h] +
xor esi esi +
test eax eax +
jz loc_47AD92  +
mov eax edi +
mov edi ebp +
mov ebp eax +
jmp loc_47AD63  +
add ebx eax +
add esi eax +
cmp byte ptr [ebx-1] 0 +
jz loc_47ADA2  +
add ebp 2 +
cmp [esp+58h] esi +
jbe loc_47AD90  +
mov eax [esp+1Ch] +
mov [esp+0Ch] edi +
mov [esp+8] eax +
movzx eax word ptr [ebp+0] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_47AC30  +
test eax eax +
jg loc_47AD50  +
mov eax 0FFFFFFFFh +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi ebp +
mov eax [esp+54h] +
mov [eax] edi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov dword ptr [eax] 0 +
add esp 3Ch +
pop ebx  +
lea eax [esi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+58h] +
lea esi [esp+2Bh] +
test edx edx +
jz loc_47AE0F  +
mov eax ebx +
mov ebx edi +
mov edi eax +
jmp loc_47ADE2  +
add edi eax +
cmp byte ptr [esp+eax+2Ah] 0 +
jz loc_47AE16  +
add ebx 2 +
cmp [esp+58h] edi +
jbe loc_47AE0D  +
mov eax [esp+1Ch] +
mov [esp+0Ch] ebp +
mov [esp+8] eax +
movzx eax word ptr [ebx] +
mov [esp] esi +
mov [esp+4] eax +
call sub_47AC30  +
test eax eax +
jg loc_47ADD0  +
jmp loc_47AD83  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
mov eax ebx +
jmp loc_47AD88  +
***
lea eax [edi-1] +
jmp loc_47AD88  +
***
sub esp 18h +
mov ecx [esp+18h+arg_0] +
cmp ecx 13h +
jle loc_47AE40  +
mov eax 4 +
add eax eax +
add ebx 1 +
lea edx [eax+0Fh] +
cmp edx ecx +
jl loc_47AE34  +
mov [esp+18h+var_18] ebx +
call sub_47B1E0  +
mov [eax] ebx +
add esp 18h +
add eax 4 +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov [esp+14h+var_14] eax +
call sub_47AE20  +
movzx edx byte ptr [ebx] +
lea ecx [ebx+1] +
test dl dl +
mov [eax] dl +
mov edx eax +
jz loc_47AE97  +
add ecx 1 +
movzx ebx byte ptr [ecx-1] +
add edx 1 +
test bl bl +
mov [edx] bl +
jnz loc_47AE87  +
test esi esi +
jz loc_47AE9D  +
mov [esi] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
mov edx [eax+10h] +
xor eax eax +
cmp edx [edi+10h] +
jg loc_47B0C3  +
mov eax [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_0] +
add eax 14h +
mov edi eax +
mov [esp+4Ch+var_14] eax +
lea eax [edx-1] +
xor edx edx +
mov [esp+4Ch+var_1C] eax +
shl eax 2 +
add edi eax +
lea ebx [esi+14h] +
add eax ebx +
mov [esp+4Ch+var_24] edi +
mov edi [edi] +
mov [esp+4Ch+var_10] eax +
mov eax [eax] +
mov [esp+4Ch+var_20] ebx +
lea ecx [edi+1] +
div  ecx +
mov [esp+4Ch+var_3C] edi +
test eax eax +
mov ebp eax +
mov [esp+4Ch+var_18] eax +
jz loc_47AFFF  +
mov edi [esp+4Ch+var_14] +
mov esi ebx +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_38] 0 +
nop   +
add edi 4 +
mov eax ebp +
mov ecx [esi] +
mul  dword ptr [edi-4] +
add eax [esp+4Ch+var_2C] +
adc edx [esp+4Ch+var_28] +
xor ebx ebx +
mov [esp+4Ch+var_28] ebx +
xor ebx ebx +
mov [esp+4Ch+var_34] eax +
mov [esp+4Ch+var_30] 0 +
sub ecx [esp+4Ch+var_34] +
sbb ebx [esp+4Ch+var_30] +
sub ecx [esp+4Ch+var_3C] +
sbb ebx [esp+4Ch+var_38] +
add esi 4 +
mov [esp+4Ch+var_2C] edx +
mov [esp+4Ch+var_38] 0 +
mov eax ebx +
and eax 1 +
cmp [esp+4Ch+var_24] edi +
mov [esp+4Ch+var_3C] eax +
mov [esi-4] ecx +
jnb loc_47AF60  +
mov eax [esp+4Ch+var_10] +
mov edi [eax] +
test edi edi +
jnz loc_47AFFF  +
mov ecx [esp+4Ch+var_20] +
mov esi eax +
sub eax 4 +
cmp ecx eax +
jnb loc_47AFF4  +
mov esi [esi-4] +
test esi esi +
jnz loc_47AFF4  +
mov edx [esp+4Ch+var_1C] +
jmp loc_47AFE6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_47AFF0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_47AFE0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_47B830  +
test eax eax +
js loc_47B0BF  +
xor esi esi +
xor edi edi +
lea eax [ebp+1] +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_3C] esi +
mov esi [esp+4Ch+var_14] +
mov [esp+4Ch+var_38] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_18] eax +
lea esi [esi+0] +
add esi 4 +
mov eax [ebp+0] +
xor ebx ebx +
mov ecx [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+4Ch+var_3C] +
sbb edx [esp+4Ch+var_38] +
add ebp 4 +
mov [esp+4Ch+var_38] 0 +
mov ebx edx +
and ebx 1 +
cmp edi esi +
mov [esp+4Ch+var_3C] ebx +
mov [ebp-4] eax +
jnb loc_47B040  +
mov eax [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_1C] +
lea edx [eax+ebx*4] +
mov edi [edx] +
test edi edi +
jnz loc_47B0BF  +
mov ecx [esp+4Ch+var_20] +
lea eax [edx-4] +
cmp ecx eax +
jnb loc_47B0B4  +
mov esi [edx-4] +
test esi esi +
jnz loc_47B0B4  +
mov edx ebx +
jmp loc_47B0A6  +
mov ebx [eax] +
test ebx ebx +
jnz loc_47B0B0  +
sub eax 4 +
sub edx 1 +
cmp ecx eax +
jb loc_47B0A0  +
mov [esp+4Ch+var_1C] edx +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_1C] +
mov [eax+10h] edi +
mov eax [esp+4Ch+var_18] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov edx ds:dword_4DA308 +
cmp edx 2 +
jz loc_47B15A  +
test edx edx +
jz loc_47B117  +
cmp edx 1 +
jnz loc_47B10B  +
mov ebx ds:Sleep +
mov [esp+18h+var_18] 1 +
call ebx  +
mov edx ds:dword_4DA308 +
sub esp 4 +
cmp edx 1 +
jz loc_47B0F4  +
cmp edx 2 +
jz loc_47B15A  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 1 +
xchg eax ds:dword_4DA308 +
test eax eax +
jnz loc_47B177  +
mov ebx ds:InitializeCriticalSection +
mov [esp+18h+var_18] offset unk_4DA320 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset unk_4DA338 +
call ebx  +
sub esp 4 +
mov [esp+18h+var_18] offset loc_47B1A0 +
call sub_46FDC0  +
mov ds:dword_4DA308 2 +
lea eax [esi+esi*2] +
lea eax ds:4DA320h[eax*8] +
mov [esp+18h+var_18] eax +
call ds:EnterCriticalSection  +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
cmp eax 2 +
mov edx ds:dword_4DA308 +
jnz loc_47B0E9  +
mov ds:dword_4DA308 2 +
jmp loc_47B15A  +
***
mov eax 3 +
xchg eax ds:dword_4DA308 +
cmp eax 2 +
jz loc_47B1B1  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov ebx ds:DeleteCriticalSection +
mov dword ptr [esp] offset unk_4DA320 +
call ebx  +
sub esp 4 +
mov dword ptr [esp] offset unk_4DA338 +
call ebx  +
mov ebx [ebp-4] +
sub esp 4 +
leave   +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [ebp+arg_0] +
call sub_47B0D0  +
cmp esi 9 +
jg loc_47B227  +
mov ebx ds:dword_4DA2E0[esi*4] +
test ebx ebx +
jz loc_47B272  +
mov eax [ebx] +
cmp ds:dword_4DA308 2 +
mov ds:dword_4DA2E0[esi*4] eax +
jnz loc_47B25A  +
mov [esp+28h+var_28] offset unk_4DA320 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_47B25A  +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
shl eax 3 +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_47B2AA  +
cmp ds:dword_4DA308 2 +
mov [ebx+4] esi +
mov [ebx+8] edi +
jz loc_47B215  +
mov dword ptr [ebx+10h] 0 +
mov eax ebx +
mov dword ptr [ebx+0Ch] 0 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx off_483760 +
mov edi 1 +
mov ecx esi +
shl edi cl +
lea eax ds:1Bh[edi*4] +
shr eax 3 +
mov edx ebx +
sub edx offset unk_4D99E0 +
sar edx 3 +
add edx eax +
cmp edx 120h +
ja loc_47B23A  +
lea eax [ebx+eax*8] +
mov off_483760 eax +
jmp loc_47B24B  +
xor eax eax +
jmp loc_47B26A  +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_47B2E7  +
cmp dword ptr [ebx+4] 9 +
jg loc_47B2F0  +
xor eax eax +
call sub_47B0D0  +
mov eax [ebx+4] +
cmp ds:dword_4DA308 2 +
mov edx ds:dword_4DA2E0[eax*4] +
mov ds:dword_4DA2E0[eax*4] ebx +
mov [ebx] edx +
jz loc_47B300  +
mov ebx [ebp+var_4] +
leave   +
retn   +
mov ebx [ebp+var_4] +
leave   +
jmp free  +
mov [esp+18h+var_18] offset unk_4DA320 +
call ds:LeaveCriticalSection  +
mov ebx [ebp+var_4] +
sub esp 4 +
leave   +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov edi [esp+38h+arg_8] +
mov eax [eax+10h] +
mov ebp edi +
sar ebp 1Fh +
mov [esp+38h+var_1C] eax +
mov eax [esp+38h+arg_0] +
lea ebx [eax+14h] +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_28] eax +
sar eax 1Fh +
mov [esp+38h+var_24] eax +
mov eax [ebx+ecx*4] +
mov esi [esp+38h+var_24] +
imul esi eax +
mul  [esp+38h+var_28] +
add edx esi +
add eax edi +
adc edx ebp +
xor ebp ebp +
mov [ebx+ecx*4] eax +
add ecx 1 +
mov edi edx +
cmp [esp+38h+var_1C] ecx +
jg loc_47B353  +
mov edx ebp +
mov eax [esp+38h+arg_0] +
or edx edi +
jz loc_47B39E  +
mov edx [esp+38h+var_1C] +
cmp edx [eax+8] +
jge loc_47B3A6  +
mov edx [esp+38h+arg_0] +
mov eax [esp+38h+var_1C] +
mov [edx+eax*4+14h] edi +
add eax 1 +
mov [edx+10h] eax +
mov eax edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
mov [esp+38h+var_28] eax +
add eax 1 +
mov [esp+38h+var_38] eax +
call sub_47B1E0  +
test eax eax +
mov ebx eax +
jz loc_47B3F8  +
lea ecx [eax+0Ch] +
mov eax [esp+38h+arg_0] +
mov eax [eax+10h] +
mov [esp+38h+var_38] ecx +
lea edx ds:8[eax*4] +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_30] edx +
add eax 0Ch +
mov [esp+38h+var_34] eax +
call memcpy  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call sub_47B2B0  +
mov [esp+38h+arg_0] ebx +
jmp loc_47B38A  +
xor eax eax +
jmp loc_47B39E  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_47B1E0  +
test eax eax +
jz loc_47B421  +
mov edx [esp+1Ch+arg_0] +
mov dword ptr [eax+10h] 1 +
mov [eax+14h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
mov esi [edi+10h] +
mov ebx [ebp+10h] +
cmp esi ebx +
jge loc_47B455  +
mov eax esi +
mov esi ebx +
mov ebx eax +
mov eax edi +
mov edi ebp +
mov ebp eax +
lea eax [esi+ebx] +
cmp eax [edi+8] +
mov [esp+3Ch+var_1C] eax +
setnle al  +
movzx eax al +
add eax [edi+4] +
mov [esp+3Ch+var_3C] eax +
call sub_47B1E0  +
test eax eax +
mov [esp+3Ch+var_10] eax +
jz loc_47B57B  +
mov ecx [esp+3Ch+var_1C] +
lea eax [eax+14h] +
mov [esp+3Ch+var_24] eax +
lea ecx [eax+ecx*4] +
mov edx ecx +
cmp eax edx +
mov [esp+3Ch+var_14] ecx +
jnb loc_47B4A5  +
mov edx [esp+3Ch+var_14] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp edx eax +
ja loc_47B498  +
lea eax [edi+14h] +
mov [esp+3Ch+var_18] eax +
lea eax [eax+esi*4] +
mov [esp+3Ch+var_2C] eax +
lea eax [ebp+14h] +
lea ebx [eax+ebx*4] +
cmp eax ebx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_20] ebx +
jnb loc_47B535  +
add [esp+3Ch+var_28] 4 +
mov eax [esp+3Ch+var_28] +
mov ebp [eax-4] +
test ebp ebp +
jz loc_47B526  +
mov edi [esp+3Ch+var_24] +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_30] 0 +
jmp loc_47B4F2  +
mov edi eax +
add esi 4 +
mov ecx [edi] +
mov eax ebp +
mul  dword ptr [esi-4] +
xor ebx ebx +
add ecx eax +
adc ebx edx +
add ecx [esp+3Ch+var_34] +
adc ebx [esp+3Ch+var_30] +
xor edx edx +
cmp [esp+3Ch+var_2C] esi +
mov [esp+3Ch+var_30] edx +
lea eax [edi+4] +
mov [esp+3Ch+var_34] ebx +
mov [edi] ecx +
ja loc_47B4F0  +
mov eax [esp+3Ch+var_34] +
mov [edi+4] eax +
mov eax [esp+3Ch+var_28] +
add [esp+3Ch+var_24] 4 +
cmp [esp+3Ch+var_20] eax +
ja loc_47B4C5  +
mov esi [esp+3Ch+var_1C] +
test esi esi +
jle loc_47B568  +
mov ebx [esp+3Ch+var_14] +
mov esi [ebx-4] +
test esi esi +
jnz loc_47B568  +
mov edx [esp+3Ch+var_1C] +
mov eax edx +
shl eax 2 +
sub ebx eax +
mov eax ebx +
jmp loc_47B55F  +
mov ecx [eax+edx*4-4] +
test ecx ecx +
jnz loc_47B564  +
sub edx 1 +
jnz loc_47B557  +
mov [esp+3Ch+var_1C] edx +
mov eax [esp+3Ch+var_10] +
mov ebx [esp+3Ch+var_1C] +
mov [eax+10h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_47B573  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov eax ebx +
and eax 3 +
jnz loc_47B640  +
sar ebx 2 +
mov eax edx +
test ebx ebx +
jz loc_47B5F5  +
mov edi ds:dword_4D99C0 +
test edi edi +
jz loc_47B68E  +
test bl 1 +
jnz loc_47B5C9  +
sar ebx 1 +
jz loc_47B5F3  +
mov esi [edi] +
test esi esi +
nop   +
jz loc_47B600  +
mov edi esi +
test bl 1 +
jz loc_47B5B6  +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edx +
mov [ebp+var_1C] edx +
call sub_47B430  +
test eax eax +
mov esi eax +
jz loc_47B665  +
mov edx [ebp+var_1C] +
mov [esp+28h+var_28] edx +
call sub_47B2B0  +
sar ebx 1 +
mov edx esi +
jnz loc_47B5BA  +
mov eax edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_47B0D0  +
mov esi [edi] +
mov edx [ebp+var_1C] +
test esi esi +
jz loc_47B66F  +
cmp ds:dword_4DA308 2 +
jnz loc_47B5C2  +
mov [ebp+var_1C] edx +
mov edi esi +
mov [esp+28h+var_28] offset unk_4DA338 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_47B5C4  +
mov eax ds:dword_4D543C[eax*4] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] eax +
call sub_47B320  +
test eax eax +
mov edx eax +
jnz loc_47B59A  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] edi +
call sub_47B430  +
test eax eax +
mov esi eax +
mov [edi] eax +
jz loc_47B665  +
mov dword ptr [eax] 0 +
mov edx [ebp+var_1C] +
jmp loc_47B616  +
mov eax 1 +
mov [ebp+var_1C] edx +
call sub_47B0D0  +
mov edi ds:dword_4D99C0 +
mov edx [ebp+var_1C] +
test edi edi +
jz loc_47B6D0  +
cmp ds:dword_4DA308 2 +
jnz loc_47B5B1  +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] offset unk_4DA338 +
call ds:LeaveCriticalSection  +
mov edx [ebp+var_1C] +
sub esp 4 +
jmp loc_47B5B1  +
mov [esp+28h+var_28] 1 +
call sub_47B1E0  +
test eax eax +
mov edi eax +
jz loc_47B700  +
mov dword ptr [eax+14h] 271h +
mov edx [ebp+var_1C] +
mov dword ptr [eax+10h] 1 +
mov ds:dword_4D99C0 eax +
mov dword ptr [eax] 0 +
jmp loc_47B6A8  +
mov ds:dword_4D99C0 0 +
xor eax eax +
jmp loc_47B667  +
***
jmp sub_47B720  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi eax +
mov edx [eax+4] +
mov eax [eax+10h] +
mov ebx esi +
sar ebx 5 +
add eax ebx +
lea ebp [eax+1] +
mov [esp+2Ch+var_14] eax +
mov eax [edi+8] +
cmp ebp eax +
jle loc_47B759  +
lea esi [esi+0] +
add eax eax +
add edx 1 +
cmp ebp eax +
jg loc_47B750  +
mov [esp+2Ch+var_2C] edx +
call sub_47B1E0  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_47B82A  +
test ebx ebx +
lea edx [eax+14h] +
jle loc_47B787  +
xor eax eax +
mov dword ptr [edx+eax*4] 0 +
add eax 1 +
cmp eax ebx +
jnz loc_47B776  +
lea edx [edx+eax*4] +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_0] +
mov ecx [edi+10h] +
add eax 14h +
and esi 1Fh +
mov [esp+2Ch+var_20] esi +
lea edi [eax+ecx*4] +
mov ecx edi +
jz loc_47B816  +
mov [esp+2Ch+var_1C] 20h +
mov [esp+2Ch+var_10] ebp +
mov ebp ecx +
sub [esp+2Ch+var_1C] esi +
xor esi esi +
jmp loc_47B7C2  +
mov edx edi +
mov ebx [eax] +
add eax 4 +
movzx ecx byte ptr [esp+2Ch+var_20] +
lea edi [edx+4] +
shl ebx cl +
movzx ecx byte ptr [esp+2Ch+var_1C] +
or ebx esi +
mov [edx] ebx +
mov esi [eax-4] +
shr esi cl +
cmp ebp eax +
ja loc_47B7C0  +
mov eax [esp+2Ch+var_14] +
mov ebp [esp+2Ch+var_10] +
mov [edx+4] esi +
add eax 2 +
test esi esi +
cmovnz ebp eax +
mov edi [esp+2Ch+var_18] +
lea eax [ebp-1] +
mov [edi+10h] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_47B2B0  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx edi +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp ebx eax +
mov [edx-4] ecx +
ja loc_47B818  +
jmp loc_47B7F6  +
xor eax eax +
jmp loc_47B80E  +
***
mov edx [esp+arg_4] +
mov eax [ecx+10h] +
mov ebx [edx+10h] +
sub eax ebx +
test eax eax +
jnz loc_47B869  +
shl ebx 2 +
add ecx 14h +
lea eax [ecx+ebx] +
lea edx [edx+ebx+14h] +
jmp loc_47B858  +
cmp ecx eax +
jnb loc_47B870  +
sub edx 4 +
sub eax 4 +
mov ebx [edx] +
cmp [eax] ebx +
jz loc_47B854  +
sbb eax eax +
or eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] ebx +
call sub_47B830  +
test eax eax +
jz loc_47B9C2  +
js loc_47B9E8  +
xor edi edi +
mov eax [esi+4] +
mov [esp+2Ch+var_2C] eax +
call sub_47B1E0  +
test eax eax +
mov edx eax +
mov [esp+2Ch+var_10] eax +
jz loc_47B9F8  +
mov [eax+0Ch] edi +
mov eax [esi+10h] +
add esi 14h +
lea ebp [ebx+14h] +
lea edi [edx+14h] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_14] eax +
lea eax [esi+eax*4] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+10h] +
mov [esp+2Ch+var_20] 0 +
lea eax [ebp+eax*4+0] +
mov [esp+2Ch+var_18] eax +
lea esi [esi+0] +
add ebp 4 +
add esi 4 +
mov ecx [ebp-4] +
mov eax [esi-4] +
xor edx edx +
xor ebx ebx +
sub eax ecx +
sbb edx ebx +
sub eax [esp+2Ch+var_24] +
sbb edx [esp+2Ch+var_20] +
add edi 4 +
mov [esp+2Ch+var_20] 0 +
mov ecx edx +
and ecx 1 +
cmp [esp+2Ch+var_18] ebp +
mov [esp+2Ch+var_24] ecx +
mov [edi-4] eax +
ja loc_47B900  +
cmp [esp+2Ch+var_1C] esi +
jbe loc_47B98A  +
mov ebx [esp+2Ch+var_20] +
mov ecx [esp+2Ch+var_24] +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_24] esi +
nop   +
add esi 4 +
mov eax [esi-4] +
xor edx edx +
sub eax ecx +
sbb edx ebx +
add edi 4 +
mov ebp edx +
xor ebx ebx +
and ebp 1 +
cmp [esp+2Ch+var_1C] esi +
mov ecx ebp +
mov [edi-4] eax +
ja loc_47B950  +
mov ebp [esp+2Ch+var_24] +
mov edi [esp+2Ch+var_1C] +
mov ebx [esp+2Ch+var_18] +
not ebp  +
lea edx [ebp+edi+0] +
shr edx 2 +
lea edi [ebx+edx*4+4] +
test eax eax +
jnz loc_47B9AF  +
mov edx [esp+2Ch+var_14] +
mov eax edx +
shl eax 2 +
sub edi eax +
mov eax edx +
nop   +
lea esi [esi+0] +
sub eax 1 +
mov edx [edi+eax*4-4] +
test edx edx +
jz loc_47B9A0  +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_14] +
mov [eax+10h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0 +
call sub_47B1E0  +
test eax eax +
jz loc_47B9F8  +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edi 1 +
mov esi ebx +
mov ebx eax +
jmp loc_47B8AB  +
xor eax eax +
jmp loc_47B9BA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
lea ebx [eax+14h] +
mov eax [eax+10h] +
lea ebp [ebx+eax*4] +
mov edx [ebp-4] +
lea esi [ebp-4] +
bsr eax edx +
xor eax 1Fh +
sub ecx eax +
cmp eax 0Ah +
mov [edi] ecx +
jg loc_47BA70  +
mov ecx 0Bh +
mov edi edx +
sub ecx eax +
shr edi cl +
or edi 3FF00000h +
mov dword ptr [esp+20h+var_20+4] edi +
xor edi edi +
cmp ebx esi +
mov dword ptr [esp+20h+var_20] 0 +
jnb loc_47BA59  +
mov edi [ebp-8] +
shr edi cl +
lea ecx [eax+15h] +
shl edx cl +
or edi edx +
mov dword ptr [esp+20h+var_20] edi +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
cmp ebx esi +
jnb loc_47BA7C  +
mov edi [ebp-8] +
lea esi [ebp-8] +
mov ecx eax +
sub ecx 0Bh +
mov [esp+20h+var_14] ecx +
jz loc_47BAD0  +
movzx ecx byte ptr [esp+20h+var_14] +
mov ebp 2Bh +
sub ebp eax +
mov eax edi +
mov dword ptr [esp+20h+var_20] 0 +
shl edx cl +
mov ecx ebp +
shr eax cl +
or edx 3FF00000h +
or edx eax +
xor eax eax +
cmp esi ebx +
mov dword ptr [esp+20h+var_20+4] edx +
jbe loc_47BAB9  +
mov eax [esi-4] +
shr eax cl +
movzx ecx byte ptr [esp+20h+var_14] +
shl edi cl +
or eax edi +
mov dword ptr [esp+20h+var_20] eax +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or edx 3FF00000h +
mov dword ptr [esp+20h+var_20] edi +
mov dword ptr [esp+20h+var_20+4] edx +
fld  [esp+20h+var_20] +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
fld  [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] 1 +
fstp  [esp+1Ch+var_14] +
call sub_47B1E0  +
test eax eax +
jz loc_47BBE5  +
mov ebx dword ptr [esp+1Ch+var_14+4] +
mov edi dword ptr [esp+1Ch+var_14] +
mov edx ebx +
and ebx 7FFFFFFFh +
and edx 0FFFFFh +
mov ecx edx +
shr ebx 14h +
or ecx 100000h +
test ebx ebx +
cmovnz edx ecx +
test edi edi +
jnz loc_47BB80  +
bsf ecx edx +
shr edx cl +
test ebx ebx +
mov [eax+14h] edx +
lea esi [ecx+20h] +
mov edx 1 +
mov dword ptr [eax+10h] 1 +
jz loc_47BBB4  +
mov edi [esp+1Ch+arg_8] +
lea edx [esi+ebx-433h] +
mov [edi] edx +
mov edx 35h +
sub edx esi +
mov esi [esp+1Ch+arg_C] +
mov [esi] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsf esi edi +
mov ecx esi +
shr edi cl +
test esi esi +
jz loc_47BBE0  +
mov ecx 20h +
mov ebp edx +
sub ecx esi +
shl ebp cl +
mov ecx ebp +
or ecx edi +
mov [eax+14h] ecx +
mov ecx esi +
shr edx cl +
cmp edx 1 +
mov [eax+18h] edx +
sbb edx edx +
add edx 2 +
test ebx ebx +
mov [eax+10h] edx +
jnz loc_47BB59  +
mov edi [esp+1Ch+arg_8] +
sub esi 432h +
bsr ecx [eax+edx*4+10h] +
shl edx 5 +
mov [edi] esi +
mov esi [esp+1Ch+arg_C] +
xor ecx 1Fh +
sub edx ecx +
mov [esi] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+14h] edi +
jmp loc_47BBA2  +
xor eax eax +
jmp loc_47BB73  +
***
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
test cl cl +
mov [eax] cl +
jnz loc_47BC04  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+28h+arg_8] +
mov ebx [esp+28h+arg_0] +
mov esi [esp+28h+arg_4] +
lea ecx [edi+8] +
mov eax ecx +
imul  edx +
sar ecx 1Fh +
sar edx 1 +
sub edx ecx +
cmp edx 1 +
jle loc_47BCFF  +
mov eax 1 +
xor ecx ecx +
add eax eax +
add ecx 1 +
cmp edx eax +
jg loc_47BC56  +
mov [esp+28h+var_28] ecx +
call sub_47B1E0  +
mov edx [esp+28h+arg_C] +
cmp esi 9 +
mov [eax+14h] edx +
mov dword ptr [eax+10h] 1 +
jle loc_47BCF0  +
lea ecx [ebx+9] +
add ebx esi +
mov [esp+28h+var_1C] ecx +
mov ebp ecx +
add ebp 1 +
movsx ecx byte ptr [ebp-1] +
mov [esp+28h+var_24] 0Ah +
mov [esp+28h+var_28] eax +
sub ecx 30h +
mov [esp+28h+var_20] ecx +
call sub_47B320  +
cmp ebp ebx +
jnz loc_47BC85  +
mov ebx [esp+28h+var_1C] +
lea ebx [ebx+esi-9] +
add ebx [esp+28h+arg_10] +
cmp edi esi +
jle loc_47BCE2  +
sub edi esi +
add edi ebx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movsx edx byte ptr [ebx-1] +
mov [esp+28h+var_24] 0Ah +
mov [esp+28h+var_28] eax +
sub edx 30h +
mov [esp+28h+var_20] edx +
call sub_47B320  +
cmp ebx edi +
jnz loc_47BCC0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+28h+arg_10] +
lea ebx [ebx+esi+9] +
mov esi 9 +
jmp loc_47BCB3  +
xor ecx ecx +
jmp loc_47BC5F  +
***
sub esp 34h +
mov esi [esp+34h+arg_0] +
lea eax [esp+34h+var_C] +
mov [esp+34h+var_30] eax +
mov ebx [esp+34h+arg_4] +
mov [esp+34h+var_34] esi +
call sub_47BA00  +
lea eax [esp+34h+var_8] +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] ebx +
fst  [esp+34h+var_2C] +
fstp  [esp+34h+var_24] +
call sub_47BA00  +
mov eax [esi+10h] +
sub eax [ebx+10h] +
mov edx [esp+34h+var_C] +
sub edx [esp+34h+var_8] +
shl eax 5 +
add eax edx +
fst  [esp+34h+var_1C] +
test eax eax +
fld  [esp+34h+var_24] +
jle loc_47BD80  +
fstp  st +
shl eax 14h +
add dword ptr [esp+34h+var_2C+4] eax +
fld  [esp+34h+var_2C] +
add esp 34h +
fdivrp st(1) st +
pop ebx  +
pop esi  +
retn   +
fstp  st(1) +
shl eax 14h +
sub dword ptr [esp+34h+var_1C+4] eax +
fld  [esp+34h+var_1C] +
add esp 34h +
fdivp st(1) st +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebp [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [ebp+0] +
jmp loc_47BDC7  +
movzx ebx byte ptr [ecx] +
movsx eax bl +
sub ebx 41h +
cmp bl 19h +
lea edi [eax+20h] +
cmovbe eax edi +
cmp eax esi +
jnz loc_47BDE2  +
add edx 1 +
movsx esi byte ptr [edx-1] +
add ecx 1 +
test esi esi +
jnz loc_47BDB1  +
mov [ebp+0] ecx +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_0] +
mov ecx [edi+10h] +
lea edx [esi-1] +
sar edx 5 +
lea esi [eax+edx*4+4] +
lea edx [edi+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_47BE4A  +
mov ecx eax +
lea esi [esi+0] +
add edx 4 +
mov ebp [edx-4] +
add ecx 4 +
cmp ebx edx +
mov [ecx-4] ebp +
ja loc_47BE20  +
sub ebx edi +
lea edx [ebx-15h] +
shr edx 2 +
lea eax [eax+edx*4+4] +
cmp esi eax +
jbe loc_47BE4E  +
add eax 4 +
mov dword ptr [eax-4] 0 +
cmp esi eax +
ja loc_47BE40  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
lea edx [eax+14h] +
mov eax [eax+10h] +
sar ebx 5 +
cmp eax ebx +
jge loc_47BEA3  +
lea ebx [edx+eax*4] +
cmp edx ebx +
jnb loc_47BE9D  +
lea eax [ebx-4] +
mov ebx [ebx-4] +
test ebx ebx +
jz loc_47BE99  +
jmp loc_47BED0  +
sub eax 4 +
mov ecx [eax] +
test ecx ecx +
jnz loc_47BED0  +
cmp edx eax +
jb loc_47BE90  +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
jle loc_47BEC4  +
mov ecx [esp+arg_4] +
lea ebx [edx+ebx*4] +
and ecx 1Fh +
jz loc_47BE7B  +
mov edi [ebx] +
mov eax 1 +
mov esi edi +
shr esi cl +
shl esi cl +
cmp esi edi +
jnz loc_47BE9F  +
jmp loc_47BE7B  +
lea ebx [edx+ebx*4] +
jmp loc_47BE7B  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esp+10h+arg_0] +
mov ecx [esp+10h+arg_4] +
mov edx [esi+10h] +
lea ebp [eax+14h] +
mov eax ecx +
sar eax 5 +
cmp eax edx +
jge loc_47BF90  +
lea eax [ebp+eax*4+0] +
and ecx 1Fh +
lea edi [ebp+edx*4+0] +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_10] ecx +
jz loc_47BFB0  +
mov esi [esp+10h+var_C] +
mov eax [esp+10h+var_10] +
mov [esp+10h+var_8] 20h +
sub [esp+10h+var_8] eax +
mov ebx [esi] +
lea edx [esi+4] +
mov ecx eax +
shr ebx cl +
cmp edi edx +
jbe loc_47BFEE  +
mov esi ebp +
mov [esp+10h+var_4] ebp +
mov ebp [esp+10h+var_8] +
lea esi [esi+0] +
mov eax [edx] +
mov ecx ebp +
add esi 4 +
add edx 4 +
shl eax cl +
movzx ecx byte ptr [esp+10h+var_10] +
or eax ebx +
mov [esi-4] eax +
mov ebx [edx-4] +
shr ebx cl +
cmp edi edx +
ja loc_47BF50  +
sub edi [esp+10h+var_C] +
mov ebp [esp+10h+var_4] +
lea eax [edi-5] +
shr eax 2 +
lea eax [ebp+eax*4+4] +
test ebx ebx +
mov [eax] ebx +
jz loc_47BF89  +
add eax 4 +
sub eax ebp +
sar eax 2 +
jmp loc_47BFDB  +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+10h] 0 +
mov eax [esp+10h+arg_0] +
mov dword ptr [eax+14h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi eax +
mov edx ebp +
jbe loc_47BF90  +
add eax 4 +
mov ecx [eax-4] +
add edx 4 +
cmp edi eax +
mov [edx-4] ecx +
ja loc_47BFB6  +
mov eax [esp+10h+var_C] +
not eax  +
add eax edi +
shr eax 2 +
lea eax ds:4[eax*4] +
sar eax 2 +
mov esi [esp+10h+arg_0] +
test eax eax +
mov [esi+10h] eax +
jz loc_47BF9B  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
jmp loc_47BF80  +
***
mov ecx [eax+10h] +
lea edx [eax+14h] +
lea ebx [edx+ecx*4] +
cmp edx ebx +
jnb loc_47C03A  +
mov ecx [eax+14h] +
xor eax eax +
test ecx ecx +
jz loc_47C026  +
jmp loc_47C032  +
mov ecx [edx] +
test ecx ecx +
jnz loc_47C032  +
add edx 4 +
add eax 20h +
cmp ebx edx +
ja loc_47C020  +
pop ebx  +
retn   +
bsf ecx ecx +
add eax ecx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebx+10h] +
cmp [eax+10h] ecx +
jge loc_47C05D  +
mov [esp+2Ch+arg_0] ebx +
mov ebx eax +
mov eax [esp+2Ch+arg_0] +
lea ebp [ebx+14h] +
mov eax [eax+4] +
mov [esp+2Ch+var_2C] eax +
call sub_47B1E0  +
mov ecx [esp+2Ch+arg_0] +
xor edx edx +
mov ecx [ecx+10h] +
mov [esp+2Ch+var_18] eax +
add eax 14h +
mov [eax-4] ecx +
mov edi [ebx+10h] +
mov [esp+2Ch+var_14] ecx +
mov ecx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_10] edi +
lea edi [eax+edi*4] +
add ecx 14h +
mov [esp+2Ch+var_1C] edi +
nop   +
lea esi [esi+0] +
mov esi [ebp+0] +
add ecx 4 +
add ebp 4 +
mov ebx [ecx-4] +
add eax 4 +
movzx edi si +
mov [esp+2Ch+var_20] edi +
movzx edi bx +
add edi [esp+2Ch+var_20] +
shr esi 10h +
shr ebx 10h +
add edi edx +
add ebx esi +
mov edx edi +
and edx 10000h +
shr edx 10h +
add ebx edx +
mov edx ebx +
and edx 10000h +
mov [eax-2] bx +
shr edx 10h +
mov [eax-4] di +
cmp [esp+2Ch+var_1C] eax +
ja loc_47C0A0  +
mov edi [esp+2Ch+arg_0] +
mov ebx [edi+10h] +
mov edi [esp+2Ch+var_1C] +
sub ebx [esp+2Ch+var_10] +
lea edi [edi+ebx*4] +
cmp edi eax +
jbe loc_47C131  +
mov esi [ecx] +
add eax 4 +
add ecx 4 +
movzx ebx si +
add ebx edx +
mov edx ebx +
and edx 10000h +
shr edx 10h +
shr esi 10h +
add esi edx +
mov [eax-2] si +
mov edx esi +
mov [eax-4] bx +
shr edx 10h +
cmp edi eax +
ja loc_47C103  +
test edx edx +
jz loc_47C15A  +
mov eax [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ecx [eax+8] +
jz loc_47C166  +
mov ecx [esp+2Ch+var_14] +
mov edi [esp+2Ch+var_18] +
mov eax ecx +
add eax 1 +
mov [edi+10h] eax +
mov dword ptr [edi+ecx*4+14h] 1 +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [eax+4] +
mov [esp+2Ch+var_20] eax +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_47B1E0  +
mov edx [edi+10h] +
lea ecx ds:8[edx*4] +
lea edx [edi+0Ch] +
mov ebx eax +
lea eax [eax+0Ch] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
call sub_47B2B0  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_14] eax +
jmp loc_47C142  +
***
push esi  +
push ebx  +
sub esp 3Ch +
call localeconv  +
cmp ds:byte_4DA3D0 0 +
mov ebp [eax] +
jz loc_47C653  +
mov eax [esp+3Ch+arg_C] +
mov dword ptr [eax] 0 +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
movzx ecx byte ptr [edx+2] +
lea edi [edx+2] +
cmp cl 30h +
jnz loc_47C7B0  +
add edx 3 +
xor eax eax +
mov edi edx +
add edx 1 +
movzx ecx byte ptr [edx-1] +
add eax 1 +
cmp cl 30h +
jz loc_47C200  +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47C2A4  +
movzx esi byte ptr [ebp+0] +
mov ebx esi +
test bl bl +
jz loc_47C8E9  +
movzx edx byte ptr [edi] +
cmp bl dl +
jnz loc_47C662  +
xor edx edx +
jmp loc_47C249  +
cmp cl [edi+edx] +
jnz loc_47C660  +
add edx 1 +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_47C240  +
add ebx edi +
movzx edx byte ptr [ebx] +
movzx ecx dl +
movzx ecx ds:byte_4DA3A0[ecx] +
test cl cl +
jz loc_47C754  +
cmp dl 30h +
mov edi ebx +
jnz loc_47C28A  +
add edi 1 +
movzx edx byte ptr [edi] +
cmp dl 30h +
jz loc_47C275  +
movzx eax dl +
movzx ecx ds:byte_4DA3A0[eax] +
xor eax eax +
test cl cl +
setz al  +
mov [esp+3Ch+var_28] eax +
mov eax esi +
mov esi ebx +
mov byte ptr [esp+3Ch+var_24] al +
mov eax 1 +
jmp loc_47C2C6  +
movzx edx byte ptr [edi] +
add eax 1 +
xor esi esi +
movzx ebx byte ptr [ebp+0] +
mov [esp+3Ch+var_28] 0 +
movzx ecx dl +
movzx ecx ds:byte_4DA3A0[ecx] +
mov byte ptr [esp+3Ch+var_24] bl +
test cl cl +
mov ebx edi +
jz loc_47C2E2  +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx] +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47C2D0  +
cmp dl byte ptr [esp+3Ch+var_24] +
jz loc_47C680  +
test esi esi +
movzx edx byte ptr [ebx] +
jz loc_47C7A3  +
sub esi ebx +
lea esi ds:0[esi*4] +
mov [esp+3Ch+var_24] esi +
cmp dl 50h +
jz loc_47C410  +
cmp dl 70h +
jz loc_47C410  +
mov ecx ebx +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_1C] 0 +
test eax eax +
jz loc_47C400  +
mov eax [esp+3Ch+arg_0] +
mov [eax] ecx +
mov esi [esp+3Ch+var_28] +
xor eax eax +
test esi esi +
jnz loc_47C3F6  +
mov ecx [esp+3Ch+var_1C] +
test ecx ecx +
jz loc_47C4E0  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_4] +
test edx edx +
mov eax [eax+0Ch] +
jnz loc_47C6C1  +
cmp eax 2 +
jz loc_47C98E  +
cmp eax 3 +
jz loc_47C97D  +
cmp eax 1 +
jz loc_47C73C  +
mov eax [esp+3Ch+arg_4] +
mov edi [eax] +
mov ebx edi +
and edi 1Fh +
sar ebx 5 +
cmp edi 1 +
mov esi ebx +
sbb esi 0FFFFFFFFh +
xor edx edx +
mov eax esi +
sar eax 1 +
jz loc_47C3A7  +
lea esi [esi+0] +
add edx 1 +
sar eax 1 +
jnz loc_47C3A0  +
mov [esp+3Ch+var_3C] edx +
call sub_47B1E0  +
mov ecx [esp+3Ch+arg_C] +
xor edx edx +
test ebx ebx +
mov [ecx] eax +
mov [eax+10h] esi +
jle loc_47C3D1  +
nop   +
mov dword ptr [eax+edx*4+14h] 0FFFFFFFFh +
add edx 1 +
cmp edx ebx +
jnz loc_47C3C0  +
mov edx ebx +
cmp esi ebx +
jle loc_47C3E4  +
mov ebx 20h +
mov ecx ebx +
sub ecx edi +
sar ebx cl +
mov [eax+edx*4+14h] ebx +
mov eax [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov [esi] eax +
mov eax 11h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+3Ch+arg_0] +
lea eax [edi-1] +
mov [esi] eax +
jmp loc_47C336  +
movzx edx byte ptr [ebx+1] +
cmp dl 2Bh +
jz loc_47C793  +
cmp dl 2Dh +
jz loc_47C690  +
movzx edx ds:byte_4DA3A0[edx] +
lea esi [ebx+1] +
mov [esp+3Ch+var_20] 0 +
lea ecx [edx-1] +
cmp cl 18h +
ja loc_47C6B2  +
lea ecx [edx-10h] +
mov [esp+3Ch+var_18] ecx +
lea ecx [esi+1] +
movzx esi byte ptr [esi+1] +
movzx esi ds:byte_4DA3A0[esi] +
mov edx esi +
sub esi 1 +
movzx edx dl +
mov [esp+3Ch+var_1C] edx +
mov edx esi +
cmp dl 18h +
ja loc_47CAF4  +
mov [esp+3Ch+var_10] edi +
mov edx [esp+3Ch+var_18] +
xor esi esi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_14] ebp +
mov ebp eax +
test edx 0F8000000h +
mov eax 1 +
cmovnz esi eax +
add ecx 1 +
lea eax [edx+edx*4] +
lea edx [edi+eax*2-10h] +
movzx eax byte ptr [ecx] +
movzx eax ds:byte_4DA3A0[eax] +
movzx edi al +
sub eax 1 +
cmp al 18h +
jbe loc_47C484  +
mov eax ebp +
mov edi [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
mov [esp+3Ch+var_1C] esi +
mov [esp+3Ch+var_18] edx +
mov edx [esp+3Ch+var_18] +
mov esi edx +
neg esi  +
cmp [esp+3Ch+var_20] 0 +
cmovz esi edx +
add [esp+3Ch+var_24] esi +
jmp loc_47C328  +
mov eax ebx +
xor edx edx +
sub eax edi +
sub eax 1 +
cmp eax 7 +
jle loc_47C4FA  +
nop   +
sar eax 1 +
add edx 1 +
cmp eax 7 +
jg loc_47C4F0  +
mov [esp+3Ch+var_3C] edx +
call sub_47B1E0  +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
cmp byte ptr [ebp+1] 0 +
mov [esp+3Ch+var_18] eax +
jz loc_47C99F  +
xor eax eax +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [ebp+eax+1] 0 +
jnz loc_47C520  +
mov [esp+3Ch+var_20] eax +
cmp edi ebx +
jnb loc_47C9AC  +
mov eax [esp+3Ch+var_18] +
xor edx edx +
add ebp [esp+3Ch+var_20] +
mov [esp+3Ch+var_28] eax +
xor eax eax +
jmp loc_47C56D  +
cmp eax 20h +
jz loc_47C634  +
movzx ebx cl +
mov ecx eax +
add eax 4 +
movzx ebx ds:byte_4DA3A0[ebx] +
and ebx 0Fh +
shl ebx cl +
or edx ebx +
mov ebx esi +
cmp edi ebx +
jnb loc_47C583  +
movzx ecx byte ptr [ebx-1] +
lea esi [ebx-1] +
cmp cl [ebp+0] +
jnz loc_47C548  +
sub esi [esp+3Ch+var_20] +
mov ebx esi +
cmp edi ebx +
jb loc_47C56D  +
bsr eax edx +
xor eax 1Fh +
mov esi [esp+3Ch+var_28] +
lea edi [esi+4] +
mov [esi] edx +
mov esi [esp+3Ch+var_1C] +
sub edi [esp+3Ch+var_18] +
sar edi 2 +
mov [esi+10h] edi +
shl edi 5 +
sub edi eax +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax] +
cmp edi ebx +
jg loc_47C7B7  +
mov esi 0 +
jl loc_47C769  +
mov eax [esp+3Ch+arg_4] +
mov edi [esp+3Ch+var_24] +
cmp edi [eax+8] +
jg loc_47C730  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
cmp [esp+3Ch+var_24] eax +
jge loc_47C826  +
mov edi eax +
sub edi [esp+3Ch+var_24] +
cmp ebx edi +
jg loc_47C883  +
mov esi [esp+3Ch+arg_4] +
mov edx [esi+0Ch] +
cmp edx 2 +
jz loc_47CA81  +
cmp edx 3 +
jz loc_47CA5B  +
cmp edx 1 +
jz loc_47CA8E  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47B2B0  +
call _errno  +
mov dword ptr [eax] 22h +
add esp 3Ch +
mov eax 50h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_28] +
xor ecx ecx +
mov [eax] edx +
add eax 4 +
movzx ebx byte ptr [ebx-1] +
mov [esp+3Ch+var_28] eax +
xor edx edx +
mov eax 4 +
jmp loc_47C559  +
call sub_47CF00  +
jmp loc_47C1DB  +
mov edx esi +
mov ebx edi +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_28] 1 +
jmp loc_47C304  +
test esi esi +
jz loc_47C9C0  +
movzx edx byte ptr [ebx] +
jmp loc_47C2F7  +
mov [esp+3Ch+var_20] 1 +
movzx edx byte ptr [ebx+2] +
lea esi [ebx+2] +
movzx edx ds:byte_4DA3A0[edx] +
lea ecx [edx-1] +
cmp cl 18h +
jbe loc_47C444  +
mov ecx ebx +
mov [esp+3Ch+var_1C] 0 +
jmp loc_47C328  +
cmp eax 2 +
jz loc_47C872  +
cmp eax 3 +
jnz loc_47C61C  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_47C61C  +
mov [esp+3Ch+var_3C] 0 +
call sub_47B1E0  +
mov [esp+3Ch+var_1C] eax +
mov dword ptr [eax+10h] 1 +
mov dword ptr [eax+14h] 1 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov esi [esp+3Ch+arg_C] +
mov edi [esp+3Ch+var_1C] +
mov [esi] edi +
mov esi [esp+3Ch+arg_8] +
mov [esi] eax +
call _errno  +
mov dword ptr [eax] 22h +
mov eax 62h +
jmp loc_47C3F6  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47B2B0  +
call _errno  +
mov dword ptr [eax] 22h +
add esp 3Ch +
mov eax 0A3h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_28] 1 +
jmp loc_47C304  +
mov eax ebx +
sub eax edi +
mov edi eax +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] eax +
call sub_47B720  +
sub [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
mov [esp+3Ch+var_18] eax +
jmp loc_47C5BE  +
mov [esp+3Ch+var_20] 0 +
jmp loc_47C698  +
movzx edx byte ptr [ebx] +
mov [esp+3Ch+var_24] 0 +
jmp loc_47C304  +
xor eax eax +
jmp loc_47C211  +
sub edi ebx +
mov [esp+3Ch+var_3C] esi +
xor esi esi +
mov [esp+3Ch+var_38] edi +
call sub_47BE60  +
test eax eax +
jz loc_47C80D  +
mov ebp [esp+3Ch+var_18] +
lea ecx [edi-1] +
mov eax 1 +
mov edx ecx +
mov si 1 +
sar edx 5 +
shl eax cl +
test [ebp+edx*4+0] eax +
jz loc_47C80D  +
test ecx ecx +
jle loc_47CA31  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_47BE60  +
test eax eax +
jz loc_47CA31  +
mov esi 3 +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_47BEE0  +
add [esp+3Ch+var_24] edi +
jmp loc_47C5BE  +
mov edi 1 +
test esi esi +
jz loc_47C854  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+0Ch] +
cmp eax 2 +
jz loc_47C8F0  +
cmp eax 3 +
jz loc_47C8FD  +
cmp eax 1 +
jz loc_47CA3B  +
or edi 10h +
mov eax [esp+3Ch+arg_C] +
mov esi [esp+3Ch+var_1C] +
mov [eax] esi +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+var_24] +
mov [eax] esi +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+3Ch+arg_10] +
test ebp ebp +
jnz loc_47C61C  +
jmp loc_47C6DF  +
test esi esi +
lea ebp [edi-1] +
jnz loc_47CA27  +
test ebp ebp +
jle loc_47C8A4  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call sub_47BE60  +
mov esi eax +
mov ecx ebp +
mov edx ebp +
mov ebp [esp+3Ch+var_18] +
mov eax 1 +
shl eax cl +
mov ecx esi +
sar edx 5 +
or ecx 2 +
test [ebp+edx*4+0] eax +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] edi +
cmovnz esi ecx +
sub ebx edi +
mov edi 2 +
mov [esp+3Ch+var_3C] eax +
call sub_47BEE0  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov [esp+3Ch+var_24] eax +
jmp loc_47C82B  +
xor ebx ebx +
jmp loc_47C257  +
mov eax 1 +
sub eax [esp+3Ch+arg_10] +
mov [esp+3Ch+arg_10] eax +
mov eax [esp+3Ch+arg_10] +
test eax eax +
jz loc_47C851  +
mov eax [esp+3Ch+var_1C] +
mov esi [eax+10h] +
mov [esp+3Ch+var_3C] eax +
call sub_477800  +
mov [esp+3Ch+var_1C] eax +
add eax 14h +
cmp edi 2 +
jz loc_47CABF  +
mov edi [esp+3Ch+var_1C] +
cmp esi [edi+10h] +
jl loc_47C949  +
and ebx 1Fh +
jz loc_47C973  +
bsr eax [eax+esi*4-4] +
mov edx 20h +
sub edx ebx +
xor eax 1Fh +
cmp edx eax +
jle loc_47C973  +
mov eax [esp+3Ch+var_1C] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] eax +
call sub_47BEE0  +
mov eax [esp+3Ch+arg_4] +
add [esp+3Ch+var_24] 1 +
mov esi [esp+3Ch+var_24] +
cmp esi [eax+8] +
jg loc_47C730  +
mov edi 21h +
jmp loc_47C854  +
mov ebx [esp+3Ch+arg_10] +
test ebx ebx +
jnz loc_47C73C  +
jmp loc_47C37E  +
mov esi [esp+3Ch+arg_10] +
test esi esi +
jz loc_47C73C  +
jmp loc_47C37E  +
mov [esp+3Ch+var_20] 0 +
jmp loc_47C52E  +
mov eax [esp+3Ch+var_18] +
xor edx edx +
mov [esp+3Ch+var_28] eax +
mov eax 20h +
jmp loc_47C589  +
movzx edx byte ptr [ebp+1] +
test dl dl +
jz loc_47CB01  +
cmp dl [ebx+1] +
jnz loc_47C7A0  +
mov edx 1 +
jmp loc_47C9E9  +
cmp cl [ebx+edx] +
jnz loc_47C7A0  +
add edx 1 +
movzx ecx byte ptr [ebp+edx+0] +
mov esi edx +
test cl cl +
jnz loc_47C9E0  +
add esi ebx +
movzx edx byte ptr [esi] +
mov ebx esi +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jz loc_47C2F7  +
nop   +
add ebx 1 +
movzx edx byte ptr [ebx] +
movzx ecx dl +
cmp ds:byte_4DA3A0[ecx] 0 +
jnz loc_47CA10  +
jmp loc_47C2F7  +
mov esi 1 +
jmp loc_47C8A4  +
mov esi 2 +
jmp loc_47C80D  +
test esi 2 +
jz loc_47C851  +
mov eax [esp+3Ch+var_18] +
or esi [eax] +
and esi 1 +
jnz loc_47C909  +
jmp loc_47C851  +
mov edx [esp+3Ch+arg_10] +
test edx edx +
jz loc_47C610  +
mov esi [esp+3Ch+var_1C] +
mov dword ptr [esi+10h] 1 +
mov esi [esp+3Ch+var_18] +
mov dword ptr [esi] 1 +
jmp loc_47C704  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_47CA67  +
jmp loc_47C610  +
cmp edi ebx +
jnz loc_47C610  +
cmp ebx 1 +
jle loc_47CA67  +
mov eax [esp+3Ch+var_1C] +
sub ebx 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_47BE60  +
test eax eax +
jz loc_47C610  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
jmp loc_47CA67  +
mov esi [esp+3Ch+arg_4] +
mov di 22h +
mov edx [esi] +
sub edx 1 +
cmp edx ebx +
jnz loc_47C854  +
mov esi ebx +
mov edx 1 +
sar esi 5 +
mov ecx ebx +
shl edx cl +
and edx [eax+esi*4] +
cmp edx 1 +
sbb edi edi +
not edi  +
add edi 22h +
jmp loc_47C854  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_47C4C2  +
mov esi 1 +
jmp loc_47C9F7  +
***
push esi  +
push ebx  +
sub esp 3Ch +
cmp ds:byte_4DA3D0 0 +
jz loc_47CE7A  +
mov eax [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax] +
mov edx eax +
sar edx 5 +
and eax 1Fh +
lea edi [esi+edx*4] +
lea edx [edi+4] +
cmovz edx edi +
mov [esp+3Ch+var_10] eax +
lea eax [edx-4] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] edx +
mov dword ptr [edx-4] 0 +
mov eax [eax] +
movzx edx byte ptr [eax+1] +
lea ecx [edx-1] +
cmp cl 1Fh +
ja loc_47CB76  +
add eax 1 +
movzx edx byte ptr [eax+1] +
lea ecx [edx-1] +
cmp cl 1Fh +
jbe loc_47CB67  +
cmp dl 30h +
jz loc_47CE84  +
movzx edx byte ptr [eax+1] +
mov edi [esp+3Ch+var_24] +
xor ebx ebx +
test edx edx +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_28] edi +
mov ebp edi +
lea edi [eax+1] +
jz loc_47CC64  +
lea esi [esi+0] +
movzx ecx ds:byte_4DA3A0[edx] +
test cl cl +
jnz loc_47CCF5  +
cmp edx 20h +
ja loc_47CE27  +
mov esi [esp+3Ch+var_2C] +
cmp [esp+3Ch+var_30] esi +
jle loc_47CD31  +
cmp ebx 7 +
jg loc_47CC44  +
cmp ebp [esp+3Ch+var_28] +
jnb loc_47CC44  +
mov edx 8 +
mov ecx 20h +
sub edx ebx +
lea esi ds:0[edx*4] +
mov edx ebp +
mov ebx esi +
sub ecx esi +
mov esi [ebp+0] +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_28] +
mov [esp+3Ch+var_18] edi +
mov edi ebx +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_34] ebp +
mov ebp ecx +
jmp loc_47CC19  +
mov esi eax +
mov eax [edx+4] +
mov ecx ebp +
add edx 4 +
mov ebx eax +
shl ebx cl +
mov ecx ebx +
or ecx esi +
mov [edx-4] ecx +
mov ecx edi +
shr eax cl +
mov [edx] eax +
cmp [esp+3Ch+var_34] edx +
ja loc_47CC17  +
mov ebp [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_1C] +
mov edi [esp+3Ch+var_18] +
cmp ebp [esp+3Ch+arg_8] +
ja loc_47CD17  +
mov eax edi +
mov ebx 8 +
movzx edx byte ptr [eax+1] +
lea edi [eax+1] +
test edx edx +
jnz loc_47CBB0  +
mov esi [esp+3Ch+var_30] +
mov edi ebp +
mov eax 4 +
test esi esi +
jz loc_47CCED  +
cmp ebx 7 +
jle loc_47CDC1  +
cmp [esp+3Ch+arg_8] edi +
jnb loc_47CD96  +
mov eax [esp+3Ch+arg_8] +
mov ecx [esp+3Ch+var_24] +
nop   +
add edi 4 +
mov edx [edi-4] +
add eax 4 +
cmp ecx edi +
mov [eax-4] edx +
jnb loc_47CC90  +
mov edx ecx +
add eax 4 +
cmp edx eax +
mov dword ptr [eax-4] 0 +
jnb loc_47CCA2  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_24] edx +
mov eax [eax-4] +
test eax eax +
jnz loc_47CCE8  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+arg_8] eax +
jz loc_47CEAD  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+arg_8] +
jmp loc_47CCDF  +
cmp edx eax +
jz loc_47CEA9  +
sub eax 4 +
mov ecx [eax] +
test ecx ecx +
jz loc_47CCD7  +
mov eax 5 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
add [esp+3Ch+var_30] 1 +
cmp ebx 8 +
jg loc_47CD74  +
mov eax [ebp+0] +
shl eax 4 +
and ecx 0Fh +
or ecx eax +
mov eax edi +
mov [ebp+0] ecx +
jmp loc_47CC55  +
mov ebx [esp+3Ch+var_30] +
lea esi [ebp-4] +
mov dword ptr [ebp-4] 0 +
mov ebp esi +
mov [esp+3Ch+var_28] esi +
mov [esp+3Ch+var_2C] ebx +
xor ebx ebx +
movzx edx byte ptr [eax+2] +
mov eax edi +
cmp dl 20h +
ja loc_47CD4C  +
lea esi [esi+0] +
add eax 1 +
movzx edx byte ptr [eax+1] +
cmp dl 20h +
jbe loc_47CD40  +
cmp dl 30h +
jnz loc_47CC55  +
movzx edx byte ptr [eax+2] +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_47CC55  +
cmp byte ptr [eax+3] 21h +
lea edx [eax+2] +
cmovnb eax edx +
jmp loc_47CC55  +
cmp ebp [esp+3Ch+arg_8] +
mov eax edi +
jbe loc_47CC55  +
mov dword ptr [ebp-4] 0 +
xor eax eax +
sub ebp 4 +
mov ebx 1 +
jmp loc_47CD08  +
mov ebx [esp+3Ch+var_10] +
test ebx ebx +
jz loc_47CEE3  +
mov edi [esp+3Ch+var_14] +
mov ecx 20h +
mov eax 0FFFFFFFFh +
sub ecx [esp+3Ch+var_10] +
shr eax cl +
and eax [edi-4] +
mov [edi-4] eax +
jmp loc_47CCBB  +
cmp edi [esp+3Ch+var_28] +
jnb loc_47CC7C  +
mov eax 8 +
mov esi 20h +
sub eax ebx +
mov ebx [edi] +
lea ebp ds:0[eax*4] +
mov eax edi +
sub esi ebp +
mov [esp+3Ch+var_30] edi +
mov edi [esp+3Ch+var_28] +
mov [esp+3Ch+var_34] esi +
jmp loc_47CDF4  +
mov ebx edx +
mov edx [eax+4] +
add eax 4 +
movzx ecx byte ptr [esp+3Ch+var_34] +
mov esi edx +
shl esi cl +
mov ecx esi +
or ecx ebx +
mov [eax-4] ecx +
mov ecx ebp +
shr edx cl +
mov [eax] edx +
cmp edi eax +
ja loc_47CDF2  +
mov edi [esp+3Ch+var_30] +
cmp [esp+3Ch+arg_8] edi +
jb loc_47CC86  +
jmp loc_47CD96  +
mov ecx [esp+3Ch+var_30] +
cmp edx 29h +
mov esi edi +
setz dl  +
mov edi ebp +
mov ebp esi +
test ecx ecx +
jnz loc_47CEC4  +
test dl dl +
jnz loc_47CE67  +
lea ebp [eax+2] +
movsx eax byte ptr [eax+2] +
test eax eax +
jnz loc_47CE62  +
jmp loc_47CEEF  +
add ebp 1 +
movsx eax byte ptr [ebp+0] +
test eax eax +
jz loc_47CEEF  +
cmp eax 29h +
jnz loc_47CE53  +
mov edi [esp+3Ch+arg_0] +
lea eax [ebp+1] +
mov [edi] eax +
mov eax 4 +
jmp loc_47CCED  +
call sub_47CF00  +
jmp loc_47CB24  +
movzx edx byte ptr [eax+2] +
and edx 0FFFFFFDFh +
cmp dl 58h +
jnz loc_47CB7F  +
movzx edx byte ptr [eax+3] +
cmp dl 20h +
jbe loc_47CB7F  +
add eax 2 +
jmp loc_47CB83  +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_24] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax 5 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dl dl +
jz loc_47CE43  +
mov esi [esp+3Ch+arg_0] +
add eax 2 +
cmp ebx 7 +
mov [esi] eax +
jg loc_47CC7C  +
jmp loc_47CDC1  +
mov eax [esp+3Ch+var_14] +
mov eax [eax-4] +
jmp loc_47CCBB  +
mov eax 4 +
jmp loc_47CCED  +
***
mov ecx offset a123456789 +
mov edx 10h +
mov eax 30h +
nop   +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CF10  +
mov ecx offset aBcdef +
mov edx 1Ah +
mov eax 61h +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CF32  +
mov ecx offset aBcdef_0 +
mov edx 1Ah +
mov eax 41h +
mov ds:byte_4DA3A0[eax] dl +
movzx eax byte ptr [ecx] +
add edx 1 +
add ecx 1 +
test al al +
jnz loc_47CF54  +
retn   +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4DA360 +
retn   +
***
jmp ds:raise  +
***
jmp ds:freopen  +
***
jmp ds:__setusermatherr  +
***
mov eax ds:dword_4DA364 +
mov eax [eax] +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 2 +
call setlocale  +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] eax +
call strchr  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_47D2BA  +
add edx 1 +
mov [esp+1Ch+var_1C] edx +
call atoi  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
test eax eax +
mov ebx eax +
jz loc_47D325  +
mov esi ds:GetProcAddress +
mov [esp+18h+var_14] offset a___lc_codepage +
mov [esp+18h+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jz loc_47D305  +
mov off_48376C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
mov [esp+18h+var_14] offset a__lc_codepage +
mov [esp+18h+var_18] ebx +
call esi  +
mov edx eax +
sub esp 8 +
test edx edx +
mov ds:dword_4DA364 eax +
mov eax offset loc_47D270 +
jnz loc_47D2F8  +
mov eax offset sub_47D280 +
mov off_48376C eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
***
mov eax off_48376C +
jmp eax  +
***
mov eax ds:dword_4DA368 +
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4DA368 +
retn   +
***
push ebx  +
sub esp 14h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_set_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_47D360 +
mov [ebp+arg_0] ebx +
mov ebx [ebp+var_4] +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_483774 eax +
leave   +
jmp eax  +
***
sub esp 18h +
mov [esp+18h+var_18] offset aMsvcrt_dll_0 +
call ds:GetModuleHandleW  +
sub esp 4 +
mov [esp+18h+var_14] offset a_get_output_fo +
mov [esp+18h+var_18] eax +
call ds:GetProcAddress  +
mov edx offset loc_47D350 +
sub esp 8 +
test eax eax +
cmovz eax edx +
mov off_483770 eax +
leave   +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_47D500  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_47D51A  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_47D4A2  +
cmp ecx esi +
jbe loc_47D4C4  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_47D4AA  +
cmp edx esi +
jbe loc_47D4E3  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_47D4BC  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_47D4D3  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_47D4AA  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_47D530  +
cmp ecx eax +
jbe loc_47D4F3  +
cmp edx esi +
jnb loc_47D4A6  +
xor esi esi +
mov ebx 1 +
jmp loc_47D4AA  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_47D486  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_47D486  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_47D5A0  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_47D58F  +
cmp esi edx +
jz loc_47D5A0  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_47D4AA  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_47D4AA  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4745C0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474530  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474580  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474600  +
add esp 1Ch +
retn   +
***
push edi  +
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_474640  +
add esp 1Ch +
retn   +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_0] +
test esi esi +
jz loc_47D7E7  +
mov eax [esi] +
test eax eax +
jnz loc_47D7C7  +
jmp loc_47D7D9  +
mov eax ebx +
mov ebx [eax+10h] +
add eax 30h +
mov [esp+14h+var_14] eax +
call sub_471640  +
test ebx ebx +
jnz loc_47D7C5  +
mov [esp+14h+arg_0] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 24h +
movzx ebx byte ptr [eax+14h] +
cmp bl 0FFh +
jz loc_47D860  +
mov esi ebx +
and esi 7 +
mov ecx esi +
cmp cl 2 +
jz loc_47D856  +
jbe loc_47D842  +
mov ecx esi +
cmp cl 3 +
jz loc_47D846  +
lea ecx ds:0[edx*8] +
mov edx esi +
neg ecx  +
cmp dl 4 +
jnz loc_47D851  +
mov edx [eax+8] +
add ecx [eax+0Ch] +
movzx eax bl +
lea ebx [esp+24h+var_8] +
mov [esp+24h+var_24] ebx +
call sub_47DAD0  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
test cl cl +
jnz loc_47D851  +
lea ecx ds:0[edx*4] +
neg ecx  +
jmp loc_47D823  +
call abort  +
lea ecx [edx+edx] +
neg ecx  +
jmp loc_47D823  +
xor ecx ecx +
jmp loc_47D823  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov eax [ecx] +
mov ecx edx +
mov [ebp+var_1C] eax +
mov eax [edx] +
call dword ptr [eax+8]  +
test al al +
jz loc_47D897  +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [esi] +
lea edx [ebp+var_1C] +
mov ecx esi +
mov eax [eax+10h] +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] ebx +
call eax  +
sub esp 0Ch +
test al al +
jz loc_47D8BE  +
mov edx [ebp+var_1C] +
mov [edi] edx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
xor eax eax +
push ebx  +
sub esp 1Ch +
test edi edi +
mov [esp+28h+var_1C] ecx +
jz loc_47D8ED  +
mov [esp+28h+var_28] edi +
call sub_4713C0  +
mov ebx [esp+28h+var_1C] +
lea esi [ebp+1] +
mov [ebx] eax +
movzx edx byte ptr [ebp+0] +
cmp dl 0FFh +
jz loc_47D990  +
movzx ebp dl +
mov edx edi +
mov eax ebp +
call sub_47DA20  +
lea edx [ebx+4] +
mov ecx esi +
mov [esp+28h+var_28] edx +
mov edx eax +
mov eax ebp +
call sub_47DAD0  +
mov esi eax +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
mov esi [esp+28h+var_1C] +
cmp al 0FFh +
mov [esi+14h] al +
jz loc_47D9A0  +
xor edi edi +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or edi eax +
test bl bl +
js loc_47D937  +
mov eax [esp+28h+var_1C] +
add edi edx +
mov [eax+0Ch] edi +
lea eax [edx+1] +
mov esi [esp+28h+var_1C] +
xor edi edi +
movzx edx byte ptr [edx] +
xor ecx ecx +
mov [esi+15h] dl +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_47D968  +
mov esi [esp+28h+var_1C] +
add edi eax +
mov [esi+10h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+28h+var_1C] +
mov [edi+4] eax +
jmp loc_47D922  +
mov eax [esp+28h+var_1C] +
mov dword ptr [eax+0Ch] 0 +
jmp loc_47D957  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_1C] ecx +
not esi  +
add esi [eax+0Ch] +
xor edx edx +
xor ecx ecx +
lea esi [esi+0] +
add esi 1 +
movzx eax byte ptr [esi-1] +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or edx ebx +
test al al +
js loc_47D9D0  +
test edx edx +
jz loc_47DA09  +
mov eax edi +
call sub_47D7F0  +
lea ecx [esp+28h+var_1C] +
mov edx ebp +
call sub_47D870  +
test al al +
jz loc_47D9C8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
cmp al 0FFh +
jz loc_47DA48  +
and eax 70h +
cmp al 20h +
jz loc_47DA70  +
jbe loc_47DA50  +
cmp al 40h +
jz loc_47DA60  +
cmp al 50h +
jz loc_47DA48  +
cmp al 30h +
jnz loc_47DA58  +
mov [esp+1Ch+var_1C] edx +
call sub_4713E0  +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
test al al +
jz loc_47DA48  +
cmp al 10h +
jz loc_47DA48  +
call abort  +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] edx +
call sub_4713C0  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] edx +
call sub_4713F0  +
add esp 1Ch +
retn   +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp al 50h +
mov [esp+34h+var_28] edx +
jz loc_47DB95  +
mov eax esi +
and eax 0Fh +
cmp al 0Ch +
ja loc_47DB90  +
movzx eax al +
jmp ds:off_4D3398[eax*4]  +
mov edx [ecx] +
lea ebx [ecx+4] +
test edx edx +
jz loc_47DB1F  +
mov eax esi +
and eax 70h +
cmp al 10h +
mov eax esi +
cmovnz edi [esp+34h+var_28] +
add edx edi +
test al al +
jns loc_47DB1F  +
mov edx [edx] +
mov eax [esp+34h+arg_0] +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx] +
lea ebx [ecx+8] +
jmp loc_47DB05  +
movsx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_47DB05  +
lea edx [esp+34h+var_18] +
mov eax ecx +
call sub_47D770  +
mov edx [esp+34h+var_18] +
mov ebx eax +
jmp loc_47DB05  +
xor edx edx +
mov ebx ecx +
mov ebp edx +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ebx 1 +
movzx edx byte ptr [ebx-1] +
mov eax edx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or ebp eax +
test dl dl +
js loc_47DB60  +
mov edx ebp +
jmp loc_47DB05  +
movzx edx word ptr [ecx] +
lea ebx [ecx+2] +
jmp loc_47DB05  +
call abort  +
lea ebx [ecx+3] +
mov eax [esp+34h+arg_0] +
and ebx 0FFFFFFFCh +
mov edx [ebx] +
add ebx 4 +
mov [eax] edx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_482844 +
mov dword ptr [esp+40h] offset loc_47DBF5 +
mov [esp+44h] esp +
call sub_471250  +
mov dword ptr [esp+20h] 1 +
call dword ptr [esp+60h]  +
call abort  +
mov eax [esp+24h] +
mov [esp+14h] eax +
mov eax [esp+28h] +
mov [esp+18h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_47DC14  +
sub eax 1 +
jz loc_47DC2D  +
sub esp 0Ch +
call [esp+0Ch+arg_0]  +
call sub_480FC0  +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+0] ecx +
mov dword ptr [ecx] offset off_4D5990 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5990 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D59A8 +
call sub_480F50  +
mov [esp+18h+var_18] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D59A8 +
jmp sub_480F50  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D59E8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D59E8 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5A08 +
call sub_47DCD0  +
mov [esp+18h+var_18] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5A08 +
jmp sub_47DCD0  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D5868 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5868 +
retn   +
***
mov ebp esp +
push edi  +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_4C65E0[eax] +
mov ebp ds:dword_4C65E0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E547  +
cmp edx 1 +
jz loc_47E4D2  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_47E551  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E540  +
cmp edx 1 +
jz loc_47E500  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_47E500  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_47E500  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_47E500  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_47E4D2  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_47E4D2  +
jmp loc_47E547  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_47E6F0  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_4C65E0[eax] +
mov ebx ds:dword_4C65E0[eax] +
mov ecx ds:dword_4C65EC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_47E745  +
cmp edx 1 +
jz loc_47E614  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_47E727  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_47E663  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_47E690  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47E6B0  +
cmp edx 1 +
jnz loc_47E650  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_47E65E  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_47E65E  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_47E65E  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_47E6E3  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47E75A  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_47E750  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_47E5A1  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_47E770  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_47E5A1  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_47E60C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_47E60C  +
jmp loc_47E6E3  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_47E75A  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_47E6E3  +
xor eax eax +
jmp loc_47E6E3  +
***
mov ebp esp +
push esi  +
mov esi ecx +
push ebx  +
sub esp 14h +
mov eax [esi+18h] +
add dword ptr [ecx+10h] 1 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_10] ecx +
mov ecx [ecx+4] +
shl eax 4 +
lea edi dword_4C65E0[eax] +
mov ebp ds:dword_4C65E0[eax] +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+4] +
mov [esp+18h+var_14] ecx +
mov ecx [edi+0Ch] +
sub ebx edx +
mov eax ebx +
mov ebx [esp+18h+arg_4] +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebp +
sub ebx eax +
mov eax [esi] +
mov [esp+18h+var_18] eax +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47EBC7  +
cmp edx 1 +
jz loc_47EB52  +
mov esi [esp+18h+arg_0] +
mov esi [esi] +
mov [esp+18h+var_C] esi +
mov esi [esi] +
cmp [edx] esi +
jz loc_47EBD1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [edi+8] +
mov eax [esp+18h+arg_4] +
mov esi [esp+18h+var_14] +
lea edi [eax+1] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
lea edx [ebp-2] +
imul eax edx +
sub edi eax +
mov eax [esp+18h+var_10] +
mov [esp+18h+var_14] edi +
mov ecx [eax+14h] +
nop   +
add ebx [esp+18h+var_14] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
mov eax [esp+18h+var_18] +
lea eax [eax+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47EBC0  +
cmp edx 1 +
jz loc_47EB80  +
mov ebp [esp+18h+arg_0] +
mov ebp [ebp+0] +
mov edi [ebp+0] +
cmp [edx] edi +
jnz loc_47EB80  +
mov edi [ebp+4] +
cmp [edx+4] edi +
jnz loc_47EB80  +
mov edi [ebp+8] +
cmp [edx+8] edi +
jnz loc_47EB80  +
nop   +
mov edi [esp+18h+var_10] +
mov [edi+14h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_C] +
mov esi [esi+4] +
cmp [edx+4] esi +
jnz loc_47EB52  +
mov esi [esp+18h+var_C] +
mov esi [esi+8] +
cmp [edx+8] esi +
jnz loc_47EB52  +
jmp loc_47EBC7  +
***
push esi  +
push ebx  +
sub esp 2Ch +
cmp [esp+2Ch+arg_8] 1 +
mov [esp+2Ch+var_14] ecx +
mov ebp [esp+2Ch+arg_4] +
jz loc_47ED70  +
mov eax [ecx+4] +
mov [esp+2Ch+var_10] eax +
mov esi [esp+2Ch+var_14] +
mov eax [esi+18h] +
add dword ptr [esi+10h] 1 +
shl eax 4 +
lea edi dword_4C65E0[eax] +
mov ebx ds:dword_4C65E0[eax] +
mov ecx ds:dword_4C65EC[eax] +
mov eax ebp +
mul  dword ptr [edi+4] +
mov eax ebp +
mov edi [edi+8] +
mov [esp+2Ch+var_1C] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx ebp +
mov [esp+2Ch+var_20] edi +
mov edi [esi] +
sub ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
mov [esp+2Ch+var_18] eax +
test edx edx +
jz loc_47EDC5  +
cmp edx 1 +
jz loc_47EC94  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax] +
mov esi eax +
mov eax [eax] +
cmp [edx] eax +
jz loc_47EDA7  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_10] +
mul  ebp +
lea eax [ebp+1] +
mov [esp+2Ch+var_20] eax +
mov eax ebp +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_1C] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+2Ch+var_1C] ecx +
jmp loc_47ECE3  +
mov ebp [esp+2Ch+arg_0] +
mov ebp [ebp+0] +
mov ecx [ebp+0] +
cmp [edx] ecx +
jz loc_47ED10  +
add [esp+2Ch+var_1C] 1 +
add ebx [esp+2Ch+var_20] +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [edi+ebx*8] +
mov edx [eax] +
test edx edx +
jz loc_47ED30  +
cmp edx 1 +
jnz loc_47ECD0  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_18] eax +
jmp loc_47ECDE  +
mov ecx [ebp+4] +
cmp [edx+4] ecx +
jnz loc_47ECDE  +
mov ecx [ebp+8] +
cmp [edx+8] ecx +
jnz loc_47ECDE  +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
mov [esi+14h] ecx +
jmp loc_47ED63  +
mov edx [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+var_1C] +
mov esi [esp+2Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47EDDA  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_47EDD0  +
mov eax [esp+2Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+2Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+2Ch+var_20] eax +
shl eax 2 +
cmp edx eax +
mov [esp+2Ch+var_10] esi +
ja loc_47EC21  +
mov edi [esp+2Ch+var_14] +
mov ecx edi +
call sub_47EDF0  +
mov eax [edi+4] +
mov [esp+2Ch+var_10] eax +
jmp loc_47EC21  +
mov eax [esi+4] +
cmp [edx+4] eax +
jnz loc_47EC8C  +
mov esi [esi+8] +
cmp [edx+8] esi +
mov eax [esp+2Ch+var_18] +
jnz loc_47EC8C  +
jmp loc_47ED63  +
cmp [esp+2Ch+arg_8] 0 +
jz loc_47EDDA  +
mov eax [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_14] +
add dword ptr [edi+8] 1 +
jmp loc_47ED63  +
xor eax eax +
jmp loc_47ED63  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_4C65E0[eax] +
mov eax ds:dword_4C65E0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F231  +
cmp edx 1 +
jz loc_47F1C9  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_47F231  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F240  +
cmp edx 1 +
jz loc_47F200  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_47F200  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_47F3A5  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_4C65E0[eax] +
lea ebp dword_4C65E0[eax] +
mov ecx ds:dword_4C65EC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_47F3D4  +
cmp eax 1 +
jz loc_47F308  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_47F3F2  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_47F325  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_47F390  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F350  +
cmp edx 1 +
jnz loc_47F318  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_47F320  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47F3F8  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_47F3E0  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_47F27D  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_47F400  +
mov esi [esi+4] +
jmp loc_47F27D  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_47F3F8  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_47F37F  +
xor eax eax +
jmp loc_47F37F  +
***
mov ebp esp +
mov edi ecx +
push esi  +
push ebx  +
sub esp 10h +
mov eax [ecx+4] +
add dword ptr [ecx+10h] 1 +
mov edi [edi] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
mov eax [ecx+18h] +
shl eax 4 +
lea ebp dword_4C65E0[eax] +
mov eax ds:dword_4C65E0[eax] +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+4] +
mov eax [esp+18h+arg_4] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx [esp+18h+arg_4] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F7B1  +
cmp edx 1 +
jz loc_47F749  +
mov esi [esp+18h+arg_0] +
cmp [esi] edx +
jz loc_47F7B1  +
mov eax [esp+18h+arg_4] +
mul  dword ptr [ebp+8] +
mov esi [esp+18h+var_18] +
mov [esp+18h+var_18] edi +
mov eax edx +
mov edx [esp+18h+arg_4] +
lea ebp [edx+1] +
sub edx eax +
shr edx 1 +
add eax edx +
mov edx [esp+18h+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub ebp eax +
mov eax [esp+18h+var_14] +
mov ecx [eax+14h] +
lea esi [esi+0] +
add ebx ebp +
mov edi [esp+18h+var_18] +
add ecx 1 +
mov eax ebx +
sub eax esi +
cmp esi ebx +
cmovbe ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F7C0  +
cmp edx 1 +
jz loc_47F780  +
mov edi [esp+18h+arg_0] +
cmp [edi] edx +
jnz loc_47F780  +
mov edi [esp+18h+var_14] +
mov [edi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
mov esi [esp+18h+var_14] +
mov [esi+14h] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_8] 1 +
mov [esp+1Ch+var_14] ecx +
mov edi [esp+1Ch+arg_4] +
jz loc_47F925  +
mov esi [ecx+4] +
mov eax [esp+1Ch+var_14] +
add dword ptr [eax+10h] 1 +
mov eax [eax+18h] +
shl eax 4 +
mov edx ds:dword_4C65E0[eax] +
lea ebp dword_4C65E0[eax] +
mov ecx ds:dword_4C65EC[eax] +
mov eax edi +
mov ebx edx +
mul  dword ptr [ebp+4] +
mov eax edi +
mov [esp+1Ch+var_18] ebx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax ebx +
mov ebx edi +
sub ebx eax +
mov eax edi +
mul  dword ptr [ebp+8] +
lea ebp [edi+1] +
sub edi edx +
shr edi 1 +
add edi edx +
mov edx [esp+1Ch+var_18] +
shr edi cl +
lea eax [edx-2] +
imul edi eax +
mov eax [esp+1Ch+var_14] +
sub ebp edi +
mov edi [eax] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov [esp+1Ch+var_10] eax +
mov eax [eax] +
test eax eax +
jz loc_47F954  +
cmp eax 1 +
jz loc_47F888  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] eax +
jz loc_47F972  +
mov [esp+1Ch+var_10] 0 +
mov eax [esp+1Ch+var_14] +
mov eax [eax+14h] +
lea ecx [eax+1] +
mov [esp+1Ch+var_18] ecx +
jmp loc_47F8A5  +
mov ecx [esp+1Ch+arg_0] +
cmp [ecx] edx +
jz loc_47F910  +
add [esp+1Ch+var_18] 1 +
add ebx ebp +
mov eax ebx +
sub eax esi +
cmp ebx esi +
cmovnb ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47F8D0  +
cmp edx 1 +
jnz loc_47F898  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+1Ch+var_10] eax +
jmp loc_47F8A0  +
mov edx [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_18] +
mov esi [esp+1Ch+var_14] +
test edx edx +
mov [esi+14h] ecx +
jz loc_47F978  +
mov esi [esp+1Ch+var_10] +
test esi esi +
jz loc_47F960  +
mov eax [esp+1Ch+var_14] +
sub dword ptr [eax+0Ch] 1 +
mov eax esi +
mov dword ptr [esi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov esi [esp+1Ch+var_14] +
mov ecx [esp+1Ch+var_18] +
mov [esi+14h] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_14] +
mov esi [eax+4] +
mov eax [eax+8] +
lea edx [esi+esi*2] +
mov [esp+1Ch+var_18] eax +
shl eax 2 +
cmp edx eax +
ja loc_47F7FD  +
mov esi [esp+1Ch+var_14] +
mov ecx esi +
call sub_47F980  +
mov esi [esi+4] +
jmp loc_47F7FD  +
cmp [esp+1Ch+arg_8] 0 +
jz loc_47F978  +
mov eax [esp+1Ch+var_10] +
nop   +
mov esi [esp+1Ch+var_14] +
add dword ptr [esi+8] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [esp+1Ch+var_10] +
jmp loc_47F8FF  +
xor eax eax +
jmp loc_47F8FF  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [ecx] +
mov [ebp+var_48] ecx +
mov ebx [eax+18h] +
mov ecx edi +
mov [ebp+var_50] edi +
mov edi [eax+4] +
lea esi [edi+edi*2] +
shl esi 2 +
add ecx esi +
mov [ebp+var_34] ecx +
mov ecx eax +
mov eax [eax+8] +
sub eax [ecx+0Ch] +
lea edx [eax+eax] +
cmp edi edx +
jb loc_47FB3D  +
shl eax 3 +
cmp edi eax +
ja loc_47FB34  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_47FB5D  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jnz loc_47FBB8  +
mov [esp+68h+var_64] 0Ch +
mov [esp+68h+var_68] edi +
call sub_452F00  +
mov [ebp+var_30] eax +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_47FC35  +
test edi edi +
jz loc_47FA1D  +
mov ecx [ebp+var_30] +
lea edx [edi+edi*2] +
mov eax ecx +
lea edx [ecx+edx*4] +
nop   +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 0Ch +
cmp eax edx +
jnz loc_47FA10  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jnz loc_47FBF3  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_30] +
mov [ebp+var_4C] edi +
mov [eax+4] edi +
mov [eax] ecx +
mov ecx eax +
mov [eax+18h] ebx +
mov eax [eax+0Ch] +
shl ebx 4 +
sub [ecx+8] eax +
mov eax [ebp+var_50] +
mov dword ptr [ecx+0Ch] 0 +
mov [ebp+var_44] ebx +
mov edi eax +
mov esi [edi] +
test esi esi +
jz loc_47FB08  +
cmp esi 1 +
jz loc_47FB08  +
mov ebx [ebp+var_44] +
sar esi 3 +
mov eax ebx +
mov ebx ds:dword_4C65E0[ebx] +
add eax offset dword_4C65E0 +
mov ecx [eax+0Ch] +
mov [ebp+var_38] eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_40] ebx +
mov ebx eax +
mov eax esi +
mul  dword ptr [ebx+4] +
mov eax esi +
mov ebx esi +
mov [ebp+var_3C] ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebp+var_30] +
shr eax cl +
imul eax [ebp+var_2C] +
sub ebx eax +
lea eax [ebx+ebx*2] +
lea eax [edx+eax*4] +
mov edx [eax] +
test edx edx +
jz loc_47FAF8  +
mov ecx [ebp+var_38] +
mov eax esi +
mul  dword ptr [ecx+8] +
lea eax [esi+1] +
movzx ecx byte ptr [ebp+var_3C] +
sub esi edx +
shr esi 1 +
add esi edx +
mov edx [ebp+var_40] +
shr esi cl +
mov ecx [ebp+var_4C] +
sub edx 2 +
imul esi edx +
sub eax esi +
mov esi [ebp+var_30] +
lea esi [esi+0] +
add ebx eax +
mov edx ebx +
sub edx ecx +
cmp ecx ebx +
cmovbe ebx edx +
lea edx [ebx+ebx*2] +
lea edx [esi+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_47FAE0  +
mov eax edx +
mov edx [edi] +
mov [eax] edx +
mov edx [edi+4] +
mov [eax+4] edx +
mov edx [edi+8] +
mov [eax+8] edx +
add edi 0Ch +
cmp [ebp+var_34] edi +
ja loc_47FA55  +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
mov eax [ebp+var_50] +
mov [esp+68h+var_68] eax +
jz loc_47FBE6  +
call j_free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 20h +
jbe loc_47F9C4  +
mov [esp+68h+var_68] edx +
call sub_420B70  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4C65E0[eax] +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Dh] 0 +
jz loc_47F9D1  +
lea eax [edi+edi*2] +
mov ecx ds:dword_4D917C +
shl eax 2 +
mov [ebp+var_2C] eax +
mov eax [ebp+var_48] +
mov [ebp+var_20] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_20] +
mov [esp+68h+var_68] eax +
call sub_47F160  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_47F9D1  +
mov eax [eax+4] +
mov edx [ebp+var_2C] +
add edx [eax] +
add dword ptr [eax+4] 1 +
cmp edx [eax+8] +
mov [eax] edx +
jbe loc_47F9D1  +
mov [eax+8] edx +
mov eax [ebp+var_48] +
cmp byte ptr [eax+1Ch] 0 +
jz loc_47F9DE  +
lea eax [edi+edi*2] +
shl eax 2 +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] eax +
call sub_40F620  +
mov [ebp+var_30] eax +
jmp loc_47F9F1  +
call free  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_48] +
mov ecx ds:dword_4D917C +
mov [ebp+var_1C] eax +
sar eax 3 +
mov [esp+68h+var_64] eax +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] eax +
call sub_47F160  +
mov edx [eax] +
sub esp 8 +
test edx edx +
jz loc_47FA2A  +
mov eax [eax+4] +
mov edx [eax] +
cmp esi edx +
ja loc_47FC30  +
sub edx esi +
mov [eax] edx +
jmp loc_47FA2A  +
call sub_482630  +
mov [esp+68h+var_60] offset aAlloc_entrie_3 +
mov [esp+68h+var_64] 28Eh +
mov [esp+68h+var_68] offset a____GccGccHa_1 +
call sub_424560  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov [esp+84h+var_84] ecx +
mov dword ptr [ecx] offset off_4D58A8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D58A8 +
retn   +
***
sub esp 18h +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [eax] +
movzx eax byte ptr [eax+4] +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_14] eax +
call sub_42A940  +
xor eax eax +
sub esp 8 +
leave   +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D58A8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D58A8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D58A8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D58A8 +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
mov edx [edx+4] +
mov [esp+1Ch+var_14] edx +
mov edx [eax+4] +
mov [esp+1Ch+var_18] edx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call ecx  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [ecx] +
mov esi [esp+10h+arg_0] +
lea eax [ebx+1] +
cmp ebx 2 +
mov [ecx] eax +
jle loc_47FD90  +
mov eax [ecx+20h] +
sub ebx 3 +
test eax eax +
jz loc_47FDC8  +
mov edx [ecx+1Ch] +
cmp ebx edx +
jge loc_47FDA6  +
mov edx [esi] +
mov ecx [esi+4] +
mov [eax+ebx*8] edx +
mov [eax+ebx*8+4] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov eax [esi] +
mov edx [esi+4] +
mov [ecx+ebx*8+4] eax +
mov [ecx+ebx*8+8] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [edx+edx] +
shl edx 4 +
mov [ecx+1Ch] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
mov [esp+10h+var_4] ecx +
call sub_452F50  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_47FD77  +
mov dword ptr [ecx+1Ch] 10h +
mov [esp+10h+var_10] 80h +
mov [esp+10h+var_4] ecx +
call sub_452ED0  +
mov ecx [esp+10h+var_4] +
mov [ecx+20h] eax +
jmp loc_47FD77  +
***
push ebx  +
sub esp 10h +
mov eax [ecx] +
mov esi [esp+10h+arg_0] +
lea edx [eax+1] +
cmp eax 1 +
mov [ecx] edx +
jle loc_47FE50  +
mov edx [ecx+10h] +
lea ebx [eax-2] +
test edx edx +
jz loc_47FE60  +
mov eax [ecx+0Ch] +
cmp ebx eax +
jge loc_47FE25  +
mov eax [esi] +
mov [edx+ebx*4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
lea edi [eax+eax] +
shl eax 3 +
mov [ecx+0Ch] edi +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] ecx +
call sub_452F50  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_47FE17  +
mov edx [esi] +
mov [ecx+eax*4+4] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn 4  +
mov dword ptr [ecx+0Ch] 10h +
mov [esp+10h+var_10] 40h +
mov [esp+10h+var_4] ecx +
call sub_452ED0  +
mov ecx [esp+10h+var_4] +
mov edx eax +
mov [ecx+10h] eax +
jmp loc_47FE17  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [ebp+14h] +
mov dword ptr [esp] 14h +
mov esi [ebp+10h] +
mov [ebp-3Ch] ecx +
call loc_481090  +
mov [eax] edi +
mov ebx eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] ebx +
mov [ebp-24h] edi +
mov [ebx+4] eax +
mov eax [ebp+18h] +
mov [ebx+8] eax +
mov eax [ebp+0Ch] +
mov [ebx+0Ch] eax +
mov eax esi +
mov [ebx+10h] al +
mov eax [ebp+8] +
mov [ebp-30h] eax +
mov eax [ebp-3Ch] +
mov esi [eax+18h] +
lea eax [ebp-24h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_45D420  +
mov ecx [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [ebp-28h] ecx +
mov [esp+8] eax +
lea eax [ebp-28h] +
mov [esp] eax +
call sub_45D420  +
mov edi eax +
mov eax [ebx+8] +
mov ebx 9E3779B9h +
mov edx ebx +
mov ecx edi +
shr ecx 0Dh +
sub edx eax +
sub eax edi +
sub edx edi +
xor ecx edx +
mov edx ecx +
sub eax ecx +
shl edx 8 +
xor edx eax +
mov eax edi +
sub eax ecx +
mov edi edx +
sub eax edx +
shr edi 0Dh +
xor edi eax +
mov eax ecx +
sub eax edx +
mov ecx edi +
sub eax edi +
shr ecx 0Ch +
xor ecx eax +
mov eax edx +
sub eax edi +
mov edx ecx +
sub eax ecx +
sub edi ecx +
shl edx 10h +
xor edx eax +
mov eax edx +
sub edi edx +
shr eax 5 +
sub ecx edx +
xor eax edi +
mov edi eax +
sub ecx eax +
shr edi 3 +
sub edx eax +
xor edi ecx +
mov ecx edi +
sub edx edi +
shl ecx 0Ah +
sub eax edi +
xor ecx edx +
sub eax ecx +
shr ecx 0Fh +
xor ecx eax +
lea edi [ebp-2Ch] +
mov [esp+4] ecx +
mov ecx esi +
mov [esp] edi +
call sub_47E460  +
mov esi eax +
mov eax [eax] +
sub esp 8 +
test eax eax +
jz loc_47FFE8  +
mov eax [ebp-2Ch] +
mov [esp] eax +
call sub_480FE0  +
mov esi [esi+4] +
add dword ptr [esi+0Ch] 1 +
mov eax [ebp-3Ch] +
lea ebx [ebp-30h] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F160  +
mov edi [eax] +
sub esp 8 +
test edi edi +
jz loc_4800F4  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
mov dword ptr [esp] 10h +
call loc_481090  +
mov edx [ebp-2Ch] +
mov [ebp-44h] edx +
mov dword ptr [eax] 0 +
mov esi eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 1 +
mov eax [ebp-3Ch] +
mov eax [eax+18h] +
mov [ebp-40h] eax +
mov eax [edx] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
mov [esp] eax +
call sub_45D420  +
mov edx [ebp-44h] +
mov ecx [edx+4] +
mov dword ptr [esp+4] 4 +
mov [esp+8] eax +
lea eax [ebp-20h] +
mov [esp] eax +
mov [ebp-20h] ecx +
call sub_45D420  +
mov edx [ebp-44h] +
mov edx [edx+8] +
mov dword ptr [esp+8] 1 +
mov ecx eax +
shr ecx 0Dh +
sub ebx edx +
sub edx eax +
sub ebx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shl ebx 8 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 0Dh +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shr eax 0Ch +
sub ebx edx +
xor eax ecx +
mov ecx eax +
sub ebx eax +
shl ecx 10h +
sub edx eax +
xor ecx ebx +
mov ebx ecx +
sub edx ecx +
shr ebx 5 +
sub eax ecx +
xor ebx edx +
mov edx ebx +
sub eax ebx +
shr edx 3 +
sub ecx ebx +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 0Ah +
sub ebx edx +
xor eax ecx +
mov ecx [ebp-40h] +
sub ebx eax +
shr eax 0Fh +
xor eax ebx +
mov [esp+4] eax +
mov [esp] edi +
call sub_47E580  +
mov ecx [eax] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4800EC  +
mov edx [ebp-2Ch] +
mov [eax] edx +
mov [eax+4] esi +
jmp loc_47FFB4  +
***
mov eax [ebp-3Ch] +
mov ecx [eax+1Ch] +
mov eax [ebp-30h] +
mov dword ptr [esp+8] 1 +
mov [esp] ebx +
sar eax 3 +
mov [esp+4] eax +
call sub_47F260  +
mov edx [eax] +
sub esp 0Ch +
test edx edx +
jnz loc_480122  +
mov edx [ebp-30h] +
mov [eax] edx +
mov [eax+4] esi +
mov dword ptr [eax+8] 0 +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
push esi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 20h +
call loc_481090  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420B70  +
mov [esp+1Ch+var_18] 8 +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C65E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452F00  +
test eax eax +
jz loc_4804DF  +
test edi edi +
mov edx eax +
lea ecx [eax+edi*8] +
jz loc_4803C0  +
mov dword ptr [edx] 0 +
add edx 8 +
cmp edx ecx +
jnz loc_4803B3  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+18h] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_481090  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420B70  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C65E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452F00  +
test eax eax +
jz loc_480517  +
test edi edi +
jz loc_480445  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_480438  +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [esi] eax +
mov [ebx+1Ch] esi +
mov [esp+1Ch+var_1C] 20h +
call loc_481090  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov byte ptr [eax+1Ch] 0 +
mov byte ptr [eax+1Dh] 0 +
mov [esp+1Ch+var_1C] 0Dh +
call sub_420B70  +
mov [esp+1Ch+var_18] 0Ch +
mov ebp eax +
shl eax 4 +
mov edi ds:dword_4C65E0[eax] +
mov [esp+1Ch+var_1C] edi +
call sub_452F00  +
test eax eax +
jz loc_4804FB  +
test edi edi +
jz loc_4804CD  +
lea ecx [edi+edi*2] +
mov edx eax +
lea ecx [eax+ecx*4] +
lea esi [esi+0] +
mov dword ptr [edx] 0 +
add edx 0Ch +
cmp edx ecx +
jnz loc_4804C0  +
mov [esi] eax +
mov [esi+4] edi +
mov [esi+18h] ebp +
mov [ebx] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aAlloc_entrie_1 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424560  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_4 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424560  +
mov [esp+1Ch+var_14] offset aAlloc_entrie_3 +
mov [esp+1Ch+var_18] 28Eh +
mov [esp+1Ch+var_1C] offset a____GccGccHa_1 +
call sub_424560  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
mov ebx ecx +
sub esp 18h +
mov dword ptr [ecx] offset off_4D5A48 +
call sub_480F20  +
mov [esp+38h+var_38] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5A48 +
jmp sub_480F20  +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5A60 +
call sub_480F20  +
mov [esp+18h+var_18] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5A60 +
jmp sub_480F20  +
***
lea eax [esp+68h+var_8] +
mov [esp+68h+var_2C] eax +
lea eax [esp+68h+var_4C] +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_34] offset sub_481BB0 +
mov [esp+68h+var_30] offset dword_48287C +
mov [esp+68h+var_28] offset dword_480720 +
mov [esp+68h+var_24] esp +
call sub_471250  +
cmp byte_4881B4 0 +
jnz loc_4806DD  +
mov byte_4881B4 1 +
call sub_481630  +
test eax eax +
jz loc_48073B  +
mov eax [eax+4] +
xor edx edx +
cmp byte ptr [eax] 2Ah +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] 0 +
setz dl  +
add eax edx +
mov ecx eax +
mov [esp+68h+var_50] eax +
lea eax [esp+68h+var_C] +
mov [esp+68h+var_68] ecx +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_C] 0FFFFFFFFh +
mov [esp+68h+var_48] 0FFFFFFFFh +
call sub_46FA80  +
mov [esp+68h+var_60] 30h +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCalle +
mov [esp+68h+var_54] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov eax ds:_iob +
add eax 40h +
cmp [esp+68h+var_C] 0 +
mov [esp+68h+var_64] eax +
jz loc_4806CF  +
mov eax [esp+68h+var_50] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2 +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset asc_4D349D +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
cmp [esp+68h+var_C] 0 +
jz loc_480712  +
mov [esp+68h+var_48] 1 +
call sub_481AF0  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
jmp loc_48068B  +
mov eax ds:_iob +
mov [esp+68h+var_60] 1Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_0 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
call abort  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call free  +
jmp loc_4806C2  +
mov eax ds:_iob +
mov [esp+68h+var_60] 2Dh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aTerminateCal_1 +
add eax 40h +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_48] 0FFFFFFFFh +
call fwrite  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call abort  +
call loc_481690  +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_48] 0FFFFFFFFh +
mov [esp+68h+var_68] eax +
call sub_471550  +
mov eax [esp+68h+var_54] +
sub edx 1 +
mov [esp+68h+var_68] eax +
jnz loc_480819  +
call sub_4813E0  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
mov edx ds:_iob +
mov [esp+68h+var_60] 0Bh +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] offset aWhat +
mov [esp+68h+var_48] 2 +
mov [esp+68h+var_54] eax +
lea eax [edx+40h] +
mov [esp+68h+var_5C] eax +
call fwrite  +
mov edx ds:_iob +
lea eax [edx+40h] +
mov [esp+68h+var_64] eax +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_68] eax +
call fputs  +
mov eax ds:_iob +
mov [esp+68h+var_68] 0Ah +
add eax 40h +
mov [esp+68h+var_64] eax +
call fputc  +
call loc_481690  +
jmp loc_48076B  +
lea esi [esi+0] +
call sub_4813E0  +
mov [esp+68h+var_48] 0FFFFFFFFh +
call loc_481690  +
jmp loc_48076B  +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 4 +
call loc_4812A0  +
mov dword ptr [eax] offset off_4D5A60 +
mov [esp+1Ch+var_14] offset sub_480590 +
mov [esp+1Ch+var_18] offset off_4D566C +
mov [esp+1Ch+var_1C] eax +
call sub_481B50  +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
mov eax [esp+24h+var_18] +
mov esi [eax+4] +
mov eax [esp+24h+var_14] +
mov ecx [esi] +
mov ebx [eax+4] +
mov edx [ebx] +
cmp ecx edx +
setb al  +
cmp ecx edx +
jz loc_4808C3  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+8] +
cmp [esi+8] eax +
jz loc_4808D4  +
setb al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+4] +
cmp [esi+4] eax +
setb al  +
jmp loc_4808BD  +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_480E50  +
sub esp 4 +
test al al +
jnz loc_480902  +
cmp [ebp+arg_8] 3 +
jbe loc_480910  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov eax [ebx] +
mov ecx ebx +
mov edx [ebp+arg_4] +
mov eax [eax+14h] +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] edx +
call eax  +
sub esp 8 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_8] +
mov [esp+18h+var_18] eax +
call sub_480E50  +
sub esp 4 +
test al al +
jz loc_48095F  +
mov edx [ebp+arg_4] +
mov dword ptr [ebx+0Ch] 8 +
mov dword ptr [ebx+4] 6 +
mov [ebx] edx +
mov ebx [ebp+var_4] +
leave   +
retn 0Ch  +
***
push esi  +
push ebx  +
sub esp 20h +
mov ebx [ebp+arg_4] +
mov eax [ecx] +
lea esi [ebp+var_18] +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
mov edx [ebx] +
mov eax [eax+18h] +
mov [ebp+var_10] 10h +
mov [ebp+var_C] 0 +
mov [esp+28h+var_24] edx +
mov edx [ebp+arg_0] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] edx +
call eax  +
mov edx [ebp+var_14] +
xor eax eax +
and edx 6 +
sub esp 0Ch +
cmp edx 6 +
jnz loc_4809CB  +
mov eax [ebp+var_18] +
mov [ebx] eax +
mov eax 1 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov eax [esp+arg_4] +
cmp [esp+arg_C] eax +
setz al  +
movzx eax al +
lea eax [eax+eax*4+1] +
retn 10h  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] edx +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_20] edi +
call sub_480930  +
mov edx [ebp+var_1C] +
sub esp 0Ch +
test al al +
jz loc_480AA0  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+18h] +
mov [ebp+arg_8] edi +
mov [ebp+arg_4] esi +
mov [ebp+arg_0] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [ebp+var_28] ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_C] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] edx +
mov ebx [ebp+arg_18] +
mov [ebp+var_20] edx +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_1C] eax +
call sub_480E50  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_480B28  +
mov eax [ebp+var_24] +
test edi edi +
mov [ebx] esi +
mov [ebx+4] eax +
js loc_480B60  +
xor eax eax +
add esi edi +
cmp [ebp+var_1C] esi +
setz al  +
lea eax [eax+eax*4+1] +
mov [ebx+0Ch] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 1Ch  +
cmp esi [ebp+var_1C] +
jz loc_480B70  +
mov eax [ebp+var_28] +
mov ecx [eax+8] +
mov eax [ecx] +
mov eax [eax+1Ch] +
mov [ebp+arg_18] ebx +
mov ebx [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov esi [ebp+var_24] +
mov [ebp+arg_0] edi +
mov [ebp+arg_8] edx +
mov [ebp+arg_14] ebx +
mov ebx [ebp+var_2C] +
mov [ebp+arg_4] esi +
mov [ebp+arg_10] ebx +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
cmp edi 0FFFFFFFEh +
jnz loc_480B1C  +
mov dword ptr [ebx+0Ch] 1 +
jmp loc_480B1C  +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_28] +
mov [ebp+var_20] edx +
mov [esp+38h+var_38] eax +
call sub_480E50  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_480B2D  +
mov eax [ebp+var_24] +
mov [ebx+8] eax +
jmp loc_480B1C  +
***
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_8] +
cmp esi ebx +
mov [ebp+var_1C] eax +
jz loc_480BE0  +
mov ecx [edx+8] +
mov eax [ecx] +
mov eax [eax+20h] +
mov [ebp+arg_8] edi +
mov edi [ebp+var_1C] +
mov [ebp+arg_C] esi +
mov [ebp+arg_4] ebx +
mov [ebp+arg_0] edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+28h+var_28] edi +
mov [ebp+var_20] edx +
call sub_480E50  +
mov edx [ebp+var_20] +
sub esp 4 +
test al al +
jz loc_480BBE  +
lea esp [ebp-0Ch] +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
retn   +
***
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_480C4C  +
add eax [ecx+8] +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
mov edx [ecx+8] +
mov [eax] edx +
mov eax 1 +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp [ecx+4] eax +
jg locret_480C9C  +
add eax [ecx+0Ch] +
retn 4  +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
call sub_470CF0  +
sub esp eax +
mov ebx ecx +
mov eax [esp+10h+arg_104C] +
mov ebp [eax+4] +
mov edi [eax+8] +
mov esi [eax] +
jmp loc_480CE6  +
lea esi [eax+4] +
mov [esp+10h+var_C] offset aGcc_0 +
mov [esp+10h+var_10] esi +
call strstr  +
test eax eax +
jnz loc_480CE3  +
mov [esp+10h+var_8] esi +
lea esi [esp+10h+arg_2C] +
mov [esp+10h] ebp +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] offset aSIS +
call sub_47D630  +
mov eax [ebx+14h] +
xor edx edx +
mov ecx [ebx+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov edi [ebx] +
mov [esp+10h+arg_5C] 0 +
mov [esp+10h+arg_18] eax +
mov eax [ebx+10h] +
mov dword ptr [esp+10h+arg_24] ecx +
fild  [esp+10h+arg_24] +
fld  ds:flt_4C0040 +
mov [esp+10h+arg_14] eax +
mov eax [esp+10h+arg_1050] +
fmul st(1) st +
mov eax [eax+4] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
mov [esp+10h+arg_8] ecx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax [ebx+8] +
fild  [esp+10h+arg_24] +
fdivp st(2) st +
fxch  st(1) +
mov dword ptr [esp+10h+arg_24] edi +
mov [esp+10h+arg_4] eax +
mov eax [esp+10h+arg_1050] +
mov dword ptr [esp+10h+arg_24+4] edx +
xor edx edx +
fstp  [esp+10h+arg_C] +
mov eax [eax] +
fild  [esp+10h+arg_24] +
fmulp st(1) st +
mov dword ptr [esp+10h+arg_24+4] edx +
mov dword ptr [esp+10h+arg_24] eax +
mov eax ds:_iob +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_8] esi +
fild  [esp+10h+arg_24] +
fdivp st(1) st +
add eax 40h +
mov [esp+10h+var_C] offset a48s10li4_1f10l +
fstp  qword ptr [esp+10h] +
mov [esp+10h+var_10] eax +
call sub_47D600  +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
retn   +
***
retn   +
***
retn   +
***
sub esp 18h +
mov eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_480E50  +
sub esp 4 +
leave   +
retn 0Ch  +
***
retn 8  +
***
retn   +
***
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ecx +
jz loc_480E88  +
mov edx [ecx+4] +
cmp byte ptr [edx] 2Ah +
jz loc_480E80  +
mov eax [eax+4] +
xor ecx ecx +
cmp byte ptr [eax] 2Ah +
mov [esp+1Ch+var_1C] edx +
setz cl  +
add eax ecx +
mov [esp+1Ch+var_18] eax +
call strcmp  +
test eax eax +
jz loc_480E88  +
xor eax eax +
add esp 1Ch +
retn 4  +
mov eax 1 +
add esp 1Ch +
retn 4  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D5AA8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5AA8 +
retn   +
***
sub esp 18h +
mov dword ptr [ecx] offset off_4D5A90 +
call sub_480F20  +
mov [esp+18h+var_18] ebx +
call sub_480FE0  +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ecx] offset off_4D5A90 +
jmp sub_480F20  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D5AA8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5AA8 +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov dword ptr [ecx] offset off_4D5AC8 +
call sub_480FE0  +
add esp 1Ch +
retn   +
***
mov dword ptr [ecx] offset off_4D5AC8 +
retn   +
***
sub esp 1Ch +
mov eax off_4881AC +
mov [esp+1Ch+var_1C] eax +
call sub_47DC70  +
mov edx [esp+1Ch+var_18] +
mov eax off_4881A8 +
mov off_4881A8 edx +
retn   +
***
mov edx [esp+4] +
mov eax off_4881AC +
mov off_4881AC edx +
retn   +
***
mov edx [esp+4] +
mov eax dword_4881B8 +
mov dword_4881B8 edx +
retn   +
***
sub esp 0Ch +
call sub_481930  +
mov eax [eax+4] +
test eax eax +
setnz al  +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+arg_0] +
test eax eax +
jz locret_480FF0  +
jmp free  +
retn   +
***
lea eax [esp+58h+var_8] +
mov [esp+58h+var_1C] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_24] offset sub_481BB0 +
mov [esp+58h+var_20] offset dword_4827D0 +
mov [esp+58h+var_18] offset loc_481061 +
mov [esp+58h+var_14] esp +
call sub_471250  +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_38] 1 +
mov [esp+58h+var_58] eax +
call loc_481090  +
mov [esp+58h+var_40] eax +
lea eax [esp+58h+var_3C] +
mov [esp+58h+var_58] eax +
call sub_4712B0  +
mov eax [esp+58h+var_40] +
add esp 58h +
pop ebp  +
retn   +
***
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_48107C  +
call sub_471550  +
call loc_4814A0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_4827BC +
mov dword ptr [esp+40h] offset loc_48114E +
mov [esp+44h] esp +
call sub_471250  +
mov eax [esp+60h] +
test eax eax +
mov eax 1 +
cmovnz eax [esp+60h] +
mov [esp+60h] eax +
jmp loc_4810F7  +
mov eax dword_4881B8 +
test eax eax +
jz loc_48111C  +
mov dword ptr [esp+20h] 1 +
call eax  +
mov eax [esp+60h] +
mov [esp] eax +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4810E0  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_4712B0  +
mov eax [esp+18h] +
add esp 58h +
pop ebp  +
retn   +
***
mov dword ptr [esp] 4 +
call loc_4812A0  +
mov dword ptr [eax] offset off_4D5A90 +
mov dword ptr [esp+8] offset sub_480EF0 +
mov dword ptr [esp+4] offset off_4D5684 +
mov [esp] eax +
mov dword ptr [esp+20h] 1 +
call sub_481B50  +
mov eax [esp+24h] +
cmp dword ptr [esp+28h] 0FFFFFFFFh +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov [esp] eax +
jz loc_481169  +
call sub_471550  +
call loc_4814A0  +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_482824 +
mov dword ptr [esp+40h] offset loc_481265 +
mov [esp+44h] esp +
call sub_471250  +
mov dword ptr [esp] 50h +
call malloc  +
test eax eax +
mov [esp+18h] eax +
jz loc_4811E5  +
call sub_481930  +
mov edi [esp+18h] +
mov ecx 14h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_4712B0  +
mov eax [esp+18h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_48127C  +
mov edx dword_483784 +
xor ecx ecx +
mov eax edx +
jmp loc_48121A  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_481260  +
test al 1 +
jnz loc_481210  +
mov eax 1 +
shl eax cl +
or eax edx +
mov dword_483784 eax +
lea eax [ecx+ecx*4] +
shl eax 4 +
add eax offset unk_4877A0 +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_4811B9  +
call sub_480870  +
lea esi [esi+0] +
call sub_480FC0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_481281  +
sub ecx 1 +
jz loc_481281  +
call sub_480840  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_481296  +
call sub_471550  +
call loc_4814A0  +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
push edi  +
sub esp 54h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_482804 +
mov dword ptr [esp+40h] offset loc_4813A5 +
mov [esp+44h] esp +
call sub_471250  +
mov eax [esp+60h] +
add eax 60h +
mov [esp] eax +
mov [esp+18h] eax +
call malloc  +
test eax eax +
mov [esp+14h] eax +
jz loc_481327  +
call sub_481930  +
mov edi [esp+14h] +
mov ecx 18h +
add dword ptr [eax+4] 1 +
xor eax eax +
stos   +
mov edi [esp+14h] +
lea eax [esp+1Ch] +
mov [esp] eax +
add edi 60h +
mov [esp+14h] edi +
call sub_4712B0  +
mov eax [esp+14h] +
add esp 54h +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4813BC  +
cmp dword ptr [esp+18h] 200h +
mov edx dword_483780 +
ja loc_4813A0  +
mov eax edx +
xor ecx ecx +
jmp loc_48135F  +
add ecx 1 +
shr eax 1 +
cmp ecx 20h +
jz loc_4813A0  +
test al 1 +
jnz loc_481355  +
mov eax 1 +
shl eax cl +
or eax edx +
shl ecx 9 +
mov dword_483780 eax +
lea eax dword_4837A0[ecx] +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+14h] eax +
mov dword ptr [esp+20h] 2 +
call pthread_mutex_unlock  +
test eax eax +
jz loc_4812F0  +
call sub_480870  +
nop   +
call sub_480FC0  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4813C1  +
sub ecx 1 +
jz loc_4813C1  +
push ebx  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_481490  +
mov [esp+18h+var_18] ebx +
call sub_4813E0  +
mov eax [ebx] +
mov edx [ebx+4] +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
ja loc_481490  +
cmp eax 1 +
ja loc_481490  +
mov eax [ebx-24h] +
mov [esp+18h+var_18] eax +
call loc_47DBB0  +
lea esi [esi+0] +
call sub_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
***
push ebp  +
sub esp 88h +
lea eax [esp+80h] +
mov [esp+4Ch] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
mov dword ptr [esp+44h] offset sub_481BB0 +
mov dword ptr [esp+48h] offset dword_4827F4 +
mov dword ptr [esp+50h] offset loc_48153B +
mov [esp+54h] esp +
call sub_471250  +
mov eax [esp+90h] +
mov [esp] eax +
call sub_4813E0  +
mov eax [esp+90h] +
mov eax [eax-10h] +
mov [esp+20h] eax +
mov eax [esp+90h] +
mov eax [eax-18h] +
mov [esp+1Ch] eax +
mov eax [esp+90h] +
mov eax [eax-24h] +
mov [esp+24h] eax +
mov eax [esp+90h] +
mov eax [eax-0Ch] +
mov [esp+70h] eax +
mov eax [esp+90h] +
mov eax [eax-28h] +
mov dword ptr [esp+30h] 1 +
mov [esp] eax +
call sub_47DC70  +
mov eax [esp+34h] +
mov [esp+28h] eax +
mov eax [esp+30h] +
test eax eax +
jz loc_481552  +
sub eax 1 +
jz loc_4815B1  +
sub esp 0Ch +
call sub_481930  +
mov eax [eax] +
test eax eax +
jz loc_481657  +
test byte ptr [eax+30h] 1 +
jnz loc_481650  +
mov eax [eax] +
add esp 0Ch +
retn   +
mov eax [eax] +
sub eax 50h +
jmp loc_481644  +
xor eax eax +
jmp loc_481646  +
***
sub esp 1Ch +
mov dword ptr [esp+8] 1Eh +
mov dword ptr [esp+4] offset aDeletedVirtual +
mov dword ptr [esp] 2 +
call _write  +
call sub_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebx  +
sub esp 18h +
call sub_481A20  +
mov edx [eax] +
test edx edx +
jz loc_4816C7  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_4816D0  +
add edx 30h +
mov dword ptr [eax] 0 +
mov [esp] edx +
call sub_471640  +
add esp 18h +
pop ebx  +
retn   +
***
cmp ecx 1 +
ja loc_4816B6  +
mov ecx [edx+14h] +
test ecx ecx +
js loc_4816F0  +
sub ecx 1 +
jz loc_481700  +
cmp ecx 0FFFFFFFFh +
jz loc_481712  +
mov [edx+14h] ecx +
add esp 18h +
pop ebx  +
retn   +
***
add ecx 1 +
jnz loc_4816E6  +
mov ebx [edx+10h] +
mov [eax] ebx +
jmp loc_4816E6  +
***
mov ecx [edx+10h] +
add edx 30h +
mov [eax] ecx +
mov [esp] edx +
call sub_471640  +
jmp loc_4816C7  +
***
call sub_480FC0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_482834 +
mov dword ptr [esp+40h] offset loc_4817E1 +
mov [esp+44h] esp +
call sub_471250  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset unk_4877A0 +
jb loc_48176C  +
cmp dword ptr [esp+60h] offset dword_4881A0 +
jb loc_481785  +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_4712B0  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset unk_4877A0 +
mov edx 0CCCCCCCDh +
mul  edx +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 1 +
mov [esp+18h] edx +
shr dword ptr [esp+18h] 6 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4817F8  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_483784 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_481774  +
call sub_480870  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4817FD  +
sub ecx 1 +
jz loc_4817FD  +
call sub_480840  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_481812  +
call sub_471550  +
call loc_4814A0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
push ebp  +
sub esp 58h +
lea eax [esp+50h] +
mov [esp+3Ch] eax +
lea eax [esp+1Ch] +
mov [esp] eax +
mov dword ptr [esp+34h] offset sub_481BB0 +
mov dword ptr [esp+38h] offset dword_482814 +
mov dword ptr [esp+40h] offset loc_4818DD +
mov [esp+44h] esp +
call sub_471250  +
mov eax [esp+60h] +
cmp dword ptr [esp+60h] offset dword_4837A0 +
jb loc_48186C  +
cmp dword ptr [esp+60h] offset unk_4877A0 +
jb loc_481888  +
sub eax 60h +
mov [esp] eax +
call free  +
lea eax [esp+1Ch] +
mov [esp] eax +
call sub_4712B0  +
add esp 58h +
pop ebp  +
retn   +
***
sub eax offset dword_4837A0 +
mov dword ptr [esp] offset dword_4881B0 +
mov [esp+18h] eax +
mov dword ptr [esp+20h] 1 +
shr dword ptr [esp+18h] 9 +
call pthread_mutex_lock  +
test eax eax +
jnz loc_4818F4  +
movzx ecx byte ptr [esp+18h] +
mov eax 0FFFFFFFEh +
mov dword ptr [esp] offset dword_4881B0 +
mov dword ptr [esp+20h] 2 +
rol eax cl +
and dword_483780 eax +
call pthread_mutex_unlock  +
test eax eax +
jz loc_481877  +
call sub_480870  +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [esp+28h] +
test ecx ecx +
jz loc_4818F9  +
sub ecx 1 +
jz loc_4818F9  +
call sub_480840  +
add edx 1 +
mov [esp] eax +
mov dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_48190E  +
call sub_471550  +
call loc_4814A0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+4] +
mov eax [eax-8] +
retn   +
***
lea eax [esp+58h+var_8] +
lea eax [esp+58h+var_8] +
mov eax [esp+arg_20] +
call sub_481930  +
mov edx [eax] +
add dword ptr [eax+4] 1 +
test edx edx +
jz loc_481B33  +
mov ecx [edx+30h] +
mov ebx [edx+34h] +
add ecx 0BCD4D500h +
adc ebx 0B8B1AABCh +
cmp ebx 0 +
jbe loc_481B38  +
mov dword ptr [eax] 0 +
lea ebx [edx+30h] +
mov [esp+18h+var_18] ebx +
call sub_4715C0  +
mov [esp+18h+var_18] ebx +
call sub_4813E0  +
call sub_480FC0  +
cmp ecx 1 +
ja loc_481B1A  +
neg dword ptr [edx+14h]  +
jmp loc_481B20  +
***
mov eax [esp+18h+arg_0] +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0ACh+arg_8] +
mov edx [esp+0ACh+arg_C] +
mov [esp+0ACh+var_58] offset sub_481BB0 +
mov [esp+0ACh+var_54] offset dword_4827E4 +
mov [esp+0ACh+var_94] eax +
lea eax [esp+0ACh+var_C] +
mov [esp+0ACh+var_50] eax +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_90] edx +
mov [esp+0ACh+var_4C] offset loc_482107 +
mov [esp+0ACh+var_48] esp +
call sub_471250  +
cmp [esp+0ACh+arg_0] 1 +
mov [esp+0ACh+var_34] 0 +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_8C] 3 +
jz loc_481C40  +
lea eax [esp+0ACh+var_70] +
mov [esp+0ACh+var_AC] eax +
call sub_4712B0  +
mov eax [esp+0ACh+var_8C] +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0ACh+var_94] +
mov edx [esp+0ACh+var_90] +
mov byte ptr [esp+0ACh+var_94] 1 +
add eax 0BCD4D500h +
adc edx 0B8B1AABCh +
cmp edx 0 +
jbe loc_481D40  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_481D53  +
cmp [esp+0ACh+arg_4] 6 +
jnz loc_481D53  +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-18h] +
mov [esp+0ACh+var_88] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-10h] +
mov [esp+0ACh+var_7C] eax +
mov eax [esp+0ACh+arg_10] +
mov eax [eax-0Ch] +
cmp eax 1 +
mov [esp+0ACh+var_80] eax +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 3 +
test byte ptr [esp+0ACh+arg_4] 8 +
jz loc_481EC0  +
cmp eax 1 +
jz loc_482113  +
mov edx [esp+0ACh+var_88] +
test edx edx +
js loc_482118  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_A8] 0 +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_471330  +
mov eax [esp+0ACh+var_88] +
mov [esp+0ACh+var_A8] 1 +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_471330  +
mov eax [esp+0ACh+var_80] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_471390  +
mov [esp+0ACh+var_8C] 7 +
jmp loc_481C25  +
cmp eax 1 +
setnbe byte ptr [esp+0ACh+var_94]  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_481C6C  +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
mov [esp+0ACh+var_AC] eax +
call sub_4713B0  +
test eax eax +
mov [esp+0ACh+var_7C] eax +
jz loc_481F40  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D8D0  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_8C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_47DA20  +
mov [esp+0ACh+var_1C] eax +
lea eax [esp+0ACh+var_30] +
mov [esp+0ACh+var_A8] eax +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_AC] eax +
call sub_471360  +
cmp [esp+0ACh+var_30] 1 +
mov esi eax +
sbb esi 0 +
test esi esi +
js loc_481F40  +
jz loc_481F4D  +
mov eax [esp+0ACh+var_8C] +
xor ebp ebp +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or ebp edx +
test bl bl +
js loc_481DF0  +
xor edi edi +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add eax 1 +
movzx ebx byte ptr [eax-1] +
mov edx ebx +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or edi edx +
test bl bl +
js loc_481E10  +
sub esi 1 +
jnz loc_481DE7  +
lea eax [ebp+1] +
test edi edi +
mov [esp+0ACh+var_80] eax +
jnz loc_481F5F  +
cmp [esp+0ACh+var_80] 0 +
jz loc_481F40  +
mov eax 2 +
mov [esp+0ACh+var_88] 0 +
mov [esp+0ACh+var_84] 0 +
test byte ptr [esp+0ACh+arg_4] 1 +
jz loc_481CAF  +
cmp eax 2 +
jz loc_481F40  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_8C] 6 +
jnz loc_481C25  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+var_88] +
mov [eax-18h] esi +
mov esi [esp+0ACh+var_84] +
mov [eax-14h] esi +
mov esi [esp+0ACh+var_7C] +
mov [eax-10h] esi +
mov esi [esp+0ACh+arg_10] +
mov eax [esp+0ACh+var_34] +
mov [esi-8] eax +
mov eax esi +
mov esi [esp+0ACh+var_80] +
mov [eax-0Ch] esi +
jmp loc_481C25  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jnz loc_481CBD  +
cmp eax 1 +
jz loc_4820F8  +
mov eax [esp+0ACh+var_88] +
test eax eax +
jns loc_481CD2  +
mov edx [esp+0ACh+var_7C] +
lea ecx [esp+0ACh+var_24] +
mov eax [esp+0ACh+arg_14] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D8D0  +
mov edx [esp+0ACh+arg_14] +
movzx eax [esp+0ACh+var_10] +
call sub_47DA20  +
mov edx [esp+0ACh+arg_14] +
mov [esp+0ACh+var_1C] eax +
movzx eax [esp+0ACh+var_10] +
call sub_47DA20  +
mov esi [esp+0ACh+arg_10] +
mov [esi-0Ch] eax +
jmp loc_481CD2  +
mov [esp+0ACh+var_8C] 8 +
jmp loc_481C25  +
mov [esp+0ACh+var_80] 0 +
mov eax 1 +
jmp loc_481E4B  +
mov eax [esp+0ACh+var_14] +
lea eax [eax+edi-1] +
mov edi [esp+0ACh+var_80] +
mov [esp+0ACh+var_84] eax +
test edi edi +
jz loc_481F40  +
test eax eax +
jz loc_481E46  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_88] offset off_4D5638 +
and eax 8 +
mov [esp+0ACh+var_74] eax +
jnz loc_481FC9  +
cmp byte ptr [esp+0ACh+var_94] 0 +
mov [esp+0ACh+var_88] offset off_4D564C +
jnz loc_481FC9  +
mov eax [esp+0ACh+arg_10] +
mov esi [esp+0ACh+arg_10] +
add eax 20h +
test byte ptr [esi] 1 +
jz loc_481FBE  +
mov eax [esi-30h] +
mov [esp+0ACh+var_34] eax +
mov eax [eax-50h] +
mov [esp+0ACh+var_88] eax +
mov [esp+0ACh+var_75] 0 +
jmp loc_482011  +
jle loc_482044  +
lea eax [esp+0ACh+var_24] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D7F0  +
test eax eax +
jz loc_48208C  +
mov esi [esp+0ACh+var_88] +
test esi esi +
jnz loc_4820E2  +
mov eax [esp+0ACh+var_28] +
test eax eax +
jz loc_4820C5  +
add eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_84] eax +
mov eax [esp+0ACh+var_84] +
lea edx [esp+0ACh+var_2C] +
call sub_47D770  +
lea edx [esp+0ACh+var_28] +
mov [esp+0ACh+var_8C] eax +
call sub_47D770  +
mov edx [esp+0ACh+var_2C] +
cmp edx 0 +
jnz loc_481FD0  +
mov [esp+0ACh+var_75] 1 +
jmp loc_481FFA  +
mov ebx [esp+0ACh+var_88] +
test ebx ebx +
jz loc_48205B  +
mov ecx [esp+0ACh+var_74] +
test ecx ecx +
jnz loc_48205B  +
cmp byte ptr [esp+0ACh+var_94] 0 +
jz loc_4820A1  +
not edx  +
xor esi esi +
add edx [esp+0ACh+var_18] +
xor ecx ecx +
add edx 1 +
movzx ebx byte ptr [edx-1] +
mov eax ebx +
and eax 7Fh +
shl eax cl +
add ecx 7 +
or esi eax +
test bl bl +
js loc_482068  +
test esi esi +
setz al  +
test al al +
jz loc_481FFA  +
mov eax [esp+0ACh+var_2C] +
mov [esp+0ACh+var_88] eax +
mov eax 3 +
jmp loc_481E5B  +
mov [esp+0ACh+var_AC] edx +
mov ecx [esp+0ACh+var_34] +
lea eax [esp+0ACh+var_24] +
mov edx [esp+0ACh+var_88] +
mov [esp+0ACh+var_6C] 0FFFFFFFFh +
call sub_47D9B0  +
xor eax 1 +
jmp loc_482084  +
cmp [esp+0ACh+var_75] 0 +
jz loc_481F40  +
mov [esp+0ACh+var_88] 0 +
mov eax 2 +
jmp loc_481E5B  +
mov edx [esp+0ACh+var_88] +
lea ecx [esp+0ACh+var_34] +
call sub_47D870  +
test al al +
jnz loc_48208C  +
jmp loc_481FFA  +
mov eax [esp+0ACh+arg_10] +
mov [esp+0ACh+var_AC] eax +
call sub_481450  +
mov eax [esp+0ACh+var_68] +
mov [esp+0ACh+var_AC] eax +
call sub_4813E0  +
call sub_480FC0  +
mov [esp+0ACh+var_6C] 1 +
call sub_480F60  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
cmp byte_4881A4 0 +
jnz loc_482141  +
mov byte_4881A4 0 +
retn   +
sub esp 1Ch +
mov eax dword_4881A0 +
mov [esp+0C8h+var_C8] eax +
call pthread_key_delete  +
mov byte_4881A4 0 +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call sub_406C50  +
lea eax [ebp+arg_4] +
mov esi [ebp+arg_4] +
sub esp 4 +
mov [esp+18h+var_14] eax +
lea eax [ebp+arg_0] +
mov [esp+18h+var_18] eax +
call sub_45A2F0  +
mov eax [ebp+arg_4] +
cmp esi eax +
jz loc_48219D  +
mov ds:byte_4D7264 1 +
mov [esp+18h+var_14] eax +
mov eax [ebp+arg_0] +
mov ecx ebx +
mov [esp+18h+var_18] eax +
call sub_406CD0  +
mov ecx ebx +
sub esp 8 +
call sub_406D30  +
mov ecx ebx +
call sub_406E60  +
mov ecx ebx +
call sub_40E070  +
mov eax [ebp+arg_4] +
mov ecx ebx +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call sub_4072D0  +
mov ecx ebx +
sub esp 4 +
call sub_407420  +
mov ecx ebx +
call sub_4075C0  +
mov ecx ebx +
call sub_4079C0  +
mov ecx ebx +
call sub_407A60  +
test eax eax +
jnz loc_482201  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
mov ecx ebx +
call sub_4089A0  +
test al al +
jz loc_482221  +
cmp ds:dword_4D70F8 0 +
mov eax 2 +
jnz loc_4821F8  +
call sub_403C70  +
jmp loc_4821F8  +
mov ecx ebx +
call sub_40D530  +
mov eax [ebp+arg_4] +
mov ecx ebx +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call sub_40D9A0  +
mov ecx ebx +
push eax  +
call sub_408B50  +
jmp loc_48220C  +
***
jmp loc_482250  +
mov eax off_483588 +
mov dword_483030 3 +
mov dword_48304C 9 +
mov dword_483068 9 +
mov dword_483038 eax +
mov eax off_4835A0 +
mov dword_483084 0Bh +
mov dword_4830A0 9 +
mov dword_4830BC 3 +
mov dword_483054 eax +
mov eax off_483584 +
mov dword_4830D8 0Bh +
mov dword_4830F4 11h +
mov dword_483110 12h +
mov dword_483070 eax +
mov eax off_483524 +
mov dword_48312C 10h +
mov dword_483148 3 +
mov dword_48308C eax +
mov eax off_483520 +
mov dword_4830A8 eax +
mov eax off_48359C +
mov dword_4830C4 eax +
mov eax off_483530 +
mov dword_4830E0 eax +
mov eax off_48352C +
mov dword_4830FC eax +
mov eax off_483534 +
mov dword_483118 eax +
mov eax off_483538 +
mov dword_483134 eax +
mov eax off_483598 +
mov dword_483150 eax +
mov dword_483164 0Bh +
mov eax off_483528 +
mov dword_483180 7 +
mov dword_48319C 13h +
mov dword_4831B8 8 +
mov dword_48316C eax +
mov eax off_483594 +
mov dword_4831D4 7 +
mov dword_4831F0 4 +
mov dword_48320C 3 +
mov dword_483188 eax +
mov eax off_483590 +
mov dword_483228 9 +
mov dword_483244 6 +
mov dword_483260 9 +
mov dword_4831A4 eax +
mov eax off_48358C +
mov dword_48327C 0Dh +
mov dword_483298 7 +
mov dword_4831C0 eax +
mov eax off_483570 +
mov dword_4831DC eax +
mov eax off_483580 +
mov dword_4831F8 eax +
mov eax off_48357C +
mov dword_483214 eax +
mov eax off_483578 +
mov dword_483230 eax +
mov eax off_483574 +
mov dword_48324C eax +
mov eax off_48356C +
mov dword_483268 eax +
mov eax off_4835A8 +
mov dword_483284 eax +
mov eax ds:dword_4D7230 +
mov dword_4832A0 eax +
mov eax ds:dword_4D7168 +
mov dword_4832B4 8 +
mov dword_4832D0 11h +
mov dword_4832EC 0Eh +
mov dword_4832BC eax +
mov eax ds:dword_4D7160 +
mov dword_483308 10h +
mov dword_483324 13h +
mov dword_483340 10h +
mov dword_4832D8 eax +
mov eax off_4835B4 +
mov dword_48335C 0Eh +
mov dword_483378 6 +
mov dword_483394 12h +
mov dword_4832F4 eax +
mov eax ds:dword_4D7164 +
mov dword_4833B0 0Bh +
mov dword_4833CC 7 +
mov dword_483310 eax +
mov eax ds:dword_4D715C +
mov dword_48332C eax +
mov eax off_4835B0 +
mov dword_483348 eax +
mov eax ds:dword_4D7158 +
mov dword_483364 eax +
mov eax off_483568 +
mov dword_483380 eax +
mov eax off_483564 +
mov dword_48339C eax +
mov eax off_483560 +
mov dword_4833B8 eax +
mov eax off_48355C +
mov dword_4833D4 eax +
mov dword_4833E8 9 +
mov eax off_483558 +
mov dword_483404 0Bh +
mov dword_483420 0Eh +
mov dword_48343C 13h +
mov dword_4833F0 eax +
mov eax off_483550 +
mov dword_483458 15h +
mov dword_483474 15h +
mov dword_483490 0Ch +
mov dword_48340C eax +
mov eax off_4834F8 +
mov dword_4834AC 13h +
mov dword_4834C8 18h +
mov dword_4834E4 9 +
mov dword_483428 eax +
mov eax off_4834F4 +
mov dword_483444 eax +
mov eax off_4834F0 +
mov dword_483460 eax +
mov eax off_48354C +
mov dword_48347C eax +
mov eax off_483548 +
mov dword_483498 eax +
mov eax off_483544 +
mov dword_4834B4 eax +
mov eax off_483540 +
mov dword_4834D0 eax +
mov eax off_48353C +
mov dword_4834EC eax +
retn   +
***
lea ecx [esp+arg_0] +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_overhe +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMemS +
call sub_424560  +
nop   +
sub esp 1Ch +
mov ecx offset dword_4D9120 +
call sub_480340  +
mov [esp+38h+var_38] offset sub_41FFA0 +
call sub_46FDC0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_0 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_0 +
call sub_424560  +
nop   +
sub esp 1Ch +
mov ecx offset dword_4D9160 +
call sub_480140  +
mov [esp+38h+var_38] offset sub_420C00 +
call sub_46FDC0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aRelease_over_1 +
mov [esp+1Ch+var_18] 97h +
mov [esp+1Ch+var_1C] offset a____GccGccMe_1 +
call sub_424560  +
nop   +
mov ds:dword_4D9280 0 +
retn   +
***
sub esp 1Ch +
sub esp 1Ch +
mov [esp+1Ch+var_14] offset aMacro_real_tok +
mov [esp+1Ch+var_18] 439h +
mov [esp+1Ch+var_1C] offset a____GccLibcppM +
call sub_424560  +
nop   +
mov dword_4881B0 0FFFFFFFFh +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] offset sub_47D7B0 +
mov [esp+1Ch+var_1C] offset dword_4881A0 +
mov byte_4881A4 0 +
call pthread_key_create  +
mov [esp+1Ch+var_1C] offset loc_482130 +
test eax eax +
setz byte_4881A4  +
call sub_46FDC0  +
add esp 1Ch +
retn   +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_46FDC0  +
leave   +
retn   +
***
