cmc   +
xlat   +
imul edi [ebx] +
xchg eax ecx +
retf 9379h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_10028FE  +
mov eax [esi+58h] +
push edi  +
mov edi ds:CoTaskMemFree +
cmp eax ebx +
jz loc_10028C9  +
push eax  +
call edi  +
mov [esi+58h] ebx +
mov eax [esi+5Ch] +
cmp eax ebx +
jz loc_10028D6  +
push eax  +
call edi  +
mov [esi+5Ch] ebx +
mov eax [esi+60h] +
cmp eax ebx +
jz loc_10028E3  +
push eax  +
call edi  +
mov [esi+60h] ebx +
mov eax [esi+64h] +
cmp eax ebx +
jz loc_10028F0  +
push eax  +
call edi  +
mov [esi+64h] ebx +
mov eax [esi+68h] +
cmp eax ebx +
jz loc_10028FD  +
push eax  +
call edi  +
mov [esi+68h] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100293A  +
mov eax [esi+38h] +
push edi  +
mov edi ds:CoTaskMemFree +
test eax eax +
jz loc_100292B  +
push eax  +
call edi  +
and dword ptr [esi+38h] 0 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_1002939  +
push eax  +
call edi  +
and dword ptr [esi+3Ch] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+1Ch] +
cmp ecx 2 +
jz loc_1002987  +
cmp ecx 33h +
jz loc_1002987  +
mov edx [eax+5Ch] +
test edx edx +
jz loc_1002987  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002966  +
sub eax esi +
sar eax 1 +
pop esi  +
cmp eax 11h +
jb loc_1002987  +
add edx 22h +
push edx  +
call ds:_wtol  +
pop ecx  +
jmp loc_100298A  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_78] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push 70h  +
lea eax [ebp+var_74] +
push 0  +
push eax  +
or ebx 0FFFFFFFFh +
call memset  +
mov eax dword_101F900 +
add esp 0Ch +
test eax eax +
jz loc_10029D0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword_101F900 esi +
test esi esi +
jz loc_1002A1D  +
mov eax dword_101F938 +
mov ecx [eax] +
lea edx [ebp+var_78] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1002A1D  +
mov eax [ebp+var_78] +
test eax eax +
jz loc_1002A1D  +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
lea eax [ebp+var_74] +
jl loc_1002A10  +
push eax  +
call sub_1002944  +
mov ebx eax +
jmp loc_1002A1D  +
push 70h  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
call sub_1008218  +
mov eax [ebp+var_78] +
pop esi  +
pop ebx  +
test eax eax +
jz loc_1002A36  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_78] 0 +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
and [ebp+dwMessageId] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
call sub_100C77E  +
mov edi eax +
test edi edi +
jnz loc_1002AAA  +
mov eax [esi] +
lea ecx [ebp+var_24] +
push ecx  +
lea ecx [ebp+dwMessageId] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
mov esi eax +
test esi esi +
jge loc_1002A93  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov edi esi +
jmp loc_1002AAA  +
cmp [ebp+dwMessageId] 0 +
jge loc_1002AAA  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov edi [ebp+dwMessageId] +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
xor esi esi +
push edi  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp-84h] +
push esi  +
mov [ebp-4Ch] esi +
mov [ebp-38h] esi +
mov [ebp-64h] esi +
mov [ebp-60h] esi +
mov [ebp-58h] esi +
mov [ebp-34h] esi +
mov [ebp-48h] esi +
mov [ebp-50h] esi +
mov [ebp-44h] esi +
mov [ebp-54h] esi +
mov [ebp-3Ch] esi +
mov [ebp-5Ch] esi +
mov [ebp-40h] esi +
stos   +
call sub_1002993  +
cmp [ebp+10h] esi +
jbe loc_1002D66  +
mov dword ptr [ebp-30h] 1 +
lea edi [ebx+esi*4] +
mov eax [edi] +
test eax eax +
jz loc_1002D72  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002B52  +
cmp [ebp-4Ch] eax +
jnz loc_1002D8D  +
mov dword ptr [ebp-4Ch] 1 +
jmp loc_1002D52  +
push offset aFile  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002B91  +
cmp [ebp-38h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov eax [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test eax eax +
jz loc_1002D8D  +
mov [ebp-38h] eax +
jmp loc_1002D52  +
push offset aMaximum  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002C2B  +
cmp [ebp-58h] eax +
jnz loc_1002D8D  +
cmp [ebp-54h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov ecx [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test ecx ecx +
jz loc_1002D8D  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1002BDA  +
sub eax edi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_1002D8D  +
push dword ptr [ebx+esi*4]  +
mov dword ptr [ebp-58h] 1 +
call ds:_wtol  +
pop ecx  +
push 0  +
cdq   +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-64h] eax +
mov [ebp-60h] edx +
jmp loc_1002D52  +
push offset aType  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002C9A  +
cmp [ebp-54h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov eax [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test eax eax +
jz loc_1002D8D  +
mov edi ds:_wcsicmp +
push offset aExpandable  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002D1B  +
push offset aFixed  +
push dword ptr [ebx+esi*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002D8D  +
mov dword ptr [ebp-34h] 1 +
jmp loc_1002D52  +
push offset aSd  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002CD6  +
cmp [ebp-48h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov eax [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test eax eax +
jz loc_1002D8D  +
mov [ebp-48h] eax +
jmp loc_1002D52  +
push offset aParent  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002D24  +
cmp [ebp-50h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov eax [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test eax eax +
jz loc_1002D8D  +
xor ecx ecx +
inc ecx  +
cmp [ebp-34h] ecx +
jz loc_1002D8D  +
mov [ebp-54h] ecx +
mov [ebp-50h] eax +
mov dword ptr [ebp-34h] 2 +
jmp loc_1002D52  +
push offset aSource  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002D8D  +
cmp [ebp-44h] eax +
jnz loc_1002D8D  +
mov eax [ebp-30h] +
cmp eax [ebp+10h] +
jnb loc_1002D8D  +
inc esi  +
mov eax [ebx+esi*4] +
inc dword ptr [ebp-30h]  +
test eax eax +
jz loc_1002D8D  +
mov [ebp-44h] eax +
inc esi  +
inc dword ptr [ebp-30h]  +
cmp esi [ebp+10h] +
jb loc_1002B1E  +
xor edi edi +
cmp [ebp-38h] edi +
jnz loc_1002D99  +
push 0C0002F5Ch  +
call sub_1012A8B  +
jmp loc_1002D82  +
push offset aCreateVdisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1002F02  +
push offset aCreateVdisk  +
push 0C0002AF9h  +
jmp loc_1002D7C  +
***
cmp [ebp-34h] edi +
jnz loc_1002DA5  +
mov dword ptr [ebp-34h] 1 +
lea eax [ebp-2Ch] +
push eax  +
call ds:CoCreateGuid  +
cmp eax edi +
jl loc_1002E03  +
mov eax [ebp-64h] +
lea edx [ebp-3Ch] +
push edx  +
lea edx [ebp-2Ch] +
push edx  +
xor edx edx +
cmp dword ptr [ebp-34h] 1 +
push edi  +
setz dl  +
mov [ebp-1Ch] eax +
mov eax [ebp-60h] +
push edi  +
mov [ebp-18h] eax +
mov eax [ebp-50h] +
mov [ebp-0Ch] eax +
mov eax [ebp-44h] +
push edx  +
push dword ptr [ebp-48h]  +
mov [ebp-8] eax +
push dword ptr [ebp-38h]  +
mov eax dword_101F938 +
push offset unk_101F004  +
mov [ebp-14h] edi +
mov dword ptr [ebp-10h] 200h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax edi +
jge loc_1002E06  +
push eax  +
jmp loc_1002E6E  +
mov ebx offset WideCharStr +
push ebx  +
call sub_1012503  +
push dword ptr [ebp-3Ch]  +
call sub_100C77E  +
mov [ebp-34h] eax +
cmp eax edi +
jnz loc_1002ED9  +
mov eax [ebp-3Ch] +
mov ecx [eax] +
lea edx [ebp-84h] +
push edx  +
lea edx [ebp-40h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi edi +
jge loc_1002E47  +
push esi  +
call sub_1012BB1  +
push eax  +
jmp loc_1002EA7  +
cmp [ebp-40h] edi +
jge loc_1002E62  +
push dword ptr [ebp-40h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-40h] +
mov [ebp-34h] eax +
jmp loc_1002ED9  +
mov eax [ebp-7Ch] +
cmp eax edi +
jnz loc_1002E82  +
push 80042453h  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov dword ptr [ebp-34h] 80070057h +
jmp loc_1002ED9  +
mov ecx [eax] +
lea edx [ebp-5Ch] +
push edx  +
push offset dword_10025F8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jge loc_1002EB1  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
push 4DEh  +
call sub_1012B18  +
mov [ebp-34h] esi +
jmp loc_1002ED9  +
mov eax [ebp-7Ch] +
cmp eax edi +
jz loc_1002EC1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-7Ch] edi +
push dword ptr [ebp-5Ch]  +
call sub_1002993  +
push ebx  +
call sub_1012503  +
push 4B1h  +
call sub_1012B18  +
mov eax [ebp-7Ch] +
cmp eax edi +
jz loc_1002EE9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-7Ch] edi +
mov eax [ebp-3Ch] +
cmp eax edi +
jz loc_1002EF6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-34h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
mov [ebp+var_10] esi +
mov [ebp+var_8] esi +
xor ebx ebx +
call sub_1002993  +
cmp [ebp+arg_8] esi +
jbe loc_1002FA3  +
mov edi [ebp+arg_4] +
mov [ebp+var_4] 1 +
mov eax [edi+esi*4] +
test eax eax +
jz loc_1002FAF  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002F69  +
cmp [ebp+var_8] eax +
jnz loc_1002FC7  +
mov [ebp+var_8] 1 +
jmp loc_1002F96  +
push offset aFile  +
push dword ptr [edi+esi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002FC7  +
test ebx ebx +
jnz loc_1002FC7  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_8] +
jnb loc_1002FC7  +
inc esi  +
mov eax [edi+esi*4] +
inc [ebp+var_4]  +
test eax eax +
jz loc_1002FC7  +
mov ebx eax +
inc esi  +
inc [ebp+var_4]  +
cmp esi [ebp+arg_8] +
jb loc_1002F42  +
test ebx ebx +
jnz loc_1002FD3  +
push 0C0002F5Dh  +
call sub_1012A8B  +
jmp loc_1002FBF  +
push offset aSelectVdisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1003036  +
push offset aSelectVdisk  +
push 0C0002AF9h  +
jmp loc_1002FB9  +
mov eax dword_101F938 +
and [ebp+var_C] 0 +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push ebx  +
push offset unk_101F004  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_1003005  +
push eax  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_10] 80070057h +
jmp loc_1003017  +
push [ebp+var_C]  +
call sub_1002993  +
push 4B4h  +
call sub_1012B18  +
cmp dword_101F900 0 +
jnz loc_100302A  +
push 4DEh  +
call sub_1012B18  +
mov eax [ebp+var_8] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0E8h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
xor edi edi +
push 70h  +
lea eax [ebp-0C4h] +
push edi  +
push eax  +
mov [ebp-0E4h] edi +
mov [ebp-0E8h] edi +
mov [ebp-0DCh] edi +
mov [ebp-0CCh] edi +
mov [ebp-0E0h] edi +
mov [ebp-0C8h] edi +
mov [ebp-0D8h] edi +
mov [ebp-0D0h] edi +
call memset  +
push 50h  +
lea eax [ebp-54h] +
push edi  +
push eax  +
call memset  +
mov eax dword_101F900 +
add esp 18h +
cmp eax edi +
jnz loc_10030C9  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_10033E1  +
push esi  +
cmp [ebp+10h] edi +
jbe loc_10031E3  +
mov dword ptr [ebp-0D4h] 1 +
mov eax [ebp-0CCh] +
lea esi [ebx+eax*4] +
mov eax [esi] +
cmp eax edi +
jz loc_100320E  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100311D  +
cmp [ebp-0E4h] edi +
jnz loc_100321A  +
mov dword ptr [ebp-0E4h] 1 +
jmp loc_10031C3  +
push offset aReadonly  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100313F  +
mov dword ptr [ebp-0E8h] 1 +
jmp loc_10031C3  +
push offset aUsefilesd  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100316A  +
cmp [ebp-0D0h] edi +
jnz loc_100321A  +
mov dword ptr [ebp-0DCh] 1 +
jmp loc_10031C3  +
push offset aSd  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100321A  +
cmp [ebp-0DCh] edi +
jnz loc_100321A  +
cmp [ebp-0D0h] edi +
jnz loc_100321A  +
mov eax [ebp-0D4h] +
cmp eax [ebp+10h] +
jnb loc_100321A  +
inc dword ptr [ebp-0CCh]  +
mov eax [ebp-0CCh] +
mov eax [ebx+eax*4] +
inc dword ptr [ebp-0D4h]  +
cmp eax edi +
jz loc_100321A  +
mov [ebp-0D0h] eax +
inc dword ptr [ebp-0CCh]  +
mov eax [ebp-0CCh] +
inc dword ptr [ebp-0D4h]  +
cmp eax [ebp+10h] +
jb loc_10030DD  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp-54h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax edi +
jl loc_100329F  +
cmp dword ptr [ebp-44h] 3 +
jl loc_1003250  +
cmp dword ptr [ebp-44h] 5 +
jle loc_1003235  +
cmp dword ptr [ebp-44h] 6 +
jnz loc_1003250  +
mov eax 80042938h +
jmp loc_100323A  +
push offset aAttachVdisk  +
push 1C4h  +
jmp loc_1003224  +
push offset aAttachVdisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10033E0  +
mov eax 80042934h +
push eax  +
mov ebx 80070057h +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
jmp loc_100337B  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp-0C8h] +
push edx  +
push 1  +
push edi  +
cmp [ebp-0E8h] edi +
jz loc_1003292  +
push 290000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jl loc_100329F  +
lea edx [ebp-0D8h] +
push edx  +
xor edx edx +
cmp [ebp-0DCh] edi +
push 1388h  +
setnz dl  +
push edx  +
push 1  +
jmp loc_10032BB  +
push 0A0000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jge loc_10032A2  +
push eax  +
jmp loc_10032EA  +
lea edx [ebp-0D8h] +
push edx  +
xor edx edx +
cmp [ebp-0DCh] edi +
push 1388h  +
setnz dl  +
push edx  +
push edi  +
push dword ptr [ebp-0D0h]  +
mov eax [ebp-0C8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-0C8h] +
cmp eax edi +
jz loc_10032E5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C8h] edi +
cmp esi edi +
jge loc_10032FC  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ebx 80070057h +
jmp loc_100337B  +
mov esi offset WideCharStr +
push esi  +
call sub_1012503  +
push dword ptr [ebp-0D8h]  +
call sub_1002A52  +
mov ebx eax +
cmp ebx edi +
jnz loc_100337B  +
push esi  +
call sub_1012503  +
push 4B7h  +
call sub_1012B18  +
mov eax dword_101F938 +
mov ecx [eax] +
lea edx [ebp-0E0h] +
push edx  +
push dword_101F900  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100337B  +
mov eax [ebp-0E0h] +
mov ecx [eax] +
lea edx [ebp-0C4h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
lea eax [ebp-0C4h] +
jl loc_100336F  +
push eax  +
call sub_1002944  +
push eax  +
call sub_1008218  +
jmp loc_100337B  +
push 70h  +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
mov eax [ebp-0C8h] +
cmp eax edi +
jz loc_1003391  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C8h] edi +
mov eax [ebp-0E0h] +
cmp eax edi +
jz loc_10033A7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E0h] edi +
mov eax [ebp-0D8h] +
cmp eax edi +
jz loc_10033BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0D8h] edi +
lea eax [ebp-0C4h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-54h] +
push eax  +
call sub_1002909  +
mov eax [ebp-0E4h] +
neg eax  +
sbb eax eax +
not eax  +
and eax ebx +
pop esi  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_101F900 +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
cmp eax edi +
jnz loc_1003426  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_10034DA  +
push esi  +
xor esi esi +
inc esi  +
cmp [ebp+arg_8] esi +
ja loc_10034C3  +
jnz loc_1003453  +
mov eax [ebp+arg_4] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10034C3  +
mov eax dword_101F900 +
mov [ebp+var_8] esi +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push esi  +
push edi  +
push 40000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jge loc_100346B  +
push eax  +
jmp loc_100348D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1003488  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp esi edi +
jge loc_100349F  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ebx 80070057h +
jmp loc_10034A9  +
push 4B9h  +
call sub_1012B18  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_10034B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
neg eax  +
sbb eax eax +
not eax  +
and eax ebx +
jmp loc_10034D9  +
push offset aDetachVdisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10034F6  +
mov eax offset dword_1001438 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_1003520  +
dec eax  +
jz loc_1003519  +
dec eax  +
jnz loc_1003520  +
mov eax 4C2h +
jmp loc_1003525  +
mov eax 4C3h +
jmp loc_1003525  +
mov eax 4C1h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
push 4  +
xor eax eax +
pop ecx  +
mov edi offset dword_10012E0 +
lea esi [ebp+var_14] +
cmps   +
mov ecx [ebp+var_4] +
setnz al  +
pop edi  +
xor ecx ebp +
pop esi  +
add eax 4C4h +
call sub_101D138  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_10035D2  +
jmp ds:off_10035DC[eax*4]  +
mov eax 4C7h +
jmp loc_10035D7  +
mov eax 4C8h +
jmp loc_10035D7  +
mov eax 4CEh +
jmp loc_10035D7  +
mov eax 4C9h +
jmp loc_10035D7  +
mov eax 4CAh +
jmp loc_10035D7  +
mov eax 4CBh +
jmp loc_10035D7  +
mov eax 4CCh +
jmp loc_10035D7  +
mov eax 4CDh +
jmp loc_10035D7  +
mov eax 4F0h +
jmp loc_10035D7  +
mov eax 4F1h +
jmp loc_10035D7  +
mov eax 4C6h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100361F  +
mov eax 4E4h +
jmp loc_100362E  +
test byte ptr [ebp+arg_0] 2 +
push 0  +
pop eax  +
setnz al  +
add eax 4D5h +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 920h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 50h  +
lea eax [ebp-8A8h] +
push edi  +
push eax  +
mov [ebp-91Ch] edi +
call memset  +
push 70h  +
lea eax [ebp-918h] +
push edi  +
push eax  +
call memset  +
mov eax dword_101F900 +
add esp 18h +
cmp eax edi +
jnz loc_1003695  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_10038F4  +
mov ecx [ebp+0Ch] +
cmp [ecx] edi +
jz loc_10036AF  +
push offset aDetailVdisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_100368B  +
***
mov ecx [eax] +
lea edx [ebp-8A8h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi edi +
jge loc_10036E2  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
push 50h  +
mov [ebp-91Ch] esi +
push edi  +
lea eax [ebp-8A8h] +
jmp loc_10038A1  +
mov ebx 400h +
push ebx  +
lea eax [ebp-858h] +
push eax  +
push dword ptr [ebp-894h]  +
call sub_10034FF  +
push eax  +
call sub_10124CD  +
lea eax [ebp-858h] +
push eax  +
push dword ptr [ebp-894h]  +
push 4BCh  +
call sub_1012614  +
xor eax eax +
add esp 0Ch +
mov [ebp-58h] ax +
push 29h  +
lea eax [ebp-58h] +
push eax  +
lea eax [ebp-890h] +
push eax  +
call ds:StringFromGUID2  +
push ebx  +
lea eax [ebp-858h] +
push eax  +
sub esp 10h +
mov edi esp +
lea esi [ebp-890h] +
movs   +
movs   +
movs   +
movs   +
call sub_100352E  +
push eax  +
call sub_10124CD  +
lea eax [ebp-858h] +
push eax  +
lea eax [ebp-58h] +
push eax  +
push 4BDh  +
call sub_1012614  +
add esp 0Ch +
push ebx  +
lea eax [ebp-858h] +
push eax  +
push dword ptr [ebp-898h]  +
call sub_1003578  +
push eax  +
call sub_10124CD  +
lea eax [ebp-858h] +
push eax  +
push 4BBh  +
call sub_1012614  +
pop ecx  +
pop ecx  +
push dword ptr [ebp-87Ch]  +
lea eax [ebp-858h] +
push dword ptr [ebp-880h]  +
push eax  +
call sub_10126D0  +
lea eax [ebp-858h] +
push eax  +
push 4BEh  +
call sub_1012614  +
pop ecx  +
pop ecx  +
push dword ptr [ebp-874h]  +
lea eax [ebp-858h] +
push dword ptr [ebp-878h]  +
push eax  +
call sub_10126D0  +
lea eax [ebp-858h] +
push eax  +
push 4BFh  +
call sub_1012614  +
pop ecx  +
pop ecx  +
push dword ptr [ebp-870h]  +
call sub_10034E5  +
push eax  +
push 4C0h  +
call sub_1012614  +
pop ecx  +
pop ecx  +
xor esi esi +
push ebx  +
lea eax [ebp-858h] +
push eax  +
cmp [ebp-864h] esi +
jz loc_1003820  +
push 114h  +
jmp loc_1003825  +
push 0D7h  +
call sub_10124CD  +
lea eax [ebp-858h] +
push eax  +
push 4EFh  +
call sub_1012614  +
pop ecx  +
pop ecx  +
push dword ptr [ebp-860h]  +
call sub_10034E5  +
push eax  +
push 4EEh  +
call sub_1012614  +
mov eax dword_101F938 +
pop ecx  +
pop ecx  +
lea edx [ebp-920h] +
push edx  +
push dword_101F900  +
mov [ebp-920h] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10038BD  +
mov eax [ebp-920h] +
mov ecx [eax] +
lea edx [ebp-918h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jge loc_10038AC  +
push 4CFh  +
call sub_1012B18  +
push 70h  +
push esi  +
lea eax [ebp-918h] +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_10038D6  +
lea eax [ebp-918h] +
push eax  +
call sub_1002944  +
cmp eax 0FFFFFFFFh +
jnz loc_10038C9  +
push 4CFh  +
call sub_1012B18  +
jmp loc_10038D6  +
push eax  +
push 4D0h  +
call sub_1012614  +
pop ecx  +
pop ecx  +
lea eax [ebp-8A8h] +
push eax  +
call sub_1002909  +
lea eax [ebp-918h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-91Ch] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 20CCh +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_20CC] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi 400h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
xor ebx ebx +
push 0B5h  +
mov [ebp+var_20C8] ebx +
call sub_10124CD  +
push 50h  +
lea eax [ebp+var_2054] +
push ebx  +
push eax  +
call memset  +
push 70h  +
lea eax [ebp+var_20C4] +
push ebx  +
push eax  +
call memset  +
mov eax [esi] +
add esp 18h +
lea ecx [ebp+var_2054] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_1003998  +
push 50h  +
lea eax [ebp+var_2054] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_1003A8C  +
mov eax dword_101F938 +
mov ecx [eax] +
lea edx [ebp+var_20C8] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1003A09  +
mov eax [ebp+var_20C8] +
mov ecx [eax] +
lea edx [ebp+var_20C4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
lea eax [ebp+var_20C4] +
jl loc_10039DA  +
push eax  +
call sub_1002944  +
mov [ebp+var_20CC] eax +
jmp loc_10039E6  +
push 70h  +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
cmp [ebp+var_20CC] 0FFFFFFFFh +
jz loc_1003A09  +
push 0Ah  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_20CC]  +
call ds:_ultow  +
add esp 0Ch +
jmp loc_1003A1B  +
push edi  +
lea eax [ebp+var_804] +
push eax  +
push 4D7h  +
call sub_10124CD  +
push edi  +
lea eax [ebp+var_1004] +
push eax  +
push [ebp+var_2044]  +
call sub_1003578  +
push eax  +
call sub_10124CD  +
push edi  +
lea eax [ebp+var_2004] +
push eax  +
push [ebp+var_2014]  +
call sub_100360D  +
push eax  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
cmp dword_101F900 esi +
jz loc_1003A60  +
mov eax offset asc_1001458 +
push [ebp+var_201C]  +
lea ecx [ebp+var_2004] +
push ecx  +
lea ecx [ebp+var_1004] +
push ecx  +
lea ecx [ebp+var_804] +
push ecx  +
push [ebp+arg_4]  +
push eax  +
push 4D3h  +
call sub_1012614  +
add esp 1Ch +
mov eax [ebp+var_20C8] +
cmp eax ebx +
jz loc_1003AA2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_20C8] ebx +
lea eax [ebp+var_20C4] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_2054] +
push eax  +
call sub_1002909  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_14] edi +
cmp [eax] edi +
jz loc_1003B00  +
push offset aListVdisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1003BDC  +
mov eax dword_101F938 +
push esi  +
lea edx [ebp+var_8] +
push edx  +
mov [ebp+var_8] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jge loc_1003B2D  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_14] esi +
jmp loc_1003BCB  +
mov eax [ebp+var_8] +
or [ebp+var_C] 0FFFFFFFFh +
lea edx [ebp+var_10] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
push 1  +
mov [ebp+arg_4] edi +
mov [ebp+var_4] edi +
mov [ebp+var_10] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_1003B60  +
push 4D4h  +
call sub_1012B18  +
jmp loc_1003BCB  +
push 4D2h  +
call sub_1012B18  +
cmp esi edi +
jl loc_1003BCB  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
inc [ebp+var_C]  +
lea edx [ebp+var_4] +
push edx  +
push offset dword_10025F8  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1003BB1  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1003B96  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+arg_4] edi +
push [ebp+var_C]  +
push [ebp+var_4]  +
call sub_100390A  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1003BB1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_1003B6A  +
mov eax [ebp+var_8] +
pop esi  +
cmp eax edi +
jz loc_1003BD9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_101F900 +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
cmp eax edi +
jnz loc_1003C13  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1003CDA  +
mov ecx [ebp+arg_4] +
cmp [ecx] edi +
jz loc_1003C2D  +
push offset aCompactVdisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1003C09  +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
push edi  +
push 3F0000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jge loc_1003C57  +
push eax  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ebx 80070057h +
jmp loc_1003CBA  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1003C79  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
cmp esi edi +
jge loc_1003C90  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ebx 80070057h +
jmp loc_1003CB9  +
mov esi offset WideCharStr +
push esi  +
call sub_1012503  +
push [ebp+var_8]  +
call sub_1002A52  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003CB9  +
push esi  +
call sub_1012503  +
push 4DBh  +
call sub_1012B18  +
pop esi  +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1003CCA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_1003CD7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax ebx +
pop ebx  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push 50h  +
lea eax [ebp+var_54] +
push ebx  +
push eax  +
mov [ebp+var_64] ebx +
xor esi esi +
mov [ebp+var_5C] ebx +
mov [ebp+var_60] ebx +
mov [ebp+var_68] ebx +
mov [ebp+var_6C] ebx +
call memset  +
add esp 0Ch +
cmp dword_101F900 ebx +
jnz loc_1003D3A  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1003F0E  +
cmp [ebp+arg_8] ebx +
jbe loc_1003E4A  +
mov [ebp+var_58] 1 +
jmp loc_1003D4E  +
xor ebx ebx +
mov eax [edi+esi*4] +
cmp eax ebx +
jz loc_1003E34  +
mov ebx ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1003D7F  +
cmp [ebp+var_64] eax +
jnz loc_1003E4A  +
mov [ebp+var_64] 1 +
jmp loc_1003DF2  +
push offset aDepth  +
push dword ptr [edi+esi*4]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1003E4A  +
cmp [ebp+var_6C] eax +
jnz loc_1003E4A  +
mov eax [ebp+var_58] +
cmp eax [ebp+arg_8] +
jnb loc_1003E4A  +
inc esi  +
mov ecx [edi+esi*4] +
inc [ebp+var_58]  +
test ecx ecx +
jz loc_1003E4A  +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1003DBC  +
sub eax ebx +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov ebx eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_1003E4A  +
push dword ptr [edi+esi*4]  +
mov [ebp+var_6C] 1 +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_68] eax +
inc esi  +
inc [ebp+var_58]  +
cmp esi [ebp+arg_8] +
jb loc_1003D4C  +
mov esi [ebp+var_68] +
xor ebx ebx +
cmp esi ebx +
jz loc_1003E4A  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp+var_54] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jl loc_1003E86  +
cmp [ebp+var_44] 3 +
jl loc_1003E69  +
cmp [ebp+var_44] 5 +
jle loc_1003E56  +
cmp [ebp+var_44] 6 +
jnz loc_1003E69  +
mov eax 80042938h +
jmp loc_1003E5B  +
push offset aMergeVdisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1003D30  +
push offset aMergeVdisk  +
push 0C0002AF9h  +
jmp loc_1003E3E  +
mov eax 8004292Fh +
push eax  +
mov edi 80070057h +
call sub_1012BB1  +
push eax  +
jmp loc_1003EE5  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
lea edx [esi+1] +
push edx  +
push ebx  +
push 200000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_1003E89  +
push eax  +
jmp loc_1003EAF  +
mov eax [ebp+var_5C] +
mov ecx [eax] +
lea edx [ebp+var_60] +
push edx  +
push esi  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_1003EAA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
cmp esi ebx +
jge loc_1003EC1  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov edi 80070057h +
jmp loc_1003EEA  +
mov esi offset WideCharStr +
push esi  +
call sub_1012503  +
push [ebp+var_60]  +
call sub_1002A52  +
mov edi eax +
cmp edi ebx +
jnz loc_1003EEA  +
push esi  +
call sub_1012503  +
push 4DCh  +
call sub_1012B18  +
mov eax [ebp+var_60] +
cmp eax ebx +
jz loc_1003EFA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] ebx +
lea eax [ebp+var_54] +
push eax  +
call sub_1002909  +
mov eax [ebp+var_64] +
neg eax  +
sbb eax eax +
not eax  +
and eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
push 50h  +
lea eax [ebp+var_54] +
push ebx  +
push eax  +
mov [ebp+var_70] ebx +
xor esi esi +
mov [ebp+var_6C] ebx +
mov [ebp+var_68] ebx +
mov [ebp+var_55] bl +
mov [ebp+var_64] ebx +
mov [ebp+var_5C] ebx +
call memset  +
add esp 0Ch +
cmp dword_101F900 ebx +
jnz loc_1003F7D  +
push 4B6h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1004177  +
cmp [ebp+arg_8] ebx +
jbe loc_10040A0  +
mov [ebp+var_60] 1 +
jmp loc_1003F91  +
xor ebx ebx +
mov eax [edi+esi*4] +
cmp eax ebx +
jz loc_100408A  +
mov ebx ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1003FC5  +
cmp [ebp+var_70] eax +
jnz loc_10040A0  +
mov [ebp+var_70] 1 +
jmp loc_1004047  +
push offset aMaximum  +
push dword ptr [edi+esi*4]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10040A0  +
cmp [ebp+var_55] al +
jnz loc_10040A0  +
mov eax [ebp+var_60] +
cmp eax [ebp+arg_8] +
jnb loc_10040A0  +
inc esi  +
mov ecx [edi+esi*4] +
inc [ebp+var_60]  +
test ecx ecx +
jz loc_10040A0  +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1004002  +
sub eax ebx +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov ebx eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_10040A0  +
push dword ptr [edi+esi*4]  +
mov [ebp+var_55] 1 +
call ds:_wtol  +
pop ecx  +
push 0  +
cdq   +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_6C] eax +
mov [ebp+var_68] edx +
inc esi  +
inc [ebp+var_60]  +
cmp esi [ebp+arg_8] +
jb loc_1003F8F  +
mov eax [ebp+var_6C] +
or eax [ebp+var_68] +
jz loc_10040A0  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp+var_54] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
xor ebx ebx +
cmp eax ebx +
jl loc_10040DA  +
cmp [ebp+var_44] 3 +
jl loc_10040BF  +
cmp [ebp+var_44] 5 +
jle loc_10040AC  +
cmp [ebp+var_44] 6 +
jnz loc_10040BF  +
mov eax 80042938h +
jmp loc_10040B1  +
push offset aExpandVdisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1003F73  +
push offset aExpandVdisk  +
push 0C0002AF9h  +
jmp loc_1004094  +
mov eax 8004292Fh +
push eax  +
mov edi 80070057h +
call sub_1012BB1  +
push eax  +
jmp loc_100413E  +
mov eax dword_101F900 +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
push 1  +
push ebx  +
push 200000h  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_10040DD  +
push eax  +
jmp loc_1004108  +
mov eax [ebp+var_5C] +
mov ecx [eax] +
lea edx [ebp+var_64] +
push edx  +
push [ebp+var_68]  +
push [ebp+var_6C]  +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_1004103  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
cmp esi ebx +
jge loc_100411A  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov edi 80070057h +
jmp loc_1004143  +
mov esi offset WideCharStr +
push esi  +
call sub_1012503  +
push [ebp+var_64]  +
call sub_1002A52  +
mov edi eax +
cmp edi ebx +
jnz loc_1004143  +
push esi  +
call sub_1012503  +
push 4DDh  +
call sub_1012B18  +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_1004153  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
mov eax [ebp+var_64] +
cmp eax ebx +
jz loc_1004163  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_64] ebx +
lea eax [ebp+var_54] +
push eax  +
call sub_1002909  +
mov eax [ebp+var_70] +
neg eax  +
sbb eax eax +
not eax  +
and eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memcpy_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memmove_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
mov esi ecx +
call ??0exception@@QAE@ABQBD@Z  +
mov dword ptr [esi] offset off_10014D0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ??1exception@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10014D0 +
call ??1exception@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1004226  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ??0exception@@QAE@ABV0@@Z  +
mov dword ptr [esi] offset off_10014D0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1004285  +
mov eax [esi+10h] +
push edi  +
mov edi ds:CoTaskMemFree +
test eax eax +
jz loc_1004276  +
push eax  +
call edi  +
and dword ptr [esi+10h] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_1004284  +
push eax  +
call edi  +
and dword ptr [esi+24h] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10042AE  +
mov eax [esi+10h] +
test eax eax +
jz loc_10042AE  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi+10h] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_100431E  +
mov eax [esi+58h] +
push edi  +
mov edi ds:CoTaskMemFree +
cmp eax ebx +
jz loc_10042DC  +
push eax  +
call edi  +
mov [esi+58h] ebx +
mov eax [esi+5Ch] +
cmp eax ebx +
jz loc_10042E9  +
push eax  +
call edi  +
mov [esi+5Ch] ebx +
mov eax [esi+60h] +
cmp eax ebx +
jz loc_10042F6  +
push eax  +
call edi  +
mov [esi+60h] ebx +
mov eax [esi+64h] +
cmp eax ebx +
jz loc_1004303  +
push eax  +
call edi  +
mov [esi+64h] ebx +
mov eax [esi+68h] +
cmp eax ebx +
jz loc_1004310  +
push eax  +
call edi  +
mov [esi+68h] ebx +
mov eax [esi+6Ch] +
cmp eax ebx +
jz loc_100431D  +
push eax  +
call edi  +
mov [esi+6Ch] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1004348  +
mov eax [esi+30h] +
test eax eax +
jz loc_1004348  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi+30h] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_1004385  +
push edi  +
mov eax [esi] +
mov edi esi +
test eax eax +
jz loc_1004374  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
mov esi [esi+14h] +
push edi  +
call sub_101CD94  +
pop ecx  +
test esi esi +
jnz loc_1004363  +
and [ebx] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 4  +
mov edx offset unk_101F9D8 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_10043B8  +
mov eax 80004005h +
jmp loc_10043F9  +
mov eax dword_101F928 +
mov ecx [eax] +
lea esi [ebp+var_4] +
push esi  +
push 0Dh  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_10043F9  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10043F7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_4] 0 +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jz loc_1004423  +
xor eax eax +
jmp locret_100443E  +
push esi  +
push [ebp+var_4]  +
call sub_1011B5E  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100443B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push 70h  +
xor ebx ebx +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp+var_74] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1004485  +
test [ebp+var_38] 20h +
jz loc_1004485  +
mov bl 1 +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov ecx [ebp+var_4] +
pop esi  +
mov al bl +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+pv] edi +
mov [ebp+var_C] edi +
cmp eax edi +
jnz loc_10044CB  +
mov ebx 80042448h +
jmp loc_1004554  +
push esi  +
mov esi [ebp+arg_8] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1002428  +
mov [esi] edi +
mov [esi+4] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
cmp ebx edi +
jl loc_1004535  +
mov eax [ebp+var_8] +
cmp eax edi +
jnz loc_10044F6  +
mov ebx 80042448h +
jmp loc_1004535  +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1004535  +
mov eax [ebp+pv] +
cmp eax edi +
jnz loc_100451B  +
mov [esi] edi +
mov [esi+4] edi +
jmp loc_1004546  +
mov ecx [ebp+var_C] +
cmp ecx edi +
jle loc_1004535  +
add eax 18h +
mov edx [eax] +
add [esi] edx +
mov edx [eax+4] +
adc [esi+4] edx +
add eax 20h +
dec ecx  +
jnz loc_1004525  +
cmp [ebp+pv] edi +
jz loc_1004546  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] edi +
mov eax [ebp+var_8] +
pop esi  +
cmp eax edi +
jz loc_1004554  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
inc esi  +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-8] ebx +
mov [ebp-0Ch] ebx +
cmp [ebp+10h] esi +
ja loc_1004676  +
jnz loc_10045A7  +
mov eax [ebp+0Ch] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004676  +
mov [ebp-10h] esi +
push edi  +
push 4  +
mov eax offset unk_101F9D8 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
pop edi  +
jnz loc_10045D5  +
push 27Ah  +
call sub_1012B18  +
push 40002F42h  +
call sub_1012A8B  +
pop ecx  +
jmp loc_10045F2  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
mov ecx offset unk_101F97C +
call sub_101C08C  +
test eax eax +
jnz loc_10045FB  +
push 279h  +
call sub_1012B18  +
mov dword ptr [ebp-4] 80070057h +
jmp loc_100464B  +
lea eax [ebp-8] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1004630  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-0Ch] +
push edx  +
push offset dword_1002398  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1004630  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_1004641  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-4] esi +
jmp loc_100464B  +
push 27Ch  +
call sub_1012B18  +
mov eax [ebp-8] +
cmp eax ebx +
jz loc_100465B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-8] ebx +
mov eax [ebp-0Ch] +
cmp eax ebx +
jz loc_1004668  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-4] +
jmp loc_100468C  +
push offset aOfflineDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
inc esi  +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-8] ebx +
mov [ebp-0Ch] ebx +
cmp [ebp+10h] esi +
ja loc_10047AC  +
jnz loc_10046DD  +
mov eax [ebp+0Ch] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10047AC  +
mov [ebp-10h] esi +
push edi  +
push 4  +
mov eax offset unk_101F9D8 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
pop edi  +
jnz loc_100470B  +
push 286h  +
call sub_1012B18  +
push 40002F27h  +
call sub_1012A8B  +
pop ecx  +
jmp loc_1004728  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
mov ecx offset unk_101F97C +
call sub_101C08C  +
test eax eax +
jnz loc_1004731  +
push 220h  +
call sub_1012B18  +
mov dword ptr [ebp-4] 80070057h +
jmp loc_1004781  +
lea eax [ebp-8] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1004766  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-0Ch] +
push edx  +
push offset dword_1002398  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1004766  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1004777  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-4] esi +
jmp loc_1004781  +
push 0D9h  +
call sub_1012B18  +
mov eax [ebp-8] +
cmp eax ebx +
jz loc_1004791  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-8] ebx +
mov eax [ebp-0Ch] +
cmp eax ebx +
jz loc_100479E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-4] +
jmp loc_10047C2  +
push offset aOnlineDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
xor ebx ebx +
push edi  +
push 70h  +
lea eax [ebp-90h] +
push ebx  +
push eax  +
mov [ebp-94h] ebx +
mov [ebp-0A8h] ebx +
mov [ebp-0A4h] ebx +
mov [ebp-98h] ebx +
mov [ebp-9Ch] ebx +
mov [ebp-0A0h] ebx +
call memset  +
add esp 0Ch +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp-20h] +
stos   +
cmp [ebp+10h] ebx +
jz loc_1004855  +
xor edi edi +
inc edi  +
cmp [ebp+10h] edi +
ja loc_100486C  +
mov esi [esi] +
cmp esi ebx +
jz loc_100486C  +
push offset aNoerr  +
push esi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100486C  +
mov [ebp-0A8h] edi +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1004887  +
push 2Eh  +
jmp loc_10048AE  +
push offset aConvertBasic  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10049E9  +
lea eax [ebp-98h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1004965  +
push dword ptr [ebp-98h]  +
call sub_1004404  +
test eax eax +
jnz loc_10048C2  +
push 2Fh  +
call sub_1012B18  +
mov dword ptr [ebp-94h] 80070057h +
jmp loc_1004980  +
mov eax [ebp-98h] +
mov ecx [eax] +
lea edx [ebp-9Ch] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1004965  +
mov eax [ebp-98h] +
mov ecx [eax] +
lea edx [ebp-90h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1004965  +
lea eax [ebp-90h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-0A0h] +
push eax  +
push 4  +
call sub_1011D44  +
mov esi eax +
cmp esi ebx +
jl loc_1004965  +
mov eax [ebp-0A0h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1004965  +
mov eax [ebp-9Ch] +
mov ecx [eax] +
lea edx [ebp-0A4h] +
push edx  +
lea edx [ebp-0ACh] +
push edx  +
push ebx  +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-20h] +
movs   +
movs   +
push 1  +
movs   +
lea edx [ebp-90h] +
push edx  +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jge loc_1004979  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-94h] esi +
jmp loc_1004980  +
push 31h  +
call sub_1012B18  +
mov eax [ebp-98h] +
cmp eax ebx +
jz loc_1004996  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-98h] ebx +
mov eax [ebp-9Ch] +
cmp eax ebx +
jz loc_10049AC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-9Ch] ebx +
mov eax [ebp-0A0h] +
cmp eax ebx +
jz loc_10049C2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0A0h] ebx +
lea eax [ebp-90h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-20h] +
push eax  +
call sub_100428F  +
mov eax [ebp-0A8h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-94h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0BCh +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
xor esi esi +
push edi  +
push 70h  +
lea eax [ebp-0A0h] +
push esi  +
push eax  +
mov [ebp-0A4h] esi +
mov [ebp-0B4h] esi +
mov [ebp-0B8h] esi +
mov [ebp-0A8h] esi +
mov [ebp-0B0h] esi +
mov [ebp-0ACh] esi +
call memset  +
add esp 0Ch +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp-30h] +
stos   +
call sub_1009BE8  +
test eax eax +
jz loc_1004A79  +
push 115h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1004D07  +
cmp [ebp+10h] esi +
jbe loc_1004AAF  +
mov eax [ebx+esi*4] +
test eax eax +
jz loc_1004ACB  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004ACB  +
cmp [ebp-0B4h] eax +
jnz loc_1004ACB  +
inc esi  +
mov dword ptr [ebp-0B4h] 1 +
cmp esi [ebp+10h] +
jb loc_1004A7E  +
push 4  +
mov ebx offset dword_1001260 +
pop ecx  +
mov edi ebx +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1004ADE  +
push 2Eh  +
jmp loc_1004B5D  +
push offset aConvertDynamic  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1004A6F  +
***
lea eax [ebp-0A8h] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
push dword ptr [ebp-0A8h]  +
call sub_1004404  +
test eax eax +
jz loc_1004B19  +
push 154h  +
call sub_1012B18  +
and dword ptr [ebp-0A4h] 0 +
jmp loc_1004C9C  +
call sub_1009CCE  +
test eax eax +
jz loc_1004B38  +
push dword ptr [ebp-0A8h]  +
call sub_1004447  +
test al al +
jz loc_1004B38  +
push 1DBh  +
jmp loc_1004B5D  +
mov eax [ebp-0A8h] +
mov ecx [eax] +
lea edx [ebp-0A0h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
cmp dword ptr [ebp-80h] 0Ch +
jz loc_1004B71  +
push 32h  +
call sub_1012B18  +
mov dword ptr [ebp-0A4h] 80070057h +
jmp loc_1004C9C  +
lea eax [ebp-0A0h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-0A8h] +
mov ecx [eax] +
lea edx [ebp-0B0h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_1004BA2  +
cmp esi 80042417h +
jnz loc_1004C75  +
call sub_1011EB9  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
mov edi ebx +
push 4  +
mov ebx offset unk_101F994 +
pop ecx  +
xor eax eax +
mov esi ebx +
cmps   +
lea eax [ebp-0ACh] +
push eax  +
jz loc_1004BDD  +
call sub_1011AEA  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
mov esi ebx +
jmp loc_1004C07  +
push 1  +
call sub_1011D44  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
mov eax [ebp-0ACh] +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_1004C75  +
lea esi [ebp-30h] +
mov eax [ebp-0B0h] +
lea edi [ebp-14h] +
movs   +
movs   +
movs   +
xor ebx ebx +
movs   +
cmp eax ebx +
jz loc_1004C48  +
mov ecx [eax] +
lea edx [ebp-0B8h] +
push edx  +
lea edx [ebp-0BCh] +
push edx  +
push ebx  +
push 1  +
sub esp 10h +
mov edi esp +
lea esi [ebp-14h] +
movs   +
movs   +
push 1  +
lea edx [ebp-0A0h] +
movs   +
push edx  +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
jmp loc_1004C6F  +
mov ecx [ebp-5Ch] +
cmp ecx ebx +
jnz loc_1004C52  +
xor ecx ecx +
inc ecx  +
mov eax [ebp-0ACh] +
mov edx [eax] +
push ebx  +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-0A0h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [edx+20h]  +
mov esi eax +
cmp esi ebx +
jge loc_1004C89  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0A4h] esi +
jmp loc_1004C9C  +
cmp [ebp-0B8h] ebx +
jz loc_1004C95  +
push 34h  +
jmp loc_1004C97  +
push 33h  +
call sub_1012B18  +
mov eax [ebp-0A8h] +
xor esi esi +
cmp eax esi +
jz loc_1004CB4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0A8h] esi +
mov eax [ebp-0B0h] +
cmp eax esi +
jz loc_1004CCA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0B0h] esi +
mov eax [ebp-0ACh] +
cmp eax esi +
jz loc_1004CE0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0ACh] esi +
lea eax [ebp-0A0h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-30h] +
push eax  +
call sub_100428F  +
mov eax [ebp-0B4h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-0A4h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ecx ecx +
xor ebx ebx +
inc ebx  +
mov [ebp-8] ecx +
mov [ebp-0Ch] ecx +
mov [ebp-4] ecx +
cmp [ebp+10h] ecx +
jz loc_1004D5C  +
cmp [ebp+10h] ebx +
ja loc_1004D81  +
mov eax [ebp+0Ch] +
mov eax [eax] +
cmp eax ecx +
jz loc_1004D81  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004D81  +
mov [ebp-0Ch] ebx +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1004D99  +
push 2Eh  +
call sub_1012B18  +
mov dword ptr [ebp-8] 80070057h +
jmp loc_1004DFB  +
push offset aConvertMbr  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1004E16  +
lea eax [ebp-4] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_1004DE3  +
push dword ptr [ebp-4]  +
call sub_100DE43  +
mov esi eax +
test esi esi +
jl loc_1004DE3  +
mov eax [ebp-4] +
cmp esi ebx +
jnz loc_1004DC6  +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_1004DDD  +
test eax eax +
jz loc_1004DD4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-4] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jge loc_1004DF4  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-8] esi +
jmp loc_1004DFB  +
push 38h  +
call sub_1012B18  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
test eax eax +
jz loc_1004E0A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-0Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-8] +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor ebx ebx +
push 70h  +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_7C] ebx +
mov [ebp+var_80] ebx +
mov [ebp+var_78] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] ebx +
jz loc_1004E7D  +
xor edi edi +
inc edi  +
cmp [ebp+arg_8] edi +
ja loc_1004E94  +
mov esi [esi] +
cmp esi ebx +
jz loc_1004E94  +
push offset aNoerr  +
push esi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004E94  +
mov [ebp+var_80] edi +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1004EAF  +
push 2Eh  +
jmp loc_1004F0E  +
push offset aConvertGpt  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1004F73  +
lea eax [ebp+var_78] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1004F36  +
push [ebp+var_78]  +
call sub_100DE43  +
mov esi eax +
cmp esi ebx +
jl loc_1004F36  +
cmp esi 1 +
jz loc_1004EF0  +
mov eax [ebp+var_78] +
cmp eax ebx +
jz loc_1004EE1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_78] ebx +
lea eax [ebp+var_78] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1004F36  +
mov eax [ebp+var_78] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1004F36  +
cmp [ebp+var_30] 1 +
jz loc_1004F1C  +
push 158h  +
call sub_1012B18  +
mov [ebp+var_7C] 80070057h +
jmp loc_1004F4E  +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_78] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1004F47  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_7C] esi +
jmp loc_1004F4E  +
push 36h  +
call sub_1012B18  +
mov eax [ebp+var_78] +
cmp eax ebx +
jz loc_1004F5E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_78] ebx +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_80] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_7C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 30h  +
xor esi esi +
mov [ebp+var_4] edi +
mov [ebp+BytesReturned] edi +
mov [eax] edi +
pop ebx  +
add ebx 900h +
cmp esi edi +
jz loc_1004FB7  +
push esi  +
call ds:free  +
pop ecx  +
push ebx  +
call ds:malloc  +
mov esi eax +
pop ecx  +
cmp esi edi +
jz loc_1004FFB  +
push ebx  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
lea eax [ebp+BytesReturned] +
push eax  +
push ebx  +
push esi  +
push edi  +
push edi  +
push 70050h  +
push [ebp+hDevice]  +
call ds:DeviceIoControl  +
test eax eax +
jnz loc_1005004  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
cmp eax 7Ah +
jz loc_1004FA5  +
jmp loc_1005009  +
mov [ebp+var_4] 8 +
jmp loc_100500E  +
mov eax [ebp+arg_4] +
mov [eax] esi +
cmp [ebp+var_4] edi +
jz loc_100501A  +
cmp esi edi +
jz loc_100501A  +
push esi  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+lpInBuffer] +
mov eax [ecx+4] +
push esi  +
imul eax eax +
push edi  +
xor edx edx +
push edx  +
lea edi [ebp+BytesReturned] +
push edi  +
push edx  +
push edx  +
add eax 30h +
push eax  +
push ecx  +
push 7C054h  +
push [ebp+hDevice]  +
mov [ebp+BytesReturned] edx +
xor esi esi +
call ds:DeviceIoControl  +
test eax eax +
jnz loc_100506A  +
call ds:GetLastError  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
xor ebx ebx +
push ebx  +
push 3  +
push ebx  +
push 3  +
push 0C0000000h  +
push [ebp+hDevice]  +
mov [ebp+lpInBuffer] ebx +
mov [ebp+BytesReturned] ebx +
call ds:CreateFileW  +
mov [ebp+hDevice] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10050B3  +
call ds:GetLastError  +
mov esi eax +
jmp loc_100513C  +
push edi  +
lea ecx [ebp+lpInBuffer] +
push ecx  +
push eax  +
call sub_1004F89  +
mov edi [ebp+lpInBuffer] +
mov esi eax +
cmp esi ebx +
jnz loc_1005121  +
mov eax [ebp+arg_4] +
cmp [edi] eax +
jz loc_10050D3  +
push 57h  +
pop esi  +
jmp loc_1005121  +
cmp eax ebx +
jnz loc_10050E1  +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov [edi+8] eax +
jmp loc_10050F3  +
cmp eax 1 +
jnz loc_10050F3  +
mov esi [ebp+arg_8] +
add edi 8 +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+lpInBuffer] +
push edi  +
push [ebp+hDevice]  +
call sub_1005029  +
push ebx  +
mov esi eax +
lea eax [ebp+BytesReturned] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 70140h  +
push [ebp+hDevice]  +
call ds:DeviceIoControl  +
test eax eax +
jnz loc_1005121  +
call ds:GetLastError  +
mov esi eax +
cmp edi ebx +
jz loc_100512D  +
push edi  +
call ds:free  +
pop ecx  +
pop edi  +
cmp [ebp+hDevice] ebx +
jz loc_100513C  +
push [ebp+hDevice]  +
call ds:CloseHandle  +
cmp esi ebx +
jle loc_100514C  +
and esi 0FFFFh +
or esi 80070000h +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_1005165  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_1005163  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_1005183  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_1005181  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+2Dh] 0 +
jnz loc_10051B0  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_10051C4  +
mov [ecx+4] eax +
jmp loc_10051D3  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_10051D1  +
mov [ecx+8] eax +
jmp loc_10051D3  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor edx edx +
cmp [eax+2Dh] dl +
jz loc_10051FF  +
push edx  +
push edx  +
push edx  +
push edx  +
push edx  +
call sub_101D2C2  +
add esp 14h +
pop esi  +
retn   +
mov ecx [eax+8] +
cmp [ecx+2Dh] dl +
jnz loc_1005218  +
push ecx  +
call sub_1005177  +
jmp loc_1005220  +
mov ecx [esi] +
cmp ecx [eax+8] +
jnz loc_1005220  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+2Dh] dl +
jz loc_100520F  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+15h] 0 +
jnz loc_1005245  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_1005259  +
mov [ecx+4] eax +
jmp loc_1005268  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_1005266  +
mov [ecx+8] eax +
jmp loc_1005268  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ecx+18h] +
lea eax [ecx+4] +
cmp esi 10h +
jb loc_100528C  +
mov edx [eax] +
jmp loc_100528E  +
mov edx eax +
cmp [ebp+arg_0] edx +
jb loc_10052A8  +
cmp esi 10h +
jb loc_100529A  +
mov eax [eax] +
mov ecx [ecx+14h] +
add ecx eax +
cmp ecx [ebp+arg_0] +
jbe loc_10052A8  +
mov al 1 +
jmp loc_10052AA  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_10052C0  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+31h] 0 +
jz loc_10052BE  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor dl dl +
cmp [eax+15h] dl +
jz loc_10052E4  +
mov eax [eax+8] +
jmp loc_100530A  +
mov ecx [eax] +
cmp [ecx+15h] dl +
jnz loc_10052FB  +
push ecx  +
call sub_10153D1  +
jmp loc_100530A  +
mov ecx [esi] +
cmp ecx [eax] +
jnz loc_1005303  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+15h] dl +
jz loc_10052F3  +
mov ecx [esi] +
cmp [ecx+15h] dl +
jnz loc_100530C  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor edx edx +
cmp [eax+15h] dl +
jz loc_1005330  +
push edx  +
push edx  +
push edx  +
push edx  +
push edx  +
call sub_101D2C2  +
add esp 14h +
pop esi  +
retn   +
mov ecx [eax+8] +
cmp [ecx+15h] dl +
jnz loc_1005349  +
push ecx  +
call sub_10153EF  +
jmp loc_1005351  +
mov ecx [esi] +
cmp ecx [eax+8] +
jnz loc_1005351  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+15h] dl +
jz loc_1005340  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
push 8  +
mov [eax+8] ecx +
pop ecx  +
lea edi [eax+0Ch] +
movs   +
mov cl [ebp+arg_10] +
pop edi  +
mov [eax+2Ch] cl +
mov byte ptr [eax+2Dh] 0 +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov edx [ecx] +
mov [eax+0Ch] edx +
mov ecx [ecx+4] +
mov [eax+10h] ecx +
mov cl [ebp+arg_10] +
mov [eax+14h] cl +
mov byte ptr [eax+15h] 0 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov esi ecx +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
lea esi [ecx+10h] +
lea edi [eax+10h] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_100157C  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1005433  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 18h +
jnb loc_1005425  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1005473  +
push esi  +
mov esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1005499  +
xor ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 1 +
jnb loc_100548E  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_10054E2  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 30h +
jnb loc_10054D4  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100418D  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10041B0  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_1004232  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100558B  +
cmp ecx 7FFFFFFFh +
jbe loc_1005590  +
mov eax 80070057h +
test eax eax +
jl loc_10055CD  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10055BD  +
cmp eax esi +
ja loc_10055BD  +
jnz loc_10055C8  +
jmp loc_10055C2  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2004h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 2000h  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 114h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 0D7h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 4EDh  +
call sub_10124CD  +
mov ebx [ebp+arg_0] +
lea eax [ebp+Buffer] +
test ebx 8000h +
jnz loc_1005658  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 262h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test bl 40h +
jnz loc_100569F  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
mov edi 800h +
push edi  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 263h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx 100h +
jnz loc_1005700  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 271h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx 200h +
jnz loc_100575C  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 272h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx esi +
jnz loc_10057B4  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 273h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx edi +
jnz loc_100580C  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 299h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test bl 20h +
jnz loc_1005865  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax 38F0h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
or dword ptr [ebp-38D4h] 0FFFFFFFFh +
or dword ptr [ebp-38E8h] 0FFFFFFFFh +
or dword ptr [ebp-38D0h] 0FFFFFFFFh +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push 70h  +
lea eax [ebp-3874h] +
push ebx  +
push eax  +
mov [ebp-38CCh] ebx +
mov [ebp-38D8h] ebx +
mov [ebp-38E4h] ebx +
mov [ebp-38DCh] ebx +
mov [ebp-38F0h] ebx +
mov [ebp-38E0h] ebx +
call memset  +
push 38h  +
lea eax [ebp-38C8h] +
push ebx  +
push eax  +
call memset  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp-3890h] +
push 2000h  +
stos   +
lea eax [ebp-3804h] +
push ebx  +
push eax  +
call memset  +
add esp 24h +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1005965  +
push 56h  +
call sub_1012B18  +
push 40002F0Fh  +
call sub_1012A8B  +
pop ecx  +
mov eax 80070057h +
jmp loc_100604B  +
mov eax [ebp+0Ch] +
cmp [eax] ebx +
jz loc_100597E  +
push offset aDetailDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
jmp loc_100595A  +
***
lea eax [ebp-38D8h] +
push eax  +
call sub_1004390  +
cmp eax ebx +
jge loc_10059A0  +
mov [ebp-38CCh] eax +
push eax  +
call sub_1012BB1  +
push eax  +
jmp loc_1005FB8  +
mov eax [ebp-38D8h] +
mov ecx [eax] +
lea edx [ebp-38DCh] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_10059E8  +
mov eax [ebp-38DCh] +
mov ecx [eax] +
lea edx [ebp-3890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-38DCh] +
cmp eax ebx +
jz loc_10059E4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-38DCh] ebx +
cmp esi ebx +
jge loc_10059F9  +
cmp esi 80042417h +
jz loc_10059F9  +
mov [ebp-38CCh] esi +
push esi  +
jmp loc_1005995  +
***
mov eax [ebp-38D8h] +
mov ecx [eax] +
lea edx [ebp-38E4h] +
push edx  +
push offset dword_1002428  +
push eax  +
call dword ptr [ecx]  +
cmp eax ebx +
jl loc_100598E  +
mov eax [ebp-38E4h] +
mov ecx [eax] +
lea edx [ebp-3874h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_100598E  +
mov eax [ebp-3834h] +
mov ebx 400h +
push ebx  +
cmp eax 1 +
jnz loc_1005A52  +
lea eax [ebp-2004h] +
push eax  +
push 25h  +
jmp loc_1005B2B  +
cmp eax 2 +
jnz loc_1005A68  +
lea eax [ebp-2004h] +
push eax  +
push 11Ah  +
jmp loc_1005B2B  +
cmp eax 3 +
jnz loc_1005A7E  +
lea eax [ebp-2004h] +
push eax  +
push 11Bh  +
jmp loc_1005B2B  +
cmp eax 4 +
jnz loc_1005A91  +
lea eax [ebp-2004h] +
push eax  +
push 23h  +
jmp loc_1005B2B  +
cmp eax 5 +
jnz loc_1005AA7  +
lea eax [ebp-2004h] +
push eax  +
push 11Ch  +
jmp loc_1005B2B  +
cmp eax 6 +
jnz loc_1005ABA  +
lea eax [ebp-2004h] +
push eax  +
push 11Dh  +
jmp loc_1005B2B  +
cmp eax 7 +
jnz loc_1005ACA  +
lea eax [ebp-2004h] +
push eax  +
push 27h  +
jmp loc_1005B2B  +
cmp eax 8 +
jnz loc_1005ADD  +
lea eax [ebp-2004h] +
push eax  +
push 11Eh  +
jmp loc_1005B2B  +
cmp eax 9 +
jnz loc_1005AF0  +
lea eax [ebp-2004h] +
push eax  +
push 217h  +
jmp loc_1005B2B  +
cmp eax 0Ah +
jnz loc_1005B03  +
lea eax [ebp-2004h] +
push eax  +
push 219h  +
jmp loc_1005B2B  +
cmp eax 0Bh +
jnz loc_1005B16  +
lea eax [ebp-2004h] +
push eax  +
push 218h  +
jmp loc_1005B2B  +
cmp eax 0Fh +
lea eax [ebp-2004h] +
push eax  +
jnz loc_1005B29  +
push 4E6h  +
jmp loc_1005B2B  +
push 26h  +
call sub_10124CD  +
cmp dword ptr [ebp-3858h] 4 +
jnz loc_1005B48  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 60h  +
jmp loc_1005CE1  +
mov eax [ebp-3864h] +
cmp eax 2 +
jz loc_1005CD7  +
cmp eax 5 +
jz loc_1005CD7  +
cmp eax 3 +
jnz loc_1005B77  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 22Bh  +
jmp loc_1005CE1  +
cmp eax 6 +
jnz loc_1005B8B  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 62h  +
jmp loc_1005CE1  +
test byte ptr [ebp-3838h] 20h +
jz loc_1005BA6  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 27Fh  +
jmp loc_1005CE1  +
cmp eax 4 +
jnz loc_1005C52  +
mov eax [ebp-3860h] +
cmp eax 1 +
jnz loc_1005BC9  +
push ebx  +
lea eax [ebp-1004h] +
push eax  +
push 4E9h  +
jmp loc_1005C16  +
cmp eax 2 +
jnz loc_1005BDD  +
push ebx  +
lea eax [ebp-1004h] +
push eax  +
push 4EAh  +
jmp loc_1005C16  +
cmp eax 3 +
jnz loc_1005BF1  +
push ebx  +
lea eax [ebp-1004h] +
push eax  +
push 4EBh  +
jmp loc_1005C16  +
cmp eax 4 +
jnz loc_1005C05  +
push ebx  +
lea eax [ebp-1004h] +
push eax  +
push 4ECh  +
jmp loc_1005C16  +
test eax eax +
jnz loc_1005C1B  +
push ebx  +
lea eax [ebp-1004h] +
push eax  +
push 4E8h  +
call sub_10124CD  +
push ebx  +
lea eax [ebp-804h] +
push eax  +
push 63h  +
call sub_10124CD  +
lea eax [ebp-1004h] +
push eax  +
lea eax [ebp-804h] +
push eax  +
push offset aSS  +
lea eax [ebp-1804h] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 14h +
jmp loc_1005CE6  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
lea esi [ebp-3890h] +
xor edx edx +
cmps   +
jz loc_1005CC2  +
cmp dword ptr [ebp-387Ch] 4 +
jnz loc_1005CC2  +
mov al [ebp-3878h] +
push ebx  +
test al 1 +
jz loc_1005C85  +
lea eax [ebp-1804h] +
push eax  +
push 61h  +
jmp loc_1005CE1  +
test al 8 +
jz loc_1005C97  +
lea eax [ebp-1804h] +
push eax  +
push 1B7h  +
jmp loc_1005CE1  +
test al 4 +
jz loc_1005CA9  +
lea eax [ebp-1804h] +
push eax  +
push 27Eh  +
jmp loc_1005CE1  +
test al 10h +
lea eax [ebp-1804h] +
push eax  +
jz loc_1005CBB  +
push 267h  +
jmp loc_1005CE1  +
push 27Dh  +
jmp loc_1005CE1  +
cmp eax 1 +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
jnz loc_1005CD3  +
push 64h  +
jmp loc_1005CE1  +
push 65h  +
jmp loc_1005CE1  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 66h  +
call sub_10124CD  +
xor esi esi +
cmp dword ptr [ebp-3864h] 6 +
jz loc_1005D69  +
cmp [ebp-381Ch] esi +
jnz loc_1005D0D  +
mov [ebp-38D4h] esi +
mov [ebp-38E8h] esi +
mov [ebp-38D0h] esi +
jmp loc_1005D69  +
mov esi ds:wcsstr +
push offset aPath  +
push dword ptr [ebp-381Ch]  +
call esi  +
mov edi ds:_wtol +
add eax 8 +
push eax  +
call edi  +
push offset aTarget  +
push dword ptr [ebp-381Ch]  +
mov [ebp-38D4h] eax +
call esi  +
add eax 0Ch +
push eax  +
call edi  +
push offset aLun  +
push dword ptr [ebp-381Ch]  +
mov [ebp-38E8h] eax +
call esi  +
add eax 6 +
push eax  +
call edi  +
add esp 24h +
mov [ebp-38D0h] eax +
xor esi esi +
cmp dword ptr [ebp-3830h] 1 +
jnz loc_1005D7A  +
push dword ptr [ebp-382Ch]  +
jmp loc_1005D9B  +
cmp dword ptr [ebp-3830h] 2 +
jnz loc_1005D9A  +
push ebx  +
lea eax [ebp-3004h] +
push eax  +
lea eax [ebp-382Ch] +
push eax  +
call ds:StringFromGUID2  +
jmp loc_1005DB0  +
push esi  +
push offset a8_8lx  +
lea eax [ebp-3004h] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 10h +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push 4E3h  +
call sub_10124CD  +
mov ecx [ebp-3808h] +
cmp ecx esi +
jnz loc_1005DD1  +
mov ecx offset aUnavailable +
cmp dword ptr [ebp-3864h] 6 +
mov eax offset aUnknown +
jz loc_1005DE5  +
mov eax [ebp-3814h] +
push ecx  +
push dword ptr [ebp-38D0h]  +
lea ecx [ebp-1804h] +
push dword ptr [ebp-38E8h]  +
push dword ptr [ebp-38D4h]  +
push ecx  +
lea ecx [ebp-2004h] +
push ecx  +
lea ecx [ebp-3004h] +
push ecx  +
push eax  +
lea eax [ebp-2804h] +
push eax  +
lea eax [ebp-3804h] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 2Ch +
lea eax [ebp-3804h] +
push eax  +
call sub_1012604  +
push dword ptr [ebp-3838h]  +
call sub_10055D4  +
cmp dword ptr [ebp-3864h] 6 +
jz loc_1005E4D  +
cmp [ebp-3830h] esi +
jz loc_1005E8C  +
cmp dword ptr [ebp-3864h] 4 +
jz loc_1005E8C  +
mov eax [ebp-38D8h] +
lea edx [ebp-38ECh] +
push edx  +
lea edx [ebp-38E0h] +
push edx  +
mov [ebp-38ECh] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
cmp eax esi +
jge loc_1005EA1  +
cmp eax 80042444h +
jz loc_1005E8C  +
cmp eax 80042519h +
jnz loc_100598E  +
push 0D2h  +
call sub_1012B18  +
mov [ebp-38CCh] esi +
jmp loc_1005FBD  +
lea eax [ebp-38F0h] +
push eax  +
call sub_1018295  +
cmp eax esi +
jl loc_100598E  +
mov ebx [ebp-38F0h] +
mov [ebp-38D0h] esi +
cmp ebx esi +
jz loc_1005FB3  +
xor esi esi +
cmp [ebx+18h] esi +
jz loc_1005F6A  +
lea eax [ebp-38C8h] +
push eax  +
call sub_1004329  +
mov eax [ebx+18h] +
mov ecx [eax] +
lea edx [ebp-38C8h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
jl loc_100598E  +
cmp [ebp-38ECh] esi +
mov [ebp-38D4h] esi +
jle loc_1005FA0  +
mov eax [ebp-38E0h] +
test eax eax +
jz loc_100605C  +
push 4  +
pop ecx  +
lea edi [ebp-38C8h] +
lea esi [eax+28h] +
xor edx edx +
cmps   +
jz loc_1005F43  +
inc dword ptr [ebp-38D4h]  +
mov ecx [ebp-38D4h] +
add eax 50h +
cmp ecx [ebp-38ECh] +
jl loc_1005F10  +
jmp loc_1005FA0  +
cmp dword ptr [ebp-38D0h] 0 +
jnz loc_1005F60  +
push 0C9h  +
mov dword ptr [ebp-38D0h] 1 +
call sub_1012B18  +
push dword ptr [ebx+18h]  +
call sub_1016A09  +
jmp loc_1005FA0  +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_1005FA0  +
cmp [ebp-38D0h] eax +
jnz loc_1005F96  +
push 0C9h  +
mov dword ptr [ebp-38D0h] 1 +
call sub_1012B18  +
lea eax [ebx+10h] +
push eax  +
push ebx  +
call sub_10154B1  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_1005EC9  +
cmp [ebp-38D0h] ebx +
jnz loc_1005FBD  +
push 0D2h  +
call sub_1012B18  +
mov eax [ebp-38D8h] +
xor esi esi +
cmp eax esi +
jz loc_1005FD5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-38D8h] esi +
mov eax [ebp-38E4h] +
cmp eax esi +
jz loc_1005FEB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-38E4h] esi +
lea eax [ebp-38F0h] +
push eax  +
call sub_101309C  +
cmp [ebp-38E0h] esi +
jz loc_1006011  +
push dword ptr [ebp-38E0h]  +
call ds:CoTaskMemFree  +
mov [ebp-38E0h] esi +
lea eax [ebp-3874h] +
push eax  +
call sub_10042B8  +
lea eax [ebp-38C8h] +
push eax  +
call sub_1004329  +
lea eax [ebp-3890h] +
push eax  +
call sub_100428F  +
mov eax [ebp-38DCh] +
cmp eax esi +
jz loc_1006045  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-38CCh] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov eax 80042448h +
jmp loc_100598E  +
***
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor edi edi +
push 70h  +
lea eax [ebp-74h] +
push edi  +
push eax  +
mov [ebp-88h] edi +
mov byte ptr [ebp-77h] 0 +
mov byte ptr [ebp-76h] 0 +
mov byte ptr [ebp-75h] 0 +
mov [ebp-8Ch] edi +
mov [ebp-80h] edi +
mov [ebp-84h] edi +
call memset  +
add esp 0Ch +
cmp [ebp+10h] edi +
jbe loc_10061DF  +
mov dword ptr [ebp-7Ch] 1 +
lea esi [ebx+edi*4] +
mov eax [esi] +
test eax eax +
jz loc_1006228  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10060F9  +
cmp [ebp-77h] al +
jnz loc_1006243  +
mov byte ptr [ebp-77h] 1 +
jmp loc_10061D2  +
push offset aSet  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100614D  +
mov eax [ebp-7Ch] +
cmp eax [ebp+10h] +
jnb loc_1006243  +
inc edi  +
mov eax [ebx+edi*4] +
inc dword ptr [ebp-7Ch]  +
test eax eax +
jz loc_1006243  +
push offset aReadonly  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1006243  +
dec edi  +
dec dword ptr [ebp-7Ch]  +
mov byte ptr [ebp-76h] 1 +
mov [ebp-75h] al +
jmp loc_10061D2  +
push offset aClear  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100619D  +
mov esi [ebp-7Ch] +
cmp esi [ebp+10h] +
jnb loc_1006243  +
inc edi  +
mov eax [ebx+edi*4] +
inc esi  +
test eax eax +
jz loc_1006243  +
push offset aReadonly  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1006243  +
dec edi  +
dec esi  +
mov [ebp-7Ch] esi +
mov [ebp-76h] al +
mov byte ptr [ebp-75h] 1 +
jmp loc_10061D2  +
push offset aReadonly  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1006243  +
cmp [ebp-76h] al +
jnz loc_1006216  +
cmp [ebp-75h] al +
jz loc_1006243  +
cmp byte ptr [ebp-75h] 0 +
jz loc_1006243  +
test byte ptr [ebp-80h] 40h +
jnz loc_1006243  +
or dword ptr [ebp-80h] 40h +
inc edi  +
inc dword ptr [ebp-7Ch]  +
cmp edi [ebp+10h] +
jb loc_10060C8  +
mov ebx [ebp-8Ch] +
test [ebp-80h] ebx +
jnz loc_1006243  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_100625E  +
push 281h  +
call sub_1012B18  +
mov dword ptr [ebp-88h] 80070057h +
jmp loc_100630F  +
test byte ptr [ebp-8Ch] 40h +
jnz loc_10061C2  +
or dword ptr [ebp-8Ch] 40h +
jmp loc_10061D2  +
***
push offset aAttributesDisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100633F  +
push offset aAttributesDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100633F  +
lea eax [ebp-84h] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_1006292  +
cmp byte ptr [ebp-76h] 0 +
jnz loc_10062B0  +
cmp byte ptr [ebp-75h] 0 +
jnz loc_10062B0  +
mov eax [ebp-84h] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_10062A6  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-88h] esi +
jmp loc_100630F  +
push dword ptr [ebp-38h]  +
call sub_10055D4  +
jmp loc_100630F  +
test ebx ebx +
jz loc_10062E3  +
mov eax [ebp-84h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jge loc_10062D9  +
push 282h  +
call sub_1012B18  +
mov [ebp-88h] esi +
jmp loc_10062E3  +
push 283h  +
call sub_1012B18  +
cmp dword ptr [ebp-80h] 0 +
jz loc_100630F  +
mov eax [ebp-84h] +
push dword ptr [ebp-80h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jge loc_1006305  +
push 260h  +
jmp loc_1006299  +
***
push 261h  +
call sub_1012B18  +
mov eax [ebp-84h] +
test eax eax +
jz loc_1006326  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-84h] 0 +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
movzx eax byte ptr [ebp-77h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-88h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax 1894h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp-1814h] esi +
lea edi [ebp-1810h] +
stos   +
stos   +
push 70h  +
stos   +
lea eax [ebp-1884h] +
push esi  +
push eax  +
mov [ebp-1888h] esi +
mov byte ptr [ebp-1889h] 0 +
mov [ebp-1894h] esi +
mov [ebp-1890h] esi +
mov byte ptr [ebp-188Ah] 0 +
call memset  +
add esp 0Ch +
cmp [ebp+10h] esi +
jbe loc_1006422  +
mov edi ds:_wcsicmp +
mov eax [ebx+esi*4] +
test eax eax +
jz loc_100643F  +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10063EA  +
cmp [ebp-1889h] al +
jnz loc_100645F  +
mov byte ptr [ebp-1889h] 1 +
jmp loc_100641C  +
push offset aId  +
push dword ptr [ebx+esi*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100645F  +
inc esi  +
mov byte ptr [ebp-188Ah] 1 +
cmp esi [ebp+10h] +
jnb loc_100645F  +
cmp [ebp-1890h] eax +
jnz loc_100645F  +
mov eax [ebx+esi*4] +
test eax eax +
jz loc_100645F  +
mov [ebp-1890h] eax +
inc esi  +
cmp esi [ebp+10h] +
jb loc_10063C4  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1006475  +
push 275h  +
jmp loc_1006626  +
push offset aUniqueidDisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-1888h] 8000FFFFh +
jmp loc_1006635  +
push offset aUniqueidDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_100662B  +
lea eax [ebp-1894h] +
push eax  +
call sub_1004390  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jl loc_100660D  +
mov eax [ebp-1894h] +
mov ecx [eax] +
lea edx [ebp-1884h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100660D  +
cmp [ebp-188Ah] bl +
jnz loc_1006543  +
mov esi 400h +
push esi  +
lea eax [ebp-804h] +
push eax  +
push 276h  +
call sub_10124CD  +
cmp dword ptr [ebp-1840h] 1 +
jnz loc_10064DE  +
push dword ptr [ebp-183Ch]  +
jmp loc_10064FF  +
cmp dword ptr [ebp-1840h] 2 +
jnz loc_10064FE  +
push esi  +
lea eax [ebp-1004h] +
push eax  +
lea eax [ebp-183Ch] +
push eax  +
call ds:StringFromGUID2  +
jmp loc_1006514  +
push ebx  +
push offset a8_8lx  +
lea eax [ebp-1004h] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp-1004h] +
push eax  +
lea eax [ebp-804h] +
push eax  +
lea eax [ebp-1804h] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp-1804h] +
push eax  +
call sub_1012604  +
jmp loc_1006635  +
cmp dword ptr [ebp-1840h] 1 +
jnz loc_10065D3  +
mov edi [ebp-1890h] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100655B  +
sub eax edx +
sar eax 1 +
cmp eax 8 +
jb loc_10065CC  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1006573  +
sub eax edx +
sar eax 1 +
push offset a0123456789abcd  +
push edi  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10065CC  +
mov esi ds:_errno +
call esi  +
push 10h  +
push ebx  +
push edi  +
mov [eax] ebx +
call ds:wcstoul  +
add esp 0Ch +
mov [ebp-1890h] eax +
cmp eax ebx +
jz loc_10065CC  +
cmp eax 0FFFFFFFFh +
jnz loc_10065C2  +
call esi  +
cmp dword ptr [eax] 22h +
jz loc_10065CC  +
lea eax [ebp-1890h] +
push eax  +
push ebx  +
jmp loc_10065FC  +
push 277h  +
jmp loc_1006626  +
cmp dword ptr [ebp-1840h] 2 +
jnz loc_1006621  +
lea eax [ebp-1814h] +
push eax  +
push dword ptr [ebp-1890h]  +
call ds:UuidFromStringW  +
test eax eax +
jnz loc_10065CC  +
lea eax [ebp-1814h] +
push eax  +
push 1  +
push dword ptr [ebp-1828h]  +
call sub_1005077  +
mov esi eax +
cmp esi ebx +
jge loc_1006635  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1888h] esi +
jmp loc_1006635  +
push 278h  +
call sub_1012B18  +
mov dword ptr [ebp-1888h] 80070057h +
lea eax [ebp-1884h] +
push eax  +
call sub_10028A5  +
movzx eax byte ptr [ebp-1889h] +
mov ecx [ebp-4] +
neg eax  +
sbb eax eax +
pop edi  +
not eax  +
and eax [ebp-1888h] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+2Dh] 0 +
jnz loc_1006686  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_100669A  +
mov [ecx+4] eax +
jmp loc_10066A8  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_10066A5  +
mov [ecx] eax +
jmp loc_10066A8  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+18h] 10h +
mov eax [ebp+arg_0] +
mov [ecx+14h] eax +
jb loc_10066CC  +
mov ecx [ecx+4] +
jmp loc_10066CF  +
add ecx 4 +
mov byte ptr [ecx+eax] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor edx edx +
cmp [eax+31h] dl +
jz loc_10066F9  +
push edx  +
push edx  +
push edx  +
push edx  +
push edx  +
call sub_101D2C2  +
add esp 14h +
pop esi  +
retn   +
mov ecx [eax+8] +
cmp [ecx+31h] dl +
jnz loc_1006712  +
push ecx  +
call sub_10052B4  +
jmp loc_100671A  +
mov ecx [esi] +
cmp ecx [eax+8] +
jnz loc_100671A  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+31h] dl +
jz loc_1006709  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+15h] 0 +
jnz loc_100673F  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_1006753  +
mov [ecx+4] eax +
jmp loc_1006761  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_100675E  +
mov [ecx] eax +
jmp loc_1006761  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100678F  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_100535A  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10067B8  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1005394  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea esi [ebp+arg_4] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+arg_0] +
lea esi [ebp+arg_14] +
lea edi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
lea esi [ebp+var_14] +
mov edi eax +
movs   +
movs   +
mov ecx [ebp+var_4] +
movs   +
movs   +
lea edi [eax+10h] +
lea esi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100550C  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100552E  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_100688C  +
cmp dword ptr [esi+18h] 10h +
jb loc_100688C  +
cmp [ebp+arg_4] 0 +
lea eax [esi+4] +
push edi  +
mov edi [eax] +
jbe loc_1006884  +
push [ebp+arg_4]  +
push edi  +
push 10h  +
push eax  +
call sub_1006814  +
push edi  +
call sub_101CD94  +
pop ecx  +
pop edi  +
push [ebp+arg_4]  +
mov ecx esi +
mov dword ptr [esi+18h] 0Fh +
call sub_10066B6  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp [esi+14h] edi +
jnb loc_10068DB  +
call loc_101CE51  +
mov eax [esi+14h] +
sub eax edi +
cmp eax [ebp+arg_4] +
jnb loc_10068E8  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jbe loc_100692B  +
mov ecx [esi+18h] +
push ebx  +
lea edx [esi+4] +
cmp ecx 10h +
jb loc_10068FE  +
mov ebx [edx] +
jmp loc_1006900  +
mov ebx edx +
cmp ecx 10h +
jb loc_1006907  +
mov edx [edx] +
sub eax [ebp+arg_4] +
add ebx edi +
add ebx [ebp+arg_4] +
push eax  +
push ebx  +
sub ecx edi +
push ecx  +
add edx edi +
push edx  +
call sub_1006836  +
mov eax [esi+14h] +
sub eax [ebp+arg_4] +
mov ecx esi +
push eax  +
call sub_10066B6  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 1  +
call loc_1005414  +
mov esi eax +
test esi esi +
jz loc_1006952  +
mov eax [ebp+arg_0] +
mov [esi] eax +
lea eax [esi+4] +
test eax eax +
jz loc_100695E  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+arg_8]  +
lea eax [esi+8] +
push eax  +
call sub_100545D  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov edi ecx +
mov [ebp-18h] edi +
mov esi [ebp+8] +
or esi 0Fh +
cmp esi 0FFFFFFFEh +
jbe loc_1006997  +
mov esi [ebp+8] +
jmp loc_10069BC  +
xor edx edx +
push 3  +
mov eax esi +
pop ebx  +
div  ebx +
mov ecx [edi+18h] +
mov [ebp-14h] ecx +
shr dword ptr [ebp-14h] 1 +
mov edx [ebp-14h] +
cmp eax edx +
jnb loc_10069BC  +
push 0FFFFFFFEh  +
pop eax  +
sub eax edx +
cmp ecx eax +
ja loc_10069BC  +
lea esi [edx+ecx] +
and dword ptr [ebp-4] 0 +
push 0  +
lea eax [esi+1] +
push eax  +
call loc_100547D  +
mov ebx eax +
jmp loc_10069F7  +
mov eax [ebp+8] +
mov [ebp-10h] esp +
mov [ebp+8] eax +
push 0  +
inc eax  +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_100547D  +
mov [ebp-14h] eax +
mov eax offset loc_10069EE +
retn   +
mov edi [ebp-18h] +
mov esi [ebp+8] +
mov ebx [ebp-14h] +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_1006A19  +
cmp dword ptr [edi+18h] 10h +
jb loc_1006A08  +
mov eax [edi+4] +
jmp loc_1006A0B  +
lea eax [edi+4] +
push dword ptr [ebp+0Ch]  +
push eax  +
lea eax [esi+1] +
push eax  +
push ebx  +
call sub_1006814  +
push 0  +
push 1  +
mov ecx edi +
call sub_1006858  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
mov [edi+4] ebx +
mov [edi+18h] esi +
call sub_10066B6  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 1  +
mov edi ecx +
call loc_10054C3  +
push [ebp+arg_10]  +
mov esi eax +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_100676F  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebx  +
xor ebx ebx +
push ebx  +
push 1  +
call loc_1005414  +
cmp eax ebx +
jz loc_1006AA1  +
mov [eax] ebx +
lea ecx [eax+4] +
cmp ecx ebx +
jz loc_1006AAA  +
mov [ecx] ebx +
lea ecx [eax+8] +
cmp ecx ebx +
jz loc_1006AB3  +
mov [ecx] ebx +
mov [eax+15h] bl +
mov byte ptr [eax+14h] 1 +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0FFFFFFFEh +
jbe loc_1006AE6  +
call loc_101CE14  +
cmp [esi+18h] edi +
jnb loc_1006AF8  +
push dword ptr [esi+14h]  +
mov ecx esi +
push edi  +
call sub_1006976  +
jmp loc_1006B24  +
cmp [ebp+arg_4] 0 +
jz loc_1006B18  +
cmp edi 10h +
jnb loc_1006B18  +
mov eax [esi+14h] +
cmp edi eax +
jnb loc_1006B0C  +
mov eax edi +
push eax  +
push 1  +
mov ecx esi +
call sub_1006858  +
jmp loc_1006B24  +
test edi edi +
jnz loc_1006B24  +
push edi  +
mov ecx esi +
call sub_10066B6  +
xor eax eax +
cmp eax edi +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1006A8E  +
lea ecx [esi+4] +
mov [ecx] eax +
mov byte ptr [eax+15h] 1 +
mov eax [ecx] +
mov [eax+4] eax +
mov eax [ecx] +
mov [eax] eax +
mov ecx [ecx] +
mov [ecx+8] ecx +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0  +
push 1  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1001698 +
call sub_1006858  +
mov ecx esi +
pop esi  +
jmp ??1exception@@UAE@XZ  +
***
cmp dword ptr [ecx+24h] 10h +
jb loc_1006B91  +
mov eax [ecx+10h] +
retn   +
***
lea eax [ecx+10h] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1006B63  +
test byte ptr [ebp+8] 1 +
jz loc_1006BB4  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
cmp [edi+14h] eax +
jnb loc_1006BDA  +
call loc_101CE51  +
mov esi [edi+14h] +
mov eax [ebp+arg_4] +
sub esi eax +
cmp [ebp+arg_8] esi +
jnb loc_1006BEA  +
mov esi [ebp+arg_8] +
mov ecx ebx +
cmp ebx edi +
jnz loc_1006C08  +
push 0FFFFFFFFh  +
add esi eax +
push esi  +
call sub_10068C5  +
push [ebp+arg_4]  +
mov ecx ebx +
push 0  +
call sub_10068C5  +
jmp loc_1006C48  +
push 0  +
push esi  +
call sub_1006AD0  +
test al al +
jz loc_1006C48  +
cmp dword ptr [edi+18h] 10h +
jb loc_1006C1F  +
mov edi [edi+4] +
jmp loc_1006C22  +
add edi 4 +
mov ecx [ebx+18h] +
cmp ecx 10h +
jb loc_1006C2F  +
mov eax [ebx+4] +
jmp loc_1006C32  +
lea eax [ebx+4] +
mov edx [ebp+arg_4] +
push esi  +
add edi edx +
push edi  +
push ecx  +
push eax  +
call sub_1006814  +
push esi  +
mov ecx ebx +
call sub_10066B6  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_1005277  +
test al al +
jz loc_1006C8A  +
cmp dword ptr [esi+18h] 10h +
jb loc_1006C77  +
mov eax [esi+4] +
jmp loc_1006C7A  +
lea eax [esi+4] +
push [ebp+arg_4]  +
sub edi eax +
push edi  +
push esi  +
mov ecx esi +
call sub_1006BC0  +
jmp loc_1006CC1  +
push 0  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1006AD0  +
test al al +
jz loc_1006CBF  +
mov ecx [esi+18h] +
cmp ecx 10h +
jb loc_1006CA7  +
mov eax [esi+4] +
jmp loc_1006CAA  +
lea eax [esi+4] +
push [ebp+arg_4]  +
push edi  +
push ecx  +
push eax  +
call sub_1006814  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_10066B6  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_10066B6  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1006BC0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
push ebx  +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_1006D08  +
sub eax edx +
push eax  +
push [ebp+arg_0]  +
call sub_1006C56  +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0exception@@QAE@XZ  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1001698 +
call sub_1006CCC  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov edi [ebp+8] +
push edi  +
call ??0exception@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
add edi 0Ch +
push edi  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1001698 +
call sub_1006CCC  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1006D24  +
mov dword ptr [esi] offset off_10016A4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp sub_1006B63  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10016A4 +
call sub_1006B63  +
test byte ptr [ebp+8] 1 +
jz loc_1006DEF  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1006D5E  +
mov dword ptr [esi] offset off_10016A4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp sub_1006B63  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10016B0 +
call sub_1006B63  +
test byte ptr [ebp+8] 1 +
jz loc_1006E4D  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1006D5E  +
mov dword ptr [esi] offset off_10016B0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_10066B6  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1006CFC  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+8] 7FFFFFEh +
jb loc_1006EE9  +
push offset aMapSetTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov eax [edi+4] +
mov esi [ebp+10h] +
push 0  +
push dword ptr [ebp+14h]  +
push eax  +
push esi  +
push eax  +
call sub_1006A56  +
inc dword ptr [edi+8]  +
mov ebx eax +
mov eax [edi+4] +
cmp esi eax +
jnz loc_1006F15  +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [eax] ebx +
mov eax [edi+4] +
jmp loc_1006F33  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_1006F28  +
mov [esi] ebx +
mov eax [edi+4] +
cmp esi [eax] +
jnz loc_1006F36  +
mov [eax] ebx +
jmp loc_1006F36  +
mov [esi+8] ebx +
mov eax [edi+4] +
cmp esi [eax+8] +
jnz loc_1006F36  +
mov [eax+8] ebx +
mov esi ebx +
lea eax [ebx+4] +
jmp loc_1006FD0  +
mov ecx [eax] +
mov edx [ecx+4] +
cmp ecx [edx] +
jnz loc_1006F81  +
mov edx [edx+8] +
cmp byte ptr [edx+2Ch] 0 +
jz loc_1006F89  +
cmp esi [ecx+8] +
jnz loc_1006F61  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_100666A  +
mov eax [esi+4] +
mov byte ptr [eax+2Ch] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+2Ch] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_1005194  +
jmp loc_1006FCD  +
mov edx [edx] +
cmp byte ptr [edx+2Ch] 0 +
jnz loc_1006FA1  +
mov byte ptr [ecx+2Ch] 1 +
mov byte ptr [edx+2Ch] 1 +
mov ecx [eax] +
mov ecx [ecx+4] +
mov byte ptr [ecx+2Ch] 0 +
mov eax [eax] +
mov esi [eax+4] +
jmp loc_1006FCD  +
cmp esi [ecx] +
jnz loc_1006FAF  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_1005194  +
mov eax [esi+4] +
mov byte ptr [eax+2Ch] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+2Ch] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_100666A  +
lea eax [esi+4] +
mov ecx [eax] +
cmp byte ptr [ecx+2Ch] 0 +
jz loc_1006F40  +
mov eax [edi+4] +
mov eax [eax+4] +
mov byte ptr [eax+2Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+8] 1FFFFFFEh +
jb loc_100703A  +
push offset aMapSetTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov eax [edi+4] +
mov esi [ebp+10h] +
push 0  +
push dword ptr [ebp+14h]  +
push eax  +
push esi  +
push eax  +
call sub_101687D  +
inc dword ptr [edi+8]  +
mov ebx eax +
mov eax [edi+4] +
cmp esi eax +
jnz loc_1007066  +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [eax] ebx +
mov eax [edi+4] +
jmp loc_1007084  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_1007079  +
mov [esi] ebx +
mov eax [edi+4] +
cmp esi [eax] +
jnz loc_1007087  +
mov [eax] ebx +
jmp loc_1007087  +
mov [esi+8] ebx +
mov eax [edi+4] +
cmp esi [eax+8] +
jnz loc_1007087  +
mov [eax+8] ebx +
mov esi ebx +
lea eax [ebx+4] +
jmp loc_1007121  +
mov ecx [eax] +
mov edx [ecx+4] +
cmp ecx [edx] +
jnz loc_10070D2  +
mov edx [edx+8] +
cmp byte ptr [edx+14h] 0 +
jz loc_10070DA  +
cmp esi [ecx+8] +
jnz loc_10070B2  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_1006723  +
mov eax [esi+4] +
mov byte ptr [eax+14h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+14h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_1005229  +
jmp loc_100711E  +
mov edx [edx] +
cmp byte ptr [edx+14h] 0 +
jnz loc_10070F2  +
mov byte ptr [ecx+14h] 1 +
mov byte ptr [edx+14h] 1 +
mov ecx [eax] +
mov ecx [ecx+4] +
mov byte ptr [ecx+14h] 0 +
mov eax [eax] +
mov esi [eax+4] +
jmp loc_100711E  +
cmp esi [ecx] +
jnz loc_1007100  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_1005229  +
mov eax [esi+4] +
mov byte ptr [eax+14h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+14h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_1006723  +
lea eax [esi+4] +
mov ecx [eax] +
cmp byte ptr [ecx+14h] 0 +
jz loc_1007091  +
mov eax [edi+4] +
mov eax [eax+4] +
mov byte ptr [eax+14h] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov esi 0FFFFFFFh +
sub esi eax +
cmp esi edx +
jnb loc_1007191  +
push offset aListTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
add eax edx +
mov [ecx+8] eax +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_1006D5E  +
push offset dword_101DF90  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_1006DFB  +
push offset dword_101DEFC  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_1006E59  +
push offset dword_101DF54  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov edi [ebp+0Ch] +
cmp byte ptr [edi+2Dh] 0 +
jz loc_100725C  +
push offset aInvalidMapSetT  +
lea ecx [ebp-2Ch] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-54h] +
call sub_1006D24  +
push offset dword_101DF54  +
lea eax [ebp-54h] +
push eax  +
mov dword ptr [ebp-54h] offset off_10016B0 +
call _CxxThrowException  +
lea ecx [ebp+0Ch] +
call sub_10051E2  +
mov edx [edi] +
cmp byte ptr [edx+2Dh] 0 +
jz loc_1007271  +
mov ebx [edi+8] +
jmp loc_100728A  +
mov eax [edi+8] +
cmp byte ptr [eax+2Dh] 0 +
jz loc_100727E  +
mov ebx edx +
jmp loc_100728A  +
mov eax [ebp+0Ch] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp eax edi +
jnz loc_10072F3  +
cmp byte ptr [ebx+2Dh] 0 +
mov esi [edi+4] +
jnz loc_1007296  +
mov [ebx+4] esi +
mov ecx [ebp-10h] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_10072A6  +
mov [eax+4] ebx +
jmp loc_10072B1  +
cmp [esi] edi +
jnz loc_10072AE  +
mov [esi] ebx +
jmp loc_10072B1  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_10072D0  +
cmp byte ptr [ebx+2Dh] 0 +
jz loc_10072C2  +
mov eax esi +
jmp loc_10072CB  +
push ebx  +
call sub_1005177  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_100734F  +
cmp byte ptr [ebx+2Dh] 0 +
jz loc_10072E2  +
mov eax esi +
jmp loc_10072EB  +
push ebx  +
call sub_1005159  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx+8] eax +
jmp loc_100734F  +
mov [edx+4] eax +
mov edx [edi] +
mov [eax] edx +
cmp eax [edi+8] +
jnz loc_1007303  +
mov esi eax +
jmp loc_100731C  +
cmp byte ptr [ebx+2Dh] 0 +
mov esi [eax+4] +
jnz loc_100730F  +
mov [ebx+4] esi +
mov [esi] ebx +
mov edx [edi+8] +
mov [ecx] edx +
mov ecx [edi+8] +
mov [ecx+4] eax +
mov ecx [ebp-10h] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_100732C  +
mov [ecx+4] eax +
jmp loc_100733A  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_1007337  +
mov [ecx] eax +
jmp loc_100733A  +
mov [ecx+8] eax +
mov ecx [edi+4] +
mov [eax+4] ecx +
mov cl [eax+2Ch] +
mov dl [edi+2Ch] +
mov [eax+2Ch] dl +
mov [edi+2Ch] cl +
mov ecx [ebp-10h] +
cmp byte ptr [edi+2Ch] 1 +
jnz loc_1007459  +
jmp loc_1007413  +
cmp byte ptr [ebx+2Ch] 1 +
jnz loc_1007455  +
mov eax [esi] +
cmp ebx eax +
jnz loc_10073DA  +
mov eax [esi+8] +
cmp byte ptr [eax+2Ch] 0 +
jnz loc_100738B  +
mov byte ptr [eax+2Ch] 1 +
push esi  +
mov byte ptr [esi+2Ch] 0 +
call sub_100666A  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_100740E  +
mov edx [eax] +
cmp byte ptr [edx+2Ch] 1 +
jnz loc_10073A2  +
mov edx [eax+8] +
cmp byte ptr [edx+2Ch] 1 +
jz loc_100740A  +
mov edx [eax+8] +
cmp byte ptr [edx+2Ch] 1 +
jnz loc_10073C1  +
mov edx [eax] +
mov byte ptr [edx+2Ch] 1 +
push eax  +
mov byte ptr [eax+2Ch] 0 +
call sub_1005194  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
mov dl [esi+2Ch] +
mov [eax+2Ch] dl +
mov byte ptr [esi+2Ch] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+2Ch] 1 +
call sub_100666A  +
jmp loc_1007455  +
cmp byte ptr [eax+2Ch] 0 +
jnz loc_10073F3  +
mov byte ptr [eax+2Ch] 1 +
push esi  +
mov byte ptr [esi+2Ch] 0 +
call sub_1005194  +
mov eax [esi] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_100740E  +
mov edx [eax+8] +
cmp byte ptr [edx+2Ch] 1 +
jnz loc_1007421  +
mov edx [eax] +
cmp byte ptr [edx+2Ch] 1 +
jnz loc_1007421  +
mov byte ptr [eax+2Ch] 0 +
mov ebx esi +
mov esi [esi+4] +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jnz loc_100735E  +
jmp loc_1007455  +
mov edx [eax] +
cmp byte ptr [edx+2Ch] 1 +
jnz loc_100743F  +
mov edx [eax+8] +
mov byte ptr [edx+2Ch] 1 +
push eax  +
mov byte ptr [eax+2Ch] 0 +
call sub_100666A  +
mov eax [esi] +
mov ecx [ebp-10h] +
mov dl [esi+2Ch] +
mov [eax+2Ch] dl +
mov byte ptr [esi+2Ch] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+2Ch] 1 +
call sub_1005194  +
mov byte ptr [ebx+2Ch] 1 +
push edi  +
call sub_101CD94  +
pop ecx  +
mov ecx [ebp-10h] +
mov eax [ecx+8] +
test eax eax +
jbe loc_100746E  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
mov esi [eax+4] +
mov ebx eax +
mov byte ptr [ebp+var_4] 1 +
jmp loc_10074B8  +
lea eax [esi+0Ch] +
push eax  +
push [ebp+arg_4]  +
mov ebx esi +
call sub_1009BBD  +
mov byte ptr [ebp+var_4] al +
test al al +
jz loc_10074B5  +
mov esi [esi] +
jmp loc_10074B8  +
mov esi [esi+8] +
cmp byte ptr [esi+2Dh] 0 +
jz loc_100749C  +
push [ebp+arg_4]  +
lea eax [ebp+arg_4] +
push ebx  +
push [ebp+var_4]  +
mov ecx edi +
push eax  +
call sub_1006EA7  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
lea edi [eax+4] +
push dword ptr [edi]  +
mov ebx ecx +
push eax  +
call sub_1006938  +
push 1  +
mov ecx ebx +
mov esi eax +
call sub_1007149  +
mov [edi] esi +
mov eax [esi+4] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
mov eax [ecx+4] +
cmp byte ptr [eax+15h] 0 +
push edi  +
mov edi ecx +
mov byte ptr [ebp+var_4] 1 +
jnz loc_100755E  +
mov ecx [ebx] +
cmp ecx [eax+0Ch] +
mov edi eax +
setl byte ptr [ebp+var_4]  +
cmp byte ptr [ebp+var_4] 0 +
jz loc_1007555  +
mov eax [eax] +
jmp loc_1007558  +
mov eax [eax+8] +
cmp byte ptr [eax+15h] 0 +
jz loc_1007542  +
cmp byte ptr [ebp+var_4] 0 +
mov ecx edi +
mov [ebp+arg_4] ecx +
jz loc_1007595  +
mov eax [esi+4] +
cmp edi [eax] +
jnz loc_100758A  +
push ebx  +
push edi  +
push 1  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_1006FF8  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov byte ptr [eax+4] 1 +
jmp loc_10075AA  +
lea ecx [ebp+arg_4] +
call sub_10052D1  +
mov ecx [ebp+arg_4] +
mov eax [ecx+0Ch] +
cmp eax [ebx] +
jge loc_10075A3  +
push ebx  +
push edi  +
push [ebp+var_4]  +
jmp loc_1007574  +
mov eax [ebp+arg_0] +
mov byte ptr [eax+4] 0 +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
xor esi esi +
stos   +
stos   +
push 38h  +
stos   +
lea eax [ebp+var_4C] +
push esi  +
push eax  +
mov [ebp+var_50] esi +
mov [ebp+var_70] esi +
mov [ebp+var_54] esi +
mov [ebp+var_60] esi +
mov [ebp+var_68] esi +
mov [ebp+pv] esi +
mov [ebp+var_64] esi +
mov [ebp+var_58] esi +
mov [ebp+var_74] esi +
mov [ebp+var_6C] esi +
call memset  +
add esp 0Ch +
xor edi edi +
cmp [ebp+arg_8] esi +
jbe loc_1007665  +
mov eax [ebx+edi*4] +
cmp eax esi +
jz loc_100767E  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1007633  +
inc eax  +
cmp [ebp+var_70] eax +
jz loc_1007699  +
mov [ebp+var_70] eax +
jmp loc_1007659  +
push offset aOverride  +
push dword ptr [ebx+edi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1007652  +
inc eax  +
cmp [ebp+var_54] eax +
jz loc_1007699  +
mov [ebp+var_54] eax +
jmp loc_1007659  +
mov [ebp+var_58] 1 +
cmp [ebp+var_58] 1 +
jz loc_1007699  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_100760F  +
push 4  +
mov ebx offset unk_101F9D8 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_10076B4  +
push 48h  +
jmp loc_10076C9  +
push offset aDeleteDisk  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10078F5  +
push offset aDeleteDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10078F5  +
lea eax [ebp+var_74] +
push eax  +
push ebx  +
mov ecx offset unk_101F97C +
call sub_101C08C  +
test eax eax +
jz loc_10076DA  +
push 47h  +
call sub_1012B18  +
mov [ebp+var_50] 80070057h +
jmp loc_10078B0  +
lea eax [ebp+var_60] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_1007823  +
mov eax [ebp+var_60] +
mov esi ebx +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
lea edx [ebp+var_64] +
push edx  +
lea edx [ebp+pv] +
push edx  +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_1007823  +
cmp [ebp+var_54] 0 +
jnz loc_1007756  +
xor edx edx +
cmp [ebp+var_64] edx +
jbe loc_10077F6  +
mov eax [ebp+pv] +
add eax 10h +
mov ecx [eax] +
cmp ecx 1 +
jz loc_100773E  +
cmp ecx 6 +
jz loc_100773E  +
cmp ecx 5 +
jz loc_100773E  +
cmp ecx 7 +
jnz loc_100774C  +
inc edx  +
add eax 50h +
cmp edx [ebp+var_64] +
jb loc_1007728  +
jmp loc_10077F6  +
push 1EAh  +
jmp loc_100782A  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1018295  +
test eax eax +
jge loc_1007772  +
push eax  +
mov [ebp+var_50] eax +
call sub_1012BB1  +
push eax  +
jmp loc_10078AB  +
mov ebx [ebp+var_6C] +
jmp loc_10077ED  +
xor esi esi +
cmp [ebx+18h] esi +
jz loc_10077EA  +
lea eax [ebp+var_4C] +
push eax  +
call sub_1004329  +
push 38h  +
lea eax [ebp+var_4C] +
push esi  +
push eax  +
call memset  +
mov eax [ebx+18h] +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_4C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
jl loc_1007763  +
mov [ebp+var_58] esi +
cmp [ebp+var_64] esi +
jbe loc_10077EA  +
mov [ebp+var_54] esi +
mov eax [ebp+pv] +
test eax eax +
jz loc_1007834  +
mov edx [ebp+var_54] +
push 4  +
lea esi [edx+eax+28h] +
pop ecx  +
lea edi [ebp+var_4C] +
xor eax eax +
cmps   +
jnz loc_10077DB  +
mov eax [ebx+18h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_1007763  +
inc [ebp+var_58]  +
mov eax [ebp+var_58] +
add [ebp+var_54] 50h +
cmp eax [ebp+var_64] +
jb loc_10077B2  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_1007777  +
mov ebx offset unk_101F9D8 +
mov eax [ebp+var_60] +
mov ecx [eax] +
lea edx [ebp+var_68] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_1007823  +
mov eax [ebp+var_68] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
mov esi ebx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jge loc_100783E  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_50] esi +
jmp loc_10078B0  +
mov eax 80042448h +
jmp loc_1007763  +
lea eax [ebp+var_14] +
push eax  +
mov ecx offset unk_101F97C +
call sub_101C949  +
mov eax dword_101F9B8 +
mov edx [eax] +
mov [ebp+var_58] edx +
mov [ebp+var_54] eax +
cmp edx eax +
jz loc_1007890  +
push 4  +
pop ecx  +
lea edi [ebp+var_14] +
lea esi [edx+1Ch] +
xor eax eax +
cmps   +
jz loc_100787C  +
lea ecx [ebp+var_58] +
call sub_10051E2  +
mov edx [ebp+var_58] +
cmp edx [ebp+var_54] +
jnz loc_100785D  +
cmp edx [ebp+var_54] +
jz loc_1007890  +
push edx  +
lea eax [ebp+var_58] +
push eax  +
mov ecx offset unk_101F9B4 +
call sub_1007212  +
and dword_101F940 0 +
and dword_101F944 0 +
mov esi offset dword_1001260 +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
push 49h  +
call sub_1012B18  +
lea eax [ebp+var_6C] +
push eax  +
call sub_101309C  +
mov eax [ebp+var_60] +
xor esi esi +
cmp eax esi +
jz loc_10078CB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] esi +
mov eax [ebp+var_68] +
cmp eax esi +
jz loc_10078DB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_68] esi +
cmp [ebp+pv] esi +
jz loc_10078E9  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_70] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_50] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+8] 0 +
jnz loc_1007933  +
push [ebp+arg_8]  +
push dword ptr [ebx+4]  +
push 1  +
push [ebp+arg_0]  +
call sub_1006FF8  +
mov eax [ebp+arg_0] +
jmp loc_10079ED  +
mov eax [ebx+4] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp edi [eax] +
jnz loc_1007956  +
mov eax [esi] +
cmp eax [edi+0Ch] +
jge loc_10079D8  +
push esi  +
push edi  +
push 1  +
jmp loc_10079CB  +
cmp edi eax +
jnz loc_1007967  +
mov eax [eax+8] +
mov ecx [eax+0Ch] +
cmp ecx [esi] +
jge loc_10079D8  +
push esi  +
jmp loc_10079C1  +
mov eax [esi] +
cmp eax [edi+0Ch] +
jge loc_1007993  +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] edi +
call sub_10052D1  +
mov ecx [ebp+arg_8] +
mov eax [esi] +
cmp [ecx+0Ch] eax +
jge loc_1007993  +
mov eax [ecx+8] +
cmp byte ptr [eax+15h] 0 +
push esi  +
jz loc_1007990  +
push ecx  +
jmp loc_10079C2  +
push edi  +
jmp loc_10079C7  +
mov eax [esi] +
cmp [edi+0Ch] eax +
jge loc_10079D8  +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] edi +
call sub_1005313  +
mov ecx [ebp+arg_8] +
cmp ecx [ebp+var_4] +
jz loc_10079B4  +
mov eax [esi] +
cmp eax [ecx+0Ch] +
jge loc_10079D8  +
mov eax [ebp+arg_4] +
mov edx [eax+8] +
cmp byte ptr [edx+15h] 0 +
push esi  +
jz loc_10079C6  +
push eax  +
push 0  +
jmp loc_10079C9  +
push ecx  +
push 1  +
mov ecx ebx +
push [ebp+arg_0]  +
call sub_1006FF8  +
mov eax [ebp+arg_0] +
jmp loc_10079EB  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
mov ecx ebx +
call sub_1007520  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 70h  +
mov [ebp+var_BC] eax +
mov [eax] ebx +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_9C] ebx +
mov [ebp+var_B8] ebx +
mov [ebp+var_A4] ebx +
mov [ebp+var_94] ebx +
mov [ebp+var_C0] ebx +
mov [ebp+var_C4] ebx +
mov [ebp+var_A0] ebx +
mov [ebp+var_B4] ebx +
mov [ebp+var_AC] ebx +
mov [ebp+var_98] ebx +
call memset  +
add esp 0Ch +
push 7  +
pop ecx  +
xor eax eax +
lea edx [ebp+var_9C] +
push edx  +
lea edi [ebp+var_90] +
stos   +
mov eax dword_101F928 +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_10080FD  +
jmp loc_1007F17  +
cmp edi ebx +
jl loc_10080FD  +
mov eax [ebp+var_94] +
mov ecx [eax] +
lea edx [ebp+var_C0] +
push edx  +
push offset dword_1002328  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_94] +
cmp eax ebx +
jz loc_1007ACE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_94] ebx +
cmp esi ebx +
jl loc_1007F17  +
mov eax [ebp+var_C0] +
mov ecx [eax] +
lea edx [ebp+var_C4] +
push edx  +
push offset dword_1002348  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_C0] +
cmp eax ebx +
jz loc_1007B05  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C0] ebx +
cmp esi ebx +
jl loc_1007F17  +
mov eax [ebp+var_C4] +
mov ecx [eax] +
lea edx [ebp+var_B8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_C4] +
cmp eax ebx +
jz loc_1007B38  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C4] ebx +
cmp esi ebx +
jl loc_1007F17  +
jmp loc_1007ED4  +
cmp edi ebx +
jl loc_10080FD  +
mov eax [ebp+var_A0] +
mov ecx [eax] +
lea edx [ebp+var_B4] +
push edx  +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_A0] +
cmp eax ebx +
jz loc_1007B7C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_A0] ebx +
cmp esi ebx +
jl loc_1007ED4  +
mov eax [ebp+var_B4] +
mov ecx [eax] +
lea edx [ebp+var_90] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_90] +
push eax  +
call sub_100428F  +
cmp esi ebx +
jl loc_1007ED4  +
mov eax [ebp+var_B4] +
mov ecx [eax] +
lea edx [ebp+var_A4] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+var_B4] +
cmp eax ebx +
jz loc_1007BD8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B4] ebx +
cmp esi ebx +
jl loc_1007ED4  +
jmp loc_1007E91  +
cmp edi ebx +
jl loc_10080FD  +
mov eax [ebp+var_AC] +
mov ecx [eax] +
lea edx [ebp+var_98] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_AC] +
cmp eax ebx +
jz loc_1007C1C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_AC] ebx +
cmp esi ebx +
jl loc_1007E91  +
mov eax [ebp+var_98] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1007E91  +
cmp [ebp+var_58] 2 +
jz loc_1007E88  +
cmp [ebp+var_58] 33h +
jz loc_1007E88  +
mov edi [ebp+var_BC] +
mov esi [edi] +
cmp esi ebx +
jnz loc_1007D2A  +
push 18h  +
call loc_101CDA5  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jz loc_10080F8  +
mov ecx [ebp+var_98] +
mov [eax] ecx +
mov eax [edi] +
mov [eax+14h] ebx +
mov eax [edi] +
mov [eax+10h] ebx +
mov eax [edi] +
mov ecx [ebp+var_64] +
mov [eax+4] ecx +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1007CA5  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov ecx [edi] +
mov [ecx+8] eax +
jmp loc_1007CAB  +
mov eax [edi] +
or dword ptr [eax+8] 0FFFFFFFFh +
cmp [ebp+var_64] 6 +
jnz loc_1007E88  +
mov eax edi +
mov eax [eax] +
mov dword ptr [eax+10h] 1 +
lea eax [ebp+var_B0] +
push eax  +
lea eax [ebp+var_74] +
push eax  +
mov ecx offset unk_101F97C +
mov [ebp+var_B0] ebx +
call sub_101C99C  +
mov edi eax +
cmp edi ebx +
jl loc_10080FD  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_74] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_90] +
movs   +
movs   +
movs   +
lea eax [ebp+var_120] +
push eax  +
movs   +
call sub_10067C1  +
push eax  +
lea ecx [ebp+var_100] +
call sub_10053CD  +
lea eax [ebp+var_100] +
push eax  +
lea eax [ebp+var_E0] +
jmp loc_1007E06  +
cmp [ebp+var_64] 6 +
mov [ebp+var_B0] ebx +
jz loc_1007D54  +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1007E13  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
jmp loc_1007E2A  +
mov esi [esi+14h] +
cmp [esi+14h] ebx +
jnz loc_1007D51  +
push 18h  +
call loc_101CDA5  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_10080F8  +
mov eax [ebp+var_98] +
mov [edi] eax +
mov dword ptr [edi+10h] 1 +
mov [edi+14h] ebx +
mov eax [ebp+var_64] +
mov [edi+4] eax +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1007D9A  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [edi+8] eax +
jmp loc_1007D9E  +
or dword ptr [edi+8] 0FFFFFFFFh +
lea eax [ebp+var_D0] +
push eax  +
lea eax [ebp+var_74] +
mov [esi+14h] edi +
push eax  +
mov ecx offset unk_101F97C +
mov [ebp+var_D0] ebx +
call sub_101C99C  +
mov edi eax +
cmp edi ebx +
jl loc_10080FD  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_74] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_90] +
movs   +
movs   +
movs   +
lea eax [ebp+var_120] +
push eax  +
movs   +
call sub_10067C1  +
push eax  +
lea ecx [ebp+var_100] +
call sub_10053CD  +
lea eax [ebp+var_100] +
push eax  +
lea eax [ebp+var_D8] +
push eax  +
mov ecx offset unk_101F9B4 +
call sub_1007483  +
jmp loc_1007E88  +
or eax 0FFFFFFFFh +
jmp loc_1007E2A  +
cmp [esi+8] eax +
jge loc_1007E30  +
mov [ebp+var_B0] esi +
mov esi [esi+14h] +
cmp esi ebx +
jz loc_1007E30  +
cmp dword ptr [esi+4] 6 +
jnz loc_1007E18  +
push 18h  +
call loc_101CDA5  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_10080F8  +
mov eax [ebp+var_98] +
mov [edi] eax +
mov [edi+14h] esi +
mov [edi+10h] ebx +
mov eax [ebp+var_64] +
mov [edi+4] eax +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1007E6D  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [edi+8] eax +
jmp loc_1007E71  +
or dword ptr [edi+8] 0FFFFFFFFh +
mov eax [ebp+var_B0] +
cmp eax ebx +
jz loc_1007E80  +
mov [eax+14h] edi +
jmp loc_1007E88  +
mov eax [ebp+var_BC] +
mov [eax] edi +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_A4] +
lea edx [ebp+var_CC] +
push edx  +
lea edx [ebp+var_AC] +
push edx  +
push 1  +
mov [ebp+var_CC] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1007BE5  +
mov eax [ebp+var_A4] +
cmp eax ebx +
jz loc_1007ED4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_A4] ebx +
mov eax [ebp+var_B8] +
lea edx [ebp+var_C8] +
push edx  +
lea edx [ebp+var_A0] +
push edx  +
push 1  +
mov [ebp+var_C8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1007B45  +
mov eax [ebp+var_B8] +
cmp eax ebx +
jz loc_1007F17  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B8] ebx +
mov eax [ebp+var_9C] +
lea edx [ebp+var_A8] +
push edx  +
lea edx [ebp+var_94] +
push edx  +
push 1  +
mov [ebp+var_A8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1007A97  +
mov eax [ebp+var_9C] +
cmp eax ebx +
jz loc_1007F5A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_9C] ebx +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_9C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi ebx +
jl loc_10080FD  +
jmp loc_10080C9  +
cmp edi ebx +
jl loc_10080FD  +
mov eax [ebp+var_94] +
mov ecx [eax] +
lea edx [ebp+var_98] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_94] +
cmp eax ebx +
jz loc_1007FB2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_94] ebx +
cmp esi ebx +
jl loc_10080C9  +
mov eax [ebp+var_98] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10080C9  +
cmp [ebp+var_54] 0Ch +
jnz loc_10080C0  +
mov edi [ebp+var_BC] +
mov esi [edi] +
cmp esi ebx +
jnz loc_1008036  +
push 18h  +
call loc_101CDA5  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jz loc_10080F8  +
mov ecx [ebp+var_98] +
mov [eax] ecx +
mov eax [edi] +
mov [eax+14h] ebx +
mov eax [edi] +
mov ecx [ebp+var_64] +
mov [eax+4] ecx +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_100802B  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov ecx [edi] +
mov [ecx+8] eax +
jmp loc_10080C0  +
mov eax [edi] +
or dword ptr [eax+8] 0FFFFFFFFh +
jmp loc_10080C0  +
mov eax [ebp+var_18] +
mov [ebp+var_B0] ebx +
cmp eax ebx +
jz loc_1008050  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
jmp loc_1008053  +
or eax 0FFFFFFFFh +
cmp esi ebx +
jz loc_100806F  +
cmp [esi+8] eax +
jge loc_100806F  +
mov [ebp+var_B0] esi +
mov esi [esi+14h] +
cmp esi ebx +
jz loc_100806F  +
cmp dword ptr [esi+4] 6 +
jnz loc_1008057  +
push 18h  +
call loc_101CDA5  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_10080F8  +
mov eax [ebp+var_98] +
mov [edi] eax +
mov [edi+14h] esi +
mov eax [ebp+var_64] +
mov [edi+4] eax +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_10080A5  +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [edi+8] eax +
jmp loc_10080A9  +
or dword ptr [edi+8] 0FFFFFFFFh +
mov eax [ebp+var_B0] +
cmp eax ebx +
jz loc_10080B8  +
mov [eax+14h] edi +
jmp loc_10080C0  +
mov eax [ebp+var_BC] +
mov [eax] edi +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_9C] +
lea edx [ebp+var_A8] +
push edx  +
lea edx [ebp+var_94] +
push edx  +
push 1  +
mov [ebp+var_A8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1007F7B  +
jmp loc_10080FD  +
mov edi 8007000Eh +
mov eax [ebp+var_9C] +
cmp eax ebx +
jz loc_1008113  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_9C] ebx +
mov eax [ebp+var_B8] +
cmp eax ebx +
jz loc_1008129  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B8] ebx +
mov eax [ebp+var_A4] +
cmp eax ebx +
jz loc_100813F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_A4] ebx +
mov eax [ebp+var_94] +
cmp eax ebx +
jz loc_1008155  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_94] ebx +
mov eax [ebp+var_C0] +
cmp eax ebx +
jz loc_100816B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C0] ebx +
mov eax [ebp+var_C4] +
cmp eax ebx +
jz loc_1008181  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C4] ebx +
mov eax [ebp+var_A0] +
cmp eax ebx +
jz loc_1008197  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_A0] ebx +
mov eax [ebp+var_B4] +
cmp eax ebx +
jz loc_10081AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B4] ebx +
mov eax [ebp+var_AC] +
cmp eax ebx +
jz loc_10081C3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_AC] ebx +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_90] +
push eax  +
call sub_100428F  +
cmp edi ebx +
jge loc_1008200  +
mov eax [ebp+var_98] +
cmp eax ebx +
jz loc_10081F2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_98] ebx +
mov esi [ebp+var_BC] +
push esi  +
call sub_1004352  +
mov [esi] ebx +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 70h  +
push eax  +
mov [ebp+var_A0] eax +
mov [ebp+var_94] eax +
lea eax [ebp+var_90] +
push eax  +
call memset  +
add esp 0Ch +
push 7  +
xor eax eax +
pop ecx  +
mov ebx offset dword_1001260 +
lea edi [ebp+var_20] +
stos   +
mov esi ebx +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
and dword_101F940 eax +
and dword_101F944 eax +
mov esi ebx +
mov edi offset unk_101F9D8 +
movs   +
movs   +
or dword_101F0BC 0FFFFFFFFh +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
lea eax [ebp+var_A0] +
push eax  +
movs   +
call sub_10079F7  +
mov [ebp+var_98] eax +
test eax eax +
jl loc_1008387  +
mov eax [ebp+var_A0] +
mov [ebp+var_9C] eax +
test eax eax +
jz loc_1008387  +
jmp loc_10082C9  +
mov eax [ebp+var_9C] +
mov ecx [eax+8] +
cmp ecx [ebp+arg_0] +
jz loc_10082E3  +
mov eax [eax+14h] +
mov [ebp+var_9C] eax +
test eax eax +
jnz loc_10082C3  +
jmp loc_1008387  +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_90] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_98] eax +
test eax eax +
jl loc_1008387  +
lea esi [ebp+var_90] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_9C] +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jz loc_100837C  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_94] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp+var_98] eax +
test eax eax +
jl loc_1008387  +
push [ebp+var_94]  +
call sub_1011869  +
mov eax [ebp+var_94] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_98] eax +
test eax eax +
jl loc_1008387  +
lea esi [ebp+var_20] +
jmp loc_100837E  +
mov esi ebx +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
lea eax [ebp+var_A0] +
push eax  +
call sub_1004352  +
mov eax [ebp+var_94] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_10083AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_94] 0 +
lea eax [ebp+var_90] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_20] +
push eax  +
call sub_100428F  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_98] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 38F4h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
push 70h  +
lea eax [ebp+var_3890] +
push ebx  +
push eax  +
mov [ebp+var_3898] ebx +
call memset  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_3820] +
push 3800h  +
stos   +
lea eax [ebp+var_3804] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
mov ebx 400h +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push 0B5h  +
call sub_10124CD  +
push ebx  +
lea eax [ebp+var_2004] +
push eax  +
push 0AAh  +
call sub_10124CD  +
mov eax [esi] +
lea ecx [ebp+var_3890] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
xor edi edi +
cmp eax edi +
jl loc_10088CA  +
mov eax [esi] +
lea ecx [ebp+var_3898] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
cmp eax edi +
mov [ebp+var_3894] eax +
jl loc_10084C1  +
mov eax [ebp+var_3898] +
mov ecx [eax] +
lea edx [ebp+var_3820] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_3894] eax +
mov eax [ebp+var_3898] +
cmp eax edi +
jz loc_10084B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3898] edi +
cmp [ebp+var_3894] edi +
jge loc_10084D1  +
cmp [ebp+var_3894] 80042417h +
jnz loc_1008895  +
push [ebp+var_3864]  +
lea eax [ebp+var_1804] +
push [ebp+var_3868]  +
push eax  +
call sub_10126D0  +
cmp [ebp+var_3880] 6 +
mov [ebp+var_38A8] edi +
mov [ebp+var_38A0] edi +
mov [ebp+var_389C] edi +
jnz loc_1008621  +
mov eax [ebp+var_3868] +
mov [ebp+var_38A0] eax +
mov eax [ebp+var_3864] +
mov [ebp+var_389C] eax +
push ebx  +
lea eax [ebp+var_3004] +
xor edi edi +
push eax  +
inc edi  +
push 0B8h  +
mov [ebp+var_38A8] edi +
call sub_10124CD  +
lea eax [ebp+var_38A4] +
push eax  +
lea eax [ebp+var_3890] +
mov esi offset unk_101F97C +
push eax  +
mov ecx esi +
call sub_101C08C  +
mov [ebp+var_3894] eax +
cmp eax edi +
jnz loc_10085C8  +
lea eax [ebp+var_38A4] +
push eax  +
lea eax [ebp+var_3890] +
push eax  +
mov ecx esi +
call sub_101C99C  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_3890] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_3820] +
movs   +
movs   +
movs   +
mov [ebp+var_3894] eax +
lea eax [ebp+var_38F4] +
push eax  +
movs   +
call sub_10067C1  +
push eax  +
lea ecx [ebp+var_38D4] +
call sub_10053CD  +
lea eax [ebp+var_38D4] +
push eax  +
lea eax [ebp+var_38B4] +
push eax  +
mov ecx offset unk_101F9B4 +
call sub_1007483  +
cmp [ebp+var_3894] 0 +
jl loc_1008895  +
lea eax [ebp+var_38AC] +
push eax  +
lea eax [ebp+var_3820] +
mov esi offset unk_101F9C0 +
push eax  +
mov ecx esi +
call sub_101C08C  +
mov [ebp+var_3894] eax +
cmp eax 1 +
jnz loc_100860F  +
lea eax [ebp+var_38AC] +
push eax  +
lea eax [ebp+var_3820] +
push eax  +
mov ecx esi +
call sub_101C99C  +
cmp [ebp+var_3894] 0 +
jl loc_1008895  +
jmp loc_10086CB  +
cmp [ebp+var_384C] edi +
jnz loc_100866C  +
mov eax [ebp+var_3868] +
mov [ebp+var_38A0] eax +
mov eax [ebp+var_3864] +
mov [ebp+var_389C] eax +
push ebx  +
lea eax [ebp+var_3004] +
push eax  +
push 0B7h  +
call sub_10124CD  +
mov eax [ebp+var_3834] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_38A4] eax +
jmp loc_10086CB  +
mov eax [ebp+var_3834] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_38A4] eax +
lea eax [ebp+var_38A0] +
push eax  +
push edi  +
push esi  +
call sub_10044A5  +
cmp eax edi +
mov [ebp+var_3894] eax +
jge loc_10086AD  +
cmp eax 80042444h +
jz loc_10086AD  +
cmp eax 80042519h +
jnz loc_1008895  +
push esi  +
call sub_1004404  +
mov [ebp+var_38A8] eax +
push ebx  +
lea eax [ebp+var_3004] +
push eax  +
push 0B7h  +
call sub_10124CD  +
push [ebp+var_389C]  +
lea eax [ebp+var_1004] +
push [ebp+var_38A0]  +
push eax  +
call sub_10126D0  +
push 4  +
pop ecx  +
cmp [ebp+var_3878] ecx +
jnz loc_10086FD  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 60h  +
jmp loc_10087FA  +
mov eax [ebp+var_3880] +
cmp eax 2 +
jz loc_10087F0  +
cmp eax 5 +
jz loc_10087F0  +
cmp eax 3 +
jnz loc_100872C  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 22Bh  +
jmp loc_10087FA  +
cmp eax 6 +
jnz loc_1008740  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 62h  +
jmp loc_10087FA  +
test [ebp+var_3854] 20h +
jz loc_100875B  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 27Fh  +
jmp loc_10087FA  +
cmp eax ecx +
jnz loc_100876E  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 63h  +
jmp loc_10087FA  +
mov edi offset dword_1001260 +
lea esi [ebp+var_3820] +
xor edx edx +
cmps   +
jz loc_10087DB  +
cmp [ebp+var_380C] 4 +
jnz loc_10087DB  +
mov al [ebp+var_3808] +
push ebx  +
test al 1 +
jz loc_100879E  +
lea eax [ebp+var_804] +
push eax  +
push 61h  +
jmp loc_10087FA  +
test al 8 +
jz loc_10087B0  +
lea eax [ebp+var_804] +
push eax  +
push 1B7h  +
jmp loc_10087FA  +
test al 4 +
jz loc_10087C2  +
lea eax [ebp+var_804] +
push eax  +
push 27Eh  +
jmp loc_10087FA  +
test al 10h +
lea eax [ebp+var_804] +
push eax  +
jz loc_10087D4  +
push 267h  +
jmp loc_10087FA  +
push 27Dh  +
jmp loc_10087FA  +
cmp eax 1 +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
jnz loc_10087EC  +
push 64h  +
jmp loc_10087FA  +
push 65h  +
jmp loc_10087FA  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 66h  +
call sub_10124CD  +
cmp [ebp+var_384C] 2 +
lea eax [ebp+Buffer] +
jz loc_1008814  +
lea eax [ebp+var_2004] +
cmp [ebp+var_38A8] 0 +
mov [ebp+var_389C] eax +
lea edx [ebp+Buffer] +
jnz loc_100882F  +
lea edx [ebp+var_2004] +
push 4  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_3890] +
mov esi offset unk_101F9D8 +
cmps   +
lea eax [ebp+Buffer] +
jz loc_100884F  +
lea eax [ebp+var_2004] +
push [ebp+var_389C]  +
lea ecx [ebp+var_1004] +
push edx  +
push ecx  +
lea ecx [ebp+var_1804] +
push ecx  +
lea ecx [ebp+var_804] +
push ecx  +
push [ebp+var_38A4]  +
push eax  +
lea eax [ebp+var_3004] +
push eax  +
lea eax [ebp+var_3804] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 28h +
lea eax [ebp+var_3804] +
push eax  +
call sub_1012604  +
mov eax [ebp+var_3898] +
test eax eax +
jz loc_10088AC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_3898] 0 +
lea eax [ebp+var_3890] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_3820] +
push eax  +
call sub_100428F  +
mov eax [ebp+var_3894] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
and [ebp+var_4] 0 +
cmp dword ptr [eax] 0 +
jz loc_100890A  +
push offset aListDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp locret_1008961  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_10079F7  +
mov esi eax +
test esi esi +
jge loc_100892A  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax esi +
jmp loc_1008960  +
mov esi [ebp+var_4] +
test esi esi +
jnz loc_100893D  +
push 0B9h  +
call sub_1012B18  +
jmp loc_100895E  +
push 0B6h  +
call sub_1012B18  +
push dword ptr [esi]  +
call sub_10083DB  +
mov esi [esi+14h] +
test esi esi +
jnz loc_1008947  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004352  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax 1924h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
xor esi esi +
push edi  +
push 70h  +
lea eax [ebp-1890h] +
push esi  +
push eax  +
mov [ebp-1908h] esi +
mov [ebp-1918h] esi +
mov [ebp-1924h] esi +
mov [ebp-1914h] esi +
mov [ebp-190Ch] esi +
mov [ebp-1910h] esi +
mov [ebp-191Ch] esi +
mov [ebp-1904h] esi +
call memset  +
push 70h  +
lea eax [ebp-1900h] +
push esi  +
push eax  +
call memset  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp-1820h] +
push 1800h  +
stos   +
lea eax [ebp-1804h] +
push esi  +
push eax  +
call memset  +
add esp 24h +
cmp dword ptr [ebp+10h] 1 +
jz loc_1008A17  +
push offset aSelectDisk  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1008AE9  +
cmp [ebx] esi +
jz loc_1008AF3  +
mov eax offset dword_1001260 +
mov esi eax +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
mov esi eax +
mov edi offset unk_101F9D8 +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
or dword_101F0BC 0FFFFFFFFh +
movs   +
movs   +
mov esi eax +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebx] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1008A61  +
mov esi ds:wcsspn +
sub eax edx +
mov edi offset a0123456789 +
sar eax 1 +
push edi  +
push ecx  +
mov [ebp-1920h] eax +
call esi  +
pop ecx  +
pop ecx  +
cmp eax [ebp-1920h] +
jnz loc_1008BEE  +
or dword_101F0B4 0FFFFFFFFh +
or dword_101F0B8 0FFFFFFFFh +
push dword ptr [ebx]  +
call ds:_wtol  +
mov [ebp-1918h] eax +
pop ecx  +
lea eax [ebp-190Ch] +
push eax  +
call sub_10079F7  +
mov esi eax +
test esi esi +
jl loc_1008FBD  +
mov ebx [ebp-190Ch] +
jmp loc_1008ADB  +
mov eax [ebx+8] +
cmp eax [ebp-1918h] +
jz loc_1008B1B  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_1008ACD  +
push 0F4h  +
call sub_1012B18  +
mov dword ptr [ebp-1908h] 80070057h +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_100913A  +
push 0F5h  +
call sub_1012B18  +
xor ebx ebx +
jmp loc_1009233  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-1890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-1890h] +
push eax  +
call sub_10028A5  +
test esi esi +
jl loc_1008FBD  +
mov edi offset unk_101F9D8 +
lea esi [ebp-1890h] +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
movs   +
mov edi offset unk_101F948 +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+8] +
mov dword_101F0B4 eax +
mov dword_101F0B8 eax +
push dword ptr [ebx]  +
call sub_1004404  +
test eax eax +
jz loc_1008E05  +
mov ebx [ebx] +
mov eax [ebx] +
lea ecx [ebp-1904h] +
push ecx  +
push ebx  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_1008AF3  +
push dword ptr [ebp-1904h]  +
call sub_1011869  +
mov eax [ebp-1904h] +
mov ecx [eax] +
lea edx [ebp-1820h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-1820h] +
push eax  +
call sub_100428F  +
mov eax [ebp-1904h] +
test eax eax +
jz loc_1008BE1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-1904h] 0 +
test esi esi +
jl loc_1008AF3  +
jmp loc_1008D6A  +
mov eax [ebx] +
movzx eax word ptr [eax] +
push eax  +
push offset aMm  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008D7E  +
mov eax [ebx] +
lea ecx [eax+2] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp-1920h] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1008C19  +
sub eax [ebp-1920h] +
push edi  +
sar eax 1 +
push ecx  +
mov [ebp-1920h] eax +
call esi  +
pop ecx  +
pop ecx  +
cmp eax [ebp-1920h] +
jnz loc_1008D7E  +
or dword_101F0B4 0FFFFFFFFh +
or dword_101F0B8 0FFFFFFFFh +
mov eax [ebx] +
inc eax  +
inc eax  +
push eax  +
mov dword ptr [ebp-1924h] 1 +
call ds:_wtol  +
mov [ebp-1918h] eax +
mov eax dword_101F980 +
pop ecx  +
mov ecx [eax] +
mov [ebp-1914h] ecx +
cmp ecx eax +
jz loc_1008ADF  +
mov edx [ebp-1918h] +
cmp [ecx+28h] edx +
jz loc_1008CA7  +
lea ecx [ebp-1914h] +
call sub_10066DC  +
mov ecx [ebp-1914h] +
mov eax dword_101F980 +
cmp ecx eax +
jnz loc_1008C82  +
cmp ecx eax +
jz loc_1008ADF  +
lea esi [ecx+10h] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1001260 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
lea eax [ebp-1910h] +
xor ebx ebx +
push eax  +
mov dword_101F940 ebx +
mov dword_101F944 ebx +
movs   +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1008FBD  +
mov eax [ebp-1910h] +
mov ecx [eax] +
lea edx [ebp-1904h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-1910h] +
cmp eax ebx +
jz loc_1008D18  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1910h] ebx +
cmp esi ebx +
jl loc_1008FBD  +
push dword ptr [ebp-1904h]  +
call sub_1011869  +
mov eax [ebp-1904h] +
mov ecx [eax] +
lea edx [ebp-1820h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-1820h] +
push eax  +
call sub_100428F  +
mov eax [ebp-1904h] +
cmp eax ebx +
jz loc_1008D62  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1904h] ebx +
cmp esi ebx +
jl loc_1008FBD  +
lea esi [ebp-1820h] +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
jmp loc_1008AF3  +
***
mov esi ds:_wcsicmp +
push offset aSystem  +
push dword ptr [ebx]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008E0F  +
or dword_101F0B4 0FFFFFFFFh +
or dword_101F0B8 0FFFFFFFFh +
lea eax [ebp-190Ch] +
push eax  +
call sub_10079F7  +
mov esi eax +
test esi esi +
jl loc_1008FBD  +
mov ebx [ebp-190Ch] +
jmp loc_1008DF7  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-1890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-1890h] +
push eax  +
call sub_10028A5  +
test esi esi +
jl loc_1008FBD  +
test dword ptr [ebp-1854h] 4000h +
jnz loc_1008B40  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_1008DBF  +
push 4E0h  +
jmp loc_1008AE4  +
***
mov esi offset dword_1001260 +
jmp loc_1008D70  +
***
push offset aNext  +
push dword ptr [ebx]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008F9D  +
or esi 0FFFFFFFFh +
cmp dword_101F0B4 esi +
jnz loc_1008E37  +
push 4E1h  +
jmp loc_1008AE4  +
***
lea eax [ebp-190Ch] +
push eax  +
call sub_10079F7  +
mov edi eax +
test edi edi +
jl loc_1008EA5  +
mov ecx [ebp-190Ch] +
mov ebx ecx +
test ecx ecx +
jz loc_1008E75  +
mov eax [ebx+8] +
cmp eax dword_101F0B8 +
ja loc_1008EC8  +
cmp eax [ebp-1914h] +
jbe loc_1008E6E  +
mov [ebp-1914h] eax +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_1008E55  +
mov eax [ecx+8] +
cmp eax dword_101F0B4 +
jz loc_1008ED0  +
mov eax [ecx] +
mov ecx [eax] +
lea edx [ebp-1890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
lea eax [ebp-1890h] +
push eax  +
call sub_10028A5  +
test edi edi +
jge loc_1008F3F  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1908h] edi +
mov dword_101F0B4 esi +
mov dword_101F0B8 esi +
jmp loc_1008AF3  +
***
cmp eax dword_101F0B4 +
jnz loc_1008EEB  +
push 4E2h  +
call sub_1012B18  +
mov dword_101F0B4 esi +
mov dword_101F0B8 esi +
jmp loc_1008AE9  +
***
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-1890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
lea eax [ebp-1890h] +
push eax  +
call sub_10028A5  +
test edi edi +
jl loc_1008EA5  +
lea esi [ebp-1890h] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
movs   +
mov esi offset dword_1001260 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+8] +
jmp loc_1008B73  +
***
lea esi [ebp-1890h] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
mov ebx offset dword_1001260 +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp-190Ch] +
mov eax [esi+8] +
mov dword_101F0B8 eax +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jz loc_1008F96  +
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp-1904h] +
push ecx  +
push esi  +
jmp loc_1008B93  +
***
mov esi ebx +
jmp loc_1008D70  +
***
or dword_101F0B4 0FFFFFFFFh +
or dword_101F0B8 0FFFFFFFFh +
lea eax [ebp-190Ch] +
push eax  +
call sub_10079F7  +
mov esi eax +
test esi esi +
jge loc_1008FD4  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1908h] esi +
jmp loc_1008AF3  +
***
mov esi [ebp-190Ch] +
jmp loc_1009043  +
mov eax [ebp-191Ch] +
test eax eax +
jz loc_1008FF3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-191Ch] 0 +
lea eax [ebp-191Ch] +
push eax  +
push dword ptr [esi]  +
call sub_10053F6  +
mov edi eax +
test edi edi +
jl loc_1009052  +
lea eax [ebp-1900h] +
push eax  +
call sub_10042B8  +
mov eax [ebp-191Ch] +
mov ecx [eax] +
lea edx [ebp-1900h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_1009052  +
push dword ptr [ebp-1894h]  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009069  +
mov esi [esi+14h] +
mov [ebp-1914h] esi +
test esi esi +
jnz loc_1008FDC  +
jmp loc_1008ADF  +
***
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1908h] edi +
jmp loc_1008AF3  +
***
lea esi [ebp-1900h] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
mov ebx offset dword_1001260 +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp-1914h] +
mov eax [esi+8] +
mov dword_101F0B4 eax +
mov dword_101F0B8 eax +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jz loc_100911E  +
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp-1904h] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_1008AF3  +
push dword ptr [ebp-1904h]  +
call sub_1011869  +
mov eax [ebp-1904h] +
mov ecx [eax] +
lea edx [ebp-1820h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-1820h] +
push eax  +
call sub_100428F  +
mov eax [ebp-1904h] +
test eax eax +
jz loc_100910E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-1904h] 0 +
test esi esi +
jl loc_1008AF3  +
lea esi [ebp-1820h] +
jmp loc_1009120  +
mov esi ebx +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
lea eax [ebp-1900h] +
push eax  +
movs   +
call sub_10042B8  +
jmp loc_1008AF3  +
***
xor ebx ebx +
cmp [ebp-1910h] ebx +
jnz loc_1009198  +
lea eax [ebp-1910h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100916F  +
mov eax [ebp-1910h] +
mov ecx [eax] +
lea edx [ebp-1890h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_1009186  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1908h] esi +
jmp loc_1009233  +
xor eax eax +
cmp dword ptr [ebp-1880h] 6 +
setz al  +
mov [ebp-1924h] eax +
mov esi 400h +
lea eax [ebp-1004h] +
push esi  +
push eax  +
cmp [ebp-1924h] ebx +
jz loc_10091E9  +
push 0F3h  +
call sub_10124CD  +
lea eax [ebp-1918h] +
push eax  +
lea eax [ebp-1890h] +
push eax  +
mov ecx offset unk_101F97C +
call sub_101C08C  +
mov edi eax +
cmp edi ebx +
jge loc_100920A  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1908h] edi +
jmp loc_1009233  +
push 0F2h  +
call sub_10124CD  +
mov eax [ebp-1834h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [ebp-1918h] eax +
push dword ptr [ebp-1918h]  +
lea eax [ebp-1004h] +
push eax  +
lea eax [ebp-1804h] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp-1804h] +
push eax  +
call sub_1012604  +
lea eax [ebp-190Ch] +
push eax  +
call sub_1004352  +
mov eax [ebp-1910h] +
cmp eax ebx +
jz loc_1009255  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1910h] ebx +
mov eax [ebp-191Ch] +
cmp eax ebx +
jz loc_100926B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-191Ch] ebx +
mov eax [ebp-1904h] +
cmp eax ebx +
jz loc_1009281  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1904h] ebx +
lea eax [ebp-1890h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-1900h] +
push eax  +
call sub_10042B8  +
lea eax [ebp-1820h] +
push eax  +
call sub_100428F  +
mov ecx [ebp-4] +
mov eax [ebp-1908h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_10167C1  +
cmp eax [edi+4] +
jz loc_10092E1  +
mov ecx [esi] +
cmp ecx [eax+0Ch] +
jge loc_10092FC  +
mov ecx [esi] +
and [ebp+var_4] 0 +
mov [ebp+var_8] ecx +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx edi +
call sub_100790B  +
mov eax [eax] +
pop edi  +
add eax 10h +
pop esi  +
leave   +
retn 4  +
***
add (byte_101EDFF-101EE4Fh)[eax] ch +
adc eax [eax] +
add [eax-1] edx +
adc eax offset _wcsicmp +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100941E  +
cmp [ebp-12Ch] ebx +
jnz loc_10095D4  +
mov dword ptr [ebp-12Ch] 1 +
jmp loc_1009548  +
push offset aDisk  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009548  +
mov eax [ebp-0ECh] +
inc eax  +
mov [ebp-0ECh] eax +
cmp eax [ebp+10h] +
jnb loc_10095D4  +
mov ecx [esi+eax*4] +
cmp ecx ebx +
jz loc_10095D4  +
cmp [ebp-130h] ebx +
jnz loc_10095D4  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1009467  +
sub eax edi +
sar eax 1 +
push offset a0123456789_0  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_10095D4  +
mov eax [ebp-0ECh] +
mov edi [esi+eax*4] +
jmp loc_100953C  +
movzx eax word ptr [edi] +
push 2Ch  +
pop ecx  +
cmp ax cx +
jz loc_10095D4  +
cmp ax bx +
jz loc_10095D4  +
mov eax edi +
cmp [edi] cx +
jz loc_10094C6  +
cmp [eax] bx +
jz loc_10094C6  +
inc eax  +
inc eax  +
cmp [eax] cx +
jnz loc_10094BA  +
cmp [eax] cx +
jnz loc_10094D2  +
xor ecx ecx +
mov [eax] cx +
jmp loc_10094DC  +
mov dword ptr [ebp-0FCh] 1 +
push edi  +
call ds:_wtol  +
pop ecx  +
mov [ebp-128h] eax +
lea eax [ebp-128h] +
push eax  +
lea eax [ebp-148h] +
push eax  +
lea ecx [ebp-138h] +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-134h] +
jnz loc_1009525  +
lea eax [ebp-128h] +
push eax  +
lea ecx [ebp-138h] +
call sub_10092C1  +
mov dword ptr [eax] 1 +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100952A  +
sub eax edx +
sar eax 1 +
lea edi [edi+eax*2+2] +
cmp [ebp-0FCh] ebx +
jz loc_100949B  +
inc dword ptr [ebp-0ECh]  +
mov eax [ebp-0ECh] +
cmp eax [ebp+10h] +
jb near ptr dword_1009314+0CAh  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_10095E3  +
push 0A8h  +
call sub_1012B18  +
mov eax [ebp-12Ch] +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
lea ecx [ebp-144h] +
mov esi eax +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-138h] +
call sub_1018168  +
mov eax esi +
call sub_101D3D6  +
retn 0Ch  +
***
push offset aImport  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-0E8h] 8000FFFFh +
jmp loc_1009A1F  +
mov dword ptr [ebp-124h] 1 +
jmp loc_1009A1F  +
lea eax [ebp-11Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-11Ch] +
mov ecx [eax] +
lea edx [ebp-114h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-114h] +
mov ecx [eax] +
lea edx [ebp-104h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-104h] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-74h] +
push eax  +
call sub_1004254  +
cmp esi ebx +
jl loc_1009A0D  +
test byte ptr [ebp-48h] 1 +
jnz loc_1009675  +
push 1E5h  +
call sub_1012B18  +
mov dword ptr [ebp-0E8h] 80070057h +
jmp loc_1009A1F  +
mov eax [ebp-114h] +
mov ecx [eax] +
lea edx [ebp-100h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1009A0D  +
xor edi edi +
mov [ebp-0ECh] ebx +
inc edi  +
jmp loc_100977E  +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-0F8h] +
mov ecx [eax] +
lea edx [ebp-10Ch] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-0F8h] +
cmp eax ebx +
jz loc_10096D7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F8h] ebx +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-10Ch] +
mov ecx [eax] +
lea edx [ebp-0E4h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-10Ch] +
cmp eax ebx +
jz loc_100970A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10Ch] ebx +
cmp esi ebx +
jl loc_1009A0D  +
cmp [ebp-130h] ebx +
jz loc_1009754  +
mov eax [ebp-88h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [ebp-128h] eax +
lea eax [ebp-128h] +
push eax  +
lea eax [ebp-148h] +
push eax  +
lea ecx [ebp-138h] +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-134h] +
jz loc_1009772  +
lea eax [ebp-0E4h] +
push eax  +
push dword ptr [ebp-140h]  +
lea ecx [ebp-144h] +
call near ptr dword_10074E4+3  +
inc dword ptr [ebp-0ECh]  +
lea eax [ebp-0E4h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-100h] +
lea edx [ebp-0FCh] +
push edx  +
lea edx [ebp-0F8h] +
push edx  +
push edi  +
mov [ebp-0FCh] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_10096A0  +
mov eax [ebp-100h] +
cmp eax ebx +
jz loc_10097BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-100h] ebx +
mov eax [ebp-0ECh] +
shl eax 4 +
push eax  +
call ds:malloc  +
mov edx eax +
pop ecx  +
mov [ebp-120h] edx +
cmp edx ebx +
jnz loc_10097F2  +
push 6Eh  +
call sub_1012B18  +
mov dword ptr [ebp-0E8h] 8007000Eh +
jmp loc_1009A1F  +
mov esi [ebp-140h] +
mov eax [esi] +
xor ecx ecx +
cmp eax esi +
jz loc_100981F  +
cmp ecx [ebp-0ECh] +
jge loc_100981F  +
lea esi [eax+8] +
mov edi edx +
movs   +
movs   +
movs   +
movs   +
mov eax [eax] +
inc ecx  +
add edx 10h +
cmp eax [ebp-140h] +
jnz loc_1009800  +
mov eax [ebp-104h] +
mov ecx [eax] +
lea edx [ebp-110h] +
push edx  +
push offset dword_1002348  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-104h] +
cmp eax ebx +
jz loc_100984E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-104h] ebx +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-110h] +
mov ecx [eax] +
lea edx [ebp-108h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-110h] +
cmp eax ebx +
jz loc_1009881  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-110h] ebx +
cmp esi ebx +
jl loc_1009A0D  +
xor edi edi +
inc edi  +
jmp loc_10098F8  +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-0F4h] +
mov ecx [eax] +
lea edx [ebp-0F0h] +
push edx  +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-0F4h] +
cmp eax ebx +
jz loc_10098C5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F4h] ebx +
cmp esi ebx +
jl loc_1009925  +
mov eax [ebp-0F0h] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_100993C  +
cmp [ebp-18h] edi +
jz loc_1009945  +
mov eax [ebp-0F0h] +
cmp eax ebx +
jz loc_10098F8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F0h] ebx +
mov eax [ebp-108h] +
mov ecx [eax] +
lea edx [ebp-14Ch] +
push edx  +
lea edx [ebp-0F4h] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_100988E  +
mov [ebp-0F0h] ebx +
jmp loc_100994F  +
mov [ebp-0E8h] esi +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
jmp loc_1009A1F  +
mov [ebp-0E8h] eax +
push eax  +
jmp loc_100992C  +
***
lea esi [ebp-2Ch] +
lea edi [ebp-3Ch] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp-108h] +
cmp eax ebx +
jz loc_1009965  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-108h] ebx +
cmp [ebp-0F0h] ebx +
jnz loc_10099A3  +
lea eax [ebp-0F0h] +
push eax  +
push 1  +
call sub_1011D44  +
mov esi eax +
cmp esi ebx +
jl loc_1009A0D  +
mov eax [ebp-0F0h] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_100993C  +
lea esi [ebp-2Ch] +
lea edi [ebp-3Ch] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp-0ECh] +
shl eax 2 +
push eax  +
mov [ebp-150h] ebx +
call ds:malloc  +
pop ecx  +
mov [ebp-118h] eax +
cmp eax ebx +
jz loc_10097DC  +
mov eax [ebp-114h] +
mov ecx [eax] +
lea edx [ebp-150h] +
push edx  +
push dword ptr [ebp-118h]  +
lea esi [ebp-3Ch] +
push ebx  +
push ebx  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp-0ECh]  +
movs   +
push dword ptr [ebp-120h]  +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
cmp eax ebx +
jl loc_100993C  +
push 0A9h  +
jmp loc_1009932  +
***
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0E8h] esi +
mov eax [ebp-0F0h] +
cmp eax ebx +
jz loc_1009A35  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F0h] ebx +
mov eax [ebp-114h] +
cmp eax ebx +
jz loc_1009A4B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-114h] ebx +
mov eax [ebp-104h] +
cmp eax ebx +
jz loc_1009A61  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-104h] ebx +
mov eax [ebp-0F8h] +
cmp eax ebx +
jz loc_1009A77  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F8h] ebx +
mov eax [ebp-10Ch] +
cmp eax ebx +
jz loc_1009A8D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10Ch] ebx +
mov eax [ebp-100h] +
cmp eax ebx +
jz loc_1009AA3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-100h] ebx +
mov eax [ebp-110h] +
cmp eax ebx +
jz loc_1009AB9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-110h] ebx +
mov eax [ebp-108h] +
cmp eax ebx +
jz loc_1009ACF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-108h] ebx +
mov eax [ebp-0F0h] +
cmp eax ebx +
jz loc_1009AE5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F0h] ebx +
mov eax [ebp-0F4h] +
cmp eax ebx +
jz loc_1009AFB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F4h] ebx +
mov eax [ebp-11Ch] +
cmp eax ebx +
jz loc_1009B11  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-11Ch] ebx +
lea eax [ebp-74h] +
push eax  +
call sub_1004254  +
lea eax [ebp-2Ch] +
push eax  +
call sub_100428F  +
lea eax [ebp-0E4h] +
push eax  +
call sub_10028A5  +
mov esi ds:free +
cmp [ebp-120h] ebx +
jz loc_1009B46  +
push dword ptr [ebp-120h]  +
call esi  +
pop ecx  +
cmp [ebp-118h] ebx +
jz loc_1009B57  +
push dword ptr [ebp-118h]  +
call esi  +
pop ecx  +
cmp [ebp-124h] ebx +
jz loc_1009B7A  +
push offset aImport  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-0E8h] 80070057h +
mov eax [ebp-12Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-0E8h] +
jmp loc_100958E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009BB3  +
mov eax [esi] +
test eax eax +
jz loc_1009BB3  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 10h  +
pop ecx  +
xor eax eax +
cmps   +
pop edi  +
pop esi  +
jz loc_1009BDA  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
setl al  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push 11Ch  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
cmp [ebp+var_6] 1 +
jz loc_1009C34  +
xor eax eax +
jmp loc_1009C3E  +
movzx eax [ebp+var_8] +
shr eax 9 +
and eax 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push 11Ch  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
cmp [ebp+VersionInformation.dwMajorVersion] 6 +
mov ecx [ebp+var_4] +
sbb eax eax +
xor ecx ebp +
inc eax  +
call sub_101D138  +
leave   +
retn   +
***
retn   +
***
mov ecx dword_101F90C +
xor eax eax +
cmp ecx ds:_iob +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_101F928 +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_8] +
push edx  +
push eax  +
xor esi esi +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1009CF4  +
mov esi [ebp+var_4] +
shr esi 4 +
and esi 1 +
lea eax [ebp+var_8] +
push eax  +
call sub_1009B96  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2004h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 11h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 10h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_1004] +
push eax  +
push 0Dh  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 12h  +
call sub_10124CD  +
xor esi esi +
inc esi  +
cmp [ebp+arg_0] esi +
jle loc_1009DCC  +
mov ebx ds:wcschr +
mov eax [edi+esi*4] +
test eax eax +
jz loc_1009DDE  +
movzx eax word ptr [eax] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009DEF  +
mov eax [edi+esi*4] +
movzx eax word ptr [eax+2] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009E0B  +
inc esi  +
cmp esi [ebp+arg_0] +
jge loc_1009DEF  +
mov eax [edi+esi*4] +
test eax eax +
jz loc_1009DDE  +
push offset aR  +
push eax  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov dword_101F90C eax +
test eax eax +
jz loc_1009DFD  +
inc esi  +
cmp esi [ebp+arg_0] +
jl loc_1009D71  +
xor eax eax +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
push 1C4h  +
call sub_1012B18  +
mov eax 8000FFFFh +
jmp loc_1009DCE  +
push 68h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1009DCE  +
push 6Ch  +
call sub_1012B18  +
mov eax 80004005h +
jmp loc_1009DCE  +
mov eax [edi+esi*4] +
movzx eax word ptr [eax+2] +
push eax  +
lea eax [ebp+var_1004] +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009DEF  +
push 0FDh  +
call sub_1012B18  +
mov eax 3B9AC9FFh +
jmp loc_1009DCE  +
***
push 0  +
call sub_1002993  +
push dword_101F934  +
call sub_1011833  +
mov eax dword_101F938 +
test eax eax +
jz loc_1009E60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword_101F938 0 +
mov eax dword_101F928 +
test eax eax +
jz loc_1009E90  +
mov ecx dword_101F930 +
test ecx ecx +
jz loc_1009E7F  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+40h]  +
mov eax dword_101F928 +
test eax eax +
jz loc_1009E90  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword_101F928 0 +
call ds:CoUninitialize  +
mov eax dword_101F90C +
test eax eax +
jz loc_1009EAF  +
cmp eax ds:_iob +
jz loc_1009EAF  +
push eax  +
call ds:fclose  +
pop ecx  +
xor eax eax +
retn   +
***
push 80004005h  +
call ds:ExitProcess  +
call __EH_prolog3  +
lea eax [ebp-10h] +
push eax  +
push offset riid  +
push 4  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jge loc_1009EF6  +
push 69h  +
jmp loc_1009F70  +
mov eax [ebp-10h] +
mov ecx [eax] +
push offset dword_101F928  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-10h] 0 +
test esi esi +
jl loc_1009F69  +
mov eax dword_101F928 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_1009F69  +
push 8  +
call loc_101CDA5  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_1009F46  +
call ??0DNameNode@@IAE@XZ  +
jmp loc_1009F48  +
xor eax eax +
mov ecx dword_101F928 +
or dword ptr [ebp-4] 0FFFFFFFFh +
push offset dword_101F930  +
push eax  +
mov dword_101F92C eax +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+3Ch]  +
mov esi eax +
test esi esi +
jge loc_1009F75  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+21h] 0 +
jnz loc_1009F9E  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_1009FB2  +
mov [ecx+4] eax +
jmp loc_1009FC0  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_1009FBD  +
mov [ecx] eax +
jmp loc_1009FC0  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_1009FDA  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+21h] 0 +
jz loc_1009FD8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_1009FF8  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+21h] 0 +
jz loc_1009FF6  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+21h] 0 +
jnz loc_100A025  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_100A039  +
mov [ecx+4] eax +
jmp loc_100A048  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_100A046  +
mov [ecx+8] eax +
jmp loc_100A048  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor edx edx +
cmp [eax+21h] dl +
jz loc_100A074  +
push edx  +
push edx  +
push edx  +
push edx  +
push edx  +
call sub_101D2C2  +
add esp 14h +
pop esi  +
retn   +
mov ecx [eax+8] +
cmp [ecx+21h] dl +
jnz loc_100A08D  +
push ecx  +
call sub_1009FEC  +
jmp loc_100A095  +
mov ecx [esi] +
cmp ecx [eax+8] +
jnz loc_100A095  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+21h] dl +
jz loc_100A084  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_100A0BD  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 24h +
jnb loc_100A0AF  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ds:_iob +
sub esp 18h +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
mov dword_101F918 esi +
mov dword_101F90C eax +
mov dword_101F910 esi +
call ds:CoInitializeEx  +
mov edi eax +
cmp edi esi +
jge loc_100A125  +
push 69h  +
call sub_1012B18  +
mov eax edi +
jmp loc_100A2C5  +
push esi  +
push esi  +
push esi  +
push 3  +
push 6  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
mov edi eax +
cmp edi esi +
jl loc_100A117  +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
push offset loc_1009EB7  +
call ds:SetConsoleCtrlHandler  +
call sub_1009C4F  +
test eax eax +
jnz loc_100A16A  +
push 17Fh  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_100A2C4  +
call sub_1009EC8  +
cmp eax esi +
jl loc_100A2C4  +
push [ebp+arg_0]  +
mov edi [ebp+arg_4] +
call sub_1009D07  +
cmp eax esi +
jnz loc_100A2C4  +
mov eax dword_101F90C +
cmp eax ds:_iob +
jnz loc_100A19E  +
push 107h  +
jmp loc_100A1A3  +
push 105h  +
call sub_1012B69  +
push offset dword_101F934  +
call sub_1011735  +
mov edi eax +
cmp edi esi +
jge loc_100A1CF  +
push 6Dh  +
call sub_1012B18  +
push dword_101F934  +
call sub_1011833  +
jmp loc_100A252  +
push offset dword_101F938  +
call sub_101192A  +
test eax eax +
jge loc_100A1EE  +
push 4B2h  +
call sub_1012B18  +
mov edi 80070057h +
jmp loc_100A1BF  +
lea eax [ebp+var_8] +
push eax  +
call sub_10079F7  +
mov edi eax +
cmp edi esi +
jl loc_100A24B  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004352  +
lea eax [ebp+var_C] +
push eax  +
call sub_1018295  +
mov edi eax +
cmp edi esi +
jl loc_100A24B  +
lea eax [ebp+var_C] +
push eax  +
call sub_101309C  +
lea eax [ebp+var_10] +
push eax  +
call sub_1012178  +
mov edi eax +
cmp edi esi +
jl loc_100A24B  +
lea eax [ebp+var_10] +
push eax  +
call sub_1011A38  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi esi +
jge loc_100A256  +
push 6Dh  +
call sub_1012B18  +
mov eax edi +
jmp loc_100A2C4  +
mov eax [ebp+var_14] +
mov ecx eax +
shr ecx 3 +
and ecx ebx +
mov dword_101F908 ecx +
mov ecx eax +
shr ecx 1 +
and ecx ebx +
mov dword_101F914 ecx +
mov ecx eax +
shr eax 9 +
and eax ebx +
mov dword_101F924 eax +
lea eax [ebp+hKey] +
push eax  +
shr ecx 8 +
push offset SubKey  +
and ecx ebx +
push 80000002h  +
mov dword_101F91C ecx +
mov dword_101F920 esi +
mov [ebp+hKey] esi +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_100A2B9  +
push [ebp+hKey]  +
mov dword_101F920 ebx +
call ds:RegCloseKey  +
lea eax [ebp+var_18] +
push eax  +
call sub_1009B96  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_101DAB2  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax 180Ch +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx [ebp+arg_4] +
xor esi esi +
push esi  +
push esi  +
xor edi edi +
inc edi  +
push edi  +
push esi  +
mov [ebp+nSize] esi +
call ds:HeapSetInformation  +
test eax eax +
jnz loc_100A32E  +
mov eax 8007000Eh +
jmp loc_100A48D  +
push offset a_ocp  +
push esi  +
call ds:setlocale  +
pop ecx  +
pop ecx  +
push esi  +
call ds:SetThreadUILanguage  +
mov eax ds:_iob +
push esi  +
push 4  +
add eax 20h +
push esi  +
push eax  +
call ds:setvbuf  +
add esp 10h +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
mov hConsoleHandle eax +
call ds:GetFileType  +
test al 2 +
jz loc_100A38E  +
lea eax [ebp+Mode] +
push eax  +
push hConsoleHandle  +
call ds:GetConsoleMode  +
mov dword_101F9E8 edi +
test eax eax +
jnz loc_100A394  +
mov dword_101F9E8 esi +
mov edi 400h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 108h  +
call sub_10124CD  +
push 1DB1h  +
push offset a6_1  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1014] +
push edi  +
push eax  +
call sub_1005575  +
add esp 14h +
lea eax [ebp+var_1014] +
push eax  +
call sub_1012604  +
push 39h  +
call sub_1012B18  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] edi +
call ds:GetComputerNameW  +
test eax eax +
jz loc_100A436  +
push edi  +
lea eax [ebp+var_1014] +
push eax  +
push 2Dh  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1014] +
push eax  +
lea eax [ebp+WideCharStr] +
push edi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push esi  +
push esi  +
mov [ebp+var_4] esi +
call ds:RegisterApplicationRestart  +
mov edi eax +
cmp edi esi +
jge loc_100A45D  +
push 239h  +
call sub_1012B18  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
push ebx  +
push [ebp+arg_0]  +
call sub_100A0E7  +
cmp eax esi +
jnz loc_100A48D  +
push dword_101F90C  +
call sub_100AE9E  +
jmp loc_100A48D  +
mov dword ptr [ebp-1818h] 80004005h +
mov eax offset loc_100A487 +
retn   +
mov eax [ebp-1818h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+2Dh] 0 +
mov ebx ecx +
mov esi edi +
jnz loc_100A542  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_100A512  +
mov esi [esi] +
push edi  +
call sub_101CD94  +
cmp byte ptr [esi+2Dh] 0 +
pop ecx  +
mov edi esi +
jz loc_100A527  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+21h] 0 +
mov ebx ecx +
mov esi edi +
jnz loc_100A57E  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_100A54E  +
mov esi [esi] +
push edi  +
call sub_101CD94  +
cmp byte ptr [esi+21h] 0 +
pop ecx  +
mov edi esi +
jz loc_100A563  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov eax [esi] +
push dword ptr [eax+4]  +
call sub_100A512  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
and dword ptr [edi+8] 0 +
mov [eax] eax +
mov esi [esi] +
pop edi  +
mov [esi+8] esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov eax [esi] +
push dword ptr [eax+4]  +
call sub_100A54E  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
and dword ptr [edi+8] 0 +
mov [eax] eax +
mov esi [esi] +
pop edi  +
mov [esi+8] esi +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov edi [ebp+0Ch] +
cmp byte ptr [edi+21h] 0 +
jz loc_100A686  +
push offset aInvalidMapSetT  +
lea ecx [ebp-2Ch] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-54h] +
call sub_1006D24  +
push offset dword_101DF54  +
lea eax [ebp-54h] +
push eax  +
mov dword ptr [ebp-54h] offset off_10016B0 +
call _CxxThrowException  +
lea ecx [ebp+0Ch] +
call sub_100A057  +
mov edx [edi] +
cmp byte ptr [edx+21h] 0 +
jz loc_100A69B  +
mov ebx [edi+8] +
jmp loc_100A6B4  +
mov eax [edi+8] +
cmp byte ptr [eax+21h] 0 +
jz loc_100A6A8  +
mov ebx edx +
jmp loc_100A6B4  +
mov eax [ebp+0Ch] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp eax edi +
jnz loc_100A71D  +
cmp byte ptr [ebx+21h] 0 +
mov esi [edi+4] +
jnz loc_100A6C0  +
mov [ebx+4] esi +
mov ecx [ebp-10h] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_100A6D0  +
mov [eax+4] ebx +
jmp loc_100A6DB  +
cmp [esi] edi +
jnz loc_100A6D8  +
mov [esi] ebx +
jmp loc_100A6DB  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_100A6FA  +
cmp byte ptr [ebx+21h] 0 +
jz loc_100A6EC  +
mov eax esi +
jmp loc_100A6F5  +
push ebx  +
call sub_1009FEC  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_100A779  +
cmp byte ptr [ebx+21h] 0 +
jz loc_100A70C  +
mov eax esi +
jmp loc_100A715  +
push ebx  +
call sub_1009FCE  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx+8] eax +
jmp loc_100A779  +
mov [edx+4] eax +
mov edx [edi] +
mov [eax] edx +
cmp eax [edi+8] +
jnz loc_100A72D  +
mov esi eax +
jmp loc_100A746  +
cmp byte ptr [ebx+21h] 0 +
mov esi [eax+4] +
jnz loc_100A739  +
mov [ebx+4] esi +
mov [esi] ebx +
mov edx [edi+8] +
mov [ecx] edx +
mov ecx [edi+8] +
mov [ecx+4] eax +
mov ecx [ebp-10h] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_100A756  +
mov [ecx+4] eax +
jmp loc_100A764  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_100A761  +
mov [ecx] eax +
jmp loc_100A764  +
mov [ecx+8] eax +
mov ecx [edi+4] +
mov [eax+4] ecx +
mov cl [eax+20h] +
mov dl [edi+20h] +
mov [eax+20h] dl +
mov [edi+20h] cl +
mov ecx [ebp-10h] +
cmp byte ptr [edi+20h] 1 +
jnz loc_100A883  +
jmp loc_100A83D  +
cmp byte ptr [ebx+20h] 1 +
jnz loc_100A87F  +
mov eax [esi] +
cmp ebx eax +
jnz loc_100A804  +
mov eax [esi+8] +
cmp byte ptr [eax+20h] 0 +
jnz loc_100A7B5  +
mov byte ptr [eax+20h] 1 +
push esi  +
mov byte ptr [esi+20h] 0 +
call sub_1009F82  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+21h] 0 +
jnz loc_100A838  +
mov edx [eax] +
cmp byte ptr [edx+20h] 1 +
jnz loc_100A7CC  +
mov edx [eax+8] +
cmp byte ptr [edx+20h] 1 +
jz loc_100A834  +
mov edx [eax+8] +
cmp byte ptr [edx+20h] 1 +
jnz loc_100A7EB  +
mov edx [eax] +
mov byte ptr [edx+20h] 1 +
push eax  +
mov byte ptr [eax+20h] 0 +
call sub_100A009  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
mov dl [esi+20h] +
mov [eax+20h] dl +
mov byte ptr [esi+20h] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+20h] 1 +
call sub_1009F82  +
jmp loc_100A87F  +
cmp byte ptr [eax+20h] 0 +
jnz loc_100A81D  +
mov byte ptr [eax+20h] 1 +
push esi  +
mov byte ptr [esi+20h] 0 +
call sub_100A009  +
mov eax [esi] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+21h] 0 +
jnz loc_100A838  +
mov edx [eax+8] +
cmp byte ptr [edx+20h] 1 +
jnz loc_100A84B  +
mov edx [eax] +
cmp byte ptr [edx+20h] 1 +
jnz loc_100A84B  +
mov byte ptr [eax+20h] 0 +
mov ebx esi +
mov esi [esi+4] +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jnz loc_100A788  +
jmp loc_100A87F  +
mov edx [eax] +
cmp byte ptr [edx+20h] 1 +
jnz loc_100A869  +
mov edx [eax+8] +
mov byte ptr [edx+20h] 1 +
push eax  +
mov byte ptr [eax+20h] 0 +
call sub_1009F82  +
mov eax [esi] +
mov ecx [ebp-10h] +
mov dl [esi+20h] +
mov [eax+20h] dl +
mov byte ptr [esi+20h] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+20h] 1 +
call sub_100A009  +
mov byte ptr [ebx+20h] 1 +
push edi  +
call sub_101CD94  +
pop ecx  +
mov ecx [ebp-10h] +
mov eax [ecx+8] +
test eax eax +
jbe loc_100A898  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_100A8D3  +
cmp [ebp+arg_8] eax +
jnz loc_100A8D3  +
mov ecx esi +
call sub_100A5E2  +
mov eax [esi+4] +
mov ecx [eax] +
jmp loc_100A8F8  +
cmp ecx [ebp+arg_8] +
jz loc_100A8F8  +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
call sub_10051E2  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_1007212  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_100A8D9  +
pop edi  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_100A92D  +
cmp [ebp+arg_8] eax +
jnz loc_100A92D  +
mov ecx esi +
call sub_100A60F  +
mov eax [esi+4] +
mov ecx [eax] +
jmp loc_100A952  +
cmp ecx [ebp+arg_8] +
jz loc_100A952  +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
call sub_100A057  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_100A63C  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_100A933  +
pop edi  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp-4] +
push eax  +
mov ecx esi +
call sub_100A8AD  +
push dword ptr [esi+4]  +
call sub_101CD94  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
pop esi  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp-4] +
push eax  +
mov ecx esi +
call sub_100A907  +
push dword ptr [esi+4]  +
call sub_101CD94  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1010] eax +
mov [ebp+var_1014] ecx +
test ecx ecx +
jz loc_100AB19  +
push ebx  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jz loc_100AB18  +
test edi edi +
jz loc_100AB18  +
mov eax edi +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100AA1A  +
sub eax esi +
sar eax 1 +
jz loc_100AB17  +
and dword ptr [ecx] 0 +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 0DDh  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 0E2h  +
call sub_10124CD  +
and [ebp+var_1008] 0 +
lea eax [ebx-1] +
mov esi edi +
mov [ebp+var_100C] eax +
test eax eax +
jle loc_100AB07  +
mov ebx ds:wcspbrk +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ebx  +
mov edi eax +
lea eax [ebp+var_804] +
push eax  +
push esi  +
call ebx  +
add esp 10h +
test edi edi +
jz loc_100AAF0  +
test eax eax +
jz loc_100AAB2  +
cmp eax edi +
ja loc_100AAB2  +
lea edi [eax+2] +
lea eax [ebp+var_804] +
push eax  +
push edi  +
call ebx  +
pop ecx  +
pop ecx  +
mov esi eax +
jmp loc_100AAB4  +
xor esi esi +
test esi esi +
jnz loc_100AACB  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
lea esi [edi+eax*2] +
mov ecx [ebp+var_1010] +
xor eax eax +
mov [esi] ax +
mov eax [ebp+var_1008] +
inc esi  +
inc esi  +
mov [ecx+eax*4] edi +
inc eax  +
cmp eax [ebp+var_100C] +
mov [ebp+var_1008] eax +
jl loc_100AA7A  +
cmp [ebp+var_1008] 1 +
jl loc_100AB07  +
mov eax [ebp+var_1008] +
mov ecx [ebp+var_1014] +
mov [ecx] eax +
mov eax [ebp+var_1010] +
mov ecx [ebp+var_1008] +
and dword ptr [eax+ecx*4] 0 +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101D138  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1010h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_1008] 0 +
push esi  +
mov [ebp+var_1010] eax +
mov eax [ebp+arg_4] +
push edi  +
mov [ebp+lpDst] eax +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 0E0h  +
call sub_10124CD  +
mov edi [ebp+arg_8] +
cmp edi esi +
jle loc_100AB89  +
mov eax 80070057h +
jmp loc_100AC14  +
push ebx  +
push 800h  +
lea eax [ebp+Src] +
push 0  +
push eax  +
call memset  +
lea ebx [edi-1] +
add esp 0Ch +
xor esi esi +
test ebx ebx +
jle loc_100ABEF  +
push [ebp+var_1010]  +
call fgetwc  +
movzx eax ax +
pop ecx  +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_100ABE5  +
push eax  +
mov [ebp+esi*2+Src] ax +
lea eax [ebp+Buffer] +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100ABEF  +
inc esi  +
cmp esi ebx +
jl loc_100ABA9  +
jmp loc_100ABEF  +
mov [ebp+var_1008] 3B9AC9FFh +
xor eax eax +
push edi  +
push [ebp+lpDst]  +
mov [ebp+esi*2+Src] ax +
lea eax [ebp+Src] +
push eax  +
call ds:ExpandEnvironmentStringsW  +
mov eax [ebp+var_1008] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100AC3F  +
cmp ecx 7FFFFFFFh +
jbe loc_100AC44  +
mov eax 80070057h +
test eax eax +
jl loc_100AC8F  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_100AC7F  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_100AC7A  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_100AC7A  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100AC62  +
pop edi  +
test esi esi +
jnz loc_100AC86  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1018h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_1018] esi +
test edi edi +
jnz loc_100ACC9  +
mov edi offset off_101F5B0 +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push 0DEh  +
call sub_10124CD  +
xor edx edx +
xor eax eax +
or ebx 0FFFFFFFFh +
mov [ebp+var_1008] eax +
cmp [edi] edx +
jz loc_100AE15  +
mov [ebp+var_100C] edi +
cmp [ebp+arg_4] edx +
jz loc_100ADE6  +
cmp [esi] edx +
jz loc_100ADE6  +
mov eax [ebp+var_100C] +
push dword ptr [eax]  +
lea eax [ebp+var_1004] +
push 400h  +
push eax  +
call sub_100AC29  +
lea eax [ebp+var_1004] +
jmp loc_100AD32  +
mov eax [ebp+var_1010] +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
mov [ebp+var_1014] eax +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
mov [ebp+var_1010] eax +
test eax eax +
jz loc_100AD5F  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
mov [ebp+var_1010] eax +
push [ebp+var_1014]  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100AE03  +
mov eax [esi] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100AD7C  +
mov ecx [ebp+var_1014] +
sub eax edx +
sar eax 1 +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_100AD93  +
sub ecx edx +
sar ecx 1 +
cmp ecx eax +
jl loc_100ADD1  +
cmp eax 3 +
jl loc_100ADD1  +
push eax  +
push [ebp+var_1014]  +
mov eax [ebp+var_1018] +
push dword ptr [eax]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100ADD1  +
cmp ebx 0FFFFFFFFh +
jnz loc_100ADD1  +
mov ebx [ebp+var_1008] +
cmp [ebp+var_1010] 0 +
mov esi [ebp+var_1018] +
jnz loc_100AD2C  +
xor edx edx +
add [ebp+var_100C] 14h +
mov eax [ebp+var_100C] +
inc [ebp+var_1008]  +
cmp [eax] edx +
jnz loc_100ACFA  +
jmp loc_100AE0B  +
mov ebx [ebp+var_1008] +
xor edx edx +
cmp ebx edx +
jge loc_100AE3B  +
mov eax [ebp+var_1008] +
imul eax eax +
lea eax [eax+edi+0Ch] +
cmp [eax] edx +
jz loc_100AE32  +
push edx  +
push esi  +
push edi  +
mov [esi] edx +
call dword ptr [eax]  +
test eax eax +
jg loc_100AE86  +
mov eax 80070057h +
jmp loc_100AE88  +
push 6Ah  +
call sub_1012B18  +
jmp loc_100AE2B  +
imul ebx ebx +
lea eax [ebx+edi] +
mov ecx [eax+0Ch] +
cmp ecx edx +
jz loc_100AE5C  +
cmp [ebp+arg_C] 1 +
jz loc_100AE7D  +
mov eax [ebp+arg_4] +
dec eax  +
push eax  +
add esi 4 +
push esi  +
push edi  +
call ecx  +
jmp loc_100AE88  +
mov ecx [eax+8] +
cmp ecx edx +
jz loc_100AE77  +
push [ebp+arg_C]  +
mov eax [ebp+arg_4] +
push ecx  +
dec eax  +
push eax  +
add esi 4 +
push esi  +
call sub_100AC98  +
jmp loc_100AE88  +
cmp [ebp+arg_C] 1 +
jnz loc_100AE86  +
push dword ptr [eax+10h]  +
call sub_1012A8B  +
pop ecx  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C10h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_810] eax +
mov [ebp+var_808] edi +
mov [ebp+var_80C] edi +
mov esi 400h +
xor ebx ebx +
cmp [ebp+var_80C] edi +
jnz loc_100AFA3  +
call sub_1009CB7  +
test eax eax +
jnz loc_100AEF3  +
push 0E7h  +
call sub_1012B18  +
push 800h  +
lea eax [ebp+var_804] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_810]  +
call sub_100AB2D  +
mov [ebp+var_80C] eax +
cmp ebx edi +
jnz loc_100AFA3  +
push esi  +
lea eax [ebp+var_C10] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_808] +
push eax  +
push 100h  +
lea eax [ebp+var_C10] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
call sub_100A9C9  +
cmp [ebp+var_808] edi +
jz loc_100AED4  +
cmp [ebp+var_C10] edi +
jz loc_100AED4  +
push edi  +
push edi  +
push [ebp+var_808]  +
lea eax [ebp+var_C10] +
push eax  +
call sub_100AC98  +
mov ebx eax +
cmp ebx edi +
jz loc_100AED4  +
cmp ebx 3B9AC9FFh +
jz loc_100AFA1  +
call sub_1009CB7  +
test eax eax +
jnz loc_100AFA3  +
jmp loc_100AED2  +
xor ebx ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_100AFD6  +
cmp [esi] ax +
jz loc_100AFD2  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_100AFC8  +
test edx edx +
jnz loc_100AFDB  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_100AFEC  +
test eax eax +
jl loc_100AFE9  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100B027  +
cmp [ebp+arg_4] eax +
jz loc_100B023  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100B023  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100B006  +
test esi esi +
jnz loc_100B02F  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100B03D  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100B068  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_100B068  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi+2Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push 70h  +
lea eax [ebp+var_AC] +
push ebx  +
push eax  +
mov [ebp+var_B4] ebx +
mov [ebp+var_BC] ebx +
mov [ebp+var_CC] ebx +
mov [ebp+var_B8] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_D0] ebx +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp+var_AC] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_100B2B6  +
mov eax [esi] +
lea ecx [ebp+var_BC] +
push ecx  +
lea ecx [ebp+var_B4] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_100B2B6  +
cmp [ebp+var_BC] ebx +
jz loc_100B2B6  +
cmp [ebp+var_B4] ebx +
jz loc_100B2B6  +
lea eax [ebp+var_CC] +
push eax  +
call sub_1018295  +
test eax eax +
jl loc_100B2B6  +
mov eax [ebp+var_CC] +
mov [ebp+var_C0] eax +
cmp eax ebx +
jz loc_100B2B6  +
push edi  +
mov esi [ebp+var_C0] +
cmp [esi+18h] ebx +
jz loc_100B2A4  +
push 38h  +
lea eax [ebp+var_3C] +
push ebx  +
push eax  +
call memset  +
mov eax [esi+18h] +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_3C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_100B2A4  +
cmp [ebp+var_BC] ebx +
mov [ebp+var_C8] ebx +
jle loc_100B295  +
mov [ebp+var_C4] ebx +
mov eax [ebp+var_B4] +
mov edx [ebp+var_C4] +
push 4  +
lea esi [edx+eax+28h] +
pop ecx  +
lea edi [ebp+var_3C] +
xor eax eax +
cmps   +
jnz loc_100B1BB  +
mov eax [ebp+var_C0] +
mov eax [eax+18h] +
mov ecx [eax] +
lea edx [ebp+var_B8] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jge loc_100B1DB  +
inc [ebp+var_C8]  +
mov eax [ebp+var_C8] +
add [ebp+var_C4] 50h +
cmp eax [ebp+var_BC] +
jl loc_100B181  +
jmp loc_100B295  +
cmp [ebp+var_8C] 0Ch +
jnz loc_100B270  +
mov eax [ebp+var_B8] +
mov ecx [eax] +
lea edx [ebp+var_D0] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100B270  +
cmp [ebp+pv] ebx +
jz loc_100B270  +
xor esi esi +
cmp [ebp+var_D0] ebx +
jle loc_100B256  +
mov edx [ebp+pv] +
mov eax [ebp+var_B8] +
mov ecx [eax] +
push 1  +
push dword ptr [edx+esi*4]  +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+pv] +
lea eax [eax+esi*4] +
cmp [eax] ebx +
jz loc_100B24D  +
push dword ptr [eax]  +
call ds:CoTaskMemFree  +
mov eax [ebp+pv] +
mov [eax+esi*4] ebx +
inc esi  +
cmp esi [ebp+var_D0] +
jl loc_100B218  +
cmp [ebp+pv] ebx +
jz loc_100B270  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov eax [ebp+var_B8] +
mov ecx [eax] +
push ebx  +
push 1  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+var_B8] +
cmp eax ebx +
jz loc_100B295  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B8] ebx +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004329  +
mov esi [ebp+var_C0] +
mov eax [esi+1Ch] +
mov [ebp+var_C0] eax +
cmp eax ebx +
jnz loc_100B136  +
pop edi  +
lea eax [ebp+var_CC] +
push eax  +
call sub_101309C  +
cmp [ebp+var_B4] ebx +
jz loc_100B2DC  +
push [ebp+var_B4]  +
call ds:CoTaskMemFree  +
mov [ebp+var_B4] ebx +
lea eax [ebp+var_AC] +
push eax  +
call sub_10028A5  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp-8] ebx +
mov [ebp-1] bl +
mov [ebp-0Ch] ebx +
cmp [ebp+10h] ebx +
jbe loc_100B3AC  +
mov edi ds:_wcsicmp +
mov eax [ebp+0Ch] +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_100B3DB  +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B352  +
cmp [ebp-0Ch] eax +
jnz loc_100B3F6  +
mov dword ptr [ebp-0Ch] 1 +
jmp loc_100B3A2  +
push offset aEnable  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B370  +
cmp [ebp-1] al +
jnz loc_100B3F6  +
mov byte ptr [ebp-1] 1 +
jmp loc_100B3A2  +
push offset aDisable  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B38A  +
cmp [ebp-1] al +
jnz loc_100B3F6  +
mov byte ptr [ebp-1] 2 +
jmp loc_100B3A2  +
push offset aScrub  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B3F6  +
cmp [ebp-1] al +
jnz loc_100B3F6  +
mov byte ptr [ebp-1] 4 +
inc ebx  +
cmp ebx [ebp+10h] +
jb loc_100B322  +
movsx eax byte ptr [ebp-1] +
dec eax  +
jz loc_100B41D  +
dec eax  +
jz loc_100B40E  +
dec eax  +
dec eax  +
jnz loc_100B43F  +
mov eax dword_101F928 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
test esi esi +
jl loc_100B430  +
push 185h  +
call sub_1012B18  +
jmp loc_100B43F  +
push offset aAutomount  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100B488  +
push offset aAutomount  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100B488  +
mov eax dword_101F928 +
mov ecx [eax] +
push 20h  +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_100B42A  +
mov eax dword_101F928 +
mov ecx [eax] +
push 20h  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov esi eax +
test esi esi +
jge loc_100B43F  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-8] esi +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_100B46D  +
test byte ptr [ebp-10h] 20h +
jz loc_100B461  +
push 184h  +
jmp loc_100B466  +
push 183h  +
call sub_1012B18  +
jmp loc_100B47C  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-8] esi +
mov eax [ebp-0Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 112h  +
call sub_1012B18  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jz loc_100B4C3  +
push offset aRescan  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100B503  +
mov eax dword_101F928 +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jl loc_100B4E6  +
mov eax dword_101F928 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
test esi esi +
jge loc_100B4F6  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax esi +
jmp loc_100B502  +
push 0F0h  +
call sub_1012B18  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_4] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
cmp [ebp+dwMessageId] ebx +
jz loc_100B555  +
xor esi esi +
inc esi  +
cmp [ebp+dwMessageId] esi +
ja loc_100B57D  +
mov eax [ebp+arg_4] +
mov eax [eax] +
cmp eax ebx +
jz loc_100B57D  +
push offset aAll  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B57D  +
mov [ebp+var_18] esi +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
pop edi  +
jnz loc_100B598  +
push 2Ah  +
call sub_1012B18  +
mov [ebp+var_4] 80070057h +
jmp loc_100B6A6  +
push offset aClean  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100B6E6  +
lea eax [ebp+var_8] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100B65E  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_100B5CA  +
cmp esi 80042417h +
jnz loc_100B65E  +
mov eax [ebp+var_10] +
cmp eax ebx +
jnz loc_100B5E5  +
cmp [ebp+var_18] ebx +
jnz loc_100B5EE  +
push 2Bh  +
call sub_1012B18  +
mov [ebp+var_4] ebx +
jmp loc_100B6A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100B65E  +
push [ebp+var_8]  +
call sub_100B072  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push [ebp+var_18]  +
push 1  +
push 1  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_100B633  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
cmp esi ebx +
jl loc_100B65E  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_38] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_100B65A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] ebx +
cmp esi ebx +
jge loc_100B66F  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_4] esi +
jmp loc_100B6A6  +
cmp [ebp+dwMessageId] ebx +
jge loc_100B68A  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_4] eax +
jmp loc_100B6A6  +
push 2Bh  +
call sub_1012B18  +
lea eax [ebp+arg_4] +
push eax  +
mov [ebp+arg_4] ebx +
call sub_10079F7  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1004352  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_100B6B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_100B6C6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_100B6D6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_100B6E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
xor ebx ebx +
mov [ebp-8] ebx +
mov [ebp-4] ebx +
cmp [eax] ebx +
jz loc_100B71B  +
push 68h  +
call sub_1012B18  +
mov dword ptr [ebp-8] 80070057h +
jmp loc_100B7A4  +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F948 +
xor eax eax +
cmps   +
jnz loc_100B734  +
push 5Fh  +
jmp loc_100B754  +
lea eax [ebp-4] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_100B787  +
push dword ptr [ebp-4]  +
call sub_1013295  +
test eax eax +
jnz loc_100B762  +
push 117h  +
call sub_1012B18  +
mov dword ptr [ebp-8] 80070057h +
jmp loc_100B7A2  +
mov eax [ebp-4] +
mov ecx [eax] +
push ebx  +
push 400h  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
mov eax [ebp-4] +
cmp eax ebx +
jz loc_100B783  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-4] ebx +
cmp esi ebx +
jge loc_100B798  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-8] esi +
jmp loc_100B7A2  +
push 118h  +
call sub_1012B18  +
pop edi  +
pop esi  +
mov eax [ebp-4] +
cmp eax ebx +
pop ebx  +
jz loc_100B7B2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-8] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_100B7D7  +
cmp edx esi +
jbe loc_100B7DC  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_100B7F4  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_100AFBB  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_100B7F6  +
xor ecx ecx +
test eax eax +
jl loc_100B80D  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_100AFF2  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 490h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 38h  +
lea eax [ebp+var_44C] +
push ebx  +
push eax  +
mov [ebp+var_450] ebx +
mov [ebp+var_454] ebx +
mov [ebp+var_490] ebx +
mov [ebp+var_458] ebx +
mov [ebp+var_47C] ebx +
mov [ebp+var_45C] ebx +
mov [ebp+var_470] ebx +
mov [ebp+var_464] ebx +
mov [ebp+var_480] ebx +
mov [ebp+var_460] ebx +
mov [ebp+var_484] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_488] ebx +
mov [ebp+var_468] ebx +
mov [ebp+var_48C] ebx +
mov [ebp+var_474] ebx +
call memset  +
push 208h  +
lea eax [ebp+var_20C] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
cmp [ebp+arg_8] ebx +
jbe loc_100BA6C  +
mov eax [ebp+var_454] +
mov eax [esi+eax*4] +
cmp eax ebx +
jz loc_100BAB7  +
mov edi ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B902  +
cmp [ebp+var_490] ebx +
jnz loc_100BAD2  +
mov [ebp+var_490] 1 +
jmp loc_100BA4A  +
mov eax [ebp+var_454] +
push offset aLetter  +
push dword ptr [esi+eax*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100B9D3  +
mov edx [ebp+var_454] +
inc edx  +
mov [ebp+var_454] edx +
cmp edx [ebp+arg_8] +
jnb loc_100BAD2  +
cmp word ptr [ebp+var_458] bx +
jnz loc_100BAD2  +
lea eax [ebp+var_20C] +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100B948  +
sub eax edi +
sar eax 1 +
jnz loc_100BAD2  +
lea edi [esi+edx*4] +
mov eax [edi] +
cmp eax ebx +
jz loc_100BAD2  +
movzx eax word ptr [eax] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_100BAD2  +
mov ecx [edi] +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100B983  +
sub eax edi +
sar eax 1 +
cmp eax 2 +
jnz loc_100B9A1  +
cmp word ptr [ecx+2] 3Ah +
jnz loc_100BAD2  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100B9A6  +
sub eax edi +
sar eax 1 +
cmp eax 2 +
ja loc_100BAD2  +
movzx eax word ptr [ecx] +
push eax  +
call ds:towupper  +
movzx eax ax +
pop ecx  +
mov [ebp+var_458] eax +
jmp loc_100BA4A  +
mov eax [ebp+var_454] +
push offset aMount  +
push dword ptr [esi+eax*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100BAD2  +
mov edx [ebp+var_454] +
inc edx  +
mov [ebp+var_454] edx +
cmp edx [ebp+arg_8] +
jnb loc_100BAD2  +
cmp word ptr [ebp+var_458] bx +
jnz loc_100BAD2  +
lea eax [ebp+var_20C] +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100BA19  +
sub eax edi +
sar eax 1 +
jnz loc_100BAD2  +
mov eax [esi+edx*4] +
cmp eax ebx +
jz loc_100BAD2  +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100AC29  +
inc [ebp+var_454]  +
mov eax [ebp+var_454] +
cmp eax [ebp+arg_8] +
jb loc_100B8C2  +
cmp word ptr [ebp+var_458] bx +
jnz loc_100BB57  +
lea eax [ebp+var_20C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100BA75  +
sub eax edx +
sar eax 1 +
jnz loc_100BB57  +
push 2D8h  +
call ds:malloc  +
mov esi eax +
pop ecx  +
mov [ebp+var_480] esi +
cmp esi ebx +
jnz loc_100BAED  +
push 6Eh  +
call sub_1012B18  +
mov [ebp+var_450] 8007000Eh +
jmp loc_100BFB0  +
push offset aAssign  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100C0B8  +
push offset aAssign  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100C0B8  +
mov eax dword_101F928 +
mov ecx [eax] +
push esi  +
push 1Ah  +
push 41h  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
cmp edi ebx +
jl loc_100BEA9  +
push 2  +
pop eax  +
lea ecx [esi+50h] +
cmp dword ptr [ecx] 1 +
jnz loc_100BB1B  +
inc eax  +
add ecx 1Ch +
cmp eax 1Ah +
jl loc_100BB0D  +
cmp eax 1Ah +
jnz loc_100BB3C  +
cmp [esi+34h] ebx +
jnz loc_100BB2B  +
movzx eax word ptr [esi+1Ch] +
jmp loc_100BB43  +
cmp [esi+18h] ebx +
jnz loc_100BB35  +
movzx eax word ptr [esi] +
jmp loc_100BB43  +
push 17h  +
jmp loc_100BFA1  +
imul eax eax +
movzx eax word ptr [eax+esi] +
push esi  +
mov [ebp+var_458] eax +
call ds:free  +
pop ecx  +
mov [ebp+var_480] ebx +
push 4  +
mov eax offset unk_101F948 +
xor edx edx +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
cmps   +
mov edx offset unk_101F9D8 +
jz loc_100BC7F  +
push 4  +
mov edi edx +
pop ecx  +
mov esi eax +
xor edx edx +
cmps   +
jz loc_100BC7A  +
lea eax [ebp+var_47C] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_100BF82  +
mov eax [ebp+var_47C] +
lea edx [ebp+var_45C] +
push edx  +
push offset dword_10026B8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100BF82  +
cmp word ptr [ebp+var_458] bx +
jz loc_100BF3D  +
mov eax [ebp+var_45C] +
cmp eax ebx +
jz loc_100BF01  +
mov ecx [eax] +
lea edx [ebp+var_484] +
push edx  +
lea edx [ebp+var_460] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_100BEA9  +
cmp [ebp+var_484] ebx +
jz loc_100BEA5  +
mov eax [ebp+var_460] +
mov edx [eax] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100BC0F  +
sub eax esi +
sar eax 1 +
cmp eax 3 +
jnz loc_100BEA5  +
movzx eax word ptr [edx] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_100BEA5  +
mov eax [ebp+var_460] +
mov esi [eax] +
mov ecx offset asc_1001880 +
lea eax [esi+2] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100BE8B  +
cmp dx bx +
jz loc_100BC73  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100BE8B  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_100BC49  +
xor eax eax +
jmp loc_100BE90  +
mov edx offset unk_101F9D8 +
push 4  +
mov esi eax +
pop ecx  +
mov edi edx +
xor eax eax +
cmps   +
jnz loc_100BF9F  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_100BF9F  +
mov eax dword_101F940 +
or eax dword_101F944 +
jz loc_100BF9F  +
lea eax [ebp+var_470] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100BF82  +
mov eax [ebp+var_470] +
mov ecx [eax] +
lea edx [ebp+var_488] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_100BF82  +
mov eax [ebp+var_470] +
mov ecx [eax] +
lea edx [ebp+var_464] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100BF82  +
mov eax [ebp+var_464] +
mov ecx [eax] +
lea edx [ebp+var_474] +
push edx  +
lea edx [ebp+var_468] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
mov [ebp+var_478] esi +
jl loc_100BF82  +
xor ecx ecx +
cmp [ebp+var_488] ebx +
jle loc_100BD6C  +
mov eax [ebp+pv] +
mov edx [eax+18h] +
cmp edx dword_101F940 +
jnz loc_100BD60  +
mov edx [eax+1Ch] +
cmp edx dword_101F944 +
jz loc_100BDB7  +
inc ecx  +
add eax 50h +
cmp ecx [ebp+var_488] +
jl loc_100BD4A  +
cmp [ebp+pv] ebx +
jz loc_100BD86  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
cmp [ebp+var_468] ebx +
jz loc_100BDA0  +
push [ebp+var_468]  +
call ds:CoTaskMemFree  +
mov [ebp+var_468] ebx +
cmp word ptr [ebp+var_458] bx +
jnz loc_100BE74  +
push 179h  +
jmp loc_100BFA1  +
cmp [ebp+var_474] ebx +
mov [ebp+var_454] ebx +
jle loc_100BDFD  +
mov edx [eax+18h] +
mov ecx [ebp+var_468] +
mov esi [ecx+10h] +
mov [ebp+var_48C] ecx +
cmp esi edx +
jnz loc_100BDE3  +
mov esi [ecx+14h] +
cmp esi [eax+1Ch] +
jz loc_100BDFD  +
inc [ebp+var_454]  +
mov esi [ebp+var_454] +
add ecx 90h +
cmp esi [ebp+var_474] +
jl loc_100BDCE  +
mov ecx [ebp+var_474] +
cmp [ebp+var_454] ecx +
jnz loc_100BE16  +
mov esi [ebp+var_478] +
jmp loc_100BF82  +
mov eax [eax+10h] +
cmp eax 4 +
jz loc_100BD6C  +
cmp eax 3 +
jnz loc_100BE33  +
cmp dword_101F920 ebx +
jnz loc_100BD6C  +
mov ecx [ebp+var_48C] +
mov eax [ecx] +
cmp eax 1 +
jnz loc_100BE4A  +
cmp byte ptr [ecx+20h] 27h +
jz loc_100BD6C  +
cmp eax 2 +
jnz loc_100BE6A  +
mov edi [ebp+var_48C] +
push 4  +
add edi 20h +
pop ecx  +
mov esi offset dword_10012C0 +
xor eax eax +
cmps   +
jz loc_100BD6C  +
push 178h  +
jmp loc_100BFA1  +
mov eax [ebp+var_470] +
lea edx [ebp+var_464] +
push edx  +
push offset dword_10023A8  +
jmp loc_100BBAE  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_100BEA5  +
mov eax [ebp+var_45C] +
mov ecx [eax] +
push 1  +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi ebx +
jge loc_100BEC0  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_450] edi +
jmp loc_100BFB0  +
mov eax ds:dword_1001878 +
mov [ebp+var_414] eax +
mov eax ds:dword_100187C +
push 200h  +
mov [ebp+var_410] eax +
lea eax [ebp+var_40C] +
push ebx  +
push eax  +
call memset  +
mov ax word ptr [ebp+var_458] +
add esp 0Ch +
mov word ptr [ebp+var_414] ax +
lea edx [ebp+var_414] +
jmp loc_100BF59  +
mov eax [ebp+var_464] +
cmp eax ebx +
jz loc_100BF3D  +
push [ebp+var_458]  +
mov ecx [eax] +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
mov eax [ebp+var_464] +
cmp eax ebx +
jz loc_100BF7E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_464] ebx +
jmp loc_100BF7E  +
push offset dword_100124C  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100B7BE  +
lea edx [ebp+var_20C] +
mov eax [ebp+var_45C] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_45C] +
cmp eax ebx +
jz loc_100BF7E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_45C] ebx +
cmp esi ebx +
jge loc_100BF96  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_450] esi +
jmp loc_100BFB0  +
push 1Bh  +
call sub_1012B18  +
jmp loc_100BFB0  +
push 19h  +
call sub_1012B18  +
mov [ebp+var_450] 80070057h +
mov eax [ebp+var_47C] +
cmp eax ebx +
jz loc_100BFC6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_47C] ebx +
mov eax [ebp+var_45C] +
cmp eax ebx +
jz loc_100BFDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_45C] ebx +
mov eax [ebp+var_470] +
cmp eax ebx +
jz loc_100BFF2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_470] ebx +
mov eax [ebp+var_464] +
cmp eax ebx +
jz loc_100C008  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_464] ebx +
lea eax [ebp+var_44C] +
push eax  +
call sub_1004329  +
mov edi ds:CoTaskMemFree +
cmp [ebp+pv] ebx +
jz loc_100C030  +
push [ebp+pv]  +
call edi  +
mov [ebp+pv] ebx +
cmp [ebp+var_468] ebx +
jz loc_100C046  +
push [ebp+var_468]  +
call edi  +
mov [ebp+var_468] ebx +
cmp [ebp+var_460] ebx +
jz loc_100C091  +
xor esi esi +
cmp [ebp+var_484] ebx +
jle loc_100C07B  +
mov eax [ebp+var_460] +
lea eax [eax+esi*4] +
cmp [eax] ebx +
jz loc_100C072  +
push dword ptr [eax]  +
call edi  +
mov eax [ebp+var_460] +
mov [eax+esi*4] ebx +
inc esi  +
cmp esi [ebp+var_484] +
jl loc_100C058  +
cmp [ebp+var_460] ebx +
jz loc_100C091  +
push [ebp+var_460]  +
call edi  +
mov [ebp+var_460] ebx +
cmp [ebp+var_480] ebx +
jz loc_100C0A6  +
push [ebp+var_480]  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_490] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_450] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 3064h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 30h  +
lea eax [ebp+var_3034] +
push ebx  +
push eax  +
mov [ebp+var_3038] ebx +
mov [ebp+var_3058] ebx +
mov [ebp+var_3040] ebx +
mov [ebp+var_304C] ebx +
mov [ebp+var_3054] ebx +
mov [ebp+var_3048] ebx +
mov dword ptr [ebp+pv] ebx +
mov [ebp+var_303C] ebx +
mov [ebp+var_3050] ebx +
call memset  +
push 3000h  +
lea eax [ebp+var_3004] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100C167  +
push 241h  +
call sub_1012B18  +
jmp loc_100C17F  +
mov ecx [ebp+arg_4] +
cmp [ecx] ebx +
jz loc_100C18E  +
push offset aFilesystems  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_3038] 80070057h +
jmp loc_100C6BC  +
push 4  +
mov edx offset unk_101F9D8 +
mov esi eax +
pop ecx  +
mov edi edx +
xor eax eax +
cmps   +
jnz loc_100C26B  +
mov eax dword_101F928 +
mov ecx [eax] +
lea esi [ebp+var_3058] +
push esi  +
push 0Dh  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3058] +
mov ecx [eax] +
lea edx [ebp+var_3040] +
push edx  +
push offset dword_10026A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3040] +
mov ecx [eax] +
lea edx [ebp+var_3034] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3040] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3040] +
mov ecx [eax] +
lea edx [ebp+var_3050] +
push edx  +
lea edx [ebp+var_303C] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_100C307  +
lea eax [ebp+var_304C] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_304C] +
mov ecx [eax] +
lea edx [ebp+var_3054] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3054] +
mov ecx [eax] +
lea edx [ebp+var_3034] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_304C] +
mov ecx [eax] +
lea edx [ebp+var_3048] +
push edx  +
push offset dword_10026C8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3048] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100C30D  +
mov eax [ebp+var_3048] +
mov ecx [eax] +
lea edx [ebp+var_3050] +
push edx  +
lea edx [ebp+var_303C] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_100C324  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_3038] esi +
jmp loc_100C6BC  +
push 242h  +
call sub_1012B18  +
mov ebx 230h +
push ebx  +
call sub_1012B18  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 244h  +
call sub_10124CD  +
push dword ptr [ebp+pv]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_3004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_3004] +
push eax  +
call sub_1012604  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 245h  +
call sub_10124CD  +
push [ebp+var_300C]  +
lea eax [ebp+var_2004] +
push eax  +
call sub_10127DF  +
lea eax [ebp+var_2004] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_3004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_3004] +
push eax  +
call sub_1012604  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 297h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
push 298h  +
call sub_10124CD  +
push dword ptr [ebp+var_3020]  +
lea eax [ebp+var_2004] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_3004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 20h +
lea eax [ebp+var_3004] +
push eax  +
call sub_1012604  +
push 243h  +
call sub_1012B18  +
xor eax eax +
cmp [ebp+var_3050] eax +
jnz loc_100C458  +
push ebx  +
call sub_1012B18  +
push 24Bh  +
call sub_1012B18  +
jmp loc_100C6BA  +
cmp [ebp+var_3050] eax +
mov [ebp+var_305C] eax +
jle loc_100C6BA  +
xor edi edi +
jmp loc_100C473  +
mov ebx 230h +
push ebx  +
call sub_1012B18  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 244h  +
call sub_10124CD  +
xor eax eax +
mov word ptr [ebp+var_2004] ax +
mov eax [ebp+var_303C] +
lea eax [edi+eax+8Ch] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
mov ecx [ebp+var_303C] +
xor eax eax +
cmp ax [edi+ecx+4] +
jz loc_100C51A  +
push esi  +
lea eax [ebp+var_1004] +
push eax  +
push 355h  +
call sub_10124CD  +
mov eax [ebp+var_303C] +
movzx eax word ptr [edi+eax+4] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
call sub_101286E  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1004] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1804] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
mov eax [ebp+var_303C] +
mov eax [edi+eax] +
test al 1 +
jz loc_100C536  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 248h  +
jmp loc_100C547  +
test al 4 +
jz loc_100C560  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 249h  +
call sub_10124CD  +
lea eax [ebp+var_1804] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
lea eax [ebp+var_2004] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_3004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_3004] +
push eax  +
call sub_1012604  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 246h  +
call sub_10124CD  +
xor eax eax +
and [ebp+var_3060] eax +
mov word ptr [ebp+var_2004] ax +
mov [ebp+var_3064] 1 +
lea ebx [edi+0Ch] +
mov eax [ebp+var_303C] +
cmp dword ptr [ebx+eax] 0 +
jz loc_100C672  +
cmp [ebp+var_3064] 0 +
jnz loc_100C5F7  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 24Ah  +
call sub_10124CD  +
lea eax [ebp+var_1804] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
mov eax [ebp+var_303C] +
push dword ptr [ebx+eax]  +
and [ebp+var_3064] 0 +
lea eax [ebp+var_1804] +
push eax  +
call sub_10127DF  +
lea eax [ebp+var_1804] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
mov eax [ebp+var_303C] +
mov ecx [ebx+eax] +
cmp ecx [edi+eax+8] +
jnz loc_100C65C  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 248h  +
call sub_10124CD  +
lea eax [ebp+var_1804] +
push eax  +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
call sub_100B7BE  +
inc [ebp+var_3060]  +
add ebx 4 +
cmp [ebp+var_3060] 20h +
jb loc_100C5B8  +
lea eax [ebp+var_2004] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_3004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_3004] +
push eax  +
call sub_1012604  +
inc [ebp+var_305C]  +
mov eax [ebp+var_305C] +
add edi 0CCh +
cmp eax [ebp+var_3050] +
jl loc_100C46E  +
xor ebx ebx +
mov eax [ebp+var_3058] +
cmp eax ebx +
jz loc_100C6D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3058] ebx +
mov eax [ebp+var_3040] +
cmp eax ebx +
jz loc_100C6E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3040] ebx +
mov eax [ebp+var_304C] +
cmp eax ebx +
jz loc_100C6FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_304C] ebx +
mov eax [ebp+var_3054] +
cmp eax ebx +
jz loc_100C714  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3054] ebx +
mov eax [ebp+var_3048] +
cmp eax ebx +
jz loc_100C72A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_3048] ebx +
lea eax [ebp+var_3034] +
push eax  +
call sub_100B049  +
mov esi ds:CoTaskMemFree +
cmp dword ptr [ebp+pv] ebx +
jz loc_100C752  +
push dword ptr [ebp+pv]  +
call esi  +
mov dword ptr [ebp+pv] ebx +
cmp [ebp+var_303C] ebx +
jz loc_100C762  +
push [ebp+var_303C]  +
call esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3038] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
push 1000h  +
push eax  +
mov dword ptr [ebp+var_100C] eax +
mov [ebp+var_1010] eax +
lea eax [ebp+var_1004] +
push eax  +
mov [ebp+dwMessageId] 80004005h +
call memset  +
add esp 0Ch +
mov esi 400h +
mov eax [edi] +
lea ecx [ebp+var_100C] +
push ecx  +
lea ecx [ebp+dwMessageId] +
push ecx  +
push edi  +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jl loc_100C85C  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 1A6h  +
call sub_10124CD  +
push dword ptr [ebp+var_100C]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1004] +
push eax  +
call sub_1012604  +
cmp [ebp+dwMessageId] 0 +
jz loc_100C88B  +
cmp [ebp+dwMessageId] 80042409h +
jnz loc_100C8A2  +
mov eax dword ptr [ebp+var_100C] +
fild  dword ptr [ebp+var_100C] +
test eax eax +
jge loc_100C84F  +
fadd  ds:dbl_10018D8 +
fcomp  ds:dbl_10018D0 +
fnstsw  ax +
test ah 44h +
jnp loc_100C88B  +
push 12Ch  +
call ds:Sleep  +
test ebx ebx +
jge loc_100C7CF  +
push offset WideCharStr  +
call sub_1012503  +
push ebx  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_1010] ebx +
mov eax [ebp+var_1010] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
push offset WideCharStr  +
call sub_1012503  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
jmp loc_100C891  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1804h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 1800h  +
lea eax [ebp+var_1804] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 26Dh  +
call sub_10124CD  +
cmp [ebp+arg_0] 1 +
push esi  +
lea eax [ebp+var_804] +
push eax  +
jnz loc_100C926  +
push 269h  +
jmp loc_100C945  +
cmp [ebp+arg_0] 2 +
jnz loc_100C933  +
push 26Ah  +
jmp loc_100C945  +
cmp [ebp+arg_0] 3 +
jnz loc_100C940  +
push 26Bh  +
jmp loc_100C945  +
push 26Ch  +
call sub_10124CD  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1804] +
push eax  +
call sub_1012604  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] 0 +
mov [ebp+var_2] 0 +
mov [ebp+var_1] 0 +
mov [ebp+var_3] 1 +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
cmp [ebp+arg_8] ebx +
jbe loc_100CADF  +
mov edi ds:_wcsicmp +
mov [ebp+var_8] 1 +
mov eax [ebp+arg_4] +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_100CB08  +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100C9F1  +
cmp [ebp+var_4] al +
jnz loc_100CB20  +
mov [ebp+var_4] 1 +
jmp loc_100CAD2  +
push offset aPolicy  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CA5E  +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_8] +
jnb loc_100CB20  +
mov eax [ebp+arg_4] +
inc ebx  +
inc [ebp+var_8]  +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_100CB20  +
push offset aOnlineall  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CA50  +
push offset aOfflineall  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100CA50  +
push offset aOfflineshared  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CB20  +
dec ebx  +
dec [ebp+var_8]  +
mov [ebp+var_2] 1 +
mov [ebp+var_3] 0 +
jmp loc_100CAD2  +
push offset aOnlineall  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CA88  +
cmp [ebp+var_2] al +
jz loc_100CB20  +
cmp [ebp+var_1] al +
jnz loc_100CB20  +
mov [ebp+var_C] 1 +
jmp loc_100CACE  +
push offset aOfflineall  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CAAE  +
cmp [ebp+var_2] al +
jz loc_100CB20  +
cmp [ebp+var_1] al +
jnz loc_100CB20  +
mov [ebp+var_C] 3 +
jmp loc_100CACE  +
push offset aOfflineshared  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100CB20  +
cmp [ebp+var_2] al +
jz loc_100CB20  +
cmp [ebp+var_1] al +
jnz loc_100CB20  +
mov [ebp+var_C] 2 +
mov [ebp+var_1] 1 +
inc ebx  +
inc [ebp+var_8]  +
cmp ebx [ebp+arg_8] +
jb loc_100C9C1  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push offset dword_1002708  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_100CB38  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax esi +
jmp loc_100CB87  +
push offset aSan  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100CB87  +
push offset aSan  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100CB87  +
cmp [ebp+var_3] 1 +
mov eax [ebp+var_10] +
mov ecx [eax] +
jnz loc_100CB57  +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push [ebp+var_C]  +
mov esi eax +
call sub_100C8CA  +
jmp loc_100CB60  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_10] +
test eax eax +
jz loc_100CB71  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_10] 0 +
test esi esi +
jl loc_100CAF8  +
cmp [ebp+var_3] 0 +
jnz loc_100CB85  +
push 268h  +
call sub_1012B18  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
push 38h  +
mov [ebp+var_54] eax +
lea eax [ebp+var_3C] +
push ebx  +
push eax  +
mov [ebp+var_40] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_50] ebx +
mov [ebp+var_48] ebx +
mov [ebp+dwMessageId] ebx +
call memset  +
add esp 0Ch +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_74] +
stos   +
lea eax [ebp+var_4C] +
push eax  +
call sub_10130DC  +
mov edi eax +
cmp edi ebx +
jl loc_100CC39  +
mov eax [ebp+var_4C] +
mov ecx [eax] +
lea edx [ebp+var_3C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_100CC39  +
test [ebp+arg_18] 1 +
jnz loc_100CC22  +
test [ebp+var_14] 200000h +
jz loc_100CC22  +
push 28Ah  +
call sub_1012B18  +
mov [ebp+var_40] 80070057h +
jmp loc_100CCF6  +
mov eax [ebp+var_4C] +
mov ecx [eax] +
lea edx [ebp+var_50] +
push edx  +
push offset dword_1002718  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jge loc_100CC4D  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_40] edi +
jmp loc_100CCF6  +
mov eax [ebp+var_50] +
mov ecx [eax] +
lea edx [ebp+var_48] +
push edx  +
push dword ptr [ebp+arg_18]  +
push [ebp+var_54]  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_100CCA3  +
mov edi offset WideCharStr +
push edi  +
call sub_1012503  +
cmp [ebp+arg_14] ebx +
jnz loc_100CCEC  +
push [ebp+var_48]  +
call sub_100C77E  +
mov [ebp+var_40] eax +
cmp eax ebx +
jnz loc_100CCF6  +
mov eax [ebp+var_48] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_100CCB4  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_40] esi +
jmp loc_100CCF6  +
cmp [ebp+dwMessageId] ebx +
jge loc_100CCDF  +
cmp [ebp+dwMessageId] 8004243Dh +
jz loc_100CCCD  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
jmp loc_100CCD2  +
push 28Fh  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_40] eax +
jmp loc_100CCF6  +
push edi  +
call sub_1012503  +
push 1A5h  +
jmp loc_100CCF1  +
push 1A7h  +
call sub_1012B18  +
mov eax [ebp+var_4C] +
cmp eax ebx +
jz loc_100CD06  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4C] ebx +
mov eax [ebp+var_50] +
cmp eax ebx +
jz loc_100CD16  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_50] ebx +
mov eax [ebp+var_48] +
cmp eax ebx +
jz loc_100CD26  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_48] ebx +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004329  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_40] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_4C] +
stos   +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_4] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_C] ebx +
mov [ebp+dwMessageId] 80004005h +
mov [ebp+var_8] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_18] ebx +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push offset nullsub_1  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push [ebp+arg_18]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
mov edi offset WideCharStr +
push edi  +
call sub_1012503  +
cmp [ebp+arg_14] ebx +
jnz loc_100CE48  +
push [ebp+var_C]  +
call sub_100C77E  +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_100CFB6  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4C] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
cmp [ebp+dwMessageId] ebx +
jge loc_100CE3B  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_4] eax +
push edi  +
call sub_1012503  +
push 1A5h  +
jmp loc_100CE4D  +
push 1A7h  +
call sub_1012B18  +
cmp dword_101F940 ebx +
jnz loc_100CE66  +
cmp dword_101F944 ebx +
jz loc_100CFB6  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100CEAB  +
mov eax [ebp+var_20] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
lea edx [ebp+var_24] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_100CEBF  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_4] esi +
jmp loc_100CFB6  +
mov eax [ebp+var_24] +
cmp eax ebx +
jnz loc_100CEDC  +
push 1C4h  +
call sub_1012B18  +
mov [ebp+var_4] 8000FFFFh +
jmp loc_100CFB6  +
xor ecx ecx +
cmp [ebp+var_18] ebx +
mov ebx dword_101F940 +
jbe loc_100CF09  +
mov edx [eax+10h] +
mov [ebp+var_2C] eax +
cmp edx ebx +
jnz loc_100CEFE  +
mov edx [eax+14h] +
cmp edx dword_101F944 +
jz loc_100CF09  +
inc ecx  +
add eax 90h +
cmp ecx [ebp+var_18] +
jb loc_100CEE9  +
cmp ecx [ebp+var_18] +
jnz loc_100CF24  +
push 1C2h  +
call sub_1012B18  +
mov [ebp+var_4] 80004005h +
jmp loc_100CFB4  +
mov edx offset unk_101F948 +
mov esi offset dword_1001260 +
mov edi edx +
movs   +
movs   +
movs   +
xor ecx ecx +
movs   +
cmp [ebp+var_28] ecx +
jbe loc_100CFB4  +
mov eax [ebp+pv] +
mov esi [eax+18h] +
cmp esi ebx +
jnz loc_100CF50  +
mov esi [eax+1Ch] +
cmp esi dword_101F944 +
jz loc_100CF5B  +
inc ecx  +
add eax 50h +
cmp ecx [ebp+var_28] +
jb loc_100CF3E  +
jmp loc_100CFB4  +
mov ecx [eax+10h] +
cmp ecx 4 +
jz loc_100CFA9  +
mov esi [ebp+var_2C] +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_100CF73  +
cmp byte ptr [esi+20h] 27h +
jz loc_100CFA9  +
cmp ecx 2 +
jnz loc_100CF89  +
push 4  +
lea edi [esi+20h] +
pop ecx  +
mov esi offset dword_10012C0 +
xor ebx ebx +
cmps   +
jz loc_100CFA9  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100CFA4  +
cmp dword_101F920 0 +
mov esi offset unk_101F9D8 +
jnz loc_100CFAE  +
mov esi offset dword_1001260 +
jmp loc_100CFAE  +
lea esi [eax+28h] +
jmp loc_100CFAE  +
mov esi offset unk_101F9D8 +
mov edi edx +
movs   +
movs   +
movs   +
movs   +
xor ebx ebx +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_100CFC6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_100CFD6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_100CFE6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_20] +
cmp eax ebx +
jz loc_100CFF6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_20] ebx +
mov esi ds:CoTaskMemFree +
cmp [ebp+pv] ebx +
jz loc_100D009  +
push [ebp+pv]  +
call esi  +
mov [ebp+pv] ebx +
cmp [ebp+var_24] ebx +
jz loc_100D013  +
push [ebp+var_24]  +
call esi  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi eax +
jmp loc_100D04C  +
push [ebp+arg_0]  +
lea eax [esi+0Ch] +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_100D048  +
mov esi [esi+8] +
jmp loc_100D04C  +
mov edi esi +
mov esi [esi] +
cmp byte ptr [esi+21h] 0 +
jz loc_100D033  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
xor eax eax +
xor ecx ecx +
movzx edx ax +
push ebx  +
mov ebx [ebp+0Ch] +
mov eax edx +
push esi  +
push edi  +
shl edx 10h +
or eax edx +
lea edi [ebp-10h] +
stos   +
mov [ebp-24h] ecx +
mov [ebp-20h] ecx +
mov [ebp-40h] ecx +
mov [ebp-30h] ecx +
mov [ebp-1Ch] ecx +
mov [ebp-4Ch] ecx +
mov [ebp-44h] ecx +
mov [ebp-28h] ecx +
mov [ebp-48h] ecx +
mov [ebp-3Ch] ecx +
mov [ebp-34h] ecx +
mov [ebp-2Ch] ecx +
mov [ebp-38h] ecx +
mov [ebp-14h] ecx +
stos   +
cmp [ebp+10h] ecx +
jbe loc_100D4A3  +
mov dword ptr [ebp-18h] 1 +
mov eax [ebp-14h] +
lea esi [ebx+eax*4] +
mov eax [esi] +
test eax eax +
jz loc_100D45B  +
mov edi ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D0FD  +
cmp [ebp-24h] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-24h] 1 +
jmp loc_100D3F8  +
push offset aFs  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D146  +
cmp [ebp-20h] eax +
jnz loc_100D3D0  +
cmp [ebp-28h] eax +
jnz loc_100D3D0  +
mov eax [ebp-18h] +
cmp eax [ebp+10h] +
jnb loc_100D3D0  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
mov eax [ebx+eax*4] +
inc dword ptr [ebp-18h]  +
test eax eax +
jz loc_100D3D0  +
mov [ebp-20h] eax +
jmp loc_100D3F8  +
push offset aRevision  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D21B  +
cmp [ebp-44h] eax +
jnz loc_100D3D0  +
cmp [ebp-28h] eax +
jnz loc_100D3D0  +
mov eax [ebp-18h] +
cmp eax [ebp+10h] +
jnb loc_100D3D0  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
mov ecx [ebx+eax*4] +
inc dword ptr [ebp-18h]  +
test ecx ecx +
jz loc_100D3D0  +
mov eax ecx +
mov dword ptr [ebp-44h] 1 +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100D197  +
sub eax esi +
sar eax 1 +
cmp eax 4 +
jnz loc_100D1CA  +
lea eax [ebp-0Ah] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-0Eh] +
push eax  +
push offset a1hx_1hx1hx  +
push ecx  +
call ds:swscanf  +
add esp 14h +
cmp eax 3 +
jmp loc_100D1F5  +
cmp eax 5 +
jnz loc_100D3D0  +
lea eax [ebp-0Ah] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-0Eh] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push offset a1hx1hx_1hx1hx  +
push ecx  +
call ds:swscanf  +
add esp 18h +
cmp eax 4 +
jnz loc_100D3D0  +
mov eax [ebp-10h] +
shl eax 4 +
or eax [ebp-0Eh] +
shl eax 4 +
or eax [ebp-0Ch] +
shl eax 4 +
or eax [ebp-0Ah] +
movzx eax ax +
mov [ebp-40h] eax +
jmp loc_100D3F8  +
push offset aRecommended  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D251  +
cmp [ebp-28h] eax +
jnz loc_100D3D0  +
cmp [ebp-20h] eax +
jnz loc_100D3D0  +
cmp [ebp-44h] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-28h] 1 +
jmp loc_100D3F8  +
push offset aQuick  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D275  +
cmp [ebp-48h] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-48h] 1 +
jmp loc_100D3F8  +
push offset aCompress  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D299  +
cmp [ebp-34h] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-34h] 1 +
jmp loc_100D3F8  +
push offset aDuplicate  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D2BD  +
cmp [ebp-2Ch] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-2Ch] 1 +
jmp loc_100D3F8  +
push offset aNowait  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D2E1  +
cmp [ebp-38h] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-38h] 1 +
jmp loc_100D3F8  +
push offset aOverride  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D305  +
cmp [ebp-3Ch] eax +
jnz loc_100D3D0  +
mov dword ptr [ebp-3Ch] 1 +
jmp loc_100D3F8  +
push offset aLabel  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D345  +
cmp [ebp-30h] eax +
jnz loc_100D3D0  +
mov eax [ebp-18h] +
cmp eax [ebp+10h] +
jnb loc_100D3D0  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
mov eax [ebx+eax*4] +
inc dword ptr [ebp-18h]  +
test eax eax +
jz loc_100D3D0  +
mov [ebp-30h] eax +
jmp loc_100D3F8  +
push offset aUnit  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D3D0  +
cmp [ebp-1Ch] eax +
jnz loc_100D3D0  +
mov eax [ebp+10h] +
cmp [ebp-18h] eax +
jnb loc_100D3D0  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
inc dword ptr [ebp-18h]  +
lea edi [ebx+eax*4] +
mov ecx [edi] +
test ecx ecx +
jz loc_100D3D0  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100D378  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
dec esi  +
pop ecx  +
pop ecx  +
cmp eax esi +
jb loc_100D3D0  +
push 0Ah  +
lea eax [ebp-4Ch] +
push eax  +
push dword ptr [edi]  +
call ds:wcstoul  +
add esp 0Ch +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_100D3D0  +
mov ecx [ebp-4Ch] +
movzx ecx word ptr [ecx] +
push 6Bh  +
pop edx  +
cmp dx cx +
jz loc_100D3EB  +
push 4Bh  +
pop edx  +
cmp dx cx +
jz loc_100D3EB  +
xor eax eax +
cmp ax cx +
jz loc_100D3F8  +
push offset aFormat  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100D52F  +
cmp eax 3FFFFFh +
ja loc_100D3D0  +
shl eax 0Ah +
mov [ebp-1Ch] eax +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
inc dword ptr [ebp-18h]  +
cmp eax [ebp+10h] +
jb loc_100D0C4  +
xor esi esi +
cmp [ebp-2Ch] esi +
jz loc_100D476  +
mov eax [ebp-20h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_100D417  +
sub eax edx +
sar eax 1 +
push eax  +
push offset aUdf  +
push dword ptr [ebp-20h]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_100D476  +
push 296h  +
call sub_1012B18  +
mov eax [ebp-24h] +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
jmp loc_100D52F  +
push offset aFormat  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100D52F  +
cmp dword ptr [ebp-1Ch] 1000h +
jbe loc_100D48B  +
cmp [ebp-34h] esi +
jz loc_100D48B  +
push 1A9h  +
jmp loc_100D440  +
***
cmp [ebp-1Ch] esi +
jbe loc_100D4A3  +
mov ecx [ebp-1Ch] +
xor eax eax +
test cl 1 +
jz loc_100D49F  +
test eax eax +
jnz loc_100D4C7  +
inc eax  +
shr ecx 1 +
jnz loc_100D495  +
push 4  +
mov edx offset unk_101F948 +
pop ecx  +
mov edi edx +
mov esi offset dword_1001260 +
xor eax eax +
cmps   +
jnz loc_100D4D1  +
push 1A4h  +
call sub_1012B18  +
jmp loc_100D3E1  +
***
push 1ABh  +
jmp loc_100D440  +
***
xor ecx ecx +
xor eax eax +
cmp [ebp-3Ch] ecx +
jz loc_100D4DB  +
inc eax  +
cmp [ebp-48h] ecx +
jz loc_100D4E3  +
or eax 2 +
cmp [ebp-34h] ecx +
jz loc_100D4EB  +
or eax 4 +
cmp [ebp-2Ch] ecx +
jz loc_100D4F3  +
or eax 8 +
push 4  +
pop ecx  +
push eax  +
push dword ptr [ebp-38h]  +
mov esi edx +
push dword ptr [ebp-30h]  +
mov edi offset unk_101F9D8 +
push dword ptr [ebp-1Ch]  +
xor edx edx +
cmps   +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-20h]  +
jnz loc_100D51D  +
call sub_100CD48  +
jmp loc_100D522  +
call sub_100CB93  +
mov ecx eax +
mov eax [ebp-24h] +
neg eax  +
sbb eax eax +
not eax  +
and eax ecx +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
call sub_100D022  +
mov [ebp+var_4] eax +
cmp eax [esi+4] +
jz loc_100D573  +
add eax 0Ch +
push eax  +
push [ebp+arg_4]  +
call sub_1009BBD  +
test al al +
jnz loc_100D573  +
lea eax [ebp+var_4] +
jmp loc_100D57C  +
mov eax [esi+4] +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 44Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
mov eax ds:dword_1001878 +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor edi edi +
mov [ebp-414h] eax +
mov eax ds:dword_100187C +
push 200h  +
mov [ebp-410h] eax +
lea eax [ebp-40Ch] +
push edi  +
push eax  +
mov [ebp-418h] edi +
mov [ebp-428h] edi +
mov [ebp-44Ch] edi +
mov [ebp-438h] edi +
mov [ebp-42Ch] edi +
call memset  +
push 208h  +
lea eax [ebp-20Ch] +
push edi  +
push eax  +
mov [ebp-43Ch] edi +
mov [ebp-448h] edi +
mov [ebp-41Ch] edi +
mov [ebp-444h] edi +
mov [ebp-440h] edi +
mov [ebp-420h] edi +
mov [ebp-424h] edi +
call memset  +
add esp 18h +
cmp [ebp+10h] edi +
jbe loc_100D898  +
mov dword ptr [ebp-430h] 1 +
mov eax [ebp-428h] +
lea esi [ebx+eax*4] +
mov eax [esi] +
cmp eax edi +
jz loc_100D8B7  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D682  +
cmp [ebp-44Ch] edi +
jnz loc_100D8D2  +
mov dword ptr [ebp-44Ch] 1 +
jmp loc_100D87D  +
push offset aDismount  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D6B0  +
cmp [ebp-43Ch] edi +
jnz loc_100D8D2  +
mov dword ptr [ebp-43Ch] 1 +
jmp loc_100D87D  +
push offset aAll  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D708  +
cmp [ebp-42Ch] di +
jnz loc_100D8D2  +
lea eax [ebp-20Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100D6D9  +
sub eax edx +
sar eax 1 +
jnz loc_100D8D2  +
cmp [ebp-438h] edi +
jnz loc_100D8D2  +
mov dword ptr [ebp-438h] 1 +
jmp loc_100D87D  +
push offset aLetter  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D7F6  +
cmp [ebp-42Ch] di +
jnz loc_100D8D2  +
lea eax [ebp-20Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100D735  +
sub eax edx +
sar eax 1 +
jnz loc_100D8D2  +
cmp [ebp-438h] edi +
jnz loc_100D8D2  +
mov eax [ebp-430h] +
cmp eax [ebp+10h] +
jnb loc_100D8D2  +
inc dword ptr [ebp-428h]  +
mov eax [ebp-428h] +
inc dword ptr [ebp-430h]  +
lea esi [ebx+eax*4] +
mov eax [esi] +
cmp eax edi +
jz loc_100D8D2  +
movzx eax word ptr [eax] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_100D8D2  +
mov edx [esi] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100D79D  +
sub eax esi +
sar eax 1 +
cmp eax 2 +
jnz loc_100D7BB  +
cmp word ptr [edx+2] 3Ah +
jnz loc_100D8D2  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100D7C0  +
sub eax esi +
sar eax 1 +
cmp eax 2 +
ja loc_100D8D2  +
movzx eax word ptr [edx] +
push eax  +
mov [ebp-42Ch] eax +
call ds:towupper  +
movzx eax ax +
pop ecx  +
mov [ebp-42Ch] eax +
jmp loc_100D87D  +
push offset aMount  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100D8D2  +
cmp [ebp-42Ch] di +
jnz loc_100D8D2  +
lea eax [ebp-20Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100D823  +
sub eax edx +
sar eax 1 +
jnz loc_100D8D2  +
cmp [ebp-438h] edi +
jnz loc_100D8D2  +
mov eax [ebp-430h] +
cmp eax [ebp+10h] +
jnb loc_100D8D2  +
inc dword ptr [ebp-428h]  +
mov eax [ebp-428h] +
mov eax [ebx+eax*4] +
inc dword ptr [ebp-430h]  +
cmp eax edi +
jz loc_100D8D2  +
push eax  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
call sub_100AC29  +
inc dword ptr [ebp-428h]  +
mov eax [ebp-428h] +
inc dword ptr [ebp-430h]  +
cmp eax [ebp+10h] +
jb loc_100D642  +
push 4  +
mov ebx offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_100D8ED  +
push 0EBh  +
jmp loc_100DC14  +
push offset aRemove  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100DD50  +
push offset aRemove  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100DD50  +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_100D9F1  +
lea eax [ebp-20Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100D90A  +
sub eax edx +
sar eax 1 +
jz loc_100D924  +
push 0E8h  +
jmp loc_100DC14  +
lea eax [ebp-444h] +
push eax  +
call sub_1004390  +
mov esi eax +
xor edi edi +
cmp esi edi +
jl loc_100DC74  +
mov eax [ebp-444h] +
mov ecx [eax] +
lea edx [ebp-440h] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_100DC74  +
cmp [ebp-42Ch] di +
jnz loc_100D99E  +
mov eax [ebp-440h] +
mov ecx [eax] +
lea edx [ebp-42Ch] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi 1 +
jnz loc_100D996  +
push 0EAh  +
jmp loc_100DB3F  +
cmp esi edi +
jl loc_100DC74  +
push dword ptr [ebp-42Ch]  +
mov eax [ebp-440h] +
push dword_101F944  +
mov ecx [eax] +
push dword_101F940  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jl loc_100DC74  +
push 0EDh  +
call sub_1012B18  +
mov [ebp-418h] edi +
cmp [ebp-43Ch] edi +
jz loc_100DC99  +
push 189h  +
call sub_1012B18  +
jmp loc_100DC99  +
call sub_10181FD  +
lea eax [ebp-448h] +
push eax  +
call sub_10130DC  +
mov esi eax +
xor edi edi +
cmp esi edi +
jl loc_100DC74  +
mov eax [ebp-448h] +
mov ecx [eax] +
lea edx [ebp-41Ch] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_100DC74  +
cmp [ebp-438h] edi +
jnz loc_100DA7E  +
cmp [ebp-43Ch] edi +
jz loc_100DB4F  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
lea edx [ebp-420h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi edi +
jl loc_100DC74  +
cmp dword ptr [ebp-424h] 1 +
jle loc_100DB4F  +
push 1BAh  +
jmp loc_100DC14  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
lea edx [ebp-420h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi edi +
jl loc_100DC74  +
push ebx  +
lea eax [ebp-434h] +
push eax  +
mov ecx offset unk_101F970 +
call sub_100D545  +
mov eax [eax] +
cmp eax dword_101F974 +
jz loc_100DAE9  +
mov ax [eax+1Ch] +
push 1  +
mov [ebp-414h] ax +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-414h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_100DAF5  +
jmp loc_100DC74  +
cmp [ebp-424h] edi +
jz loc_100DC0F  +
xor esi esi +
cmp [ebp-424h] edi +
jle loc_100DC55  +
mov edx [ebp-420h] +
mov eax [ebp-41Ch] +
mov ecx [eax] +
push 1  +
push dword ptr [edx+esi*4]  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
test edi edi +
jl loc_100DB38  +
push 0EDh  +
call sub_1012B18  +
inc esi  +
cmp esi [ebp-424h] +
jl loc_100DB03  +
jmp loc_100DC55  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-418h] edi +
jmp loc_100DC99  +
mov eax [ebp-42Ch] +
cmp ax di +
jz loc_100DB69  +
mov [ebp-414h] ax +
lea edx [ebp-414h] +
jmp loc_100DB9E  +
lea eax [ebp-20Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100DB72  +
sub eax edx +
sar eax 1 +
jz loc_100DBBC  +
push offset dword_100124C  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
call sub_100B7BE  +
lea edx [ebp-20Ch] +
mov eax [ebp-41Ch] +
mov ecx [eax] +
push 1  +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jge loc_100DC4B  +
jmp loc_100DC74  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
lea edx [ebp-420h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100DC99  +
cmp dword ptr [ebp-424h] 0 +
jz loc_100DBF3  +
mov edx [ebp-420h] +
push 1  +
push dword ptr [edx]  +
jmp loc_100DC39  +
push ebx  +
lea eax [ebp-434h] +
push eax  +
mov ecx offset unk_101F970 +
call sub_100D545  +
mov eax [eax] +
cmp eax dword_101F974 +
jnz loc_100DC25  +
push 0EAh  +
call sub_1012B18  +
mov dword ptr [ebp-418h] 80070057h +
jmp loc_100DC99  +
mov ax [eax+1Ch] +
push 1  +
lea edx [ebp-414h] +
mov [ebp-414h] ax +
push edx  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jl loc_100DC74  +
push 0EDh  +
call sub_1012B18  +
cmp dword ptr [ebp-43Ch] 0 +
jz loc_100DC99  +
mov eax [ebp-41Ch] +
mov ecx [eax] +
push 1  +
push 1  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jge loc_100DC88  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-418h] esi +
jmp loc_100DC99  +
push 187h  +
call sub_1012B18  +
and dword ptr [ebp-418h] 0 +
mov eax [ebp-448h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100DCB1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-448h] ebx +
mov eax [ebp-41Ch] +
cmp eax ebx +
jz loc_100DCC7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-41Ch] ebx +
mov eax [ebp-444h] +
cmp eax ebx +
jz loc_100DCDD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-444h] ebx +
mov eax [ebp-440h] +
cmp eax ebx +
jz loc_100DCF3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-440h] ebx +
cmp [ebp-420h] ebx +
jnz loc_100DD3E  +
xor edi edi +
cmp [ebp-424h] ebx +
jle loc_100DD3E  +
mov esi ds:CoTaskMemFree +
mov eax [ebp-420h] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_100DD25  +
push dword ptr [eax]  +
call esi  +
mov eax [ebp-420h] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [ebp-424h] +
jl loc_100DD0B  +
cmp [ebp-420h] ebx +
jz loc_100DD3E  +
push dword ptr [ebp-420h]  +
call esi  +
mov eax [ebp-44Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-418h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
lea edx [ebp+var_4] +
push edx  +
mov [esi] ebx +
mov [esi+4] ebx +
push offset dword_10023A8  +
mov [edi] ebx +
mov [edi+4] ebx +
mov ecx [eax] +
push eax  +
mov [ebp+var_4] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_C] ebx +
call dword ptr [ecx]  +
cmp eax ebx +
mov [ebp+arg_4] eax +
jl loc_100DE0D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov ecx [ebp+var_4] +
mov [ebp+arg_4] eax +
cmp ecx ebx +
jz loc_100DDCA  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
xor ecx ecx +
mov [ebp+var_4] ecx +
cmp [ebp+arg_4] ebx +
jl loc_100DE10  +
mov edx [ebp+var_C] +
cmp edx ebx +
jle loc_100DE10  +
mov eax [ebp+pv] +
add eax 20h +
mov [ebp+arg_8] edx +
mov dl [eax] +
cmp dl 5 +
jz loc_100DDEB  +
cmp dl 0Fh +
jnz loc_100DE01  +
mov edx [eax-10h] +
mov [esi] edx +
mov edx [eax-0Ch] +
mov [esi+4] edx +
mov edx [eax-8] +
mov [edi] edx +
mov edx [eax-4] +
mov [edi+4] edx +
add eax 90h +
dec [ebp+arg_8]  +
jnz loc_100DDDF  +
jmp loc_100DE10  +
mov ecx [ebp+var_4] +
cmp ecx ebx +
jz loc_100DE1D  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov [ebp+var_4] ebx +
cmp [ebp+pv] ebx +
jz loc_100DE2B  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
cmp [ebp+arg_4] 1 +
jnz loc_100DE34  +
mov [ebp+arg_4] ebx +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
push 70h  +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_78] ebx +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp+var_78] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
mov edi eax +
cmp edi 80042417h +
jz loc_100DE87  +
cmp edi ebx +
jl loc_100DEDE  +
cmp [ebp+var_78] ebx +
jz loc_100DE91  +
xor edi edi +
inc edi  +
jmp loc_100DEDE  +
lea eax [ebp+var_78] +
push eax  +
push 4  +
call sub_1011D44  +
mov edi eax +
cmp edi ebx +
jl loc_100DEDE  +
mov eax [esi] +
lea ecx [ebp+var_74] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_100DEDE  +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov ecx [ebp+var_30] +
cmp ecx ebx +
jnz loc_100DEC5  +
xor ecx ecx +
inc ecx  +
mov eax [ebp+var_78] +
mov edx [eax] +
push ebx  +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_74] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [edx+20h]  +
mov edi eax +
mov eax [ebp+var_78] +
cmp eax ebx +
jz loc_100DEEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_78] ebx +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
and eax [esi+4] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_28] edi +
mov [ebp+var_24] edi +
mov [ebp+var_C] edi +
mov [ebp+pv] edi +
mov [ebp+var_8] edi +
cmp eax 0FFFFFFFFh +
jz loc_100DF52  +
mov eax [ebx] +
and eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jnz loc_100E15B  +
lea eax [ebp+var_C] +
push eax  +
call sub_1004390  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_100E13B  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_100E13B  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_C]  +
call sub_100DD66  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_100E13B  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ebp+var_20] eax +
and eax ecx +
mov [ebp+var_1C] ecx +
cmp eax 0FFFFFFFFh +
jnz loc_100E075  +
and [ebp+arg_4] edi +
cmp [ebp+var_8] edi +
jbe loc_100E12D  +
mov edx [ebp+pv] +
add edx 18h +
lea eax [edx-18h] +
test eax eax +
jz loc_100E12D  +
cmp dword ptr [edx-8] 1 +
jnz loc_100E01C  +
mov esi [edx+4] +
mov eax [edx] +
cmp esi [ebp+var_14] +
jb loc_100DFFD  +
ja loc_100DFE7  +
cmp eax [ebp+var_18] +
jb loc_100DFFD  +
mov ecx [ebp+var_28] +
add ecx [ebp+var_18] +
mov eax [ebp+var_24] +
adc eax [ebp+var_14] +
cmp esi eax +
jb loc_100E019  +
ja loc_100DFFD  +
cmp [edx] ecx +
jb loc_100E019  +
test edi edi +
jnz loc_100E004  +
lea edi [edx-18h] +
mov eax [edi+24h] +
cmp eax [edx+0Ch] +
ja loc_100E019  +
jb loc_100E016  +
mov eax [edi+20h] +
cmp eax [edx+8] +
jnb loc_100E019  +
lea edi [edx-18h] +
mov esi [ebp+arg_0] +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add edx 50h +
cmp eax [ebp+var_8] +
jb loc_100DFC5  +
test edi edi +
jz loc_100E12D  +
mov ecx [ebx] +
mov eax [ebx+4] +
mov edx ecx +
and edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_100E04D  +
mov eax [edi+20h] +
mov [ebx] eax +
mov eax [edi+24h] +
mov [ebx+4] eax +
jmp loc_100E065  +
mov edx [edi+24h] +
cmp edx eax +
ja loc_100E065  +
jb loc_100E12D  +
mov eax [edi+20h] +
cmp eax ecx +
jb loc_100E12D  +
mov eax [edi+18h] +
mov [esi] eax +
mov eax [edi+1Ch] +
mov [esi+4] eax +
jmp loc_100E13B  +
mov ecx [ebp+var_8] +
mov eax [ebp+pv] +
lea edx [ecx-1] +
imul edx edx +
add edx eax +
jz loc_100E12D  +
and [ebp+arg_4] edi +
mov edx ecx +
imul edx edx +
lea eax [edx+eax-50h] +
test ecx ecx +
jbe loc_100E0FB  +
test eax eax +
jz loc_100E12D  +
cmp dword ptr [eax+10h] 1 +
jnz loc_100E0ED  +
mov ecx [eax+1Ch] +
mov edi [eax+18h] +
cmp ecx [ebp+var_14] +
jb loc_100E0CF  +
ja loc_100E0B9  +
cmp edi [ebp+var_18] +
jbe loc_100E0CF  +
mov esi [ebp+var_28] +
add esi [ebp+var_18] +
mov edx [ebp+var_24] +
adc edx [ebp+var_14] +
cmp ecx edx +
jb loc_100E0ED  +
ja loc_100E0CF  +
cmp edi esi +
jb loc_100E0ED  +
cmp [ebp+var_1C] ecx +
jb loc_100E0ED  +
ja loc_100E0DB  +
cmp [ebp+var_20] edi +
jb loc_100E0ED  +
add edi [eax+20h] +
adc ecx [eax+24h] +
cmp [ebp+var_1C] ecx +
jb loc_100E0FB  +
ja loc_100E0ED  +
cmp [ebp+var_20] edi +
jb loc_100E0FB  +
inc [ebp+arg_4]  +
mov ecx [ebp+arg_4] +
sub eax 50h +
cmp ecx [ebp+var_8] +
jb loc_100E099  +
mov ecx [ebp+var_8] +
cmp [ebp+arg_4] ecx +
jz loc_100E13B  +
mov edx [eax+20h] +
add edx [eax+18h] +
mov ecx [eax+24h] +
adc ecx [eax+1Ch] +
sub edx [ebp+var_20] +
mov esi [ebx] +
sbb ecx [ebp+var_1C] +
mov eax [ebx+4] +
mov edi esi +
and edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100E136  +
cmp eax ecx +
jb loc_100E13B  +
ja loc_100E12D  +
cmp esi edx +
jbe loc_100E13B  +
mov [ebp+var_4] 1 +
jmp loc_100E13B  +
mov [ebx] edx +
mov [ebx+4] ecx +
mov eax [ebp+var_C] +
test eax eax +
jz loc_100E14C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_C] 0 +
cmp [ebp+pv] 0 +
jz loc_100E15B  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 14Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
xor ebx ebx +
push esi  +
or eax 0FFFFFFFFh +
push edi  +
mov edi [ebp+0Ch] +
push 70h  +
mov [ebp-8Ch] eax +
mov [ebp-88h] eax +
mov [ebp-94h] eax +
mov [ebp-90h] eax +
lea eax [ebp-74h] +
push ebx  +
push eax  +
mov [ebp-78h] ebx +
mov [ebp-7Ch] ebx +
mov [ebp-0B4h] ebx +
mov [ebp-0ACh] ebx +
mov [ebp-0A8h] ebx +
mov [ebp-0A4h] ebx +
mov [ebp-0B0h] ebx +
mov [ebp-80h] ebx +
mov [ebp-84h] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+10h] ebx +
jbe loc_100E433  +
mov eax [ebp-7Ch] +
lea esi [edi+eax*4] +
mov eax [esi] +
cmp eax ebx +
jz loc_100E452  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E218  +
mov dword ptr [ebp-0B4h] 1 +
jmp loc_100E400  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E2BB  +
mov eax [ebp-7Ch] +
inc eax  +
mov [ebp-7Ch] eax +
cmp eax [ebp+10h] +
jnb loc_100E46D  +
cmp [ebp-0ACh] ebx +
jnz loc_100E46D  +
mov ecx [edi+eax*4] +
cmp ecx ebx +
jz loc_100E46D  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100E25B  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E46D  +
mov eax [ebp-7Ch] +
push 0Ah  +
push ebx  +
push dword ptr [edi+eax*4]  +
call ds:_wcstoui64  +
add esp 0Ch +
push ebx  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-94h] eax +
mov [ebp-90h] edx +
mov dword ptr [ebp-0ACh] 1 +
jmp loc_100E400  +
push offset aOffset  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E368  +
mov eax [ebp-7Ch] +
inc eax  +
mov [ebp-7Ch] eax +
cmp eax [ebp+10h] +
jnb loc_100E46D  +
cmp [ebp-0A8h] ebx +
jnz loc_100E46D  +
lea eax [edi+eax*4] +
mov ecx [eax] +
mov [ebp-98h] eax +
cmp ecx ebx +
jz loc_100E46D  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100E306  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E46D  +
mov eax [ebp-98h] +
push 0Ah  +
push ebx  +
push dword ptr [eax]  +
call ds:_wcstoui64  +
add esp 0Ch +
push ebx  +
push 400h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-8Ch] eax +
mov [ebp-88h] edx +
mov dword ptr [ebp-0A8h] 1 +
jmp loc_100E400  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E46D  +
mov eax [ebp-7Ch] +
inc eax  +
mov [ebp-7Ch] eax +
cmp eax [ebp+10h] +
jnb loc_100E46D  +
cmp [ebp-0A4h] ebx +
jnz loc_100E46D  +
lea eax [edi+eax*4] +
mov ecx [eax] +
mov [ebp-98h] eax +
cmp ecx ebx +
jz loc_100E46D  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_100E3B3  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E46D  +
mov eax [ebp-98h] +
push 0Ah  +
push ebx  +
push dword ptr [eax]  +
call ds:_wcstoui64  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp-0B0h] eax +
mov dword ptr [ebp-0A4h] 1 +
inc dword ptr [ebp-7Ch]  +
mov eax [ebp-7Ch] +
cmp eax [ebp+10h] +
jb loc_100E1E7  +
mov eax [ebp-8Ch] +
or eax [ebp-88h] +
jz loc_100E624  +
mov eax [ebp-94h] +
or eax [ebp-90h] +
jz loc_100E624  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_100E488  +
push 3Ch  +
call sub_1012B18  +
jmp loc_100E635  +
push offset aCreatePartitio  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100E67A  +
push offset aCreatePartitio  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100E67A  +
lea eax [ebp-80h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
push dword ptr [ebp-80h]  +
call sub_100DE43  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
xor edi edi +
inc edi  +
cmp esi edi +
jz loc_100E4D7  +
mov eax [ebp-80h] +
cmp eax ebx +
jz loc_100E4C4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-80h] ebx +
lea eax [ebp-80h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
lea eax [ebp-94h] +
push eax  +
lea eax [ebp-8Ch] +
push eax  +
call sub_100DF0F  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
cmp esi edi +
jnz loc_100E502  +
push 1F0h  +
jmp loc_100E448  +
***
mov eax [ebp-80h] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
cmp [ebp-30h] edi +
jz loc_100E528  +
push 1F1h  +
jmp loc_100E448  +
***
mov eax [ebp-80h] +
lea edx [ebp-84h] +
push edx  +
push offset dword_10023C8  +
mov [ebp-14Ch] edi +
mov [ebp-143h] bl +
mov byte ptr [ebp-144h] 5 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100E5C2  +
mov eax [ebp-84h] +
lea edx [ebp-0A0h] +
push edx  +
lea edx [ebp-14Ch] +
push edx  +
push dword ptr [ebp-0B0h]  +
mov [ebp-0A0h] ebx +
push dword ptr [ebp-90h]  +
mov ecx [eax] +
push dword ptr [ebp-94h]  +
push dword ptr [ebp-88h]  +
push dword ptr [ebp-8Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
cmp esi ebx +
jl loc_100E5C2  +
mov eax [ebp-0A0h] +
mov ecx [eax] +
lea edx [ebp-0D4h] +
push edx  +
lea edx [ebp-9Ch] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jge loc_100E5D3  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-78h] esi +
jmp loc_100E63C  +
cmp [ebp-9Ch] ebx +
jge loc_100E5F7  +
push dword ptr [ebp-9Ch]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-9Ch] +
mov [ebp-78h] eax +
jmp loc_100E63C  +
mov eax [ebp-0CCh] +
mov esi offset dword_1001260 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
mov dword_101F940 eax +
mov eax [ebp-0C8h] +
push 3Dh  +
mov dword_101F944 eax +
movs   +
call sub_1012B18  +
jmp loc_100E63C  +
push offset aCreatePartitio  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-78h] 80070057h +
mov eax [ebp-80h] +
cmp eax ebx +
jz loc_100E64C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-80h] ebx +
mov eax [ebp-84h] +
cmp eax ebx +
jz loc_100E662  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-84h] ebx +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-0B4h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-78h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 164h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
or eax 0FFFFFFFFh +
push esi  +
xor esi esi +
push edi  +
push 70h  +
mov [ebp+var_88] eax +
mov [ebp+var_84] eax +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] eax +
mov [ebp+var_94] eax +
mov [ebp+var_90] eax +
mov [ebp+var_B4] eax +
mov [ebp+var_B0] eax +
lea eax [ebp+var_74] +
push esi  +
push eax  +
mov [ebp+var_AC] esi +
mov [ebp+var_78] esi +
mov [ebp+var_B8] esi +
mov [ebp+var_C4] esi +
mov [ebp+var_C0] esi +
mov [ebp+var_BC] esi +
mov [ebp+var_C8] esi +
mov [ebp+var_98] esi +
mov [ebp+var_7C] esi +
mov [ebp+var_CC] esi +
mov [ebp+pv] esi +
mov [ebp+var_A8] esi +
mov [ebp+var_80] esi +
mov [ebp+dwMessageId] esi +
call memset  +
push 78h  +
lea eax [ebp+var_164] +
push esi  +
push eax  +
call memset  +
add esp 18h +
push 8  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_EC] +
stos   +
cmp [ebp+arg_8] esi +
jbe loc_100E999  +
mov edi ds:_wcstoui64 +
mov eax [ebp+var_78] +
lea esi [ebx+eax*4] +
mov eax [esi] +
test eax eax +
jz loc_100E9B3  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E796  +
mov [ebp+var_B8] 1 +
jmp loc_100E966  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E838  +
mov eax [ebp+var_78] +
inc eax  +
mov [ebp+var_78] eax +
cmp eax [ebp+arg_8] +
jnb loc_100E9CE  +
cmp [ebp+var_C4] 0 +
jnz loc_100E9CE  +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_100E9CE  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100E7DA  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E9CE  +
mov eax [ebp+var_78] +
push 0Ah  +
push 0  +
push dword ptr [ebx+eax*4]  +
call edi  +
add esp 0Ch +
push 0  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] edx +
mov [ebp+var_C4] 1 +
jmp loc_100E966  +
push offset aOffset  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E8DA  +
mov eax [ebp+var_78] +
inc eax  +
mov [ebp+var_78] eax +
cmp eax [ebp+arg_8] +
jnb loc_100E9CE  +
cmp [ebp+var_C0] 0 +
jnz loc_100E9CE  +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_100E9CE  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100E87C  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E9CE  +
mov eax [ebp+var_78] +
push 0Ah  +
push 0  +
push dword ptr [ebx+eax*4]  +
call edi  +
add esp 0Ch +
push 0  +
push 400h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_88] eax +
mov [ebp+var_84] edx +
mov [ebp+var_C0] 1 +
jmp loc_100E966  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E9CE  +
mov eax [ebp+var_78] +
inc eax  +
mov [ebp+var_78] eax +
cmp eax [ebp+arg_8] +
jnb loc_100E9CE  +
cmp [ebp+var_BC] 0 +
jnz loc_100E9CE  +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_100E9CE  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100E91E  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100E9CE  +
mov eax [ebp+var_78] +
push 0Ah  +
push 0  +
push dword ptr [ebx+eax*4]  +
call edi  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp+var_C8] eax +
mov [ebp+var_BC] 1 +
inc [ebp+var_78]  +
mov eax [ebp+var_78] +
cmp eax [ebp+arg_8] +
jb loc_100E765  +
mov eax [ebp+var_88] +
or eax [ebp+var_84] +
jz loc_100EE1A  +
mov eax [ebp+var_A4] +
or eax [ebp+var_A0] +
jz loc_100EE1A  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_100E9E9  +
push 3Ch  +
jmp loc_100ECA3  +
push offset aCreatePartit_0  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100EEA4  +
push offset aCreatePartit_0  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100EEA4  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
push [ebp+var_7C]  +
call sub_100DE43  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
cmp esi 1 +
jz loc_100EA37  +
mov eax [ebp+var_7C] +
test eax eax +
jz loc_100EA24  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_7C] 0 +
lea eax [ebp+var_7C] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
cmp [ebp+var_30] 1 +
jz loc_100EA5E  +
push 1F1h  +
jmp loc_100ECA3  +
lea eax [ebp+var_B4] +
push eax  +
lea eax [ebp+var_94] +
push eax  +
push [ebp+var_7C]  +
call sub_100DD66  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
mov eax [ebp+var_94] +
or eax [ebp+var_90] +
jz loc_100EE10  +
mov ebx [ebp+var_B4] +
mov eax ebx +
or eax [ebp+var_B0] +
jz loc_100EE10  +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+var_80] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
mov ecx [ebp+var_80] +
test ecx ecx +
jnz loc_100EAD0  +
push 3Ah  +
jmp loc_100ECA3  +
and [ebp+var_78] 0 +
mov eax [ebp+pv] +
test ecx ecx +
jbe loc_100EB09  +
test eax eax +
jz loc_100EDF6  +
mov edx [eax+1Ch] +
cmp edx [ebp+var_90] +
ja loc_100EB09  +
jb loc_100EAFE  +
mov edx [eax+18h] +
cmp edx [ebp+var_94] +
jnb loc_100EB09  +
inc [ebp+var_78]  +
add eax 50h +
cmp [ebp+var_78] ecx +
jb loc_100EADE  +
cmp [ebp+var_78] ecx +
jz loc_100EDF6  +
mov edx [ebp+var_88] +
and edx [ebp+var_84] +
cmp edx 0FFFFFFFFh +
jnz loc_100EC08  +
cmp [ebp+var_78] ecx +
jnb loc_100EC9E  +
mov esi [ebp+var_CC] +
test eax eax +
jz loc_100EDF6  +
cmp dword ptr [eax+10h] 1 +
jnz loc_100EB82  +
mov ecx [ebp+var_B0] +
mov edi [eax+1Ch] +
mov edx ebx +
add edx [ebp+var_94] +
adc ecx [ebp+var_90] +
cmp edi ecx +
ja loc_100EB90  +
jb loc_100EB68  +
mov ecx [eax+18h] +
cmp ecx edx +
jnb loc_100EB90  +
test esi esi +
jnz loc_100EB6E  +
mov esi eax +
mov ecx [esi+24h] +
cmp ecx [eax+24h] +
ja loc_100EB82  +
jb loc_100EB80  +
mov ecx [esi+20h] +
cmp ecx [eax+20h] +
jnb loc_100EB82  +
mov esi eax +
inc [ebp+var_78]  +
mov ecx [ebp+var_78] +
add eax 50h +
cmp ecx [ebp+var_80] +
jb loc_100EB36  +
test esi esi +
jz loc_100EC9E  +
add ebx [ebp+var_94] +
mov edx [ebp+var_B0] +
adc edx [ebp+var_90] +
mov eax [esi+1Ch] +
mov ecx [esi+18h] +
cmp eax edx +
ja loc_100EC9E  +
jb loc_100EBC2  +
cmp ecx ebx +
jnb loc_100EC9E  +
mov edi [ebp+var_A4] +
mov ebx [ebp+var_A0] +
mov edx edi +
and edx ebx +
cmp edx 0FFFFFFFFh +
jnz loc_100EBDF  +
mov edi [esi+20h] +
mov ebx [esi+24h] +
jmp loc_100EBF7  +
mov edx [esi+24h] +
cmp edx ebx +
ja loc_100EBF7  +
jb loc_100EC9E  +
mov edx [esi+20h] +
cmp edx edi +
jb loc_100EC9E  +
mov [ebp+var_88] ecx +
mov [ebp+var_84] eax +
jmp loc_100ECB6  +
cmp [ebp+var_78] ecx +
jnb loc_100EC5F  +
test eax eax +
jz loc_100EDF6  +
cmp dword ptr [eax+10h] 1 +
jnz loc_100EC51  +
mov ecx [ebp+var_B0] +
mov esi [eax+1Ch] +
mov edi [eax+18h] +
mov edx ebx +
add edx [ebp+var_94] +
adc ecx [ebp+var_90] +
cmp esi ecx +
ja loc_100EC51  +
jb loc_100EC3F  +
cmp edi edx +
jnb loc_100EC51  +
cmp esi [ebp+var_84] +
jb loc_100EC5F  +
ja loc_100EC51  +
cmp edi [ebp+var_88] +
jbe loc_100EC5F  +
inc [ebp+var_78]  +
mov ecx [ebp+var_78] +
add eax 50h +
cmp ecx [ebp+var_80] +
jb loc_100EC0D  +
mov ecx [ebp+var_80] +
cmp [ebp+var_78] ecx +
jz loc_100EC9E  +
mov edx [eax+20h] +
add edx [eax+18h] +
mov ecx [eax+24h] +
adc ecx [eax+1Ch] +
sub edx [ebp+var_88] +
mov edi [ebp+var_A4] +
sbb ecx [ebp+var_84] +
mov ebx [ebp+var_A0] +
mov eax edi +
and eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_100ECB2  +
cmp ebx ecx +
jb loc_100ECB6  +
ja loc_100EC9E  +
cmp edi edx +
jbe loc_100ECB6  +
push 1F0h  +
call sub_1012B18  +
mov esi 80070057h +
jmp loc_100EE3B  +
mov edi edx +
mov ebx ecx +
mov eax [ebp+var_7C] +
lea edx [ebp+var_A8] +
push edx  +
push offset dword_10023C8  +
mov [ebp+var_164] 1 +
mov [ebp+var_15B] 0 +
mov [ebp+var_15C] 6 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
mov eax [ebp+var_A8] +
mov ecx [eax] +
lea edx [ebp+var_98] +
push edx  +
lea edx [ebp+var_164] +
push edx  +
push [ebp+var_C8]  +
push ebx  +
push edi  +
push [ebp+var_84]  +
push [ebp+var_88]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
test esi esi +
jl loc_100ED9E  +
mov eax [ebp+var_98] +
mov ecx [eax] +
lea edx [ebp+var_EC] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_100ED9E  +
cmp [ebp+dwMessageId] 0 +
jge loc_100ED6E  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov esi [ebp+dwMessageId] +
jmp loc_100EE3B  +
mov eax [ebp+var_E4] +
mov dword_101F940 eax +
mov eax [ebp+var_E0] +
lea edx [ebp+var_80] +
push edx  +
mov dword_101F944 eax +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jge loc_100EDAF  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
jmp loc_100EE3B  +
xor ecx ecx +
cmp ecx [ebp+var_80] +
jnb loc_100EDF4  +
mov edx [ebp+pv] +
lea eax [edx+18h] +
mov esi [eax] +
cmp esi dword_101F940 +
jnz loc_100EDD4  +
mov esi [eax+4] +
cmp esi dword_101F944 +
jz loc_100EDDF  +
inc ecx  +
add eax 50h +
cmp ecx [ebp+var_80] +
jb loc_100EDBF  +
jmp loc_100EDF1  +
mov eax ecx +
imul eax eax +
lea esi [eax+edx+28h] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
cmp ecx [ebp+var_80] +
jnz loc_100EE07  +
push 1C2h  +
call sub_1012B18  +
mov esi 8000FFFFh +
jmp loc_100EE3B  +
push 3Dh  +
call sub_1012B18  +
jmp loc_100EE35  +
push 1F7h  +
jmp loc_100ECA3  +
push offset aCreatePartit_0  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_AC] 80070057h +
mov esi [ebp+var_AC] +
mov eax [ebp+var_7C] +
xor edi edi +
cmp eax edi +
jz loc_100EE4D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_7C] edi +
mov eax [ebp+var_A8] +
cmp eax edi +
jz loc_100EE63  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_A8] edi +
mov eax [ebp+var_98] +
cmp eax edi +
jz loc_100EE79  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_98] edi +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
cmp [ebp+pv] edi +
jz loc_100EE96  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_B8] +
neg eax  +
sbb eax eax +
not eax  +
and eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 34h  +
mov [ebp-78h] eax +
lea eax [ebp-48h] +
push ebx  +
push eax  +
mov [ebp-50h] ebx +
mov [ebp-74h] ebx +
mov [ebp-6Ch] ebx +
mov [ebp-58h] ebx +
mov [ebp-54h] ebx +
mov [ebp-5Ch] ebx +
mov [ebp-64h] ebx +
mov [ebp-60h] ebx +
mov [ebp-4Ch] ebx +
call memset  +
mov esi offset dword_1001260 +
lea edi [ebp-14h] +
movs   +
movs   +
movs   +
add esp 0Ch +
cmp dword ptr [ebp+10h] 2 +
mov [ebp-68h] ebx +
mov [ebp-70h] ebx +
movs   +
jbe loc_100EF34  +
push offset aDeletePartitio  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_100F181  +
xor esi esi +
cmp [ebp+10h] ebx +
jbe loc_100EF99  +
mov eax [ebp-78h] +
lea edi [eax+esi*4] +
mov eax [edi] +
cmp eax ebx +
jz loc_100F0BA  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100EF68  +
inc eax  +
cmp [ebp-6Ch] eax +
jz loc_100EF19  +
mov [ebp-6Ch] eax +
jmp loc_100EF8D  +
push offset aOverride  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100EF86  +
inc eax  +
cmp [ebp-58h] eax +
jz loc_100EF19  +
mov [ebp-58h] eax +
jmp loc_100EF8D  +
mov dword ptr [ebp-74h] 1 +
cmp dword ptr [ebp-74h] 1 +
jz loc_100EF19  +
inc esi  +
cmp esi [ebp+10h] +
jb loc_100EF3B  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jz loc_100F12A  +
mov eax dword_101F940 +
or eax dword_101F944 +
jz loc_100F12A  +
lea eax [ebp-54h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100F0F6  +
mov eax [ebp-54h] +
mov ecx [eax] +
lea edx [ebp-5Ch] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100F0F6  +
cmp [ebp-58h] ebx +
jnz loc_100F0D5  +
mov eax [ebp-54h] +
mov ecx [eax] +
lea edx [ebp-70h] +
push edx  +
lea edx [ebp-68h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov ecx [ebp-68h] +
test eax eax +
jl loc_100F03F  +
mov edx [ebp-70h] +
cmp edx ebx +
jle loc_100F03F  +
lea eax [ecx+28h] +
mov esi [eax-10h] +
cmp esi dword_101F940 +
jnz loc_100F039  +
mov esi [eax-0Ch] +
cmp esi dword_101F944 +
jnz loc_100F039  +
mov esi eax +
lea edi [ebp-14h] +
movs   +
movs   +
movs   +
movs   +
add eax 50h +
dec edx  +
jnz loc_100F01A  +
cmp ecx ebx +
jz loc_100F04D  +
push ecx  +
call ds:CoTaskMemFree  +
mov [ebp-68h] ebx +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
lea esi [ebp-14h] +
xor eax eax +
cmps   +
jz loc_100F0D5  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp-64h] +
push edx  +
push 0Bh  +
sub esp 10h +
mov edi esp +
lea esi [ebp-14h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_100F0D5  +
mov eax [ebp-64h] +
mov ecx [eax] +
lea edx [ebp-60h] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_100F0D5  +
mov eax [ebp-60h] +
mov ecx [eax] +
lea edx [ebp-4Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push dword ptr [ebp-1Ch]  +
call ds:CoTaskMemFree  +
test dword ptr [ebp-24h] 200000h +
jz loc_100F0D5  +
push 28Ch  +
jmp loc_100F12C  +
push offset aDeletePartitio  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_100F181  +
push dword ptr [ebp-58h]  +
mov eax [ebp-5Ch] +
push dword ptr [ebp-58h]  +
mov ecx [eax] +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jge loc_100F107  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-50h] esi +
jmp loc_100F138  +
mov esi offset dword_1001260 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push 4Dh  +
mov dword_101F940 ebx +
mov dword_101F944 ebx +
movs   +
call sub_1012B18  +
jmp loc_100F138  +
push 4Bh  +
call sub_1012B18  +
mov dword ptr [ebp-50h] 80070057h +
mov eax [ebp-54h] +
cmp eax ebx +
jz loc_100F148  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-54h] ebx +
mov eax [ebp-5Ch] +
cmp eax ebx +
jz loc_100F158  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-5Ch] ebx +
mov eax [ebp-60h] +
cmp eax ebx +
jz loc_100F168  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-60h] ebx +
mov eax [ebp-64h] +
cmp eax ebx +
jz loc_100F175  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-6Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-50h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 70h  +
lea eax [ebp-74h] +
push ebx  +
push eax  +
mov [ebp-78h] ebx +
mov [ebp-7Ch] ebx +
mov [ebp-80h] ebx +
call memset  +
add esp 0Ch +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jz loc_100F2A4  +
mov eax dword_101F940 +
or eax dword_101F944 +
jz loc_100F2A4  +
mov eax [ebp+0Ch] +
cmp [eax] ebx +
jz loc_100F20E  +
push offset aActive  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_100F2AB  +
lea eax [ebp-7Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100F28A  +
mov eax [ebp-7Ch] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
cmp esi ebx +
jl loc_100F28A  +
xor eax eax +
inc eax  +
cmp [ebp-30h] eax +
jz loc_100F245  +
push 2  +
jmp loc_100F2A6  +
lea edx [ebp-80h] +
push edx  +
mov [ebp-88h] al +
mov [ebp-90h] eax +
mov eax [ebp-7Ch] +
mov ecx [eax] +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100F28A  +
mov eax [ebp-80h] +
mov ecx [eax] +
lea edx [ebp-90h] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_100F29B  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-78h] esi +
jmp loc_100F2B2  +
push 4  +
call sub_1012B18  +
jmp loc_100F2B2  +
push 3  +
call sub_1012B18  +
mov dword ptr [ebp-78h] 80070057h +
mov eax [ebp-7Ch] +
cmp eax ebx +
jz loc_100F2C2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-7Ch] ebx +
mov eax [ebp-80h] +
cmp eax ebx +
jz loc_100F2D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-80h] ebx +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
mov ecx [ebp-4] +
mov eax [ebp-78h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
cmp [eax] ebx +
jz loc_100F32F  +
push offset aInactive  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_4] 80070057h +
jmp loc_100F420  +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jz loc_100F410  +
mov eax dword_101F940 +
or eax dword_101F944 +
jz loc_100F410  +
lea eax [ebp+var_C] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100F3F3  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100F3F3  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_AC] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_100F3F3  +
xor eax eax +
inc eax  +
cmp [ebp+var_AC] eax +
jz loc_100F3B7  +
push 15Ah  +
jmp loc_100F412  +
cmp [ebp+var_8B] bl +
jnz loc_100F3CE  +
push 15Ch  +
call sub_1012B18  +
mov [ebp+var_4] ebx +
jmp loc_100F41E  +
lea edx [ebp+var_1C] +
push edx  +
push dword_101F944  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_8] +
push dword_101F940  +
mov [ebp+var_14] bl +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_100F404  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_4] esi +
jmp loc_100F41E  +
push 15Dh  +
call sub_1012B18  +
jmp loc_100F41E  +
push 3  +
call sub_1012B18  +
mov [ebp+var_4] 80070057h +
pop edi  +
pop esi  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_100F430  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
pop ebx  +
jz loc_100F43E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0B4h +
push ebx  +
xor ebx ebx +
cmp dword ptr [ebp+10h] 2 +
push esi  +
push edi  +
mov [ebp-4] ebx +
mov [ebp-0Ch] ebx +
mov [ebp-8] ebx +
jnz loc_100F610  +
mov esi [ebp+0Ch] +
mov eax [esi] +
cmp eax ebx +
jz loc_100F610  +
cmp [esi+4] ebx +
jz loc_100F610  +
push offset aAttributes  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F610  +
mov edx [esi+4] +
mov eax edx +
lea edi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100F4A1  +
sub eax edi +
sar eax 1 +
push offset a0123456789ab_0  +
push edx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_100F610  +
push 2  +
push offset a0x  +
push dword ptr [esi+4]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100F610  +
mov esi [esi+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100F4EA  +
sub eax edx +
sar eax 1 +
cmp eax 12h +
jnz loc_100F610  +
push ebx  +
push ebx  +
push esi  +
call ds:_wcstoui64  +
add esp 0Ch +
push 4  +
mov ebx eax +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
mov [ebp-10h] edx +
jz loc_100F5DC  +
mov eax dword_101F940 +
or eax dword_101F944 +
jz loc_100F5DC  +
lea eax [ebp-0Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_100F5BF  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_100F5BF  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-0B4h] +
push edx  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_100F5BF  +
push 2  +
pop eax  +
cmp [ebp-0B4h] eax +
jz loc_100F594  +
push 174h  +
jmp loc_100F5E1  +
mov ecx [ebp-10h] +
lea edx [ebp-24h] +
push edx  +
push dword_101F944  +
mov [ebp-24h] eax +
mov eax [ebp-8] +
push dword_101F940  +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_100F5D0  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-4] esi +
jmp loc_100F5ED  +
push 175h  +
call sub_1012B18  +
jmp loc_100F5ED  +
push 173h  +
call sub_1012B18  +
mov dword ptr [ebp-4] 80070057h +
mov eax [ebp-0Ch] +
test eax eax +
jz loc_100F5FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-0Ch] 0 +
mov eax [ebp-8] +
test eax eax +
jz loc_100F60B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
jmp loc_100F626  +
push offset aGpt  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
mov eax 80070057h +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0A8h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor edi edi +
push 70h  +
lea eax [ebp-74h] +
push edi  +
push eax  +
mov [ebp-78h] edi +
mov [ebp-80h] edi +
mov [ebp-94h] edi +
mov [ebp-8Ch] edi +
mov [ebp-7Ch] edi +
mov [ebp-84h] edi +
mov [ebp-88h] edi +
mov [ebp-90h] edi +
call memset  +
add esp 0Ch +
cmp [ebp+10h] edi +
jbe loc_100F9F0  +
mov ebx ds:_wcsicmp +
mov eax [esi+edi*4] +
test eax eax +
jz loc_100F88A  +
push offset aNoerr  +
push eax  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F6C5  +
cmp [ebp-94h] eax +
jnz loc_100F9F0  +
mov dword ptr [ebp-94h] 1 +
jmp loc_100F722  +
push offset aId  +
push dword ptr [esi+edi*4]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F6FE  +
inc edi  +
cmp edi [ebp+10h] +
jnb loc_100F9F0  +
cmp [ebp-8Ch] eax +
jnz loc_100F9F0  +
mov eax [esi+edi*4] +
test eax eax +
jz loc_100F9F0  +
mov [ebp-8Ch] eax +
jmp loc_100F722  +
push offset aOverride  +
push dword ptr [esi+edi*4]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F9F0  +
cmp [ebp-80h] eax +
jnz loc_100F9F0  +
mov dword ptr [ebp-80h] 1 +
inc edi  +
cmp edi [ebp+10h] +
jb loc_100F694  +
test edi edi +
jz loc_100F9F0  +
mov ebx [ebp-8Ch] +
test ebx ebx +
jz loc_100F9F0  +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi offset dword_1001260 +
xor eax eax +
cmps   +
jz loc_100F9E2  +
cmp dword_101F940 eax +
jnz loc_100F76D  +
cmp dword_101F944 eax +
jz loc_100F9E2  +
lea eax [ebp-7Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_100F876  +
mov eax [ebp-7Ch] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_100F876  +
mov eax [ebp-30h] +
mov [ebp-0A8h] eax +
cmp eax 1 +
jnz loc_100F8A3  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100F7AE  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
ja loc_100F8B9  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100F7CA  +
sub eax edx +
sar eax 1 +
push offset a0123456789abcd  +
push ebx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_100F8B9  +
push 10h  +
push 0  +
push ebx  +
call ds:wcstol  +
add esp 0Ch +
mov [ebp-0A4h] al +
test al al +
jz loc_100F8B9  +
mov eax [ebp-7Ch] +
mov ecx [eax] +
lea edx [ebp-84h] +
push edx  +
push offset dword_10023B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_100F876  +
mov eax [ebp-84h] +
mov ecx [eax] +
lea edx [ebp-0A8h] +
push edx  +
push dword ptr [ebp-80h]  +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_100F876  +
push 0BB8h  +
call ds:Sleep  +
mov eax [ebp-7Ch] +
mov ecx [eax] +
lea edx [ebp-90h] +
push edx  +
lea edx [ebp-88h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jge loc_100F8CF  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-78h] esi +
jmp loc_100F98C  +
push offset aSetid  +
push 1C4h  +
call sub_1012A8B  +
mov eax 8000FFFFh +
jmp loc_100FA04  +
lea eax [ebp-0A4h] +
push eax  +
push ebx  +
call ds:UuidFromStringW  +
test eax eax +
jz loc_100F80C  +
push 227h  +
call sub_1012B18  +
mov dword ptr [ebp-78h] 80070057h +
jmp loc_100F98C  +
mov edx offset unk_101F948 +
mov esi offset dword_1001260 +
mov edi edx +
movs   +
movs   +
movs   +
xor eax eax +
cmp [ebp-90h] eax +
movs   +
jle loc_100F982  +
mov esi [ebp-88h] +
lea ecx [esi+18h] +
mov edi [ecx] +
cmp edi dword_101F940 +
jnz loc_100F90B  +
mov edi [ecx+4] +
cmp edi dword_101F944 +
jz loc_100F919  +
inc eax  +
add ecx 50h +
cmp eax [ebp-90h] +
jl loc_100F8F6  +
jmp loc_100F982  +
imul eax eax +
add eax esi +
mov esi [eax+10h] +
push 4  +
pop ecx  +
mov [ebp-80h] esi +
cmp esi ecx +
jz loc_100F977  +
cmp dword ptr [ebp-0A8h] 1 +
jnz loc_100F93D  +
cmp byte ptr [ebp-0A4h] 27h +
jz loc_100F977  +
cmp dword ptr [ebp-0A8h] 2 +
jnz loc_100F957  +
lea edi [ebp-0A4h] +
mov esi offset dword_10012C0 +
xor ebx ebx +
cmps   +
jz loc_100F977  +
cmp dword ptr [ebp-80h] 3 +
jnz loc_100F972  +
cmp dword_101F920 0 +
mov esi offset unk_101F9D8 +
jnz loc_100F97C  +
mov esi offset dword_1001260 +
jmp loc_100F97C  +
lea esi [eax+28h] +
jmp loc_100F97C  +
mov esi offset unk_101F9D8 +
mov edi edx +
movs   +
movs   +
movs   +
movs   +
push 228h  +
call sub_1012B18  +
mov eax [ebp-7Ch] +
xor esi esi +
cmp eax esi +
jz loc_100F99E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-7Ch] esi +
mov eax [ebp-84h] +
cmp eax esi +
jz loc_100F9B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-84h] esi +
lea eax [ebp-74h] +
push eax  +
call sub_10028A5  +
cmp [ebp-88h] esi +
jz loc_100F9D1  +
push dword ptr [ebp-88h]  +
call ds:CoTaskMemFree  +
mov eax [ebp-94h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-78h] +
jmp loc_100FA06  +
push 5Ah  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_100FA06  +
push offset aSetid  +
push 0C0002AF9h  +
call sub_1012A8B  +
mov eax 80070057h +
pop ecx  +
pop ecx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 4010h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_400C] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push 4000h  +
lea eax [ebp+Buffer] +
push 0  +
push eax  +
mov [ebp+var_4008] esi +
call memset  +
add esp 0Ch +
mov ebx 400h +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push 0BBh  +
call sub_10124CD  +
push ebx  +
lea eax [ebp+var_1804] +
push eax  +
push 0B5h  +
call sub_10124CD  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 0AAh  +
call sub_10124CD  +
lea eax [ebp+var_400C] +
push eax  +
call sub_1004390  +
mov [ebp+var_4010] eax +
test eax eax +
jl loc_100FD73  +
mov eax [esi] +
push edi  +
cmp eax 1 +
jnz loc_100FB94  +
mov al [esi+20h] +
cmp al 27h +
jnz loc_100FAD7  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 292h  +
jmp loc_100FCD4  +
cmp al 12h +
jz loc_100FB82  +
cmp al 84h +
jz loc_100FB82  +
cmp al 0A0h +
jz loc_100FB82  +
cmp al 0DEh +
jz loc_100FB82  +
cmp al 0FEh +
jz loc_100FB82  +
cmp al 5 +
jz loc_100FB70  +
cmp al 0Fh +
jz loc_100FB70  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
mov edx [esi+14h] +
mov eax [eax+4] +
mov edi [esi+10h] +
cmp edx eax +
jb loc_100FB44  +
ja loc_100FB1F  +
cmp edi ecx +
jb loc_100FB44  +
mov edi [ebp+arg_C] +
add ecx [edi] +
adc eax [edi+4] +
cmp edx eax +
ja loc_100FB44  +
jb loc_100FB32  +
cmp [esi+10h] ecx +
jnb loc_100FB44  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C2h  +
jmp loc_100FCD4  +
cmp byte ptr [esi+20h] 42h +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
jnz loc_100FB5C  +
push 0BEh  +
jmp loc_100FCD4  +
cmp byte ptr [esi+22h] 0 +
jz loc_100FCCF  +
push 0C4h  +
jmp loc_100FCD4  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C0h  +
jmp loc_100FCD4  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C3h  +
jmp loc_100FCD4  +
cmp eax 2 +
jnz loc_100FCC7  +
lea eax [esi+20h] +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FBC2  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C8h  +
jmp loc_100FCBA  +
push 4  +
pop ecx  +
mov edi offset dword_1001270 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FBE4  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C6h  +
jmp loc_100FCBA  +
push 4  +
pop ecx  +
mov edi offset dword_1001280 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_100FC67  +
push 4  +
pop ecx  +
mov edi offset dword_1001290 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FC16  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C4h  +
jmp loc_100FCBA  +
push 4  +
pop ecx  +
mov edi offset dword_10012A0 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FC38  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0BFh  +
jmp loc_100FCBA  +
push 4  +
pop ecx  +
mov edi offset dword_10012B0 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FC57  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0BEh  +
jmp loc_100FCBA  +
push 4  +
pop ecx  +
mov edi offset dword_10012D0 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_100FC76  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C5h  +
jmp loc_100FCBA  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset dword_10012C0 +
xor eax eax +
cmps   +
push ebx  +
jnz loc_100FC95  +
lea eax [ebp+var_3804] +
push eax  +
push 292h  +
jmp loc_100FCBA  +
mov eax [ebp+var_4008] +
mov eax [eax+40h] +
and eax 1 +
xor ecx ecx +
or eax ecx +
lea eax [ebp+var_3804] +
push eax  +
jz loc_100FCB5  +
push 0C3h  +
jmp loc_100FCBA  +
push 0C7h  +
call sub_10124CD  +
mov esi [ebp+var_4008] +
jmp loc_100FCD9  +
push ebx  +
lea eax [ebp+var_3804] +
push eax  +
push 0C7h  +
call sub_10124CD  +
push dword ptr [esi+14h]  +
lea eax [ebp+var_2804] +
push dword ptr [esi+10h]  +
push eax  +
call sub_10126D0  +
push dword ptr [esi+1Ch]  +
lea eax [ebp+var_3004] +
push dword ptr [esi+18h]  +
push eax  +
call sub_10126D0  +
push 0Ah  +
lea eax [ebp+var_2004] +
push eax  +
push dword ptr [esi+8]  +
call ds:_ltow  +
mov eax dword_101F940 +
add esp 0Ch +
pop edi  +
cmp eax [esi+10h] +
jnz loc_100FD2D  +
mov eax dword_101F944 +
cmp eax [esi+14h] +
lea eax [ebp+var_1804] +
jz loc_100FD33  +
lea eax [ebp+var_1004] +
lea ecx [ebp+var_2804] +
push ecx  +
lea ecx [ebp+var_3004] +
push ecx  +
lea ecx [ebp+var_3804] +
push ecx  +
lea ecx [ebp+var_2004] +
push ecx  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_804] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 20h +
lea eax [ebp+var_804] +
push eax  +
call sub_1012604  +
mov eax [ebp+var_400C] +
pop esi  +
pop ebx  +
test eax eax +
jz loc_100FD85  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_4010] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 70h  +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_78] ebx +
mov [ebp+var_90] ebx +
mov [ebp+var_8C] ebx +
mov [ebp+var_98] ebx +
mov [ebp+var_94] ebx +
mov [ebp+var_7C] ebx +
mov [ebp+var_80] ebx +
mov [ebp+pv] ebx +
call memset  +
add esp 0Ch +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_100FE15  +
push 0BCh  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_100FF7B  +
mov eax [ebp+arg_4] +
cmp [eax] ebx +
jz loc_100FE2F  +
push offset aListPartition  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_100FE0B  +
lea eax [ebp+var_7C] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_100FEE8  +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
cmp esi ebx +
jl loc_100FEE8  +
cmp [ebp+var_30] ebx +
jz loc_100FEB3  +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+var_80] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_100FEE8  +
mov eax [ebp+var_80] +
mov ecx [eax] +
lea edx [ebp+var_88] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_80] +
cmp eax ebx +
jz loc_100FEA7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_80] ebx +
cmp esi ebx +
jl loc_100FEE8  +
cmp [ebp+var_88] ebx +
jnz loc_100FEC2  +
push 0BDh  +
call sub_1012B18  +
mov [ebp+var_78] ebx +
jmp loc_100FF35  +
push 0BAh  +
call sub_1012B18  +
lea eax [ebp+var_98] +
push eax  +
lea eax [ebp+var_90] +
push eax  +
push [ebp+var_7C]  +
call sub_100DD66  +
mov esi eax +
cmp esi ebx +
jge loc_100FEF9  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_78] esi +
jmp loc_100FF35  +
xor eax eax +
cmp [ebp+var_88] ebx +
jle loc_100FF35  +
xor edi edi +
lea esi [eax+1] +
lea eax [ebp+var_98] +
push eax  +
lea eax [ebp+var_90] +
push eax  +
mov eax [ebp+pv] +
push esi  +
add eax edi +
push eax  +
call sub_100FA1C  +
mov eax esi +
add edi 90h +
cmp eax [ebp+var_88] +
jl loc_100FF05  +
mov eax [ebp+var_7C] +
cmp eax ebx +
jz loc_100FF45  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_7C] ebx +
mov eax [ebp+var_80] +
cmp eax ebx +
jz loc_100FF55  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_80] ebx +
cmp [ebp+pv] ebx +
jz loc_100FF6F  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_78] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax 3024h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push 2800h  +
lea eax [ebp-3004h] +
push ebx  +
push eax  +
mov [ebp-3008h] ebx +
mov [ebp-301Ch] ebx +
mov [ebp-3014h] ebx +
mov [ebp-300Ch] ebx +
mov [ebp-3010h] ebx +
mov [ebp-3018h] ebx +
call memset  +
add esp 0Ch +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_101000C  +
push 59h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_1010475  +
mov eax dword_101F940 +
or eax dword_101F944 +
jnz loc_101001D  +
push 5Ah  +
jmp loc_100FFFD  +
***
mov eax [ebp+0Ch] +
cmp [eax] ebx +
jz loc_1010037  +
push offset aDetailPartitio  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1010002  +
***
lea eax [ebp-3014h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_101009C  +
mov eax [ebp-3014h] +
mov ecx [eax] +
lea edx [ebp-300Ch] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_101009C  +
mov eax [ebp-300Ch] +
mov ecx [eax] +
lea edx [ebp-301Ch] +
push edx  +
lea edx [ebp-3010h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-300Ch] +
cmp eax ebx +
jz loc_1010098  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-300Ch] ebx +
cmp esi ebx +
jge loc_10100B3  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-3008h] esi +
jmp loc_1010419  +
cmp [ebp-301Ch] ebx +
jnz loc_10100CD  +
push 5Ah  +
call sub_1012B18  +
mov [ebp-3008h] ebx +
jmp loc_1010419  +
mov edx [ebp-3010h] +
mov ecx dword_101F940 +
lea eax [edx+10h] +
mov edi [eax] +
xor esi esi +
cmp edi ecx +
mov edi dword_101F944 +
jmp loc_1010100  +
inc esi  +
add eax 90h +
cmp esi [ebp-301Ch] +
jge loc_10101C6  +
mov ebx [eax] +
cmp ebx ecx +
jnz loc_10100EA  +
mov ebx [eax+4] +
cmp ebx edi +
jnz loc_10100EA  +
imul esi esi +
push 0Ah  +
add esi edx +
lea eax [ebp-804h] +
push eax  +
push dword ptr [esi+14h]  +
mov [ebp-3024h] esi +
push dword ptr [esi+10h]  +
call ds:_ui64tow  +
mov eax [esi] +
add esp 10h +
cmp eax 1 +
jnz loc_101024F  +
mov ebx 400h +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push 5Ch  +
call sub_10124CD  +
movzx eax byte ptr [esi+20h] +
push eax  +
lea eax [ebp-2804h] +
push eax  +
lea eax [ebp-3004h] +
push ebx  +
push eax  +
call sub_1005575  +
mov al [esi+20h] +
add esp 10h +
mov edi 0D7h +
cmp al 5 +
jz loc_10101DC  +
cmp al 0Fh +
jz loc_10101DC  +
test al al +
jns loc_101019B  +
movzx ecx al +
and ecx 0FFFFFF3Fh +
cmp ecx 6 +
jz loc_10101DC  +
cmp ecx 7 +
jz loc_10101DC  +
cmp ecx 0Bh +
jz loc_10101DC  +
cmp ecx 0Ch +
jz loc_10101DC  +
cmp al 1 +
jz loc_10101DC  +
cmp al 4 +
jz loc_10101DC  +
cmp al 6 +
jz loc_10101DC  +
cmp al 7 +
jz loc_10101DC  +
cmp al 0Bh +
jz loc_10101DC  +
cmp al 0Ch +
jz loc_10101DC  +
cmp al 0Eh +
jz loc_10101DC  +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push 114h  +
jmp loc_10101E5  +
push 5Ah  +
call sub_1012B18  +
mov dword ptr [ebp-3008h] 80070057h +
jmp loc_1010417  +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push edi  +
call sub_10124CD  +
cmp byte ptr [esi+21h] 1 +
push ebx  +
lea eax [ebp-2004h] +
push eax  +
jnz loc_10101FF  +
push 114h  +
jmp loc_1010200  +
push edi  +
call sub_10124CD  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 58h  +
call sub_10124CD  +
lea eax [ebp-804h] +
push eax  +
lea eax [ebp-2004h] +
push eax  +
lea eax [ebp-2804h] +
push eax  +
lea eax [ebp-3004h] +
push eax  +
push dword ptr [esi+8]  +
lea eax [ebp-1804h] +
push eax  +
lea eax [ebp-1004h] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 20h +
jmp loc_101034F  +
cmp eax 2 +
jnz loc_101035D  +
lea eax [ebp-3020h] +
push eax  +
add esi 20h +
push esi  +
call ds:UuidToStringW  +
test eax eax +
mov ebx 400h +
lea eax [ebp-3004h] +
jnz loc_1010294  +
push dword ptr [ebp-3020h]  +
push ebx  +
push eax  +
call sub_100AC29  +
lea eax [ebp-3020h] +
push eax  +
call ds:RpcStringFreeW  +
jmp loc_10102A0  +
push ebx  +
push eax  +
push 0E3h  +
call sub_10124CD  +
push 4  +
pop ecx  +
mov edi offset dword_1001290 +
xor eax eax +
cmps   +
mov esi [ebp-3024h] +
mov edi 0D7h +
jnz loc_10102D1  +
mov ecx [esi+44h] +
and ecx 40000000h +
or eax ecx +
jnz loc_10102D1  +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push edi  +
jmp loc_10102DE  +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
push 114h  +
call sub_10124CD  +
mov eax [esi+40h] +
and eax 1 +
xor ecx ecx +
or eax ecx +
push ebx  +
lea eax [ebp-2004h] +
push eax  +
jz loc_10102FE  +
push 114h  +
jmp loc_10102FF  +
push edi  +
call sub_10124CD  +
push ebx  +
lea eax [ebp-1804h] +
push eax  +
push 57h  +
call sub_10124CD  +
lea eax [ebp-804h] +
push eax  +
push dword ptr [esi+44h]  +
lea eax [ebp-2004h] +
push dword ptr [esi+40h]  +
push eax  +
lea eax [ebp-2804h] +
push eax  +
lea eax [ebp-3004h] +
push eax  +
push dword ptr [esi+8]  +
lea eax [ebp-1804h] +
push eax  +
lea eax [ebp-1004h] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 28h +
lea eax [ebp-1004h] +
push eax  +
call sub_1012604  +
jmp loc_1010395  +
mov ebx 400h +
push ebx  +
lea eax [ebp-3004h] +
push eax  +
push 0E3h  +
call sub_10124CD  +
push ebx  +
lea eax [ebp-2804h] +
push eax  +
mov edi 0D7h +
push edi  +
call sub_10124CD  +
push ebx  +
lea eax [ebp-2004h] +
push eax  +
push edi  +
call sub_10124CD  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1010410  +
push 4  +
mov ebx offset unk_101F9D8 +
mov esi eax +
pop ecx  +
mov edi ebx +
xor eax eax +
cmps   +
jnz loc_10103D3  +
push 0C9h  +
call sub_1012B18  +
push offset dword_101F940  +
push ebx  +
call sub_10154B1  +
jmp loc_1010417  +
lea eax [ebp-3018h] +
push eax  +
call sub_10130DC  +
mov esi eax +
test esi esi +
jge loc_10103F9  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-3008h] esi +
jmp loc_1010417  +
push 0C9h  +
call sub_1012B18  +
push dword ptr [ebp-3018h]  +
call sub_1016A09  +
jmp loc_1010417  +
push 5Bh  +
call sub_1012B18  +
xor ebx ebx +
mov eax [ebp-3014h] +
cmp eax ebx +
jz loc_101042F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-3014h] ebx +
mov eax [ebp-300Ch] +
cmp eax ebx +
jz loc_1010445  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-300Ch] ebx +
mov eax [ebp-3018h] +
cmp eax ebx +
jz loc_101045B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-3018h] ebx +
cmp [ebp-3010h] ebx +
jz loc_101046F  +
push dword ptr [ebp-3010h]  +
call ds:CoTaskMemFree  +
mov eax [ebp-3008h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax 1028h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
xor eax eax +
push esi  +
push edi  +
push 4  +
mov [ebp-1008h] eax +
mov [ebp-101Ch] eax +
mov [ebp-1014h] eax +
mov [ebp-1010h] eax +
mov [ebp-100Ch] eax +
mov [ebp-1028h] eax +
mov [ebp-1018h] eax +
mov [ebp-1024h] eax +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_10104F9  +
push 0F8h  +
jmp loc_10108E5  +
lea eax [ebp-1014h] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_10107BE  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_10106EF  +
cmp dword ptr [ebx] 0 +
jz loc_10106EF  +
mov eax offset dword_1001260 +
mov esi eax +
mov edi offset unk_101F9A4 +
movs   +
movs   +
and dword_101F940 0 +
and dword_101F944 0 +
movs   +
movs   +
mov esi eax +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebx] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1010552  +
sub eax edx +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10106EF  +
push dword ptr [ebx]  +
call ds:_wtol  +
pop ecx  +
lea edx [ebp-1010h] +
push edx  +
mov edi eax +
mov eax [ebp-1014h] +
mov ecx [eax] +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10107BE  +
mov eax [ebp-1010h] +
mov ecx [eax] +
lea edx [ebp-1020h] +
push edx  +
lea edx [ebp-100Ch] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_10107BE  +
mov ecx [ebp-1020h] +
test ecx ecx +
jbe loc_1010607  +
mov eax [ebp-100Ch] +
mov ebx eax +
cmp edi [eax+8] +
jz loc_10105F4  +
inc dword ptr [ebp-101Ch]  +
add eax 90h +
cmp [ebp-101Ch] ecx +
jb loc_10105D8  +
jmp loc_101060D  +
mov edx [eax+10h] +
mov dword_101F940 edx +
mov eax [eax+14h] +
mov dword_101F944 eax +
jmp loc_101060D  +
mov ebx [ebp-1028h] +
cmp [ebp-101Ch] ecx +
jnz loc_1010624  +
push 0F7h  +
call sub_1012B18  +
jmp loc_1010700  +
mov eax [ebp-1014h] +
mov ecx [eax] +
lea edx [ebp-1024h] +
push edx  +
lea edx [ebp-1018h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_10107BE  +
mov edx offset unk_101F948 +
mov esi offset dword_1001260 +
mov edi edx +
movs   +
movs   +
movs   +
xor eax eax +
cmp [ebp-1024h] eax +
movs   +
jle loc_101070A  +
mov esi [ebp-1018h] +
lea ecx [esi+18h] +
mov edi [ecx] +
cmp edi dword_101F940 +
jnz loc_1010684  +
mov edi [ecx+4] +
cmp edi dword_101F944 +
jz loc_1010692  +
inc eax  +
add ecx 50h +
cmp eax [ebp-1024h] +
jl loc_101066F  +
jmp loc_101070A  +
imul eax eax +
add eax esi +
mov ecx [eax+10h] +
cmp ecx 4 +
jz loc_10106E2  +
mov ecx [ebx] +
cmp ecx 1 +
jnz loc_10106AC  +
cmp byte ptr [ebx+20h] 27h +
jz loc_10106E2  +
cmp ecx 2 +
jnz loc_10106C2  +
push 4  +
lea edi [ebx+20h] +
pop ecx  +
mov esi offset dword_10012C0 +
xor ebx ebx +
cmps   +
jz loc_10106E2  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10106DD  +
cmp dword_101F920 0 +
mov esi offset unk_101F9D8 +
jnz loc_10106E7  +
mov esi offset dword_1001260 +
jmp loc_10106E7  +
lea esi [eax+28h] +
jmp loc_10106E7  +
mov esi offset unk_101F9D8 +
mov edi edx +
movs   +
movs   +
movs   +
movs   +
jmp loc_101070A  +
push offset aSelectPartitio  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-1008h] 80070057h +
mov eax [ebp-1010h] +
xor edi edi +
cmp eax edi +
jz loc_1010722  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1010h] edi +
cmp [ebp-100Ch] edi +
jz loc_101073C  +
push dword ptr [ebp-100Ch]  +
call ds:CoTaskMemFree  +
mov [ebp-100Ch] edi +
mov eax dword_101F940 +
or eax dword_101F944 +
jnz loc_1010758  +
push 0F9h  +
call sub_1012B18  +
jmp loc_101086D  +
mov eax [ebp-1014h] +
mov ecx [eax] +
lea edx [ebp-1010h] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jge loc_1010788  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax esi +
jmp loc_10108CF  +
mov eax [ebp-1010h] +
mov ecx [eax] +
lea edx [ebp-1020h] +
push edx  +
lea edx [ebp-100Ch] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-1010h] +
cmp eax edi +
jz loc_10107BA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1010h] edi +
cmp esi edi +
jge loc_10107D5  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-1008h] esi +
jmp loc_101086D  +
mov eax [ebp-100Ch] +
cmp eax edi +
jnz loc_10107F5  +
push 1C4h  +
call sub_1012B18  +
mov dword ptr [ebp-1008h] 8000FFFFh +
jmp loc_101086D  +
xor esi esi +
mov ecx [eax+10h] +
cmp ecx dword_101F940 +
jnz loc_101080D  +
mov ecx [eax+14h] +
cmp ecx dword_101F944 +
jz loc_1010823  +
inc esi  +
add eax 90h +
cmp esi [ebp-1020h] +
jge loc_10108E0  +
cmp eax edi +
jnz loc_10107F7  +
mov edi 400h +
push edi  +
lea eax [ebp-804h] +
push eax  +
push 0F6h  +
call sub_10124CD  +
imul esi esi +
mov eax [ebp-100Ch] +
push dword ptr [esi+eax+8]  +
lea eax [ebp-804h] +
push eax  +
lea eax [ebp-1004h] +
push edi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp-1004h] +
push eax  +
call sub_1012604  +
mov eax [ebp-1014h] +
xor esi esi +
cmp eax esi +
jz loc_1010885  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1014h] esi +
mov eax [ebp-1010h] +
cmp eax esi +
jz loc_101089B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1010h] esi +
cmp [ebp-1018h] esi +
jz loc_10108B5  +
push dword ptr [ebp-1018h]  +
call ds:CoTaskMemFree  +
mov [ebp-1018h] esi +
cmp [ebp-100Ch] esi +
jz loc_10108C9  +
push dword ptr [ebp-100Ch]  +
call ds:CoTaskMemFree  +
mov eax [ebp-1008h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push 1C2h  +
call sub_1012B18  +
mov dword ptr [ebp-1008h] 80070057h +
jmp loc_101086D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 160h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
or eax 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_4] +
push 70h  +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] eax +
mov [ebp+var_9C] eax +
mov [ebp+var_98] eax +
lea eax [ebp+var_74] +
push ebx  +
push eax  +
mov [ebp+var_78] ebx +
mov [ebp+var_7C] ebx +
mov [ebp+var_A8] ebx +
mov [ebp+var_C0] ebx +
mov [ebp+var_BC] ebx +
mov [ebp+var_B8] ebx +
mov [ebp+var_B4] ebx +
mov [ebp+var_C8] ebx +
mov [ebp+StringUuid] ebx +
mov [ebp+var_C4] ebx +
mov [ebp+var_88] ebx +
mov [ebp+var_84] ebx +
mov [ebp+var_8C] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_AC] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] ebx +
jbe loc_1010C41  +
mov eax [ebp+var_7C] +
lea esi [edi+eax*4] +
mov eax [esi] +
cmp eax ebx +
jz loc_1010C60  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10109DF  +
cmp [ebp+var_A8] ebx +
jnz loc_1010C7B  +
mov [ebp+var_A8] 1 +
jmp loc_1010C0E  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010A86  +
mov eax [ebp+var_7C] +
inc eax  +
mov [ebp+var_7C] eax +
cmp eax [ebp+arg_8] +
jnb loc_1010C7B  +
cmp [ebp+var_C0] ebx +
jnz loc_1010C7B  +
lea esi [edi+eax*4] +
mov ecx [esi] +
cmp ecx ebx +
jz loc_1010C7B  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_80] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1010A27  +
sub eax [ebp+var_80] +
push offset a0123456789  +
sar eax 1 +
push ecx  +
mov [ebp+var_80] eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax [ebp+var_80] +
jnz loc_1010C7B  +
push 0Ah  +
push ebx  +
push dword ptr [esi]  +
call ds:_wcstoui64  +
add esp 0Ch +
push ebx  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_9C] eax +
mov [ebp+var_98] edx +
mov [ebp+var_C0] 1 +
jmp loc_1010C0E  +
push offset aOffset  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010B2D  +
mov eax [ebp+var_7C] +
inc eax  +
mov [ebp+var_7C] eax +
cmp eax [ebp+arg_8] +
jnb loc_1010C7B  +
cmp [ebp+var_BC] ebx +
jnz loc_1010C7B  +
lea esi [edi+eax*4] +
mov ecx [esi] +
cmp ecx ebx +
jz loc_1010C7B  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_80] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1010ACE  +
sub eax [ebp+var_80] +
push offset a0123456789  +
sar eax 1 +
push ecx  +
mov [ebp+var_80] eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax [ebp+var_80] +
jnz loc_1010C7B  +
push 0Ah  +
push ebx  +
push dword ptr [esi]  +
call ds:_wcstoui64  +
add esp 0Ch +
push ebx  +
push 400h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] edx +
mov [ebp+var_BC] 1 +
jmp loc_1010C0E  +
push offset aId  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010B7C  +
mov eax [ebp+var_7C] +
inc eax  +
mov [ebp+var_7C] eax +
cmp eax [ebp+arg_8] +
jnb loc_1010C7B  +
cmp [ebp+var_B8] ebx +
jnz loc_1010C7B  +
mov eax [edi+eax*4] +
cmp eax ebx +
jz loc_1010C7B  +
mov [ebp+StringUuid] eax +
mov [ebp+var_B8] 1 +
jmp loc_1010C0E  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010C7B  +
mov eax [ebp+var_7C] +
inc eax  +
mov [ebp+var_7C] eax +
cmp eax [ebp+arg_8] +
jnb loc_1010C7B  +
cmp [ebp+var_B4] ebx +
jnz loc_1010C7B  +
lea esi [edi+eax*4] +
mov ecx [esi] +
cmp ecx ebx +
jz loc_1010C7B  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_80] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1010BC4  +
sub eax [ebp+var_80] +
push offset a0123456789  +
sar eax 1 +
push ecx  +
mov [ebp+var_80] eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax [ebp+var_80] +
jnz loc_1010C7B  +
push 0Ah  +
push ebx  +
push dword ptr [esi]  +
call ds:_wcstoui64  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp+var_C8] eax +
mov [ebp+var_B4] 1 +
inc [ebp+var_7C]  +
mov eax [ebp+var_7C] +
cmp eax [ebp+arg_8] +
jb loc_10109A2  +
mov eax [ebp+var_A4] +
or eax [ebp+var_A0] +
jz loc_1010DC5  +
mov eax [ebp+var_9C] +
or eax [ebp+var_98] +
jz loc_1010DC5  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1010C96  +
push 3Ch  +
call sub_1012B18  +
jmp loc_1010DD6  +
push offset aCreatePartit_1  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_1010E4B  +
push offset aCreatePartit_1  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1010E4B  +
lea eax [ebp+var_84] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
push [ebp+var_84]  +
call sub_100DE43  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
cmp esi 1 +
jz loc_1010CF2  +
mov eax [ebp+var_84] +
cmp eax ebx +
jz loc_1010CDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_84] ebx +
lea eax [ebp+var_84] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
lea eax [ebp+var_9C] +
push eax  +
lea eax [ebp+var_A4] +
push eax  +
call sub_100DF0F  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
cmp esi 1 +
jnz loc_1010D1E  +
push 1F0h  +
jmp loc_1010C56  +
mov eax [ebp+var_84] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
mov eax [ebp+var_30] +
mov [ebp+var_140] eax +
cmp eax 1 +
jnz loc_1010E68  +
mov edi [ebp+StringUuid] +
mov byte ptr [ebp+var_138+1] bl +
cmp edi ebx +
jz loc_1010E5C  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1010D63  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
ja loc_1010DC5  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1010D7B  +
sub eax edx +
sar eax 1 +
push offset a0123456789abcd  +
push edi  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_1010DC5  +
push 10h  +
lea eax [ebp+var_C4] +
push eax  +
push edi  +
call ds:wcstol  +
mov byte ptr [ebp+var_138] al +
mov eax [ebp+var_C4] +
add esp 0Ch +
cmp [eax] bx +
jz loc_1010F4B  +
push offset aCreatePartit_1  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_78] 80070057h +
mov eax [ebp+var_84] +
cmp eax ebx +
jz loc_1010DF3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_84] ebx +
mov eax [ebp+var_88] +
cmp eax ebx +
jz loc_1010E09  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_88] ebx +
mov eax [ebp+var_8C] +
cmp eax ebx +
jz loc_1010E1F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8C] ebx +
lea eax [ebp+var_74] +
push eax  +
call sub_10028A5  +
cmp [ebp+pv] ebx +
jz loc_1010E3C  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_A8] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_78] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
mov byte ptr [ebp+var_138] 6 +
jmp loc_1010F4B  +
lea eax [ebp+Uuid] +
push eax  +
mov [ebp+var_118] ebx +
mov [ebp+var_114] 80000000h +
call ds:UuidCreate  +
test eax eax +
jz loc_1010E90  +
push 3Ah  +
jmp loc_1010C56  +
cmp [ebp+StringUuid] ebx +
jz loc_1010F33  +
lea eax [ebp+var_138] +
push eax  +
push [ebp+StringUuid]  +
call ds:UuidFromStringW  +
test eax eax +
jnz loc_1010DC5  +
push 4  +
pop eax  +
mov ecx eax +
mov edi offset dword_1001280 +
lea esi [ebp+var_138] +
xor edx edx +
cmps   +
jnz loc_1010ED4  +
push offset aMicrosoftReser  +
jmp loc_1010F20  +
mov ecx eax +
mov edi offset dword_10012D0 +
lea esi [ebp+var_138] +
xor edx edx +
cmps   +
jnz loc_1010EEE  +
push offset aClusterPartiti  +
jmp loc_1010F20  +
mov ecx eax +
mov edi offset dword_10012A0 +
lea esi [ebp+var_138] +
xor edx edx +
cmps   +
jnz loc_1010F08  +
push offset aLdmMetadataPar  +
jmp loc_1010F20  +
mov ecx eax +
mov edi offset dword_10012B0 +
lea esi [ebp+var_138] +
xor eax eax +
cmps   +
jnz loc_1010F42  +
push offset aLdmDataPartiti  +
lea eax [ebp+var_110] +
push 24h  +
push eax  +
call sub_1005575  +
add esp 0Ch +
jmp loc_1010F4B  +
mov esi offset dword_1001290 +
lea edi [ebp+var_138] +
movs   +
movs   +
movs   +
movs   +
xor eax eax +
mov [ebp+var_110] ax +
mov eax [ebp+var_84] +
mov ecx [eax] +
lea edx [ebp+var_88] +
push edx  +
push offset dword_10023C8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
mov eax [ebp+var_88] +
mov ecx [eax] +
lea edx [ebp+var_8C] +
push edx  +
lea edx [ebp+var_140] +
push edx  +
push [ebp+var_C8]  +
push [ebp+var_98]  +
push [ebp+var_9C]  +
push [ebp+var_A0]  +
push [ebp+var_A4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_88] +
cmp eax ebx +
jz loc_1010FBC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_88] ebx +
cmp esi ebx +
jl loc_101103D  +
mov eax [ebp+var_8C] +
mov ecx [eax] +
lea edx [ebp+var_160] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_101103D  +
cmp [ebp+dwMessageId] ebx +
jge loc_1011007  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_78] eax +
jmp loc_1010DDD  +
mov eax [ebp+var_158] +
mov dword_101F940 eax +
mov eax [ebp+var_154] +
lea edx [ebp+var_AC] +
push edx  +
mov dword_101F944 eax +
mov eax [ebp+var_84] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jge loc_1011051  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_78] esi +
jmp loc_1010DDD  +
mov edx [ebp+var_AC] +
cmp edx ebx +
mov [ebp+var_7C] ebx +
jle loc_10110FC  +
mov ecx [ebp+pv] +
lea eax [ecx+18h] +
mov esi [eax] +
cmp esi dword_101F940 +
jnz loc_1011080  +
mov esi [eax+4] +
cmp esi dword_101F944 +
jz loc_101108D  +
inc [ebp+var_7C]  +
add eax 50h +
cmp [ebp+var_7C] edx +
jl loc_101106B  +
jmp loc_10110FC  +
mov eax [ebp+var_7C] +
imul eax eax +
add eax ecx +
mov ecx [eax+10h] +
mov [ebp+var_80] ecx +
cmp ecx 4 +
jz loc_10110EE  +
cmp [ebp+var_140] 1 +
jnz loc_10110B2  +
cmp byte ptr [ebp+var_138] 27h +
jz loc_10110EE  +
cmp [ebp+var_140] 2 +
jnz loc_10110CF  +
push 4  +
pop ecx  +
lea edi [ebp+var_138] +
mov esi offset dword_10012C0 +
xor edx edx +
cmps   +
jz loc_10110EE  +
cmp [ebp+var_80] 3 +
jnz loc_10110E9  +
mov esi offset unk_101F9D8 +
cmp dword_101F920 ebx +
jnz loc_10110F3  +
mov esi offset dword_1001260 +
jmp loc_10110F3  +
lea esi [eax+28h] +
jmp loc_10110F3  +
mov esi offset unk_101F9D8 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_AC] +
cmp [ebp+var_7C] eax +
jnz loc_1011111  +
push 1C2h  +
jmp loc_1010C56  +
push 3Dh  +
call sub_1012B18  +
jmp loc_1010DDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 158h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov ebx [ebp+arg_4] +
push edi  +
lea esi [ebp+arg_C] +
lea edi [ebp+var_14] +
movs   +
movs   +
xor edx edx +
movs   +
or eax 0FFFFFFFFh +
movs   +
push 4  +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] eax +
mov [ebp+var_9C] eax +
mov [ebp+var_98] eax +
pop ecx  +
lea edi [ebp+var_14] +
mov esi offset dword_1001280 +
xor eax eax +
cmps   +
mov [ebp+var_88] edx +
mov [ebp+var_B4] edx +
mov [ebp+var_AC] edx +
mov [ebp+var_C0] edx +
mov [ebp+var_BC] edx +
mov [ebp+var_94] edx +
mov [ebp+var_B0] edx +
mov dword ptr [ebp+var_8C] edx +
jnz loc_10111B1  +
mov [ebp+var_90] offset aCreatePartit_2 +
jmp loc_10111D6  +
push 4  +
pop ecx  +
lea edi [ebp+var_14] +
mov esi offset dword_1001270 +
xor eax eax +
cmps   +
mov [ebp+var_90] offset aCreatePartit_3 +
jz loc_10111D6  +
mov [ebp+var_90] offset aCreatePartit_4 +
push 70h  +
push edx  +
lea eax [ebp+var_84] +
push eax  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] 0 +
jbe loc_10113E5  +
mov edi [ebp+var_B4] +
mov eax [ebx+edi*4] +
test eax eax +
jz loc_10113AD  +
mov esi ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1011226  +
mov [ebp+var_AC] 1 +
jmp loc_1011353  +
push offset aSize  +
push dword ptr [ebx+edi*4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10112BF  +
inc edi  +
cmp edi [ebp+arg_8] +
jnb loc_10113C9  +
cmp [ebp+var_C0] eax +
jnz loc_10113C9  +
mov ecx [ebx+edi*4] +
test ecx ecx +
jz loc_10113C9  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1011260  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10113C9  +
push 0Ah  +
push 0  +
push dword ptr [ebx+edi*4]  +
call ds:_wcstoui64  +
add esp 0Ch +
push 0  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_9C] eax +
mov [ebp+var_98] edx +
mov [ebp+var_C0] 1 +
jmp loc_1011353  +
push offset aOffset  +
push dword ptr [ebx+edi*4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10113C9  +
inc edi  +
cmp edi [ebp+arg_8] +
jnb loc_10113C9  +
cmp [ebp+var_BC] eax +
jnz loc_10113C9  +
mov ecx [ebx+edi*4] +
test ecx ecx +
jz loc_10113C9  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10112F9  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10113C9  +
push 0Ah  +
push 0  +
push dword ptr [ebx+edi*4]  +
call ds:_wcstoui64  +
add esp 0Ch +
push 0  +
push 400h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_A4] eax +
mov [ebp+var_A0] edx +
mov [ebp+var_BC] 1 +
inc edi  +
mov [ebp+var_B4] edi +
cmp edi [ebp+arg_8] +
jb loc_10111F2  +
mov eax [ebp+var_A4] +
or eax [ebp+var_A0] +
jz loc_101165B  +
mov eax [ebp+var_9C] +
or eax [ebp+var_98] +
jz loc_101165B  +
cmp [ebp+var_98] 0 +
ja loc_10113E5  +
jb loc_101139E  +
cmp [ebp+var_9C] 100000h +
jnb loc_10113E5  +
push 1EFh  +
call sub_1012B18  +
jmp loc_101166D  +
push [ebp+var_90]  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10116C3  +
push [ebp+var_90]  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10116C3  +
push 4  +
pop ebx  +
mov ecx ebx +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_10113FE  +
push 3Ch  +
jmp loc_10113A3  +
lea eax [ebp+var_8C] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
push dword ptr [ebp+var_8C]  +
call sub_100DE43  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
cmp esi 1 +
jz loc_101145B  +
mov eax dword ptr [ebp+var_8C] +
test eax eax +
jz loc_1011445  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp+var_8C] 0 +
lea eax [ebp+var_8C] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
lea eax [ebp+var_9C] +
push eax  +
lea eax [ebp+var_A4] +
push eax  +
call sub_100DF0F  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
cmp esi 1 +
jnz loc_1011487  +
push 1F0h  +
jmp loc_10113A3  +
mov eax dword ptr [ebp+var_8C] +
mov ecx [eax] +
lea edx [ebp+var_84] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
push 2  +
pop eax  +
cmp [ebp+var_40] eax +
jz loc_10114B6  +
push 1F2h  +
jmp loc_10113A3  +
and [ebp+var_110] 0 +
mov [ebp+var_138] eax +
lea eax [ebp+Uuid] +
push eax  +
mov [ebp+var_10C] 80000000h +
call ds:UuidCreate  +
test eax eax +
jz loc_10114E5  +
push 3Ah  +
jmp loc_10113A3  +
lea esi [ebp+var_14] +
lea edi [ebp+var_130] +
movs   +
movs   +
movs   +
movs   +
mov ecx ebx +
mov edi offset dword_1001280 +
lea esi [ebp+var_130] +
xor eax eax +
cmps   +
jnz loc_101150C  +
push offset aMicrosoftReser  +
jmp loc_101153E  +
mov ecx ebx +
mov edi offset dword_10012A0 +
lea esi [ebp+var_130] +
xor eax eax +
cmps   +
jnz loc_1011526  +
push offset aLdmMetadataPar  +
jmp loc_101153E  +
mov ecx ebx +
mov edi offset dword_10012B0 +
lea esi [ebp+var_130] +
xor eax eax +
cmps   +
jnz loc_1011551  +
push offset aLdmDataPartiti  +
lea eax [ebp+var_108] +
push 24h  +
push eax  +
call sub_1005575  +
add esp 0Ch +
jmp loc_101155A  +
xor eax eax +
mov [ebp+var_108] ax +
mov eax dword ptr [ebp+var_8C] +
mov ecx [eax] +
lea edx [ebp+var_94] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10115F2  +
mov eax [ebp+var_94] +
mov ecx [eax] +
lea edx [ebp+var_B0] +
push edx  +
lea edx [ebp+var_138] +
push edx  +
push [ebp+var_98]  +
push [ebp+var_9C]  +
push [ebp+var_A0]  +
push [ebp+var_A4]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_94] +
test eax eax +
jz loc_10115C2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_94] 0 +
lea eax [ebp+var_84] +
push eax  +
call sub_10028A5  +
test esi esi +
jl loc_10115F2  +
mov eax [ebp+var_B0] +
mov ecx [eax] +
lea edx [ebp+var_158] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_1011606  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_88] esi +
jmp loc_1011677  +
cmp [ebp+dwMessageId] 0 +
jge loc_101162E  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_88] eax +
jmp loc_1011677  +
mov eax [ebp+var_150] +
mov esi offset unk_101F9D8 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
mov dword_101F940 eax +
mov eax [ebp+var_14C] +
push 3Dh  +
mov dword_101F944 eax +
movs   +
call sub_1012B18  +
jmp loc_1011677  +
push [ebp+var_90]  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_88] 80070057h +
mov eax dword ptr [ebp+var_8C] +
test eax eax +
jz loc_101168E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp+var_8C] 0 +
mov eax [ebp+var_94] +
test eax eax +
jz loc_10116A5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_94] 0 +
lea eax [ebp+var_84] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_AC] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_88] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+10h]  +
mov esi offset dword_1001280 +
push dword ptr [ebp+0Ch]  +
movs   +
push dword ptr [ebp+8]  +
movs   +
movs   +
movs   +
call sub_1011122  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+10h]  +
mov esi offset dword_1001270 +
push dword ptr [ebp+0Ch]  +
movs   +
push dword ptr [ebp+8]  +
movs   +
movs   +
movs   +
call sub_1011122  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
xor ecx ecx +
push edi  +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebx] esi +
mov [ebp+var_14] esi +
inc ecx  +
mov eax dword_101F928 +
mov edx [eax] +
lea edi [ebp+var_8] +
push edi  +
push ecx  +
push eax  +
call dword ptr [edx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_1011808  +
jmp loc_10117D5  +
cmp edi esi +
jl loc_1011808  +
mov eax [ebp+var_4] +
lea edx [ebp+var_18] +
push edx  +
push offset dword_1002328  +
mov [ebp+var_18] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_10117A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] esi +
cmp edi esi +
jl loc_1011808  +
push 0Ch  +
call loc_101CDA5  +
pop ecx  +
cmp eax esi +
jz loc_1011803  +
mov ecx [ebp+var_18] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
inc [ebp+var_C]  +
mov [eax+8] ecx +
mov [eax+4] esi +
cmp [ebx] esi +
jnz loc_10117CC  +
mov [ebx] eax +
jmp loc_10117D2  +
mov ecx [ebp+var_10] +
mov [ecx+4] eax +
mov [ebp+var_10] eax +
mov eax [ebp+var_8] +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
mov [ebp+arg_0] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1011775  +
inc [ebp+var_14]  +
push 2  +
pop ecx  +
cmp [ebp+var_14] ecx +
jl loc_1011759  +
jmp loc_1011808  +
mov edi 8007000Eh +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1011818  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_1011825  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
jmp loc_1011858  +
mov eax [esi] +
test eax eax +
jz loc_101184E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
mov esi [esi+4] +
push edi  +
call sub_101CD94  +
pop ecx  +
mov edi esi +
test esi esi +
jnz loc_101183F  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 38h  +
lea eax [ebp+var_4C] +
push 0  +
push eax  +
call memset  +
or dword_101F0BC 0FFFFFFFFh +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp+var_50] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_1011900  +
mov eax [ebp+var_50] +
mov ecx [eax] +
lea edx [ebp+var_4C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1011900  +
push ebx  +
mov ebx dword_101F934 +
push edi  +
lea esi [ebp+var_4C] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
jmp loc_10118F0  +
lea eax [ebp+var_4C] +
push eax  +
call sub_1004254  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp+var_4C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push 4  +
pop ecx  +
lea edi [ebp+var_14] +
lea esi [ebp+var_4C] +
xor eax eax +
cmps   +
jz loc_10118F6  +
mov ebx [ebx+4] +
test ebx ebx +
jnz loc_10118C9  +
jmp loc_10118FE  +
mov eax [ebx+8] +
mov dword_101F0BC eax +
pop edi  +
pop ebx  +
lea eax [ebp+var_4C] +
push eax  +
call sub_1004254  +
mov eax [ebp+var_50] +
pop esi  +
test eax eax +
jz loc_1011917  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
lea edx [ebp+var_48] +
xor edi edi +
push edx  +
mov [ebp+var_50] eax +
mov eax dword_101F928 +
push 4  +
mov [ebp+var_48] edi +
mov [ebp+var_44] edi +
mov [ebp+var_4C] edi +
mov [ebp+var_40] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1011A14  +
push esi  +
jmp loc_10119CD  +
mov eax [ebp+var_44] +
mov ecx [eax] +
lea edx [ebp+var_40] +
push edx  +
push offset dword_1002328  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_44] +
cmp eax edi +
jz loc_1011993  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_44] edi +
cmp esi edi +
jl loc_10119CD  +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_3C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx edi +
jl loc_10119BB  +
push 4  +
pop ecx  +
mov edi offset dword_1001D5C +
lea esi [ebp+var_3C] +
xor eax eax +
cmps   +
jz loc_10119E8  +
mov eax [ebp+var_40] +
xor edi edi +
cmp eax edi +
jz loc_10119CD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40] edi +
mov eax [ebp+var_48] +
mov ecx [eax] +
lea edx [ebp+var_4C] +
push edx  +
lea edx [ebp+var_44] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx edi +
jz loc_1011970  +
jmp loc_10119F3  +
mov esi [ebp+var_40] +
and [ebp+var_40] 0 +
test esi esi +
jnz loc_10119FE  +
test ebx ebx +
jl loc_1011A13  +
mov ebx 80042405h +
jmp loc_1011A13  +
push [ebp+var_50]  +
mov eax [esi] +
push offset dword_10025E8  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_1011A21  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_1011A6B  +
push edi  +
mov eax [esi] +
mov edi esi +
test eax eax +
jz loc_1011A5A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
mov esi [esi+4] +
push edi  +
call sub_101CD94  +
pop ecx  +
test esi esi +
jnz loc_1011A49  +
and [ebx] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 4  +
mov edx offset unk_101F9A4 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_1011A9E  +
mov eax 80004005h +
jmp loc_1011ADF  +
mov eax dword_101F928 +
mov ecx [eax] +
lea esi [ebp+var_4] +
push esi  +
push 0Ah  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1011ADF  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1011ADD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 4  +
mov edx offset unk_101F994 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_1011B12  +
mov eax 80004005h +
jmp loc_1011B53  +
mov eax dword_101F928 +
mov ecx [eax] +
lea esi [ebp+var_4] +
push esi  +
push 0Ah  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1011B53  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1011B51  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
and [ebp+var_40] edi +
and [ebp+var_3C] edi +
push 34h  +
lea eax [ebp+var_38] +
push edi  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp+var_40] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jz loc_1011B9E  +
xor eax eax +
jmp loc_1011BCD  +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_3C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1011BB5  +
mov edi [ebp+var_10] +
and edi 1 +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004254  +
mov eax [ebp+var_40] +
test eax eax +
jz loc_1011BCB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor esi esi +
push 8  +
xor eax eax +
inc esi  +
pop ecx  +
lea edi [ebp-34h] +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-0Ch] ebx +
mov [ebp-10h] ebx +
mov [ebp-8] ebx +
stos   +
cmp [ebp+10h] esi +
ja loc_1011D22  +
jnz loc_1011C33  +
mov eax [ebp+0Ch] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1011D22  +
mov [ebp-14h] esi +
push 4  +
mov eax offset dword_1001260 +
pop ecx  +
mov edi eax +
mov esi offset unk_101F9A4 +
xor edx edx +
cmps   +
jz loc_1011C8B  +
lea eax [ebp-4] +
push eax  +
call sub_1011A76  +
mov esi eax +
test esi esi +
jl loc_1011C81  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jl loc_1011C81  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
lea edx [ebp-8] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_1011CB9  +
push esi  +
call sub_1012BB1  +
mov ebx esi +
jmp loc_1011CD5  +
push 4  +
mov edi eax +
pop ecx  +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jz loc_1011CCB  +
lea eax [ebp-0Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_1011C81  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_1011C51  +
***
cmp [ebp-8] ebx +
jge loc_1011CD9  +
push dword ptr [ebp-8]  +
call sub_1012BB1  +
mov ebx [ebp-8] +
jmp loc_1011CD5  +
mov eax 44Ch +
mov ebx 80070057h +
test eax eax +
jnz loc_1011CE0  +
push 450h  +
jmp loc_1011CE1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-4] +
test eax eax +
jz loc_1011CF7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-0Ch] +
test eax eax +
jz loc_1011D08  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-0Ch] 0 +
mov eax [ebp-10h] +
test eax eax +
jz loc_1011D15  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
neg eax  +
sbb eax eax +
not eax  +
and eax ebx +
jmp loc_1011D38  +
push offset aRecover  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor esi esi +
push 38h  +
mov [ebp+var_54] eax +
lea eax [ebp+var_3C] +
push esi  +
push eax  +
mov [ebp+var_48] esi +
mov [ebp+var_44] esi +
mov [ebp+var_40] esi +
mov [ebp+var_4C] esi +
call memset  +
mov eax dword_101F928 +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_48] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_1011E59  +
jmp loc_1011DFF  +
cmp edi esi +
jl loc_1011E59  +
mov eax [ebp+var_44] +
mov ecx [eax] +
lea edx [ebp+var_40] +
push edx  +
push offset dword_1002328  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+var_44] +
cmp eax esi +
jz loc_1011DC3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_44] esi +
cmp edi esi +
jl loc_1011E59  +
mov eax [ebp+var_40] +
mov ecx [eax] +
lea edx [ebp+var_3C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004254  +
cmp edi esi +
jl loc_1011E59  +
mov eax [ebp+arg_0] +
test [ebp+var_10] eax +
mov eax [ebp+var_40] +
jnz loc_1011E27  +
cmp eax esi +
jz loc_1011DFF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40] esi +
mov eax [ebp+var_48] +
lea edx [ebp+var_50] +
push edx  +
lea edx [ebp+var_44] +
push edx  +
push 1  +
mov [ebp+var_50] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_1011D98  +
mov edi 80042400h +
jmp loc_1011E59  +
mov ecx [eax] +
lea edx [ebp+var_4C] +
push edx  +
push offset dword_1002348  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+var_40] +
cmp eax esi +
jz loc_1011E47  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40] esi +
cmp edi esi +
jl loc_1011E59  +
mov eax [ebp+var_4C] +
push [ebp+var_54]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
mov eax [ebp+var_48] +
cmp eax esi +
jz loc_1011E69  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_48] esi +
mov eax [ebp+var_4C] +
cmp eax esi +
jz loc_1011E79  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4C] esi +
mov eax [ebp+var_44] +
cmp eax esi +
jz loc_1011E89  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_44] esi +
mov eax [ebp+var_40] +
cmp eax esi +
jz loc_1011E99  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40] esi +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004254  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 7  +
pop ecx  +
xor eax eax +
xor ebx ebx +
lea edi [ebp+var_20] +
push 38h  +
stos   +
lea eax [ebp+var_58] +
push ebx  +
push eax  +
mov [ebp+var_60] ebx +
mov [ebp+var_5C] ebx +
call memset  +
mov eax dword_101F928 +
mov esi offset dword_1001260 +
mov edi offset unk_101F994 +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_60] +
push edx  +
xor edi edi +
inc edi  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_10120F6  +
jmp loc_10120C4  +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_64] +
lea edx [ebp+var_70] +
push edx  +
push offset dword_1002328  +
mov [ebp+var_70] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_70] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_58] +
push eax  +
call sub_1004254  +
mov eax [ebp+var_70] +
cmp eax ebx +
jz loc_1011F6D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_70] ebx +
cmp esi ebx +
jl loc_10120F6  +
test [ebp+var_2C] 4 +
mov eax [ebp+var_64] +
jz loc_1011F91  +
cmp eax ebx +
jz loc_10120C1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10120C1  +
lea edx [ebp+var_6C] +
push edx  +
push offset dword_1002348  +
mov [ebp+var_6C] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_64] +
cmp eax ebx +
jz loc_1011FB4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_64] ebx +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_6C] +
mov ecx [eax] +
lea edx [ebp+var_5C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_6C] +
cmp eax ebx +
jz loc_1011FDB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_6C] ebx +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_78] +
push edx  +
lea edx [ebp+var_68] +
push edx  +
push edi  +
mov [ebp+var_68] ebx +
mov [ebp+var_78] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jz loc_10120B1  +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_68] +
lea edx [ebp+var_7C] +
push edx  +
push offset loc_1002358  +
mov [ebp+var_7C] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_68] +
cmp eax ebx +
jz loc_1012033  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_68] ebx +
cmp esi ebx +
jl loc_10120F6  +
mov eax [ebp+var_7C] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_1012164  +
cmp [ebp+var_C] 1 +
jz loc_1012130  +
push 4  +
mov eax offset unk_101F994 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1012084  +
cmp [ebp+var_C] 4 +
jnz loc_1012084  +
test [ebp+var_8] 8 +
jnz loc_1012084  +
lea esi [ebp+var_20] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
lea eax [ebp+var_20] +
push eax  +
call sub_100428F  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_78] +
push edx  +
lea edx [ebp+var_68] +
push edx  +
push 1  +
mov [ebp+var_68] ebx +
mov [ebp+var_78] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_1012005  +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_10120C1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
xor edi edi +
inc edi  +
mov eax [ebp+var_60] +
lea edx [ebp+var_74] +
push edx  +
lea edx [ebp+var_64] +
push edx  +
push edi  +
mov [ebp+var_64] ebx +
mov [ebp+var_74] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1011F1F  +
mov eax [ebp+var_60] +
cmp eax ebx +
jz loc_1012106  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] ebx +
mov eax [ebp+var_60] +
cmp eax ebx +
jz loc_1012106  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] ebx +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_1012116  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
lea eax [ebp+var_20] +
push eax  +
call sub_100428F  +
lea eax [ebp+var_58] +
push eax  +
call sub_1004254  +
cmp esi ebx +
jge loc_1012162  +
mov eax esi +
jmp loc_1012164  +
lea esi [ebp+var_20] +
mov edi offset unk_101F994 +
movs   +
movs   +
movs   +
lea eax [ebp+var_20] +
push eax  +
movs   +
call sub_100428F  +
mov eax [ebp+var_5C] +
cmp eax ebx +
jz loc_1012155  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] ebx +
mov eax [ebp+var_60] +
cmp eax ebx +
jz loc_1012162  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_20] +
push 38h  +
stos   +
lea eax [ebp+var_58] +
push esi  +
push eax  +
mov [ebx] esi +
mov [ebp+var_64] esi +
mov [ebp+var_60] esi +
mov [ebp+var_70] esi +
mov [ebp+var_6C] esi +
mov [ebp+var_68] esi +
mov [ebp+var_74] esi +
call memset  +
mov eax dword_101F928 +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_64] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_10123EB  +
jmp loc_10123C0  +
cmp edi esi +
jl loc_10123EB  +
mov eax [ebp+var_5C] +
mov ecx [eax] +
lea edx [ebp+var_70] +
push edx  +
push offset dword_1002328  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi esi +
jl loc_10123EB  +
mov eax [ebp+var_70] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
lea eax [ebp+var_58] +
push eax  +
call sub_1004254  +
mov eax [ebp+var_70] +
cmp eax esi +
jz loc_101222D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_70] esi +
cmp edi esi +
jl loc_10123C0  +
test [ebp+var_2C] 4 +
mov eax [ebp+var_5C] +
jz loc_1012251  +
cmp eax esi +
jz loc_10123C0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10123C0  +
mov ecx [eax] +
lea edx [ebp+var_6C] +
push edx  +
push offset dword_1002348  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+var_5C] +
cmp eax esi +
jz loc_1012271  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C] esi +
cmp edi esi +
jl loc_10123C0  +
mov eax [ebp+var_6C] +
mov ecx [eax] +
lea edx [ebp+var_60] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebp+var_6C] +
cmp eax esi +
jz loc_1012298  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_6C] esi +
cmp edi esi +
jl loc_10123C0  +
jmp loc_101238F  +
cmp edi esi +
jl loc_10123EB  +
mov eax [ebp+var_68] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+var_68] +
cmp eax esi +
jz loc_10122D0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_68] esi +
cmp edi esi +
jl loc_101238F  +
mov eax [ebp+var_74] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_101238F  +
cmp [ebp+var_C] 4 +
jnz loc_10122FD  +
test [ebp+var_8] 8 +
jnz loc_1012386  +
lea eax [ebp+var_78] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
mov ecx offset unk_101F9C0 +
mov [ebp+var_78] esi +
call sub_101C99C  +
mov edi eax +
cmp edi esi +
jl loc_10123EB  +
mov edi [ebx] +
cmp edi esi +
jz loc_1012366  +
mov eax [edi+8] +
cmp eax [ebp+var_78] +
jnb loc_1012366  +
push 0Ch  +
call loc_101CDA5  +
pop ecx  +
cmp eax esi +
jz loc_10123E6  +
mov ecx [ebp+var_74] +
mov [eax] ecx +
mov ecx [ebp+var_78] +
mov [eax+8] ecx +
mov ecx [ebx] +
jmp loc_1012356  +
mov edx [ecx+4] +
mov edi [edx+8] +
cmp edi [ebp+var_78] +
jnb loc_101235B  +
mov ecx edx +
cmp [ecx+4] esi +
jnz loc_1012349  +
mov edx [ecx+4] +
mov [eax+4] edx +
mov [ecx+4] eax +
jmp loc_1012386  +
push 0Ch  +
call loc_101CDA5  +
pop ecx  +
mov [ebx] eax +
cmp eax esi +
jz loc_10123E6  +
mov ecx [ebp+var_74] +
mov [eax] ecx +
mov eax [ebx] +
mov [eax+4] edi +
mov eax [ebx] +
mov ecx [ebp+var_78] +
mov [eax+8] ecx +
lea eax [ebp+var_20] +
push eax  +
call sub_100428F  +
mov eax [ebp+var_60] +
lea edx [ebp+var_80] +
push edx  +
lea edx [ebp+var_68] +
push edx  +
push 1  +
mov [ebp+var_80] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_10122A5  +
mov eax [ebp+var_60] +
cmp eax esi +
jz loc_10123C0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] esi +
mov eax [ebp+var_64] +
lea edx [ebp+var_7C] +
push edx  +
lea edx [ebp+var_5C] +
push edx  +
push 1  +
mov [ebp+var_5C] esi +
mov [ebp+var_7C] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi 1 +
jnz loc_10121E2  +
jmp loc_10123EB  +
mov edi 8007000Eh +
mov eax [ebp+var_64] +
cmp eax esi +
jz loc_10123FB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_64] esi +
mov eax [ebp+var_60] +
cmp eax esi +
jz loc_101240B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_60] esi +
mov eax [ebp+var_70] +
cmp eax esi +
jz loc_101241B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_70] esi +
mov eax [ebp+var_6C] +
cmp eax esi +
jz loc_101242B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_6C] esi +
mov eax [ebp+var_68] +
cmp eax esi +
jz loc_101243B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_68] esi +
lea eax [ebp+var_20] +
push eax  +
call sub_100428F  +
lea eax [ebp+var_58] +
push eax  +
call sub_1004254  +
cmp edi esi +
jge loc_1012469  +
mov eax [ebp+var_74] +
cmp eax esi +
jz loc_1012461  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_74] esi +
push ebx  +
call sub_1011A38  +
mov [ebx] esi +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10124AA  +
cmp eax esi +
ja loc_10124AA  +
jz loc_10124AF  +
jmp loc_10124B7  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10124C0  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleW  +
mov ecx [ebp+lpBuffer] +
test ecx ecx +
jz loc_10124EC  +
cmp [ebp+nBufferMax] 0 +
jle loc_10124EC  +
xor edx edx +
mov [ecx] dx +
push [ebp+nBufferMax]  +
push ecx  +
push [ebp+uID]  +
push eax  +
call ds:LoadStringW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
mov [ebp+NumberOfBytesWritten] esi +
cmp dword_101F9E8 esi +
jz loc_101254D  +
mov eax [ebp+lpWideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_101251E  +
push esi  +
sub eax edx +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
sar eax 1 +
push eax  +
push [ebp+lpWideCharStr]  +
push hConsoleHandle  +
call ds:WriteConsoleW  +
test eax eax +
jnz loc_10125BE  +
call ds:GetLastError  +
jmp loc_10125BE  +
push ebx  +
push edi  +
mov edi ds:WideCharToMultiByte +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
push 1  +
call edi  +
mov ebx eax +
cmp ebx esi +
jnz loc_1012571  +
call ds:GetLastError  +
jmp loc_10125BC  +
push ebx  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_10125BC  +
push esi  +
push esi  +
push ebx  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
push 1  +
call edi  +
cmp eax esi +
jz loc_10125AD  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
dec eax  +
push eax  +
push [ebp+hMem]  +
push hConsoleHandle  +
call ds:WriteFile  +
test eax eax +
jnz loc_10125B3  +
call ds:GetLastError  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10125DD  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10125E2  +
mov eax 80070057h +
test eax eax +
jl loc_10125FB  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1012481  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1012503  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1004h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor eax eax +
mov esi 7FEh +
push esi  +
push eax  +
mov [ebp+WideCharStr] ax +
lea eax [ebp-1002h] +
push eax  +
call memset  +
xor eax eax +
push esi  +
push eax  +
mov [ebp+Buffer] ax +
lea eax [ebp-802h] +
push eax  +
call memset  +
add esp 18h +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_10124CD  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_10125C8  +
pop esi  +
test eax eax +
jl loc_10126A2  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1009CAC  +
test eax eax +
jz loc_10126C7  +
pop ebp  +
jmp sub_1012503  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 180Ch +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_1808] eax +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 0E6h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1012714  +
sub eax ecx +
sar eax 1 +
xor edi edi +
cmp [ebp+arg_8] edi +
mov [ebp+var_180C] eax +
jl loc_1012758  +
push ebx  +
mov ebx 2000h +
jle loc_1012752  +
push 0  +
push esi  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
call __alldiv  +
inc edi  +
mov dword ptr [ebp+arg_4] eax +
mov [ebp+arg_8] edx +
test edx edx +
jg loc_1012737  +
jl loc_1012757  +
cmp dword ptr [ebp+arg_4] ebx +
jnb loc_1012737  +
pop ebx  +
mov eax [ebp+var_180C] +
cmp edi eax +
jb loc_1012765  +
lea edi [eax-1] +
push esi  +
test edi edi +
jnz loc_101277D  +
lea eax [ebp+var_1004] +
push eax  +
push 0E4h  +
call sub_10124CD  +
jmp loc_10127AE  +
lea eax [ebp+var_804] +
push eax  +
push 0E5h  +
call sub_10124CD  +
movzx eax [ebp+edi*2+Buffer] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
push [ebp+arg_8]  +
lea eax [ebp+var_1004] +
push dword ptr [ebp+arg_4]  +
push eax  +
push esi  +
push [ebp+var_1808]  +
call sub_1005575  +
mov ecx [ebp+var_4] +
add esp 14h +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 2000h +
jbe loc_101282D  +
mov eax edi +
and edi 3FFh +
shr eax 0Ah +
cmp edi 200h +
jb loc_1012818  +
inc eax  +
mov edi eax +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push 24Dh  +
jmp loc_101283E  +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push 24Ch  +
call sub_10124CD  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 400h  +
push ebx  +
call sub_1005575  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax 1000h +
cmp [ebp+arg_4] ax +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
jnb loc_10128D7  +
push 24Eh  +
call sub_10124CD  +
movzx eax [ebp+arg_4] +
mov ecx eax +
and ecx 0Fh +
push ecx  +
mov ecx eax +
shr ecx 4 +
shr eax 8 +
and ecx 0Fh +
push ecx  +
and eax 0Fh +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push edi  +
call sub_1005575  +
add esp 18h +
jmp loc_1012912  +
push 24Fh  +
call sub_10124CD  +
movzx eax [ebp+arg_4] +
mov ecx eax +
and ecx 0Fh +
push ecx  +
mov ecx eax +
shr ecx 4 +
and ecx 0Fh +
push ecx  +
mov ecx eax +
shr ecx 8 +
and ecx 0Fh +
push ecx  +
shr eax 0Ch +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push edi  +
call sub_1005575  +
add esp 1Ch +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1814h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_1808] eax +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
xor edi edi +
push eax  +
push 0E6h  +
mov [ebp+var_1810] edi +
mov [ebp+var_180C] edi +
call sub_10124CD  +
lea eax [ebp+Buffer] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_101297A  +
mov ebx [ebp+arg_4] +
sub eax ecx +
sar eax 1 +
cmp [ebp+arg_8] edi +
mov [ebp+var_1814] eax +
jl loc_10129CC  +
jle loc_10129C4  +
cmp edi 2 +
jnz loc_10129AC  +
mov eax [ebp+arg_8] +
mov [ebp+var_1810] ebx +
mov [ebp+var_180C] eax +
push 0  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call __alldiv  +
inc edi  +
mov ebx eax +
mov [ebp+arg_8] edx +
test edx edx +
jg loc_1012998  +
jl loc_10129CC  +
cmp ebx 2000h +
jnb loc_1012998  +
mov eax [ebp+var_1814] +
cmp edi eax +
jb loc_10129D9  +
lea edi [eax-1] +
push esi  +
test edi edi +
jnz loc_10129F1  +
lea eax [ebp+var_1004] +
push eax  +
push 0E4h  +
call sub_10124CD  +
jmp loc_1012A33  +
lea eax [ebp+var_804] +
push eax  +
cmp edi 2 +
ja loc_1012A04  +
push 0E5h  +
jmp loc_1012A09  +
push 4E7h  +
call sub_10124CD  +
movzx eax [ebp+edi*2+Buffer] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
cmp edi 2 +
ja loc_1012A4F  +
push [ebp+arg_8]  +
lea eax [ebp+var_1004] +
push ebx  +
push eax  +
push esi  +
push [ebp+var_1808]  +
call sub_1005575  +
add esp 14h +
jmp loc_1012A75  +
push [ebp+var_180C]  +
lea eax [ebp+var_1004] +
push [ebp+var_1810]  +
push [ebp+arg_8]  +
push ebx  +
push eax  +
push esi  +
push [ebp+var_1808]  +
call sub_1005575  +
add esp 1Ch +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:FormatMessageW +
push edi  +
lea eax [ebp+arg_4] +
mov [ebp+Arguments] eax +
xor ebx ebx +
lea eax [ebp+Arguments] +
push eax  +
push ebx  +
lea eax [ebp+lpWideCharStr] +
push eax  +
mov edi 400h +
push edi  +
push [ebp+dwMessageId]  +
mov [ebp+var_8] ebx +
push ebx  +
push 900h  +
mov [ebp+lpWideCharStr] ebx +
call esi  +
test eax eax +
jnz loc_1012AE1  +
lea eax [ebp+Arguments] +
push eax  +
push ebx  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push edi  +
push [ebp+dwMessageId]  +
push ebx  +
push 1100h  +
call esi  +
test eax eax +
jz loc_1012AF4  +
push [ebp+lpWideCharStr]  +
call sub_1012503  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
jmp loc_1012B0B  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1012B08  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+uID] 0F423Fh +
jz loc_1012B56  +
push 400h  +
lea eax [ebp+WideCharStr] +
push eax  +
push [ebp+uID]  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10126B3  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A14h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+dwMessageId] +
xor ebx ebx +
mov eax 8004250Bh +
cmp edi eax +
mov [ebp+lpWideCharStr] ebx +
mov esi 400h +
jg loc_1012CBA  +
jz loc_1012CAE  +
mov eax 80042453h +
cmp edi eax +
jg loc_1012C8E  +
jz loc_1012CAE  +
cmp edi 80042400h +
jz loc_1012C82  +
cmp edi 80042413h +
jz loc_1012C76  +
cmp edi 80042419h +
jz loc_1012E07  +
cmp edi 8004241Fh +
jz loc_1012CAE  +
cmp edi 80042448h +
jnz loc_1012D28  +
mov [ebp+var_A10] 1C4h +
mov eax edi +
and eax 1FFF0000h +
cmp eax 40000h +
jnz loc_1012F00  +
mov eax edi +
and eax 0FFFFh +
cmp eax 2400h +
jl loc_1012E16  +
cmp eax 3000h +
jg loc_1012E16  +
push offset aVdsutil_dll  +
jmp loc_1012E52  +
mov [ebp+var_A10] 23Bh +
jmp loc_1012C3D  +
mov [ebp+var_A10] 1C6h +
jmp loc_1012C3D  +
cmp edi 8004245Fh +
jz loc_1012CAE  +
cmp edi 80042503h +
jz loc_1012CAE  +
cmp edi 80042505h +
jz loc_1012C33  +
cmp edi 80042509h +
jnz loc_1012D28  +
mov [ebp+var_A10] 1C2h +
jmp loc_1012C3D  +
mov eax 8004255Ah +
cmp edi eax +
jg loc_1012CF8  +
jz loc_1012DF8  +
cmp edi 8004252Ah +
jz loc_1012CAE  +
cmp edi 80042538h +
jz loc_1012CE9  +
cmp edi 80042539h +
jz loc_1012CAE  +
cmp edi 80042556h +
jmp loc_1012CAC  +
mov [ebp+var_A10] 1C5h +
jmp loc_1012C3D  +
cmp edi 80042572h +
jz loc_1012C33  +
cmp edi 80042575h +
jz loc_1012E07  +
cmp edi 8004280Ah +
jz loc_1012DF8  +
cmp edi 8007000Eh +
jz loc_1012DE9  +
mov eax edi +
sar eax 10h +
and eax 1FFFh +
cmp eax 7 +
jz loc_1012D40  +
cmp eax 3Ah +
jnz loc_1012DF8  +
push ebx  +
push ebx  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push ebx  +
push edi  +
push ebx  +
push 1100h  +
mov [ebp+var_A10] 0F423Fh +
call ds:FormatMessageW  +
cmp [ebp+lpWideCharStr] ebx +
jz loc_1012C3D  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 230h  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 231h  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push [ebp+lpWideCharStr]  +
call sub_1012503  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 232h  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov [ebp+lpWideCharStr] ebx +
jmp loc_1012C3D  +
mov [ebp+var_A10] 6Eh +
jmp loc_1012C3D  +
mov [ebp+var_A10] 0F423Fh +
jmp loc_1012C3D  +
mov [ebp+var_A10] 1C3h +
jmp loc_1012C3D  +
mov ebx 104h +
push ebx  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jz loc_1012F00  +
push offset aSystem32WbemWm  +
push ebx  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_100B7BE  +
test eax eax +
jl loc_1012F00  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jz loc_1012F00  +
push eax  +
push eax  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push eax  +
push edi  +
push ebx  +
push 900h  +
call ds:FormatMessageW  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_1012EF9  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
mov edi 230h +
push edi  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 233h  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push [ebp+lpWideCharStr]  +
call sub_1012503  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push edi  +
call sub_10124CD  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1012503  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
and [ebp+lpWideCharStr] 0 +
push ebx  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_A10] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax 2808h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+8] +
push edi  +
xor edi edi +
cmp [ebp+10h] edi +
jz loc_1012F72  +
cmp [eax] edi +
jz loc_1012F72  +
push 1  +
push ebx  +
push dword ptr [ebp+10h]  +
push eax  +
call sub_100AC98  +
jmp loc_1013085  +
push esi  +
mov esi 400h +
push esi  +
lea eax [ebp-2004h] +
push eax  +
push 108h  +
call sub_10124CD  +
push 1DB1h  +
push offset a6_1  +
lea eax [ebp-2004h] +
push eax  +
lea eax [ebp-1804h] +
push esi  +
push eax  +
call sub_1005575  +
add esp 14h +
lea eax [ebp-1804h] +
push eax  +
call sub_1012604  +
push 0D6h  +
call sub_1012B18  +
mov [ebp-2808h] edi +
cmp [ebx] edi +
jz loc_1013084  +
mov edi ebx +
push esi  +
lea eax [ebp-2004h] +
push eax  +
push 0A7h  +
call sub_10124CD  +
push dword ptr [edi]  +
lea eax [ebp-1804h] +
push esi  +
push eax  +
call sub_100AC29  +
push esi  +
lea eax [ebp-2804h] +
push eax  +
push 0DEh  +
call sub_10124CD  +
lea eax [ebp-2804h] +
push eax  +
lea eax [ebp-1804h] +
push eax  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013023  +
xor ecx ecx +
mov [eax] cx +
mov edi [edi+4] +
test edi edi +
jz loc_1013069  +
push esi  +
lea eax [ebp-1004h] +
push eax  +
push edi  +
call sub_10124CD  +
lea eax [ebp-1004h] +
push eax  +
lea eax [ebp-1804h] +
push eax  +
lea eax [ebp-2004h] +
push eax  +
lea eax [ebp-804h] +
push esi  +
push eax  +
call sub_1005575  +
add esp 14h +
lea eax [ebp-804h] +
push eax  +
call sub_1012604  +
inc dword ptr [ebp-2808h]  +
mov eax [ebp-2808h] +
imul eax eax +
lea edi [eax+ebx] +
cmp dword ptr [edi] 0 +
jnz loc_1012FD1  +
pop esi  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_10130D1  +
push edi  +
mov eax [esi+18h] +
mov edi esi +
test eax eax +
jz loc_10130C0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+18h] 0 +
mov esi [esi+1Ch] +
push edi  +
call sub_101CD94  +
pop ecx  +
test esi esi +
jnz loc_10130AD  +
and [ebx] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 4  +
mov edx offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_1013104  +
mov eax 80004005h +
jmp loc_1013145  +
mov eax dword_101F928 +
mov ecx [eax] +
lea esi [ebp+var_4] +
push esi  +
push 0Bh  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1013145  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1013143  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea edx [ebp+var_10] +
push edx  +
push eax  +
mov [ebp+pv] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jl loc_1013239  +
mov eax [ebp+var_10] +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
mov [ebp+arg_0] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1013239  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10131C6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
cmp esi ebx +
jl loc_1013239  +
mov eax [ebp+var_8] +
lea edx [ebp+var_18] +
push edx  +
lea edx [ebp+pv] +
push edx  +
mov [ebp+var_18] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_10131F0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
cmp esi ebx +
jl loc_1013239  +
mov esi [ebp+pv] +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1013239  +
push [ebp+arg_4]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1013239  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1013249  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1013259  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_1013269  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1013279  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
cmp [ebp+pv] ebx +
jz loc_1013287  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_4] 0 +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jge loc_10132B4  +
xor eax eax +
jmp locret_10132CF  +
push esi  +
push [ebp+var_4]  +
call sub_1011B5E  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10132CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D8h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 70h  +
lea eax [ebp+var_AC] +
push ebx  +
push eax  +
mov [ebp+var_D0] esi +
mov [ebp+dwMessageId] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_C8] ebx +
mov [ebp+var_C0] ebx +
mov [ebp+var_B8] ebx +
mov [ebp+var_B4] ebx +
mov [ebp+var_C4] ebx +
mov [ebp+var_D8] ebx +
mov [ebp+var_D4] ebx +
call memset  +
push 38h  +
lea eax [ebp+var_3C] +
push ebx  +
push eax  +
call memset  +
mov eax [esi] +
add esp 18h +
lea ecx [ebp+var_3C] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
mov [ebp+var_B0] eax +
jge loc_101336F  +
mov [ebp+dwMessageId] eax +
mov [ebp+var_B0] ebx +
cmp [ebp+var_2C] 0Ah +
jnz loc_1013544  +
mov eax [esi] +
lea ecx [ebp+var_C8] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
cmp eax ebx +
mov [ebp+var_B0] eax +
jl loc_101355E  +
mov eax [ebp+var_C8] +
mov ecx [eax] +
lea edx [ebp+var_D8] +
push edx  +
lea edx [ebp+var_C0] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp+var_B0] eax +
jl loc_101355E  +
mov eax [ebp+var_C0] +
mov ecx [eax] +
lea edx [ebp+var_B8] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_B0] eax +
mov eax [ebp+var_C0] +
cmp eax ebx +
jz loc_10133F1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C0] ebx +
cmp [ebp+var_B0] ebx +
jl loc_101355E  +
mov eax [ebp+var_B8] +
mov ecx [eax] +
lea edx [ebp+var_D4] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+var_B0] eax +
mov eax [ebp+var_B8] +
cmp eax ebx +
jz loc_1013433  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B8] ebx +
cmp [ebp+var_B0] ebx +
jl loc_101355E  +
mov esi [ebp+pv] +
cmp esi ebx +
jnz loc_1013458  +
mov [ebp+var_B0] 80042527h +
jmp loc_101355E  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_B4] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
cmp eax ebx +
mov [ebp+var_B0] eax +
jl loc_101355E  +
mov eax [ebp+var_B4] +
mov ecx [eax] +
lea edx [ebp+var_C4] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_B0] eax +
mov eax [ebp+var_B4] +
cmp eax ebx +
jz loc_10134B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B4] ebx +
cmp [ebp+var_B0] ebx +
jl loc_101355E  +
mov eax [ebp+var_C4] +
mov ecx [eax] +
lea edx [ebp+var_AC] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_B0] eax +
lea eax [ebp+var_AC] +
push eax  +
call sub_10028A5  +
cmp [ebp+var_B0] ebx +
jl loc_101355E  +
cmp [ebp+var_90] 2 +
jz loc_1013544  +
cmp [ebp+var_90] 33h +
jz loc_1013544  +
push [ebp+var_D0]  +
lea esi [ebp+var_AC] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
mov dword_101F940 ebx +
mov dword_101F944 ebx +
call sub_1013295  +
test eax eax +
jnz loc_101355E  +
mov eax [ebp+pv] +
mov ecx [eax+18h] +
mov dword_101F940 ecx +
mov eax [eax+1Ch] +
mov dword_101F944 eax +
jmp loc_101355E  +
mov edi offset unk_101F9D8 +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
mov dword_101F944 ebx +
mov dword_101F940 ebx +
movs   +
mov eax [ebp+var_C8] +
cmp eax ebx +
jz loc_1013574  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C8] ebx +
mov eax [ebp+var_C0] +
cmp eax ebx +
jz loc_101358A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C0] ebx +
mov eax [ebp+var_B8] +
cmp eax ebx +
jz loc_10135A0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B8] ebx +
mov eax [ebp+var_B4] +
cmp eax ebx +
jz loc_10135B6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_B4] ebx +
mov eax [ebp+var_C4] +
cmp eax ebx +
jz loc_10135CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C4] ebx +
lea eax [ebp+var_AC] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1004329  +
cmp [ebp+pv] ebx +
jz loc_10135FB  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
cmp [ebp+dwMessageId] ebx +
jge loc_1013614  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_B0] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+dwMessageId] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push 38h  +
lea eax [ebp+var_58] +
push 0  +
push eax  +
call memset  +
mov eax [ebx] +
add esp 0Ch +
lea ecx [ebp+var_58] +
push ecx  +
push ebx  +
call dword ptr [eax+0Ch]  +
mov [ebp+var_5C] eax +
cmp eax 2 +
jz loc_1013703  +
test eax eax +
jge loc_1013677  +
mov [ebp+dwMessageId] eax +
push esi  +
push edi  +
lea esi [ebp+var_58] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_10132D8  +
mov [ebp+var_5C] eax +
test eax eax +
jl loc_1013701  +
push ebx  +
call sub_1013295  +
test eax eax +
jz loc_10136F3  +
mov eax [ebx] +
and [ebp+var_60] 0 +
lea ecx [ebp+var_60] +
push ecx  +
push ebx  +
call dword ptr [eax+10h]  +
mov [ebp+var_5C] eax +
test eax eax +
jl loc_1013701  +
push [ebp+var_60]  +
call sub_1011869  +
mov eax [ebp+var_60] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
xor esi esi +
mov [ebp+var_5C] eax +
cmp [ebp+pv] esi +
jz loc_10136DC  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] esi +
mov eax [ebp+var_60] +
cmp eax esi +
jz loc_10136E9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_5C] esi +
jl loc_1013701  +
lea esi [ebp+var_20] +
jmp loc_10136F8  +
mov esi offset dword_1001260 +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
lea eax [ebp+var_58] +
push eax  +
call sub_1004329  +
cmp [ebp+dwMessageId] 0 +
pop ebx  +
jge loc_1013721  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_5C] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor edi edi +
push 34h  +
lea eax [ebp-38h] +
push edi  +
push eax  +
mov [ebp-40h] edi +
mov [ebp-54h] edi +
mov [ebp-44h] edi +
mov [ebp-48h] edi +
mov [ebp-4Ch] edi +
mov [ebp-58h] edi +
mov [ebp-3Ch] edi +
call memset  +
add esp 0Ch +
cmp dword ptr [ebp+10h] 2 +
mov [ebp-50h] edi +
jbe loc_1013798  +
push offset aDeleteVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10139B9  +
push ebx  +
xor ebx ebx +
cmp [ebp+10h] edi +
jbe loc_10137F6  +
mov eax [esi+ebx*4] +
cmp eax edi +
jz loc_1013812  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10137C4  +
inc eax  +
cmp [ebp-54h] eax +
jz loc_101382D  +
mov [ebp-54h] eax +
jmp loc_10137EA  +
push offset aOverride  +
push dword ptr [esi+ebx*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10137E3  +
inc eax  +
cmp [ebp-44h] eax +
jz loc_101382D  +
mov [ebp-44h] eax +
jmp loc_10137EA  +
mov dword ptr [ebp-58h] 1 +
cmp dword ptr [ebp-58h] 1 +
jz loc_101382D  +
inc ebx  +
cmp ebx [ebp+10h] +
jb loc_10137A0  +
push 4  +
mov ebx offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi ebx +
xor eax eax +
cmps   +
jnz loc_1013848  +
push 51h  +
jmp loc_1013908  +
push offset aDeleteVolume  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10139B8  +
push offset aDeleteVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10139B8  +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi ebx +
xor eax eax +
cmps   +
jz loc_10138AD  +
lea eax [ebp-48h] +
push eax  +
call sub_10130DC  +
mov esi eax +
test esi esi +
jl loc_10138DF  +
cmp dword ptr [ebp-44h] 0 +
jnz loc_10138AD  +
mov eax [ebp-48h] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jge loc_1013894  +
push 1C4h  +
call sub_1012B18  +
mov dword ptr [ebp-40h] 8000FFFFh +
jmp loc_101397D  +
push dword ptr [ebp-0Ch]  +
call ds:CoTaskMemFree  +
test dword ptr [ebp-14h] 200000h +
jz loc_10138AD  +
push 28Bh  +
jmp loc_1013908  +
push dword ptr [ebp-48h]  +
call sub_1013295  +
test eax eax +
jz loc_10138F3  +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi ebx +
xor eax eax +
cmps   +
jz loc_10138F3  +
mov eax [ebp-48h] +
push dword ptr [ebp-44h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jge loc_101396B  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-40h] esi +
jmp loc_101397D  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1013916  +
push 52h  +
call sub_1012B18  +
mov dword ptr [ebp-40h] 80070057h +
jmp loc_101397D  +
lea eax [ebp-4Ch] +
push eax  +
call sub_1004390  +
mov esi eax +
test esi esi +
jl loc_10138DF  +
mov eax [ebp-4Ch] +
mov ecx [eax] +
lea edx [ebp-50h] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10138DF  +
push dword ptr [ebp-44h]  +
mov eax [ebp-50h] +
push dword ptr [ebp-44h]  +
mov ecx [eax] +
push dword_101F944  +
push dword_101F940  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_10138DF  +
and dword_101F940 0 +
and dword_101F944 0 +
mov edi ebx +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
push 54h  +
movs   +
call sub_1012B18  +
mov eax [ebp-48h] +
test eax eax +
jz loc_101398E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-48h] 0 +
mov eax [ebp-4Ch] +
test eax eax +
jz loc_101399F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-4Ch] 0 +
mov eax [ebp-50h] +
test eax eax +
jz loc_10139AC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-54h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-40h] +
pop ebx  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor ebx ebx +
or eax 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_0] +
push 70h  +
mov [ebp+var_F4] eax +
mov [ebp+var_F0] eax +
mov [ebp+var_110] eax +
mov [ebp+var_10C] eax +
lea eax [ebp+var_DC] +
push ebx  +
push eax  +
mov [ebp+var_118] edi +
mov [ebp+var_E4] esi +
mov [ebp+var_E0] ebx +
mov [ebp+var_E8] ebx +
mov [ebp+var_F8] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_EC] ebx +
mov [ebp+var_104] ebx +
call memset  +
push 38h  +
lea eax [ebp+var_6C] +
push ebx  +
push eax  +
call memset  +
mov eax [esi] +
add esp 18h +
or eax [esi+4] +
jz loc_1013D33  +
lea eax [ebp+var_E8] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1013B94  +
mov eax [ebp+var_E8] +
mov ecx [eax] +
lea edx [ebp+var_DC] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1013B94  +
mov eax [ebp+var_80] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax [ebp+arg_4] +
jz loc_1013AB2  +
push 180h  +
jmp loc_1013C2A  +
mov eax [edi] +
lea ecx [ebp+var_6C] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1013B94  +
mov eax [ebp+var_E8] +
mov ecx [eax] +
lea edx [ebp+var_EC] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1013B94  +
cmp [ebp+var_EC] ebx +
mov eax [ebp+pv] +
jle loc_1013B28  +
mov edx eax +
jmp loc_1013AFE  +
xor ebx ebx +
cmp edx ebx +
jz loc_1013B11  +
push 4  +
pop ecx  +
lea edi [ebp+var_6C] +
lea esi [edx+28h] +
xor ebx ebx +
cmps   +
jz loc_1013B28  +
inc [ebp+var_104]  +
mov ecx [ebp+var_104] +
add edx 50h +
cmp ecx [ebp+var_EC] +
jl loc_1013AFC  +
mov ebx [ebp+var_104] +
cmp ebx [ebp+var_EC] +
jnz loc_1013B4C  +
push 71h  +
call sub_1012B18  +
mov [ebp+var_E0] 8000FFFFh +
jmp loc_1013DE6  +
imul ebx ebx +
add eax ebx +
lea esi [eax+38h] +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
mov eax [eax+48h] +
mov [ebp+var_C] eax +
mov eax [ebp+var_E4] +
mov ecx [eax] +
and ecx [eax+4] +
cmp ecx 0FFFFFFFFh +
jnz loc_1013D05  +
lea eax [ebp+var_110] +
push eax  +
lea eax [ebp+var_F4] +
push eax  +
push [ebp+var_E8]  +
call sub_100DD66  +
mov esi eax +
test esi esi +
jge loc_1013BAB  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_E0] esi +
jmp loc_1013DE6  +
mov esi [ebp+pv] +
mov edx [ebx+esi+18h] +
mov ebx [ebx+esi+1Ch] +
mov edi [ebp+var_10C] +
cmp ebx [ebp+var_F0] +
jb loc_1013BFB  +
ja loc_1013BD1  +
cmp edx [ebp+var_F4] +
jb loc_1013BFB  +
mov ecx [ebp+var_110] +
add ecx [ebp+var_F4] +
mov eax edi +
adc eax [ebp+var_F0] +
cmp ebx eax +
ja loc_1013BFB  +
jb loc_1013BEF  +
cmp edx ecx +
jnb loc_1013BFB  +
mov [ebp+var_114] 1 +
jmp loc_1013C02  +
and [ebp+var_114] 0 +
mov ebx [ebp+var_104] +
inc ebx  +
cmp ebx [ebp+var_EC] +
jz loc_1013C28  +
mov eax ebx +
imul eax eax +
add eax esi +
mov ecx [eax+10h] +
cmp ecx 1 +
jz loc_1013C3E  +
cmp ecx 7FFFh +
jz loc_1013C3E  +
push 79h  +
call sub_1012B18  +
mov [ebp+var_E0] 80070057h +
jmp loc_1013DE6  +
mov ecx [eax+20h] +
mov edx [ebp+var_E4] +
mov [edx] ecx +
mov ecx [eax+24h] +
mov [edx+4] ecx +
mov ecx [eax+18h] +
mov eax [eax+1Ch] +
mov [ebp+var_108] ecx +
cmp eax [ebp+var_F0] +
jb loc_1013CA0  +
ja loc_1013C6D  +
cmp ecx [ebp+var_F4] +
jb loc_1013CA0  +
mov edx [ebp+var_110] +
add edx [ebp+var_F4] +
mov ecx edi +
adc ecx [ebp+var_F0] +
cmp eax ecx +
ja loc_1013C9A  +
jb loc_1013C8F  +
cmp [ebp+var_108] edx +
jnb loc_1013C9A  +
mov edx [ebp+var_E4] +
xor eax eax +
inc eax  +
jmp loc_1013CA2  +
mov edx [ebp+var_E4] +
xor eax eax +
cmp [ebp+var_114] 0 +
jz loc_1013CFD  +
test eax eax +
jz loc_1013D05  +
inc ebx  +
cmp ebx [ebp+var_EC] +
jge loc_1013D05  +
imul ebx ebx +
lea eax [ebx+esi] +
mov ecx [eax+10h] +
cmp ecx 1 +
jz loc_1013CCE  +
cmp ecx 7FFFh +
jnz loc_1013D05  +
mov ecx [ebp+var_110] +
add ecx [ebp+var_F4] +
mov esi [eax+1Ch] +
adc edi [ebp+var_F0] +
cmp esi edi +
jb loc_1013D05  +
ja loc_1013CF0  +
mov esi [eax+18h] +
cmp esi ecx +
jb loc_1013D05  +
mov ecx [eax+20h] +
add [edx] ecx +
mov eax [eax+24h] +
adc [edx+4] eax +
jmp loc_1013D05  +
test eax eax +
jnz loc_1013C28  +
mov ecx [ebp+var_E4] +
mov eax [ecx] +
mov ecx [ecx+4] +
lea esi [ebp+var_DC] +
lea edi [ebp+var_34] +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_24] eax +
or eax ecx +
mov [ebp+var_20] ecx +
jnz loc_1013D46  +
mov edi [ebp+var_118] +
mov esi [ebp+var_E4] +
mov eax [edi] +
lea ecx [ebp+var_F8] +
push ecx  +
push 0  +
push 0  +
push edi  +
call dword ptr [eax+18h]  +
jmp loc_1013D65  +
mov eax [ebp+var_118] +
mov ecx [eax] +
lea edx [ebp+var_F8] +
push edx  +
push 1  +
lea edx [ebp+var_34] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi [ebp+var_E4] +
mov edi eax +
test edi edi +
jl loc_1013D8B  +
mov eax [ebp+var_F8] +
mov ecx [eax] +
lea edx [ebp+var_138] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jge loc_1013D9F  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_E0] edi +
jmp loc_1013DE6  +
cmp [ebp+dwMessageId] 0 +
jl loc_1013DB4  +
cmp [ebp+dwMessageId] 42465h +
jnz loc_1013DD1  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_E0] eax +
mov eax [esi] +
or eax [esi+4] +
jnz loc_1013DDF  +
push 1D8h  +
jmp loc_1013DE1  +
push 78h  +
call sub_1012B18  +
mov eax [ebp+var_E8] +
xor esi esi +
cmp eax esi +
jz loc_1013DFE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_E8] esi +
mov eax [ebp+var_F8] +
cmp eax esi +
jz loc_1013E14  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_F8] esi +
lea eax [ebp+var_DC] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1004329  +
cmp [ebp+pv] esi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1013E40  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_E0] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 1C4h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
or dword ptr [ebp-170h] 0FFFFFFFFh +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 70h  +
lea eax [ebp-14Ch] +
push ebx  +
push eax  +
mov [ebp-150h] ebx +
mov [ebp-154h] ebx +
mov [ebp-17Ch] ebx +
mov [ebp-160h] ebx +
mov [ebp-174h] ebx +
mov [ebp-15Ch] ebx +
mov [ebp-164h] ebx +
mov [ebp-16Ch] ebx +
mov [ebp-168h] ebx +
mov [ebp-180h] ebx +
mov [ebp-178h] ebx +
mov [ebp-158h] ebx +
call memset  +
push 70h  +
lea eax [ebp-0DCh] +
push ebx  +
push eax  +
call memset  +
push 38h  +
lea eax [ebp-3Ch] +
push ebx  +
push eax  +
call memset  +
add esp 24h +
cmp dword_101F914 ebx +
jnz loc_1013F16  +
cmp dword_101F91C ebx +
jnz loc_1013F16  +
push 115h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_10144FF  +
cmp [ebp+10h] ebx +
jbe loc_101401C  +
mov eax [ebp-154h] +
lea edi [esi+eax*4] +
mov eax [edi] +
cmp eax ebx +
jz loc_1014038  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1013F5F  +
cmp [ebp-17Ch] ebx +
jnz loc_101405A  +
mov dword ptr [ebp-17Ch] 1 +
jmp loc_1014007  +
push offset aDisk  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1013FE2  +
inc dword ptr [ebp-154h]  +
mov eax [ebp-154h] +
cmp eax [ebp+10h] +
jnb loc_1014053  +
cmp dword ptr [ebp-170h] 0FFFFFFFFh +
jnz loc_101405A  +
mov ecx [esi+eax*4] +
cmp ecx ebx +
jz loc_101405A  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1013FA4  +
sub eax edi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_101405A  +
mov eax [ebp-154h] +
push dword ptr [esi+eax*4]  +
call ds:_wtoi  +
pop ecx  +
mov [ebp-170h] eax +
jmp loc_1014007  +
push offset aWait  +
push dword ptr [edi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101405A  +
cmp [ebp-174h] ebx +
jnz loc_101405A  +
mov dword ptr [ebp-174h] 1 +
inc dword ptr [ebp-154h]  +
mov eax [ebp-154h] +
cmp eax [ebp+10h] +
jb loc_1013F1F  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_101407A  +
push 9  +
jmp loc_101443C  +
push offset aAdd  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10144FF  +
push 70h  +
jmp loc_1013F07  +
***
push offset aAdd  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-160h] 1 +
jmp loc_101444B  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1014091  +
push 6  +
jmp loc_101443C  +
lea eax [ebp-15Ch] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-15Ch] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp [ebp-0Ch] ebx +
jz loc_10140CA  +
push dword ptr [ebp-0Ch]  +
call ds:CoTaskMemFree  +
mov [ebp-0Ch] ebx +
cmp esi ebx +
jl loc_101437D  +
cmp dword ptr [ebp-2Ch] 0Ah +
jnz loc_101408A  +
push dword ptr [ebp-15Ch]  +
call sub_1013295  +
test eax eax +
jnz loc_10140EE  +
push 8  +
jmp loc_101443C  +
cmp dword ptr [ebp-170h] 0FFFFFFFFh +
jz loc_101443A  +
lea eax [ebp-178h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov esi [ebp-178h] +
jmp loc_1014156  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0DCh] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-0CCh] 6 +
jz loc_1014147  +
mov eax [ebp-80h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax [ebp-170h] +
jz loc_1014170  +
lea eax [ebp-0DCh] +
push eax  +
call sub_10028A5  +
mov esi [esi+14h] +
cmp esi ebx +
jnz loc_1014119  +
push offset aAdd  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1014441  +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jnz loc_1014185  +
push 17Dh  +
jmp loc_101443C  +
test dword ptr [ebp-14h] 283h +
jz loc_10141DF  +
lea eax [ebp-180h] +
push eax  +
push dword ptr [ebp-15Ch]  +
call sub_1013150  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-180h] +
mov ecx [eax] +
lea edx [ebp-14Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-108h] +
cmp eax [ebp-98h] +
jz loc_10141DF  +
push 18Bh  +
jmp loc_101443C  +
push 30h  +
lea eax [ebp-6Ch] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-1Ch] +
lea esi [ebp-0DCh] +
lea edi [ebp-6Ch] +
movs   +
movs   +
movs   +
movs   +
mov [ebp-5Ch] eax +
mov eax [ebp-18h] +
mov [ebp-58h] eax +
mov eax [ebp-15Ch] +
mov esi offset dword_1001260 +
lea edi [ebp-54h] +
movs   +
movs   +
movs   +
add esp 0Ch +
lea edx [ebp-16Ch] +
movs   +
push edx  +
mov [ebp-44h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-16Ch] +
mov ecx [eax] +
lea edx [ebp-168h] +
push edx  +
push offset dword_1002368  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-168h] +
mov ecx [eax] +
lea edx [ebp-158h] +
push edx  +
push ebx  +
push ebx  +
push 1  +
lea edx [ebp-6Ch] +
push edx  +
push 0Ah  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-158h] +
mov ecx [eax] +
lea edx [ebp-1A4h] +
push edx  +
lea edx [ebp-154h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-158h] +
cmp eax ebx +
jz loc_10142AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-158h] ebx +
cmp esi ebx +
jl loc_101437D  +
cmp [ebp-154h] ebx +
jge loc_10142D9  +
push dword ptr [ebp-154h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-154h] +
jmp loc_10143B0  +
mov eax [ebp-19Ch] +
mov ecx [eax] +
lea edx [ebp-164h] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-19Ch] +
cmp eax ebx +
jz loc_1014308  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-19Ch] ebx +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-164h] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-15Ch] +
mov ecx [eax] +
lea edx [ebp-158h] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp-3Ch] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jl loc_101437D  +
mov eax [ebp-158h] +
mov ecx [eax] +
lea edx [ebp-1C4h] +
push edx  +
lea edx [ebp-184h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-158h] +
cmp eax ebx +
jz loc_1014379  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-158h] ebx +
cmp esi ebx +
jge loc_1014394  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-150h] esi +
jmp loc_101444B  +
mov eax [ebp-184h] +
cmp eax ebx +
jge loc_10143BB  +
push eax  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-184h] +
mov [ebp-150h] eax +
jmp loc_101444B  +
cmp eax 42434h +
jnz loc_10143C9  +
push 1C7h  +
jmp loc_10143E3  +
cmp eax 80042469h +
jnz loc_10143D7  +
push 181h  +
jmp loc_10143E3  +
cmp eax 42467h +
jnz loc_10143E8  +
push 21Dh  +
call sub_1012B18  +
cmp [ebp-174h] ebx +
jz loc_1014431  +
push 18Fh  +
call sub_1012B18  +
push 3E8h  +
call ds:Sleep  +
lea eax [ebp-3Ch] +
push eax  +
call sub_1004329  +
mov eax [ebp-15Ch] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-24h] 2 +
jz loc_10143FA  +
cmp dword ptr [ebp-24h] 1 +
jz loc_1014431  +
push 221h  +
jmp loc_1014433  +
push 0Ah  +
call sub_1012B18  +
jmp loc_101444B  +
push 7  +
call sub_1012B18  +
mov dword ptr [ebp-150h] 80070057h +
mov eax [ebp-15Ch] +
cmp eax ebx +
jz loc_1014461  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-15Ch] ebx +
mov eax [ebp-164h] +
cmp eax ebx +
jz loc_1014477  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-164h] ebx +
mov eax [ebp-16Ch] +
cmp eax ebx +
jz loc_101448D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-16Ch] ebx +
mov eax [ebp-168h] +
cmp eax ebx +
jz loc_10144A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-168h] ebx +
mov eax [ebp-158h] +
cmp eax ebx +
jz loc_10144B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-158h] ebx +
lea eax [ebp-0DCh] +
push eax  +
call sub_10028A5  +
lea eax [ebp-3Ch] +
push eax  +
call sub_1004329  +
lea eax [ebp-178h] +
push eax  +
call sub_1004352  +
cmp [ebp-160h] ebx +
jz loc_10144ED  +
push 40002EE5h  +
call sub_1012A8B  +
pop ecx  +
mov eax [ebp-17Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-150h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
or dword ptr [ebp-0F4h] 0FFFFFFFFh +
or dword ptr [ebp-0F0h] 0FFFFFFFFh +
or dword ptr [ebp-104h] 0FFFFFFFFh +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
push 70h  +
lea eax [ebp-0DCh] +
push ebx  +
push eax  +
mov [ebp-0E0h] ebx +
mov [ebp-0E4h] ebx +
mov [ebp-114h] ebx +
mov [ebp-118h] ebx +
mov [ebp-100h] ebx +
mov [ebp-0E8h] ebx +
mov [ebp-108h] ebx +
mov [ebp-0F8h] ebx +
mov [ebp-0ECh] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+10h] ebx +
jbe loc_1014811  +
mov eax [ebp-0E4h] +
lea esi [edi+eax*4] +
mov eax [esi] +
cmp eax ebx +
jz loc_10147C9  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10145D8  +
cmp [ebp-114h] ebx +
jnz loc_10147E4  +
mov dword ptr [ebp-114h] 1 +
jmp loc_1014790  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014685  +
mov eax [ebp-0E4h] +
inc eax  +
mov [ebp-0E4h] eax +
cmp eax [ebp+10h] +
jnb loc_10147FF  +
mov ecx [ebp-0F4h] +
and ecx [ebp-0F0h] +
cmp ecx 0FFFFFFFFh +
jnz loc_10147E4  +
lea eax [edi+eax*4] +
mov ecx [eax] +
mov [ebp-10Ch] eax +
cmp ecx ebx +
jz loc_10147E4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1014632  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10147E4  +
mov eax [ebp-10Ch] +
push dword ptr [eax]  +
call ds:_wtoi64  +
pop ecx  +
push ebx  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-0F4h] eax +
mov [ebp-0F0h] edx +
jmp loc_1014790  +
push offset aDisk  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101470C  +
mov eax [ebp-0E4h] +
inc eax  +
mov [ebp-0E4h] eax +
cmp eax [ebp+10h] +
jnb loc_10147FF  +
cmp dword ptr [ebp-104h] 0FFFFFFFFh +
jnz loc_10147E4  +
mov ecx [edi+eax*4] +
cmp ecx ebx +
jz loc_10147E4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_10146CB  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10147E4  +
mov eax [ebp-0E4h] +
push dword ptr [edi+eax*4]  +
call ds:_wtol  +
pop ecx  +
mov [ebp-104h] eax +
jmp loc_1014790  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10147E4  +
mov eax [ebp-0E4h] +
inc eax  +
mov [ebp-0E4h] eax +
cmp eax [ebp+10h] +
jnb loc_10147FF  +
lea eax [edi+eax*4] +
mov ecx [eax] +
mov [ebp-10Ch] eax +
cmp ecx ebx +
jz loc_10147E4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1014751  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10147E4  +
mov eax [ebp-10Ch] +
push 0Ah  +
push ebx  +
push dword ptr [eax]  +
call ds:_wcstoui64  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp-118h] eax +
inc dword ptr [ebp-0E4h]  +
mov eax [ebp-0E4h] +
cmp eax [ebp+10h] +
jb loc_1014598  +
mov eax [ebp-0F4h] +
or eax [ebp-0F0h] +
jnz loc_1014808  +
push offset aCreateVolumeSi  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1014921  +
push offset aCreateVolumeSi  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_1014BB6  +
push offset aCreateVolumeSi  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1014BB6  +
push 70h  +
call sub_1012B18  +
jmp loc_10147F5  +
***
cmp dword ptr [ebp-104h] 0FFFFFFFFh +
jnz loc_1014843  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jz loc_10148A8  +
lea eax [ebp-0E8h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jge loc_10148E9  +
jmp loc_1014B0D  +
lea eax [ebp-100h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov esi [ebp-100h] +
jmp loc_10148A4  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0DCh] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_10148AC  +
cmp dword ptr [ebp-0CCh] 6 +
jz loc_1014895  +
mov eax [ebp-80h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax [ebp-104h] +
jz loc_10148C3  +
lea eax [ebp-0DCh] +
push eax  +
call sub_10028A5  +
mov esi [esi+14h] +
cmp esi ebx +
jnz loc_1014861  +
push 41h  +
jmp loc_101491C  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0E0h] edi +
jmp loc_1014B34  +
lea eax [ebp-0DCh] +
push eax  +
call sub_10028A5  +
mov esi [esi] +
mov [ebp-0E8h] esi +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp-100h] +
push eax  +
call sub_1004352  +
push dword ptr [ebp-0E8h]  +
call sub_1004404  +
test eax eax +
jz loc_1014908  +
call sub_1009BE8  +
test eax eax +
jz loc_1014908  +
push 115h  +
jmp loc_101491C  +
push dword ptr [ebp-0E8h]  +
call sub_1004404  +
test eax eax +
jnz loc_1014930  +
push 17Ch  +
call sub_1012B18  +
mov dword ptr [ebp-0E0h] 80070057h +
jmp loc_1014B34  +
mov eax [ebp-0E8h] +
mov ecx [eax] +
lea edx [ebp-0DCh] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-0F4h] +
and eax [ebp-0F0h] +
cmp eax 0FFFFFFFFh +
jnz loc_1014980  +
lea eax [ebp-0F4h] +
push eax  +
push dword ptr [ebp-118h]  +
push dword ptr [ebp-0E8h]  +
call sub_10044A5  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-0F4h] +
lea esi [ebp-0DCh] +
lea edi [ebp-34h] +
movs   +
movs   +
movs   +
movs   +
mov [ebp-24h] eax +
mov eax [ebp-0F0h] +
mov [ebp-20h] eax +
mov eax [ebp-0E8h] +
mov esi offset dword_1001260 +
lea edi [ebp-1Ch] +
movs   +
movs   +
movs   +
lea edx [ebp-108h] +
movs   +
push edx  +
mov [ebp-0Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-108h] +
mov ecx [eax] +
lea edx [ebp-0F8h] +
push edx  +
push offset dword_1002368  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-0F8h] +
lea edx [ebp-0FCh] +
push edx  +
push dword ptr [ebp-118h]  +
lea edx [ebp-34h] +
push ebx  +
push 1  +
push edx  +
push 0Ah  +
mov [ebp-0FCh] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-0FCh] +
lea esi [ebp-0DCh] +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
lea edx [ebp-138h] +
push edx  +
lea edx [ebp-110h] +
push edx  +
movs   +
mov dword_101F940 ebx +
mov dword_101F944 ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0FCh] +
cmp eax ebx +
jz loc_1014A6B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0FCh] ebx +
cmp esi ebx +
jl loc_1014B0D  +
cmp [ebp-110h] ebx +
jge loc_1014A9D  +
push dword ptr [ebp-110h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-110h] +
mov [ebp-0E0h] eax +
jmp loc_1014B34  +
mov eax [ebp-130h] +
mov ecx [eax] +
lea edx [ebp-0ECh] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-130h] +
cmp eax ebx +
jz loc_1014ACC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-130h] ebx +
cmp esi ebx +
jl loc_1014B0D  +
mov eax [ebp-0ECh] +
mov ecx [eax] +
lea edx [ebp-6Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-0ECh] +
cmp eax ebx +
jz loc_1014AF8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0ECh] ebx +
cmp [ebp-3Ch] ebx +
jz loc_1014B09  +
push dword ptr [ebp-3Ch]  +
call ds:CoTaskMemFree  +
mov [ebp-3Ch] ebx +
cmp esi ebx +
jge loc_1014B21  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0E0h] esi +
jmp loc_1014B34  +
lea esi [ebp-6Ch] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push 42h  +
movs   +
call sub_1012B18  +
lea eax [ebp-100h] +
push eax  +
call sub_1004352  +
mov eax [ebp-0E8h] +
cmp eax ebx +
jz loc_1014B56  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E8h] ebx +
mov eax [ebp-108h] +
cmp eax ebx +
jz loc_1014B6C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-108h] ebx +
mov eax [ebp-0F8h] +
cmp eax ebx +
jz loc_1014B82  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F8h] ebx +
mov eax [ebp-0ECh] +
cmp eax ebx +
jz loc_1014B98  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0ECh] ebx +
lea eax [ebp-0DCh] +
push eax  +
call sub_10028A5  +
mov eax [ebp-114h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-0E0h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
or eax 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_4] +
push 38h  +
mov [ebp+var_848] eax +
mov [ebp+var_844] eax +
mov [ebp+var_850] eax +
mov [ebp+var_84C] eax +
lea eax [ebp+var_83C] +
push ebx  +
push eax  +
mov [ebp+var_840] ebx +
mov [ebp+var_86C] ebx +
mov [ebp+var_868] ebx +
mov [ebp+var_864] ebx +
mov [ebp+var_85C] ebx +
mov [ebp+var_858] ebx +
mov [ebp+var_854] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] ebx +
jbe loc_1014E1E  +
lea esi [edi+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_1014E3A  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014C83  +
cmp [ebp+var_86C] eax +
jnz loc_1014E55  +
mov [ebp+var_86C] 1 +
jmp loc_1014E14  +
push offset aNowait  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014CB1  +
cmp [ebp+var_868] eax +
jnz loc_1014E55  +
mov [ebp+var_868] 1 +
jmp loc_1014E14  +
push offset aDesired  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014D42  +
inc ebx  +
cmp ebx [ebp+arg_8] +
jnb loc_1014E70  +
mov eax [ebp+var_848] +
and eax [ebp+var_844] +
cmp eax 0FFFFFFFFh +
jnz loc_1014E55  +
mov ecx [edi+ebx*4] +
test ecx ecx +
jz loc_1014E55  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1014CF3  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_1014E55  +
push dword ptr [edi+ebx*4]  +
call ds:_wtoi64  +
pop ecx  +
push 0  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_848] eax +
mov [ebp+var_844] edx +
jmp loc_1014E14  +
push offset aMinimum  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014DD0  +
inc ebx  +
cmp ebx [ebp+arg_8] +
jnb loc_1014E70  +
mov eax [ebp+var_850] +
and eax [ebp+var_84C] +
cmp eax 0FFFFFFFFh +
jnz loc_1014E55  +
mov ecx [edi+ebx*4] +
test ecx ecx +
jz loc_1014E55  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1014D84  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_1014E55  +
push dword ptr [edi+ebx*4]  +
call ds:_wtoi64  +
pop ecx  +
push 0  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_850] eax +
mov [ebp+var_84C] edx +
jmp loc_1014E14  +
push offset aQuerymax  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1014E55  +
inc eax  +
cmp [ebp+var_864] eax +
jz loc_1014E55  +
mov ecx [ebp+var_848] +
and ecx [ebp+var_844] +
cmp ecx 0FFFFFFFFh +
jnz loc_1014E55  +
mov ecx [ebp+var_850] +
and ecx [ebp+var_84C] +
cmp ecx 0FFFFFFFFh +
jnz loc_1014E55  +
mov [ebp+var_864] eax +
inc ebx  +
cmp ebx [ebp+arg_8] +
jb loc_1014C49  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1014E79  +
push 148h  +
jmp loc_1014E8E  +
push offset aShrink  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_101514F  +
push offset aShrink  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_101514F  +
push 70h  +
call sub_1012B18  +
jmp loc_1014E66  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1014EA4  +
push 293h  +
call sub_1012B18  +
mov [ebp+var_840] 80070057h +
xor edi edi +
jmp loc_10150EF  +
lea eax [ebp+var_85C] +
push eax  +
call sub_10130DC  +
mov esi eax +
xor edi edi +
cmp esi edi +
jl loc_101507C  +
mov eax [ebp+var_85C] +
mov ecx [eax] +
lea edx [ebp+var_858] +
push edx  +
push offset dword_10026D8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_101507C  +
mov eax [ebp+var_85C] +
mov ecx [eax] +
lea edx [ebp+var_83C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_101507C  +
test [ebp+var_814] 40000h +
jz loc_1014F10  +
push 238h  +
jmp loc_1014FF5  +
test [ebp+var_814] 400000h +
jz loc_1014F26  +
push 254h  +
jmp loc_1014FF5  +
mov ecx [ebp+var_848] +
mov eax [ebp+var_844] +
mov edx ecx +
and edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_1014F5E  +
mov eax [ebp+var_850] +
mov ecx [ebp+var_84C] +
mov edx eax +
and edx ecx +
cmp edx 0FFFFFFFFh +
jz loc_1014F7D  +
mov [ebp+var_848] eax +
mov [ebp+var_844] ecx +
jmp loc_1014FAA  +
mov edx [ebp+var_850] +
and edx [ebp+var_84C] +
cmp edx 0FFFFFFFFh +
jnz loc_1014FAA  +
mov [ebp+var_850] ecx +
mov [ebp+var_84C] eax +
jmp loc_1014FAA  +
mov eax [ebp+var_858] +
mov ecx [eax] +
lea edx [ebp+var_848] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_101507C  +
mov [ebp+var_850] 1 +
mov [ebp+var_84C] edi +
cmp [ebp+var_864] edi +
jz loc_1014FD4  +
push [ebp+var_844]  +
lea eax [ebp+var_804] +
push [ebp+var_848]  +
push eax  +
call sub_1012927  +
push 236h  +
jmp loc_10150D4  +
mov eax [ebp+var_81C] +
cmp eax [ebp+var_848] +
jnz loc_1015009  +
mov eax [ebp+var_818] +
cmp eax [ebp+var_844] +
jnz loc_1015009  +
push 234h  +
call sub_1012B18  +
mov [ebp+var_840] 80070057h +
jmp loc_10150EF  +
mov eax [ebp+var_858] +
mov ecx [eax] +
lea edx [ebp+var_854] +
push edx  +
push [ebp+var_84C]  +
push [ebp+var_850]  +
push [ebp+var_844]  +
push [ebp+var_848]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi edi +
jl loc_101507C  +
cmp [ebp+var_868] edi +
jnz loc_10150EF  +
mov eax [ebp+var_854] +
mov ecx [eax] +
lea edx [ebp+var_88C] +
push edx  +
lea edx [ebp+dwMessageId] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_854] +
cmp eax edi +
jz loc_1015078  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_854] edi +
cmp esi edi +
jge loc_1015090  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_840] esi +
jmp loc_10150EF  +
cmp [ebp+dwMessageId] edi +
jge loc_10150B7  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+dwMessageId] +
mov [ebp+var_840] eax +
jmp loc_10150EF  +
push [ebp+var_880]  +
lea eax [ebp+var_804] +
push [ebp+var_884]  +
push eax  +
call sub_10126D0  +
push 14Ah  +
call sub_1012B18  +
lea eax [ebp+var_804] +
push eax  +
call sub_1012604  +
push 230h  +
call sub_1012B18  +
mov eax [ebp+var_85C] +
cmp eax edi +
jz loc_1015105  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_85C] edi +
mov eax [ebp+var_858] +
cmp eax edi +
jz loc_101511B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_858] edi +
mov eax [ebp+var_854] +
cmp eax edi +
jz loc_1015131  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_854] edi +
lea eax [ebp+var_83C] +
push eax  +
call sub_1004329  +
mov eax [ebp+var_86C] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_840] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
inc esi  +
push edi  +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov [ebp-8] ebx +
mov [ebp-0Ch] ebx +
cmp [ebp+10h] esi +
ja loc_101527C  +
jnz loc_10151A9  +
mov eax [ebp+0Ch] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101527C  +
mov [ebp-10h] esi +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_10151D7  +
push 458h  +
call sub_1012B18  +
push 40002F50h  +
call sub_1012A8B  +
jmp loc_101528C  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_10151FA  +
push 295h  +
call sub_1012B18  +
mov dword ptr [ebp-4] 80070057h +
jmp loc_1015251  +
lea eax [ebp-8] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_1015220  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp-0Ch] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jge loc_1015229  +
push esi  +
call sub_1012BB1  +
push eax  +
jmp loc_101523D  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jge loc_1015247  +
push 287h  +
call sub_1012B18  +
mov [ebp-4] esi +
jmp loc_1015251  +
push 288h  +
call sub_1012B18  +
mov eax [ebp-8] +
cmp eax ebx +
jz loc_1015261  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-8] ebx +
mov eax [ebp-0Ch] +
cmp eax ebx +
jz loc_101526E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-4] +
jmp loc_1015292  +
push offset aOnlineVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
mov eax 80070057h +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor eax eax +
xor ebx ebx +
inc ebx  +
mov [ebp+var_4] eax +
mov [ebp+var_10] eax +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
cmp [ebp+arg_8] ebx +
ja loc_10153B1  +
jnz loc_10152E0  +
mov eax [ebp+arg_4] +
push offset aNoerr  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10153B1  +
mov [ebp+var_10] ebx +
push esi  +
push edi  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_101530E  +
push 453h  +
call sub_1012B18  +
push 40002F51h  +
call sub_1012A8B  +
pop ecx  +
jmp loc_1015328  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1015331  +
push 294h  +
call sub_1012B18  +
mov [ebp+var_4] 80070057h +
jmp loc_1015383  +
lea eax [ebp+var_8] +
push eax  +
call sub_10130DC  +
mov esi eax +
test esi esi +
jl loc_1015368  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1015368  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jge loc_1015379  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_4] esi +
jmp loc_1015383  +
push 454h  +
call sub_1012B18  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
test eax eax +
jz loc_1015396  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebp+var_C] +
test eax eax +
jz loc_10153A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+var_4] +
jmp loc_10153C7  +
push offset aOfflineVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_10153DD  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+15h] 0 +
jz loc_10153DB  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_10153FB  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+15h] 0 +
jz loc_10153F9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
push 5  +
mov [eax+8] ecx +
pop ecx  +
lea edi [eax+0Ch] +
movs   +
mov cl [ebp+arg_10] +
pop edi  +
mov [eax+20h] cl +
mov byte ptr [eax+21h] 0 +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_1015465  +
xor ecx ecx +
shl ecx 4 +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 10h +
jnb loc_1015457  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10154A8  +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov [eax] edx +
mov ecx [ecx+4] +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 40ECh +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
push edi  +
push 30h  +
mov [ebp+var_404C] eax +
lea eax [ebp+var_4034] +
push esi  +
push eax  +
mov [ebp+var_4040] esi +
mov [ebp+var_4044] esi +
mov [ebp+var_403C] esi +
mov [ebp+pv] esi +
mov [ebp+var_4050] esi +
call memset  +
push 4000h  +
lea eax [ebp+var_4004] +
push esi  +
push eax  +
call memset  +
add esp 18h +
mov edi 400h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 0CFh  +
call sub_10124CD  +
push edi  +
lea eax [ebp+var_3004] +
push eax  +
push 0B5h  +
call sub_10124CD  +
push edi  +
lea eax [ebp+var_2804] +
push eax  +
push 0AAh  +
call sub_10124CD  +
lea eax [ebp+var_405C] +
push eax  +
push ebx  +
push [ebp+var_404C]  +
mov edi offset unk_101F958 +
mov ecx edi +
call sub_101C002  +
mov [ebp+var_4038] eax +
cmp eax 1 +
jnz loc_1015598  +
lea eax [ebp+var_405C] +
push eax  +
push ebx  +
push [ebp+var_404C]  +
mov ecx edi +
call sub_101C892  +
mov [ebp+var_4038] eax +
cmp [ebp+var_4038] esi +
jl loc_10157F2  +
mov esi [ebp+var_404C] +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_4040] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_4040] +
mov ecx [eax] +
lea edx [ebp+var_4044] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_4044] +
mov ecx [eax] +
lea edx [ebp+var_40EC] +
push edx  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_4040] +
mov ecx [eax] +
lea edx [ebp+var_403C] +
push edx  +
push offset dword_10026A8  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_403C] +
mov ecx [eax] +
lea edx [ebp+var_4034] +
push edx  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_403C] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov eax [ebp+var_4044] +
mov ecx [eax] +
lea edx [ebp+var_4050] +
push edx  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_4038] eax +
test eax eax +
jl loc_10157F0  +
mov esi 400h +
push esi  +
lea eax [ebp+var_2004] +
push eax  +
push 0AEh  +
call sub_10124CD  +
push [ebp+var_40D0]  +
lea eax [ebp+var_1804] +
push [ebp+var_40D4]  +
push eax  +
call sub_10126D0  +
push esi  +
lea eax [ebp+var_1004] +
push eax  +
push 165h  +
call sub_10124CD  +
test [ebp+var_40E8] 1 +
push esi  +
lea eax [ebp+var_804] +
push eax  +
jz loc_1015710  +
push 10Dh  +
jmp loc_1015715  +
push 23Fh  +
call sub_10124CD  +
mov ecx [ebp+pv] +
mov eax offset dword_1001438 +
mov [ebp+var_4054] ecx +
test ecx ecx +
jnz loc_1015735  +
mov [ebp+var_4054] eax +
mov ecx [ebp+var_4008] +
mov [ebp+var_4058] ecx +
test ecx ecx +
jnz loc_101574B  +
mov [ebp+var_4058] eax +
cmp word ptr [ebp+var_4050] 0 +
jz loc_101575E  +
movzx eax word ptr [ebp+var_4050] +
jmp loc_1015761  +
push 20h  +
pop eax  +
mov esi [ebp+var_404C] +
push 4  +
pop ecx  +
mov edi offset unk_101F948 +
xor edx edx +
cmps   +
jnz loc_1015790  +
mov ecx [ebx] +
cmp ecx dword_101F940 +
jnz loc_1015790  +
mov ecx [ebx+4] +
cmp ecx dword_101F944 +
lea ecx [ebp+var_3004] +
jz loc_1015796  +
lea ecx [ebp+var_2804] +
lea edx [ebp+var_804] +
push edx  +
lea edx [ebp+var_1004] +
push edx  +
lea edx [ebp+var_1804] +
push edx  +
lea edx [ebp+var_2004] +
push edx  +
push [ebp+var_4054]  +
movzx eax ax +
push [ebp+var_4058]  +
push eax  +
push [ebp+var_405C]  +
lea eax [ebp+Buffer] +
push ecx  +
push eax  +
lea eax [ebp+var_4004] +
push 400h  +
push eax  +
call sub_1005575  +
add esp 30h +
lea eax [ebp+var_4004] +
push eax  +
call sub_1012604  +
xor esi esi +
mov eax [ebp+var_4040] +
cmp eax esi +
jz loc_1015808  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4040] esi +
mov eax [ebp+var_4044] +
cmp eax esi +
jz loc_101581E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4044] esi +
mov eax [ebp+var_403C] +
cmp eax esi +
jz loc_1015834  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_403C] esi +
lea eax [ebp+var_4034] +
push eax  +
call sub_100B049  +
cmp [ebp+pv] esi +
jz loc_1015854  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_4038] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2004h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 2000h  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 114h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 0D7h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 212h  +
call sub_10124CD  +
mov ebx [ebp+arg_0] +
lea eax [ebp+Buffer] +
test bl 8 +
jnz loc_10158F1  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
mov edi 1000h +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 213h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test bl 10h +
jnz loc_101594F  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 214h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx 20000h +
jnz loc_10159AB  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 215h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test ebx 100000h +
jnz loc_1015A07  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2004h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 2000h  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 114h  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 0D7h  +
call sub_10124CD  +
mov edi 1000h +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 18Eh  +
call sub_10124CD  +
test [ebp+arg_0] 40000h +
lea eax [ebp+Buffer] +
jnz loc_1015AD9  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 23Ch  +
call sub_10124CD  +
test [ebp+arg_0] 200000h +
lea eax [ebp+Buffer] +
jnz loc_1015B36  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
push edi  +
lea eax [ebp+var_2004] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_1804] +
push eax  +
push 4E5h  +
call sub_10124CD  +
lea eax [ebp+Buffer] +
test [ebp+arg_0] esi +
jnz loc_1015B8F  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_2004] +
push eax  +
call sub_1012604  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1930h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 70h  +
lea eax [ebp+var_18EC] +
push ebx  +
push eax  +
mov [ebp+dwMessageId] ebx +
mov [ebp+var_18F0] ebx +
mov [ebp+var_192C] ebx +
mov [ebp+var_190C] ebx +
mov [ebp+var_1908] ebx +
mov [ebp+var_18FC] ebx +
mov [ebp+var_1904] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_1900] ebx +
mov [ebp+var_18F4] ebx +
mov [ebp+var_1920] ebx +
mov [ebp+var_1914] ebx +
mov [ebp+var_1910] ebx +
call memset  +
push 38h  +
lea eax [ebp+var_187C] +
push ebx  +
push eax  +
call memset  +
push 30h  +
lea eax [ebp+var_1844] +
push ebx  +
push eax  +
call memset  +
push 1800h  +
lea eax [ebp+var_1804] +
push ebx  +
push eax  +
call memset  +
add esp 30h +
cmp [ebp+arg_8] ebx +
jz loc_1015C96  +
push offset aDetailVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10163D7  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1015CB4  +
push 5Fh  +
call sub_1012B18  +
jmp loc_1015C8C  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1015D42  +
lea eax [ebp+var_18F4] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
push 0B6h  +
call sub_1012B18  +
push 1800h  +
lea eax [ebp+var_1804] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push [ebp+var_18F4]  +
call sub_10083DB  +
push 230h  +
mov [ebp+var_18F0] eax +
call sub_1012B18  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 18Eh  +
call sub_10124CD  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push 0D7h  +
call sub_10124CD  +
jmp loc_10162A0  +
lea eax [ebp+var_190C] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
push 1800h  +
lea eax [ebp+var_1804] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp+var_190C] +
mov ecx [eax] +
add esp 0Ch +
lea edx [ebp+var_1908] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_1908] +
lea edx [ebp+var_1930] +
push edx  +
lea edx [ebp+var_18FC] +
push edx  +
push 1  +
mov [ebp+var_1930] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_18FC] +
mov ecx [eax] +
lea edx [ebp+var_1904] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_18FC] +
cmp eax ebx +
jz loc_1015DE5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18FC] ebx +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_1904] +
mov ecx [eax] +
lea edx [ebp+var_1910] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_1904] +
cmp eax ebx +
jz loc_1015E1F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1904] ebx +
cmp esi ebx +
jl loc_1015F16  +
mov esi [ebp+pv] +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_1900] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
cmp [ebp+pv] ebx +
jz loc_1015E6E  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov eax [ebp+var_1900] +
mov ecx [eax] +
lea edx [ebp+var_18F4] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_1900] +
cmp eax ebx +
jz loc_1015E9D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1900] ebx +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_18F4] +
mov ecx [eax] +
lea edx [ebp+var_18EC] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_18EC] +
push eax  +
call sub_10028A5  +
mov eax [ebp+var_18F4] +
cmp eax ebx +
jz loc_1015ED8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18F4] ebx +
cmp esi ebx +
jl loc_1015F16  +
cmp [ebp+var_18D0] 2 +
jz loc_1016136  +
cmp [ebp+var_18D0] 33h +
jz loc_1016136  +
push 0B6h  +
call sub_1012B18  +
mov eax [ebp+var_1908] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jge loc_1016107  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_18F0] esi +
jmp loc_10162CA  +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_18FC] +
mov ecx [eax] +
lea edx [ebp+var_1904] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_18FC] +
cmp eax ebx +
jz loc_1015F60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18FC] ebx +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_1904] +
mov esi offset dword_1001260 +
lea edi [ebp+var_1814] +
movs   +
movs   +
lea edx [ebp+var_1910] +
push edx  +
movs   +
lea edx [ebp+pv] +
push edx  +
mov [ebp+var_1910] ebx +
mov ecx [eax] +
push eax  +
movs   +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_1904] +
cmp eax ebx +
jz loc_1015FAB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1904] ebx +
cmp esi ebx +
jl loc_1015F16  +
cmp [ebp+var_1910] ebx +
mov [ebp+var_1924] ebx +
jle loc_10160ED  +
mov [ebp+var_1918] ebx +
mov eax [ebp+var_1918] +
mov ecx [ebp+pv] +
lea edx [eax+ecx] +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
lea esi [ebp+var_1814] +
xor eax eax +
cmps   +
jz loc_1016003  +
push 4  +
pop ecx  +
lea edi [ebp+var_1814] +
mov esi edx +
xor eax eax +
cmps   +
jz loc_10160CE  +
mov esi edx +
lea edi [ebp+var_1814] +
movs   +
movs   +
movs   +
mov eax dword_101F928 +
movs   +
mov ecx [eax] +
lea esi [ebp+var_1900] +
push esi  +
push 0Dh  +
sub esp 10h +
mov edi esp +
mov esi edx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
mov eax [ebp+var_1900] +
mov ecx [eax] +
lea edx [ebp+var_18F4] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_1900] +
cmp eax ebx +
jz loc_1016067  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1900] ebx +
cmp esi ebx +
jl loc_1015F16  +
cmp [ebp+var_192C] ebx +
jnz loc_10160AD  +
push [ebp+var_18F4]  +
mov [ebp+var_192C] 1 +
call sub_1004404  +
test eax eax +
jz loc_10160AD  +
mov eax [ebp+var_18F4] +
mov ecx [eax] +
lea edx [ebp+var_1920] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1015F16  +
push [ebp+var_18F4]  +
call sub_10083DB  +
mov eax [ebp+var_18F4] +
cmp eax ebx +
jz loc_10160CE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18F4] ebx +
inc [ebp+var_1924]  +
mov eax [ebp+var_1924] +
add [ebp+var_1918] 50h +
cmp eax [ebp+var_1910] +
jl loc_1015FCB  +
cmp [ebp+pv] ebx +
jz loc_1016107  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
mov eax [ebp+var_1908] +
lea edx [ebp+var_191C] +
push edx  +
lea edx [ebp+var_18FC] +
push edx  +
push 1  +
mov [ebp+var_191C] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_1015F2D  +
jmp loc_101613D  +
push 5Eh  +
call sub_1012B18  +
mov eax [ebp+var_1908] +
cmp eax ebx +
jz loc_1016153  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1908] ebx +
cmp [ebp+var_18DC] 4 +
jz loc_10162CA  +
mov eax [ebp+var_190C] +
mov ecx [eax] +
lea edx [ebp+var_187C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_101617D  +
mov [ebp+dwMessageId] eax +
mov esi 230h +
push esi  +
call sub_1012B18  +
push [ebp+var_1854]  +
call sub_1015870  +
push [ebp+var_1854]  +
call sub_1015A41  +
test [ebp+var_1854] 40000h +
jnz loc_10162CA  +
mov eax [ebp+var_190C] +
mov ecx [eax] +
lea edx [ebp+var_1914] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jl loc_10161E4  +
mov eax [ebp+var_1914] +
mov ecx [eax] +
lea edx [ebp+var_1844] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_10161FB  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_18F0] edi +
jmp loc_10162CA  +
push esi  +
call sub_1012B18  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 22Eh  +
call sub_10124CD  +
push [ebp+var_1828]  +
push [ebp+var_182C]  +
push ebx  +
push [ebp+var_181C]  +
call __allmul  +
push edx  +
push eax  +
lea eax [ebp+var_804] +
push eax  +
call sub_10126D0  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1804] +
push eax  +
call sub_1012604  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 22Fh  +
call sub_10124CD  +
push [ebp+var_1820]  +
push [ebp+var_1824]  +
push ebx  +
push [ebp+var_181C]  +
call __allmul  +
push edx  +
push eax  +
lea eax [ebp+var_804] +
push eax  +
call sub_10126D0  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1804] +
push eax  +
call sub_1012604  +
mov eax [ebp+var_190C] +
cmp eax ebx +
jz loc_10162E0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_190C] ebx +
mov eax [ebp+var_1908] +
cmp eax ebx +
jz loc_10162F6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1908] ebx +
mov eax [ebp+var_18FC] +
cmp eax ebx +
jz loc_101630C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18FC] ebx +
mov eax [ebp+var_1904] +
cmp eax ebx +
jz loc_1016322  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1904] ebx +
mov eax [ebp+var_1900] +
cmp eax ebx +
jz loc_1016338  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1900] ebx +
mov eax [ebp+var_1920] +
cmp eax ebx +
jz loc_101634E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1920] ebx +
mov eax [ebp+var_18F4] +
cmp eax ebx +
jz loc_1016364  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18F4] ebx +
mov eax [ebp+var_1914] +
cmp eax ebx +
jz loc_101637A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1914] ebx +
lea eax [ebp+var_18EC] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_187C] +
push eax  +
call sub_1004329  +
lea eax [ebp+var_1844] +
push eax  +
call sub_100B049  +
cmp [ebp+pv] ebx +
jz loc_10163B8  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
cmp [ebp+dwMessageId] ebx +
jge loc_10163D1  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp+var_18F0] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push 38h  +
mov [ebp-58h] eax +
lea eax [ebp-3Ch] +
push ebx  +
push eax  +
mov [ebp-50h] ebx +
mov [ebp-3Fh] bl +
mov [ebp-3Eh] bl +
mov [ebp-3Dh] bl +
mov [ebp-48h] ebx +
mov [ebp-44h] ebx +
mov [ebp-54h] ebx +
call memset  +
add esp 0Ch +
cmp [ebp+10h] ebx +
jbe loc_1016640  +
mov edi ds:_wcsicmp +
mov dword ptr [ebp-4Ch] 1 +
mov eax [ebp-58h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_10166B2  +
push offset aNoerr  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016474  +
cmp [ebp-3Fh] al +
jnz loc_10166CD  +
mov byte ptr [ebp-3Fh] 1 +
jmp loc_1016633  +
push offset aSet  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10164F3  +
mov eax [ebp-4Ch] +
cmp eax [ebp+10h] +
jnb loc_10166CD  +
mov eax [ebp-58h] +
inc ebx  +
inc dword ptr [ebp-4Ch]  +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_10166CD  +
push offset aHidden  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10164E2  +
push offset aReadonly  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10164E2  +
push offset aNodefaultdrive  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10164E2  +
push offset aShadowcopy  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10166CD  +
dec ebx  +
dec dword ptr [ebp-4Ch]  +
mov byte ptr [ebp-3Eh] 1 +
mov byte ptr [ebp-3Dh] 0 +
jmp loc_1016633  +
push offset aClear  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016572  +
mov eax [ebp-4Ch] +
cmp eax [ebp+10h] +
jnb loc_10166CD  +
mov eax [ebp-58h] +
inc ebx  +
inc dword ptr [ebp-4Ch]  +
lea esi [eax+ebx*4] +
mov eax [esi] +
test eax eax +
jz loc_10166CD  +
push offset aHidden  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1016561  +
push offset aReadonly  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1016561  +
push offset aNodefaultdrive  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1016561  +
push offset aShadowcopy  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10166CD  +
dec ebx  +
dec dword ptr [ebp-4Ch]  +
mov byte ptr [ebp-3Eh] 0 +
mov byte ptr [ebp-3Dh] 1 +
jmp loc_1016633  +
push offset aHidden  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10165B8  +
cmp [ebp-3Eh] al +
jnz loc_10165AC  +
cmp [ebp-3Dh] al +
jz loc_10166CD  +
cmp byte ptr [ebp-3Dh] 0 +
jz loc_10166CD  +
test byte ptr [ebp-44h] 10h +
jnz loc_10166CD  +
or dword ptr [ebp-44h] 10h +
jmp loc_1016633  +
test byte ptr [ebp-48h] 10h +
jnz loc_101658F  +
or dword ptr [ebp-48h] 10h +
jmp loc_1016633  +
push offset aReadonly  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10165FB  +
cmp [ebp-3Eh] al +
jnz loc_10165EF  +
cmp [ebp-3Dh] al +
jz loc_10166CD  +
cmp byte ptr [ebp-3Dh] 0 +
jz loc_10166CD  +
test byte ptr [ebp-44h] 8 +
jnz loc_10166CD  +
or dword ptr [ebp-44h] 8 +
jmp loc_1016633  +
test byte ptr [ebp-48h] 8 +
jnz loc_10165D5  +
or dword ptr [ebp-48h] 8 +
jmp loc_1016633  +
push offset aNodefaultdrive  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1016688  +
cmp [ebp-3Eh] al +
jnz loc_1016679  +
cmp [ebp-3Dh] al +
jz loc_10166CD  +
mov eax 20000h +
cmp byte ptr [ebp-3Dh] 0 +
jz loc_10166CD  +
test [ebp-44h] eax +
jnz loc_10166CD  +
or [ebp-44h] eax +
inc ebx  +
inc dword ptr [ebp-4Ch]  +
cmp ebx [ebp+10h] +
jb loc_1016444  +
mov ebx [ebp-48h] +
test [ebp-44h] ebx +
jnz loc_10166CD  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F948 +
xor eax eax +
cmps   +
jnz loc_10166E8  +
push 23Eh  +
call sub_1012B18  +
mov dword ptr [ebp-50h] 80070057h +
jmp loc_1016784  +
mov eax 20000h +
test [ebp-48h] eax +
jnz loc_101661D  +
or [ebp-48h] eax +
jmp loc_1016633  +
***
push offset aShadowcopy  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10166CD  +
cmp [ebp-3Eh] al +
jnz loc_10166AB  +
cmp [ebp-3Dh] al +
jz loc_10166CD  +
mov eax 100000h +
jmp loc_101661D  +
***
mov eax 100000h +
jmp loc_101667E  +
***
push offset aAttributesVolu  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10167AB  +
push offset aAttributesVolu  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_10167AB  +
lea eax [ebp-54h] +
push eax  +
call sub_10130DC  +
mov esi eax +
test esi esi +
jl loc_1016716  +
cmp byte ptr [ebp-3Eh] 0 +
jnz loc_1016731  +
cmp byte ptr [ebp-3Dh] 0 +
jnz loc_1016731  +
mov eax [ebp-54h] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_1016727  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-50h] esi +
jmp loc_1016784  +
push dword ptr [ebp-14h]  +
call sub_1015870  +
jmp loc_1016784  +
test ebx ebx +
jz loc_1016762  +
mov eax [ebp-54h] +
mov ecx [eax] +
push 0  +
push ebx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jge loc_1016758  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-50h] esi +
jmp loc_1016762  +
push 20Fh  +
call sub_1012B18  +
cmp dword ptr [ebp-44h] 0 +
jz loc_1016784  +
mov eax [ebp-54h] +
push dword ptr [ebp-44h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
test esi esi +
jl loc_1016716  +
push 211h  +
call sub_1012B18  +
mov eax [ebp-54h] +
test eax eax +
jz loc_1016795  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-54h] 0 +
lea eax [ebp-3Ch] +
push eax  +
call sub_1004329  +
movzx eax byte ptr [ebp-3Fh] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-50h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
mov ecx [eax+4] +
cmp byte ptr [ecx+15h] 0 +
jnz loc_10167EB  +
mov edx [ebp+arg_0] +
mov edx [edx] +
cmp [ecx+0Ch] edx +
jge loc_10167E1  +
mov ecx [ecx+8] +
jmp loc_10167E5  +
mov eax ecx +
mov ecx [ecx] +
cmp byte ptr [ecx+15h] 0 +
jz loc_10167D7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1016814  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101540C  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor dl dl +
cmp [eax+21h] dl +
jz loc_1016830  +
mov eax [eax+8] +
jmp loc_1016856  +
mov ecx [eax] +
cmp [ecx+21h] dl +
jnz loc_1016847  +
push ecx  +
call sub_1009FCE  +
jmp loc_1016856  +
mov ecx [esi] +
cmp ecx [eax] +
jnz loc_101684F  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+21h] dl +
jz loc_101683F  +
mov ecx [esi] +
cmp [ecx+21h] dl +
jnz loc_1016858  +
mov [esi] eax +
pop esi  +
retn   +
***
call loc_1015446  +
test eax eax +
jz loc_101686E  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz locret_1016877  +
mov [ecx] eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 1  +
mov edi ecx +
call loc_1005414  +
push [ebp+arg_10]  +
mov esi eax +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_1006798  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+4] eax +
and dword ptr [esi+8] 0 +
cmp ecx [esi+4] +
jz loc_10168E2  +
push edi  +
mov edi [ecx] +
push ecx  +
call sub_101CD94  +
pop ecx  +
mov ecx edi +
cmp edi [esi+4] +
jnz loc_10168D1  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 1  +
call loc_1015446  +
mov esi eax +
test esi esi +
jz loc_1016903  +
mov eax [ebp+arg_0] +
mov [esi] eax +
lea eax [esi+4] +
test eax eax +
jz loc_101690F  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+arg_8]  +
lea eax [esi+8] +
push eax  +
call sub_101548F  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 1  +
mov edi ecx +
call loc_100A09E  +
push [ebp+arg_10]  +
mov esi eax +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_10167F4  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+15h] 0 +
mov ebx ecx +
mov esi edi +
jnz loc_101698F  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_101695F  +
mov esi [esi] +
push edi  +
call sub_101CD94  +
cmp byte ptr [esi+15h] 0 +
pop ecx  +
mov edi esi +
jz loc_1016974  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
mov esi ecx +
call sub_10167C1  +
mov esi [esi+4] +
mov [ebp+arg_4] eax +
cmp eax esi +
jz loc_10169C4  +
mov ecx [edi] +
cmp ecx [eax+0Ch] +
jl loc_10169C4  +
lea eax [ebp+arg_4] +
jmp loc_10169CA  +
mov [ebp+var_4] esi +
lea eax [ebp+var_4] +
mov ecx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov eax [esi] +
push dword ptr [eax+4]  +
call sub_101695F  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
and dword ptr [edi+8] 0 +
mov [eax] eax +
mov esi [esi] +
pop edi  +
mov [esi+8] esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 4120h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 38h  +
lea eax [ebp+var_403C] +
push edi  +
push eax  +
mov [ebp+var_4100] esi +
mov [ebp+var_4118] edi +
mov [ebp+var_40F4] edi +
mov [ebp+var_40E8] edi +
mov [ebp+var_4110] edi +
mov [ebp+var_4108] edi +
mov [ebp+pv] edi +
mov [ebp+var_4104] edi +
mov [ebp+var_40F0] edi +
mov [ebp+var_411C] edi +
mov [ebp+var_40F8] edi +
mov [ebp+var_40EC] edi +
mov [ebp+var_40FC] edi +
mov [ebp+var_4114] edi +
mov [ebp+var_410C] edi +
call memset  +
push 70h  +
lea eax [ebp+var_40DC] +
push edi  +
push eax  +
call memset  +
push 30h  +
lea eax [ebp+var_406C] +
push edi  +
push eax  +
call memset  +
push 4000h  +
lea eax [ebp+var_4004] +
push edi  +
push eax  +
call memset  +
add esp 30h +
mov ebx 400h +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push 0CFh  +
call sub_10124CD  +
push ebx  +
lea eax [ebp+var_3004] +
push eax  +
push 0B5h  +
call sub_10124CD  +
push ebx  +
lea eax [ebp+var_2804] +
push eax  +
push 0AAh  +
call sub_10124CD  +
mov eax [esi] +
lea ecx [ebp+var_403C] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_4118] +
push eax  +
lea eax [ebp+var_403C] +
mov esi offset unk_101F958 +
push eax  +
mov ecx esi +
call sub_101C08C  +
mov [ebp+var_40E0] eax +
cmp eax 1 +
jnz loc_1016B4E  +
lea eax [ebp+var_4118] +
push eax  +
lea eax [ebp+var_403C] +
push eax  +
mov ecx esi +
call sub_101C99C  +
mov [ebp+var_40E0] eax +
cmp eax edi +
jl loc_10172AC  +
mov eax [ebp+var_402C] +
cmp eax 0Ah +
jnz loc_1016D53  +
mov esi [ebp+var_4100] +
push esi  +
call sub_1013295  +
test eax eax +
jnz loc_1016D44  +
mov eax [esi] +
lea ecx [ebp+var_4110] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jl loc_10172AC  +
mov eax [ebp+var_4110] +
lea edx [ebp+var_4120] +
push edx  +
lea edx [ebp+var_40E8] +
push edx  +
push 1  +
mov [ebp+var_4120] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_40E0] eax +
mov eax [ebp+var_4110] +
cmp eax edi +
jz loc_1016BD2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4110] edi +
cmp [ebp+var_40E0] edi +
jl loc_10172AC  +
mov eax [ebp+var_40E8] +
mov ecx [eax] +
lea edx [ebp+var_4108] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_40E0] eax +
mov eax [ebp+var_40E8] +
cmp eax edi +
jz loc_1016C11  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40E8] edi +
cmp [ebp+var_40E0] edi +
jl loc_10172AC  +
mov eax [ebp+var_4108] +
mov ecx [eax] +
lea edx [ebp+var_4114] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+var_40E0] eax +
mov eax [ebp+var_4108] +
cmp eax edi +
jz loc_1016C53  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4108] edi +
cmp [ebp+var_40E0] edi +
jl loc_10172AC  +
mov esi [ebp+pv] +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_40E8] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov [ebp+var_40E0] eax +
test eax eax +
jl loc_10172AC  +
mov eax [ebp+var_40E8] +
mov ecx [eax] +
lea edx [ebp+var_4104] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_40E0] eax +
mov eax [ebp+var_40E8] +
test eax eax +
jz loc_1016CC4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_40E8] 0 +
cmp [ebp+var_40E0] 0 +
jl loc_10172AC  +
mov eax [ebp+var_4104] +
mov ecx [eax] +
lea edx [ebp+var_40DC] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_40E0] eax +
test eax eax +
jl loc_10172AC  +
cmp [ebp+var_40C0] 2 +
push ebx  +
lea eax [ebp+var_2004] +
push eax  +
jnz loc_1016D0A  +
push 0ABh  +
jmp loc_1016D2F  +
cmp [ebp+var_40C0] 33h +
jnz loc_1016D1A  +
push 0ACh  +
jmp loc_1016D2F  +
cmp [ebp+var_40BC] 0Ch +
jz loc_1016D2A  +
push 0B0h  +
jmp loc_1016D2F  +
push 0AEh  +
call sub_10124CD  +
lea eax [ebp+var_40DC] +
push eax  +
call sub_10028A5  +
xor edi edi +
jmp loc_1016DAA  +
push ebx  +
lea eax [ebp+var_2004] +
push eax  +
push 0B1h  +
jmp loc_1016DA5  +
push ebx  +
cmp eax 0Bh +
jnz loc_1016D67  +
lea eax [ebp+var_2004] +
push eax  +
push 0B2h  +
jmp loc_1016DA5  +
cmp eax 0Ch +
jnz loc_1016D7A  +
lea eax [ebp+var_2004] +
push eax  +
push 0B3h  +
jmp loc_1016DA5  +
cmp eax 0Dh +
jnz loc_1016D8D  +
lea eax [ebp+var_2004] +
push eax  +
push 0ADh  +
jmp loc_1016DA5  +
cmp eax 0Eh +
lea eax [ebp+var_2004] +
push eax  +
jnz loc_1016DA0  +
push 0AFh  +
jmp loc_1016DA5  +
push 0B4h  +
call sub_10124CD  +
push [ebp+var_4018]  +
lea eax [ebp+var_1804] +
push [ebp+var_401C]  +
push eax  +
call sub_10126D0  +
mov eax [ebp+var_4024] +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_1016E24  +
cmp eax 2 +
jz loc_1016E15  +
cmp eax 3 +
jle loc_1016E06  +
cmp eax 5 +
jle loc_1016E24  +
cmp eax 7 +
jle loc_1016DF7  +
cmp eax 8 +
jnz loc_1016E06  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 10Eh  +
jmp loc_1016E31  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 10Fh  +
jmp loc_1016E31  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 111h  +
jmp loc_1016E31  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 17Ah  +
jmp loc_1016E31  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 165h  +
call sub_10124CD  +
cmp [ebp+var_4104] edi +
jz loc_1016EF5  +
cmp [ebp+var_40BC] 0Ch +
jz loc_1016EF5  +
cmp [ebp+var_4028] 3 +
jnz loc_1016E6F  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 120h  +
call sub_10124CD  +
jmp loc_1016EF5  +
cmp [ebp+pv] edi +
jz loc_1016E89  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] edi +
mov eax [ebp+var_4104] +
mov ecx [eax] +
lea edx [ebp+var_4114] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jl loc_10172AC  +
xor ecx ecx +
cmp [ebp+var_4114] edi +
jle loc_1016ED5  +
mov eax [ebp+pv] +
add eax 10h +
cmp dword ptr [eax] 2 +
jz loc_1016ED5  +
inc ecx  +
add eax 50h +
cmp ecx [ebp+var_4114] +
jl loc_1016EC4  +
cmp ecx [ebp+var_4114] +
jnz loc_1016EF5  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
push 22Dh  +
call sub_10124CD  +
mov [ebp+var_40F4] esi +
cmp [ebp+var_4028] 4 +
jnz loc_1016F10  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 4DFh  +
jmp loc_1016F97  +
cmp [ebp+var_4024] 4 +
jz loc_1016F8A  +
cmp [ebp+var_4024] 5 +
jz loc_1016F8A  +
mov eax [ebp+var_4014] +
test al 1 +
jz loc_1016F3B  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 10Dh  +
jmp loc_1016F97  +
test al 2 +
jz loc_1016F4E  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 10Ah  +
jmp loc_1016F97  +
test al al +
jns loc_1016F61  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 10Ch  +
jmp loc_1016F97  +
test eax 200h +
jz loc_1016F77  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 10Bh  +
jmp loc_1016F97  +
test al 10h +
jz loc_1016F9C  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 23Fh  +
jmp loc_1016F97  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
push 109h  +
call sub_10124CD  +
mov eax [ebp+var_4100] +
mov ecx [eax] +
lea edx [ebp+var_40F0] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jl loc_10170F3  +
mov eax [ebp+var_40F0] +
mov ecx [eax] +
lea edx [ebp+var_40FC] +
push edx  +
lea edx [ebp+var_40EC] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jl loc_10170ED  +
cmp [ebp+var_40FC] edi +
jz loc_1017064  +
mov eax [ebp+var_40EC] +
mov esi [eax] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1016FFE  +
sub eax edx +
sar eax 1 +
cmp eax 3 +
jnz loc_1017064  +
movzx eax word ptr [esi] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_1017064  +
mov eax [ebp+var_40EC] +
mov esi [eax] +
mov ecx offset asc_1001880 +
lea eax [esi+2] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1017056  +
cmp dx di +
jz loc_1017052  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1017056  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_1017030  +
xor eax eax +
jmp loc_101705B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_1017064  +
movzx eax word ptr [esi] +
jmp loc_101708A  +
lea eax [ebp+var_403C] +
push eax  +
lea eax [ebp+var_4120] +
push eax  +
mov ecx offset unk_101F970 +
call sub_100D545  +
mov eax [eax] +
cmp eax dword_101F974 +
jz loc_1017090  +
movzx eax word ptr [eax+1Ch] +
mov [ebp+var_40F8] eax +
mov eax [ebp+var_40F0] +
mov ecx [eax] +
lea edx [ebp+var_406C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_40F0] +
mov [ebp+var_40E0] esi +
cmp eax edi +
jz loc_10170C1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40F0] edi +
cmp esi edi +
jge loc_10170F3  +
cmp esi 80042412h +
jz loc_10170E1  +
cmp esi 8004243Dh +
jz loc_10170E1  +
cmp esi 80070005h +
jnz loc_10172AC  +
mov [ebp+var_40F4] 1 +
jmp loc_10170F3  +
mov [ebp+var_40F4] esi +
cmp [ebp+var_4028] 3 +
jz loc_10171E3  +
cmp [ebp+var_40F4] edi +
jnz loc_10171E3  +
mov eax [ebp+var_4100] +
mov ecx [eax] +
lea edx [ebp+var_411C] +
push edx  +
push offset dword_10026C8  +
push eax  +
call dword ptr [ecx]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jl loc_101714A  +
mov eax [ebp+var_411C] +
mov ecx [eax] +
lea edx [ebp+var_410C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
mov [ebp+var_40E0] eax +
jge loc_1017150  +
mov [ebp+var_410C] edi +
mov ecx [ebp+var_410C] +
mov eax offset dword_1001438 +
mov [ebp+var_4100] ecx +
cmp ecx edi +
jnz loc_101716B  +
mov [ebp+var_4100] eax +
mov ecx [ebp+var_4040] +
mov [ebp+var_40F4] ecx +
cmp ecx edi +
jnz loc_1017181  +
mov [ebp+var_40F4] eax +
cmp word ptr [ebp+var_40F8] di +
jz loc_1017193  +
movzx eax word ptr [ebp+var_40F8] +
jmp loc_1017196  +
push 20h  +
pop eax  +
push 4  +
pop ecx  +
mov edi offset unk_101F948 +
lea esi [ebp+var_403C] +
xor edx edx +
cmps   +
lea ecx [ebp+var_3004] +
jz loc_10171B6  +
lea ecx [ebp+var_2804] +
lea edx [ebp+var_804] +
push edx  +
lea edx [ebp+var_1004] +
push edx  +
lea edx [ebp+var_1804] +
push edx  +
lea edx [ebp+var_2004] +
push edx  +
push [ebp+var_4100]  +
movzx eax ax +
push [ebp+var_40F4]  +
jmp loc_101723E  +
cmp word ptr [ebp+var_40F8] di +
jz loc_10171F5  +
movzx edx word ptr [ebp+var_40F8] +
jmp loc_10171F8  +
push 20h  +
pop edx  +
push 4  +
pop ecx  +
mov edi offset unk_101F948 +
lea esi [ebp+var_403C] +
xor eax eax +
cmps   +
lea ecx [ebp+var_3004] +
jz loc_1017218  +
lea ecx [ebp+var_2804] +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_1004] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
lea eax [ebp+var_2004] +
push eax  +
mov eax offset dword_1001438 +
push eax  +
push eax  +
movzx eax dx +
push eax  +
push [ebp+var_4118]  +
lea eax [ebp+Buffer] +
push ecx  +
push eax  +
lea eax [ebp+var_4004] +
push ebx  +
push eax  +
call sub_1005575  +
add esp 30h +
lea eax [ebp+var_4004] +
push eax  +
call sub_1012604  +
xor eax eax +
cmp word ptr [ebp+var_40F8] ax +
setnz al  +
mov esi eax +
jmp loc_10172A4  +
mov eax [ebp+var_40EC] +
push dword ptr [eax+esi*4]  +
lea eax [ebp+var_4004] +
push offset aS  +
push ebx  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_4004] +
push eax  +
call sub_1012604  +
inc esi  +
cmp esi [ebp+var_40FC] +
jl loc_1017279  +
mov eax [ebp+var_40E8] +
xor edi edi +
cmp eax edi +
jz loc_10172C4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40E8] edi +
mov eax [ebp+var_4108] +
cmp eax edi +
jz loc_10172DA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4108] edi +
mov eax [ebp+var_4104] +
cmp eax edi +
jz loc_10172F0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4104] edi +
mov eax [ebp+var_40F0] +
cmp eax edi +
jz loc_1017306  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_40F0] edi +
mov eax [ebp+var_411C] +
cmp eax edi +
jz loc_101731C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_411C] edi +
mov eax [ebp+var_4110] +
cmp eax edi +
jz loc_1017332  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4110] edi +
lea eax [ebp+var_40DC] +
push eax  +
call sub_10028A5  +
lea eax [ebp+var_403C] +
push eax  +
call sub_1004329  +
lea eax [ebp+var_406C] +
push eax  +
call sub_100B049  +
mov esi ds:CoTaskMemFree +
cmp [ebp+pv] edi +
jz loc_1017372  +
push [ebp+pv]  +
call esi  +
mov [ebp+pv] edi +
cmp [ebp+var_410C] edi +
jz loc_1017388  +
push [ebp+var_410C]  +
call esi  +
mov [ebp+var_410C] edi +
cmp [ebp+var_40EC] edi +
jz loc_10173CD  +
xor ebx ebx +
cmp [ebp+var_40FC] ebx +
jle loc_10173BD  +
mov eax [ebp+var_40EC] +
lea eax [eax+edi*4] +
cmp [eax] ebx +
jz loc_10173B4  +
push dword ptr [eax]  +
call esi  +
mov eax [ebp+var_40EC] +
mov [eax+edi*4] ebx +
inc edi  +
cmp edi [ebp+var_40FC] +
jl loc_101739A  +
cmp [ebp+var_40EC] ebx +
jz loc_10173CD  +
push [ebp+var_40EC]  +
call esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_40E0] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 104h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
or dword ptr [ebp-0B4h] 0FFFFFFFFh +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 70h  +
lea eax [ebp-0ACh] +
push ebx  +
push eax  +
mov [ebp-0E0h] esi +
mov [ebp-0B0h] ebx +
xor edi edi +
mov [ebp-0DCh] ebx +
mov [ebp-0D0h] ebx +
mov [ebp-0CCh] ebx +
mov [ebp-0C8h] ebx +
mov [ebp-0BCh] ebx +
mov [ebp-0D4h] ebx +
mov [ebp-0C0h] ebx +
mov [ebp-0D8h] ebx +
mov [ebp-0C4h] ebx +
mov [ebp-0B8h] ebx +
call memset  +
push 38h  +
lea eax [ebp-3Ch] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
cmp dword_101F914 ebx +
jnz loc_1017499  +
cmp dword_101F91C ebx +
jnz loc_1017499  +
push 115h  +
call sub_1012B18  +
mov eax 80070057h +
jmp loc_10177FD  +
cmp [ebp+10h] ebx +
jbe loc_10175F4  +
mov eax [esi+edi*4] +
cmp eax ebx +
jz loc_101760E  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10174DA  +
cmp [ebp-0DCh] ebx +
jnz loc_1017629  +
mov dword ptr [ebp-0DCh] 1 +
jmp loc_10175EA  +
push offset aNokeep  +
push dword ptr [esi+edi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1017509  +
cmp [ebp-0D0h] ebx +
jnz loc_1017629  +
mov dword ptr [ebp-0D0h] 1 +
jmp loc_10175EA  +
push offset aDisk  +
push dword ptr [esi+edi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1017629  +
inc edi  +
mov [ebp-0E4h] edi +
cmp edi [ebp+10h] +
jnb loc_101763F  +
cmp dword ptr [ebp-0B4h] 0FFFFFFFFh +
jnz loc_1017629  +
lea esi [esi+edi*4] +
mov ecx [esi] +
cmp ecx ebx +
jz loc_1017629  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1017550  +
sub eax edi +
sar eax 1 +
push offset aMm0123456789  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_1017629  +
mov eax [esi] +
movzx eax word ptr [eax] +
push eax  +
push offset aMm  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10175CF  +
mov eax [esi] +
lea ecx [eax+2] +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1017597  +
sub eax edi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_10175CF  +
mov eax [esi] +
inc eax  +
inc eax  +
push eax  +
mov dword ptr [ebp-0CCh] 1 +
call ds:_wtol  +
pop ecx  +
push dword ptr [esi]  +
call ds:_wtol  +
mov edi [ebp-0E4h] +
mov esi [ebp-0E0h] +
pop ecx  +
mov [ebp-0B4h] eax +
inc edi  +
cmp edi [ebp+10h] +
jb loc_10174A2  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F948 +
xor eax eax +
cmps   +
jnz loc_1017646  +
push 20h  +
jmp loc_1017749  +
push offset aBreak  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_10177FD  +
push offset aBreak  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_101748F  +
***
push 70h  +
jmp loc_101748A  +
***
lea eax [ebp-0BCh] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
push dword ptr [ebp-0BCh]  +
call sub_1013295  +
test eax eax +
jnz loc_1017672  +
push 1Fh  +
jmp loc_1017749  +
mov eax [ebp-0BCh] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
cmp dword ptr [ebp-2Ch] 0Dh +
jz loc_101769C  +
push 1B9h  +
jmp loc_1017749  +
mov eax [ebp-24h] +
cmp eax 2 +
jnz loc_10176B6  +
cmp [ebp-0D0h] ebx +
jnz loc_10176D1  +
push 1CCh  +
jmp loc_1017749  +
cmp eax 6 +
jz loc_10176C5  +
cmp eax 7 +
jz loc_10176C5  +
cmp eax 8 +
jnz loc_10176D1  +
cmp [ebp-0D0h] ebx +
jnz loc_10176D1  +
push 1Dh  +
jmp loc_1017749  +
mov edi [ebp-0B4h] +
cmp edi 0FFFFFFFFh +
jz loc_1017747  +
cmp [ebp-0CCh] ebx +
jnz loc_101783F  +
lea eax [ebp-0D4h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
mov esi [ebp-0D4h] +
jmp loc_1017743  +
lea eax [ebp-0ACh] +
push eax  +
call sub_10028A5  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0ACh] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-9Ch] 6 +
jz loc_1017740  +
mov eax [ebp-50h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax edi +
jz loc_101780E  +
mov esi [esi+14h] +
cmp esi ebx +
jnz loc_1017706  +
push 1Eh  +
call sub_1012B18  +
mov dword ptr [ebp-0B0h] 80070057h +
mov eax [ebp-0BCh] +
cmp eax ebx +
jz loc_101776E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0BCh] ebx +
mov eax [ebp-0B8h] +
cmp eax ebx +
jz loc_1017784  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0B8h] ebx +
mov eax [ebp-0C0h] +
cmp eax ebx +
jz loc_101779A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0h] ebx +
mov eax [ebp-0D8h] +
cmp eax ebx +
jz loc_10177B0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0D8h] ebx +
lea eax [ebp-3Ch] +
push eax  +
call sub_1004329  +
lea eax [ebp-0ACh] +
push eax  +
call sub_10028A5  +
cmp [ebp-0C4h] ebx +
jz loc_10177DF  +
push dword ptr [ebp-0C4h]  +
call ds:CoTaskMemFree  +
mov [ebp-0C4h] ebx +
lea eax [ebp-0D4h] +
push eax  +
call sub_1004352  +
mov eax [ebp-0DCh] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-0B0h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp-0C8h] +
push ecx  +
lea ecx [ebp-0C4h] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
lea eax [ebp-0D4h] +
push eax  +
call sub_1004352  +
jmp loc_1017900  +
mov eax dword_101F980 +
mov ecx [eax] +
mov [ebp-0CCh] ecx +
cmp ecx eax +
jz loc_1017747  +
cmp [ecx+28h] edi +
jz loc_1017873  +
lea ecx [ebp-0CCh] +
call sub_10066DC  +
mov ecx [ebp-0CCh] +
mov eax dword_101F980 +
cmp ecx eax +
jnz loc_1017854  +
cmp ecx eax +
jz loc_1017747  +
mov eax dword_101F928 +
mov edx [eax] +
lea esi [ebp-0C0h] +
push esi  +
push 0Dh  +
sub esp 10h +
mov edi esp +
lea esi [ecx+10h] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [edx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
mov eax [ebp-0C0h] +
mov ecx [eax] +
lea edx [ebp-0D8h] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-0C0h] +
cmp eax ebx +
jz loc_10178D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0h] ebx +
cmp esi ebx +
jl loc_1017A9D  +
mov eax [ebp-0D8h] +
mov ecx [eax] +
lea edx [ebp-0C8h] +
push edx  +
lea edx [ebp-0C4h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
mov edx [ebp-0C4h] +
xor eax eax +
cmp [ebp-0C8h] ebx +
jle loc_101793F  +
lea ecx [edx+28h] +
mov [ebp-0B4h] ecx +
mov esi [ebp-0B4h] +
push 4  +
pop ecx  +
mov edi offset unk_101F948 +
xor ebx ebx +
cmps   +
jz loc_101793D  +
add dword ptr [ebp-0B4h] 50h +
inc eax  +
cmp eax [ebp-0C8h] +
jl loc_1017919  +
xor ebx ebx +
cmp eax [ebp-0C8h] +
jnz loc_1017951  +
push 1CDh  +
jmp loc_1017749  +
***
imul eax eax +
lea esi [eax+edx+38h] +
mov eax [ebp-0BCh] +
mov ecx [eax] +
lea edx [ebp-0B8h] +
push edx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
cmp [ebp-0D0h] ebx +
jz loc_10179D2  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
mov eax [ebp-0B8h] +
mov ecx [eax] +
lea edx [ebp-104h] +
push edx  +
lea edx [ebp-0B4h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0B8h] +
cmp eax ebx +
jz loc_10179B8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0B8h] ebx +
cmp esi ebx +
jl loc_1017A9D  +
cmp [ebp-0B4h] ebx +
jl loc_1017A21  +
mov esi offset dword_1001260 +
jmp loc_1017AB7  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi ebx +
jl loc_1017A9D  +
mov eax [ebp-0B8h] +
mov ecx [eax] +
lea edx [ebp-104h] +
push edx  +
lea edx [ebp-0B4h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0B8h] +
cmp eax ebx +
jz loc_1017A11  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0B8h] ebx +
cmp esi ebx +
jl loc_1017A9D  +
cmp [ebp-0B4h] ebx +
jge loc_1017A43  +
push dword ptr [ebp-0B4h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-0B4h] +
mov [ebp-0B0h] eax +
jmp loc_1017758  +
***
mov eax [ebp-0FCh] +
mov ecx [eax] +
lea edx [ebp-0BCh] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-0FCh] +
cmp eax ebx +
jz loc_1017A72  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0FCh] ebx +
cmp esi ebx +
jl loc_1017A9D  +
mov eax [ebp-0BCh] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp [ebp-0Ch] ebx +
jz loc_1017A99  +
push dword ptr [ebp-0Ch]  +
call ds:CoTaskMemFree  +
mov [ebp-0Ch] ebx +
cmp esi ebx +
jge loc_1017AB4  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0B0h] esi +
jmp loc_1017758  +
***
lea esi [ebp-3Ch] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push 21h  +
movs   +
call sub_1012B18  +
jmp loc_1017758  +
***
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+8] 0CCCCCCBh +
jb loc_1017B1D  +
push offset aMapSetTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov eax [edi+4] +
mov esi [ebp+10h] +
push 0  +
push dword ptr [ebp+14h]  +
push eax  +
push esi  +
push eax  +
call sub_1016927  +
inc dword ptr [edi+8]  +
mov ebx eax +
mov eax [edi+4] +
cmp esi eax +
jnz loc_1017B49  +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [eax] ebx +
mov eax [edi+4] +
jmp loc_1017B67  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_1017B5C  +
mov [esi] ebx +
mov eax [edi+4] +
cmp esi [eax] +
jnz loc_1017B6A  +
mov [eax] ebx +
jmp loc_1017B6A  +
mov [esi+8] ebx +
mov eax [edi+4] +
cmp esi [eax+8] +
jnz loc_1017B6A  +
mov [eax+8] ebx +
mov esi ebx +
lea eax [ebx+4] +
jmp loc_1017C04  +
mov ecx [eax] +
mov edx [ecx+4] +
cmp ecx [edx] +
jnz loc_1017BB5  +
mov edx [edx+8] +
cmp byte ptr [edx+20h] 0 +
jz loc_1017BBD  +
cmp esi [ecx+8] +
jnz loc_1017B95  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_1009F82  +
mov eax [esi+4] +
mov byte ptr [eax+20h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+20h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_100A009  +
jmp loc_1017C01  +
mov edx [edx] +
cmp byte ptr [edx+20h] 0 +
jnz loc_1017BD5  +
mov byte ptr [ecx+20h] 1 +
mov byte ptr [edx+20h] 1 +
mov ecx [eax] +
mov ecx [ecx+4] +
mov byte ptr [ecx+20h] 0 +
mov eax [eax] +
mov esi [eax+4] +
jmp loc_1017C01  +
cmp esi [ecx] +
jnz loc_1017BE3  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_100A009  +
mov eax [esi+4] +
mov byte ptr [eax+20h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+20h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_1009F82  +
lea eax [esi+4] +
mov ecx [eax] +
cmp byte ptr [ecx+20h] 0 +
jz loc_1017B74  +
mov eax [edi+4] +
mov eax [eax+4] +
mov byte ptr [eax+20h] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov esi 1FFFFFFFh +
sub esi eax +
cmp esi edx +
jnb loc_1017C74  +
push offset aListTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
add eax edx +
mov [ecx+8] eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov edi [ebp+0Ch] +
cmp byte ptr [edi+15h] 0 +
jz loc_1017CD0  +
push offset aInvalidMapSetT  +
lea ecx [ebp-2Ch] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-54h] +
call sub_1006D24  +
push offset dword_101DF54  +
lea eax [ebp-54h] +
push eax  +
mov dword ptr [ebp-54h] offset off_10016B0 +
call _CxxThrowException  +
lea ecx [ebp+0Ch] +
call sub_1005313  +
mov edx [edi] +
cmp byte ptr [edx+15h] 0 +
jz loc_1017CE5  +
mov ebx [edi+8] +
jmp loc_1017CFE  +
mov eax [edi+8] +
cmp byte ptr [eax+15h] 0 +
jz loc_1017CF2  +
mov ebx edx +
jmp loc_1017CFE  +
mov eax [ebp+0Ch] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp eax edi +
jnz loc_1017D67  +
cmp byte ptr [ebx+15h] 0 +
mov esi [edi+4] +
jnz loc_1017D0A  +
mov [ebx+4] esi +
mov ecx [ebp-10h] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_1017D1A  +
mov [eax+4] ebx +
jmp loc_1017D25  +
cmp [esi] edi +
jnz loc_1017D22  +
mov [esi] ebx +
jmp loc_1017D25  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_1017D44  +
cmp byte ptr [ebx+15h] 0 +
jz loc_1017D36  +
mov eax esi +
jmp loc_1017D3F  +
push ebx  +
call sub_10153EF  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_1017DC3  +
cmp byte ptr [ebx+15h] 0 +
jz loc_1017D56  +
mov eax esi +
jmp loc_1017D5F  +
push ebx  +
call sub_10153D1  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx+8] eax +
jmp loc_1017DC3  +
mov [edx+4] eax +
mov edx [edi] +
mov [eax] edx +
cmp eax [edi+8] +
jnz loc_1017D77  +
mov esi eax +
jmp loc_1017D90  +
cmp byte ptr [ebx+15h] 0 +
mov esi [eax+4] +
jnz loc_1017D83  +
mov [ebx+4] esi +
mov [esi] ebx +
mov edx [edi+8] +
mov [ecx] edx +
mov ecx [edi+8] +
mov [ecx+4] eax +
mov ecx [ebp-10h] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_1017DA0  +
mov [ecx+4] eax +
jmp loc_1017DAE  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_1017DAB  +
mov [ecx] eax +
jmp loc_1017DAE  +
mov [ecx+8] eax +
mov ecx [edi+4] +
mov [eax+4] ecx +
mov cl [eax+14h] +
mov dl [edi+14h] +
mov [eax+14h] dl +
mov [edi+14h] cl +
mov ecx [ebp-10h] +
cmp byte ptr [edi+14h] 1 +
jnz loc_1017ECD  +
jmp loc_1017E87  +
cmp byte ptr [ebx+14h] 1 +
jnz loc_1017EC9  +
mov eax [esi] +
cmp ebx eax +
jnz loc_1017E4E  +
mov eax [esi+8] +
cmp byte ptr [eax+14h] 0 +
jnz loc_1017DFF  +
mov byte ptr [eax+14h] 1 +
push esi  +
mov byte ptr [esi+14h] 0 +
call sub_1006723  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+15h] 0 +
jnz loc_1017E82  +
mov edx [eax] +
cmp byte ptr [edx+14h] 1 +
jnz loc_1017E16  +
mov edx [eax+8] +
cmp byte ptr [edx+14h] 1 +
jz loc_1017E7E  +
mov edx [eax+8] +
cmp byte ptr [edx+14h] 1 +
jnz loc_1017E35  +
mov edx [eax] +
mov byte ptr [edx+14h] 1 +
push eax  +
mov byte ptr [eax+14h] 0 +
call sub_1005229  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
mov dl [esi+14h] +
mov [eax+14h] dl +
mov byte ptr [esi+14h] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+14h] 1 +
call sub_1006723  +
jmp loc_1017EC9  +
cmp byte ptr [eax+14h] 0 +
jnz loc_1017E67  +
mov byte ptr [eax+14h] 1 +
push esi  +
mov byte ptr [esi+14h] 0 +
call sub_1005229  +
mov eax [esi] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+15h] 0 +
jnz loc_1017E82  +
mov edx [eax+8] +
cmp byte ptr [edx+14h] 1 +
jnz loc_1017E95  +
mov edx [eax] +
cmp byte ptr [edx+14h] 1 +
jnz loc_1017E95  +
mov byte ptr [eax+14h] 0 +
mov ebx esi +
mov esi [esi+4] +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jnz loc_1017DD2  +
jmp loc_1017EC9  +
mov edx [eax] +
cmp byte ptr [edx+14h] 1 +
jnz loc_1017EB3  +
mov edx [eax+8] +
mov byte ptr [edx+14h] 1 +
push eax  +
mov byte ptr [eax+14h] 0 +
call sub_1006723  +
mov eax [esi] +
mov ecx [ebp-10h] +
mov dl [esi+14h] +
mov [eax+14h] dl +
mov byte ptr [esi+14h] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+14h] 1 +
call sub_1005229  +
mov byte ptr [ebx+14h] 1 +
push edi  +
call sub_101CD94  +
pop ecx  +
mov ecx [ebp-10h] +
mov eax [ecx+8] +
test eax eax +
jbe loc_1017EE2  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
lea edi [eax+4] +
push dword ptr [edi]  +
mov ebx ecx +
push eax  +
call sub_10168E9  +
push 1  +
mov ecx ebx +
mov esi eax +
call sub_1017C2C  +
mov [edi] esi +
mov eax [esi+4] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
mov esi [eax+4] +
mov ebx eax +
mov al 1 +
mov byte ptr [ebp+var_8] al +
jmp loc_1017F67  +
lea eax [esi+0Ch] +
push eax  +
push [ebp+arg_4]  +
mov ebx esi +
call sub_1009BBD  +
mov byte ptr [ebp+var_8] al +
test al al +
jz loc_1017F64  +
mov esi [esi] +
jmp loc_1017F67  +
mov esi [esi+8] +
cmp byte ptr [esi+21h] 0 +
jz loc_1017F4B  +
mov esi ebx +
mov [ebp+var_4] esi +
test al al +
jz loc_1017FA6  +
mov eax [edi+4] +
cmp ebx [eax] +
jnz loc_1017F9B  +
push [ebp+arg_4]  +
push ebx  +
push 1  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx edi +
call sub_1017ADB  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
jmp loc_1017FC8  +
lea ecx [ebp+var_4] +
call sub_101681D  +
mov esi [ebp+var_4] +
push [ebp+arg_4]  +
lea eax [esi+0Ch] +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_1017FBF  +
push [ebp+arg_4]  +
push ebx  +
push [ebp+var_8]  +
jmp loc_1017F83  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_1017FFA  +
cmp [ebp+arg_8] eax +
jnz loc_1017FFA  +
mov ecx esi +
call sub_10169DC  +
mov eax [esi+4] +
mov ecx [eax] +
jmp loc_101801F  +
cmp ecx [ebp+arg_8] +
jz loc_101801F  +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
call sub_1005313  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_1017C86  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_1018000  +
pop edi  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+8] 0 +
jnz loc_1018056  +
push [ebp+arg_8]  +
push dword ptr [esi+4]  +
push 1  +
push [ebp+arg_0]  +
call sub_1017ADB  +
mov eax [ebp+arg_0] +
jmp loc_101815E  +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
push ebx  +
push edi  +
mov edi [ebp+arg_8] +
cmp ecx [eax] +
jnz loc_1018082  +
add ecx 0Ch +
push ecx  +
push edi  +
call sub_1009BBD  +
test al al +
jz loc_1018149  +
push edi  +
push [ebp+arg_4]  +
mov ecx esi +
jmp loc_101813A  +
cmp ecx eax +
jnz loc_10180AB  +
mov eax [eax+8] +
add eax 0Ch +
push edi  +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_1018149  +
mov eax [esi+4] +
push edi  +
push dword ptr [eax+8]  +
mov ecx esi +
push 0  +
jmp loc_101813C  +
add ecx 0Ch +
push ecx  +
push edi  +
call sub_1009BBD  +
test al al +
jz loc_10180EC  +
mov eax [ebp+arg_4] +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] eax +
call sub_101681D  +
mov ebx [ebp+arg_8] +
push edi  +
lea eax [ebx+0Ch] +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_10180EC  +
mov eax [ebx+8] +
cmp byte ptr [eax+21h] 0 +
push edi  +
mov ecx esi +
jz loc_10180E7  +
push ebx  +
jmp loc_1018133  +
push [ebp+arg_4]  +
jmp loc_101813A  +
mov eax [ebp+arg_4] +
push edi  +
add eax 0Ch +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_1018149  +
mov eax [ebp+arg_4] +
mov ebx [esi+4] +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] eax +
call sub_100A057  +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_1018123  +
add eax 0Ch +
push eax  +
push edi  +
call sub_1009BBD  +
test al al +
jz loc_1018149  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
cmp byte ptr [ecx+21h] 0 +
push edi  +
mov ecx esi +
jz loc_1018137  +
push eax  +
push 0  +
jmp loc_101813C  +
push [ebp+arg_8]  +
push 1  +
push [ebp+arg_0]  +
call sub_1017ADB  +
mov eax [ebp+arg_0] +
jmp loc_101815C  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call sub_1017F30  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_1017FD4  +
push dword ptr [esi+4]  +
call sub_101CD94  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_100D022  +
mov ebx eax +
cmp ebx [esi+4] +
jz loc_10181CA  +
lea eax [ebx+0Ch] +
push eax  +
push [ebp+arg_0]  +
call sub_1009BBD  +
test al al +
jz loc_10181EF  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx [ebp+var_4] +
lea edi [ebp+var_18] +
movs   +
movs   +
movs   +
xor eax eax +
movs   +
mov [ebp+var_8] ax +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101802E  +
mov ebx [eax] +
pop edi  +
pop esi  +
lea eax [ebx+1Ch] +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2E0h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi offset unk_101F970 +
mov ecx edi +
call sub_100A60F  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_2DC] +
push edx  +
push 1Ah  +
push 41h  +
push eax  +
call dword ptr [ecx+28h]  +
mov ebx eax +
test ebx ebx +
jl loc_1018278  +
push esi  +
lea esi [ebp+var_2C8] +
mov [ebp+var_2E0] 1Ah +
cmp dword ptr [esi+4] 0 +
jz loc_101826A  +
test byte ptr [esi] 1 +
jz loc_101826A  +
lea eax [esi-10h] +
push eax  +
mov ecx edi +
call sub_101819C  +
mov cx [esi-14h] +
mov [eax] cx +
add esi 1Ch +
dec [ebp+var_2E0]  +
jnz loc_101824D  +
mov eax ebx +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 18CCh +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 38h  +
lea eax [ebp+var_183C] +
push ebx  +
push eax  +
mov [ebp+var_189C] esi +
mov [ebp+dwMessageId] ebx +
mov [ebp+var_1888] ebx +
mov [ebp+var_1880] ebx +
mov [ebp+var_1874] ebx +
mov [ebp+var_1890] ebx +
mov [ebp+var_18A0] ebx +
mov [ebp+var_1894] ebx +
mov [ebp+var_187C] ebx +
mov [ebp+var_1898] ebx +
mov [ebp+var_188C] ebx +
mov [ebp+var_186C] ebx +
mov [ebp+var_1884] ebx +
mov [ebp+var_1864] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_185D] bl +
mov [ebp+var_1868] ebx +
mov [ebp+var_18AC] ebx +
mov [ebp+var_18A8] ebx +
mov [ebp+var_18B4] ebx +
mov [ebp+var_18B0] ebx +
mov [ebp+var_18BC] ebx +
mov [ebp+var_1870] ebx +
mov [ebp+var_1878] ebx +
mov [ebp+var_18C8] ebx +
mov [ebp+var_18B8] ebx +
call memset  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1858] +
push 1800h  +
stos   +
lea eax [ebp+var_1804] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
lea edx [ebp+var_1880] +
push edx  +
xor edi edi +
mov [esi] ebx +
mov eax dword_101F928 +
mov ecx [eax] +
inc edi  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1018B58  +
jmp loc_1018B09  +
cmp esi ebx +
jl loc_1018B58  +
mov eax [ebp+var_1888] +
mov ecx [eax] +
lea edx [ebp+var_1894] +
push edx  +
push offset dword_1002348  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_1888] +
cmp eax ebx +
jz loc_10183E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1888] ebx +
cmp esi ebx +
jl loc_1018B09  +
mov eax [ebp+var_1894] +
mov ecx [eax] +
lea edx [ebp+var_1874] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_1894] +
cmp eax ebx +
jz loc_1018414  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1894] ebx +
cmp esi ebx +
jl loc_1018B09  +
jmp loc_1018AC8  +
cmp esi ebx +
jl loc_1018B58  +
mov eax [ebp+var_187C] +
mov ecx [eax] +
lea edx [ebp+var_1898] +
push edx  +
push offset loc_1002358  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_187C] +
cmp eax ebx +
jz loc_1018458  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_187C] ebx +
cmp esi ebx +
jl loc_1018AC8  +
mov eax [ebp+var_1898] +
mov ecx [eax] +
lea edx [ebp+var_1858] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
lea eax [ebp+var_1858] +
push eax  +
call sub_100428F  +
cmp esi ebx +
jl loc_1018AC8  +
test [ebp+var_1840] 1 +
jnz loc_1018AC8  +
mov eax [ebp+var_1898] +
mov ecx [eax] +
lea edx [ebp+var_1890] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1018AC8  +
jmp loc_10186AB  +
cmp esi ebx +
jl loc_1018B58  +
mov eax [ebp+var_188C] +
mov ecx [eax] +
lea edx [ebp+var_186C] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_188C] +
cmp eax ebx +
jz loc_10184ED  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_188C] ebx +
cmp esi ebx +
jl loc_10186A8  +
mov eax [ebp+var_186C] +
lea edx [ebp+var_183C] +
push edx  +
mov [ebp+var_1868] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 2 +
jz loc_1018540  +
cmp eax ebx +
jge loc_1018524  +
mov [ebp+var_185D] 1 +
mov [ebp+dwMessageId] eax +
lea eax [ebp+var_1868] +
push eax  +
lea eax [ebp+var_183C] +
push eax  +
mov ecx offset unk_101F958 +
call sub_101C99C  +
test eax eax +
jge loc_101856B  +
lea eax [ebp+var_183C] +
push eax  +
call sub_1004329  +
mov eax [ebp+var_186C] +
cmp eax ebx +
jz loc_10186A8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_186C] ebx +
jmp loc_10186A8  +
mov edi [ebp+var_189C] +
mov esi [edi] +
cmp esi ebx +
jz loc_10185E8  +
mov eax [esi+20h] +
cmp eax [ebp+var_1868] +
ja loc_10185E8  +
push 28h  +
call loc_101CDA5  +
pop ecx  +
cmp eax ebx +
jz loc_1018B53  +
mov ecx [ebp+var_186C] +
mov [eax+18h] ecx +
mov ecx [ebp+var_1868] +
mov [eax+20h] ecx +
mov esi offset dword_1001260 +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
mov [eax+10h] ebx +
mov [eax+14h] ebx +
mov ecx [ebp+var_1824] +
mov [eax+24h] ecx +
mov ecx [ebp+var_189C] +
mov ecx [ecx] +
jmp loc_10185D8  +
mov edx [ecx+1Ch] +
mov esi [edx+20h] +
cmp esi [ebp+var_1868] +
jnb loc_10185DD  +
mov ecx edx +
cmp [ecx+1Ch] ebx +
jnz loc_10185C8  +
mov edx [ecx+1Ch] +
mov [eax+1Ch] edx +
mov [ecx+1Ch] eax +
jmp loc_1018633  +
push 28h  +
call loc_101CDA5  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jz loc_1018B53  +
mov ecx [ebp+var_186C] +
mov [eax+18h] ecx +
mov eax edi +
mov ecx [eax] +
mov [ecx+1Ch] esi +
mov ecx [eax] +
mov edx [ebp+var_1868] +
mov [ecx+20h] edx +
mov edi [eax] +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax] +
mov [ecx+10h] ebx +
mov [ecx+14h] ebx +
mov eax [eax] +
mov ecx [ebp+var_1824] +
mov [eax+24h] ecx +
cmp [ebp+var_185D] bl +
jz loc_1018696  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 23Ah  +
call sub_10124CD  +
mov eax [ebp+var_180C] +
cmp eax ebx +
jnz loc_1018661  +
mov eax offset aUnknown +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_1804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_1804] +
push eax  +
call sub_1012604  +
push [ebp+dwMessageId]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
lea eax [ebp+var_183C] +
push eax  +
mov [ebp+var_185D] bl +
call sub_1004329  +
xor edi edi +
inc edi  +
mov eax [ebp+var_1890] +
lea edx [ebp+var_18B4] +
push edx  +
lea edx [ebp+var_188C] +
push edx  +
push edi  +
mov [ebp+var_18B4] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_10184B6  +
mov eax [ebp+var_1890] +
cmp eax ebx +
jz loc_10186EC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1890] ebx +
mov eax [ebp+var_1898] +
mov ecx [eax] +
lea edx [ebp+var_18A0] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1018B58  +
jmp loc_1018A87  +
cmp esi ebx +
jl loc_1018B58  +
mov eax [ebp+var_1884] +
mov ecx [eax] +
lea edx [ebp+var_1864] +
push edx  +
push offset dword_1002378  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_1884] +
cmp eax ebx +
jz loc_1018745  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1884] ebx +
cmp esi ebx +
jl loc_1018A87  +
mov eax [ebp+var_1864] +
lea edx [ebp+var_18BC] +
push edx  +
lea edx [ebp+pv] +
push edx  +
mov [ebp+var_18BC] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
mov eax [ebp+var_1864] +
jge loc_1018790  +
cmp eax ebx +
jz loc_1018A87  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1864] ebx +
jmp loc_1018A87  +
mov ecx [eax] +
lea edx [ebp+var_1870] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jge loc_10187DE  +
mov eax [ebp+var_1864] +
cmp eax ebx +
jz loc_10187BB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1864] ebx +
cmp [ebp+pv] ebx +
jz loc_1018A87  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
jmp loc_1018A87  +
mov eax [ebp+var_1870] +
mov ecx [eax] +
lea edx [ebp+var_18B8] +
push edx  +
lea edx [ebp+var_1878] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jge loc_1018835  +
mov eax [ebp+var_1864] +
cmp eax ebx +
jz loc_1018812  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1864] ebx +
cmp [ebp+pv] ebx +
jz loc_1018A71  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
jmp loc_1018A71  +
mov [ebp+var_18C4] ebx +
cmp [ebp+var_18BC] ebx +
jbe loc_1018A27  +
mov [ebp+var_18A4] ebx +
mov eax [ebp+pv] +
mov ecx [ebp+var_18A4] +
add eax ecx +
mov [ebp+var_18C0] ebx +
cmp [ebp+var_18B8] ebx +
jbe loc_10188A1  +
mov edx [eax+18h] +
mov ecx [ebp+var_1878] +
mov esi [ecx+10h] +
mov [ebp+var_18C8] ecx +
cmp esi edx +
jnz loc_1018887  +
mov esi [ecx+14h] +
cmp esi [eax+1Ch] +
jz loc_10188A1  +
inc [ebp+var_18C0]  +
mov esi [ebp+var_18C0] +
add ecx 90h +
cmp esi [ebp+var_18B8] +
jb loc_1018872  +
mov ecx [ebp+var_18B8] +
cmp [ebp+var_18C0] ecx +
jz loc_1018A05  +
mov ecx [eax+10h] +
cmp ecx 4 +
jz loc_10188FF  +
cmp ecx 3 +
jnz loc_10188C8  +
cmp dword_101F920 ebx +
jnz loc_10188FF  +
mov edx [ebp+var_18C8] +
mov ecx [edx] +
cmp ecx 1 +
jnz loc_10188DB  +
cmp byte ptr [edx+20h] 27h +
jz loc_10188FF  +
cmp ecx 2 +
jnz loc_1018A05  +
mov edi [ebp+var_18C8] +
push 4  +
add edi 20h +
pop ecx  +
mov esi offset dword_10012C0 +
xor edx edx +
cmps   +
jnz loc_1018A05  +
lea ecx [ebp+var_1868] +
push ecx  +
lea ecx [eax+18h] +
push ecx  +
push eax  +
mov ecx offset unk_101F958 +
mov [ebp+var_1868] ebx +
call sub_101C892  +
mov esi eax +
cmp esi ebx +
jl loc_1018B58  +
mov edi [ebp+var_189C] +
mov esi [edi] +
cmp esi ebx +
jz loc_10189AE  +
mov eax [esi+20h] +
cmp eax [ebp+var_1868] +
ja loc_10189AE  +
push 28h  +
call loc_101CDA5  +
pop ecx  +
cmp eax ebx +
jz loc_1018B53  +
mov edx [ebp+var_18A4] +
mov [eax+18h] ebx +
mov ecx [ebp+var_1868] +
mov [eax+20h] ecx +
mov ecx [ebp+pv] +
lea esi [edx+ecx] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebp+pv] +
mov esi [edx+ecx+18h] +
mov [eax+10h] esi +
mov ecx [edx+ecx+1Ch] +
mov [eax+14h] ecx +
mov ecx [ebp+var_189C] +
mov [eax+24h] ebx +
mov ecx [ecx] +
jmp loc_101899E  +
mov edx [ecx+1Ch] +
mov esi [edx+20h] +
cmp esi [ebp+var_1868] +
jnb loc_10189A3  +
mov ecx edx +
cmp [ecx+1Ch] ebx +
jnz loc_101898E  +
mov edx [ecx+1Ch] +
mov [eax+1Ch] edx +
mov [ecx+1Ch] eax +
jmp loc_1018A05  +
push 28h  +
call loc_101CDA5  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jz loc_1018B53  +
mov [eax+18h] ebx +
mov eax edi +
mov ecx [eax] +
mov [ecx+1Ch] esi +
mov ecx [eax] +
mov edx [ebp+var_1868] +
mov [ecx+20h] edx +
mov edx [ebp+pv] +
mov edi [eax] +
mov ecx [ebp+var_18A4] +
lea esi [ecx+edx] +
movs   +
movs   +
movs   +
movs   +
mov edx [ebp+pv] +
mov esi [eax] +
mov edi [ecx+edx+18h] +
mov [esi+10h] edi +
mov ecx [ecx+edx+1Ch] +
mov [esi+14h] ecx +
mov eax [eax] +
mov [eax+24h] ebx +
inc [ebp+var_18C4]  +
mov eax [ebp+var_18C4] +
add [ebp+var_18A4] 50h +
cmp eax [ebp+var_18BC] +
jb loc_101884D  +
xor edi edi +
inc edi  +
cmp [ebp+pv] ebx +
jz loc_1018A41  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
cmp [ebp+var_1878] ebx +
jz loc_1018A5B  +
push [ebp+var_1878]  +
call ds:CoTaskMemFree  +
mov [ebp+var_1878] ebx +
mov eax [ebp+var_1864] +
cmp eax ebx +
jz loc_1018A71  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1864] ebx +
mov eax [ebp+var_1870] +
cmp eax ebx +
jz loc_1018A87  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1870] ebx +
mov eax [ebp+var_18A0] +
lea edx [ebp+var_18B0] +
push edx  +
lea edx [ebp+var_1884] +
push edx  +
push edi  +
mov [ebp+var_18B0] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_101870E  +
mov eax [ebp+var_18A0] +
cmp eax ebx +
jz loc_1018AC8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18A0] ebx +
mov eax [ebp+var_1874] +
lea edx [ebp+var_18A8] +
push edx  +
lea edx [ebp+var_187C] +
push edx  +
push edi  +
mov [ebp+var_18A8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_1018421  +
mov eax [ebp+var_1874] +
cmp eax ebx +
jz loc_1018B09  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1874] ebx +
mov eax [ebp+var_1880] +
lea edx [ebp+var_18AC] +
push edx  +
lea edx [ebp+var_1888] +
push edx  +
push edi  +
mov [ebp+var_18AC] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_10183AA  +
mov eax [ebp+var_1880] +
cmp eax ebx +
jz loc_1018B4A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1880] ebx +
call sub_10181FD  +
mov esi eax +
jmp loc_1018B58  +
mov esi 8007000Eh +
mov eax [ebp+var_1888] +
cmp eax ebx +
jz loc_1018B6E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1888] ebx +
mov eax [ebp+var_1880] +
cmp eax ebx +
jz loc_1018B84  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1880] ebx +
mov eax [ebp+var_1874] +
cmp eax ebx +
jz loc_1018B9A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1874] ebx +
mov eax [ebp+var_1890] +
cmp eax ebx +
jz loc_1018BB0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1890] ebx +
mov eax [ebp+var_1894] +
cmp eax ebx +
jz loc_1018BC6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1894] ebx +
mov eax [ebp+var_187C] +
cmp eax ebx +
jz loc_1018BDC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_187C] ebx +
mov eax [ebp+var_1898] +
cmp eax ebx +
jz loc_1018BF2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1898] ebx +
mov eax [ebp+var_188C] +
cmp eax ebx +
jz loc_1018C08  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_188C] ebx +
mov eax [ebp+var_1884] +
cmp eax ebx +
jz loc_1018C1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1884] ebx +
mov eax [ebp+var_1864] +
cmp eax ebx +
jz loc_1018C34  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1864] ebx +
mov eax [ebp+var_1870] +
cmp eax ebx +
jz loc_1018C4A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1870] ebx +
cmp [ebp+pv] ebx +
jz loc_1018C64  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] ebx +
lea eax [ebp+var_183C] +
push eax  +
call sub_1004329  +
lea eax [ebp+var_1858] +
push eax  +
call sub_100428F  +
cmp [ebp+var_1878] ebx +
jz loc_1018C90  +
push [ebp+var_1878]  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp [eax] edi +
jz loc_1018CD3  +
push offset aListVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 80070057h +
jmp loc_1018D3C  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call sub_1018295  +
mov esi eax +
cmp esi edi +
jge loc_1018CF3  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov edi esi +
jmp loc_1018D30  +
mov esi [ebp+var_4] +
cmp esi edi +
jnz loc_1018D06  +
push 0D2h  +
call sub_1012B18  +
jmp loc_1018D30  +
push 0C9h  +
call sub_1012B18  +
mov eax [esi+18h] +
cmp eax edi +
jz loc_1018D1F  +
push eax  +
call sub_1016A09  +
jmp loc_1018D29  +
lea eax [esi+10h] +
push eax  +
push esi  +
call sub_10154B1  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1018D10  +
lea eax [ebp+var_4] +
push eax  +
call sub_101309C  +
mov eax edi +
pop esi  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1064h +
call __alloca_probe  +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
push 38h  +
lea eax [ebp+var_103C] +
push edi  +
push eax  +
mov [ebp+var_1054] ebx +
mov [ebp+var_1044] edi +
call memset  +
push 1000h  +
lea eax [ebp+Buffer] +
push edi  +
push eax  +
mov [ebp+var_1050] edi +
mov [ebp+var_1060] edi +
mov [ebp+var_105C] edi +
mov [ebp+var_1040] edi +
mov [ebp+var_104C] edi +
call memset  +
add esp 18h +
lea eax [ebp+var_1058] +
push eax  +
mov [ebp+var_1058] edi +
call sub_1018295  +
mov esi eax +
cmp esi edi +
mov dword ptr [ebp+dwMessageId] esi +
jl loc_1019425  +
cmp [ebp+arg_8] 1 +
jbe loc_1018DF3  +
push offset aSelectVolume  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_1018F00  +
jnz loc_1018F45  +
mov ecx [ebx] +
cmp ecx edi +
jnz loc_1018E1A  +
push offset aSelectVolume  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_101955E  +
mov eax ecx +
xor ebx ebx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1018E21  +
sub eax esi +
sar eax 1 +
jz loc_1018E67  +
movzx eax word ptr [ecx+ebx*2] +
push eax  +
push offset a0123456789  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018E67  +
mov eax [ebp+var_1054] +
mov ecx [eax] +
mov eax ecx +
inc ebx  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1018E55  +
sub eax esi +
sar eax 1 +
cmp ebx eax +
jb loc_1018E31  +
mov eax [ebp+var_1054] +
mov ecx [eax] +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1018E74  +
sub eax esi +
sar eax 1 +
cmp ebx eax +
jnb loc_10193A1  +
movzx eax word ptr [ecx] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_10191FE  +
mov eax [ebp+var_1054] +
mov edx [eax] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1018EAA  +
sub eax esi +
sar eax 1 +
cmp eax 1 +
jz loc_1018EE4  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1018EC2  +
sub eax esi +
sar eax 1 +
cmp eax 2 +
jnz loc_10191FE  +
cmp word ptr [edx+2] 3Ah +
jnz loc_10191FE  +
push edx  +
call ds:_wcsupr  +
mov ebx [ebp+var_1058] +
pop ecx  +
cmp ebx edi +
jnz loc_1018F6F  +
push 0FBh  +
call sub_1012B18  +
mov eax offset dword_1001260 +
mov esi eax +
mov edi offset unk_101F9A4 +
movs   +
movs   +
and dword_101F940 0 +
movs   +
and dword_101F944 0 +
movs   +
mov esi eax +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_1044] 80070057h +
mov esi eax +
mov edi offset unk_101F948 +
or dword_101F0BC 0FFFFFFFFh +
movs   +
movs   +
movs   +
movs   +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1019439  +
push 0FCh  +
call sub_1012B18  +
jmp loc_10194AF  +
xor edi edi +
mov dword ptr [ebp+dwMessageId] edi +
cmp [ebx+18h] edi +
jz loc_1019138  +
mov eax [ebx+18h] +
mov ecx [eax] +
lea edx [ebp+var_103C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp [ebp+pv] edi +
jz loc_1018FAA  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov [ebp+pv] edi +
cmp esi edi +
jl loc_1019425  +
mov eax [ebx+18h] +
mov ecx [eax] +
lea edx [ebp+var_1050] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_1019425  +
mov eax [ebp+var_1050] +
mov ecx [eax] +
lea edx [ebp+var_104C] +
push edx  +
lea edx [ebp+var_1040] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+var_1050] +
cmp eax edi +
jz loc_1019002  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1050] edi +
cmp esi edi +
jge loc_1019015  +
cmp dword ptr [ebx+24h] 1 +
jz loc_1019425  +
jmp loc_10190BC  +
cmp [ebp+var_104C] edi +
jz loc_1019090  +
mov eax [ebp+var_1040] +
mov edx [eax] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_101902A  +
sub eax esi +
sar eax 1 +
cmp eax 3 +
jnz loc_1019090  +
movzx eax word ptr [edx] +
push eax  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_1019090  +
mov eax [ebp+var_1040] +
mov esi [eax] +
mov ecx offset asc_1001880 +
lea eax [esi+2] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1019082  +
cmp dx di +
jz loc_101907E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1019082  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_101905C  +
xor eax eax +
jmp loc_1019087  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_1019090  +
movzx eax word ptr [esi] +
jmp loc_10190B6  +
lea eax [ebp+var_103C] +
push eax  +
lea eax [ebp+var_1064] +
push eax  +
mov ecx offset unk_101F970 +
call sub_100D545  +
mov eax [eax] +
cmp eax dword_101F974 +
jz loc_10190BC  +
movzx eax word ptr [eax+1Ch] +
mov dword ptr [ebp+dwMessageId] eax +
cmp [ebp+var_1040] edi +
jz loc_101910F  +
xor esi esi +
cmp [ebp+var_104C] edi +
jbe loc_10190F5  +
mov eax [ebp+var_1040] +
lea eax [eax+esi*4] +
cmp [eax] edi +
jz loc_10190EC  +
push dword ptr [eax]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_1040] +
mov [eax+esi*4] edi +
inc esi  +
cmp esi [ebp+var_104C] +
jb loc_10190CE  +
cmp [ebp+var_1040] edi +
jz loc_101910F  +
push [ebp+var_1040]  +
call ds:CoTaskMemFree  +
mov [ebp+var_1040] edi +
mov eax [ebp+var_1054] +
mov eax [eax] +
mov cx word ptr [ebp+dwMessageId] +
cmp cx [eax] +
jnz loc_10191B9  +
push dword ptr [ebx+18h]  +
call sub_1013630  +
mov esi eax +
cmp esi edi +
jmp loc_1019396  +
mov eax dword_101F928 +
mov ecx [eax] +
lea edx [ebp+var_1060] +
push edx  +
push 0Dh  +
sub esp 10h +
mov edi esp +
mov esi ebx +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_1019425  +
mov eax [ebp+var_1060] +
mov ecx [eax] +
lea edx [ebp+var_105C] +
push edx  +
push offset dword_10023A8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1019425  +
mov eax [ebp+var_105C] +
mov ecx [eax] +
lea edx [ebp+dwMessageId] +
push edx  +
push dword ptr [ebx+14h]  +
push dword ptr [ebx+10h]  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jl loc_1019425  +
mov eax [ebp+var_1054] +
mov eax [eax] +
mov cx word ptr [ebp+dwMessageId] +
cmp cx [eax] +
jz loc_10191C9  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_1018F6D  +
jmp loc_1018EF6  +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+10h] +
mov dword_101F940 eax +
mov eax [ebx+14h] +
mov dword_101F944 eax +
mov esi offset dword_1001260 +
mov edi offset unk_101F9A4 +
jmp loc_1018F3A  +
mov eax [ebp+var_1054] +
mov ecx [eax] +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_101920B  +
sub eax esi +
sar eax 1 +
cmp eax 2 +
jbe loc_1018DDD  +
cmp word ptr [ecx+2] 3Ah +
jnz loc_1018DDD  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1019232  +
sub eax esi +
sar eax 1 +
cmp word ptr [ecx+eax*2-2] 5Ch +
mov dword ptr [ebp+dwMessageId] eax +
jnz loc_1019255  +
dec eax  +
mov dword ptr [ebp+dwMessageId] eax +
mov edi [ebp+var_1058] +
jmp loc_101937D  +
cmp dword ptr [edi+18h] 0 +
jz loc_101937A  +
mov eax [edi+18h] +
mov ecx [eax] +
lea edx [ebp+var_1050] +
push edx  +
push offset dword_10026B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1019425  +
mov eax [ebp+var_1050] +
mov ecx [eax] +
lea edx [ebp+var_104C] +
push edx  +
lea edx [ebp+var_1040] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+var_1050] +
test eax eax +
jz loc_10192BB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_1050] 0 +
test esi esi +
jge loc_10192CE  +
cmp dword ptr [edi+24h] 1 +
jz loc_1019425  +
jmp loc_101937A  +
xor ebx ebx +
cmp [ebp+var_104C] ebx +
jle loc_1019322  +
mov eax [ebp+var_1040] +
mov edx [eax+ebx*4] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10192E6  +
sub eax esi +
sar eax 1 +
dec eax  +
cmp dword ptr [ebp+dwMessageId] eax +
jnz loc_1019319  +
push dword ptr [ebp+dwMessageId]  +
mov eax [ebp+var_1054] +
push dword ptr [eax]  +
push edx  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_101938A  +
inc ebx  +
cmp ebx [ebp+var_104C] +
jl loc_10192D8  +
cmp [ebp+var_1040] 0 +
jz loc_101937A  +
xor esi esi +
cmp [ebp+var_104C] esi +
jbe loc_101935E  +
mov eax [ebp+var_1040] +
lea eax [eax+esi*4] +
cmp dword ptr [eax] 0 +
jz loc_1019355  +
push dword ptr [eax]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_1040] +
and dword ptr [eax+esi*4] 0 +
inc esi  +
cmp esi [ebp+var_104C] +
jb loc_1019335  +
cmp [ebp+var_1040] 0 +
jz loc_101937A  +
push [ebp+var_1040]  +
call ds:CoTaskMemFree  +
and [ebp+var_1040] 0 +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_1019260  +
jmp loc_1018EF6  +
push dword ptr [edi+18h]  +
call sub_1013630  +
mov esi eax +
test esi esi +
jge loc_1018F45  +
jmp loc_1019425  +
mov ebx [ebp+var_1058] +
push ecx  +
call ds:_wtol  +
pop ecx  +
jmp loc_10193B9  +
cmp [ebx+20h] eax +
jz loc_10193C2  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_10193B1  +
jmp loc_1018EF6  +
mov eax [ebx+18h] +
test eax eax +
jz loc_10193D7  +
push eax  +
call sub_1013630  +
mov dword ptr [ebp+dwMessageId] eax +
jmp loc_1019412  +
mov esi ebx +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+10h] +
mov dword_101F940 eax +
mov eax [ebx+14h] +
or dword_101F0BC 0FFFFFFFFh +
mov esi offset dword_1001260 +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
mov dword_101F944 eax +
movs   +
cmp dword ptr [ebp+dwMessageId] 0 +
jge loc_1018F45  +
mov esi dword ptr [ebp+dwMessageId] +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp+var_1044] esi +
jmp loc_10194AF  +
and dword ptr [ebp+dwMessageId] 0 +
push 4  +
pop ecx  +
mov edi offset unk_101F9D8 +
mov esi eax +
xor edx edx +
cmps   +
lea ecx [ebp+dwMessageId] +
push ecx  +
mov ecx offset unk_101F958 +
jnz loc_1019469  +
push offset dword_101F940  +
push eax  +
call sub_101C002  +
jmp loc_101946F  +
push eax  +
call sub_101C08C  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 0FAh  +
call sub_10124CD  +
push dword ptr [ebp+dwMessageId]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+var_804] +
push esi  +
push eax  +
call sub_1005575  +
add esp 10h +
lea eax [ebp+var_804] +
push eax  +
call sub_1012604  +
lea eax [ebp+var_1058] +
push eax  +
call sub_101309C  +
mov eax [ebp+var_1050] +
xor edi edi +
cmp eax edi +
jz loc_10194D3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1050] edi +
mov eax [ebp+var_1060] +
cmp eax edi +
jz loc_10194E9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1060] edi +
mov eax [ebp+var_105C] +
cmp eax edi +
jz loc_10194FF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_105C] edi +
lea eax [ebp+var_103C] +
push eax  +
call sub_1004329  +
cmp [ebp+var_1040] edi +
jz loc_1019558  +
xor esi esi +
cmp [ebp+var_104C] edi +
jbe loc_1019544  +
mov eax [ebp+var_1040] +
lea eax [eax+esi*4] +
cmp [eax] edi +
jz loc_101953B  +
push dword ptr [eax]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_1040] +
mov [eax+esi*4] edi +
inc esi  +
cmp esi [ebp+var_104C] +
jb loc_101951D  +
cmp [ebp+var_1040] edi +
jz loc_1019558  +
push [ebp+var_1040]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_1044] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
add ds:byte_101DB28[eax] bh +
call __EH_prolog3_GS  +
mov edi [ebp+0Ch] +
or dword ptr [ebp-190h] 0FFFFFFFFh +
or dword ptr [ebp-18Ch] 0FFFFFFFFh +
or dword ptr [ebp-164h] 0FFFFFFFFh +
xor ebx ebx +
lea ecx [ebp-1FCh] +
mov [ebp-1A0h] edi +
mov [ebp-15Ch] ebx +
mov [ebp-160h] ebx +
mov [ebp-1D8h] ebx +
mov [ebp-188h] ebx +
mov [ebp-168h] ebx +
mov [ebp-178h] ebx +
mov [ebp-16Ch] ebx +
call sub_1006B37  +
lea ecx [ebp-1E4h] +
mov [ebp-4] ebx +
call sub_101685F  +
mov [ebp-1E0h] eax +
mov [ebp-1DCh] ebx +
push 70h  +
lea eax [ebp-158h] +
push ebx  +
push eax  +
mov byte ptr [ebp-4] 1 +
mov [ebp-19Ch] ebx +
mov [ebp-170h] ebx +
mov [ebp-1ACh] ebx +
mov [ebp-184h] ebx +
mov [ebp-180h] ebx +
mov [ebp-174h] ebx +
mov [ebp-1D4h] ebx +
mov [ebp-1C8h] ebx +
mov [ebp-17Ch] ebx +
call memset  +
push 70h  +
lea eax [ebp-0B8h] +
push ebx  +
push eax  +
call memset  +
push 38h  +
lea eax [ebp-48h] +
push ebx  +
push eax  +
call memset  +
add esp 24h +
lea ecx [ebp-1F0h] +
call sub_101BE62  +
mov [ebp-1ECh] eax +
mov [ebp-1E8h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp+10h] ebx +
ja loc_10196AE  +
push 4  +
mov eax offset unk_101F948 +
pop ecx  +
mov edi offset dword_1001260 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_10199F5  +
push 77h  +
call sub_1012B18  +
mov dword ptr [ebp-15Ch] 80070057h +
jmp loc_101A1C5  +
mov edi [ebp-1A0h] +
mov eax [ebp-160h] +
lea esi [edi+eax*4] +
mov eax [esi] +
cmp eax ebx +
jz loc_101998F  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10196EE  +
cmp [ebp-1D8h] ebx +
jnz loc_10199D4  +
mov dword ptr [ebp-1D8h] 1 +
jmp loc_1019975  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10197BB  +
cmp [ebp-188h] ebx +
jnz loc_10199D4  +
cmp [ebp-178h] ebx +
jnz loc_10199D4  +
mov eax [ebp-160h] +
inc eax  +
mov [ebp-160h] eax +
cmp eax [ebp+10h] +
jnb loc_10199EC  +
mov ecx [ebp-190h] +
and ecx [ebp-18Ch] +
cmp ecx 0FFFFFFFFh +
jnz loc_10199D4  +
lea edi [edi+eax*4] +
mov ecx [edi] +
cmp ecx ebx +
jz loc_10199D4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101975A  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10199D4  +
push dword ptr [edi]  +
call ds:_wtoi64  +
pop ecx  +
mov ecx eax +
or ecx edx +
jz loc_10199D4  +
push ebx  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-190h] eax +
mov [ebp-18Ch] edx +
mov dword ptr [ebp-188h] 1 +
jmp loc_1019975  +
push offset aDisk  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101993C  +
cmp [ebp-168h] ebx +
jnz loc_10199D4  +
cmp [ebp-178h] ebx +
jnz loc_10199D4  +
mov eax [ebp-160h] +
inc eax  +
mov [ebp-160h] eax +
cmp eax [ebp+10h] +
jnb loc_10199EC  +
cmp [ebp-1F4h] ebx +
jnz loc_10199D4  +
lea edi [edi+eax*4] +
mov ecx [edi] +
cmp ecx ebx +
jz loc_10199D4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101981E  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_10199D4  +
mov edi [edi] +
xor esi esi +
mov [ebp-168h] edi +
mov [ebp-16Ch] ebx +
cmp edi ebx +
jz loc_1019930  +
mov edi [ebp-168h] +
push 2Ch  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [ebp-168h] eax +
cmp eax ebx +
jz loc_1019889  +
mov ecx [ebp-168h] +
xor eax eax +
add dword ptr [ebp-168h] 2 +
mov [ecx] ax +
cmp edi ebx +
jz loc_1019923  +
inc dword ptr [ebp-16Ch]  +
push edi  +
call ds:_wtol  +
pop ecx  +
mov [ebp-164h] eax +
lea eax [ebp-164h] +
push eax  +
lea eax [ebp-1C4h] +
push eax  +
lea ecx [ebp-1FCh] +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-1F8h] +
jnz loc_10199D4  +
lea eax [ebp-164h] +
push eax  +
lea ecx [ebp-1FCh] +
call sub_10092C1  +
mov [eax] esi +
mov eax [ebp-164h] +
mov [ebp-198h] eax +
lea eax [ebp-198h] +
push eax  +
push dword ptr [ebp-1E0h]  +
lea ecx [ebp-1E4h] +
mov [ebp-194h] esi +
call sub_1017EF7  +
push 2Bh  +
push edi  +
call ds:wcschr  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jz loc_1019923  +
inc edi  +
inc edi  +
jnz loc_1019891  +
inc esi  +
cmp [ebp-168h] ebx +
jnz loc_101985C  +
mov dword ptr [ebp-168h] 1 +
jmp loc_1019975  +
push offset aFilesystem  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10199D4  +
cmp [ebp-188h] ebx +
jnz loc_10199D4  +
cmp [ebp-168h] ebx +
jnz loc_10199D4  +
cmp [ebp-178h] ebx +
jnz loc_10199D4  +
mov dword ptr [ebp-178h] 1 +
inc dword ptr [ebp-160h]  +
mov eax [ebp-160h] +
cmp eax [ebp+10h] +
jb loc_10196A8  +
jmp loc_1019679  +
***
push offset aExtend  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 8000FFFFh +
lea ecx [ebp-1F0h] +
call sub_101BE80  +
lea ecx [ebp-1E4h] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1FCh] +
call sub_1018168  +
mov eax esi +
call sub_101D3D6  +
retn 0Ch  +
***
push offset aExtend  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 80070057h +
jmp loc_10199A5  +
***
push 70h  +
call sub_1012B18  +
jmp loc_10199E5  +
***
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1019A0C  +
push 74h  +
jmp loc_1019694  +
***
lea eax [ebp-170h] +
push eax  +
call sub_10130DC  +
mov esi eax +
cmp esi ebx +
jge loc_1019A35  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-15Ch] esi +
jmp loc_101A1C5  +
cmp [ebp-16Ch] ebx +
jnz loc_1019AD7  +
cmp [ebp-178h] ebx +
jnz loc_1019AD7  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F9D8 +
xor eax eax +
cmps   +
jnz loc_1019A67  +
push 75h  +
jmp loc_1019694  +
***
lea eax [ebp-1C8h] +
push eax  +
call sub_1004390  +
mov esi eax +
cmp esi ebx +
jl loc_1019A1E  +
mov eax [ebp-1C8h] +
mov ecx [eax] +
lea edx [ebp-158h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1019A1E  +
mov eax [ebp-0FCh] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
mov [ebp-164h] eax +
mov [ebp-198h] eax +
lea eax [ebp-198h] +
push eax  +
push dword ptr [ebp-1E0h]  +
lea ecx [ebp-1E4h] +
mov [ebp-194h] ebx +
call sub_1017EF7  +
mov dword ptr [ebp-16Ch] 1 +
mov eax [ebp-170h] +
mov ecx [eax] +
lea edx [ebp-48h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1019A1E  +
test dword ptr [ebp-20h] 40000h +
jz loc_1019B04  +
push 1D1h  +
jmp loc_1019694  +
***
push dword ptr [ebp-170h]  +
call sub_1013295  +
test eax eax +
jnz loc_1019B4A  +
cmp [ebp-178h] ebx +
jz loc_1019B27  +
mov [ebp-190h] ebx +
mov [ebp-18Ch] ebx +
lea eax [ebp-190h] +
push eax  +
push dword ptr [ebp-164h]  +
push dword ptr [ebp-170h]  +
call sub_10139CE  +
mov [ebp-15Ch] eax +
jmp loc_101A1C5  +
cmp [ebp-178h] ebx +
jnz loc_101A19B  +
cmp dword ptr [ebp-38h] 0Ah +
jz loc_1019B6C  +
cmp dword ptr [ebp-38h] 0Bh +
jz loc_1019B6C  +
push 1D2h  +
jmp loc_1019694  +
***
mov eax [ebp-16Ch] +
imul eax eax +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp-19Ch] eax +
cmp eax ebx +
jnz loc_1019B9D  +
push 6Eh  +
call sub_1012B18  +
mov dword ptr [ebp-15Ch] 8007000Eh +
jmp loc_101A1B0  +
mov eax [ebp-170h] +
mov ecx [eax] +
lea edx [ebp-1ACh] +
push edx  +
push eax  +
mov [ebp-164h] ebx +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jge loc_1019BD3  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-15Ch] esi +
jmp loc_101A1B0  +
lea eax [ebp-1D4h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi ebx +
jl loc_1019BBC  +
mov eax [ebp-1E0h] +
mov eax [eax] +
lea edx [ebp-1C4h] +
push edx  +
lea edx [ebp-184h] +
push edx  +
mov [ebp-168h] eax +
mov eax [ebp-1ACh] +
push 1  +
mov [ebp-1C4h] ebx +
mov ecx [eax] +
push eax  +
mov [ebp-160h] ebx +
mov [ebp-1B4h] ebx +
mov [ebp-1B0h] ebx +
mov [ebp-1A8h] ebx +
mov [ebp-1A4h] ebx +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jz loc_1019FE0  +
cmp esi ebx +
jl loc_1019BBC  +
mov eax [ebp-184h] +
mov ecx [eax] +
lea edx [ebp-180h] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-184h] +
cmp eax ebx +
jz loc_1019C75  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-184h] ebx +
cmp esi ebx +
jl loc_1019BBC  +
mov eax [ebp-180h] +
mov ecx [eax] +
lea edx [ebp-0E8h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1019BBC  +
mov eax [ebp-180h] +
lea edx [ebp-1D0h] +
push edx  +
lea edx [ebp-174h] +
push edx  +
mov [ebp-1D0h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp-180h] +
cmp eax ebx +
jz loc_1019CD2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-180h] ebx +
cmp esi ebx +
jl loc_1019BBC  +
or dword ptr [ebp-188h] 0FFFFFFFFh +
xor edi edi +
cmp [ebp-1D0h] ebx +
jle loc_1019D3C  +
xor esi esi +
mov eax [ebp-174h] +
mov edx [ebp-1ECh] +
lea ecx [esi+eax] +
mov eax [edx] +
mov [ebp-1A0h] ecx +
cmp eax edx +
jz loc_1019D1D  +
mov ecx [ecx+48h] +
mov edx [eax+8] +
cmp [edx+48h] ecx +
jbe loc_1019D1D  +
mov eax [eax] +
cmp eax [ebp-1ECh] +
jnz loc_1019D0B  +
lea ecx [ebp-1A0h] +
push ecx  +
push eax  +
lea ecx [ebp-1F0h] +
call sub_101C4CF  +
inc edi  +
add esi 50h +
cmp edi [ebp-1D0h] +
jl loc_1019CED  +
mov ecx [ebp-1ECh] +
mov eax [ecx] +
cmp eax ecx +
jmp loc_1019F2A  +
mov ecx [ebp-188h] +
cmp ecx 0FFFFFFFFh +
jz loc_1019D62  +
mov edx [eax+8] +
cmp ecx [edx+48h] +
jz loc_1019F22  +
mov ecx [ebp-168h] +
cmp ecx [ebp-1E0h] +
jz loc_101A175  +
mov ecx [eax+8] +
mov ecx [ecx+48h] +
mov edx [ebp-19Ch] +
mov [ebp-188h] ecx +
mov ecx [ebp-164h] +
imul ecx ecx +
lea ecx [ecx+edx+18h] +
mov [ebp-1C0h] ebx +
mov [ebp-1BCh] ebx +
mov [ebp-1A0h] ecx +
mov edx [ebp-160h] +
mov ecx [ebp-168h] +
cmp [ecx+0Ch] edx +
jnz loc_1019EDE  +
mov edx [ebp-164h] +
cmp edx [ebp-16Ch] +
jge loc_1019EDE  +
mov esi [ebp-1D4h] +
mov edi [ecx+8] +
cmp esi ebx +
jz loc_101A188  +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0B8h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-0A8h] 6 +
jz loc_1019E13  +
mov eax [ebp-5Ch] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax edi +
jz loc_1019E1A  +
mov esi [esi+14h] +
cmp esi ebx +
jnz loc_1019DDD  +
cmp esi ebx +
jz loc_101A188  +
lea eax [ebp-198h] +
push eax  +
push ebx  +
mov [ebp-198h] ebx +
mov [ebp-194h] ebx +
push dword ptr [esi]  +
call sub_10044A5  +
mov esi eax +
cmp esi ebx +
jl loc_1019BBC  +
cmp [ebp-194h] ebx +
ja loc_1019E69  +
jb loc_1019E5D  +
cmp dword ptr [ebp-198h] 100000h +
jnb loc_1019E69  +
mov [ebp-198h] ebx +
mov [ebp-194h] ebx +
mov eax [ebp-1A0h] +
lea edi [eax-18h] +
mov ecx [ebp-198h] +
lea esi [ebp-0B8h] +
movs   +
movs   +
add [ebp-1C0h] ecx +
movs   +
mov edx [ebp-194h] +
adc [ebp-1BCh] edx +
movs   +
mov esi [ebp-188h] +
mov [eax+10h] esi +
inc dword ptr [ebp-164h]  +
mov edi eax +
lea esi [ebp-0E8h] +
movs   +
movs   +
movs   +
movs   +
mov [eax-8] ecx +
mov [eax-4] edx +
add eax 30h +
mov [ebp-1A0h] eax +
mov eax [ebp-168h] +
mov eax [eax] +
cmp eax [ebp-1E0h] +
mov [ebp-168h] eax +
mov eax [ebp-1CCh] +
jnz loc_1019DA5  +
mov ecx [ebp-1A8h] +
or ecx [ebp-1A4h] +
mov edx [ebp-1C0h] +
mov ecx [ebp-1BCh] +
jz loc_1019F10  +
mov esi edx +
or esi ecx +
jz loc_1019F1C  +
cmp ecx [ebp-1A4h] +
ja loc_1019F1C  +
jb loc_1019F10  +
cmp edx [ebp-1A8h] +
jnb loc_1019F1C  +
mov [ebp-1A8h] edx +
mov [ebp-1A4h] ecx +
inc dword ptr [ebp-160h]  +
mov eax [eax] +
cmp eax [ebp-1ECh] +
mov [ebp-1CCh] eax +
jnz loc_1019D4B  +
cmp [ebp-174h] ebx +
jz loc_1019F50  +
push dword ptr [ebp-174h]  +
call ds:CoTaskMemFree  +
mov [ebp-174h] ebx +
lea ecx [ebp-1F0h] +
call sub_10168B5  +
mov eax [ebp-1B4h] +
or eax [ebp-1B0h] +
mov eax [ebp-1A4h] +
jz loc_1019F87  +
cmp eax [ebp-1B0h] +
ja loc_1019F99  +
jb loc_1019F87  +
mov ecx [ebp-1A8h] +
cmp ecx [ebp-1B4h] +
jnb loc_1019F99  +
mov ecx [ebp-1A8h] +
mov [ebp-1B4h] ecx +
mov [ebp-1B0h] eax +
mov eax [ebp-1ACh] +
lea edx [ebp-1C4h] +
push edx  +
lea edx [ebp-184h] +
push edx  +
push 1  +
mov [ebp-1C4h] ebx +
mov ecx [eax] +
push eax  +
mov [ebp-1A8h] ebx +
mov [ebp-1A4h] ebx +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_1019C3E  +
mov eax [ebp-1B4h] +
or eax [ebp-1B0h] +
jnz loc_1019FEA  +
push 17Eh  +
jmp loc_101A177  +
mov edx [ebp-190h] +
mov ecx [ebp-18Ch] +
mov eax edx +
and eax ecx +
cmp eax 0FFFFFFFFh +
jnz loc_101A017  +
mov edx [ebp-1B4h] +
mov ecx [ebp-1B0h] +
mov [ebp-190h] edx +
mov [ebp-18Ch] ecx +
or dword ptr [ebp-164h] 0FFFFFFFFh +
cmp [ebp-16Ch] ebx +
mov [ebp-160h] ebx +
jle loc_101A0CE  +
mov eax [ebp-19Ch] +
add eax 10h +
cmp dword ptr [ebp-164h] 0FFFFFFFFh +
jnz loc_101A04B  +
mov esi [eax+18h] +
mov [ebp-164h] esi +
mov esi [eax+18h] +
cmp [ebp-164h] esi +
jz loc_101A080  +
cmp ecx ebx +
ja loc_101A171  +
jb loc_101A06C  +
cmp edx 100000h +
jnb loc_101A171  +
mov edx [ebp-190h] +
mov ecx [ebp-18Ch] +
mov [ebp-164h] esi +
jmp loc_101A0B3  +
cmp ecx ebx +
ja loc_101A095  +
jb loc_101A08E  +
cmp edx 100000h +
jnb loc_101A095  +
mov [eax] ebx +
mov [eax+4] ebx +
jmp loc_101A0B3  +
mov edi [eax+4] +
mov esi [eax] +
cmp ecx edi +
ja loc_101A0AF  +
jb loc_101A0A4  +
cmp edx esi +
ja loc_101A0AF  +
mov [eax] edx +
mov [eax+4] ecx +
xor edx edx +
xor ecx ecx +
jmp loc_101A0B3  +
sub edx esi +
sbb ecx edi +
inc dword ptr [ebp-160h]  +
mov esi [ebp-160h] +
add eax 30h +
cmp esi [ebp-16Ch] +
jl loc_101A039  +
lea edx [ebp-17Ch] +
push edx  +
push dword ptr [ebp-16Ch]  +
push dword ptr [ebp-19Ch]  +
mov eax [ebp-170h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_1019BBC  +
mov eax [ebp-17Ch] +
mov ecx [eax] +
lea edx [ebp-21Ch] +
push edx  +
lea edx [ebp-1B8h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-17Ch] +
cmp eax ebx +
jz loc_101A129  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-17Ch] ebx +
cmp esi ebx +
jl loc_1019BBC  +
cmp [ebp-1B8h] ebx +
jl loc_101A145  +
cmp dword ptr [ebp-1B8h] 42465h +
jnz loc_101A162  +
push dword ptr [ebp-1B8h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-1B8h] +
mov [ebp-15Ch] eax +
cmp [ebp-178h] ebx +
jz loc_101A1A9  +
push 1D8h  +
jmp loc_101A1AB  +
push 79h  +
jmp loc_101A177  +
push 75h  +
call sub_1012B18  +
mov dword ptr [ebp-15Ch] 80070057h +
jmp loc_101A1B0  +
push offset aExtend  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_101A17C  +
***
lea edx [ebp-17Ch] +
push edx  +
push ebx  +
push ebx  +
jmp loc_101A0E1  +
***
push 78h  +
call sub_1012B18  +
cmp [ebp-19Ch] ebx +
jz loc_101A1C5  +
push dword ptr [ebp-19Ch]  +
call ds:free  +
pop ecx  +
mov eax [ebp-170h] +
cmp eax ebx +
jz loc_101A1DB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-170h] ebx +
mov eax [ebp-1ACh] +
cmp eax ebx +
jz loc_101A1F1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1ACh] ebx +
mov eax [ebp-184h] +
cmp eax ebx +
jz loc_101A207  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-184h] ebx +
mov eax [ebp-180h] +
cmp eax ebx +
jz loc_101A21D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-180h] ebx +
mov eax [ebp-1C8h] +
cmp eax ebx +
jz loc_101A233  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1C8h] ebx +
mov eax [ebp-17Ch] +
cmp eax ebx +
jz loc_101A249  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-17Ch] ebx +
lea eax [ebp-1D4h] +
push eax  +
call sub_1004352  +
cmp [ebp-174h] ebx +
jz loc_101A26F  +
push dword ptr [ebp-174h]  +
call ds:CoTaskMemFree  +
mov [ebp-174h] ebx +
lea eax [ebp-158h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
lea eax [ebp-48h] +
push eax  +
call sub_1004329  +
mov eax [ebp-1D8h] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-15Ch] +
mov esi eax +
jmp loc_10199A5  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
or dword ptr [ebp-0D4h] 0FFFFFFFFh +
or dword ptr [ebp-0D0h] 0FFFFFFFFh +
xor ebx ebx +
lea ecx [ebp-11Ch] +
mov [ebp-0C0h] eax +
mov [ebp-0D8h] ebx +
mov [ebp-0F8h] ebx +
mov [ebp-0C4h] ebx +
mov [ebp-0FCh] ebx +
mov [ebp-0BCh] ebx +
mov [ebp-0E0h] ebx +
mov [ebp-0DCh] ebx +
mov [ebp-0ECh] ebx +
mov [ebp-0E8h] ebx +
mov [ebp-0C8h] ebx +
mov [ebp-0F4h] ebx +
mov [ebp-0CCh] ebx +
mov [ebp-0F0h] ebx +
mov [ebp-100h] ebx +
mov [ebp-104h] ebx +
mov [ebp-0E4h] ebx +
call sub_1006B37  +
lea ecx [ebp-110h] +
mov [ebp-4] ebx +
call sub_101685F  +
mov [ebp-10Ch] eax +
mov [ebp-108h] ebx +
push 70h  +
lea eax [ebp-0B8h] +
push ebx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call memset  +
add esp 0Ch +
call sub_1009BE8  +
test eax eax +
jz loc_101A3AB  +
push 115h  +
call sub_1012B18  +
lea ecx [ebp-110h] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-11Ch] +
call sub_1018168  +
mov eax 80070057h +
call sub_101D3D6  +
retn 0Ch  +
***
cmp dword_101F914 ebx +
jnz loc_101A3E8  +
cmp dword_101F91C ebx +
jnz loc_101A3E8  +
push 115h  +
call sub_1012B18  +
mov esi 80070057h +
lea ecx [ebp-110h] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-11Ch] +
call sub_1018168  +
mov eax esi +
jmp loc_101A3A3  +
***
cmp [ebp+10h] ebx +
jbe loc_101A73D  +
mov eax [ebp-0C0h] +
mov edi [ebp-0C4h] +
lea esi [eax+edi*4] +
mov eax [esi] +
cmp eax ebx +
jz loc_101A6F9  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A437  +
cmp [ebp-0FCh] ebx +
jnz loc_101A714  +
mov dword ptr [ebp-0FCh] 1 +
jmp loc_101A6BB  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A4D8  +
inc edi  +
mov [ebp-0C4h] edi +
cmp edi [ebp+10h] +
jnb loc_101A714  +
mov eax [ebp-0D4h] +
and eax [ebp-0D0h] +
cmp eax 0FFFFFFFFh +
jnz loc_101A714  +
mov eax [ebp-0C0h] +
lea edi [eax+edi*4] +
mov ecx [edi] +
cmp ecx ebx +
jz loc_101A714  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101A48B  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_101A714  +
push dword ptr [edi]  +
call ds:_wtoi64  +
pop ecx  +
push ebx  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-0D4h] eax +
mov [ebp-0D0h] edx +
jmp loc_101A6BB  +
push offset aDisk  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A643  +
inc edi  +
mov [ebp-0C4h] edi +
cmp edi [ebp+10h] +
jnb loc_101A714  +
cmp [ebp-114h] ebx +
jnz loc_101A714  +
mov eax [ebp-0C0h] +
lea ecx [eax+edi*4] +
mov eax [ecx] +
mov [ebp-0BCh] ecx +
cmp eax ebx +
jz loc_101A714  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101A527  +
sub eax esi +
mov esi [ecx] +
sar eax 1 +
push 2Ch  +
push esi  +
mov edi eax +
call ds:wcsrchr  +
sub eax esi +
sar eax 1 +
dec edi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_101A714  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101A556  +
sub eax edx +
sar eax 1 +
push offset a0123456789_0  +
push esi  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_101A714  +
mov eax [ebp-0BCh] +
mov esi [eax] +
mov [ebp-0BCh] ebx +
jmp loc_101A639  +
cmp word ptr [esi] 2Ch +
mov edi esi +
jz loc_101A714  +
push 2Ch  +
push esi  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi ebx +
jz loc_101A5B3  +
xor eax eax +
mov [esi] ax +
inc esi  +
inc esi  +
inc dword ptr [ebp-0BCh]  +
push edi  +
call ds:_wtol  +
mov edi eax +
pop ecx  +
lea eax [ebp-120h] +
push eax  +
lea eax [ebp-134h] +
push eax  +
lea ecx [ebp-11Ch] +
mov [ebp-120h] edi +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-118h] +
jnz loc_101A72A  +
lea eax [ebp-130h] +
push eax  +
lea eax [ebp-13Ch] +
push eax  +
lea ecx [ebp-11Ch] +
mov [ebp-130h] edi +
mov [ebp-12Ch] ebx +
call sub_1007520  +
lea eax [ebp-128h] +
push eax  +
push dword ptr [ebp-10Ch]  +
lea ecx [ebp-110h] +
mov [ebp-128h] edi +
mov [ebp-124h] ebx +
call sub_1017EF7  +
cmp esi ebx +
jnz loc_101A58F  +
jmp loc_101A6BB  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A714  +
inc edi  +
mov [ebp-0C4h] edi +
cmp edi [ebp+10h] +
jnb loc_101A714  +
mov eax [ebp-0C0h] +
lea esi [eax+edi*4] +
mov ecx [esi] +
cmp ecx ebx +
jz loc_101A714  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101A682  +
sub eax edi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_101A714  +
push 0Ah  +
push ebx  +
push dword ptr [esi]  +
call ds:_wcstoui64  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp-104h] eax +
inc dword ptr [ebp-0C4h]  +
mov eax [ebp-0C4h] +
cmp eax [ebp+10h] +
jb loc_101A3F1  +
mov eax [ebp-0D4h] +
or eax [ebp-0D0h] +
jnz loc_101A734  +
push offset aCreateVolumeMi  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 80070057h +
jmp loc_101AAE1  +
push offset aCreateVolumeMi  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 8000FFFFh +
jmp loc_101A3CA  +
***
push offset aCreateVolumeMi  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_101A3C5  +
***
push 20Dh  +
jmp loc_101A3C0  +
***
cmp dword ptr [ebp-0BCh] 2 +
jz loc_101A75C  +
push 291h  +
call sub_1012B18  +
mov dword ptr [ebp-0D8h] 80070057h +
mov esi [ebp-0D8h] +
jmp loc_101AAE1  +
push 60h  +
call ds:malloc  +
mov edi eax +
pop ecx  +
mov [ebp-0E4h] edi +
cmp edi ebx +
jnz loc_101A782  +
push 6Eh  +
call sub_1012B18  +
mov esi 8007000Eh +
jmp loc_101AAE1  +
lea eax [ebp-100h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi ebx +
jl loc_101AAD5  +
mov ecx [ebp-10Ch] +
mov eax [ecx] +
mov [ebp-0BCh] eax +
cmp eax ecx +
jz loc_101A950  +
add edi 10h +
mov [ebp-0C0h] edi +
mov esi [ebp-100h] +
mov eax [ebp-0BCh] +
mov edi [eax+8] +
cmp esi ebx +
jz loc_101A6DE  +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0B8h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-0A8h] 6 +
jz loc_101A804  +
mov eax [ebp-5Ch] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax edi +
jz loc_101A80B  +
mov esi [esi+14h] +
cmp esi ebx +
jnz loc_101A7CE  +
cmp esi ebx +
jz loc_101A6DE  +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jz loc_101AA3A  +
cmp [ebp-0C8h] ebx +
jnz loc_101A84F  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0C8h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_101AA49  +
cmp [ebp-0C8h] ebx +
jz loc_101AA49  +
lea eax [ebp-0ECh] +
push eax  +
push dword ptr [ebp-104h]  +
push dword ptr [esi]  +
call sub_10044A5  +
mov esi eax +
cmp esi ebx +
jl loc_101AAD5  +
cmp [ebp-0E0h] ebx +
jnz loc_101A897  +
cmp [ebp-0DCh] ebx +
jnz loc_101A897  +
mov eax [ebp-0ECh] +
mov [ebp-0E0h] eax +
mov eax [ebp-0E8h] +
mov [ebp-0DCh] eax +
jmp loc_101A8C1  +
mov ecx [ebp-0E8h] +
cmp ecx [ebp-0DCh] +
ja loc_101A8C1  +
mov eax [ebp-0ECh] +
jb loc_101A8B5  +
cmp eax [ebp-0E0h] +
jnb loc_101A8C1  +
mov [ebp-0E0h] eax +
mov [ebp-0DCh] ecx +
mov eax [ebp-0C0h] +
mov ecx [ebp-0BCh] +
lea edi [eax-10h] +
lea esi [ebp-0B8h] +
movs   +
movs   +
movs   +
movs   +
mov edx [ecx+0Ch] +
lea edi [eax+8] +
mov [edi+10h] edx +
mov edx [ebp-0D4h] +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp-0D0h] +
cmp edx 0FFFFFFFFh +
jnz loc_101A914  +
cmp esi edx +
jnz loc_101A914  +
mov edx [ebp-0ECh] +
mov [eax] edx +
mov edx [ebp-0E8h] +
mov [eax+4] edx +
jmp loc_101A933  +
cmp esi [ebp-0E8h] +
ja loc_101AA5C  +
jb loc_101A92E  +
cmp edx [ebp-0ECh] +
ja loc_101AA5C  +
mov [eax] edx +
mov [eax+4] esi +
mov ecx [ecx] +
add eax 30h +
mov [ebp-0BCh] ecx +
mov [ebp-0C0h] eax +
cmp ecx [ebp-10Ch] +
jnz loc_101A7B7  +
cmp dword ptr [ebp-0D4h] 0FFFFFFFFh +
jnz loc_101A985  +
cmp dword ptr [ebp-0D0h] 0FFFFFFFFh +
jnz loc_101A985  +
mov eax [ebp-0E4h] +
push 2  +
add eax 10h +
pop ecx  +
mov edx [ebp-0E0h] +
mov [eax] edx +
mov edx [ebp-0DCh] +
mov [eax+4] edx +
add eax 30h +
dec ecx  +
jnz loc_101A96E  +
mov eax [ebp-0C8h] +
mov ecx [eax] +
lea edx [ebp-0F4h] +
push edx  +
push offset dword_1002368  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_101AAD5  +
mov eax [ebp-0F4h] +
cmp eax ebx +
jz loc_101AAD5  +
mov ecx [eax] +
lea edx [ebp-0F0h] +
push edx  +
push dword ptr [ebp-104h]  +
push ebx  +
push 2  +
push dword ptr [ebp-0E4h]  +
push 0Dh  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_101AAD5  +
mov eax [ebp-0F0h] +
mov ecx [eax] +
lea edx [ebp-15Ch] +
push edx  +
lea edx [ebp-0F8h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0F0h] +
cmp eax ebx +
jz loc_101AA0E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F0h] ebx +
cmp esi ebx +
jl loc_101AAD5  +
cmp [ebp-0F8h] ebx +
jge loc_101AA63  +
push dword ptr [ebp-0F8h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov esi [ebp-0F8h] +
jmp loc_101AAE1  +
push 17Ch  +
call sub_1012B18  +
jmp loc_101A6EF  +
***
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov esi edi +
jmp loc_101AAE1  +
push 44h  +
jmp loc_101A742  +
***
mov eax [ebp-154h] +
mov ecx [eax] +
lea edx [ebp-0CCh] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_101AAD5  +
mov eax [ebp-0CCh] +
mov ecx [eax] +
lea edx [ebp-48h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-0CCh] +
cmp eax ebx +
jz loc_101AAA8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0CCh] ebx +
cmp [ebp-18h] ebx +
jz loc_101AAB9  +
push dword ptr [ebp-18h]  +
call ds:CoTaskMemFree  +
mov [ebp-18h] ebx +
cmp esi ebx +
jl loc_101AAD5  +
lea esi [ebp-48h] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push 42h  +
movs   +
call sub_1012B18  +
jmp loc_101A751  +
***
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
lea eax [ebp-100h] +
push eax  +
call sub_1004352  +
cmp [ebp-0E4h] ebx +
jz loc_101AB02  +
push dword ptr [ebp-0E4h]  +
call ds:free  +
pop ecx  +
mov eax [ebp-0C8h] +
cmp eax ebx +
jz loc_101AB18  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C8h] ebx +
mov eax [ebp-0F4h] +
cmp eax ebx +
jz loc_101AB2E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F4h] ebx +
mov eax [ebp-0CCh] +
cmp eax ebx +
jz loc_101AB44  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0CCh] ebx +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-0FCh] +
neg eax  +
sbb eax eax +
not eax  +
and eax esi +
mov esi eax +
jmp loc_101A3CA  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
or dword ptr [ebp-0DCh] 0FFFFFFFFh +
or dword ptr [ebp-0D8h] 0FFFFFFFFh +
xor esi esi +
lea ecx [ebp-128h] +
mov [ebp-0FCh] eax +
mov [ebp-0BCh] esi +
mov [ebp-0C0h] esi +
mov [ebp-10Ch] esi +
mov [ebp-0D4h] esi +
mov [ebp-0C4h] esi +
mov [ebp-0E8h] esi +
mov [ebp-0F8h] esi +
mov [ebp-0E0h] esi +
mov [ebp-0E4h] esi +
mov [ebp-104h] esi +
mov [ebp-110h] esi +
call sub_1006B37  +
lea ecx [ebp-11Ch] +
mov [ebp-4] esi +
call sub_101685F  +
mov [ebp-118h] eax +
mov [ebp-114h] esi +
push 70h  +
lea eax [ebp-0B8h] +
push esi  +
push eax  +
mov byte ptr [ebp-4] 1 +
call memset  +
add esp 0Ch +
cmp dword ptr [ebp+14h] 0Ch +
jnz loc_101AC21  +
mov dword ptr [ebp-0C8h] offset aCreateVolumeSt +
jmp loc_101AC3B  +
cmp dword ptr [ebp+14h] 0Eh +
mov dword ptr [ebp-0C8h] offset aCreateVolumeRa +
jz loc_101AC3B  +
mov dword ptr [ebp-0C8h] offset aCreateVolume +
call sub_1009BE8  +
test eax eax +
jz loc_101AC75  +
push 115h  +
call sub_1012B18  +
lea ecx [ebp-11Ch] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-128h] +
call sub_1018168  +
mov eax 80070057h +
call sub_101D3D6  +
retn 10h  +
cmp dword_101F914 esi +
jnz loc_101ACB8  +
cmp dword_101F924 esi +
jnz loc_101ACB8  +
cmp dword ptr [ebp+14h] 0Eh +
jnz loc_101ACB8  +
push 115h  +
call sub_1012B18  +
mov esi 80070057h +
lea ecx [ebp-11Ch] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-128h] +
call sub_1018168  +
mov eax esi +
jmp loc_101AC6D  +
cmp [ebp+10h] esi +
jbe loc_101B021  +
mov ebx [ebp-0FCh] +
mov edi [ebp-0C0h] +
lea esi [ebx+edi*4] +
mov eax [esi] +
test eax eax +
jz loc_101AFD4  +
push offset aNoerr  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101AD07  +
cmp [ebp-10Ch] eax +
jnz loc_101AFF0  +
mov dword ptr [ebp-10Ch] 1 +
jmp loc_101AF91  +
push offset aSize  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101ADA9  +
inc edi  +
mov [ebp-0C0h] edi +
cmp edi [ebp+10h] +
jnb loc_101B007  +
mov eax [ebp-0DCh] +
and eax [ebp-0D8h] +
cmp eax 0FFFFFFFFh +
jnz loc_101AFF0  +
lea edi [ebx+edi*4] +
mov ecx [edi] +
test ecx ecx +
jz loc_101AFF0  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101AD55  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_101AFF0  +
push 0Ah  +
push 0  +
push dword ptr [edi]  +
call ds:_wcstoui64  +
add esp 0Ch +
push 0  +
push 100000h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp-0DCh] eax +
mov [ebp-0D8h] edx +
jmp loc_101AF91  +
push offset aDisk  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101AF1E  +
inc edi  +
mov [ebp-0C0h] edi +
cmp edi [ebp+10h] +
jnb loc_101B007  +
cmp [ebp-120h] eax +
jnz loc_101AFF0  +
lea ebx [ebx+edi*4] +
mov eax [ebx] +
test eax eax +
jz loc_101AFF0  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101ADEC  +
mov esi [ebx] +
sub eax edx +
sar eax 1 +
push 2Ch  +
push esi  +
mov edi eax +
call ds:wcsrchr  +
sub eax esi +
sar eax 1 +
dec edi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_101AFF0  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101AE1B  +
sub eax edx +
sar eax 1 +
push offset a0123456789_0  +
push esi  +
mov edi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_101AFF0  +
and dword ptr [ebp-0D4h] 0 +
mov esi [ebx] +
and dword ptr [ebp-0C4h] 0 +
jmp loc_101AF14  +
cmp word ptr [esi] 2Ch +
mov ebx esi +
jz loc_101AFF0  +
push 2Ch  +
push esi  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_101AE7A  +
xor eax eax +
mov [esi] ax +
inc esi  +
inc esi  +
inc dword ptr [ebp-0D4h]  +
push ebx  +
call ds:_wtol  +
mov edi eax +
pop ecx  +
lea eax [ebp-0ECh] +
push eax  +
lea eax [ebp-0CCh] +
push eax  +
lea ecx [ebp-128h] +
mov [ebp-0ECh] edi +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-124h] +
jnz loc_101B00E  +
lea eax [ebp-0ECh] +
push eax  +
lea ecx [ebp-128h] +
call sub_10092C1  +
mov ecx [ebp-0C4h] +
mov [eax] ecx +
lea eax [ebp-0F4h] +
push eax  +
push dword ptr [ebp-118h]  +
mov [ebp-0F0h] ecx +
lea ecx [ebp-11Ch] +
mov [ebp-0F4h] edi +
call sub_1017EF7  +
push 2Bh  +
push ebx  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_101AF0E  +
inc ebx  +
inc ebx  +
jnz loc_101AE7A  +
inc dword ptr [ebp-0C4h]  +
test esi esi +
jnz loc_101AE56  +
jmp loc_101AF91  +
push offset aAlign  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101AFF0  +
inc edi  +
mov [ebp-0C0h] edi +
cmp edi [ebp+10h] +
jnb loc_101B007  +
lea edi [ebx+edi*4] +
mov ecx [edi] +
test ecx ecx +
jz loc_101AFF0  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101AF57  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_101AFF0  +
push 0Ah  +
push 0  +
push dword ptr [edi]  +
call ds:_wcstoui64  +
add esp 0Ch +
shl eax 0Ah +
mov [ebp-110h] eax +
inc dword ptr [ebp-0C0h]  +
mov eax [ebp-0C0h] +
cmp eax [ebp+10h] +
jb loc_101ACC1  +
mov eax [ebp-0DCh] +
or eax [ebp-0D8h] +
jnz loc_101B018  +
push dword ptr [ebp-0C8h]  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
mov dword ptr [ebp-0BCh] 80070057h +
jmp loc_101B4C9  +
push dword ptr [ebp-0C8h]  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 8000FFFFh +
jmp loc_101AC9A  +
push dword ptr [ebp-0C8h]  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_101AC95  +
push 70h  +
jmp loc_101AC90  +
push 20Dh  +
jmp loc_101AC90  +
cmp dword ptr [ebp-0C4h] 3 +
jge loc_101B03D  +
cmp dword ptr [ebp+14h] 0Eh +
jnz loc_101B03D  +
push 45h  +
call sub_1012B18  +
mov dword ptr [ebp-0BCh] 80070057h +
jmp loc_101B4CA  +
cmp dword ptr [ebp-0C4h] 2 +
jge loc_101B04A  +
push 46h  +
jmp loc_101B029  +
mov eax [ebp-0D4h] +
imul eax eax +
push eax  +
call ds:malloc  +
xor edi edi +
pop ecx  +
mov [ebp-0C4h] eax +
cmp eax edi +
jnz loc_101B07D  +
push 6Eh  +
call sub_1012B18  +
mov dword ptr [ebp-0BCh] 8007000Eh +
jmp loc_101B4B4  +
lea eax [ebp-104h] +
push eax  +
call sub_10079F7  +
mov esi eax +
cmp esi edi +
jge loc_101B0A6  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0BCh] esi +
jmp loc_101B4B4  +
mov eax [ebp-118h] +
mov ebx [eax] +
mov [ebp-0ECh] edi +
mov [ebp-0D0h] edi +
mov [ebp-0CCh] edi +
mov [ebp-100h] edi +
mov [ebp-0FCh] edi +
cmp ebx eax +
jz loc_101B27A  +
mov eax [ebp-0C4h] +
add eax 18h +
mov [ebp-0C0h] eax +
mov esi [ebp-104h] +
mov edi [ebx+8] +
test esi esi +
jz loc_101B300  +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0B8h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-0A8h] 6 +
jz loc_101B12A  +
mov eax [ebp-5Ch] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax edi +
jz loc_101B131  +
mov esi [esi+14h] +
test esi esi +
jnz loc_101B0F4  +
test esi esi +
jz loc_101B300  +
push dword ptr [esi]  +
call sub_1004404  +
test eax eax +
jz loc_101B321  +
cmp dword ptr [ebp-0E8h] 0 +
jnz loc_101B16A  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0E8h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_101B32D  +
and dword ptr [ebp-0F4h] 0 +
and dword ptr [ebp-0F0h] 0 +
lea eax [ebp-0F4h] +
push eax  +
push dword ptr [ebp-110h]  +
push dword ptr [esi]  +
call sub_10044A5  +
mov esi eax +
test esi esi +
jl loc_101B08F  +
mov eax [ebx+0Ch] +
cmp [ebp-0ECh] eax +
jnz loc_101B1BB  +
mov ecx [ebp-0F4h] +
add [ebp-0D0h] ecx +
mov edx [ebp-0F0h] +
adc [ebp-0CCh] edx +
jmp loc_101B215  +
mov ecx [ebp-0FCh] +
mov [ebp-0ECh] eax +
mov eax [ebp-100h] +
mov edx eax +
or edx ecx +
jz loc_101B1E5  +
cmp [ebp-0CCh] ecx +
ja loc_101B1FD  +
jb loc_101B1E5  +
cmp [ebp-0D0h] eax +
jnb loc_101B1FD  +
mov eax [ebp-0D0h] +
mov [ebp-100h] eax +
mov eax [ebp-0CCh] +
mov [ebp-0FCh] eax +
mov ecx [ebp-0F4h] +
mov edx [ebp-0F0h] +
mov [ebp-0D0h] ecx +
mov [ebp-0CCh] edx +
mov eax [ebp-0C0h] +
lea edi [eax-18h] +
lea esi [ebp-0B8h] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebx+0Ch] +
mov [eax+10h] esi +
mov edi eax +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
movs   +
mov [eax-8] ecx +
mov [eax-4] edx +
mov ebx [ebx] +
add eax 30h +
mov [ebp-0C0h] eax +
cmp ebx [ebp-118h] +
jnz loc_101B0E3  +
mov eax [ebp-100h] +
mov ecx [ebp-0FCh] +
mov edx eax +
or edx ecx +
jz loc_101B27A  +
cmp [ebp-0CCh] ecx +
ja loc_101B286  +
jb loc_101B27A  +
cmp [ebp-0D0h] eax +
jnb loc_101B286  +
mov eax [ebp-0D0h] +
mov ecx [ebp-0CCh] +
mov edx [ebp-0DCh] +
and edx [ebp-0D8h] +
or ebx 0FFFFFFFFh +
cmp edx ebx +
jnz loc_101B2A5  +
mov [ebp-0DCh] eax +
mov [ebp-0D8h] ecx +
and dword ptr [ebp-0C0h] 0 +
cmp dword ptr [ebp-0D4h] 0 +
mov ecx [ebp-0DCh] +
mov edx [ebp-0D8h] +
jle loc_101B37D  +
mov eax [ebp-0C4h] +
add eax 10h +
cmp ebx 0FFFFFFFFh +
jnz loc_101B2D6  +
mov ebx [eax+18h] +
mov esi [eax+18h] +
cmp ebx esi +
jz loc_101B2F3  +
or ecx edx +
jnz loc_101B438  +
mov ecx [ebp-0DCh] +
mov edx [ebp-0D8h] +
mov ebx esi +
mov esi ecx +
or esi edx +
jnz loc_101B344  +
and [eax] esi +
and [eax+4] esi +
jmp loc_101B362  +
push dword ptr [ebp-0C8h]  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-0BCh] 80070057h +
jmp loc_101B4B4  +
push 17Ch  +
call sub_1012B18  +
jmp loc_101B312  +
push edi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0BCh] edi +
jmp loc_101B4B4  +
mov edi [eax+4] +
mov esi [eax] +
cmp edx edi +
ja loc_101B35E  +
jb loc_101B353  +
cmp ecx esi +
ja loc_101B35E  +
mov [eax] ecx +
mov [eax+4] edx +
xor ecx ecx +
xor edx edx +
jmp loc_101B362  +
sub ecx esi +
sbb edx edi +
inc dword ptr [ebp-0C0h]  +
mov esi [ebp-0C0h] +
add eax 30h +
cmp esi [ebp-0D4h] +
jl loc_101B2CE  +
mov eax [ebp-0E8h] +
mov ecx [eax] +
lea edx [ebp-0F8h] +
push edx  +
push offset dword_1002368  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
xor edi edi +
cmp esi edi +
jl loc_101B08F  +
mov eax [ebp-0F8h] +
mov ecx [eax] +
lea edx [ebp-0E4h] +
push edx  +
push dword ptr [ebp-110h]  +
push 10000h  +
push dword ptr [ebp-0D4h]  +
push dword ptr [ebp-0C4h]  +
push dword ptr [ebp+14h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_101B08F  +
mov eax [ebp-0E4h] +
mov ecx [eax] +
lea edx [ebp-148h] +
push edx  +
lea edx [ebp-108h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0E4h] +
cmp eax edi +
jz loc_101B409  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E4h] edi +
cmp esi edi +
jl loc_101B08F  +
cmp [ebp-108h] edi +
jge loc_101B43F  +
push dword ptr [ebp-108h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-108h] +
mov [ebp-0BCh] eax +
jmp loc_101B4B4  +
push 44h  +
jmp loc_101B326  +
mov eax [ebp-140h] +
mov ecx [eax] +
lea edx [ebp-0E0h] +
push edx  +
push offset dword_10023E8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_101B08F  +
mov eax [ebp-0E0h] +
mov ecx [eax] +
lea edx [ebp-48h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp-0E0h] +
cmp eax edi +
jz loc_101B488  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E0h] edi +
cmp [ebp-18h] edi +
jz loc_101B499  +
push dword ptr [ebp-18h]  +
call ds:CoTaskMemFree  +
mov [ebp-18h] edi +
cmp esi edi +
jl loc_101B08F  +
lea esi [ebp-48h] +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
push 42h  +
movs   +
call sub_1012B18  +
cmp dword ptr [ebp-0C4h] 0 +
jz loc_101B4CA  +
push dword ptr [ebp-0C4h]  +
call ds:free  +
pop ecx  +
lea eax [ebp-104h] +
push eax  +
call sub_1004352  +
mov eax [ebp-0E8h] +
xor esi esi +
cmp eax esi +
jz loc_101B4EE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E8h] esi +
mov eax [ebp-0F8h] +
cmp eax esi +
jz loc_101B504  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0F8h] esi +
mov eax [ebp-0E0h] +
cmp eax esi +
jz loc_101B51A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E0h] esi +
mov eax [ebp-0E4h] +
cmp eax esi +
jz loc_101B530  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0E4h] esi +
lea eax [ebp-0B8h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-10Ch] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp-0BCh] +
mov esi eax +
jmp loc_101AC9A  +
***
push ebp  +
mov ebp esp +
push 0Ch  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_101AB6A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0Eh  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101AB6A  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov edi [ebp+0Ch] +
xor esi esi +
lea ecx [ebp-100h] +
mov [ebp-0B8h] esi +
call sub_1006B37  +
lea ecx [ebp-0E8h] +
mov [ebp-4] esi +
call sub_101BE62  +
mov [ebp-0E4h] eax +
mov [ebp-0E0h] esi +
push 70h  +
lea eax [ebp-0B0h] +
push esi  +
push eax  +
mov byte ptr [ebp-4] 1 +
mov [ebp-0CCh] esi +
mov [ebp-0C8h] esi +
mov [ebp-0BCh] esi +
mov [ebp-0C4h] esi +
mov [ebp-0C0h] esi +
xor ebx ebx +
call memset  +
add esp 0Ch +
mov [ebp-0D8h] esi +
mov [ebp-0ECh] esi +
cmp dword_101F914 esi +
jnz loc_101B65A  +
cmp dword_101F924 esi +
jnz loc_101B65A  +
push 115h  +
call sub_1012B18  +
mov esi 80070057h +
lea ecx [ebp-0E8h] +
call sub_101BE80  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-100h] +
call sub_1018168  +
mov eax esi +
call sub_101D3D6  +
retn 0Ch  +
***
cmp [ebp+10h] esi +
jbe loc_101B7CF  +
mov eax [edi+ebx*4] +
test eax eax +
jz loc_101B7B4  +
mov esi ds:_wcsicmp +
push offset aNoerr  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101B698  +
cmp [ebp-0D8h] eax +
jnz loc_101B7CF  +
mov dword ptr [ebp-0D8h] 1 +
push offset aDisk  +
push dword ptr [edi+ebx*4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101B7CF  +
inc ebx  +
cmp ebx [ebp+10h] +
jnb loc_101B7E5  +
cmp [ebp-0F8h] eax +
jnz loc_101B7CF  +
mov ecx [edi+ebx*4] +
test ecx ecx +
jz loc_101B7CF  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101B6D2  +
sub eax esi +
sar eax 1 +
push offset a0123456789  +
push ecx  +
mov esi eax +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
cmp eax esi +
jnz loc_101B7CF  +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_101B779  +
push esi  +
call ds:_wtol  +
pop ecx  +
mov [ebp-0B4h] eax +
lea eax [ebp-0B4h] +
push eax  +
lea eax [ebp-0D4h] +
push eax  +
lea ecx [ebp-100h] +
call sub_101699B  +
mov eax [eax] +
cmp eax [ebp-0FCh] +
jnz loc_101B7CF  +
lea eax [ebp-0B4h] +
push eax  +
lea ecx [ebp-100h] +
call sub_10092C1  +
mov dword ptr [eax] 1 +
lea eax [ebp-0B4h] +
push eax  +
push dword ptr [ebp-0E4h]  +
lea ecx [ebp-0E8h] +
call sub_101C4CF  +
push 2Bh  +
push esi  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_101B779  +
inc esi  +
inc esi  +
jnz loc_101B6FF  +
inc ebx  +
cmp ebx [ebp+10h] +
jb loc_101B663  +
mov ebx [ebp-0E0h] +
test ebx ebx +
jz loc_101B7CF  +
push 4  +
pop ecx  +
mov edi offset dword_1001260 +
mov esi offset unk_101F948 +
xor eax eax +
cmps   +
jnz loc_101B7EC  +
push 16Eh  +
call sub_1012B18  +
mov esi 80070057h +
jmp loc_101BAC0  +
push offset aRepair  +
push 1C4h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov esi 8000FFFFh +
jmp loc_101B636  +
***
push offset aRepair  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
jmp loc_101B631  +
***
push 70h  +
jmp loc_101B62C  +
***
lea eax [ebp-0CCh] +
push eax  +
call sub_10130DC  +
mov esi eax +
test esi esi +
jge loc_101B80F  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
jmp loc_101BAC0  +
mov eax [ebp-0CCh] +
mov ecx [eax] +
lea edx [ebp-0C8h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_101B7FE  +
xor edi edi +
inc edi  +
jmp loc_101B886  +
test esi esi +
jl loc_101B7FE  +
mov eax [ebp-0BCh] +
mov ecx [eax] +
lea edx [ebp-0C4h] +
push edx  +
push offset dword_1002418  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-0BCh] +
test eax eax +
jz loc_101B861  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-0BCh] 0 +
test esi esi +
jl loc_101B7FE  +
mov eax [ebp-0C4h] +
mov ecx [eax] +
lea edx [ebp-40h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_101B7FE  +
cmp dword ptr [ebp-30h] 0Eh +
jnz loc_101B886  +
cmp [ebp-28h] edi +
jnz loc_101B8BC  +
mov eax [ebp-0C8h] +
and dword ptr [ebp-0B4h] 0 +
mov ecx [eax] +
lea edx [ebp-0B4h] +
push edx  +
lea edx [ebp-0BCh] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jnz loc_101B82D  +
push 1B8h  +
jmp loc_101B7A5  +
***
imul ebx ebx +
push ebx  +
call ds:malloc  +
pop ecx  +
mov [ebp-0B4h] eax +
test eax eax +
jnz loc_101B8E7  +
push 6Eh  +
call sub_1012B18  +
mov dword ptr [ebp-0B8h] 8007000Eh +
jmp loc_101BAA4  +
lea eax [ebp-0ECh] +
push eax  +
call sub_10079F7  +
mov esi eax +
test esi esi +
jge loc_101B910  +
push esi  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov [ebp-0B8h] esi +
jmp loc_101BAA4  +
mov eax [ebp-0E4h] +
mov ebx [eax] +
and dword ptr [ebp-0DCh] 0 +
cmp ebx eax +
jz loc_101B9F1  +
mov eax [ebp-0B4h] +
mov [ebp-0D4h] eax +
mov esi [ebp-0ECh] +
mov edi [ebx+8] +
test esi esi +
jz loc_101BA7D  +
lea eax [ebp-0B0h] +
push eax  +
call sub_10028A5  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp-0B0h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp-0A0h] 6 +
jz loc_101B97A  +
mov eax [ebp-54h] +
add eax 22h +
push eax  +
call ds:_wtol  +
pop ecx  +
cmp eax edi +
jz loc_101B981  +
mov esi [esi+14h] +
test esi esi +
jnz loc_101B944  +
xor edi edi +
cmp esi edi +
jz loc_101BA7D  +
lea eax [ebp-0F4h] +
push eax  +
push edi  +
mov [ebp-0F4h] edi +
mov [ebp-0F0h] edi +
push dword ptr [esi]  +
call sub_10044A5  +
mov esi eax +
cmp esi edi +
jl loc_101B8F9  +
mov eax [ebp-0D4h] +
mov ecx [ebp-0F4h] +
inc dword ptr [ebp-0DCh]  +
mov edi eax +
lea esi [ebp-0B0h] +
movs   +
movs   +
movs   +
movs   +
mov [eax+10h] ecx +
mov ecx [ebp-0F0h] +
mov [eax+14h] ecx +
mov ebx [ebx] +
add eax 30h +
mov [ebp-0D4h] eax +
cmp ebx [ebp-0E4h] +
jnz loc_101B933  +
mov eax [ebp-0C4h] +
mov ecx [eax] +
lea edx [ebp-0C0h] +
push edx  +
push dword ptr [ebp-0DCh]  +
push dword ptr [ebp-0B4h]  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_101B8F9  +
mov eax [ebp-0C0h] +
mov ecx [eax] +
lea edx [ebp-120h] +
push edx  +
lea edx [ebp-0D0h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-0C0h] +
test eax eax +
jz loc_101BA4D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebp-0C0h] 0 +
test esi esi +
jl loc_101B8F9  +
cmp dword ptr [ebp-0D0h] 0 +
jge loc_101BA9A  +
push dword ptr [ebp-0D0h]  +
call sub_1012BB1  +
push eax  +
call sub_1012B18  +
mov eax [ebp-0D0h] +
mov [ebp-0B8h] eax +
jmp loc_101BAA4  +
push offset aRepair  +
push 0C0002AF9h  +
call sub_1012A8B  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-0B8h] 80070057h +
jmp loc_101BAA4  +
push 16Fh  +
call sub_1012B18  +
cmp dword ptr [ebp-0B4h] 0 +
jz loc_101BABA  +
push dword ptr [ebp-0B4h]  +
call ds:free  +
pop ecx  +
mov esi [ebp-0B8h] +
mov eax [ebp-0CCh] +
xor edi edi +
cmp eax edi +
jz loc_101BAD8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0CCh] edi +
mov eax [ebp-0C8h] +
cmp eax edi +
jz loc_101BAEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C8h] edi +
mov eax [ebp-0BCh] +
cmp eax edi +
jz loc_101BB04  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0BCh] edi +
mov eax [ebp-0C4h] +
cmp eax edi +
jz loc_101BB1A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C4h] edi +
mov eax [ebp-0C0h] +
cmp eax edi +
jz loc_101BB30  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-0C0h] edi +
lea eax [ebp-0B0h] +
push eax  +
call sub_10028A5  +
mov eax [ebp-0D8h] +
neg eax  +
sbb eax eax +
not eax  +
and eax esi +
mov esi eax +
jmp loc_101B636  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 4  +
mov eax ecx +
pop ecx  +
xor ebx ebx +
mov edi edx +
mov esi eax +
cmps   +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_101BB8E  +
mov ecx [eax+14h] +
cmp ecx [edx+14h] +
ja loc_101BB8A  +
jb loc_101BB85  +
mov eax [eax+10h] +
cmp eax [edx+10h] +
jnb loc_101BB8A  +
xor eax eax +
inc eax  +
jmp loc_101BB96  +
xor eax eax +
jmp loc_101BB96  +
mov eax [eax] +
cmp eax [edx] +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_101BBAB  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+31h] 0 +
jz loc_101BBA9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+31h] 0 +
jnz loc_101BBD9  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_101BBED  +
mov [ecx+4] eax +
jmp loc_101BBFC  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_101BBFA  +
mov [ecx+8] eax +
jmp loc_101BBFC  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor dl dl +
cmp [eax+31h] dl +
jz loc_101BC1E  +
mov eax [eax+8] +
jmp loc_101BC44  +
mov ecx [eax] +
cmp [ecx+31h] dl +
jnz loc_101BC35  +
push ecx  +
call sub_101BB9F  +
jmp loc_101BC44  +
mov ecx [esi] +
cmp ecx [eax] +
jnz loc_101BC3D  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+31h] dl +
jz loc_101BC2D  +
mov ecx [esi] +
cmp [ecx+31h] dl +
jnz loc_101BC46  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
push 8  +
mov [eax+8] ecx +
pop ecx  +
lea edi [eax+10h] +
movs   +
mov cl [ebp+arg_10] +
pop edi  +
mov [eax+30h] cl +
mov byte ptr [eax+31h] 0 +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_101BCA6  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 0Ch +
jnb loc_101BC98  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101BCE3  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_101BD0B  +
xor ecx ecx +
imul ecx ecx +
push ecx  +
call loc_101CDA5  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 38h +
jnb loc_101BCFD  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_10041D3  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+31h] 0 +
jnz loc_101BD51  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_101BD65  +
mov [ecx+4] eax +
jmp loc_101BD73  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_101BD70  +
mov [ecx] eax +
jmp loc_101BD73  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi eax +
jmp loc_101BDAA  +
push [ebp+arg_0]  +
lea ecx [esi+10h] +
call sub_101BB56  +
test al al +
jz loc_101BDA6  +
mov esi [esi+8] +
jmp loc_101BDAA  +
mov edi esi +
mov esi [esi] +
cmp byte ptr [esi+31h] 0 +
jz loc_101BD92  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101BDDD  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101BC4D  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+31h] 0 +
mov ebx ecx +
mov esi edi +
jnz loc_101BE16  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_101BDE6  +
mov esi [esi] +
push edi  +
call sub_101CD94  +
cmp byte ptr [esi+31h] 0 +
pop ecx  +
mov edi esi +
jz loc_101BDFB  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
cmp eax [esi+4] +
jz loc_101BE50  +
mov ecx [eax+4] +
mov edx [eax] +
mov [ecx] edx +
mov ecx [eax] +
mov edx [eax+4] +
push eax  +
mov [ecx+4] edx +
call sub_101CD94  +
dec dword ptr [esi+8]  +
pop ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
call loc_101BC87  +
test eax eax +
jz loc_101BE71  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz locret_101BE7A  +
mov [ecx] eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10168B5  +
push dword ptr [esi+4]  +
call sub_101CD94  +
and dword ptr [esi+4] 0 +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 1  +
call loc_101BC87  +
mov esi eax +
test esi esi +
jz loc_101BEB8  +
mov eax [ebp+arg_0] +
mov [esi] eax +
lea eax [esi+4] +
test eax eax +
jz loc_101BEC4  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+arg_8]  +
lea eax [esi+8] +
push eax  +
call sub_101BCD0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 1  +
mov edi ecx +
call loc_101BCEC  +
push [ebp+arg_10]  +
mov esi eax +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_101BDBD  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov eax [esi] +
push dword ptr [eax+4]  +
call sub_101BDE6  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
and dword ptr [edi+8] 0 +
mov [eax] eax +
mov esi [esi] +
pop edi  +
mov [esi+8] esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
call sub_101BD81  +
mov esi [esi+4] +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_101BFA4  +
mov ecx [ebp+arg_4] +
add eax 10h +
push eax  +
call sub_101BB56  +
test al al +
jnz loc_101BFA4  +
lea eax [ebp+var_4] +
jmp loc_101BFAA  +
mov [ebp+arg_4] esi +
lea eax [ebp+arg_4] +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+4] +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call sub_101BE22  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov ebx ecx +
mov ecx [ebp+arg_8] +
movs   +
mov [ebp+var_20] ecx +
mov ecx [eax] +
mov eax [eax+4] +
movs   +
mov [ebp+var_8] eax +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_24] +
mov [ebp+var_C] ecx +
push eax  +
mov ecx ebx +
call sub_101BF74  +
mov eax [eax] +
cmp eax [ebx+4] +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_101C055  +
xor eax eax +
inc eax  +
jmp loc_101C05F  +
mov eax [eax+28h] +
mov ecx [ebp+var_20] +
mov [ecx] eax +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push [ebp+arg_4]  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_101C002  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+8] 7FFFFFEh +
jb loc_101C0F5  +
push offset aMapSetTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov eax [edi+4] +
mov esi [ebp+10h] +
push 0  +
push dword ptr [ebp+14h]  +
push eax  +
push esi  +
push eax  +
call sub_101BF0F  +
inc dword ptr [edi+8]  +
mov ebx eax +
mov eax [edi+4] +
cmp esi eax +
jnz loc_101C121  +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [eax] ebx +
mov eax [edi+4] +
jmp loc_101C13F  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_101C134  +
mov [esi] ebx +
mov eax [edi+4] +
cmp esi [eax] +
jnz loc_101C142  +
mov [eax] ebx +
jmp loc_101C142  +
mov [esi+8] ebx +
mov eax [edi+4] +
cmp esi [eax+8] +
jnz loc_101C142  +
mov [eax+8] ebx +
mov esi ebx +
lea eax [ebx+4] +
jmp loc_101C1DC  +
mov ecx [eax] +
mov edx [ecx+4] +
cmp ecx [edx] +
jnz loc_101C18D  +
mov edx [edx+8] +
cmp byte ptr [edx+30h] 0 +
jz loc_101C195  +
cmp esi [ecx+8] +
jnz loc_101C16D  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_101BD35  +
mov eax [esi+4] +
mov byte ptr [eax+30h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+30h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_101BBBD  +
jmp loc_101C1D9  +
mov edx [edx] +
cmp byte ptr [edx+30h] 0 +
jnz loc_101C1AD  +
mov byte ptr [ecx+30h] 1 +
mov byte ptr [edx+30h] 1 +
mov ecx [eax] +
mov ecx [ecx+4] +
mov byte ptr [ecx+30h] 0 +
mov eax [eax] +
mov esi [eax+4] +
jmp loc_101C1D9  +
cmp esi [ecx] +
jnz loc_101C1BB  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_101BBBD  +
mov eax [esi+4] +
mov byte ptr [eax+30h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+30h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_101BD35  +
lea eax [esi+4] +
mov ecx [eax] +
cmp byte ptr [ecx+30h] 0 +
jz loc_101C14C  +
mov eax [edi+4] +
mov eax [eax+4] +
mov byte ptr [eax+30h] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
mov eax [ecx+8] +
mov edx [ebp+8] +
mov esi 3FFFFFFFh +
sub esi eax +
cmp esi edx +
jnb loc_101C24C  +
push offset aListTTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
add eax edx +
mov [ecx+8] eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov edi [ebp+0Ch] +
cmp byte ptr [edi+31h] 0 +
jz loc_101C2A8  +
push offset aInvalidMapSetT  +
lea ecx [ebp-2Ch] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-54h] +
call sub_1006D24  +
push offset dword_101DF54  +
lea eax [ebp-54h] +
push eax  +
mov dword ptr [ebp-54h] offset off_10016B0 +
call _CxxThrowException  +
lea ecx [ebp+0Ch] +
call sub_10066DC  +
mov edx [edi] +
cmp byte ptr [edx+31h] 0 +
jz loc_101C2BD  +
mov ebx [edi+8] +
jmp loc_101C2D6  +
mov eax [edi+8] +
cmp byte ptr [eax+31h] 0 +
jz loc_101C2CA  +
mov ebx edx +
jmp loc_101C2D6  +
mov eax [ebp+0Ch] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp eax edi +
jnz loc_101C33F  +
cmp byte ptr [ebx+31h] 0 +
mov esi [edi+4] +
jnz loc_101C2E2  +
mov [ebx+4] esi +
mov ecx [ebp-10h] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_101C2F2  +
mov [eax+4] ebx +
jmp loc_101C2FD  +
cmp [esi] edi +
jnz loc_101C2FA  +
mov [esi] ebx +
jmp loc_101C2FD  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_101C31C  +
cmp byte ptr [ebx+31h] 0 +
jz loc_101C30E  +
mov eax esi +
jmp loc_101C317  +
push ebx  +
call sub_10052B4  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_101C39B  +
cmp byte ptr [ebx+31h] 0 +
jz loc_101C32E  +
mov eax esi +
jmp loc_101C337  +
push ebx  +
call sub_101BB9F  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [edx+8] eax +
jmp loc_101C39B  +
mov [edx+4] eax +
mov edx [edi] +
mov [eax] edx +
cmp eax [edi+8] +
jnz loc_101C34F  +
mov esi eax +
jmp loc_101C368  +
cmp byte ptr [ebx+31h] 0 +
mov esi [eax+4] +
jnz loc_101C35B  +
mov [ebx+4] esi +
mov [esi] ebx +
mov edx [edi+8] +
mov [ecx] edx +
mov ecx [edi+8] +
mov [ecx+4] eax +
mov ecx [ebp-10h] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_101C378  +
mov [ecx+4] eax +
jmp loc_101C386  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_101C383  +
mov [ecx] eax +
jmp loc_101C386  +
mov [ecx+8] eax +
mov ecx [edi+4] +
mov [eax+4] ecx +
mov cl [eax+30h] +
mov dl [edi+30h] +
mov [eax+30h] dl +
mov [edi+30h] cl +
mov ecx [ebp-10h] +
cmp byte ptr [edi+30h] 1 +
jnz loc_101C4A5  +
jmp loc_101C45F  +
cmp byte ptr [ebx+30h] 1 +
jnz loc_101C4A1  +
mov eax [esi] +
cmp ebx eax +
jnz loc_101C426  +
mov eax [esi+8] +
cmp byte ptr [eax+30h] 0 +
jnz loc_101C3D7  +
mov byte ptr [eax+30h] 1 +
push esi  +
mov byte ptr [esi+30h] 0 +
call sub_101BD35  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+31h] 0 +
jnz loc_101C45A  +
mov edx [eax] +
cmp byte ptr [edx+30h] 1 +
jnz loc_101C3EE  +
mov edx [eax+8] +
cmp byte ptr [edx+30h] 1 +
jz loc_101C456  +
mov edx [eax+8] +
cmp byte ptr [edx+30h] 1 +
jnz loc_101C40D  +
mov edx [eax] +
mov byte ptr [edx+30h] 1 +
push eax  +
mov byte ptr [eax+30h] 0 +
call sub_101BBBD  +
mov eax [esi+8] +
mov ecx [ebp-10h] +
mov dl [esi+30h] +
mov [eax+30h] dl +
mov byte ptr [esi+30h] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+30h] 1 +
call sub_101BD35  +
jmp loc_101C4A1  +
cmp byte ptr [eax+30h] 0 +
jnz loc_101C43F  +
mov byte ptr [eax+30h] 1 +
push esi  +
mov byte ptr [esi+30h] 0 +
call sub_101BBBD  +
mov eax [esi] +
mov ecx [ebp-10h] +
cmp byte ptr [eax+31h] 0 +
jnz loc_101C45A  +
mov edx [eax+8] +
cmp byte ptr [edx+30h] 1 +
jnz loc_101C46D  +
mov edx [eax] +
cmp byte ptr [edx+30h] 1 +
jnz loc_101C46D  +
mov byte ptr [eax+30h] 0 +
mov ebx esi +
mov esi [esi+4] +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jnz loc_101C3AA  +
jmp loc_101C4A1  +
mov edx [eax] +
cmp byte ptr [edx+30h] 1 +
jnz loc_101C48B  +
mov edx [eax+8] +
mov byte ptr [edx+30h] 1 +
push eax  +
mov byte ptr [eax+30h] 0 +
call sub_101BD35  +
mov eax [esi] +
mov ecx [ebp-10h] +
mov dl [esi+30h] +
mov [eax+30h] dl +
mov byte ptr [esi+30h] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+30h] 1 +
call sub_101BBBD  +
mov byte ptr [ebx+30h] 1 +
push edi  +
call sub_101CD94  +
pop ecx  +
mov ecx [ebp-10h] +
mov eax [ecx+8] +
test eax eax +
jbe loc_101C4BA  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
lea edi [eax+4] +
push dword ptr [edi]  +
mov ebx ecx +
push eax  +
call sub_101BE9E  +
push 1  +
mov ecx ebx +
mov esi eax +
call sub_101C204  +
mov [edi] esi +
mov eax [esi+4] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
mov esi [eax+4] +
mov ebx eax +
mov al 1 +
mov byte ptr [ebp+var_8] al +
jmp loc_101C53F  +
mov ecx [ebp+arg_4] +
lea eax [esi+10h] +
push eax  +
mov ebx esi +
call sub_101BB56  +
mov byte ptr [ebp+var_8] al +
test al al +
jz loc_101C53C  +
mov esi [esi] +
jmp loc_101C53F  +
mov esi [esi+8] +
cmp byte ptr [esi+31h] 0 +
jz loc_101C523  +
mov esi ebx +
mov [ebp+var_4] esi +
test al al +
jz loc_101C57E  +
mov eax [edi+4] +
cmp ebx [eax] +
jnz loc_101C573  +
push [ebp+arg_4]  +
push ebx  +
push 1  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx edi +
call sub_101C0B3  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
jmp loc_101C59F  +
lea ecx [ebp+var_4] +
call sub_101BC0B  +
mov esi [ebp+var_4] +
push [ebp+arg_4]  +
lea ecx [esi+10h] +
call sub_101BB56  +
test al al +
jz loc_101C596  +
push [ebp+arg_4]  +
push ebx  +
push [ebp+var_8]  +
jmp loc_101C55B  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_101C5D1  +
cmp [ebp+arg_8] eax +
jnz loc_101C5D1  +
mov ecx esi +
call sub_101BF47  +
mov eax [esi+4] +
mov ecx [eax] +
jmp loc_101C5F6  +
cmp ecx [ebp+arg_8] +
jz loc_101C5F6  +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
call sub_10066DC  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_101C25E  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_101C5D7  +
pop edi  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101C4CF  +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+8] 0 +
jnz loc_101C651  +
push [ebp+arg_8]  +
push dword ptr [ebx+4]  +
push 1  +
push [ebp+arg_0]  +
call sub_101C0B3  +
mov eax [ebp+arg_0] +
jmp loc_101C73A  +
mov eax [ebx+4] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_4] eax +
cmp esi [eax] +
jnz loc_101C68C  +
lea eax [esi+10h] +
push eax  +
mov ecx edi +
call sub_101BB56  +
test al al +
jz loc_101C725  +
push edi  +
mov ecx ebx +
push esi  +
push 1  +
push [ebp+arg_0]  +
call sub_101C0B3  +
mov eax [ebp+arg_0] +
jmp loc_101C738  +
cmp esi eax +
jnz loc_101C6AC  +
mov esi [eax+8] +
push edi  +
lea ecx [esi+10h] +
call sub_101BB56  +
test al al +
jz loc_101C725  +
push edi  +
push esi  +
push 0  +
mov ecx ebx +
jmp loc_101C67C  +
lea eax [esi+10h] +
push eax  +
mov ecx edi +
call sub_101BB56  +
test al al +
jz loc_101C6DB  +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] esi +
call sub_101BC0B  +
mov ecx [ebp+arg_8] +
push edi  +
add ecx 10h +
call sub_101BB56  +
test al al +
jz loc_101C6DB  +
mov eax [ebp+arg_8] +
jmp loc_101C70D  +
push edi  +
lea ecx [esi+10h] +
call sub_101BB56  +
test al al +
jz loc_101C725  +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] esi +
call sub_10066DC  +
mov esi [ebp+arg_8] +
cmp esi [ebp+var_4] +
jz loc_101C70A  +
lea eax [esi+10h] +
push eax  +
mov ecx edi +
call sub_101BB56  +
test al al +
jz loc_101C725  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
cmp byte ptr [ecx+31h] 0 +
push edi  +
mov ecx ebx +
jz loc_101C679  +
push eax  +
push 0  +
jmp loc_101C67C  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov ecx ebx +
call sub_101C508  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp-4] +
push eax  +
mov ecx esi +
call sub_101C5AB  +
push dword ptr [esi+4]  +
call sub_101CD94  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
mov ebx ecx +
mov ecx [eax] +
mov eax [eax+4] +
movs   +
mov [ebp+var_8] eax +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_24] +
mov [ebp+var_C] ecx +
push eax  +
mov ecx ebx +
call sub_101BF74  +
mov esi [eax] +
cmp esi [ebx+4] +
jnz loc_101C7C2  +
xor eax eax +
inc eax  +
jmp loc_101C7F8  +
mov ecx [ebx+10h] +
mov eax [ecx] +
cmp eax ecx +
jz loc_101C7D9  +
mov edx [esi+28h] +
cmp [eax+8] edx +
jnb loc_101C7D9  +
mov eax [eax] +
cmp eax ecx +
jnz loc_101C7CE  +
lea ecx [esi+28h] +
push ecx  +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebx+0Ch] +
call sub_101C605  +
push esi  +
lea eax [ebp+var_20] +
push eax  +
mov ecx ebx +
call sub_101C25E  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_101BD81  +
mov ebx eax +
cmp ebx [esi+4] +
jz loc_101C83C  +
mov ecx [ebp+arg_0] +
lea eax [ebx+10h] +
push eax  +
call sub_101BB56  +
test al al +
jz loc_101C860  +
mov esi [ebp+arg_0] +
push edi  +
push 6  +
pop ecx  +
lea eax [ebp+var_24] +
push eax  +
lea edi [ebp+var_24] +
movs   +
mov ecx [ebp+var_4] +
and [ebp+var_C] 0 +
push ebx  +
lea eax [ebp+arg_0] +
push eax  +
call sub_101C629  +
mov ebx [eax] +
pop edi  +
pop esi  +
lea eax [ebx+28h] +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
mov edi [ecx+8] +
mov [ebp+var_8] eax +
lea eax [ebp+var_1C] +
mov [ebp+var_20] ecx +
mov [ebp+var_C] edx +
push eax  +
test edi edi +
jz loc_101C91A  +
lea eax [ebp+var_24] +
push eax  +
call sub_101BF74  +
mov eax [eax] +
mov esi [ebp+var_20] +
cmp eax [esi+4] +
jnz loc_101C910  +
cmp dword ptr [esi+14h] 0 +
jz loc_101C90C  +
mov eax [esi+10h] +
mov eax [eax] +
mov eax [eax+8] +
lea ecx [esi+0Ch] +
mov [ebx] eax +
call sub_101BFBB  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx esi +
call sub_101C80E  +
mov ecx [ebx] +
mov [eax] ecx +
jmp loc_101C931  +
mov [ebx] edi +
jmp loc_101C8FB  +
mov eax [eax+28h] +
mov [ebx] eax +
xor eax eax +
inc eax  +
jmp loc_101C933  +
and dword ptr [ebx] 0 +
call sub_101C80E  +
mov ecx [ebx] +
mov [eax] ecx +
mov ecx [ebp+var_20] +
add ecx 0Ch +
call sub_10168B5  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_101C778  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push [ebp+arg_4]  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_101C892  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi [ebp+0Ch] +
mov [ebp-6Ch] esi +
test ebx ebx +
jnz loc_101C9EB  +
mov eax 80070057h +
jmp loc_101CA30  +
and dword ptr [ebx] 0 +
push edi  +
push 32h  +
lea eax [ebp-68h] +
push eax  +
push esi  +
call ds:StringFromGUID2  +
push 4  +
pop ecx  +
mov edi offset dword_10027D8 +
xor eax eax +
cmps   +
jz loc_101CA1B  +
mov esi [ebp-6Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1002318 +
xor eax eax +
cmps   +
jnz loc_101CA2A  +
mov eax [ebp+8] +
mov [ebx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
jmp loc_101CA2F  +
mov eax 80004002h +
pop edi  +
mov ecx [ebp-4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002274 +
jz loc_101CA7B  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_101CAAE  +
test esi esi +
jz loc_101CAAE  +
push 1  +
mov ecx esi +
call sub_101CA60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_1002274 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi eax +
jmp loc_101CAF7  +
push [ebp+arg_0]  +
lea eax [esi+0Ch] +
push eax  +
call sub_1009BBD  +
test al al +
jz loc_101CAF3  +
mov esi [esi+8] +
jmp loc_101CAF7  +
mov edi esi +
mov esi [esi] +
cmp byte ptr [esi+2Dh] 0 +
jz loc_101CADE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi eax +
jmp loc_101CB34  +
lea eax [esi+0Ch] +
push eax  +
push [ebp+arg_0]  +
call sub_1009BBD  +
test al al +
jz loc_101CB31  +
mov edi esi +
mov esi [esi] +
jmp loc_101CB34  +
mov esi [esi+8] +
cmp byte ptr [esi+2Dh] 0 +
jz loc_101CB1B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jz loc_101CB6B  +
push esi  +
mov esi [ebp+arg_8] +
inc dword ptr [esi]  +
lea ecx [ebp+arg_0] +
call sub_10051E2  +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_101CB58  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
call sub_101CB0A  +
push [ebp+arg_4]  +
mov ecx edi +
mov esi eax +
call sub_101CACD  +
mov ecx [ebp+arg_0] +
pop edi  +
mov [ecx] eax +
mov [ecx+4] esi +
mov eax ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101CB47  +
add esp 10h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
mov esi ecx +
call sub_101CB72  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_101CBA4  +
add esp 0Ch +
push [ebp+var_4]  +
lea eax [ebp+var_4] +
push [ebp+var_8]  +
mov ecx esi +
push eax  +
call sub_100A8AD  +
mov eax [ebp+arg_0] +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+10h] +
push 70h  +
lea eax [ebp-84h] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+0Ch] +
add esp 0Ch +
test eax eax +
jle loc_101CD45  +
push ebx  +
push edi  +
lea ebx [esi+0Ch] +
mov [ebp-88h] eax +
mov eax [ebx-0Ch] +
cmp eax 0Ah +
jnz loc_101CCD6  +
cmp dword ptr [ebx-4] 2 +
mov esi ebx +
lea edi [ebp-14h] +
movs   +
movs   +
movs   +
movs   +
jnz loc_101CD34  +
lea eax [ebp-14h] +
push eax  +
mov ecx offset unk_101F9C0 +
call sub_101C949  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-94h] +
mov edi offset unk_101F9B4 +
push eax  +
mov ecx edi +
call sub_101CB72  +
mov ecx [eax] +
mov esi [eax+4] +
mov [ebp-8Ch] ecx +
jmp loc_101CCBD  +
add ecx 1Ch +
push ecx  +
mov ecx offset unk_101F97C +
call sub_101C949  +
lea ecx [ebp-8Ch] +
call sub_10051E2  +
mov ecx [ebp-8Ch] +
cmp ecx esi +
jnz loc_101CC9E  +
lea eax [ebp-14h] +
push eax  +
mov ecx edi +
call sub_101CBC5  +
mov eax offset unk_101F9A4 +
lea esi [ebp-14h] +
jmp loc_101CD1E  +
cmp eax 0Dh +
jnz loc_101CD01  +
cmp dword ptr [ebx-4] 9 +
jnz loc_101CD34  +
push 4  +
mov eax offset unk_101F9D8 +
pop ecx  +
mov edi eax +
mov esi ebx +
xor edx edx +
cmps   +
jnz loc_101CD34  +
and dword_101F940 edx +
and dword_101F944 edx +
jmp loc_101CD29  +
cmp eax 0Bh +
jnz loc_101CD34  +
cmp dword ptr [ebx-4] 5 +
jnz loc_101CD34  +
push ebx  +
mov ecx offset unk_101F958 +
call sub_101C949  +
mov eax offset unk_101F948 +
mov esi ebx +
push 4  +
xor edx edx +
pop ecx  +
mov edi eax +
cmps   +
jnz loc_101CD34  +
mov edi eax +
mov esi offset dword_1001260 +
movs   +
movs   +
movs   +
movs   +
add ebx 30h +
dec dword ptr [ebp-88h]  +
jnz loc_101CC51  +
pop edi  +
pop ebx  +
lea eax [ebp-84h] +
push eax  +
call sub_10028A5  +
mov ecx [ebp-4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_101D138  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ??0exception@@QAE@XZ  +
cmp dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_10014D0 +
jnz loc_101CD8B  +
cmp dword ptr [esi+8] 0 +
jnz loc_101CD8B  +
mov eax off_101F8DC +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ds:malloc +
jmp loc_101CDC3  +
push dword ptr [ebp+8]  +
call _callnewh  +
pop ecx  +
test eax eax +
jz loc_101CDD0  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
test eax eax +
jz loc_101CDB6  +
pop esi  +
leave   +
retn   +
***
test byte ptr dword_101F9FC 1 +
mov esi offset dword_101F9F0 +
jnz loc_101CDF7  +
or dword_101F9FC 1 +
mov ecx esi +
call sub_101CD67  +
push offset loc_101DDDC  +
call sub_101D47F  +
pop ecx  +
push esi  +
lea ecx [ebp-0Ch] +
call sub_1004232  +
push offset dword_101DDF0  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
push 44h  +
mov eax offset loc_101DC4E +
call __EH_prolog3  +
push offset aStringTooLong  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D9D  +
push offset dword_101DEFC  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
push 44h  +
mov eax offset loc_101DC4E +
call __EH_prolog3  +
push offset aInvalidStringP  +
lea ecx [ebp-28h] +
call sub_1006E7B  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_1006D24  +
push offset dword_101DF54  +
lea eax [ebp-50h] +
push eax  +
mov dword ptr [ebp-50h] offset off_10016B0 +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101CEB1  +
test eax eax +
jnz loc_101CEB6  +
mov ecx [esi] +
test ecx ecx +
jz loc_101CEAE  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101CEA2  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_101FA24 +
push offset dword_101FA14  +
push dword_101FA20  +
mov dword_101FA14 eax +
push offset dword_101FA04  +
push offset dword_101FA08  +
push offset dword_101FA00  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_101FA10 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_101CF3E  +
cmp eax esi +
jnz loc_101CF31  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101CF41  +
push 3E8h  +
call ds:Sleep  +
jmp loc_101CF18  +
xor esi esi +
inc esi  +
mov eax dword_101FD4C +
cmp eax esi +
jnz loc_101CF54  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_101CF8F  +
mov eax dword_101FD4C +
test eax eax +
jnz loc_101CF89  +
mov dword_101FD4C esi +
push offset dword_1001228  +
push offset dword_100121C  +
call sub_101CE95  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101CF8F  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_101D059  +
mov dword_101FA1C esi +
mov eax dword_101FD4C +
cmp eax esi +
jnz loc_101CFB3  +
push offset dword_1001218  +
push offset dword_10011E4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101FD4C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_101CFC0  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_101FD5C ebx +
jz loc_101CFE1  +
push offset dword_101FD5C  +
call sub_101D679  +
pop ecx  +
test eax eax +
jz loc_101CFE1  +
push ebx  +
push 2  +
push ebx  +
call dword_101FD5C  +
push dword_101FA04  +
push dword_101FA08  +
push dword_101FA00  +
call sub_100A2D0  +
add esp 0Ch +
mov dword_101FA18 eax +
cmp dword_101FA0C ebx +
jnz loc_101D03F  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_101FA18 eax +
xor ebx ebx +
cmp dword_101FA0C ebx +
jnz loc_101D03F  +
push eax  +
call ds:_exit  +
cmp dword_101FA1C ebx +
jnz loc_101D04D  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101FA18 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_101D076  +
xor eax eax +
jmp loc_101D0C3  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101D072  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101D0B0  +
cmp ecx 20Bh +
jnz loc_101D072  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101D072  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101D0BE  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101D072  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_101FA0C eax +
call sub_101D812  +
push eax  +
call ds:__set_app_type  +
or dword_101FD54 0FFFFFFFFh +
or dword_101FD58 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_101FA2C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101FA28 +
mov [eax] ecx +
call sub_101D7A4  +
cmp dword_101F8F8 0 +
jnz loc_101D11C  +
push offset sub_101D7A4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101D78C  +
xor eax eax +
retn   +
***
call sub_101D851  +
jmp sub_101CEF6  +
***
cmp ecx dword_101F8E4 +
jnz loc_101D143  +
retn 0  +
jmp loc_101D8E7  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_101D179  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
jmp ds:?what@exception@@UBEPBDXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2D0h +
mov eax dword_101F8E4 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_2D0] 10001h +
mov [ebp+var_20C] eax +
mov eax [eax-4] +
push offset OutputString  +
mov [ebp+var_21C] eax +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101D138  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_101D217  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_101D2F8  +
push esi  +
call sub_101CD94  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ds:__CxxFrameHandler3  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101F8E4 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101F8E4 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101F8E4 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_101D138  +
jmp __EH_epilog3  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_101D3F5  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_101D4E1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_101D4FD  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_101D519  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_101D55A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_101D527  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_101D555  +
cmp edx [esp+arg_4] +
ja loc_101D555  +
jb loc_101D556  +
cmp eax [esp+arg_0] +
jbe loc_101D556  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_101D564  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101D5B8  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101D5B8  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101D5B2  +
cmp eax 19930521h +
jz loc_101D5B2  +
cmp eax 19930522h +
jz loc_101D5B2  +
cmp eax 1994000h +
jnz loc_101D5B8  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_101D578+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101D606  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101D602  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101D66D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101D665  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101D66F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101D655  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101D5F0  +
pop ecx  +
test eax eax +
jz loc_101D6D6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101D630  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101D6D6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101D6DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101D138  +
push offset dword_101F8E4  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101D805  +
cmp ecx 0FFFFFFFFh +
jz loc_101D805  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101D7FE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101D7FE  +
cmp edx 10000000h +
jnb loc_101D7FE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101D7FE  +
jmp loc_101D7F9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101D847  +
push eax  +
call sub_101D7AC  +
test eax eax +
jz loc_101D847  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101D83C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101D847  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101F8E4 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101D883  +
test eax ebx +
jz loc_101D883  +
not eax  +
mov dword_101F8E8 eax +
jmp loc_101D8DE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101D8CA  +
test dword_101F8E4 ebx +
jnz loc_101D8CF  +
mov esi 0BB40E64Fh +
mov dword_101F8E4 esi +
not esi  +
mov dword_101F8E8 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_101FB30 eax +
mov dword_101FB2C ecx +
mov dword_101FB28 edx +
mov dword_101FB24 ebx +
mov dword_101FB20 esi +
mov dword_101FB1C edi +
mov word_101FB48 ss +
mov word_101FB3C cs +
mov word_101FB18 ds +
mov word_101FB14 es +
mov word_101FB10 fs +
mov word_101FB0C gs +
pushf   +
pop dword_101FB40  +
mov eax [ebp+0] +
mov dword_101FB34 eax +
mov eax [ebp+4] +
mov dword_101FB38 eax +
lea eax [ebp+8] +
mov dword_101FB44 eax +
mov eax [ebp-320h] +
mov dword_101FA80 10001h +
mov eax dword_101FB38 +
mov dword_101FA3C eax +
mov dword_101FA30 0C0000409h +
mov dword_101FA34 1 +
mov eax dword_101F8E4 +
mov [ebp-328h] eax +
mov eax dword_101F8E8 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101DE84 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101DED8 +
jmp loc_101D304  +
***
mov al ds:548BFFFFh +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-154h] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-4] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101DFBC +
jmp loc_101D304  +
***
push dword ptr [ebp-14h]  +
call sub_101CD94  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101DFE8 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1820h] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-8] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E040 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E06C +
jmp loc_101D304  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-220h] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-4] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E0A8 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-160h] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-4] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E0DC +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14Ch] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-4] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E110 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-124h] +
xor ecx eax +
call sub_101D138  +
mov ecx [edx-4] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E144 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E170 +
jmp loc_101D304  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_101D138  +
mov eax offset dword_101E19C +
jmp loc_101D304  +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_10012E0 +
mov edi offset unk_101F0C4 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1001260 +
mov edi offset unk_101F994 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1001260 +
mov edi offset unk_101F9A4 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1001260 +
mov edi offset unk_101F9D8 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1001260 +
mov edi offset unk_101F948 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
call sub_101D47F  +
pop ecx  +
retn   +
***
jmp fword ptr (byte_101EDFF-101EE5Fh)[eax]  +
***
add [ecx] eax +
call sub_101D47F  +
pop ecx  +
retn   +
***
push offset byte_101DDAF  +
call sub_101D47F  +
pop ecx  +
retn   +
***
call sub_101D47F  +
pop ecx  +
retn   +
***
call sub_101D47F  +
pop ecx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_10012E0 +
mov edi offset unk_101F8C0 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
cdq   +
retf   +
***
retf   +
***
mov dword_101F9F0 offset off_10014D0 +
mov ecx offset dword_101F9F0 +
jmp ??1exception@@UAE@XZ  +
***
arpl [ebp+73h] sp +
jnb $+2  +
iret   +
***
