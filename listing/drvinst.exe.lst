mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+28h] +
xor ecx ecx +
cmp eax ecx +
jz loc_102BC53  +
mov edx [ebp+0Ch] +
sub edx ecx +
jz loc_102BC41  +
dec edx  +
jnz loc_102BC53  +
mov cl [ebp+10h] +
mov [eax+28h] cl +
mov ecx [ebp+14h] +
mov [eax+10h] ecx +
mov ecx [ebp+18h] +
mov [eax+14h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+18h] ecx +
mov ecx [ebp+20h] +
mov dword ptr [eax+24h] 1 +
jmp loc_102BC50  +
mov [eax+24h] ecx +
mov [eax+28h] cl +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
mov ecx [eax] +
or ecx [eax+4] +
jz loc_102BC6F  +
xor eax eax +
jmp loc_102BC7F  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EtwEventRegister  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jnz loc_102BCA0  +
xor eax eax +
jmp loc_102BCAF  +
push ecx  +
push eax  +
call ds:EtwEventUnregister  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_102BD3C  +
cmp word ptr [edx] 0 +
jnz loc_102BD21  +
push 0Eh  +
jmp loc_102BD3E  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102BD27  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_102BD3F  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_102BD50  +
cmp word ptr [edx] 0 +
jnz loc_102BD55  +
mov edx offset aNull +
jmp loc_102BD55  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_102BDCF  +
dec eax  +
jz loc_102BDC6  +
push 57h  +
pop eax  +
jmp loc_102BE3D  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_102BDF5  +
push dword ptr [ebp+14h]  +
call ds:EtwGetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:EtwGetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:EtwGetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_102BE1E  +
cmp dword ptr [esi+10h] 0 +
jz loc_102BE1E  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_102BE3B  +
test cl 2 +
jz loc_102BE2C  +
mov esi [esi+10h] +
test esi esi +
jz loc_102BE2C  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_103D000 +
push edi  +
mov edi offset dword_103D560 +
jmp loc_102BE88  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_102BDA0  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:EtwRegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_102BE5F  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi off_103D000 +
push edi  +
mov edi offset off_103D000 +
cmp esi edi +
jz loc_102BED4  +
jmp loc_102BECA  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_102BEC8  +
push ecx  +
push eax  +
call ds:EtwUnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_102BEAC  +
mov off_103D000 edi +
pop edi  +
pop esi  +
retn   +
***
push 0Ch  +
push offset dword_103A250  +
call __SEH_prolog4  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
push dword ptr [eax+20h]  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_10313A0  +
jmp loc_102BF3C  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
push dword ptr [ebp-1Ch]  +
push offset aExceptionInDrv  +
push 0  +
push 23h  +
call ds:DbgPrintEx  +
add esp 10h +
push dword ptr [ebp-1Ch]  +
call ds:RtlNtStatusToDosError  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
xor edi edi +
push edi  +
push edi  +
push [ebp+lpParameter]  +
mov [ebp+ExitCode] edi +
push [ebp+lpStartAddress]  +
push edi  +
push edi  +
call ds:CreateThread  +
mov [ebp+hThread] eax +
cmp eax edi +
jnz loc_102BF83  +
call ds:__imp_GetLastError  +
mov [ebp+ExitCode] eax +
jmp loc_102C07E  +
mov ecx dword_103D09C +
push ebx  +
push esi  +
mov [ebp+Handles] ecx +
mov [ebp+var_10] eax +
mov esi 102h +
push edi  +
push [ebp+dwMilliseconds]  +
lea eax [ebp+Handles] +
push edi  +
push eax  +
push 2  +
call ds:WaitForMultipleObjectsEx  +
mov ebx eax +
mov [ebp+hObject] ebx +
cmp ebx esi +
jnz loc_102BFBA  +
call ds:IsDebuggerPresent  +
test eax eax +
jnz loc_102BF96  +
cmp ebx edi +
jz loc_102BF96  +
cmp ebx esi +
mov ebx ds:CloseHandle +
jnz loc_102C051  +
cmp dword_103D0B0 edi +
jz loc_102C048  +
push offset Name  +
xor esi esi +
push edi  +
inc esi  +
push 2  +
mov dword_103D0B4 esi +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
cmp eax edi +
jnz loc_102BFFD  +
call ds:__imp_GetLastError  +
mov [ebp+ExitCode] eax +
jmp loc_102C077  +
push eax  +
call ds:SetEvent  +
push [ebp+hObject]  +
call ebx  +
mov dword_103D0AC esi +
mov dword_103D0B0 edi +
call ds:SetupGetThreadLogToken  +
mov ecx eax +
or ecx edx +
jz loc_102C038  +
push offset aTimedOutWaitin  +
push 2  +
push offset __ImageBase  +
push edx  +
push eax  +
call ds:SetupWriteTextLog  +
add esp 14h +
push [ebp+dwMilliseconds]  +
push [ebp+lpParameter]  +
push [ebp+lpStartAddress]  +
call sub_102BF50  +
jmp loc_102BFF8  +
mov [ebp+ExitCode] 5B4h +
jmp loc_102C077  +
cmp [ebp+hObject] 1 +
jnz loc_102C06A  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hThread]  +
call ds:GetExitCodeThread  +
test eax eax +
jnz loc_102C077  +
jmp loc_102BFF2  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_102BFF2  +
mov [ebp+ExitCode] 0Dh +
push [ebp+hThread]  +
call ebx  +
pop esi  +
pop ebx  +
mov eax [ebp+ExitCode] +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_23C] eax +
mov eax [ebp+arg_10] +
push esi  +
mov [ebp+var_24C] eax +
mov eax [ebp+arg_14] +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_240] eax +
mov [ebp+hMem] esi +
mov [ebp+uBytes] esi +
call ds:SetupGetThreadLogToken  +
push esi  +
push 1  +
mov [ebp+var_248] eax +
mov [ebp+var_244] edx +
call ds:SetupSetThreadLogToken  +
push esi  +
push esi  +
call ds:SetupDiCreateDeviceInfoList  +
mov [ebp+DeviceInfoSet] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102C10D  +
call ds:__imp_GetLastError  +
mov edi eax +
jmp loc_102C2AB  +
lea ecx [ebp+DeviceInfoData] +
push ecx  +
push esi  +
push esi  +
push edi  +
push eax  +
mov [ebp+DeviceInfoData.cbSize] 1Ch +
call ds:SetupDiOpenDeviceInfoW  +
test eax eax +
jnz loc_102C139  +
call ds:__imp_GetLastError  +
mov edi eax +
jmp loc_102C28B  +
cmp ebx esi +
jz loc_102C196  +
cmp [ebp+var_23C] esi +
jz loc_102C196  +
push [ebp+var_23C]  +
push ebx  +
call sub_1035183  +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call pSetupDiBuildInfoDataFromStrongName  +
test eax eax +
jz loc_102C12C  +
push 1  +
push [ebp+var_240]  +
lea eax [ebp+DeviceInfoData] +
push [ebp+var_24C]  +
push [ebp+arg_C]  +
push eax  +
push [ebp+DeviceInfoSet]  +
call SetupDiReportDeviceInstallError  +
test eax eax +
jz loc_102C12C  +
xor edi edi +
jmp loc_102C28B  +
mov edi ds:SetupDiGetDevicePropertyW +
push esi  +
lea ecx [ebp+uBytes] +
push ecx  +
mov eax 208h +
push eax  +
mov [ebp+uBytes] eax +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_234] +
push eax  +
push offset aCGjci@fsbt?w  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call edi  +
test eax eax +
jz loc_102C288  +
cmp [ebp+var_234] 12h +
jnz loc_102C288  +
push esi  +
lea eax [ebp+uBytes] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+var_234] +
push eax  +
mov ebx offset aCGjci@fsbt?w_0 +
push ebx  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
mov [ebp+uBytes] esi +
call edi  +
cmp [ebp+uBytes] 2 +
jb loc_102C288  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102C288  +
push [ebp+uBytes]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jnz loc_102C243  +
push 8  +
jmp loc_102C28A  +
push esi  +
lea ecx [ebp+uBytes] +
push ecx  +
push [ebp+uBytes]  +
push eax  +
lea eax [ebp+var_234] +
push eax  +
push ebx  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call edi  +
test eax eax +
jz loc_102C288  +
cmp [ebp+var_234] 12h +
jnz loc_102C288  +
push [ebp+hMem]  +
lea eax [ebp+var_20C] +
push eax  +
jmp loc_102C14C  +
push 57h  +
pop edi  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiDestroyDeviceInfoList  +
cmp [ebp+hMem] esi +
jz loc_102C2AB  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+var_244]  +
push [ebp+var_248]  +
call ds:SetupSetThreadLogToken  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 18h  +
***
push 84h  +
push offset dword_103A270  +
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp-24h] ebx +
mov [ebp-38h] ebx +
mov [ebp-28h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-48h] ebx +
mov [ebp-20h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-34h] ebx +
mov [ebp-30h] ebx +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:HeapSetInformation  +
push 8001h  +
call ds:SetErrorMode  +
mov esi offset unk_103D540 +
push esi  +
call sub_102BD78  +
mov dword_103D560 offset dword_1007DC8 +
mov off_103D000 esi +
push offset aMicrosoftPlugp  +
call sub_102BE49  +
mov eax off_103D000 +
cmp eax offset off_103D000 +
jz loc_102C366  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_102C366  +
push offset dword_1007CB8  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_102BCB9  +
push offset dword_103D060  +
push offset unk_103D068  +
push offset loc_102BC05  +
push offset dword_1007CC8  +
call sub_102BC5C  +
call sub_10358BF  +
test eax eax +
jnz loc_102C396  +
call ds:__imp_GetLastError  +
mov [ebp-1Ch] eax +
jmp loc_102C8F6  +
call sub_1031514  +
test eax eax +
jz loc_102C3AB  +
mov dword ptr [ebp-1Ch] 0E0000235h +
jmp loc_102C8F6  +
call ds:SetupGetNonInteractiveMode  +
test eax eax +
jnz loc_102C3C1  +
mov dword ptr [ebp-1Ch] 5 +
jmp loc_102C8F6  +
call sub_1035D7F  +
test eax eax +
jz loc_102C3B5  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp-6Ch] +
stos   +
push ebx  +
push 18h  +
lea eax [ebp-6Ch] +
push eax  +
push ebx  +
push 0FFFFFFFFh  +
call ds:NtQueryInformationProcess  +
cmp eax ebx +
jge loc_102C3F1  +
push eax  +
call ds:RtlNtStatusToDosError  +
jmp loc_102C38E  +
***
cmp [ebp-58h] ebx +
jz loc_102C8EF  +
cmp dword ptr [ebp-58h] 0FFFFFFFFh +
jz loc_102C8EF  +
push dword ptr [ebp-58h]  +
push ebx  +
push 40h  +
call ds:OpenProcess  +
mov [ebp-24h] eax +
cmp eax ebx +
jz loc_102C388  +
call ds:GetCommandLineW  +
cmp eax ebx +
jnz loc_102C431  +
mov dword ptr [ebp-1Ch] 57h +
jmp loc_102C8F6  +
mov ecx off_103D000 +
cmp ecx offset off_103D000 +
jz loc_102C458  +
test byte ptr [ecx+1Ch] 1 +
jz loc_102C458  +
push eax  +
push offset dword_1007CB8  +
push 0Bh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_102BD0B  +
cmp dword ptr [ebp+8] 2 +
jl loc_102C425  +
lea eax [ebp-38h] +
push eax  +
mov ebx offset aLx +
push ebx  +
mov edi [ebp+0Ch] +
push dword ptr [edi+4]  +
mov esi ds:swscanf +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C48C  +
mov dword ptr [ebp-1Ch] 57h +
xor ebx ebx +
jmp loc_102C8F6  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-38h] +
test eax eax +
jle loc_102C8A8  +
cmp eax 3 +
jle loc_102C688  +
cmp eax 5 +
jle loc_102C4BF  +
cmp eax 6 +
jnz loc_102C8A8  +
call sub_1034087  +
mov [ebp-1Ch] eax +
jmp loc_102C8AF  +
cmp dword ptr [ebp+8] 2 +
jle loc_102C4D7  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push dword ptr [edi+8]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C4DB  +
and dword ptr [ebp-28h] 0 +
cmp dword ptr [ebp+8] 4 +
jle loc_102C4F7  +
lea eax [ebp-3Ch] +
push eax  +
push offset aHx  +
push dword ptr [edi+10h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C4FE  +
mov dword ptr [ebp-3Ch] 0FFFFh +
cmp dword ptr [ebp+8] 5 +
jle loc_102C51A  +
lea eax [ebp-54h] +
push eax  +
push offset aI64x  +
push dword ptr [edi+14h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C522  +
and dword ptr [ebp-54h] 0 +
and dword ptr [ebp-50h] 0 +
cmp dword ptr [ebp+8] 6 +
jle loc_102C53E  +
lea eax [ebp-4Ch] +
push eax  +
push offset aI64x  +
push dword ptr [edi+18h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C546  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
or dword ptr [ebp-48h] 0FFFFFFFFh +
mov ebx [ebp-4Ch] +
lea eax [ebp-20h] +
test ebx ebx +
jz loc_102C5BF  +
push 2  +
push 0  +
push 0  +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
push ebx  +
push dword ptr [ebp-24h]  +
call ds:DuplicateHandle  +
test eax eax +
jz loc_102C719  +
cmp dword ptr [ebp+8] 8 +
jle loc_102C58C  +
lea eax [ebp-4Ch] +
push eax  +
push offset aI64x  +
push dword ptr [edi+20h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C594  +
and dword ptr [ebp-4Ch] 0 +
and dword ptr [ebp-48h] 0 +
mov ebx [ebp-4Ch] +
test ebx ebx +
jz loc_102C5D4  +
push 2  +
push 0  +
push 0  +
lea eax [ebp-2Ch] +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
push ebx  +
push dword ptr [ebp-24h]  +
call ds:DuplicateHandle  +
test eax eax +
jnz loc_102C5D8  +
jmp loc_102C719  +
push eax  +
push 2000000h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
jmp loc_102C568  +
***
and dword ptr [ebp-2Ch] 0 +
mov ebx [ebp+8] +
cmp ebx 9 +
jle loc_102C5F6  +
lea eax [ebp-30h] +
push eax  +
push offset aLx  +
push dword ptr [edi+24h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C5FD  +
xor esi esi +
mov [ebp-30h] esi +
jmp loc_102C5FF  +
xor esi esi +
cmp [ebp-2Ch] esi +
jz loc_102C62F  +
push dword ptr [ebp-30h]  +
push esi  +
push esi  +
push 0F001Fh  +
push dword ptr [ebp-2Ch]  +
call ds:MapViewOfFile  +
mov [ebp-34h] eax +
push dword ptr [ebp-2Ch]  +
call ds:CloseHandle  +
mov [ebp-2Ch] esi +
cmp [ebp-34h] esi +
jz loc_102C719  +
shr dword ptr [ebp-30h] 1 +
cmp ebx 0Ah +
jle loc_102C643  +
mov eax [edi+28h] +
cmp [eax] si +
jz loc_102C643  +
mov ecx eax +
jmp loc_102C645  +
xor ecx ecx +
cmp ebx 3 +
jle loc_102C652  +
mov eax [edi+0Ch] +
cmp [eax] si +
jnz loc_102C654  +
xor eax eax +
cmp ebx 7 +
jle loc_102C661  +
mov edi [edi+1Ch] +
cmp [edi] si +
jnz loc_102C663  +
xor edi edi +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-50h]  +
push dword ptr [ebp-54h]  +
push dword ptr [ebp-3Ch]  +
push ecx  +
push eax  +
push edi  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-38h]  +
call sub_102CFC9  +
jmp loc_102C4B7  +
***
cmp dword ptr [ebp+8] 2 +
jle loc_102C6A0  +
lea eax [ebp-28h] +
push eax  +
push ebx  +
push dword ptr [edi+8]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C6A4  +
and dword ptr [ebp-28h] 0 +
cmp dword ptr [ebp+8] 6 +
jle loc_102C6C0  +
lea eax [ebp-54h] +
push eax  +
push offset aI64x  +
push dword ptr [edi+18h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C6C8  +
and dword ptr [ebp-54h] 0 +
and dword ptr [ebp-50h] 0 +
cmp dword ptr [ebp+8] 7 +
jle loc_102C6E4  +
lea eax [ebp-4Ch] +
push eax  +
push offset aI64x  +
push dword ptr [edi+1Ch]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C6EC  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
or dword ptr [ebp-48h] 0FFFFFFFFh +
mov eax [ebp-4Ch] +
mov [ebp-44h] eax +
mov ebx ds:GetCurrentProcess +
test eax eax +
lea eax [ebp-20h] +
jz loc_102C724  +
push 2  +
push 0  +
push 0  +
push eax  +
call ebx  +
push eax  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-24h]  +
call ds:DuplicateHandle  +
test eax eax +
jnz loc_102C735  +
call ds:__imp_GetLastError  +
jmp loc_102C4B7  +
***
push eax  +
push 2000000h  +
call ebx  +
push eax  +
call ds:OpenProcessToken  +
jmp loc_102C715  +
***
cmp dword ptr [ebp+8] 8 +
jle loc_102C751  +
lea eax [ebp-4Ch] +
push eax  +
push offset aI64x_0  +
push dword ptr [edi+20h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C759  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
or dword ptr [ebp-48h] 0FFFFFFFFh +
mov eax [ebp-4Ch] +
mov [ebp-44h] eax +
test eax eax +
jz loc_102C8A8  +
push 2  +
push 0  +
push 0  +
push offset hFile  +
call ebx  +
push eax  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-24h]  +
call ds:DuplicateHandle  +
test eax eax +
jz loc_102C719  +
cmp dword ptr [ebp+8] 9 +
jle loc_102C7A1  +
lea eax [ebp-4Ch] +
push eax  +
push offset aI64x_0  +
push dword ptr [edi+24h]  +
call esi  +
add esp 0Ch +
cmp eax 1 +
jz loc_102C7A9  +
or dword ptr [ebp-4Ch] 0FFFFFFFFh +
or dword ptr [ebp-48h] 0FFFFFFFFh +
mov eax [ebp-4Ch] +
mov [ebp-44h] eax +
xor esi esi +
cmp eax esi +
jz loc_102C8A8  +
push 2  +
push esi  +
push esi  +
push offset hEvent  +
call ebx  +
push eax  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-24h]  +
call ds:DuplicateHandle  +
test eax eax +
jz loc_102C719  +
push esi  +
push esi  +
push esi  +
push esi  +
call ds:CreateEventW  +
mov dword_103D09C eax +
cmp eax esi +
jz loc_102C719  +
call sub_1032CF0  +
mov ecx [ebp-38h] +
mov [ebp-94h] ecx +
mov ecx [ebp-20h] +
mov [ebp-90h] ecx +
cmp dword ptr [ebp+8] 3 +
jle loc_102C815  +
mov ecx [edi+0Ch] +
cmp [ecx] si +
jnz loc_102C817  +
xor ecx ecx +
mov [ebp-8Ch] ecx +
cmp dword ptr [ebp+8] 4 +
jle loc_102C82B  +
mov ecx [edi+10h] +
cmp [ecx] si +
jnz loc_102C82D  +
xor ecx ecx +
mov [ebp-88h] ecx +
cmp dword ptr [ebp+8] 5 +
jle loc_102C841  +
mov edi [edi+14h] +
cmp [edi] si +
jnz loc_102C843  +
xor edi edi +
mov [ebp-84h] edi +
mov ecx [ebp-54h] +
mov [ebp-7Ch] ecx +
mov ecx [ebp-50h] +
mov [ebp-78h] ecx +
mov ecx [ebp-28h] +
mov [ebp-74h] ecx +
push eax  +
lea eax [ebp-94h] +
push eax  +
push offset loc_102BEDC  +
call sub_102BF50  +
mov [ebp-1Ch] eax +
cmp eax esi +
jz loc_102C8AF  +
test dword ptr [ebp-28h] 200h +
jnz loc_102C8AF  +
cmp eax 5B4h +
jnz loc_102C888  +
call ebx  +
jmp loc_102C88A  +
xor eax eax +
push esi  +
push eax  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-84h]  +
push dword ptr [ebp-88h]  +
push dword ptr [ebp-8Ch]  +
call sub_102C08B  +
jmp loc_102C8AF  +
mov dword ptr [ebp-1Ch] 57h +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_102C485  +
***
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-40h] eax +
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
push dword ptr [ebp-40h]  +
push offset aExceptionInD_0  +
push 0  +
push 23h  +
call ds:DbgPrintEx  +
add esp 10h +
push dword ptr [ebp-40h]  +
call ds:RtlNtStatusToDosError  +
jmp loc_102C4B7  +
***
mov dword ptr [ebp-1Ch] 0Dh +
cmp [ebp-34h] ebx +
jz loc_102C904  +
push dword ptr [ebp-34h]  +
call ds:UnmapViewOfFile  +
mov esi ds:CloseHandle +
cmp [ebp-20h] ebx +
jz loc_102C914  +
push dword ptr [ebp-20h]  +
call esi  +
mov eax hFile +
cmp eax ebx +
jz loc_102C920  +
push eax  +
call esi  +
mov eax hEvent +
cmp eax ebx +
jz loc_102C92C  +
push eax  +
call esi  +
mov eax dword_103D09C +
cmp eax ebx +
jz loc_102C938  +
push eax  +
call esi  +
cmp [ebp-24h] ebx +
jz loc_102C942  +
push dword ptr [ebp-24h]  +
call esi  +
cmp [ebp-1Ch] ebx +
jnz loc_102C968  +
mov eax off_103D000 +
mov esi offset off_103D000 +
cmp eax esi +
jz loc_102C991  +
test dword ptr [eax+1Ch] 40000h +
jz loc_102C991  +
push ebx  +
push offset dword_1007CB8  +
push 0Ch  +
jmp loc_102C986  +
mov eax off_103D000 +
mov esi offset off_103D000 +
cmp eax esi +
jz loc_102C991  +
test byte ptr [eax+1Ch] 1 +
jz loc_102C991  +
push dword ptr [ebp-1Ch]  +
push offset dword_1007CB8  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_102BCDF  +
push offset dword_103D060  +
call sub_102BC88  +
mov eax off_103D000 +
cmp eax esi +
jz loc_102C9BF  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_102C9BF  +
push offset dword_1007CB8  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_102BCB9  +
call sub_1035540  +
call sub_102BE97  +
push dword ptr [ebp-1Ch]  +
call ds:ExitProcess  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 820h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_81C] eax +
mov eax [ebp+arg_4] +
push esi  +
mov [ebp+var_810] eax +
mov eax [ebp+arg_8] +
xor ebx ebx +
push edi  +
mov [ebp+var_818] eax +
mov [ebp+var_80C] ebx +
mov [ebp+var_808] ebx +
mov edi 800h +
push edi  +
lea eax [ebp+String1] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+var_820] edi +
mov eax offset dword_1015324 +
cmp [ebp+var_808] ebx +
jnz loc_102CA47  +
mov eax offset dword_1015338 +
push ebx  +
lea ecx [ebp+var_820] +
push ecx  +
push edi  +
lea ecx [ebp+String1] +
push ecx  +
lea ecx [ebp+var_814] +
push ecx  +
push eax  +
push [ebp+var_810]  +
push [ebp+var_81C]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_102CAC6  +
cmp [ebp+var_814] 2012h +
jnz loc_102CAC6  +
lea esi [ebp+String1] +
cmp [ebp+String1] bx +
jz loc_102CABE  +
push ebx  +
push esi  +
push [ebp+var_818]  +
call sub_1036507  +
cmp eax 0FFFFFFFFh +
jnz loc_102CAB4  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp [esi] bx +
jnz loc_102CA90  +
jmp loc_102CABE  +
mov [ebp+var_80C] 1 +
cmp [ebp+var_80C] ebx +
jnz loc_102CAD9  +
inc [ebp+var_808]  +
cmp [ebp+var_808] 2 +
jl loc_102CA1E  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_80C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
call ds:SetupGetThreadLogToken  +
mov esi [ebp+0Ch] +
mov ebx eax +
mov [ebp-8] ebx +
mov [ebp-4] edx +
test esi esi +
jz loc_102CC2E  +
mov edi [ebp+10h] +
test edi edi +
jz loc_102CC2E  +
mov eax [ebp+8] +
dec eax  +
jz loc_102CBC8  +
dec eax  +
jz loc_102CB5A  +
dec eax  +
jnz loc_102CC2E  +
test byte ptr [esi+20Ch] 4 +
jnz loc_102CB53  +
add edi 0Ch +
cmp [edi] eax +
jz loc_102CB53  +
cmp [esi+41Ch] eax +
setz al  +
push eax  +
jmp loc_102CBBD  +
push offset aNoSystemRestor  +
jmp loc_102CB78  +
test byte ptr [esi+20Ch] 4 +
jz loc_102CB6A  +
push offset aSystemRestoreP  +
jmp loc_102CB78  +
test dword ptr [edi+8] 0F0000000h +
jnz loc_102CB8C  +
push offset aSystemRestoreN  +
push 4  +
push offset __ImageBase  +
push edx  +
push ebx  +
call ds:SetupWriteTextLog  +
add esp 14h +
jmp loc_102CBC4  +
call sub_1032D42  +
test eax eax +
jz loc_102CBB5  +
push 4ECh  +
push offset aSystemRestoreD  +
push 4  +
push offset __ImageBase  +
push dword ptr [ebp-4]  +
push ebx  +
call ds:SetupWriteTextLog  +
add esp 18h +
jmp loc_102CBC4  +
add edi 0Ch +
and dword ptr [edi] 0 +
push 0  +
push edi  +
push esi  +
call pSetupSetDriverPackageRestorePoint  +
xor esi esi +
jmp loc_102CC31  +
lea ebx [esi+628h] +
push ebx  +
lea eax [esi+420h] +
push eax  +
mov eax [esi+20Ch] +
shr eax 3 +
and eax 1 +
push eax  +
push dword ptr [edi+4]  +
lea eax [esi+210h] +
push dword ptr [edi]  +
push dword ptr [esi+418h]  +
push eax  +
movzx eax word ptr [esi+208h] +
push eax  +
push esi  +
call pSetupValidateDriverPackage  +
mov esi eax +
test esi esi +
jnz loc_102CC10  +
mov eax [ebx] +
mov [edi+8] eax +
jmp loc_102CC31  +
push esi  +
push offset aDriverPackageF  +
push 1  +
push offset __ImageBase  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
call ds:SetupWriteTextLog  +
add esp 18h +
jmp loc_102CC31  +
push 57h  +
pop esi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_102CC55  +
cmp ecx 7FFFFFFFh +
jbe loc_102CC5A  +
mov eax 80070057h +
test eax eax +
jl loc_102CCA5  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_102CC95  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_102CC90  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_102CC90  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_102CC78  +
pop edi  +
test esi esi +
jnz loc_102CC9C  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 634h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+FileName] +
mov ecx [ebp+arg_4] +
push edi  +
xor edi edi +
push edi  +
push 2  +
push edi  +
push eax  +
mov [ebp+var_614] ecx +
mov [ebp+var_608] edi +
call ds:SetupOpenInfFileW  +
mov [ebp+InfHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102CCFF  +
call ds:__imp_GetLastError  +
mov [ebp+var_608] eax +
jmp loc_102CE3F  +
lea ecx [ebp+ContextIn] +
push ecx  +
push edi  +
push offset Section  +
push eax  +
call ds:SetupFindFirstLineW  +
test eax eax +
jnz loc_102CD28  +
call ds:__imp_GetLastError  +
mov [ebp+var_608] eax +
jmp loc_102CE33  +
push esi  +
mov esi 100h +
push ebx  +
push edi  +
push esi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 1  +
lea eax [ebp+ContextIn] +
push eax  +
call ds:SetupGetStringFieldW  +
test eax eax +
jz loc_102CE10  +
push edi  +
push edi  +
push esi  +
lea eax [ebp+Section] +
push eax  +
push edi  +
lea eax [ebp+ContextIn] +
push eax  +
call ds:SetupDiGetActualModelsSectionW  +
test eax eax +
jnz loc_102CD87  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push esi  +
lea eax [ebp+Section] +
push eax  +
call sub_102CC3F  +
cmp eax edi +
jl loc_102CE28  +
lea eax [ebp+ContextOut] +
push eax  +
push edi  +
lea eax [ebp+Section] +
push eax  +
push [ebp+InfHandle]  +
call ds:SetupFindFirstLineW  +
jmp loc_102CE0C  +
lea eax [ebp+ContextOut] +
push eax  +
call ds:SetupGetFieldCount  +
push 2  +
pop ebx  +
mov [ebp+var_610] eax +
cmp eax ebx +
jb loc_102CDFE  +
push edi  +
push esi  +
lea eax [ebp+var_404] +
push eax  +
push ebx  +
lea eax [ebp+ContextOut] +
push eax  +
call ds:SetupGetStringFieldW  +
test eax eax +
jz loc_102CDF5  +
cmp word ptr [ebp+var_404] di +
jz loc_102CDF5  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_614]  +
call sub_10368EA  +
inc ebx  +
cmp ebx [ebp+var_610] +
jbe loc_102CDBE  +
lea eax [ebp+ContextOut] +
push eax  +
push eax  +
call ds:SetupFindNextLine  +
test eax eax +
jnz loc_102CDA4  +
lea eax [ebp+ContextIn] +
push eax  +
push eax  +
call ds:SetupFindNextLine  +
test eax eax +
jnz loc_102CD2F  +
jmp loc_102CE31  +
movzx eax ax +
mov [ebp+var_608] eax +
pop ebx  +
pop esi  +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_608] +
xor ecx ebp +
pop edi  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
push 4  +
push esi  +
push esi  +
push esi  +
mov [ebp+FileName] eax +
mov [ebp+var_28] esi +
mov [ebp+var_2C] esi +
mov [ebp+MemberIndex] esi +
mov [ebp+var_24] esi +
mov [ebp+var_34] esi +
call ds:SetupDiGetClassDevsW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_102CEA4  +
call ds:__imp_GetLastError  +
mov [ebp+var_24] eax +
jmp loc_102CF91  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push esi  +
push ebx  +
mov [ebp+DeviceInfoData.cbSize] 1Ch +
call ds:SetupDiEnumDeviceInfo  +
test eax eax +
jz loc_102CF8A  +
push edi  +
mov edi offset dword_101534C +
inc [ebp+MemberIndex]  +
push esi  +
push esi  +
push 4  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push edi  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push ebx  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_102CF5D  +
cmp [ebp+var_3C] 7 +
jnz loc_102CF5D  +
test byte ptr [ebp+var_28] 40h +
jz loc_102CF5D  +
cmp [ebp+var_34] esi +
jnz loc_102CF18  +
call sub_1036591  +
mov [ebp+var_2C] eax +
cmp eax esi +
jz loc_102CF75  +
push eax  +
push [ebp+FileName]  +
call sub_102CCAE  +
mov [ebp+var_24] eax +
cmp eax esi +
jnz loc_102CF7C  +
mov [ebp+var_34] 1 +
push [ebp+var_2C]  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push ebx  +
call sub_102C9D8  +
test eax eax +
jz loc_102CF5D  +
or [ebp+var_28] 20h +
push esi  +
push 4  +
lea eax [ebp+var_28] +
push eax  +
push 7  +
push edi  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push ebx  +
call ds:SetupDiSetDevicePropertyW  +
push offset aFoundDeviceTha  +
push 4  +
push offset __ImageBase  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call ds:SetupWriteTextLog  +
add esp 14h +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+MemberIndex]  +
push ebx  +
call ds:SetupDiEnumDeviceInfo  +
test eax eax +
jnz loc_102CEC5  +
jmp loc_102CF7C  +
mov [ebp+var_24] 8 +
pop edi  +
cmp [ebp+var_2C] esi +
jz loc_102CF8A  +
push [ebp+var_2C]  +
call sub_10365D1  +
push ebx  +
call ds:SetupDiDestroyDeviceInfoList  +
cmp [ebp+var_24] esi +
pop esi  +
pop ebx  +
jz loc_102CFB6  +
push [ebp+var_24]  +
push offset aUnableToMarkDe  +
push 2  +
push offset __ImageBase  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call ds:SetupWriteTextLog  +
add esp 18h +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ds:SetupGetThreadLogToken +
call esi  +
mov [ebp+var_8] eax +
or eax edx +
mov [ebp+var_4] edx +
jnz loc_102CFF9  +
mov eax [ebp+arg_1C] +
mov ecx [ebp+arg_18] +
push eax  +
push ecx  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
call ds:SetupSetThreadLogToken  +
push offset aDebugdriver  +
call sub_1031928  +
mov ebx [ebp+arg_C] +
test eax eax +
jz loc_102D02F  +
cmp [ebp+arg_0] 4 +
mov eax offset aAdd +
jz loc_102D01A  +
mov eax offset aDelete +
push ebx  +
push eax  +
push offset aDrvinst_exeEnt  +
push 0  +
push 23h  +
call ds:DbgPrintEx  +
add esp 14h +
int 3  +
push esi  +
call DriverStoreSetLogContext  +
push [ebp+arg_14]  +
mov esi [ebp+arg_4] +
push ebx  +
push esi  +
call sub_10333C1  +
test eax eax +
jnz loc_102D06E  +
call ds:__imp_GetLastError  +
push offset aInstallationOf  +
push 1  +
push offset __ImageBase  +
push [ebp+var_4]  +
mov esi eax +
push [ebp+var_8]  +
call ds:SetupWriteTextLog  +
add esp 14h +
jmp loc_102D0F9  +
mov eax [ebp+arg_0] +
sub eax 4 +
jz loc_102D08B  +
dec eax  +
jz loc_102D07E  +
push 57h  +
pop esi  +
jmp loc_102D0F9  +
push [ebp+arg_28]  +
push ebx  +
call pServerDeleteDriverPackage  +
mov esi eax +
jmp loc_102D0F9  +
push edi  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_8] +
and [ebp+var_C] 0 +
mov [ebp+var_14] eax +
lea eax [ebp+var_18] +
push eax  +
push offset loc_102CAF5  +
push [ebp+arg_24]  +
mov [ebp+var_18] esi +
push [ebp+arg_20]  +
mov [ebp+var_10] 0FF000000h +
push [ebp+arg_28]  +
push 0  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push ebx  +
call pServerImportDriverPackage  +
mov esi eax +
pop edi  +
test esi esi +
jnz loc_102D0F9  +
push offset aDoingDeviceMat  +
push 4  +
push offset __ImageBase  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:SetupWriteTextLog  +
add esp 14h +
push [ebp+var_4]  +
push [ebp+var_8]  +
push [ebp+arg_20]  +
call sub_102CE59  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 2Ch  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_102D11F  +
cmp [esi] al +
jz loc_102D11B  +
inc esi  +
dec edx  +
jnz loc_102D113  +
test edx edx +
jnz loc_102D124  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_102D135  +
test eax eax +
jl loc_102D132  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_102D14E  +
cmp edx [ebp+arg_4] +
jbe loc_102D153  +
mov eax 80070057h +
test eax eax +
jl loc_102D161  +
mov eax [ebp+arg_0] +
call sub_102D106  +
jmp loc_102D164  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_102D18C  +
mov eax [ebp+arg_0] +
jb loc_102D183  +
cmp eax 0FFFFFFFFh +
ja loc_102D18C  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_102D197  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_C] +
sub esp 10h +
test ecx ecx +
jz loc_102D1CA  +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_102D1B5  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_102D1CD  +
push 0Ah  +
pop eax  +
test ecx ecx +
jnz loc_102D1D6  +
mov ecx offset aNull_0 +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_10] ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EtwEventWrite  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EtwEventWrite  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_102D254  +
cmp word ptr [edx] 0 +
jnz loc_102D239  +
push 0Eh  +
jmp loc_102D256  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102D23F  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_102D257  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_102D268  +
cmp word ptr [edx] 0 +
jnz loc_102D26D  +
mov edx offset aNull +
jmp loc_102D26D  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call EtwTraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C54h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_C48] 0 +
push ebx  +
mov ebx [ebp+DeviceInfoSet] +
push edi  +
mov edi [ebp+DeviceInfoData] +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_C50] edi +
mov [ebp+DriverInfoData.cbSize] 61Ch +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_102D2EE  +
call ds:__imp_GetLastError  +
mov [ebp+var_C48] eax +
jmp loc_102D453  +
push esi  +
push 0  +
mov eax 622h +
push eax  +
mov dword ptr [ebp+String] eax +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push ebx  +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_102D328  +
mov esi ds:__imp_GetLastError +
call esi  +
cmp eax 7Ah +
jz loc_102D328  +
call esi  +
jmp loc_102D38D  +
mov esi ds:lstrlenW +
push 0  +
lea eax [ebp-0A2Ch] +
push eax  +
call esi  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp-0A2Ch] +
push eax  +
push 12h  +
push offset aCGjci@fsbt?w  +
push edi  +
mov edi ds:SetupDiSetDevicePropertyW +
push ebx  +
call edi  +
test eax eax +
jz loc_102D387  +
lea eax [ebp+var_C54] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+var_C50]  +
push ebx  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jnz loc_102D3B5  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jz loc_102D398  +
call ds:__imp_GetLastError  +
mov [ebp+var_C48] eax +
jmp loc_102D452  +
lea eax [ebp+hMem] +
push eax  +
mov eax [ebp+var_C54] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jge loc_102D3C4  +
mov [ebp+var_C48] 0Dh +
jmp loc_102D452  +
push [ebp+hMem]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_102D3E8  +
mov [ebp+var_C48] 8 +
jmp loc_102D43D  +
push 0  +
push [ebp+var_C54]  +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+var_C50]  +
push ebx  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jz loc_102D431  +
push 0  +
push [ebp+hMem]  +
call esi  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+hMem]  +
push 12h  +
push offset aCGjci@fsbt?w_0  +
push [ebp+var_C50]  +
push ebx  +
call edi  +
test eax eax +
jnz loc_102D43D  +
call ds:__imp_GetLastError  +
mov [ebp+var_C48] eax +
cmp [ebp+hMem] 0 +
jz loc_102D452  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_C48] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1015304 +
lea esi [ebx+4] +
xor eax eax +
cmps   +
jnz loc_102D48F  +
xor eax eax +
jmp loc_102D4BF  +
push 0  +
push dword ptr [ebx+14h]  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call ds:CM_Get_DevNode_Status  +
test eax eax +
jnz loc_102D4AF  +
test [ebp+arg_4] 8400h +
jnz loc_102D48B  +
push 0  +
push ebx  +
push [ebp+DeviceInfoSet]  +
call sub_10319D0  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax hModule +
test eax eax +
jz loc_102D513  +
push offset ProcName  +
push eax  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_102D4F8  +
call eax  +
test eax eax +
jl loc_102D4F8  +
push offset aReceivedReques  +
push 4  +
jmp loc_102D4FF  +
push offset aCancelWindowsU  +
push 2  +
push offset __ImageBase  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupWriteTextLog  +
add esp 14h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_102D598  +
mov ecx [esi+0Ch] +
cmp ecx edi +
jz loc_102D598  +
mov eax [esi+8] +
cmp eax edi +
jz loc_102D598  +
push edi  +
push 0FFFFFFFFh  +
mov [ebp+var_4] eax +
push edi  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
mov [ebp+Handles] ecx +
call ds:WaitForMultipleObjectsEx  +
cmp eax edi +
jnz loc_102D56D  +
mov dword_103D0AC 1 +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_102D4CB  +
jmp loc_102D59B  +
cmp eax 1 +
jz loc_102D59B  +
call ds:__imp_GetLastError  +
mov edi eax +
push edi  +
push offset aError08xUnexpe  +
push 1  +
push offset __ImageBase  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call ds:SetupWriteTextLog  +
add esp 18h +
jmp loc_102D59B  +
push 57h  +
pop edi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 638h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_624] 0 +
test [ebp+arg_8] 20h +
push ebx  +
mov ebx [ebp+DeviceInfoData] +
push edi  +
mov edi [ebp+DeviceInfoSet] +
mov [ebp+DriverInfoData.cbSize] 61Ch +
jz loc_102D6CE  +
push esi  +
mov esi ds:SetupDiEnumDriverInfoW +
lea eax [ebp+DriverInfoData] +
push eax  +
push 0  +
jmp loc_102D635  +
inc [ebp+var_624]  +
lea eax [ebp+DriverInstallParams] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push edi  +
mov [ebp+DriverInstallParams.cbSize] 14h +
call ds:SetupDiGetDriverInstallParamsW  +
test eax eax +
jz loc_102D628  +
test [ebp+DriverInstallParams.Flags] 4000h +
jnz loc_102D644  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+var_624]  +
push 2  +
push ebx  +
push edi  +
call esi  +
test eax eax +
jnz loc_102D5F2  +
jmp loc_102D6CD  +
and [ebp+var_624] 0 +
lea eax [ebp+DriverInfoData] +
push eax  +
mov [ebp+DriverInfoData.cbSize] 61Ch +
push 0  +
jmp loc_102D6C3  +
inc [ebp+var_624]  +
lea eax [ebp+DriverInstallParams] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push edi  +
mov [ebp+DriverInstallParams.cbSize] 14h +
call ds:SetupDiGetDriverInstallParamsW  +
test eax eax +
jz loc_102D6B6  +
test [ebp+DriverInstallParams.Flags] 4000h +
jnz loc_102D6B6  +
or [ebp+DriverInstallParams.Flags] 800h +
lea eax [ebp+DriverInstallParams] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push edi  +
call ds:SetupDiSetDriverInstallParamsW  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+var_624]  +
push 2  +
push ebx  +
push edi  +
call esi  +
test eax eax +
jnz loc_102D660  +
pop esi  +
push ebx  +
push edi  +
push 17h  +
call ds:SetupDiCallClassInstaller  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:SetupDiGetClassPropertyW +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
inc eax  +
push eax  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
mov [ebp+var_8] eax +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_1015400  +
add edi 4 +
push edi  +
mov byte ptr [ebp+var_1] bl +
call esi  +
test eax eax +
jnz loc_102D72F  +
call ds:__imp_GetLastError  +
cmp eax 0E0000206h +
jz loc_102D757  +
push 1  +
push ebx  +
push 1  +
lea eax [ebp+var_1] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_10154B4  +
push edi  +
call esi  +
test eax eax +
jz loc_102D754  +
cmp [ebp+arg_0] 11h +
jnz loc_102D754  +
cmp byte ptr [ebp+var_1] 0FFh +
jz loc_102D757  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
call ds:SetupGetThreadLogToken  +
cmp [ebp+Notification] 5 +
mov esi [ebp+arg_8] +
mov [ebp+var_8] eax +
mov [ebp+var_4] edx +
jz loc_102D83A  +
cmp [ebp+Notification] 8 +
jz loc_102D7CF  +
cmp [ebp+Notification] 0Bh +
jnz loc_102D86C  +
push dword ptr [esi]  +
mov ebx ds:SetupWriteTextLog +
push offset aSavingLastkn_0  +
push 4  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push eax  +
call ebx  +
add esp 18h +
push 0  +
push dword ptr [esi]  +
call pSetupDoLastKnownGoodBackup  +
test eax eax +
jz loc_102D86C  +
push dword ptr [esi]  +
push offset aUnableToSaveLa  +
jmp loc_102D7FF  +
push dword ptr [esi]  +
mov ebx ds:SetupWriteTextLog +
push offset aSavingLastknow  +
push 4  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push eax  +
call ebx  +
add esp 18h +
push 0  +
push dword ptr [esi]  +
call pSetupDoLastKnownGoodBackup  +
test eax eax +
jz loc_102D811  +
push dword ptr [esi]  +
push offset aUnableToSave_0  +
push 1  +
push edi  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ebx  +
add esp 18h +
xor eax eax +
jmp loc_102D87C  +
push dword ptr [esi+4]  +
push offset aSavingLastknow  +
push 4  +
push edi  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ebx  +
add esp 18h +
push 1  +
push dword ptr [esi+4]  +
call pSetupDoLastKnownGoodBackup  +
test eax eax +
jz loc_102D86C  +
push dword ptr [esi+4]  +
jmp loc_102D7FA  +
push dword ptr [esi]  +
mov ebx ds:SetupWriteTextLog +
push offset aSavingLastkn_1  +
push 4  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push eax  +
call ebx  +
add esp 18h +
push 1  +
push dword ptr [esi]  +
call pSetupDoLastKnownGoodBackup  +
test eax eax +
jz loc_102D86C  +
push dword ptr [esi]  +
push offset aUnableToSave_1  +
jmp loc_102D7FF  +
push [ebp+Param2]  +
push esi  +
push [ebp+Notification]  +
push [ebp+Context]  +
call ds:SetupDefaultQueueCallbackW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_1015374  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_102D8C8  +
cmp [ebp+arg_4] 7 +
jnz loc_102D8C8  +
cmp [ebp+arg_0] 4 +
jnz loc_102D8C8  +
test byte ptr [ebp+var_4] 20h +
jz loc_102D8C8  +
inc esi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 694h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi 61Ch +
push esi  +
lea eax [ebp+DriverInfoData] +
push 0  +
push eax  +
mov [ebp+DeviceInfoData] edi +
mov [ebp+var_674] 1 +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push ebx  +
mov [ebp+DriverInfoData.cbSize] esi +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_102D93D  +
call ds:__imp_GetLastError  +
jmp loc_102DA35  +
mov esi ds:SetupDiGetDriverInfoDetailW +
lea eax [ebp+DriverInfoDetailDataSize] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_102DA35  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102D932  +
push [ebp+DriverInfoDetailDataSize]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_102DA35  +
push 0  +
mov dword ptr [eax] 622h +
push [ebp+DriverInfoDetailDataSize]  +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_102D9AE  +
call ds:__imp_GetLastError  +
jmp loc_102DA29  +
xor eax eax +
lea edi [ebp+DriverInstallParams] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+DriverInstallParams] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInstallParams.cbSize] 14h +
push ebx  +
call ds:SetupDiGetDriverInstallParamsW  +
test eax eax +
jz loc_102DA29  +
test [ebp+DriverInstallParams.Flags] 100000h +
jz loc_102DA29  +
push 0  +
push 20h  +
lea eax [ebp+ClassName] +
push eax  +
lea eax [ebp+ClassGuid] +
push eax  +
mov eax [ebp+hMem] +
add eax 218h +
push eax  +
call ds:SetupDiGetINFClassW  +
test eax eax +
jz loc_102D9A6  +
push 4  +
pop ecx  +
mov edi offset dword_1015304 +
lea esi [ebp+ClassGuid] +
xor eax eax +
cmps   +
jnz loc_102DA29  +
and [ebp+var_674] eax +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_674] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 27DCh +
call __alloca_probe  +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 61Ch +
xor ebx ebx +
push esi  +
mov [ebp+DeviceInfoData] eax +
lea eax [ebp+DriverInfoData] +
push ebx  +
push eax  +
mov [ebp+var_27CC] edi +
mov [ebp+var_27C4] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInfoData.cbSize] esi +
push edi  +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_102DAC6  +
call ds:__imp_GetLastError  +
jmp loc_102DCB1  +
mov esi ds:SetupDiGetDriverInfoDetailW +
lea eax [ebp+DriverInfoDetailDataSize] +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push edi  +
call esi  +
test eax eax +
jnz loc_102DCB1  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102DABB  +
push [ebp+DriverInfoDetailDataSize]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jz loc_102DCB1  +
push ebx  +
mov dword ptr [eax] 622h +
push [ebp+DriverInfoDetailDataSize]  +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push edi  +
call esi  +
test eax eax +
jnz loc_102DB41  +
call ds:__imp_GetLastError  +
jmp loc_102DCA5  +
mov eax [ebp+hMem] +
push ebx  +
push 2  +
push ebx  +
add eax 218h +
push eax  +
call ds:SetupOpenInfFileW  +
mov [ebp+InfHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102DB6D  +
call ds:__imp_GetLastError  +
jmp loc_102DC99  +
lea eax [ebp+ContextOut] +
push eax  +
push offset Key  +
push offset aControlflags  +
push [ebp+InfHandle]  +
call ds:SetupFindFirstLineW  +
test eax eax +
jz loc_102DC91  +
mov esi ds:SetupGetStringFieldW +
mov edi 1000h +
push 2000h  +
lea eax [ebp+var_2194] +
push ebx  +
push eax  +
mov [ebp+var_27BC] 1 +
call memset  +
add esp 0Ch +
push ebx  +
push edi  +
lea eax [ebp+var_2194] +
push eax  +
push 1  +
jmp loc_102DC59  +
inc [ebp+var_27BC]  +
xor eax eax +
push 18Eh  +
mov word ptr [ebp+var_194] ax +
lea eax [ebp+var_194+2] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
cmp word ptr [ebp+var_2194] 2Ah +
jz loc_102DC87  +
push 0C8h  +
lea eax [ebp+var_194] +
push eax  +
mov eax [ebp+hMem] +
add eax 620h +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+var_27CC]  +
call sub_1031FEF  +
test eax eax +
jz loc_102DC4A  +
push 1  +
push 0FFFFFFFFh  +
lea eax [ebp+var_194] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_2194] +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_102DC87  +
push ebx  +
push edi  +
lea eax [ebp+var_2194] +
push eax  +
push [ebp+var_27BC]  +
lea eax [ebp+ContextOut] +
push eax  +
call esi  +
test eax eax +
jnz loc_102DBCC  +
lea eax [ebp+ContextOut] +
push eax  +
push offset Key  +
push eax  +
call ds:SetupFindNextMatchLineW  +
test eax eax +
jnz loc_102DB9D  +
jmp loc_102DC91  +
mov [ebp+var_27C4] 1 +
cmp [ebp+InfHandle] ebx +
jz loc_102DCA5  +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_27C4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 630h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+DeviceInfoSet] +
push edi  +
mov edi [ebp+DeviceInfoData] +
mov [ebp+var_630] eax +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
xor ebx ebx +
push esi  +
mov [ebp+var_624] ebx +
mov [ebp+DriverInfoData.cbSize] 61Ch +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_102DD2A  +
call ds:__imp_GetLastError  +
mov [ebp+var_624] eax +
jmp loc_102DDEB  +
lea eax [ebp+var_62C] +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push esi  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jz loc_102DD54  +
mov [ebp+var_624] 0Dh +
jmp loc_102DDEB  +
mov ebx ds:__imp_GetLastError +
call ebx  +
cmp eax 7Ah +
jz loc_102DD65  +
call ebx  +
jmp loc_102DD1F  +
mov eax [ebp+var_62C] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_102DD8C  +
mov [ebp+var_624] 8 +
jmp loc_102DDD6  +
push 0  +
push [ebp+var_62C]  +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push edi  +
push esi  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jz loc_102DDCE  +
push 1  +
push edi  +
push esi  +
call ds:SetupDiDestroyDriverInfoList  +
push [ebp+hMem]  +
push [ebp+var_630]  +
call sub_1035183  +
push eax  +
push edi  +
push esi  +
call pSetupDiBuildInfoDataFromStrongName  +
test eax eax +
jnz loc_102DDD6  +
call ebx  +
mov [ebp+var_624] eax +
cmp [ebp+hMem] 0 +
jz loc_102DDEB  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_624] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3E0h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_3E0] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [ebp+DeviceInfoData] eax +
xor eax eax +
push edi  +
mov [ebp+var_3C4] eax +
mov [ebp+var_3CC] eax +
mov [ebp+var_3D0] eax +
call ds:SetupGetThreadLogToken  +
mov esi ds:SetupWriteTextLog +
push offset aInstallingNull  +
push 2  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push eax  +
mov [ebp+var_3DC] eax +
mov [ebp+var_3D8] edx +
call esi  +
add esp 14h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
push ebx  +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jnz loc_102DEA1  +
call ds:__imp_GetLastError  +
jmp loc_102DF9C  +
or [ebp+DeviceInstallParams.Flags] 800000h +
push 0  +
push 0  +
push 4  +
lea eax [ebp+var_3CC] +
push eax  +
lea eax [ebp+var_3D4] +
push eax  +
push offset dword_1015374  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_102DEF1  +
cmp [ebp+var_3D4] 7 +
jnz loc_102DEF1  +
test byte ptr [ebp+var_3CC] 40h +
jnz loc_102DEF1  +
or [ebp+DeviceInstallParams.FlagsEx] 80h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jz loc_102DE96  +
push 0  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiSetSelectedDriverW  +
test eax eax +
jz loc_102DE96  +
lea eax [ebp+var_3D0] +
push eax  +
push [ebp+arg_C]  +
push [ebp+DeviceInfoData]  +
push ebx  +
push [ebp+var_3E0]  +
call sub_1033632  +
test eax eax +
jnz loc_102DF67  +
call ds:__imp_GetLastError  +
push offset aInstallation_0  +
push 1  +
push edi  +
push [ebp+var_3D8]  +
mov [ebp+var_3C4] eax +
push [ebp+var_3DC]  +
call esi  +
add esp 14h +
jmp loc_102DFA2  +
push [ebp+DeviceInfoData]  +
mov esi ds:SetupDiCallClassInstaller +
push ebx  +
push 18h  +
call esi  +
mov edi ds:__imp_GetLastError +
test eax eax +
jnz loc_102DF8B  +
call edi  +
cmp eax 0E000020Eh +
jnz loc_102DF9A  +
push [ebp+DeviceInfoData]  +
push ebx  +
push 2  +
call esi  +
test eax eax +
jnz loc_102DFFB  +
call edi  +
mov [ebp+var_3C4] eax +
cmp [ebp+var_3C4] 0 +
jz loc_102DFFB  +
push 0  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jz loc_102DFFB  +
mov eax off_103D000 +
cmp eax offset off_103D000 +
jz loc_102DFFB  +
test byte ptr [eax+1Ch] 1 +
jz loc_102DFFB  +
lea ecx [ebp+DeviceInstanceId] +
push ecx  +
push [ebp+var_3C4]  +
push offset dword_101BD70  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_102D223  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3C4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+NumberOfBytesWritten] edi +
jnz loc_102E029  +
push 57h  +
pop edi  +
jmp loc_102E065  +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 8  +
push [ebp+NumberOfBytesWritten]  +
push hFile  +
call ds:WriteFile  +
test eax eax +
jnz loc_102E04D  +
call ds:__imp_GetLastError  +
mov edi eax +
jmp loc_102E065  +
push esi  +
push hEvent  +
mov esi ds:SetEvent +
call esi  +
push dword_103D09C  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_102E087  +
cmp edx 7FFFFFFFh +
jbe loc_102E08C  +
mov eax 80070057h +
test eax eax +
jl loc_102E0A2  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_103980E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_102D13B  +
test eax eax +
jl loc_102E0E1  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [eax+edi] +
mov eax [ebp+arg_8] +
push 0  +
call sub_103980E  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_102E102  +
cmp ecx 7FFFFFFFh +
jbe loc_102E107  +
mov eax 80070057h +
test eax eax +
jl loc_102E144  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_102E134  +
cmp eax esi +
ja loc_102E134  +
jnz loc_102E13F  +
jmp loc_102E139  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1484h +
call __alloca_probe  +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
mov [ebp+InfHandle] eax +
mov [ebp+DeviceInfoData] ecx +
cmp eax ebx +
jz loc_102E530  +
cmp eax 0FFFFFFFFh +
jz loc_102E530  +
cmp ecx ebx +
jz loc_102E530  +
push esi  +
mov esi ds:SetupDiGetDevicePropertyW +
push edi  +
push ebx  +
push ebx  +
mov edi 800h +
push edi  +
lea edx [ebp+ReturnBuffer] +
push edx  +
lea edx [ebp+var_1450] +
push edx  +
push offset dword_1015324  +
push ecx  +
push eax  +
call esi  +
test eax eax +
jz loc_102E1DD  +
cmp [ebp+ReturnBuffer] bx +
jz loc_102E1DD  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 4C4h  +
push dword_103D098  +
call WinSqmSetString  +
push ebx  +
push ebx  +
push edi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
lea eax [ebp+var_1450] +
push eax  +
push offset dword_1015338  +
push [ebp+DeviceInfoData]  +
push [ebp+InfHandle]  +
call esi  +
test eax eax +
jz loc_102E259  +
cmp [ebp+ReturnBuffer] bx +
jz loc_102E259  +
mov edi ds:lstrlenW +
xor eax eax +
mov [ebp+var_6] ax +
mov [ebp+var_8] ax +
lea esi [ebp+ReturnBuffer] +
mov eax esi +
push eax  +
call edi  +
cmp [ebp+eax*2-802h] bx +
jz loc_102E248  +
push esi  +
call edi  +
lea esi [esi+eax*2+2] +
push esi  +
call edi  +
cmp [esi+eax*2+2] bx +
jnz loc_102E233  +
cmp esi ebx +
jz loc_102E259  +
push esi  +
push 4C5h  +
push dword_103D098  +
call WinSqmSetString  +
mov eax [ebp+arg_8] +
shr eax 5 +
and eax 1 +
push eax  +
push 792h  +
push dword_103D098  +
call WinSqmSetDWORD  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInfoData.cbSize] 61Ch +
push [ebp+InfHandle]  +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jz loc_102E52E  +
push ebx  +
mov eax 622h +
push eax  +
mov dword ptr [ebp+FileName] eax +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+InfHandle]  +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_102E2DE  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102E52E  +
push ebx  +
mov esi 400h +
push esi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp-122Ch] +
push eax  +
call ds:SetupGetInfDriverStoreLocationW  +
test eax eax +
jnz loc_102E31B  +
lea eax [ebp-122Ch] +
push eax  +
push esi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_102E52E  +
lea eax [ebp+ReturnBuffer] +
push eax  +
call sub_1035183  +
push eax  +
push 4BCh  +
push dword_103D098  +
call WinSqmSetString  +
lea eax [ebp+DriverInstallParams] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInstallParams.cbSize] 14h +
push [ebp+InfHandle]  +
call ds:SetupDiGetDriverInstallParamsW  +
test eax eax +
jz loc_102E376  +
test [ebp+DriverInstallParams.Flags] 100000h +
jz loc_102E376  +
push 1  +
jmp loc_102E377  +
push ebx  +
push 791h  +
push dword_103D098  +
call WinSqmSetDWORD  +
push ebx  +
push 2  +
push ebx  +
lea eax [ebp-122Ch] +
push eax  +
call ds:SetupOpenInfFileW  +
mov [ebp+InfHandle] eax +
cmp eax 0FFFFFFFFh +
jz loc_102E52E  +
lea ecx [ebp+Context] +
push ecx  +
push offset aClassguid  +
push offset aVersion  +
push eax  +
call ds:SetupFindFirstLineW  +
mov edi ds:SetupGetStringFieldW +
test eax eax +
jz loc_102E3F8  +
push ebx  +
push esi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 1  +
lea eax [ebp+Context] +
push eax  +
call edi  +
test eax eax +
jz loc_102E3F8  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 387h  +
push dword_103D098  +
call WinSqmSetString  +
lea eax [ebp+Context] +
push eax  +
push offset aProvider  +
push offset aVersion  +
push [ebp+InfHandle]  +
call ds:SetupFindFirstLineW  +
test eax eax +
jz loc_102E448  +
push ebx  +
push esi  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 1  +
lea eax [ebp+Context] +
push eax  +
call edi  +
test eax eax +
jz loc_102E448  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 4BBh  +
push dword_103D098  +
call WinSqmSetString  +
mov eax [ebp+var_80C] +
movzx ecx ax +
push ecx  +
shr eax 10h +
push eax  +
mov eax [ebp+var_808] +
movzx ecx ax +
push ecx  +
shr eax 10h +
push eax  +
push offset a0d_0d_0d_0d  +
lea eax [ebp+ReturnBuffer] +
push esi  +
push eax  +
call sub_102E0EC  +
add esp 1Ch +
test eax eax +
jl loc_102E494  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 4BEh  +
push dword_103D098  +
call WinSqmSetString  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_102E4F4  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
push offset aDDD  +
lea eax [ebp+ReturnBuffer] +
push esi  +
push eax  +
call sub_102E0EC  +
add esp 18h +
test eax eax +
jl loc_102E4F4  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 4BDh  +
push dword_103D098  +
call WinSqmSetString  +
lea eax [ebp+ReturnBuffer] +
push eax  +
lea eax [ebp-122Ch] +
push eax  +
call pGetDriverPackageHash  +
test eax eax +
jz loc_102E522  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 4BFh  +
push dword_103D098  +
call WinSqmSetString  +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 51Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_51C] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jnz loc_102E584  +
call ds:__imp_GetLastError  +
mov [ebp+var_51C] eax +
jmp loc_102E5FF  +
push esi  +
mov esi 104h +
push esi  +
lea eax [ebp+ProcName] +
push eax  +
call sub_102E071  +
test eax eax +
jl loc_102E5EE  +
push offset aW  +
push esi  +
lea eax [ebp+ProcName] +
push eax  +
call sub_102E0AB  +
test eax eax +
jl loc_102E5EE  +
lea eax [ebp+ProcName] +
push eax  +
push edi  +
call ds:__imp_GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_102E5F8  +
push [ebp+arg_4]  +
lea eax [ebp+var_518] +
push 208h  +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_102E5EE  +
push 0  +
lea eax [ebp+var_518] +
push eax  +
push 0  +
push 0  +
call esi  +
jmp loc_102E5F8  +
mov [ebp+var_51C] 7Ah +
push edi  +
call ds:__imp_FreeLibrary  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_51C] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+lpMem] 0 +
and [ebp+var_8] 0 +
push esi  +
push [ebp+arg_0]  +
call sub_103535A  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jnz loc_102E643  +
push 8  +
pop esi  +
jmp loc_102E76F  +
push ebx  +
push edi  +
push 20h  +
push esi  +
call ds:__imp_wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_102E746  +
push 1  +
or edi 0FFFFFFFFh +
push edi  +
push offset aRundll32_exe  +
push edi  +
xor eax eax +
push esi  +
mov esi ds:CompareStringOrdinal +
mov [ebx] ax +
call esi  +
cmp eax 2 +
jz loc_102E694  +
push 1  +
push edi  +
push offset aRundll32  +
push edi  +
push [ebp+arg_0]  +
call esi  +
cmp eax 2 +
jz loc_102E694  +
push 0Dh  +
pop esi  +
jmp loc_102E765  +
inc ebx  +
inc ebx  +
push 2Ch  +
push ebx  +
call ds:__imp_wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102E68C  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
push ebx  +
mov [ebp+lpMem] eax +
call sub_1035183  +
mov ebx eax +
test ebx ebx +
jz loc_102E68C  +
push 1  +
push edi  +
push offset LibFileName  +
push edi  +
push ebx  +
call esi  +
cmp eax 2 +
jz loc_102E6DD  +
push 1  +
push edi  +
push offset aStreamci  +
push edi  +
push ebx  +
call esi  +
cmp eax 2 +
jnz loc_102E68C  +
mov ebx [ebp+lpMem] +
push 20h  +
push ebx  +
call ds:__imp_wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102E68C  +
xor ecx ecx +
mov [eax] cx +
add eax 2 +
push eax  +
call sub_103535A  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_102E708  +
push 8  +
jmp loc_102E748  +
push 1  +
push edi  +
push offset aStreamingdevic  +
push edi  +
push ebx  +
call esi  +
cmp eax 2 +
jz loc_102E72A  +
push 1  +
push edi  +
push offset aStreamingdev_0  +
push edi  +
push ebx  +
call esi  +
cmp eax 2 +
jnz loc_102E746  +
push 0  +
push ebx  +
call sub_1035121  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_102E704  +
push [ebp+lpMem]  +
push eax  +
call sub_102E544  +
mov esi eax +
jmp loc_102E749  +
push 0Dh  +
pop esi  +
cmp [ebp+lpMem] 0 +
jz loc_102E757  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+var_8] 0 +
jz loc_102E765  +
push [ebp+var_8]  +
call sub_10369AF  +
push [ebp+arg_0]  +
call sub_10369AF  +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
mov [ebp+lpMem] edi +
call ds:SetupGetThreadLogToken  +
push offset aPsetupaccessru  +
push offset ModuleName  +
mov [ebp+var_1C] eax +
mov [ebp+var_18] edx +
call ds:GetModuleHandleW  +
push eax  +
call ds:__imp_GetProcAddress  +
cmp eax edi +
jz loc_102E92D  +
call eax  +
mov ebx eax +
mov esi ebx +
cmp ebx edi +
jz loc_102E7DF  +
push dword ptr [esi+8]  +
call sub_102E61A  +
test eax eax +
jnz loc_102E7D9  +
mov dword ptr [esi+0Ch] 1 +
mov esi [esi] +
cmp esi edi +
jnz loc_102E7C6  +
test byte ptr [ebp+hKey] 20h +
mov [ebp+var_4] edi +
jz loc_102E891  +
lea eax [ebp+hKey] +
push eax  +
push 2001Fh  +
push edi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_102E831  +
push eax  +
push offset aError0xXOpenin  +
push 1  +
push offset __ImageBase  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
call ds:SetupWriteTextLog  +
add esp 18h +
jmp loc_102E936  +
mov esi ebx +
cmp ebx edi +
jz loc_102E883  +
cmp [esi+0Ch] edi +
jnz loc_102E87D  +
push dword ptr [esi+8]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push dword ptr [esi+8]  +
push 1  +
push edi  +
push dword ptr [esi+4]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push offset aAddingWsWsToRu  +
push 4  +
push offset __ImageBase  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
call ds:SetupWriteTextLog  +
add esp 1Ch +
mov esi [esi] +
cmp esi edi +
jnz loc_102E837  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_102E936  +
mov esi ebx +
cmp ebx edi +
jz loc_102E8ED  +
cmp [esi+0Ch] edi +
jnz loc_102E8E7  +
cmp [ebp+var_C] edi +
jnz loc_102E8B7  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push edi  +
call sub_1036A66  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_102E936  +
push edi  +
push dword ptr [esi+4]  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_1036B32  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_102E936  +
push edi  +
push dword ptr [esi+8]  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_1036B32  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_102E936  +
mov esi [esi] +
cmp esi edi +
jnz loc_102E897  +
cmp [ebp+var_8] edi +
jz loc_102E946  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call sub_1036C13  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_102E936  +
push edi  +
push [ebp+var_14]  +
push [ebp+lpMem]  +
push 2012h  +
push offset dword_101543C  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupDiSetDevicePropertyW  +
test eax eax +
jnz loc_102E936  +
call ds:__imp_GetLastError  +
mov [ebp+var_4] eax +
cmp [ebp+var_8] edi +
jz loc_102E946  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call sub_1036BE3  +
cmp [ebp+lpMem] edi +
jz loc_102E953  +
push [ebp+lpMem]  +
call sub_10369AF  +
push offset aPsetupdestroyr  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
push eax  +
call ds:__imp_GetProcAddress  +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_102E973  +
call eax  +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 270h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_260] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+DeviceInfoSet] eax +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+DriverInfoData] eax +
call ds:SetupGetThreadLogToken  +
push ebx  +
mov edi eax +
mov [ebp+var_26C] edx +
call sub_102D6ED  +
test eax eax +
jz loc_102EB34  +
push esi  +
push 27h  +
lea eax [ebp+var_54] +
push eax  +
lea esi [ebx+4] +
push esi  +
call pSetupStringFromGuid  +
test eax eax +
jnz loc_102EA02  +
lea eax [ebp+var_54] +
push eax  +
push offset aClassWsDoesNot  +
push 4  +
push offset __ImageBase  +
push [ebp+var_26C]  +
push edi  +
call ds:SetupWriteTextLog  +
add esp 18h +
xor edi edi +
inc edi  +
push edi  +
push 0  +
push 0  +
push edi  +
push offset dword_10154B4  +
push esi  +
mov esi ds:SetupDiSetClassPropertyW +
call esi  +
push edi  +
push 0  +
push 0  +
push edi  +
push offset dword_1015414  +
lea eax [ebx+4] +
push eax  +
call esi  +
mov esi 622h +
push esi  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jnz loc_102EA4D  +
mov [ebp+var_260] 8 +
jmp loc_102EAF5  +
push 0  +
push esi  +
push edi  +
push [ebp+DriverInfoData]  +
mov [edi] esi +
push ebx  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_102EA81  +
mov esi ds:__imp_GetLastError +
call esi  +
cmp eax 7Ah +
jz loc_102EA81  +
call esi  +
mov [ebp+var_260] eax +
jmp loc_102EAF5  +
xor eax eax +
push eax  +
mov esi 104h +
push esi  +
lea ecx [ebp+InfFileName] +
push ecx  +
push eax  +
push eax  +
lea ebx [edi+218h] +
push ebx  +
call ds:SetupGetInfDriverStoreLocationW  +
test eax eax +
jnz loc_102EAC2  +
push ebx  +
push esi  +
lea eax [ebp+InfFileName] +
push eax  +
call sub_102CC3F  +
test eax eax +
jge loc_102EAC2  +
mov [ebp+var_260] 7Ah +
jmp loc_102EAF5  +
xor eax eax +
push eax  +
push eax  +
lea ecx [ebp+InfFileName] +
push ecx  +
push eax  +
call ds:SetupDiInstallClassW  +
test eax eax +
jnz loc_102EAF5  +
call ds:__imp_GetLastError  +
mov [ebp+var_260] eax +
cmp eax 0E0000101h +
jnz loc_102EAF5  +
mov [ebp+var_260] 0E0000206h +
pop esi  +
test edi edi +
jz loc_102EB01  +
push edi  +
call ds:LocalFree  +
cmp [ebp+var_260] 0 +
jz loc_102EB34  +
mov eax off_103D000 +
cmp eax offset off_103D000 +
jz loc_102EB34  +
test byte ptr [eax+1Ch] 1 +
jz loc_102EB34  +
push [ebp+var_260]  +
push offset dword_101BD70  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_102BCDF  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_260] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_210] eax +
mov [ebp+var_208] ecx +
mov [ebp+hMem] ecx +
cmp ebx ecx +
jz loc_102ED19  +
cmp eax ecx +
jz loc_102ED19  +
cmp edi ecx +
jz loc_102ED19  +
mov esi ds:SetupDiSetDevicePropertyW +
push ecx  +
push 8  +
lea ecx [edi+60Ch] +
push ecx  +
push 10h  +
push offset dword_101539C  +
push eax  +
push ebx  +
call esi  +
test eax eax +
jnz loc_102EBCC  +
call ds:__imp_GetLastError  +
mov [ebp+var_208] eax +
jmp loc_102ED38  +
mov eax [edi+614h] +
mov ecx [edi+618h] +
movzx edx ax +
push edx  +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
shr ecx 10h +
push ecx  +
push offset a0d_0d_0d_0d  +
lea eax [ebp+String] +
push 100h  +
push eax  +
call sub_102E0EC  +
add esp 1Ch +
test eax eax +
jge loc_102EC14  +
mov [ebp+var_208] 7Ah +
jmp loc_102ED38  +
push 0  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+String] +
push eax  +
push 12h  +
push offset dword_10153B0  +
push [ebp+var_210]  +
push ebx  +
call esi  +
test eax eax +
jz loc_102EBBB  +
lea eax [ebp+var_214] +
push eax  +
push 0  +
push 0  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jz loc_102EC72  +
mov [ebp+var_208] 0Dh +
jmp loc_102ED38  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102EBBB  +
lea eax [ebp+hMem] +
push eax  +
mov eax [ebp+var_214] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jl loc_102EC63  +
push [ebp+hMem]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_102ECC2  +
mov [ebp+var_208] 8 +
jmp loc_102ED23  +
push 0  +
push [ebp+var_214]  +
push eax  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call pSetupDiGetStrongNameForDriverNode  +
test eax eax +
jnz loc_102ECEA  +
call ds:__imp_GetLastError  +
mov [ebp+var_208] eax +
jmp loc_102ED23  +
push 0  +
push [ebp+hMem]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+hMem]  +
push 12h  +
push offset dword_1015450  +
push [ebp+var_210]  +
push ebx  +
call esi  +
test eax eax +
jnz loc_102ED23  +
jmp loc_102ECDC  +
mov [ebp+var_208] 57h +
cmp [ebp+hMem] 0 +
jz loc_102ED38  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_208] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A38h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
or [ebp+QueueHandle+1] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+TokenInformation] eax +
mov [ebp+DeviceInfoSet] edi +
mov [ebp+DeviceInfoData] ebx +
mov [ebp+var_A28] esi +
mov [ebp+Result] esi +
mov [ebp+Context] esi +
mov [ebp+var_A14] esi +
mov [ebp+var_A38] esi +
mov [ebp+hMem] esi +
mov [ebp+uBytes] esi +
mov [ebp+var_A24] esi +
call ds:SetupGetThreadLogToken  +
push esi  +
push 0C8h  +
mov [ebp+var_9E8] eax +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push ebx  +
push edi  +
mov [ebp+var_9E4] edx +
mov [ebp+var_9F6] 0 +
mov byte ptr [ebp+QueueHandle] 0 +
mov [ebp+var_A0C] esi +
mov [ebp+var_9FC] esi +
mov [ebp+hObject] esi +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jnz loc_102EE12  +
mov [ebp+DeviceInstanceId] ax +
push ebx  +
push edi  +
call sub_1031C91  +
mov ebx ds:SetupWriteTextLog +
test eax eax +
jnz loc_102EFC9  +
push offset aDrvinst_exe_mu  +
push 1  +
push 0  +
call ds:CreateMutexW  +
mov [ebp+hObject] eax +
test eax eax +
jnz loc_102EE6F  +
call ds:__imp_GetLastError  +
push eax  +
mov [ebp+var_9F0] eax +
push offset aError08xCreati  +
push 1  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 18h +
jmp loc_102FAF7  +
call ds:__imp_GetLastError  +
cmp eax 0B7h +
jnz loc_102EFC9  +
cmp dword_103D08C 0 +
mov esi 10000000h +
jz loc_102EEE1  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102EE9B  +
test al al +
jnz loc_102EEE1  +
mov eax dword_103D078 +
mov ecx dword_103D07C +
and eax 2 +
and ecx esi +
or eax ecx +
jz loc_102EEE1  +
mov eax dword_103D080 +
mov edi dword_103D084 +
mov ecx eax +
mov edx edi +
and ecx 2 +
and edx esi +
cmp ecx eax +
jnz loc_102EEE1  +
cmp edx edi +
jnz loc_102EEE1  +
push offset dword_1007D48  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
push offset aWaitingForPrev  +
push 10004h  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
mov esi ds:WaitForSingleObjectEx +
mov edi 0EA60h +
jmp loc_102EF4D  +
cmp eax 80h +
jz loc_102EF5C  +
push offset aWaitingForPrev  +
push 10004h  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
push 0  +
push edi  +
push [ebp+hObject]  +
call esi  +
test eax eax +
jnz loc_102EF1A  +
push dword_103D09C  +
call ds:SetEvent  +
cmp dword_103D08C 0 +
jz loc_102EFC9  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102EF7E  +
test al al +
jnz loc_102EFC9  +
mov eax dword_103D078 +
mov ecx dword_103D07C +
mov esi 10000000h +
and eax 2 +
and ecx esi +
or eax ecx +
jz loc_102EFC9  +
mov eax dword_103D080 +
mov edi dword_103D084 +
mov ecx eax +
mov edx edi +
and ecx 2 +
and edx esi +
cmp ecx eax +
jnz loc_102EFC9  +
cmp edx edi +
jnz loc_102EFC9  +
push offset dword_1007D58  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
push offset aCoreDeviceInst  +
push 30004h  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
cmp dword_103D08C 0 +
jz loc_102F04A  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102EFFF  +
test al al +
jnz loc_102F04A  +
mov eax dword_103D078 +
mov ecx dword_103D07C +
mov esi 10010000h +
and eax 1 +
and ecx esi +
or eax ecx +
jz loc_102F04A  +
mov eax dword_103D080 +
mov edi dword_103D084 +
mov ecx eax +
mov edx edi +
and ecx 1 +
and edx esi +
cmp ecx eax +
jnz loc_102F04A  +
cmp edx edi +
jnz loc_102F04A  +
push offset dword_1007D28  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
push 1  +
push 20800h  +
push offset dword_10154E8  +
call WinSqmStartSession  +
mov esi [ebp+DeviceInfoData] +
mov edi [ebp+DeviceInfoSet] +
push esi  +
push edi  +
mov dword_103D098 eax +
call sub_102D296  +
push [ebp+hKey]  +
push esi  +
push edi  +
call sub_102E14B  +
push 20019h  +
push 2  +
push 0  +
push 1  +
push esi  +
push edi  +
call ds:SetupDiOpenDevRegKey  +
cmp eax 0FFFFFFFFh +
jz loc_102F0A6  +
push eax  +
mov [ebp+var_A24] 1 +
call ds:RegCloseKey  +
lea eax [ebp+var_A38] +
push eax  +
push [ebp+hKey]  +
push esi  +
push edi  +
push [ebp+TokenInformation]  +
call sub_1033632  +
test eax eax +
jnz loc_102F1D5  +
call ds:__imp_GetLastError  +
mov [ebp+var_9F0] eax +
cmp eax 0E0000248h +
jnz loc_102F13F  +
cmp dword_103D08C 0 +
jz loc_102F136  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102F0EE  +
test al al +
jnz loc_102F136  +
mov edx dword_103D07C +
mov eax 80000000h +
and edx eax +
xor ecx ecx +
or ecx edx +
jz loc_102F136  +
mov edx dword_103D084 +
mov ecx edx +
and ecx eax +
xor eax eax +
cmp eax dword_103D080 +
jnz loc_102F136  +
cmp ecx edx +
jnz loc_102F136  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset dword_1007CD8  +
push dword_103D064  +
push dword_103D060  +
call sub_102D1A0  +
push offset aInstallation_1  +
push 1  +
jmp loc_102F1AF  +
cmp eax 0E0000203h +
jnz loc_102F1CA  +
cmp dword_103D08C 0 +
jz loc_102F1A8  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102F160  +
test al al +
jnz loc_102F1A8  +
mov edx dword_103D07C +
mov eax 80000000h +
and edx eax +
xor ecx ecx +
or ecx edx +
jz loc_102F1A8  +
mov edx dword_103D084 +
mov ecx edx +
and ecx eax +
xor eax eax +
cmp eax dword_103D080 +
jnz loc_102F1A8  +
cmp ecx edx +
jnz loc_102F1A8  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset dword_1007CE8  +
push dword_103D064  +
push dword_103D060  +
call sub_102D1A0  +
push offset aInstallation_2  +
push 2  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
jmp loc_102FAF7  +
push eax  +
push offset aError08xDeterm  +
jmp loc_102EE52  +
mov esi 61Ch +
push esi  +
lea eax [ebp+DriverInfoData] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInfoData.cbSize] esi +
push edi  +
call ds:SetupDiGetSelectedDriverW  +
mov [ebp+var_A28] eax +
test eax eax +
jnz loc_102F309  +
call ds:__imp_GetLastError  +
mov [ebp+var_9F0] eax +
cmp eax 0E0000203h +
jnz loc_102FAF7  +
test [ebp+hKey] 200h +
jnz loc_102F242  +
push 1  +
push [ebp+DeviceInfoData]  +
push edi  +
call SetupDiReportDriverNotFoundError  +
push [ebp+hKey]  +
push [ebp+DeviceInfoData]  +
push edi  +
push [ebp+TokenInformation]  +
call sub_102DE07  +
test eax eax +
jnz loc_102FAF7  +
test byte ptr [ebp+hKey] 20h +
jz loc_102FAF7  +
mov esi 22Ch +
push esi  +
lea eax [ebp+DeviceInstallParams] +
push 0  +
push eax  +
call memset  +
mov edi [ebp+DeviceInfoData] +
add esp 0Ch +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DeviceInstallParams.cbSize] esi +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_102F2BA  +
test [ebp+DeviceInstallParams.Flags] 180h +
jz loc_102F2BA  +
mov [ebp+var_A14] 1 +
cmp [ebp+var_A14] 0 +
jz loc_102F9B0  +
push 1  +
push 0Eh  +
push dword ptr [edi+14h]  +
call ds:CM_Set_DevNode_Problem  +
push 1  +
push 668h  +
push dword_103D098  +
call WinSqmSetDWORD  +
push offset aNeedsRebootTru  +
push 4  +
mov esi offset __ImageBase +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
jmp loc_102F9C7  +
push [ebp+DeviceInfoData]  +
push edi  +
call sub_1031A70  +
test eax eax +
jnz loc_102F336  +
push offset aSelectedDriver  +
push 2  +
push 800000h  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
test byte ptr [ebp+hKey] 1 +
jnz loc_102F362  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push edi  +
call sub_103170B  +
test eax eax +
jz loc_102F362  +
mov [ebp+var_9F0] 5B3h +
jmp loc_102FAF7  +
push dword_103D09C  +
call ds:SetEvent  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push edi  +
call sub_102E97F  +
mov [ebp+var_9F0] eax +
test eax eax +
jnz loc_102FAF7  +
push dword_103D09C  +
call ds:SetEvent  +
push [ebp+DeviceInfoData]  +
push edi  +
push 18h  +
call ds:SetupDiCallClassInstaller  +
test eax eax +
jnz loc_102F3C5  +
call ds:__imp_GetLastError  +
mov [ebp+var_9F0] eax +
cmp eax 0E000020Eh +
jnz loc_102FAF7  +
push [ebp+DeviceInfoData]  +
push edi  +
call sub_102D46E  +
test eax eax +
jnz loc_102F3D9  +
or [ebp+hKey] 4 +
xor edi edi +
test byte ptr [ebp+hKey] 4 +
jnz loc_102F477  +
push edi  +
lea eax [ebp+uBytes] +
push eax  +
push edi  +
push edi  +
lea eax [ebp+var_A00] +
push eax  +
mov esi offset dword_1015450 +
push esi  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jnz loc_102F477  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_102F477  +
cmp [ebp+var_A00] 12h +
jnz loc_102F477  +
push [ebp+uBytes]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_102F477  +
push edi  +
push edi  +
push [ebp+uBytes]  +
push eax  +
lea eax [ebp+var_A00] +
push eax  +
push esi  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jnz loc_102F477  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+hMem] edi +
push [ebp+TokenInformation]  +
call sub_103276C  +
test eax eax +
jz loc_102F4B6  +
call sub_1031D9B  +
test eax eax +
jz loc_102F4B6  +
push offset aDetectedTruste  +
push 4  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
mov [ebp+var_A0C] 1 +
push edi  +
push edi  +
push 4  +
lea eax [ebp+var_9FC] +
push eax  +
lea eax [ebp+var_A00] +
push eax  +
push offset dword_1015428  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_102F4EC  +
cmp [ebp+var_A00] 7 +
jz loc_102F4F2  +
mov [ebp+var_9FC] edi +
mov esi [ebp+DeviceInfoData] +
push 4  +
pop ecx  +
add esi ecx +
mov edi offset dword_1015304 +
xor eax eax +
cmps   +
jz loc_102F5FE  +
call ds:SetupOpenFileQueue  +
mov [ebp+QueueHandle+1] eax +
cmp eax 0FFFFFFFFh +
jnz loc_102F52C  +
mov [ebp+var_9F0] 8 +
jmp loc_102FAF7  +
xor edi edi +
cmp [ebp+var_A0C] edi +
jnz loc_102F545  +
test byte ptr [ebp+var_9FC] 2 +
jnz loc_102F545  +
test byte ptr [ebp+hKey] 40h +
jz loc_102F588  +
push offset aEnablingShuffl  +
push 4  +
mov esi offset __ImageBase +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 8  +
push 8  +
push [ebp+QueueHandle+1]  +
call ds:SetupSetFileQueueFlags  +
test eax eax +
jnz loc_102F58D  +
call ds:__imp_GetLastError  +
mov [ebp+var_9F0] eax +
jmp loc_102FAF7  +
mov esi offset __ImageBase +
push 22Ch  +
lea eax [ebp+DeviceInstallParams] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_102F577  +
mov eax [ebp+QueueHandle+1] +
or [ebp+DeviceInstallParams.Flags] 8 +
mov [ebp+DeviceInstallParams.FileQueue] eax +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jnz loc_102F637  +
jmp loc_102F577  +
test byte ptr [ebp+hKey] 40h +
jz loc_102F630  +
push offset aPerformingAHot  +
push 4  +
push offset __ImageBase  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
mov [ebp+var_9F0] 57h +
jmp loc_102FAF7  +
xor edi edi +
mov esi offset __ImageBase +
push offset aInstallingFile  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
push 15h  +
call ds:SetupDiCallClassInstaller  +
test eax eax +
jz loc_102F577  +
cmp [ebp+QueueHandle+1] 0FFFFFFFFh +
jz loc_102F792  +
push offset aPruningFileQue  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
mov eax [ebp+hKey] +
add esp 14h +
and eax 8 +
mov [ebp+TokenInformation] eax +
lea ecx [ebp+Result] +
push ecx  +
neg eax  +
push edi  +
sbb eax eax +
push edi  +
and eax 0FFFFF9E1h +
push edi  +
add eax 620h +
push eax  +
push [ebp+QueueHandle+1]  +
call ds:SetupScanFileQueueW  +
cmp [ebp+TokenInformation] edi +
jz loc_102F6EF  +
cmp [ebp+Result] 1 +
jz loc_102F6EF  +
mov [ebp+var_9F0] 5 +
jmp loc_102FAF7  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
call ds:SetupInitDefaultQueueCallbackEx  +
mov [ebp+Context] eax +
cmp eax edi +
jz loc_102F577  +
push offset aCommittingFile  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push [ebp+Context]  +
push offset MsgHandler  +
push [ebp+QueueHandle+1]  +
push edi  +
call ds:SetupCommitFileQueueW  +
test eax eax +
jz loc_102F577  +
push 1  +
push edi  +
push [ebp+QueueHandle+1]  +
call ds:SetupPromptReboot  +
test eax eax +
jz loc_102F75F  +
mov [ebp+var_A14] 1 +
push edi  +
cmp [ebp+hMem] edi +
jz loc_102F778  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
push 12h  +
jmp loc_102F77B  +
push edi  +
push edi  +
push edi  +
push offset dword_1015464  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiSetDevicePropertyW  +
test byte ptr [ebp+hKey] 40h +
jz loc_102F7E8  +
push edi  +
push 668h  +
push dword_103D098  +
call WinSqmSetDWORD  +
push edi  +
push 4C8h  +
push dword_103D098  +
call WinSqmSetDWORD  +
push edi  +
push 4C7h  +
push dword_103D098  +
call WinSqmSetDWORD  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102EB4F  +
jmp loc_102F57D  +
push 22Ch  +
lea eax [ebp+DeviceInstallParams] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_102F577  +
cmp [ebp+QueueHandle+1] 0FFFFFFFFh +
jz loc_102F85B  +
lea eax [ebp+var_A34] +
push eax  +
push [ebp+QueueHandle+1]  +
call ds:SetupGetFileQueueFlags  +
test eax eax +
jz loc_102F85B  +
test byte ptr [ebp+var_A34] 4 +
jnz loc_102F85B  +
or [ebp+DeviceInstallParams.FlagsEx] 20000000h +
or [ebp+DeviceInstallParams.Flags] esi +
cmp [ebp+var_A0C] edi +
jz loc_102F88C  +
or [ebp+DeviceInstallParams.Flags] 20100h +
push offset aSettingDi_dono  +
push 2  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
test byte ptr [ebp+var_9FC] 2 +
jz loc_102F8B8  +
or [ebp+DeviceInstallParams.Flags] 100h +
push offset aSettingDi_need  +
push 2  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jz loc_102F577  +
push offset aRegisteringCoi  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
push [ebp+DeviceInfoData]  +
mov edi ds:SetupDiCallClassInstaller +
push [ebp+DeviceInfoSet]  +
push 22h  +
call edi  +
test eax eax +
jz loc_102F577  +
push offset aInstallingInte  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
push 20h  +
call edi  +
test eax eax +
jz loc_102F577  +
push offset aInstallingDevi  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
push 2  +
call edi  +
test eax eax +
jnz loc_102F269  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xInstal  +
push 1  +
mov [ebp+var_9F0] eax +
push esi  +
jmp loc_102EE59  +
push 0  +
push 668h  +
push dword_103D098  +
call WinSqmSetDWORD  +
mov esi offset __ImageBase +
push [ebp+hKey]  +
push edi  +
push [ebp+DeviceInfoSet]  +
call sub_102E77B  +
push dword_103D09C  +
call ds:SetEvent  +
push edi  +
push [ebp+DeviceInfoSet]  +
call sub_10315CD  +
test eax eax +
jz loc_102FA38  +
test byte ptr [ebp+hKey] 10h +
jnz loc_102FA1B  +
cmp [ebp+var_A0C] 0 +
jnz loc_102FA1B  +
test byte ptr [ebp+var_9FC] 2 +
jnz loc_102FA1B  +
push 10000h  +
push edi  +
push [ebp+DeviceInfoSet]  +
call sub_1031562  +
push offset aDeviceHasFinis  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 1  +
jmp loc_102FA3A  +
push 0  +
push 4C8h  +
push dword_103D098  +
call WinSqmSetDWORD  +
push edi  +
push [ebp+DeviceInfoSet]  +
call sub_1031672  +
test eax eax +
jz loc_102FAB2  +
test byte ptr [ebp+hKey] 10h +
jnz loc_102FA83  +
cmp [ebp+var_A0C] 0 +
jnz loc_102FA83  +
test byte ptr [ebp+var_9FC] 2 +
jnz loc_102FA83  +
push 20000h  +
push edi  +
push [ebp+DeviceInfoSet]  +
call sub_1031562  +
push offset aDeviceHasAFini  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 1  +
push 4C7h  +
push dword_103D098  +
call WinSqmSetDWORD  +
xor esi esi +
jmp loc_102FAC5  +
xor esi esi +
push esi  +
push 4C7h  +
push dword_103D098  +
call WinSqmSetDWORD  +
cmp [ebp+var_9FC] esi +
jz loc_102FAF1  +
push esi  +
push 4  +
lea eax [ebp+var_9FC] +
push eax  +
push 7  +
push offset dword_1015428  +
push edi  +
push [ebp+DeviceInfoSet]  +
mov [ebp+var_9FC] esi +
call ds:SetupDiSetDevicePropertyW  +
mov [ebp+var_9F0] esi +
push [ebp+var_9F0]  +
mov esi offset __ImageBase +
push offset aDeviceInstallS  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
push offset aPerformingDevi  +
push 4  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 2Ch +
push offset aPsetupdestroyr  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
push eax  +
call ds:__imp_GetProcAddress  +
xor edi edi +
cmp [ebp+hMem] edi +
jz loc_102FB5E  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+Context] edi +
jz loc_102FB72  +
push [ebp+Context]  +
call ds:SetupTermDefaultQueueCallback  +
cmp [ebp+QueueHandle+1] 0FFFFFFFFh +
jz loc_102FBE9  +
cmp [ebp+var_9F0] edi +
jz loc_102FB91  +
push edi  +
push edi  +
push [ebp+QueueHandle+1]  +
call ds:SetupUninstallNewlyCopiedInfs  +
mov edi [ebp+DeviceInfoData] +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_102FBDB  +
and [ebp+DeviceInstallParams.Flags] 0FFFFFFF7h +
or [ebp+DeviceInstallParams.FileQueue] 0FFFFFFFFh +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiSetDeviceInstallParamsW  +
push [ebp+QueueHandle+1]  +
call ds:SetupCloseFileQueue  +
jmp loc_102FBEF  +
mov edi [ebp+DeviceInfoData] +
cmp [ebp+var_A28] 0 +
push [ebp+var_9F0]  +
push [ebp+var_A24]  +
push [ebp+var_A14]  +
jz loc_102FC13  +
lea eax [ebp+DriverInfoData] +
push eax  +
jmp loc_102FC15  +
push 0  +
push edi  +
push [ebp+DeviceInfoSet]  +
call pSetupDiCrimsonLogDeviceInstall  +
cmp [ebp+var_9F0] 0 +
jnz loc_102FDE3  +
push 0  +
push dword ptr [edi+14h]  +
lea eax [ebp+var_A1C] +
push eax  +
lea eax [ebp+var_A30] +
push eax  +
call ds:CM_Get_DevNode_Status  +
test eax eax +
jnz loc_102FCB3  +
test [ebp+var_A30] 100h +
jnz loc_102FCB3  +
test [ebp+var_A30] 400h +
jz loc_102FCB3  +
cmp [ebp+var_A1C] eax +
jz loc_102FCB3  +
cmp [ebp+var_A1C] 0Eh +
jz loc_102FCB3  +
cmp [ebp+var_A1C] 1Ch +
jz loc_102FCB3  +
push offset aQueueingUpErro  +
push 2  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
test [ebp+hKey] 200h +
jnz loc_102FCB3  +
push 1  +
push [ebp+var_A1C]  +
push edi  +
push [ebp+DeviceInfoSet]  +
call SetupDiReportPnPDeviceProblem  +
mov edi ds:SetupDiGetDevicePropertyW +
push 0  +
push 0  +
push 1  +
lea eax [ebp+var_9F6] +
push eax  +
lea eax [ebp+var_A00] +
push eax  +
push offset dword_10153D8  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call edi  +
test eax eax +
jz loc_102FD56  +
cmp [ebp+var_A00] 11h +
jnz loc_102FD56  +
cmp [ebp+var_9F6] 0FFh +
jnz loc_102FD56  +
call sub_1032C9E  +
test eax eax +
jnz loc_102FD3D  +
test [ebp+hKey] 200h +
jnz loc_102FD36  +
push offset aQueueingUpEr_0  +
push 5  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 1  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call SetupDiReportGenericDriverInstalled  +
jmp loc_102FD56  +
push offset aAGenericDriver  +
jmp loc_102FD42  +
push offset aPolicyIsSetToS  +
push 5  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 0  +
push 0  +
push 1  +
lea eax [ebp+QueueHandle] +
push eax  +
lea eax [ebp+var_A00] +
push eax  +
push offset dword_10153EC  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call edi  +
test eax eax +
jz loc_102FDFC  +
cmp [ebp+var_A00] 11h +
jnz loc_102FDFC  +
cmp byte ptr [ebp+QueueHandle] 0FFh +
jnz loc_102FDFC  +
call sub_1032CC7  +
test eax eax +
jnz loc_102FDDC  +
test [ebp+hKey] 200h +
jnz loc_102FDD3  +
push offset aQueueingUpEr_1  +
push 5  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
push 1  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call SetupDiReportAdditionalSoftwareRequested  +
jmp loc_102FDFC  +
push offset aAdditionalSoft  +
push 5  +
jmp loc_102FDEA  +
push offset aPolicyIsSetT_0  +
jmp loc_102FDD8  +
push offset aQueueingUpEr_2  +
push 2  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
add esp 14h +
xor edi edi +
cmp [ebp+hObject] edi +
jz loc_102FE1E  +
push [ebp+hObject]  +
call ds:ReleaseMutex  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp dword_103D08C edi +
jz loc_102FE74  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_102FE33  +
test al al +
jnz loc_102FE74  +
mov ecx dword_103D07C +
mov edx 10010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_102FE74  +
mov ecx dword_103D084 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_103D080 +
jnz loc_102FE74  +
cmp eax ecx +
jnz loc_102FE74  +
push offset dword_1007D38  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
push dword_103D098  +
call WinSqmEndSession  +
push [ebp+var_9F0]  +
mov dword_103D098 edi +
push offset aCoreDeviceIn_0  +
push 50004h  +
push esi  +
push [ebp+var_9E4]  +
push [ebp+var_9E8]  +
call ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_9F0] +
add esp 18h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+DeviceInfoSet] +
push edi  +
mov edi [ebp+DeviceInfoData] +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
xor ebx ebx +
push esi  +
inc ebx  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_102FF36  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_102FF0D  +
mov eax offset dword_101C99C +
push eax  +
push 104h  +
lea eax [ebp+DeviceInstallParams.DriverPath] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_102FF36  +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
push esi  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jnz loc_102FF38  +
xor ebx ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+8] +
mov [ebp-4] eax +
lea eax [ebp-8] +
push eax  +
mov dword ptr [ebp-8] 1Eh +
call sub_102E017  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1E0h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+DeviceInfoSet] eax +
mov eax [ebp+arg_4] +
mov [ebp+DeviceInfoData] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov [ebp+var_1C4] eax +
mov eax [ebp+arg_10] +
xor esi esi +
push edi  +
mov [ebp+var_1A4] eax +
mov [ebp+var_1A0] esi +
call ds:SetupGetThreadLogToken  +
push offset aSearchingWindo  +
mov ebx 10004h +
push ebx  +
mov edi offset __ImageBase +
push edi  +
push edx  +
mov [ebp+var_1B8] esi +
mov [ebp+hMutex] esi +
mov [ebp+var_1B4] esi +
mov esi ds:SetupWriteTextLog +
push eax  +
mov [ebp+var_19C] eax +
mov [ebp+var_198] edx +
call esi  +
mov eax hModule +
add esp 14h +
test eax eax +
jnz loc_103001E  +
push offset aInvalidWuSearc  +
mov [ebp+var_1A0] 6 +
push 10002h  +
jmp loc_103065A  +
push offset aWufindmatching  +
push eax  +
call ds:__imp_GetProcAddress  +
mov dword ptr [ebp+var_1C0+4] eax +
test eax eax +
jnz loc_1030062  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadSe  +
push 10002h  +
push edi  +
push [ebp+var_198]  +
mov [ebp+var_1A0] eax +
push [ebp+var_19C]  +
call esi  +
add esp 18h +
jmp loc_1030344  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov [ebp+NumberOfBytesWritten] 28h +
call sub_102E017  +
push 0  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jnz loc_10300AB  +
mov [ebp+var_1A0] 0E0000205h +
jmp loc_103066C  +
push [ebp+DeviceInfoData]  +
mov eax [ebp+var_1A4] +
push [ebp+DeviceInfoSet]  +
lea ecx [ebp+DeviceInstanceId] +
mov dword ptr [eax] 28h +
mov [eax+4] ecx +
call sub_102D8D4  +
test eax eax +
jz loc_10300E2  +
mov eax [ebp+var_1A4] +
mov dword ptr [eax+20h] 1 +
cmp dword_103D0AC 0 +
jnz loc_1030310  +
push offset aDrvinst_exe__0  +
push 1  +
push 0  +
call ds:CreateMutexW  +
mov [ebp+hMutex] eax +
test eax eax +
jnz loc_1030133  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xCrea_0  +
push 1  +
push edi  +
push [ebp+var_198]  +
mov [ebp+var_1A0] eax +
push [ebp+var_19C]  +
call esi  +
add esp 18h +
jmp loc_103031A  +
call ds:__imp_GetLastError  +
cmp eax 0B7h +
jnz loc_10301F1  +
push offset Name  +
push 0  +
push 100000h  +
call ds:OpenEventW  +
mov [ebp+var_1B4] eax +
test eax eax +
jnz loc_103018D  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xOpenin  +
jmp loc_1030114  +
cmp eax 80h +
jz loc_10301E5  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_103030A  +
cmp dword_103D0AC 0 +
jnz loc_1030310  +
push offset aWaitingForPr_0  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
add esp 14h +
push dword_103D09C  +
call ds:SetEvent  +
mov eax [ebp+hMutex] +
push 0  +
mov [ebp+Handles] eax +
mov eax [ebp+var_1B4] +
push 0EA60h  +
mov [ebp+var_1C8] eax +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
call ds:WaitForMultipleObjectsEx  +
test eax eax +
jnz loc_103016E  +
push dword_103D09C  +
call ds:SetEvent  +
push offset aAcquiredWuSear  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
add esp 14h +
cmp dword_103D0AC 0 +
jnz loc_103036B  +
cmp dword_103D08C 0 +
jz loc_103026D  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_103022C  +
test al al +
jnz loc_103026D  +
mov ecx dword_103D07C +
mov edx 10010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_103026D  +
mov ecx dword_103D084 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_103D080 +
jnz loc_103026D  +
cmp eax ecx +
jnz loc_103026D  +
push offset dword_1007D68  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
push [ebp+var_1A4]  +
mov dword_103D0B0 1 +
call dword ptr [ebp+var_1C0+4]  +
test eax eax +
jz loc_1030291  +
mov [ebp+var_1B8] 1 +
and dword_103D0B0 0 +
cmp dword_103D08C 0 +
jz loc_10302EF  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_10302AE  +
test al al +
jnz loc_10302EF  +
mov ecx dword_103D07C +
mov edx 10010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_10302EF  +
mov ecx dword_103D084 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_103D080 +
jnz loc_10302EF  +
cmp eax ecx +
jnz loc_10302EF  +
push offset dword_1007D78  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
cmp dword_103D0B4 0 +
jz loc_103036B  +
and dword_103D0B4 0 +
push 5B4h  +
call ds:ExitThread  +
mov dword_103D0AC ecx +
mov [ebp+var_1A0] 0E0000228h +
cmp [ebp+hMutex] 0 +
jz loc_103032F  +
push [ebp+hMutex]  +
call ds:CloseHandle  +
cmp [ebp+var_1B4] 0 +
jz loc_1030344  +
push [ebp+var_1B4]  +
call ds:CloseHandle  +
cmp [ebp+var_1A0] 0E0000228h +
jnz loc_103066C  +
cmp dword_103D0AC 0 +
jz loc_1030654  +
push offset aWindowsUpdateD  +
jmp loc_1030659  +
push offset aAboutToRelease  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
add esp 14h +
push [ebp+hMutex]  +
call ds:ReleaseMutex  +
cmp dword_103D0AC 0 +
jnz loc_1030310  +
cmp [ebp+var_1B8] 0 +
jz loc_1030310  +
push offset aWudownloadupda  +
push hModule  +
call ds:__imp_GetProcAddress  +
push offset aWuexpandupdate  +
push hModule  +
mov [ebp+var_1B8] eax +
call ds:__imp_GetProcAddress  +
mov [ebp+var_1D8] eax +
test eax eax +
jz loc_103063E  +
cmp [ebp+var_1B8] 0 +
jz loc_103063E  +
mov eax [ebp+var_1A4] +
push 0  +
push 2710h  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
call __aulldiv  +
and dword ptr [ebp+var_1C0] 0 +
mov dword ptr [ebp+var_1C0+4] edx +
and dword ptr [ebp+var_1C0+4] 80000000h +
and edx 7FFFFFFFh +
mov dword ptr [ebp+var_1E0] eax +
mov dword ptr [ebp+var_1E0+4] edx +
fild  [ebp+var_1E0] +
push ecx  +
fild  [ebp+var_1C0] +
push ecx  +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_101CAA0 +
fstp  qword ptr [esp+0] +
push offset aFoundDriverOnW  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
mov eax [ebp+var_1A4] +
add esp 1Ch +
push 0  +
push 2710h  +
push dword ptr [eax+1Ch]  +
mov [ebp+NumberOfBytesWritten] 1Fh +
push dword ptr [eax+18h]  +
call __aulldiv  +
mov [ebp+var_1D0] eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call sub_102E017  +
mov eax [ebp+var_1A4] +
and dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+8] offset loc_102FF50 +
cmp dword_103D08C 0 +
jz loc_1030509  +
mov cl byte_103D090 +
cmp cl 4 +
jnb loc_10304BD  +
test cl cl +
jnz loc_1030509  +
mov edx dword_103D07C +
and edx 10010000h +
xor ecx ecx +
or ecx edx +
jz loc_1030509  +
mov ecx dword_103D084 +
xor edx edx +
and ecx 10010000h +
cmp edx dword_103D080 +
jnz loc_1030509  +
cmp ecx dword_103D084 +
jnz loc_1030509  +
push offset dword_1007D88  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
mov eax [ebp+var_1A4] +
push eax  +
call [ebp+var_1B8]  +
cmp dword_103D08C 0 +
mov dword ptr [ebp+var_1C0+4] eax +
jz loc_103056D  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_103052C  +
test al al +
jnz loc_103056D  +
mov ecx dword_103D07C +
mov edx 10010000h +
and ecx edx +
xor eax eax +
or eax ecx +
jz loc_103056D  +
mov ecx dword_103D084 +
mov eax ecx +
and eax edx +
xor edx edx +
cmp edx dword_103D080 +
jnz loc_103056D  +
cmp eax ecx +
jnz loc_103056D  +
push offset dword_1007D98  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
cmp dword_103D0AC 0 +
jnz loc_1030310  +
cmp dword ptr [ebp+var_1C0+4] 0 +
jz loc_103031A  +
push 104h  +
push [ebp+var_1C4]  +
push [ebp+var_1A4]  +
call [ebp+var_1D8]  +
test eax eax +
jz loc_103062C  +
push [ebp+var_1C4]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102FEC3  +
test eax eax +
jz loc_103062C  +
push 2  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiBuildDriverInfoList  +
test eax eax +
jnz loc_10305E7  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToBuildD  +
jmp loc_103064A  +
push offset aSelectingBestM  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
add esp 14h +
push dword ptr [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102D5A8  +
test eax eax +
jnz loc_103031A  +
call ds:__imp_GetLastError  +
mov [ebp+var_1A0] eax +
jmp loc_103031A  +
cmp dword_103D0AC 0 +
jz loc_103031A  +
jmp loc_1030310  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadDo  +
push 10002h  +
jmp loc_1030116  +
push offset aNoDriverFoundO  +
push ebx  +
push edi  +
push [ebp+var_198]  +
push [ebp+var_19C]  +
call esi  +
add esp 14h +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1A0] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_234] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+DeviceInfoData] esi +
call ds:SetupGetThreadLogToken  +
mov [ebp+var_240] eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov [ebp+var_23C] edx +
mov [ebp+NumberOfBytesWritten] 32h +
call sub_102E017  +
mov eax dword ptr [ebp+arg_8] +
and eax 80h +
mov [ebp+var_244] eax +
jz loc_1030734  +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push esi  +
push ebx  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_10307B9  +
or [ebp+DeviceInstallParams.FlagsEx] 80000000h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push esi  +
push ebx  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jz loc_10307B9  +
push offset aSearchingJustD  +
jmp loc_1030739  +
push offset aSearchingDrive  +
mov esi ds:SetupWriteTextLog +
push 4  +
mov edi offset __ImageBase +
push edi  +
push [ebp+var_23C]  +
push [ebp+var_240]  +
call esi  +
add esp 14h +
push 0  +
push [ebp+DeviceInfoData]  +
push ebx  +
call sub_102FEC3  +
test eax eax +
jz loc_10307B9  +
push 2  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiBuildDriverInfoList  +
test eax eax +
jz loc_10307B9  +
cmp [ebp+var_244] 0 +
jz loc_103078D  +
push offset aSelectingBes_0  +
jmp loc_1030792  +
push offset aSelectingBes_1  +
push 4  +
push edi  +
push [ebp+var_23C]  +
push [ebp+var_240]  +
call esi  +
add esp 14h +
push dword ptr [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push ebx  +
call sub_102D5A8  +
test eax eax +
jnz loc_10307C5  +
call ds:__imp_GetLastError  +
mov [ebp+var_234] eax +
cmp [ebp+var_244] 0 +
jz loc_103080E  +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
push ebx  +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_103080E  +
and [ebp+DeviceInstallParams.FlagsEx] 7FFFFFFFh +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiSetDeviceInstallParamsW  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_234] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 27Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_234] 0 +
mov [ebp+DeviceInfoSet] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+DeviceInfoData] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_254] eax +
call ds:SetupGetThreadLogToken  +
mov esi ds:SetupWriteTextLog +
and [ebp+var_240] 0 +
push 0Ah  +
pop ecx  +
mov ebx eax +
push offset aRetrievingDevi  +
xor eax eax +
lea edi [ebp+var_27C] +
stos   +
push 4  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push ebx  +
mov [ebp+var_248] edx +
call esi  +
push offset aSettingDeviceP  +
push 4  +
push edi  +
push [ebp+var_248]  +
push ebx  +
call esi  +
add esp 28h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jnz loc_10308E3  +
call ds:__imp_GetLastError  +
jmp loc_1030BCC  +
or [ebp+DeviceInstallParams.FlagsEx] 40800h +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiSetDeviceInstallParamsW  +
test eax eax +
jz loc_10308D8  +
push 0  +
lea eax [ebp+var_240] +
push eax  +
call sub_1031DDE  +
test byte ptr [ebp+arg_8] 20h +
jz loc_1030925  +
and [ebp+var_240] 0 +
cmp [ebp+var_240] 1 +
jnz loc_1030961  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102D888  +
test eax eax +
jz loc_1030961  +
push offset aDoingWuSearchL  +
push 4  +
push edi  +
push [ebp+var_248]  +
mov [ebp+var_240] 2 +
push ebx  +
call esi  +
add esp 14h +
cmp [ebp+var_240] 0 +
jz loc_103099A  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_1031FA6  +
test eax eax +
jz loc_103099A  +
and [ebp+var_240] 0 +
push offset aDeviceDriverWa  +
push 4  +
push edi  +
push [ebp+var_248]  +
push ebx  +
call esi  +
add esp 14h +
mov eax [ebp+var_240] +
sub eax 0 +
jz loc_1030BB8  +
dec eax  +
jz loc_1030AA2  +
dec eax  +
jz loc_10309BF  +
push offset aUnknownSearchO  +
push 1  +
jmp loc_1030ADE  +
push [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_1030688  +
mov [ebp+var_234] eax +
test eax eax +
jz loc_1030BD2  +
call sub_1031EC1  +
mov hModule eax +
test eax eax +
jz loc_1030A7C  +
push offset aOpenwucontext  +
push eax  +
call ds:__imp_GetProcAddress  +
push offset aIswuavailable  +
push hModule  +
mov [ebp+var_244] eax +
call ds:__imp_GetProcAddress  +
cmp [ebp+var_244] 0 +
mov [ebp+var_250] eax +
jz loc_1030A6E  +
test eax eax +
jz loc_1030A6E  +
call [ebp+var_244]  +
test eax eax +
jl loc_1030BD2  +
call [ebp+var_250]  +
test eax eax +
jz loc_1030A67  +
lea eax [ebp+var_27C] +
push eax  +
push [ebp+var_254]  +
push [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102FF76  +
jmp loc_1030BCC  +
push offset aSkippingWindow  +
jmp loc_1030ADC  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadIn  +
jmp loc_1030A88  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadWu  +
push 2  +
push edi  +
push [ebp+var_248]  +
mov [ebp+var_234] eax +
push ebx  +
call esi  +
add esp 18h +
jmp loc_1030BD2  +
mov eax [ebp+arg_8] +
or eax 80h +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_1030688  +
push [ebp+DeviceInfoData]  +
mov [ebp+var_234] eax +
push [ebp+DeviceInfoSet]  +
call sub_102DA51  +
test eax eax +
jz loc_1030AF0  +
push offset aInfSpecifiedBa  +
push 4  +
push edi  +
push [ebp+var_248]  +
push ebx  +
call esi  +
add esp 14h +
jmp loc_1030BD2  +
call sub_1031EC1  +
mov hModule eax +
test eax eax +
jz loc_1030B9D  +
push offset aOpenwucontext  +
push eax  +
call ds:__imp_GetProcAddress  +
push offset aIswuavailable  +
push hModule  +
mov [ebp+var_244] eax +
call ds:__imp_GetProcAddress  +
cmp [ebp+var_244] 0 +
mov [ebp+var_250] eax +
jz loc_1030B8F  +
test eax eax +
jz loc_1030B8F  +
call [ebp+var_244]  +
test eax eax +
jl loc_1030BB8  +
call [ebp+var_250]  +
test eax eax +
jz loc_1030B79  +
lea eax [ebp+var_27C] +
push eax  +
push [ebp+var_254]  +
push [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_102FF76  +
mov [ebp+var_234] eax +
test eax eax +
jz loc_1030BD2  +
jmp loc_1030BB8  +
push offset aSkippingWindow  +
push 4  +
push edi  +
push [ebp+var_248]  +
push ebx  +
call esi  +
add esp 14h +
jmp loc_1030BB8  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadIn  +
jmp loc_1030BA9  +
call ds:__imp_GetLastError  +
push eax  +
push offset aFailedToLoadWu  +
push 2  +
push edi  +
push [ebp+var_248]  +
push ebx  +
call esi  +
add esp 18h +
push [ebp+arg_8]  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call sub_1030688  +
mov [ebp+var_234] eax +
push offset aReleasewuconte  +
push hModule  +
call ds:__imp_GetProcAddress  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_1030BF3  +
lea ecx [ebp+var_27C] +
push ecx  +
call eax  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_234] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+DeviceInfoData] +
push edi  +
mov edi [ebp+DeviceInfoSet] +
mov [ebp+var_C4C] eax +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push edi  +
mov [ebp+var_C48] 0E0000203h +
mov [ebp+DriverInfoData.cbSize] 61Ch +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_1030C67  +
call ds:__imp_GetLastError  +
mov [ebp+var_C48] eax +
jmp loc_1030CCE  +
push esi  +
mov esi 622h +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push edi  +
mov [ebp+DriverInfoDetailData.cbSize] esi +
call ds:SetupDiGetDriverInfoDetailW  +
pop esi  +
test eax eax +
jnz loc_1030CAE  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_1030C5F  +
lea eax [ebp+DriverInfoDetailData.InfFileName] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_C4C]  +
call sub_102CC3F  +
test eax eax +
jl loc_1030CCE  +
and [ebp+var_C48] 0 +
mov ecx [ebp+var_4] +
mov eax [ebp+var_C48] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 61Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+DeviceInfoData] +
push esi  +
push edi  +
mov edi [ebp+DeviceInfoSet] +
mov esi 104h +
push esi  +
lea eax [ebp+SourceInfFileName] +
push eax  +
push ebx  +
push edi  +
call sub_1030C0C  +
test eax eax +
jnz loc_1030D9D  +
lea eax [ebp+SourceInfFileName] +
push eax  +
push esi  +
lea eax [ebp+OEMSourceMediaLocation] +
push eax  +
call sub_102CC3F  +
test eax eax +
jge loc_1030D3C  +
movzx eax ax +
jmp loc_1030D9D  +
lea eax [ebp+OEMSourceMediaLocation] +
push eax  +
call sub_1035183  +
test eax eax +
jz loc_1030D51  +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
push eax  +
push eax  +
push esi  +
mov word ptr [ebp+DestinationInfFileName] ax +
lea eax [ebp+DestinationInfFileName] +
push eax  +
push 8  +
push 1  +
lea eax [ebp+OEMSourceMediaLocation] +
push eax  +
lea eax [ebp+SourceInfFileName] +
push eax  +
call ds:SetupCopyOEMInfW  +
test eax eax +
jnz loc_1030D8B  +
call ds:__imp_GetLastError  +
cmp eax 50h +
jnz loc_1030D9D  +
lea eax [ebp+DestinationInfFileName] +
push eax  +
push ebx  +
push edi  +
call sub_102DCCD  +
test eax eax +
jnz $+2  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_224] eax +
xor eax eax +
push 206h  +
mov word ptr [ebp+var_20C] ax +
xor esi esi +
lea eax [ebp+var_20C+2] +
push esi  +
push eax  +
mov [ebp+DeviceInfoData] edi +
call memset  +
add esp 0Ch +
call ds:SetupGetThreadLogToken  +
push esi  +
push esi  +
push 1  +
push esi  +
mov [ebp+var_218] eax +
mov [ebp+var_214] edx +
mov [ebp+Parameter] ebx +
mov [ebp+var_238] edi +
mov [ebp+var_22C] eax +
mov [ebp+var_228] edx +
call ds:CreateEventW  +
push offset Name  +
push esi  +
push 100000h  +
mov [ebp+hEvent] eax +
call ds:OpenEventW  +
cmp [ebp+hEvent] esi +
mov esi ds:SetupWriteTextLog +
mov [ebp+var_230] eax +
mov edi offset __ImageBase +
jnz loc_1030E92  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xCrea_1  +
push 1  +
push edi  +
push [ebp+var_214]  +
mov [ebp+var_210] eax +
push [ebp+var_218]  +
call esi  +
add esp 18h +
jmp loc_103104E  +
xor ecx ecx +
cmp eax ecx +
jnz loc_1030EA6  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xOpen_0  +
jmp loc_1030E73  +
push ecx  +
push ecx  +
lea eax [ebp+Parameter] +
push eax  +
push offset StartAddress  +
push ecx  +
push ecx  +
call ds:CreateThread  +
mov [ebp+hObject] eax +
xor eax eax +
cmp [ebp+hObject] eax +
jnz loc_1030EDA  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xCrea_2  +
jmp loc_1030E73  +
test byte ptr [ebp+hKey] 20h +
jnz loc_1030F44  +
push eax  +
push eax  +
push 4  +
mov [ebp+var_210] eax +
lea eax [ebp+var_210] +
push eax  +
lea eax [ebp+var_240] +
push eax  +
push offset dword_101534C  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1030F17  +
cmp [ebp+var_240] 7 +
jz loc_1030F1E  +
and [ebp+var_210] 0 +
and [ebp+var_210] 0FFFFFFDFh +
push 0  +
push 4  +
lea eax [ebp+var_210] +
push eax  +
push 7  +
push offset dword_101534C  +
push [ebp+DeviceInfoData]  +
push ebx  +
call ds:SetupDiSetDevicePropertyW  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+hKey]  +
push [ebp+DeviceInfoData]  +
push ebx  +
call sub_103082A  +
push [ebp+hEvent]  +
mov [ebp+var_210] eax +
call ds:SetEvent  +
push 0  +
push 2710h  +
push [ebp+hObject]  +
call ds:WaitForSingleObjectEx  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push [ebp+hEvent]  +
call ds:CloseHandle  +
push [ebp+var_230]  +
and [ebp+hEvent] 0 +
call ds:CloseHandle  +
and [ebp+var_230] 0 +
cmp [ebp+var_210] 0 +
jz loc_1030FCC  +
cmp [ebp+var_210] 0E0000228h +
jnz loc_103104E  +
jmp loc_1031033  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov [ebp+NumberOfBytesWritten] 3Ch +
call sub_102E017  +
lea eax [ebp+var_224] +
push eax  +
push [ebp+DeviceInfoData]  +
push ebx  +
call sub_1030CE9  +
mov [ebp+var_210] eax +
test eax eax +
jz loc_103101A  +
push offset aDriverStoreImp  +
push 1  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 14h +
jmp loc_103104E  +
push offset aDriverSelected  +
push 4  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 14h +
push [ebp+hKey]  +
push [ebp+DeviceInfoData]  +
push ebx  +
push [ebp+var_224]  +
call sub_102ED54  +
mov [ebp+var_210] eax +
cmp word ptr [ebp+var_20C] 0 +
jz loc_103109E  +
mov eax hModule +
test eax eax +
jz loc_1031095  +
push offset aRemovewudirect  +
push eax  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_103107C  +
lea ecx [ebp+var_20C] +
push ecx  +
call eax  +
jmp loc_1031095  +
push offset aFailedToLoadCl  +
push 2  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 14h +
xor eax eax +
mov word ptr [ebp+var_20C] ax +
cmp [ebp+hEvent] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10310B6  +
push [ebp+hEvent]  +
call ds:CloseHandle  +
cmp [ebp+var_230] 0 +
jz loc_10310CB  +
push [ebp+var_230]  +
call ds:CloseHandle  +
mov eax hModule +
test eax eax +
jz loc_10310DB  +
push eax  +
call ds:__imp_FreeLibrary  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 22Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_224] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_218] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_220] eax +
mov [ebp+var_21C] esi +
call ds:SetupGetThreadLogToken  +
mov [ebp+var_214] eax +
mov [ebp+var_210] edx +
test ebx ebx +
jz loc_1031248  +
test esi esi +
jz loc_1031248  +
mov esi ds:SetupWriteTextLog +
push edi  +
push ebx  +
push offset aInfpathWs  +
push 4  +
mov edi offset __ImageBase +
push edi  +
push edx  +
push eax  +
call esi  +
push [ebp+var_21C]  +
push offset aDrivernodename  +
push 4  +
push edi  +
push [ebp+var_210]  +
push [ebp+var_214]  +
call esi  +
add esp 30h +
xor eax eax +
push eax  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push eax  +
push eax  +
push ebx  +
call ds:SetupGetInfDriverStoreLocationW  +
test eax eax +
jz loc_10311D0  +
lea eax [ebp+var_20C] +
push eax  +
push offset aDriverstorepat  +
push 4  +
push edi  +
push [ebp+var_210]  +
push [ebp+var_214]  +
call esi  +
add esp 18h +
lea ebx [ebp+var_20C] +
jmp loc_10311D8  +
push ebx  +
call sub_1035183  +
mov ebx eax +
push offset aBuildingDriver  +
push 4  +
push edi  +
push [ebp+var_210]  +
push [ebp+var_214]  +
call esi  +
add esp 14h +
push [ebp+var_21C]  +
push ebx  +
push [ebp+var_220]  +
push [ebp+var_218]  +
call pSetupDiBuildInfoDataFromStrongName  +
pop edi  +
test eax eax +
jnz loc_1031216  +
call ds:__imp_GetLastError  +
jmp loc_103124B  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov [ebp+NumberOfBytesWritten] 3Ch +
call sub_102E017  +
push [ebp+hKey]  +
push [ebp+var_220]  +
push [ebp+var_218]  +
push [ebp+var_224]  +
call sub_102ED54  +
jmp loc_103124B  +
push 57h  +
pop eax  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3B0h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 206h  +
mov word ptr [ebp+var_39C] ax +
xor edi edi +
lea eax [ebp+var_39C+2] +
push edi  +
push eax  +
call memset  +
xor eax eax +
push 18Eh  +
mov word ptr [ebp+var_194] ax +
lea eax [ebp-192h] +
push edi  +
push eax  +
call memset  +
add esp 18h +
mov [ebp+var_3A0] edi +
call ds:SetupGetThreadLogToken  +
push [ebp+arg_0]  +
mov ebx eax +
mov esi 0C8h +
push esi  +
lea eax [ebp+var_194] +
push eax  +
mov [ebp+var_3AC] edx +
call sub_102CC3F  +
xor ecx ecx +
lea eax [ebp+ecx*2+var_194] +
movzx edx word ptr [eax] +
cmp dx di +
jz loc_10312FE  +
cmp dx 5Ch +
jnz loc_10312F9  +
push 23h  +
pop edx  +
mov [eax] dx +
inc ecx  +
cmp ecx esi +
jb loc_10312DE  +
lea eax [ebp+var_194] +
push eax  +
lea eax [ebp+var_3A8] +
push eax  +
call ds:RtlInitUnicodeStringEx  +
push edi  +
lea eax [ebp+var_3A8] +
push eax  +
push eax  +
call ds:RtlUpcaseUnicodeString  +
lea eax [ebp+var_194] +
push eax  +
push offset aGlobalDrvins_0  +
lea eax [ebp+var_39C] +
push 104h  +
push eax  +
call sub_102E0EC  +
add esp 10h +
lea eax [ebp+var_3A0] +
push eax  +
push 1F0002h  +
lea eax [ebp+var_39C] +
push eax  +
call sub_1039EBB  +
cmp [ebp+var_3A0] edi +
jnz loc_1031384  +
call ds:__imp_GetLastError  +
push eax  +
push offset aError08xCrea_3  +
push 2  +
push offset __ImageBase  +
push [ebp+var_3AC]  +
push ebx  +
call ds:SetupWriteTextLog  +
add esp 18h +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3A0] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
and [ebp+var_24] 0 +
and [ebp+hObject] 0 +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_38] eax +
lea eax [ebp+var_34] +
push eax  +
push esi  +
push 10h  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
call SetupInstallLogCreateEventGroup  +
mov [ebp+var_3C] eax +
test eax eax +
jz loc_10313ED  +
push [ebp+var_30]  +
push [ebp+var_34]  +
jmp loc_10313F3  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
call ds:SetupSetThreadLogToken  +
push 0  +
push 0  +
call ds:SetupDiCreateDeviceInfoList  +
mov [ebp+DeviceInfoSet] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1031419  +
call ds:__imp_GetLastError  +
mov [ebp+var_24] eax +
jmp loc_10314D8  +
lea ecx [ebp+DeviceInfoData] +
push ecx  +
push 0  +
push 0  +
push esi  +
push eax  +
mov [ebp+DeviceInfoData] 1Ch +
call ds:SetupDiOpenDeviceInfoW  +
test eax eax +
jnz loc_103143F  +
call ds:__imp_GetLastError  +
jmp loc_10314CC  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call sub_1031C91  +
test eax eax +
jnz loc_1031471  +
push offset aDebuginstall  +
call sub_1031928  +
test eax eax +
jz loc_1031471  +
push esi  +
push offset aDrvinst_exeE_0  +
push 0  +
push 23h  +
call ds:DbgPrintEx  +
add esp 10h +
int 3  +
push esi  +
call sub_1031260  +
mov [ebp+hObject] eax +
call pSetupGetGlobalFlags  +
and eax 0FFFFFFFDh +
push eax  +
call pSetupSetGlobalFlags  +
mov eax [ebp+arg_0] +
dec eax  +
jz loc_10314BC  +
dec eax  +
jz loc_10314A6  +
dec eax  +
jnz loc_10314CF  +
push [ebp+hKey]  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
push edi  +
call sub_102DE07  +
jmp loc_10314CC  +
push [ebp+hKey]  +
lea eax [ebp+DeviceInfoData] +
push [ebp+var_38]  +
push ebx  +
push eax  +
push [ebp+DeviceInfoSet]  +
push edi  +
call sub_10310F4  +
jmp loc_10314CC  +
push [ebp+hKey]  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
push edi  +
call sub_1030DB5  +
mov [ebp+var_24] eax +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiDestroyDeviceInfoList  +
cmp [ebp+var_3C] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10314EF  +
push [ebp+var_24]  +
push [ebp+var_30]  +
push [ebp+var_34]  +
call SetupInstallLogCloseEventGroup  +
cmp [ebp+hObject] 0 +
jz loc_10314FE  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_24] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call ds:GetSystemWow64DirectoryW  +
test eax eax +
jnz loc_103154E  +
call ds:__imp_GetLastError  +
cmp eax 78h +
jnz loc_103154E  +
xor eax eax +
jmp loc_1031551  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
mov esi offset dword_101534C +
push esi  +
push [ebp+arg_4]  +
mov [ebp+var_4] edi +
push [ebp+arg_0]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_10315B8  +
cmp [ebp+var_8] 7 +
jnz loc_10315B8  +
mov eax [ebp+arg_8] +
or [ebp+var_4] eax +
push edi  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 7  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupDiSetDevicePropertyW  +
test eax eax +
jnz loc_10315C0  +
call ds:__imp_GetLastError  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
push esi  +
push edi  +
push 64h  +
xor edi edi +
lea eax [ebp+ClassInstallParams] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 1Eh  +
pop esi  +
push 64h  +
lea eax [ebp+ClassInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+ClassInstallParams.cbSize] 8 +
push [ebp+DeviceInfoSet]  +
mov [ebp+ClassInstallParams.InstallFunction] esi +
call ds:SetupDiSetClassInstallParamsW  +
test eax eax +
jz loc_1031665  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
push esi  +
call ds:SetupDiCallClassInstaller  +
test eax eax +
jnz loc_1031629  +
call ds:__imp_GetLastError  +
cmp eax 0E000020Eh +
jnz loc_1031665  +
push 0  +
push 64h  +
lea eax [ebp+ClassInstallParams] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetClassInstallParamsW  +
test eax eax +
jz loc_1031665  +
cmp [ebp+ClassInstallParams.InstallFunction] esi +
jnz loc_1031665  +
cmp [ebp+var_8] edi +
jz loc_1031665  +
xor edi edi +
xor esi esi +
inc edi  +
cmp [ebp+var_8] esi +
jbe loc_1031665  +
push [ebp+esi*4+var_58]  +
call DestroyPropertySheetPage  +
inc esi  +
cmp esi [ebp+var_8] +
jb loc_1031655  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+DeviceInfoSet] +
push edi  +
mov edi [ebp+DeviceInfoData] +
lea eax [ebp+DeviceInstallParams] +
push eax  +
push edi  +
xor ebx ebx +
push esi  +
mov [ebp+var_234] ebx +
mov [ebp+DeviceInstallParams.cbSize] 22Ch +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_10316EF  +
test byte ptr [ebp+DeviceInstallParams.FlagsEx] 8 +
jnz loc_10316E5  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+var_238] +
push eax  +
push offset dword_101543C  +
push edi  +
push esi  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jnz loc_10316EF  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_10316EF  +
mov [ebp+var_234] 1 +
mov ecx [ebp+var_4] +
mov eax [ebp+var_234] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+DriverInfoData] +
push ebx  +
mov ebx [ebp+DeviceInfoData] +
push esi  +
mov esi ds:SetupDiGetDriverInfoDetailW +
push edi  +
mov edi [ebp+DeviceInfoSet] +
lea ecx [ebp+DriverInfoDetailDataSize] +
push ecx  +
push 0  +
push 0  +
push eax  +
push ebx  +
push edi  +
mov [ebp+var_210] eax +
call esi  +
mov [ebp+var_214] eax +
call ds:__imp_GetLastError  +
cmp [ebp+var_214] 0 +
jnz loc_10317A3  +
cmp eax 7Ah +
jnz loc_10317A3  +
push [ebp+DriverInfoDetailDataSize]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_10317A3  +
push 0  +
mov dword ptr [eax] 622h +
push [ebp+DriverInfoDetailDataSize]  +
push eax  +
push [ebp+var_210]  +
push ebx  +
push edi  +
call esi  +
test eax eax +
jnz loc_10317B6  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
mov esi [ebp+hMem] +
xor edi edi +
push edi  +
push 2  +
push edi  +
lea eax [esi+218h] +
push eax  +
call ds:SetupOpenInfFileW  +
mov [ebp+InfHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10317DD  +
push esi  +
jmp loc_103179D  +
lea ecx [ebp+ContextOut] +
push ecx  +
push offset aInteractiveins  +
push offset aControlflags  +
push eax  +
mov [ebp+var_214] edi +
call ds:SetupFindFirstLineW  +
test eax eax +
jz loc_1031897  +
mov edi ds:SetupGetStringFieldW +
mov ebx 104h +
push 0  +
push ebx  +
xor eax eax +
lea ecx [ebp+var_20C] +
inc eax  +
push ecx  +
mov [ebp+var_210] eax +
push eax  +
jmp loc_103186F  +
mov esi [ebp+hMem] +
add esi 620h +
jmp loc_1031853  +
push eax  +
push esi  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_1031848  +
mov [ebp+var_214] 1 +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
lea eax [ebp+var_20C] +
jnz loc_1031832  +
inc [ebp+var_210]  +
push 0  +
push ebx  +
push eax  +
push [ebp+var_210]  +
lea eax [ebp+ContextOut] +
push eax  +
call edi  +
test eax eax +
jnz loc_1031824  +
lea eax [ebp+ContextOut] +
push eax  +
push offset aInteractiveins  +
push eax  +
call ds:SetupFindNextMatchLineW  +
test eax eax +
jnz loc_103180E  +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_214] +
jmp loc_10317A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
push offset dword_101C99C  +
push offset aSoftwareMicr_0  +
push 80000002h  +
call sub_1036D01  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor eax eax +
push eax  +
lea edi [ebp+var_4] +
stos   +
push 2  +
lea eax [ebp+var_4] +
push eax  +
push 23h  +
xor esi esi +
call ds:NtQuerySystemInformation  +
test eax eax +
jl loc_103191D  +
cmp byte ptr [ebp+var_4] 0 +
jz loc_103191B  +
cmp byte ptr [ebp+var_4+1] 0 +
jnz loc_103191B  +
inc esi  +
jmp loc_103191D  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_0]  +
xor ebx ebx +
xor esi esi +
call sub_10318BF  +
sub eax ebx +
jz loc_10319C3  +
dec eax  +
jz loc_10319AD  +
dec eax  +
jz loc_103195C  +
push offset aDrvinst_exeUnk  +
push ebx  +
push 23h  +
call ds:DbgPrintEx  +
add esp 0Ch +
jmp loc_10319C3  +
push edi  +
call ds:GetCurrentProcessId  +
mov esi ds:DbgPrintEx +
push eax  +
push offset aDrvinst_exeWai  +
push ebx  +
push 23h  +
call esi  +
mov edi ds:IsDebuggerPresent +
add esp 10h +
jmp loc_1031997  +
push offset a_  +
push ebx  +
push 23h  +
call esi  +
add esp 0Ch +
push 3E8h  +
call ds:Sleep  +
call edi  +
test eax eax +
jz loc_103197F  +
push offset aDebuggerDetect  +
push ebx  +
push 23h  +
call esi  +
add esp 0Ch +
pop edi  +
jmp loc_10319C0  +
call ds:IsDebuggerPresent  +
test eax eax +
jnz loc_10319C0  +
call sub_10318E8  +
test eax eax +
jz loc_10319C3  +
xor esi esi +
inc esi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 634h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+DeviceInfoData] +
push esi  +
mov esi [ebp+DeviceInfoSet] +
test eax eax +
jz loc_10319F8  +
mov ecx eax +
jmp loc_1031A1B  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push esi  +
mov [ebp+DriverInfoData.cbSize] 61Ch +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jz loc_1031A59  +
lea ecx [ebp+DriverInfoData] +
push edi  +
xor eax eax +
lea edi [ebp+DriverInstallParams] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+DriverInstallParams] +
push eax  +
push ecx  +
push ebx  +
push esi  +
mov [ebp+DriverInstallParams.cbSize] 14h +
call ds:SetupDiGetDriverInstallParamsW  +
pop edi  +
test eax eax +
jz loc_1031A59  +
test [ebp+DriverInstallParams.Flags] 40000h +
jz loc_1031A59  +
xor eax eax +
inc eax  +
jmp loc_1031A5B  +
xor eax eax +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E3Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 61Ch +
xor ebx ebx +
push esi  +
mov [ebp+DeviceInfoData] eax +
lea eax [ebp+DriverInfoData] +
push ebx  +
push eax  +
mov [ebp+DeviceInfoSet] edi +
mov [ebp+dwErrCode] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
mov [ebp+DriverInfoData.cbSize] esi +
push edi  +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_1031AE7  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1031C64  +
mov esi ds:SetupDiGetDriverInfoDetailW +
lea eax [ebp+DriverInfoDetailDataSize] +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push edi  +
call esi  +
test eax eax +
jz loc_1031B19  +
mov [ebp+dwErrCode] 0Dh +
jmp loc_1031C64  +
mov edi ds:__imp_GetLastError +
call edi  +
cmp eax 7Ah +
jnz loc_1031ADC  +
push [ebp+DriverInfoDetailDataSize]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jnz loc_1031B4D  +
mov [ebp+dwErrCode] 8 +
jmp loc_1031C50  +
push ebx  +
mov dword ptr [eax] 622h +
push [ebp+DriverInfoDetailDataSize]  +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call esi  +
test eax eax +
jnz loc_1031B81  +
call edi  +
mov [ebp+dwErrCode] eax +
jmp loc_1031C50  +
mov [ebp+var_E28] ebx +
mov eax offset dword_1015324 +
cmp [ebp+var_E28] ebx +
jz loc_1031B99  +
mov eax offset dword_1015338 +
push ebx  +
push ebx  +
push 800h  +
lea ecx [ebp+var_804] +
push ecx  +
lea ecx [ebp+var_E3C] +
push ecx  +
push eax  +
push [ebp+DeviceInfoData]  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1031C33  +
cmp [ebp+var_E3C] 2012h +
jnz loc_1031C33  +
xor eax eax +
mov [ebp+var_6] ax +
mov [ebp+var_8] ax +
lea edi [ebp+var_804] +
cmp word ptr [ebp+var_804] bx +
jz loc_1031C33  +
mov eax [ebp+hMem] +
lea esi [eax+620h] +
add eax 620h +
cmp [eax] bx +
jz loc_1031C23  +
push 1  +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_1031C50  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp [esi] bx +
jnz loc_1031C00  +
push edi  +
call ds:lstrlenW  +
lea edi [edi+eax*2+2] +
cmp [edi] bx +
jnz loc_1031BEA  +
inc [ebp+var_E28]  +
cmp [ebp+var_E28] 2 +
jb loc_1031B87  +
mov [ebp+dwErrCode] 0E0000228h +
cmp [ebp+hMem] ebx +
jz loc_1031C64  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1018h +
call __alloca_probe  +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_1018] eax +
mov eax [ebp+arg_4] +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_1010] eax +
mov [ebp+var_100C] ebx +
mov [ebp+var_1008] ebx +
mov esi [ebp+var_1008] +
mov eax offset dword_1015324 +
cmp esi ebx +
jz loc_1031CE1  +
mov eax offset dword_1015338 +
push ebx  +
push ebx  +
push 800h  +
shl esi 0Bh +
lea edi [ebp+esi+var_1004] +
push edi  +
lea ecx [ebp+var_1014] +
push ecx  +
push eax  +
push [ebp+var_1010]  +
push [ebp+var_1018]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1031D6C  +
cmp [ebp+var_1014] 2012h +
jnz loc_1031D6C  +
xor eax eax +
mov [ebp+esi+var_806] ax +
mov [ebp+esi+var_808] ax +
mov esi edi +
jmp loc_1031D57  +
xor edi edi +
inc edi  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push offset aStorageVolumes  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_1031D5E  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp [esi] bx +
jnz loc_1031D33  +
jmp loc_1031D64  +
mov [ebp+var_100C] edi +
cmp [ebp+var_100C] ebx +
jnz loc_1031D7F  +
inc [ebp+var_1008]  +
cmp [ebp+var_1008] 2 +
jb loc_1031CCD  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_100C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
and [ebp+hKey] esi +
push esi  +
push offset aSoftwareMicr_1  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1031DD4  +
inc esi  +
cmp [ebp+hKey] eax +
jz loc_1031DD4  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
xor esi esi +
cmp eax esi +
jz loc_1031EB7  +
push ebx  +
push edi  +
mov edi ds:RegOpenKeyExW +
mov [eax] esi +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push esi  +
push offset aSoftwarePoli_0  +
mov ebx 80000002h +
push ebx  +
mov [ebp+hKey] esi +
mov [ebp+var_10] esi +
call edi  +
test eax eax +
jnz loc_1031E62  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1031E51  +
mov eax dword ptr [ebp+Data] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov [ebp+var_10] 1 +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] esi +
cmp [ebp+var_10] esi +
jnz loc_1031EB5  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push esi  +
push offset aSoftwareMicr_2  +
push ebx  +
call edi  +
test eax eax +
jnz loc_1031EAC  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1031EA3  +
mov eax dword ptr [ebp+Data] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_1031EB5  +
mov [eax] esi +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor eax eax +
xor esi esi +
push 206h  +
mov [ebp+LibFileName] ax +
lea eax [ebp-20Ah] +
push esi  +
push eax  +
mov [ebp+hKey] esi +
call memset  +
add esp 0Ch +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push esi  +
push offset aSoftwareMicr_3  +
push 80000002h  +
xor ebx ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1031F91  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push offset aWusearchlibrar  +
push [ebp+hKey]  +
mov [ebp+Type] esi +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1031F7D  +
cmp [ebp+Type] 1 +
jnz loc_1031F7D  +
cmp [ebp+cbData] 208h +
ja loc_1031F7D  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov ebx eax +
cmp [ebp+hKey] esi +
jz loc_1031F91  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
push 0  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_1015428  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1031FD9  +
cmp [ebp+arg_4] 7 +
jz loc_1031FDD  +
and [ebp+var_4] 0 +
mov eax [ebp+var_4] +
shr eax 2 +
and eax 1 +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 820h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_820] eax +
mov eax [ebp+arg_4] +
push esi  +
xor esi esi +
mov [ebp+var_814] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_818] eax +
mov [ebp+dwErrCode] esi +
mov [ebp+var_810] esi +
mov [ebp+var_808] esi +
mov eax offset dword_1015324 +
cmp [ebp+var_808] esi +
jz loc_103204B  +
mov eax offset dword_1015338 +
push esi  +
push esi  +
push 800h  +
lea ecx [ebp+var_804] +
push ecx  +
lea ecx [ebp+var_81C] +
push ecx  +
push eax  +
push [ebp+var_814]  +
push [ebp+var_820]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_10320DB  +
cmp [ebp+var_81C] 2012h +
jnz loc_10320DB  +
xor eax eax +
mov [ebp+var_6] ax +
mov [ebp+var_8] ax +
lea edi [ebp+var_804] +
cmp word ptr [ebp+var_804] si +
jz loc_10320DB  +
cmp word ptr [ebx] 0 +
mov esi ebx +
jz loc_10320C8  +
push 1  +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CompareStringOrdinal  +
push esi  +
cmp eax 2 +
jz loc_103211B  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_10320A4  +
push edi  +
call ds:lstrlenW  +
lea edi [edi+eax*2+2] +
cmp word ptr [edi] 0 +
jnz loc_103209C  +
xor esi esi +
inc [ebp+var_808]  +
cmp [ebp+var_808] 2 +
jb loc_1032039  +
mov [ebp+dwErrCode] 0E0000228h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_810] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 14h  +
push [ebp+arg_10]  +
mov [ebp+var_810] 1 +
push [ebp+var_818]  +
call sub_102CC3F  +
jmp loc_10320F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_1032155  +
cmp [ebp+arg_0] eax +
jnz loc_1032159  +
cmp ecx eax +
jnz loc_103215E  +
jmp loc_1032159  +
cmp ecx eax +
jz loc_103215E  +
cmp ecx [ebp+arg_4] +
jbe loc_1032163  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10321A1  +
cmp [ebp+arg_4] eax +
jz loc_103219D  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_103219D  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1032180  +
test esi esi +
jnz loc_10321A9  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10321B7  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_10321ED  +
test [ebp+arg_8] 1000h +
jz loc_10321ED  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_1032235  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_103221D  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_1032235  +
test esi esi +
jbe loc_103224E  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_103224E  +
test [ebp+arg_8] 800h +
jz loc_103224E  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+arg_C] +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_8] 4 +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EtwEventWrite  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push esi  +
push esi  +
push 4  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_1015374  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_10322CB  +
cmp [ebp+arg_4] 7 +
jnz loc_10322CB  +
test byte ptr [ebp+arg_0] 4 +
jz loc_10322CB  +
inc esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword_103D0B8 0 +
jnz loc_103230C  +
push 1  +
push 0  +
push offset aDenyremovabled  +
push offset aRestrictions  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
mov dword_103D0BC eax +
mov dword_103D0B8 1 +
xor eax eax +
cmp dword_103D0BC eax +
setnz al  +
retn   +
***
cmp dword_103D0C0 0 +
jnz loc_1032352  +
push 1  +
push 0  +
push offset aDenyunspecifie  +
push offset aRestrictions  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
mov dword_103D0C4 eax +
mov dword_103D0C0 1 +
xor eax eax +
cmp dword_103D0C4 eax +
setnz al  +
retn   +
***
cmp dword_103D0C8 0 +
jnz loc_1032398  +
push 0  +
push 0  +
push offset aAllowadmininst  +
push offset aRestrictions  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
mov dword_103D0CC eax +
mov dword_103D0C8 1 +
xor eax eax +
cmp dword_103D0CC eax +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 0 +
jz loc_1032432  +
push ebx  +
mov ebx ds:CompareStringOrdinal +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 0FFFFFFFFh  +
push offset asc_102A870  +
push 0FFFFFFFFh  +
push esi  +
call ebx  +
cmp eax 2 +
jz loc_1032424  +
mov edi [ebp+arg_4] +
jmp loc_10323F9  +
push 1  +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
call ebx  +
cmp eax 2 +
jz loc_1032412  +
push edi  +
call ds:lstrlenW  +
lea edi [edi+eax*2+2] +
cmp word ptr [edi] 0 +
jnz loc_10323DF  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_10323C5  +
jmp loc_1032430  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_103241B  +
mov [eax] esi +
mov [ebp+var_4] 1 +
jmp loc_1032430  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_103242D  +
mov [eax] esi +
mov [ebp+var_4] edi +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 0Ch  +
***
cmp dword_103D0EC 0 +
jnz loc_103247A  +
push 1  +
push 0  +
push offset aAllowdevicecla  +
push offset aRestrictions  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_103D0E8 eax +
mov dword_103D0EC 1 +
retn   +
mov eax dword_103D0E8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 640h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_640] +
stos   +
mov ax [ebp+arg_4] +
mov [ebp+var_630] ax +
xor eax eax +
xor edi edi +
mov esi 620h +
push esi  +
mov [ebp+var_62E] ax +
lea eax [ebp+var_624] +
push edi  +
push eax  +
mov [ebp+var_640] 1Ch +
mov [ebp+var_63C] 2 +
mov [ebp+var_638] 6 +
mov [ebp+var_634] 1 +
mov [ebp+var_62C] edi +
mov [ebp+var_628] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+var_624] +
push eax  +
lea eax [ebp+var_640] +
push eax  +
push ebx  +
mov [ebp+var_624] esi +
call ds:SetupVerifyInfFileW  +
test eax eax +
jnz loc_1032540  +
call ds:__imp_GetLastError  +
mov esi eax +
cmp esi edi +
jz loc_1032540  +
cmp esi 0E0000241h +
jnz loc_1032542  +
xor esi esi +
push esi  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp esi edi +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 644h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_644] +
stos   +
mov ax [ebp+arg_4] +
xor edx edx +
mov [ebp+var_634] ax +
xor eax eax +
push 620h  +
mov [ebp+var_632] ax +
push edx  +
lea eax [ebp+var_624] +
push eax  +
mov [ebp+dwErrCode] edx +
mov [ebp+var_644] 1Ch +
mov [ebp+var_640] 2 +
mov [ebp+var_63C] 6 +
mov [ebp+var_638] 1 +
mov [ebp+var_630] edx +
mov [ebp+var_62C] edx +
call memset  +
add esp 0Ch +
lea eax [ebp+var_624] +
push eax  +
lea eax [ebp+var_644] +
push eax  +
push ebx  +
mov [ebp+var_624] 620h +
call ds:SetupVerifyInfFileW  +
pop edi  +
pop ebx  +
test eax eax +
jnz loc_1032625  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1032638  +
cmp [ebp+var_8] 0D000003h +
jz loc_1032638  +
mov [ebp+dwErrCode] 0Dh +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
setz al  +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+TokenInformation] +
lea eax [ebp+ReturnLength] +
push eax  +
push 4  +
lea eax [ebp+TokenInformation] +
push eax  +
push 8  +
xor esi esi +
push edi  +
mov [ebp+var_8] esi +
mov [ebp+hObject] esi +
call ds:GetTokenInformation  +
test eax eax +
jz loc_10326C1  +
cmp [ebp+TokenInformation] 2 +
jz loc_10326AC  +
lea eax [ebp+hObject] +
push eax  +
push 2  +
push 2  +
push esi  +
push esi  +
push edi  +
call ds:DuplicateTokenEx  +
test eax eax +
jz loc_10326CF  +
mov edi [ebp+hObject] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push edi  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_10326C1  +
mov [ebp+var_8] esi +
cmp [ebp+hObject] esi +
jz loc_10326CF  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov esi [ebp+arg_0] +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+nSubAuthority1]  +
lea eax [ebp+pIdentifierAuthority] +
push 20h  +
push 2  +
push eax  +
xor edi edi +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_1032754  +
push [ebp+pSid]  +
call ds:IsValidSid  +
test eax eax +
jz loc_1032746  +
push [ebp+pSid]  +
push esi  +
call sub_1032662  +
mov edi eax +
cmp [ebp+pSid] ebx +
jz loc_1032754  +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
xor esi esi +
and [ebp+hMem] esi +
push offset aS1580956008885  +
call ConvertStringSidToSidW  +
test eax eax +
jz loc_10327B3  +
push [ebp+hMem]  +
call ds:IsValidSid  +
test eax eax +
jz loc_10327A4  +
push [ebp+hMem]  +
push [ebp+TokenInformation]  +
call sub_1032662  +
mov esi eax +
cmp [ebp+hMem] 0 +
jz loc_10327B3  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C70h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_C48] 0 +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1015314 +
lea esi [ebx+4] +
xor edx edx +
cmps   +
mov [ebp+DeviceInfoSet] eax +
jnz loc_10328D9  +
push ebx  +
push eax  +
call sub_1031C91  +
test eax eax +
jz loc_10328D9  +
mov esi 61Ch +
push esi  +
xor edi edi +
lea eax [ebp+DriverInfoData] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DriverInfoData.cbSize] esi +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jnz loc_1032857  +
call ds:__imp_GetLastError  +
cmp eax 0E0000203h +
jnz loc_10328D9  +
jmp loc_10328CF  +
mov esi 622h +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push edi  +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push ebx  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DriverInfoDetailData.cbSize] esi +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_103289F  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_10328D9  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+SystemInfo] +
stos   +
lea eax [ebp+SystemInfo] +
push eax  +
call ds:GetSystemInfo  +
push dword ptr [ebp+SystemInfo.anonymous_0]  +
lea eax [ebp+DriverInfoDetailData.InfFileName] +
push eax  +
call sub_1032566  +
test eax eax +
jz loc_10328D9  +
mov [ebp+var_C48] 1 +
mov ecx [ebp+var_4] +
mov eax [ebp+var_C48] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 840h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+DriverInfoData] eax +
xor esi esi +
push esi  +
lea eax [ebp+var_838] +
push eax  +
push 208h  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+var_83C] +
push eax  +
push offset dword_10153C4  +
push ebx  +
push edi  +
mov [ebp+dwErrCode] esi +
mov [ebp+var_838] esi +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jnz loc_1032967  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1032A06  +
cmp [ebp+var_83C] 12h +
jnz loc_10329FC  +
cmp [ebp+String1] si +
jz loc_10329FC  +
mov eax [ebp+var_838] +
shr eax 1 +
cmp eax 104h +
ja loc_10329FC  +
cmp [ebp+eax*2+var_20E] si +
jnz loc_10329FC  +
mov esi 622h +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
push esi  +
lea eax [ebp+DriverInfoDetailData] +
push eax  +
push [ebp+DriverInfoData]  +
mov [ebp+DriverInfoDetailData.cbSize] esi +
push ebx  +
push edi  +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_10329DA  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_103295C  +
lea eax [ebp+DriverInfoDetailData.InfFileName] +
push eax  +
call sub_1035183  +
test eax eax +
jz loc_10329FC  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_1032A06  +
mov [ebp+dwErrCode] 0Dh +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebx  +
push edi  +
push offset aDrvinst_exe_mu  +
push 1  +
xor ebx ebx +
push ebx  +
call ds:CreateMutexW  +
mov edi eax +
cmp edi ebx +
jnz loc_1032A57  +
call ds:__imp_GetLastError  +
mov ebx eax +
jmp loc_1032A85  +
push esi  +
mov esi ds:__imp_GetLastError +
call esi  +
cmp eax 0B7h +
jnz loc_1032A84  +
push 0  +
push 0FFFFFFFFh  +
push edi  +
call ds:WaitForSingleObjectEx  +
cmp eax 0FFFFFFFFh +
jnz loc_1032A7D  +
call esi  +
mov ebx eax +
jmp loc_1032A84  +
test eax eax +
jz loc_1032A84  +
push 0Dh  +
pop ebx  +
pop esi  +
push ebx  +
call ds:SetLastError  +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1BCh +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+DeviceInfoSet] +
push esi  +
mov esi ds:SetupDiEnumDeviceInfo +
push edi  +
xor edx edx +
push 7  +
mov [ebp+var_1BC] eax +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInfoData] +
stos   +
lea eax [ebp+DeviceInfoData] +
push eax  +
mov [ebp+var_1B8] edx +
mov [ebp+var_1B4] edx +
push edx  +
jmp loc_1032B45  +
inc [ebp+var_1B4]  +
push 0  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push ebx  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jz loc_1032B2B  +
xor edi edi +
inc edi  +
push edi  +
push 0FFFFFFFFh  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+var_1BC]  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_1032B58  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInfoData] +
stos   +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+var_1B4]  +
push ebx  +
mov [ebp+DeviceInfoData.cbSize] 1Ch +
call esi  +
test eax eax +
jnz loc_1032AE5  +
jmp loc_1032B5E  +
mov [ebp+var_1B8] edi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1B8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 8  +
***
call __SEH_prolog4  +
retn   +
***
push offset aDisablesendgen  +
push offset aSettings  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
push offset aDisablesendreq  +
push offset aSettings  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi 12Ch +
push esi  +
push esi  +
push offset aInstalltimeout  +
push offset aSettings  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
cmp eax esi +
jnb loc_1032D1D  +
mov eax esi +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx 3E8h +
mul  ecx +
push edx  +
push eax  +
call sub_102D16E  +
pop esi  +
test eax eax +
jge loc_1032D38  +
or [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_4] +
leave   +
retn   +
***
push offset aDisablesystemr  +
push offset aSettings  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036D01  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_103213A  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_1032E9C  +
test [ebp+arg_14] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_1032DB1  +
cmp [ebp+arg_8] eax +
jnz loc_1032DB1  +
mov [ebp+arg_8] offset dword_101C99C +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_1032DD3  +
mov esi 80070057h +
cmp ecx eax +
jz loc_1032E55  +
xor eax eax +
mov [edi] ax +
jmp loc_1032E55  +
cmp ecx eax +
jnz loc_1032DF4  +
mov edx [ebp+arg_8] +
cmp [edx] ax +
jz loc_1032E86  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1032E55  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ecx +
mov ecx edi +
call sub_103216C  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1032E52  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_1032E86  +
cmp ebx 1 +
jbe loc_1032E86  +
lea ecx [ebx+ebx] +
cmp ecx 2 +
jbe loc_1032E86  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_1032E86  +
mov ecx [ebp+arg_4] +
test [ebp+arg_14] 1C00h +
jz loc_1032E7A  +
test ecx ecx +
jz loc_1032E7A  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_10321C3  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_1032E86  +
cmp esi 8007007Ah +
jnz loc_1032E9B  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1032E92  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1032E9B  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1020h +
call __alloca_probe  +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_1020] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_1014] eax +
mov eax [ebp+arg_C] +
xor ecx ecx +
mov [ebp+var_100C] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1018] eax +
mov [ebp+var_1008] ecx +
mov [ebp+var_1010] ecx +
cmp eax ecx +
jz loc_1032F02  +
cmp [ebp+arg_14] ecx +
jbe loc_1032F02  +
xor edx edx +
mov [eax] dx +
push ebx  +
push esi  +
push edi  +
cmp [ebp+arg_8] ecx +
jz loc_1032F68  +
cmp dword_103D0D8 ecx +
jz loc_1032F1A  +
cmp dword_103D0DC ecx +
jnz loc_1032F42  +
lea eax [ebp+var_1008] +
push eax  +
push offset aDenydeviceids  +
mov ebx offset aRestrictions +
push ebx  +
mov edi offset aSoftwarePolici +
push edi  +
mov esi 80000002h +
push esi  +
call sub_1036DE5  +
cmp eax 2 +
jnz loc_1032F54  +
xor eax eax +
inc eax  +
mov dword_103D0D8 eax +
mov dword_103D0DC eax +
jmp loc_10330E3  +
test eax eax +
jnz loc_10330DA  +
mov dword_103D0D8 1 +
jmp loc_1032FC4  +
cmp dword_103D0E0 ecx +
jz loc_1032F78  +
cmp dword_103D0E4 ecx +
jnz loc_1032FA0  +
lea eax [ebp+var_1008] +
push eax  +
push offset aAllowdeviceids  +
mov ebx offset aRestrictions +
push ebx  +
mov edi offset aSoftwarePolici +
push edi  +
mov esi 80000002h +
push esi  +
call sub_1036DE5  +
cmp eax 2 +
jnz loc_1032FB2  +
xor eax eax +
inc eax  +
mov dword_103D0E0 eax +
mov dword_103D0E4 eax +
jmp loc_10330E3  +
test eax eax +
jnz loc_10330DA  +
mov dword_103D0E0 1 +
xor eax eax +
cmp [ebp+arg_8] eax +
jz loc_103300F  +
cmp [ebp+var_100C] eax +
jz loc_103300F  +
cmp dword_103D0D0 eax +
jnz loc_1033002  +
push 1  +
push eax  +
push offset aDenydeviceidsr  +
push ebx  +
push edi  +
push esi  +
call sub_1036D01  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_103D0D4 eax +
mov dword_103D0D0 1 +
jmp loc_1033007  +
mov eax dword_103D0D4 +
mov ecx [ebp+var_100C] +
mov [ecx] eax +
xor ebx ebx +
mov eax offset dword_1015324 +
test ebx ebx +
jz loc_103301F  +
mov eax offset dword_1015338 +
push 0  +
push 0  +
push 800h  +
mov esi ebx +
shl esi 0Bh +
lea edi [ebp+esi+var_1004] +
push edi  +
lea ecx [ebp+var_101C] +
push ecx  +
push eax  +
push [ebp+var_1014]  +
push [ebp+var_1020]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jnz loc_103305B  +
call ds:__imp_GetLastError  +
jmp loc_103306A  +
cmp [ebp+var_101C] 2012h +
jz loc_103307C  +
push 0Dh  +
pop eax  +
cmp eax 490h +
jnz loc_1033078  +
xor eax eax +
mov [edi] ax +
jmp loc_10330A5  +
test eax eax +
jnz loc_10330DA  +
xor eax eax +
mov [ebp+esi+var_806] ax +
mov [ebp+esi+var_808] ax +
lea eax [ebp+var_100C] +
push eax  +
push edi  +
push [ebp+var_1008]  +
call sub_10323A9  +
test eax eax +
jnz loc_10330B1  +
inc ebx  +
cmp ebx 2 +
jb loc_1033011  +
jmp loc_10330E3  +
push 100h  +
push 0  +
push 0  +
push [ebp+var_100C]  +
mov [ebp+var_1010] 1 +
push [ebp+arg_14]  +
push [ebp+var_1018]  +
call sub_1032D6B  +
jmp loc_10330E3  +
mov eax [ebp+arg_8] +
mov [ebp+var_1010] eax +
cmp [ebp+var_1008] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10330FA  +
push [ebp+var_1008]  +
call sub_1036D9D  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1010] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+var_64] eax +
mov eax [ebp+arg_4] +
push edi  +
mov [ebp+var_60] eax +
mov [ebp+var_5C] esi +
mov [ebp+var_58] esi +
cmp dword_103D0FC esi +
jz loc_103314C  +
cmp dword_103D0F8 esi +
jnz loc_1033170  +
lea eax [ebp+var_5C] +
push eax  +
push offset aDenydeviceclas  +
push offset aRestrictions  +
mov ebx offset aSoftwarePolici +
push ebx  +
mov edi 80000002h +
push edi  +
call sub_1036DE5  +
cmp eax 2 +
jnz loc_1033188  +
xor esi esi +
inc esi  +
and [ebp+var_58] 0 +
mov dword_103D0FC esi +
mov dword_103D0F8 esi +
jmp loc_103321F  +
cmp eax esi +
jz loc_1033198  +
mov [ebp+var_58] 1 +
jmp loc_103321F  +
xor esi esi +
inc esi  +
xor eax eax +
mov dword_103D0FC esi +
cmp [ebp+var_60] eax +
jz loc_10331E0  +
cmp dword_103D0F4 eax +
jnz loc_10331D6  +
push esi  +
push eax  +
push offset aDenydevicecl_0  +
push offset aRestrictions  +
push ebx  +
push edi  +
call sub_1036D01  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_103D0F0 eax +
mov dword_103D0F4 esi +
jmp loc_10331DB  +
mov eax dword_103D0F0 +
mov ecx [ebp+var_60] +
mov [ecx] eax +
push 50h  +
lea eax [ebp+var_54] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 800h  +
xor edi edi +
push edi  +
push edi  +
push [ebp+var_64]  +
lea eax [ebp+var_54] +
push 27h  +
push eax  +
call sub_1032D6B  +
test eax eax +
jl loc_103321C  +
push edi  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_5C]  +
call sub_10323A9  +
test eax eax +
jz loc_103321F  +
mov [ebp+var_58] esi +
cmp [ebp+var_5C] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1033230  +
push [ebp+var_5C]  +
call sub_1036D9D  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_58] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_5C] ebx +
mov [ebp+var_58] ebx +
cmp dword_103D104 ebx +
jz loc_1033276  +
cmp dword_103D100 ebx +
jnz loc_1033298  +
lea eax [ebp+var_5C] +
push eax  +
push offset aAllowdevicecla  +
push offset aRestrictions  +
push offset aSoftwarePolici  +
push 80000002h  +
call sub_1036DE5  +
cmp eax 2 +
jnz loc_10332AC  +
xor esi esi +
inc esi  +
mov dword_103D104 esi +
mov dword_103D100 esi +
mov [ebp+var_58] ebx +
jmp loc_10332F3  +
cmp eax ebx +
jnz loc_10332A7  +
push 50h  +
xor esi esi +
lea eax [ebp+var_54] +
push ebx  +
inc esi  +
push eax  +
mov dword_103D104 esi +
call memset  +
add esp 0Ch +
push 800h  +
push ebx  +
push ebx  +
push edi  +
push 27h  +
lea eax [ebp+var_54] +
push eax  +
call sub_1032D6B  +
test eax eax +
jl loc_10332A7  +
push ebx  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_5C]  +
call sub_10323A9  +
test eax eax +
jz loc_10332F3  +
mov [ebp+var_58] esi +
cmp [ebp+var_5C] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1033303  +
push [ebp+var_5C]  +
call sub_1036D9D  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_58] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_58] +
push eax  +
push offset aAllowuserdevic  +
push offset aRestrictions  +
push offset aSoftwarePoli_1  +
xor edi edi +
push 80000002h  +
mov [ebp+var_58] edi +
xor ebx ebx +
call sub_1036DE5  +
cmp eax 2 +
jnz loc_103335E  +
xor ebx ebx +
jmp loc_103339C  +
cmp eax edi +
jnz loc_103335A  +
push 50h  +
lea eax [ebp+var_54] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 800h  +
push edi  +
push edi  +
push esi  +
push 27h  +
lea eax [ebp+var_54] +
push eax  +
call sub_1032D6B  +
test eax eax +
jl loc_103335A  +
push edi  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_58]  +
call sub_10323A9  +
test eax eax +
jz loc_103339C  +
xor ebx ebx +
inc ebx  +
cmp [ebp+var_58] edi +
jz loc_10333A9  +
push [ebp+var_58]  +
call sub_1036D9D  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+dwErrCode] 0 +
and [ebp+var_220] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [ebp+InfHandle] eax +
call ds:SetupGetThreadLogToken  +
mov esi ds:SetupWriteTextLog +
mov ecx eax +
or ecx edx +
mov [ebp+var_218] eax +
mov [ebp+var_214] edx +
mov edi 800000h +
jnz loc_1033444  +
lea eax [ebp+var_218] +
push eax  +
push offset aDriverPackageP  +
push 1  +
push ebx  +
call sub_1038E99  +
push [ebp+var_214]  +
mov [ebp+var_220] eax +
push [ebp+var_218]  +
call ds:SetupSetThreadLogToken  +
jmp loc_1033456  +
push offset aDriverPackag_0  +
push 30004h  +
push edi  +
push edx  +
push eax  +
call esi  +
add esp 14h +
push 220h  +
push [ebp+InfHandle]  +
call sub_10326DD  +
test eax eax +
jz loc_1033476  +
and [ebp+dwErrCode] 0 +
jmp loc_10335B2  +
push 221h  +
push [ebp+InfHandle]  +
call sub_10326DD  +
test eax eax +
jnz loc_1033499  +
mov [ebp+dwErrCode] 5 +
jmp loc_10335B2  +
push 0  +
push 2  +
push 0  +
push ebx  +
call ds:SetupOpenInfFileW  +
mov [ebp+InfHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10334C2  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10335B2  +
lea ecx [ebp+Context] +
push ecx  +
push offset aClassguid  +
push offset aVersion  +
push eax  +
call ds:SetupFindFirstLineW  +
test eax eax +
jnz loc_10334EF  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10335A6  +
push 0  +
push 104h  +
lea eax [ebp+ReturnBuffer] +
push eax  +
push 1  +
lea eax [ebp+Context] +
push eax  +
call ds:SetupGetStringFieldW  +
test eax eax +
jz loc_10334DE  +
push offset aDriverPackageI  +
push 4  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 14h +
lea eax [ebp+ReturnBuffer] +
push eax  +
call sub_1033319  +
test eax eax +
jnz loc_1033545  +
mov [ebp+dwErrCode] 5 +
jmp loc_10335A6  +
push [ebp+arg_8]  +
push ebx  +
call sub_1032485  +
test eax eax +
jnz loc_1033577  +
push offset aDriverIsNotSig  +
push 2  +
push edi  +
push [ebp+var_214]  +
mov [ebp+dwErrCode] 5 +
push [ebp+var_218]  +
call esi  +
add esp 14h +
jmp loc_10335A6  +
push offset aDriverIsSigned  +
push 4  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
push offset aInstallation_3  +
push 4  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 28h +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
push [ebp+dwErrCode]  +
xor ebx ebx +
cmp [ebp+var_220] ebx +
jz loc_10335E9  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call sub_1038D34  +
push ebx  +
push ebx  +
mov [ebp+var_218] ebx +
mov [ebp+var_214] ebx +
call ds:SetupSetThreadLogToken  +
jmp loc_1033605  +
push offset aDriverPackag_1  +
push 50004h  +
push edi  +
push [ebp+var_214]  +
push [ebp+var_218]  +
call esi  +
add esp 18h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 11B4h +
call __alloca_probe  +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1174] eax +
xor eax eax +
mov [ebp+var_1168] edi +
mov [ebp+dwErrCode] eax +
mov [ebp+var_1164] eax +
mov [ebp+var_1178] eax +
mov [ebp+var_1158] eax +
mov [ebp+var_118C] eax +
call ds:SetupGetThreadLogToken  +
mov ecx [ebp+arg_C] +
mov [ebp+var_1150] eax +
mov eax 100h +
and ecx eax +
mov [ebp+var_114C] edx +
xor edx edx +
cmp ecx eax +
mov eax [ebp+var_1174] +
setnz dl  +
and dword ptr [eax] 0 +
mov eax [ebp+arg_C] +
xor ecx ecx +
and al 1 +
cmp al 1 +
setz cl  +
mov [ebp+var_1160] edx +
mov [ebp+var_116C] ecx +
test ecx ecx +
jz loc_103371C  +
push 220h  +
push edi  +
call sub_10326DD  +
test eax eax +
jz loc_10336E8  +
xor edi edi +
inc edi  +
mov [ebp+var_1164] edi +
jmp loc_10336FE  +
push 221h  +
push edi  +
call sub_10326DD  +
test eax eax +
jz loc_1033CD5  +
xor edi edi +
inc edi  +
call sub_1032363  +
cmp [ebp+var_1164] 0 +
mov [ebp+var_1178] eax +
jz loc_103371F  +
test eax eax +
jnz loc_1033CDF  +
jmp loc_103371F  +
xor edi edi +
inc edi  +
push 0  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push esi  +
push ebx  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jnz loc_103374A  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1033CAF  +
cmp [ebp+var_116C] 0 +
jnz loc_1033762  +
push esi  +
push ebx  +
call sub_10327BF  +
test eax eax +
jnz loc_1033CDF  +
cmp [ebp+var_1160] 0 +
jz loc_10337F5  +
push 61Ch  +
lea eax [ebp+DriverInfoData] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DriverInfoData] +
push eax  +
push esi  +
push ebx  +
mov [ebp+DriverInfoData.cbSize] 61Ch +
call ds:SetupDiGetSelectedDriverW  +
test eax eax +
jz loc_10337AA  +
mov [ebp+var_1158] edi +
jmp loc_10337BE  +
call ds:__imp_GetLastError  +
cmp eax 0E0000203h +
jnz loc_103373F  +
and [ebp+var_1158] 0 +
push esi  +
push ebx  +
call sub_1031FA6  +
test eax eax +
jz loc_10337EB  +
cmp [ebp+var_1158] 0 +
jz loc_10337E4  +
lea eax [ebp+DriverInfoData] +
push eax  +
push esi  +
push ebx  +
call sub_10328F5  +
test eax eax +
jz loc_10337EB  +
push offset aDeviceInstalla  +
jmp loc_1033847  +
xor eax eax +
cmp [ebp+var_1158] eax +
jz loc_1033818  +
push 27h  +
lea eax [ebp+var_54] +
push eax  +
lea eax [esi+4] +
push eax  +
call pSetupStringFromGuid  +
mov [ebp+dwErrCode] eax +
test eax eax +
jnz loc_1033CAF  +
mov [ebp+var_118C] edi +
cmp [ebp+var_116C] eax +
jz loc_1033935  +
cmp [ebp+var_1164] eax +
jnz loc_1033935  +
cmp [ebp+var_1158] eax +
jnz loc_1033868  +
mov [ebp+dwErrCode] 5 +
push offset aOnlyAdministra  +
push 2  +
push 800000h  +
push [ebp+var_114C]  +
push [ebp+var_1150]  +
call ds:SetupWriteTextLog  +
add esp 14h +
jmp loc_1033CDF  +
mov edi 622h +
push edi  +
push eax  +
lea eax [ebp+DriverInfoDetailData] +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
push edi  +
lea eax [ebp+DriverInfoDetailData] +
push eax  +
lea eax [ebp+DriverInfoData] +
push eax  +
push esi  +
push ebx  +
mov [ebp+DriverInfoDetailData.cbSize] edi +
call ds:SetupDiGetDriverInfoDetailW  +
test eax eax +
jnz loc_10338B0  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_103373F  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+SystemInfo] +
stos   +
lea eax [ebp+SystemInfo] +
push eax  +
call ds:GetSystemInfo  +
push dword ptr [ebp+SystemInfo.anonymous_0]  +
lea eax [ebp+DriverInfoDetailData.InfFileName] +
push eax  +
push [ebp+var_1168]  +
call sub_10333C1  +
test eax eax +
jnz loc_1033918  +
call ds:__imp_GetLastError  +
push offset aInstallation_4  +
push 2  +
push 800000h  +
push [ebp+var_114C]  +
mov [ebp+dwErrCode] eax +
push [ebp+var_1150]  +
call ds:SetupWriteTextLog  +
add esp 14h +
jmp loc_1033CAF  +
push esi  +
push ebx  +
call sub_1031A70  +
test eax eax +
jnz loc_1033930  +
call ds:__imp_GetLastError  +
push offset aInstallation_5  +
jmp loc_10338F1  +
xor edi edi +
inc edi  +
xor eax eax +
push esi  +
push ebx  +
mov [ebp+var_1154] eax +
mov [ebp+var_115C] eax +
mov [ebp+var_1184] eax +
mov [ebp+var_117C] eax +
mov [ebp+var_1180] eax +
mov [ebp+var_1190] eax +
mov [ebp+var_1168] eax +
mov [ebp+var_1188] eax +
call sub_1032295  +
test eax eax +
jz loc_1033985  +
call sub_10322D7  +
test eax eax +
jz loc_1033985  +
mov [ebp+var_1184] edi +
mov [ebp+var_1154] edi +
push 0C8h  +
lea eax [ebp+var_504] +
push eax  +
push 0  +
push 0  +
push esi  +
push ebx  +
call sub_1032EA9  +
test eax eax +
jz loc_10339AC  +
mov [ebp+var_1180] edi +
mov [ebp+var_115C] edi +
push 0C8h  +
lea eax [ebp+var_374] +
push eax  +
lea eax [ebp+var_1170] +
push eax  +
push edi  +
push esi  +
push ebx  +
call sub_1032EA9  +
xor ebx ebx +
test eax eax +
jz loc_10339F5  +
mov eax [ebp+var_1170] +
cmp [ebp+var_1160] ebx +
jnz loc_10339DF  +
cmp eax ebx +
jz loc_10339F5  +
mov esi [ebp+var_1174] +
mov [ebp+var_117C] edi +
mov [ebp+var_1154] edi +
mov [esi] eax +
jmp loc_10339FB  +
mov esi [ebp+var_1174] +
cmp [ebp+var_118C] ebx +
jz loc_1033A50  +
lea eax [ebp+var_54] +
push eax  +
call sub_1033246  +
test eax eax +
jz loc_1033A1C  +
mov [ebp+var_1168] edi +
mov [ebp+var_115C] edi +
lea eax [ebp+var_1170] +
push eax  +
lea eax [ebp+var_54] +
push eax  +
call sub_1033113  +
test eax eax +
jz loc_1033A50  +
mov eax [ebp+var_1170] +
cmp [ebp+var_1160] ebx +
jnz loc_1033A42  +
cmp eax ebx +
jz loc_1033A50  +
mov [ebp+var_1190] edi +
mov [ebp+var_1154] edi +
mov [esi] eax +
cmp [ebp+var_1154] ebx +
jnz loc_1033AA5  +
cmp [ebp+var_115C] ebx +
jnz loc_1033AD3  +
cmp [ebp+var_1160] ebx +
jz loc_1033CDF  +
call sub_103231D  +
test eax eax +
jz loc_1033CDF  +
cmp [ebp+var_1158] 0 +
jnz loc_1033A97  +
call sub_103243F  +
test eax eax +
jnz loc_1033A97  +
mov [ebp+dwErrCode] 0E0000203h +
jmp loc_1033AD3  +
mov [ebp+var_1188] edi +
mov [ebp+var_1154] edi +
xor ebx ebx +
mov [ebp+dwErrCode] 0E0000248h +
cmp [ebp+var_115C] ebx +
jnz loc_1033AD3  +
cmp [ebp+var_1154] ebx +
jz loc_1033CBB  +
cmp [ebp+var_1160] ebx +
jnz loc_1033AD3  +
cmp [esi] ebx +
jz loc_1033CBB  +
mov ebx [ebp+var_1150] +
mov esi ds:SetupWriteTextLog +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset aDeviceInstal_0  +
push 20005h  +
mov edi 800000h +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 18h +
cmp [ebp+var_1154] 0 +
jz loc_1033BC8  +
push offset aTheDeviceIsExp  +
push 1  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 14h +
cmp [ebp+var_1184] 0 +
jz loc_1033B40  +
push offset aRemovableDevic  +
push 1  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 14h +
cmp [ebp+var_117C] 0 +
jz loc_1033B64  +
lea eax [ebp+var_374] +
push eax  +
push offset aRestrictedHard  +
push 1  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 18h +
cmp [ebp+var_1190] 0 +
jz loc_1033B85  +
lea eax [ebp+var_54] +
push eax  +
push offset aRestrictedSetu  +
push 1  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 18h +
cmp [ebp+var_1188] 0 +
jz loc_1033BA2  +
push offset aRestrictedInst  +
push 1  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 14h +
cmp [ebp+var_115C] 0 +
jz loc_1033C5D  +
push offset aOneOrMoreMatch  +
push 2  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 14h +
jmp loc_1033C5D  +
cmp [ebp+var_115C] 0 +
lea eax [ebp+DeviceInstanceId] +
push eax  +
jz loc_1033C7F  +
push offset aDeviceInstal_1  +
push 5  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
push offset aTheDeviceIsE_0  +
mov ebx 80005h +
push ebx  +
push edi  +
push [ebp+var_114C]  +
push [ebp+var_1150]  +
call esi  +
add esp 2Ch +
cmp [ebp+var_1180] 0 +
jz loc_1033C32  +
lea eax [ebp+var_374] +
push eax  +
push offset aHardwareOrComp  +
push ebx  +
push edi  +
push [ebp+var_114C]  +
push [ebp+var_1150]  +
call esi  +
add esp 18h +
cmp [ebp+var_1168] 0 +
jz loc_1033C57  +
lea eax [ebp+var_54] +
push eax  +
push offset aSetupClassOfTh  +
push ebx  +
push edi  +
push [ebp+var_114C]  +
push [ebp+var_1150]  +
call esi  +
add esp 18h +
mov ebx [ebp+var_1150] +
cmp [ebp+dwErrCode] 0 +
lea eax [ebp+DeviceInstanceId] +
jz loc_1033C95  +
push [ebp+dwErrCode]  +
push eax  +
push offset aDeviceInstal_2  +
push 40001h  +
jmp loc_1033CA2  +
push offset aDeviceInstal_3  +
push 2  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 18h +
jmp loc_1033C5D  +
push 0  +
push eax  +
push offset aDeviceInstal_2  +
push 40005h  +
push edi  +
push [ebp+var_114C]  +
push ebx  +
call esi  +
add esp 1Ch +
cmp [ebp+dwErrCode] 0E0000248h +
jnz loc_1033CDF  +
xor eax eax +
cmp [ebp+var_116C] eax +
jz loc_1033CDF  +
cmp [ebp+var_1164] eax +
jnz loc_1033CDF  +
cmp [ebp+var_1178] eax +
jz loc_1033CDF  +
mov [ebp+dwErrCode] 5 +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FFCh +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea ecx [ebp+var_FE4] +
push ecx  +
mov eax 210h +
push eax  +
mov [ebp+var_FE4] eax +
lea eax [ebp+var_3A4] +
push eax  +
xor esi esi +
push 62h  +
mov [ebp+var_FD0] esi +
call ds:NtQuerySystemInformation  +
test eax eax +
jl loc_1033D71  +
movzx eax word ptr [ebp+var_3A4] +
mov edx [ebp+var_3A0] +
shr eax 1 +
xor ecx ecx +
mov [edx+eax*2] cx +
mov eax [ebp+var_3A0] +
mov [ebp+var_FD0] eax +
push esi  +
push esi  +
call ds:SetupDiCreateDeviceInfoList  +
mov [ebp+var_FC4] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1033D91  +
call ds:__imp_GetLastError  +
mov esi eax +
jmp loc_1034068  +
push ebx  +
push edi  +
push 1Ch  +
mov [ebp+InterfaceClassGuid] offset dword_10154C8 +
mov [ebp+var_FDC] offset dword_10154D8 +
mov [ebp+var_FBC] esi +
pop ebx  +
mov eax [ebp+var_FBC] +
mov eax [ebp+eax*4+InterfaceClassGuid] +
push esi  +
push esi  +
push esi  +
push 12h  +
push esi  +
push esi  +
push eax  +
call ds:SetupDiGetClassDevsExW  +
mov [ebp+DeviceInfoSet] eax +
cmp eax 0FFFFFFFFh +
jz loc_1034053  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInterfaceData] +
stos   +
lea eax [ebp+DeviceInterfaceData] +
push eax  +
mov [ebp+MemberIndex] esi +
push esi  +
jmp loc_1034015  +
inc [ebp+MemberIndex]  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInfoData] +
stos   +
lea eax [ebp+DeviceInfoData] +
push eax  +
push esi  +
push 826h  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+DeviceInterfaceData] +
push eax  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DeviceInfoData.cbSize] ebx +
call ds:SetupDiGetDeviceInterfaceDetailW  +
test eax eax +
jz loc_1033FFB  +
push esi  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jz loc_1033FFB  +
cmp [ebp+var_FBC] 1 +
mov [ebp+var_FD8] esi +
jnz loc_1033EDD  +
cmp [ebp+var_FD0] esi +
jz loc_1033EDD  +
push esi  +
push esi  +
push 208h  +
lea eax [ebp+var_73C] +
push eax  +
lea eax [ebp+var_FCC] +
push eax  +
push offset dword_1015360  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1033EDD  +
cmp [ebp+var_FCC] 12h +
jnz loc_1033EDD  +
push 1  +
push 0FFFFFFFFh  +
push [ebp+var_FD0]  +
lea eax [ebp+var_73C] +
push 0FFFFFFFFh  +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_1033F74  +
push esi  +
push esi  +
push 3  +
push esi  +
push 3  +
push 80000000h  +
lea eax [ebp-0F60h] +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_1033FFB  +
xor eax eax +
lea edi [ebp+OutBuffer] +
stos   +
stos   +
stos   +
stos   +
push esi  +
stos   +
lea eax [ebp+BytesReturned] +
push eax  +
push 14h  +
lea eax [ebp+OutBuffer] +
push eax  +
push esi  +
push esi  +
push 704010h  +
push [ebp+hObject]  +
call ds:DeviceIoControl  +
test eax eax +
jz loc_1033F5C  +
cmp [ebp+var_FF4] esi +
jg loc_1033F52  +
cmp [ebp+var_FF0] esi +
jg loc_1033F52  +
cmp [ebp+var_FEC] esi +
jle loc_1033F5C  +
mov [ebp+var_FD8] 1 +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+var_FD8] esi +
jz loc_1033FFB  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push 0C8h  +
lea eax [ebp+var_194] +
push eax  +
call sub_102CC3F  +
jmp loc_1033FC8  +
push esi  +
push esi  +
push 190h  +
lea eax [ebp+var_194] +
push eax  +
lea eax [ebp+var_FCC] +
push eax  +
push offset dword_1015388  +
lea eax [ebp+var_F80] +
push eax  +
push [ebp+var_FC4]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1033FFB  +
cmp [ebp+var_FCC] 12h +
jnz loc_1033FFB  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_F80] +
stos   +
lea eax [ebp+var_F80] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+var_194] +
push eax  +
push [ebp+var_FC4]  +
mov [ebp+var_F80] ebx +
call ds:SetupDiOpenDeviceInfoW  +
test eax eax +
jnz loc_1033F8E  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInterfaceData] +
stos   +
lea eax [ebp+DeviceInterfaceData] +
push eax  +
push [ebp+MemberIndex]  +
mov eax [ebp+var_FBC] +
push [ebp+eax*4+InterfaceClassGuid]  +
mov [ebp+DeviceInterfaceData.cbSize] ebx +
push esi  +
push [ebp+DeviceInfoSet]  +
mov dword ptr [ebp+FileName] 6 +
call ds:SetupDiEnumDeviceInterfaces  +
test eax eax +
jnz loc_1033DFA  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiDestroyDeviceInfoList  +
inc [ebp+var_FBC]  +
cmp [ebp+var_FBC] 2 +
jb loc_1033DB0  +
pop edi  +
pop ebx  +
push esi  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_FC4] +
xor ecx ebp +
pop esi  +
call sub_1034B90  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+DeviceInfoSet] 0FFFFFFFFh +
or [ebp+var_3F0] 0FFFFFFFFh +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_3EC] ebx +
mov [ebp+MemberIndex] ebx +
mov [ebp+var_410] ebx +
mov [ebp+var_404] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_40C] ebx +
call ds:SetupGetThreadLogToken  +
mov [ebp+var_3E8] eax +
mov [ebp+var_3E4] edx +
call sub_1032A33  +
mov [ebp+hMutex] eax +
cmp eax ebx +
jnz loc_1034105  +
call ds:__imp_GetLastError  +
mov [ebp+var_3EC] eax +
jmp loc_1034627  +
mov eax [ebp+var_3E8] +
or eax [ebp+var_3E4] +
jnz loc_1034141  +
lea eax [ebp+var_3E8] +
push eax  +
push offset aDeviceInstal_4  +
push 1  +
push ebx  +
call sub_1038E99  +
push [ebp+var_3E4]  +
mov [ebp+var_40C] eax +
push [ebp+var_3E8]  +
call ds:SetupSetThreadLogToken  +
jmp loc_1034165  +
push offset aDeviceInstal_5  +
push 30004h  +
push 800000h  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 14h +
cmp dword_103D08C ebx +
jz loc_10341C5  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_103417A  +
cmp al bl +
jnz loc_10341C5  +
mov eax dword_103D078 +
mov ecx dword_103D07C +
mov esi 10000000h +
and eax 2 +
and ecx esi +
or eax ecx +
jz loc_10341C5  +
mov eax dword_103D080 +
mov edi dword_103D084 +
mov ecx eax +
mov edx edi +
and ecx 2 +
and edx esi +
cmp ecx eax +
jnz loc_10341C5  +
cmp edx edi +
jnz loc_10341C5  +
push offset dword_1007DA8  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
lea eax [ebp+hObject] +
push eax  +
push 2000000h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_10341F3  +
call ds:__imp_GetLastError  +
mov [ebp+var_3EC] eax +
jmp loc_103461B  +
call sub_1033D0C  +
mov [ebp+var_3F0] eax +
cmp eax 0FFFFFFFFh +
jz loc_10341E2  +
push 4  +
push ebx  +
push ebx  +
push ebx  +
call ds:SetupDiGetClassDevsW  +
mov [ebp+DeviceInfoSet] eax +
cmp eax 0FFFFFFFFh +
jz loc_10341E2  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInfoData] +
stos   +
lea eax [ebp+DeviceInfoData] +
push eax  +
push ebx  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DeviceInfoData.cbSize] 1Ch +
call ds:SetupDiEnumDeviceInfo  +
test eax eax +
jz loc_103461B  +
mov esi 80000000h +
inc [ebp+MemberIndex]  +
push 190h  +
lea eax [ebp+DeviceInstanceId] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
push 0C8h  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDeviceInstanceIdW  +
test eax eax +
jz loc_10345D6  +
push ebx  +
push ebx  +
push 4  +
lea eax [ebp+var_408] +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
push offset dword_101534C  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
xor edi edi +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_10342CD  +
cmp [ebp+var_3FC] 7 +
jz loc_10342D3  +
mov [ebp+var_408] ebx +
test byte ptr [ebp+var_408] 40h +
jz loc_1034322  +
push ebx  +
push ebx  +
push 4  +
lea eax [ebp+var_3F4] +
push eax  +
lea eax [ebp+var_3FC] +
push eax  +
push offset dword_1015478  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiGetDevicePropertyW  +
test eax eax +
jz loc_1034322  +
cmp [ebp+var_3FC] 17h +
jnz loc_1034322  +
cmp [ebp+var_3F4] 0E0000248h +
jnz loc_1034322  +
xor edi edi +
inc edi  +
lea eax [ebp+var_404] +
push eax  +
push 100h  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
push ebx  +
call sub_1033632  +
mov [ebp+var_418] eax +
cmp edi ebx +
jnz loc_1034462  +
cmp eax ebx +
jnz loc_10345D6  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
cmp [ebp+var_404] ebx +
jnz loc_103438C  +
push offset aInstallationRe  +
push 2  +
push 800000h  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 18h +
jmp loc_10345D6  +
push [ebp+var_3F0]  +
call sub_1032A96  +
test eax eax +
jz loc_103440A  +
cmp dword_103D08C ebx +
jz loc_10345D6  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_10343B8  +
cmp al bl +
jnz loc_10345D6  +
mov ecx dword_103D07C +
and ecx esi +
xor eax eax +
or eax ecx +
jz loc_10345D6  +
mov ecx dword_103D084 +
mov eax ecx +
and eax esi +
cmp ebx dword_103D080 +
jnz loc_10345D6  +
cmp eax ecx +
jnz loc_10345D6  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset dword_1007D08  +
push dword_103D064  +
push dword_103D060  +
call sub_102D1A0  +
jmp loc_10345D6  +
cmp dword_103D08C ebx +
jz loc_103446A  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_103441F  +
cmp al bl +
jnz loc_103446A  +
mov ecx dword_103D07C +
and ecx esi +
xor eax eax +
or eax ecx +
jz loc_103446A  +
mov ecx dword_103D084 +
mov eax ecx +
and eax esi +
cmp ebx dword_103D080 +
jnz loc_103446A  +
cmp eax ecx +
jnz loc_103446A  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset dword_1007CF8  +
push dword_103D064  +
push dword_103D060  +
call sub_102D1A0  +
jmp loc_103446A  +
cmp eax ebx +
jz loc_10345D6  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset aDeviceRemovalI  +
push 20004h  +
push 800000h  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 18h +
push 10h  +
lea eax [ebp+ClassInstallParams] +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
mov [ebp+ClassInstallParams.cbSize] 8 +
mov [ebp+ClassInstallParams.InstallFunction] 5 +
mov [ebp+var_420] 1 +
mov [ebp+var_41C] ebx +
call ds:SetupDiSetClassInstallParamsW  +
mov edi [ebp+DeviceInfoData.DevInst] +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
mov [ebp+var_3F4] ebx +
push 5  +
call ds:SetupDiCallClassInstaller  +
test eax eax +
jz loc_1034511  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiRemoveDevice  +
test eax eax +
jnz loc_103451D  +
call ds:__imp_GetLastError  +
mov [ebp+var_3F4] eax +
push ebx  +
push edi  +
call ds:CM_Setup_DevNode  +
mov edi 22Ch +
push edi  +
lea eax [ebp+DeviceInstallParams] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+DeviceInstallParams] +
push eax  +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+DeviceInfoSet]  +
mov [ebp+DeviceInstallParams.cbSize] edi +
call ds:SetupDiGetDeviceInstallParamsW  +
test eax eax +
jz loc_10345A5  +
test [ebp+DeviceInstallParams.Flags] 180h +
jz loc_10345A5  +
cmp [ebp+var_418] ebx +
jnz loc_10345A5  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset aDeviceRequired  +
push 2  +
push 800000h  +
push [ebp+var_3E4]  +
mov [ebp+var_410] 1 +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 18h +
push [ebp+var_3F4]  +
lea eax [ebp+DeviceInstanceId] +
push eax  +
push offset aDeviceRemova_0  +
push 40004h  +
push 800000h  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 1Ch +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+DeviceInfoData] +
stos   +
lea eax [ebp+DeviceInfoData] +
push eax  +
push [ebp+MemberIndex]  +
mov [ebp+DeviceInfoData.cbSize] 1Ch +
push [ebp+DeviceInfoSet]  +
call ds:SetupDiEnumDeviceInfo  +
test eax eax +
jnz loc_1034251  +
cmp [ebp+var_410] ebx +
jz loc_103461B  +
call sub_1032B7A  +
push [ebp+hMutex]  +
call ds:ReleaseMutex  +
cmp [ebp+hObject] ebx +
jz loc_103463B  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+DeviceInfoSet] 0FFFFFFFFh +
mov edi ds:SetupDiDestroyDeviceInfoList +
jz loc_1034652  +
push [ebp+DeviceInfoSet]  +
call edi  +
cmp [ebp+var_3F0] 0FFFFFFFFh +
jz loc_1034663  +
push [ebp+var_3F0]  +
call edi  +
push [ebp+var_3EC]  +
cmp [ebp+var_40C] ebx +
jz loc_1034698  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call sub_1038D34  +
push ebx  +
push ebx  +
mov [ebp+var_3E8] ebx +
mov [ebp+var_3E4] ebx +
call ds:SetupSetThreadLogToken  +
jmp loc_10346BC  +
push offset aDeviceInstal_6  +
push 50004h  +
push 800000h  +
push [ebp+var_3E4]  +
push [ebp+var_3E8]  +
call ds:SetupWriteTextLog  +
add esp 18h +
cmp dword_103D08C ebx +
jz loc_103471C  +
mov al byte_103D090 +
cmp al 4 +
jnb loc_10346D1  +
cmp al bl +
jnz loc_103471C  +
mov eax dword_103D078 +
mov ecx dword_103D07C +
mov esi 10000000h +
and eax 2 +
and ecx esi +
or eax ecx +
jz loc_103471C  +
mov eax dword_103D080 +
mov edi dword_103D084 +
mov ecx eax +
mov edx edi +
and ecx 2 +
and edx esi +
cmp ecx eax +
jnz loc_103471C  +
cmp edx edi +
jnz loc_103471C  +
push offset dword_1007DB8  +
push dword_103D064  +
push dword_103D060  +
call sub_102D202  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3EC] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_1034780  +
movzx eax cx +
mov [ebp-8] eax +
test edx edx +
jnz loc_10347FF  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_10347DD  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_10347D2  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_102B2C4 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jz loc_10347FF  +
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_10347FF  +
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_10347FF  +
call GetLastError  +
cmp eax 7Eh +
jz loc_10347EE  +
cmp eax 0C1h +
jnz loc_1034841  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_1034805  +
mov [ebp+8] eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_103480E  +
mov dword ptr [ebp-4] 1 +
jmp loc_1034841  +
cmp dword ptr [ebp+8] 0 +
jz loc_1034841  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_1034836  +
call GetLastError  +
cmp eax 7Fh +
jz loc_1034836  +
cmp eax 0B6h +
jnz loc_103483D  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jnz loc_103484C  +
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp dword ptr [ebp-4] 0 +
jz loc_1034857  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1034881  +
test eax eax +
jnz loc_1034886  +
mov ecx [esi] +
test ecx ecx +
jz loc_103487E  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1034872  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_103D12C +
push offset dword_103D11C  +
push dword_103D128  +
mov dword_103D11C eax +
push offset dword_103D10C  +
push offset dword_103D110  +
push offset dword_103D108  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_103D118 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jz loc_103490E  +
cmp eax esi +
jnz loc_1034901  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1034911  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10348E8  +
xor esi esi +
inc esi  +
mov eax dword_103D56C +
cmp eax esi +
jnz loc_1034924  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_103495F  +
mov eax dword_103D56C +
test eax eax +
jnz loc_1034959  +
mov dword_103D56C esi +
push offset dword_100140C  +
push offset dword_1001400  +
call sub_1034865  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103495F  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1034A29  +
mov dword_103D124 esi +
mov eax dword_103D56C +
cmp eax esi +
jnz loc_1034983  +
push offset dword_10013FC  +
push offset dword_10013F4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_103D56C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1034990  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_103D574 ebx +
jz loc_10349B1  +
push offset dword_103D574  +
call sub_1034D79  +
pop ecx  +
test eax eax +
jz loc_10349B1  +
push ebx  +
push 2  +
push ebx  +
call dword_103D574  +
push dword_103D10C  +
push dword_103D110  +
push dword_103D108  +
call loc_102C2D5  +
add esp 0Ch +
mov dword_103D120 eax +
cmp dword_103D114 ebx +
jnz loc_1034A0F  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_103D120 eax +
xor ebx ebx +
cmp dword_103D114 ebx +
jnz loc_1034A0F  +
push eax  +
call ds:_exit  +
cmp dword_103D124 ebx +
jnz loc_1034A1D  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_103D120 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jz loc_1034A46  +
xor eax eax +
jmp loc_1034A93  +
mov eax ds:dword_100003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jnz loc_1034A42  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1034A80  +
cmp ecx 20Bh +
jnz loc_1034A42  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1034A42  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1034A8E  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1034A42  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_103D114 eax +
call sub_1034E87  +
push eax  +
call ds:__set_app_type  +
or dword_103D564 0FFFFFFFFh +
or dword_103D568 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_103D134 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_103D130 +
mov [eax] ecx +
call sub_1034E19  +
cmp dword_103D018 0 +
jnz loc_1034AEC  +
push offset sub_1034E19  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1034E01  +
xor eax eax +
retn   +
***
call sub_1034EC6  +
jmp sub_10348C6  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1034B90  +
push offset dword_103D004  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
cmp ecx dword_103D004 +
jnz loc_1034B9B  +
retn 0  +
jmp loc_1034F67  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_1034C32  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_1034C73  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_1034C40  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_1034C6E  +
cmp edx [esp+arg_4] +
ja loc_1034C6E  +
jb loc_1034C6F  +
cmp eax [esp+arg_0] +
jbe loc_1034C6F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1034CBA  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1034CBA  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1034CB4  +
cmp eax 19930521h +
jz loc_1034CB4  +
cmp eax 19930522h +
jz loc_1034CB4  +
cmp eax 1994000h +
jnz loc_1034CBA  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1034C7C+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1034D06  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1034D02  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1034D6D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1034D65  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1034D6F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1034D55  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_1034CF0  +
pop ecx  +
test eax eax +
jz loc_1034DD6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1034D30  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1034DD6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1034DDF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1034E7A  +
cmp ecx 0FFFFFFFFh +
jz loc_1034E7A  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1034E73  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1034E73  +
cmp edx 10000000h +
jnb loc_1034E73  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1034E73  +
jmp loc_1034E6E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1034EBC  +
push eax  +
call sub_1034E21  +
test eax eax +
jz loc_1034EBC  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1034EB1  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1034EBC  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_103D004 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1034EF8  +
test eax ebx +
jz loc_1034EF8  +
not eax  +
mov dword_103D008 eax +
jmp loc_1034F53  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1034F3F  +
test dword_103D004 ebx +
jnz loc_1034F44  +
mov esi 0BB40E64Fh +
mov dword_103D004 esi +
not esi  +
mov dword_103D008 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_103D238 eax +
mov dword_103D234 ecx +
mov dword_103D230 edx +
mov dword_103D22C ebx +
mov dword_103D228 esi +
mov dword_103D224 edi +
mov word_103D250 ss +
mov word_103D244 cs +
mov word_103D220 ds +
mov word_103D21C es +
mov word_103D218 fs +
mov word_103D214 gs +
pushf   +
pop dword_103D248  +
mov eax [ebp+0] +
mov dword_103D23C eax +
mov eax [ebp+4] +
mov dword_103D240 eax +
lea eax [ebp+8] +
mov dword_103D24C eax +
mov eax [ebp-320h] +
mov dword_103D188 10001h +
mov eax dword_103D240 +
mov dword_103D144 eax +
mov dword_103D138 0C0000409h +
mov dword_103D13C 1 +
mov eax dword_103D004 +
mov [ebp-328h] eax +
mov eax dword_103D008 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
idiv  bh +
call fword ptr [edx+59h]  +
jmp eax  +
***
push ds  +
idiv  bh +
call fword ptr [edx+59h]  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+lpWideCharStr]  +
call ds:lstrlenW  +
mov esi eax +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_103696E  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jnz loc_103514A  +
xor eax eax +
jmp loc_1035177  +
push eax  +
push eax  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpWideCharStr]  +
push eax  +
push [ebp+CodePage]  +
call ds:WideCharToMultiByte  +
test eax eax +
jnz loc_1035168  +
push ebx  +
call sub_10369AF  +
jmp loc_1035146  +
push eax  +
push ebx  +
call sub_103698D  +
test eax eax +
jz loc_1035175  +
mov ebx eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
movzx eax word ptr [ecx] +
cmp ax 41h +
jb loc_103519A  +
cmp ax 5Ah +
jbe loc_10351A6  +
cmp ax 61h +
jb loc_10351C0  +
cmp ax 7Ah +
ja loc_10351C0  +
cmp word ptr [ecx+2] 3Ah +
jnz loc_10351C0  +
add ecx 4 +
jmp loc_10351C0  +
inc ecx  +
inc ecx  +
cmp dx 5Ch +
jz loc_10351C0  +
cmp dx 2Fh +
jnz loc_10351C2  +
mov eax ecx +
movzx edx word ptr [ecx] +
test dx dx +
jnz loc_10351B2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1035183  +
cmp eax esi +
jnz loc_10351EA  +
xor eax eax +
jmp loc_1035224  +
lea ecx [eax-2] +
movzx edx word ptr [ecx] +
cmp dx 5Ch +
jz loc_10351FC  +
cmp dx 2Fh +
jnz loc_10351E6  +
mov edx ecx +
sub edx esi +
and edx 0FFFFFFFEh +
cmp edx 4 +
jnz loc_103521C  +
cmp word ptr [esi] 0 +
jz loc_103521C  +
cmp word ptr [esi+2] 3Ah +
jnz loc_103521C  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1035221  +
xor eax eax +
mov [ecx] ax +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:CreateEventW  +
mov esi [ebp+arg_0] +
mov [esi] eax +
cmp eax edi +
jz loc_1035268  +
push edi  +
push edi  +
push edi  +
call ds:CreateMutexW  +
mov [esi+4] eax +
cmp eax edi +
jz loc_1035260  +
xor eax eax +
inc eax  +
jmp loc_103526A  +
push dword ptr [esi]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
and dword ptr [eax+4] 0 +
push esi  +
mov esi ds:CloseHandle +
push edi  +
mov edi [eax] +
and dword ptr [eax] 0 +
push ecx  +
call esi  +
push edi  +
call ds:SetEvent  +
push edi  +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
xor ebx ebx +
mov edi [ebp+arg_0] +
cmp edi ebx +
jnz loc_10352C3  +
push 57h  +
pop ebx  +
jmp loc_103533F  +
cmp dword_103D470 ebx +
jnz loc_1035320  +
push ebx  +
push 30h  +
lea eax [ebp+FileTime] +
push eax  +
push 3  +
call ds:NtQuerySystemInformation  +
cmp eax ebx +
jz loc_10352E9  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov ebx eax +
jmp loc_103533F  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jnz loc_1035303  +
call ds:__imp_GetLastError  +
jmp loc_10352E5  +
push offset SystemTime  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_10352FB  +
mov dword_103D470 1 +
mov [ebp+ms_exc.disabled] ebx +
mov esi offset SystemTime +
movs   +
movs   +
movs   +
movs   +
jmp loc_1035338  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push 57h  +
pop ebx  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
push ebx  +
call ds:SetLastError  +
xor eax eax +
test ebx ebx +
setz al  +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1035369  +
xor eax eax +
jmp loc_10353AA  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103536F  +
push esi  +
sub eax edx +
push edi  +
sar eax 1 +
lea esi [eax+1] +
push 2  +
push esi  +
call sub_1036A05  +
mov edi eax +
test edi edi +
jz loc_10353A6  +
push [ebp+arg_0]  +
push esi  +
push edi  +
call sub_102CC3F  +
test eax eax +
jge loc_10353A6  +
push edi  +
call sub_10369AF  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+dwErrCode] 0 +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov edi ds:lstrlenW +
push ebx  +
call edi  +
push [ebp+arg_4]  +
mov esi eax +
call edi  +
test esi esi +
jbe loc_10353E9  +
movzx ecx word ptr [ebx+esi*2-2] +
cmp cx 5Ch +
jz loc_10353E8  +
cmp cx 2Fh +
jnz loc_10353E9  +
dec esi  +
mov ecx [ebp+arg_4] +
movzx ecx word ptr [ecx] +
cmp cx 5Ch +
jz loc_10353FF  +
cmp cx 2Fh +
jz loc_10353FF  +
xor edx edx +
jmp loc_1035403  +
xor edx edx +
inc edx  +
dec eax  +
mov ecx [ebp+arg_C] +
lea eax [eax+esi+2] +
test ecx ecx +
jz loc_1035410  +
mov [ecx] eax +
mov edi [ebp+arg_8] +
cmp eax edi +
ja loc_103545C  +
test edx edx +
jnz loc_1035427  +
cmp esi edi +
jnb loc_103542B  +
push 5Ch  +
pop eax  +
mov [ebx+esi*2] ax +
inc esi  +
cmp esi edi +
jb loc_1035434  +
mov [ebp+dwErrCode] 0CEh +
jmp loc_103544F  +
push [ebp+arg_4]  +
mov eax edi +
sub eax esi +
push eax  +
lea eax [ebx+esi*2] +
push eax  +
call sub_102CC3F  +
test eax eax +
jge loc_103544F  +
movzx eax ax +
mov [ebp+dwErrCode] eax +
test edi edi +
jz loc_1035463  +
xor eax eax +
mov [ebx+edi*2-2] ax +
jmp loc_1035463  +
mov [ebp+dwErrCode] 0CEh +
cmp [ebp+dwErrCode] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1035475  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
setz al  +
leave   +
retn 10h  +
***
mov edi edi +
push ebx  +
xor ebx ebx +
push ebx  +
push esi  +
push offset dword_103D48C  +
mov [esi+8] ebx +
mov [esi+4] ebx +
mov [esi] ebx +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jnz loc_10354A7  +
inc eax  +
pop ebx  +
retn   +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:CreateEventW  +
mov [esi] eax +
cmp eax ebx +
jnz loc_10354BB  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
mov edi dword_103D48C +
push edi  +
push esi  +
push offset dword_103D48C  +
mov [esi+4] edi +
call ds:__imp_InterlockedCompareExchange  +
cmp edi eax +
jnz loc_10354BC  +
cmp edi ebx +
jz loc_10354E9  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [esi]  +
call ds:WaitForSingleObjectEx  +
mov edi eax +
jmp loc_10354EB  +
xor edi edi +
push dword ptr [esi]  +
call ds:CloseHandle  +
xor eax eax +
cmp edi ebx +
pop edi  +
mov [esi] ebx +
setz al  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
push 0  +
push offset dword_103D48C  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax esi +
jz locret_103553A  +
cmp dword ptr [esi+8] 0 +
jnz loc_103552B  +
mov ecx [eax+4] +
mov [ecx+8] eax +
mov eax [eax+4] +
cmp eax esi +
jnz loc_103551E  +
mov eax [esi+8] +
push dword ptr [eax]  +
and dword ptr [eax+4] 0 +
call ds:SetEvent  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
cmp dword_103D480 edi +
jnz loc_1035557  +
xor eax eax +
jmp loc_10355B0  +
push esi  +
lea esi [ebp+var_C] +
call sub_1035486  +
test eax eax +
jz loc_10355AF  +
dec dword_103D47C  +
jnz loc_10355A4  +
cmp dword_103D488 edi +
jz loc_1035584  +
call sub_1038F42  +
call sub_1037313  +
mov dword_103D488 edi +
mov eax lpMem +
cmp eax edi +
jz loc_1035599  +
push eax  +
call sub_10369AF  +
mov lpMem edi +
call sub_10369EC  +
mov dword_103D480 edi +
lea esi [ebp+var_C] +
call sub_1035504  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0E0000300h +
jz loc_10355D4  +
cmp [ebp+arg_0] 0C0000194h +
jz loc_10355D4  +
xor eax eax +
inc eax  +
jmp loc_10355D6  +
xor eax eax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 0C00000FDh +
jnz loc_1035616  +
call _resetstkoflw  +
test eax eax +
jz loc_10355FE  +
mov eax 3E9h +
jmp loc_1035641  +
push 0  +
push 0  +
push 1  +
push 0E0000300h  +
call ds:RaiseException  +
mov eax 0E0000300h +
jmp loc_1035641  +
cmp eax 0C0000005h +
jz loc_103563E  +
cmp eax 0C0000006h +
jz loc_1035639  +
push eax  +
call ds:RtlNtStatusToDosError  +
cmp eax 13Dh +
jnz loc_1035641  +
mov eax 0E0000239h +
jmp loc_1035641  +
push 1Eh  +
pop eax  +
jmp loc_1035641  +
mov eax [ebp+0Ch] +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_103564A  +
mov [ecx] eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1035669  +
cmp ecx 7FFFFFFFh +
jbe loc_103566E  +
mov eax 80070057h +
test eax eax +
jl loc_10356AA  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call _vsnprintf  +
add esp 10h +
test eax eax +
jl loc_103569D  +
cmp eax esi +
ja loc_103569D  +
jnz loc_10356A5  +
mov [esi+edi] bl +
jmp loc_10356A5  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jnz loc_10356D3  +
push 57h  +
pop edi  +
jmp loc_1035739  +
push esi  +
push [ebp+arg_0]  +
mov esi 104h +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_102CC3F  +
test eax eax +
jge loc_10356F2  +
push 57h  +
pop edi  +
jmp loc_1035738  +
push 0  +
push esi  +
push offset aInf  +
lea eax [ebp+String] +
push eax  +
call sub_10353B3  +
test eax eax +
jz loc_1035730  +
push [ebp+arg_4]  +
lea eax [ebp+String] +
push eax  +
call sub_1037348  +
test eax eax +
jz loc_1035730  +
push [ebp+arg_4]  +
lea eax [ebp+String] +
push eax  +
call sub_1038F8D  +
test eax eax +
jnz loc_1035738  +
call ds:__imp_GetLastError  +
mov edi eax +
pop esi  +
push edi  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test edi edi +
setz al  +
xor ecx ebp +
pop edi  +
call sub_1034B90  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
cmp dword_103D480 edi +
jnz loc_103577A  +
push 15h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10357E4  +
push esi  +
lea esi [ebp+var_C] +
call sub_1035486  +
test eax eax +
jz loc_10357E3  +
cmp dword_103D488 edi +
jnz loc_10357CF  +
push dword_103D01C  +
push lpMem  +
call sub_10356B1  +
test eax eax +
jnz loc_10357AE  +
call ds:__imp_GetLastError  +
mov edi eax +
jmp loc_10357CF  +
call sub_10371BF  +
test eax eax +
jnz loc_10357BC  +
push 0Dh  +
pop edi  +
jmp loc_10357CF  +
call sub_1038F39  +
test eax eax +
jz loc_10357B7  +
mov dword_103D488 1 +
lea esi [ebp+var_C] +
call sub_1035504  +
push edi  +
call ds:SetLastError  +
mov eax dword_103D488 +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 250h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax lpMem +
and [ebp+var_250] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test eax eax +
jz loc_1035823  +
push eax  +
call sub_10369AF  +
and lpMem 0 +
xor edi edi +
inc edi  +
test esi esi +
jz loc_103584F  +
and dword_103D01C 0 +
push esi  +
call sub_103927E  +
push esi  +
push 124h  +
lea eax [ebp+var_24C] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_10358A4  +
jmp loc_1035870  +
mov esi 104h +
push esi  +
lea eax [ebp+var_24C] +
push eax  +
mov dword_103D01C edi +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jz loc_10358A4  +
cmp eax esi +
ja loc_10358A4  +
lea eax [ebp+var_24C] +
push eax  +
call sub_103535A  +
mov lpMem eax +
test eax eax +
jz loc_10358A4  +
cmp dword_103D488 0 +
jz loc_103589E  +
push dword_103D01C  +
push eax  +
call sub_10356B1  +
test eax eax +
jz loc_10358A4  +
mov [ebp+var_250] edi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_250] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
lea esi [ebp+var_C] +
call sub_1035486  +
test eax eax +
jz loc_1035930  +
inc dword_103D47C  +
xor esi esi +
inc esi  +
cmp dword_103D47C esi +
jnz loc_1035923  +
call sub_10369CE  +
test eax eax +
jz loc_10358FF  +
push 0  +
call sub_10357EC  +
test eax eax +
jz loc_10358FF  +
mov dword_103D480 esi +
cmp dword_103D480 0 +
jnz loc_1035923  +
mov eax lpMem +
test eax eax +
jz loc_103591E  +
push eax  +
call sub_10369AF  +
and lpMem 0 +
call sub_10369EC  +
lea esi [ebp+var_C] +
call sub_1035504  +
mov eax dword_103D480 +
pop esi  +
leave   +
retn   +
***
call ds:__imp_GetLastError  +
test eax eax +
jnz locret_1035947  +
mov eax 507h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
mov ebx [ebp+hExistingToken] +
or eax 0FFFFFFFFh +
push edi  +
xor edi edi +
mov [ebp+var_18] eax +
mov [ebp+TokenHandle] eax +
mov [ebp+var_C] eax +
mov [ebp+hObject] eax +
mov [ebp+lpMem] edi +
mov [ebp+NewState] edi +
cmp ebx edi +
jnz loc_103597D  +
push 57h  +
pop ebx  +
jmp loc_1035BC1  +
push esi  +
mov esi [ebp+dwBytes] +
cmp esi edi +
jz loc_1035B74  +
cmp esi 23h +
ja loc_1035B74  +
lea eax [esi-1] +
imul eax eax +
add eax 10h +
push eax  +
mov [ebp+dwBytes] eax +
call sub_103696E  +
mov [ebp+NewState] eax +
cmp eax edi +
jnz loc_10359B2  +
push 8  +
jmp loc_1035B76  +
xor edx edx +
mov [eax] esi +
cmp esi edi +
jbe loc_10359D4  +
add eax 0Ch +
mov ecx [ebx+edx*4] +
mov [eax-8] ecx +
mov [eax-4] edi +
mov dword ptr [eax] 2 +
inc edx  +
add eax 0Ch +
cmp edx esi +
jb loc_10359BD  +
xor edi edi +
push edi  +
call ds:SetLastError  +
lea eax [ebp+TokenHandle] +
push eax  +
push edi  +
push 20006h  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
mov esi ds:__imp_GetLastError +
test eax eax +
jnz loc_1035A56  +
call esi  +
cmp eax edi +
jnz loc_1035A12  +
mov ebx 507h +
or [ebp+TokenHandle] 0FFFFFFFFh +
jmp loc_1035B77  +
mov ebx eax +
cmp eax 3F0h +
jnz loc_1035A09  +
or [ebp+TokenHandle] 0FFFFFFFFh +
push edi  +
call ds:SetLastError  +
lea eax [ebp+var_C] +
push eax  +
push 20002h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1035A5B  +
call esi  +
mov ebx 507h +
cmp eax edi +
jz loc_1035A4D  +
mov ebx eax +
or [ebp+var_C] 0FFFFFFFFh +
jmp loc_1035B77  +
mov eax [ebp+TokenHandle] +
jmp loc_1035A5E  +
mov eax [ebp+var_C] +
push edi  +
mov [ebp+hExistingToken] eax +
call ds:SetLastError  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push edi  +
mov edi ds:GetKernelObjectSecurity +
push 4  +
push [ebp+hExistingToken]  +
call edi  +
test eax eax +
jnz loc_1035B74  +
call esi  +
test eax eax +
jnz loc_1035A93  +
mov ebx 507h +
jmp loc_1035B77  +
mov ebx eax +
cmp eax 7Ah +
jnz loc_1035B77  +
push [ebp+dwBytes]  +
call sub_103696E  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jz loc_10359AB  +
push 0  +
call ds:SetLastError  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+dwBytes]  +
push ebx  +
push 4  +
push [ebp+hExistingToken]  +
call edi  +
test eax eax +
jnz loc_1035AD6  +
call esi  +
test eax eax +
jnz loc_1035B3A  +
jmp loc_1035A89  +
xor eax eax +
lea edi [ebp+TokenAttributes] +
stos   +
stos   +
stos   +
mov edi ds:SetLastError +
mov [ebp+TokenAttributes.lpSecurityDescriptor] ebx +
xor ebx ebx +
push ebx  +
mov [ebp+TokenAttributes.nLength] 0Ch +
mov [ebp+TokenAttributes.bInheritHandle] ebx +
call edi  +
lea eax [ebp+hObject] +
push eax  +
push 2  +
push 2  +
lea eax [ebp+TokenAttributes] +
push eax  +
push 2Ch  +
push [ebp+hExistingToken]  +
call ds:DuplicateTokenEx  +
test eax eax +
jnz loc_1035B24  +
call esi  +
cmp eax ebx +
mov ebx 507h +
jz loc_1035B1E  +
mov ebx eax +
or [ebp+hObject] 0FFFFFFFFh +
jmp loc_1035B86  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+NewState]  +
push ebx  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_1035B3E  +
call esi  +
mov ebx eax +
jmp loc_1035B77  +
push ebx  +
call edi  +
push [ebp+hObject]  +
push ebx  +
call ds:SetThreadToken  +
test eax eax +
jnz loc_1035B58  +
call esi  +
cmp eax ebx +
jmp loc_1035AD2  +
mov eax [ebp+TokenHandle] +
mov ecx [ebp+hExistingToken] +
cmp ecx eax +
jnz loc_1035B6A  +
mov [ebp+var_18] eax +
jmp loc_1035A09  +
cmp ecx [ebp+var_C] +
jnz loc_1035B74  +
mov [ebp+var_18] ebx +
jmp loc_1035B77  +
push 0Dh  +
pop ebx  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1035B86  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+var_C] 0FFFFFFFFh +
pop esi  +
jz loc_1035B96  +
push [ebp+var_C]  +
call ds:CloseHandle  +
cmp [ebp+TokenHandle] 0FFFFFFFFh +
jz loc_1035BA5  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
cmp [ebp+lpMem] 0 +
jz loc_1035BB3  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+NewState] 0 +
jz loc_1035BC1  +
push [ebp+NewState]  +
call sub_10369AF  +
push ebx  +
call ds:SetLastError  +
mov eax [ebp+var_18] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFFFh +
jz loc_1035C0A  +
push 0  +
call ds:SetLastError  +
push esi  +
push 0  +
call ds:SetThreadToken  +
test eax eax +
jnz loc_1035BFF  +
call ds:__imp_GetLastError  +
test esi esi +
jz loc_1035C0A  +
push esi  +
call ds:CloseHandle  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_28] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+ms_exc.disabled] ebx +
push ebx  +
mov edi ds:SetLastError +
call edi  +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
push ebx  +
push 1  +
push [ebp+TokenHandle]  +
mov esi ds:GetTokenInformation +
call esi  +
test eax eax +
jz loc_1035C4F  +
xor eax eax +
jmp loc_1035C54  +
call sub_1035938  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1035C61  +
push 0Dh  +
pop eax  +
mov [ebp+var_1C] eax +
cmp eax 7Ah +
jnz loc_1035D0D  +
mov eax [ebp+dwBytes] +
mov [ebp+TokenInformationLength] eax +
push eax  +
call sub_103696E  +
mov ebx eax +
mov [ebp+var_28] ebx +
test ebx ebx +
jnz loc_1035C8B  +
mov [ebp+var_1C] 8 +
jmp loc_1035D0D  +
push 0  +
call edi  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+TokenInformationLength]  +
push ebx  +
push 1  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jz loc_1035CA6  +
xor eax eax +
jmp loc_1035CAB  +
call sub_1035938  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1035D0D  +
push dword ptr [ebx]  +
call ds:IsValidSid  +
test eax eax +
jz loc_1035D06  +
push dword ptr [ebx]  +
call ds:GetLengthSid  +
mov esi eax +
push esi  +
call sub_103696E  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_1035C7F  +
push 0  +
call edi  +
push dword ptr [ebx]  +
push [ebp+lpMem]  +
push esi  +
call ds:CopySid  +
test eax eax +
jz loc_1035CED  +
xor eax eax +
jmp loc_1035CF2  +
call sub_1035938  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1035D0D  +
push [ebp+lpMem]  +
call ds:IsValidSid  +
test eax eax +
jnz loc_1035D0D  +
mov [ebp+var_1C] 0Dh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1035D48  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-30h] eax +
push eax  +
call sub_10355B8  +
retn   +
test ebx ebx +
jz loc_1035D52  +
push ebx  +
call sub_10369AF  +
cmp [ebp+var_1C] 0 +
jz loc_1035D6A  +
cmp [ebp+lpMem] 0 +
jz loc_1035D6A  +
push [ebp+lpMem]  +
call sub_10369AF  +
and [ebp+lpMem] 0 +
push [ebp+var_1C]  +
call edi  +
mov eax [ebp+lpMem] +
call __SEH_epilog4  +
retn 4  +
***
call __SEH_prolog4_GS  +
xor ebx ebx +
mov [ebp+TokenHandle] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+lpMem] ebx +
mov [ebp+pSid] ebx +
mov [ebp+ms_exc.disabled] ebx +
push ebx  +
mov edi ds:SetLastError +
call edi  +
lea eax [ebp+TokenHandle] +
push eax  +
push 1  +
mov esi 2000000h +
push esi  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jz loc_1035DD6  +
xor eax eax +
jmp loc_1035DDB  +
call sub_1035938  +
mov [ebp+var_28] eax +
cmp eax 3F0h +
jnz loc_1035E0A  +
push ebx  +
call edi  +
lea eax [ebp+TokenHandle] +
push eax  +
push esi  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_1035E02  +
xor eax eax +
jmp loc_1035E07  +
call sub_1035938  +
mov [ebp+var_28] eax +
cmp eax ebx +
jz loc_1035E13  +
mov [ebp+TokenHandle] ebx +
jmp loc_1035E92  +
push ebx  +
call edi  +
push [ebp+TokenHandle]  +
call sub_1035C14  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1035E29  +
xor eax eax +
jmp loc_1035E2E  +
call sub_1035938  +
mov [ebp+var_28] eax +
cmp eax ebx +
jnz loc_1035E92  +
push ebx  +
call edi  +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 12h  +
push 1  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_1035E59  +
xor eax eax +
jmp loc_1035E5E  +
call sub_1035938  +
mov [ebp+var_28] eax +
cmp eax ebx +
jnz loc_1035E92  +
push [ebp+pSid]  +
call ds:IsValidSid  +
test eax eax +
jnz loc_1035E7B  +
mov [ebp+var_28] 0Dh +
jmp loc_1035E92  +
push [ebp+pSid]  +
push [ebp+lpMem]  +
call ds:EqualSid  +
test eax eax +
jnz loc_1035E92  +
mov [ebp+var_28] 65Bh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1035ECC  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-38h] eax +
push eax  +
call sub_10355B8  +
retn   +
cmp [ebp+pSid] ebx +
jz loc_1035EDA  +
push [ebp+pSid]  +
call ds:FreeSid  +
cmp [ebp+lpMem] ebx +
jz loc_1035EE7  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+TokenHandle] ebx +
jz loc_1035EF5  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
push [ebp+var_28]  +
call edi  +
xor eax eax +
cmp [ebp+var_28] ebx +
setz al  +
call __SEH_epilog4_GS  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
and ecx 3 +
mov eax ecx +
xor eax [ebp+arg_0] +
mov edx ecx +
sub edx 0 +
jz loc_1035F2D  +
dec edx  +
dec edx  +
jz loc_1035F2D  +
or eax 1 +
jmp loc_1035F2F  +
or eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword ptr [ebp+DestStr] +
test ecx ecx +
jnz loc_1035F48  +
xor eax eax +
jmp loc_1035F98  +
test ecx 0FFFF0000h +
jnz loc_1035F6B  +
push 1  +
lea eax [ebp+DestStr] +
push eax  +
push 1  +
push eax  +
push 100h  +
push 400h  +
call ds:LCMapStringW  +
jmp loc_1035F95  +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1035F71  +
sub eax esi +
sar eax 1 +
inc eax  +
push eax  +
push ecx  +
push eax  +
push ecx  +
push 100h  +
push 400h  +
call ds:LCMapStringW  +
pop esi  +
mov eax dword ptr [ebp+DestStr] +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov edi ecx +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
cmp edi ebx +
jnz loc_1035FC3  +
mov [ebp+var_20] ebx +
jmp loc_103604C  +
mov eax [ebp+arg_4] +
and eax 80000002h +
cmp eax 2 +
jnz loc_1035FDD  +
push edi  +
call sub_1035F38  +
or [ebp+arg_4] 80000000h +
mov esi edi +
mov [ebp+var_24] esi +
test [ebp+arg_4] 80000000h +
jz loc_1036000  +
movzx eax word ptr [esi] +
cmp ax bx +
jz loc_103601E  +
movzx eax ax +
add [ebp+var_1C] eax +
inc esi  +
inc esi  +
mov [ebp+var_24] esi +
jmp loc_1035FEB  +
movzx eax word ptr [esi] +
cmp ax bx +
jz loc_103601E  +
movzx eax ax +
push eax  +
call sub_1035F38  +
movzx eax ax +
add [ebp+var_1C] eax +
inc esi  +
inc esi  +
mov [ebp+var_24] esi +
jmp loc_1036000  +
mov eax [ebp+var_1C] +
xor edx edx +
mov ecx 1FDh +
div  ecx +
mov eax [ebp+arg_8] +
mov [eax] edx +
sub esi edi +
sar esi 1 +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov [ebp+var_20] 1 +
jmp loc_103604C  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp-20h] 0 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_20] +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_14] +
test bl 1 +
jz loc_103607E  +
and ebx 0FFFFFFFDh +
mov [ebp+arg_14] ebx +
mov ecx [ebp+lpString1] +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push [ebp+arg_8]  +
call sub_1035FA1  +
test eax eax +
jnz loc_1036099  +
xor ebx ebx +
jmp loc_10361CC  +
mov eax [ebp+var_C] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi] +
mov edx [ecx+eax*4] +
cmp edx 7F4h +
jl loc_103619B  +
mov eax [edi+4] +
cmp edx eax +
jge loc_103619B  +
lea esi [ecx+edx] +
mov ecx [edi+14h] +
add ecx 6 +
xor edx edx +
div  ecx +
and [ebp+var_8] 0 +
not ebx  +
inc eax  +
mov [ebp+arg_0] eax +
mov eax [edi+18h] +
mov [ebp+Locale] eax +
and ebx 1 +
push 0FFFFFFFFh  +
lea eax [esi+4] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpString1]  +
push ebx  +
push [ebp+Locale]  +
call ds:CompareStringW  +
test eax eax +
jnz loc_1036111  +
push 0FFFFFFFFh  +
lea eax [esi+4] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpString1]  +
push ebx  +
push 400h  +
call ds:CompareStringW  +
test eax eax +
jz loc_1036115  +
dec eax  +
dec eax  +
jmp loc_103615C  +
test byte ptr [ebp+arg_14] 1 +
jz loc_103614E  +
mov eax [ebp+lpString1] +
lea ecx [esi+4] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1036147  +
test dx dx +
jz loc_1036143  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1036147  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1036121  +
xor eax eax +
jmp loc_103615C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
jmp loc_103615C  +
lea eax [esi+4] +
push eax  +
push [ebp+lpString1]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1036189  +
jl loc_1036192  +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_1036197  +
cmp eax 7F4h +
mov [ebp+var_8] esi +
jl loc_1036185  +
cmp eax [edi+4] +
jge loc_1036185  +
mov esi [edi] +
add esi eax +
dec [ebp+arg_0]  +
jnz loc_10360DD  +
xor ebx ebx +
jmp loc_10361CA  +
mov ebx esi +
sub esi [edi] +
mov [ebp+var_4] esi +
jmp loc_103619D  +
mov ebx [ebp+var_8] +
jmp loc_10361CA  +
mov ebx esi +
jmp loc_10361CA  +
xor ebx ebx +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_10361CA  +
cmp [ebp+arg_18] 0 +
jz loc_10361CA  +
mov edi [edi+14h] +
cmp [ebp+arg_1C] edi +
jnb loc_10361B4  +
mov edi [ebp+arg_1C] +
mov eax [ebp+arg_8] +
mov eax [eax] +
push edi  +
lea eax [ebx+eax*2+6] +
push eax  +
push [ebp+arg_18]  +
call memcpy  +
add esp 0Ch +
pop edi  +
pop esi  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10361D8  +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10361E1  +
mov [eax] ebx +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 20h  +
***
call __SEH_prolog4  +
mov [ebp+dwErrCode] 8 +
mov bl byte ptr [ebp+arg_0] +
cmp bl 1 +
jz loc_1036222  +
cmp bl 2 +
jz loc_1036222  +
cmp bl 3 +
jz loc_1036222  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_103645A  +
push 2Ch  +
call sub_103696E  +
mov esi eax +
mov [ebp+var_24] esi +
xor edi edi +
cmp esi edi +
jz loc_1036421  +
push 2Ch  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
mov [esi+1Ch] bl +
mov eax [ebp+arg_18] +
mov [esi+14h] eax +
mov eax [ebp+arg_14] +
and eax 3FFh +
cmp ax 1Fh +
jnz loc_1036264  +
mov dword ptr [esi+18h] 409h +
jmp loc_103626B  +
movzx eax word ptr [ebp+arg_14] +
mov [esi+18h] eax +
movzx eax bl +
dec eax  +
jz loc_10363EE  +
dec eax  +
jz loc_103634D  +
dec eax  +
jnz loc_1036421  +
mov [ebp+arg_0] edi +
mov eax [ebp+arg_4] +
mov [esi+20h] eax +
mov [esi+10h] edi +
mov [esi+0Ch] edi +
mov ebx [ebp+dwNumberOfBytesToMap] +
test ebx ebx +
jnz loc_10362A5  +
mov ebx 1800h +
mov [ebp+arg_0] 1 +
lea edi [esi+28h] +
push edi  +
lea ecx [esi+24h] +
push ecx  +
push ebx  +
push eax  +
call sub_103915A  +
mov [ebp+dwErrCode] eax +
test eax eax +
jnz loc_1036421  +
mov [ebp+ms_exc.disabled] 1 +
mov edi [edi] +
lea eax [edi+10h] +
mov [esi] eax +
add ebx 0FFFFFFF0h +
mov [esi+8] ebx +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jz loc_103631D  +
push 1800h  +
push ebx  +
push edi  +
push ebx  +
push dword ptr [esi+20h]  +
call sub_10391C6  +
mov [ebp+dwErrCode] eax +
cmp eax ebx +
jnz loc_1036338  +
mov [ebp+var_20] ebx +
cmp [ebp+var_20] 1FDh +
jnb loc_103630B  +
mov eax [esi] +
mov ecx [ebp+var_20] +
or dword ptr [eax+ecx*4] 0FFFFFFFFh +
inc [ebp+var_20]  +
jmp loc_10362F4  +
mov eax 7F4h +
mov [esi+4] eax +
mov [edi] eax +
mov eax [ebp+arg_18] +
mov [edi+4] eax +
jmp loc_1036335  +
mov eax [edi] +
mov [esi+4] eax +
mov edi [edi+4] +
cmp edi ebx +
jz loc_1036335  +
cmp edi [ebp+arg_18] +
mov [ebp+dwErrCode] 51Ah +
jb loc_1036338  +
mov [ebp+dwErrCode] ebx +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1036421  +
xor eax eax +
inc eax  +
retn   +
jmp loc_10363D8  +
mov eax [ebp+arg_4] +
mov [esi+20h] eax +
mov [esi+10h] edi +
mov [esi+0Ch] edi +
mov ecx [ebp+arg_C] +
cmp ecx edi +
jz loc_1036370  +
mov [esi] ecx +
mov eax [ebp+hFile] +
mov [esi+4] eax +
mov [esi+8] edi +
jmp loc_1036458  +
mov ebx [ebp+dwNumberOfBytesToMap] +
cmp ebx 10h +
jnb loc_1036384  +
mov [ebp+dwErrCode] 57h +
jmp loc_1036427  +
lea edi [esi+28h] +
push edi  +
lea ecx [esi+24h] +
push ecx  +
push ebx  +
push eax  +
call sub_10390F1  +
mov [ebp+dwErrCode] eax +
test eax eax +
jnz loc_1036421  +
and [ebp+ms_exc.disabled] eax +
mov eax [edi] +
lea ecx [eax+10h] +
mov [esi] ecx +
add ebx 0FFFFFFF0h +
mov [esi+8] ebx +
mov ecx [eax+4] +
test ecx ecx +
jz loc_10363C6  +
cmp ecx [ebp+arg_18] +
jnb loc_10363C6  +
mov [ebp+dwErrCode] 51Ah +
jmp loc_1036338  +
mov eax [eax] +
mov [esi+4] eax +
and [ebp+dwErrCode] 0 +
jmp loc_1036338  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 0Dh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov esi [ebp-24h] +
jmp loc_1036421  +
or dword ptr [esi+20h] 0FFFFFFFFh +
mov edi 1800h +
push edi  +
call sub_103696E  +
mov [esi] eax +
test eax eax +
jz loc_1036421  +
mov [esi+8] edi +
xor ecx ecx +
mov eax 7F4h +
mov edx [esi] +
or dword ptr [ecx+edx] 0FFFFFFFFh +
add ecx 4 +
cmp ecx eax +
jb loc_103640D  +
mov [esi+4] eax +
and [ebp+dwErrCode] 0 +
cmp [ebp+dwErrCode] 0 +
jz loc_1036458  +
test esi esi +
jz loc_103644F  +
mov eax [esi+28h] +
test eax eax +
jz loc_1036439  +
push eax  +
call ds:UnmapViewOfFile  +
mov eax [esi+24h] +
test eax eax +
jz loc_1036447  +
push eax  +
call ds:CloseHandle  +
push esi  +
call sub_10369AF  +
xor esi esi +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax esi +
call __SEH_epilog4  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax byte ptr [esi+1Ch] +
dec eax  +
jz loc_10364AB  +
dec eax  +
jz loc_103648D  +
dec eax  +
jnz loc_10364B8  +
push dword ptr [esi+28h]  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
call sub_103922B  +
jmp loc_10364B8  +
mov eax [esi+28h] +
test eax eax +
jz loc_103649B  +
push eax  +
call ds:UnmapViewOfFile  +
mov eax [esi+24h] +
test eax eax +
jz loc_10364B8  +
push eax  +
call ds:CloseHandle  +
jmp loc_10364B8  +
cmp dword ptr [esi+8] 0 +
jz loc_10364B8  +
push dword ptr [esi]  +
call sub_10369AF  +
push esi  +
call sub_10369AF  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+lpHandles]  +
push 2  +
call ds:WaitForMultipleObjectsEx  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+4]  +
call ds:ReleaseMutex  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
or [ebp+var_1C] 0FFFFFFFFh +
xor esi esi +
mov [ebp+var_20] esi +
mov [ebp+ms_exc.disabled] esi +
mov edi [ebp+arg_0] +
lea eax [edi+0Ch] +
push eax  +
call sub_10364C8  +
test eax eax +
jz loc_1036553  +
mov [ebp+var_20] 1 +
push [ebp+arg_8]  +
call sub_1035F0D  +
push esi  +
push esi  +
push eax  +
push esi  +
push esi  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+lpString1]  +
push edi  +
call sub_1036063  +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1036573  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
or dword ptr [ebp-1Ch] 0FFFFFFFFh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor esi esi +
mov edi [ebp+8] +
cmp [ebp+var_20] esi +
jz loc_1036581  +
add edi 0Ch +
push edi  +
call sub_10364ED  +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
xor esi esi +
push esi  +
call ds:GetThreadLocale  +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push 1  +
call sub_10361EE  +
mov edi eax +
cmp edi esi +
jz loc_10365C7  +
lea eax [edi+0Ch] +
push eax  +
call sub_103522E  +
test eax eax +
jz loc_10365C1  +
mov eax edi +
jmp loc_10365C9  +
push edi  +
call sub_1036467  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov edi [ebp+arg_0] +
lea esi [edi+0Ch] +
push esi  +
call sub_10364C8  +
test eax eax +
jz loc_1036606  +
push esi  +
call sub_1035275  +
push edi  +
call sub_1036467  +
jmp loc_1036606  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+lpMem] +
xor edi edi +
mov [ebp+var_24] edi +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_103663D  +
or eax 0FFFFFFFFh +
jmp loc_10368DD  +
cmp byte ptr [esi+1Ch] 2 +
jz loc_1036635  +
mov [ebp+lpMem] eax +
mov ebx [ebp+arg_8] +
test bl 1 +
jnz loc_103667C  +
test ebx ebx +
js loc_1036673  +
test bl 2 +
jnz loc_103666B  +
push eax  +
call sub_103535A  +
mov [ebp+lpMem] eax +
cmp eax edi +
jz loc_1036635  +
mov [ebp+var_24] 1 +
push [ebp+lpMem]  +
call sub_1035F38  +
and ebx 0FFFFFFFDh +
or ebx 80000001h +
mov [ebp+ms_exc.disabled] edi +
cmp [ebp+arg_C] edi +
jz loc_1036696  +
mov eax [ebp+arg_10] +
cmp eax [esi+14h] +
jbe loc_1036696  +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:RaiseException  +
push edi  +
push edi  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+lpMem]  +
push esi  +
call sub_1036063  +
mov [ebp+var_1C] eax +
cmp eax 0FFFFFFFFh +
jz loc_1036702  +
cmp [ebp+arg_C] edi +
jz loc_10366E9  +
test bl 4 +
jz loc_10366E9  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_28] +
lea edi [eax+ecx*2+6] +
mov [ebp+var_20] edi +
push dword ptr [esi+14h]  +
push 0  +
push edi  +
call memset  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push edi  +
call memcpy  +
add esp 18h +
xor edi edi +
cmp [ebp+var_24] edi +
jz loc_10366F6  +
push [ebp+lpMem]  +
call sub_10369AF  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10368DA  +
mov eax [esi+14h] +
mov ecx [ebp+var_28] +
lea eax [eax+ecx*2+6] +
mov [ebp+arg_8] eax +
and eax 3 +
jz loc_103671C  +
push 4  +
pop ecx  +
sub ecx eax +
add [ebp+arg_8] ecx +
mov ecx [ebp+var_20] +
mov eax [esi+4] +
mov ebx [ebp+arg_8] +
lea edx [eax+ebx] +
mov [ebp+var_30] edx +
mov eax [esi+8] +
cmp edx eax +
jbe loc_1036833  +
mov ebx eax +
xor edx edx +
push 3  +
pop edi  +
div  edi +
add eax eax +
shr eax 0Bh +
inc eax  +
shl eax 0Bh +
mov edx 100000h +
cmp eax edx +
jb loc_1036753  +
mov eax edx +
or edx 0FFFFFFFFh +
sub edx ebx +
cmp eax edx +
ja loc_103675E  +
add ebx eax +
mov [ebp+var_2C] ebx +
cmp ebx [esi+8] +
jnb loc_103676C  +
mov ebx [ebp+var_30] +
mov [ebp+var_2C] ebx +
mov edx [esi] +
mov [ebp+var_30] edx +
movzx eax byte ptr [esi+1Ch] +
dec eax  +
jz loc_10367EF  +
dec eax  +
dec eax  +
jnz loc_10367D7  +
push dword ptr [esi+28h]  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
call sub_103922B  +
and dword ptr [esi+24h] 0 +
and dword ptr [esi] 0 +
mov edi [esi+8] +
add edi 10h +
lea eax [esi+28h] +
push eax  +
lea eax [esi+24h] +
push eax  +
lea eax [ebx+10h] +
push eax  +
push dword ptr [esi+20h]  +
call sub_103915A  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1036827  +
mov eax ebx +
sub eax edi +
add eax 10h +
push eax  +
push edi  +
push dword ptr [esi+28h]  +
push edi  +
push dword ptr [esi+20h]  +
call sub_10391C6  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1036827  +
mov ecx [esi+28h] +
add ecx 10h +
mov [ebp+var_20] ecx +
cmp [ebp+arg_4] 0 +
jz loc_10367E5  +
mov eax ecx +
sub eax [ebp+var_30] +
add [ebp+arg_4] eax +
mov [esi] ecx +
mov [esi+8] ebx +
jmp loc_103671F  +
push ebx  +
push edx  +
call sub_103698D  +
mov ecx eax +
mov [ebp+var_20] ecx +
test ecx ecx +
jnz loc_10367D7  +
mov ebx [esi+4] +
add ebx [ebp+arg_8] +
mov [ebp+var_2C] ebx +
push ebx  +
push dword ptr [esi]  +
call sub_103698D  +
mov ecx eax +
mov [ebp+var_20] ecx +
test ecx ecx +
jnz loc_10367D7  +
cmp [ebp+var_24] 0 +
jz loc_1036827  +
push [ebp+lpMem]  +
call sub_10369AF  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1036635  +
mov ecx [esi] +
mov edi [esi+4] +
add edi ecx +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_103684D  +
mov ecx [eax] +
mov [edi] ecx +
mov ecx edi +
sub ecx [esi] +
mov [eax] ecx +
jmp loc_1036861  +
mov eax [ebp+var_34] +
shl eax 2 +
mov ecx [eax+ecx] +
mov [edi] ecx +
mov ecx [esi] +
mov edx edi +
sub edx ecx +
mov [eax+ecx] edx +
push [ebp+lpMem]  +
push ebx  +
lea eax [edi+4] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_1036819  +
mov eax [ebp+var_28] +
lea ebx [edi+eax*2+6] +
mov [ebp+var_20] ebx +
push dword ptr [esi+14h]  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_C] 0 +
jz loc_103689F  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push ebx  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_8] +
add [esi+4] eax +
mov eax [esi+4] +
cmp byte ptr [esi+1Ch] 3 +
jnz loc_10368B3  +
mov ecx [esi+28h] +
mov [ecx] eax +
sub edi [esi] +
mov [ebp+var_1C] edi +
jmp loc_10368C5  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
or dword ptr [ebp-1Ch] 0FFFFFFFFh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
cmp [ebp+var_24] 0 +
jz loc_10368DA  +
push [ebp+lpMem]  +
call sub_10369AF  +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 14h  +
***
call __SEH_prolog4  +
or [ebp+var_1C] 0FFFFFFFFh +
xor edi edi +
mov [ebp+var_20] edi +
mov [ebp+ms_exc.disabled] edi +
mov esi [ebp+arg_0] +
lea eax [esi+0Ch] +
push eax  +
call sub_10364C8  +
test eax eax +
jz loc_1036930  +
mov [ebp+var_20] 1 +
push [ebp+arg_8]  +
call sub_1035F0D  +
push edi  +
push edi  +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_103661A  +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1036950  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
or dword ptr [ebp-1Ch] 0FFFFFFFFh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov esi [ebp+8] +
cmp [ebp+var_20] edi +
jz loc_103695E  +
add esi 0Ch +
push esi  +
call sub_10364ED  +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push 0  +
push hHeap  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
call ds:GetProcessHeap  +
mov hHeap eax +
test eax eax +
jnz loc_10369DE  +
retn   +
xor eax eax +
inc eax  +
mov dword_103D490 eax +
retn   +
***
cmp dword_103D490 0 +
jz loc_10369FC  +
and dword_103D490 0 +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [ebp+dwBytes] +
mul  [ebp+arg_4] +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jge loc_1036A23  +
xor eax eax +
jmp loc_1036A2B  +
push [ebp+dwBytes]  +
call sub_103696E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [ebp+dwBytes] +
mul  [ebp+arg_8] +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jge loc_1036A52  +
xor eax eax +
jmp loc_1036A5D  +
push [ebp+dwBytes]  +
push [ebp+lpMem]  +
call sub_103698D  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
mov esi [ebp+arg_4] +
xor eax eax +
shr esi 1 +
push edi  +
mov [ebp+arg_4] eax +
cmp ebx eax +
jz loc_1036AAA  +
mov edi ebx +
cmp [ebx] ax +
jz loc_1036AA4  +
mov eax edi +
sub eax ebx +
sar eax 1 +
cmp eax esi +
jnb loc_1036AC7  +
inc [ebp+arg_4]  +
push edi  +
call ds:lstrlenW  +
lea edi [edi+eax*2+2] +
cmp word ptr [edi] 0 +
jnz loc_1036A86  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_1036AB2  +
inc eax  +
push 4  +
push eax  +
call sub_1036A05  +
xor edi edi +
mov [ebp+lpString] eax +
cmp eax edi +
jnz loc_1036ACC  +
push 8  +
jmp loc_1036AC9  +
push 0Dh  +
pop eax  +
jmp loc_1036B0B  +
cmp ebx edi +
jz loc_1036AF9  +
mov esi ebx +
cmp [ebx] di +
jz loc_1036AF9  +
push esi  +
call sub_103535A  +
mov ebx [ebp+lpString] +
mov [ebx+edi*4] eax +
test eax eax +
jz loc_1036B12  +
push esi  +
inc edi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_1036AD7  +
mov eax [ebp+arg_8] +
mov ecx [ebp+lpString] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
xor esi esi +
test edi edi +
jle loc_1036B25  +
push dword ptr [ebx+esi*4]  +
call sub_10369AF  +
inc esi  +
cmp esi edi +
jl loc_1036B18  +
push ebx  +
call sub_10369AF  +
jmp loc_1036AC3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp ecx ebx +
jz loc_1036BD4  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jz loc_1036BD4  +
mov edx [ebp+lpString2] +
cmp edx ebx +
jz loc_1036BD4  +
cmp [edx] bx +
jz loc_1036BD4  +
mov esi [eax] +
mov edi [ecx] +
cmp esi ebx +
jz loc_1036B6A  +
cmp edi ebx +
jz loc_1036BD4  +
cmp [ebp+arg_C] ebx +
jnz loc_1036B88  +
cmp esi ebx +
jbe loc_1036B88  +
push [ebp+lpString2]  +
push dword ptr [edi+ebx*4]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_1036B95  +
inc ebx  +
cmp ebx esi +
jb loc_1036B73  +
test edi edi +
jnz loc_1036B9C  +
push 4  +
call sub_103696E  +
jmp loc_1036BAC  +
mov eax 0B7h +
jmp loc_1036BD7  +
lea eax [esi+1] +
test eax eax +
jz loc_1036BD0  +
push 4  +
push eax  +
push edi  +
call sub_1036A34  +
test eax eax +
jz loc_1036BD0  +
mov ecx [ebp+arg_0] +
push [ebp+lpString2]  +
mov edi eax +
mov [ecx] eax +
call sub_103535A  +
test eax eax +
jz loc_1036BD0  +
mov [edi+esi*4] eax +
mov eax [ebp+arg_4] +
inc esi  +
mov [eax] esi +
xor eax eax +
jmp loc_1036BD7  +
push 8  +
jmp loc_1036BD6  +
push 57h  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
cmp [ebp+arg_4] esi +
jbe loc_1036C02  +
push dword ptr [edi+esi*4]  +
call sub_10369AF  +
inc esi  +
cmp esi [ebp+arg_4] +
jb loc_1036BF4  +
push edi  +
call sub_10369AF  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
cmp edi esi +
jnz loc_1036C33  +
cmp [ebp+arg_4] esi +
jz loc_1036C33  +
push 57h  +
pop eax  +
jmp loc_1036CF6  +
xor eax eax +
cmp [ebp+arg_4] esi +
push ebx  +
mov ebx ds:lstrlenW +
setz al  +
lea eax [eax+eax+2] +
mov [ebp+dwBytes] eax +
cmp [ebp+arg_4] esi +
jbe loc_1036C67  +
push dword ptr [edi+esi*4]  +
call ebx  +
test eax eax +
jz loc_1036C7D  +
mov ecx [ebp+dwBytes] +
inc esi  +
lea eax [ecx+eax*2+2] +
mov [ebp+dwBytes] eax +
cmp esi [ebp+arg_4] +
jb loc_1036C4E  +
push [ebp+dwBytes]  +
call sub_103696E  +
xor edi edi +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_1036C81  +
push 8  +
pop eax  +
jmp loc_1036CF5  +
push 0Dh  +
jmp loc_1036C7A  +
cmp [ebp+arg_4] edi +
jz loc_1036CD9  +
mov esi eax +
jbe loc_1036CE1  +
mov eax [ebp+arg_0] +
push dword ptr [eax+edi*4]  +
call ebx  +
mov ecx [ebp+dwBytes] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
push dword ptr [eax+edi*4]  +
mov eax esi +
sub eax [ebp+lpMem] +
sar eax 1 +
sub ecx eax +
push ecx  +
push esi  +
call sub_102CC3F  +
mov [ebp+var_10] eax +
test eax eax +
jl loc_1036CC7  +
mov eax [ebp+var_C] +
inc edi  +
lea esi [esi+eax*2+2] +
cmp edi [ebp+arg_4] +
jb loc_1036C8A  +
mov eax [ebp+lpMem] +
jmp loc_1036CE1  +
push [ebp+lpMem]  +
call sub_10369AF  +
mov eax [ebp+var_10] +
and eax 0FFFFh +
jmp loc_1036CF5  +
xor ecx ecx +
mov [eax] cx +
lea esi [eax+2] +
xor ecx ecx +
mov [esi] cx +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov ecx [ebp+dwBytes] +
mov [eax] ecx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_10] +
lea eax [ebp+arg_10] +
push eax  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10396A8  +
cmp eax 2 +
jz loc_1036D91  +
push esi  +
push edi  +
test eax eax +
jnz loc_1036D8C  +
lea eax [ebp+arg_4] +
push eax  +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
call sub_10396A8  +
push [ebp+arg_10]  +
mov esi eax +
call sub_1039698  +
cmp esi 2 +
jz loc_1036D8F  +
test esi esi +
jnz loc_1036D8C  +
and [ebp+arg_0] esi +
push 4  +
pop esi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_C]  +
mov [ebp+var_4] esi +
push [ebp+arg_4]  +
call sub_103972C  +
push [ebp+arg_4]  +
mov edi eax +
call sub_1039698  +
cmp edi 2 +
jz loc_1036D8F  +
test edi edi +
jnz loc_1036D8C  +
cmp [ebp+arg_0] esi +
jnz loc_1036D8C  +
mov ebx [ebp+var_8] +
cmp [ebp+var_4] esi +
jz loc_1036D8F  +
mov ebx [ebp+arg_14] +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1036DAE  +
pop ebp  +
jmp sub_10369AF  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1036DD1  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1036DDC  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 274h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 1  +
push edi  +
push edx  +
push ecx  +
push ebx  +
push esi  +
mov [ebp+var_23C] ecx +
mov [ebp+var_234] edx +
mov [ebp+var_270] eax +
mov [ebp+var_228] edi +
mov [ebp+lpMem] edi +
mov [ebp+var_248] edi +
mov [ebp+var_240] edi +
mov [ebp+hKey] edi +
mov [eax] edi +
call sub_1036D01  +
test eax eax +
jnz loc_1036E5F  +
mov [ebp+var_228] 2 +
jmp loc_103713B  +
lea eax [ebp+var_248] +
push eax  +
push 1  +
push ebx  +
push esi  +
call sub_10396A8  +
cmp eax edi +
jz loc_1036E7E  +
mov [ebp+var_228] eax +
jmp loc_103713B  +
lea eax [ebp+var_240] +
push eax  +
push 1  +
push [ebp+var_23C]  +
push [ebp+var_248]  +
call sub_10396A8  +
cmp eax edi +
jnz loc_1036E73  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push [ebp+var_234]  +
push [ebp+var_240]  +
call sub_10396A8  +
cmp eax edi +
jnz loc_1036E73  +
push edi  +
push edi  +
lea eax [ebp+var_26C] +
push eax  +
push edi  +
lea eax [ebp+var_268] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+hKey]  +
call sub_10396F6  +
cmp eax edi +
jnz loc_1036E73  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [ebp+var_268] +
mul  [ebp+var_26C] +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jl loc_103711E  +
lea eax [ebp+dwBytes] +
push eax  +
push 2  +
push [ebp+dwBytes]  +
call sub_1036DB7  +
test eax eax +
jl loc_103711E  +
mov ebx ds:RegEnumValueW +
mov esi [ebp+dwBytes] +
push esi  +
cmp [ebp+lpMem] edi +
jnz loc_1036F3F  +
call sub_103696E  +
mov [ebp+var_23C] eax +
jmp loc_1036F50  +
push [ebp+lpMem]  +
call sub_103698D  +
mov [ebp+var_23C] eax +
cmp eax edi +
jz loc_103718B  +
mov [ebp+lpMem] eax +
mov [ebp+var_258] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push edi  +
push [ebp+hKey]  +
shr esi 1 +
mov [ebp+var_25C] esi +
mov [ebp+var_244] esi +
mov [ebp+var_234] edi +
mov [ebp+cbValueName] 0Bh +
mov [ebp+cbData] 208h +
call ebx  +
mov [ebp+dwIndex] 1 +
cmp eax 103h +
jz loc_1037197  +
cmp eax 0EAh +
jz loc_103706F  +
cmp eax edi +
jnz loc_10370CC  +
xor eax eax +
mov [ebp+var_1E] ax +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call ds:RtlInitUnicodeStringEx  +
cmp eax edi +
jl loc_10370C5  +
movzx esi word ptr [ebp+var_264+2] +
lea eax [ebp+var_234] +
push eax  +
shr esi 1 +
push esi  +
push [ebp+var_234]  +
call sub_1036DB7  +
test eax eax +
jl loc_10370D4  +
cmp [ebp+var_244] esi +
jbe loc_103706F  +
push edi  +
lea eax [ebp+var_264] +
push eax  +
push eax  +
call ds:RtlUpcaseUnicodeString  +
push 900h  +
push edi  +
push edi  +
lea eax [ebp+Data] +
push eax  +
push [ebp+var_244]  +
push [ebp+var_258]  +
call sub_1032D6B  +
mov eax [ebp+var_258] +
sub [ebp+var_244] esi +
lea eax [eax+esi*2] +
mov [ebp+var_258] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 0Bh +
push [ebp+hKey]  +
mov [ebp+cbData] 208h +
call ebx  +
inc [ebp+dwIndex]  +
cmp eax 103h +
jnz loc_1036FCB  +
jmp loc_10370E6  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov [ebp+var_228] eax +
jmp loc_10370DE  +
mov [ebp+var_228] 0Dh +
cmp [ebp+var_228] edi +
jnz loc_1037128  +
mov ecx [ebp+var_234] +
cmp ecx edi +
jz loc_1037197  +
inc ecx  +
cmp [ebp+var_25C] ecx +
jnb loc_10371A3  +
lea eax [ebp+dwBytes] +
push eax  +
push 2  +
mov eax ecx +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_102D16E  +
test eax eax +
jge loc_1036F23  +
mov [ebp+var_228] 0Dh +
cmp [ebp+lpMem] edi +
jz loc_103713B  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+hKey] edi +
jz loc_103714E  +
push [ebp+hKey]  +
call sub_1039698  +
cmp [ebp+var_240] edi +
jz loc_1037161  +
push [ebp+var_240]  +
call sub_1039698  +
cmp [ebp+var_248] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1037177  +
push [ebp+var_248]  +
call sub_1039698  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_228] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 14h  +
mov [ebp+var_228] 8 +
jmp loc_1037128  +
mov [ebp+var_228] 2 +
jmp loc_1037128  +
mov eax [ebp+var_23C] +
xor edx edx +
mov [eax+ecx*2-2] dx +
mov ecx [ebp+var_270] +
mov [ecx] eax +
jmp loc_103713B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
xor esi esi +
inc esi  +
push esi  +
push offset aSoftwareMicr_4  +
xor edi edi +
push 80000002h  +
mov [ebp+var_4] edi +
call sub_10396A8  +
cmp [ebp+var_4] edi +
jz loc_10371FF  +
lea eax [ebp+var_8] +
push eax  +
push offset aLoglevel  +
push [ebp+var_4]  +
call sub_1039774  +
test eax eax +
jz loc_1037206  +
xor eax eax +
mov [ebp+var_8] eax +
jmp loc_1037209  +
mov eax [ebp+var_8] +
mov ecx eax +
and ecx 0FFFF0000h +
mov dword_103D4CC ecx +
mov dword_103D4A4 ecx +
movzx ecx al +
shr eax 8 +
and eax 0FFh +
cmp ecx edi +
jnz loc_1037231  +
push 4  +
pop ecx  +
jmp loc_1037234  +
shr ecx 4 +
cmp eax edi +
jnz loc_103723D  +
push 5  +
pop eax  +
jmp loc_1037240  +
shr eax 4 +
cmp ecx 7 +
jbe loc_1037248  +
push 6  +
pop ecx  +
cmp eax 7 +
jbe loc_1037250  +
push 6  +
pop eax  +
mov dword_103D4C0 ecx +
mov dword_103D498 eax +
cmp [ebp+var_4] edi +
jz loc_1037275  +
lea eax [ebp+var_C] +
push eax  +
push offset aLogmask  +
push [ebp+var_4]  +
call sub_1039774  +
test eax eax +
jz loc_103727D  +
or eax 0FFFFFFFFh +
mov [ebp+var_C] eax +
jmp loc_1037280  +
mov eax [ebp+var_C] +
mov dword_103D4C4 eax +
mov dword_103D49C eax +
cmp [ebp+var_4] edi +
jz loc_10372A4  +
lea eax [ebp+var_10] +
push eax  +
push offset aLogmaxfilesize  +
push [ebp+var_4]  +
call sub_1039774  +
test eax eax +
jz loc_10372AE  +
mov ecx 100010h +
mov [ebp+var_10] ecx +
jmp loc_10372B1  +
mov ecx [ebp+var_10] +
movzx eax cx +
shr ecx 10h +
mov edx 0FFFh +
cmp eax edi +
jnz loc_10372C5  +
push 10h  +
pop eax  +
jmp loc_10372D3  +
cmp eax esi +
jnb loc_10372CD  +
mov eax esi +
jmp loc_10372D3  +
cmp eax edx +
jbe loc_10372D3  +
mov eax edx +
cmp ecx edi +
jnz loc_10372DC  +
push 10h  +
pop ecx  +
jmp loc_10372EA  +
cmp ecx esi +
jnb loc_10372E4  +
mov ecx esi +
jmp loc_10372EA  +
cmp ecx edx +
jbe loc_10372EA  +
mov ecx edx +
shl eax 14h +
shl ecx 14h +
mov dword_103D4C8 eax +
mov dword_103D4A0 ecx +
cmp [ebp+var_4] edi +
jz loc_1037308  +
push [ebp+var_4]  +
call sub_1039698  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov eax dword_103D4A8 +
test eax eax +
jz loc_1037329  +
push eax  +
call sub_10369AF  +
and dword_103D4A8 0 +
mov eax dword_103D4D0 +
test eax eax +
jz loc_103733F  +
push eax  +
call sub_10369AF  +
and dword_103D4D0 0 +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_4] esi +
jz loc_1037363  +
mov eax offset aSetupapi_app_l +
mov edi offset aSetupapi_dev_l +
jmp loc_103736A  +
mov eax offset aSetupapi_offli +
mov edi eax +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
call sub_103959B  +
test eax eax +
jz loc_1037395  +
mov eax dword_103D4D0 +
mov esi [ebp+var_4] +
test eax eax +
jz loc_103738D  +
push eax  +
call sub_10369AF  +
mov eax [ebp+var_4] +
mov dword_103D4D0 eax +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_103959B  +
test eax eax +
jz loc_10373C0  +
mov eax dword_103D4A8 +
mov esi [ebp+var_4] +
test eax eax +
jz loc_10373B8  +
push eax  +
call sub_10369AF  +
mov eax [ebp+var_4] +
mov dword_103D4A8 eax +
test esi esi +
jz loc_10373CA  +
push esi  +
call sub_103927E  +
xor eax eax +
cmp [ebp+arg_4] eax +
pop edi  +
setz al  +
pop esi  +
mov dword_103D4EC eax +
xor eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor eax eax +
push eax  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 2  +
push 1  +
push eax  +
push offset aSystemSetupSet  +
push 80000002h  +
xor esi esi +
mov [ebp+var_4] eax +
call sub_10396C9  +
test eax eax +
jnz loc_103743A  +
push 4  +
lea eax [ebp+arg_4] +
push eax  +
mov eax [ebp+arg_0] +
push 4  +
push dword ptr [eax+10h]  +
call sub_1035183  +
push eax  +
push [ebp+var_4]  +
call sub_1039750  +
test eax eax +
jnz loc_1037432  +
inc esi  +
push [ebp+var_4]  +
call sub_1039698  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push offset aSystemSetupSet  +
push 80000002h  +
call sub_10396A8  +
test eax eax +
jnz loc_10374AC  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+10h]  +
mov [ebp+var_C] 4 +
call sub_1035183  +
push eax  +
push [ebp+var_4]  +
call sub_103972C  +
test eax eax +
jnz loc_10374A0  +
cmp [ebp+var_10] 4 +
jz loc_10374A4  +
and [ebp+var_8] 0 +
push [ebp+var_4]  +
call sub_1039698  +
mov eax [ebp+var_8] +
leave   +
retn 4  +
***
call __SEH_prolog4  +
and [ebp+var_1C] 0 +
mov eax [ebp+arg_4] +
cmp eax 2710h +
ja loc_103751E  +
mov edx [ebp+arg_0] +
mov ecx [edx+0Ch] +
imul eax eax +
mov esi ecx +
sub esi [edx+8] +
lea edx [eax+14h] +
cmp edx esi +
ja loc_103751E  +
and [ebp+ms_exc.disabled] 0 +
sub ecx eax +
sub ecx 14h +
mov esi ecx +
cmp dword ptr [esi] 0E0E01111h +
jnz loc_1037512  +
push 5  +
pop ecx  +
mov edi [ebp+arg_8] +
movs   +
mov [ebp+var_1C] 1 +
jmp loc_1037512  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
jmp loc_1037520  +
xor eax eax +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
xor edi edi +
jmp loc_1037544  +
mov eax [esi+4] +
cmp eax [ebp+arg_4] +
jz loc_1037558  +
inc edi  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_10374B8  +
test eax eax +
jnz loc_103753B  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_C] +
mov [eax] edi +
xor eax eax +
inc eax  +
jmp loc_1037552  +
***
call __SEH_prolog4  +
and [ebp+var_1C] 0 +
mov eax [ebp+arg_8] +
cmp eax 2710h +
ja loc_10375D5  +
mov edx [ebp+arg_0] +
mov ecx [edx+0Ch] +
imul eax eax +
mov esi ecx +
sub esi [edx+8] +
lea edx [eax+14h] +
cmp edx esi +
ja loc_10375D5  +
and [ebp+ms_exc.disabled] 0 +
sub ecx eax +
sub ecx 14h +
mov edi ecx +
cmp dword ptr [edi] 0E0E01111h +
jnz loc_10375C9  +
mov eax [edi+4] +
mov esi [ebp+arg_4] +
cmp eax [esi+4] +
jnz loc_10375C9  +
push 5  +
pop ecx  +
movs   +
mov [ebp+var_1C] 1 +
jmp loc_10375C9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
jmp loc_10375D7  +
xor eax eax +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:lstrlenA +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp ebx edi +
jnz loc_103761C  +
cmp [ebp+lpString] edi +
jnz loc_1037648  +
mov eax [ebp+arg_8] +
and eax 1 +
or eax 2 +
mov ecx [ebp+arg_C] +
pop edi  +
mov [ecx] eax +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 10h  +
push ebx  +
call esi  +
mov [ebp+arg_0] eax +
test eax eax +
jle loc_1037642  +
movsx eax byte ptr [edi+ebx] +
push eax  +
call toupper  +
pop ecx  +
mov ecx [ebp+var_4] +
imul ecx ecx +
add eax ecx +
inc edi  +
cmp edi [ebp+arg_0] +
mov [ebp+var_4] eax +
jl loc_1037626  +
cmp [ebp+lpString] 0 +
jz loc_1037673  +
push [ebp+lpString]  +
call esi  +
mov edi eax +
xor esi esi +
test edi edi +
jle loc_1037673  +
mov eax [ebp+lpString] +
movsx eax byte ptr [esi+eax] +
push eax  +
call toupper  +
pop ecx  +
mov ecx [ebp+var_4] +
imul ecx ecx +
add eax ecx +
inc esi  +
cmp esi edi +
mov [ebp+var_4] eax +
jl loc_1037655  +
mov eax [ebp+var_4] +
and eax 0FFFFFFFCh +
test byte ptr [ebp+arg_8] 1 +
jz loc_103760A  +
or eax 3 +
jmp loc_103760D  +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
mov esi [ecx+8] +
add esi [ebp+arg_4] +
mov [ebp+ms_exc.disabled] eax +
push 5  +
pop ecx  +
mov edi offset aIns +
xor edx edx +
cmps   +
jnz loc_10376C0  +
inc eax  +
jmp loc_10376BD  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 8  +
***
call __SEH_prolog4  +
mov ebx [ebp+arg_0] +
mov ecx [ebx+14h] +
mov eax [ebx+8] +
lea edi [eax+ecx] +
and [ebp+ms_exc.disabled] 0 +
push 14h  +
push ecx  +
push eax  +
mov ecx [ebx+0Ch] +
sub ecx eax +
push ecx  +
push dword ptr [ebx]  +
call sub_10391C6  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_1037723  +
push 5  +
pop ecx  +
mov esi [ebp+arg_4] +
movs   +
add dword ptr [ebx+0Ch] 14h +
jmp loc_1037723  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push 0Dh  +
pop eax  +
mov [ebp-1Ch] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+18h] 0 +
jz loc_1037754  +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_1037754  +
push eax  +
call ds:FlushFileBuffers  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_103922B  +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_103776F  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+4] 0 +
or dword ptr [esi] 0FFFFFFFFh +
and dword ptr [esi+18h] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add [eax+0Ch] ecx +
mov ecx [eax+0Ch] +
sub ecx [eax+8] +
push esi  +
xor esi esi +
push esi  +
push esi  +
push ecx  +
push dword ptr [eax]  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jnz loc_10377B7  +
call ds:__imp_GetLastError  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_1037858  +
and [ebp+arg_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
add [ebx+14h] esi +
lea eax [ebp+var_14] +
push eax  +
push 0  +
push ebx  +
call sub_10374B8  +
test eax eax +
jz loc_1037857  +
push edi  +
mov edi [ebp+arg_4] +
test esi esi +
jle loc_1037809  +
cmp [ebp+var_C] edi +
jb loc_1037802  +
add [ebp+var_C] esi +
cmp [ebp+var_8] edi +
jb loc_1037835  +
jmp loc_103782D  +
cmp [ebp+var_C] edi +
jbe loc_103781F  +
mov eax edi +
sub eax esi +
cmp [ebp+var_C] eax +
jbe loc_103781C  +
add [ebp+var_C] esi +
jmp loc_103781F  +
mov [ebp+var_C] edi +
cmp [ebp+var_8] edi +
jbe loc_1037835  +
mov eax edi +
sub eax esi +
cmp [ebp+var_8] eax +
jbe loc_1037832  +
add [ebp+var_8] esi +
jmp loc_1037835  +
mov [ebp+var_8] edi +
push [ebp+arg_8]  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call sub_1037567  +
inc [ebp+arg_8]  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_8]  +
push ebx  +
call sub_10374B8  +
test eax eax +
jnz loc_10377F6  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+var_18] +
push eax  +
xor esi esi +
push esi  +
push ebx  +
mov [ebp+var_4] esi +
xor edi edi +
call sub_10374B8  +
test eax eax +
jz loc_103789C  +
lea eax [ebp+var_18] +
push eax  +
inc edi  +
push edi  +
push ebx  +
call sub_10374B8  +
test eax eax +
jnz loc_1037888  +
cmp edi esi +
jnz loc_10378B7  +
mov eax [ebx+10h] +
mov [eax+18h] esi +
mov eax [ebx+10h] +
mov [eax+1Ch] esi +
mov eax [ebx+10h] +
mov [eax+24h] esi +
mov [ebp+var_4] 1 +
jmp loc_1037936  +
mov esi [ebx+10h] +
mov eax [ebx+0Ch] +
mov ecx [esi+8] +
sub eax [ebx+8] +
add ecx 40000h +
cmp eax ecx +
jb loc_103792B  +
mov eax [esi+18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1037910  +
cmp edi eax +
jnz loc_10378EF  +
inc dword ptr [esi+24h]  +
cmp dword ptr [esi+24h] 4 +
jb loc_1037936  +
mov [ebp+var_4] 1 +
mov [esi+18h] ebx +
jmp loc_1037913  +
jbe loc_1037910  +
mov ecx [esi+1Ch] +
cmp ecx ebx +
jz loc_103791B  +
mov edx edi +
sub edx eax +
cmp ecx edx +
jb loc_103791B  +
call ds:GetTickCount  +
sub eax [esi+20h] +
cmp eax 493E0h +
jbe loc_1037936  +
mov [esi+18h] edi +
mov [esi+1Ch] ebx +
mov [esi+24h] ebx +
jmp loc_1037936  +
sub edi eax +
mov [esi+1Ch] edi +
call ds:GetTickCount  +
mov [esi+20h] eax +
jmp loc_1037936  +
xor eax eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+24h] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
call __SEH_prolog4  +
and [ebp+var_20] 0 +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
sub eax [esi+8] +
cmp [ebp+arg_4] eax +
jbe loc_103796B  +
push 57h  +
pop eax  +
jmp loc_1037A02  +
push [ebp+lpString]  +
call ds:lstrlenA  +
mov ebx eax +
mov edi ebx +
test ebx ebx +
jz loc_1037963  +
mov eax [ebp+lpString] +
cmp byte ptr [ebx+eax-1] 0Ah +
jz loc_1037990  +
mov [ebp+var_20] 1 +
lea edi [ebx+2] +
mov eax [esi+8] +
mov ecx [ebp+arg_4] +
lea edx [eax+ecx] +
mov [ebp+arg_0] edx +
and [ebp+ms_exc.disabled] 0 +
push edi  +
push ecx  +
push eax  +
mov ecx [esi+0Ch] +
sub ecx eax +
push ecx  +
push dword ptr [esi]  +
call sub_10391C6  +
mov [ebp+var_1C] eax +
test eax eax +
jnz loc_10379F8  +
add [esi+0Ch] edi +
push ebx  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call memcpy  +
add esp 0Ch +
cmp [ebp+var_20] 0 +
jz loc_10379DB  +
mov eax 0A0Dh +
mov ecx [ebp+arg_0] +
mov [ecx+ebx] ax +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_10377C3  +
mov [ebp+var_1C] eax +
jmp loc_10379F8  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 0Dh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 0Ch  +
***
call __SEH_prolog4  +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_0] +
cmp eax [edi+14h] +
jb loc_1037A2B  +
push 57h  +
pop eax  +
jmp loc_1037AA6  +
and [ebp+ms_exc.disabled] 0 +
mov esi [edi+8] +
add esi eax +
mov edx esi +
mov [ebp+var_20] edx +
cmp edx [edi+0Ch] +
jnb loc_1037A47  +
cmp byte ptr [edx] 0Ah +
jnz loc_1037A6A  +
inc edx  +
mov [ebp+var_20] edx +
mov ecx edx +
sub ecx esi +
mov eax [edi+0Ch] +
sub eax edx +
and [ebp+var_1C] 0 +
cmp [ebp+var_1C] eax +
jnb loc_1037A6D  +
mov ebx [ebp+var_1C] +
mov dl [ebx+edx] +
mov [ebx+esi] dl +
inc [ebp+var_1C]  +
mov edx [ebp+var_20] +
jmp loc_1037A54  +
inc edx  +
jmp loc_1037A36  +
mov esi ecx +
neg esi  +
push esi  +
push edi  +
call sub_1037788  +
mov [ebp+var_24] eax +
test eax eax +
jnz loc_1037A9C  +
push esi  +
push [ebp+arg_4]  +
push edi  +
call sub_10377C3  +
mov [ebp+var_24] eax +
jmp loc_1037A9C  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-24h] 0Dh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_24] +
call __SEH_epilog4  +
retn 8  +
***
call __SEH_prolog4  +
xor esi esi +
mov [ebp+ms_exc.disabled] esi +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [ebp+arg_4] +
lea edx [ecx+1] +
imul edx edx +
mov ecx eax +
sub ecx edx +
lea edx [ecx+14h] +
sub eax edx +
mov [ebp+var_20] esi +
cmp esi eax +
jnb loc_1037AEC  +
mov bl [esi+edx] +
mov [esi+ecx] bl +
inc esi  +
jmp loc_1037ADC  +
push 0FFFFFFECh  +
push edi  +
call sub_1037788  +
mov [ebp+var_1C] eax +
jmp loc_1037B07  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 0Dh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
mov dword ptr [ebp+VersionInformation] esi +
mov esi ds:GetVersionExW +
push eax  +
call esi  +
test eax eax +
jnz loc_1037B7F  +
lea eax [ebp+VersionInformation] +
push eax  +
mov dword ptr [ebp+VersionInformation] 114h +
call esi  +
test eax eax +
jz loc_1037BF8  +
movzx eax [ebp+var_106] +
push offset aX86  +
push eax  +
movzx eax [ebp+var_108] +
push eax  +
movzx eax [ebp+var_10A] +
push eax  +
movzx eax [ebp+var_10C] +
push eax  +
push dword ptr [ebp-214h]  +
lea eax [ebp+Buffer] +
push dword ptr [ebp-218h]  +
push dword ptr [ebp-21Ch]  +
push offset aDeviceInstallL  +
push 0FFh  +
push eax  +
call sub_1035653  +
add esp 2Ch +
test eax eax +
jl loc_1037BF8  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call ds:lstrlenA  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:WriteFile  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_40] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [ebp+var_58] eax +
mov [ebp+var_44] esi +
mov [ebp+var_38] esi +
mov [ebp+var_34] esi +
mov [ebp+var_3C] esi +
call sub_1039B3D  +
mov [ebp+var_30] eax +
cmp eax esi +
jnz loc_1037C54  +
call ds:__imp_GetLastError  +
mov esi eax +
jmp loc_1037F4D  +
push 10h  +
pop ecx  +
cmp [ebp+arg_14] ecx +
jb loc_1037C5F  +
mov [ebp+arg_14] ecx +
push ebx  +
mov ebx [ebp+arg_10] +
push edi  +
xor edi edi +
mov eax ebx +
and eax 0Fh +
inc edi  +
cmp eax edi +
jnz loc_1037C77  +
mov eax offset asc_102B880 +
jmp loc_1037CA9  +
cmp eax 2 +
jnz loc_1037C83  +
mov eax offset asc_102B878 +
jmp loc_1037CA9  +
test bl cl +
jz loc_1037C8E  +
mov eax offset asc_102B870 +
jmp loc_1037CA9  +
test bl 20h +
jz loc_1037C9A  +
mov eax offset asc_102B868 +
jmp loc_1037CA9  +
mov eax offset a__0 +
test bl 40h +
jnz loc_1037CA9  +
mov eax offset asc_102B858 +
push eax  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jnz loc_1037CC1  +
call ds:__imp_GetLastError  +
jmp loc_1037F49  +
mov eax [ebp+arg_C] +
mov esi 8000000h +
test eax eax +
jz loc_1037DE1  +
test al 2 +
jz loc_1037CDF  +
mov eax offset aInf_0 +
jmp loc_1037DD0  +
test al 1 +
jz loc_1037CED  +
mov eax offset aDvi +
jmp loc_1037DD0  +
test al 4 +
jz loc_1037CFB  +
mov eax offset aFlq +
jmp loc_1037DD0  +
test al 8 +
jz loc_1037D09  +
mov eax offset aCpy +
jmp loc_1037DD0  +
test al 20h +
jz loc_1037D17  +
mov eax offset aSig +
jmp loc_1037DD0  +
test al al +
jns loc_1037D25  +
mov eax offset aBak +
jmp loc_1037DD0  +
test eax 100h +
jz loc_1037D36  +
mov eax offset aUi +
jmp loc_1037DD0  +
test eax 200h +
jz loc_1037D47  +
mov eax offset aUtl +
jmp loc_1037DD0  +
test eax 400h +
jz loc_1037D55  +
mov eax offset aIdb +
jmp loc_1037DD0  +
test eax offset __ImageBase +
jz loc_1037D63  +
mov eax offset aNdv +
jmp loc_1037DD0  +
test eax 2000000h +
jz loc_1037D71  +
mov eax offset aUmp +
jmp loc_1037DD0  +
test eax 4000000h +
jz loc_1037D7F  +
mov eax offset aSto +
jmp loc_1037DD0  +
test eax esi +
jz loc_1037D8A  +
mov eax offset aSet +
jmp loc_1037DD0  +
test eax 10000000h +
jz loc_1037D98  +
mov eax offset aCmi +
jmp loc_1037DD0  +
test eax 40000000h +
jz loc_1037DA6  +
mov eax offset aCci +
jmp loc_1037DD0  +
test eax eax +
jns loc_1037DB1  +
mov eax offset aVen +
jmp loc_1037DD0  +
test eax 800000h +
jz loc_1037DBF  +
mov eax offset aPol +
jmp loc_1037DD0  +
test eax 20000000h +
mov eax offset aDmg +
jnz loc_1037DD0  +
mov eax offset a___ +
push eax  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
test bl 30h +
jz loc_1037DFA  +
mov [ebp+var_3C] edi +
test ebx 10000h +
jz loc_1037EB6  +
mov [ebp+var_34] edi +
jmp loc_1037E16  +
mov eax [ebp+var_40] +
mov eax [eax+10h] +
test [eax+0Ch] esi +
jz loc_1037E0A  +
mov [ebp+var_44] edi +
jmp loc_1037E19  +
test ebx 10000h +
jz loc_1037EB6  +
mov [ebp+var_38] edi +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wMilliseconds] +
push eax  +
movzx eax [ebp+SystemTime.wSecond] +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
push offset a02d02d02d_03d  +
lea eax [ebp+var_2C] +
push 14h  +
push eax  +
call sub_1035653  +
add esp 1Ch +
test eax eax +
jl loc_1037E7A  +
cmp [ebp+var_34] 0 +
jz loc_1037E82  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset a04d02d02d  +
lea eax [ebp+var_18] +
push 14h  +
push eax  +
call sub_1035653  +
add esp 18h +
test eax eax +
jge loc_1037E82  +
movzx esi ax +
jmp loc_1037F4B  +
cmp [ebp+var_44] 0 +
jz loc_1037EB6  +
cmp [ebp+var_34] 0 +
jz loc_1037EA2  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
xor esi esi +
cmp [ebp+arg_14] esi +
jbe loc_1037ED8  +
push offset asc_102B858  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
inc esi  +
cmp esi [ebp+arg_14] +
jb loc_1037EBD  +
cmp [ebp+var_3C] 0 +
jnz loc_1037EF3  +
push offset asc_102B794  +
push [ebp+var_30]  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
push [ebp+var_58]  +
mov esi [ebp+var_30] +
push esi  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
cmp [ebp+var_38] 0 +
jz loc_1037F37  +
cmp [ebp+var_34] 0 +
jz loc_1037F25  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
lea eax [ebp+var_2C] +
push eax  +
push esi  +
call sub_1039BA8  +
test eax eax +
jz loc_1037CB6  +
push esi  +
call sub_10397FA  +
push eax  +
push [ebp+arg_4]  +
push [ebp+var_40]  +
call sub_1037945  +
mov esi eax +
pop edi  +
pop ebx  +
push [ebp+var_30]  +
call sub_10397D0  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1034B90  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
or dword ptr [esi] 0FFFFFFFFh +
push edi  +
mov edi [ebp+arg_0] +
mov [esi+18h] ecx +
lea ecx [ebp+var_4] +
push ecx  +
xor eax eax +
push esi  +
push 7530h  +
push eax  +
lea ebx [esi+8] +
push eax  +
mov [esi+4] eax +
mov [ebx] eax +
mov [esi+1Ch] eax +
push dword ptr [edi+10h]  +
mov [ebp+var_4] eax +
call sub_1039087  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1038093  +
mov eax [ebp+var_4] +
test eax eax +
jnz loc_1037FF1  +
push dword ptr [esi]  +
call sub_1037B1E  +
push 0  +
push dword ptr [esi]  +
call ds:GetFileSize  +
and dword ptr [edi+0Ch] 0FFFFEFFFh +
push edi  +
mov [ebp+var_4] eax +
call sub_1037446  +
test eax 1000h +
jz loc_1038045  +
and eax 0FFFFEFFFh +
push eax  +
push edi  +
call sub_10373E5  +
jmp loc_1038045  +
cmp [ebp+arg_10] 0 +
jz loc_1038045  +
cmp eax [edi+8] +
jb loc_1038045  +
cmp dword ptr [edi+14h] 4 +
jnb loc_1038045  +
test dword ptr [edi+0Ch] 2000h +
jnz loc_1038045  +
push dword ptr [esi]  +
call ds:CloseHandle  +
or dword ptr [esi] 0FFFFFFFFh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push 7530h  +
push 0  +
push 10000h  +
push dword ptr [edi+10h]  +
call sub_1039087  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1038093  +
mov eax [ebp+var_4] +
cmp eax [edi+8] +
jb loc_1038045  +
mov dword ptr [esi+1Ch] 1 +
mov ecx [ebp+var_4] +
push ebx  +
lea eax [esi+4] +
push eax  +
mov eax [ebp+arg_8] +
add ecx eax +
push ecx  +
push dword ptr [esi]  +
call sub_103915A  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1038093  +
mov eax [ebx] +
add eax [ebp+var_4] +
mov [esi+10h] edi +
mov [esi+0Ch] eax +
xor edi edi +
jmp loc_1038071  +
inc edi  +
lea eax [ebp+var_18] +
push eax  +
push edi  +
push esi  +
call sub_10374B8  +
test eax eax +
jnz loc_1038070  +
mov eax [esi+0Ch] +
imul edi edi +
sub eax edi +
sub eax [ebx] +
and [ebp+arg_4] 0 +
mov [esi+14h] eax +
jmp loc_10380AC  +
push esi  +
call sub_1037737  +
mov eax dword_103D4E8 +
inc dword_103D4E8  +
cmp eax 5 +
jbe loc_10380AC  +
and dword ptr [edi] 0 +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
push [ebp+arg_0]  +
mov edi [ebp+arg_4] +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
xor ebx ebx +
call sub_102CC3F  +
test eax eax +
jge loc_10380F4  +
push 0Dh  +
pop ebx  +
jmp loc_1038171  +
push esi  +
lea eax [ebp+var_20C] +
push 2Eh  +
push eax  +
call wcsrchr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_103816D  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wSecond] +
add esi 2 +
push esi  +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push offset aS_04d02d02d_02  +
push [ebp+arg_8]  +
push edi  +
call sub_102E0EC  +
add esp 2Ch +
test eax eax +
jge loc_1038170  +
push 0Dh  +
pop ebx  +
pop esi  +
push ebx  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test ebx ebx +
setz al  +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
call __SEH_prolog4_GS  +
mov esi [ebp+arg_0] +
mov [ebp+var_230] esi +
xor edi edi +
mov [ebp+dwErrCode] edi +
mov [ebp+var_22C] edi +
mov [ebp+ms_exc.disabled] edi +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
mov eax [esi+10h] +
push dword ptr [eax+10h]  +
call sub_10380BB  +
test eax eax +
jnz loc_10381E6  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1038249  +
push edi  +
mov eax [esi+10h] +
push dword ptr [eax+10h]  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateHardLinkW  +
test eax eax +
jz loc_10381D8  +
xor ebx ebx +
inc ebx  +
mov [ebp+var_22C] ebx +
push dword ptr [esi]  +
call ds:FlushFileBuffers  +
mov [esi+18h] edi +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_103922B  +
mov [esi+8] edi +
mov [esi+4] edi +
push dword ptr [esi]  +
call sub_1039477  +
test eax eax +
jz loc_10381D8  +
mov [ebp+var_22C] edi +
push esi  +
call sub_1037737  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call sub_1039518  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1038272  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-228h] 54Fh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov esi [ebp-230h] +
cmp [ebp+var_22C] edi +
jz loc_10382A9  +
mov esi [esi] +
cmp esi 0FFFFFFFFh +
jz loc_10382A9  +
lea eax [ebp+FileInformation] +
push eax  +
push esi  +
call ds:GetFileInformationByHandle  +
test eax eax +
jz loc_10382A9  +
cmp [ebp+FileInformation.nNumberOfLinks] 1 +
jbe loc_10382A9  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] edi +
setz al  +
call __SEH_epilog4_GS  +
retn 4  +
***
call __SEH_prolog4_GS  +
xor ebx ebx +
mov [ebp+dwErrCode] ebx +
or [ebp+hFindFile] 0FFFFFFFFh +
mov [ebp+var_A9C] ebx +
mov [ebp+var_A98] ebx +
mov [ebp+lpMem] ebx +
cmp dword_103D020 ebx +
jnz loc_1038310  +
mov [ebp+dwErrCode] ebx +
jmp loc_1038605  +
mov [ebp+ms_exc.disabled] ebx +
push [ebp+arg_0]  +
mov esi 104h +
push esi  +
lea eax [ebp+var_42C] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_10385D8  +
lea eax [ebp+var_42C] +
push eax  +
call sub_10351D3  +
test eax eax +
jz loc_10385D8  +
push [ebp+arg_0]  +
push esi  +
lea eax [ebp+var_634] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_10385CC  +
push 2Eh  +
lea eax [ebp+var_634] +
push eax  +
call wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_10385CC  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
push eax  +
lea eax [ebp+var_634] +
push eax  +
push offset aS_????????_???  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_102E0EC  +
add esp 14h +
test eax eax +
jl loc_10385CC  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10383CA  +
mov [ebp+dwErrCode] ebx +
jmp loc_10385E2  +
mov eax dword_103D020 +
shl eax 2 +
push eax  +
call sub_103696E  +
mov [ebp+var_A9C] eax +
cmp eax ebx +
jnz loc_10383F1  +
mov [ebp+dwErrCode] 8 +
jmp loc_10385E2  +
mov ecx dword_103D020 +
shl ecx 2 +
push ecx  +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_42C] +
push eax  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_102CC3F  +
test eax eax +
jl loc_10385CC  +
push ebx  +
push esi  +
lea eax [ebp-0A60h] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10353B3  +
test eax eax +
jz loc_10385CC  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
mov edi eax +
inc edi  +
push edi  +
lea eax [ebp+String] +
push eax  +
push edi  +
push eax  +
push 100h  +
push 7Fh  +
call ds:LCMapStringW  +
mov [ebp+lpMem] ebx +
mov [ebp+var_AA4] ebx +
cmp ebx [ebp+var_A98] +
jnb loc_10384E8  +
mov eax [ebp+var_A9C] +
lea esi [eax+ebx*4] +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi]  +
call ds:lstrcmpW  +
test eax eax +
jge loc_103851B  +
mov eax dword_103D020 +
cmp [ebp+var_A98] eax +
jnb loc_10384B3  +
mov eax [ebp+var_A98] +
sub eax ebx +
shl eax 2 +
jmp loc_10384CC  +
mov ecx [ebp+var_A9C] +
mov ecx [ecx+eax*4-4] +
mov [ebp+lpMem] ecx +
sub eax ebx +
lea eax ds:0FFFFFFFCh[eax*4] +
push eax  +
push esi  +
lea eax [esi+4] +
push eax  +
call memmove  +
add esp 0Ch +
and dword ptr [esi] 0 +
mov esi 104h +
cmp ebx [ebp+var_A98] +
ja loc_103855A  +
cmp ebx dword_103D020 +
jnb loc_103855A  +
lea eax [edi+edi] +
push eax  +
call sub_103696E  +
mov ecx [ebp+var_A9C] +
lea ecx [ecx+ebx*4] +
mov [ecx] eax +
test eax eax +
jnz loc_1038526  +
mov [ebp+dwErrCode] 8 +
xor ebx ebx +
jmp loc_10385E2  +
inc ebx  +
mov esi 104h +
jmp loc_103846B  +
lea ecx [ebp+String] +
push ecx  +
push edi  +
push eax  +
call sub_102CC3F  +
test eax eax +
jge loc_1038544  +
mov [ebp+dwErrCode] 0Dh +
jmp loc_1038514  +
mov eax [ebp+var_A98] +
cmp eax dword_103D020 +
jnb loc_1038566  +
inc [ebp+var_A98]  +
jmp loc_1038566  +
lea eax [ebp+String] +
mov [ebp+lpMem] eax +
mov edi [ebp+lpMem] +
test edi edi +
jz loc_10385AD  +
lea eax [ebp+String] +
cmp edi eax +
jnz loc_1038583  +
test byte ptr [ebp+FindFileData] 1 +
jz loc_103858F  +
push 80h  +
push edi  +
call ds:SetFileAttributesW  +
push edi  +
call ds:DeleteFileW  +
lea eax [ebp+String] +
cmp edi eax +
jz loc_10385AD  +
push edi  +
call sub_10369AF  +
and [ebp+lpMem] 0 +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
xor ebx ebx +
test eax eax +
jnz loc_1038405  +
jmp loc_10385E2  +
mov [ebp+dwErrCode] 0Dh +
jmp loc_10385E2  +
mov [ebp+dwErrCode] 57h +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1038605  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-0A90h] 54Fh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor ebx ebx +
mov edi [ebp+var_A9C] +
cmp edi ebx +
jz loc_1038636  +
xor esi esi +
cmp dword_103D020 ebx +
jbe loc_1038630  +
lea eax [edi+esi*4] +
cmp [eax] ebx +
jz loc_1038627  +
push dword ptr [eax]  +
call sub_10369AF  +
inc esi  +
cmp esi dword_103D020 +
jb loc_1038619  +
push edi  +
call sub_10369AF  +
cmp [ebp+lpMem] ebx +
jz loc_1038657  +
lea eax [ebp+String] +
cmp [ebp+lpMem] eax +
jz loc_1038657  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_103866C  +
push [ebp+hFindFile]  +
call ds:FindClose  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
setz al  +
call __SEH_epilog4_GS  +
retn 4  +
***
call __SEH_prolog4_GS  +
mov esi [ebp+arg_0] +
and [ebp+dwErrCode] 0 +
and [ebp+ms_exc.disabled] 0 +
push 104h  +
lea eax [ebp+NewFileName] +
push eax  +
push esi  +
call sub_10380BB  +
test eax eax +
jz loc_10386D7  +
push 5  +
lea eax [ebp+NewFileName] +
push eax  +
push esi  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_10386F6  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10386F6  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-228h] 54Fh +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
setz al  +
call __SEH_epilog4_GS  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_1037689  +
test eax eax +
jz loc_10387F2  +
push edi  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_1037A0F  +
push offset String  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_1037945  +
xor edi edi +
cmp [ebp+arg_C] edi +
jz loc_10387AB  +
cmp dword ptr [ebp+arg_10] edi +
jnz loc_103877B  +
push edi  +
push offset aExitStatusSucc  +
jmp loc_1038795  +
mov eax 0E000020Eh +
cmp dword ptr [ebp+arg_10] eax +
jnz loc_103878D  +
push eax  +
push offset aExitStatusSu_0  +
jmp loc_1038795  +
push dword ptr [ebp+arg_10]  +
push offset aExitStatusFail  +
lea eax [ebp+var_84] +
push 80h  +
push eax  +
call sub_1035653  +
add esp 10h +
jmp loc_10387C4  +
push offset aExit  +
lea eax [ebp+var_84] +
push 80h  +
push eax  +
call sub_1035653  +
add esp 0Ch +
cmp eax edi +
jl loc_10387DC  +
push edi  +
push 20h  +
push edi  +
lea eax [ebp+var_84] +
push eax  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_1037C0D  +
push edi  +
push 10020h  +
push edi  +
push offset aSectionEnd  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_1037C0D  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 500h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov edx [ebp+lpString] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
push 7  +
mov [ebp+var_500] eax +
xor eax eax +
test [ebp+arg_4] 0FFFFFFFCh +
pop ecx  +
lea edi [ebp+var_4DC] +
mov [ebp+var_4E0] ebx +
mov [ebp+var_4B4] esi +
mov [ebp+lpMem] edx +
stos   +
mov [ebp+var_4F8] ebx +
jz loc_103886D  +
mov dword ptr [ebp+dwErrCode] 57h +
jmp loc_1038D07  +
lea eax [ebp+var_4FC] +
push eax  +
push [ebp+arg_4]  +
push edx  +
push esi  +
call sub_10375E4  +
test eax eax +
jnz loc_1038893  +
call ds:__imp_GetLastError  +
mov dword ptr [ebp+dwErrCode] eax +
jmp loc_1038D07  +
cmp dword_103D488 ebx +
jnz loc_10388A4  +
call sub_103575B  +
cmp eax ebx +
jz loc_1038882  +
mov eax [ebp+arg_4] +
and eax 1 +
mov [ebp+var_4C0] eax +
mov [ebp+var_4BC] offset dword_103D498 +
jnz loc_10388C6  +
mov [ebp+var_4BC] offset dword_103D4C0 +
mov eax [ebp+var_4BC] +
cmp [eax] ebx +
jnz loc_10388DF  +
mov dword ptr [ebp+dwErrCode] 10D5h +
jmp loc_1038D07  +
mov edi ds:lstrlenA +
cmp esi ebx +
jz loc_10388EC  +
push esi  +
call edi  +
mov eax [ebp+lpMem] +
mov dword ptr [ebp+dwErrCode] eax +
cmp eax ebx +
jnz loc_103892B  +
push 208h  +
lea eax [ebp+Filename] +
push eax  +
push ebx  +
call ds:GetModuleFileNameA  +
test eax eax +
jz loc_1038921  +
lea eax [ebp+Filename] +
mov dword ptr [ebp+dwErrCode] eax +
jmp loc_103892B  +
mov dword ptr [ebp+dwErrCode] offset aNoTitle +
push dword ptr [ebp+dwErrCode]  +
call edi  +
mov esi eax +
cmp [ebp+var_4B4] ebx +
jz loc_1038947  +
push [ebp+var_4B4]  +
call edi  +
add esi eax +
add esi 10h +
push esi  +
call sub_103696E  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1038969  +
mov dword ptr [ebp+dwErrCode] 8 +
jmp loc_1038CE0  +
cmp [ebp+var_4B4] ebx +
jz loc_103898E  +
push [ebp+var_4B4]  +
push dword ptr [ebp+dwErrCode]  +
push offset aSS  +
push esi  +
push eax  +
call sub_1035653  +
add esp 14h +
jmp loc_10389A3  +
push dword ptr [ebp+dwErrCode]  +
push offset aS  +
push esi  +
push eax  +
call sub_1035653  +
add esp 10h +
cmp eax ebx +
jge loc_10389B5  +
movzx eax ax +
mov dword ptr [ebp+dwErrCode] eax +
jmp loc_1038CE0  +
push ebx  +
push ebx  +
call ds:GetCommandLineA  +
push eax  +
call edi  +
lea eax [eax+esi+146h] +
push eax  +
lea eax [ebp+var_4E0] +
push eax  +
push [ebp+var_4BC]  +
call sub_1037F6B  +
mov dword ptr [ebp+dwErrCode] eax +
cmp eax ebx +
jnz loc_1038CE0  +
lea eax [ebp+var_4B4] +
push eax  +
lea eax [ebp+var_4F4] +
push eax  +
mov eax [ebp+var_4C0] +
or eax 2 +
push eax  +
lea eax [ebp+var_4E0] +
push eax  +
mov [ebp+var_4F8] 1 +
call sub_103752D  +
test eax eax +
jz loc_1038A47  +
push ebx  +
push ebx  +
push [ebp+var_4B4]  +
lea eax [ebp+var_4F4] +
push eax  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1038721  +
push [ebp+var_4B4]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037AB3  +
mov eax [ebp+var_4D0] +
mov esi 1000h +
mov edi offset String +
test [eax+0Ch] esi +
jnz loc_1038B1E  +
push eax  +
call sub_1037446  +
mov ebx eax +
test ebx esi +
jnz loc_1038B13  +
lea eax [ebp+var_4F0] +
push eax  +
call sub_10352A9  +
test eax eax +
jz loc_1038B05  +
movzx eax word ptr [ebp+var_4E4+2] +
push eax  +
movzx eax word ptr [ebp+var_4E4] +
push eax  +
movzx eax word ptr [ebp+var_4E8+2] +
push eax  +
movzx eax word ptr [ebp+var_4E8] +
push eax  +
movzx eax [ebp+var_4EA] +
push eax  +
movzx eax word ptr [ebp+var_4F0+2] +
push eax  +
movzx eax word ptr [ebp+var_4F0] +
push eax  +
push offset aBootSession04d  +
lea eax [ebp+String] +
push 80h  +
push eax  +
call sub_1035653  +
add esp 28h +
test eax eax +
jl loc_1038B05  +
push edi  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037945  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037945  +
or ebx esi +
push ebx  +
push [ebp+var_4D0]  +
call sub_10373E5  +
mov eax [ebp+var_4D0] +
or [eax+0Ch] esi +
xor ebx ebx +
push edi  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037945  +
mov eax [ebp+var_4CC] +
push ebx  +
push 10h  +
push ebx  +
push [ebp+lpMem]  +
mov [ebp+var_4C0] eax +
push eax  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037C0D  +
push ebx  +
push 10010h  +
push ebx  +
push offset aSectionStart  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037C0D  +
cmp dword_103D4EC ebx +
jz loc_1038C1B  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov dword ptr [ebp+VersionInformation] esi +
call ds:GetVersionExW  +
test eax eax +
jz loc_1038C1B  +
movzx eax [ebp+var_392] +
push offset aX86  +
push eax  +
movzx eax [ebp+var_394] +
push eax  +
movzx eax [ebp+var_396] +
push eax  +
movzx eax [ebp+var_398] +
push eax  +
push dword ptr [ebp-4A0h]  +
lea eax [ebp+var_188] +
push dword ptr [ebp-4A4h]  +
push dword ptr [ebp-4A8h]  +
push offset aOsVersionD_D_D  +
push 104h  +
push eax  +
call sub_1035653  +
add esp 2Ch +
test eax eax +
jl loc_1038C1B  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+var_188] +
push eax  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037C0D  +
test byte ptr [ebp+arg_4] 2 +
jz loc_1038C61  +
call ds:GetCommandLineA  +
push eax  +
push offset aCmdS  +
lea eax [ebp+Filename] +
push 208h  +
push eax  +
call sub_1035653  +
add esp 10h +
test eax eax +
jl loc_1038C61  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+Filename] +
push eax  +
push [ebp+var_4CC]  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037C0D  +
mov edi [ebp+var_4CC] +
push offset aIns  +
push edi  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037945  +
mov esi [ebp+var_4FC] +
cmp esi ebx +
jz loc_1038CBE  +
mov eax [ebp+var_4C0] +
mov [ebp-4ECh] eax +
lea eax [ebp+var_4F4] +
push eax  +
lea eax [ebp+var_4E0] +
push eax  +
mov [ebp+var_4F4] 0E0E01111h +
mov [ebp+var_4F0] esi +
mov [ebp+var_4E8] edi +
mov [ebp+var_4E4] ebx +
call sub_10376D4  +
mov eax [ebp+var_500] +
cmp eax ebx +
jz loc_1038CE0  +
mov ecx [ebp+var_4BC] +
mov ecx [ecx] +
xor edx edx +
and ecx 0Fh +
xor edi edi +
or edx esi +
or ecx edi +
mov [eax] edx +
mov [eax+4] ecx +
cmp [ebp+lpMem] ebx +
jz loc_1038CF3  +
push [ebp+lpMem]  +
call sub_10369AF  +
cmp [ebp+var_4F8] ebx +
jz loc_1038D07  +
lea eax [ebp+var_4E0] +
push eax  +
call sub_1037737  +
push dword ptr [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp dword ptr [ebp+dwErrCode] ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
mov ebx ds:__imp_GetLastError +
push edi  +
call ebx  +
and [ebp+var_3C] 0 +
mov [ebp+dwErrCode] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_38] +
stos   +
cmp dword_103D488 eax +
jnz loc_1038D72  +
call sub_103575B  +
test eax eax +
jnz loc_1038D72  +
call ebx  +
mov [ebp+var_4] eax +
jmp loc_1038E7D  +
mov eax [ebp+arg_0] +
and eax 3 +
xor ecx ecx +
push esi  +
cmp eax 3 +
jnz loc_1038D89  +
mov esi offset dword_103D498 +
test ecx ecx +
jz loc_1038D8E  +
mov esi offset dword_103D4C0 +
push 1  +
xor edi edi +
push edi  +
push 200h  +
lea eax [ebp+var_3C] +
push eax  +
push esi  +
call sub_1037F6B  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_1038E7C  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+var_3C] +
push eax  +
call sub_103752D  +
test eax eax +
jnz loc_1038DD1  +
mov [ebp+var_4] 490h +
jmp loc_1038E73  +
push [ebp+arg_8]  +
lea eax [ebp+var_1C] +
push 1  +
push [ebp+arg_4]  +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1038721  +
push [ebp+arg_4]  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1037AB3  +
cmp [ebp+var_20] edi +
jz loc_1038E73  +
mov eax [ebp+var_30] +
sub eax [ebp+var_34] +
cmp eax [esi+8] +
jb loc_1038E73  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1037864  +
test eax eax +
jz loc_1038E73  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1038194  +
test eax eax +
jnz loc_1038E65  +
call ebx  +
dec eax  +
push 4  +
pop ecx  +
jz loc_1038E2E  +
sub eax 31h +
jz loc_1038E2E  +
inc dword ptr [esi+14h]  +
jmp loc_1038E31  +
mov [esi+14h] ecx +
cmp [esi+14h] ecx +
jb loc_1038E73  +
mov edi 2000h +
test [esi+0Ch] edi +
jnz loc_1038E73  +
push esi  +
call sub_1037446  +
mov ebx eax +
test ebx edi +
jnz loc_1038E60  +
mov eax [ebp+var_2C] +
push dword ptr [eax+10h]  +
call sub_1038690  +
or ebx edi +
push ebx  +
push esi  +
call sub_10373E5  +
or [esi+0Ch] edi +
jmp loc_1038E73  +
mov eax [ebp+var_2C] +
push dword ptr [eax+10h]  +
call sub_10382CD  +
mov [esi+14h] edi +
lea eax [ebp+var_3C] +
push eax  +
call sub_1037737  +
pop esi  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+var_4] eax +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
xor esi esi +
xor edi edi +
test [ebp+arg_4] 0FFFFFFFCh +
mov [ebp+dwErrCode] eax +
jz loc_1038EBF  +
mov [ebp+dwErrCode] 57h +
jmp loc_1038F22  +
cmp [ebp+lpWideCharStr] eax +
jz loc_1038EDE  +
push eax  +
push [ebp+lpWideCharStr]  +
call sub_1035121  +
mov esi eax +
test esi esi +
jnz loc_1038EDC  +
mov [ebp+dwErrCode] 8 +
jmp loc_1038F0E  +
xor eax eax +
cmp [ebp+arg_8] eax +
jz loc_1038EF2  +
push eax  +
push [ebp+arg_8]  +
call sub_1035121  +
mov edi eax +
test edi edi +
jz loc_1038ED3  +
push [ebp+arg_C]  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_1038807  +
mov ebx eax +
test ebx ebx +
jnz loc_1038F0E  +
call ds:__imp_GetLastError  +
mov [ebp+dwErrCode] eax +
test esi esi +
jz loc_1038F18  +
push esi  +
call sub_10369AF  +
test edi edi +
jz loc_1038F22  +
push edi  +
call sub_10369AF  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
inc eax  +
retn   +
***
mov eax dword_103D4F0 +
test eax eax +
jz loc_1038F58  +
push eax  +
call sub_10369AF  +
and dword_103D4F0 0 +
mov eax dword_103D4F4 +
test eax eax +
jz loc_1038F6E  +
push eax  +
call sub_10369AF  +
and dword_103D4F4 0 +
mov eax dword_103D4F8 +
test eax eax +
jz loc_1038F84  +
push eax  +
call sub_10369AF  +
and dword_103D4F8 0 +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D4F0 +
test eax eax +
jz loc_1038FA8  +
push eax  +
call sub_10369AF  +
and dword_103D4F0 0 +
push esi  +
push offset dword_103D4F0  +
push offset aSetupapi_ev1  +
push [ebp+arg_0]  +
call sub_103959B  +
mov esi eax +
test esi esi +
jz loc_103901D  +
mov eax dword_103D4F4 +
test eax eax +
jz loc_1038FD7  +
push eax  +
call sub_10369AF  +
and dword_103D4F4 0 +
push offset dword_103D4F4  +
push offset aSetupapi_ev2  +
push [ebp+arg_0]  +
call sub_103959B  +
mov esi eax +
test esi esi +
jz loc_103901D  +
mov eax dword_103D4F8 +
test eax eax +
jz loc_1039005  +
push eax  +
call sub_10369AF  +
and dword_103D4F8 0 +
push offset dword_103D4F8  +
push offset aSetupapi_ev3  +
push [ebp+arg_0]  +
call sub_103959B  +
mov esi eax +
test esi esi +
jnz loc_1039022  +
call sub_1038F42  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
xor edi edi +
push 0  +
push [ebp+dwFlagsAndAttributes]  +
push [ebp+dwCreationDisposition]  +
push 0  +
push [ebp+dwShareMode]  +
push [ebp+dwDesiredAccess]  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [esi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_103907A  +
call ds:__imp_GetLastError  +
cmp eax 20h +
jnz loc_103907C  +
cmp edi [ebp+arg_14] +
jnb loc_103907C  +
push 32h  +
call ds:Sleep  +
add edi 32h +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_103903A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_10] +
push esi  +
push [ebp+arg_C]  +
or eax 0C0000000h +
push [ebp+dwFlagsAndAttributes]  +
push 4  +
push 1  +
push eax  +
push [ebp+lpFileName]  +
call sub_103902E  +
mov ebx eax +
test ebx ebx +
jnz loc_10390E4  +
push eax  +
push dword ptr [esi]  +
call ds:GetFileSize  +
mov ecx [ebp+arg_14] +
push ebx  +
push ebx  +
push eax  +
mov [ecx] eax +
push dword ptr [esi]  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jnz loc_10390E4  +
call ds:__imp_GetLastError  +
push dword ptr [esi]  +
mov ebx eax +
call ds:CloseHandle  +
or dword ptr [esi] 0FFFFFFFFh +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+dwNumberOfBytesToMap]  +
push edi  +
push 2  +
push edi  +
push [ebp+hFile]  +
call ds:CreateFileMappingW  +
mov esi [ebp+arg_8] +
mov [esi] eax +
cmp eax edi +
jz loc_1039144  +
push [ebp+dwNumberOfBytesToMap]  +
push edi  +
push edi  +
push 4  +
push eax  +
call ds:MapViewOfFile  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
cmp eax edi +
jz loc_1039130  +
xor eax eax +
jmp loc_103914E  +
call ds:__imp_GetLastError  +
push dword ptr [esi]  +
mov ebx eax +
call ds:CloseHandle  +
mov [esi] edi +
jmp loc_103914C  +
call ds:__imp_GetLastError  +
mov ebx eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+dwNumberOfBytesToMap]  +
push edi  +
push 4  +
push edi  +
push [ebp+hFile]  +
call ds:CreateFileMappingW  +
mov esi [ebp+arg_8] +
mov [esi] eax +
cmp eax edi +
jz loc_10391B0  +
push [ebp+dwNumberOfBytesToMap]  +
push edi  +
push edi  +
push 0F001Fh  +
push eax  +
call ds:MapViewOfFile  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
cmp eax edi +
jz loc_103919C  +
xor eax eax +
jmp loc_10391BA  +
call ds:__imp_GetLastError  +
push dword ptr [esi]  +
mov ebx eax +
call ds:CloseHandle  +
mov [esi] edi +
jmp loc_10391B8  +
call ds:__imp_GetLastError  +
mov ebx eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_C] +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
cmp edx ebx +
jbe loc_10391E0  +
push 57h  +
pop eax  +
jmp loc_1039221  +
mov eax [ebp+arg_8] +
lea ecx [eax+edx] +
mov eax ebx +
sub eax edx +
dec eax  +
push edi  +
mov edi [ebp+arg_10] +
js loc_10391FF  +
push esi  +
lea esi [ecx+edi] +
mov dl [eax+ecx] +
mov [esi+eax] dl +
dec eax  +
jns loc_10391F5  +
pop esi  +
push 0  +
push 0  +
add ebx edi +
push ebx  +
push [ebp+hFile]  +
call ds:SetFilePointer  +
pop edi  +
cmp eax 0FFFFFFFFh +
jnz loc_103921E  +
call ds:__imp_GetLastError  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
inc esi  +
cmp [ebp+lpBaseAddress] 0 +
jz loc_1039245  +
push [ebp+lpBaseAddress]  +
call ds:UnmapViewOfFile  +
mov esi eax +
cmp [ebp+hObject] 0 +
jz loc_1039263  +
test esi esi +
jz loc_1039261  +
push [ebp+hObject]  +
call ds:CloseHandle  +
test eax eax +
jz loc_1039261  +
xor esi esi +
inc esi  +
jmp loc_1039263  +
xor esi esi +
cmp [ebp+hFile] 0FFFFFFFFh +
jz loc_1039272  +
push [ebp+hFile]  +
call ds:SetEndOfFile  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
push ebx  +
push esi  +
push edi  +
lea ecx [ebp+FilePart] +
push ecx  +
lea ecx [ebp+FileName] +
push ecx  +
mov esi 104h +
push esi  +
push eax  +
call ds:GetFullPathNameW  +
cmp eax esi +
jnb loc_103945E  +
test eax eax +
jnz loc_10392CB  +
call ds:__imp_GetLastError  +
jmp loc_1039461  +
mov eax [ebp+FilePart] +
test eax eax +
jz loc_103945E  +
lea ecx [ebp+FileName] +
cmp eax ecx +
jz loc_103945E  +
xor ecx ecx +
mov [eax] cx +
mov eax dword ptr [ebp+FileName] +
cmp ax 41h +
jb loc_10392FE  +
cmp ax 5Ah +
jbe loc_1039307  +
lea ecx [eax-61h] +
cmp cx 19h +
ja loc_103932B  +
cmp word ptr [ebp-20Eh] 3Ah +
jnz loc_103932B  +
cmp [ebp+var_20C] 5Ch +
jnz loc_103945E  +
lea ecx [ebp+var_20C] +
mov [ebp+var_214] ecx +
push 5Ch  +
pop edi  +
cmp ax di +
jnz loc_103936D  +
cmp [ebp-20Eh] di +
jnz loc_103936D  +
lea eax [ebp+var_20C] +
push edi  +
push eax  +
call wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103945E  +
add eax 2 +
push edi  +
push eax  +
call wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+var_214] eax +
test eax eax +
jz loc_103945E  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_1039397  +
and al 10h +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 0FFFFFEF5h +
add eax 10Bh +
jmp loc_1039461  +
mov esi [ebp+FilePart] +
lea eax [ebp+FileName] +
cmp esi eax +
jnz loc_10393AB  +
mov esi eax +
jmp loc_10393AE  +
add esi 0FFFFFFFEh +
cmp esi [ebp+var_214] +
jz loc_103945E  +
cmp [esi] di +
jnz loc_103945E  +
cmp esi [ebp+var_214] +
jbe loc_103945E  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+FileName] +
push 5Ch  +
push eax  +
call wcsrchr  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_103945E  +
movzx ebx word ptr [edi+2] +
xor eax eax +
mov [edi+2] ax +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
mov [edi+2] bx +
cmp eax 0FFFFFFFFh +
jnz loc_1039426  +
mov esi edi +
cmp edi [ebp+var_214] +
ja loc_10393CF  +
cmp esi [ebp+var_214] +
jbe loc_103945E  +
mov edi ds:CreateDirectoryW +
xor ebx ebx +
jmp loc_1039447  +
test al 10h +
jnz loc_1039414  +
mov eax 10Bh +
jmp loc_1039461  +
cmp [esi+2] bx +
jz loc_103945A  +
push 5Ch  +
pop eax  +
push esi  +
mov [esi] ax +
call ds:lstrlenW  +
lea esi [esi+eax*2] +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call edi  +
test eax eax +
jnz loc_1039431  +
jmp loc_10392C0  +
xor eax eax +
jmp loc_1039461  +
push 7Bh  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1034B90  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
and [ebp+dwErrCode] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
mov byte ptr [ebp+var_1] 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_1039499  +
mov [ebp+dwErrCode] 57h +
jmp loc_10394FD  +
push esi  +
push 4  +
push 28h  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call ds:NtQueryInformationFile  +
mov esi ds:NtSetInformationFile +
test eax eax +
jl loc_10394DF  +
test byte ptr [ebp+var_18] 1 +
jz loc_10394DF  +
push edi  +
push 0Ah  +
pop ecx  +
xor eax eax +
push 4  +
lea edi [ebp+var_38] +
stos   +
push 28h  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
mov [ebp+var_18] 80h +
call esi  +
pop edi  +
push 0Dh  +
push 1  +
lea eax [ebp+var_1] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call esi  +
pop esi  +
test eax eax +
jge loc_10394FD  +
push eax  +
call ds:RtlNtStatusToDosError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop ebx  +
setz al  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+hObject] 0FFFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+hObject] +
push eax  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push [ebp+lpFileName]  +
call sub_1039087  +
mov edi eax +
cmp edi esi +
jnz loc_1039573  +
xor eax eax +
cmp [ebp+arg_4] esi +
push esi  +
setnz al  +
mov [ebp+lpFileName] eax +
lea eax [ebp+BytesReturned] +
push eax  +
push esi  +
push esi  +
push 2  +
lea eax [ebp+lpFileName] +
push eax  +
push 9C040h  +
push [ebp+hObject]  +
call ds:DeviceIoControl  +
test eax eax +
jnz loc_1039573  +
call ds:__imp_GetLastError  +
mov edi eax +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1039582  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push edi  +
call ds:SetLastError  +
xor eax eax +
cmp edi esi +
pop edi  +
setz al  +
pop esi  +
leave   +
retn 8  +
***
call __SEH_prolog4  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_10395EF  +
cmp [ebp+lpString] ebx +
jnz loc_10395D0  +
push 2  +
call sub_103696E  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
test eax eax +
jz loc_103961F  +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
inc eax  +
jmp loc_103968B  +
test ebx ebx +
jnz loc_10395EF  +
push [ebp+lpString]  +
call sub_103535A  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor ecx ecx +
test eax eax +
setnz cl  +
mov eax ecx +
jmp loc_103968B  +
push ebx  +
cmp [ebp+lpString] 0 +
jz loc_10395D7  +
mov esi ds:lstrlenW +
call esi  +
mov edi eax +
push [ebp+lpString]  +
call esi  +
lea esi [edi+eax+2] +
push 2  +
push esi  +
call sub_1036A05  +
mov edi eax +
mov [ebp+arg_0] edi +
test edi edi +
jnz loc_1039623  +
mov eax [ebp+arg_8] +
and [eax] edi +
xor eax eax +
jmp loc_103968B  +
and [ebp+ms_exc.disabled] 0 +
push ebx  +
push esi  +
push edi  +
call sub_102CC3F  +
push 0  +
push esi  +
push [ebp+lpString]  +
push edi  +
call sub_10353B3  +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1039675  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-20h] eax +
push eax  +
call sub_10355B8  +
retn   +
cmp [ebp+var_1C] 0 +
jnz loc_1039683  +
push edi  +
call sub_10369AF  +
xor edi edi +
mov eax [ebp+arg_8] +
mov [eax] edi +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1039D29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1039DAF  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1039D6C  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1039DF2  +
pop ebp  +
retn 2Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1039E35  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1039E78  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+var_4] 4 +
push [ebp+arg_0]  +
call sub_103972C  +
test eax eax +
jz loc_10397A4  +
mov ecx [ebp+arg_8] +
and dword ptr [ecx] 0 +
jmp locret_10397C7  +
cmp [ebp+arg_4] 4 +
jz loc_10397B2  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
jmp loc_10397C5  +
cmp [ebp+var_4] 4 +
jz loc_10397BD  +
push 0Dh  +
pop eax  +
jmp loc_103979C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10397F0  +
mov eax [esi+8] +
test eax eax +
jz loc_10397EA  +
push eax  +
call sub_10369AF  +
push esi  +
call sub_10369AF  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_103983E  +
cmp [ebp+arg_4] eax +
jz loc_103983A  +
mov dl [ebx] +
test dl dl +
jz loc_103983A  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1039822  +
test esi esi +
jnz loc_1039845  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1039851  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
test edi edi +
jbe loc_1039881  +
test [ebp+arg_4] 1000h +
jz loc_1039881  +
mov edx [ebp+arg_0] +
lea eax [esi+ecx] +
mov [edx] eax +
mov edx edi +
sub edx ecx +
mov [ebx] edx +
mov byte ptr [eax] 0 +
test [ebp+arg_4] 400h +
jz loc_10398C5  +
mov eax [ebp+arg_4] +
and eax 0FFh +
push edi  +
push eax  +
push esi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_10398AF  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov [ebx] edi +
jmp loc_10398C5  +
test edi edi +
jbe loc_10398DC  +
mov ecx [ebp+arg_0] +
lea eax [esi+edi-1] +
mov [ecx] eax +
mov dword ptr [ebx] 1 +
mov byte ptr [eax] 0 +
test edi edi +
jbe loc_10398DC  +
test [ebp+arg_4] 800h +
jz loc_10398DC  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov [ebx] edi +
mov byte ptr [esi] 0 +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_14] +
push esi  +
and eax 100h +
push edi  +
mov [ebp+var_10] eax +
jz loc_1039928  +
xor esi esi +
xor eax eax +
cmp [ebp+arg_0] esi +
jnz loc_103990E  +
mov edx [ebp+arg_4] +
cmp edx esi +
jnz loc_1039919  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
jbe loc_103991E  +
mov eax 80070057h +
cmp eax esi +
jl loc_1039954  +
cmp edx esi +
jz loc_1039954  +
jmp loc_1039942  +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1039939  +
cmp edx 7FFFFFFFh +
jbe loc_103993E  +
mov eax 80070057h +
test eax eax +
jl loc_1039952  +
mov eax [ebp+arg_0] +
lea edi [ebp+var_4] +
call sub_102D106  +
mov esi [ebp+var_4] +
jmp loc_1039954  +
xor esi esi +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10399E5  +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_4] +
push ebx  +
lea ebx [esi+eax] +
sub edi esi +
xor eax eax +
mov [ebp+var_C] ebx +
mov [ebp+var_8] edi +
cmp [ebp+var_10] eax +
jz loc_1039984  +
cmp [ebp+arg_8] eax +
jnz loc_1039984  +
mov [ebp+arg_8] offset word_102BA92 +
test [ebp+arg_14] 0FFFFE000h +
mov [ebp+var_4] eax +
jz loc_10399EE  +
mov [ebp+var_4] 80070057h +
test [ebp+arg_14] 1C00h +
jz loc_10399C3  +
cmp [ebp+arg_4] 0 +
jz loc_10399C3  +
push [ebp+arg_14]  +
mov edi [ebp+arg_4] +
lea eax [ebp+var_C] +
mov ecx esi +
mov esi [ebp+arg_0] +
push eax  +
lea ebx [ebp+var_8] +
call sub_103985D  +
mov ebx [ebp+var_C] +
mov edi [ebp+var_8] +
cmp [ebp+var_4] 0 +
jge loc_10399D2  +
cmp [ebp+var_4] 8007007Ah +
jnz loc_10399E4  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10399DB  +
mov [eax] ebx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10399E4  +
mov [eax] edi +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 18h  +
cmp edi 1 +
ja loc_1039A0F  +
mov eax [ebp+arg_8] +
cmp byte ptr [eax] 0 +
jz loc_10399D2  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
and eax 23h +
add eax 80070057h +
mov [ebp+var_4] eax +
jmp loc_1039997  +
mov [ebp+var_8] eax +
push 7FFFFFFEh  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
mov ecx ebx +
call sub_103980E  +
add ebx [ebp+var_8] +
sub edi [ebp+var_8] +
mov [ebp+var_4] eax +
mov [ebp+var_C] ebx +
mov [ebp+var_8] edi +
test eax eax +
jl loc_1039997  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_10399D2  +
cmp edi 1 +
jbe loc_10399D2  +
lea ecx [edi-1] +
push ecx  +
and eax 0FFh +
push eax  +
lea eax [ebx+1] +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_10399D2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
test esi esi +
jnz loc_1039A81  +
inc esi  +
mov edi [ebp+arg_0] +
cmp [edi] esi +
jb loc_1039A91  +
mov [ebp+var_4] 1 +
jmp loc_1039AE5  +
add esi 3FFh +
shr esi 0Ah +
inc esi  +
push ebx  +
shl esi 0Ah +
push esi  +
call sub_103696E  +
mov ebx eax +
test ebx ebx +
jnz loc_1039AB5  +
push 8  +
call ds:SetLastError  +
jmp loc_1039AE4  +
push esi  +
push 0  +
push ebx  +
call memset  +
mov eax [edi+8] +
add esp 0Ch +
test eax eax +
jz loc_1039AD8  +
push eax  +
push esi  +
push ebx  +
call sub_102E071  +
push dword ptr [edi+8]  +
call sub_10369AF  +
mov [edi+8] ebx +
mov [edi] esi +
mov [ebp+var_4] 1 +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0Ch  +
call sub_103696E  +
mov esi eax +
xor eax eax +
cmp esi eax +
jnz loc_1039B12  +
push 8  +
call ds:SetLastError  +
jmp loc_1039B27  +
push [ebp+arg_0]  +
mov [esi] eax +
push esi  +
mov [esi+4] eax +
mov [esi+8] eax +
call sub_1039A6D  +
test eax eax +
jnz loc_1039B31  +
push esi  +
call sub_10397D0  +
xor eax eax +
jmp loc_1039B33  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
test edi edi +
jz loc_1039B5C  +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1039B52  +
sub eax edx +
inc eax  +
push eax  +
call sub_1039AF3  +
mov esi eax +
test esi esi +
jz loc_1039B85  +
test edi edi +
jz loc_1039B8F  +
push edi  +
push dword ptr [esi]  +
push dword ptr [esi+8]  +
call sub_102E071  +
test eax eax +
jge loc_1039B8F  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
push esi  +
call sub_10397D0  +
xor eax eax +
jmp loc_1039B9D  +
push dword ptr [esi+8]  +
call ds:lstrlenA  +
mov [esi+4] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1039BB8  +
mov esi [ebp+arg_0] +
sub eax ecx +
mov edi eax +
mov eax [esi+4] +
lea eax [eax+edi+1] +
push eax  +
push esi  +
call sub_1039A6D  +
test eax eax +
jz loc_1039C04  +
push 1000h  +
push 0  +
push 0  +
push [ebp+arg_4]  +
push dword ptr [esi]  +
push dword ptr [esi+8]  +
call sub_10398E7  +
test eax eax +
jge loc_1039BFE  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
jmp loc_1039C04  +
add [esi+4] edi +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push edi  +
xor edi edi +
cmp dword_103D500 edi +
jnz loc_1039D20  +
push esi  +
mov esi ds:LoadLibraryExW +
push 8  +
push edi  +
push offset aApiMsWinCoreLo  +
call esi  +
mov dword_103D500 eax +
cmp eax edi +
jnz loc_1039D1F  +
push 8  +
push edi  +
push offset aAdvapi32_dll_0  +
call esi  +
mov dword_103D500 eax +
cmp eax edi +
jnz loc_1039D1F  +
call ds:__imp_GetLastError  +
mov edi eax +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D508 +
test eax eax +
jnz loc_1039D5A  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039D63  +
push offset aRegclosekey  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D508 eax +
test eax eax +
jz loc_1039D5D  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D50C +
test eax eax +
jnz loc_1039D9D  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039DA6  +
push offset aRegcreatekeyex  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D50C eax +
test eax eax +
jz loc_1039DA0  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D510 +
test eax eax +
jnz loc_1039DE0  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039DE9  +
push offset aRegopenkeyexw  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D510 eax +
test eax eax +
jz loc_1039DE3  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D514 +
test eax eax +
jnz loc_1039E23  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039E2C  +
push offset aRegqueryinfoke  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D514 eax +
test eax eax +
jz loc_1039E26  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 30h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D518 +
test eax eax +
jnz loc_1039E66  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039E6F  +
push offset aRegqueryvaluee  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D518 eax +
test eax eax +
jz loc_1039E69  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_103D51C +
test eax eax +
jnz loc_1039EA9  +
call sub_1039CDD  +
test eax eax +
jnz loc_1039EB2  +
push offset aRegsetvalueexw  +
push dword_103D500  +
call ds:__imp_GetProcAddress  +
mov dword_103D51C eax +
test eax eax +
jz loc_1039EAC  +
pop ebp  +
jmp eax  +
call ds:__imp_GetLastError  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_103D004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:AllocateAndInitializeSid +
mov [ebp+lpName] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov [eax] ebx +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 12h  +
push 1  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+var_10] ebx +
mov [ebp+hMem] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
call esi  +
test eax eax +
jnz loc_1039F2E  +
call ds:__imp_GetLastError  +
mov [ebp+var_10] eax +
jmp loc_103A066  +
lea eax [ebp+var_1C] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call esi  +
test eax eax +
jz loc_1039F20  +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 4  +
push 1  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call esi  +
test eax eax +
jz loc_1039F20  +
mov esi ds:GetLengthSid +
push edi  +
push [ebp+pSid]  +
call esi  +
push [ebp+var_1C]  +
mov edi eax +
add edi 10h +
call esi  +
push [ebp+var_18]  +
lea edi [edi+eax+8] +
call esi  +
lea esi [edi+eax+8] +
push esi  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jnz loc_1039FA3  +
mov [ebp+var_10] 8 +
jmp loc_103A065  +
push 2  +
pop edi  +
push edi  +
push esi  +
push eax  +
call ds:InitializeAcl  +
test eax eax +
jz loc_103A012  +
push [ebp+pSid]  +
mov esi ds:AddAccessAllowedAceEx +
push 1F0003h  +
push ebx  +
push edi  +
push [ebp+hMem]  +
call esi  +
test eax eax +
jz loc_103A012  +
push [ebp+var_1C]  +
push [ebp+AccessMask]  +
push ebx  +
push edi  +
push [ebp+hMem]  +
call esi  +
test eax eax +
jz loc_103A012  +
push [ebp+var_18]  +
push [ebp+AccessMask]  +
push ebx  +
push edi  +
push [ebp+hMem]  +
call esi  +
test eax eax +
jz loc_103A012  +
push 1  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jz loc_103A012  +
push ebx  +
push [ebp+hMem]  +
lea eax [ebp+pSecurityDescriptor] +
push 1  +
push eax  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_103A01A  +
call ds:__imp_GetLastError  +
jmp loc_103A046  +
push [ebp+lpName]  +
lea eax [ebp+pSecurityDescriptor] +
push ebx  +
mov [ebp+EventAttributes.lpSecurityDescriptor] eax +
push 1  +
lea eax [ebp+EventAttributes] +
push eax  +
mov [ebp+EventAttributes.nLength] 0Ch +
mov [ebp+EventAttributes.bInheritHandle] ebx +
call ds:CreateEventW  +
mov esi eax +
call ds:__imp_GetLastError  +
cmp esi ebx +
jnz loc_103A04B  +
mov [ebp+var_10] eax +
jmp loc_103A065  +
mov ecx 0B7h +
cmp eax ecx +
jnz loc_103A060  +
push esi  +
mov [ebp+var_10] ecx +
call ds:CloseHandle  +
jmp loc_103A065  +
mov eax [ebp+var_24] +
mov [eax] esi +
pop edi  +
mov esi ds:FreeSid +
cmp [ebp+pSid] ebx +
jz loc_103A076  +
push [ebp+pSid]  +
call esi  +
cmp [ebp+var_1C] ebx +
jz loc_103A080  +
push [ebp+var_1C]  +
call esi  +
cmp [ebp+var_18] ebx +
jz loc_103A08A  +
push [ebp+var_18]  +
call esi  +
cmp [ebp+hMem] ebx +
pop esi  +
pop ebx  +
jz loc_103A09A  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_10] +
xor ecx ebp +
call sub_1034B90  +
leave   +
retn 0Ch  +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_103A129  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_1034B90  +
jmp __SEH_epilog4  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
cmp cl 40h +
jnb loc_103A24A  +
cmp cl 20h +
jnb loc_103A240  +
shrd eax edx +
shr edx cl +
retn   +
***
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
retn 3B0h  +
***
retf 3B1h  +
***
sahf   +
mov ch 3 +
add [esi-35FFFC4Bh] dh +
mov ch 3 +
add al ah +
mov ch 3 +
add dl ch +
mov ch 3 +
add al bh +
mov ch 3 +
add dl ch +
retn 3  +
***
fisubr  word ptr [ebx+eax+3ACE800h] +
add dh dh +
lods   +
add eax [eax] +
add [ebp-52EDFFFDh] ch +
add eax [eax] +
sbb al 0ADh +
add eax [eax] +
and al 0ADh +
add eax [eax] +
xor ch [ebp-52C5FFFDh] +
add eax [eax] +
inc esi  +
lods   +
add eax [eax] +
faddp st(1) st +
add eax [eax] +
aam  0C1h +
add eax [eax] +
retf 3C1h  +
***
retn 5301h  +
***
retf 5301h  +
***
retn   +
***
