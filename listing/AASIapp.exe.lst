push [ebp+arg_C]  +
push esi  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_20] +
mov eax [ebp+arg_4] +
sub esp 10h +
mov al ds:byte_4545BB +
mov edx [ebp+arg_4] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ecx offset unk_454508 +
or ecx 0B000000h +
mov eax [edx] +
mov [ebp+var_C] eax +
mov eax [edx+4] +
mov [ebp+var_8] eax +
mov eax [edx+8] +
add edx 0Ch +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_4] eax +
mov eax [esi+4] +
push ecx  +
and dword ptr [ecx+4] 0 +
push [ebp+arg_10]  +
mov [ecx] eax +
mov eax [esi+4] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
movzx eax word ptr [eax] +
and dword ptr [ecx+14h] 0 +
mov [ecx+8] eax +
mov dword ptr [ecx+0Ch] 2 +
mov [ecx+10h] edx +
movzx eax word ptr [edx] +
mov [ecx+18h] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [ecx+1Ch] 1 +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_420E5B  +
add esp 1Ch +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_401680  +
push offset sub_442DB0  +
call sub_41C4A9  +
pop ecx  +
retn   +
***
call sub_401770  +
push offset sub_442E00  +
call sub_41C4A9  +
pop ecx  +
retn   +
***
call sub_401FD0  +
push offset loc_442E80  +
call sub_41C4A9  +
pop ecx  +
retn   +
***
movups xmm0 oword ptr ds:oword_443450 +
movups oword ptr oword_45C42C xmm0 +
retn   +
***
movups xmm0 oword ptr ds:oword_443450 +
movups oword ptr oword_45C490 xmm0 +
retn   +
***
mov ecx offset dword_45C500 +
mov ecx offset unk_45B4A0 +
call sub_41A377  +
push offset sub_442F39  +
call sub_41C4A9  +
pop ecx  +
retn   +
***
pop ecx  +
mov ecx offset unk_45B4F8 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset unk_45B670 +
call loc_41AA98  +
push offset byte_442F84  +
call sub_41C4A9  +
pop ecx  +
retn   +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi edx +
test esi esi +
jnz loc_4013C4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_4013E1  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_4013FF  +
cmp edi esi +
jb loc_4013FF  +
push esi  +
push ebx  +
push ecx  +
call loc_41EED0  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
push edi  +
push 0  +
push ecx  +
call sub_41E790  +
add esp 0Ch +
test ebx ebx +
jnz loc_401429  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
pop ebx  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
cmp edi esi +
jnb loc_40141F  +
call sub_427459  +
mov dword ptr [eax] 22h +
call sub_427380  +
pop ebx  +
pop edi  +
mov eax 22h +
pop esi  +
pop ebp  +
retn   +
***
retn   +
***
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
call sub_401450  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 1 +
push ecx  +
call sub_427135  +
add esp 1Ch +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ebp+8] eax +
lea eax [ebp+8] +
push offset unk_456C1C  +
push eax  +
call sub_41EE5A  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
cmp ecx 50h +
ja loc_4014E1  +
movzx eax ds:byte_4014FC[ecx] +
jmp ds:off_4014EC[eax*4]  +
mov eax ecx +
pop ebp  +
retn   +
***
push 8007000Eh  +
call loc_401490  +
push 80070057h  +
call loc_401490  +
push 80004005h  +
call loc_401490  +
nop   +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_401570  +
call ds:GetLastError  +
test eax eax +
jle locret_401572  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi edx +
mov ebx ecx +
push edi  +
push ebx  +
call ds:LoadResource  +
test eax eax +
jnz loc_401599  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
push eax  +
call ds:LockResource  +
mov esi eax +
test esi esi +
jz loc_4015D6  +
push edi  +
push ebx  +
call ds:SizeofResource  +
mov ecx [ebp+8] +
lea edx [esi+eax] +
and ecx 0Fh +
jbe loc_4015D2  +
cmp esi edx +
jb loc_4015DD  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
xor eax eax +
cmp [esi] ax +
cmovz esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov ecx offset unk_45B4A0 +
push 0  +
mov [ebp+var_4] ebx +
call sub_41A42D  +
mov esi eax +
mov edi 1 +
test esi esi +
jz loc_401651  +
shr ebx 4 +
push 0  +
lea eax [ebx+1] +
movzx eax ax +
push eax  +
push 6  +
push esi  +
call ds:FindResourceExW  +
test eax eax +
jz loc_40163F  +
push [ebp+var_4]  +
mov edx eax +
mov ecx esi +
call loc_401580  +
add esp 4 +
test eax eax +
jnz loc_40165A  +
push edi  +
mov ecx offset unk_45B4A0 +
call sub_41A42D  +
mov esi eax +
inc edi  +
test esi esi +
jnz loc_401616  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ecx]  +
call ds:SysFreeString  +
retn   +
***
xorps xmm0 xmm0 +
mov dword_45C468 0 +
push 0  +
push offset CriticalSection  +
movups oword ptr CriticalSection.DebugInfo xmm0 +
mov dword_45C46C 400000h +
movq qword ptr CriticalSection.LockSemaphore xmm0 +
mov dword_45C470 offset unk_456D5C +
mov dword_45C474 offset unk_456D5C +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_4016EE  +
call ds:GetLastError  +
test eax eax +
jle loc_4016DF  +
movzx eax ax +
or eax 80070000h +
test eax eax +
jns loc_4016EE  +
mov byte_45C3C8 1 +
mov eax offset dword_45C468 +
retn   +
mov dword_45C468 28h +
mov eax offset dword_45C468 +
retn   +
***
cmp dword_45C468 0 +
jz locret_401765  +
mov ecx dword_45C474 +
push esi  +
mov esi dword_45C470 +
cmp esi ecx +
jnb loc_40174F  +
push ebx  +
mov ebx ds:DecodePointer +
push edi  +
mov eax [esi] +
test eax eax +
jz loc_401746  +
mov edi [eax+10h] +
mov eax [edi] +
test eax eax +
jz loc_401746  +
push eax  +
call ebx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov dword ptr [edi] 0 +
mov ecx dword_45C474 +
add esi 4 +
cmp esi ecx +
jb loc_401722  +
pop edi  +
pop ebx  +
push offset CriticalSection  +
call ds:DeleteCriticalSection  +
mov dword_45C468 0 +
pop esi  +
retn   +
***
xorps xmm0 xmm0 +
mov dword_45C45C 0 +
push 0  +
push offset stru_45C440  +
movups oword ptr stru_45C440.DebugInfo xmm0 +
mov dword_45C460 0 +
movq qword ptr stru_45C440.LockSemaphore xmm0 +
mov dword_45C464 0 +
mov dword_45C43C 2Ch +
mov dword_45C458 0 +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_4017F2  +
call ds:GetLastError  +
test eax eax +
jle loc_4017D9  +
movzx eax ax +
or eax 80070000h +
test eax eax +
mov eax offset dword_45C43C +
jns locret_4017F7  +
mov byte_45C3C8 1 +
mov dword_45C43C 0 +
retn   +
mov eax offset dword_45C43C +
retn   +
***
xorps xmm0 xmm0 +
mov dword_45C4A4 0 +
push 0  +
push offset stru_45C4B0  +
movups oword ptr stru_45C4B0.DebugInfo xmm0 +
mov dword_45C4AC 0 +
movq qword ptr stru_45C4B0.LockSemaphore xmm0 +
mov dword_45C4A8 0 +
mov dword_45C3C4 offset dword_45C4A0 +
mov dword_45C4C8 0 +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_401878  +
call ds:GetLastError  +
test eax eax +
jle loc_401869  +
movzx eax ax +
or eax 80070000h +
test eax eax +
jns loc_401878  +
mov byte_45C3C8 1 +
mov eax offset dword_45C4A0 +
retn   +
mov dword_45C4A4 24h +
mov eax offset dword_45C4A0 +
retn   +
***
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_4018B5  +
mov eax 80004003h +
pop ebx  +
pop ebp  +
retn 4  +
push esi  +
push edi  +
xor esi esi +
lea edi [ecx+28h] +
cmp [edi] esi +
jnz loc_4018DA  +
push edi  +
push offset stru_44F9A0  +
push 1  +
push esi  +
push offset stru_443460  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
js loc_4018E6  +
mov ecx [edi] +
mov [ebx] ecx +
mov ecx [edi] +
push ecx  +
mov edx [ecx] +
call dword ptr [edx+4]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax dword_45C43C +
push ebx  +
mov ebx edx +
test eax eax +
jz loc_401986  +
cmp eax 2Ch +
jz loc_40190C  +
mov eax 80070057h +
pop ebx  +
retn   +
***
mov eax dword_45C460 +
push esi  +
xor esi esi +
test eax eax +
jle loc_401940  +
push edi  +
mov edi ds:UnregisterClassW +
nop   +
test esi esi +
js loc_40198A  +
cmp esi eax +
jge loc_40198A  +
mov eax dword_45C45C +
push ebx  +
movzx eax word ptr [eax+esi*2] +
push eax  +
call edi  +
mov eax dword_45C460 +
inc esi  +
cmp esi eax +
jl loc_401920  +
pop edi  +
mov eax dword_45C45C +
pop esi  +
test eax eax +
jz loc_40195D  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword_45C45C 0 +
push offset stru_45C440  +
mov dword_45C460 0 +
mov dword_45C464 0 +
call ds:DeleteCriticalSection  +
mov dword_45C43C 0 +
xor eax eax +
pop ebx  +
retn   +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
mov edx dword_45C474 +
xor eax eax +
push esi  +
mov esi dword_45C470 +
cmp esi edx +
jnb loc_4019E5  +
push edi  +
mov edi ds:CoRevokeClassObject +
pop edi  +
pop esi  +
retn   +
***
push esi  +
test ebx ebx +
jnz loc_401A07  +
push ecx  +
push ecx  +
push 1  +
push 0C0000005h  +
call ds:RaiseException  +
mov esi [ebx+8] +
test esi esi +
jz loc_401A2C  +
push edi  +
nop   +
push dword ptr [esi+4]  +
mov eax [esi] +
call eax  +
mov edi [esi+8] +
push 0Ch  +
push esi  +
call sub_41C538  +
add esp 8 +
mov esi edi +
test edi edi +
jnz loc_401A10  +
pop edi  +
pop esi  +
mov dword ptr [ebx+8] 0 +
pop ebx  +
retn   +
***
push [ebp+dwBytes]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov eax [ebp+lpMem] +
test eax eax +
jz loc_401A76  +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_401A95  +
mov eax [ecx] +
push [ebp+arg_4]  +
call dword ptr [eax]  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_401AA8  +
mov eax [ecx] +
push edx  +
call dword ptr [eax+4]  +
xor eax eax +
pop ebp  +
retn 8  +
push eax  +
push edx  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+8] 0 +
mov dword ptr [esi] offset off_44F930 +
jz loc_401B00  +
mov eax [esi+4] +
test eax eax +
jz loc_401B00  +
push eax  +
call ds:HeapDestroy  +
test [ebp+arg_0] 1 +
jz loc_401B11  +
push 0Ch  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
mov dword_45C3D8 offset off_44F988 +
mov dword_45C3F0 eax +
mov eax offset dword_45C3D8 +
mov dword_45C3DC offset dword_45C3B0 +
mov dword_45C3EC 2 +
mov dword_45C3E4 0 +
mov dword_45C3E8 0 +
mov dword_45C3E0 offset dword_45C3D8 +
retn 4  +
***
mov eax large fs:2Ch +
push esi  +
mov esi [eax] +
mov eax dword_45C3AC +
cmp eax [esi+4] +
jle loc_401BCF  +
push offset dword_45C3AC  +
call sub_41C035  +
add esp 4 +
cmp dword_45C3AC 0FFFFFFFFh +
jnz loc_401BCF  +
call ds:GetProcessHeap  +
push offset loc_442E50  +
mov dword_45C3B0 offset off_44F930 +
mov dword_45C3B4 eax +
mov byte_45C3B8 0 +
call sub_41C4A9  +
push offset dword_45C3AC  +
call sub_41BFF6  +
add esp 8 +
mov eax dword_45C3A4 +
cmp eax [esi+4] +
pop esi  +
jle loc_401C10  +
push offset dword_45C3A4  +
call sub_41C035  +
add esp 4 +
cmp dword_45C3A4 0FFFFFFFFh +
jnz loc_401C10  +
push ecx  +
call sub_401B20  +
push offset loc_442E40  +
call sub_41C4A9  +
push offset dword_45C3A4  +
call sub_41BFF6  +
add esp 8 +
mov eax offset dword_45C3D8 +
retn   +
***
mov edx [ebp+arg_0] +
push edi  +
mov edi ecx +
test edx edx +
jns loc_401C34  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_401C2D  +
inc edx  +
push esi  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_401C90  +
mov eax esi +
mul  [ebp+arg_4] +
test edx edx +
ja loc_401C90  +
jb loc_401C5C  +
cmp eax 0FFFFFFFFh +
ja loc_401C90  +
cmp eax 0FFFFFFEFh +
ja loc_401C90  +
mov ecx [edi+4] +
lea edx [eax+10h] +
push edx  +
mov eax [ecx] +
call dword ptr [eax]  +
mov ecx eax +
test ecx ecx +
jz loc_401C90  +
lea eax [esi-1] +
mov [ecx] edi +
pop esi  +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx+0Ch] 1 +
mov dword ptr [ecx+4] 0 +
pop edi  +
pop ebp  +
retn 8  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
mov edx [ebp+arg_4] +
test edx edx +
jns loc_401CC0  +
xor eax eax +
pop ebp  +
retn 0Ch  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_401CBA  +
inc edx  +
push esi  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_401D0F  +
mov eax esi +
mul  [ebp+arg_8] +
test edx edx +
ja loc_401D0F  +
jb loc_401CE8  +
cmp eax 0FFFFFFFFh +
ja loc_401D0F  +
cmp eax 0FFFFFFEFh +
ja loc_401D0F  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push [ebp+arg_0]  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov ecx eax +
test ecx ecx +
jz loc_401D0F  +
lea eax [esi-1] +
mov [ecx+8] eax +
mov eax ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_44F988 +
jz loc_401D5D  +
push 1Ch  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441608  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx dword_45C3A8 +
test ecx ecx +
jnz loc_401EC1  +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] ecx +
mov [ebp+cbData] 104h +
mov [ebp+hKey] ecx +
call sub_401B70  +
xor ecx ecx +
mov edx eax +
test edx edx +
setnz cl  +
test ecx ecx +
jnz loc_401DD3  +
push 80004005h  +
call loc_401490  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
lea esi [eax+10h] +
mov [ebp+lpData] esi +
lea eax [ebp+hKey] +
mov [ebp+var_4] 0 +
push eax  +
push 20019h  +
push 0  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_401E94  +
mov edx [ebp+cbData] +
test edx edx +
jns loc_401E1B  +
push 80070057h  +
call loc_401490  +
mov eax [esi-8] +
mov ecx 1 +
sub ecx [esi-4] +
sub eax edx +
or eax ecx +
jge loc_401E38  +
push edx  +
lea ecx [ebp+lpData] +
call sub_403160  +
mov esi [ebp+lpData] +
lea eax [ebp+cbData] +
push eax  +
push esi  +
push 0  +
push 0  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_401E8B  +
cmp [ebp+cbData] eax +
jbe loc_401E8B  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push offset dword_45C3A8  +
push offset aD_D_D_D  +
push esi  +
call sub_401460  +
mov ecx dword_45C3A8 +
xor edx edx +
add esp 18h +
cmp eax 4 +
cmovnz ecx edx +
mov dword_45C3A8 ecx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+var_4] 0FFFFFFFFh +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_401EB3  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx dword_45C3A8 +
test ecx ecx +
jz loc_401FBA  +
cmp ecx 7 +
jbe loc_401FBA  +
cmp byte_45C3C9 0 +
jnz loc_401FBA  +
cmp ecx 8 +
jnz loc_401EE5  +
mov [ebp+lpData] 22B8h +
jmp loc_401EF7  +
xor eax eax +
cmp ecx 9 +
setnz al  +
lea eax ds:270Fh[eax*2] +
mov [ebp+lpData] eax +
push 0  +
lea eax [ebp+phkResult] +
mov [ebp+phkResult] 0 +
push eax  +
push 0  +
push 2001Fh  +
push 0  +
push 0  +
push 0  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegCreateKeyExW  +
test eax eax +
jnz loc_401FBA  +
mov dword ptr [ebp+Data] eax +
lea eax [ebp+var_30] +
push eax  +
lea eax [ebp+Data] +
mov [ebp+var_30] 4 +
push eax  +
lea eax [ebp+Type] +
mov [ebp+Type] 4 +
push eax  +
push 0  +
push offset aAasiapp_exe  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax 2 +
jnz loc_401F79  +
push 4  +
lea eax [ebp+lpData] +
push eax  +
push 4  +
push 0  +
push offset aAasiapp_exe  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_401FB1  +
jmp loc_401FA1  +
test eax eax +
jnz loc_401FB1  +
mov eax dword ptr [ebp+Data] +
cmp eax [ebp+lpData] +
jz loc_401FAA  +
push 4  +
lea eax [ebp+lpData] +
push eax  +
push 4  +
push 0  +
push offset aAasiapp_exe  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_401FAA  +
push [ebp+phkResult]  +
call ds:RegFlushKey  +
mov byte_45C3C9 1 +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_402A50  +
and esp 0FFFFFFF8h +
sub esp 14h +
push esi  +
lea eax [esp+18h+var_8] +
mov [esp+18h+var_8.dwICC] 0 +
push eax  +
mov [esp+1Ch+var_8.dwSize] 8 +
mov [esp+1Ch+var_8.dwICC] 34h +
call ds:InitCommonControlsEx  +
push ecx  +
mov ecx dword_45C4F8 +
mov esi esp +
add ecx 0FFFFFFF0h +
call loc_403100  +
add eax 10h +
push ecx  +
mov [esi] eax +
mov esi esp +
mov ecx dword_45C4F4 +
add ecx 0FFFFFFF0h +
call loc_403100  +
push ecx  +
push [ebp+arg_0]  +
add eax 10h +
mov [esi] eax +
call ds:GetDesktopWindow  +
mov edx eax +
lea ecx [esp+28h+var_10] +
call sub_40AE30  +
mov ecx dword_45C4E0 +
add esp 10h +
mov esi [eax] +
cmp ecx esi +
jz loc_402167  +
test esi esi +
jz loc_40214D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov ecx dword_45C4E0 +
mov eax ecx +
mov ecx esi +
mov dword_45C4E0 ecx +
test eax eax +
jz loc_402167  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx dword_45C4E0 +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_40217B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx dword_45C4E0 +
test ecx ecx +
jz loc_4021A3  +
push dword_45C4F0  +
mov eax [ecx] +
push dword_45C4EC  +
push dword_45C4E8  +
push dword_45C4E4  +
push ecx  +
call dword ptr [eax+14h]  +
mov ecx dword_45C4E0 +
xor edx edx +
mov eax 80004005h +
test ecx ecx +
pop esi  +
cmovnz eax edx +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 34h +
mov eax dword_459094 +
xor eax esp +
mov [esp+34h+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov dword ptr [eax] 0 +
lea eax [esp+40h+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov esi eax +
mov [esp+40h+var_30] 0 +
mov [esp+40h+var_2C] 0 +
call sub_403730  +
mov edx [esp+40h+pNumArgs] +
mov ecx esi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_30] +
push eax  +
call sub_4115E0  +
xor eax eax +
mov [esp+44h+var_8] 7 +
xor ecx ecx +
mov word ptr [esp+44h+var_1C] ax +
add esp 4 +
mov [esp+40h+var_C] 0 +
cmp ds:word_44F740 cx +
mov eax 8 +
cmovz eax ecx +
lea ecx [esp+40h+var_1C] +
push eax  +
push offset word_44F740  +
call loc_402D90  +
lea eax [esp+48h+var_24] +
push eax  +
lea eax [esp+4Ch+var_30] +
push eax  +
lea ecx [esp+50h+var_38] +
call sub_4038D0  +
mov eax [esp+48h+var_30] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_402279  +
mov eax [eax] +
push eax  +
lea ecx [esp+4Ch+var_3C] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4F0 +
call sub_402E90  +
mov edx [esp+48h+var_3C] +
or esi 0FFFFFFFFh +
add edx 0FFFFFFF0h +
mov eax esi +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4022AC  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+4Ch+var_14] +
cmp eax 8 +
jb loc_4022C4  +
inc eax  +
lea ecx [esp+4Ch+var_28] +
push eax  +
push [esp+50h+var_28]  +
call loc_402F00  +
xor eax eax +
mov [esp+54h+var_1C] 7 +
xor ecx ecx +
mov word ptr [esp+54h+var_30] ax +
cmp ds:word_44F704 cx +
mov ebx 0Bh +
mov eax ebx +
mov [esp+54h+pNumArgs] 0 +
cmovz eax ecx +
lea ecx [esp+54h+var_30] +
push eax  +
push offset word_44F704  +
call loc_402D90  +
lea eax [esp+5Ch+var_38] +
push eax  +
lea eax [esp+60h+var_44] +
push eax  +
lea ecx [esp+64h+var_4C] +
call sub_4038D0  +
mov eax [esp+5Ch+var_44] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_40231F  +
mov eax [eax] +
push eax  +
lea ecx [esp+60h+var_50] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4E8 +
call sub_402E90  +
mov edx [esp+5Ch+var_50] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40234F  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+60h+var_28] +
cmp eax 8 +
jb loc_402367  +
inc eax  +
lea ecx [esp+60h+var_3C] +
push eax  +
push [esp+64h+var_3C]  +
call loc_402F00  +
xor eax eax +
mov [esp+68h+var_30] 7 +
xor ecx ecx +
mov word ptr [esp+68h+var_44] ax +
cmp ds:word_44F71C cx +
mov edi 10h +
mov eax edi +
mov [esp+68h+var_34] 0 +
cmovz eax ecx +
lea ecx [esp+68h+var_44] +
push eax  +
push offset word_44F71C  +
call loc_402D90  +
lea eax [esp+70h+var_4C] +
push eax  +
lea eax [esp+74h+var_58] +
push eax  +
lea ecx [esp+78h+var_60] +
call sub_4038D0  +
mov eax [esp+70h+var_58] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_4023C2  +
mov eax [eax] +
push eax  +
lea ecx [esp+74h+var_64] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4EC +
call sub_402E90  +
mov edx [esp+70h+var_64] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4023F2  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+74h+var_3C] +
cmp eax 8 +
jb loc_40240A  +
inc eax  +
lea ecx [esp+74h+var_50] +
push eax  +
push [esp+78h+var_50]  +
call loc_402F00  +
xor eax eax +
mov [esp+7Ch+var_44] 7 +
xor ecx ecx +
mov word ptr [esp+7Ch+var_58] ax +
cmp ds:word_44F6F4 cx +
mov eax 6 +
mov [esp+7Ch+var_48] 0 +
cmovz eax ecx +
lea ecx [esp+7Ch+var_58] +
push eax  +
push offset word_44F6F4  +
call loc_402D90  +
lea eax [esp+84h+var_60] +
push eax  +
lea eax [esp+88h+var_6C] +
push eax  +
lea ecx [esp+8Ch+var_74] +
call sub_4038D0  +
mov eax [esp+84h+var_6C] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_402463  +
mov eax [eax] +
push eax  +
lea ecx [esp+88h+var_78] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4E4 +
call sub_402E90  +
mov edx [esp+84h+var_78] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_402493  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+88h+var_50] +
cmp eax 8 +
jb loc_4024AB  +
inc eax  +
lea ecx [esp+88h+var_64] +
push eax  +
push [esp+8Ch+var_64]  +
call loc_402F00  +
xor eax eax +
mov [esp+90h+var_58] 7 +
cmp ds:word_44F754 ax +
lea ecx [esp+90h+var_6C] +
mov [esp+90h+var_5C] 0 +
cmovz ebx eax +
mov word ptr [esp+90h+var_6C] ax +
push ebx  +
push offset word_44F754  +
call loc_402D90  +
lea eax [esp+98h+var_74] +
push eax  +
lea eax [esp+9Ch+var_80] +
push eax  +
lea ecx [esp+0A0h+var_88] +
call sub_4038D0  +
mov eax [esp+98h+var_80] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_4024FD  +
mov eax [eax] +
push eax  +
lea ecx [esp+9Ch+var_8C] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4F4 +
call sub_402E90  +
mov edx [esp+98h+var_8C] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40252D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+9Ch+var_64] +
cmp eax 8 +
jb loc_402545  +
inc eax  +
lea ecx [esp+9Ch+var_78] +
push eax  +
push [esp+0A0h+var_78]  +
call loc_402F00  +
xor eax eax +
mov [esp+0A4h+var_6C] 7 +
cmp ds:word_44F76C ax +
lea ecx [esp+0A4h+var_80] +
mov [esp+0A4h+var_70] 0 +
cmovz edi eax +
mov word ptr [esp+0A4h+var_80] ax +
push edi  +
push offset word_44F76C  +
call loc_402D90  +
lea eax [esp+0ACh+var_88] +
push eax  +
lea eax [esp+0B0h+var_94] +
push eax  +
lea ecx [esp+0B4h+var_9C] +
call sub_4038D0  +
mov eax [esp+0ACh+var_94] +
add eax 28h +
cmp dword ptr [eax+14h] 8 +
jb loc_402597  +
mov eax [eax] +
push eax  +
lea ecx [esp+0B0h+var_A0] +
call sub_402B90  +
push eax  +
mov ecx offset dword_45C4F8 +
call sub_402E90  +
mov edx [esp+0ACh+var_A0] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] esi +
dec esi  +
test esi esi +
jg loc_4025C5  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+0B0h+var_78] +
cmp eax 8 +
jb loc_4025DD  +
inc eax  +
lea ecx [esp+0B0h+var_8C] +
push eax  +
push [esp+0B4h+var_8C]  +
call loc_402F00  +
mov edi [esp+0B8h+var_A8] +
lea ecx [esp+0B8h+var_A8] +
mov esi [edi] +
mov [esp+0B8h+var_AC] esi +
call sub_403280  +
mov edi [esp+0B8h+var_A8] +
push edi  +
call sub_41BEC0  +
mov ecx [esp+0BCh+var_7C] +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 1Ch +
lea eax [ebp+Msg] +
push edi  +
mov edi ds:GetMessageW +
push 0  +
push 0  +
push 0  +
push eax  +
call edi  +
test eax eax +
jle loc_4026CA  +
push ebx  +
mov ebx ds:TranslateMessage +
push esi  +
mov esi ds:GetActiveWindow +
nop   +
push 0  +
push 0  +
push 8001h  +
call esi  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jz loc_402679  +
mov ecx [eax] +
lea edx [ebp+Msg] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
setz al  +
test al al +
jnz loc_4026B8  +
mov eax [ebp+Msg.message] +
cmp eax 206h +
jz loc_4026B8  +
cmp eax 204h +
jz loc_4026B8  +
cmp eax 205h +
jz loc_4026B8  +
lea eax [ebp+Msg] +
push eax  +
push hAccTable  +
call esi  +
push eax  +
call ds:TranslateAcceleratorW  +
test eax eax +
jnz loc_4026B8  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call edi  +
test eax eax +
jg loc_402650  +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_402700  +
test [ebp+arg_0] 1 +
jz loc_4026EC  +
push 60h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+58h] +
or edi 0FFFFFFFFh +
sub edx 10h +
mov eax edi +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_402743  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [esi+54h] +
mov eax edi +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40275D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [esi+50h] +
mov eax edi +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_402777  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [esi+4Ch] +
mov eax edi +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_402791  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [esi+48h] +
mov eax edi +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4027AB  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [esi+44h] +
sub edx 10h +
xadd [edx+0Ch] edi +
dec edi  +
test edi edi +
jg loc_4027C3  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_4027D0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx esi +
call sub_4029A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441650  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
test ecx ecx +
jz loc_40281E  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov eax [ebp+arg_0] +
push offset String  +
push offset aAppid  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 4  +
***
push ecx  +
cmp byte_45C3C8 0 +
jz loc_4028D6  +
or eax 0FFFFFFFFh +
mov esp ebp +
pop ebp  +
retn 4  +
push esi  +
push 0  +
call ds:OleInitialize  +
mov esi eax +
mov [ebp+var_4] esi +
test esi esi +
jns loc_402908  +
cmp esi 80010106h +
jnz loc_402941  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_40290F  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov byte_45C4DE 1 +
call ds:GetCommandLineW  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
call sub_4021C0  +
cmp al 1 +
jnz loc_40292F  +
push [ebp+arg_0]  +
call sub_402CB0  +
mov esi eax +
jmp loc_402932  +
mov esi [ebp+var_4] +
cmp byte_45C4DE 0 +
jz loc_402941  +
call ds:OleUninitialize  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov esi ecx +
call ds:CoReleaseServerProcess  +
mov edi eax +
test edi edi +
jnz loc_402988  +
cmp [esi+3Ch] al +
jz loc_402977  +
push dword ptr [esi+30h]  +
mov byte ptr [esi+3Dh] 1 +
call ds:SetEvent  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
push 0  +
push 0  +
push 12h  +
push dword ptr [esi+2Ch]  +
call ds:PostThreadMessageW  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edx dword_45C474 +
push esi  +
mov esi dword_45C470 +
push edi  +
mov edi ecx +
cmp esi edx +
jnb loc_4029CE  +
mov eax [esi] +
test eax eax +
jz loc_4029C7  +
mov eax [eax+1Ch] +
push 0  +
call eax  +
mov edx dword_45C474 +
add esi 4 +
cmp esi edx +
jb loc_4029B4  +
cmp dword ptr [edi+4] 0 +
jz loc_402A07  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_4029E9  +
lea ecx [edi+4] +
call sub_4019F0  +
mov dword ptr [edi+0Ch] 0 +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_4029F6  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea eax [edi+10h] +
push eax  +
call ds:DeleteCriticalSection  +
mov dword ptr [edi+4] 0 +
call sub_401700  +
cmp dword ptr [edi+4] 0 +
jz loc_402A45  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_402A27  +
lea ecx [edi+4] +
call sub_4019F0  +
mov dword ptr [edi+0Ch] 0 +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_402A34  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea eax [edi+10h] +
push eax  +
call ds:DeleteCriticalSection  +
mov dword ptr [edi+4] 0 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
call sub_401800  +
call ds:GetCurrentThreadId  +
mov esi dword_45C470 +
mov ecx dword_45C474 +
mov dword_45C4CC eax +
mov dword_45C4D0 0 +
mov dword_45C4D4 1388h +
mov dwMilliseconds 3E8h +
mov byte_45C4DC 1 +
mov byte_45C4DE 0 +
cmp esi ecx +
jnb loc_402ABA  +
mov eax [esi] +
test eax eax +
jz loc_402AB3  +
mov eax [eax+1Ch] +
push 1  +
call eax  +
mov ecx dword_45C474 +
add esi 4 +
cmp esi ecx +
jb loc_402AA0  +
mov eax offset dword_45C4A0 +
pop esi  +
retn   +
***
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402AE4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402B01  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
mov esi ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_402B43  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402B50  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441678  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_401B70  +
xor edx edx +
mov ecx eax +
test ecx ecx +
setnz dl  +
test edx edx +
jnz loc_402BD6  +
push 80004005h  +
call loc_401490  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
test edx edx +
jz loc_402C25  +
test edx 0FFFF0000h +
jnz loc_402C0F  +
movzx edi dx +
mov ecx edi +
call sub_4015F0  +
test eax eax +
jz loc_402C30  +
push edi  +
push eax  +
mov ecx esi +
call loc_403520  +
jmp loc_402C30  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402C14  +
sub ecx edi +
sar ecx 1 +
jmp loc_402C27  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031D0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
cmp dword ptr [eax-0Ch] 0 +
lea edx [eax-10h] +
mov edi [edx] +
jz loc_402CA1  +
cmp dword ptr [edx+0Ch] 0 +
lea ecx [edx+0Ch] +
jge loc_402C81  +
cmp dword ptr [eax-8] 0 +
jl loc_402CA4  +
mov dword ptr [eax-0Ch] 0 +
xor ecx ecx +
mov eax [esi] +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
***
or eax 0FFFFFFFFh +
xadd [ecx] eax +
dec eax  +
test eax eax +
jg loc_402C95  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
pop edi  +
pop esi  +
retn   +
***
push 80070057h  +
call loc_401490  +
push [ebp+arg_0]  +
call sub_4020C0  +
test eax eax +
jnz loc_402CC6  +
call sub_402620  +
jmp loc_402CC8  +
js loc_402D02  +
mov ecx dword_45C4E0 +
test ecx ecx +
jz loc_402CE2  +
mov dword_45C4E0 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
push esi  +
call loc_4019A0  +
cmp byte_45C4DC 0 +
mov esi eax +
jz loc_402CFF  +
push dwMilliseconds  +
call ds:Sleep  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_402D19  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_402D59  +
cmp dword ptr [esi+14h] 8 +
jb loc_402D59  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_402D4B  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call loc_41EED0  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call loc_402F00  +
pop ebx  +
mov dword ptr [esi+14h] 7 +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402D77  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_402DE6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_402DAA  +
mov eax [esi] +
jmp loc_402DAC  +
mov eax esi +
cmp ebx eax +
jb loc_402DE6  +
cmp ecx 8 +
jb loc_402DB9  +
mov edx [esi] +
jmp loc_402DBB  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_402DE6  +
cmp ecx 8 +
jb loc_402DCE  +
mov eax [esi] +
jmp loc_402DD0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call loc_402FE0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7FFFFFFEh +
ja loc_402E7E  +
cmp [esi+14h] edi +
jnb loc_402E14  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_403300  +
test edi edi +
jz loc_402E75  +
cmp dword ptr [esi+14h] 8 +
jb loc_402E3F  +
mov ecx [esi] +
jmp loc_402E41  +
test edi edi +
jnz loc_402E0A  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402E31  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ecx esi +
test edi edi +
jz loc_402E53  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402E6D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edx [eax] +
mov edi [esi] +
sub edi 10h +
lea ecx [edx-10h] +
cmp ecx edi +
jz loc_402EF1  +
cmp dword ptr [edi+0Ch] 0 +
push ebx  +
lea ebx [edi+0Ch] +
jl loc_402EE5  +
mov eax [ecx] +
cmp eax [edi] +
jnz loc_402EE5  +
call loc_403100  +
mov [ebp+arg_0] eax +
or ecx 0FFFFFFFFh +
xadd [ebx] ecx +
dec ecx  +
test ecx ecx +
jg loc_402ED7  +
mov ecx [edi] +
push edi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax [ebp+arg_0] +
add eax 10h +
pop ebx  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword ptr [edx-0Ch]  +
mov ecx esi +
push edx  +
call loc_4031D0  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_402F40  +
add eax eax +
cmp eax 1000h +
jb loc_402F33  +
test cl 1Fh +
jnz loc_402F45  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_402F4A  +
sub ecx eax +
cmp ecx 4 +
jb loc_402F4F  +
cmp ecx 23h +
ja loc_402F54  +
mov ecx eax +
push ecx  +
call sub_41BEC0  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 7FFFFFFEh +
ja loc_402FD3  +
cmp [ecx+14h] esi +
jnb loc_402F8A  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_403300  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_402FB2  +
cmp esi 8 +
jnb loc_402FB2  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_402D20  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_402FC6  +
mov [ecx+10h] esi +
cmp dword ptr [ecx+14h] 8 +
jb loc_402FC1  +
mov ecx [ecx] +
xor eax eax +
mov [ecx] ax +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_4030DC  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_40303A  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_4030E6  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_403020  +
mov edx [esi] +
jmp loc_403022  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call loc_403470  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 7FFFFFFEh +
ja loc_4030F0  +
cmp [esi+14h] edi +
jnb loc_40306F  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_403300  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_4030D3  +
cmp dword ptr [ebx+14h] 8 +
jb loc_403065  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40309A  +
mov edx [esi] +
jmp loc_40309C  +
test edi edi +
jnz loc_40305D  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40308C  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_4030B1  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4030CB  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aStringTooLong  +
call sub_41AA58  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx eax +
lea eax [esi+0Ch] +
jl loc_403124  +
cmp ecx [esi] +
jnz loc_403124  +
mov edi esi +
inc dword ptr [eax]  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov eax [ecx] +
push 2  +
push dword ptr [esi+4]  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jz loc_403158  +
mov eax [esi+4] +
lea ecx [edi+10h] +
mov [edi+4] eax +
mov eax [esi+4] +
lea edx ds:2[eax*2] +
push edx  +
lea eax [esi+10h] +
push eax  +
call sub_4013B0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
call loc_4036B0  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi] +
cmp [ecx-0Ch] esi +
cmovg esi [ecx-0Ch] +
cmp dword ptr [ecx-4] 1 +
jle loc_403187  +
push esi  +
mov ecx edi +
call loc_403630  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ecx-8] +
cmp ecx esi +
jge loc_4031C5  +
cmp ecx 40000000h +
jle loc_4031AF  +
add ecx 100000h +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_4035F0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_4035F0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
test esi esi +
jnz loc_4031E9  +
call loc_402C50  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [ebp+8] +
test edx edx +
jz loc_403260  +
mov eax [edi] +
push ebx  +
mov ebx edx +
sub ebx eax +
mov ecx [eax-0Ch] +
sar ebx 1 +
mov [ebp+0Ch] ecx +
test esi esi +
js loc_40326A  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40321F  +
push esi  +
mov ecx edi +
call sub_403160  +
mov edx [ebp+8] +
mov ecx [edi] +
cmp ebx [ebp+0Ch] +
ja loc_403235  +
mov edx [ecx-8] +
lea eax [ecx+ebx*2] +
push esi  +
push eax  +
call sub_4036C0  +
jmp loc_403244  +
lea eax [esi+esi] +
push eax  +
push edx  +
mov edx [ecx-8] +
add edx edx +
call sub_4013B0  +
mov eax [edi] +
add esp 8 +
pop ebx  +
cmp esi [eax-8] +
jg loc_403260  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401490  +
push 80070057h  +
call loc_401490  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4416C0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_403344  +
mov edi eax +
jmp loc_40336B  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_40336B  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_40336B  +
mov edi 7FFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
push eax  +
mov ecx esi +
call loc_4037F0  +
mov edx eax +
jmp loc_4033AA  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_4037F0  +
mov [ebp-18h] eax +
mov eax offset loc_4033A1 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov edx [ebp-18h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_18] edx +
test ebx ebx +
jz loc_4033D2  +
cmp dword ptr [esi+14h] 8 +
jb loc_4033BE  +
mov ecx [esi] +
jmp loc_4033C0  +
mov ecx esi +
test ebx ebx +
jz loc_4033D2  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push edx  +
call loc_41EED0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4033E5  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4033FD  +
mov eax [esi] +
jmp loc_4033FF  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_18] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_403417  +
mov esi eax +
xor eax eax +
mov [esi+ebx*2] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_40350D  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_4034B7  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_4034A9  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_403505  +
cmp dword ptr [esi+14h] 8 +
jb loc_4034C5  +
mov eax [esi] +
jmp loc_4034C7  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_4034E3  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call loc_41D160  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
pop ebx  +
jb loc_4034FD  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx ecx +
push edi  +
mov edi [ebp+8] +
mov eax esi +
shr eax 4 +
inc eax  +
push 6  +
movzx eax ax +
push eax  +
push edi  +
call ds:FindResourceW  +
test eax eax +
jz loc_4035D5  +
push esi  +
mov edx eax +
mov ecx edi +
call loc_401580  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4035D5  +
movzx esi word ptr [edi] +
test esi esi +
js loc_4035DE  +
mov eax [ebx] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40357E  +
push esi  +
mov ecx ebx +
call sub_403160  +
movzx ecx word ptr [edi] +
add edi 2 +
cmp ecx 0FFFFFFFFh +
jnz loc_4035A6  +
test edi edi +
jnz loc_403591  +
xor ecx ecx +
jmp loc_4035A5  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_403596  +
sub ecx edx +
sar ecx 1 +
inc ecx  +
push ecx  +
push edi  +
push esi  +
push dword ptr [ebx]  +
call sub_4216E7  +
push eax  +
call loc_4014B0  +
mov ecx [ebx] +
add esp 14h +
cmp esi [ecx-8] +
jg loc_4035DE  +
mov [ecx-0Ch] esi +
xor edx edx +
mov ecx [ebx] +
pop edi  +
lea eax [edx+1] +
mov [ecx+esi*2] dx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401490  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov edx [edi] +
sub edx 10h +
mov ecx [edx] +
cmp [edx+8] esi +
jge loc_403622  +
test esi esi +
jle loc_403622  +
mov eax [ecx] +
push 2  +
push esi  +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_403622  +
add eax 10h +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_4036B0  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov esi [ebx] +
sub esi 10h +
mov ecx [esi] +
mov eax [esi+4] +
mov [ebp-4] eax +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov edi [ebp+8] +
mov ecx eax +
push 2  +
push edi  +
mov edx [eax] +
call dword ptr [edx]  +
mov ecx eax +
mov [ebp+8] ecx +
test ecx ecx +
jz loc_4036A6  +
cmp [ebp-4] edi +
lea eax [esi+10h] +
cmovl edi [ebp-4] +
inc edi  +
lea edx [edi+edi] +
lea edi [ecx+10h] +
push edx  +
push eax  +
mov ecx edi +
call sub_4013B0  +
mov ecx [ebp+8] +
add esp 8 +
mov eax [ebp-4] +
mov [ecx+4] eax +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40369B  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_4036B0  +
push 8007000Eh  +
call loc_401490  +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov edi ecx +
lea esi [eax+eax] +
test esi esi +
jz loc_403727  +
test edi edi +
jnz loc_4036E8  +
call sub_427459  +
pop edi  +
pop esi  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp sub_427380  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_403702  +
call sub_427459  +
pop edi  +
pop esi  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp sub_427380  +
lea eax [edx+edx] +
cmp eax esi +
jnb loc_40371C  +
call sub_427459  +
pop edi  +
pop esi  +
mov dword ptr [eax] 22h +
pop ebp  +
jmp sub_427380  +
push esi  +
push ecx  +
push edi  +
call loc_41D160  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
add esp 4 +
test eax eax +
jz sub_427390  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_40374D  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_403756  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_403798  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_403760  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_403980  +
push edi  +
call sub_41BEC0  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_403773  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4037EC  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4037CF  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4037CA  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4037C0  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4037EA  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_4037EA  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4037D8  +
mov [edx] eax +
mov eax edx +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_4037FE  +
pop ebp  +
retn 4  +
***
cmp eax 7FFFFFFFh +
ja loc_403840  +
add eax eax +
cmp eax 1000h +
jb loc_403831  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_403845  +
push ecx  +
call sub_41C139  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_40384A  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_41C139  +
add esp 4 +
test eax eax +
jnz loc_4037FA  +
jmp loc_40384F  +
call sub_41CD81  +
call sub_41CD81  +
call sub_427390  +
call sub_427390  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_403887  +
mov eax [esi+10h] +
add eax 1 +
jz loc_403895  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_41D160  +
add esp 0Ch +
jmp loc_403895  +
test edi edi +
jz loc_40388F  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4038C2  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 4  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax] +
mov ebx esi +
mov [ebp+var_8] eax +
mov [ebp+var_4] esi +
mov edi [esi+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_403910  +
mov esi [ebp+arg_4] +
push esi  +
lea ecx [edi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_403903  +
mov edi [edi+8] +
jmp loc_403907  +
mov ebx edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_4038F1  +
mov esi [ebp+var_4] +
cmp ebx esi +
jz loc_403936  +
mov ecx [ebp+arg_4] +
lea eax [ebx+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
js loc_403936  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov byte ptr [eax+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
push ecx  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
push ecx  +
mov ecx [ebp+var_8] +
call sub_403A60  +
mov ecx [ebp+var_8] +
push eax  +
add eax 10h +
push eax  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
call sub_403AC0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
pop edi  +
pop esi  +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi+2Ch] +
push edi  +
lea edi [esi+18h] +
cmp eax 8 +
jb loc_40399A  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_402F00  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_4039B0  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4039C8  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4039E6  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push ebx  +
push edi  +
cmp dword ptr [edx+14h] 8 +
lea edi [edx+10h] +
jb loc_403A03  +
mov edx [edx] +
cmp dword ptr [ecx+14h] 8 +
lea ebx [ecx+10h] +
jb loc_403A0E  +
mov ecx [ecx] +
mov edi [edi] +
mov ebx [ebx] +
cmp ebx edi +
push esi  +
mov esi edi +
cmovb esi ebx +
test esi esi +
jnz loc_403A32  +
xor eax eax +
pop esi  +
test eax eax +
jnz loc_403A57  +
cmp edi ebx +
jbe loc_403A53  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_403A45  +
add ecx 2 +
add edx 2 +
sub esi 1 +
jmp loc_403A1C  +
movzx eax word ptr [ecx] +
cmp ax [edx] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_403A20  +
sbb eax eax +
neg eax  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
call loc_403D00  +
mov esi eax +
lea edi [esi+10h] +
mov word ptr [esi+0Ch] 0 +
test edi edi +
jz loc_403AAF  +
mov ecx [ebp+arg_4] +
xor eax eax +
mov ecx [ecx] +
push ecx  +
mov dword ptr [edi+14h] 7 +
mov ecx edi +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
call sub_403860  +
xor eax eax +
mov dword ptr [edi+2Ch] 7 +
mov dword ptr [edi+28h] 0 +
mov [edi+18h] ax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4416E0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_403B24  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebx] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_403B69  +
mov ecx [ebp+arg_8] +
lea eax [esi+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
jns loc_403CC7  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 1  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp esi edi +
jnz loc_403BAB  +
mov esi [edi+8] +
push [ebp+arg_8]  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_403CC7  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 0  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
lea eax [esi+10h] +
push eax  +
mov ecx ebx +
call sub_4039F0  +
test eax eax +
jns loc_403C2F  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_403D60  +
push ebx  +
mov ebx [ebp+var_14] +
lea ecx [ebx+10h] +
call sub_4039F0  +
test eax eax +
jns loc_403C2C  +
mov eax [ebx+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_403C0A  +
mov esi [ebp+arg_0] +
push ebx  +
push 0  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
push ebx  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_403CC7  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_4037A0  +
mov ebx [ebp+var_14] +
cmp ebx edi +
jz loc_403C62  +
mov ecx [ebp+arg_8] +
lea eax [ebx+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
jns loc_403CC7  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_403C94  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov esi [ebp+arg_0] +
push ebx  +
push 1  +
push esi  +
call loc_403DC0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_403D40  +
push 0  +
push 0  +
call sub_41EE5A  +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
mov ecx [ebp+var_1C] +
push eax  +
call sub_403FE0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push 40h  +
mov esi ecx +
call sub_41C139  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_403D31  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_403D22  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_403D2D  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_427390  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [esi+10h] +
call sub_403980  +
push esi  +
call sub_41BEC0  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403D72  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
***
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403D93  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403DB9  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403D83  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403DB1  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_403DB1  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_403DA0  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403DBB  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 3FFFFFEh +
jnb loc_403FB4  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_403DF7  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_403E16  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_403E09  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_403E16  +
mov [ecx] ebx +
jmp loc_403E16  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_403E16  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_403F9F  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_403EE0  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_403EE6  +
cmp eax [ecx+8] +
jnz loc_403E81  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403E5C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_403E6E  +
mov [ecx+4] edx +
jmp loc_403E7C  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_403E79  +
mov [ecx] edx +
jmp loc_403E7C  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403EAB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_403EC3  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_403F8F  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_403ED6  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_403F8F  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_403F8F  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_403F03  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_403F92  +
cmp eax [ecx] +
jnz loc_403F43  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403F1C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_403F2E  +
mov [ecx+4] edx +
jmp loc_403F3D  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_403F3B  +
mov [ecx+8] edx +
jmp loc_403F3D  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403F6D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_403F7F  +
mov [ecx+4] esi +
jmp loc_403F8D  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_403F8A  +
mov [ecx] esi +
jmp loc_403F8D  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_403E25  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [ebp+18h] +
lea ecx [esi+10h] +
call sub_403980  +
push esi  +
call sub_41BEC0  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_41AA58  +
push 0FFFFFFFFh  +
push offset loc_441700  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx ecx +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0 +
mov al 1 +
mov ecx [edx] +
mov edi ecx +
mov ebx [ebp+arg_8] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_14] al +
mov esi [ecx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40405C  +
nop   +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
mov edi esi +
call sub_4039F0  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_40404D  +
mov esi [esi] +
jmp loc_404050  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_404030  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_18] +
mov esi edi +
mov [ebp+arg_8] esi +
test al al +
jz loc_4040A5  +
cmp edi [ecx] +
jnz loc_40409A  +
push [ebp+arg_C]  +
push ecx  +
push edi  +
push 1  +
mov ecx edx +
lea eax [ebp+arg_8] +
push eax  +
call loc_403DC0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call loc_403D60  +
mov esi [ebp+arg_8] +
push ebx  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_4040D0  +
push [ebp+arg_C]  +
push ecx  +
mov ecx [ebp+var_18] +
push edi  +
push [ebp+var_14]  +
jmp loc_404072  +
push dword ptr [ebp+14h]  +
call sub_403D40  +
push 0  +
push 0  +
call sub_41EE5A  +
mov edi [ebp+arg_C] +
lea ecx [edi+10h] +
call sub_403980  +
push edi  +
call sub_41BEC0  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [ecx] +
cmp eax [edx] +
jnz loc_404134  +
mov eax [ecx+4] +
cmp eax [edx+4] +
jnz loc_404134  +
mov eax [ecx+8] +
cmp eax [edx+8] +
jnz loc_404134  +
mov eax [ecx+0Ch] +
cmp eax [edx+0Ch] +
jnz loc_404134  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
retn   +
***
and esp 0FFFFFFF8h +
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_404140  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_429949  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_4041B5  +
mov eax [ebp+arg_4] +
movzx edx ax +
mov eax edx +
shl edx 10h +
push edi  +
mov edi [ebp+arg_0] +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
test ecx ecx +
jnz loc_4041C7  +
xor eax eax +
retn   +
***
lea edx [ecx+2] +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
mov edi edx +
test esi esi +
jnz loc_404205  +
xor eax eax +
jmp loc_40421F  +
mov eax esi +
lea edx [eax+2] +
retn 0F8D1h  +
***
lea eax ds:2[eax*2] +
mov ecx ebx +
push eax  +
push esi  +
lea edx [edi+edi] +
call sub_4013B0  +
add esp 8 +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
test eax eax +
jle locret_404252  +
movzx eax ax +
or eax 80070000h +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
test eax eax +
js loc_40428D  +
jnz loc_40427C  +
mov dword ptr [esi] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
push 0  +
call ds:SysAllocStringLen  +
mov [esi] eax +
test eax eax +
jnz loc_404275  +
jmp loc_404297  +
push 80070057h  +
call loc_401490  +
push 8007000Eh  +
call loc_401490  +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
lea ecx [ebp-84h] +
push 40h  +
push ecx  +
push eax  +
call ds:StringFromGUID2  +
lea eax [ebp-84h] +
push eax  +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jz loc_4042FF  +
mov ecx [ebp-4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call loc_401490  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov eax [esi] +
cmp edi eax +
jz loc_404340  +
push eax  +
call ds:SysFreeString  +
test edi edi +
jz loc_40433A  +
push edi  +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_404340  +
jmp loc_404348  +
mov dword ptr [esi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call loc_401490  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
cmp word ptr [esi] 8 +
jnz loc_404375  +
cmp [esi+8] edi +
jz loc_40439A  +
push esi  +
call ds:VariantClear  +
test eax eax +
js loc_4043A2  +
mov eax 8 +
push edi  +
mov [esi] ax +
call ds:SysAllocString  +
mov [esi+8] eax +
test eax eax +
jnz loc_40439A  +
test edi edi +
jnz loc_4043A8  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
call loc_401490  +
mov eax 0Ah +
mov dword ptr [esi+8] 8007000Eh +
push 8007000Eh  +
mov [esi] ax +
call loc_401490  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
test esi esi +
jz loc_404416  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_404416  +
mov [esi] eax +
call ds:GetCurrentThreadId  +
push offset stru_45C440  +
mov [esi+4] eax +
call ds:EnterCriticalSection  +
mov eax dword_45C458 +
mov [esi+8] eax +
push offset stru_45C440  +
mov dword_45C458 esi +
call ds:LeaveCriticalSection  +
pop esi  +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
push 1  +
push 0C0000005h  +
call ds:RaiseException  +
push ecx  +
push ebx  +
mov ebx dword_45C3C4 +
test ebx ebx +
jz loc_404499  +
add ebx 4 +
jz loc_404499  +
push edi  +
push offset unk_45B5EE  +
push 0Ch  +
call sub_41C4E6  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_404467  +
pop edi  +
mov eax 8007000Eh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
push esi  +
lea esi [ebx+0Ch] +
mov dword ptr [edi] offset sub_404AE0 +
push esi  +
mov [edi+4] eax +
call ds:EnterCriticalSection  +
mov ecx [ebx+8] +
mov [edi+8] ecx +
push esi  +
mov [ebx+8] edi +
call ds:LeaveCriticalSection  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 80070057h +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
test esi esi +
jz loc_4044ED  +
mov edi ds:CharNextW +
nop   +
cmp word ptr [esi] 0 +
jz loc_4044ED  +
mov eax offset asc_450348 +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_4044E4  +
cmp [esi] cx +
jz loc_4044F2  +
push eax  +
call edi  +
test eax eax +
jnz loc_4044D0  +
push esi  +
call edi  +
mov esi eax +
test esi esi +
jnz loc_4044C0  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
sub esp 8 +
push edi  +
mov edi edx +
test ecx ecx +
jnz loc_404519  +
mov eax 80070057h +
pop edi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ecx] +
lea edx [ebp+var_8] +
push esi  +
push edx  +
push offset unk_44FEC8  +
push ecx  +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
js loc_404561  +
mov eax [ebp+var_8] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
js loc_404561  +
mov eax [ebp+var_4] +
push [ebp+arg_4]  +
push edi  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_40456E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_40457B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 8 +
push edi  +
mov edi edx +
test ecx ecx +
jnz loc_4045A9  +
mov eax 80070057h +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ecx] +
lea edx [ebp+var_8] +
push esi  +
push edx  +
push offset unk_44FEC8  +
push ecx  +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
js loc_4045EE  +
mov eax [ebp+var_8] +
lea edx [ebp+var_4] +
push edx  +
push edi  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
js loc_4045EE  +
mov eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4045FB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_404608  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
push esi  +
mov esi edx +
test ecx ecx +
jz loc_404719  +
test esi esi +
jz loc_404719  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_40464D  +
mov eax 80004003h +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
jnz loc_404688  +
cmp dword ptr [edi+4] 0 +
jnz loc_404688  +
cmp dword ptr [edi+8] 0C0h +
jnz loc_404688  +
cmp dword ptr [edi+0Ch] 46000000h +
jnz loc_404688  +
mov esi [esi+4] +
add esi ecx +
push esi  +
mov eax [esi] +
call dword ptr [eax+4]  +
mov ecx [ebp+arg_4] +
xor eax eax +
pop edi  +
mov [ecx] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov edx [esi+8] +
push ebx  +
test edx edx +
jz loc_4046E6  +
mov ecx [esi] +
xor ebx ebx +
test ecx ecx +
setz bl  +
test ebx ebx +
jnz loc_4046BE  +
mov eax [ecx] +
cmp eax [edi] +
jnz loc_4046D9  +
mov eax [ecx+4] +
cmp eax [edi+4] +
jnz loc_4046D9  +
mov eax [ecx+8] +
cmp eax [edi+8] +
jnz loc_4046D9  +
mov eax [ecx+0Ch] +
cmp eax [edi+0Ch] +
jnz loc_4046D9  +
mov eax [ebp+arg_4] +
cmp edx 1 +
jz loc_4046FD  +
push dword ptr [esi+4]  +
push eax  +
push edi  +
push [ebp+var_4]  +
call edx  +
test eax eax +
jz loc_40470E  +
test ebx ebx +
jnz loc_4046D9  +
test eax eax +
js loc_4046EB  +
mov edx [esi+14h] +
add esi 0Ch +
mov eax [ebp+arg_4] +
test edx edx +
jnz loc_404690  +
mov eax 80004002h +
mov ecx [ebp+arg_4] +
pop ebx  +
pop edi  +
pop esi  +
mov dword ptr [ecx] 0 +
mov esp ebp +
pop ebp  +
retn 8  +
mov esi [esi+4] +
add esi [ebp+var_4] +
push esi  +
mov eax [esi] +
call dword ptr [eax+4]  +
mov ecx [ebp+arg_4] +
mov [ecx] esi +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 80070057h +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset stru_45C440  +
xor edi edi +
call ds:EnterCriticalSection  +
mov esi dword_45C458 +
test esi esi +
jz loc_404792  +
call ds:GetCurrentThreadId  +
xor ecx ecx +
cmp [esi+4] eax +
jz loc_40476F  +
mov ecx esi +
mov esi [esi+8] +
test esi esi +
jnz loc_404751  +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
mov eax [esi+8] +
test ecx ecx +
jnz loc_40478D  +
mov dword_45C458 eax +
mov edi [esi] +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
mov [ecx+8] eax +
mov edi [esi] +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov ecx [eax+ecx] +
mov dword ptr [edx] 0 +
test ecx ecx +
jz loc_4047D6  +
mov eax [ecx] +
push edx  +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [eax]  +
pop ebp  +
retn 10h  +
mov eax 80004002h +
pop ebp  +
retn 10h  +
***
mov dword ptr [ecx] 0 +
mov eax ecx +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0FFFFFFFFh +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
push esi  +
mov esi ecx +
cmp [esi+0Ch] eax +
jz loc_404815  +
cmp [esi+14h] eax +
jnz loc_40481D  +
push dword ptr [ebp+14h]  +
call sub_404B70  +
mov ecx [esi+0Ch] +
mov [ebp-0Ch] ecx +
test ecx ecx +
jz loc_40490B  +
mov ecx [esi+14h] +
mov [ebp-8] ecx +
push ebx  +
push edi  +
test ecx ecx +
jz loc_4048F7  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_4048F7  +
mov eax [ebp+0Ch] +
mov edx [eax] +
mov [ebp+14h] edx +
test edx edx +
jnz loc_404855  +
xor ebx ebx +
jmp loc_404872  +
mov ebx edx +
lea ecx [ebx+2] +
sar ebx 1 +
mov edi [esi+18h] +
sub edi 1 +
js loc_4048F7  +
lea esi ds:1[edi*2] +
add esi edi +
lea esi [ecx+esi*4] +
mov [ebp-4] esi +
mov esi [esi] +
cmp ebx esi +
jnz loc_4048E9  +
mov ecx [ebp-4] +
add esi esi +
mov ecx [ecx-4] +
sub esi 4 +
jb loc_4048B4  +
mov eax [ecx] +
cmp eax [edx] +
jnz loc_4048B9  +
add ecx 4 +
add edx 4 +
sub esi 4 +
jnb loc_4048A3  +
cmp esi 0FFFFFFFCh +
jz loc_404912  +
mov al [ecx] +
cmp al [edx] +
jnz loc_4048E6  +
cmp esi 0FFFFFFFDh +
jz loc_404912  +
mov al [ecx+1] +
cmp al [edx+1] +
jnz loc_4048E6  +
cmp esi 0FFFFFFFEh +
jz loc_404912  +
mov al [ecx+2] +
cmp al [edx+2] +
jnz loc_4048E6  +
cmp esi 0FFFFFFFFh +
jz loc_404912  +
mov al [ecx+3] +
cmp al [edx+3] +
jz loc_404912  +
mov edx [ebp+14h] +
mov esi [ebp-4] +
sub esi 0Ch +
sub edi 1 +
mov [ebp-4] esi +
jns loc_404890  +
push dword ptr [ebp+18h]  +
mov ecx [ebp-0Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+28h]  +
pop edi  +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov ecx [ebp-8] +
lea eax [edi+edi*2] +
pop edi  +
pop ebx  +
pop esi  +
mov ecx [ecx+eax*4+8] +
mov eax [ebp+18h] +
mov [eax] ecx +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_44173A  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_1C] esi +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_404AC8  +
mov eax [ebp+var_18] +
xor ecx ecx +
mov [ebp+var_10] ecx +
movzx eax word ptr [eax+2Ch] +
mov ebx eax +
mov [esi+18h] eax +
mov [esi+14h] ecx +
test ebx ebx +
jz loc_404A16  +
mov edx 0Ch +
mul  edx +
push offset unk_45B5EE  +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call sub_41C546  +
add esp 8 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4049E4  +
push offset loc_401670  +
push offset loc_4047E0  +
push ebx  +
mov [eax] ebx +
add eax 4 +
push 0Ch  +
push eax  +
mov [ebp+var_10] eax +
call sub_41C54F  +
mov ecx [ebp+var_10] +
jmp loc_4049E9  +
xor ecx ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jnz loc_404A16  +
push [ebp+var_18]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
mov eax 8007000Eh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
xor ebx ebx +
cmp [esi+18h] ebx +
jle loc_404AB9  +
mov esi ecx +
mov eax [edi] +
lea ecx [ebp+var_14] +
push ecx  +
push ebx  +
push edi  +
call dword ptr [eax+14h]  +
test eax eax +
js loc_404AA7  +
mov [ebp+arg_0] 0 +
push 0  +
push 0  +
push 0  +
mov [ebp+var_4] 1 +
lea eax [ebp+arg_0] +
mov ecx [edi] +
push eax  +
mov eax [ebp+var_14] +
push dword ptr [eax]  +
push edi  +
call dword ptr [ecx+30h]  +
test eax eax +
js loc_404A8D  +
mov eax [ebp+arg_0] +
mov ecx [esi] +
mov [ebp+var_20] eax +
mov [ebp+arg_0] 0 +
cmp ecx eax +
jz loc_404A78  +
push ecx  +
call ds:SysFreeString  +
mov eax [ebp+var_20] +
mov [esi] eax +
push dword ptr [esi]  +
call ds:SysStringLen  +
mov ecx [ebp+var_14] +
mov [esi+4] eax +
mov eax [ecx] +
mov [esi+8] eax +
jmp loc_404A90  +
mov ecx [ebp+var_14] +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+50h]  +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_0]  +
call ds:SysFreeString  +
mov eax [ebp+var_1C] +
inc ebx  +
add esi 0Ch +
cmp ebx [eax+18h] +
jl loc_404A23  +
mov esi eax +
mov eax [ebp+var_10] +
push [ebp+var_18]  +
mov [esi+14h] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_404B5C  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_404B18  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [edi+14h] +
mov dword ptr [edi+0Ch] 0 +
test eax eax +
jz loc_404B55  +
push offset loc_401670  +
lea esi [eax-4] +
mov [ebp+var_4] 0 +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call sub_41C16C  +
mov eax [esi] +
lea eax [eax+eax*2] +
lea eax ds:4[eax*4] +
push eax  +
push esi  +
call sub_41BED6  +
add esp 8 +
mov dword ptr [edi+14h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4417BC  +
mov eax large fs:0 +
push eax  +
sub esp 224h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jz loc_404BB3  +
cmp dword ptr [esi+14h] 0 +
jz loc_404BB3  +
xor eax eax +
jmp loc_404DB0  +
mov ebx dword_45C3C4 +
add ebx 10h +
mov [ebp+var_230] ebx +
push ebx  +
mov [ebp+var_4] 0 +
call ds:EnterCriticalSection  +
cmp dword ptr [esi+0Ch] 0 +
mov edi 80004005h +
mov [ebp+var_22C] 1 +
jnz loc_404D8E  +
mov ecx [esi+4] +
mov eax dword_45C408 +
mov [ebp+pptlib] 0 +
cmp eax [ecx] +
jnz loc_404C87  +
mov eax dword_45C40C +
cmp eax [ecx+4] +
jnz loc_404C87  +
mov eax dword_45C410 +
cmp eax [ecx+8] +
jnz loc_404C87  +
mov eax dword_45C414 +
cmp eax [ecx+0Ch] +
jnz loc_404C87  +
mov eax 0FFFFh +
cmp [esi+8] ax +
jnz loc_404C87  +
cmp [esi+0Ah] ax +
jnz loc_404C87  +
push 104h  +
lea eax [ebp+szFile] +
push eax  +
push hModule  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_404D90  +
cmp eax 104h +
jz loc_404D90  +
lea eax [ebp+pptlib] +
mov [ebp+var_21C] 0 +
push eax  +
lea eax [ebp+szFile] +
push eax  +
call ds:LoadTypeLib  +
lea ecx [ebp+var_21C] +
mov edi eax +
call sub_40DF60  +
jmp loc_404CA4  +
lea eax [ebp+pptlib] +
push eax  +
push [ebp+lcid]  +
movzx eax word ptr [esi+0Ah] +
push eax  +
movzx eax word ptr [esi+8] +
push eax  +
push ecx  +
call ds:LoadRegTypeLib  +
mov edi eax +
test edi edi +
js loc_404D90  +
mov [ebp+var_228] 0 +
mov byte ptr [ebp+var_4] 1 +
lea edx [ebp+var_228] +
mov eax [ebp+pptlib] +
push edx  +
push dword ptr [esi]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
test edi edi +
js loc_404D6C  +
mov eax [ebp+var_228] +
mov [ebp+var_220] eax +
test eax eax +
jz loc_404CF5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+var_228] +
mov [ebp+var_21C] 0 +
lea edx [ebp+var_21C] +
mov byte ptr [ebp+var_4] 3 +
mov ecx [eax] +
push edx  +
push offset unk_44FCD4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
js loc_404D2A  +
lea eax [ebp+var_21C] +
push eax  +
lea ecx [ebp+var_220] +
call sub_40FE10  +
mov eax [ebp+var_220] +
push esi  +
push ecx  +
mov [ebp+var_220] 0 +
mov [esi+0Ch] eax +
call sub_404430  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_21C] +
test eax eax +
jz loc_404D58  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_220] +
test eax eax +
jz loc_404D6C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+pptlib] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_228] +
test eax eax +
jz loc_404D90  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_404D90  +
xor edi edi +
mov eax [esi+0Ch] +
test eax eax +
jz loc_404DA7  +
cmp dword ptr [esi+14h] 0 +
jnz loc_404DA7  +
push eax  +
mov ecx esi +
call sub_404930  +
mov edi eax +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4417F8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor eax eax +
test ecx ecx +
setnz al  +
test eax eax +
jnz loc_404E0C  +
push 80070057h  +
call loc_401490  +
mov [ebp+var_10] 0 +
lea edi [ebp+var_10] +
mov [ebp+var_4] 0 +
mov eax [ecx] +
mov esi 1Dh +
push edi  +
push edx  +
push ecx  +
call dword ptr [eax+38h]  +
test eax eax +
jns loc_404E55  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
test eax eax +
jz loc_404E42  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_10] +
lea edx [ebp+var_14] +
mov [ebp+var_14] 0 +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
mov edx [ebp+var_14] +
test eax eax +
js loc_404EC1  +
test edx edx +
jz loc_404ECF  +
mov eax [edx+28h] +
cmp eax 6 +
jz loc_404E80  +
test eax eax +
jnz loc_404EC1  +
movzx ecx word ptr [edx+40h] +
cmp ecx esi +
jnz loc_404E9B  +
mov edx [edx+3Ch] +
mov ecx [ebp+var_10] +
call sub_404DD0  +
mov edx [ebp+var_14] +
movzx esi ax +
jmp loc_404EC1  +
sub eax 0 +
jz loc_404EBC  +
sub eax 3 +
jz loc_404EB5  +
sub eax 1 +
jz loc_404EAE  +
mov esi ecx +
jmp loc_404EC1  +
mov esi 9 +
jmp loc_404EC1  +
mov esi 0Dh +
jmp loc_404EC1  +
mov esi 3 +
test edx edx +
jz loc_404ECF  +
mov eax [ebp+var_10] +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_404EE3  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov ax si +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push edi  +
mov edi ecx +
test edi edi +
jnz loc_404F17  +
mov eax 80070057h +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi] +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
mov [ebp+var_4] 0 +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_405066  +
mov ecx [ebp+var_8] +
xor eax eax +
push ebx  +
push esi  +
xor esi esi +
cmp ax [ecx+2Ch] +
jnb loc_404F7B  +
mov ebx [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
push edi  +
call dword ptr [eax+14h]  +
test eax eax +
js loc_405064  +
mov ecx [ebp+var_4] +
cmp [ecx] ebx +
jz loc_404F78  +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+50h]  +
mov ecx [ebp+var_8] +
inc esi  +
mov [ebp+var_4] 0 +
movzx eax word ptr [ecx+2Ch] +
cmp esi eax +
jl loc_404F42  +
jmp loc_404F7B  +
mov ecx [ebp+var_8] +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+4Ch]  +
mov edx [ebp+var_4] +
test edx edx +
jz loc_404F93  +
movzx eax word ptr [edx+18h] +
cmp ax 8 +
jle loc_404F9F  +
pop esi  +
pop ebx  +
mov eax 80004005h +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
xor ecx ecx +
mov [ebp+var_C] 0 +
cmp cx ax +
jge loc_40501D  +
mov esi [ebp+arg_8] +
xor ebx ebx +
add esi 8 +
mov eax [edx+8] +
movzx eax word ptr [ebx+eax+4] +
mov [esi] ax +
cmp eax 1Ah +
jnz loc_404FD7  +
mov eax [edx+8] +
mov ecx 4000h +
mov eax [ebx+eax] +
or cx [eax+4] +
mov [esi] cx +
cmp word ptr [esi] 1Bh +
jnz loc_404FEF  +
mov eax [edx+8] +
mov ecx 2000h +
mov eax [ebx+eax] +
or cx [eax+4] +
mov [esi] cx +
cmp word ptr [esi] 1Dh +
jnz loc_405008  +
mov edx [edx+8] +
mov ecx edi +
mov edx [ebx+edx] +
call sub_404DD0  +
mov edx [ebp+var_4] +
mov [esi] ax +
mov ecx [ebp+var_C] +
add esi 2 +
movsx eax word ptr [edx+18h] +
inc ecx  +
add ebx 10h +
mov [ebp+var_C] ecx +
cmp ecx eax +
jl loc_404FB5  +
movzx ecx word ptr [edx+24h] +
lea eax [ecx-16h] +
cmp eax 3 +
ja loc_405047  +
jmp ds:off_40506C[eax*4]  +
mov ecx 3 +
jmp loc_405047  +
mov ecx 13h +
jmp loc_405047  +
xor ecx ecx +
jmp loc_405047  +
mov ecx 0Ah +
mov ebx [ebp+arg_8] +
push edx  +
push edi  +
mov [ebx+4] cx +
mov eax [edx+14h] +
mov [ebx] eax +
mov ax [edx+18h] +
mov [ebx+6] ax +
mov eax [edi] +
call dword ptr [eax+50h]  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_44182B  +
mov eax large fs:0 +
push eax  +
sub esp 404h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax edx +
mov [ebp-400h] eax +
mov edi ecx +
mov dword ptr [eax] 0 +
test edi edi +
jz loc_405257  +
mov eax [edi] +
lea ecx [ebp-3FCh] +
push ecx  +
push 2  +
lea ecx [ebp-404h] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_405259  +
mov eax [edi] +
lea ecx [ebp-3FCh] +
push ecx  +
push 4  +
lea ecx [ebp-410h] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_405259  +
mov eax [edi] +
lea ecx [ebp-3FCh] +
push ecx  +
push 4  +
lea ecx [ebp-408h] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_405259  +
mov eax [ebp-408h] +
test eax eax +
jz loc_4051C0  +
push eax  +
lea ecx [ebp-40Ch] +
call loc_404260  +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-40Ch] +
push esi  +
call ds:SysStringLen  +
test eax eax +
jnz loc_405165  +
push esi  +
mov ebx 8007000Eh +
call ds:SysFreeString  +
mov eax ebx +
jmp loc_405259  +
mov eax [ebp-408h] +
lea eax ds:2[eax*2] +
push eax  +
push 0  +
push esi  +
call sub_41E790  +
mov ecx [edi] +
lea eax [ebp-3FCh] +
add esp 0Ch +
push eax  +
mov eax [ebp-408h] +
add eax eax +
push eax  +
push esi  +
push edi  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
test ebx ebx +
jns loc_4051A9  +
push esi  +
call ds:SysFreeString  +
mov eax ebx +
jmp loc_405259  +
mov eax [ebp-400h] +
push 0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax] esi +
call ds:SysFreeString  +
mov cx [ebp-404h] +
mov eax 37Ah +
cmp cx ax +
jz loc_4051EF  +
mov eax 37Bh +
cmp cx ax +
jz loc_4051EF  +
mov esi 376h +
xor edx edx +
cmp cx si +
mov eax 80004005h +
cmovz eax edx +
jmp loc_405259  +
mov eax [edi] +
lea ecx [ebp-3FCh] +
push ecx  +
push 4  +
lea ecx [ebp-400h] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
js loc_405259  +
mov edx [ebp-400h] +
sub edx 4 +
mov [ebp-400h] edx +
jz loc_405257  +
push dword ptr [ebp-37h]  +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 14h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push dword ptr [ecx]  +
call ds:GetParent  +
push 8  +
lea ecx [ebp+String1] +
push ecx  +
push eax  +
call ds:GetClassNameW  +
test eax eax +
jnz loc_4052B7  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
push offset String2  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpW  +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
xor ecx ebp +
inc eax  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441868  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+ppv] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [ebp+var_28] eax +
mov [ebp+var_2C] ecx +
test ebx ebx +
jnz loc_40532A  +
mov eax 80004003h +
jmp loc_4054AA  +
mov dword ptr [ebx] 0 +
mov edi 80004005h +
mov byte ptr [eax] 0 +
test esi esi +
jz loc_4054A8  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_4054A8  +
cmp eax 4Dh +
jz loc_405356  +
cmp eax 6Dh +
jnz loc_4053C7  +
movzx eax word ptr [esi+2] +
cmp eax 53h +
jz loc_405364  +
cmp eax 73h +
jnz loc_4053C7  +
movzx eax word ptr [esi+4] +
cmp eax 48h +
jz loc_405372  +
cmp eax 68h +
jnz loc_4053C7  +
movzx eax word ptr [esi+6] +
cmp eax 54h +
jz loc_405380  +
cmp eax 74h +
jnz loc_4053C7  +
movzx eax word ptr [esi+8] +
cmp eax 4Dh +
jz loc_40538E  +
cmp eax 6Dh +
jnz loc_4053C7  +
movzx eax word ptr [esi+0Ah] +
cmp eax 4Ch +
jz loc_40539C  +
cmp eax 6Ch +
jnz loc_4053C7  +
cmp word ptr [esi+0Ch] 3Ah +
jnz loc_4053C7  +
push ebx  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
mov eax [ebp+var_28] +
mov byte ptr [eax] 1 +
mov eax edi +
jmp loc_4054AA  +
mov ecx esi +
call loc_4044B0  +
test eax eax +
jz loc_4053F6  +
push ebx  +
push offset riid  +
push 1  +
push 0  +
push offset stru_44FB1C  +
call ds:CoCreateInstance  +
mov edi eax +
mov eax [ebp+var_28] +
mov byte ptr [eax] 1 +
mov eax edi +
jmp loc_4054AA  +
mov ecx esi +
call loc_4041C0  +
cmp eax 0FFh +
jge loc_4054A4  +
cmp word ptr [esi] 7Bh +
lea eax [ebp+rclsid] +
push eax  +
push esi  +
jnz loc_40541B  +
call ds:CLSIDFromString  +
jmp loc_405421  +
call ds:CLSIDFromProgID  +
mov edi eax +
test edi edi +
js loc_4054A4  +
mov esi [ebp+var_2C] +
push esi  +
call ds:SysStringLen  +
test eax eax +
jz loc_40548E  +
mov [ebp+var_28] 0 +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
push offset stru_450328  +
push 0  +
push 1  +
lea eax [ebp+rclsid] +
push eax  +
call ds:CoGetClassObject  +
mov edi eax +
test edi edi +
js loc_405476  +
mov eax [ebp+var_28] +
push ebx  +
push esi  +
push offset riid  +
mov ecx [eax] +
push 0  +
push 0  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_28] +
test eax eax +
jz loc_4054A4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
jmp loc_4054AA  +
push ebx  +
push offset riid  +
push 1  +
push 0  +
lea eax [ebp+rclsid] +
push eax  +
call ds:CoCreateInstance  +
mov edi eax +
mov eax edi +
jmp loc_4054AA  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
retn 18h  +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
test ebx ebx +
jnz loc_4054F9  +
mov eax 80004003h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi-20h] 0 +
jnz loc_405533  +
push [ebp+arg_4]  +
lea eax [edi-4] +
push eax  +
push offset unk_459C90  +
call sub_410500  +
add esp 8 +
movzx eax ax +
push eax  +
push 0  +
push 0  +
push 0CF0000h  +
push offset WindowName  +
push 0  +
push ecx  +
lea ecx [edi-24h] +
call sub_40FFF0  +
mov eax [edi-20h] +
pop edi  +
mov [ebx] eax +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
retn 8  +
***
mov eax 800401A1h +
retn 8  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp [edi+8] esi +
jz loc_40559A  +
test esi esi +
jz loc_40558A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [edi+8] +
mov [edi+8] esi +
test eax eax +
jz loc_40559A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn 0Ch  +
***
retn 10h  +
***
mov eax 1 +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_441890  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+2Ch] +
test edx edx +
jz loc_405612  +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+14h] +
test eax eax +
jz loc_40561F  +
push eax  +
call sub_41A775  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
test ebx ebx +
jnz loc_405649  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi-20h] 0 +
jnz loc_405683  +
push [ebp+arg_4]  +
lea eax [edi-4] +
push eax  +
push offset unk_459B70  +
call sub_410500  +
add esp 8 +
movzx eax ax +
push eax  +
push 0  +
push 0  +
push 0CF0000h  +
push offset aAxwinUiWindow  +
push 0  +
push ecx  +
lea ecx [edi-24h] +
call sub_40FFF0  +
mov eax [edi-20h] +
pop edi  +
mov [ebx] eax +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF0h +
sub esp 1Ch +
mov eax ds:DefWindowProcW +
push esi  +
mov esi ecx +
push 8  +
mov dword ptr [esi+50h] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov [esi+20h] eax +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+60h] 0 +
mov dword ptr [esi+64h] 0 +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+6Ch] 0 +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+74h] 0 +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 0 +
mov dword ptr [esi+0E8h] 0 +
mov eax [esi+0C8h] +
and dword ptr [esi+98h] 0FFFFFF40h +
and eax 0FFFFFFFBh +
or eax 3 +
mov dword ptr [esi+0CCh] 0 +
mov [esi+0C8h] eax +
call ds:GetSysColor  +
and dword ptr [esi+98h] 0FFFFFFBFh +
xorps xmm0 xmm0 +
mov [esi+0D0h] eax +
mov eax [esi+0C8h] +
movq qword ptr [esp+14h] xmm0 +
and eax 0FFFFFFAFh +
mov [esp+20h+var_10] 0 +
or eax 28h +
mov [esp+20h+var_4] 0 +
movups xmm0 oword ptr [esp+20h+var_10] +
mov [esi+0C8h] eax +
mov eax esi +
mov dword ptr [esi+0D4h] 400h +
movups oword ptr [esi+80h] xmm0 +
mov dword ptr [esi+90h] 0 +
xorps xmm0 xmm0 +
mov dword ptr [esi+94h] 0CDCDCDCDh +
mov dword ptr [esi+0E0h] 4 +
mov dword ptr [esi+0E4h] 0 +
mov dword ptr [esi+58h] 0 +
mov byte ptr [esi+5Ch] 1 +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+9Ch] 0 +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+0ACh] 0 +
mov dword ptr [esi+0B0h] 0 +
movups oword ptr [esi+0B4h] xmm0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
cmp [ebp+arg_14] 0 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
jnz loc_405E0F  +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_10] +
cmp esi 14h +
jnz loc_40599C  +
xor ecx ecx +
mov eax 1 +
cmp [edi+70h] ecx +
mov dword ptr [ebx] 1 +
cmovz eax ecx +
test eax eax +
jz loc_405A36  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi 0Fh +
jnz loc_4059CD  +
lea eax [esp+18h+var_8] +
mov [esp+18h+var_8] 1 +
push eax  +
sub esp 0Ch +
call sub_406380  +
cmp [esp+18h+var_8] 0 +
mov [ebx] eax +
jz loc_405A36  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi 5 +
jnz loc_4059EC  +
lea eax [esp+18h+var_8] +
mov [esp+18h+var_8] 1 +
push eax  +
push [ebp+lParam]  +
sub esp 8 +
call sub_406220  +
jmp loc_4059B6  +
cmp esi 21h +
jnz loc_405A08  +
lea eax [esp+18h+var_8] +
mov [esp+18h+var_8] 1 +
push eax  +
sub esp 0Ch +
call sub_406060  +
jmp loc_4059B6  +
cmp esi 7 +
jnz loc_405A24  +
lea eax [esp+18h+var_8] +
mov [esp+18h+var_8] 1 +
push eax  +
sub esp 0Ch +
call sub_406130  +
jmp loc_4059B6  +
cmp esi 8 +
jnz loc_405A36  +
and dword ptr [edi+98h] 0FFFFFFDFh +
mov dword ptr [ebx] 0 +
mov edx [edi+98h] +
mov ecx [ebp+wParam] +
test dl 8 +
jz loc_405B97  +
lea eax [esi-200h] +
cmp eax 0Dh +
ja loc_405B97  +
and dl 10h +
movzx eax dl +
neg eax  +
sbb eax eax +
and eax 3 +
mov [esp+18h+var_4] eax +
jnz loc_405AA3  +
mov ecx [edi+70h] +
test ecx ecx +
jz loc_405B97  +
mov eax [ebp+lParam] +
lea ebx [esp+18h+var_4] +
mov ecx [ecx] +
push ebx  +
movsx edx ax +
push 0  +
shr eax 10h +
cwde   +
push eax  +
push edx  +
lea eax [edi+0B4h] +
push eax  +
push 1  +
push dword ptr [edi+70h]  +
call dword ptr [ecx+30h]  +
mov eax [esp+34h+var_20] +
mov ebx [ebp+arg_10] +
mov ecx [ebp+wParam] +
cmp eax 3 +
jnz loc_405B97  +
cmp esi 200h +
jnz loc_405AC3  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 202h +
jnz loc_405ADA  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 205h +
jnz loc_405AF1  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 208h +
jnz loc_405B05  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 201h +
jnz loc_405B19  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 204h +
jnz loc_405B2D  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 207h +
jnz loc_405B41  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 203h +
jnz loc_405B55  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 206h +
jnz loc_405B69  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
jmp loc_405B7B  +
cmp esi 209h +
jnz loc_405B97  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
push ecx  +
push esi  +
mov ecx edi +
mov [esp+44h+var_24] 1 +
call sub_406330  +
cmp [esp+34h+var_24] 0 +
mov [ebx] eax +
jnz loc_40598E  +
mov eax [edi+98h] +
mov ecx eax +
shr ecx 2 +
and ecx eax +
test cl 8 +
jz loc_405D3A  +
cmp esi 100h +
jnz loc_405BEC  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
mov ecx edi +
mov [esp+44h+var_24] 1 +
call sub_4062D0  +
cmp [esp+34h+var_24] 0 +
mov [ebx] eax +
jz loc_405D6C  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi 101h +
jnz loc_405C03  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 102h +
jnz loc_405C1A  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 103h +
jnz loc_405C31  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 104h +
jnz loc_405C4B  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 105h +
jnz loc_405C65  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 107h +
jnz loc_405C7F  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 53h +
jnz loc_405C96  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 1Fh +
jnz loc_405CAD  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 286h +
jnz loc_405CE8  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_24] 1 +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
mov ecx edi +
push eax  +
push esi  +
call sub_4062D0  +
cmp [esp+34h+var_24] 0 +
mov [ebx] eax +
jz loc_405D12  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi 209h +
jnz loc_405D02  +
lea eax [esp+34h+var_24] +
push eax  +
push [ebp+lParam]  +
mov eax [ebp+wParam] +
push eax  +
push esi  +
jmp loc_405BC2  +
cmp esi 281h +
jb loc_405D3A  +
cmp esi 291h +
ja loc_405D3A  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_24] 1 +
push eax  +
push [ebp+lParam]  +
mov ecx edi +
push [ebp+wParam]  +
push esi  +
call sub_4062D0  +
cmp [esp+34h+var_24] 0 +
mov [ebx] eax +
jnz loc_40598E  +
cmp esi 2 +
jnz loc_405D6C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push esi  +
push dword ptr [edi+4]  +
push dword ptr [edi+20h]  +
call ds:CallWindowProcW  +
mov ecx edi +
call sub_405EC0  +
mov dword ptr [ebx] 0 +
test byte ptr [edi+0C8h] 8 +
jz loc_405D9D  +
lea eax [esp+38h+var_28] +
mov [esp+38h+var_28] 1 +
push eax  +
push [ebp+lParam]  +
mov ecx edi +
push [ebp+wParam]  +
push esi  +
call sub_408970  +
cmp [esp+38h+var_28] 0 +
mov [ebx] eax +
jnz loc_40598E  +
cmp esi dword_45C3BC +
jnz loc_405DC4  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov esi eax +
push esi  +
mov ecx [esi] +
call dword ptr [ecx+4]  +
mov [ebx] esi +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi Msg +
jnz loc_405DE9  +
mov esi [edi+60h] +
test esi esi +
jz loc_405DD9  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [ebx] esi +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
cmp esi 37Fh +
jnz loc_405E0F  +
push ecx  +
push [ebp+lParam]  +
mov ecx edi +
sub esp 8 +
call sub_405E20  +
mov [ebx] eax +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4418B8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ecx+60h] +
xor ecx ecx +
mov [ebp+var_10] ecx +
test edx edx +
jz loc_405E6B  +
mov eax [edx] +
lea ecx [ebp+var_10] +
push ecx  +
push offset unk_4501AC  +
push edx  +
call dword ptr [eax]  +
mov ecx [ebp+var_10] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_405E8B  +
push [ebp+arg_8]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_10] +
test eax eax +
jnz loc_405E8B  +
lea esi [eax+1] +
jmp loc_405E8D  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_405E9E  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4418B8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi+98h] +
test al 40h +
jnz loc_406049  +
mov ecx [esi+70h] +
or eax 40h +
mov [esi+98h] eax +
test ecx ecx +
jz loc_405F10  +
mov eax [ecx] +
push 0  +
push 0  +
push 1  +
push ecx  +
call dword ptr [eax+1Ch]  +
mov eax [esi+94h] +
cmp eax 0CDCDCDCDh +
jz loc_405F36  +
mov ecx [esi+60h] +
lea edx [esi+80h] +
push eax  +
call sub_404590  +
mov dword ptr [esi+94h] 0CDCDCDCDh +
mov ecx [esi+64h] +
test ecx ecx +
jz loc_405F5F  +
push dword ptr [esi+9Ch]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+50h]  +
mov eax [esi+64h] +
push 1  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+18h]  +
mov eax [esi+64h] +
push 0  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
mov ecx [esi+60h] +
test ecx ecx +
jz loc_405FA5  +
mov [ebp+var_10] 0 +
lea edx [ebp+var_10] +
mov [ebp+var_4] 0 +
mov eax [ecx] +
push edx  +
push offset unk_450040  +
push ecx  +
call dword ptr [eax]  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_405F94  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_405FA5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [esi+70h] +
test ecx ecx +
jz loc_405FB9  +
mov dword ptr [esi+70h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov dword ptr [esi+90h] 0 +
mov ecx [esi+74h] +
test ecx ecx +
jz loc_405FD7  +
mov dword ptr [esi+74h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [esi+64h] +
test ecx ecx +
jz loc_405FEB  +
mov dword ptr [esi+64h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [esi+60h] +
test ecx ecx +
jz loc_405FFF  +
mov dword ptr [esi+60h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [esi+6Ch] +
test ecx ecx +
jz loc_406013  +
mov dword ptr [esi+6Ch] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [esi+68h] +
test ecx ecx +
jz loc_406027  +
mov dword ptr [esi+68h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
and dword ptr [esi+98h] 0FFFFFFA4h +
mov eax [esi+0C4h] +
test eax eax +
jz loc_406049  +
push eax  +
call ds:DestroyAcceleratorTable  +
mov dword ptr [esi+0C4h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4418E8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
test dword ptr [edi+0A0h] 4000h +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
jz loc_406102  +
cmp dword ptr [edi+64h] 0 +
jz loc_40610E  +
test byte ptr [edi+98h] 1 +
jnz loc_40610E  +
mov [ebp+arg_C] 0 +
mov [ebp+var_4] 0 +
mov eax [edi] +
call dword ptr [eax+10h]  +
lea edx [ebp+arg_C] +
push edx  +
push offset unk_450030  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_4060EF  +
mov edx [edi+64h] +
lea ecx [edi+0B4h] +
push ecx  +
push dword ptr [edi+4]  +
mov esi [edx] +
push 0  +
push eax  +
push 0  +
push 0FFFFFFFBh  +
push edx  +
call dword ptr [esi+2Ch]  +
mov eax [ebp+arg_C] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_40610E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_40610E  +
lea eax [ebp+arg_C] +
push eax  +
sub esp 0Ch +
call sub_406130  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_441918  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
or dword ptr [edi+98h] 20h +
mov eax [edi+98h] +
test al 40h +
jnz loc_406200  +
cmp dword ptr [edi+64h] 0 +
jz loc_4061CC  +
test al 2 +
jnz loc_4061CC  +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0 +
mov eax [edi] +
call dword ptr [eax+10h]  +
lea edx [ebp+var_10] +
push edx  +
push offset unk_450030  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_4061BB  +
mov edx [edi+64h] +
lea ecx [edi+0B4h] +
push ecx  +
push dword ptr [edi+4]  +
mov esi [edx] +
push 0  +
push eax  +
push 0  +
push 0FFFFFFFCh  +
push edx  +
call dword ptr [esi+2Ch]  +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_4061CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test byte ptr [edi+98h] 8 +
jz loc_4061DA  +
push dword ptr [edi+4]  +
jmp loc_4061FA  +
call ds:GetFocus  +
push eax  +
push dword ptr [edi+4]  +
call ds:IsChild  +
test eax eax +
jnz loc_406200  +
push 5  +
push dword ptr [edi+4]  +
call ds:GetWindow  +
push eax  +
call ds:SetFocus  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx [ecx+0B4h] +
push esi  +
mov esi [ecx+0B8h] +
push edi  +
movsx edi dx +
shr edx 10h +
add edi ebx +
movsx eax dx +
add eax esi +
mov [ecx+0BCh] edi +
mov [ebp+var_4] ecx +
sub edi ebx +
mov [ecx+0C0h] eax +
add ecx 0ACh +
sub eax esi +
mov esi [ebp+var_4] +
mov [ecx] edi +
lea edi [esi+0A4h] +
mov [esi+0B0h] eax +
mov edx edi +
call loc_4094B0  +
mov ecx [esi+64h] +
test ecx ecx +
jz loc_406284  +
mov eax [ecx] +
push edi  +
push 1  +
push ecx  +
call dword ptr [eax+44h]  +
mov ecx [esi+74h] +
test ecx ecx +
jz loc_406299  +
mov eax [ecx] +
lea edx [esi+0B4h] +
push edx  +
push edx  +
push ecx  +
call dword ptr [eax+1Ch]  +
test byte ptr [esi+98h] 8 +
jz loc_4062B0  +
mov ecx [esi+2Ch] +
lea eax [esi+2Ch] +
push 1  +
push 0  +
push eax  +
call dword ptr [ecx+64h]  +
mov eax [ebp+arg_C] +
pop edi  +
pop esi  +
pop ebx  +
mov dword ptr [eax] 0 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
mov eax [ecx+98h] +
and eax 9 +
mov [ebp+var_4] 0 +
cmp al 9 +
jnz loc_406313  +
mov ecx [ecx+74h] +
test ecx ecx +
jz loc_406313  +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push ecx  +
call dword ptr [eax+24h]  +
test eax eax +
jns loc_40630E  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp eax 1 +
jnz loc_40631C  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
sub esp 64h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+70h] 0 +
jnz loc_40640C  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
mov ebx eax +
test ebx ebx +
jz loc_4064FD  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
push dword ptr [esi+0CCh]  +
call ds:CreateSolidBrush  +
mov edi eax +
test edi edi +
jz loc_4063E7  +
push edi  +
lea eax [ebp+rc] +
push eax  +
push ebx  +
call ds:FillRect  +
push edi  +
call ds:DeleteObject  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+4]  +
call ds:EndPaint  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
test byte ptr [esi+98h] 8 +
jz loc_4064F7  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
mov ebx eax +
test ebx ebx +
jz loc_4064FD  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push eax  +
mov eax [ebp-0Ch] +
sub eax [ebp+rc] +
push eax  +
push ebx  +
call ds:CreateCompatibleBitmap  +
mov [ebp+var_5C] eax +
test eax eax +
jz loc_4063E7  +
push ebx  +
call ds:CreateCompatibleDC  +
mov edi eax +
test edi edi +
jz loc_4064EF  +
push [ebp+var_5C]  +
push edi  +
call ds:SelectObject  +
mov [ebp+var_64] eax +
test eax eax +
jz loc_4064E8  +
push dword ptr [esi+0CCh]  +
call ds:CreateSolidBrush  +
mov [ebp+var_60] eax +
test eax eax +
jz loc_4064DE  +
push eax  +
lea eax [ebp+rc] +
push eax  +
push edi  +
call ds:FillRect  +
push [ebp+var_60]  +
call ds:DeleteObject  +
mov edx [esi+70h] +
lea eax [esi+0B4h] +
push 0  +
push 0  +
push eax  +
mov ecx [edx] +
push eax  +
push edi  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 1  +
push edx  +
call dword ptr [ecx+0Ch]  +
push 0CC0020h  +
push 0  +
push 0  +
push edi  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-0Ch]  +
push 0  +
push 0  +
push ebx  +
call ds:BitBlt  +
push [ebp+var_64]  +
push edi  +
call ds:SelectObject  +
push edi  +
call ds:DeleteDC  +
push [ebp+var_5C]  +
jmp loc_4063E1  +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
mov eax [ebp+arg_0] +
lea edx [ebp+var_4] +
push esi  +
push 0  +
push 0  +
mov ecx [eax] +
push offset oword_443450  +
push edx  +
push [ebp+arg_C]  +
mov [ebp+var_4] 0 +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+28h]  +
mov ecx [ebp+var_4] +
mov esi eax +
test ecx ecx +
jz loc_40655C  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_0] +
push 0  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
mov ecx [eax] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+28h]  +
pop ebp  +
retn 1Ch  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea ecx [ebx-24h] +
call sub_405EC0  +
mov eax [ebx-20h] +
mov esi [ebp+arg_8] +
mov byte ptr [ebp+arg_0+3] 0 +
test eax eax +
jz loc_4065DB  +
cmp eax esi +
jz loc_4065DB  +
push 507h  +
push 0  +
push 0  +
push eax  +
call ds:RedrawWindow  +
lea ecx [ebx-24h] +
call sub_408910  +
push esi  +
call ds:IsWindow  +
test eax eax +
jz loc_406643  +
cmp [ebx-20h] esi +
jz loc_4065F8  +
push esi  +
lea ecx [ebx-24h] +
call sub_4088A0  +
mov byte ptr [ebp+arg_0+3] 1 +
push 0  +
push 1  +
push [ebp+arg_4]  +
lea ecx [ebx-24h] +
call sub_408390  +
mov esi eax +
test esi esi +
jns loc_40663A  +
lea ecx [ebx-24h] +
call sub_405EC0  +
mov eax [ebx-20h] +
test eax eax +
jz loc_40663A  +
push 507h  +
push 0  +
push 0  +
push eax  +
call ds:RedrawWindow  +
cmp byte ptr [ebp+arg_0+3] 0 +
jz loc_40663A  +
lea ecx [ebx-24h] +
call sub_408910  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_40667E  +
mov eax [ebp+arg_0] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_40666F  +
mov eax [edx] +
mov [ebp+arg_8] ecx +
mov [ebp+arg_0] edx +
pop ebp  +
jmp dword ptr [eax]  +
mov dword ptr [ecx] 0 +
mov eax 80040004h +
pop ebp  +
retn 0Ch  +
mov eax 80004003h +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp [edi+54h] esi +
jz loc_4066BA  +
test esi esi +
jz loc_4066AA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [edi+54h] +
mov [edi+54h] esi +
test eax eax +
jz loc_4066BA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp [edi+58h] esi +
jz loc_4066FA  +
test esi esi +
jz loc_4066EA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [edi+58h] +
mov [edi+58h] esi +
test eax eax +
jz loc_4066FA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push ecx  +
mov eax [ebp+arg_0] +
lea edx [ebp+var_4] +
push esi  +
push [ebp+arg_10]  +
mov [ebp+var_4] 0 +
mov ecx [eax] +
push 0  +
push offset oword_443450  +
push edx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+28h]  +
mov ecx [ebp+var_4] +
mov esi eax +
test ecx ecx +
jz loc_40674D  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF0h +
mov eax [ebp+arg_0] +
mov ecx [eax+80h] +
mov edx [eax+34h] +
shr ecx 5 +
and ecx 1 +
mov [ebp+arg_0] ecx +
test edx edx +
jz loc_406B5E  +
mov ecx [edx] +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_10]  +
mov eax [ebp+arg_8] +
push [ebp+arg_C]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push [ebp+arg_4]  +
push edx  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 14h  +
mov eax ecx +
pop ebp  +
retn 14h  +
***
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_406B83  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ecx+34h] +
test esi esi +
jz loc_406BA1  +
mov ecx [esi] +
lea eax [edx+8] +
push eax  +
lea eax [edx+4] +
push eax  +
push esi  +
call dword ptr [ecx+20h]  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ecx+98h] +
mov [edx+4] eax +
mov eax [ecx+9Ch] +
mov [edx+8] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+80h] +
mov edx [eax+34h] +
shr ecx 6 +
and ecx 1 +
mov [ebp+arg_0] ecx +
test edx edx +
jz loc_406BFC  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call dword ptr [eax+24h]  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 18h  +
mov eax ecx +
pop ebp  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_406C26  +
mov eax [ecx] +
mov [ebp+arg_0] ecx +
pop ebp  +
jmp dword ptr [eax+28h]  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_406C46  +
mov eax [ecx] +
mov [ebp+arg_0] ecx +
pop ebp  +
jmp dword ptr [eax+2Ch]  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [eax+34h] +
test edx edx +
jz loc_406C70  +
mov eax [ebp+arg_4] +
mov ecx [edx] +
neg eax  +
sbb eax eax +
mov [ebp+arg_4] eax +
mov [ebp+arg_0] edx +
pop ebp  +
jmp dword ptr [ecx+30h]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov edx [eax+34h] +
test edx edx +
jz loc_406CA0  +
mov eax [ebp+arg_4] +
mov ecx [edx] +
neg eax  +
sbb eax eax +
mov [ebp+arg_4] eax +
mov [ebp+arg_0] edx +
pop ebp  +
jmp dword ptr [ecx+34h]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov edx [eax+34h] +
test edx edx +
jz loc_406CD0  +
mov eax [ebp+arg_4] +
mov ecx [edx] +
neg eax  +
sbb eax eax +
mov [ebp+arg_4] eax +
mov [ebp+arg_0] edx +
pop ebp  +
jmp dword ptr [ecx+38h]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov edx [eax+34h] +
test edx edx +
jz loc_406D10  +
mov eax [ebp+arg_C] +
mov ecx [edx] +
neg eax  +
sbb eax eax +
push eax  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push edx  +
call dword ptr [ecx+3Ch]  +
pop ebp  +
retn 10h  +
xor eax eax +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
mov ecx 1 +
mov edx [ebp+10h] +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
mov edi [eax+34h] +
mov [ebp-88h] ecx +
test edi edi +
jz loc_406D9E  +
push esi  +
push 40h  +
lea eax [ebp-84h] +
push eax  +
push edx  +
call ds:StringFromGUID2  +
lea eax [ebp-84h] +
push eax  +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jz loc_406DB2  +
mov eax [edi] +
lea ecx [ebp-88h] +
push ecx  +
push dword ptr [ebp+14h]  +
push esi  +
push dword ptr [ebx+0Ch]  +
push dword ptr [ebx+8]  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push edi  +
call dword ptr [eax+40h]  +
push esi  +
call ds:SysFreeString  +
mov ecx [ebp-88h] +
pop esi  +
mov eax ecx +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 8007000Eh  +
call loc_401490  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi 1 +
test edi edi +
jnz loc_406DDC  +
pop edi  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 0Ch  +
push ebx  +
mov ebx [ebp+arg_0] +
mov dword ptr [edi] 0 +
mov ecx [ebx+34h] +
test ecx ecx +
jz loc_406E14  +
push [ebp+arg_8]  +
mov eax [ecx] +
push edi  +
push ecx  +
call dword ptr [eax+44h]  +
mov esi eax +
test esi esi +
js loc_406E06  +
cmp dword ptr [edi] 0 +
jnz loc_406E8F  +
pop ebx  +
mov esi 1 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
push dword ptr [ebx+0A0h]  +
call ds:SysStringLen  +
test eax eax +
jz loc_406E8F  +
mov ecx [ebx+0A0h] +
test ecx ecx +
jz loc_406E40  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_406E31  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+1] +
mov [ebp+arg_4] eax +
add eax eax +
push eax  +
call ds:CoTaskMemAlloc  +
mov esi eax +
test esi esi +
jnz loc_406E61  +
pop ebx  +
pop edi  +
mov eax 8007000Eh +
pop esi  +
pop ebp  +
retn 0Ch  +
push dword ptr [ebx+0A0h]  +
mov edx [ebp+arg_4] +
mov ecx esi +
call loc_4041F0  +
add esp 4 +
test al al +
jnz loc_406E8B  +
push esi  +
call ds:CoTaskMemFree  +
pop ebx  +
pop edi  +
mov eax 80004005h +
pop esi  +
pop ebp  +
retn 0Ch  +
mov [edi] esi +
xor esi esi +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_406EB5  +
mov eax 80004003h +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_0] +
mov dword ptr [edi] 0 +
push esi  +
mov esi 80004001h +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_406F12  +
lea edx [ebp+arg_8] +
mov [ebp+arg_8] 0 +
mov eax [ecx] +
push edx  +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [eax+48h]  +
test eax eax +
mov eax [ebp+arg_8] +
js loc_406F08  +
test eax eax +
jz loc_406F12  +
mov ecx [eax] +
push edi  +
push offset unk_45024C  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
js loc_406F00  +
cmp dword ptr [edi] 0 +
jnz loc_406F05  +
mov esi 80004001h +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_406F12  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_406F35  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
mov dword ptr [esi] 0 +
mov edx [ecx+34h] +
test edx edx +
jz loc_406F5F  +
mov eax [edx] +
push esi  +
push edx  +
call dword ptr [eax+4Ch]  +
test eax eax +
js loc_406F55  +
cmp dword ptr [esi] 0 +
jnz loc_406F73  +
mov eax 80004002h +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ecx+30h] +
mov [esi] eax +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_406F71  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
test ebx ebx +
jnz loc_406F95  +
mov eax 80004003h +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+8] +
push esi  +
mov dword ptr [ebx] 0 +
push edi  +
mov ecx [eax+34h] +
mov edi 1 +
mov [ebp+8] ecx +
test ecx ecx +
jz loc_407063  +
mov eax [ebp+10h] +
mov dword ptr [ebp+14h] 0 +
test eax eax +
jnz loc_406FC5  +
xor esi esi +
jmp loc_406FD9  +
push eax  +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jz loc_40706C  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp+14h] +
push edx  +
push esi  +
push dword ptr [ebp+0Ch]  +
push ecx  +
call dword ptr [eax+50h]  +
push esi  +
mov esi ds:SysFreeString +
mov edi eax +
call esi  +
test edi edi +
js loc_407059  +
push dword ptr [ebp+14h]  +
call ds:SysStringLen  +
test eax eax +
jz loc_407059  +
push dword ptr [ebp+14h]  +
call ds:SysStringLen  +
lea eax ds:2[eax*2] +
push eax  +
mov [ebp+8] eax +
call ds:CoTaskMemAlloc  +
mov [ebx] eax +
test eax eax +
jnz loc_407034  +
push dword ptr [ebp+14h]  +
call esi  +
pop edi  +
pop esi  +
mov eax 8007000Eh +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edx [ebp+8] +
mov ecx eax +
push edx  +
push dword ptr [ebp+14h]  +
call sub_4013B0  +
push eax  +
call loc_4014B0  +
add esp 0Ch +
push dword ptr [ebp+14h]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov edi 1 +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 8007000Eh  +
call loc_401490  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_407095  +
mov eax 80004003h +
pop edi  +
pop ebp  +
retn 0Ch  +
push ebx  +
mov ebx [ebp+arg_0] +
mov dword ptr [edi] 0 +
push esi  +
mov esi 1 +
mov ecx [ebx+34h] +
test ecx ecx +
jz loc_4070F5  +
lea edx [ebp+arg_8] +
mov [ebp+arg_8] 0 +
mov eax [ecx] +
push edx  +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [eax+54h]  +
mov ecx [ebp+arg_8] +
mov esi eax +
test ecx ecx +
jz loc_4070DD  +
mov ecx [ebx-24h] +
lea eax [ebx-24h] +
push edi  +
push offset unk_450014  +
push eax  +
call dword ptr [ecx]  +
mov ecx [ebp+arg_8] +
mov esi eax +
test esi esi +
js loc_4070E6  +
cmp dword ptr [edi] 0 +
jnz loc_4070EB  +
mov esi 1 +
test ecx ecx +
jz loc_4070F5  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4418B8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ecx+60h] +
xor esi esi +
xor ecx ecx +
mov [ebp+var_10] ecx +
test edx edx +
jz loc_40714D  +
mov eax [edx] +
lea ecx [ebp+var_10] +
push ecx  +
push offset unk_45030C  +
push edx  +
call dword ptr [eax]  +
mov ecx [ebp+var_10] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_407166  +
push [ebp+arg_0]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_10] +
mov esi eax +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_407177  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx dword_459D38 +
xor eax eax +
test ecx ecx +
jz loc_4071A7  +
cmp dword_459D40 eax +
jnz loc_4071BA  +
push [ebp+lcid]  +
mov ecx offset off_459D2C +
call sub_404B70  +
mov ecx dword_459D38 +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_0] +
test ecx ecx +
jz loc_4071E1  +
push [ebp+arg_20]  +
mov eax [ecx] +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ebx  +
push edx  +
push esi  +
push ecx  +
call dword ptr [eax+2Ch]  +
mov edx [ebp+arg_4] +
cmp eax 80020003h +
jz loc_4071EF  +
cmp eax 8002802Bh +
jnz loc_407224  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_407224  +
push [ebp+arg_20]  +
mov eax [ecx] +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ebx  +
push [ebp+lcid]  +
push [ebp+arg_8]  +
push edx  +
push ecx  +
call dword ptr [eax+18h]  +
test eax eax +
js loc_407224  +
test bl 4 +
jz loc_407224  +
push [ebp+arg_4]  +
lea ecx [esi-4Ch] +
call sub_407100  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
xor eax [ecx+7Ch] +
and eax 1 +
xor [ecx+7Ch] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407263  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 1 +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+arg_0] 0 +
mov ecx [esi+14h] +
mov [esi+80h] eax +
test ecx ecx +
jz loc_4072CF  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_4072CF  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4072CF  +
mov ecx [eax] +
push 0FFFFFD43h  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4072CF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [esi-20h] +
lea eax [esi-20h] +
push 0  +
push 0  +
push eax  +
call dword ptr [ecx+64h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407303  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+80h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] 0 +
mov [ecx+84h] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_40736E  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_40736E  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40736E  +
mov ecx [eax] +
push 0FFFFFD40h  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40736E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407393  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+84h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] 0 +
mov [ecx+88h] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_4073FE  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_4073FE  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4073FE  +
mov ecx [eax] +
push 0FFFFFD3Fh  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4073FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407423  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+88h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
movsx eax [ebp+arg_4] +
add eax eax +
mov dword ptr [ebp+arg_4] 0 +
xor eax [ecx+7Ch] +
and eax 2 +
xor [ecx+7Ch] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_407494  +
mov eax [ecx] +
lea edx [ebp+arg_4] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_407494  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_407494  +
mov ecx [eax] +
push 0FFFFFD3Bh  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_407494  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4074B3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 2 +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
movsx eax [ebp+arg_4] +
shl eax 2 +
mov dword ptr [ebp+arg_4] 0 +
xor eax [ecx+7Ch] +
and eax 4 +
xor [ecx+7Ch] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_407525  +
mov eax [ecx] +
lea edx [ebp+arg_4] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_407525  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_407525  +
mov ecx [eax] +
push 0FFFFFD37h  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_407525  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407543  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 4 +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp [edi+8Ch] esi +
jz loc_407593  +
test esi esi +
jz loc_40757D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [edi+8Ch] +
mov [edi+8Ch] esi +
test eax eax +
jz loc_407593  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [edi+14h] +
mov [ebp+arg_0] 0 +
pop edi  +
pop esi  +
test ecx ecx +
jz loc_4075D4  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_4075D4  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4075D4  +
mov ecx [eax] +
push 0FFFFFD41h  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4075D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
sub esp 90h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_68] eax +
test ebx ebx +
jnz loc_407617  +
mov eax 80004003h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
push edi  +
lea edi [eax+8Ch] +
mov dword ptr [ebx] 0 +
cmp dword ptr [edi] 0 +
jnz loc_407749  +
mov esi ds:GetStockObject +
push 11h  +
mov [ebp+var_70] 0 +
call esi  +
test eax eax +
jnz loc_40764F  +
push 0Dh  +
call esi  +
test eax eax +
jz loc_4076E0  +
lea ecx [ebp+var_60] +
push ecx  +
push 5Ch  +
push eax  +
call ds:GetObjectW  +
mov esi [ebp+var_60] +
lea eax [ebp+var_44] +
mov [ebp+FontDesc.lpstrName] eax +
movzx eax [ebp+var_50] +
mov [ebp+FontDesc.sWeight] ax +
movzx eax [ebp+var_49] +
mov [ebp+FontDesc.sCharset] ax +
movzx eax [ebp+var_4C] +
mov [ebp+FontDesc.fItalic] eax +
movzx eax [ebp+var_4B] +
mov [ebp+FontDesc.fUnderline] eax +
movzx eax [ebp+var_4A] +
mov [ebp+FontDesc.cbSizeofstruct] 20h +
mov [ebp+FontDesc.fStrikethrough] eax +
test esi esi +
jns loc_40769D  +
neg esi  +
mov eax [ebp+var_68] +
mov eax [eax-48h] +
test eax eax +
jz loc_4076CC  +
push eax  +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jz loc_4076E0  +
push 5Ah  +
push eax  +
call ds:GetDeviceCaps  +
push [ebp+hDC]  +
mov [ebp+var_6C] eax +
mov eax [ebp+var_68] +
push dword ptr [eax-48h]  +
jmp loc_40770E  +
call ds:GetDesktopWindow  +
push eax  +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jnz loc_4076F8  +
call sub_404240  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
push 5Ah  +
push eax  +
call ds:GetDeviceCaps  +
push [ebp+hDC]  +
mov [ebp+var_6C] eax +
call ds:GetDesktopWindow  +
push eax  +
call ds:ReleaseDC  +
imul eax esi +
push edi  +
push offset stru_44FE94  +
mov dword ptr [ebp+FontDesc.cySize+4] 0 +
cdq   +
idiv  [ebp+var_6C] +
mov dword ptr [ebp+FontDesc.cySize] eax +
lea eax [ebp+FontDesc] +
push eax  +
call ds:OleCreateFontIndirect  +
lea ecx [ebp+var_70] +
call sub_40DF60  +
mov eax [edi] +
mov [ebx] eax +
mov ecx [edi] +
test ecx ecx +
jz loc_407759  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
movsx eax [ebp+arg_4] +
shl eax 3 +
mov dword ptr [ebp+arg_4] 0 +
xor eax [ecx+7Ch] +
and eax 8 +
xor [ecx+7Ch] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_4077C5  +
mov eax [ecx] +
lea edx [ebp+arg_4] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_4077C5  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_4077C5  +
mov ecx [eax] +
push 0FFFFFD3Eh  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_4077C5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4077E3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 8 +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_407833  +
mov eax 80004003h +
pop ebp  +
retn 8  +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] 0 +
mov [ecx+94h] eax +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_40788B  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset unk_45030C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
js loc_40788B  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40788B  +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40788B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4078B3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+94h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov [ecx+98h] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407903  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+98h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
movsx eax [ebp+arg_4] +
shl eax 5 +
xor eax [ecx+7Ch] +
and eax 20h +
xor [ecx+7Ch] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407953  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 20h +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
movsx eax [ebp+arg_4] +
shl eax 6 +
xor eax [ecx+7Ch] +
and eax 40h +
xor [ecx+7Ch] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4079A3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax+7Ch] +
and al 40h +
movzx eax al +
neg eax  +
sbb eax eax +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi+9Ch] +
cmp edi eax +
jz loc_4079FD  +
push eax  +
call ds:SysFreeString  +
test edi edi +
jz loc_4079F3  +
push edi  +
call ds:SysAllocString  +
mov [esi+9Ch] eax +
test eax eax +
jnz loc_4079FD  +
jmp loc_407A05  +
mov dword ptr [esi+9Ch] 0 +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
push 8007000Eh  +
call loc_401490  +
int 3  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_407A25  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
push dword ptr [eax+9Ch]  +
call ds:SysAllocString  +
mov [esi] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp [edi+8] esi +
jz loc_407A6A  +
test esi esi +
jz loc_407A5A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [edi+8] +
mov [edi+8] esi +
test eax eax +
jz loc_407A6A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_407A91  +
lea ebx [esi-38h] +
jmp loc_407A93  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
cmp [ebx+3Ch] edi +
jz loc_407AB6  +
test edi edi +
jz loc_407AA6  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [ebx+3Ch] +
mov [ebx+3Ch] edi +
test eax eax +
jz loc_407AB6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov edx [esi+4] +
xor ebx ebx +
test edx edx +
jz loc_407AD2  +
mov ecx [edx] +
lea eax [esi+0A4h] +
push eax  +
push offset unk_45028C  +
push edx  +
call dword ptr [ecx]  +
mov ebx eax +
test edi edi +
pop edi  +
jnz loc_407AF1  +
mov ecx [esi+0A4h] +
test ecx ecx +
jz loc_407AF1  +
mov dword ptr [esi+0A4h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax 80004001h +
retn 4  +
***
mov eax 80004001h +
retn 10h  +
***
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_407B60  +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] 0 +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_407B4B  +
mov eax [ecx] +
push esi  +
push offset unk_44FB9C  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jns loc_407B5A  +
mov ecx [edi-4] +
lea eax [edi-4] +
push esi  +
push offset unk_44FB9C  +
push eax  +
call dword ptr [ecx]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi-24h]  +
call ds:GetDC  +
mov edi eax +
test edi edi +
jnz loc_407B92  +
pop edi  +
mov eax 80004005h +
pop esi  +
pop ebp  +
retn 4  +
mov edx [esi+48h] +
test edx edx +
jz loc_407BB6  +
mov ecx [edx] +
lea eax [esi+8Ch] +
push 0  +
push 0  +
push eax  +
push eax  +
push edi  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 1  +
push edx  +
call dword ptr [ecx+0Ch]  +
push edi  +
push dword ptr [esi-24h]  +
call ds:ReleaseDC  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax 80004001h +
retn 8  +
***
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_407BF3  +
mov eax 80004005h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov eax [eax-28h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push 1  +
push dword ptr [esi+38h]  +
or dword ptr [esi+6Ch] 1 +
call ds:OleLockRunning  +
mov ecx [esi+38h] +
lea eax [esi+48h] +
and dword ptr [esi+6Ch] 0FFFFFFF7h +
push eax  +
push offset unk_44FEB8  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
sub esp 8 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_407C85  +
mov dword ptr [esi] 0 +
mov ebx [ebp+arg_8] +
test ebx ebx +
jz loc_407C92  +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_407DAF  +
test ebx ebx +
jz loc_407DAF  +
cmp [ebp+lpRect] 0 +
jz loc_407DAF  +
cmp [ebp+arg_10] 0 +
jz loc_407DAF  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+3Ch] 0 +
jnz loc_407CE4  +
lea ecx [ebp+arg_4] +
call sub_4100A0  +
test eax eax +
js loc_407DA6  +
mov eax [ebp+arg_4] +
lea edx [edi+3Ch] +
add eax 24h +
push edx  +
push offset unk_450114  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
cmp dword ptr [edi+40h] 0 +
jnz loc_407D0E  +
lea ecx [ebp+arg_4] +
call sub_410160  +
test eax eax +
js loc_407DA6  +
mov eax [ebp+arg_4] +
lea edx [edi+40h] +
add eax 24h +
push edx  +
push offset unk_44F9B0  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov eax [edi+3Ch] +
mov [esi] eax +
mov ecx [edi+3Ch] +
test ecx ecx +
jz loc_407D20  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov eax [edi+40h] +
mov [ebx] eax +
mov ecx [edi+40h] +
test ecx ecx +
jz loc_407D32  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
push [ebp+lpRect]  +
mov esi ds:GetClientRect +
push dword ptr [edi-28h]  +
call esi  +
push [ebp+arg_10]  +
push dword ptr [edi-28h]  +
call esi  +
cmp dword ptr [edi+98h] 0 +
jnz loc_407D6C  +
xor eax eax +
mov [ebp+var_8.fVirt] 0 +
mov dword ptr [ebp+var_8.key] eax +
lea eax [ebp+var_8] +
push 1  +
push eax  +
call ds:CreateAcceleratorTableW  +
mov [edi+98h] eax +
mov esi [ebp+arg_14] +
mov dword ptr [esi] 14h +
mov eax [edi+6Ch] +
shr eax 2 +
and eax 1 +
mov [esi+4] eax +
push dword ptr [edi-28h]  +
call ds:GetParent  +
mov [esi+8] eax +
mov eax [edi+98h] +
mov [esi+0Ch] eax +
xor eax eax +
cmp [edi+98h] eax +
setnz al  +
mov [esi+10h] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
pop esi  +
mov eax 80004003h +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
and dword ptr [eax+6Ch] 0FFFFFFFEh +
mov ecx [eax+48h] +
test ecx ecx +
jz loc_407DFE  +
mov dword ptr [eax+48h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
xor eax eax +
pop ebp  +
retn 4  +
***
sub esp 14h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
test eax eax +
jnz loc_407E41  +
mov eax 80004003h +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
movups xmm0 oword ptr [eax] +
push edi  +
mov edi ds:ClientToScreen +
lea eax [ebp+X] +
push eax  +
push dword ptr [esi-28h]  +
movups oword ptr [ebp+X] xmm0 +
call edi  +
test eax eax +
jz loc_407E65  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [esi-28h]  +
call edi  +
push dword ptr [esi-28h]  +
call ds:GetParent  +
mov edi eax +
test edi edi +
jz loc_407E8E  +
lea eax [ebp+X] +
push eax  +
push edi  +
call ds:ScreenToClient  +
test eax eax +
jz loc_407E8E  +
lea eax [ebp-0Ch] +
push eax  +
push edi  +
call ds:ScreenToClient  +
mov eax [ebp-8] +
mov edx [ebp-10h] +
sub eax edx +
mov ecx [ebp+X] +
push 1  +
push eax  +
mov eax [ebp-0Ch] +
sub eax ecx +
push eax  +
push edx  +
push ecx  +
push dword ptr [esi-28h]  +
call ds:MoveWindow  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
push 1  +
push dword ptr [esi+38h]  +
or dword ptr [esi+6Ch] 1 +
call ds:OleLockRunning  +
test [ebp+arg_8] 1 +
jz loc_407F08  +
mov ecx [esi+38h] +
lea edi [esi+48h] +
or dword ptr [esi+6Ch] 8 +
push edi  +
push offset unk_44FB0C  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jns loc_407F1D  +
mov ecx [esi+38h] +
lea edi [esi+48h] +
and dword ptr [esi+6Ch] 0FFFFFFF7h +
push edi  +
push offset unk_44FEB8  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax]  +
mov edx [edi] +
test edx edx +
jz loc_407F31  +
mov ecx [edx] +
lea eax [esi+88h] +
push eax  +
push eax  +
push edx  +
call dword ptr [ecx+1Ch]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
and dword ptr [eax+6Ch] 0FFFFFFFEh +
mov ecx [eax+48h] +
test ecx ecx +
jz loc_407F5E  +
mov dword ptr [eax+48h] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov eax [eax+9Ch] +
not eax  +
and eax 1 +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov eax [eax+6Ch] +
shr eax 4 +
not eax  +
and eax 1 +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_4] 0 +
jz loc_407FD1  +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi-28h]  +
call ds:SetCapture  +
or dword ptr [esi+6Ch] 10h +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
call ds:ReleaseCapture  +
mov eax [ebp+arg_0] +
and dword ptr [eax+6Ch] 0FFFFFFEFh +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov eax [eax+6Ch] +
shr eax 5 +
not eax  +
and eax 1 +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
shl eax 5 +
xor eax [ecx+6Ch] +
and eax 20h +
xor [ecx+6Ch] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
sub esp 18h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
test esi esi +
jnz loc_408063  +
pop edi  +
mov eax 80004003h +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp byte ptr [edi+30h] 0 +
jnz loc_408080  +
pop edi  +
mov eax 80004005h +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [edi-28h]  +
call ds:GetDC  +
mov [esi] eax +
test eax eax +
jz loc_408069  +
test byte ptr [ebp+arg_8] 1 +
mov byte ptr [edi+30h] 0 +
jnz loc_408128  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [edi-28h]  +
call ds:GetClientRect  +
mov eax [ebp+arg_8] +
test al 4 +
jz loc_408116  +
push ebx  +
push dword ptr [esi]  +
call ds:CreateCompatibleDC  +
mov ebx eax +
test ebx ebx +
jz loc_408112  +
mov ecx [ebp+rc.bottom] +
sub ecx [ebp+rc.top] +
push ecx  +
mov ecx [ebp+rc.right] +
sub ecx [ebp+rc.left] +
push ecx  +
push dword ptr [esi]  +
call ds:CreateCompatibleBitmap  +
mov [ebp+var_18] eax +
test eax eax +
jnz loc_4080E6  +
push ebx  +
call ds:DeleteDC  +
jmp loc_408112  +
push eax  +
push ebx  +
call ds:SelectObject  +
test eax eax +
jnz loc_408104  +
push [ebp+var_18]  +
call ds:DeleteObject  +
push ebx  +
call ds:DeleteDC  +
jmp loc_408112  +
push eax  +
call ds:DeleteObject  +
mov eax [esi] +
mov [edi+2Ch] eax +
mov [esi] ebx +
mov eax [ebp+arg_8] +
pop ebx  +
test al 2 +
jz loc_408128  +
push 6  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi]  +
call ds:FillRect  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 14h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+2Ch] 0 +
mov byte ptr [esi+30h] 1 +
jz loc_4081A0  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi-28h]  +
call ds:GetClientRect  +
mov eax [ebp-8] +
mov edx [ebp-10h] +
sub eax edx +
mov ecx [ebp+Rect] +
push 0CC0020h  +
push 0  +
push 0  +
push edi  +
push eax  +
mov eax [ebp-0Ch] +
sub eax ecx +
push eax  +
push edx  +
push ecx  +
push dword ptr [esi+2Ch]  +
call ds:BitBlt  +
push edi  +
call ds:DeleteDC  +
mov edi [esi+2Ch] +
push edi  +
push dword ptr [esi-28h]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push [ebp+bErase]  +
mov eax [ebp+arg_0] +
push [ebp+lpRect]  +
push dword ptr [eax-28h]  +
call ds:InvalidateRect  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
push [ebp+bErase]  +
mov eax [ebp+arg_0] +
push [ebp+hRgn]  +
push dword ptr [eax-28h]  +
call ds:InvalidateRgn  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
retn 14h  +
***
push [ebp+lParam]  +
mov eax [ebp+arg_0] +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword ptr [eax-28h]  +
push dword ptr [eax-0Ch]  +
call ds:CallWindowProcW  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_408253  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
push edx  +
push offset unk_44FE58  +
mov eax [eax+34h] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
shl eax 5 +
xor eax [ecx+68h] +
and eax 20h +
xor [ecx+68h] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax 80004001h +
retn 14h  +
***
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_4082E5  +
mov eax 80004003h +
pop edi  +
pop ebp  +
retn 0Ch  +
push esi  +
push offset unk_45B5EE  +
push 1Ch  +
mov dword ptr [edi] 0 +
call sub_41C4E6  +
add esp 8 +
test eax eax +
jz loc_40835A  +
push ecx  +
mov ecx eax +
call sub_40DAC0  +
mov esi eax +
test esi esi +
jz loc_40835A  +
mov edx [ebp+arg_0] +
push ebx  +
push 3  +
mov ecx [edx+2Ch] +
mov [ebp+arg_8] ecx +
lea ecx [edx-34h] +
mov edx [ecx] +
call dword ptr [edx+10h]  +
push eax  +
lea eax [ebp+arg_C] +
mov ecx esi +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
call loc_410420  +
mov ebx eax +
test ebx ebx +
js loc_408348  +
mov eax [esi] +
push edi  +
push offset unk_450050  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
test ebx ebx +
jns loc_408351  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+1Ch]  +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
pop esi  +
mov eax 8007000Eh +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
shl eax 7 +
xor eax [ecx+64h] +
and eax 80h +
xor [ecx+64h] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_441978  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_4083D7  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp [ebx+60h] esi +
jz loc_4083F2  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [ebx+60h] +
mov [ebx+60h] esi +
test eax eax +
jz loc_4083F2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi] +
lea edi [ebx+64h] +
push edi  +
push offset unk_44FE38  +
push esi  +
mov [ebp+var_14] 0 +
call dword ptr [eax]  +
mov ecx [edi] +
test ecx ecx +
jz loc_408811  +
mov eax [ecx] +
lea esi [ebx+0A0h] +
push esi  +
push 1  +
push ecx  +
call dword ptr [eax+58h]  +
test dword ptr [esi] 20000h +
jz loc_408479  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov edx eax +
xor ecx ecx +
mov [ebp+var_14] ecx +
test edx edx +
jz loc_408455  +
mov eax [edx] +
lea ecx [ebp+var_14] +
push ecx  +
push offset unk_450030  +
push edx  +
call dword ptr [eax]  +
mov ecx [ebp+var_14] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
mov eax [edi] +
push ecx  +
push eax  +
mov edx [eax] +
call dword ptr [edx+0Ch]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
test eax eax +
jz loc_408479  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp byte ptr [ebp+arg_4] 0 +
jnz loc_4085C0  +
mov edx [edi] +
xor ecx ecx +
mov [ebp+arg_4] ecx +
test edx edx +
jz loc_4084A9  +
mov eax [edx] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset unk_44FE84  +
push edx  +
call dword ptr [eax]  +
mov ecx [ebp+arg_4] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] 1 +
test ecx ecx +
jz loc_4084CE  +
mov edx [ebp+arg_8] +
mov eax [ecx] +
test edx edx +
jz loc_4084C6  +
push edx  +
push ecx  +
call dword ptr [eax+14h]  +
mov esi eax +
jmp loc_40852C  +
push ecx  +
call dword ptr [eax+20h]  +
mov esi eax +
jmp loc_40852C  +
cmp [ebp+arg_8] 0 +
jz loc_4085AF  +
mov esi [edi] +
xor edx edx +
mov [ebp+var_14] edx +
test esi esi +
jz loc_408501  +
mov eax [esi] +
lea ecx [ebp+var_14] +
push ecx  +
push offset unk_44FE48  +
push esi  +
call dword ptr [eax]  +
mov edx [ebp+var_14] +
xor ecx ecx +
test eax eax +
cmovs edx ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_14] edx +
mov byte ptr [ebp+var_4] 2 +
test edx edx +
jz loc_40851C  +
push [ebp+arg_8]  +
mov eax [edx] +
push edx  +
call dword ptr [eax+14h]  +
mov ecx [ebp+arg_4] +
mov esi eax +
mov edx [ebp+var_14] +
jmp loc_40851E  +
xor esi esi +
mov byte ptr [ebp+var_4] 1 +
test edx edx +
jz loc_40852F  +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
mov ecx [ebp+arg_4] +
test esi esi +
jns loc_4085A9  +
test dword ptr [ebx+0A0h] 20000h +
jz loc_40854C  +
mov eax [edi] +
push 0  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
mov ecx [ebp+arg_4] +
mov dword ptr [ebx+0A0h] 0 +
mov edx [edi] +
test edx edx +
jz loc_40856B  +
mov dword ptr [edi] 0 +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
mov ecx [ebp+arg_4] +
mov edx [ebx+60h] +
test edx edx +
jz loc_408582  +
mov dword ptr [ebx+60h] 0 +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_408593  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
lea esi [ebx+0A0h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_4085C0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
test dword ptr [esi] 20000h +
jnz loc_408617  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
xor ecx ecx +
mov [ebp+arg_4] ecx +
test eax eax +
jz loc_4085F3  +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push offset unk_450030  +
push eax  +
call dword ptr [ecx]  +
mov ecx [ebp+arg_4] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] 3 +
mov eax [edi] +
push ecx  +
push eax  +
mov edx [eax] +
call dword ptr [edx+0Ch]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_408617  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [edi] +
lea edx [ebx+70h] +
push edx  +
mov dword ptr [ebx+90h] 0 +
push offset unk_45029C  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax]  +
mov esi eax +
mov [ebp+var_14] esi +
test esi esi +
jns loc_408682  +
mov eax [edi] +
lea edx [ebx+70h] +
push edx  +
push offset unk_4500D4  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov esi eax +
mov [ebp+var_14] esi +
test esi esi +
js loc_40865F  +
mov dword ptr [ebx+90h] 3 +
jmp loc_40868C  +
mov eax [edi] +
lea edx [ebx+70h] +
push edx  +
push offset unk_450134  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov [ebp+var_14] eax +
test eax eax +
js loc_40868C  +
mov dword ptr [ebx+90h] 1 +
jmp loc_40868C  +
mov dword ptr [ebx+90h] 7 +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
xor ecx ecx +
mov [ebp+var_10] ecx +
test eax eax +
jz loc_4086B7  +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push offset unk_44FED8  +
push eax  +
call dword ptr [ecx]  +
mov ecx [ebp+var_10] +
xor edx edx +
test eax eax +
cmovs ecx edx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 4 +
lea eax [ebx+9Ch] +
mov edx [edi] +
push eax  +
push ecx  +
push edx  +
mov esi [edx] +
call dword ptr [esi+4Ch]  +
mov ecx [ebx+70h] +
test ecx ecx +
jz loc_4086E2  +
push [ebp+var_10]  +
mov eax [ecx] +
push 0  +
push 1  +
push ecx  +
call dword ptr [eax+1Ch]  +
mov eax [edi] +
push 0  +
push offset aAxwin  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
test dword ptr [ebx+0A0h] 400h +
jnz loc_4087FA  +
lea esi [ebx+0B4h] +
push esi  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
mov eax [ebx+0BCh] +
lea ecx [ebx+0ACh] +
sub eax [esi] +
lea esi [ebx+0A4h] +
mov [ecx] eax +
mov edx esi +
mov eax [ebx+0C0h] +
sub eax [ebx+0B8h] +
mov [ebx+0B0h] eax +
call loc_4094B0  +
mov eax [edi] +
push esi  +
push 1  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
js loc_40886D  +
mov eax [edi] +
lea ecx [ebx+0A4h] +
push ecx  +
push 1  +
push eax  +
mov edx [eax] +
call dword ptr [edx+48h]  +
mov esi eax +
test esi esi +
js loc_40886D  +
lea edx [ebx+0ACh] +
lea ecx [ebx+0A4h] +
call loc_409420  +
mov eax [ebx+0B4h] +
lea esi [ebx+0B4h] +
add eax [ebx+0ACh] +
mov ecx ebx +
mov [ebx+0BCh] eax +
mov eax [ebx+0B0h] +
add eax [ebx+0B8h] +
mov [ebx+0C0h] eax +
mov eax [ebx] +
call dword ptr [eax+10h]  +
push eax  +
lea ecx [ebp+arg_8] +
call sub_40D9C0  +
push esi  +
mov byte ptr [ebp+var_4] 5 +
push dword ptr [ebx+4]  +
mov eax [edi] +
push 0  +
push [ebp+arg_8]  +
mov ecx [eax] +
push 0  +
push 0FFFFFFFBh  +
push eax  +
call dword ptr [ecx+2Ch]  +
push 507h  +
push 0  +
push 0  +
push dword ptr [ebx+4]  +
mov [ebp+var_14] eax +
call ds:RedrawWindow  +
mov byte ptr [ebp+var_4] 4 +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_4087FA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
test eax eax +
jz loc_40880E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [ebp+arg_0] +
mov [ebp+var_18] 0 +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 6 +
mov eax [esi] +
push ecx  +
push offset unk_450040  +
push esi  +
call dword ptr [eax]  +
mov esi [ebp+var_18] +
test esi esi +
jz loc_408845  +
mov eax [ebx] +
mov ecx ebx +
mov edi [esi] +
call dword ptr [eax+10h]  +
push eax  +
push esi  +
call dword ptr [edi+0Ch]  +
mov esi [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_408856  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
test eax eax +
jz loc_408593  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
call dword ptr [eax+8]  +
cmp dword ptr [esi+14h] 0 +
mov edi eax +
jnz loc_4088C4  +
call sub_41A6E1  +
mov [esi+14h] eax +
test eax eax +
jnz loc_4088C4  +
xor eax eax +
jmp loc_4088F2  +
push esi  +
push edi  +
push dword ptr [esi+14h]  +
call sub_41A7BF  +
push dword ptr [esi+14h]  +
call sub_41A73A  +
mov edi [ebp+hWnd] +
push eax  +
push 0FFFFFFFCh  +
push edi  +
call ds:SetWindowLongW  +
test eax eax +
jz loc_4088C0  +
mov [esi+20h] eax +
mov eax 1 +
mov [esi+4] edi +
shl eax 4 +
xor eax [esi+0C8h] +
and eax 10h +
xor [esi+0C8h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
test byte ptr [esi+0C8h] 10h +
jz loc_408960  +
push dword ptr [esi+14h]  +
call sub_41A73A  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
call ds:GetWindowLongW  +
push dword ptr [esi+20h]  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
call ds:SetWindowLongW  +
test eax eax +
jz loc_408969  +
mov eax ds:DefWindowProcW +
mov [esi+20h] eax +
mov eax [esi+4] +
mov dword ptr [esi+4] 0 +
test eax eax +
jz loc_408969  +
and dword ptr [esi+0C8h] 0FFFFFFEFh +
pop esi  +
retn   +
push dword ptr [esi+4]  +
call ds:DestroyWindow  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_0] +
cmp edi 39h +
ja loc_4089DB  +
jz loc_4089D6  +
lea eax [edi-2Bh] +
cmp eax 4 +
ja loc_408AD9  +
jmp ds:off_408AF0[eax*4]  +
cmp dword ptr [esi] 1 +
jz loc_4089A2  +
mov ecx [esi+14h] +
jmp loc_408A06  +
push dword ptr [esi+14h]  +
call ds:IsWindow  +
test eax eax +
jz loc_408AD9  +
mov ecx [esi+14h] +
jmp loc_408A06  +
cmp dword ptr [esi] 1 +
jz loc_408AD9  +
push dword ptr [esi+4]  +
push dword ptr [ebx+4]  +
call ds:GetDlgItem  +
mov ecx eax +
jmp loc_408A06  +
mov ecx [esi+0Ch] +
jmp loc_408A06  +
mov ecx [esi+8] +
jmp loc_408A06  +
cmp edi 115h +
ja loc_408A5C  +
cmp edi 114h +
jnb loc_408A04  +
cmp edi 4Eh +
jz loc_408A58  +
cmp edi 111h +
jnz loc_408AD9  +
test esi esi +
jz loc_408AD9  +
mov ecx esi +
test ecx ecx +
jz loc_408AD9  +
mov edx [ebx+98h] +
test dl 8 +
jz loc_408AC0  +
xor eax eax +
mov [ebp+arg_0] eax +
test dl 1 +
jz loc_408AE7  +
mov edx [ebx+74h] +
test edx edx +
jz loc_408AE7  +
mov ecx [edx] +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
push [ebp+wParam]  +
lea eax [edi+2000h] +
push eax  +
push edx  +
call dword ptr [ecx+24h]  +
test eax eax +
jns loc_408AB6  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
mov ecx [esi] +
jmp loc_408A06  +
cmp edi 132h +
jb loc_408AD9  +
cmp edi 138h +
jbe loc_408A04  +
cmp edi 210h +
jnz loc_408AD9  +
mov eax [ebx+18h] +
test eax eax +
jz loc_408A90  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [ebx+4]  +
push dword ptr [ebx+20h]  +
call ds:CallWindowProcW  +
mov ecx [ebp+wParam] +
movzx eax cx +
dec eax  +
cmp eax 1 +
jbe loc_408A04  +
mov eax ecx +
shr eax 10h +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetDlgItem  +
mov ecx eax +
jmp loc_408A06  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
push esi  +
push [ebp+wParam]  +
lea eax [edi+2000h] +
push eax  +
push ecx  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 0 +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_C] +
test ecx ecx +
jnz loc_408B23  +
mov eax 80004003h +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_0] +
mov dword ptr [ecx] 0 +
push esi  +
mov esi 80004002h +
mov edx [eax+9Ch] +
test edx edx +
jz loc_408B4B  +
mov eax [edx] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call dword ptr [eax+0Ch]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4419C0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+Msg] +
mov ebx [ebp+arg_0] +
sub eax 1 +
jz loc_408C1D  +
sub eax 81h +
jz loc_408BFF  +
mov esi [ebp+lParam] +
sub eax 18Eh +
jnz loc_408DBE  +
cmp word ptr [ebp+wParam] 1 +
jnz loc_408DBE  +
test esi esi +
jz loc_408DBE  +
mov edi ds:GetWindowLongW +
push 0FFFFFFECh  +
push esi  +
call edi  +
test eax 10000h +
jz loc_408DBE  +
push 0FFFFFFECh  +
push ebx  +
call edi  +
or eax 10000h +
push eax  +
push 0FFFFFFECh  +
push ebx  +
call ds:SetWindowLongW  +
push esi  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push ebx  +
call ds:DefWindowProcW  +
jmp loc_408E0C  +
push 0FFFFFFEBh  +
push ebx  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_408C12  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:OleUninitialize  +
jmp loc_408DBB  +
push 0  +
call ds:OleInitialize  +
push ebx  +
call ds:GetWindowTextLengthW  +
mov [ebp+var_14] eax +
lea esi ds:2[eax*2] +
lea edx [esi+8] +
cmp esi edx +
sbb ecx ecx +
test ecx edx +
jz loc_408C96  +
lea ecx [esi+8] +
cmp esi ecx +
sbb eax eax +
and eax ecx +
lea ecx [esi+8] +
cmp eax 400h +
ja loc_408C73  +
cmp esi ecx +
sbb eax eax +
and eax ecx +
call sub_41C800  +
mov edi esp +
test edi edi +
jz loc_408C6E  +
mov dword ptr [edi] 0CCCCh +
add edi 8 +
mov eax [ebp+var_14] +
jmp loc_408C98  +
cmp esi ecx +
sbb eax eax +
and eax ecx +
push eax  +
call sub_42A938  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_408C91  +
mov dword ptr [edi] 0DDDDh +
add edi 8 +
mov eax [ebp+var_14] +
jmp loc_408C98  +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_408E09  +
inc eax  +
push eax  +
push edi  +
push ebx  +
call ds:GetWindowTextW  +
push offset String  +
push ebx  +
call ds:SetWindowTextW  +
mov esi [ebp+lParam] +
xor ecx ecx +
mov [ebp+dwNewLong] 0 +
mov [ebp+var_14] ecx +
test esi esi +
jz loc_408CDF  +
mov eax [esi] +
test eax eax +
jz loc_408CDF  +
movzx ecx word ptr [eax] +
mov [ebp+var_14] ecx +
xor eax eax +
mov [ebp+ppstm] eax +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_408D46  +
push ecx  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_408D43  +
push eax  +
call ds:GlobalLock  +
mov ecx [esi] +
mov edx [ebp+var_14] +
add ecx 2 +
push edx  +
push ecx  +
mov ecx eax +
call sub_4013B0  +
push eax  +
call loc_4014B0  +
mov esi [ebp+hMem] +
add esp 0Ch +
push esi  +
call ds:GlobalUnlock  +
lea eax [ebp+ppstm] +
push eax  +
push 1  +
push esi  +
call ds:CreateStreamOnHGlobal  +
xor ecx ecx +
test eax eax +
setns cl  +
test ecx ecx +
jz loc_408DE4  +
mov eax [ebp+ppstm] +
mov [ebp+hMem] 0 +
mov [ebp+var_14] 0 +
push 0  +
sub esp 0Ch +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_14] +
mov edx ebx +
push ecx  +
push eax  +
mov ecx edi +
call loc_409130  +
mov esi [ebp+var_14] +
test eax eax +
js loc_408DCE  +
mov eax [esi] +
lea ecx [ebp+dwNewLong] +
push ecx  +
push offset unk_44FEF8  +
push esi  +
call dword ptr [eax]  +
test eax eax +
js loc_408DCE  +
push [ebp+dwNewLong]  +
push 0FFFFFFEBh  +
push ebx  +
call ds:SetWindowLongW  +
mov byte ptr [ebp+var_4] 2 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
lea ecx [ebp+hMem] +
call sub_40DF60  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+ppstm] +
test eax eax +
jz loc_408DB3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_24] +
call sub_40D990  +
mov esi [ebp+lParam] +
push esi  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push ebx  +
call ds:DefWindowProcW  +
jmp loc_408E0C  +
mov byte ptr [ebp+var_4] 2 +
test esi esi +
jz loc_408DDC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
lea ecx [ebp+hMem] +
call sub_40DF60  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+ppstm] +
test eax eax +
jz loc_408DF5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
add edi 0FFFFFFF8h +
cmp dword ptr [edi] 0DDDDh +
jnz loc_408E09  +
push edi  +
call sub_42746C  +
add esp 4 +
or eax 0FFFFFFFFh +
lea esp [ebp-38h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_441A18  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+Msg] +
mov esi [ebp+arg_0] +
sub eax 1 +
jz loc_408EED  +
sub eax 81h +
jz loc_408ECF  +
mov edi [ebp+lParam] +
sub eax 18Eh +
jnz loc_4090B9  +
cmp word ptr [ebp+wParam] 1 +
jnz loc_4090B9  +
test edi edi +
jz loc_4090B9  +
mov ebx ds:GetWindowLongW +
push 0FFFFFFECh  +
push edi  +
call ebx  +
test eax 10000h +
jz loc_4090B9  +
push 0FFFFFFECh  +
push esi  +
call ebx  +
or eax 10000h +
push eax  +
push 0FFFFFFECh  +
push esi  +
call ds:SetWindowLongW  +
push edi  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push esi  +
call ds:DefWindowProcW  +
jmp loc_40910E  +
push 0FFFFFFEBh  +
push esi  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_408EE2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:OleUninitialize  +
jmp loc_4090B6  +
push 0  +
call ds:OleInitialize  +
push esi  +
call ds:GetWindowTextLengthW  +
mov [ebp+var_14] eax +
lea edi ds:2[eax*2] +
lea edx [edi+8] +
cmp edi edx +
sbb ecx ecx +
test ecx edx +
jz loc_408F66  +
lea ecx [edi+8] +
cmp edi ecx +
sbb eax eax +
and eax ecx +
lea ecx [edi+8] +
cmp eax 400h +
ja loc_408F43  +
cmp edi ecx +
sbb eax eax +
and eax ecx +
call sub_41C800  +
mov ebx esp +
test ebx ebx +
jz loc_408F3E  +
mov dword ptr [ebx] 0CCCCh +
add ebx 8 +
mov eax [ebp+var_14] +
jmp loc_408F68  +
cmp edi ecx +
sbb eax eax +
and eax ecx +
push eax  +
call sub_42A938  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_408F61  +
mov dword ptr [ebx] 0DDDDh +
add ebx 8 +
mov eax [ebp+var_14] +
jmp loc_408F68  +
xor ebx ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_4] 0 +
test ebx ebx +
jz loc_40910B  +
inc eax  +
push eax  +
push ebx  +
push esi  +
call ds:GetWindowTextW  +
push offset String  +
push esi  +
call ds:SetWindowTextW  +
mov edi [ebp+lParam] +
xor eax eax +
mov [ebp+dwNewLong] 0 +
mov [ebp+var_14] eax +
test edi edi +
jz loc_408FAF  +
mov ecx [edi] +
test ecx ecx +
jz loc_408FAF  +
movzx eax word ptr [ecx] +
mov [ebp+var_14] eax +
xor ecx ecx +
mov [ebp+ppstm] ecx +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_409016  +
push eax  +
push 42h  +
call ds:GlobalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_409013  +
push eax  +
call ds:GlobalLock  +
mov ecx [edi] +
mov edx [ebp+var_14] +
add ecx 2 +
push edx  +
push ecx  +
mov ecx eax +
call sub_4013B0  +
push eax  +
call loc_4014B0  +
mov edi [ebp+hMem] +
add esp 0Ch +
push edi  +
call ds:GlobalUnlock  +
lea eax [ebp+ppstm] +
push eax  +
push 1  +
push edi  +
call ds:CreateStreamOnHGlobal  +
xor ecx ecx +
test eax eax +
setns cl  +
test ecx ecx +
jz loc_4090E6  +
mov ecx [ebp+ppstm] +
mov [ebp+var_14] 0 +
lea edx [ebp+var_14] +
mov byte ptr [ebp+var_4] 2 +
call loc_405080  +
mov edi [ebp+var_14] +
test eax eax +
js loc_4090DF  +
mov [ebp+hMem] 0 +
mov [ebp+var_20] 0 +
push edi  +
sub esp 0Ch +
mov byte ptr [ebp+var_4] 4 +
lea eax [ebp+var_20] +
mov edx esi +
mov ecx ebx +
push eax  +
push [ebp+ppstm]  +
call loc_409130  +
mov esi [ebp+var_20] +
test eax eax +
js loc_4090C9  +
mov eax [esi] +
lea ecx [ebp+dwNewLong] +
push ecx  +
push offset unk_4500B4  +
push esi  +
call dword ptr [eax]  +
test eax eax +
js loc_4090C9  +
push [ebp+dwNewLong]  +
push 0FFFFFFEBh  +
push [ebp+arg_0]  +
call ds:SetWindowLongW  +
mov byte ptr [ebp+var_4] 3 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
lea ecx [ebp+hMem] +
call sub_40DF60  +
push edi  +
call ds:SysFreeString  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+ppstm] +
test eax eax +
jz loc_4090AB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_28] +
call sub_40D990  +
mov esi [ebp+arg_0] +
mov edi [ebp+lParam] +
push edi  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push esi  +
call ds:DefWindowProcW  +
jmp loc_40910E  +
mov byte ptr [ebp+var_4] 3 +
test esi esi +
jz loc_4090D7  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
lea ecx [ebp+hMem] +
call sub_40DF60  +
push edi  +
call ds:SysFreeString  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+ppstm] +
test eax eax +
jz loc_4090F7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
add ebx 0FFFFFFF8h +
cmp dword ptr [ebx] 0DDDDh +
jnz loc_40910B  +
push ebx  +
call sub_42746C  +
add esp 4 +
or eax 0FFFFFFFFh +
lea esp [ebp-38h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov ebx edx +
mov esi ecx +
call sub_409210  +
lea eax [ebp-4] +
mov dword ptr [ebp-4] 0 +
push eax  +
xor ecx ecx +
mov dword ptr [ebp-0Ch] 0 +
call sub_40DD20  +
mov edi eax +
test edi edi +
js loc_4091AF  +
mov eax [ebp-4] +
lea edx [ebp-8] +
push edx  +
mov dword ptr [ebp-8] 0 +
push offset unk_44FEF8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test esi esi +
jnz loc_4091C6  +
push dword ptr [ebp+1Ch]  +
mov eax [ebp-8] +
lea edx [ebp-0Ch] +
push 0  +
push offset oword_443450  +
push edx  +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push ebx  +
push esi  +
push eax  +
call dword ptr [ecx+28h]  +
push esi  +
mov edi eax +
call ds:SysFreeString  +
mov eax [ebp-8] +
test eax eax +
jz loc_4091AF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+0Ch] +
mov eax [ebp-4] +
test ecx ecx +
jz loc_4091DB  +
test edi edi +
js loc_4091D5  +
mov [ecx] eax +
xor eax eax +
mov [ebp-4] eax +
jmp loc_4091DB  +
push esi  +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jnz loc_40917D  +
jmp loc_409200  +
mov dword ptr [ecx] 0 +
mov ecx [ebp-0Ch] +
test ecx ecx +
jz loc_4091EB  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp-4] +
test eax eax +
jz loc_4091F5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 8007000Eh  +
call loc_401490  +
and esp 0FFFFFFF8h +
sub esp 34h +
push esi  +
push offset stru_45C440  +
call ds:EnterCriticalSection  +
mov esi ds:RegisterWindowMessageW +
push offset aWm_atlgethost  +
call esi  +
push offset aWm_atlgetcontr  +
mov dword_45C3BC eax +
call esi  +
mov esi ds:GetClassInfoExW +
mov Msg eax +
lea eax [esp+38h+var_34.style] +
push eax  +
push offset aAtlaxwin140  +
push hModule  +
mov [esp+44h+var_34.style] 30h +
call esi  +
test eax eax +
jnz loc_4092F7  +
push 7F00h  +
mov [esp+3Ch+var_34.cbWndExtra] eax +
mov [esp+3Ch+var_34.hInstance] eax +
mov eax hModule +
push 0  +
mov [esp+40h+var_34.style] 30h +
mov [esp+40h+var_34.lpfnWndProc] 8 +
mov [esp+40h+var_34.cbClsExtra] offset sub_408B60 +
mov [esp+40h+var_34.hIcon] eax +
mov [esp+40h+var_34.hCursor] 0 +
call ds:LoadCursorW  +
mov [esp+38h+var_34.hbrBackground] eax +
lea eax [esp+38h+var_34.style] +
push eax  +
mov [esp+3Ch+var_34.lpszMenuName] 6 +
mov [esp+3Ch+var_34.lpszClassName] 0 +
mov [esp+3Ch+var_34.hIconSm] offset aAtlaxwin140 +
mov dword ptr [esp+38h] 0 +
call ds:RegisterClassExW  +
movzx eax ax +
mov [esp+38h+var_34.cbSize] eax +
test ax ax +
jz loc_4093BE  +
lea eax [esp+38h+var_34] +
mov ecx offset dword_45C45C +
push eax  +
call loc_40DED0  +
push 30h  +
lea eax [esp+40h+var_34] +
push 0  +
push eax  +
call sub_41E790  +
add esp 0Ch +
mov [esp+3Ch+var_34.cbSize] 30h +
lea eax [esp+3Ch+var_34] +
push eax  +
push offset aAtlaxwinlic140  +
push hModule  +
call esi  +
mov esi eax +
test esi esi +
jnz loc_4093C0  +
push 7F00h  +
mov [esp+40h+var_34.cbClsExtra] eax +
mov [esp+40h+var_34.cbWndExtra] eax +
mov eax hModule +
push esi  +
mov [esp+44h+var_34.cbSize] 30h +
mov [esp+44h+var_34.style] 8 +
mov [esp+44h+var_34.lpfnWndProc] offset sub_408E30 +
mov [esp+44h+var_34.hInstance] eax +
mov [esp+44h+var_34.hIcon] esi +
call ds:LoadCursorW  +
mov [esp+3Ch+var_34.hCursor] eax +
lea eax [esp+3Ch+var_34] +
push eax  +
mov [esp+40h+var_34.hbrBackground] 6 +
mov [esp+40h+var_34.lpszMenuName] esi +
mov [esp+40h+var_34.lpszClassName] offset aAtlaxwinlic140 +
mov [esp+40h+var_34.hIconSm] esi +
call ds:RegisterClassExW  +
movzx eax ax +
mov [esp+3Ch+var_38] eax +
test ax ax +
jz loc_4093BE  +
lea eax [esp+3Ch+var_38] +
mov ecx offset dword_45C45C +
push eax  +
call loc_40DED0  +
push offset stru_45C440  +
mov esi 1 +
call ds:LeaveCriticalSection  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
test edx edx +
jz loc_409412  +
push edx  +
call ds:RegisterClassExW  +
movzx eax ax +
mov [ebp+var_4] eax +
test ax ax +
jz loc_40940B  +
lea eax [ebp+var_4] +
mov ecx offset dword_45C45C +
push eax  +
call loc_40DED0  +
mov eax [ebp+var_4] +
movzx eax ax +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-4] ecx +
mov eax edx +
mov [ebp-8] eax +
test ecx ecx +
jz loc_409493  +
test eax eax +
jz loc_40949D  +
push ebx  +
push esi  +
push edi  +
push 0  +
call ds:GetDC  +
mov esi ds:GetDeviceCaps +
mov edi eax +
push 58h  +
push edi  +
call esi  +
push 5Ah  +
push edi  +
mov ebx eax +
call esi  +
push edi  +
push 0  +
mov [ebp-0Ch] eax +
call ds:ReleaseDC  +
mov eax [ebp-4] +
mov esi ds:MulDiv +
push 9ECh  +
push dword ptr [eax]  +
push ebx  +
call esi  +
mov edi [ebp-8] +
push 9ECh  +
mov [edi] eax +
mov eax [ebp-4] +
push dword ptr [eax+4]  +
push dword ptr [ebp-0Ch]  +
call esi  +
mov [edi+4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004003h  +
call loc_401490  +
push 80004003h  +
call loc_401490  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp-4] ecx +
mov eax edx +
mov [ebp-8] eax +
test ecx ecx +
jz loc_409520  +
test eax eax +
jz loc_40952A  +
push ebx  +
push esi  +
push edi  +
push 0  +
call ds:GetDC  +
mov esi ds:GetDeviceCaps +
mov ebx eax +
push 58h  +
push ebx  +
call esi  +
push 5Ah  +
push ebx  +
mov edi eax +
call esi  +
push ebx  +
push 0  +
mov [ebp-0Ch] eax +
call ds:ReleaseDC  +
mov ebx [ebp-4] +
mov esi ds:MulDiv +
push edi  +
push dword ptr [ebx]  +
push 9ECh  +
call esi  +
mov edi [ebp-8] +
push dword ptr [ebp-0Ch]  +
mov [edi] eax +
push dword ptr [ebx+4]  +
push 9ECh  +
call esi  +
mov [edi+4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004003h  +
call loc_401490  +
push 80004003h  +
call loc_401490  +
sub esp 8 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
lea edx [esi+4] +
mov [ebp+var_4] 1 +
push edx  +
lea eax [ebp+var_8] +
mov dword ptr [esi] offset off_443590 +
push eax  +
movq qword ptr [edx] xmm0 +
call sub_41E447  +
add esp 8 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_443590 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41E447  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_443590 +
push eax  +
call sub_41E4AA  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441A8A  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 0  +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov byte ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+18h] ax +
mov [esi+1Ch] eax +
mov [esi+20h] ax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov [esi+2Ch] eax +
mov [esi+30h] al +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 6 +
test eax eax +
jnz loc_4096C9  +
lea eax [ebp+var_20] +
mov [ebp+var_24] offset off_443590 +
push eax  +
lea eax [ebp+var_18] +
mov [ebp+var_18] offset aBadLocaleName +
xorps xmm0 xmm0 +
mov [ebp+var_14] 1 +
push eax  +
movq [ebp+var_20] xmm0 +
call sub_41E447  +
add esp 8 +
mov [ebp+var_24] offset off_4435DC +
lea eax [ebp+var_24] +
push offset unk_456C50  +
push eax  +
call sub_41EE5A  +
push eax  +
push esi  +
call sub_41AE0D  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441890  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
call sub_41AE58  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_40972E  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_409745  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_40975C  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_409773  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_40978A  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_4097A1  +
push eax  +
call sub_42746C  +
add esp 4 +
mov ecx esi +
mov dword ptr [esi+4] 0 +
call sub_41AB1D  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_443590 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41E447  +
add esp 8 +
mov dword ptr [esi] offset off_4435DC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4435E8 +
jz loc_40981D  +
push 4  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4435E8 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441650  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4098AA  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4098AA  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441ABF  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_40996E  +
cmp dword ptr [esi] 0 +
jnz loc_40996E  +
push 18h  +
call sub_41C139  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_409931  +
mov ecx offset unk_450464 +
jmp loc_40993B  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_40993B  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_54] +
call sub_409610  +
lea eax [ebp+var_20] +
mov dword ptr [edi+4] 0 +
push eax  +
mov dword ptr [edi] offset off_4441EC +
call sub_41B0D8  +
add esp 4 +
lea ecx [ebp+var_54] +
movups xmm0 oword ptr [eax] +
movups oword ptr [edi+8] xmm0 +
mov [esi] edi +
call sub_4096F0  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_41B143  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_4099EA  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_41B143  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_4099D2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_41B23D  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_409A5A  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_41B23D  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_409A42  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_8]  +
call loc_41EED0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_C]  +
call loc_41EED0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_4441EC +
test eax eax +
jle loc_409AED  +
push dword ptr [esi+0Ch]  +
call sub_42746C  +
jmp loc_409AF7  +
jns loc_409AFA  +
push dword ptr [esi+0Ch]  +
call sub_41C4E1  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi] offset off_4435E8 +
test [ebp+arg_0] 1 +
jz loc_409B1C  +
push 18h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_44FB84 +
jz loc_409B4D  +
push 8  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ecx+4] +
push dword ptr [ecx]  +
mov ecx eax +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
mov edx [eax] +
call dword ptr [edx+8]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
lea edx [ebp+var_8] +
sub esp 8 +
push esi  +
push [ebp+arg_0]  +
push edx  +
call dword ptr [eax+0Ch]  +
mov esi [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_409BE3  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_409BE3  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
cmp eax [edx+4] +
jnz loc_409C10  +
mov eax [esi] +
cmp eax [ebp+arg_4] +
jnz loc_409C10  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
sub esp 28h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
mov [ebp+var_24] esi +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_40EBB0  +
push [ebp+arg_8]  +
lea ecx [ebp+var_20] +
push [ebp+arg_4]  +
call sub_409C20  +
mov ecx eax +
add esp 20h +
cmp dword ptr [ecx+14h] 10h +
jb loc_409D34  +
mov ecx [ecx] +
lea eax [esi+4] +
mov dword ptr [esi] offset off_443590 +
xorps xmm0 xmm0 +
mov [ebp+var_28] ecx +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [ebp+var_28] +
push eax  +
mov byte ptr [ebp+var_24] 1 +
call sub_41E447  +
mov eax [ebp+var_C] +
add esp 8 +
mov dword ptr [esi] offset off_4435DC +
cmp eax 10h +
jb loc_409D73  +
inc eax  +
lea ecx [ebp+var_20] +
push eax  +
push [ebp+var_20]  +
call loc_40F8E0  +
mov ecx [ebp+arg_4] +
mov eax esi +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_8] +
mov [esi+10h] ecx +
mov ecx [ebp+var_8] +
mov dword ptr [esi] offset off_450028 +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push 0FFFFFFFFh  +
push offset loc_441B28  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_30] esi +
mov edx [ebp+arg_0] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_409E1D  +
xor ecx ecx +
jmp loc_409E2B  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_409E22  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_2C] +
call loc_40EAB0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_2C] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push eax  +
call sub_409CE0  +
mov ecx [ebp+var_18] +
cmp ecx 10h +
jb loc_409E62  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call loc_40F8E0  +
mov eax esi +
mov dword ptr [esi] offset off_450304 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
call sub_41B0B3  +
mov esi [ebp+8] +
mov edx eax +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_409ED6  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_409EE0  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp eax 1 +
jnz loc_409F4F  +
push 15h  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_40EAB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
push esi  +
call loc_409E90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 18h +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
and ecx eax +
jz loc_409F9B  +
cmp byte ptr [ebp+0Ch] 0 +
jnz loc_409FA1  +
test cl 4 +
jnz loc_409FAA  +
test cl 2 +
jnz loc_409FD7  +
jmp loc_40A004  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_41EE5A  +
call sub_4107A0  +
push eax  +
push 1  +
push offset aIos_baseBadbit  +
lea ecx [esp+10h] +
call sub_409DD0  +
push offset unk_456D10  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_450320 +
push eax  +
call sub_41EE5A  +
call sub_4107A0  +
push eax  +
push 1  +
push offset aIos_baseFailbi  +
lea ecx [esp+10h] +
call sub_409DD0  +
push offset unk_456D10  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_450320 +
push eax  +
call sub_41EE5A  +
call sub_4107A0  +
push eax  +
push 1  +
push offset aIos_baseEofbit  +
lea ecx [esp+10h] +
call sub_409DD0  +
push offset unk_456D10  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_450320 +
push eax  +
call sub_41EE5A  +
push 0FFFFFFFFh  +
push offset loc_441B56  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+30h] +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
push 0  +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 201h +
mov dword ptr [edi+18h] 6 +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
call loc_409F70  +
push 8  +
call sub_41C139  +
add esp 4 +
mov esi eax +
push 1  +
mov [ebp+var_4] 0 +
call sub_41AD0A  +
mov [esi+4] eax +
add esp 4 +
mov [edi+30h] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_443590 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41E447  +
mov dword ptr [edi] offset off_450028 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_450320 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_443590 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41E447  +
mov dword ptr [edi] offset off_450028 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_450304 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_443590 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_41E447  +
mov dword ptr [edi] offset off_450028 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+14h]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+18h]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+1Ch]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+20h]  +
***
mov eax [ebp+arg_0] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov eax [eax+4] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+28h]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+2Ch]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+30h]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+34h]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+0Ch]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+10h]  +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_45C524 +
cmp eax [ecx+4] +
jle loc_40A6C4  +
push offset dword_45C524  +
call sub_41C035  +
add esp 4 +
cmp dword_45C524 0FFFFFFFFh +
jnz loc_40A6C4  +
push offset dword_45C524  +
mov dword_459A40 offset loc_41159B +
mov dword_459A44 0 +
mov dword_459A48 0 +
mov dword_459A50 1 +
mov dword_459A54 offset oword_44FDA8 +
mov dword_459A58 24h +
mov dword_459A5C 103h +
mov dword_459A60 offset loc_41141F +
mov dword_459A64 0 +
mov dword_459A68 0 +
mov dword_459A70 1 +
mov dword_459A74 offset oword_44FDA8 +
mov dword_459A78 24h +
mov dword_459A7C 0FAh +
mov dword_459A80 offset loc_41146D +
mov dword_459A84 0 +
mov dword_459A88 0 +
mov dword_459A90 1 +
mov dword_459A94 offset oword_44FDA8 +
mov dword_459A98 24h +
mov dword_459A9C 107h +
mov dword_459AA0 offset loc_4115B8 +
mov dword_459AA4 0 +
mov dword_459AA8 0 +
mov dword_459AB0 1 +
mov dword_459AB4 offset oword_44FDA8 +
mov dword_459AB8 24h +
mov dword_459ABC 108h +
mov dword_459AC0 offset loc_411432 +
mov dword_459AC4 0 +
mov dword_459AC8 0 +
mov dword_459AD0 1 +
mov dword_459AD4 offset oword_44FDA8 +
mov dword_459AD8 24h +
mov dword_459ADC 109h +
mov dword_459AE0 offset loc_411492 +
mov dword_459AE4 0 +
mov dword_459AE8 0 +
mov dword_459AF0 1 +
mov dword_459AF4 offset oword_44FDA8 +
mov dword_459AF8 24h +
mov dword_459AFC 10Ah +
mov dword_459B00 offset loc_411526 +
mov dword_459B04 0 +
mov dword_459B08 0 +
mov dword_459B10 1 +
mov dword_459B14 offset oword_44FDA8 +
mov dword_459B18 24h +
mov dword_459B1C 10Bh +
mov dword_459B20 offset loc_4115D5 +
mov dword_459B24 0 +
mov dword_459B28 0 +
mov dword_459B30 1 +
mov dword_459B34 offset oword_44FDA8 +
mov dword_459B38 24h +
mov dword_459B3C 10Fh +
mov dword_459B40 offset loc_4114FF +
mov dword_459B44 0 +
mov dword_459B48 0 +
mov dword_459B50 0 +
mov dword_459B54 0 +
mov dword_459B58 0 +
mov dword_459B5C 0 +
mov dword_459B60 0 +
mov dword_459B64 0 +
mov dword_459B68 0 +
call sub_41BFF6  +
add esp 4 +
mov eax offset unk_459A30 +
retn   +
***
cmp [ebp+arg_14] 0 +
mov edx ecx +
jnz loc_40A7E5  +
mov eax [ebp+arg_4] +
cmp eax 7 +
jnz loc_40A705  +
push dword ptr [edx+84h]  +
call ds:SetFocus  +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 0 +
mov eax 1 +
pop ebp  +
retn 18h  +
cmp eax 5 +
jnz loc_40A73B  +
mov ecx [ebp+arg_C] +
mov eax ecx +
push 1  +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push 0  +
push 0  +
push dword ptr [edx+84h]  +
call ds:MoveWindow  +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 0 +
mov eax 1 +
pop ebp  +
retn 18h  +
cmp eax 2 +
jnz loc_40A756  +
sub esp 10h +
call sub_40BE00  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
mov eax 1 +
pop ebp  +
retn 18h  +
cmp eax 112h +
jz loc_40A7DC  +
cmp eax 8001h +
jnz loc_40A779  +
mov eax [ebp+arg_10] +
test edx edx +
jz loc_40A6F6  +
lea ecx [edx+58h] +
mov [eax] ecx +
mov eax 1 +
pop ebp  +
retn 18h  +
cmp eax 16h +
jnz loc_40A7B4  +
cmp [ebp+arg_8] 0 +
jnz loc_40A793  +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 18h  +
push 0  +
push 0  +
push 10h  +
push dword ptr [edx+4]  +
call ds:PostMessageW  +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 0 +
mov eax 1 +
pop ebp  +
retn 18h  +
cmp eax 24h +
jnz loc_40A7E5  +
cmp dword ptr [edx+0C8h] 0FFFFFFFFh +
mov eax [ebp+arg_C] +
jz loc_40A7CC  +
mov dword ptr [eax+18h] 320h +
cmp dword ptr [edx+0CCh] 0FFFFFFFFh +
jz loc_40A7DC  +
mov dword ptr [eax+1Ch] 258h +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 0 +
xor eax eax +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_441C9D  +
mov eax large fs:0 +
push eax  +
sub esp 2E4h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_234] esi +
mov [ebp+var_238] esi +
mov eax ds:DefWindowProcW +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov [ebp+var_23C] esi +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+20h] eax +
push 40h  +
push 0  +
push 0  +
mov [ebp+var_4] 0 +
mov ebx ds:LoadImageW +
push 1  +
push 87h  +
mov dword ptr [esi+6Ch] 0 +
mov dword ptr [esi+70h] 0 +
push dword_45B4A8  +
call ebx  +
push 0  +
mov [esi+6Ch] eax +
mov edi dword_45B4A8 +
mov esi ds:GetSystemMetrics +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
push 1  +
push 87h  +
push edi  +
call ebx  +
mov ebx [ebp+var_234] +
mov [ebx+70h] eax +
movups xmm0 oword ptr ds:oword_443450 +
xor eax eax +
movups oword ptr [ebx+28h] xmm0 +
movups xmm0 oword ptr ds:oword_443450 +
mov [ebx+48h] eax +
mov dword ptr [ebx+4Ch] 0FEFEFEFEh +
movups oword ptr [ebx+38h] xmm0 +
movups xmm0 oword ptr ds:oword_450124 +
movups oword ptr [ebx+28h] xmm0 +
movups xmm0 oword ptr ds:oword_44FDA8 +
mov dword ptr [ebx+48h] 10001h +
movups oword ptr [ebx+38h] xmm0 +
mov [ebx+54h] eax +
mov [ebx+74h] eax +
mov [ebx+78h] eax +
mov [ebx+7Ch] eax +
mov [ebx+80h] eax +
mov [ebx+84h] eax +
call sub_409210  +
mov dword ptr [ebx+88h] 0 +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+90h] 0 +
mov dword ptr [ebx+94h] 0 +
mov dword ptr [ebx+98h] 0 +
mov dword ptr [ebx+9Ch] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
lea eax [ebx+0A8h] +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_40A983  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
mov byte ptr [ebp+var_4] 0Bh +
call sub_401B70  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setnz al  +
test eax eax +
jnz loc_40A9A8  +
push 80004005h  +
call loc_401490  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebx+0C0h] eax +
lea eax [ebp+Buffer] +
mov byte ptr [ebp+var_4] 0Ch +
push eax  +
push 104h  +
mov byte ptr [ebx+0C4h] 0 +
mov dword ptr [ebx+0C8h] 0FFFFFFFFh +
mov dword ptr [ebx+0CCh] 0FFFFFFFFh +
call ds:GetTempPathW  +
push offset aSpinner_html  +
lea eax [ebp+Buffer] +
push 104h  +
push eax  +
call sub_429CC2  +
lea eax [ebp+Buffer] +
push eax  +
lea ecx [ebp+var_2F0] +
call sub_40CCB0  +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_230] +
push 0  +
push offset dword_45C500  +
mov [ebp+var_21C] 0Fh +
mov [ebp+var_220] 0 +
mov byte ptr [ebp+var_230] 0 +
call loc_40EBB0  +
lea edx [ebp+var_230] +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_2F0] +
call sub_4108B0  +
mov eax [ebx+90h] +
lea ecx [ebp+Buffer] +
cmp ecx eax +
jz loc_40AA8F  +
push eax  +
call ds:SysFreeString  +
lea eax [ebp+Buffer] +
push eax  +
call ds:SysAllocString  +
mov [ebx+90h] eax +
test eax eax +
jnz loc_40AA8F  +
push 8007000Eh  +
call loc_401490  +
mov eax [ebp+var_21C] +
cmp eax 10h +
jb loc_40AAAD  +
inc eax  +
lea ecx [ebp+var_230] +
push eax  +
push [ebp+var_230]  +
call loc_40F8E0  +
mov eax [ebp+var_2F0] +
mov [ebp+var_21C] 0Fh +
mov [ebp+var_220] 0 +
mov byte ptr [ebp+var_230] 0 +
mov eax [eax+4] +
mov [ebp+eax+var_2F0] offset off_44FDD0 +
mov eax [ebp+var_2F0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_2F4] eax +
lea ecx [ebp+var_2EC] +
call sub_40D550  +
mov eax [ebp+var_2F0] +
mov eax [eax+4] +
mov [ebp+eax+var_2F0] offset off_4502B0 +
mov eax [ebp+var_2F0] +
mov edx [eax+4] +
lea ecx [edx-8] +
mov [ebp+edx+var_2F4] ecx +
lea eax [ebp+var_288] +
mov byte ptr [ebp+var_4] 0Fh +
push eax  +
mov [ebp+var_288] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+14h] +
test eax eax +
jz locret_40AB6D  +
push eax  +
call sub_41A775  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441650  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40AB9F  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441650  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ecx] +
or eax 0FFFFFFFFh +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40ABEC  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_44FDD0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+esi-6Ch] eax +
lea ecx [esi-64h] +
call sub_40D550  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_4502B0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-6Ch] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov edx [edi+0C0h] +
or eax 0FFFFFFFFh +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40ACD4  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [edi+0BCh] +
lea esi [edi+0A8h] +
cmp eax 8 +
jb loc_40ACF0  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40AD06  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
push dword ptr [edi+0A4h]  +
mov esi ds:SysFreeString +
call esi  +
push dword ptr [edi+0A0h]  +
call esi  +
push dword ptr [edi+9Ch]  +
call esi  +
push dword ptr [edi+98h]  +
call esi  +
push dword ptr [edi+94h]  +
call esi  +
push dword ptr [edi+90h]  +
call esi  +
mov ecx [edi+8Ch] +
test ecx ecx +
jz loc_40AD51  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [edi+88h] +
test ecx ecx +
jz loc_40AD61  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [edi+54h] +
test ecx ecx +
jz loc_40AD6E  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [edi+6Ch] +
mov esi ds:DestroyIcon +
test eax eax +
jz loc_40AD85  +
push eax  +
call esi  +
mov dword ptr [edi+6Ch] 0 +
mov eax [edi+70h] +
test eax eax +
jz loc_40AD96  +
push eax  +
call esi  +
mov dword ptr [edi+70h] 0 +
mov eax [edi+14h] +
test eax eax +
jz loc_40ADA3  +
push eax  +
call sub_41A775  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
test edi edi +
jz loc_40ADCE  +
lea ecx [edi+58h] +
jmp loc_40ADD0  +
xor ecx ecx +
lea ebx [edi+88h] +
push ebx  +
call sub_40DD20  +
mov esi eax +
test esi esi +
js loc_40AE1D  +
push dword ptr [ebx]  +
add edi 54h +
mov ecx edi +
call sub_410E80  +
test al al +
jnz loc_40AE1D  +
mov ecx [ebx] +
test edi edi +
jz loc_40AE1D  +
mov ebx [edi] +
test ecx ecx +
jz loc_40AE0D  +
mov eax [ecx] +
push edi  +
push offset unk_4500F4  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jns loc_40AE13  +
mov dword ptr [edi] 0 +
test ebx ebx +
jz loc_40AE1D  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441D39  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] edx +
mov edi ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 1 +
mov [ebp+var_10] 0 +
lea eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call sub_40E540  +
mov eax [ebp+var_10] +
mov dword ptr [edi] 0 +
test eax eax +
jz loc_40AEA7  +
mov ecx [eax] +
push edi  +
push offset unk_44FD10  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
mov eax [ebp+var_10] +
jns loc_40AEA7  +
mov dword ptr [edi] 0 +
mov ebx [edi] +
mov [ebp+var_14] 1 +
test ebx ebx +
jz loc_40AF12  +
push ecx  +
mov ecx [ebp+arg_C] +
mov esi esp +
add ecx 0FFFFFFF0h +
mov [ebp+var_20] esp +
mov [ebp+var_24] esi +
call loc_403100  +
add eax 10h +
mov [esi] eax +
push ecx  +
mov byte ptr [ebp+var_4] 4 +
mov esi esp +
mov ecx [ebp+arg_8] +
mov [ebp+var_24] esi +
lea ecx [ecx-10h] +
call loc_403100  +
push 1  +
push [ebp+arg_0]  +
add eax 10h +
push [ebp+var_18]  +
mov [esi] eax +
mov eax [ebx] +
push ebx  +
mov byte ptr [ebp+var_4] 3 +
call dword ptr [eax+0Ch]  +
test eax eax +
jns loc_40AF0F  +
mov ecx [edi] +
test ecx ecx +
jz loc_40AF0F  +
mov dword ptr [edi] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 2 +
test eax eax +
jz loc_40AF20  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov byte ptr [ebp+var_4] 1 +
or esi 0FFFFFFFFh +
mov edx [ebp+arg_8] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40AF41  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+arg_C] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] esi +
dec esi  +
test esi esi +
jg loc_40AF5D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov al byte ptr [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push [ebp+hWndParent]  +
lea ecx [edi-58h] +
mov [edi+6Ch] al +
call sub_40BEE0  +
mov esi eax +
test esi esi +
js loc_40B06E  +
push 0  +
push dword ptr [edi-54h]  +
call ds:GetSystemMenu  +
push 0  +
push 0  +
push 800h  +
push eax  +
call ds:AppendMenuW  +
push 0FFFFFFE6h  +
push dword ptr [edi-54h]  +
call ds:GetClassLongW  +
push eax  +
push 0FFFFFFE6h  +
push dword ptr [edi-54h]  +
call ds:SetClassLongW  +
lea ecx [edi+14h] +
call sub_40C7C0  +
test eax eax +
jnz loc_40AFF9  +
mov esi 80004005h +
jmp loc_40B06E  +
push [ebp+nCmdShow]  +
push dword ptr [edi-54h]  +
call ds:ShowWindow  +
push [ebp+lpString]  +
push dword ptr [edi-54h]  +
call ds:SetWindowTextW  +
push [ebp+arg_14]  +
lea ecx [edi+4Ch] +
call loc_404310  +
push offset aShowingSpinner  +
push offset aAdobe_asi  +
call sub_411B90  +
push eax  +
call sub_411F50  +
add esp 0Ch +
lea eax [ebp+arg_C] +
lea ecx [edi-58h] +
push eax  +
call sub_40C200  +
push offset pvarg  +
push offset pvarg  +
push offset pvarg  +
mov ecx [eax] +
push offset pvarg  +
push dword ptr [edi+38h]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+2Ch]  +
mov esi eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_40B06E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov edx [ebp+lpString] +
or edi 0FFFFFFFFh +
add edx 0FFFFFFF0h +
mov eax edi +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B08B  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp+arg_14] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] edi +
dec edi  +
test edi edi +
jg loc_40B0A3  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_40B0C3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
mov [ebp+arg_4] eax +
lea ecx [ecx+2Ch] +
pop ebp  +
jmp sub_411020  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SysFreeString +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
mov eax [esi+3Ch] +
cmp edi eax +
jz loc_40B11A  +
push eax  +
call ebx  +
test edi edi +
jz loc_40B113  +
push edi  +
call ds:SysAllocString  +
mov [esi+3Ch] eax +
test eax eax +
jnz loc_40B11A  +
jmp loc_40B1F8  +
mov dword ptr [esi+3Ch] 0 +
mov eax [esi+40h] +
mov edi [ebp+10h] +
cmp edi eax +
jz loc_40B145  +
push eax  +
call ebx  +
test edi edi +
jz loc_40B13E  +
push edi  +
call ds:SysAllocString  +
mov [esi+40h] eax +
test eax eax +
jnz loc_40B145  +
jmp loc_40B202  +
mov dword ptr [esi+40h] 0 +
mov eax [esi+44h] +
mov edi [ebp+14h] +
cmp edi eax +
jz loc_40B170  +
push eax  +
call ebx  +
test edi edi +
jz loc_40B169  +
push edi  +
call ds:SysAllocString  +
mov [esi+44h] eax +
test eax eax +
jnz loc_40B170  +
jmp loc_40B20C  +
mov dword ptr [esi+44h] 0 +
mov eax [esi+48h] +
mov edi [ebp+18h] +
cmp edi eax +
jz loc_40B19B  +
push eax  +
call ebx  +
test edi edi +
jz loc_40B194  +
push edi  +
call ds:SysAllocString  +
mov [esi+48h] eax +
test eax eax +
jnz loc_40B19B  +
jmp loc_40B216  +
mov dword ptr [esi+48h] 0 +
push dword ptr [esi+3Ch]  +
call ds:SysStringLen  +
test eax eax +
setz bl  +
test bl bl +
jnz loc_40B1EA  +
lea eax [ebp+8] +
push eax  +
lea ecx [esi-58h] +
call sub_40C200  +
mov eax [ebp+8] +
test eax eax +
jz loc_40B1EA  +
mov ecx [eax] +
push offset pvarg  +
push offset pvarg  +
push offset pvarg  +
push offset pvarg  +
push dword ptr [esi+3Ch]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [ebp+8] +
test eax eax +
jz loc_40B1EA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
test bl bl +
pop edi  +
pop esi  +
setnz al  +
pop ebx  +
pop ebp  +
retn 14h  +
***
push 8007000Eh  +
call loc_401490  +
push 8007000Eh  +
call loc_401490  +
push 8007000Eh  +
call loc_401490  +
push 8007000Eh  +
call loc_401490  +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+4] +
cmp eax 206h +
jz loc_40B2A3  +
cmp eax 204h +
jz loc_40B2A3  +
cmp eax 205h +
jz loc_40B2A3  +
cmp eax 100h +
jb loc_40B25D  +
cmp eax 109h +
jbe loc_40B26B  +
cmp eax 200h +
jb loc_40B2A3  +
cmp eax 20Dh +
ja loc_40B2A3  +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi+2Ch]  +
call ds:IsWindow  +
test eax eax +
jnz loc_40B287  +
pop edi  +
mov eax 1 +
pop esi  +
pop ebp  +
retn 8  +
push esi  +
push 0  +
push 37Fh  +
push dword ptr [edi+2Ch]  +
call ds:SendMessageW  +
neg eax  +
pop edi  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
mov eax 1 +
pop esi  +
pop ebp  +
retn 8  +
***
test [ebp+arg_18] 40030h +
jnz loc_40B2DF  +
mov eax [ebp+arg_0] +
push 1  +
push 0  +
push 0  +
push [ebp+lpFile]  +
push offset Operation  +
push dword ptr [eax-5Ch]  +
call ds:ShellExecuteW  +
mov eax 1 +
pop ebp  +
retn 20h  +
mov eax 80004005h +
pop ebp  +
retn 20h  +
***
xor eax eax +
cmp [ebp+arg_4] eax +
setnz al  +
lea eax ds:80040100h[eax*4] +
pop ebp  +
retn 14h  +
***
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
test ecx ecx +
setnz bl  +
lea ebx ds:80040100h[ebx*4] +
test ecx ecx +
jz loc_40B36D  +
push esi  +
mov edx offset unk_443480 +
mov esi 0Ch +
mov eax [ecx] +
cmp eax [edx] +
jnz loc_40B365  +
add ecx 4 +
add edx 4 +
sub esi 4 +
jnb loc_40B334  +
cmp [ebp+arg_8] 28h +
jnz loc_40B365  +
mov eax [ebp+arg_14] +
mov ecx 0Bh +
pop esi  +
pop ebx  +
mov [eax] cx +
or ecx 0FFFFFFFFh +
mov [eax+8] cx +
xor eax eax +
pop ebp  +
retn 18h  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ebp+arg_8] +
lea ecx [ebp+arg_8] +
push dword ptr [eax+8]  +
call sub_402B90  +
mov edx [ebp+arg_8] +
or eax 0FFFFFFFFh +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B3AC  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
pop ebp  +
retn 20h  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_459094 +
xor eax esp +
mov [esp+20h] eax +
mov eax large fs:2Ch +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov ecx [eax] +
mov eax dword_45C5BC +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+18h] +
cmp eax [ecx+4] +
jle loc_40B41A  +
push offset dword_45C5BC  +
call sub_41C035  +
add esp 4 +
cmp dword_45C5BC 0FFFFFFFFh +
jnz loc_40B41A  +
call sub_411840  +
push offset loc_442EF0  +
call sub_41C4A9  +
add esp 4 +
push offset dword_45C5BC  +
call sub_41BFF6  +
add esp 4 +
push offset aInsideOnnaviga  +
push offset aAdobe_asi  +
push offset dword_45C528  +
call sub_411F50  +
mov edx [ebx+8] +
xor eax eax +
add esp 0Ch +
mov dword ptr [esp+28h] 7 +
mov dword ptr [esp+24h] 0 +
mov [esp+14h] ax +
cmp [edx] ax +
jnz loc_40B454  +
xor ecx ecx +
jmp loc_40B46F  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40B460  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+1Ch] +
call loc_402D90  +
cmp word ptr [edi] 3 +
jnz loc_40B538  +
push dword ptr [edi+8]  +
push offset aOnnavigateerro  +
push offset aAdobe_asi  +
push ecx  +
call sub_411B90  +
add esp 4 +
push eax  +
call sub_411F50  +
mov eax [edi+8] +
add esp 10h +
cmp eax 800C0005h +
jz loc_40B4F2  +
cmp eax 190h +
jl loc_40B4C2  +
cmp eax 197h +
jz loc_40B4C2  +
cmp eax 193h +
jnz loc_40B4F2  +
cmp eax 0C8h +
jnz loc_40B538  +
sub esp 18h +
xor eax eax +
mov ecx esp +
push 0FFFFFFFFh  +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ecx] ax +
lea eax [esp+34h] +
push eax  +
call loc_402FE0  +
push 0  +
jmp loc_40B519  +
sub esp 18h +
xor eax eax +
mov ecx esp +
push 0FFFFFFFFh  +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ecx] ax +
lea eax [esp+34h] +
push eax  +
call loc_402FE0  +
push 2  +
mov ecx esi +
call sub_40C270  +
mov ecx esi +
call sub_40C140  +
cmp byte ptr [esi+0C4h] 0 +
jz loc_40B538  +
push 0  +
call ds:PostQuitMessage  +
mov eax [esp+28h] +
cmp eax 8 +
jb loc_40B550  +
inc eax  +
lea ecx [esp+14h] +
push eax  +
push dword ptr [esp+18h]  +
call loc_402F00  +
mov ecx [esp+2Ch] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_441D68  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp+var_2C] esi +
xor eax eax +
mov [ebp+var_30] 0 +
push eax  +
push 824h  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_40E790  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
cmp [ebp+var_14] 8 +
mov [ebp+var_2C] 824h +
cmovnb ecx [ebp+var_28] +
cmp dword ptr [edi+14h] 8 +
jb loc_40B5ED  +
mov eax [edi] +
jmp loc_40B5EF  +
mov eax edi +
push 30000000h  +
lea edx [ebp+var_2C] +
push edx  +
push ecx  +
push eax  +
call ds:UrlCanonicalizeW  +
test eax eax +
js loc_40B62E  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
lea eax [ebp+var_28] +
push eax  +
call sub_403860  +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_40B679  +
inc ecx  +
push ecx  +
jmp loc_40B66E  +
push offset aUrlcanonicaliz  +
push offset aAdobe_asi  +
call sub_411B90  +
push eax  +
call sub_411F50  +
add esp 0Ch +
mov dword ptr [esi+14h] 7 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call loc_402FE0  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40B679  +
inc eax  +
push eax  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441D96  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
mov ebx [ebp+10h] +
mov edi [esi+90h] +
mov ecx edi +
mov eax [ebx+8] +
nop   +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_40B706  +
test dx dx +
jz loc_40B702  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_40B706  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_40B6E0  +
xor eax eax +
jmp loc_40B70B  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_40B716  +
push edi  +
call ds:DeleteFileW  +
mov edx [ebx+8] +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
cmp [edx] ax +
jnz loc_40B736  +
xor ecx ecx +
jmp loc_40B74F  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40B740  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_402D90  +
mov edx [esi+9Ch] +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov dword ptr [ebp-30h] 0 +
mov [ebp-40h] ax +
cmp [edx] ax +
jnz loc_40B77C  +
xor ecx ecx +
jmp loc_40B790  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40B781  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_402D90  +
push dword ptr [ebp-30h]  +
cmp dword ptr [ebp-2Ch] 8 +
lea eax [ebp-40h] +
push ecx  +
cmovnb eax [ebp-40h] +
lea ecx [ebp-28h] +
push eax  +
call loc_40E630  +
cmp eax 0FFFFFFFFh +
jz loc_40B979  +
test eax eax +
jnz loc_40B979  +
push offset aStartingType3W  +
push offset aAdobe_asi  +
call sub_411B90  +
push eax  +
call sub_411F50  +
add esp 0Ch +
lea edx [ebp-28h] +
lea ecx [ebp-0A0h] +
call sub_40B570  +
mov edi eax +
lea eax [ebp-28h] +
cmp eax edi +
jz loc_40B824  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_40B807  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402F00  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
push edi  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call sub_403860  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-8Ch] +
cmp eax 8 +
jb loc_40B849  +
inc eax  +
lea ecx [ebp-0A0h] +
push eax  +
push dword ptr [ebp-0A0h]  +
call loc_402F00  +
push offset a?redirect_uri  +
lea ecx [ebp-88h] +
call loc_402B10  +
cmp dword ptr [ebp-74h] 8 +
lea eax [ebp-88h] +
push 0FFFFFFFFh  +
push dword ptr [ebp-78h]  +
cmovnb eax [ebp-88h] +
push ecx  +
push eax  +
lea ecx [ebp-28h] +
call loc_40E630  +
add eax 0Eh +
lea ecx [ebp-28h] +
push eax  +
lea eax [ebp-70h] +
push eax  +
call sub_40CA20  +
lea eax [ebp-0A4h] +
mov ecx esi +
push eax  +
call sub_40C200  +
cmp dword ptr [ebp-5Ch] 8 +
lea eax [ebp-70h] +
push dword ptr [ebp-60h]  +
cmovnb eax [ebp-70h] +
push eax  +
call ds:SysAllocStringLen  +
mov ecx [ebp-0A4h] +
test ecx ecx +
jz loc_40B8D1  +
mov edx [ecx] +
push offset pvarg  +
push offset pvarg  +
push offset pvarg  +
push offset pvarg  +
push eax  +
push ecx  +
call dword ptr [edx+2Ch]  +
push 320h  +
push 258h  +
mov ecx esi +
call sub_40BAB0  +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
mov dword ptr [esi+0C8h] 320h +
mov dword ptr [esi+0CCh] 258h +
call ds:GetWindowLongW  +
or eax 50000h +
push eax  +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
call ds:SetWindowLongW  +
push dword ptr [esi+0A4h]  +
push dword ptr [esi+4]  +
call ds:SetWindowTextW  +
mov eax [ebp-0A4h] +
test eax eax +
jz loc_40B931  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-5Ch] +
cmp eax 8 +
jb loc_40B946  +
inc eax  +
lea ecx [ebp-70h] +
push eax  +
push dword ptr [ebp-70h]  +
call loc_402F00  +
xor eax eax +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
mov eax [ebp-74h] +
mov dword ptr [ebp-60h] 0 +
cmp eax 8 +
jb loc_40BA4E  +
inc eax  +
lea ecx [ebp-88h] +
push eax  +
push dword ptr [ebp-88h]  +
jmp loc_40BA49  +
mov edx [esi+98h] +
xor eax eax +
mov dword ptr [ebp-44h] 7 +
mov dword ptr [ebp-48h] 0 +
mov [ebp-58h] ax +
cmp [edx] ax +
jnz loc_40B99C  +
xor ecx ecx +
jmp loc_40B9B0  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40B9A1  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-58h] +
call loc_402D90  +
push dword ptr [ebp-48h]  +
mov edi [ebp-44h] +
lea eax [ebp-58h] +
cmp edi 8 +
push ecx  +
cmovnb eax [ebp-58h] +
lea ecx [ebp-28h] +
push eax  +
call loc_40E630  +
cmp eax 0FFFFFFFFh +
jz loc_40BA3A  +
test eax eax +
jnz loc_40BA3A  +
push offset aSignInIsSucces  +
push offset aAdobe_asi  +
call sub_411B90  +
push eax  +
call sub_411F50  +
sub esp 0Ch +
xor eax eax +
mov ecx esp +
push 0FFFFFFFFh  +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ecx] ax +
lea eax [ebp-28h] +
push eax  +
call loc_402FE0  +
push 0  +
mov ecx esi +
call sub_40C270  +
mov ecx esi +
call sub_40C140  +
cmp byte ptr [esi+0C4h] 0 +
jz loc_40BA37  +
push 0  +
call ds:PostQuitMessage  +
mov edi [ebp-44h] +
cmp edi 8 +
jb loc_40BA4E  +
lea eax [edi+1] +
push eax  +
push dword ptr [ebp-58h]  +
lea ecx [ebp-58h] +
call loc_402F00  +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_40BA63  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_402F00  +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-40h] ax +
mov eax [ebp-14h] +
mov dword ptr [ebp-30h] 0 +
cmp eax 8 +
jb loc_40BA8C  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402F00  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_459094 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
push ebx  +
push esi  +
mov ebx ecx +
lea eax [esp+54h+Rect] +
push edi  +
push eax  +
xorps xmm0 xmm0 +
mov [esp+5Ch+var_48] ebx +
push dword ptr [ebx+4]  +
movups oword ptr [esp+60h+Rect.left] xmm0 +
movups oword ptr [esp+60h+X] xmm0 +
call ds:GetClientRect  +
mov edi ds:GetWindowRect +
lea eax [esp+58h+X] +
push eax  +
push dword ptr [ebx+4]  +
call edi  +
mov ecx [esp+18h] +
mov esi [esp+58h+X] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
add eax ecx +
push 1  +
add edx esi +
mov [esp+24h] eax +
sub eax ecx +
mov [esp+20h] edx +
push eax  +
sub edx esi +
push edx  +
push ecx  +
push esi  +
push dword ptr [ebx+4]  +
call ds:MoveWindow  +
lea eax [esp+58h+var_34] +
push eax  +
push dword ptr [ebx+4]  +
call edi  +
push 0  +
lea eax [esp+5Ch+pvParam] +
push eax  +
push 0  +
push 30h  +
call ds:SystemParametersInfoW  +
mov eax [esp+58h+var_28] +
mov esi [esp+58h+var_30] +
sub eax esi +
sub esi [esp+58h+var_28] +
sub esi [esp+58h+var_20] +
add esi [esp+58h+var_18] +
mov ecx [esp+58h+var_2C] +
mov ebx [esp+58h+var_34] +
sub ecx ebx +
sub ebx [esp+58h+var_2C] +
sub ebx [esp+58h+pvParam] +
add ebx [esp+58h+var_1C] +
push 40h  +
push eax  +
mov eax esi +
cdq   +
sub eax edx +
sar eax 1 +
push ecx  +
push eax  +
mov eax ebx +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
mov eax [esp+6Ch+var_48] +
push 0  +
push dword ptr [eax+4]  +
call ds:SetWindowPos  +
mov ecx [esp+58h+var_4] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_8] +
test eax eax +
jz loc_40BBD2  +
cmp word ptr [eax] 0 +
jnz loc_40BBD2  +
mov eax [ebp+arg_0] +
push 0  +
push 0  +
push 10h  +
push dword ptr [eax+4]  +
call ds:PostMessageW  +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 18h +
mov eax dword_459094 +
xor eax esp +
mov [esp+18h+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [esp+20h+Y] +
push eax  +
xorps xmm0 xmm0 +
movups oword ptr [esp+24h+Y] xmm0 +
push dword ptr [edi+4]  +
call ds:GetWindowRect  +
mov esi [ebp+X] +
mov eax esi +
sub eax [esp+20h+Y] +
mov edx [esp+14h] +
mov ecx [esp+10h] +
add edx eax +
mov eax [esp+18h] +
push 1  +
sub eax ecx +
mov [esp+18h] edx +
push eax  +
sub edx esi +
mov [esp+28h+Y] esi +
push edx  +
push ecx  +
push esi  +
push dword ptr [edi+4]  +
call ds:MoveWindow  +
mov ecx [esp+20h+var_4] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_459094 +
xor eax esp +
mov [esp+14h+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esp+18h+X] +
push eax  +
xorps xmm0 xmm0 +
movups oword ptr [esp+1Ch+X] xmm0 +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
mov edx [ebp+Y] +
mov eax edx +
sub eax [esp+8] +
mov ecx [esp+10h] +
add ecx eax +
mov [esp+8] edx +
mov eax [esp+0Ch] +
push 1  +
mov [esp+14h] ecx +
sub ecx edx +
push ecx  +
mov ecx [esp+20h+X] +
sub eax ecx +
push eax  +
push edx  +
push ecx  +
push dword ptr [esi+4]  +
call ds:MoveWindow  +
mov ecx [esp+18h+var_4] +
pop esi  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 28h +
mov eax dword_459094 +
xor eax esp +
mov [esp+28h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+2Ch+Rect] +
push edi  +
push eax  +
xorps xmm0 xmm0 +
push dword ptr [ebx+84h]  +
movups oword ptr [esp+38h+Rect.left] xmm0 +
call ds:GetWindowRect  +
mov edi [esp+30h+Rect.left] +
lea eax [esp+30h+X] +
sub edi [esp+30h+Rect.right] +
xorps xmm0 xmm0 +
add edi [ebp+arg_4] +
push eax  +
push dword ptr [ebx+4]  +
movups oword ptr [esp+38h+X] xmm0 +
call ds:GetWindowRect  +
mov edx [esp+14h] +
mov eax [esp+18h] +
add edx edi +
mov ecx [esp+10h] +
sub eax ecx +
push 1  +
push eax  +
mov eax [esp+38h+X] +
mov [esp+1Ch] edx +
sub edx eax +
push edx  +
push ecx  +
push eax  +
push dword ptr [ebx+4]  +
call ds:MoveWindow  +
mov ecx [esp+30h+var_4] +
pop edi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 28h +
mov eax dword_459094 +
xor eax esp +
mov [esp+28h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+2Ch+Rect] +
push edi  +
push eax  +
xorps xmm0 xmm0 +
push dword ptr [ebx+84h]  +
movups oword ptr [esp+38h+Rect.left] xmm0 +
call ds:GetWindowRect  +
mov edi [esp+30h+Rect.top] +
lea eax [esp+30h+X] +
sub edi [esp+30h+Rect.bottom] +
xorps xmm0 xmm0 +
add edi [ebp+arg_4] +
push eax  +
push dword ptr [ebx+4]  +
movups oword ptr [esp+38h+X] xmm0 +
call ds:GetWindowRect  +
mov eax [esp+18h] +
mov edx [esp+10h] +
add eax edi +
mov ecx [esp+30h+X] +
push 1  +
mov [esp+1Ch] eax +
sub eax edx +
push eax  +
mov eax [esp+1Ch] +
sub eax ecx +
push eax  +
push edx  +
push ecx  +
push dword ptr [ebx+4]  +
call ds:MoveWindow  +
mov ecx [esp+30h+var_4] +
pop edi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
mov esi ecx +
call sub_40C140  +
sub esp 18h +
xor eax eax +
mov ecx esp +
push eax  +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push offset String  +
mov [ecx] ax +
call loc_402D90  +
push 1  +
mov ecx esi +
call sub_40C270  +
cmp byte ptr [esi+0C4h] 0 +
jz loc_40BE49  +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 14h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
lea eax [ebp+X] +
push eax  +
xorps xmm0 xmm0 +
movups oword ptr [ebp+X] xmm0 +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov eax [ebp-8] +
mov edx [ebp-10h] +
sub eax edx +
mov ecx [ebp+X] +
push 0  +
push hModule  +
push 0  +
push dword ptr [esi+4]  +
push eax  +
mov eax [ebp-0Ch] +
sub eax ecx +
push eax  +
push edx  +
push ecx  +
push 50000000h  +
push offset String  +
push offset ClassName  +
push 0  +
call ds:CreateWindowExW  +
push eax  +
mov [esi+84h] eax +
call ds:IsWindow  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441DD0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push [ebp+hWndParent]  +
lea eax [edi+20h] +
push eax  +
push offset unk_459C00  +
call sub_410500  +
add esp 8 +
movzx eax ax +
mov ecx edi +
push eax  +
push 0  +
push 0  +
push 6CF0000h  +
push 0  +
push 0  +
push [ebp+hWndParent]  +
call sub_410800  +
push dword ptr [edi+4]  +
call ds:IsWindow  +
test eax eax +
jnz loc_40BF5D  +
mov eax 80004005h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edi +
call sub_40BE60  +
test eax eax +
jz loc_40BF44  +
push 0CA0000h  +
push 0FFFFFFF0h  +
push dword ptr [edi+4]  +
call ds:SetWindowLongW  +
push 2A8h  +
push 226h  +
mov ecx edi +
call sub_40BAB0  +
mov ecx [edi+88h] +
xor esi esi +
mov [ebp+var_10] esi +
mov ebx 80004005h +
test ecx ecx +
jz loc_40BFB8  +
mov eax [ecx] +
lea edx [ebp+var_10] +
push edx  +
push offset unk_44FEF8  +
push ecx  +
call dword ptr [eax]  +
mov esi [ebp+var_10] +
xor ecx ecx +
test eax eax +
cmovs esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40C003  +
push offset stru_44FB1C  +
lea ecx [ebp+hWndParent] +
call loc_4042B0  +
push 0  +
mov byte ptr [ebp+var_4] 1 +
push dword ptr [edi+84h]  +
mov ecx [esi] +
push dword ptr [eax]  +
push esi  +
call dword ptr [ecx+0Ch]  +
mov byte ptr [ebp+var_4] 0 +
mov ebx eax +
push [ebp+hWndParent]  +
call ds:SysFreeString  +
test ebx ebx +
js loc_40C000  +
mov ecx edi +
call sub_40C030  +
mov ebx eax +
mov esi [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_40C014  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441E00  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push dword ptr [edi+4]  +
call ds:IsWindow  +
test eax eax +
jnz loc_40C07C  +
mov eax 80004005h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov [ebp+var_14] 0 +
lea eax [ebp+var_14] +
mov [ebp+var_4] 0 +
push eax  +
push ecx  +
lea ecx [edi+84h] +
call sub_4110D0  +
mov esi eax +
test esi esi +
js loc_40C111  +
mov eax [ebp+var_14] +
lea edx [edi+58h] +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
js loc_40C111  +
lea eax [ebp+var_10] +
mov ecx edi +
push eax  +
call sub_40C200  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_10] +
push 0FFFFFFFFh  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0F8h]  +
lea edx [edi+24h] +
xor eax eax +
cmp dword ptr [edx+28h] 0FEFEFEFEh +
lea ecx [edx+28h] +
setz al  +
test eax eax +
jnz loc_40C0F0  +
push 80004005h  +
call loc_401490  +
push ecx  +
mov ecx [ebp+var_10] +
push offset oword_44FDA8  +
call sub_404500  +
mov esi eax +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_10] +
test eax eax +
jz loc_40C111  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
test eax eax +
jz loc_40C125  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4417F8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] 0 +
lea eax [ebp+var_10] +
mov [ebp+var_4] 0 +
push eax  +
push ecx  +
lea ecx [edi+84h] +
call sub_4110D0  +
mov esi eax +
test esi esi +
js loc_40C1CF  +
mov eax [ebp+var_10] +
push 0  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
js loc_40C1CF  +
lea eax [ebp+var_14] +
mov ecx edi +
push eax  +
call sub_40C200  +
push dword ptr [edi+4Ch]  +
mov ecx [ebp+var_14] +
mov edx offset oword_44FDA8 +
call sub_404590  +
mov esi eax +
mov dword ptr [edi+4Ch] 0FEFEFEFEh +
mov eax [ebp+var_14] +
test eax eax +
jz loc_40C1CF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
test eax eax +
jz loc_40C1E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441E39  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
mov dword ptr [esi] 0 +
push esi  +
push ecx  +
mov [ebp+var_4] 0 +
add ecx 84h +
mov [ebp+var_10] 1 +
call sub_411020  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441E70  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0  +
mov [ebp+var_4] 0 +
push dword ptr [esi+4]  +
call ds:ShowWindow  +
lea eax [ebp+arg_4] +
push eax  +
call loc_40C400  +
push 0  +
push 80h  +
push 3  +
push 0  +
push 0  +
push 40000000h  +
push dword ptr [esi+0A0h]  +
call ds:CreateFileW  +
mov ebx eax +
mov [ebp+var_18] 7 +
xor eax eax +
mov [ebp+var_1C] 0 +
mov word ptr [ebp+lpBuffer] ax +
mov ecx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 1 +
sub ecx eax +
jz loc_40C31E  +
sub ecx 1 +
jz loc_40C315  +
sub ecx 1 +
lea ecx [ebp+lpBuffer] +
jz loc_40C30C  +
push 25h  +
push offset aErrornoError25  +
jmp loc_40C347  +
push 23h  +
push offset aErrornoError2E  +
jmp loc_40C347  +
push 23h  +
push offset aErrornoError1E  +
jmp loc_40C344  +
push 0Dh  +
push offset aResultUrl  +
lea ecx [ebp+lpBuffer] +
call loc_40CA60  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+lpBuffer] +
call loc_40E830  +
push 0Fh  +
push offset aUrlResult  +
lea ecx [ebp+lpBuffer] +
call loc_40CA60  +
mov esi [ebp+var_18] +
lea edx [ebp+lpBuffer] +
cmp esi 8 +
mov [ebp+NumberOfBytesWritten] 0 +
cmovnb edx [ebp+lpBuffer] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_40C363  +
sub edx ecx +
lea eax [ebp+NumberOfBytesWritten] +
sar edx 1 +
lea ecx [ebp+lpBuffer] +
push 0  +
push eax  +
cmp esi 8 +
lea eax ds:2[edx*2] +
cmovnb ecx [ebp+lpBuffer] +
push eax  +
push ecx  +
push ebx  +
call ds:WriteFile  +
push ebx  +
call ds:CloseHandle  +
mov eax [ebp+var_18] +
cmp eax 8 +
jb loc_40C3AE  +
inc eax  +
lea ecx [ebp+lpBuffer] +
push eax  +
push [ebp+lpBuffer]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_18] 7 +
mov word ptr [ebp+lpBuffer] ax +
mov eax [ebp+arg_18] +
mov [ebp+var_1C] 0 +
cmp eax 8 +
jb loc_40C3D7  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_402F00  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441EAE  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
xor eax eax +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-2Ch] ax +
mov [ebp-4] eax +
mov eax [esi+10h] +
cmp eax 7 +
jz loc_40C472  +
push 1  +
push eax  +
lea ecx [ebp-2Ch] +
call loc_402F60  +
test al al +
jz loc_40C472  +
cmp dword ptr [ebp-18h] 8 +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-1Ch] 0 +
cmovnb eax [ebp-2Ch] +
xor ecx ecx +
mov [eax] cx +
xor edi edi +
cmp [esi+10h] edi +
jz loc_40C4F4  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40C48C  +
mov eax [esi] +
jmp loc_40C48E  +
mov eax esi +
movzx eax word ptr [eax+edi*2] +
add eax 0FFFFFFDEh +
cmp eax 1Ch +
ja loc_40C4D5  +
movzx eax ds:byte_40C568[eax] +
jmp ds:off_40C550[eax*4]  +
push 5  +
push offset aAmp  +
jmp loc_40C4E6  +
push 6  +
push offset aQuot  +
jmp loc_40C4E6  +
push 6  +
push offset aApos  +
jmp loc_40C4E6  +
push 4  +
push offset aLt  +
jmp loc_40C4E6  +
push 4  +
push offset aGt  +
jmp loc_40C4E6  +
cmp ecx 8 +
jb loc_40C4DE  +
mov eax [esi] +
jmp loc_40C4E0  +
mov eax esi +
push 1  +
lea eax [eax+edi*2] +
push eax  +
lea ecx [ebp-2Ch] +
call loc_40CA60  +
inc edi  +
cmp edi [esi+10h] +
jnz loc_40C480  +
lea eax [ebp-2Ch] +
cmp esi eax +
jz loc_40C51B  +
push eax  +
mov ecx esi +
call sub_40E710  +
mov ecx [esi+10h] +
mov eax [ebp-1Ch] +
mov [esi+10h] eax +
mov eax [ebp-18h] +
mov [ebp-1Ch] ecx +
mov ecx [esi+14h] +
mov [esi+14h] eax +
mov [ebp-18h] ecx +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_40C530  +
inc eax  +
lea ecx [ebp-2Ch] +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402F00  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jz loc_40C5A0  +
lea esi [eax-5Ch] +
jmp loc_40C5A2  +
xor esi esi +
mov edx [ebp+arg_C] +
test edx edx +
jnz loc_40C5B3  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 10h  +
mov ecx [ebp+arg_4] +
mov dword ptr [edx] 0 +
mov eax [ecx] +
cmp eax ds:dword_443470 +
jnz loc_40C5F9  +
mov eax [ecx+4] +
cmp eax ds:dword_443474 +
jnz loc_40C5F9  +
mov eax [ecx+8] +
cmp eax ds:dword_443478 +
jnz loc_40C5F9  +
mov eax [ecx+0Ch] +
cmp eax ds:dword_44347C +
jnz loc_40C5F9  +
mov ecx [esi+50h] +
lea eax [esi+50h] +
push edx  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx]  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax 80004002h +
pop esi  +
pop ebp  +
retn 10h  +
***
and esp 0FFFFFFF8h +
sub esp 2Ch +
mov eax dword_459094 +
xor eax esp +
mov [esp+2Ch+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [esp+30h+var_28] eax +
mov eax [ebp+arg_14] +
push esi  +
mov [esp+34h+var_20] eax +
mov eax [ebp+arg_18] +
push edi  +
mov [esp+38h+var_24] eax +
call sub_40A3F0  +
mov edi eax +
mov ecx [edi+4] +
test ecx ecx +
jz loc_40C6D0  +
mov ebx [ebp+arg_4] +
cmp dword ptr [edi] 1 +
jnz loc_40C6C6  +
cmp [edi+0Ch] ebx +
jnz loc_40C6C6  +
mov edx offset oword_44FDA8 +
mov esi 0Ch +
mov eax [ecx] +
cmp eax [edx] +
jnz loc_40C6C6  +
add ecx 4 +
add edx 4 +
sub esi 4 +
jnb loc_40C665  +
mov esi [edi+18h] +
test esi esi +
jnz loc_40C69A  +
mov ecx [esp+38h+var_28] +
lea esi [esp+38h+var_1C] +
mov edx esi +
push edx  +
push [ebp+arg_C]  +
mov eax [ecx] +
push ebx  +
push offset oword_44FDA8  +
call dword ptr [eax+1Ch]  +
test eax eax +
js loc_40C6D0  +
push dword ptr [edi+14h]  +
mov ecx [esp+4Ch+var_38] +
push dword ptr [edi+10h]  +
push [esp+50h+var_34]  +
push [esp+54h+var_30]  +
push esi  +
call loc_40E400  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+50h+var_28] +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 24h  +
mov ecx [edi+24h] +
add edi 20h +
test ecx ecx +
jnz loc_40C651  +
mov ecx [esp+38h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 24h  +
***
push esi  +
mov edi ecx +
test edi edi +
jz loc_40C7CD  +
lea ebx [edi-6Ch] +
jmp loc_40C7CF  +
xor ebx ebx +
push dword ptr [edi]  +
push 1  +
push 80h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
push dword ptr [edi+4]  +
push 0  +
push 80h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
cmp dword ptr [edi] 0 +
jz loc_40C807  +
cmp dword ptr [edi+4] 0 +
jz loc_40C807  +
pop edi  +
mov eax 1 +
pop ebx  +
retn   +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_40C826  +
push eax  +
call ds:DestroyIcon  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_40C83B  +
push eax  +
call ds:DestroyIcon  +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441918  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0 +
mov edx off_459D4C +
mov eax [edx] +
cmp eax dword ptr ds:oword_443450 +
jnz loc_40C8F2  +
mov eax [edx+4] +
cmp eax dword ptr ds:oword_443450+4 +
jnz loc_40C8F2  +
mov eax [edx+8] +
cmp eax dword ptr ds:oword_443450+8 +
jnz loc_40C8F2  +
mov eax [edx+0Ch] +
cmp eax dword ptr ds:oword_443450+0Ch +
jnz loc_40C8F2  +
movups xmm0 oword ptr [ecx+4] +
movups oword ptr oword_45C42C xmm0 +
movups xmm0 oword ptr [ecx+14h] +
mov off_459D4C offset oword_45C42C +
mov off_459D48 offset oword_45C490 +
movups oword ptr oword_45C490 xmm0 +
movzx eax word ptr [ecx+24h] +
mov word_459D50 ax +
movzx eax word ptr [ecx+26h] +
mov word_459D52 ax +
mov esi dword_459D54 +
xor edi edi +
test esi esi +
jnz loc_40C913  +
push [ebp+lcid]  +
mov ecx offset off_459D48 +
call sub_404B70  +
mov esi dword_459D54 +
mov edi eax +
mov [ebp+var_10] esi +
test esi esi +
jz loc_40C922  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
jmp loc_40C926  +
test edi edi +
js loc_40C939  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_404F00  +
add esp 0Ch +
mov edi eax +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_40C94A  +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ecx  +
mov ecx offset off_459D48 +
call loc_404800  +
pop ebp  +
retn 18h  +
***
cmp [ebp+arg_4] 0 +
jz loc_40C992  +
mov eax 8002000Bh +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_40C9A4  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 10h  +
mov ecx dword_459D54 +
xor eax eax +
test ecx ecx +
jnz loc_40C9C3  +
push [ebp+lcid]  +
mov ecx offset off_459D48 +
call sub_404B70  +
mov ecx dword_459D54 +
mov [esi] ecx +
mov ecx dword_459D54 +
test ecx ecx +
jz loc_40C9D7  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_40C9F3  +
mov eax 80004003h +
pop ebp  +
retn 8  +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_40CA12  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
xor eax eax +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 7 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_402FE0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_40CAB6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40CA7A  +
mov eax [esi] +
jmp loc_40CA7C  +
mov eax esi +
cmp edi eax +
jb loc_40CAB6  +
cmp ecx 8 +
jb loc_40CA89  +
mov edx [esi] +
jmp loc_40CA8B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_40CAB6  +
cmp ecx 8 +
jb loc_40CA9E  +
mov eax [esi] +
jmp loc_40CAA0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
call loc_40E830  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
or eax 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
sub eax edx +
cmp eax ecx +
jbe loc_40CB70  +
push ebx  +
lea ebx [edx+ecx] +
test ecx ecx +
jz loc_40CB67  +
cmp ebx 7FFFFFFEh +
ja loc_40CB7A  +
cmp [esi+14h] ebx +
jnb loc_40CB00  +
push edx  +
push ebx  +
mov ecx esi +
call sub_403300  +
mov ecx [ebp+0Ch] +
test ebx ebx +
jz loc_40CB67  +
cmp dword ptr [esi+14h] 8 +
jb loc_40CB2B  +
mov edx [esi] +
jmp loc_40CB2D  +
test ebx ebx +
jnz loc_40CAF6  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40CB1D  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop ebx  +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_40CB45  +
lea eax [ecx+ecx] +
push eax  +
mov eax [esi+10h] +
push edi  +
lea eax [edx+eax*2] +
push eax  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40CB5F  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40CBA4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_40F8E0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40CBBF  +
mov eax [esi] +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_40CC06  +
mov eax [esi+10h] +
add eax 1 +
jz loc_40CC10  +
push eax  +
push esi  +
push edi  +
call loc_41D160  +
add esp 0Ch +
jmp loc_40CC10  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40CC3D  +
mov eax [esi] +
mov byte ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edi +
mov byte ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [ecx] 0 +
jnz loc_40CC81  +
xor edx edx +
push edx  +
push ecx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov edx ecx +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_40CC87  +
sub edx edi +
pop edi  +
push edx  +
push ecx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441F12  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_451654 +
mov dword ptr [edi+68h] offset off_44FE00 +
mov [ebp+var_4] 0 +
lea esi [edi+4] +
mov eax [edi] +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4502B0 +
mov eax [edi] +
mov ecx [eax+4] +
push ecx  +
push esi  +
lea eax [ecx-8] +
mov [ecx+edi-4] eax +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
call sub_40FB00  +
mov [ebp+var_4] 2 +
mov eax [edi] +
mov [ebp+var_18] esi +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_44FDD0 +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_40FA40  +
push 0  +
push 0  +
mov ecx esi +
mov dword ptr [esi] offset off_44FD6C +
call sub_40F200  +
sub esp 8 +
mov byte ptr [ebp+var_4] 3 +
mov ecx esi +
push [ebp+arg_0]  +
call sub_40F3A0  +
test eax eax +
jnz loc_40CD95  +
mov eax [edi] +
mov ecx [eax+4] +
mov eax [ecx+edi+0Ch] +
add ecx edi +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_40CD8D  +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_410B20  +
add esp 4 +
mov ecx esi +
push eax  +
call sub_40F020  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+4Ch] 0 +
jz loc_40CDF9  +
mov eax [esi] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_40CDF9  +
push dword ptr [esi+4Ch]  +
call sub_429B73  +
add esp 4 +
test eax eax +
jns loc_40CDF9  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+4Ch] +
test ecx ecx +
jz loc_40CE48  +
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_40CE21  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_40CE21  +
lea eax [edx+4] +
jmp loc_40CE23  +
xor eax eax +
push [ebp+arg_4]  +
push eax  +
push edx  +
push ecx  +
call sub_42A438  +
add esp 10h +
test eax eax +
jnz loc_40CE48  +
push 1  +
push dword ptr [esi+4Ch]  +
mov ecx esi +
call sub_40F200  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov [esp+14h+var_8] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
mov [esp+18h+var_4] eax +
jz loc_40CF10  +
call sub_40F0B0  +
test al al +
jz loc_40CF10  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_42A60D  +
add esp 8 +
test eax eax +
jnz loc_40CF10  +
mov eax edi +
or eax ebx +
jz loc_40CEB6  +
push 1  +
push ebx  +
push edi  +
push dword ptr [esi+4Ch]  +
call sub_42A902  +
add esp 10h +
test eax eax +
jnz loc_40CF10  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_42A297  +
add esp 8 +
test eax eax +
jnz loc_40CF10  +
mov eax [ebp+arg_14] +
mov ecx esi +
mov [esi+40h] eax +
mov eax [ebp+arg_18] +
mov [esi+44h] eax +
call sub_40EFF0  +
mov eax [ebp+arg_0] +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx [esp+18h+var_8] +
mov [eax+8] ecx +
mov ecx [esp+18h+var_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax+14h] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_443610 +
mov ecx ds:dword_443614 +
pop edi  +
mov [edx] eax +
mov eax edx +
pop esi  +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40CF82  +
cmp [ebp+arg_C] 1 +
jnz loc_40CF82  +
cmp dword ptr [esi+38h] 0 +
jnz loc_40CF82  +
mov edi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
jmp loc_40CF88  +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
jz loc_40D026  +
mov ecx esi +
call sub_40F0B0  +
test al al +
jz loc_40D026  +
mov eax edi +
or eax ebx +
mov eax [ebp+arg_C] +
jnz loc_40CFAF  +
cmp eax 1 +
jz loc_40CFC1  +
push eax  +
push ebx  +
push edi  +
push dword ptr [esi+4Ch]  +
call sub_42A902  +
add esp 10h +
test eax eax +
jnz loc_40D026  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_42A297  +
add esp 8 +
test eax eax +
jnz loc_40D026  +
mov eax [esi+0Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40CFF3  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx [esp+18h+var_8] +
mov [eax+8] ecx +
mov ecx [esp+18h+var_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax+14h] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_443610 +
mov ecx ds:dword_443614 +
pop edi  +
mov [edx] eax +
mov eax edx +
pop esi  +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_441F38  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D0B9  +
mov edx [ebx+2Ch] +
mov esi [edx] +
lea eax [esi+ecx] +
cmp ecx eax +
jnb loc_40D0B9  +
lea eax [esi-1] +
mov [edx] eax +
mov ecx [ebx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_40D1F9  +
cmp dword ptr [ebx+4Ch] 0 +
jnz loc_40D0C7  +
or eax 0FFFFFFFFh +
jmp loc_40D1F9  +
mov esi [ebx+0Ch] +
lea eax [ebx+3Ch] +
cmp [esi] eax +
jnz loc_40D0E5  +
mov edx [ebx+54h] +
mov ecx [ebx+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [ebx+1Ch] +
mov [eax] ecx +
mov eax [ebx+2Ch] +
mov [eax] edx +
cmp dword ptr [ebx+38h] 0 +
jnz loc_40D103  +
push dword ptr [ebx+4Ch]  +
call sub_429D73  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40D0BF  +
movzx eax al +
jmp loc_40D1F9  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_29+1] 0 +
mov [ebp+var_4] 0 +
push dword ptr [ebx+4Ch]  +
call sub_429D73  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40D1DF  +
push eax  +
push 1  +
lea ecx [ebp+var_29+1] +
call loc_40ECE0  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_34] +
mov ecx [ebx+38h] +
lea edi [ebp+var_29+1] +
cmovnb edi [ebp+var_29+1] +
lea esi [ebp+var_29+1] +
cmovnb esi [ebp+var_29+1] +
push eax  +
mov edx [ecx] +
lea eax [ebp+var_29+1] +
push eax  +
lea eax [ebp-29h] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_18] +
add eax edi +
push eax  +
push esi  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edx+18h]  +
test eax eax +
js loc_40D1DF  +
cmp eax 1 +
jle loc_40D1A8  +
cmp eax 3 +
jnz loc_40D1DF  +
cmp [ebp+var_18] 1 +
jb loc_40D1CB  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_29+1] +
push 1  +
cmovnb eax [ebp+var_29+1] +
lea ecx [ebp-29h] +
push eax  +
mov edx 1 +
call sub_4013B0  +
add esp 8 +
movzx esi byte ptr [ebp+var_29] +
jmp loc_40D1E2  +
lea eax [ebp+var_29] +
cmp [ebp+var_34] eax +
jnz loc_40D215  +
cmp [ebp+var_14] 10h +
lea ecx [ebp+var_29+1] +
mov eax [ebp+var_30] +
cmovnb ecx [ebp+var_29+1] +
sub eax ecx +
lea ecx [ebp+var_29+1] +
push eax  +
push 0  +
call loc_40E940  +
push dword ptr [ebx+4Ch]  +
call sub_429D73  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_40D130  +
or esi 0FFFFFFFFh +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_40D1F7  +
inc ecx  +
push ecx  +
push [ebp+var_29+1]  +
lea ecx [ebp+var_29+1] +
call loc_40F8E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_29+1] +
mov esi [ebp+var_18] +
cmovnb eax [ebp+var_29+1] +
mov ecx [ebp+var_30] +
sub esi ecx +
add esi eax +
test esi esi +
jle loc_40D1A2  +
push dword ptr [ebx+4Ch]  +
movsx eax byte ptr [esi+ecx-1] +
dec esi  +
push eax  +
call sub_42A59D  +
add esp 8 +
test esi esi +
jle loc_40D1A2  +
mov ecx [ebp+var_30] +
jmp loc_40D232  +
***
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D27C  +
mov eax [esi+2Ch] +
mov eax [eax] +
add eax ecx +
cmp ecx eax +
jnb loc_40D27C  +
movzx eax byte ptr [ecx] +
pop esi  +
retn   +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+1Ch]  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_40D290  +
pop edi  +
or eax eax +
pop esi  +
retn   +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+10h]  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40D2DF  +
mov eax [esi+0Ch] +
cmp [eax] ecx +
jnb loc_40D2DF  +
cmp ebx 0FFFFFFFFh +
jz loc_40D2C7  +
movzx eax byte ptr [ecx-1] +
cmp eax ebx +
jnz loc_40D2DF  +
mov eax [esi+2Ch] +
inc dword ptr [eax]  +
mov eax [esi+1Ch] +
pop esi  +
dec dword ptr [eax]  +
xor eax eax +
cmp ebx 0FFFFFFFFh +
cmovnz eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_40D31E  +
cmp ebx 0FFFFFFFFh +
jz loc_40D31E  +
cmp dword ptr [esi+38h] 0 +
jnz loc_40D303  +
push eax  +
movzx ecx bl +
push ecx  +
call sub_42A59D  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_40D316  +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jz loc_40D31E  +
mov [ecx] bl +
mov ecx esi +
call sub_40EFB0  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441F38  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
setz al  +
test al al +
jz loc_40D377  +
xor eax eax +
cmp ecx 0FFFFFFFFh +
cmovnz eax ecx +
jmp loc_40D50C  +
mov eax [ebx+20h] +
mov edx [eax] +
test edx edx +
jz loc_40D3A5  +
mov esi [ebx+30h] +
mov edi [esi] +
lea eax [edi+edx] +
cmp edx eax +
jnb loc_40D3A5  +
lea eax [edi-1] +
mov [esi] eax +
mov ecx [ebx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
mov [edx] al +
jmp loc_40D50C  +
cmp dword ptr [ebx+4Ch] 0 +
jnz loc_40D3B3  +
or eax 0FFFFFFFFh +
jmp loc_40D50C  +
mov esi [ebx+0Ch] +
lea eax [ebx+3Ch] +
cmp [esi] eax +
jnz loc_40D3D4  +
mov ecx [ebx+50h] +
mov edx [ebx+54h] +
mov [esi] ecx +
sub edx ecx +
mov eax [ebx+1Ch] +
mov [eax] ecx +
mov eax [ebx+2Ch] +
mov ecx [ebp+arg_0] +
mov [eax] edx +
cmp dword ptr [ebx+38h] 0 +
jnz loc_40D3F9  +
push dword ptr [ebx+4Ch]  +
movsx eax cl +
push eax  +
call sub_42749A  +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx [ebp+arg_0] +
mov eax ecx +
jmp loc_40D50C  +
push 0  +
mov [ebp+var_29] cl +
lea ecx [ebp+var_28] +
push 8  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_40E9E0  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_14] +
cmp esi 10h +
lea eax [ebp+var_30] +
mov esi [ebx+38h] +
lea ecx [ebp+var_28] +
cmovnb ecx [ebp+var_28] +
lea edx [ebp+var_28] +
cmovnb edx [ebp+var_28] +
push eax  +
mov eax [ebp+var_18] +
mov edi [esi] +
add eax ecx +
push eax  +
push edx  +
lea eax [ebp+var_34] +
mov ecx esi +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp-29h] +
push eax  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edi+1Ch]  +
test eax eax +
js loc_40D4F0  +
cmp eax 1 +
jg loc_40D4CB  +
mov esi [ebp+var_14] +
lea eax [ebp+var_28] +
mov ecx [ebp+var_28] +
cmp esi 10h +
mov edi [ebp+var_30] +
cmovnb eax ecx +
sub edi eax +
jz loc_40D49C  +
push dword ptr [ebx+4Ch]  +
cmp esi 10h +
lea eax [ebp+var_28] +
push edi  +
cmovnb eax ecx +
push 1  +
push eax  +
call sub_42A23F  +
mov esi [ebp+var_14] +
add esp 10h +
cmp edi eax +
jnz loc_40D4F3  +
lea eax [ebp-29h] +
mov byte ptr [ebx+3Dh] 1 +
cmp [ebp+var_34] eax +
jnz loc_40D4C6  +
test edi edi +
jnz loc_40D424  +
cmp [ebp+var_18] 20h +
jnb loc_40D4F3  +
push edi  +
push 8  +
lea ecx [ebp+var_28] +
call loc_40ECE0  +
jmp loc_40D421  +
mov ebx [ebp+arg_0] +
jmp loc_40D4F6  +
cmp eax 3 +
jnz loc_40D4F0  +
push dword ptr [ebx+4Ch]  +
movsx eax [ebp+var_29] +
push eax  +
call sub_42749A  +
mov esi [ebp+var_14] +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx [ebp+arg_0] +
mov ebx ecx +
jmp loc_40D4F6  +
mov esi [ebp+var_14] +
or ebx 0FFFFFFFFh +
cmp esi 10h +
jb loc_40D50A  +
lea ecx [esi+1] +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_40F8E0  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+4Ch] +
test eax eax +
jz locret_40D53E  +
push eax  +
call sub_429FF3  +
pop ecx  +
retn   +
***
mov eax [ecx+4Ch] +
test eax eax +
jz locret_40D54E  +
push eax  +
call sub_429FDF  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_44FD6C +
jz loc_40D5A0  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_40D5A0  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_40D5AD  +
mov ecx esi +
call sub_40F2E0  +
mov dword ptr [esi] offset off_44FA90 +
mov esi [esi+34h] +
test esi esi +
jz loc_40D5E4  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40D5D9  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40D5D9  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_41C538  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4502B0 +
mov eax [ecx-8] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
retn   +
***
retn   +
***
retn 0Ch  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_443610 +
mov ecx ds:dword_443614 +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 20h  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_443610 +
mov ecx ds:dword_443614 +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_40D7B4  +
mov edi [ebp+arg_4] +
jg loc_40D6F1  +
test edi edi +
jz loc_40D7B4  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_40F460  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_40D764  +
jg loc_40D718  +
test esi esi +
jz loc_40D764  +
cmp ebx eax +
jg loc_40D728  +
jl loc_40D722  +
cmp edi esi +
jnb loc_40D728  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_40D741  +
mov ecx [esp+20h+var_C] +
push esi  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_41EED0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+30h] +
sub [eax] esi +
mov eax [ecx+20h] +
add [eax] esi +
jmp loc_40D791  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax byte ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_40D7A3  +
mov ecx [esp+24h+var_10] +
inc esi  +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_40D701  +
jl loc_40D7A3  +
test edi edi +
jnz loc_40D701  +
mov edx [esp+24h+var_18] +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_40D8C2  +
mov edi [ebp+arg_4] +
jg loc_40D801  +
test edi edi +
jz loc_40D8C2  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_40F480  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_40D874  +
jg loc_40D828  +
test esi esi +
jz loc_40D874  +
cmp ebx eax +
jg loc_40D838  +
jl loc_40D832  +
cmp edi esi +
jnb loc_40D838  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_40D851  +
mov ecx [esp+20h+var_C] +
push esi  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_41EED0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+2Ch] +
sub [eax] esi +
mov eax [ecx+1Ch] +
add [eax] esi +
jmp loc_40D89F  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_40D8B1  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
inc ecx  +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] ecx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov ecx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_40D811  +
jl loc_40D8B1  +
test edi edi +
jnz loc_40D811  +
mov edx [esp+20h+var_14] +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jnz loc_40D8F1  +
or eax eax +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441F66  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi] +
test eax eax +
jz loc_40D9AD  +
sub eax 8 +
cmp dword ptr [eax] 0DDDDh +
jnz loc_40D9AD  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi] 0 +
test ecx ecx +
jz loc_40D9EF  +
mov eax [ecx] +
push esi  +
push offset unk_450030  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
mov eax esi +
jns loc_40D9F1  +
mov dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ecx+10h] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
mov edx offset off_44FDD4 +
push [ebp+arg_4]  +
call sub_404620  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
add dword ptr [esi+18h] 0FFFFFFFFh +
mov edi [esi+18h] +
jnz loc_40DA9A  +
mov ecx dword_45C3C4 +
mov eax [ecx] +
call dword ptr [eax+4]  +
test esi esi +
jz loc_40DA88  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+1Ch]  +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push offset loc_441F98  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov dword ptr [esi] offset off_44FD24 +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
mov edx offset off_44FD44 +
push [ebp+arg_4]  +
lea ecx [ecx-24h] +
call sub_404620  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
mov edx offset off_45025C +
push [ebp+arg_4]  +
lea ecx [ecx-24h] +
call sub_404620  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_441FD2  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_40DD6D  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push offset unk_45B5EE  +
mov edi 8007000Eh +
mov dword ptr [ebx] 0 +
push 0F4h  +
mov [ebp+arg_0] edi +
mov [ebp+var_4] 0 +
call sub_41C4E6  +
add esp 8 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_40DDB6  +
push esi  +
mov ecx eax +
call sub_40F580  +
mov esi eax +
jmp loc_40DDB8  +
mov eax offset loc_40DDB1 +
retn   +
mov edi [ebp+8] +
jmp loc_40DDE3  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_40DDE3  +
inc dword ptr [esi+4]  +
dec dword ptr [esi+4]  +
mov eax [esi] +
push ebx  +
push offset riid  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jz loc_40DDE3  +
mov edx [esi] +
mov ecx esi +
push 1  +
call dword ptr [edx+0Ch]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ecx  +
mov ecx offset off_459D2C +
call loc_404800  +
pop ebp  +
retn 18h  +
***
cmp [ebp+arg_4] 0 +
jz loc_40DE32  +
mov eax 8002000Bh +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_40DE44  +
mov eax 80004003h +
pop esi  +
pop ebp  +
retn 10h  +
mov ecx dword_459D38 +
xor eax eax +
test ecx ecx +
jnz loc_40DE63  +
push [ebp+lcid]  +
mov ecx offset off_459D2C +
call sub_404B70  +
mov ecx dword_459D38 +
mov [esi] ecx +
mov ecx dword_459D38 +
test ecx ecx +
jz loc_40DE77  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40DE8F  +
add eax 0FFFFFFC8h +
jmp loc_40DE91  +
xor eax eax +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_40DEB9  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_40DEAA  +
mov eax [edx] +
mov [ebp+arg_8] ecx +
mov [ebp+arg_0] edx +
pop ebp  +
jmp dword ptr [eax]  +
mov dword ptr [ecx] 0 +
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
mov eax 80004003h +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+4] +
mov ecx [esi+8] +
cmp edi ecx +
jnz loc_40DF1C  +
mov edx [esi] +
cmp ebx edx +
jb loc_40DEF2  +
lea eax [edx+ecx*2] +
cmp ebx eax +
jb loc_40DF46  +
test ecx ecx +
jnz loc_40DEFB  +
lea edi [ecx+1] +
jmp loc_40DF07  +
add edi edi +
js loc_40DF3D  +
cmp edi 3FFFFFFFh +
ja loc_40DF3D  +
push 2  +
push edi  +
push edx  +
call sub_42996D  +
add esp 0Ch +
test eax eax +
jz loc_40DF3D  +
mov [esi+8] edi +
mov [esi] eax +
mov ecx [esi+4] +
mov eax [esi] +
lea ecx [eax+ecx*2] +
test ecx ecx +
jz loc_40DF2E  +
mov ax [ebx] +
mov [ecx] ax +
inc dword ptr [esi+4]  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
push 80004005h  +
call loc_401490  +
cmp dword ptr [esi] 0 +
jz loc_40DF7C  +
mov ecx [esi] +
push ecx  +
mov eax [ecx] +
mov [esi] eax +
call sub_42746C  +
add esp 4 +
cmp dword ptr [esi] 0 +
jnz loc_40DF68  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea edi [ecx-68h] +
mov eax [edi] +
lea esi [edi+68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_44FDD0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+esi-6Ch] eax +
lea ecx [esi-64h] +
call sub_40D550  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_4502B0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-6Ch] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40E011  +
push 0B0h  +
push edi  +
call sub_41C538  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_40D550  +
test [ebp+arg_0] 1 +
jz loc_40E04C  +
push 58h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-8] +
mov eax [esi] +
lea edx [esi+8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_4502B0 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40E0CA  +
push 50h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_44FA90 +
test edi edi +
jz loc_40E13D  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_40E132  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40E132  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_41C538  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_40E14E  +
push 38h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov dword ptr [esi] offset off_44FD24 +
mov dword ptr [esi+18h] 0C0000001h +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx esi +
call loc_40E240  +
test [ebp+arg_0] 1 +
jz loc_40E22C  +
push 1Ch  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov dword ptr [ebp-4] 0 +
test byte ptr [edi+14h] 2 +
jz loc_40E29F  +
mov esi [edi+8] +
cmp esi [edi+0Ch] +
jz loc_40E294  +
mov ecx [esi] +
test ecx ecx +
jz loc_40E28C  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
add esi 4 +
cmp esi [edi+0Ch] +
jnz loc_40E280  +
push dword ptr [edi+8]  +
call sub_41C4E1  +
add esp 4 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_40E2AC  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_40DBE0  +
test [ebp+arg_0] 1 +
jz loc_40E2DC  +
push 30h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_40DC90  +
test [ebp+arg_0] 1 +
jz loc_40E30C  +
push 30h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax [ebp+arg_0] +
mov eax [eax+2Ch] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+2Ch] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+8]  +
***
mov eax [ebp+arg_0] +
mov eax [eax+2Ch] +
mov ecx [eax] +
mov [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [ecx+4]  +
***
mov eax [ebp+arg_8] +
sub eax [ebp+arg_4] +
cmp [ebp+arg_C] eax +
cmovb eax [ebp+arg_C] +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov ecx [ebp+arg_18] +
mov eax [ebp+arg_10] +
mov [ecx] eax +
mov eax 3 +
pop ebp  +
retn 1Ch  +
***
retn   +
***
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-8] eax +
mov edx [ebp+10h] +
mov eax ecx +
mov ecx [ebp+8] +
mov [ebp-2Ch] ecx +
mov [ebp-34h] edx +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
test eax eax +
jz loc_40E430  +
lea edx [eax-24h] +
mov [ebp-30h] edx +
jmp loc_40E437  +
mov dword ptr [ebp-30h] 0 +
movzx eax word ptr [ecx+6] +
cmp ax 8 +
jle loc_40E459  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-8] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
xor edx edx +
lea edi [ebp-28h] +
test ax ax +
cmovz edi edx +
xor eax eax +
cmp [esi+0Ch] eax +
jbe loc_40E492  +
test edi edi +
jz loc_40E441  +
mov ecx [esi+4] +
mov ebx [ecx+eax*4] +
cmp ebx 8 +
jnb loc_40E441  +
mov ecx [esi] +
inc eax  +
add ecx edx +
add edx 10h +
mov [edi+ebx*4] ecx +
cmp eax [esi+0Ch] +
jb loc_40E470  +
mov ecx [ebp-2Ch] +
cmp eax [esi+8] +
jnb loc_40E4BE  +
mov ebx eax +
shl ebx 4 +
test edi edi +
jz loc_40E441  +
movsx ecx word ptr [ecx+6] +
mov edx [esi] +
sub ecx eax +
add edx ebx +
inc eax  +
add ebx 10h +
mov [edi+ecx*4-4] edx +
mov ecx [ebp-2Ch] +
cmp eax [esi+8] +
jb loc_40E4A0  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-3Ch] offset sub_41A802 +
mov [ebp-4Ch] eax +
xorps xmm0 xmm0 +
mov eax [ebp-30h] +
mov [ebp-48h] eax +
mov eax [ebp+14h] +
mov [ebp-44h] eax +
mov eax [ebp+18h] +
mov [ebp-40h] eax +
lea eax [ebp-5Ch] +
push eax  +
movups oword ptr [ebp-5Ch] xmm0 +
call ds:VariantInit  +
mov ecx [ebp-34h] +
lea eax [ebp-5Ch] +
test ecx ecx +
cmovnz eax ecx +
mov ecx [ebp-2Ch] +
push eax  +
push edi  +
lea eax [ecx+8] +
push eax  +
movsx eax word ptr [ecx+6] +
push eax  +
movzx eax word ptr [ecx+4] +
push eax  +
push dword ptr [ecx]  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call ds:DispCallFunc  +
mov esi eax +
lea eax [ebp-5Ch] +
push eax  +
call ds:VariantClear  +
mov ecx [ebp-8] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_442002  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_40E58B  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push offset unk_45B5EE  +
mov esi 8007000Eh +
mov dword ptr [ebx] 0 +
push 0D0h  +
mov [ebp+arg_0] esi +
mov [ebp+var_4] 0 +
call sub_41C4E6  +
add esp 8 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_40E5D4  +
push ecx  +
mov ecx eax +
call sub_40F850  +
mov edi eax +
jmp loc_40E5D6  +
mov eax offset loc_40E5CF +
retn   +
mov esi [ebp+8] +
jmp loc_40E619  +
xor edi edi +
mov [ebp+var_4] 0FFFFFFFFh +
test edi edi +
jz loc_40E619  +
inc dword ptr [edi+68h]  +
mov ecx edi +
call sub_40ADC0  +
mov esi eax +
xor eax eax +
test esi esi +
cmovns esi eax +
dec dword ptr [edi+68h]  +
test esi esi +
jnz loc_40E610  +
mov edx [edi+50h] +
lea eax [edi+50h] +
push ebx  +
push offset riid  +
push eax  +
call dword ptr [edx]  +
mov esi eax +
test esi esi +
jz loc_40E619  +
mov edx [edi] +
mov ecx edi +
push 1  +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+10h] +
mov [ebp-8] ecx +
test esi esi +
jnz loc_40E64A  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx [ecx+10h] +
push edi  +
test ebx ebx +
jz loc_40E6FE  +
cmp esi ebx +
ja loc_40E6FE  +
mov eax 1 +
sub eax esi +
add ebx eax +
mov eax [ecx+14h] +
mov [ebp-0Ch] eax +
cmp eax 8 +
jb loc_40E67A  +
mov eax [ecx] +
mov [ebp-4] eax +
jmp loc_40E680  +
mov eax ecx +
mov [ebp-4] ecx +
nop   +
test ebx ebx +
jz loc_40E69D  +
mov edx [ebp+8] +
mov ecx ebx +
movzx edx word ptr [edx] +
cmp [eax] dx +
jz loc_40E69F  +
add eax 2 +
sub ecx 1 +
jnz loc_40E690  +
xor eax eax +
test eax eax +
jz loc_40E6FE  +
cmp dword ptr [ebp+10h] 0 +
mov edi esi +
mov edx [ebp+8] +
mov esi eax +
jbe loc_40E6C3  +
mov cx [esi] +
cmp cx [edx] +
jnz loc_40E6DB  +
add esi 2 +
add edx 2 +
sub edi 1 +
jnz loc_40E6B0  +
cmp dword ptr [ebp-0Ch] 8 +
mov ecx [ebp-8] +
jb loc_40E6CE  +
mov ecx [ecx] +
pop edi  +
sub eax ecx +
pop ebx  +
sar eax 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sbb ecx ecx +
and ecx 0FFFFFFFEh +
add ecx 1 +
jz loc_40E6C3  +
mov esi [ebp+10h] +
mov edx eax +
sub edx [ebp-4] +
or ecx 0FFFFFFFFh +
sar edx 1 +
sub ecx edx +
add ebx ecx +
add eax 2 +
mov [ebp-4] eax +
jmp loc_40E680  +
***
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+14h] 8 +
jb loc_40E755  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+14h] 8 +
jb loc_40E734  +
mov edx [esi] +
mov eax [edi] +
mov [esi] eax +
mov [edi] edx +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edi+10h] +
push ebx  +
mov ebx [esi] +
add eax 1 +
jz loc_40E74C  +
add eax eax +
push eax  +
push edi  +
push esi  +
call loc_41EED0  +
add esp 0Ch +
mov [edi] ebx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+14h] 8 +
jnb loc_40E76D  +
mov edx ecx +
mov ecx esi +
call sub_410C50  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [esi+10h] +
mov edi [ecx] +
add eax 1 +
jz loc_40E784  +
add eax eax +
push eax  +
push esi  +
push ecx  +
call loc_41EED0  +
add esp 0Ch +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jz loc_40E818  +
cmp edi 7FFFFFFEh +
ja loc_40E822  +
cmp [esi+14h] edi +
jnb loc_40E7DF  +
push dword ptr [esi+10h]  +
push edi  +
call sub_403300  +
test edi edi +
jz loc_40E810  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push edi  +
push 0  +
call sub_40F940  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40E808  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_40E7B9  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40E7FB  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40E91A  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
or eax 0FFFFFFFFh +
sub eax edx +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_40E924  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_40E911  +
cmp edi 7FFFFFFEh +
ja loc_40E92E  +
cmp [esi+14h] edi +
jnb loc_40E8A4  +
push edx  +
push edi  +
mov ecx esi +
call sub_403300  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_40E911  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40E89A  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40E8CF  +
mov edx [esi] +
jmp loc_40E8D1  +
test edi edi +
jnz loc_40E892  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40E8C1  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_40E8EF  +
lea eax [ecx+ecx] +
push eax  +
mov eax [ebp+0Ch] +
lea eax [ebx+eax*2] +
push eax  +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
push eax  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40E909  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_40E9CF  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_40E97F  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_40E973  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_40E9C7  +
cmp dword ptr [esi+14h] 10h +
jb loc_40E98D  +
mov eax [esi] +
jmp loc_40E98F  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx] +
mov eax edi +
sub eax ecx +
jz loc_40E9A9  +
push eax  +
lea eax [ebx+edx] +
push eax  +
push ebx  +
call loc_41D160  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
pop ebx  +
jb loc_40E9C1  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jz loc_40EA90  +
cmp edi 0FFFFFFFEh +
ja loc_40EA9A  +
cmp [esi+14h] edi +
jnb loc_40EA22  +
push dword ptr [esi+10h]  +
push edi  +
call sub_40FC20  +
test edi edi +
jz loc_40EA88  +
cmp edi 1 +
jnz loc_40EA50  +
cmp dword ptr [esi+14h] 10h +
jb loc_40EA47  +
mov ecx [esi] +
mov al [ebp+0Ch] +
mov [ecx] al +
jmp loc_40EA6B  +
test edi edi +
jnz loc_40EA0E  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EA3C  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov al [ebp+0Ch] +
mov ecx esi +
mov [ecx] al +
jmp loc_40EA6B  +
cmp dword ptr [esi+14h] 10h +
jb loc_40EA5A  +
mov ecx [esi] +
jmp loc_40EA5C  +
mov ecx esi +
movsx eax byte ptr [ebp+0Ch] +
push edi  +
push eax  +
push ecx  +
call sub_41E790  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EA82  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_40EB15  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40EACA  +
mov eax [esi] +
jmp loc_40EACC  +
mov eax esi +
cmp ebx eax +
jb loc_40EB15  +
cmp ecx 10h +
jb loc_40EAD9  +
mov edx [esi] +
jmp loc_40EADB  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_40EB15  +
cmp ecx 10h +
jb loc_40EAFF  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_40EBB0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_40EBB0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 0FFFFFFFEh +
ja loc_40EB9B  +
cmp [esi+14h] edi +
jnb loc_40EB3C  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_40FC20  +
test edi edi +
jz loc_40EB92  +
cmp dword ptr [esi+14h] 10h +
jb loc_40EB63  +
mov eax [esi] +
jmp loc_40EB65  +
test edi edi +
jnz loc_40EB32  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EB57  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
test edi edi +
jz loc_40EB74  +
push edi  +
push ebx  +
push eax  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EB8C  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40ECB2  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_40EC1E  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_40ECBC  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 10h +
jb loc_40EC05  +
mov edx [esi] +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_40E940  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_40E940  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 0FFFFFFFEh +
ja loc_40ECC6  +
cmp [esi+14h] edi +
jnb loc_40EC50  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_40FC20  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_40ECA9  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40EC46  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40EC77  +
mov edx [esi] +
jmp loc_40EC79  +
test edi edi +
jnz loc_40EC3E  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EC6B  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_40EC8B  +
push edi  +
lea eax [ebx+ecx] +
push eax  +
push edx  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40ECA3  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
or eax 0FFFFFFFFh +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_40ED71  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_40ED68  +
cmp edi 0FFFFFFFEh +
ja loc_40ED7B  +
cmp [esi+14h] edi +
jnb loc_40ED3B  +
push ecx  +
push edi  +
mov ecx esi +
call sub_40FC20  +
test edi edi +
jz loc_40ED68  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_40F9A0  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40ED62  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_40ED15  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40ED56  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40EDA2  +
mov eax [esi] +
jmp loc_40EDA4  +
mov eax esi +
cmp eax offset asc_450468 +
ja loc_40EDE5  +
cmp ecx 10h +
jb loc_40EDB4  +
mov edx [esi] +
jmp loc_40EDB6  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax offset asc_450468 +
jbe loc_40EDE5  +
cmp ecx 10h +
jb loc_40EDCB  +
mov ecx [esi] +
jmp loc_40EDCD  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
mov eax offset asc_450468 +
sub eax ecx +
mov ecx esi +
push eax  +
push esi  +
call loc_40EEB0  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+0Ch] +
sub eax edx +
push edi  +
cmp eax ebx +
jbe loc_40EE90  +
lea edi [edx+ebx] +
test ebx ebx +
jz loc_40EE87  +
cmp edi 0FFFFFFFEh +
ja loc_40EE9A  +
cmp ecx edi +
jnb loc_40EE29  +
push edx  +
push edi  +
mov ecx esi +
call sub_40FC20  +
test edi edi +
jz loc_40EE87  +
cmp dword ptr [esi+14h] 10h +
jb loc_40EE4F  +
mov ecx [esi] +
jmp loc_40EE51  +
test edi edi +
jnz loc_40EE1F  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_40EE43  +
mov eax [esi] +
pop edi  +
pop ebx  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov ecx esi +
test ebx ebx +
jz loc_40EE69  +
mov eax [esi+10h] +
push ebx  +
add eax ecx +
push offset asc_450468  +
push eax  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EE81  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40EF8A  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
or eax 0FFFFFFFFh +
sub eax edx +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_40EF94  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_40EF81  +
cmp edi 0FFFFFFFEh +
ja loc_40EF9E  +
cmp [esi+14h] edi +
jnb loc_40EF21  +
push edx  +
push edi  +
mov ecx esi +
call sub_40FC20  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_40EF81  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40EF17  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40EF48  +
mov edx [esi] +
jmp loc_40EF4A  +
test edi edi +
jnz loc_40EF0F  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EF3C  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_40EF63  +
mov eax [ebp+0Ch] +
add eax ebx +
push ecx  +
push eax  +
mov eax [esi+10h] +
add eax edx +
push eax  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40EF7B  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+0Ch] +
lea esi [edx+3Ch] +
mov eax [edi] +
cmp eax esi +
jz loc_40EFD0  +
mov ecx [edx+1Ch] +
mov [edx+50h] eax +
mov eax [edx+2Ch] +
mov eax [eax] +
add eax [ecx] +
mov [edx+54h] eax +
mov [edi] esi +
mov ecx edx +
mov eax [edx+1Ch] +
sub ecx esi +
add ecx 3Dh +
pop edi  +
mov [eax] esi +
mov eax [edx+2Ch] +
pop esi  +
mov [eax] ecx +
retn   +
***
lea eax [ecx+3Ch] +
cmp [edi] eax +
jnz loc_40F011  +
mov edx [ecx+50h] +
push esi  +
mov esi [ecx+54h] +
mov [edi] edx +
sub esi edx +
mov eax [ecx+1Ch] +
mov [eax] edx +
mov eax [ecx+2Ch] +
mov [eax] esi +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
mov eax [eax+0Ch] +
call eax  +
test al al +
jz loc_40F044  +
pop edi  +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ebp  +
retn 4  +
lea eax [esi+4] +
mov [esi+38h] edi +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
pop edi  +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
pop esi  +
mov dword ptr [eax] 0 +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_442028  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
cmp dword ptr [ebx+38h] 0 +
jz loc_40F1DE  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_40F1DE  +
mov eax [ebx] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
setz al  +
test al al +
jz loc_40F109  +
xor al al +
jmp loc_40F1E0  +
push 0  +
push 8  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_40E9E0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
cmp ecx 10h +
lea eax [ebp+var_2C] +
mov ecx [ebx+38h] +
lea edi [ebp+var_28] +
cmovnb edi [ebp+var_28] +
lea esi [ebp+var_28] +
cmovnb esi [ebp+var_28] +
push eax  +
mov eax [ebp+var_18] +
mov edx [ecx] +
add eax edi +
push eax  +
push esi  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edx+20h]  +
sub eax 0 +
jz loc_40F16F  +
sub eax 1 +
jz loc_40F173  +
mov ecx [ebp+var_14] +
sub eax 2 +
jz loc_40F1C6  +
xor bl bl +
jmp loc_40F1C8  +
mov byte ptr [ebx+3Dh] 0 +
mov ecx [ebp+var_14] +
lea eax [ebp+var_28] +
mov edx [ebp+var_28] +
cmp ecx 10h +
mov esi [ebp+var_2C] +
cmovnb eax edx +
sub esi eax +
jz loc_40F1A8  +
push dword ptr [ebx+4Ch]  +
cmp ecx 10h +
lea eax [ebp+var_28] +
push esi  +
cmovnb eax edx +
push 1  +
push eax  +
call sub_42A23F  +
mov ecx [ebp+var_14] +
add esp 10h +
cmp esi eax +
jnz loc_40F16B  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_40F1C6  +
test esi esi +
jnz loc_40F131  +
push esi  +
push 8  +
lea ecx [ebp+var_28] +
call loc_40ECE0  +
jmp loc_40F12E  +
mov bl 1 +
cmp ecx 10h +
jb loc_40F1DA  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_40F8E0  +
mov al bl +
jmp loc_40F1E0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp [ebp+arg_4] 1 +
push esi  +
mov esi ecx +
setz al  +
lea edx [esi+8] +
push edi  +
mov edi [ebp+arg_0] +
mov [esi+48h] al +
lea eax [esi+4] +
mov [esi+0Ch] eax +
lea eax [esi+14h] +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov byte ptr [esi+3Dh] 0 +
mov [esi+10h] edx +
mov dword ptr [edx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
test edi edi +
jz loc_40F2B9  +
lea eax [ebp+var_4] +
mov [ebp+arg_4] 0 +
push eax  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] 0 +
push eax  +
lea eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push eax  +
push edi  +
call sub_429F99  +
mov eax [ebp+arg_4] +
add esp 10h +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov eax [ebp+arg_0] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [ebp+var_4] +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov eax dword_45C518 +
mov [esi+4Ch] edi +
mov [esi+40h] eax +
mov eax dword_45C51C +
pop edi  +
mov [esi+44h] eax +
mov dword ptr [esi+38h] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi ecx +
push edi  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_40F2EF  +
xor edi edi +
jmp loc_40F30F  +
call sub_40F0B0  +
push dword ptr [esi+4Ch]  +
xor ecx ecx +
mov edi esi +
test al al +
cmovz edi ecx +
call sub_429C42  +
xor ecx ecx +
add esp 4 +
test eax eax +
cmovnz edi ecx +
lea eax [esi+4] +
mov byte ptr [esi+48h] 0 +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov byte ptr [esi+3Dh] 0 +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [esi+1Ch] +
pop edi  +
mov dword ptr [ecx] 0 +
mov ecx [esi+2Ch] +
mov dword ptr [ecx] 0 +
mov ecx dword_45C518 +
mov [esi+40h] ecx +
mov ecx dword_45C51C +
mov dword ptr [esi+4Ch] 0 +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44205E  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_40F441  +
push 40h  +
push 2  +
push [ebp+arg_0]  +
call sub_41B08D  +
add esp 0Ch +
test eax eax +
jz loc_40F441  +
push 1  +
push eax  +
mov ecx esi +
call sub_40F200  +
lea eax [ebp+var_18] +
mov ecx esi +
push eax  +
call sub_40F9F0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_410B20  +
add esp 4 +
mov ecx esi +
push eax  +
call sub_40F020  +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_14] +
test ecx ecx +
jz loc_40F42D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40F42D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_40F46F  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_40F48F  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov edx [ebp+arg_8] +
test edx edx +
jnz loc_40F4B3  +
mov eax 80004003h +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_4] +
push esi  +
xor esi esi +
mov dword ptr [edx] 0 +
cmp [eax] esi +
jnz loc_40F4EC  +
cmp [eax+4] esi +
jnz loc_40F4EC  +
cmp dword ptr [eax+8] 0C0h +
jnz loc_40F4EC  +
cmp dword ptr [eax+0Ch] 46000000h +
jnz loc_40F4EC  +
mov ecx [ebp+arg_0] +
mov [edx] ecx +
push ecx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_0] +
push edx  +
push eax  +
mov edx offset off_44F9C0 +
lea ecx [ecx+8] +
call sub_404620  +
mov esi eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
add dword ptr [esi+4] 0FFFFFFFFh +
mov edi [esi+4] +
jnz loc_40F56A  +
mov ecx dword_45C3C4 +
mov eax [ecx] +
call dword ptr [eax+4]  +
test esi esi +
jz loc_40F558  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+0Ch]  +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4435E8 +
jz loc_40F65D  +
push 8  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
lea ecx [edi+8] +
mov dword ptr [edi] offset off_44FEA8 +
mov dword ptr [edi+4] 0C0000001h +
call sub_405EC0  +
mov ecx dword_45C3C4 +
mov eax [ecx] +
call dword ptr [eax+8]  +
lea ecx [edi+8] +
call sub_405850  +
test [ebp+arg_0] 1 +
jz loc_40F6D9  +
push 0F4h  +
push edi  +
call sub_41C538  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
jmp sub_405850  +
***
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
mov edx offset off_450158 +
push [ebp+arg_4]  +
lea ecx [ecx-50h] +
call sub_404620  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push offset loc_441890  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_44FF0C +
mov dword ptr [esi+24h] offset off_44FC90 +
mov dword ptr [esi+50h] offset off_44FB30 +
mov dword ptr [esi+58h] offset off_44FC60 +
mov dword ptr [esi+5Ch] offset off_44FB70 +
mov dword ptr [esi+60h] offset off_44FDBC +
mov dword ptr [esi+64h] offset off_44FBFC +
mov dword ptr [esi+68h] 0C0000001h +
mov eax [esi+54h] +
test eax eax +
jz loc_40F810  +
mov dword ptr [esi+54h] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+88h] +
test eax eax +
jz loc_40F82A  +
mov dword ptr [esi+88h] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx dword_45C3C4 +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx esi +
call sub_40AC90  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4420B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_40A7F0  +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov dword ptr [esi] offset off_44FF0C +
mov dword ptr [esi+24h] offset off_44FC90 +
mov dword ptr [esi+50h] offset off_44FB30 +
mov dword ptr [esi+58h] offset off_44FC60 +
mov dword ptr [esi+5Ch] offset off_44FB70 +
mov dword ptr [esi+60h] offset off_44FDBC +
mov dword ptr [esi+64h] offset off_44FBFC +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
cmp ecx 0FFFFFFFFh +
ja loc_40F91C  +
cmp ecx 1000h +
jb loc_40F90F  +
test al 1Fh +
jnz loc_40F921  +
mov ecx [eax-4] +
cmp ecx eax +
jnb loc_40F926  +
sub eax ecx +
cmp eax 4 +
jb loc_40F92B  +
cmp eax 23h +
ja loc_40F930  +
mov eax ecx +
push eax  +
call sub_41BEC0  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
mov edx ecx +
mov ecx [ebp+arg_4] +
cmp ecx 1 +
jnz loc_40F964  +
cmp dword ptr [edx+14h] 8 +
jb loc_40F955  +
mov edx [edx] +
mov ecx [ebp+arg_0] +
mov ax [ebp+arg_8] +
mov [edx+ecx*2] ax +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edx+14h] 8 +
jb loc_40F96C  +
mov edx [edx] +
mov eax [ebp+arg_0] +
push edi  +
lea edi [edx+eax*2] +
test ecx ecx +
jz loc_40F98D  +
mov eax dword ptr [ebp+arg_8] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_4] +
mov edx ecx +
cmp eax 1 +
jnz loc_40F9C2  +
cmp dword ptr [edx+14h] 10h +
jb loc_40F9B5  +
mov edx [edx] +
mov eax [ebp+arg_0] +
mov cl [ebp+arg_8] +
mov [edx+eax] cl +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edx+14h] 10h +
jb loc_40F9CA  +
mov edx [edx] +
push eax  +
movsx eax [ebp+arg_8] +
push eax  +
mov eax [ebp+arg_0] +
add eax edx +
push eax  +
call sub_41E790  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_441B56  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+34h] +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 8  +
mov dword ptr [edi] offset off_44FA90 +
call sub_41C139  +
mov esi eax +
push 1  +
mov [ebp+var_4] 0 +
call sub_41AD0A  +
mov [esi+4] eax +
lea ecx [edi+8] +
lea eax [edi+4] +
mov [edi+34h] esi +
mov [edi+0Ch] eax +
add esp 8 +
lea eax [edi+14h] +
mov [edi+10h] ecx +
mov [edi+1Ch] eax +
lea eax [edi+18h] +
mov [edi+20h] eax +
lea eax [edi+24h] +
mov [edi+2Ch] eax +
lea eax [edi+28h] +
mov [edi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [edi+20h] +
mov dword ptr [eax] 0 +
mov eax [edi+30h] +
mov dword ptr [eax] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4420EE  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_40A090  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+var_14] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_40A040  +
push eax  +
mov [ebp+var_4] 0 +
call sub_410670  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_40FB77  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_40FB77  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx edi +
mov eax [edi] +
push 20h  +
mov eax [eax+20h] +
call eax  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] al +
jnz loc_40FBA2  +
mov eax [esi+0Ch] +
mov ecx esi +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_405850  +
test [ebp+arg_0] 1 +
jz loc_40FBDF  +
push 0ECh  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_40F7A0  +
test [ebp+arg_0] 1 +
jz loc_40FC0F  +
push 0D0h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_442110  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_40FC61  +
mov edi eax +
jmp loc_40FC88  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_40FC88  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_40FC88  +
mov edi 0FFFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
push eax  +
mov ecx esi +
call loc_40FD80  +
mov ecx eax +
jmp loc_40FCC7  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_40FD80  +
mov [ebp-18h] eax +
mov eax offset loc_40FCBE +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ecx [ebp-18h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_18] ecx +
test ebx ebx +
jz loc_40FCEC  +
cmp dword ptr [esi+14h] 10h +
jb loc_40FCDB  +
mov eax [esi] +
jmp loc_40FCDD  +
mov eax esi +
test ebx ebx +
jz loc_40FCEC  +
push ebx  +
push eax  +
push ecx  +
call loc_41EED0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40FCFF  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_40F8E0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40FD17  +
mov eax [esi] +
jmp loc_40FD19  +
mov eax esi +
mov byte ptr [eax] 0 +
mov eax [ebp+var_18] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_40FD2F  +
mov esi eax +
mov byte ptr [esi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi [ebp-14h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40FD5D  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_40F8E0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40FD73  +
mov esi [esi] +
push 0  +
push 0  +
mov byte ptr [esi] 0 +
call sub_41EE5A  +
int 3  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_40FD8E  +
pop ebp  +
retn 4  +
***
cmp eax 0FFFFFFFFh +
ja loc_40FDCC  +
cmp eax 1000h +
jb loc_40FDBD  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40FDD1  +
push ecx  +
call sub_41C139  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_40FDD6  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_41C139  +
add esp 4 +
test eax eax +
jnz loc_40FD8A  +
jmp loc_40FDDB  +
call sub_41CD81  +
call sub_41CD81  +
call sub_427390  +
call sub_427390  +
adc eax offset LeaveCriticalSection +
mov byte ptr [esi+4] 0 +
pop esi  +
retn   +
***
push esi  +
push esi  +
call sub_404730  +
mov esi eax +
test esi esi +
jnz loc_40FE74  +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [esi] +
mov ecx esi +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov [esi+4] edi +
call dword ptr [eax+8]  +
cmp dword ptr [esi+14h] 0 +
mov ebx eax +
jnz loc_40FE97  +
call sub_41A6E1  +
mov [esi+14h] eax +
test eax eax +
jz loc_40FEA1  +
push esi  +
push ebx  +
push dword ptr [esi+14h]  +
call sub_41A7BF  +
push dword ptr [esi+14h]  +
call sub_41A73A  +
mov esi eax +
push esi  +
push 0FFFFFFFCh  +
push edi  +
call ds:SetWindowLongW  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call esi  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub esp 24h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
jnz loc_410017  +
call sub_41A6E1  +
mov [esi+14h] eax +
test eax eax +
jnz loc_410017  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 20h  +
push ebx  +
push 0  +
push 0  +
push dword ptr [esi+14h]  +
call sub_41A7BF  +
mov bx [ebp+arg_18] +
test bx bx +
jnz loc_410035  +
pop ebx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 20h  +
push esi  +
lea eax [esi+8] +
push eax  +
call loc_4043D0  +
mov edx [ebp+arg_14] +
test edx edx +
jnz loc_410053  +
test [ebp+dwStyle] 40000000h +
cmovnz edx esi +
mov [ebp+arg_14] edx +
mov eax [ebp+arg_4] +
mov ecx offset unk_459D1C +
push 0  +
push hModule  +
test eax eax +
push edx  +
cmovnz ecx eax +
mov [ebp+arg_4] ecx +
push 0  +
mov esi [ecx+4] +
mov eax [ecx+0Ch] +
sub eax esi +
push eax  +
mov eax [ecx+8] +
sub eax [ecx] +
push eax  +
push esi  +
push dword ptr [ecx]  +
movzx eax bx +
push [ebp+dwStyle]  +
push [ebp+lpWindowName]  +
push eax  +
push [ebp+dwExStyle]  +
call ds:CreateWindowExW  +
pop ebx  +
pop esi  +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_442142  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
test esi esi +
jnz loc_4100EB  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push offset unk_45B5EE  +
mov edi 8007000Eh +
mov dword ptr [esi] 0 +
push 30h  +
mov [ebp+var_18] edi +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0 +
call sub_41C4E6  +
add esp 8 +
mov [ebp+var_20] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41013C  +
push ecx  +
mov ecx eax +
call sub_410F90  +
jmp loc_41013E  +
mov eax offset loc_410131 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov eax [ebp-1Ch] +
jmp loc_410145  +
xor eax eax +
xor ecx ecx +
test eax eax +
cmovnz edi ecx +
mov [esi] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442172  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
test esi esi +
jnz loc_4101AB  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push offset unk_45B5EE  +
mov edi 8007000Eh +
mov dword ptr [esi] 0 +
push 30h  +
mov [ebp+var_18] edi +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0 +
call sub_41C4E6  +
add esp 8 +
mov [ebp+var_20] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_4101FC  +
push ecx  +
mov ecx eax +
call sub_410F00  +
jmp loc_4101FE  +
mov eax offset loc_4101F1 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov eax [ebp-1Ch] +
jmp loc_410205  +
xor eax eax +
xor ecx ecx +
test eax eax +
cmovnz edi ecx +
mov [esi] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
test eax eax +
jz loc_410230  +
mov dword ptr [eax] 0 +
push edi  +
mov edi [ebp+10h] +
test edi edi +
jz loc_4102C4  +
mov ecx [ebp+0Ch] +
cmp ecx 1 +
jbe loc_410248  +
test eax eax +
jz loc_4102C4  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
cmp dword ptr [ebx+8] 0 +
jz loc_4102B8  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_4102B8  +
mov edx [ebx+10h] +
test edx edx +
jz loc_4102B8  +
sub esi edx +
mov dword ptr [ebp+14h] 1 +
sar esi 2 +
xor edx edx +
cmp esi ecx +
cmovb edx [ebp+14h] +
cmp ecx esi +
mov [ebp+14h] edx +
cmovb esi ecx +
test eax eax +
jz loc_410283  +
mov [eax] esi +
test esi esi +
jz loc_4102AF  +
mov eax [ebx+10h] +
dec esi  +
test edi edi +
jz loc_4102CE  +
test eax eax +
jz loc_4102CE  +
mov eax [eax] +
mov [edi] eax +
test eax eax +
jz loc_4102A1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
add dword ptr [ebx+10h] 4 +
add edi 4 +
test esi esi +
jnz loc_410287  +
mov edx [ebp+14h] +
pop esi  +
pop ebx  +
mov eax edx +
pop edi  +
pop ebp  +
retn 10h  +
***
pop esi  +
pop ebx  +
mov eax 80004005h +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax 80004003h +
pop edi  +
pop ebp  +
retn 10h  +
***
push 80004005h  +
call loc_401490  +
mov edx [ebp+arg_4] +
sub esp 8 +
mov eax [ebp+arg_4] +
mov [ebp+var_8] 0 +
test eax eax +
jz loc_41040C  +
lea ecx [ebp+var_4] +
mov dword ptr [eax] 0 +
call sub_411320  +
test eax eax +
js loc_4103EB  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test byte ptr [ebx+14h] 2 +
jz loc_410362  +
mov eax 1 +
mov edi ebx +
mov [ebp+arg_0] eax +
mov eax [ebx] +
push ebx  +
mov [ebp+var_8] edi +
call dword ptr [eax+4]  +
mov esi [ebp+var_8] +
jmp loc_41037D  +
mov esi [ebx+4] +
mov eax 2 +
mov [ebp+arg_0] eax +
mov [ebp+var_8] esi +
test esi esi +
jz loc_41037A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov edi [ebp+var_8] +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push 0  +
push dword ptr [eax]  +
push dword ptr [ebx+0Ch]  +
push dword ptr [ebx+8]  +
call loc_410420  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
test al 2 +
jz loc_4103AF  +
and eax 0FFFFFFFDh +
mov [ebp+arg_0] eax +
test esi esi +
jz loc_4103AF  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_4103BD  +
test edi edi +
jz loc_4103BD  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
cmp [ebp+var_8] 0 +
mov esi [ebp+var_4] +
jl loc_4103F1  +
push [ebp+arg_4]  +
mov eax [ebx+10h] +
mov edx offset off_44FDD4 +
push offset unk_450050  +
mov ecx esi +
mov [esi+10h] eax +
call sub_404620  +
mov ebx eax +
test ebx ebx +
js loc_4103F4  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ebx [ebp+var_8] +
test esi esi +
jz loc_4103E6  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+1Ch]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 80004003h +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
mov esi ecx +
push edi  +
cmp ebx 3 +
jnz loc_4104AA  +
mov ebx [ebp+0Ch] +
xor ecx ecx +
mov edi [ebp+8] +
mov eax ebx +
sub eax edi +
mov edx 4 +
sar eax 2 +
mov [ebp+8] eax +
mul  edx +
push offset unk_45B5EE  +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_41C546  +
add esp 8 +
mov [esi+8] eax +
mov [esi+10h] eax +
test eax eax +
jnz loc_410474  +
pop edi  +
pop esi  +
mov eax 8007000Eh +
pop ebx  +
pop ebp  +
retn 10h  +
***
cmp edi ebx +
jz loc_41049C  +
mov eax [esi+10h] +
test eax eax +
jz loc_4104EA  +
test edi edi +
jz loc_4104EA  +
mov ecx [edi] +
mov [eax] ecx +
test ecx ecx +
jz loc_410491  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
add dword ptr [esi+10h] 4 +
add edi 4 +
cmp edi ebx +
jnz loc_410478  +
mov eax [esi+8] +
mov ecx [ebp+8] +
mov ebx [ebp+14h] +
lea eax [eax+ecx*4] +
jmp loc_4104B3  +
mov eax [ebp+8] +
mov [esi+8] eax +
mov eax [ebp+0Ch] +
mov edi [ebp+10h] +
mov [esi+0Ch] eax +
cmp [esi+4] edi +
jz loc_4104D8  +
test edi edi +
jz loc_4104C8  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi+4] +
mov [esi+4] edi +
test eax eax +
jz loc_4104D8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+8] +
pop edi  +
mov [esi+10h] eax +
xor eax eax +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 80004005h  +
call loc_401490  +
and esp 0FFFFFFF0h +
sub esp 68h +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_41058A  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_41058A  +
cmp word ptr [edi+40h] 0 +
jnz loc_410657  +
push offset stru_45C440  +
call ds:EnterCriticalSection  +
cmp word ptr [edi+40h] 0 +
jnz loc_410649  +
mov eax [edi+30h] +
mov esi ds:GetClassInfoExW +
test eax eax +
jz loc_4105C2  +
mov ecx [edi+28h] +
mov [esp+70h+var_68] ecx +
mov ecx [edi+8] +
mov [esp+70h+var_64] ecx +
lea ecx [esp+70h+var_60] +
push ecx  +
push eax  +
push 0  +
mov [esp+7Ch+var_60.cbSize] 30h +
call esi  +
test eax eax +
jnz loc_410592  +
lea eax [esp+70h+var_60] +
push eax  +
push dword ptr [edi+30h]  +
push hModule  +
call esi  +
test eax eax +
jnz loc_410592  +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
movups xmm0 oword ptr [esp+70h+var_60.cbSize] +
movups oword ptr [edi] xmm0 +
movups xmm0 oword ptr [esp+70h+var_60.cbWndExtra] +
movups oword ptr [edi+10h] xmm0 +
movups xmm0 oword ptr [esp+70h+var_60.hbrBackground] +
movups oword ptr [edi+20h] xmm0 +
mov eax [edi+8] +
mov [edi+34h] eax +
mov eax [esp+70h+var_68] +
mov [edi+28h] eax +
mov eax [esp+70h+var_64] +
mov [edi+8] eax +
jmp loc_4105DC  +
mov eax dword_45B4A8 +
xor ecx ecx +
cmp [edi+3Ch] ecx +
push dword ptr [edi+38h]  +
cmovnz eax ecx +
push eax  +
call ds:LoadCursorW  +
mov [edi+1Ch] eax +
mov eax hModule +
and dword ptr [edi+4] 0FFFFBFFFh +
cmp dword ptr [edi+28h] 0 +
mov [edi+14h] eax +
jnz loc_41060E  +
push edi  +
push offset aAtlP  +
lea esi [edi+42h] +
push 25h  +
push esi  +
call sub_404150  +
mov [edi+28h] esi +
add esp 10h +
mov esi ds:GetClassInfoExW +
movups xmm0 oword ptr [edi] +
lea eax [esp+70h+var_30] +
push eax  +
push dword ptr [edi+28h]  +
movups oword ptr [esp+78h+var_30.cbSize] xmm0 +
movups xmm0 oword ptr [edi+10h] +
push dword ptr [edi+14h]  +
movups oword ptr [esp+7Ch+var_30.cbWndExtra] xmm0 +
movups xmm0 oword ptr [edi+20h] +
movups oword ptr [esp+7Ch+var_30.hbrBackground] xmm0 +
call esi  +
mov [edi+40h] ax +
test ax ax +
jnz loc_410649  +
mov edx edi +
call sub_4093E0  +
mov [edi+40h] ax +
push offset stru_45C440  +
call ds:LeaveCriticalSection  +
mov ecx [ebp+arg_4] +
cmp dword ptr [edi+30h] 0 +
jz loc_410662  +
mov eax [edi+34h] +
mov [ecx] eax +
mov ax [edi+40h] +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442198  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_1C] +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov edi dword_45B5E0 +
mov ebx dword_45C418 +
mov [ebp+var_14] ebx +
test edi edi +
jnz loc_4106EB  +
push edi  +
lea ecx [ebp+var_18] +
call sub_41AAC5  +
cmp dword_45B5E0 edi +
jnz loc_4106DD  +
mov eax dword_45B5C4 +
inc eax  +
mov dword_45B5C4 eax +
mov dword_45B5E0 eax +
lea ecx [ebp+var_18] +
call sub_41AB1D  +
mov edi dword_45B5E0 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_410702  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_410777  +
jmp loc_410704  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41071A  +
call sub_41AD04  +
cmp edi [eax+0Ch] +
jnb loc_41071E  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_410777  +
test ebx ebx +
jz loc_410726  +
mov esi ebx +
jmp loc_410777  +
push [ebp+arg_0]  +
lea eax [ebp+var_14] +
push eax  +
call sub_4098D0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_41075E  +
xorps xmm0 xmm0 +
mov [ebp+var_28] offset off_4441E0 +
push offset unk_456CBC  +
lea eax [ebp+var_28] +
movq [ebp+var_24] xmm0 +
push eax  +
mov dword ptr [ebp+var_24] offset aBadCast +
call sub_41EE5A  +
mov esi [ebp+var_14] +
mov ecx esi +
mov dword_45C418 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41ACD6  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_41AB1D  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_45C3F4 +
cmp eax [ecx+4] +
jle loc_4107F6  +
push offset dword_45C3F4  +
call sub_41C035  +
add esp 4 +
cmp dword_45C3F4 0FFFFFFFFh +
jnz loc_4107F6  +
push offset nullsub_3  +
mov dword_45C400 offset off_44FCB4 +
mov dword_45C404 5 +
call sub_41C4A9  +
push offset dword_45C3F4  +
call sub_41BFF6  +
add esp 8 +
mov eax offset dword_45C400 +
retn   +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
jnz loc_410827  +
call sub_41A6E1  +
mov [esi+14h] eax +
test eax eax +
jnz loc_410827  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 20h  +
push ebx  +
push 0  +
push 0  +
push dword ptr [esi+14h]  +
call sub_41A7BF  +
mov bx [ebp+arg_18] +
test bx bx +
jnz loc_410845  +
pop ebx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 20h  +
push esi  +
lea eax [esi+8] +
push eax  +
call loc_4043D0  +
mov edx [ebp+arg_14] +
test edx edx +
jnz loc_410863  +
test [ebp+dwStyle] 40000000h +
cmovnz edx esi +
mov [ebp+arg_14] edx +
mov eax [ebp+arg_4] +
mov ecx offset unk_459D1C +
push 0  +
push hModule  +
test eax eax +
push edx  +
push [ebp+hWndParent]  +
cmovnz ecx eax +
mov [ebp+arg_4] ecx +
mov esi [ecx+4] +
mov eax [ecx+0Ch] +
sub eax esi +
push eax  +
mov eax [ecx+8] +
sub eax [ecx] +
push eax  +
push esi  +
push dword ptr [ecx]  +
movzx eax bx +
push [ebp+dwStyle]  +
push [ebp+lpWindowName]  +
push eax  +
push [ebp+dwExStyle]  +
call ds:CreateWindowExW  +
pop ebx  +
pop esi  +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_4421DC  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_28] edx +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov eax [ebx] +
xor edi edi +
mov edx [edx+10h] +
mov [ebp+var_20] edi +
mov [ebp+var_18] edx +
mov ecx [eax+4] +
mov eax [ecx+ebx+24h] +
mov esi [ecx+ebx+20h] +
test eax eax +
jl loc_410913  +
jg loc_410905  +
test esi esi +
jz loc_410913  +
mov [ebp+var_2C] eax +
cmp esi edx +
jbe loc_410913  +
mov [ebp+var_2C] eax +
sub esi edx +
jmp loc_410915  +
xor esi esi +
mov ecx [ecx+ebx+38h] +
mov [ebp+var_30] ebx +
test ecx ecx +
jz loc_410925  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
jnz loc_410949  +
mov ecx [eax+ebx+3Ch] +
test ecx ecx +
jz loc_410949  +
cmp ecx ebx +
jz loc_410949  +
call sub_4111D0  +
mov eax [ebx] +
mov ecx [eax+4] +
cmp dword ptr [ecx+ebx+0Ch] 0 +
setz al  +
mov byte ptr [ebp+var_2C] al +
mov [ebp+var_4] 1 +
test al al +
jnz loc_41096E  +
mov edi 4 +
jmp loc_410AB9  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ecx+ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_4109DC  +
test esi esi +
jz loc_4109D8  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
mov dl [eax+ebx+40h] +
mov [ebp+var_11] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_4109BF  +
mov eax [ecx+30h] +
mov eax [eax] +
test eax eax +
jle loc_4109BF  +
mov edx [ecx+30h] +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_4109C8  +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
setz al  +
test al al +
jz loc_410A45  +
or edi 4 +
mov [ebp+var_20] edi +
test edi edi +
jnz loc_410A06  +
mov edx [ebp+var_28] +
cmp dword ptr [edx+14h] 10h +
jb loc_4109E7  +
mov edx [edx] +
mov eax [ebx] +
push 0  +
push [ebp+var_18]  +
mov eax [eax+4] +
push edx  +
mov ecx [eax+ebx+38h] +
mov eax [ecx] +
mov eax [eax+24h] +
call eax  +
cmp eax [ebp+var_18] +
jnz loc_410A66  +
test edx edx +
jnz loc_410A66  +
test esi esi +
jz loc_410A6B  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
mov dl [eax+ebx+40h] +
mov [ebp+var_11] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_410A4B  +
mov eax [ecx+30h] +
mov eax [eax] +
test eax eax +
jle loc_410A4B  +
mov edx [ecx+30h] +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_410A54  +
dec esi  +
jmp loc_410980  +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
setz al  +
test al al +
jz loc_410A63  +
or edi 4 +
jmp loc_410A6B  +
dec esi  +
jmp loc_410A06  +
mov edi 4 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [eax+ebx+20h] 0 +
mov dword ptr [eax+ebx+24h] 0 +
jmp loc_410AB2  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_410A9C  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_409F70  +
mov eax offset loc_410AAC +
retn   +
mov ebx [ebp-1Ch] +
mov edi [ebp-20h] +
mov [ebp+var_4] 1 +
mov eax [ebx] +
mov ecx [eax+4] +
add ecx ebx +
test edi edi +
jz loc_410ADA  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_410AD2  +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov [ebp+var_4] 4 +
call sub_41AF2C  +
mov esi [ebp+var_30] +
test al al +
jnz loc_410AF4  +
mov ecx esi +
call sub_411290  +
mov byte ptr [ebp+var_4] 5 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_410B0A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442208  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov edi dword_45C520 +
mov ebx dword_45C41C +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_410B9B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_41AAC5  +
cmp dword_45C520 edi +
jnz loc_410B8D  +
mov eax dword_45B5C4 +
inc eax  +
mov dword_45B5C4 eax +
mov dword_45C520 eax +
lea ecx [ebp+var_14] +
call sub_41AB1D  +
mov edi dword_45C520 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_410BB2  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_410C27  +
jmp loc_410BB4  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_410BCA  +
call sub_41AD04  +
cmp edi [eax+0Ch] +
jnb loc_410BCE  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_410C27  +
test ebx ebx +
jz loc_410BD6  +
mov esi ebx +
jmp loc_410C27  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_410CD0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_410C0E  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_4441E0 +
push offset unk_456CBC  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call sub_41EE5A  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_45C41C esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41ACD6  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_41AB1D  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ecx ebx +
jz loc_410C8D  +
push esi  +
push edi  +
lea eax [ecx+10h] +
xor edx edx +
mov edi eax +
xor esi esi +
sub edi ecx +
inc edi  +
shr edi 1 +
cmp ecx eax +
cmova edi edx +
test edi edi +
jz loc_410C8B  +
sub ebx ecx +
mov ax [ebx+ecx] +
lea ecx [ecx+2] +
movzx edx word ptr [ecx-2] +
inc esi  +
mov [ecx-2] ax +
mov [ebx+ecx-2] dx +
cmp esi edi +
jnz loc_410C72  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_443590 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_41E447  +
add esp 8 +
mov dword ptr [esi] offset off_4441E0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44223F  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_410D5B  +
cmp dword ptr [esi] 0 +
jnz loc_410D5B  +
push 8  +
call sub_41C139  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov eax [ecx+4] +
test eax eax +
jnz loc_410D31  +
mov ecx offset unk_450464 +
jmp loc_410D3B  +
mov ecx [eax+18h] +
test ecx ecx +
jnz loc_410D3B  +
lea ecx [eax+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_409610  +
mov dword ptr [edi+4] 0 +
lea ecx [ebp+var_44] +
mov dword ptr [edi] offset off_44421C +
mov [esi] edi +
call sub_4096F0  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_41AF2C  +
test al al +
jnz loc_410DB6  +
mov ecx [esi] +
call sub_411290  +
mov [ebp+var_4] 0 +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_410DD1  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442268  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_410E31  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_410E55  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_410E55  +
cmp ecx esi +
jz loc_410E55  +
call sub_4111D0  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push 0FFFFFFFFh  +
push offset loc_442298  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax ds:DefWindowProcW +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+20h] eax +
mov dword ptr [esi+2Ch] 0 +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov dword ptr [esi] offset off_4502F0 +
mov dword ptr [esi+24h] offset off_44FF5C +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_442298  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax ds:DefWindowProcW +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov [esi+20h] eax +
mov dword ptr [esi+2Ch] 0 +
mov [ebp+var_4] 0 +
mov ecx dword_45C3C4 +
mov dword ptr [esi] offset off_4501C0 +
mov dword ptr [esi+24h] offset off_44FAD0 +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4422C8  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_411065  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov dword ptr [ebx] 0 +
push 0  +
push 0  +
mov [ebp+var_4] 0 +
push Msg  +
push dword ptr [ecx]  +
call ds:SendMessageW  +
mov esi eax +
mov edi 80004005h +
xor eax eax +
mov [ebp+arg_4] esi +
test esi esi +
cmovnz edi eax +
test edi edi +
js loc_4110A6  +
mov eax [esi] +
push ebx  +
push offset unk_44FEE8  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_4110B7  +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4422C8  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_411115  +
mov eax 80004003h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov dword ptr [ebx] 0 +
push 0  +
push 0  +
mov [ebp+var_4] 0 +
push dword_45C3BC  +
push dword ptr [ecx]  +
call ds:SendMessageW  +
mov esi eax +
mov edi 80004005h +
xor eax eax +
mov [ebp+arg_4] esi +
test esi esi +
cmovnz edi eax +
test edi edi +
js loc_411156  +
mov eax [esi] +
push ebx  +
push offset unk_450040  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_411167  +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_441650  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_4111B6  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442304  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+38h] 0 +
jz loc_41127D  +
push esi  +
lea ecx [ebp+var_14] +
call sub_410DF0  +
mov [ebp+var_4] 0 +
cmp [ebp+var_10] 0 +
jz loc_41124C  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
cmp eax 0FFFFFFFFh +
jnz loc_41124C  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_411244  +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov [ebp+var_4] 1 +
call sub_41AF2C  +
test al al +
jnz loc_411264  +
mov ecx [ebp+var_14] +
call sub_411290  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_14] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_41127D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
retn   +
***
push 0FFFFFFFFh  +
sub ecx [ecx-4] +
sub [esp+arg_0] 10h +
sub [esp+arg_0] 10h +
sub [esp+arg_0] 14h +
sub [esp+arg_0] 10h +
sub [esp+arg_0] 14h +
sub [esp+arg_0] 14h +
jmp sub_40F700  +
***
sub [esp+arg_0] 34h +
jmp sub_40F790  +
***
sub [esp+arg_0] 14h +
sub [esp+arg_0] 1Ch +
sub [esp+arg_0] 38h +
sub [esp+arg_0] 2Ch +
sub [esp+arg_0] 1Ch +
jmp sub_40E370  +
***
sub [esp+arg_0] 20h +
sub [esp+arg_0] 3Ch +
sub ecx [ecx-4] +
jmp sub_40DF80  +
***
sub [esp+arg_0] 1Ch +
sub [esp+arg_0] 20h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 24h +
sub [esp+arg_0] 40h +
sub [esp+arg_0] 34h +
sub [esp+arg_0] 20h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 24h +
sub [esp+arg_0] 8 +
jmp sub_40E350  +
***
sub [esp+arg_0] 28h +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 38h +
jmp sub_40F720  +
***
sub [esp+arg_0] 24h +
sub ecx 38h +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 28h +
sub [esp+arg_0] 0Ch +
sub [esp+arg_0] 8 +
sub [esp+arg_0] 3Ch +
sub [esp+arg_0] 28h +
sub [esp+arg_0] 0Ch +
sub [esp+arg_0] 0Ch +
jmp sub_40F700  +
***
sub [esp+arg_0] 10h +
sub [esp+arg_0] 2Ch +
jmp sub_40F790  +
***
sub [esp+arg_0] 0Ch +
sub [esp+arg_0] 40h +
jmp sub_40F720  +
***
mov eax [esp+4] +
mov eax [eax] +
jmp dword ptr [eax+30h]  +
***
push 0FFFFFFFFh  +
push offset loc_442396  +
mov eax large fs:0 +
push eax  +
sub esp 80h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax edx +
mov [ebp+var_7C] eax +
mov [ebp+var_80] ecx +
mov edx [ebp+arg_0] +
mov [ebp+var_78] edx +
test ecx ecx +
jz loc_4117EF  +
mov edi 1 +
cmp eax edi +
jle loc_4117EF  +
mov edx [ecx+edi*4] +
xor eax eax +
mov [ebp+var_30] 7 +
mov [ebp+var_34] 0 +
mov word ptr [ebp+var_44] ax +
cmp [edx] ax +
jz loc_411661  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_411652  +
sub eax esi +
sar eax 1 +
push eax  +
push edx  +
lea ecx [ebp+var_44] +
call loc_402D90  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_44] +
cmp [ebp+var_30] 8 +
mov eax [ebp+var_34] +
cmovnb ecx [ebp+var_44] +
mov [ebp+var_18] 7 +
lea eax [ecx+eax*2] +
lea ecx [ebp+var_44] +
cmovnb ecx [ebp+var_44] +
xor ebx ebx +
xor edx edx +
mov [ebp+var_1C] ebx +
mov word ptr [ebp+var_2C] dx +
cmp ecx eax +
jz loc_4116B1  +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
lea ecx [ebp+var_2C] +
call loc_402D90  +
mov ebx [ebp+var_1C] +
push 1  +
push ecx  +
push offset asc_4513A4  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
call loc_40E630  +
mov esi eax +
lea eax [ebp+var_74] +
push ebx  +
lea ecx [esi+1] +
push ecx  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_40CA20  +
mov ebx eax +
lea ecx [esi-2] +
mov byte ptr [ebp+var_4] 2 +
push ecx  +
push 2  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_40CA20  +
mov ecx [ebp+var_78] +
push eax  +
lea eax [ebp+var_88] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call sub_4038D0  +
mov esi [ebp+var_88] +
add esi 28h +
cmp esi ebx +
jz loc_41174B  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_411724  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41173C  +
mov eax [esi] +
jmp loc_41173E  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push ebx  +
call sub_403860  +
mov eax [ebp+var_48] +
cmp eax 8 +
jb loc_411760  +
inc eax  +
lea ecx [ebp+var_5C] +
push eax  +
push [ebp+var_5C]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_48] 7 +
mov word ptr [ebp+var_5C] ax +
mov eax [ebp+var_60] +
mov [ebp+var_4C] 0 +
cmp eax 8 +
jb loc_411789  +
inc eax  +
lea ecx [ebp+var_74] +
push eax  +
push [ebp+var_74]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_60] 7 +
mov word ptr [ebp+var_74] ax +
mov eax [ebp+var_18] +
mov [ebp+var_64] 0 +
cmp eax 8 +
jb loc_4117B2  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov word ptr [ebp+var_2C] ax +
mov eax [ebp+var_30] +
mov [ebp+var_18] 7 +
mov [ebp+var_1C] 0 +
cmp eax 8 +
jb loc_4117E2  +
inc eax  +
lea ecx [ebp+var_44] +
push eax  +
push [ebp+var_44]  +
call loc_402F00  +
mov ecx [ebp+var_80] +
inc edi  +
cmp edi [ebp+var_7C] +
jl loc_411631  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_4423F6  +
mov eax large fs:0 +
push eax  +
sub esp 40Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
call sub_419470  +
lea eax [ebp+PathName] +
mov [ebp+var_4] 0 +
push eax  +
push 200h  +
mov dword_45C528 offset off_45150C +
mov dword_45C5B4 0 +
mov word_45C5B8 0 +
call ds:GetTempPathW  +
lea eax [ebp+PathName] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_4118C7  +
push eax  +
lea eax [ebp+PathName] +
push eax  +
call ds:CreateDirectoryW  +
push 8  +
call sub_41C139  +
mov esi eax +
add esp 4 +
mov [ebp+var_414] esi +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
mov dword_45C5B0 esi +
cmp dword ptr [esi] 0 +
jnz loc_411901  +
push offset Name  +
push 1  +
push 1  +
push 0  +
call ds:CreateSemaphoreW  +
mov [esi] eax +
push 0C0h  +
call sub_41C139  +
mov esi eax +
add esp 4 +
mov [ebp+var_414] esi +
mov ecx esi +
mov byte ptr [ebp+var_4] 1 +
call sub_4189C0  +
lea ecx [esi+98h] +
mov dword ptr [esi] offset off_4516F8 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_411943  +
mov ecx [ecx] +
xor eax eax +
mov [ecx] ax +
push 3  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [esi+4] +
push offset aAsu  +
mov [esi+90h] eax +
mov [esi+68h] eax +
call loc_402D90  +
mov byte ptr [ebp+var_4] 0 +
mov ecx esi +
push 1Eh  +
mov dword_45C5AC esi +
call sub_418C10  +
mov ecx dword_45C5AC +
sub esp 8 +
call sub_418F40  +
push dword_45C5AC  +
call sub_412030  +
mov ecx eax +
call sub_4120D0  +
push 3  +
push offset aAsu  +
mov ecx offset dword_45C548 +
call loc_402D90  +
mov eax offset dword_45C528 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax dword_45C5A4 +
cmp eax 8 +
jb loc_4119EC  +
inc eax  +
mov ecx offset dword_45C590 +
push eax  +
push dword_45C590  +
call loc_402F00  +
xor eax eax +
mov dword_45C5A4 7 +
mov word ptr dword_45C590 ax +
mov eax dword_45C58C +
mov dword_45C5A0 0 +
cmp eax 8 +
jb loc_411A24  +
inc eax  +
mov ecx offset dword_45C578 +
push eax  +
push dword_45C578  +
call loc_402F00  +
xor eax eax +
mov dword_45C58C 7 +
mov word ptr dword_45C578 ax +
mov eax dword_45C574 +
mov dword_45C588 0 +
cmp eax 8 +
jb loc_411A5C  +
inc eax  +
mov ecx offset dword_45C560 +
push eax  +
push dword_45C560  +
call loc_402F00  +
xor eax eax +
mov dword_45C574 7 +
mov word ptr dword_45C560 ax +
mov eax dword_45C55C +
mov dword_45C570 0 +
cmp eax 8 +
jb loc_411A94  +
inc eax  +
mov ecx offset dword_45C548 +
push eax  +
push dword_45C548  +
call loc_402F00  +
xor eax eax +
mov dword_45C55C 7 +
mov word ptr dword_45C548 ax +
mov eax dword_45C544 +
mov dword_45C558 0 +
cmp eax 8 +
jb loc_411ACC  +
inc eax  +
mov ecx offset dword_45C530 +
push eax  +
push dword_45C530  +
call loc_402F00  +
xor eax eax +
mov dword_45C544 7 +
mov dword_45C540 0 +
mov word ptr dword_45C530 ax +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441890  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi dword_45C5B0 +
mov dword_45C528 offset off_45150C +
push dword ptr [esi]  +
call ds:CloseHandle  +
test eax eax +
jz loc_411B35  +
mov dword ptr [esi] 0 +
mov eax dword_45C5B0 +
test eax eax +
jz loc_411B49  +
push 8  +
push eax  +
call sub_41C538  +
add esp 8 +
mov eax dword_45C5AC +
test eax eax +
jz loc_411B7A  +
push eax  +
call sub_412030  +
mov ecx eax +
call sub_412210  +
mov ecx dword_45C5AC +
test ecx ecx +
jz loc_411B70  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
mov dword_45C5AC 0 +
call sub_4119D0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44242C  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_45C5BC +
cmp eax [ecx+4] +
jle loc_411C03  +
push offset dword_45C5BC  +
call sub_41C035  +
add esp 4 +
cmp dword_45C5BC 0FFFFFFFFh +
jnz loc_411C03  +
mov [ebp+var_4] 0 +
call sub_411840  +
push offset loc_442EF0  +
call sub_41C4A9  +
add esp 4 +
push offset dword_45C5BC  +
call sub_41BFF6  +
add esp 4 +
mov eax offset dword_45C528 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44245B  +
mov eax large fs:0 +
push eax  +
mov eax 1020h +
call sub_41D130  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [edi+84h] +
push 1Eh  +
call sub_418C10  +
mov eax [edi+84h] +
mov eax [eax+64h] +
cmp eax 0Ah +
jg loc_411C76  +
mov byte ptr [edi+8Ch] 1 +
cmp eax 14h +
jg loc_411C82  +
mov byte ptr [edi+8Dh] 1 +
cmp eax 1Eh +
jg loc_411C8E  +
mov byte ptr [edi+8Eh] 1 +
cmp eax 28h +
jg loc_411C9A  +
mov byte ptr [edi+8Fh] 1 +
cmp eax 32h +
jg loc_411CA6  +
mov byte ptr [edi+90h] 1 +
cmp eax 3Ch +
jg loc_411CB2  +
mov byte ptr [edi+91h] 1 +
push 3  +
push offset aAim  +
lea ecx [ebp+cchWideChar] +
mov [ebp+var_1014] 0Fh +
mov [ebp+var_1018] 0 +
mov byte ptr [ebp+cchWideChar] 0 +
call loc_40EAB0  +
lea ebx [edi+38h] +
mov [ebp+var_4] 0 +
push ebx  +
lea eax [ebp+cchWideChar] +
push eax  +
call sub_411E00  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_1014] +
cmp eax 10h +
jb loc_411D1B  +
inc eax  +
lea ecx [ebp+cchWideChar] +
push eax  +
push [ebp+cchWideChar]  +
call loc_40F8E0  +
mov esi ds:wsprintfW +
lea eax [ebp+var_810] +
push offset a10_0_0_75  +
push offset aBuildVersionS  +
push eax  +
call esi  +
push 4  +
lea eax [ebp+var_1010] +
push offset aLoggingLevelVe  +
push eax  +
call esi  +
mov eax [ebx+14h] +
add esp 18h +
cmp eax 8 +
jb loc_411D53  +
mov edx [ebx] +
jmp loc_411D55  +
mov edx ebx +
cmp eax 8 +
jb loc_411D5E  +
mov ecx [ebx] +
jmp loc_411D60  +
mov ecx ebx +
cmp dword ptr [edi+34h] 8 +
lea esi [edi+20h] +
jb loc_411D73  +
mov eax [esi] +
mov [ebp+var_102C] eax +
jmp loc_411D79  +
mov [ebp+var_102C] esi +
cmp dword ptr [edi+1Ch] 8 +
lea eax [edi+8] +
jb loc_411D84  +
mov eax [eax] +
lea esi [ebp+var_810] +
push esi  +
sub esp 8 +
push edx  +
push ecx  +
push [ebp+var_102C]  +
push eax  +
push ecx  +
mov ecx edi +
call sub_411EB0  +
mov eax [ebx+14h] +
cmp eax 8 +
jb loc_411DAB  +
mov ecx [ebx] +
jmp loc_411DAD  +
mov ecx ebx +
cmp eax 8 +
jb loc_411DB4  +
mov ebx [ebx] +
cmp dword ptr [edi+34h] 8 +
lea esi [edi+20h] +
jb loc_411DBF  +
mov esi [esi] +
cmp dword ptr [edi+1Ch] 8 +
lea eax [edi+8] +
jb loc_411DCA  +
mov eax [eax] +
lea edx [ebp+var_1010] +
push edx  +
sub esp 8 +
push ecx  +
push ebx  +
push esi  +
push eax  +
push ecx  +
mov ecx edi +
call sub_411EB0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+cchWideChar] +
push edi  +
cmp dword ptr [esi+14h] 10h +
jb loc_411E12  +
mov eax [esi] +
jmp loc_411E14  +
mov eax esi +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov [ebp+cchWideChar] eax +
lea ecx ds:2[eax*2] +
push ecx  +
call sub_42A938  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_411E6A  +
cmp dword ptr [esi+14h] 10h +
jb loc_411E49  +
mov esi [esi] +
push [ebp+cchWideChar]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_411E72  +
push edi  +
call sub_42746C  +
add esp 4 +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ebp+cchWideChar] +
xor ecx ecx +
mov [edi+eax*2] cx +
cmp [edi] cx +
jz loc_411E94  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_411E85  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp+arg_4] +
push edi  +
call loc_402D90  +
push edi  +
call sub_42746C  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push esi  +
mov esi ecx +
push edi  +
push 3E8h  +
mov edi [esi+88h] +
push dword ptr [edi]  +
call ds:WaitForSingleObject  +
cmp eax 102h +
jz loc_411F39  +
cmp eax 0FFFFFFFFh +
jz loc_411F39  +
cmp eax 80h +
jz loc_411F39  +
mov byte ptr [edi+4] 1 +
call sub_412030  +
sub esp 8 +
mov ecx eax +
push 0  +
push [ebp+arg_1C]  +
push offset String  +
push offset String  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 1Eh  +
push offset aAsu  +
call sub_4122C0  +
mov esi [esi+88h] +
cmp byte ptr [esi+4] 0 +
jz loc_411F39  +
push 0  +
push 1  +
push dword ptr [esi]  +
mov byte ptr [esi+4] 0 +
call ds:ReleaseSemaphore  +
test eax eax +
jnz loc_411F39  +
mov byte ptr [esi+4] 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
sub esp 810h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp byte ptr [esi+8Eh] 0 +
jz loc_411FC8  +
lea eax [ebp+arg_C] +
mov edx 3FFh +
push eax  +
push ecx  +
push [ebp+arg_8]  +
push ecx  +
lea ecx [ebp+var_80C] +
call sub_411810  +
lea edx [esi+38h] +
add esp 10h +
cmp dword ptr [edx+14h] 8 +
jb loc_411F9C  +
mov edx [edx] +
cmp dword ptr [esi+34h] 8 +
lea eax [esi+20h] +
jb loc_411FA7  +
mov eax [eax] +
cmp dword ptr [esi+1Ch] 8 +
lea ecx [esi+8] +
jb loc_411FB2  +
mov ecx [ecx] +
lea ebx [ebp+var_80C] +
push ebx  +
sub esp 8 +
push edi  +
push edx  +
push eax  +
push ecx  +
push ecx  +
mov ecx esi +
call sub_411EB0  +
mov ecx [ebp+var_8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_411FFD  +
xor eax eax +
push eax  +
push edx  +
call loc_402D90  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_412003  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_402D90  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44249C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_45C5C0 +
cmp eax [ecx+4] +
jle loc_4120BA  +
push offset dword_45C5C0  +
call sub_41C035  +
add esp 4 +
cmp dword_45C5C0 0FFFFFFFFh +
jnz loc_4120BA  +
mov [ebp+var_4] 0 +
mov dword_45C5C4 0 +
mov dword_45C5C8 0 +
call sub_412DE0  +
push offset sub_442F00  +
mov dword_45C5C4 eax +
call sub_41C4A9  +
push offset dword_45C5C0  +
call sub_41BFF6  +
add esp 8 +
mov eax offset dword_45C5C4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4424C8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_412117  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+8] +
call eax  +
mov [ebp+var_D] al +
test al al +
jz loc_4121EB  +
lea ecx [edi+4] +
push ecx  +
lea eax [ebp+var_14] +
mov ecx ebx +
push eax  +
call sub_412500  +
mov eax [eax] +
cmp eax [ebx] +
jnz loc_4121B5  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_24] +
call sub_412560  +
mov eax [ebp+arg_0] +
mov ecx ebx +
add eax 4 +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_412E50  +
mov ecx [ebp+var_18] +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ecx+28h] +
call sub_4125D0  +
mov ecx [ebp+var_24] +
test ecx ecx +
jz loc_4121EB  +
mov eax [ebp+var_1C] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_412700  +
jmp loc_4121EB  +
mov ecx [eax+2Ch] +
lea ebx [eax+28h] +
mov eax [ebx] +
cmp eax ecx +
jz loc_4121CC  +
cmp edi [eax] +
jz loc_4121EB  +
add eax 4 +
cmp eax ecx +
jnz loc_4121C1  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
lea eax [ebp+arg_0] +
mov ecx ebx +
push eax  +
call sub_412560  +
mov al [ebp+var_D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_412229  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push edi  +
lea eax [ebx+4] +
mov byte ptr [ebp+arg_0+3] 0 +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_412500  +
mov edi [eax] +
cmp edi [esi] +
jnz loc_41224C  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov esi [edi+28h] +
mov eax [edi+2Ch] +
cmp esi eax +
jz loc_4122B3  +
cmp ebx [esi] +
jz loc_41226D  +
add esi 4 +
cmp esi eax +
jnz loc_412256  +
mov al byte ptr [ebp+arg_0+3] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx [esi] +
lea eax [ebx+74h] +
push eax  +
call ds:EnterCriticalSection  +
dec dword ptr [ebx+70h]  +
lea eax [ebx+74h] +
push eax  +
call ds:LeaveCriticalSection  +
mov ecx [esi] +
mov byte ptr [ebp+arg_0+3] 1 +
cmp dword ptr [ecx+70h] 0 +
jnz loc_41229C  +
mov eax [ecx] +
mov eax [eax+0Ch] +
call eax  +
mov byte ptr [ebp+arg_0+3] al +
mov ecx [edi+2Ch] +
lea edx [esi+4] +
sub ecx edx +
push ecx  +
push edx  +
push esi  +
call loc_41D160  +
add esp 0Ch +
add dword ptr [edi+2Ch] 0FFFFFFFCh +
mov al byte ptr [ebp+arg_0+3] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 44h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_20] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_4123C0  +
xor eax eax +
mov [ebp+var_8] 7 +
mov [ebp+var_C] 0 +
mov word ptr [ebp+var_1C] ax +
cmp [edx] ax +
jnz loc_41232D  +
xor ecx ecx +
jmp loc_412341  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412332  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_1C] +
call loc_402D90  +
lea eax [ebp+var_1C] +
mov ecx esi +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call sub_412500  +
mov edi [eax] +
mov eax [ebp+var_8] +
cmp eax 8 +
jb loc_412371  +
inc eax  +
lea ecx [ebp+var_1C] +
push eax  +
push [ebp+var_1C]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_8] 7 +
mov [ebp+var_C] 0 +
mov word ptr [ebp+var_1C] ax +
cmp edi [esi] +
jz loc_4123C0  +
mov esi [edi+28h] +
cmp esi [edi+2Ch] +
jz loc_4123C0  +
mov ebx [ebp+arg_4] +
mov ecx [esi] +
push 0  +
push 0  +
push [ebp+var_20]  +
mov eax [ecx] +
push [ebp+var_24]  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
push [ebp+var_30]  +
push [ebp+var_34]  +
push [ebp+var_38]  +
push [ebp+var_3C]  +
push ebx  +
call dword ptr [eax+14h]  +
add esi 4 +
cmp esi [edi+2Ch] +
jnz loc_412394  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
sub esp 44h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_20] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_4124E0  +
xor eax eax +
mov [ebp+var_8] 7 +
mov [ebp+var_C] 0 +
mov word ptr [ebp+var_1C] ax +
cmp [edx] ax +
jnz loc_41244D  +
xor ecx ecx +
jmp loc_412461  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_412452  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_1C] +
call loc_402D90  +
lea eax [ebp+var_1C] +
mov ecx esi +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call sub_412500  +
mov edi [eax] +
mov eax [ebp+var_8] +
cmp eax 8 +
jb loc_412491  +
inc eax  +
lea ecx [ebp+var_1C] +
push eax  +
push [ebp+var_1C]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_8] 7 +
mov [ebp+var_C] 0 +
mov word ptr [ebp+var_1C] ax +
cmp edi [esi] +
jz loc_4124E0  +
mov esi [edi+28h] +
cmp esi [edi+2Ch] +
jz loc_4124E0  +
mov ebx [ebp+arg_4] +
mov ecx [esi] +
push 0  +
push 0  +
push [ebp+var_20]  +
mov eax [ecx] +
push [ebp+var_24]  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
push [ebp+var_30]  +
push [ebp+var_34]  +
push [ebp+var_38]  +
push [ebp+var_3C]  +
push ebx  +
call dword ptr [eax+10h]  +
add esi 4 +
cmp esi [edi+2Ch] +
jnz loc_4124B4  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push ebx  +
push esi  +
mov esi [ecx] +
mov ebx esi +
mov ecx [ebp+arg_4] +
push edi  +
mov edi [esi+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_412535  +
push ecx  +
lea ecx [edi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_412528  +
mov edi [edi+8] +
jmp loc_41252C  +
mov ebx edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
mov ecx [ebp+arg_4] +
jz loc_412516  +
cmp ebx esi +
jz loc_412552  +
lea eax [ebx+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
js loc_412552  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+4] +
cmp edi eax +
jnb loc_4125A1  +
mov ecx [esi] +
cmp ecx edi +
ja loc_4125A1  +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_412589  +
push ecx  +
mov ecx esi +
call loc_412760  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4125B9  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax [esi+8] +
jnz loc_4125AE  +
push ecx  +
mov ecx esi +
call loc_412760  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4125B9  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] ebx +
cmp ebx esi +
jz loc_4125F2  +
mov edx [esi] +
mov eax [esi+4] +
cmp edx eax +
jnz loc_4125FC  +
mov eax [ebx] +
mov [ebx+4] eax +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov esi [ebx+4] +
mov ecx [ebx] +
sub esi ecx +
push edi  +
mov edi eax +
sar esi 2 +
sub edi edx +
mov [ebp+var_8] esi +
sar edi 2 +
cmp edi esi +
mov esi [ebp+arg_0] +
ja loc_412640  +
sub eax edx +
push eax  +
push edx  +
push ecx  +
call loc_41D160  +
mov ecx [esi+4] +
add esp 0Ch +
sub ecx [esi] +
mov eax [ebx] +
sar ecx 2 +
pop edi  +
pop esi  +
lea eax [eax+ecx*4] +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebx+8] +
sub eax ecx +
sar eax 2 +
cmp edi eax +
ja loc_412688  +
mov eax [ebp+var_8] +
lea ebx [edx+eax*4] +
mov eax ebx +
sub eax edx +
push eax  +
push edx  +
push ecx  +
call loc_41D160  +
mov esi [esi+4] +
mov edi [ebp+var_4] +
sub esi ebx +
push esi  +
push ebx  +
mov edi [edi+4] +
push edi  +
call loc_41D160  +
mov ecx [ebp+var_4] +
lea eax [esi+edi] +
add esp 18h +
mov [ecx+4] eax +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
test ecx ecx +
jz loc_412693  +
push eax  +
push ecx  +
call loc_412700  +
mov eax [esi+4] +
mov ecx ebx +
sub eax [esi] +
sar eax 2 +
push eax  +
call loc_4127D0  +
test al al +
jz loc_4126C1  +
mov eax [esi] +
mov esi [esi+4] +
mov edi [ebx] +
sub esi eax +
push esi  +
push eax  +
push edi  +
call loc_41D160  +
lea eax [esi+edi] +
add esp 0Ch +
mov [ebx+4] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_4126FC  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_412700  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_412741  +
shl eax 2 +
cmp eax 1000h +
jb loc_412734  +
test cl 1Fh +
jnz loc_412746  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_41274B  +
sub ecx eax +
cmp ecx 4 +
jb loc_412750  +
cmp ecx 23h +
ja loc_412755  +
mov ecx eax +
push ecx  +
call sub_41BEC0  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
call sub_427390  +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_4127B3  +
mov ecx [esi] +
sub edx ecx +
push ebx  +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_4127B8  +
sub edi ecx +
inc edx  +
sar edi 2 +
mov eax edi +
shr eax 1 +
sub ebx eax +
cmp ebx edi +
lea ecx [eax+edi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_412890  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jnz loc_4127FA  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp edi 3FFFFFFFh +
ja loc_41281D  +
push edi  +
call loc_412D70  +
mov [esi] eax +
mov [esi+4] eax +
mov eax [esi] +
lea eax [eax+edi*4] +
mov [esi+8] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_41AA58  +
push ecx  +
mov ecx dword_45C5C4 +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
cmp esi [ecx] +
jnz loc_412861  +
cmp eax ecx +
jnz loc_412861  +
call loc_4128F0  +
mov eax dword_45C5C4 +
pop esi  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp esi eax +
jz loc_41287F  +
lea ecx [ebp+arg_4] +
call loc_4037A0  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
call loc_412990  +
mov esi [ebp+arg_4] +
cmp esi [ebp+arg_8] +
jnz loc_412865  +
mov eax [ebp+arg_0] +
mov [eax] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
call loc_412D70  +
mov esi [edi] +
mov ebx eax +
mov edx [edi+4] +
sub edx esi +
push edx  +
push esi  +
push ebx  +
call loc_41D160  +
mov ecx [edi] +
add esp 0Ch +
mov esi [edi+4] +
sub esi ecx +
sar esi 2 +
test ecx ecx +
jz loc_4128D1  +
mov eax [edi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_412700  +
mov eax [ebp+arg_0] +
lea eax [ebx+eax*4] +
mov [edi+8] eax +
lea eax [ebx+esi*4] +
mov [edi+4] eax +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_441630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax dword_45C5C4 +
mov edi [eax+4] +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_41295D  +
push dword ptr [esi+8]  +
mov ecx offset dword_45C5C4 +
call sub_412E10  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_412F00  +
push edi  +
call sub_41BEC0  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_412930  +
mov eax dword_45C5C4 +
mov [eax+4] eax +
mov eax dword_45C5C4 +
mov [eax] eax +
mov eax dword_45C5C4 +
mov [eax+8] eax +
mov dword_45C5C8 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
lea ecx [ebp+0Ch] +
push esi  +
push edi  +
call loc_4037A0  +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_4129AE  +
mov esi [ebx+8] +
jmp loc_4129C9  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4129BB  +
mov esi ecx +
jmp loc_4129C9  +
mov edi [ebp+0Ch] +
mov esi [edi+8] +
cmp edi ebx +
jnz loc_412A60  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [ebx+4] +
jnz loc_4129D5  +
mov [esi+4] eax +
mov ecx dword_45C5C4 +
cmp [ecx+4] ebx +
jnz loc_4129E5  +
mov [ecx+4] esi +
jmp loc_4129F0  +
cmp [eax] ebx +
jnz loc_4129ED  +
mov [eax] esi +
jmp loc_4129F0  +
mov [eax+8] esi +
mov ecx dword_45C5C4 +
cmp [ecx] ebx +
jnz loc_412A22  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_412A04  +
mov edx eax +
jmp loc_412A1A  +
mov ecx [esi] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412A1A  +
nop   +
mov edx ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_412A10  +
mov ecx dword_45C5C4 +
mov [ecx] edx +
mov edi dword_45C5C4 +
cmp [edi+8] ebx +
jnz loc_412ABA  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_412A3E  +
mov edx eax +
mov [edi+8] edx +
jmp loc_412ABA  +
mov ecx [esi+8] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412A5B  +
mov edx ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_412A50  +
mov [edi+8] edx +
jmp loc_412ABA  +
mov [ecx+4] edi +
mov eax [ebx] +
mov [edi] eax +
cmp edi [ebx+8] +
jnz loc_412A70  +
mov eax edi +
jmp loc_412A8A  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [edi+4] +
jnz loc_412A7C  +
mov [esi+4] eax +
mov [eax] esi +
mov ecx [ebx+8] +
mov [edi+8] ecx +
mov ecx [ebx+8] +
mov [ecx+4] edi +
mov ecx dword_45C5C4 +
cmp [ecx+4] ebx +
jnz loc_412A9A  +
mov [ecx+4] edi +
jmp loc_412AA8  +
mov ecx [ebx+4] +
cmp [ecx] ebx +
jnz loc_412AA5  +
mov [ecx] edi +
jmp loc_412AA8  +
mov [ecx+8] edi +
mov ecx [ebx+4] +
mov [edi+4] ecx +
mov cl [ebx+0Ch] +
mov dl [edi+0Ch] +
mov [edi+0Ch] cl +
mov [ebx+0Ch] dl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_412D3B  +
mov ecx dword_45C5C4 +
cmp esi [ecx+4] +
jz loc_412D37  +
cmp byte ptr [esi+0Ch] 1 +
jnz loc_412D37  +
mov edx [eax] +
cmp esi edx +
jnz loc_412B9D  +
mov edx [eax+8] +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_412B37  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax+8] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412B0B  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_45C5C4 +
cmp eax [ecx+4] +
jnz loc_412B21  +
mov [ecx+4] edx +
jmp loc_412B2F  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_412B2C  +
mov [ecx] edx +
jmp loc_412B2F  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_412C0E  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_412B56  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jz loc_412C0A  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_412C3F  +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi+8] +
mov [edx] ecx +
mov ecx [edi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412B80  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword_45C5C4 +
cmp edx [ecx+4] +
jnz loc_412C27  +
mov [ecx+4] edi +
jmp loc_412C36  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_412BEB  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412BBE  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_45C5C4 +
cmp eax [ecx+4] +
jnz loc_412BD4  +
mov [ecx+4] edx +
jmp loc_412BE3  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_412BE1  +
mov [ecx+8] edx +
jmp loc_412BE3  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov edx [eax] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_412C0E  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_412C98  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_412C98  +
mov byte ptr [edx+0Ch] 0 +
mov ecx dword_45C5C4 +
mov esi eax +
mov eax [eax+4] +
cmp esi [ecx+4] +
jnz loc_412AD3  +
jmp loc_412D37  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_412C34  +
mov [ecx+8] edi +
jmp loc_412C36  +
mov [ecx] edi +
mov [edi+8] edx +
mov [edx+4] edi +
mov edx [eax+8] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412C63  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_45C5C4 +
cmp eax [ecx+4] +
jnz loc_412C7E  +
mov [ecx+4] edx +
mov [edx] eax +
jmp loc_412D34  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_412C8E  +
mov [ecx] edx +
mov [edx] eax +
jmp loc_412D34  +
mov [ecx+8] edx +
mov [edx] eax +
jmp loc_412D34  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_412CE9  +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi] +
mov [edx+8] ecx +
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412CBE  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword_45C5C4 +
cmp edx [ecx+4] +
jnz loc_412CD4  +
mov [ecx+4] edi +
jmp loc_412CE2  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_412CDF  +
mov [ecx] edi +
jmp loc_412CE2  +
mov [ecx+8] edi +
mov [edi] edx +
mov [edx+4] edi +
mov edx [eax] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_412D0C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_45C5C4 +
cmp eax [ecx+4] +
jnz loc_412D22  +
mov [ecx+4] edx +
jmp loc_412D31  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_412D2F  +
mov [ecx+8] edx +
jmp loc_412D31  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov byte ptr [esi+0Ch] 1 +
lea ecx [ebx+10h] +
call sub_412F00  +
push ebx  +
call sub_41BEC0  +
mov eax dword_45C5C8 +
add esp 4 +
mov ecx [ebp+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_412D61  +
dec eax  +
mov dword_45C5C8 eax +
mov eax [ebp+8] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_412D7E  +
pop ebp  +
retn 4  +
***
cmp eax 3FFFFFFFh +
ja loc_412DC1  +
shl eax 2 +
cmp eax 1000h +
jb loc_412DB2  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_412DC6  +
push ecx  +
call sub_41C139  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_412DCB  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_41C139  +
add esp 4 +
test eax eax +
jnz loc_412D7A  +
jmp loc_412DD0  +
call sub_41CD81  +
call sub_41CD81  +
call sub_427390  +
call sub_427390  +
add esp 4 +
test eax eax +
jz sub_427390  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_412DFD  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_412E06  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_412E48  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_412E10  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_412F00  +
push edi  +
call sub_41BEC0  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_412E23  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax] +
mov ebx esi +
mov [ebp+var_8] eax +
mov [ebp+var_4] esi +
mov edi [esi+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_412E90  +
mov esi [ebp+arg_4] +
push esi  +
lea ecx [edi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_412E83  +
mov edi [edi+8] +
jmp loc_412E87  +
mov ebx edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_412E71  +
mov esi [ebp+var_4] +
cmp ebx esi +
jz loc_412EB6  +
mov ecx [ebp+arg_4] +
lea eax [ebx+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
js loc_412EB6  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov byte ptr [eax+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
push ecx  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
push ecx  +
mov ecx [ebp+var_8] +
call sub_412F70  +
mov ecx [ebp+var_8] +
push eax  +
add eax 10h +
push eax  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
call sub_413040  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
pop edi  +
pop esi  +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [esi+18h] +
test ecx ecx +
jz loc_412F2E  +
mov eax [esi+20h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_412700  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_412F41  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_412F5E  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442501  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_413280  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_413007  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_412FE0  +
mov eax [esi] +
jmp loc_412FE2  +
mov eax esi +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ecx  +
mov ecx esi +
mov [eax] dx +
call loc_402FE0  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_442520  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_4130A4  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebx] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_4130E9  +
mov ecx [ebp+arg_8] +
lea eax [esi+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
jns loc_413247  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 1  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp esi edi +
jnz loc_41312B  +
mov esi [edi+8] +
push [ebp+arg_8]  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_413247  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 0  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
lea eax [esi+10h] +
push eax  +
mov ecx ebx +
call sub_4039F0  +
test eax eax +
jns loc_4131AF  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_403D60  +
push ebx  +
mov ebx [ebp+var_14] +
lea ecx [ebx+10h] +
call sub_4039F0  +
test eax eax +
jns loc_4131AC  +
mov eax [ebx+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_41318A  +
mov esi [ebp+arg_0] +
push ebx  +
push 0  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
push ebx  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_413247  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_4037A0  +
mov ebx [ebp+var_14] +
cmp ebx edi +
jz loc_4131E2  +
mov ecx [ebp+arg_8] +
lea eax [ebx+10h] +
push eax  +
call sub_4039F0  +
test eax eax +
jns loc_413247  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_413214  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov esi [ebp+arg_0] +
push ebx  +
push 1  +
push esi  +
call loc_4132E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_4132C0  +
push 0  +
push 0  +
call sub_41EE5A  +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
mov ecx [ebp+var_1C] +
push eax  +
call sub_413500  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push 34h  +
mov esi ecx +
call sub_41C139  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_4132B1  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_4132A2  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_4132AD  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_427390  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [esi+10h] +
call sub_412F00  +
push esi  +
call sub_41BEC0  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 4EC4EC3h +
jnb loc_4134D4  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_413317  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_413336  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_413329  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_413336  +
mov [ecx] ebx +
jmp loc_413336  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_413336  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4134BF  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_413400  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_413406  +
cmp eax [ecx+8] +
jnz loc_4133A1  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41337C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_41338E  +
mov [ecx+4] edx +
jmp loc_41339C  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_413399  +
mov [ecx] edx +
jmp loc_41339C  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4133CB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_4133E3  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_4134AF  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4133F6  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_4134AF  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_4134AF  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_413423  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_4134B2  +
cmp eax [ecx] +
jnz loc_413463  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41343C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_41344E  +
mov [ecx+4] edx +
jmp loc_41345D  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_41345B  +
mov [ecx+8] edx +
jmp loc_41345D  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41348D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_41349F  +
mov [ecx+4] esi +
jmp loc_4134AD  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_4134AA  +
mov [ecx] esi +
jmp loc_4134AD  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_413345  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [ebp+18h] +
lea ecx [esi+10h] +
call sub_412F00  +
push esi  +
call sub_41BEC0  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_41AA58  +
push 0FFFFFFFFh  +
push offset loc_442540  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx ecx +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0 +
mov al 1 +
mov ecx [edx] +
mov edi ecx +
mov ebx [ebp+arg_8] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_14] al +
mov esi [ecx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41357C  +
nop   +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
mov edi esi +
call sub_4039F0  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_41356D  +
mov esi [esi] +
jmp loc_413570  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_413550  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_18] +
mov esi edi +
mov [ebp+arg_8] esi +
test al al +
jz loc_4135C5  +
cmp edi [ecx] +
jnz loc_4135BA  +
push [ebp+arg_C]  +
push ecx  +
push edi  +
push 1  +
mov ecx edx +
lea eax [ebp+arg_8] +
push eax  +
call loc_4132E0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call loc_403D60  +
mov esi [ebp+arg_8] +
push ebx  +
lea ecx [esi+10h] +
call sub_4039F0  +
test eax eax +
jns loc_4135F0  +
push [ebp+arg_C]  +
push ecx  +
mov ecx [ebp+var_18] +
push edi  +
push [ebp+var_14]  +
jmp loc_413592  +
push dword ptr [ebp+14h]  +
call sub_4132C0  +
push 0  +
push 0  +
call sub_41EE5A  +
mov edi [ebp+arg_C] +
lea ecx [edi+10h] +
call sub_412F00  +
push edi  +
call sub_41BEC0  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_404140  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_429925  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_413630  +
add esp 14h +
pop ecx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+8] +
xorps xmm0 xmm0 +
mov ecx ebx +
movq qword ptr [ebp-14h] xmm0 +
push esi  +
push edi  +
lea edx [ecx+1] +
push dword ptr [ebp+10h]  +
lea eax [ebp-14h] +
push eax  +
push edi  +
lea eax [ebp-8] +
push ebx  +
push eax  +
call sub_41B337  +
add esp 14h +
test eax eax +
jle loc_4136E7  +
add ebx eax +
inc esi  +
sub edi eax +
jnz loc_4136C7  +
mov ebx [ebp+8] +
inc esi  +
push 2  +
push esi  +
call sub_42A943  +
add esp 8 +
mov [ebp+8] eax +
test eax eax +
jz loc_413741  +
xorps xmm0 xmm0 +
mov edi eax +
movq qword ptr [ebp-1Ch] xmm0 +
test esi esi +
jz loc_413735  +
push dword ptr [ebp+10h]  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-0Ch]  +
push ebx  +
push edi  +
call sub_41B337  +
add esp 14h +
test eax eax +
jle loc_413732  +
add ebx eax +
add edi 2 +
sub esi 1 +
jnz loc_413710  +
mov eax [ebp+8] +
xor ecx ecx +
mov [edi] cx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41CD81  +
mov eax [ebp+arg_4] +
sub esp 44h +
push esi  +
mov esi ecx +
mov [esi+4] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [esi] offset off_4445E4 +
call sub_41B0D8  +
add esp 4 +
movups xmm0 oword ptr [eax] +
lea eax [ebp+var_40] +
push eax  +
movups oword ptr [esi+8] xmm0 +
call sub_41B533  +
add esp 4 +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi+18h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [esi+28h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [esi+38h] xmm0 +
mov eax [eax+28h] +
mov [esi+40h] eax +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_44256F  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_413838  +
cmp dword ptr [esi] 0 +
jnz loc_413838  +
push 44h  +
call sub_41C139  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_413811  +
mov ecx offset unk_450464 +
jmp loc_41381B  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_41381B  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_409610  +
push 0  +
push eax  +
mov ecx edi +
call sub_413750  +
lea ecx [ebp+var_44] +
mov [esi] eax +
call sub_4096F0  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41B48E  +
add esp 8 +
test [ebp+arg_0] ax +
mov eax 0 +
setnz al  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push [ebp+lpCharType]  +
push [ebp+arg_4]  +
push [ebp+lpSrcStr]  +
call sub_41B4B2  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_4138CD  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jnz loc_4138CD  +
add esi 2 +
cmp esi edi +
jnz loc_4138B2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_41390D  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jz loc_41390D  +
add esi 2 +
cmp esi edi +
jnz loc_4138F2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41B4D1  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_413980  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_41B4D1  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_413965  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_41B5FE  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_4139F0  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_41B5FE  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_4139D5  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov al [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [ebp+arg_0] al +
lea eax [ecx+18h] +
push eax  +
lea eax [ebp+var_C] +
movq [ebp+var_C] xmm0 +
push eax  +
push 1  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_41B337  +
movzx ecx word ptr [ebp+var_4] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
mov ax cx +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
xor edx edx +
push edi  +
mov edi [ebp+0Ch] +
sub edi esi +
mov dword ptr [ebp-4] 0 +
cmp esi [ebp+0Ch] +
cmova edi edx +
test edi edi +
jz loc_413AC9  +
add ecx 18h +
push ebx  +
mov ebx [ebp+10h] +
mov [ebp-8] ecx +
mov al [esi] +
xorps xmm0 xmm0 +
mov [ebp+0Ch] al +
lea eax [ebp-10h] +
push ecx  +
push eax  +
push 1  +
lea eax [ebp+0Ch] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_41B337  +
movzx ecx word ptr [ebp+8] +
lea ebx [ebx+2] +
add esp 14h +
test eax eax +
mov eax 0FFFFh +
cmovs ecx eax +
mov eax [ebp-4] +
inc eax  +
mov [ebx-2] cx +
mov ecx [ebp-8] +
inc esi  +
mov [ebp-4] eax +
cmp eax edi +
jnz loc_413A80  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ecx+18h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp+var_14] +
movq qword ptr [ebp+var_14] xmm0 +
push eax  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_41B5A0  +
movzx ecx [ebp+arg_4] +
add esp 10h +
movzx edx [ebp+MultiByteStr] +
cmp eax 1 +
cmovnz edx ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov al dl +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+14h] +
xor edx edx +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi esi +
mov dword ptr [ebp-10h] 0 +
inc edi  +
shr edi 1 +
cmp esi [ebp+0Ch] +
cmova edi edx +
test edi edi +
jz loc_413BB2  +
add ecx 18h +
mov [ebp-14h] ecx +
mov ecx [ebp-4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_4445E4 +
jz loc_413BED  +
push dword ptr [esi+0Ch]  +
call sub_42746C  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_42746C  +
add esp 4 +
mov dword ptr [esi] offset off_4435E8 +
test [ebp+arg_0] 1 +
jz loc_413C0F  +
push 44h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_413C50  +
test [ebp+arg_0] 1 +
jz loc_413C3F  +
push 0C0h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov eax [edi+68h] +
mov dword ptr [edi] offset off_4516F8 +
test eax eax +
jz loc_413C71  +
push eax  +
call esi  +
mov dword ptr [edi+68h] 0 +
mov eax [edi+90h] +
test eax eax +
jz loc_413CAE  +
mov eax [eax] +
test eax eax +
jz loc_413C89  +
cmp eax 0FFFFFFFFh +
jz loc_413C89  +
push eax  +
call esi  +
mov eax [edi+90h] +
test eax eax +
jz loc_413CA4  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_41C538  +
add esp 8 +
mov dword ptr [edi+90h] 0 +
mov eax [edi+0ACh] +
lea esi [edi+98h] +
cmp eax 8 +
jb loc_413CCA  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_413CE0  +
mov esi [esi] +
xor eax eax +
mov ecx edi +
pop edi  +
mov [esi] ax +
pop esi  +
jmp sub_418AB0  +
***
sub esp 8 +
add ecx 4Ch +
mov word ptr [ebp+var_4] 0 +
mov [ebp+var_8] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_413D0E  +
mov ecx [ecx] +
push offset aRbCcsUtf8  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
call sub_42ACA4  +
mov eax [ebp+var_8] +
add esp 0Ch +
test eax eax +
jz loc_413D67  +
push eax  +
push 2  +
lea eax [ebp+var_4] +
push 1  +
push eax  +
call sub_42C3CC  +
push [ebp+var_8]  +
call sub_429C42  +
mov cl byte ptr [ebp+var_4] +
add esp 14h +
mov al byte ptr [ebp+var_4+1] +
cmp cl 0FFh +
jnz loc_413D4F  +
cmp al 0FEh +
jz loc_413D58  +
cmp al 0FFh +
jnz loc_413D61  +
cmp cl 0FEh +
jnz loc_413D61  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+Buffer] +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+8Ch] 1 +
jnz loc_413DA8  +
call sub_413CF0  +
test al al +
jnz loc_413DA8  +
mov eax [ebx] +
test eax eax +
jz loc_413DA1  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx] 0 +
mov ecx edi +
call sub_414D30  +
cmp dword ptr [edi+60h] 8 +
lea esi [edi+4Ch] +
jb loc_413DB5  +
mov eax [esi] +
jmp loc_413DB7  +
mov eax esi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_413E4F  +
cmp dword ptr [esi+14h] 8 +
jb loc_413DDF  +
mov esi [esi] +
push 0  +
push 80h  +
push 1  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_413E0A  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [edi+8Ch] 1 +
lea ecx [ebp+NumberOfBytesWritten] +
push 0  +
push ecx  +
jnz loc_413E38  +
push 2  +
lea ecx [ebp+Buffer] +
mov [ebp+Buffer] 0FEFFh +
push ecx  +
push eax  +
call ds:WriteFile  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push 3  +
lea ecx [ebp+Buffer] +
mov word ptr [ebp+Buffer] 0BBEFh +
push ecx  +
push eax  +
mov byte ptr [ebp+Buffer+2] 0BFh +
call ds:WriteFile  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4425A6  +
mov eax large fs:0 +
push eax  +
sub esp 254h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp-218h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_413F65  +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-220h] eax +
mov [ebp-230h] ax +
cmp [ebp-218h] ax +
jnz loc_413EDE  +
xor ecx ecx +
jmp loc_413EF6  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413EE7  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-230h] +
call loc_402D90  +
xor bl bl +
lea eax [ebp-230h] +
cmp dword ptr [ebp-21Ch] 8 +
push 0  +
cmovnb eax [ebp-230h] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
test eax eax +
jz loc_413F3A  +
cmp eax 0B7h +
jz loc_413F3A  +
cmp eax 50h +
jnz loc_413F3C  +
mov bl 1 +
mov eax [ebp-21Ch] +
cmp eax 8 +
jb loc_413F5A  +
inc eax  +
lea ecx [ebp-230h] +
push eax  +
push dword ptr [ebp-230h]  +
call loc_402F00  +
test bl bl +
jnz loc_413F65  +
xor al al +
jmp loc_414086  +
xor eax eax +
mov dword ptr [ebp-234h] 7 +
mov dword ptr [ebp-238h] 0 +
mov [ebp-248h] ax +
cmp [ebp-218h] ax +
jnz loc_413F8F  +
xor ecx ecx +
jmp loc_413FAF  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413FA0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-248h] +
call loc_402D90  +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-24Ch] 7 +
mov dword ptr [ebp-250h] 0 +
mov [ebp-260h] ax +
cmp [esi] ax +
jnz loc_413FEF  +
xor ecx ecx +
jmp loc_414003  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413FF4  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-260h] +
call loc_402D90  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-248h] +
call loc_419A20  +
mov byte ptr [ebp-4] 0 +
mov bl al +
mov ecx [ebp-24Ch] +
cmp ecx 8 +
jb loc_414049  +
inc ecx  +
push ecx  +
push dword ptr [ebp-260h]  +
lea ecx [ebp-260h] +
call loc_402F00  +
test bl bl +
jz loc_414066  +
lea ecx [edi+4Ch] +
lea eax [ebp-248h] +
cmp ecx eax +
jz loc_414064  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402FE0  +
mov bl 1 +
mov ecx [ebp-234h] +
cmp ecx 8 +
jb loc_414084  +
inc ecx  +
push ecx  +
push dword ptr [ebp-248h]  +
lea ecx [ebp-248h] +
call loc_402F00  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4425D8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+6Ch] 0 +
jnz loc_4140E9  +
xor al al +
jmp loc_414206  +
xor ecx ecx +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [esi+4Ch] +
mov word ptr [ebp+var_28] cx +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
call loc_402FE0  +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jnz loc_414130  +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_414124  +
mov eax [eax] +
push eax  +
mov ecx esi +
call loc_413E60  +
test al al +
jz loc_414146  +
cmp dword ptr [esi+68h] 0 +
lea ecx [esi+68h] +
jnz loc_41414D  +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov eax [eax] +
call eax  +
test al al +
jnz loc_41414D  +
xor bl bl +
jmp loc_4141EF  +
cmp dword ptr [esi+90h] 0 +
jnz loc_41416F  +
push 4  +
call sub_41C139  +
add esp 4 +
mov [ebp+var_3C] eax +
mov dword ptr [eax] 0 +
mov [esi+90h] eax +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_41417A  +
mov eax [eax] +
sub esp 18h +
mov ecx esp +
push eax  +
call loc_402B10  +
mov ecx [esi+90h] +
call sub_41A190  +
lea eax [ebp+var_38] +
push eax  +
call sub_42C77D  +
mov eax [ebp+var_34] +
add esp 4 +
mov ecx [ebp+var_38] +
mov [esi+0B4h] eax +
mov [esi+0BCh] eax +
mov eax [esi+90h] +
mov [esi+0B0h] ecx +
mov [esi+0B8h] ecx +
mov eax [eax] +
test eax eax +
jz loc_4141E9  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_4141E9  +
push ecx  +
mov ecx esi +
call sub_41A040  +
mov eax [esi+90h] +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
mov byte ptr [esi+6Dh] 1 +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_414204  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402F00  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+68h] +
test eax eax +
jz loc_41424D  +
cmp eax 0FFFFFFFFh +
jz loc_41424D  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_41428E  +
mov eax [eax] +
test eax eax +
jz loc_414269  +
cmp eax 0FFFFFFFFh +
jz loc_414269  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_414284  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_41C538  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
mov byte ptr [esi+6Dh] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
mov ebx ecx +
lea ecx [esi+2] +
nop   +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_4142B0  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
sar esi 1 +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
add esi esi +
push esi  +
push [ebp+lpBuffer]  +
mov esi ds:WriteFile +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push 4  +
push offset Buffer  +
push dword ptr [ebx+68h]  +
call esi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
mov ebx ecx +
lea ecx [esi+1] +
nop   +
mov al [esi] +
inc esi  +
test al al +
jnz loc_414320  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
mov esi ds:WriteFile +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push 2  +
push offset asc_451580  +
push dword ptr [ebx+68h]  +
call esi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 24Ch +
mov eax dword_459094 +
xor eax esp +
mov [esp+24Ch+var_4] eax +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
or eax edx +
push edi  +
mov edi ecx +
jnz loc_4143C5  +
lea eax [esp+258h+var_240] +
push eax  +
call sub_42C77D  +
mov edx [esp+25Ch+var_23C] +
add esp 4 +
mov eax [esp+258h+var_240] +
jmp loc_4143E8  +
push 0  +
push 3E8h  +
push edx  +
push esi  +
call sub_41C900  +
imul ecx eax +
mov [esp+258h+var_240] eax +
mov [esp+258h+var_23C] edx +
sub esi ecx +
mov [esp+258h+var_238] si +
mov [esp+258h+var_248] eax +
mov [edi+0B8h] eax +
lea eax [esp+258h+var_248] +
push eax  +
lea eax [esp+25Ch+var_22C] +
mov [esp+25Ch+var_244] edx +
push eax  +
mov [edi+0BCh] edx +
call sub_42ABD8  +
lea eax [esp+260h+var_22C] +
push eax  +
push offset aXX  +
lea eax [esp+268h+var_208] +
push 100h  +
push eax  +
call sub_42C0E5  +
movzx eax [esp+270h+var_238] +
push eax  +
lea eax [esp+274h+var_208] +
push eax  +
push offset aS_3d  +
push 100h  +
push ebx  +
call sub_404150  +
mov ecx [esp+284h+var_4] +
add esp 2Ch +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_442611  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
sub esp 8 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_C0] +
call sub_415560  +
mov [ebp+var_4] 0 +
call ds:GetCurrentThreadId  +
push eax  +
lea ecx [ebp+var_B0] +
call sub_415CE0  +
push [ebp+arg_0]  +
lea ecx [ebp+var_C0] +
call sub_415450  +
lea ecx [ebp+var_58] +
call sub_415470  +
lea eax [ebp+var_58] +
mov [ebp+var_4] 1 +
push eax  +
mov [ebp+var_58] offset off_44FCD0 +
call sub_41AF63  +
mov eax [ebp+arg_0] +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx+68h] +
mov ecx esi +
call sub_415470  +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4426CA  +
mov eax large fs:0 +
push eax  +
sub esp 2E4h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_2D8] eax +
mov ecx [ebp+arg_C] +
mov esi [ebp+arg_24] +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_28] +
mov [ebp+var_2DC] ecx +
mov ecx [ebp+arg_10] +
mov [ebp+var_2E0] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_2E4] ecx +
mov ecx [ebp+arg_18] +
mov [ebp+var_2E8] ecx +
mov ecx [ebp+arg_1C] +
mov [ebp+var_2EC] ecx +
mov ecx [ebp+arg_20] +
mov [ebp+var_2F0] ecx +
lea ecx [ebp+var_210] +
push ecx  +
push [ebp+arg_4]  +
mov ecx eax +
mov [ebp+var_2D4] esi +
push [ebp+arg_0]  +
call sub_414380  +
push offset aEyj  +
push esi  +
call loc_41E503  +
add esp 8 +
test eax eax +
jz loc_414623  +
push offset a_eyj  +
push eax  +
call loc_41E503  +
add esp 8 +
test eax eax +
jz loc_414623  +
mov esi offset aFoundAccessDev +
mov ebx 28h +
mov [ebp+var_2D4] esi +
push ebx  +
lea eax [ebp+var_228] +
push eax  +
call sub_414F00  +
mov esi eax +
mov ebx [ebp+var_2D8] +
lea edx [ebp+var_210] +
add ebx 1Ch +
mov [ebp+var_4] 0 +
push ebx  +
lea ecx [ebp+var_2A0] +
call loc_417F40  +
push offset asc_45160C  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_288] +
call loc_418050  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_270] +
call sub_418110  +
push offset asc_451608  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_258] +
call loc_418050  +
push ebx  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_240] +
call sub_4180C0  +
add esp 14h +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 5 +
call loc_40E830  +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_4146D5  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_22C] 7 +
mov word ptr [ebp+var_240] ax +
mov eax [ebp+var_244] +
mov [ebp+var_230] 0 +
cmp eax 8 +
jb loc_414710  +
inc eax  +
lea ecx [ebp+var_258] +
push eax  +
push [ebp+var_258]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_244] 7 +
mov word ptr [ebp+var_258] ax +
mov eax [ebp+var_25C] +
mov [ebp+var_248] 0 +
cmp eax 8 +
jb loc_41474B  +
inc eax  +
lea ecx [ebp+var_270] +
push eax  +
push [ebp+var_270]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_25C] 7 +
mov word ptr [ebp+var_270] ax +
mov eax [ebp+var_274] +
mov [ebp+var_260] 0 +
cmp eax 8 +
jb loc_414786  +
inc eax  +
lea ecx [ebp+var_288] +
push eax  +
push [ebp+var_288]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_274] 7 +
mov word ptr [ebp+var_288] ax +
mov eax [ebp+var_28C] +
mov [ebp+var_278] 0 +
cmp eax 8 +
jb loc_4147C1  +
inc eax  +
lea ecx [ebp+var_2A0] +
push eax  +
push [ebp+var_2A0]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov word ptr [ebp+var_2A0] ax +
mov eax [ebp+var_214] +
mov [ebp+var_28C] 7 +
mov [ebp+var_290] 0 +
cmp eax 8 +
jb loc_414803  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2DC] +
lea ecx [ebp+var_228] +
mov esi offset String +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 6 +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_41485C  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2E0] +
lea ecx [ebp+var_228] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 7 +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_4148B0  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2E4] +
lea ecx [ebp+var_228] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 8 +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_414904  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2E8] +
lea ecx [ebp+var_228] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 9 +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_414958  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2EC] +
lea ecx [ebp+var_228] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 0Ah +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_4149AC  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
mov eax [ebp+var_2F0] +
lea ecx [ebp+var_228] +
test eax eax +
push ebx  +
cmovnz esi eax +
mov edx esi +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov [ebp+var_4] 0Bh +
call loc_40E830  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_414A00  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_402F00  +
lea eax [ebp+var_2D0] +
push eax  +
call sub_414460  +
push ebx  +
mov edx eax +
mov [ebp+var_4] 0Ch +
lea ecx [ebp+var_2B8] +
call sub_4180C0  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Dh +
call loc_40E830  +
mov eax [ebp+var_2A4] +
cmp eax 8 +
jb loc_414A52  +
inc eax  +
lea ecx [ebp+var_2B8] +
push eax  +
push [ebp+var_2B8]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov word ptr [ebp+var_2B8] ax +
mov eax [ebp+var_2BC] +
mov [ebp+var_2A4] 7 +
mov [ebp+var_2A8] 0 +
cmp eax 8 +
jb loc_414A94  +
inc eax  +
lea ecx [ebp+var_2D0] +
push eax  +
push [ebp+var_2D0]  +
call loc_402F00  +
mov edx [ebp+var_2D4] +
xor eax eax +
mov [ebp+var_2BC] 7 +
mov [ebp+var_2C0] 0 +
mov word ptr [ebp+var_2D0] ax +
cmp [edx] ax +
jnz loc_414AC0  +
xor ecx ecx +
jmp loc_414AD4  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_414AC5  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx edi +
call loc_40CA60  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push 0FFFFFFFFh  +
push offset loc_442716  +
mov eax large fs:0 +
push eax  +
mov eax 2054h +
call sub_41D130  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_1C] +
mov edi [ebp+arg_20] +
mov [ebp+var_2058] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_2054] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_2050] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_204C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_2048] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2044] eax +
mov eax [ebp+arg_0] +
cmp [esi+64h] eax +
jg loc_414D05  +
mov eax [esi+90h] +
test eax eax +
jz loc_414D05  +
mov eax [eax] +
test eax eax +
jz loc_414D05  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_414D05  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
js loc_414BED  +
jg loc_414BC9  +
cmp ecx 0E10h +
jb loc_414BED  +
push ecx  +
mov ecx esi +
call sub_41A040  +
test al al +
jz loc_414BED  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [ebp+var_2014] 7 +
mov [ebp+var_2018] 0 +
mov [ebp+WideCharStr] ax +
mov [ebp+var_4] eax +
test edi edi +
jz loc_414C2E  +
push edi  +
push ecx  +
push ebx  +
push ecx  +
mov edx 0FFFh +
lea ecx [ebp+var_2010] +
call sub_411810  +
add esp 10h +
lea ebx [ebp+var_2010] +
lea eax [ebp+WideCharStr] +
mov ecx esi +
push eax  +
push ebx  +
push [ebp+var_2044]  +
push [ebp+var_2048]  +
push [ebp+var_204C]  +
push [ebp+var_2050]  +
push [ebp+var_2054]  +
push [ebp+var_2058]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call sub_414560  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_414CCC  +
mov [ebp+var_202C] 0Fh +
mov [ebp+var_2030] 0 +
mov byte ptr [ebp+lpBuffer] 0 +
lea edx [ebp+lpBuffer] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+WideCharStr] +
call sub_419790  +
cmp [ebp+var_202C] 10h +
lea eax [ebp+lpBuffer] +
mov ecx esi +
cmovnb eax [ebp+lpBuffer] +
push eax  +
call sub_414310  +
lea ecx [ebp+lpBuffer] +
call sub_40CB90  +
jmp loc_414CE8  +
cmp [ebp+var_2014] 8 +
lea eax [ebp+WideCharStr] +
mov ecx esi +
cmovnb eax dword ptr [ebp+WideCharStr] +
push eax  +
call sub_4142A0  +
mov eax [esi+90h] +
test eax eax +
jz loc_414CFA  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+WideCharStr] +
call sub_402AD0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push 0FFFFFFFFh  +
push offset loc_442760  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
lea esi [edi+4Ch] +
mov [ebp+var_18] 0 +
push esi  +
lea ecx [ebp+lpNewFileName] +
mov word ptr [ebp+lpNewFileName] ax +
call loc_402FE0  +
lea ecx [ebp+lpNewFileName] +
mov [ebp+var_4] 0 +
call loc_419AD0  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 1 +
call sub_419900  +
lea eax [ebp+var_58] +
mov edx offset asc_451610 +
push eax  +
lea ecx [ebp+var_70] +
call loc_417F40  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+lpNewFileName] +
mov byte ptr [ebp+var_4] 2 +
call loc_40E830  +
mov eax [ebp+var_5C] +
cmp eax 8 +
jb loc_414DE9  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
lea edx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
mov ecx esi +
call sub_419D60  +
lea edx [ebp+var_40] +
lea ecx [ebp+lpNewFileName] +
call loc_419B60  +
cmp [ebp+var_14] 8 +
lea eax [ebp+lpNewFileName] +
cmovnb eax [ebp+lpNewFileName] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_414E75  +
cmp dword ptr [esi+10h] 0 +
jz loc_414E75  +
cmp [ebp+var_18] 0 +
jz loc_414E75  +
cmp [ebp+var_14] 8 +
lea eax [ebp+lpNewFileName] +
cmovnb eax [ebp+lpNewFileName] +
cmp dword ptr [esi+14h] 8 +
jb loc_414E4C  +
mov esi [esi] +
push eax  +
push esi  +
call sub_42C602  +
add esp 8 +
test eax eax +
jnz loc_414E75  +
lea ecx [edi+98h] +
lea eax [ebp+lpNewFileName] +
cmp ecx eax +
jz loc_414E71  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402FE0  +
mov bl 1 +
jmp loc_414E77  +
xor bl bl +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_414E8C  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+var_40] ax +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_414EB5  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_402F00  +
mov ecx [ebp+var_14] +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
cmp ecx 8 +
jb loc_414EDE  +
inc ecx  +
push ecx  +
push [ebp+lpNewFileName]  +
lea ecx [ebp+lpNewFileName] +
call loc_402F00  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
add eax 0FFFFFFF6h +
mov [ebp+var_4] 0 +
push esi  +
cmp eax 3Ch +
ja loc_414FCA  +
movzx eax ds:byte_415018[eax] +
jmp ds:off_414FF8[eax*4]  +
mov ecx [ebp+arg_0] +
push offset aFatal  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aError  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aWarn  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aInfo  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset off_4514CC  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aTrace  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aNone  +
call loc_402B10  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov esi [ebp+arg_0] +
xor eax eax +
push 3  +
push offset aAll  +
mov ecx esi +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_402D90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp dword ptr [esi+60h] 8 +
push 0FFFFFFFFh  +
push offset loc_4427E8  +
mov eax large fs:0 +
push eax  +
mov eax 109Ch +
call sub_41D130  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_14] +
mov edi [ebp+arg_18] +
mov [ebp+var_10A0] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_109C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_1098] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1094] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_108C] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_1090] eax +
mov eax [ebp+arg_0] +
cmp [esi+64h] eax +
jg loc_41542C  +
mov eax [esi+90h] +
test eax eax +
jz loc_41542C  +
mov eax [eax] +
test eax eax +
jz loc_41542C  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_41542C  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
js loc_41518D  +
jg loc_415169  +
cmp ecx 0E10h +
jb loc_41518D  +
push ecx  +
mov ecx esi +
call sub_41A040  +
test al al +
jz loc_41518D  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [ebp+var_105C] 7 +
mov [ebp+var_1060] 0 +
mov word ptr [ebp+var_1070] ax +
mov [ebp+var_4] eax +
mov [ebp+var_1044] 7 +
mov [ebp+var_1048] eax +
mov word ptr [ebp+var_1058] ax +
mov [ebp+var_102C] 7 +
mov [ebp+var_1030] eax +
mov word ptr [ebp+lpBuffer] ax +
mov [ebp+var_1074] 7 +
mov [ebp+var_1078] eax +
mov word ptr [ebp+var_1088] ax +
mov byte ptr [ebp+var_4] 3 +
test ebx ebx +
jz loc_41522C  +
push ebx  +
lea ecx [ebp+var_1028] +
call sub_40CC50  +
lea edx [ebp+var_1070] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_1028] +
call loc_419840  +
lea ecx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 3 +
call sub_40CB90  +
jmp loc_41523C  +
push offset String  +
lea ecx [ebp+var_1070] +
call sub_411FE0  +
test edi edi +
jz loc_415272  +
push edi  +
lea ecx [ebp+var_1028] +
call sub_40CC50  +
lea edx [ebp+var_1058] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_1028] +
call loc_419840  +
lea ecx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 3 +
call sub_40CB90  +
jmp loc_415282  +
push offset String  +
lea ecx [ebp+var_1058] +
call sub_411FE0  +
mov eax [ebp+var_1090] +
test eax eax +
jnz loc_415294  +
mov eax [ebp+var_108C] +
jmp loc_4152C3  +
push eax  +
push 0  +
push [ebp+var_108C]  +
lea eax [ebp+var_1010] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_404140  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4298D7  +
add esp 20h +
lea eax [ebp+var_1010] +
push eax  +
lea ecx [ebp+var_1028] +
call sub_40CC50  +
lea edx [ebp+var_1088] +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_1028] +
call loc_419840  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_1014] +
cmp eax 10h +
jb loc_415306  +
inc eax  +
lea ecx [ebp+var_1028] +
push eax  +
push [ebp+var_1028]  +
call loc_40F8E0  +
cmp [ebp+var_1074] 8 +
lea edx [ebp+var_1088] +
lea ecx [ebp+var_1058] +
cmovnb edx [ebp+var_1088] +
lea edi [ebp+lpBuffer] +
cmp [ebp+var_1044] 8 +
lea eax [ebp+var_1070] +
push edi  +
cmovnb ecx [ebp+var_1058] +
cmp [ebp+var_105C] 8 +
push edx  +
cmovnb eax [ebp+var_1070] +
push ecx  +
push eax  +
push [ebp+var_1094]  +
mov ecx esi +
push [ebp+var_1098]  +
push [ebp+var_109C]  +
push [ebp+var_10A0]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call sub_414560  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_4153D2  +
mov [ebp+var_1014] 0Fh +
mov [ebp+var_1018] 0 +
mov byte ptr [ebp+var_1028] 0 +
lea edx [ebp+var_1028] +
mov byte ptr [ebp+var_4] 7 +
mov ecx edi +
call sub_419790  +
cmp [ebp+var_1014] 10h +
lea eax [ebp+var_1028] +
mov ecx esi +
cmovnb eax [ebp+var_1028] +
push eax  +
call sub_414310  +
lea ecx [ebp+var_1028] +
call sub_40CB90  +
jmp loc_4153EE  +
cmp [ebp+var_102C] 8 +
lea eax [ebp+lpBuffer] +
mov ecx esi +
cmovnb eax [ebp+lpBuffer] +
push eax  +
call sub_4142A0  +
mov eax [esi+90h] +
test eax eax +
jz loc_415400  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+var_1088] +
call sub_402AD0  +
lea ecx [ebp+lpBuffer] +
call sub_402AD0  +
lea ecx [ebp+var_1058] +
call sub_402AD0  +
lea ecx [ebp+var_1070] +
call sub_402AD0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_416E40  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-68h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_451714 +
mov eax [edi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov dword ptr [edi-50h] offset off_451678 +
call sub_416DC0  +
mov esi [edi-1Ch] +
mov dword ptr [edi-50h] offset off_4516B8 +
test esi esi +
jz loc_4154F8  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4154ED  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4154ED  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_451660 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edi-6Ch] eax +
mov eax [edi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-58h] offset off_451668 +
mov eax [edi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi-5Ch] eax +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_451650 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edi-6Ch] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44283F  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_451654 +
mov dword ptr [edi+10h] offset unk_45166C +
mov dword ptr [edi+68h] offset off_451648 +
push ecx  +
lea esi [edi+18h] +
mov [ebp+var_4] 0 +
push esi  +
mov [ebp+var_10] 1 +
call sub_416F90  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_451714 +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_417C10  +
mov dword ptr [esi] offset off_451678 +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_C] +
add esi [ebp+arg_4] +
push edi  +
adc ebx [ebp+arg_8] +
mov edi ecx +
mov edx [edi+20h] +
mov eax [edx] +
test eax eax +
jz loc_415649  +
cmp [edi+38h] eax +
jnb loc_415649  +
mov [edi+38h] eax +
mov eax ds:dword_443614 +
cmp esi ds:dword_443610 +
jnz loc_41565E  +
cmp ebx eax +
jz loc_41574B  +
mov ecx [ebp+arg_1C] +
test cl 1 +
jz loc_4156F5  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+10h+var_4] eax +
test eax eax +
jz loc_4156F0  +
test ebx ebx +
jl loc_4156E8  +
jg loc_415681  +
test esi esi +
jb loc_4156E8  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_4156E8  +
jl loc_415698  +
cmp esi eax +
ja loc_4156E8  +
sub ecx [esp+10h+var_4] +
mov eax [edi+2Ch] +
sar ecx 1 +
add ecx esi +
mov [esp+10h+var_4] ecx +
sub [eax] ecx +
mov ecx [edi+1Ch] +
mov eax [esp+10h+var_4] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_1C] 2 +
jz loc_41574B  +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_41574B  +
mov eax [edi+1Ch] +
mov edx [eax] +
mov eax [edi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edi+20h] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_41574B  +
mov ebx ds:dword_443614 +
jmp loc_415745  +
mov eax ds:dword_443614 +
test cl 2 +
jz loc_415743  +
mov ecx [edx] +
mov [esp+10h+var_4] ecx +
test ecx ecx +
jz loc_415743  +
test ebx ebx +
jl loc_4156E8  +
jg loc_41570E  +
test esi esi +
jb loc_4156E8  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_4156E8  +
jl loc_415725  +
cmp esi eax +
ja loc_4156E8  +
sub ecx [esp+10h+var_4] +
mov eax [edi+30h] +
sar ecx 1 +
add ecx esi +
mov [esp+10h+var_4] ecx +
sub [eax] ecx +
mov ecx [edi+20h] +
mov eax [esp+10h+var_4] +
add eax eax +
add [ecx] eax +
jmp loc_41574B  +
mov ebx eax +
mov esi ds:dword_443610 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
pop edi  +
mov [eax] esi +
mov [eax+4] ebx +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_41579A  +
cmp [ebx+38h] eax +
jnb loc_41579A  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_41588E  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_41588E  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_4157D5  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_41580D  +
cmp eax 1 +
jnz loc_4157F5  +
test cl 2 +
jnz loc_4157F9  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_41580D  +
test eax eax +
jz loc_415807  +
mov esi ds:dword_443610 +
mov edi ds:dword_443614 +
jmp loc_41580D  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_41593E  +
jg loc_41581F  +
test esi esi +
jb loc_41593E  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_41593E  +
jl loc_41583E  +
cmp esi eax +
ja loc_41593E  +
sub ecx [ebp+var_4] +
mov eax [ebx+2Ch] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_C] ecx +
sub [eax] ecx +
mov ecx [ebx+1Ch] +
mov eax [ebp+arg_C] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_10] 2 +
jz loc_41594A  +
mov eax [ebx+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_41594A  +
mov eax [ebx+1Ch] +
mov edx [eax] +
mov eax [ebx+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [ebx+20h] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [ebx+30h] +
mov [eax] ecx +
jmp loc_41594A  +
test cl 2 +
jz loc_415932  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_415932  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_4158C3  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_4158F6  +
cmp eax 1 +
jnz loc_4158DE  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_4158F6  +
test eax eax +
jz loc_4158F0  +
mov esi ds:dword_443610 +
mov edi ds:dword_443614 +
jmp loc_4158F6  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_41593E  +
jg loc_415900  +
test esi esi +
jb loc_41593E  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_41593E  +
jl loc_415917  +
cmp esi eax +
ja loc_41593E  +
sub ecx [ebp+arg_10] +
mov eax [ebx+30h] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_10] ecx +
sub [eax] ecx +
mov ecx [ebx+20h] +
mov eax [ebp+arg_10] +
add eax eax +
add [ecx] eax +
jmp loc_41594A  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_41594A  +
mov esi ds:dword_443610 +
mov edi ds:dword_443614 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jnz loc_415995  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
push ebx  +
mov ebx [edx+2Ch] +
mov ecx [ebx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_4159A9  +
mov ax [esi] +
pop ebx  +
pop edi  +
pop esi  +
retn   +
test byte ptr [edx+3Ch] 4 +
jnz loc_4159DE  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_4159DE  +
cmp eax esi +
ja loc_4159C1  +
cmp [edx+38h] esi +
jbe loc_4159DE  +
cmp [edx+38h] eax +
jnb loc_4159C9  +
mov [edx+38h] eax +
mov eax [edx+38h] +
sub eax [edi] +
sar eax 1 +
mov [ebx] eax +
mov eax [edx+1Ch] +
pop ebx  +
pop edi  +
pop esi  +
mov eax [eax] +
mov ax [eax] +
retn   +
pop ebx  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
mov eax [ecx+1Ch] +
push esi  +
push edi  +
mov edi 0FFFFh +
mov esi [eax] +
test esi esi +
jz loc_415A48  +
mov eax [ecx+0Ch] +
cmp esi [eax] +
jbe loc_415A48  +
mov dx [ebp+arg_0] +
cmp di dx +
jz loc_415A1F  +
cmp dx [esi-2] +
jz loc_415A1F  +
test byte ptr [ecx+3Ch] 2 +
jnz loc_415A48  +
mov eax [ecx+2Ch] +
inc dword ptr [eax]  +
mov eax [ecx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di dx +
jz loc_415A40  +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
mov [eax] dx +
movzx eax dx +
pop ebp  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_415A7C  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov bx [ebp+8] +
mov ecx 0FFFFh +
cmp cx bx +
jnz loc_415A95  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_415ABD  +
mov edi [esi+20h] +
mov ecx [edi] +
test ecx ecx +
jz loc_415ABD  +
mov edx [esi+38h] +
cmp ecx edx +
jnb loc_415ABD  +
mov eax [esi+30h] +
mov eax [eax] +
mov [edi] edx +
lea ecx [ecx+eax*2] +
mov eax [esi+30h] +
sub ecx edx +
sar ecx 1 +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_415AF4  +
mov edx [esi+30h] +
mov edi [edx] +
lea eax [ecx+edi*2] +
cmp ecx eax +
jnb loc_415AF0  +
lea ecx [edi-1] +
mov ax bx +
mov [edx] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
mov [esi] bx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test ecx ecx +
jnz loc_415AF8  +
xor edi edi +
jmp loc_415B08  +
mov eax [esi+30h] +
mov edi [eax] +
mov eax [esi+0Ch] +
add edi edi +
sub edi [eax] +
add edi ecx +
sar edi 1 +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_415B18  +
mov ecx 20h +
jmp loc_415B20  +
test ecx ecx +
jz loc_415B33  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_415B2F  +
shr ecx 1 +
jnz loc_415B20  +
test ecx ecx +
jnz loc_415B41  +
pop edi  +
pop ebx  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
lea ecx [esi+40h] +
mov [ebp-8] eax +
push eax  +
call loc_4037F0  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov edx [ecx] +
mov [ebp-4] edx +
test edi edi +
jz loc_415B73  +
lea ecx [edi+edi] +
push ecx  +
push edx  +
push ebx  +
call loc_41EED0  +
mov edx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_415BBC  +
mov eax [esi+10h] +
mov ecx [ebp-8] +
mov [esi+38h] ebx +
add ecx ecx +
sar ecx 1 +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_415BAC  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
sar ebx 1 +
mov [eax] ebx +
jmp loc_415C3E  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_415C3E  +
mov eax [esi+38h] +
mov ecx [esi+10h] +
sub eax edx +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [esi+38h] eax +
mov eax [esi+20h] +
mov eax [eax] +
sub eax edx +
sar eax 1 +
lea edx [ebx+eax*2] +
mov eax [ecx] +
sub eax [ebp-4] +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [ecx] eax +
mov eax [esi+20h] +
mov ecx [ebp-8] +
add ecx ecx +
sub ecx edx +
mov [eax] edx +
add ecx ebx +
mov eax [esi+30h] +
sar ecx 1 +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_415C16  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
sar ebx 1 +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_415C3E  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
sub eax [ebp-4] +
sar eax 1 +
lea ecx [ebx+eax*2] +
mov eax [esi+0Ch] +
sub edx ecx +
add edx 2 +
sar edx 1 +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_415C50  +
push edi  +
push dword ptr [ebp-4]  +
lea ecx [esi+40h] +
call loc_402F00  +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+8] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_451660 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_451668 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_451650 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44288A  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_415D2A  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_415D4E  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_415D4E  +
cmp ecx esi +
jz loc_415D4E  +
call sub_417B50  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_1C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_415E11  +
lea eax [ebp+var_28] +
push eax  +
call sub_40A040  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_418180  +
add esp 4 +
mov ebx eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_24] +
test ecx ecx +
jz loc_415DA2  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_415DA2  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 4 +
mov eax [esi] +
mov edx [ebx] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+esi+40h] +
add ecx esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_30] 0 +
lea eax [ebp+var_30] +
push dword ptr [ecx+38h]  +
mov ecx ebx +
push [ebp+var_30]  +
push eax  +
call dword ptr [edx+20h]  +
cmp byte ptr [ebp+var_30] 0 +
mov eax 4 +
cmovnz edi eax +
jmp loc_415E0A  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_415DF4  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_409F70  +
mov eax offset loc_415E04 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_415E32  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_415E2A  +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov [ebp+var_4] 6 +
call sub_41AF2C  +
test al al +
jnz loc_415E49  +
mov ecx esi +
call sub_411290  +
mov byte ptr [ebp+var_4] 7 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_415E5F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_451650 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_415FA7  +
mov edi [ebp+arg_4] +
jg loc_415ED3  +
test edi edi +
jz loc_415FA7  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_40F460  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_415F4E  +
jg loc_415EFC  +
test esi esi +
jz loc_415F4E  +
cmp ebx eax +
jg loc_415F0C  +
jl loc_415F06  +
cmp edi esi +
jnb loc_415F0C  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_415F28  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_41EED0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+30h] +
sub [eax] esi +
mov eax [edx+20h] +
add [eax] ecx +
jmp loc_415F82  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax word ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_415F94  +
mov edx [esp+24h+var_10] +
add esi 2 +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_415EE3  +
jl loc_415F94  +
test edi edi +
jnz loc_415EE3  +
mov ecx [esp+24h+var_18] +
mov edx ecx +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_4160C9  +
mov edi [ebp+arg_4] +
jg loc_415FF3  +
test edi edi +
jz loc_4160C9  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_40F480  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_41606E  +
jg loc_41601C  +
test esi esi +
jz loc_41606E  +
cmp ebx eax +
jg loc_41602C  +
jl loc_416026  +
cmp edi esi +
jnb loc_41602C  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_416048  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_41EED0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+2Ch] +
sub [eax] esi +
mov eax [edx+1Ch] +
add [eax] ecx +
jmp loc_4160A4  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4160B6  +
mov edx [ebp+arg_0] +
mov [edx] ax +
add edx 2 +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] edx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov edx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_416003  +
jl loc_4160B6  +
test edi edi +
jnz loc_416003  +
mov ecx [esp+20h+var_14] +
mov edx ecx +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4160F6  +
mov eax ecx +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
***
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ecx+34h] +
mov dword ptr [ecx] offset off_4516B8 +
test esi esi +
jz loc_41618A  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41617F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41617F  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_41C538  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_451678 +
call sub_416DC0  +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_4516B8 +
test edi edi +
jz loc_416278  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_41626D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41626D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_41C538  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_416289  +
push 44h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_416460  +
test [ebp+arg_0] 1 +
jz loc_4162BF  +
push 68h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-8] +
mov eax [esi] +
lea edx [esi+8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_451668 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_41633A  +
push 50h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441B86  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-18h] +
mov eax [esi] +
lea edx [esi+18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_451650 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4163BA  +
push 60h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_441CD6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_4516B8 +
test edi edi +
jz loc_41642D  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_416422  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_416422  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_41C538  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_41643E  +
push 38h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_441F66  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea edx [ecx+20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_451660 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edx-24h] eax +
mov eax [edx-10h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-10h] offset off_451668 +
mov eax [edx-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-14h] eax +
mov eax [edx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_451650 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-24h] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_44FCD0 +
call sub_41AF63  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_442268  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_4165A1  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_4165C5  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_4165C5  +
cmp ecx esi +
jz loc_4165C5  +
call sub_417B50  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_459094 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_413670  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4172E0  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4428B8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_48] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
cmp eax 2000h +
mov [ebp+var_34] esi +
setz al  +
test ecx ecx +
jg loc_4166E8  +
jl loc_4166CF  +
test esi esi +
jnz loc_4166E8  +
test al al +
jnz loc_4166E8  +
mov [ebp+var_34] 6 +
mov ecx 6 +
mov [ebp+var_40] 0 +
jmp loc_416747  +
mov [ebp+var_40] ecx +
mov ecx esi +
test al al +
jz loc_416747  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_451830 +
comisd xmm0 ds:qword_451820 +
jbe loc_416747  +
lea eax [ebp+var_40] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_42C104  +
mov eax [ebp+var_40] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_416761  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_41676E  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_40ECE0  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_38] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_34]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 4Ch  +
push eax  +
push [ebp+var_3C]  +
call sub_417A90  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_413670  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_48] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_38]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_3C]  +
call sub_4176D0  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_4167E8  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_40F8E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4428B8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_48] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
cmp eax 2000h +
mov [ebp+var_34] esi +
setz al  +
test ecx ecx +
jg loc_416898  +
jl loc_41687F  +
test esi esi +
jnz loc_416898  +
test al al +
jnz loc_416898  +
mov [ebp+var_34] 6 +
mov ecx 6 +
mov [ebp+var_40] 0 +
jmp loc_4168F7  +
mov [ebp+var_40] ecx +
mov ecx esi +
test al al +
jz loc_4168F7  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_451830 +
comisd xmm0 ds:qword_451820 +
jbe loc_4168F7  +
lea eax [ebp+var_40] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_42C104  +
mov eax [ebp+var_40] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_416911  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_41691E  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_40ECE0  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_38] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_34]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 0  +
push eax  +
push [ebp+var_3C]  +
call sub_417A90  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_413670  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_48] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_38]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_3C]  +
call sub_4176D0  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_416998  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_40F8E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_459094 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_417640  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_413670  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4172E0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_459094 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_417640  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_413670  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4172E0  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_459094 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_417640  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_413670  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4172E0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_459094 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_417640  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_413670  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4172E0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_442902  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_44] ecx +
mov esi [ebp+arg_C] +
movzx edi [ebp+arg_10] +
mov ebx [ebp+arg_0] +
mov [ebp+var_50] edi +
test dword ptr [esi+14h] 4000h +
jnz loc_416C1C  +
movzx eax [ebp+arg_14] +
mov edx [ecx] +
push eax  +
push edi  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [edx+24h]  +
jmp loc_416D99  +
lea eax [ebp+var_4C] +
mov ecx esi +
push eax  +
call sub_40A040  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4182B0  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_48] +
test ecx ecx +
jz loc_416C58  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_416C58  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
cmp [ebp+arg_14] 0 +
lea eax [ebp+var_40] +
mov [ebp+var_4] 2 +
mov ecx edi +
push eax  +
jz loc_416C88  +
call sub_4171B0  +
mov edi eax +
jmp loc_416C8F  +
call sub_4171D0  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_416CC4  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_416CAB  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_14] 7 +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] eax +
mov word ptr [ebp+var_28] ax +
call sub_403860  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_416CDD  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_402F00  +
cmp dword ptr [esi+24h] 0 +
mov ecx [ebp+var_18] +
jl loc_416CF9  +
jg loc_416CEE  +
cmp dword ptr [esi+20h] 0 +
jbe loc_416CF9  +
mov edi [esi+20h] +
cmp edi ecx +
jbe loc_416CF9  +
sub edi ecx +
jmp loc_416CFB  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_416D33  +
push edi  +
push [ebp+var_50]  +
lea eax [ebp+var_4C] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [ebp+var_44]  +
call sub_4171F0  +
mov ecx [ebp+var_18] +
add esp 18h +
xor edi edi +
mov edx [eax] +
mov [ebp+arg_4] edx +
mov eax [eax+4] +
mov [ebp+arg_8] eax +
jmp loc_416D39  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
cmp [ebp+var_14] 8 +
mov [ebp+var_48] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
push [ebp+var_48]  +
lea eax [ebp+var_4C] +
push edx  +
push eax  +
push [ebp+var_44]  +
call sub_417260  +
push edi  +
push [ebp+var_50]  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push ebx  +
push [ebp+var_44]  +
mov [ebp+arg_8] eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call sub_4171F0  +
mov eax [ebp+var_14] +
add esp 30h +
cmp eax 8 +
jb loc_416D99  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402F00  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
test byte ptr [esi+3Ch] 1 +
jz loc_416DFC  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_416DDC  +
mov eax [esi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
jmp loc_416DE9  +
mov eax [esi+2Ch] +
mov ecx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esi+40h] +
call loc_402F00  +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_459094 +
xor eax esp +
mov [esp+24h+var_4] eax +
mov edx ecx +
mov [esp+24h+var_20] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_416ED9  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_416ED9  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call loc_402D90  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
lea eax [esp+30h+var_24] +
push eax  +
call sub_403860  +
mov ecx [esp+30h+var_10] +
cmp ecx 8 +
jb loc_416F6D  +
inc ecx  +
push ecx  +
jmp loc_416F60  +
test cl 4 +
jnz loc_416F23  +
mov eax [edx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_416F23  +
mov eax [edx+2Ch] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edx+0Ch] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call loc_402D90  +
mov dword ptr [esi+10h] 0 +
jmp loc_416F3D  +
xor eax eax +
mov [esp+28h+var_8] 7 +
mov [esp+28h+var_C] 0 +
mov word ptr [esp+28h+var_1C] ax +
mov [esi+10h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ecx esi +
lea eax [esp+28h+var_1C] +
push eax  +
call sub_403860  +
mov eax [esp+28h+var_8] +
cmp eax 8 +
jb loc_416F6D  +
inc eax  +
push eax  +
push [esp+2Ch+var_1C]  +
lea ecx [esp+30h+var_1C] +
call loc_402F00  +
mov ecx [esp+30h+var_C] +
mov eax esi +
pop esi  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_44293B  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov eax [esi] +
push ecx  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_451650 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_417E80  +
lea edx [esi+10h] +
mov [ebp+arg_0] edx +
mov eax [edx] +
mov eax [eax+4] +
mov dword ptr [edx+eax] offset off_451668 +
mov eax [edx] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-4] eax +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_451660 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_41708E  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_417094  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_4170FE  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_417104  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_402D90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+8] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41716C  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_417172  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_40EAB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+1Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+18h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
test esi esi +
jz loc_417250  +
push ebx  +
push edi  +
mov edi [ebp+arg_10] +
mov ebx 0FFFFh +
test edx edx +
jz loc_417245  +
mov eax [edx+20h] +
cmp dword ptr [eax] 0 +
jz loc_417232  +
mov ecx [edx+30h] +
mov eax [ecx] +
test eax eax +
jle loc_417232  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov [edx] di +
movzx eax di +
jmp loc_41723D  +
mov eax [edx] +
mov ecx edx +
push edi  +
call dword ptr [eax+0Ch]  +
movzx eax ax +
mov edx [ebp+arg_C] +
cmp bx ax +
jnz loc_417249  +
mov byte ptr [ebp+arg_8] 1 +
sub esi 1 +
jnz loc_417208  +
pop edi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop esi  +
mov [eax] ecx +
mov [eax+4] edx +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
test esi esi +
jz loc_4172C5  +
push ebx  +
push edi  +
mov edi [ebp+arg_10] +
test edx edx +
jz loc_4172B7  +
mov eax [edx+20h] +
movzx ebx word ptr [edi] +
cmp dword ptr [eax] 0 +
jz loc_41729F  +
mov ecx [edx+30h] +
mov eax [ecx] +
test eax eax +
jle loc_41729F  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov eax ebx +
mov [edx] bx +
jmp loc_4172AA  +
mov eax [edx] +
mov ecx edx +
push ebx  +
call dword ptr [eax+0Ch]  +
movzx eax ax +
mov edx [ebp+arg_C] +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4172BB  +
mov byte ptr [ebp+arg_8] 1 +
add edi 2 +
sub esi 1 +
jnz loc_417273  +
pop edi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop esi  +
mov [eax] ecx +
mov [eax+4] edx +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44298C  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov ecx [ebp+arg_18] +
mov [ebp+var_58] eax +
mov [ebp+var_54] esi +
mov [ebp+var_44] ecx +
test edi edi +
jz loc_417335  +
mov al [ecx] +
cmp al 2Bh +
jz loc_41732E  +
cmp al 2Dh +
jnz loc_417335  +
mov ebx 1 +
jmp loc_417337  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 0E00h +
cmp eax 800h +
jnz loc_417363  +
lea eax [ebx+2] +
cmp eax edi +
ja loc_417363  +
cmp byte ptr [ecx+ebx] 30h +
jnz loc_417363  +
mov cl [ecx+ebx+1] +
cmp cl 78h +
jz loc_417361  +
cmp cl 58h +
jnz loc_417363  +
mov ebx eax +
lea eax [ebp+var_50] +
mov ecx esi +
push eax  +
call sub_40A040  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4183E0  +
add esp 4 +
mov [ebp+var_48] eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_4173A0  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4173A0  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
push eax  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_40E790  +
mov ecx [ebp+var_44] +
lea eax [ebp+var_28] +
mov [ebp+var_4] 2 +
cmp [ebp+var_14] 8 +
mov edx [ebp+var_48] +
cmovnb eax [ebp+var_28] +
push eax  +
lea eax [edi+ecx] +
mov edx [edx] +
push eax  +
push ecx  +
mov ecx [ebp+var_48] +
call dword ptr [edx+2Ch]  +
lea eax [ebp+var_50] +
mov ecx esi +
push eax  +
call sub_40A040  +
push eax  +
mov byte ptr [ebp+var_4] 3 +
call sub_4182B0  +
mov esi eax +
add esp 4 +
mov [ebp+var_44] esi +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_417424  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_417424  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov ecx esi +
call sub_417D40  +
mov byte ptr [ebp+var_4] 5 +
lea esi [ebp+var_40] +
cmp [ebp+var_2C] 10h +
cmovnb esi [ebp+var_40] +
mov al [esi] +
cmp al 7Fh +
jz loc_417490  +
test al al +
jle loc_417490  +
mov ecx [ebp+var_44] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
movzx edx ax +
mov al [esi] +
mov [ebp+var_44] edx +
cmp al 7Fh +
jz loc_417490  +
test al al +
jle loc_417490  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_417490  +
push edx  +
sub edi ecx +
lea ecx [ebp+var_28] +
push 1  +
push edi  +
call loc_417D60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov edx [ebp+var_44] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_417460  +
mov esi [ebp+var_54] +
mov eax [ebp+var_18] +
mov [ebp+var_44] eax +
cmp dword ptr [esi+24h] 0 +
jl loc_4174B2  +
jg loc_4174A7  +
cmp dword ptr [esi+20h] 0 +
jbe loc_4174B2  +
mov edi [esi+20h] +
cmp edi eax +
jbe loc_4174B2  +
sub edi eax +
jmp loc_4174B4  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41755C  +
cmp eax 100h +
jz loc_417514  +
push edi  +
push [ebp+arg_14]  +
lea eax [ebp+var_50] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4171F0  +
mov edx eax +
lea ecx [ebp+var_28] +
xor edi edi +
cmp [ebp+var_14] 8 +
push ebx  +
cmovnb ecx [ebp+var_28] +
mov eax [edx] +
mov [ebp+arg_8] eax +
mov eax [edx+4] +
push ecx  +
mov [ebp+arg_C] eax +
lea eax [ebp+var_50] +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
add esp 30h +
jmp loc_41757E  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_50] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
mov ecx eax +
push edi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_50] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4171F0  +
add esp 30h +
xor edi edi +
jmp loc_41757E  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_50] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
add esp 18h +
mov edx [eax] +
cmp [ebp+var_14] 8 +
mov ecx [ebp+var_44] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+var_48] eax +
mov [ebp+arg_C] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [ebp+var_48]  +
lea eax [ebp+var_50] +
push edx  +
push eax  +
push ebx  +
call sub_417260  +
push edi  +
push [ebp+arg_14]  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov esi [ebp+var_58] +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
call sub_4171F0  +
mov eax [ebp+var_2C] +
add esp 30h +
cmp eax 10h +
jb loc_4175F3  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_40F8E0  +
mov ecx [ebp+var_14] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
cmp ecx 8 +
jb loc_41761A  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test cl 20h +
jz loc_41765A  +
mov byte ptr [eax] 2Bh +
inc eax  +
test cl 8 +
jz loc_417663  +
mov byte ptr [eax] 23h +
inc eax  +
mov edi [ebp+arg_8] +
mov dl [edi] +
cmp dl 4Ch +
jz loc_417672  +
mov [eax] dl +
inc eax  +
jmp loc_41767E  +
mov word ptr [eax] 3649h +
mov byte ptr [eax+2] 34h +
add eax 3 +
mov edx ecx +
and edx 0E00h +
cmp edx 400h +
jnz loc_41769C  +
mov cl 6Fh +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
cmp edx 800h +
jz loc_4176B3  +
mov cl [edi+1] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
shl cl 3 +
not cl  +
and cl 20h +
or cl 58h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4429EC  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov edi [ebp+arg_18] +
mov [ebp+var_64] eax +
mov [ebp+var_60] esi +
mov [ebp+var_58] edi +
mov [ebp+var_44] ecx +
test ecx ecx +
jz loc_417728  +
mov al [edi] +
cmp al 2Bh +
jz loc_417721  +
cmp al 2Dh +
jnz loc_417728  +
mov ebx 1 +
jmp loc_41772A  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 3000h +
cmp eax 3000h +
jz loc_417740  +
mov edx offset aEe +
jmp loc_417762  +
lea eax [ebx+2] +
mov edx offset aPp +
cmp eax ecx +
ja loc_417762  +
cmp byte ptr [edi+ebx] 30h +
jnz loc_417762  +
mov cl [edi+ebx+1] +
cmp cl 78h +
jz loc_417760  +
cmp cl 58h +
jnz loc_417762  +
mov ebx eax +
push edx  +
push edi  +
call sub_42AD00  +
mov [ebp+var_5C] eax +
mov eax 2Eh +
mov word ptr [ebp+var_48] ax +
call sub_42AD46  +
mov eax [eax] +
mov al [eax] +
mov byte ptr [ebp+var_48] al +
lea eax [ebp+var_48] +
push eax  +
push edi  +
call sub_42AD00  +
add esp 10h +
mov edi eax +
lea eax [ebp+var_54] +
mov ecx esi +
push eax  +
call sub_40A040  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4183E0  +
add esp 4 +
mov [ebp+var_4C] eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_4177CD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_4177CD  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
push eax  +
push [ebp+var_44]  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_40E790  +
mov edx [ebp+var_4C] +
lea eax [ebp+var_28] +
mov ecx [ebp+var_58] +
mov [ebp+var_4] 2 +
cmp [ebp+var_14] 8 +
mov edx [edx] +
cmovnb eax [ebp+var_28] +
push eax  +
mov eax [ebp+var_44] +
add eax ecx +
push eax  +
push ecx  +
mov ecx [ebp+var_4C] +
call dword ptr [edx+2Ch]  +
lea eax [ebp+var_54] +
mov ecx esi +
push eax  +
call sub_40A040  +
push eax  +
mov byte ptr [ebp+var_4] 3 +
call sub_4182B0  +
mov esi eax +
add esp 4 +
mov [ebp+var_58] esi +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_417855  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_417855  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov ecx esi +
call sub_417D40  +
mov byte ptr [ebp+var_4] 5 +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+10h]  +
mov esi [ebp+var_44] +
movzx edx ax +
mov [ebp+var_4C] edx +
cmp edi esi +
jz loc_41789B  +
mov ecx [ebp+var_58] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [ebp+var_14] 8 +
mov edx [ebp+var_4C] +
movzx ecx ax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
cmp edi esi +
mov [eax+edi*2] cx +
cmovz edi [ebp+var_5C] +
lea esi [ebp+var_40] +
cmp [ebp+var_2C] 10h +
cmovnb esi [ebp+var_40] +
mov al [esi] +
cmp al 7Fh +
jz loc_4178E0  +
test al al +
jle loc_4178E0  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_4178E0  +
push edx  +
sub edi ecx +
lea ecx [ebp+var_28] +
push 1  +
push edi  +
call loc_417D60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov edx [ebp+var_4C] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_4178B0  +
mov edi [ebp+var_60] +
mov eax [ebp+var_18] +
mov [ebp+var_5C] eax +
cmp dword ptr [edi+24h] 0 +
jl loc_417902  +
jg loc_4178F7  +
cmp dword ptr [edi+20h] 0 +
jbe loc_417902  +
mov esi [edi+20h] +
cmp esi eax +
jbe loc_417902  +
sub esi eax +
jmp loc_417904  +
xor esi esi +
mov eax [edi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_4179AC  +
cmp eax 100h +
jz loc_417964  +
push esi  +
push [ebp+arg_14]  +
lea eax [ebp+var_54] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4171F0  +
mov ecx eax +
xor esi esi +
cmp [ebp+var_14] 8 +
push ebx  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
push dword ptr [ecx+4]  +
lea eax [ebp+var_54] +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
add esp 30h +
jmp loc_4179CE  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_54] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
mov ecx eax +
push esi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_54] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4171F0  +
add esp 30h +
xor esi esi +
jmp loc_4179CE  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_54] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_417260  +
add esp 18h +
mov edx [eax] +
cmp [ebp+var_14] 8 +
mov ecx [ebp+var_5C] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+var_44] eax +
mov [ebp+arg_C] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [ebp+var_44]  +
lea eax [ebp+var_54] +
push edx  +
push eax  +
push ebx  +
call sub_417260  +
push esi  +
push [ebp+arg_14]  +
mov esi [ebp+var_64] +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
call sub_4171F0  +
mov eax [ebp+var_2C] +
add esp 30h +
cmp eax 10h +
jb loc_417A43  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_40F8E0  +
mov ecx [ebp+var_14] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
cmp ecx 8 +
jb loc_417A6A  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_417AA9  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_417AB2  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_417AC4  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_417B09  +
cmp ecx 2000h +
jz loc_417B11  +
cmp ecx 3000h +
jnz loc_417AEE  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_417B1E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_417B33  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442A34  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+38h] 0 +
jz loc_417BFD  +
push esi  +
lea ecx [ebp+var_14] +
call sub_416560  +
mov [ebp+var_4] 0 +
cmp [ebp+var_10] 0 +
jz loc_417BCC  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
cmp eax 0FFFFFFFFh +
jnz loc_417BCC  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_417BC4  +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov [ebp+var_4] 1 +
call sub_41AF2C  +
test al al +
jnz loc_417BE4  +
mov ecx [ebp+var_14] +
call sub_411290  +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_14] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_417BFD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_441766  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 8  +
mov dword ptr [edi] offset off_4516B8 +
call sub_41C139  +
mov esi eax +
push 1  +
mov [ebp+var_4] 0 +
call sub_41AD0A  +
mov [esi+4] eax +
lea ecx [edi+8] +
lea eax [edi+4] +
mov [edi+34h] esi +
mov [edi+0Ch] eax +
add esp 8 +
lea eax [edi+14h] +
mov [edi+10h] ecx +
mov [edi+1Ch] eax +
lea eax [edi+18h] +
mov [edi+20h] eax +
lea eax [edi+24h] +
mov [edi+2Ch] eax +
lea eax [edi+28h] +
mov [edi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [edi+20h] +
mov dword ptr [eax] 0 +
mov eax [edi+30h] +
mov dword ptr [eax] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_444654 +
call sub_42746C  +
push dword ptr [esi+10h]  +
call sub_42746C  +
push dword ptr [esi+14h]  +
call sub_42746C  +
add esp 0Ch +
mov dword ptr [esi] offset off_4435E8 +
test [ebp+arg_0] 1 +
jz loc_417D0E  +
push 18h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [esi+8]  +
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+14h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx edx +
jb loc_417E58  +
mov ebx [ebp+0Ch] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax ebx +
jbe loc_417E62  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_417E4F  +
cmp edi 7FFFFFFEh +
ja loc_417E6C  +
cmp [esi+14h] edi +
jnb loc_417DC5  +
push ecx  +
push edi  +
mov ecx esi +
call sub_403300  +
mov edx [ebp+8] +
test edi edi +
jz loc_417E4F  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_417DF0  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_417DF3  +
test edi edi +
jnz loc_417DB6  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_417DE2  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov [ebp+0Ch] esi +
cmp eax 8 +
jb loc_417DFC  +
mov ecx [esi] +
jmp loc_417DFE  +
mov ecx esi +
mov eax [esi+10h] +
sub eax edx +
jz loc_417E21  +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
lea eax [eax+edx*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call loc_41D160  +
mov edx [ebp+8] +
add esp 0Ch +
push dword ptr [ebp+10h]  +
mov ecx esi +
push ebx  +
push edx  +
call sub_40F940  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_417E47  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_41AA78  +
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push 0FFFFFFFFh  +
push offset loc_4420EE  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_40A090  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+var_14] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_40A040  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4183E0  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_417EF7  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_417EF7  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx edi +
mov eax [edi] +
push 20h  +
call dword ptr [eax+30h]  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] ax +
jnz loc_417F21  +
mov eax [esi+0Ch] +
mov ecx esi +
or eax 4 +
push 0  +
push eax  +
call loc_409F70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_442A69  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_417F9C  +
mov eax [esi] +
jmp loc_417F9E  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov [ebp-4] ecx +
mov dword ptr [ebp-10h] 1 +
cmp [edi] cx +
jz loc_417FC6  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_417FB7  +
sub ecx edx +
sar ecx 1 +
mov eax [ebp+8] +
mov ebx [esi+10h] +
mov eax [eax+10h] +
add eax ecx +
cmp ebx eax +
ja loc_417FFD  +
cmp [esi+14h] eax +
jz loc_417FFD  +
push 1  +
push eax  +
mov ecx esi +
call loc_402F60  +
test al al +
jz loc_417FFD  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_417FF5  +
mov eax [esi] +
jmp loc_417FF7  +
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
cmp word ptr [edi] 0 +
jnz loc_418007  +
xor ecx ecx +
jmp loc_41801F  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_418010  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx esi +
call loc_40CA60  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp+8]  +
mov ecx esi +
call loc_40E830  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ebx edx +
mov [ebp-4] esi +
mov dword ptr [ebp-8] 0 +
cmp word ptr [edi] 0 +
jnz loc_418074  +
xor eax eax +
jmp loc_41808F  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_418080  +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
mov ecx ebx +
call loc_40CA60  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_403860  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx edx +
mov [ebp+var_4] esi +
call loc_40E830  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_403860  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [edx+14h] +
sub eax [edx+10h] +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] esi +
cmp [ecx+10h] eax +
jbe loc_418148  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax [edx+10h] +
jb loc_418148  +
sub esp 8 +
push edx  +
push ecx  +
call loc_418680  +
jmp loc_418154  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_40E830  +
mov dword ptr [esi+14h] 7 +
xor ecx ecx +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_403860  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442208  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov edi dword_45C5D0 +
mov ebx dword_45C428 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_4181FB  +
push edi  +
lea ecx [ebp+var_14] +
call sub_41AAC5  +
cmp dword_45C5D0 edi +
jnz loc_4181ED  +
mov eax dword_45B5C4 +
inc eax  +
mov dword_45B5C4 eax +
mov dword_45C5D0 eax +
lea ecx [ebp+var_14] +
call sub_41AB1D  +
mov edi dword_45C5D0 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_418212  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_418287  +
jmp loc_418214  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41822A  +
call sub_41AD04  +
cmp edi [eax+0Ch] +
jnb loc_41822E  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_418287  +
test ebx ebx +
jz loc_418236  +
mov esi ebx +
jmp loc_418287  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_4185D0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_41826E  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_4441E0 +
push offset unk_456CBC  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call sub_41EE5A  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_45C428 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41ACD6  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_41AB1D  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442198  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_1C] +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov edi dword_45C5CC +
mov ebx dword_45C420 +
mov [ebp+var_14] ebx +
test edi edi +
jnz loc_41832B  +
push edi  +
lea ecx [ebp+var_18] +
call sub_41AAC5  +
cmp dword_45C5CC edi +
jnz loc_41831D  +
mov eax dword_45B5C4 +
inc eax  +
mov dword_45B5C4 eax +
mov dword_45C5CC eax +
lea ecx [ebp+var_18] +
call sub_41AB1D  +
mov edi dword_45C5CC +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_418342  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4183B7  +
jmp loc_418344  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41835A  +
call sub_41AD04  +
cmp edi [eax+0Ch] +
jnb loc_41835E  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4183B7  +
test ebx ebx +
jz loc_418366  +
mov esi ebx +
jmp loc_4183B7  +
push [ebp+arg_0]  +
lea eax [ebp+var_14] +
push eax  +
call sub_418510  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_41839E  +
xorps xmm0 xmm0 +
mov [ebp+var_28] offset off_4441E0 +
push offset unk_456CBC  +
lea eax [ebp+var_28] +
movq [ebp+var_24] xmm0 +
push eax  +
mov dword ptr [ebp+var_24] offset aBadCast +
call sub_41EE5A  +
mov esi [ebp+var_14] +
mov ecx esi +
mov dword_45C420 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41ACD6  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_41AB1D  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442198  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_1C] +
call sub_41AAC5  +
mov [ebp+var_4] 0 +
mov edi dword_45B5DC +
mov ebx dword_45C424 +
mov [ebp+var_14] ebx +
test edi edi +
jnz loc_41845B  +
push edi  +
lea ecx [ebp+var_18] +
call sub_41AAC5  +
cmp dword_45B5DC edi +
jnz loc_41844D  +
mov eax dword_45B5C4 +
inc eax  +
mov dword_45B5C4 eax +
mov dword_45B5DC eax +
lea ecx [ebp+var_18] +
call sub_41AB1D  +
mov edi dword_45B5DC +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_418472  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4184E7  +
jmp loc_418474  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41848A  +
call sub_41AD04  +
cmp edi [eax+0Ch] +
jnb loc_41848E  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4184E7  +
test ebx ebx +
jz loc_418496  +
mov esi ebx +
jmp loc_4184E7  +
push [ebp+arg_0]  +
lea eax [ebp+var_14] +
push eax  +
call sub_4137B0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4184CE  +
xorps xmm0 xmm0 +
mov [ebp+var_28] offset off_4441E0 +
push offset unk_456CBC  +
lea eax [ebp+var_28] +
movq [ebp+var_24] xmm0 +
push eax  +
mov dword ptr [ebp+var_24] offset aBadCast +
call sub_41EE5A  +
mov esi [ebp+var_14] +
mov ecx esi +
mov dword_45C424 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41ACD6  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_41AB1D  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442AC0  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4185B3  +
cmp dword ptr [esi] 0 +
jnz loc_4185B3  +
push 18h  +
call sub_41C139  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_418571  +
mov ecx offset unk_450464 +
jmp loc_41857B  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_41857B  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_409610  +
mov [ebp+var_10] 1 +
mov dword ptr [edi+4] 0 +
push 1  +
mov [ebp+var_4] 2 +
mov ecx edi +
push eax  +
mov dword ptr [edi] offset off_444654 +
call loc_4187D0  +
lea ecx [ebp+var_44] +
mov [esi] edi +
call sub_4096F0  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_44223F  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_41865B  +
cmp dword ptr [esi] 0 +
jnz loc_41865B  +
push 8  +
call sub_41C139  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov eax [ecx+4] +
test eax eax +
jnz loc_418631  +
mov ecx offset unk_450464 +
jmp loc_41863B  +
mov ecx [eax+18h] +
test ecx ecx +
jnz loc_41863B  +
lea ecx [eax+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_409610  +
mov dword ptr [edi+4] 0 +
lea ecx [ebp+var_44] +
mov dword ptr [edi] offset off_444624 +
mov [esi] edi +
call sub_4096F0  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
or ebx 0FFFFFFFFh +
push esi  +
mov eax [eax+10h] +
mov esi ecx +
cmp eax 0FFFFFFFFh +
push edi  +
cmovb ebx eax +
or eax 0FFFFFFFFh +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_4187B1  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_4187A8  +
cmp edi 7FFFFFFEh +
ja loc_4187BB  +
cmp [esi+14h] edi +
jnb loc_4186E0  +
push ecx  +
push edi  +
mov ecx esi +
call sub_403300  +
test edi edi +
jz loc_4187A8  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41870B  +
mov edx [esi] +
jmp loc_41870D  +
test edi edi +
jnz loc_4186D4  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4186FD  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 10h  +
***
mov edx esi +
cmp eax 8 +
jb loc_418716  +
mov ecx [esi] +
jmp loc_418718  +
mov ecx esi +
mov eax [esi+10h] +
test eax eax +
jz loc_41872F  +
add eax eax +
push eax  +
push edx  +
lea eax [ecx+ebx*2] +
push eax  +
call loc_41D160  +
add esp 0Ch +
mov ecx [ebp+0Ch] +
cmp esi ecx +
jnz loc_418760  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_418742  +
mov edx [esi] +
jmp loc_418744  +
mov edx esi +
cmp eax 8 +
jb loc_41874D  +
mov ecx [esi] +
jmp loc_41874F  +
mov ecx esi +
test ebx ebx +
jz loc_418786  +
lea eax [ebx+ebx] +
push eax  +
push edx  +
push ecx  +
call loc_41D160  +
jmp loc_418783  +
cmp dword ptr [ecx+14h] 8 +
jb loc_418768  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 8 +
jb loc_418772  +
mov edx [esi] +
jmp loc_418774  +
mov edx esi +
test ebx ebx +
jz loc_418786  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push edx  +
call loc_41EED0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4187A0  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aStringTooLong  +
call sub_41AA58  +
push offset aStringTooLong  +
call sub_41AA58  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_442AE0  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov [ebp-4Ch] ebx +
call sub_42AD46  +
mov esi eax +
lea eax [ebp-80h] +
push eax  +
mov [ebp-48h] esi +
call sub_41B533  +
add esp 4 +
cmp byte ptr [ebp+0Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-40h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [ebp-30h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [ebp-20h] xmm0 +
mov eax [eax+28h] +
mov [ebp-18h] eax +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebp-4] 0 +
jz loc_418861  +
mov esi offset unk_450464 +
jmp loc_418864  +
mov esi [esi+8] +
lea eax [ebp-80h] +
push eax  +
call sub_41B533  +
mov edi esi +
add esp 4 +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_418875  +
sub edi ecx +
inc edi  +
push 1  +
push edi  +
call sub_42A943  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_418895  +
call sub_41CD81  +
test edi edi +
jz loc_4188AE  +
mov ecx edx +
sub ecx esi +
lea eax [ebp-40h] +
mov byte ptr [ebp-44h] 2Eh +
push eax  +
lea eax [ebp-50h] +
mov dword ptr [ebp-48h] 0 +
push eax  +
push 1  +
lea eax [ebp-44h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp-48h] +
movq qword ptr [ebp-50h] xmm0 +
push eax  +
call sub_41B337  +
movzx eax word ptr [ebp-48h] +
add esp 14h +
mov [ebx+0Ch] ax +
xorps xmm0 xmm0 +
lea eax [ebp-40h] +
mov byte ptr [ebp-44h] 2Ch +
mov dword ptr [ebp-48h] 0 +
push eax  +
lea eax [ebp-50h] +
movq qword ptr [ebp-50h] xmm0 +
push eax  +
push 1  +
lea eax [ebp-44h] +
push eax  +
lea eax [ebp-48h] +
push eax  +
call sub_41B337  +
movzx eax word ptr [ebp-48h] +
add esp 14h +
mov [ebx+0Eh] ax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp-4Ch] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_416350  +
***
push 0FFFFFFFFh  +
push offset loc_442B3C  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea eax [esi+4] +
mov dword ptr [esi] offset off_451780 +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_418A08  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+1Ch] +
mov [ebp+var_4] ecx +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_418A25  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+34h] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_418A3F  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+4Ch] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_418A59  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_418BA0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_418AB0  +
test [ebp+arg_0] 1 +
jz loc_418A9F  +
push 90h  +
push esi  +
call sub_41C538  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
lea eax [edi+74h] +
mov dword ptr [edi] offset off_451780 +
push eax  +
mov dword ptr [edi+70h] 0 +
call ds:DeleteCriticalSection  +
mov eax [edi+60h] +
lea esi [edi+4Ch] +
cmp eax 8 +
jb loc_418AE1  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_418AF7  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+34h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_418B12  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_418B28  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+1Ch] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_418B43  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_418B59  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov eax [edi+18h] +
cmp eax 8 +
jb loc_418B73  +
inc eax  +
lea ecx [edi+4] +
push eax  +
push dword ptr [edi+4]  +
call loc_402F00  +
mov dword ptr [edi+18h] 7 +
mov dword ptr [edi+14h] 0 +
cmp dword ptr [edi+18h] 8 +
jb loc_418B92  +
mov eax [edi+4] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [edi+4] ax +
pop edi  +
pop esi  +
retn   +
***
push 3  +
push offset asc_451718  +
lea ecx [esi+1Ch] +
call loc_402D90  +
push 8  +
push offset aOobe_log  +
lea ecx [esi+34h] +
call loc_402D90  +
push 0  +
push offset String  +
lea ecx [esi+4Ch] +
call loc_402D90  +
push 1Eh  +
mov ecx esi +
mov byte ptr [esi+6Ch] 1 +
call sub_418C10  +
lea eax [esi+74h] +
mov dword ptr [esi+70h] 0 +
push eax  +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+8Ch] 1 +
mov byte ptr [esi+6Dh] 0 +
call ds:InitializeCriticalSection  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442BA2  +
mov eax large fs:0 +
push eax  +
sub esp 258h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
xor eax eax +
mov [esi+64h] edi +
mov [ebp+var_220] 7 +
mov [ebp+var_224] 0 +
mov word ptr [ebp+pszPath] ax +
mov [ebp+var_4] eax +
lea eax [ebp+Buffer] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_418EFF  +
cmp [ebp+Buffer] 0 +
jnz loc_418C8E  +
xor ecx ecx +
jmp loc_418CA6  +
lea ecx [ebp+Buffer] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_418C97  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Buffer] +
push eax  +
lea ecx [ebp+pszPath] +
call loc_402D90  +
xor ecx ecx +
mov [ebp+var_250] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [esi+34h] +
mov word ptr [ebp+var_264] cx +
push eax  +
lea ecx [ebp+var_264] +
mov [ebp+var_254] 0 +
call loc_402FE0  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_24C] +
push 6  +
xor eax eax +
mov [ebp+var_238] 7 +
push offset a_trace  +
mov [ebp+var_23C] 0 +
mov word ptr [ebp+var_24C] ax +
call loc_402D90  +
lea edx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_264] +
call loc_419C10  +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
mov ecx [ebp+var_238] +
cmp ecx 8 +
jb loc_418D54  +
inc ecx  +
push ecx  +
push [ebp+var_24C]  +
lea ecx [ebp+var_24C] +
call loc_402F00  +
test bl bl +
jz loc_418EC4  +
lea edx [ebp+var_264] +
lea ecx [ebp+pszPath] +
call loc_419A20  +
test al al +
jz loc_418EC4  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_418DA1  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_418EC4  +
push offset a_debug  +
lea ecx [ebp+var_24C] +
call loc_402B10  +
lea edx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+pszPath] +
call loc_419C10  +
lea ecx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
call sub_402AD0  +
test bl bl +
jz loc_418DFF  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_418EB8  +
lea ecx [ebp+pszPath] +
call sub_419CC0  +
test al al +
jz loc_418EC4  +
push offset aAsu_trace  +
lea ecx [ebp+var_24C] +
call loc_402B10  +
lea edx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+pszPath] +
call loc_419A20  +
lea ecx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
call sub_402AD0  +
test bl bl +
jz loc_418EC4  +
lea ecx [ebp+pszPath] +
call sub_419A00  +
test al al +
jz loc_418E64  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_418EC4  +
lea ecx [ebp+pszPath] +
call sub_419CC0  +
test al al +
jz loc_418EC4  +
push offset aAsu_debug  +
lea ecx [ebp+var_24C] +
call loc_402B10  +
lea edx [ebp+var_24C] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+pszPath] +
call loc_419A20  +
lea ecx [ebp+var_24C] +
mov bl al +
call sub_402AD0  +
test bl bl +
jz loc_418EC4  +
lea ecx [ebp+pszPath] +
call sub_419A00  +
test al al +
jz loc_418EC4  +
cmp edi 14h +
jle loc_418EC4  +
mov dword ptr [esi+64h] 14h +
mov eax [ebp+var_250] +
cmp eax 8 +
jb loc_418EE2  +
inc eax  +
lea ecx [ebp+var_264] +
push eax  +
push [ebp+var_264]  +
call loc_402F00  +
xor eax eax +
mov [ebp+var_250] 7 +
mov [ebp+var_254] 0 +
mov word ptr [ebp+var_264] ax +
mov eax [ebp+var_220] +
cmp eax 8 +
jb loc_418F1D  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_402F00  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_442BDB  +
mov eax large fs:0 +
push eax  +
sub esp 244h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+hObject] 0 +
cmp ds:String 0 +
jz loc_418F9A  +
push 0  +
lea edi [esi+4Ch] +
push offset String  +
mov ecx edi +
call loc_402D90  +
jmp loc_4190D8  +
lea eax [ebp+Buffer] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_418FE6  +
cmp [ebp+Buffer] 0 +
jnz loc_418FBE  +
xor edx edx +
jmp loc_418FD6  +
lea edx [ebp+Buffer] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_418FC7  +
sub edx ecx +
sar edx 1 +
push edx  +
lea eax [ebp+Buffer] +
lea ecx [esi+4Ch] +
push eax  +
call loc_402D90  +
cmp dword ptr [esi+60h] 8 +
lea edi [esi+4Ch] +
jb loc_418FF3  +
mov edx [edi] +
jmp loc_418FF5  +
mov edx edi +
xor eax eax +
mov [ebp+var_21C] 7 +
mov [ebp+var_220] 0 +
mov word ptr [ebp+pszPath] ax +
cmp [edx] ax +
jnz loc_41901B  +
xor ecx ecx +
jmp loc_41902F  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419020  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+pszPath] +
call loc_402D90  +
cmp [ebp+var_21C] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathIsDirectoryW  +
test eax eax +
setnz al  +
test al al +
mov eax [ebp+var_21C] +
setz bl  +
cmp eax 8 +
jb loc_41907F  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_402F00  +
test bl bl +
jz loc_4190D8  +
cmp dword ptr [edi+14h] 8 +
jb loc_41908D  +
mov eax [edi] +
jmp loc_41908F  +
mov eax edi +
push eax  +
lea ecx [ebp+pszPath] +
call loc_402B10  +
cmp [ebp+var_21C] 8 +
lea eax [ebp+pszPath] +
push 0  +
cmovnb eax [ebp+pszPath] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov eax [ebp+var_21C] +
cmp eax 8 +
jb loc_4190D8  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_402F00  +
push 9  +
xor eax eax +
mov [ebp+var_21C] 7 +
push offset aPdapp_log  +
lea ecx [ebp+pszPath] +
mov [ebp+var_220] 0 +
mov word ptr [ebp+pszPath] ax +
call loc_402D90  +
cmp [ebp+var_21C] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathIsFileSpecW  +
cmp eax 1 +
mov eax [ebp+var_21C] +
setnz bl  +
cmp eax 8 +
jb loc_419146  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_402F00  +
test bl bl +
jz loc_419155  +
mov byte ptr [esi+6Ch] 0 +
xor al al +
jmp loc_41924C  +
push 9  +
xor eax eax +
mov [ebp+var_234] 7 +
push offset aPdapp_log  +
lea ecx [ebp+var_248] +
mov [ebp+var_238] 0 +
mov word ptr [ebp+var_248] ax +
call loc_402D90  +
lea edx [ebp+var_248] +
mov [ebp+var_4] 0 +
mov ecx edi +
call loc_419A20  +
mov [ebp+var_4] 0FFFFFFFFh +
mov bl al +
mov ecx [ebp+var_234] +
cmp ecx 8 +
jb loc_4191BF  +
inc ecx  +
push ecx  +
push [ebp+var_248]  +
lea ecx [ebp+var_248] +
call loc_402F00  +
xor eax eax +
mov [ebp+var_234] 7 +
mov [ebp+var_238] 0 +
mov word ptr [ebp+var_248] ax +
test bl bl +
jnz loc_4191E7  +
mov [esi+6Ch] al +
xor al al +
jmp loc_41924C  +
mov eax [esi+68h] +
lea ebx [esi+68h] +
test eax eax +
jz loc_4191FE  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx] 0 +
lea edx [esi+34h] +
mov [ebp+hObject] 0 +
mov ecx edi +
call sub_419E30  +
cmp byte ptr [esi+6Dh] 0 +
mov eax [esi] +
mov eax [eax] +
jz loc_419226  +
push ebx  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
jmp loc_419249  +
lea ecx [ebp+hObject] +
push ecx  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
test al al +
jz loc_419249  +
mov eax [ebp+hObject] +
test eax eax +
jz loc_419249  +
push eax  +
call ds:CloseHandle  +
mov al [esi+6Ch] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_419295  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset String  +
push offset String  +
push 0Ah  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_4192C5  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset String  +
push offset String  +
push 14h  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_4192F5  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset String  +
push offset String  +
push 1Eh  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_41932F  +
mov eax [ebp+arg_4] +
mov edx offset String +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset String  +
push edx  +
push 28h  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_41936F  +
mov eax [ebp+arg_4] +
mov edx offset String +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset String  +
push edx  +
push 32h  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_4193AF  +
mov eax [ebp+arg_4] +
mov edx offset String +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset String  +
push edx  +
push 3Ch  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_10] 0 +
jz loc_4193F8  +
mov eax [ebp+arg_8] +
test eax eax +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi offset String +
lea ebx [ebp+arg_14] +
mov edx esi +
cmovnz edx eax +
mov eax [ebp+arg_C] +
push ebx  +
push [ebp+arg_10]  +
test eax eax +
cmovnz esi eax +
mov eax [ecx] +
push esi  +
push edx  +
push [ebp+arg_4]  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_419415  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_419420  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_41942B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_419436  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_419441  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call sub_4122C0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
mov edx [ebp+arg_4] +
test edx edx +
jz loc_4195B5  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset unk_450464  +
push offset unk_450464  +
push 0Ah  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_4195E5  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset unk_450464  +
push offset unk_450464  +
push 14h  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_419615  +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
mov eax [ecx] +
push edx  +
push offset unk_450464  +
push offset unk_450464  +
push 1Eh  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_41964F  +
mov eax [ebp+arg_4] +
mov edx offset unk_450464 +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset unk_450464  +
push edx  +
push 28h  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_41968F  +
mov eax [ebp+arg_4] +
mov edx offset unk_450464 +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset unk_450464  +
push edx  +
push 32h  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
jz loc_4196CF  +
mov eax [ebp+arg_4] +
mov edx offset unk_450464 +
mov ecx [ebp+arg_0] +
test eax eax +
push edi  +
lea edi [ebp+arg_C] +
cmovnz edx eax +
push edi  +
push [ebp+arg_8]  +
mov eax [ecx] +
push offset unk_450464  +
push edx  +
push 3Ch  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_10] 0 +
jz loc_419718  +
mov eax [ebp+arg_8] +
test eax eax +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi offset unk_450464 +
lea ebx [ebp+arg_14] +
mov edx esi +
cmovnz edx eax +
mov eax [ebp+arg_C] +
push ebx  +
push [ebp+arg_10]  +
test eax eax +
cmovnz esi eax +
mov eax [ecx] +
push esi  +
push edx  +
push [ebp+arg_4]  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_419735  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_419740  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_41974B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_419756  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_419761  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call sub_4123E0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] edx +
push edi  +
cmp dword ptr [esi+14h] 8 +
jb loc_4197A7  +
mov eax [esi] +
jmp loc_4197A9  +
mov eax esi +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
inc eax  +
push eax  +
mov [ebp+cchMultiByte] eax +
call sub_41C7F6  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 8 +
jb loc_4197D8  +
mov esi [esi] +
push 0  +
push 0  +
push [ebp+cchMultiByte]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_419805  +
push edi  +
call sub_41C4E1  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp byte ptr [edi] 0 +
jnz loc_41980E  +
xor ecx ecx +
jmp loc_41981C  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_419813  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_8] +
push edi  +
call loc_40EAB0  +
push edi  +
call sub_41C4E1  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp-8] edx +
push edi  +
cmp dword ptr [esi+14h] 10h +
jb loc_419857  +
mov eax [esi] +
jmp loc_419859  +
mov eax esi +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov [ebp-4] eax +
lea ecx ds:2[eax*2] +
push ecx  +
call sub_42A938  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4198AF  +
cmp dword ptr [esi+14h] 10h +
jb loc_41988E  +
mov esi [esi] +
push dword ptr [ebp-4]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_4198B7  +
push edi  +
call sub_42746C  +
add esp 4 +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp-4] +
xor ecx ecx +
mov [edi+eax*2] cx +
cmp [edi] cx +
jz loc_4198DF  +
mov ecx edi +
lea edx [ecx+2] +
retf 0F9D1h  +
***
push ecx  +
mov ecx [ebp-8] +
push edi  +
call loc_402D90  +
push edi  +
call sub_42746C  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 61Ch +
mov eax dword_459094 +
xor eax esp +
mov [esp+61Ch+var_4] eax +
push esi  +
lea eax [esp+620h+Date] +
mov esi ecx +
push eax  +
call ds:GetLocalTime  +
push 100h  +
lea eax [esp+624h+TimeStr] +
push eax  +
push offset Format  +
lea eax [esp+62Ch+Date] +
push eax  +
push 8  +
push 400h  +
call ds:GetTimeFormatW  +
push 100h  +
lea eax [esp+624h+DateStr] +
push eax  +
push offset aMDYyyy  +
lea eax [esp+62Ch+Date] +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+620h+TimeStr] +
push eax  +
lea eax [esp+624h+DateStr] +
push eax  +
push offset aSS  +
lea eax [esp+62Ch+var_608] +
push 100h  +
push eax  +
call sub_404150  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_4199B1  +
xor al al +
pop esi  +
mov ecx [esp+61Ch+var_4] +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
cmp word ptr [esp+620h+var_608] 0 +
jnz loc_4199BD  +
xor eax eax +
jmp loc_4199D3  +
lea eax [esp+620h+var_608] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4199C4  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [esp+624h+var_608] +
mov ecx esi +
push eax  +
call loc_402D90  +
mov ecx [esp+628h+var_C] +
mov al 1 +
pop esi  +
xor ecx esp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_419A08  +
mov ecx [ecx] +
push ecx  +
call ds:PathFileExistsW  +
cmp eax 1 +
setz al  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_419A43  +
mov eax [edi] +
jmp loc_419A45  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_42C59E  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_419A62  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAppendW  +
mov esi eax +
test esi esi +
jz loc_419AAE  +
cmp word ptr [ebp-20Ch] 0 +
jnz loc_419A84  +
xor ecx ecx +
jmp loc_419A9F  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419A90  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx edi +
push eax  +
call loc_402D90  +
mov ecx [ebp-4] +
xor eax eax +
cmp esi 1 +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_419AF0  +
mov eax [esi] +
jmp loc_419AF2  +
mov eax esi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_42C59E  +
add esp 0Ch +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRemoveExtensionW  +
cmp word ptr [ebp-20Ch] 0 +
jnz loc_419B22  +
xor ecx ecx +
jmp loc_419B3F  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419B30  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx esi +
push eax  +
call loc_402D90  +
mov ecx [ebp-4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_419B83  +
mov eax [edi] +
jmp loc_419B85  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_42C59E  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_419BA2  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jnz loc_419BC6  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp word ptr [ebp-20Ch] 0 +
jnz loc_419BD4  +
xor ecx ecx +
jmp loc_419BEF  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419BE0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx edi +
push eax  +
call loc_402D90  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_419C33  +
mov eax [edi] +
jmp loc_419C35  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_42C59E  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_419C52  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRenameExtensionW  +
test eax eax +
jnz loc_419C76  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp word ptr [ebp-20Ch] 0 +
jnz loc_419C84  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
sub esp 20Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_419CE0  +
mov eax [esi] +
jmp loc_419CE2  +
mov eax esi +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_42C59E  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_419D19  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+pszPath] 0 +
jnz loc_419D27  +
xor ecx ecx +
jmp loc_419D3F  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419D30  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_402D90  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_442C86  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push 1  +
sub esp 8 +
call sub_419F90  +
cmp eax 0FFFFFFFFh +
jnz loc_419DA1  +
xor al al +
jmp loc_419E07  +
push dword ptr [edi+10h]  +
mov ecx edi +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call sub_40CA20  +
mov edi eax +
cmp esi edi +
jz loc_419DF0  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_419DC9  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402F00  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_419DE1  +
mov eax [esi] +
jmp loc_419DE3  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_403860  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_419E05  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402F00  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov edi edx +
jb loc_419E3B  +
mov ecx [ecx] +
push ecx  +
call ds:PathFindFileNameW  +
mov edx eax +
cmp word ptr [edx] 0 +
jnz loc_419E59  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx edi +
call loc_402D90  +
mov al 1 +
pop edi  +
retn   +
mov ecx edx +
push esi  +
lea esi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419E60  +
sub ecx esi +
sar ecx 1 +
pop esi  +
push ecx  +
push edx  +
mov ecx edi +
call loc_402D90  +
mov al 1 +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax 2010h +
call sub_41D130  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi edx +
xor edx edx +
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov [ebp-200Ch] edx +
jb loc_419EAC  +
mov ecx [ecx] +
mov ebx ds:CreateFileW +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 0C0000000h  +
push ecx  +
call ebx  +
cmp dword ptr [esi+14h] 8 +
mov edi eax +
jb loc_419ED1  +
mov esi [esi] +
push 0  +
push 80h  +
push 4  +
push 0  +
push 0  +
push 40000000h  +
push esi  +
call ebx  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_419F07  +
push edi  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi ds:GetLastError +
push 0  +
lea eax [ebp-2008h] +
push eax  +
push 1000h  +
lea eax [ebp-2004h] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_419F4F  +
push 0  +
lea eax [ebp-2010h] +
push eax  +
push dword ptr [ebp-2008h]  +
lea eax [ebp-2004h] +
push eax  +
push ebx  +
call ds:WriteFile  +
jmp loc_419F57  +
call esi  +
mov [ebp-200Ch] eax +
cmp dword ptr [ebp-2008h] 1000h +
jz loc_419F10  +
mov esi ds:CloseHandle +
push edi  +
call esi  +
push ebx  +
call esi  +
mov edx [ebp-200Ch] +
xor eax eax +
mov ecx [ebp-4] +
test edx edx +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx ecx +
mov eax [ebx+10h] +
test edx edx +
jnz loc_419FB1  +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
pop ebx  +
cmova eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push esi  +
or ecx 0FFFFFFFFh +
push edi  +
cmp edx eax +
ja loc_41A02F  +
sub eax edx +
cmp eax ecx +
cmova eax ecx +
cmp dword ptr [ebx+14h] 8 +
jb loc_419FCB  +
mov ecx [ebx] +
jmp loc_419FCD  +
mov ecx ebx +
lea edi [ecx+eax*2] +
cmp word ptr [edi] 2Eh +
jnz loc_41A019  +
cmp [ebp+arg_8] 0 +
mov esi edx +
mov edx offset a_ +
mov eax edi +
jbe loc_419FF8  +
mov cx [eax] +
cmp cx [edx] +
jnz loc_41A00F  +
add eax 2 +
add edx 2 +
sub esi 1 +
jnz loc_419FE5  +
cmp dword ptr [ebx+14h] 8 +
jb loc_41A000  +
mov ebx [ebx] +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 1 +
jz loc_419FF8  +
mov ecx ebx +
call sub_402D10  +
cmp edi eax +
jz loc_41A02C  +
mov edx [ebp+arg_8] +
sub edi 2 +
jmp loc_419FD0  +
or ecx 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_442CB8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edi [esi+4Ch] +
xor bl bl +
cmp dword ptr [edi+14h] 8 +
jb loc_41A07C  +
mov eax [edi] +
jmp loc_41A07E  +
mov eax edi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_41A0A6  +
xor al al +
jmp loc_41A16E  +
lea ecx [ebp+var_38] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_41A0C5  +
mov eax [ebp+var_38] +
mov bl 1 +
mov [ebp+var_30] eax +
mov eax [ebp+var_34] +
mov [ebp+var_2C] eax +
jmp loc_41A0D1  +
mov eax [ebp+var_34] +
mov [ebp+var_2C] eax +
mov eax [ebp+var_38] +
mov [ebp+var_30] eax +
push [ebp+hObject]  +
call ds:CloseHandle  +
test bl bl +
jz loc_41A16C  +
cmp [ebp+var_2C] 0 +
jl loc_41A16C  +
jg loc_41A0F7  +
cmp [ebp+var_30] 0A00000h +
jb loc_41A16C  +
mov eax [esi+68h] +
lea ebx [esi+68h] +
test eax eax +
jz loc_41A108  +
push eax  +
call ds:CloseHandle  +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402FE0  +
lea ecx [ebp+var_28] +
mov [ebp+var_4] 0 +
call sub_41A200  +
lea edx [ebp+var_28] +
mov ecx edi +
call loc_419E80  +
test al al +
jz loc_41A14C  +
mov ecx esi +
call sub_415060  +
mov eax [esi] +
mov ecx esi +
push ebx  +
mov eax [eax] +
call eax  +
mov ecx [ebp+var_14] +
mov bl al +
cmp ecx 8 +
jb loc_41A16C  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402F00  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_41A1DE  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov [esi] eax +
test eax eax +
jnz loc_41A1DB  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_41A1DB  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:OpenMutexW  +
mov [esi] eax +
cmp dword ptr [esi] 0 +
mov ecx [ebp+arg_14] +
setnz bl  +
cmp ecx 8 +
jb loc_41A1F6  +
inc ecx  +
push ecx  +
push [ebp+lpName]  +
lea ecx [ebp+lpName] +
call loc_402F00  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
call sub_41A3CA  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_41E790  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
cmp eax [esi+30h] +
jg loc_41A461  +
test eax eax +
js loc_41A461  +
cmp eax [esi+30h] +
jnz loc_41A454  +
mov esi [esi+8] +
jmp loc_41A463  +
push eax  +
lea ecx [esi+2Ch] +
call sub_41A403  +
mov esi [eax] +
jmp loc_41A463  +
xor esi esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push [ebp+lpProcName]  +
mov eax [ebp+arg_4] +
mov eax dword_45B4D8 +
mov eax dword_45B4D8 +
test eax eax +
push 8  +
push esi  +
push esi  +
push esi  +
mov eax [esp+arg_0] +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_443588 +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_41A89A  +
cmp [ebp+arg_8] 0 +
jz loc_41A89A  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_443588 +
test ecx ecx +
jz loc_41A8D1  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_41A8E0  +
push eax  +
call ds:LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_443588 +
test ecx ecx +
jz loc_41A914  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_41A922  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_41A933  +
push 10h  +
push edi  +
call sub_41C538  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
sub esp 10h +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
push ecx  +
push esi  +
push esi  +
push ecx  +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_41AADB  +
call sub_42C828  +
jmp loc_41AAEF  +
cmp eax 8 +
jge loc_41AAEF  +
imul eax eax +
add eax offset stru_45B500 +
push eax  +
call sub_41B689  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_441630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41ABCD  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
push esi  +
push ecx  +
call sub_41C847  +
call sub_41C847  +
push 0  +
mov eax [ebp+arg_0] +
push ecx  +
cmp byte_45B5ED 0 +
mov eax [ebp+arg_0] +
push ecx  +
push ebx  +
push esi  +
push 0  +
mov eax [ebp+arg_4] +
pop ebp  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
sub esp 10h +
sub esp 10h +
sub esp 68h +
push ecx  +
push [ebp+lpCharType]  +
push ecx  +
push ebx  +
push ecx  +
push ecx  +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov eax dword_459020 +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
call ds:GetModuleHandleW  +
push esi  +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
cmp ecx dword_459094 +
push [ebp+arg_0]  +
push edi  +
mov eax dword_459094 +
mov eax hEvent +
call sub_41C07B  +
call sub_41C07B  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
jmp loc_41C15D  +
call sub_41CDC0  +
mov edi [ebp+10h] +
test al al +
call sub_41CDC0  +
mov eax [ebp+arg_0] +
call sub_41CFC0  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_41CDC0  +
call sub_41CFC0  +
cmp byte_45B7D8 0 +
mov eax dword_459094 +
push [ebp+arg_0]  +
test [ebp+arg_0] 1 +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
pop ebp  +
call sub_41CDC0  +
test al al +
call sub_42EAC1  +
call sub_41CCF9  +
call sub_40D620  +
push eax  +
call sub_42FEF7  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_41CCB5  +
test al al +
jnz loc_41C7D1  +
push dword ptr [ebp-20h]  +
call sub_42DE4A  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_41C7DC  +
call sub_42DE2C  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_41CFCC  +
pop ebp  +
jmp sub_41C139  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41D130  +
***
mov ecx [ebp-0Ch] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_459094 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_41C8D9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
sub esp 324h +
sub esp 44h +
mov ecx eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_45BAFC 0 +
push esi  +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
lea ecx [ebp+var_C] +
call sub_41A980  +
push offset unk_456298  +
lea eax [ebp+var_C] +
push eax  +
call sub_41EE5A  +
int 3  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea ecx [ebp-0Ch] +
call sub_41CD69  +
push offset unk_4564B4  +
lea eax [ebp-0Ch] +
push eax  +
call sub_41EE5A  +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push ebp  +
mov ebp esp +
and dword_45BB04 0 +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_4590A0 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_41CFB5  +
and dword ptr [ebp-14h] 0 +
xor eax eax +
or dword_4590A0 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_45BB04 ebx +
lea edi [ebp-2Ch] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-2Ch] +
mov ecx [ebp-20h] +
mov [ebp-0Ch] eax +
xor ecx 49656E69h +
mov eax [ebp-24h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-28h] +
xor eax 756E6547h +
or ecx eax +
neg ecx  +
push 1  +
pop eax  +
sbb cl cl +
push 0  +
add cl 1 +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jz loc_41CEF2  +
mov eax [ebp-2Ch] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_41CEE1  +
cmp eax 20660h +
jz loc_41CEE1  +
cmp eax 20670h +
jz loc_41CEE1  +
cmp eax 30650h +
jz loc_41CEE1  +
cmp eax 30660h +
jz loc_41CEE1  +
cmp eax 30670h +
jnz loc_41CEF2  +
mov edi dword_45BB08 +
or edi 1 +
mov dword_45BB08 edi +
jmp loc_41CEF8  +
mov edi dword_45BB08 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-20h] +
mov [ebp-1Ch] eax +
mov eax [ebp-24h] +
mov [ebp-8] eax +
mov [ebp-18h] eax +
jl loc_41CF3F  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-2Ch] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-28h] +
test eax 200h +
mov [ebp-14h] eax +
mov eax [ebp-8] +
jz loc_41CF3F  +
or edi 2 +
mov dword_45BB08 edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_41CFB5  +
or dword_4590A0 4 +
mov dword_45BB04 2 +
test eax 8000000h +
jz loc_41CFB5  +
test eax 10000000h +
jz loc_41CFB5  +
xor ecx ecx +
xor eax eax +
sub esp 14h +
retn   +
***
push 0  +
call sub_404140  +
xor eax eax +
mov esi offset unk_454A84 +
mov esi offset unk_454A8C +
mov ebx offset unk_454A8C +
cmp esi ebx +
jnb loc_41D123  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_41D11B  +
mov ecx edi +
call j_nullsub_1  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41D10C  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_41D154  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_41D144  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41D180  +
cmp edi eax +
jb loc_41D414  +
cmp ecx 20h +
jb loc_41D65B  +
cmp ecx 80h +
jnb loc_41D1A4  +
bt dword_4590A0 1 +
jb loc_41D62D  +
jmp loc_41D387  +
bt dword_45BB08 1 +
jnb loc_41D1B7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41D1D0  +
bt dword_4590A0 1 +
jb loc_41D5B0  +
bt dword_45BB08 0 +
jnb loc_41D387  +
test edi 3 +
jnz loc_41D387  +
test esi 3 +
jnz loc_41D3A2  +
bt edi 2 +
jnb loc_41D209  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41D220  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41D28D  +
bt esi 3 +
jnb loc_41D2E6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41D33C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_41D354  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41D33C  +
***
bt ecx 2 +
jnb loc_41D367  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41D37E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41D3C4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41D3A2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41D38F  +
mov edx ecx +
cmp ecx 20h +
jb loc_41D65B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41D3C4[edx*4]  +
jmp dword ptr ds:loc_41D3D4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_41D574  +
bt dword_4590A0 1 +
jb loc_41D4C5  +
test edi 3 +
jz loc_41D44D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41D440  +
cmp ecx 20h +
jb loc_41D574  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41D470[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41D4DC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41D4CD  +
cmp ecx 80h +
jb loc_41D54C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41D4DC  +
cmp ecx 20h +
jb loc_41D574  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41D551  +
test ecx 0FFFFFFFCh +
jz loc_41D591  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41D57C  +
test ecx ecx +
jz loc_41D5A4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41D595  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41D62D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41D5D0  +
test ecx ecx +
jz loc_41D690  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41D65B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41D640  +
and ecx 1Fh +
jz loc_41D690  +
mov eax ecx +
shr ecx 2 +
jz loc_41D676  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41D667  +
mov ecx eax +
and ecx 3 +
jz loc_41D690  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41D67D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_41CDC0  +
push esi  +
and dword ptr [ecx+4] 0 +
call sub_41CDC0  +
mov eax [ebp-2Ch] +
call sub_41C87B  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 44h +
push ecx  +
sub esp 18h +
push ebx  +
pop eax  +
mov ecx [ebp+arg_4] +
call sub_41CDC0  +
mov esp [ebp-18h] +
call sub_41CDC0  +
mov eax [ebp+arg_0] +
call sub_41CDC0  +
call sub_421282  +
push ebx  +
mov edx [ebp+arg_0] +
call sub_421282  +
push edi  +
push esi  +
xor ecx ecx +
mov edx offset dword_45BB78 +
xor eax eax +
cmpxchg [edx] ecx +
mov ecx dword_459094 +
xor eax dword_459094 +
and ecx 1Fh +
ror eax cl +
retn   +
***
push esi  +
call sub_41E4C9  +
mov esi eax +
test esi esi +
jz loc_41E4FD  +
mov ecx esi +
call j_nullsub_1  +
call esi  +
call sub_42D0CD  +
int 3  +
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_41E535  +
mov eax [ebx+8] +
jmp loc_41E77D  +
mov eax dword_45BB04 +
cmp eax 1 +
jle loc_41E62D  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_41E559  +
movups xmm0 oword ptr [edi] +
jmp loc_41E584  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_41E57C  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_41E563  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E5F0  +
mov ecx [ebp-8] +
jmp loc_41E587  +
***
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E607  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E607  +
movups xmm1 oword ptr [ecx] +
movzx eax word ptr [edx] +
xor edi edi +
cmp di ax +
jz loc_41E77B  +
cmp ax cx +
jz loc_41E5B4  +
add edx esi +
jmp loc_41E587  +
***
movzx eax word ptr [ecx] +
and dword ptr [ebp-4] 0 +
cmp [ebp-4] ax +
jz loc_41E626  +
cmp [edi] ax +
jnz loc_41E61F  +
add edi esi +
add ecx esi +
jmp loc_41E5B9  +
***
add edx esi +
jmp loc_41E5A0  +
***
mov eax edx +
jmp loc_41E77D  +
jnz loc_41E716  +
movzx eax cx +
pxor xmm3 xmm3 +
mov ecx [ebx+8] +
push 2  +
pop esi  +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm4 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E686  +
movups xmm1 oword ptr [ecx] +
movaps xmm0 xmm3 +
pcmpeqw xmm0 xmm1 +
pcmpeqw xmm1 xmm4 +
por xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_41E67B  +
add ecx 10h +
jmp loc_41E64E  +
***
bsf eax eax +
mov [ebp-8] eax +
shr eax 1 +
lea ecx [ecx+eax*2] +
movzx eax word ptr [ecx] +
xor edx edx +
cmp dx ax +
jz loc_41E77B  +
movzx edx word ptr [edi] +
cmp dx ax +
jnz loc_41E70B  +
mov edx ecx +
mov eax edi +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E6F0  +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_41E6F0  +
movups xmm2 oword ptr [edi] +
movups xmm1 oword ptr [edx] +
movaps xmm0 xmm3 +
pcmpeqw xmm1 xmm2 +
pcmpeqw xmm0 xmm2 +
pcmpeqw xmm1 xmm3 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_41E6E3  +
add edx 10h +
add edi 10h +
jmp loc_41E69E  +
***
bsf eax eax +
mov [ebp-8] eax +
and eax 0FFFFFFFEh +
add edx eax +
add edi eax +
movzx eax word ptr [edi] +
and dword ptr [ebp-8] 0 +
cmp [ebp-8] ax +
jz loc_41E712  +
cmp [edx] ax +
jnz loc_41E708  +
add edx esi +
add edi esi +
jmp loc_41E69E  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_41E64E  +
***
mov eax ecx +
jmp loc_41E77D  +
mov edx [ebx+8] +
movzx eax word ptr [edx] +
test ax ax +
jz loc_41E77B  +
and dword ptr [ebp-8] 0 +
mov ecx eax +
mov eax edx +
sub eax edi +
mov [ebp-4] eax +
push 2  +
pop esi  +
test cx cx +
jz loc_41E75D  +
movzx ecx word ptr [edi] +
test cx cx +
jz loc_41E626  +
movzx ecx word ptr [eax+edi] +
movzx eax word ptr [edi] +
sub ecx eax +
mov eax [ebp-4] +
mov ecx [ebp-8] +
jnz loc_41E760  +
add edi esi +
cmp [eax+edi] cx +
jnz loc_41E736  +
jmp loc_41E760  +
mov ecx [ebp-8] +
cmp [edi] cx +
jz loc_41E626  +
mov edi [ebx+0Ch] +
add edx esi +
add eax esi +
mov [ebp-4] eax +
movzx ecx word ptr [edx] +
test cx cx +
jnz loc_41E736  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
mov ecx [esp+arg_8] +
sub esp 18h +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_421282  +
push ecx  +
sub esp 8 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_41ECDF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_41BEC5  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_41BEC5  +
***
sub esp 1Ch +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 8  +
pop ecx  +
mov esi offset unk_4455B4 +
lea edi [ebp+dwExceptionCode] +
movs   +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_41EE96  +
test byte ptr [edi] 10h +
jz loc_41EE96  +
mov ecx [ebx] +
sub ecx 4 +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call j_nullsub_1  +
call esi  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] edi +
test edi edi +
jz loc_41EEAC  +
test byte ptr [edi] 8 +
jz loc_41EEAC  +
mov [ebp+Arguments] 1994000h +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+nNumberOfArguments]  +
push [ebp+dwExceptionFlags]  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_41EEF0  +
cmp edi eax +
jb loc_41F184  +
cmp ecx 20h +
jb loc_41F3CB  +
cmp ecx 80h +
jnb loc_41EF14  +
bt dword_4590A0 1 +
jb loc_41F39D  +
jmp loc_41F0F7  +
bt dword_45BB08 1 +
jnb loc_41EF27  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_41EF40  +
bt dword_4590A0 1 +
jb loc_41F320  +
bt dword_45BB08 0 +
jnb loc_41F0F7  +
test edi 3 +
jnz loc_41F0F7  +
test esi 3 +
jnz loc_41F112  +
bt edi 2 +
jnb loc_41EF79  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_41EF90  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_41EFFD  +
bt esi 3 +
jnb loc_41F056  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41F0AC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_41F0C4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41F0AC  +
***
bt ecx 2 +
jnb loc_41F0D7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_41F0EE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_41F134[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_41F112  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_41F0FF  +
mov edx ecx +
cmp ecx 20h +
jb loc_41F3CB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_41F134[edx*4]  +
jmp dword ptr ds:loc_41F144[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_41F2E4  +
bt dword_4590A0 1 +
jb loc_41F235  +
test edi 3 +
jz loc_41F1BD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_41F1B0  +
cmp ecx 20h +
jb loc_41F2E4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_41F1E0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41F24C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41F23D  +
cmp ecx 80h +
jb loc_41F2BC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41F24C  +
cmp ecx 20h +
jb loc_41F2E4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_41F2C1  +
test ecx 0FFFFFFFCh +
jz loc_41F301  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_41F2EC  +
test ecx ecx +
jz loc_41F314  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_41F305  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_41F320  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_41F410  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_41F39D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_41F340  +
test ecx ecx +
jz loc_41F400  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_41F3CB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_41F3B0  +
and ecx 1Fh +
jz loc_41F400  +
mov eax ecx +
shr ecx 2 +
jz loc_41F3E6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_41F3D7  +
mov ecx eax +
and ecx 3 +
jz loc_41F400  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41F3ED  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_41F42C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_41F423  +
shr eax 2 +
jz loc_41F43E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_41F431  +
pop ecx  +
jmp loc_41F32D  +
***
pop edi  +
add eax 4 +
jz loc_41F4AB  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_41F4E6  +
sub eax 1 +
jnz loc_41F49D  +
pop ebx  +
retn   +
***
xor ch bl +
jz loc_41F4F1  +
shr ecx 10h +
xor cl bl +
jz loc_41F4EB  +
xor ch bl +
jz loc_41F4E5  +
jmp loc_41F4AD  +
***
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_420BF5  +
sub eax 1 +
jz loc_420BE4  +
sub eax 1 +
jz loc_420BB5  +
sub eax 1 +
jz loc_420B6B  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_420AE3  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_41F9E5  +
mov eax [esi] +
cmp eax [edx] +
jz loc_41F5CE  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_41F56E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_41F590  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_41F5B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41F5D0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F5D0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_41F65F  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_41F5FF  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_41F621  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_41F643  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_41F661  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F661  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_41F6F0  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_41F690  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_41F6B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_41F6D4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_41F6F2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F6F2  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_41F781  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_41F721  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_41F743  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_41F765  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_41F783  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F783  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_41F817  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_41F7B7  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_41F7D9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_41F7FB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_41F819  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F819  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_41F8A8  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_41F848  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_41F86A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_41F88C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_41F8AA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F8AA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_41F939  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_41F8D9  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_41F8FB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_41F91D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_41F93B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F93B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_41F9CA  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_41F96A  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_41F98C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_41F9AE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_41F9CC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41F9CC  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_41F544  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_41FE07  +
jmp ds:off_420BFD[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_41FA86  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41FA26  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41FA48  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41FA6A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_41FA88  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FA88  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_41FB1D  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41FABD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41FADF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41FB01  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_41FB1F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FB1F  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_41FBB4  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41FB54  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41FB76  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41FB98  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_41FBB6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FBB6  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_41FC4B  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41FBEB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_41FC0D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41FC2F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_41FC4D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FC4D  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_41FCE3  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_41FC83  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41FCA5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_41FCC7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_41FCE5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FCE5  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_41FD7A  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_41FD1A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41FD3C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41FD5E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_41FD7C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FD7C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_41FE01  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41FDA9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41FDC7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_41FDE5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_41FE03  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FE03  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_420BF7  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_41FE8E  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41FE36  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41FE54  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41FE72  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_41FE90  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FE90  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_41FF25  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41FEC5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41FEE7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41FF09  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_41FF27  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FF27  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_41FFBC  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41FF5C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41FF7E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41FFA0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_41FFBE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FFBE  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_420053  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41FFF3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_420015  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_420037  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_420055  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420055  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_4200EA  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_42008A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_4200AC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_4200CE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_4200EC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4200EC  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_420182  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_420122  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_420144  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_420166  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_420184  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420184  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_420219  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_4201B9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_4201DB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_4201FD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_42021B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42021B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_41FE09  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41FE09  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_4202D3  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_420273  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_420295  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_4202B7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_4202D5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4202D5  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_42036A  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_42030A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_42032C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_42034E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_42036C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42036C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_420401  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_4203A1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_4203C3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_4203E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_420403  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420403  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_420498  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_420438  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_42045A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_42047C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_42049A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42049A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_42052F  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_4204CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_4204F1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_420513  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_420531  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420531  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_4205C7  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_420567  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_420589  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_4205AB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_4205C9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4205C9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_42065E  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_4205FE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_420620  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_420642  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_420660  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420660  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_41FE07  +
jmp loc_420AC0  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_420709  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_4206A9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_4206CB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_4206ED  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_42070B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42070B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_4207A0  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_420740  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_420762  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_420784  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_4207A2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4207A2  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_420837  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_4207D7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_4207F9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_42081B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_420839  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420839  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_4208CE  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_42086E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_420890  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_4208B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_4208D0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4208D0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_420966  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_420906  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_420928  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_42094A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_420968  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420968  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_4209FD  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_42099D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_4209BF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_4209E1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_4209FF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4209FF  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_420A94  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_420A34  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_420A56  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_420A78  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_420A96  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_420A96  +
xor ecx ecx +
test ecx ecx +
jnz loc_41FE09  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_420AC0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41FE09  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_420223  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42021B  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_420B06  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_420B28  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_420B4A  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_420B64  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_420BF7  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_420B8D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_420BAB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_420B52  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_420BD7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_420BF7  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_420B52  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_420B52  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_459094 +
cmp [ebp+arg_0] 0 +
call sub_4213BC  +
call sub_421202  +
push esi  +
sub esp 24Ch +
sub esp 24Ch +
xor eax eax +
pop ecx  +
mov eax [ebp+arg_0] +
mov esi [eax+4] +
mov eax [ebp+lpMem] +
call sub_421290  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
sub esp 4 +
mov eax dword_459094 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
xor eax eax +
ror eax cl +
xor eax dword_459094 +
mov dword_45BB78 eax +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_4214B5  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_41BEC5  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_4213E0  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov edi offset stru_45BB7C +
test esi esi +
jz loc_4215A5  +
imul eax esi +
push edi  +
lea edi dword_45BB64[eax] +
push edi  +
call ds:DeleteCriticalSection  +
dec dword_45BB94  +
sub edi 18h +
sub esi 1 +
jnz loc_42158F  +
pop edi  +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_4215C8  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_4215D0  +
push large dword ptr fs:0  +
mov eax dword_459094 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_421687  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_42165A  +
cmp esi [esp+18h+arg_4] +
jbe loc_421687  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_421685  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_4216C5  +
mov eax [ebx+esi*4+8] +
call sub_4216E4  +
jmp loc_42163E  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_459100 +
mov ebx offset unk_459100 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
ja loc_422D0F  +
jmp ds:off_422D4D[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_4219D9  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_421A1F  +
jmp loc_422C88  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800000h +
jmp loc_422CAA  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7FFFFFFFh +
jmp loc_422CAA  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800001h +
jmp loc_422CAA  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0FFC00000h +
jmp loc_422CAF  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 2  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
mov [eax] ecx +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 3  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800000h +
jmp loc_422D27  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
ja loc_422E17  +
jmp ds:off_422E51[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_4219FC  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_421A42  +
jmp loc_422D98  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_4218EB  +
pop ecx  +
pop ecx  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_42179A  +
jmp loc_422DBC  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_4217D9  +
jmp loc_422DBC  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_421818  +
jmp loc_422DBC  +
push [ebp+arg_8]  +
call sub_42176B  +
jmp loc_422DBD  +
push [ebp+arg_8]  +
push 0  +
call sub_4218EB  +
pop ecx  +
pop ecx  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_4218EB  +
pop ecx  +
pop ecx  +
push 2  +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_42179A  +
pop ecx  +
pop ecx  +
push 3  +
jmp loc_422E33  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
lea ecx [ebp+arg_4] +
push ebx  +
push esi  +
call sub_426FF3  +
test al al +
jz loc_422EB0  +
mov ebx [ebp+arg_24] +
test ebx ebx +
jz loc_422EBB  +
cmp ebx 2 +
jl loc_422EA0  +
cmp ebx 24h +
jle loc_422EBB  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
xor eax eax +
mov edx eax +
mov ebx eax +
jmp loc_42345D  +
push [ebp+arg_0]  +
lea ecx [ebp+var_40] +
call sub_423979  +
xor eax eax +
mov [ebp+var_8] eax +
mov [ebp+var_10] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2C] eax +
lea ecx [ebp+arg_4] +
call sub_42642E  +
movzx esi ax +
push 8  +
push esi  +
call sub_430F6E  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_422EDA  +
xor eax eax +
cmp [ebp+arg_28] al +
setnz al  +
mov [ebp+var_4] eax +
cmp si 2Dh +
jnz loc_422F0C  +
or eax 2 +
mov [ebp+var_4] eax +
jmp loc_422F12  +
cmp si 2Bh +
jnz loc_422F1D  +
lea ecx [ebp+arg_4] +
call sub_42642E  +
movzx esi ax +
push edi  +
push 30h  +
pop ecx  +
or edi 0FFFFFFFFh +
mov [ebp+var_18] 3Ah +
mov [ebp+var_14] edi +
mov eax 0FF10h +
push 19h  +
pop edx  +
test ebx ebx +
jz loc_422F43  +
cmp ebx 10h +
jnz loc_423162  +
cmp si cx +
jb loc_4230E6  +
cmp si word ptr [ebp+var_18] +
jnb loc_422F5C  +
movzx eax si +
sub eax ecx +
jmp loc_4230E2  +
cmp si ax +
jnb loc_4230CC  +
mov ecx 660h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
mov ecx 6F0h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
mov ecx 966h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
mov ecx 0C66h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
mov ecx 0E50h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
lea ecx [eax+76h] +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
add ecx 50h +
cmp si cx +
jb loc_4230E6  +
add eax 50h +
cmp si ax +
jb loc_422F52  +
mov ecx 1040h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
mov ecx 17E0h +
cmp si cx +
jb loc_4230E6  +
lea eax [ecx+0Ah] +
cmp si ax +
jb loc_422F52  +
add ecx 30h +
cmp si cx +
jb loc_4230E6  +
add eax 30h +
cmp si ax +
jnb loc_4230E6  +
jmp loc_422F52  +
mov eax 0FF1Ah +
cmp si ax +
jnb loc_4230E0  +
movzx eax si +
sub eax 0FF10h +
jmp loc_4230E2  +
mov eax edi +
cmp eax edi +
jnz loc_423113  +
push 41h  +
pop eax  +
cmp ax si +
ja loc_4230F6  +
push 5Ah  +
pop eax  +
cmp si ax +
jbe loc_4230FE  +
lea eax [esi-61h] +
cmp ax dx +
ja loc_423111  +
lea eax [esi-61h] +
cmp ax dx +
movzx eax si +
ja loc_42310C  +
sub eax 20h +
add eax 0FFFFFFC9h +
jmp loc_423113  +
mov eax edi +
test eax eax +
jz loc_423123  +
test ebx ebx +
jnz loc_423162  +
push 0Ah  +
pop ebx  +
mov [ebp+arg_24] ebx +
jmp loc_423162  +
lea ecx [ebp+arg_4] +
call sub_42642E  +
movzx eax ax +
cmp eax 78h +
jz loc_42314D  +
cmp eax 58h +
jz loc_42314D  +
test ebx ebx +
jnz loc_423142  +
push 8  +
pop ebx  +
mov [ebp+arg_24] ebx +
push eax  +
lea ecx [ebp+arg_4] +
call sub_426F6C  +
jmp loc_423162  +
test ebx ebx +
jnz loc_423157  +
push 10h  +
pop ebx  +
mov [ebp+arg_24] ebx +
lea ecx [ebp+arg_4] +
call sub_42642E  +
movzx esi ax +
mov eax ebx +
cdq   +
mov ecx edx +
mov [ebp+var_28] eax +
push ecx  +
push eax  +
push edi  +
push edi  +
mov [ebp+var_24] ecx +
call sub_440DE0  +
mov [ebp+var_18] eax +
mov eax edx +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] ebx +
mov [ebp+var_C] eax +
push 30h  +
pop ecx  +
cmp si cx +
jb loc_42331E  +
push 3Ah  +
pop edx  +
cmp si dx +
jb loc_423310  +
mov ecx 0FF10h +
cmp si cx +
jnb loc_423306  +
mov ecx 660h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
mov ecx 6F0h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
mov ecx 966h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
mov ecx 0C66h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
mov ecx 0E50h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
lea ecx [edx+76h] +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
add ecx 50h +
cmp si cx +
jb loc_42331E  +
add edx 50h +
cmp si dx +
jb loc_423310  +
mov ecx 1040h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
mov ecx 17E0h +
cmp si cx +
jb loc_42331E  +
lea edx [ecx+0Ah] +
cmp si dx +
jb loc_423310  +
add ecx 30h +
cmp si cx +
jb loc_42331E  +
add edx 30h +
cmp si dx +
jnb loc_42331E  +
jmp loc_423310  +
mov edx 0FF1Ah +
cmp si dx +
jnb loc_423315  +
movzx edi si +
sub edi ecx +
or ecx 0FFFFFFFFh +
cmp edi ecx +
jnz loc_423359  +
or edi ecx +
push 41h  +
pop eax  +
cmp ax si +
ja loc_42332E  +
push 5Ah  +
pop eax  +
cmp si ax +
jbe loc_42333B  +
push 19h  +
lea eax [esi-61h] +
pop ecx  +
cmp ax cx +
ja loc_42334F  +
jmp loc_42333E  +
push 19h  +
pop ecx  +
lea eax [esi-61h] +
movzx edi si +
cmp ax cx +
ja loc_42334C  +
sub edi 20h +
add edi 0FFFFFFC9h +
mov eax [ebp+var_C] +
or ecx 0FFFFFFFFh +
cmp edi ecx +
jz loc_4233CB  +
cmp edi [ebp+arg_24] +
jnb loc_4233CB  +
mov ecx [ebp+var_4] +
mov ebx [ebp+var_10] +
or ecx 8 +
mov [ebp+var_4] ecx +
cmp ebx eax +
jb loc_423399  +
mov eax [ebp+var_8] +
mov edx [ebp+var_18] +
ja loc_42337A  +
cmp eax edx +
jb loc_423399  +
cmp eax edx +
jnz loc_423391  +
cmp ebx [ebp+var_C] +
jnz loc_423391  +
xor eax eax +
cmp eax [ebp+var_1C] +
jb loc_423399  +
ja loc_423391  +
cmp edi [ebp+var_20] +
jbe loc_423399  +
or ecx 4 +
mov [ebp+var_4] ecx +
jmp loc_4233B5  +
push ebx  +
push [ebp+var_8]  +
push [ebp+var_24]  +
push [ebp+var_28]  +
call sub_41C8C0  +
add eax edi +
mov ebx edx +
mov [ebp+var_8] eax +
adc ebx 0 +
mov [ebp+var_10] ebx +
lea ecx [ebp+arg_4] +
call sub_42642E  +
movzx esi ax +
or edi 0FFFFFFFFh +
mov eax [ebp+var_C] +
jmp loc_423184  +
push esi  +
lea ecx [ebp+arg_4] +
call sub_426F6C  +
mov eax [ebp+var_4] +
pop edi  +
test al 8 +
jnz loc_4233F3  +
push [ebp+var_2C]  +
lea ecx [ebp+arg_4] +
push [ebp+var_30]  +
call sub_42681A  +
xor eax eax +
mov [ebp+var_14] eax +
mov ebx eax +
jmp loc_423437  +
mov ebx [ebp+var_10] +
mov esi [ebp+var_8] +
push ebx  +
push esi  +
push eax  +
call sub_421A65  +
add esp 0Ch +
test al al +
jz loc_42343C  +
call sub_427459  +
mov dword ptr [eax] 22h +
mov eax [ebp+var_4] +
test al 1 +
jnz loc_423423  +
or eax 0FFFFFFFFh +
mov esi eax +
mov ebx eax +
jmp loc_423449  +
test al 2 +
jz loc_423432  +
and [ebp+var_14] 0 +
mov ebx 80000000h +
jmp loc_423437  +
mov ebx 7FFFFFFFh +
mov edx [ebp+var_14] +
jmp loc_42344B  +
test byte ptr [ebp+var_4] 2 +
jz loc_423449  +
neg esi  +
adc ebx 0 +
neg ebx  +
mov edx esi +
cmp [ebp+var_34] 0 +
jz loc_42345B  +
mov eax [ebp+var_40] +
and dword ptr [eax+350h] 0FFFFFFFDh +
xor eax eax +
mov esi [ebp+arg_1C] +
test esi esi +
jz loc_42346E  +
mov ecx [ebp+arg_14] +
or ecx [ebp+arg_18] +
jnz loc_42346E  +
mov [esi] al +
mov eax edx +
mov edx ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+4] 0 +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+4] 0 +
jz loc_425F74  +
or eax 0FFFFFFFFh +
mov edx 0FFFFFh +
retn   +
mov eax 7FFFFFh +
xor edx edx +
retn   +
***
mov edi edi +
add dword ptr [ecx+10h] 1 +
mov edx ecx +
mov edi edi +
mov edi edi +
mov eax [ecx+30h] +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+8] +
mov ecx ebx +
call sub_427014  +
test al al +
jnz loc_426567  +
or eax 0FFFFFFFFh +
jmp loc_4265D9  +
push edi  +
lea edi [esi+18h] +
mov ecx edi +
call sub_426FD7  +
test al al +
jnz loc_426586  +
or eax 0FFFFFFFFh +
jmp loc_4265D8  +
mov ecx esi +
call sub_426737  +
test al al +
jz loc_426591  +
mov ecx edi +
call sub_423A28  +
test al al +
jnz loc_42657B  +
cmp dword ptr [esi+5Ch] 0 +
mov edi [esi+58h] +
jnz loc_4265B9  +
mov ecx ebx +
call sub_426467  +
movzx eax ax +
mov ecx 0FFFFh +
cmp ax cx +
jnz loc_4265B1  +
or edi 0FFFFFFFFh +
push eax  +
mov ecx ebx +
call sub_426FB1  +
mov eax [esi] +
and eax 1 +
or eax 0 +
jz loc_4265D6  +
mov esi [esi+24h] +
test esi esi +
jz loc_4265D6  +
call sub_427459  +
mov [eax] esi +
call sub_427380  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [ecx+48h] +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
call sub_4267B5  +
push [ebp+arg_4]  +
lea eax [ebp-1] +
mov [ebp+var_1] 0 +
push [ebp+arg_0]  +
sub esp 20h +
mov ecx esp +
push eax  +
push dword ptr [esi+3Ch]  +
lea eax [esi+8] +
push dword ptr [esi+38h]  +
push eax  +
push ecx  +
call sub_421AA8  +
add esp 14h +
push dword ptr [esi+50h]  +
call sub_422E79  +
add esp 2Ch +
cmp [ebp+var_1] 0 +
jnz loc_4266E6  +
xor al al +
jmp loc_4266FB  +
cmp byte ptr [esi+30h] 0 +
jz loc_4266F0  +
mov al 1 +
jmp loc_4266FB  +
push 1  +
push edx  +
push eax  +
mov ecx esi +
call sub_4270BE  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_425F2B  +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ecx+8] +
mov edi edi +
mov eax [ecx+8] +
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
movzx ecx word ptr [eax] +
cmp ecx 77h +
jnz loc_426D14  +
add eax 2 +
mov [esi+8] eax +
jmp loc_426D20  +
push ecx  +
mov ecx esi +
call sub_426E86  +
test al al +
jz loc_426D24  +
mov byte ptr [esi+2Ch] 1 +
pop esi  +
retn   +
***
mov edi edi +
mov eax [ecx+28h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_426F3A  +
jmp ds:off_426F40[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_426F2A  +
push 8  +
jmp loc_426F2A  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+8] 0 +
cmp dword ptr [ecx] 0 +
mov eax [ecx+8] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_4271DB  +
push [ebp+arg_0]  +
call sub_41CD46  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_41E790  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_41E790  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_4272E2  +
test edi edi +
jnz loc_4272E2  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_4272E2  +
push [ebp+arg_0]  +
call sub_41CD46  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
call sub_43176B  +
call sub_43176B  +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_42D236  +
test al al +
jnz loc_4281E7  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4282BD  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
or eax 0FFFFFFFFh +
jmp loc_4282D3  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_42829B  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_4282AE  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_42804C  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_4281F3  +
cmp eax 7 +
ja loc_428203  +
jmp ds:off_4282D6[eax*4]  +
mov ecx esi +
call sub_4284A0  +
jmp loc_428293  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_42829B  +
mov ecx esi +
call sub_428426  +
jmp loc_428293  +
mov ecx esi +
call sub_428D46  +
jmp loc_428293  +
mov [esi+28h] ebx +
jmp loc_42829B  +
mov ecx esi +
call sub_428584  +
jmp loc_428293  +
mov ecx esi +
call sub_4285D5  +
jmp loc_428293  +
mov ecx esi +
call sub_4288BA  +
test al al +
jz loc_428203  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_428216  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_4295CF  +
test al al +
jz loc_428203  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_42820B  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_42D236  +
test al al +
jnz loc_42830F  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4283EA  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
or eax 0FFFFFFFFh +
jmp loc_428400  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4283C4  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_4283DB  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_428081  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_42831B  +
cmp eax 7 +
ja loc_42832B  +
jmp ds:off_428406[eax*4]  +
mov ecx esi +
call sub_4284BF  +
jmp loc_4283BC  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4283C4  +
mov ecx esi +
call sub_428463  +
jmp loc_4283BC  +
mov ecx esi +
call sub_428D71  +
jmp loc_4283BC  +
mov [esi+28h] ebx +
jmp loc_4283C4  +
mov ecx esi +
call sub_4285AC  +
jmp loc_4283BC  +
mov ecx esi +
call sub_42873E  +
jmp loc_4283BC  +
mov ecx esi +
call sub_428AE9  +
test al al +
jz loc_42832B  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_42833E  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_4295CF  +
test al al +
jz loc_42832B  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_428333  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_4284DE  +
call sub_428508  +
mov edi edi +
lea edx [ecx+18h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
movzx eax word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_428DC3  +
jmp ds:off_428DC9[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_428DB3  +
push 8  +
jmp loc_428DB3  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_41CDC0  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov eax dword_45BBD8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_42CA34  +
***
mov edi edi +
call sub_41CDC0  +
test esi esi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_42ABE3  +
***
push esi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
call sub_42ADFF  +
add esp 0Ch +
test eax eax +
jnz loc_42AEB5  +
lea eax [esi-1] +
jmp loc_42AEBC  +
mov eax esi +
jg loc_42AEBC  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+0Ch] +
push ebx  +
movzx eax dx +
push esi  +
push edi  +
cmp eax 5Ah +
jle loc_42B49E  +
cmp eax 6Eh +
jg loc_42B214  +
jz loc_42B204  +
cmp eax 65h +
jle loc_42AFD3  +
sub eax 67h +
jz loc_42AF8A  +
sub eax 1 +
jnz loc_42AF05  +
push 62h  +
pop edx  +
push edx  +
pop eax  +
jmp loc_42AED8  +
***
dec eax  +
sub eax 1 +
jz loc_42AF55  +
sub eax 3 +
jnz loc_42B1CE  +
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 0Bh +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
lea eax [ecx+1] +
push eax  +
call sub_42B9BB  +
add esp 14h +
jmp loc_42B988  +
mov eax [ebp+10h] +
mov ecx [eax+1Ch] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 16Dh +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 3  +
jmp loc_42AF44  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_42B1BE  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_42B1BE  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_42AE94  +
add esp 0Ch +
add eax 76Ch +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
push edx  +
jmp loc_42AF48  +
***
jz loc_42B1D5  +
sub eax 61h +
jz loc_42B19D  +
sub eax 1 +
jz loc_42B171  +
sub eax 1 +
jz loc_42B034  +
sub eax 1 +
jnz loc_42B1CE  +
mov eax [ebp+10h] +
cmp dword ptr [eax+0Ch] 1 +
jl loc_42B1BE  +
cmp dword ptr [eax+0Ch] 1Fh +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx cx cl +
movzx ecx cx +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+0Ch]  +
jmp loc_42AF48  +
***
mov ebx [ebp+1Ch] +
mov ecx [ebp+20h] +
cmp ebx offset off_447AA8 +
jnz loc_42B123  +
test cl cl +
jnz loc_42B123  +
mov edi [ebp+18h] +
xor esi esi +
push esi  +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 61h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jnz loc_42B07E  +
call sub_427459  +
mov dword ptr [eax] 16h +
jmp loc_42B1CE  +
push edi  +
push ebx  +
push offset asc_451610  +
call sub_42BAC4  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 62h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_451610  +
call sub_42BAC4  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 65h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_451610  +
call sub_42BAC4  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 54h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_451610  +
call sub_42BAC4  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jnz loc_42B988  +
jmp loc_42B06E  +
***
push ebx  +
push dword ptr [ebp+18h]  +
xor eax eax +
test cl cl +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_42BAF5  +
add esp 18h +
test al al +
jz loc_42B06E  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_451610  +
call sub_42BAC4  +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push dword ptr [ebp+8]  +
call sub_42BAF5  +
add esp 24h +
jmp loc_42B116  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 0Bh +
jg loc_42B1BE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0ECh]  +
call sub_42BAC4  +
add esp 0Ch +
jmp loc_42B988  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 6 +
jg loc_42B1BE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0B4h]  +
jmp loc_42B190  +
***
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
xor al al +
jmp loc_42B98A  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jl loc_42B1BE  +
cmp ecx 1Fh +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 20h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push ecx  +
jmp loc_42AF48  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_446C6C  +
jmp loc_42B190  +
***
cmp eax 77h +
jg loc_42B37F  +
jz loc_42B239  +
sub eax 70h +
jz loc_42B346  +
dec eax  +
sub eax 1 +
jz loc_42B288  +
dec eax  +
sub eax 1 +
jz loc_42B278  +
sub eax 1 +
jnz loc_42B1CE  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 6 +
jg loc_42B1BE  +
test ecx ecx +
jnz loc_42B25D  +
cmp dx 75h +
jnz loc_42B25D  +
push 7  +
pop ecx  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 1  +
jmp loc_42B1FE  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_446C70  +
jmp loc_42B190  +
***
mov esi [ebp+1Ch] +
push dword ptr [ebp+20h]  +
push esi  +
cmp esi offset off_447AA8 +
jnz loc_42B32B  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 49h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_450348  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_450348  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 53h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push edi  +
push ebx  +
push offset asc_451610  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 70h  +
jmp loc_42B10B  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 58h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
jmp loc_42B116  +
***
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_42B1BE  +
cmp eax 17h +
jg loc_42B1BE  +
cmp eax 0Bh +
mov eax [ebp+1Ch] +
jg loc_42B36D  +
mov eax [eax+14Ch] +
jmp loc_42B373  +
mov eax [eax+150h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push eax  +
jmp loc_42B190  +
***
sub eax 78h +
jz loc_42B479  +
sub eax 1 +
jz loc_42B437  +
sub eax 1 +
jnz loc_42B1CE  +
call sub_43527B  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call sub_4348D2  +
pop ecx  +
test eax eax +
jnz loc_42B1BE  +
mov eax [ebp+10h] +
cmp [eax+20h] esi +
jz loc_42B3DE  +
lea eax [ebp-8] +
mov [ebp-8] esi +
push eax  +
call sub_4348A6  +
pop ecx  +
test eax eax +
jnz loc_42B1BE  +
mov ecx [ebp-4] +
add ecx [ebp-8] +
mov [ebp-4] ecx +
jmp loc_42B3E1  +
mov ecx [ebp-4] +
mov eax ecx +
cdq   +
xor eax edx +
sub eax edx +
cdq   +
push 3Ch  +
pop esi  +
idiv  esi +
cdq   +
idiv  esi +
test ecx ecx +
mov ecx offset asc_446C74 +
mov edi edx +
mov esi eax +
js loc_42B403  +
mov ecx offset unk_444674 +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push ecx  +
call sub_42BAC4  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
call sub_42B9BB  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push edi  +
call sub_42B9BB  +
add esp 34h +
jmp loc_42B988  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_42B1BE  +
cmp ecx 1FA3h +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_42AFC7  +
***
push dword ptr [ebp+1Ch]  +
xor eax eax +
push dword ptr [ebp+18h]  +
cmp [ebp+20h] al +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_42BAF5  +
add esp 18h +
jmp loc_42B116  +
***
jz loc_42B91F  +
cmp eax 4Dh +
jg loc_42B748  +
jz loc_42B732  +
cmp eax 44h +
jg loc_42B5FF  +
jz loc_42B592  +
sub eax 25h +
jz loc_42B582  +
sub eax 1Ch +
jz loc_42B556  +
sub eax 1 +
jz loc_42B52A  +
sub eax 1 +
jnz loc_42B1CE  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_42B1BE  +
cmp ecx 1FA3h +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
cdq   +
push 2  +
push 64h  +
pop ecx  +
idiv  ecx +
jmp loc_42AF47  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 0Bh +
jg loc_42B1BE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+11Ch]  +
jmp loc_42B190  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 6 +
jg loc_42B1BE  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0D0h]  +
jmp loc_42B190  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_446C78  +
jmp loc_42B190  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
mov ebx offset asc_446C68 +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 79h  +
jmp loc_42B10B  +
***
sub eax 46h +
jz loc_42B6C5  +
sub eax 1 +
jz loc_42B683  +
sub eax 1 +
jz loc_42B65C  +
sub eax 1 +
jnz loc_42B1CE  +
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_42B1BE  +
cmp eax 17h +
jg loc_42B1BE  +
push 0Ch  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_42B63E  +
mov edx ecx +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_42AFCD  +
***
mov eax [ebp+10h] +
mov ecx [eax+8] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 17h +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
jmp loc_42B1F0  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_42B1BE  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_42B1BE  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_42AE94  +
add esp 0Ch +
add eax 76Ch +
jmp loc_42AF47  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
mov ebx offset unk_444674 +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
jmp loc_42B10B  +
***
mov eax [ebp+10h] +
mov ecx [eax+4] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 3Bh +
jmp loc_42B66D  +
***
push 7  +
sub eax 52h +
pop edi  +
cmp eax edi +
ja loc_42B1CE  +
jmp ds:off_42B99B[eax*4]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jz loc_42B06E  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_450348  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Dh  +
jmp loc_42B10B  +
***
mov eax [ebp+10h] +
mov ecx [eax] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 3Ch +
jmp loc_42B66D  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 1Ch +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
mov ebx offset asc_450348 +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_42AEBF  +
add esp 28h +
test al al +
jz loc_42B06E  +
push esi  +
push edi  +
push ebx  +
call sub_42BAC4  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 53h  +
jmp loc_42B10B  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_42B1BE  +
cmp ecx 6 +
jg loc_42B1BE  +
cmp dx 57h +
jnz loc_42B850  +
test ecx ecx +
jnz loc_42B84F  +
push 6  +
pop ecx  +
jmp loc_42B850  +
dec ecx  +
mov eax [eax+1Ch] +
test eax eax +
js loc_42B1BE  +
cmp eax 16Dh +
jg loc_42B1BE  +
xor esi esi +
cmp eax ecx +
jl loc_42B876  +
cdq   +
idiv  edi +
mov esi eax +
cmp edx ecx +
jl loc_42B876  +
inc esi  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx ax cl +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
jmp loc_42AF48  +
***
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+10h] +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_42ADB1  +
add esp 0Ch +
jmp loc_42AF47  +
***
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
jmp loc_42B48E  +
***
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_42B1BE  +
cmp ecx 1FA3h +
jg loc_42B1BE  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 4  +
jmp loc_42AF47  +
***
call sub_43527B  +
xor esi esi +
mov [ebp-8] esi +
call sub_434874  +
mov ecx [ebp+10h] +
xor edx edx +
push dword ptr [ebp+8]  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
cmp [ecx+20h] esi +
push 0FFFFFFFFh  +
setnz dl  +
mov eax [eax+edx*4] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp-8] +
push dword ptr [ebx]  +
push eax  +
call sub_435856  +
add esp 18h +
test eax eax +
jz loc_42B966  +
cmp eax 16h +
jz loc_42B991  +
cmp eax 22h +
jz loc_42B991  +
cmp eax 50h +
jnz loc_42B975  +
mov eax [edi] +
add eax eax +
add [ebx] eax +
mov [edi] esi +
jmp loc_42B988  +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
sub eax ecx +
add [edi] eax +
lea eax ds:0FFFFFFFEh[ecx*2] +
add [ebx] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_4273AD  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
push [ebp+lpNewFileName]  +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_42C62B  +
call ds:GetLastError  +
push eax  +
call sub_427423  +
pop ecx  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
retn   +
***
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
call sub_4316E7  +
mov ecx [eax+4Ch] +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_431836  +
mov eax [ebp+var_4] +
pop ecx  +
pop ecx  +
mov eax [eax+4] +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
mov edi edi +
call sub_43785F  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
jnz loc_42D24E  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
xor al al +
retn   +
mov al 1 +
retn   +
***
jmp sub_437B99  +
***
cmp dword_45C5E4 0 +
jz loc_42D2DB  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_42D2D0  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_42D2DB  +
jmp loc_437B80  +
***
sub esp 14h +
fxch  st(1) +
fstp  qword ptr [esp] +
fst  qword ptr [esp+8] +
mov eax [esp+0Ch] +
call sub_42D2FD  +
add esp 14h +
retn   +
***
mov ecx eax +
fld  st +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_42D53D  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
test eax eax +
jnz loc_42D53D  +
push esi  +
call sub_427459  +
mov esi eax +
call ds:GetLastError  +
push eax  +
call sub_4273E0  +
pop ecx  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_45BB04 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_42D5CC  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_42D56C  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_42D57F  +
cmp byte ptr [ecx] 0 +
jz loc_42D57F  +
inc ecx  +
cmp ecx edi +
jnz loc_42D575  +
sub ecx esi +
cmp ecx edx +
jnz loc_42D660  +
mov edi eax +
add ecx esi +
sub edi edx +
mov eax edi +
and eax 1Fh +
sub edi eax +
push edi  +
leave   +
add edi ecx +
jmp loc_42D5AD  +
cmp ecx edi +
jnz near ptr word_42D59E  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_42D5BE  +
cmp byte ptr [ecx] 0 +
jz loc_42D5C2  +
inc ecx  +
cmp ecx eax +
jnz loc_42D5B8  +
sub ecx esi +
cmp eax 1 +
jl loc_42D646  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_42D5ED  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_42D600  +
cmp byte ptr [ecx] 0 +
jz loc_42D600  +
inc ecx  +
cmp ecx edi +
jnz loc_42D5F6  +
sub ecx esi +
cmp ecx edx +
jnz loc_42D660  +
mov edi eax +
add ecx esi +
sub edi edx +
pxor xmm1 xmm1 +
mov eax edi +
and eax 0Fh +
sub edi eax +
add edi ecx +
jmp loc_42D62D  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_42D631  +
add ecx 10h +
cmp ecx edi +
jnz loc_42D61B  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_42D63E  +
cmp byte ptr [ecx] 0 +
jz loc_42D642  +
inc ecx  +
cmp ecx eax +
jnz loc_42D638  +
sub ecx esi +
jmp loc_42D660  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_42D65E  +
cmp byte ptr [ecx] 0 +
jz loc_42D65E  +
inc ecx  +
cmp ecx eax +
jnz loc_42D654  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_45BB04 +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_42D73B  +
test cl 1 +
jz loc_42D6AB  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_42D6C6  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_42D6E2  +
cmp [edx] di +
jz loc_42D6E2  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_42D6D5  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_42D815  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_45BF80 +
test eax eax +
jz loc_42D9BC  +
push 0  +
push [ebp+arg_0]  +
call sub_42D984  +
pop ecx  +
pop ecx  +
mov ecx eax +
jmp loc_42D9CA  +
mov ecx [ebp+arg_0] +
lea eax [ecx-41h] +
cmp eax 19h +
ja loc_42D9CA  +
add ecx 20h +
mov eax ecx +
pop ebp  +
retn   +
***
mov edi edi +
call sub_41CDC0  +
pop ecx  +
call sub_441190  +
mov edi edi +
mov edi edi +
call sub_441190  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll_0  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_42DE00  +
push esi  +
push offset ProcName  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_42DDFF  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_4433C0  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_42DE0F  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_42DC59  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_45BF4C +
cmp dword_45BF4C 0 +
cmp dword_45BF50 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42E508  +
call sub_41CDC0  +
mov eax [ebp+10h] +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4347FA  +
mov [esp+4+var_4] offset unk_45BF68 +
call sub_42E583  +
mov al 1 +
retn   +
***
call sub_439FF9  +
call sub_43A07C  +
mov edi edi +
mov eax dword_459094 +
mov ecx eax +
xor eax dword_45BF78 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
mov edi edi +
mov edi edi +
mov eax dword_45C390 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
call sub_41CDC0  +
mov eax [ebp+10h] +
call sub_41CDC0  +
mov eax [ebp+10h] +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_4474B0 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
mov dword ptr [eax+48h] offset unk_4597F0 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 5  +
call sub_431531  +
lea eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push 4  +
call sub_4314E1  +
add esp 10h +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_459234 eax +
mov eax dword_459234 +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_43CF8E  +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
push esi  +
xor esi esi +
mov eax dword_45BF90[esi] +
test eax eax +
jz loc_431AA0  +
push eax  +
call sub_43A21B  +
and dword_45BF90[esi] 0 +
pop ecx  +
add esi 4 +
cmp esi 200h +
jb loc_431A88  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_459094 +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
shr eax 0Dh +
test al 1 +
jz loc_4334F4  +
mov eax [edi] +
shr eax 6 +
test al 1 +
jz loc_4334F4  +
push dword ptr [esi+4]  +
call sub_42D505  +
pop ecx  +
mov eax 0FFFFFEBFh +
and [edi] eax +
xor eax eax +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov ecx [ebp+10h] +
mov edi edi +
push offset aComparestringe  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_433776  +
mov eax dword_459094 +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4347FA  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
lea esi [ebp+var_10] +
push 2  +
pop ecx  +
push 20h  +
stos   +
stos   +
mov edi ebx +
movs   +
movs   +
movs   +
mov eax dword_45BF88 +
mov esi [ebp+arg_4] +
mov [ebx+4] eax +
pop edi  +
jmp loc_435349  +
add esi ecx +
cmp [esi] di +
jz loc_435347  +
movzx eax word ptr [esi] +
xor edx edx +
cmp eax 61h +
jz loc_435379  +
cmp eax 72h +
jz loc_43536E  +
cmp eax 77h +
jnz loc_435541  +
mov dword ptr [ebx] 301h +
jmp loc_43537F  +
mov [ebx] edx +
mov dword ptr [ebx+4] 1 +
jmp loc_435382  +
mov dword ptr [ebx] 109h +
mov [ebx+4] ecx +
add esi ecx +
mov [ebp-3] dl +
xor ch ch +
mov [ebp+var_4] dl +
mov [ebp+var_2] dl +
mov cl 1 +
mov [ebp+var_1] ch +
movzx eax word ptr [esi] +
test ax ax +
jz loc_43547D  +
cmp eax 53h +
jg loc_435415  +
jz loc_435403  +
sub eax edi +
jz loc_435466  +
sub eax 0Bh +
jz loc_4353F6  +
sub eax 1 +
jz loc_4353ED  +
sub eax 18h +
jz loc_4353E5  +
sub eax 0Ah +
jz loc_4353D8  +
sub eax 4 +
jnz loc_435541  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_4353F2  +
or dword ptr [ebx] 10h +
jmp loc_43540C  +
or dword ptr [ebx] 80h +
mov cl 1 +
jmp loc_435466  +
push ebx  +
call sub_4355DF  +
jmp loc_435460  +
mov ch 1 +
mov [ebp+var_1] ch +
xor cl cl +
jmp loc_435469  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_43567D  +
pop ecx  +
jmp loc_435460  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_4353F2  +
or [ebx] edi +
mov dl 1 +
mov [ebp+var_2] dl +
mov cl dl +
jmp loc_435469  +
sub eax 54h +
jz loc_43545A  +
sub eax 0Eh +
jz loc_435452  +
sub eax 1 +
jz loc_435446  +
sub eax 0Bh +
jz loc_43543A  +
sub eax 6 +
jnz loc_435541  +
push ebx  +
call sub_4356B2  +
jmp loc_435460  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_43565B  +
jmp loc_435400  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_435639  +
jmp loc_435400  +
push ebx  +
call sub_435619  +
jmp loc_435460  +
push ebx  +
call sub_4355FA  +
mov dl [ebp+var_2] +
pop ecx  +
mov cl al +
mov ch [ebp+var_1] +
xor eax eax +
test cl cl +
setnz al  +
lea esi [esi+eax*2] +
test cl cl +
jnz loc_435394  +
jmp loc_435480  +
mov ch [ebp+var_1] +
test ch ch +
jz loc_435487  +
add esi 2 +
cmp [esi] di +
jz loc_435484  +
test ch ch +
jnz loc_4354A4  +
xor eax eax +
cmp [esi] ax +
jnz loc_435541  +
mov byte ptr [ebx+8] 1 +
jmp loc_435551  +
push 3  +
push offset aCcs  +
push esi  +
call sub_43B17A  +
add esp 0Ch +
test eax eax +
jnz loc_435541  +
add esi 6 +
jmp loc_4354C4  +
add esi 2 +
cmp [esi] di +
jz loc_4354C1  +
cmp word ptr [esi] 3Dh +
jnz loc_435541  +
add esi 2 +
cmp [esi] di +
jz loc_4354CF  +
push 5  +
push offset aUtf8  +
push esi  +
call sub_43EA5C  +
add esp 0Ch +
test eax eax +
jnz loc_4354F6  +
add esi 0Ah +
or dword ptr [ebx] 40000h +
jmp loc_435537  +
push 8  +
push offset aUtf16leunicode  +
push esi  +
call sub_43EA5C  +
add esp 0Ch +
test eax eax +
jnz loc_435515  +
add esi 10h +
or dword ptr [ebx] 20000h +
jmp loc_435537  +
push 7  +
push (offset aUtf16leunicode+10h)  +
push esi  +
call sub_43EA5C  +
add esp 0Ch +
test eax eax +
jnz loc_435541  +
add esi 0Eh +
or dword ptr [ebx] 10000h +
jmp loc_435537  +
add esi 2 +
cmp [esi] di +
jz loc_435534  +
jmp loc_435490  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push 3  +
call sub_4377CD  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4316E7  +
call sub_441190  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_437A88  +
push 3  +
call sub_42C811  +
pop ecx  +
retn   +
***
mov edi edi +
mov dword_45C5E4 eax +
xor eax eax +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_448440 +
movlpd xmm2 oword ptr ds:oword_448450 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A270[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A270[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44A680[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_437EE7  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_448490+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_448440 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_44AE90[eax*4] +
mulsd xmm5 ds:qword_44AE90[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_44B2A0[eax*4] +
orpd xmm4 oword ptr ds:oword_448450 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_448490+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_4484A0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_44BAB0[eax*4] +
mulsd xmm2 ds:qword_44BAB0[eax*4] +
addpd xmm6 oword ptr ds:oword_44C2C0[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_448490+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_438258  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_43861A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448490+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_44D2D0 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_44D2E0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_43839E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_448430 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_448430 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D2F0[eax] +
movapd xmm6 oword ptr ds:oword_448470 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448490 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_448480 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_448460 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_437FF0  +
or eax ecx +
cmp eax 0 +
jz loc_438315  +
cmp edx 0 +
jge loc_43802F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_438118  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_438211  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_448460 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_4484C0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_438034  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_448440 +
movlpd xmm2 oword ptr ds:oword_448450 +
jmp loc_437C16  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_43828D  +
ja loc_4381FF  +
cmp edx 0 +
ja loc_4381FF  +
jmp loc_43828D  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_448440 +
movlpd xmm2 oword ptr ds:oword_448450 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_4380BA  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_448460 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_44A270[eax*4] +
movlpd xmm5 oword ptr ds:oword_44A270[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_44A680[eax*4] +
mov edx 43E7Fh +
jmp loc_437C16  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_438068  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_438107  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_448450 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_43836E  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_4381B9  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_448440 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_4381FF  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_4381E3  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_4381C7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_448460 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_4381C7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4381C0  +
fld  qword ptr ds:oword_4484C0 +
retn   +
fld  ds:dbl_4484B8 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4382FF  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4382FF  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_43836E  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_4380BA  +
movlpd xmm1 oword ptr ds:oword_4484A0+8 +
movlpd xmm0 oword ptr ds:oword_4484E0 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_43836E  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_43828D  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_43836B  +
cmp edx 0BFF00000h +
jnz loc_43828D  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_448440 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_438306  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_43836B  +
cmp eax 0 +
jz loc_4382EB  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_4382FF  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_4382FF  +
fldz   +
retn   +
fld  ds:dbl_4484B0 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_43836E  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_448450 +
mov edx 1Ah +
cmp eax 0 +
jz loc_43836E  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_43836E  +
jb loc_43835A  +
cmp ecx 0 +
ja loc_43836E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_43F7A7  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_4383CB  +
cmp eax 40000h +
jnb loc_4385EA  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_4383F1  +
cmp eax 0FFFC0200h +
jle loc_4385C7  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_448430 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_448430 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_44D2F0[eax] +
movapd xmm6 oword ptr ds:oword_448470 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_448490 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_448480 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_43857D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_43836E  +
mov edx 19h +
cmp eax 0 +
jz loc_43836E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_43836E  +
mov edx 19h +
cmp eax 0 +
jz loc_43836E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4484D0+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_43836E  +
mov edx 18h +
cmp ecx 0 +
jz loc_438609  +
movlpd xmm0 oword ptr ds:oword_4484C0+8 +
mulsd xmm0 qword ptr ds:oword_4484D0 +
jmp loc_43836E  +
movlpd xmm0 oword ptr ds:oword_4484D0 +
mulsd xmm0 xmm0 +
jmp loc_43836E  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_437D68  +
cmp eax 80000000h +
jb loc_43866E  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_4385C7  +
jmp loc_4385EA  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_4387EE  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_4386D4  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_4386DB  +
fscale   +
or ch ch +
jz loc_4386E1  +
fchs   +
jmp loc_438998  +
***
call sub_438831  +
or eax eax +
jz loc_438703  +
xor ch ch +
cmp eax 2 +
jz loc_4386F8  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_4386AD  +
***
jmp loc_4389B8  +
***
jmp loc_438A53  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_4484F0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_438703  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_4484FA +
retn   +
***
or cl cl +
jnz loc_43879B  +
retn   +
***
fldlg2   +
jmp loc_43874F  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_438703  +
fyl2x   +
retn   +
***
jmp loc_4389B8  +
***
call sub_438831  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_438778  +
fldz   +
cmp eax 1 +
jnz locret_438777  +
or ch ch +
jz locret_438777  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_4484F0 +
cmp eax 1 +
jnz locret_438777  +
or ch ch +
jz locret_438777  +
fchs   +
jmp locret_438777  +
***
fstp  st +
***
jmp loc_4389A6  +
***
fstp  st +
jmp loc_438A55  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_4387C3  +
fstp  st +
fld  ds:tbyte_4484F0 +
or ch ch +
jz locret_4387C2  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_4389A6  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_438857  +
fld  st +
fmul  ds:dbl_448522 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_43885E  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_438856  +
mov eax 2 +
jmp locret_438856  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_438CF6  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_438896  +
jmp sub_438A66  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4388B7  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4388BB  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_44857E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_43891E  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_438922  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_44857E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_438A66  +
***
fxch  st(1) +
fstp  st +
retn   +
***
call sub_438A66  +
jmp loc_43899A  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_4389B7  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4389DC  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_44856E +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_438A0A  +
mov byte ptr [ebp-90h] 0 +
jmp loc_438A11  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_438A49  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_438A49  +
mov byte ptr [ebp-90h] 0 +
jmp loc_438A50  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_448564 +
or ch ch +
jz loc_438A80  +
fchs   +
or cl cl +
jz locret_438A8C  +
fld  ds:dbl_448576 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_438A93  +
fchs   +
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_43F9BF  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_438AF1  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_438B99  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp word ptr [esp+0] 27Fh +
jz loc_438BA9  +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
mov ax [esp-6+arg_0] +
cmp ax 27Fh +
jz loc_438BD3  +
and ax 20h +
jz loc_438BD0  +
fstsw  ax +
and ax 20h +
jz loc_438BD0  +
mov eax 8 +
call sub_438AB7  +
pop edx  +
retn   +
fldcw  [esp-6+arg_0] +
pop edx  +
retn   +
***
sub esp 8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_438E6C  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte_45C37C 0 +
call sub_41CDC0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_439C72  +
xor edi edi +
jmp loc_439CA9  +
push ebx  +
push esi  +
call sub_439BA4  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax] +
push ebx  +
call sub_42D110  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_439C99  +
push ebx  +
push esi  +
push edi  +
call loc_41EED0  +
add esp 0Ch +
push 0  +
call sub_42D505  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_43A0B8  +
add esi 0FFFFFFFCh +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_43A0AC  +
push 0  +
mov ecx edi +
call ds:off_4433C0  +
call edi  +
pop ecx  +
sub esi 8 +
lea eax [esi+4] +
cmp eax [ebp+arg_0] +
jnz loc_43A099  +
pop edi  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_43AAEF  +
mov eax [esi] +
cmp eax off_4591C8 +
jz loc_43AAA7  +
push eax  +
call sub_42D505  +
pop ecx  +
mov eax [esi+4] +
cmp eax off_4591CC +
jz loc_43AAB9  +
push eax  +
call sub_42D505  +
pop ecx  +
mov eax [esi+8] +
cmp eax off_4591D0 +
jz loc_43AACB  +
push eax  +
call sub_42D505  +
pop ecx  +
mov eax [esi+30h] +
cmp eax off_4591F8 +
jz loc_43AADD  +
push eax  +
call sub_42D505  +
pop ecx  +
mov eax [esi+34h] +
cmp eax off_4591FC +
jz loc_43AAEF  +
push eax  +
call sub_42D505  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
mov edi eax +
mov [ebp-8] eax +
mov esi offset off_4591C8 +
jmp loc_43AC7D  +
mov eax esi +
jmp loc_43ACC3  +
push dword ptr [ebp-4]  +
call sub_42D505  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_43ACC3  +
push 4  +
call sub_42D110  +
mov esi eax +
push edi  +
mov [ebp-10h] esi +
call sub_42D505  +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_43AC36  +
push dword ptr [ebp-4]  +
mov [esi] edi +
lea eax [ebp-18h] +
mov edi [ebx+0B0h] +
push 0Eh  +
push edi  +
push 1  +
push eax  +
call sub_43723C  +
mov ecx [ebp-4] +
mov esi eax +
add ecx 4 +
lea eax [ebp-18h] +
push ecx  +
push 0Fh  +
push edi  +
push 1  +
push eax  +
call sub_43723C  +
or esi eax +
mov eax [ebp-4] +
add eax 8 +
push eax  +
push 10h  +
push edi  +
mov [ebp-0Ch] eax +
lea eax [ebp-18h] +
push 1  +
push eax  +
call sub_43723C  +
or esi eax +
mov eax [ebp-4] +
add eax 30h +
push eax  +
push 0Eh  +
push edi  +
lea eax [ebp-18h] +
push 2  +
push eax  +
call sub_43723C  +
add esp 50h +
or esi eax +
mov eax [ebp-4] +
add eax 34h +
push eax  +
push 0Fh  +
push edi  +
lea eax [ebp-18h] +
push 2  +
push eax  +
call sub_43723C  +
add esp 14h +
or eax esi +
jz loc_43AC4E  +
push dword ptr [ebp-4]  +
call sub_43AA89  +
or dword ptr [ebp-0Ch] 0FFFFFFFFh +
pop ecx  +
push dword ptr [ebp-4]  +
call sub_42D505  +
mov ecx [ebp-8] +
push ecx  +
call sub_42D505  +
mov eax [ebp-0Ch] +
pop ecx  +
pop ecx  +
jmp loc_43ACC3  +
mov edx [ebp-0Ch] +
mov edx [edx] +
jmp loc_43AC64  +
mov al [edx] +
cmp al 30h +
jl loc_43ACCA  +
cmp al 39h +
jg loc_43ACCA  +
sub al 30h +
mov [edx] al +
inc edx  +
cmp byte ptr [edx] 0 +
jnz loc_43AC55  +
mov edi [ebp-10h] +
mov esi [ebp-4] +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
mov [ecx] eax +
test edi edi +
jz loc_43AC7D  +
mov [edi] eax +
mov eax [ebx+80h] +
test eax eax +
jz loc_43AC8A  +
dec dword ptr [eax]  +
mov ecx [ebx+7Ch] +
test ecx ecx +
jz loc_43ACAF  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
jnz loc_43ACAF  +
push dword ptr [ebx+7Ch]  +
call sub_42D505  +
push dword ptr [ebx+88h]  +
call sub_42D505  +
pop ecx  +
pop ecx  +
mov eax [ebp-8] +
mov [ebx+7Ch] eax +
xor eax eax +
mov [ebx+80h] edi +
mov [ebx+88h] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp al 3Bh +
jnz loc_43AC63  +
mov esi edx +
mov al [esi+1] +
mov [esi] al +
lea esi [esi+1] +
cmp byte ptr [esi] 0 +
jnz loc_43ACD0  +
jmp loc_43AC64  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41CDC0  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_42E57E  +
mov edi eax +
test edi edi +
jz loc_43E889  +
cmp [ebp+arg_0] 0 +
jz loc_43E889  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_43E847  +
sub esi ecx +
jmp loc_43E884  +
mov edx [edi] +
mov ecx edx +
lea eax [ecx+1] +
mov [ebp+var_4] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43E85C  +
sub ecx [ebp+var_4] +
cmp ecx esi +
jbe loc_43E881  +
cmp byte ptr [edx+esi] 3Dh +
jnz loc_43E881  +
push esi  +
push [ebp+arg_0]  +
push edx  +
call sub_43FFAF  +
add esp 0Ch +
test eax eax +
jz loc_43E891  +
add edi 4 +
cmp dword ptr [edi] 0 +
jnz loc_43E852  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_43E88B  +
***
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_43E898  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_8] esi +
jz loc_43EC0C  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_43EB4B  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
mov eax 7FFFFFFFh +
jmp loc_43EC0E  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_43EB31  +
push [ebp+arg_C]  +
lea ecx [ebp+var_14] +
call sub_423979  +
mov eax [ebp+var_10] +
cmp [eax+0A8h] esi +
jnz loc_43EBBB  +
mov ecx [ebp+arg_8] +
sub ebx edi +
push 41h  +
pop edx  +
push 5Ah  +
pop esi  +
mov [ebp+var_4] esi +
jmp loc_43EB7B  +
push 5Ah  +
pop esi  +
movzx eax word ptr [ebx+edi] +
cmp ax dx +
jb loc_43EB91  +
cmp ax si +
ja loc_43EB91  +
add eax 20h +
movzx esi ax +
jmp loc_43EB93  +
mov esi eax +
movzx eax word ptr [edi] +
cmp ax dx +
jb loc_43EBA7  +
cmp ax word ptr [ebp+var_4] +
ja loc_43EBA7  +
add eax 20h +
movzx eax ax +
add edi 2 +
sub ecx 1 +
jz loc_43EBF4  +
test si si +
jz loc_43EBF4  +
cmp si ax +
jz loc_43EB78  +
jmp loc_43EBF4  +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [ebx] +
push eax  +
call sub_43F6DE  +
movzx esi ax +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [edi] +
push eax  +
call sub_43F6DE  +
add esp 10h +
movzx eax ax +
sub [ebp+arg_8] 1 +
lea ebx [ebx+2] +
lea edi [edi+2] +
jz loc_43EBF4  +
test si si +
jz loc_43EBF4  +
cmp si ax +
jz loc_43EBBB  +
movzx eax ax +
movzx esi si +
sub esi eax +
cmp [ebp+var_8] 0 +
jz loc_43EC0C  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
mov ebx [esp+14h] +
test ebx 0FFFFFFFFh +
jz loc_43EC86  +
sub ecx edx +
test edx 3 +
jz loc_43EC57  +
movzx eax byte ptr [edx+ecx] +
cmp al [edx] +
jnz loc_43EC90  +
test eax eax +
jz loc_43EC86  +
inc edx  +
sub ebx 1 +
jbe loc_43EC86  +
test dl 3 +
jnz loc_43EC40  +
lea eax [edx+ecx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_43EC40  +
mov eax [edx+ecx] +
cmp eax [edx] +
jnz loc_43EC40  +
sub ebx 4 +
jbe loc_43EC86  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_43EC57  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
jmp loc_43EC90  +
sbb eax eax +
or eax 1 +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
call sub_41CDC0  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_43FB67  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_43FB33  +
jmp loc_43FB10  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_4433C0  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_43FB27  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_43FB10  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_43FB5C  +
test eax eax +
jz loc_43FB5C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_43FB41  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_43FB03  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_43FBB6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_43FBB5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_43FBA0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_459094 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ebp+var_104] ecx +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_100] esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_FC] edi +
test ecx ecx +
jnz loc_43FC1D  +
test edx edx +
jz loc_43FC1D  +
call sub_427459  +
mov dword ptr [eax] 16h +
call sub_427380  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_43FBFD  +
test esi esi +
jz loc_43FBFD  +
mov [ebp+var_108] 0 +
cmp edx 2 +
jb loc_43FF4A  +
dec edx  +
imul edx edi +
push ebx  +
add edx ecx +
mov [ebp+var_F8] edx +
mov eax edx +
xor edx edx +
sub eax ecx +
div  edi +
lea ebx [eax+1] +
cmp ebx 8 +
ja loc_43FC6B  +
push esi  +
push edi  +
push [ebp+var_F8]  +
push ecx  +
call sub_43FAE0  +
add esp 10h +
jmp loc_43FF22  +
shr ebx 1 +
imul ebx edi +
add ebx ecx +
push ebx  +
push ecx  +
mov ecx esi +
mov [ebp+var_110] ebx +
call ds:off_4433C0  +
call esi  +
add esp 8 +
test eax eax +
jle loc_43FC9B  +
push edi  +
push ebx  +
push [ebp+var_104]  +
call sub_43FB80  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push [ebp+var_104]  +
call ds:off_4433C0  +
call esi  +
add esp 8 +
test eax eax +
jle loc_43FCCD  +
push edi  +
push [ebp+var_F8]  +
push [ebp+var_104]  +
call sub_43FB80  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push ebx  +
call ds:off_4433C0  +
call esi  +
add esp 8 +
test eax eax +
jle loc_43FCF5  +
push edi  +
push [ebp+var_F8]  +
push ebx  +
call sub_43FB80  +
add esp 0Ch +
mov eax [ebp+var_F8] +
mov edi eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_FC] +
mov [ebp+var_114] eax +
nop   +
cmp ebx esi +
jbe loc_43FD4B  +
add esi edx +
mov [ebp+var_10C] esi +
cmp esi ebx +
jnb loc_43FD45  +
mov ecx [ebp+var_100] +
push ebx  +
push esi  +
call ds:off_4433C0  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jle loc_43FD14  +
cmp ebx esi +
ja loc_43FD82  +
mov eax [ebp+var_F8] +
mov edi [ebp+var_100] +
add esi edx +
cmp esi eax +
ja loc_43FD76  +
push ebx  +
push esi  +
mov ecx edi +
call ds:off_4433C0  +
call edi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jle loc_43FD51  +
mov edi [ebp+var_114] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_100] +
jmp loc_43FD90  +
mov edx [ebp+var_FC] +
sub edi edx +
cmp edi ebx +
jbe loc_43FDB5  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_4433C0  +
call esi  +
add esp 8 +
test eax eax +
jg loc_43FD90  +
mov edx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_114] edi +
cmp edi esi +
jb loc_43FE23  +
mov [ebp+var_118] edx +
mov [ebp+var_11C] edi +
cmp esi edi +
jz loc_43FE08  +
mov ebx esi +
mov edx edi +
mov esi [ebp+var_118] +
sub ebx edi +
mov al [edx] +
lea edx [edx+1] +
mov cl [ebx+edx-1] +
mov [ebx+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_43FDE1  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_110] +
mov edx [ebp+var_FC] +
mov eax [ebp+var_F8] +
cmp ebx edi +
jnz loc_43FD10  +
mov ebx esi +
mov [ebp+var_110] ebx +
jmp loc_43FD10  +
add edi edx +
cmp ebx edi +
jnb loc_43FE5B  +
lea esp [esp+0] +
sub edi edx +
cmp edi ebx +
jbe loc_43FE5B  +
mov ecx [ebp+var_100] +
push ebx  +
push edi  +
call ds:off_4433C0  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_43FE30  +
cmp ebx edi +
jb loc_43FE8A  +
mov esi [ebp+var_100] +
sub edi edx +
cmp edi [ebp+var_104] +
jbe loc_43FE84  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_4433C0  +
call esi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_43FE61  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov eax edi +
mov ebx [ebp+var_104] +
mov ecx edx +
sub ecx esi +
sub eax ebx +
cmp eax ecx +
jl loc_43FEDB  +
cmp ebx edi +
jnb loc_43FEBE  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] ebx +
mov [ebp+eax*4+var_7C] edi +
inc eax  +
mov [ebp+var_108] eax +
mov edi [ebp+var_FC] +
cmp esi edx +
jnb loc_43FF14  +
mov ecx esi +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
jmp loc_43FC45  +
cmp esi edx +
jnb loc_43FEF7  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] esi +
mov [ebp+eax*4+var_7C] edx +
inc eax  +
mov [ebp+var_108] eax +
mov ecx [ebp+var_104] +
mov esi [ebp+var_100] +
cmp ecx edi +
jnb loc_43FF1C  +
mov edx edi +
mov edi [ebp+var_FC] +
jmp loc_43FC3F  +
mov esi [ebp+var_100] +
jmp loc_43FF22  +
mov edi [ebp+var_FC] +
mov eax [ebp+var_108] +
sub eax 1 +
mov [ebp+var_108] eax +
js loc_43FF49  +
mov ecx [ebp+eax*4+var_F4] +
mov edx [ebp+eax*4+var_7C] +
mov [ebp+var_104] ecx +
jmp loc_43FC3F  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41BEC5  +
mov esp ebp +
pop ebp  +
retn   +
***
add edx 1 +
bts [esp] eax +
jmp loc_43FF74  +
***
call sub_439859  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_4400A2  +
pop ecx  +
test eax eax +
jz loc_44012A  +
xor eax eax +
inc eax  +
jmp loc_440153  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_4400BF  +
pop ecx  +
test eax eax +
jnz loc_440125  +
call sub_43C872  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_45C5E4 0 +
jz loc_4401EF  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_440194  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_4401EF  +
jmp loc_440948  +
***
cmp dword_45C5E4 0 +
jz loc_4401DB  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4401D0  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_4401DB  +
jmp sub_440930  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_438B88  +
call sub_4401F8  +
add esp 0Ch +
retn   +
***
jz loc_44024B  +
cmp dword_45C5E4 0 +
xor eax eax +
mov eax hObject +
cmp eax 0FFFFFFFFh +
jz locret_440402  +
cmp eax 0FFFFFFFEh +
jz locret_440402  +
push eax  +
call ds:CloseHandle  +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_44094E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_44DB60 +
movapd xmm2 oword ptr ds:oword_44DB70 +
movapd xmm3 oword ptr ds:oword_44DBD0 +
movapd xmm4 oword ptr ds:oword_44DB80 +
movapd xmm6 oword ptr ds:oword_44DB90 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_44E070[eax] +
movapd xmm7 oword ptr ds:oword_44DC60[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_440AA6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_44DC20 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_44DC30 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_44DC40 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_44DBA0 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_44DBB0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_44DC50 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_44DBE0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_440B0B  +
cmp ecx 0FFFFFFFFh +
jz loc_440B26  +
cmp ecx 7FEh +
ja loc_440B3C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_44DB60 +
movapd xmm2 oword ptr ds:oword_44DBD0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_440B04  +
fld  ds:dbl_44DC08 +
retn   +
mov edx 3E9h +
jmp loc_440B5A  +
movlpd xmm2 oword ptr ds:oword_44DBD0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_44DC00 +
mov edx 8 +
jmp loc_440B5A  +
movlpd xmm1 oword ptr ds:oword_44DBF0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_440953  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_440B87  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_43F7A7  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_440B4D  +
mov edx 3E9h +
jmp loc_440B5A  +
***
lea esp [esp+0] +
jmp loc_440BC0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi 0FFFFh +
push esi  +
push 1B3Fh  +
call sub_43638F  +
fld  qword ptr [ebp+8] +
mov ebx eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+0Eh] +
mov eax 7FF0h +
and ecx eax +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
cmp cx ax +
jnz loc_440C2C  +
call sub_4362A8  +
dec eax  +
pop ecx  +
pop ecx  +
cmp eax 2 +
ja loc_440C10  +
push esi  +
push ebx  +
call sub_43638F  +
fld  qword ptr [ebp+8] +
pop ecx  +
pop ecx  +
jmp loc_440C73  +
fld  qword ptr [ebp+8] +
fld  ds:dbl_446C80 +
push ebx  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 8  +
jmp loc_440C6B  +
call sub_43FACA  +
fst  qword ptr [ebp-8] +
fld  qword ptr [ebp+8] +
add esp 8 +
fucom  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_440C55  +
push esi  +
fstp  st(1) +
push ebx  +
fstp  st +
call sub_43638F  +
fld  qword ptr [ebp-8] +
pop ecx  +
pop ecx  +
jmp loc_440C73  +
test bl 20h +
jnz loc_440C43  +
push ebx  +
sub esp 10h +
fxch  st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 10h  +
call sub_435B12  +
add esp 1Ch +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp ds:SystemFunction036  +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_440CCC  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_440CC4  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_440CCE  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_440CB4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_456C00  +
push offset sub_41ED00  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_459094 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_440DA0  +
add esp 4 +
test eax eax +
jz loc_440D7F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_440C90  +
add esp 8 +
test eax eax +
jz loc_440D7F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_440DB4  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_440DCF  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_440E11  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_440E58  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_440E1F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_440E4D  +
cmp edx [esp+arg_4] +
ja loc_440E4D  +
jb loc_440E56  +
cmp eax [esp+arg_0] +
jbe loc_440E56  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_440E9A  +
cmp cl 20h +
jnb loc_440E90  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_440EBA  +
cmp cl 20h +
jnb loc_440EB0  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_440EE4  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_440F00  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_440F2C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_440F73  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_440F3A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_440F68  +
cmp edx [esp+arg_4] +
ja loc_440F68  +
jb loc_440F71  +
cmp eax [esp+arg_0] +
jbe loc_440F71  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_440F85  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_440F99  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_440FC1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_440FDD  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_440FF9  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_44103A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_441007  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_441035  +
cmp edx [esp+arg_4] +
ja loc_441035  +
jb loc_441036  +
cmp eax [esp+arg_0] +
jbe loc_441036  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_441044  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_441070  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_44108B  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4410AA  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_4410F6  +
jmp loc_4410FD  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4410B8  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_4410E3  +
cmp edx [esp+arg_4] +
ja loc_4410E3  +
jb loc_4410EB  +
cmp eax [esp+arg_0] +
jbe loc_4410EB  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_4410FD  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
or eax eax +
jnz loc_441131  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_441181  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_44113F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_44116A  +
cmp edx [esp+arg_4] +
ja loc_44116A  +
jb loc_441172  +
cmp eax [esp+arg_0] +
jbe loc_441172  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_41BEC5  +
jmp sub_41CE06  +
***
cmp dword_45BB04 0 +
jz loc_441230  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_45BB04 0 +
jz loc_441230  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_4411F9  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  dword ptr [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_44128F  +
fsubp st(1) st +
test edx edx +
jns loc_441277  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_4412A3  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_4412A3  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_441253  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_45BB04 1 +
jb loc_4413BE  +
mov edi [ebp+8] +
ja loc_44133D  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_44131D  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_4412ED  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_44137E  +
xor eax eax +
test edi 0Fh +
jz loc_441364  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_44137B  +
inc edi  +
test edi 0Fh +
jnz loc_44134F  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_4413B7  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_4413A3  +
bsf edx edi +
add eax edx +
jmp loc_44137B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_4413E1  +
xor eax eax +
jmp loc_4413E3  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_45BB04 1 +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
mov ecx [ebx+8] +
sub esp 20h +
cmp dword_45BB04 1 +
mov dx [ebx+0Ch] +
jl loc_44158A  +
movzx eax dx +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm2 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_44159F  +
movups xmm0 oword ptr [ecx] +
pxor xmm1 xmm1 +
pcmpeqw xmm1 xmm0 +
pcmpeqw xmm0 xmm2 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_4415B1  +
add ecx 10h +
jmp loc_441554  +
cmp ax dx +
jz loc_441592  +
add ecx 2 +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_441582  +
xor eax eax +
cmp [ecx] dx +
setnz al  +
dec eax  +
and eax ecx +
jmp loc_4415C1  +
movzx eax word ptr [ecx] +
cmp ax dx +
jz loc_4415BF  +
test ax ax +
jz loc_4415BB  +
add ecx 2 +
jmp loc_441554  +
bsf eax eax +
mov [ebp+var_4] eax +
add ecx eax +
jmp loc_441592  +
xor eax eax +
jmp loc_4415C1  +
mov eax ecx +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454A90 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454ABC +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454AE8 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454AE8 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454B0C +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454AE8 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454B38 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454BC4 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454C1C +
jmp sub_41EC8A  +
***
push eax  +
lea ecx [ebp+8] +
jmp loc_401670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454C74 +
jmp sub_41EC8A  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454CA8 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-234h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454CD4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-10h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454D18 +
jmp sub_41EC8A  +
***
lea ecx [ebp-40Ch] +
jmp loc_401670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-414h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454D44 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454D70 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454AE8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-10h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454D9C +
jmp sub_41EC8A  +
***
lea ecx [ebp+14h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454DC8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-10h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454DF4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-14h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp+10h] +
lea ecx [ebp-18h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454E20 +
jmp sub_41EC8A  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-14h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454E7C +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-20h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454EC0 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 2Ch +
jmp loc_40CA00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454F0C +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454F68 +
jmp sub_41EC8A  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-28h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454F94 +
jmp sub_41EC8A  +
***
lea ecx [ebp-2Ch] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454FC8 +
jmp sub_41EC8A  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_454FF4 +
jmp sub_41EC8A  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455020 +
jmp sub_41EC8A  +
***
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
mov ecx [ebp-23Ch] +
lea ecx [ebp-2F0h] +
lea ecx [ebp-230h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2F4h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455050 +
jmp sub_41EC8A  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4550F8 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455124 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455170 +
jmp sub_41EC8A  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_45519C +
jmp sub_41EC8A  +
***
lea ecx [ebp-10h] +
lea ecx [ebp+8] +
jmp loc_401670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4551C8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4551FC +
jmp sub_41EC8A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_441E38  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4027F0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455230 +
jmp sub_41EC8A  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-2Ch] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_45525C +
jmp sub_41EC8A  +
***
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455290 +
jmp sub_41EC8A  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_40D550  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4552C4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455308 +
jmp sub_41EC8A  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455334 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
jmp loc_40E240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455360 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_45538C +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4553EC +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_45544C +
jmp sub_41EC8A  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455478 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_40F6F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4554AC +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
jmp sub_40AC90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4554D8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455504 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455538 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4555C4 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455624 +
jmp sub_41EC8A  +
***
lea ecx [ebp-1Ch] +
jmp sub_41AB1D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455684 +
jmp sub_41EC8A  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-30h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4556B0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-18h] +
jmp sub_41AB1D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455728 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455754 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
jmp sub_411180  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455780 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
jmp sub_4055E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4557AC +
jmp sub_41EC8A  +
***
lea ecx [ebp+0Ch] +
jmp sub_4027F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4557D8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455804 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455840 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455898 +
jmp sub_41EC8A  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-5Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4558F8 +
jmp sub_41EC8A  +
***
push eax  +
mov ecx [ebp-414h] +
mov ecx [ebp-414h] +
add ecx 98h +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-414h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455944 +
jmp sub_41EC8A  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455988 +
jmp sub_41EC8A  +
***
lea ecx [ebp-1028h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1030h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4559B4 +
jmp sub_41EC8A  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4559E0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-24h] +
jmp loc_4126D0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455A0C +
jmp sub_41EC8A  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455A38 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455A98 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455AF0 +
jmp sub_41EC8A  +
***
push eax  +
call sub_41C538  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455B48 +
jmp sub_41EC8A  +
***
lea ecx [ebp-248h] +
lea ecx [ebp-260h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-264h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455B74 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455BA8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-0C0h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0B8h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455BD4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-228h] +
lea ecx [ebp-2A0h] +
lea ecx [ebp-288h] +
lea ecx [ebp-270h] +
lea ecx [ebp-258h] +
lea ecx [ebp-240h] +
lea ecx [ebp-228h] +
lea ecx [ebp-228h] +
lea ecx [ebp-228h] +
lea ecx [ebp-228h] +
lea ecx [ebp-228h] +
lea ecx [ebp-228h] +
lea ecx [ebp-2D0h] +
lea ecx [ebp-2B8h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2F4h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455C08 +
jmp sub_41EC8A  +
***
lea ecx [ebp-2028h] +
lea ecx [ebp-2040h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2064h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455CA0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455CD4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-1070h] +
lea ecx [ebp-1058h] +
lea ecx [ebp-1040h] +
lea ecx [ebp-1088h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
jmp sub_40CB90  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_416130  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455D80 +
jmp sub_41EC8A  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455DC0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-30h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455E48 +
jmp sub_41EC8A  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455E74 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_415E80  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455EC0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
lea ecx [ebp-40h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455F04 +
jmp sub_41EC8A  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-28h] +
lea ecx [ebp-54h] +
lea ecx [ebp-40h] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455F58 +
jmp sub_41EC8A  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455FAC +
jmp sub_41EC8A  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_442A68  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_402AD0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_455FE8 +
jmp sub_41EC8A  +
***
push eax  +
mov eax [ebp-10h] +
mov ecx [ebp+8] +
jmp loc_409860  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_456014 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_456058 +
jmp sub_41EC8A  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4560B0 +
jmp sub_41EC8A  +
***
lea ecx [ebp-234h] +
lea ecx [ebp-264h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-24Ch] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-268h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4560F4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-248h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-254h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_456148 +
jmp sub_41EC8A  +
***
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
jmp sub_40CB90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_456174 +
jmp sub_41EC8A  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4561C8 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
jmp sub_402AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_41BEC5  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4561F4 +
jmp sub_41EC8A  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
jmp sub_402AD0  +
***
lea ecx [ebp-10h] +
jmp sub_41AB1D  +
***
lea ecx [ebp-14h] +
jmp sub_41AB1D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_45636C +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_456450 +
jmp sub_41EC8A  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41BEC5  +
mov eax offset unk_4565B0 +
jmp sub_41EC8A  +
***
push 0FFFFFFFFh  +
push offset loc_4415D6  +
mov eax large fs:0 +
push eax  +
mov eax dword_459094 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
call sub_401700  +
call nullsub_1  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx hModule +
call loc_4018F0  +
mov eax dword_45C45C +
test eax eax +
jz loc_442E27  +
push eax  +
call sub_42746C  +
add esp 4 +
mov dword_45C45C 0 +
mov dword_45C464 0 +
mov dword_45C460 0 +
retn   +
***
mov dword_45C3D8 offset off_44F988 +
retn   +
***
cmp byte_45C3B8 0 +
mov dword_45C3B0 offset off_44F930 +
jz locret_442E73  +
mov eax dword_45C3B4 +
test eax eax +
jz locret_442E73  +
push eax  +
call ds:HeapDestroy  +
retn   +
***
mov ecx offset dword_45C4A0 +
jmp sub_402700  +
***
cmp dword_45C514 10h +
jb loc_442EC2  +
push esi  +
mov esi dword_45C500 +
mov ecx offset dword_45C500 +
push offset dword_45C500  +
call nullsub_2  +
mov eax dword_45C514 +
mov ecx offset dword_45C500 +
inc eax  +
push eax  +
push esi  +
call loc_40F8E0  +
pop esi  +
mov dword_45C514 0Fh +
mov dword_45C510 0 +
mov byte ptr dword_45C500 0 +
retn   +
***
jmp loc_411AF0  +
***
push ecx  +
mov ecx offset unk_45B4A0 +
jmp loc_41A3ED  +
***
retn   +
***
mov ecx offset unk_45B5EC +
jmp loc_41ABDE  +
***
mov ecx offset unk_45B5E4 +
jmp sub_409870  +
***
mov ecx offset unk_45B671 +
jmp loc_41B6A5  +
***
