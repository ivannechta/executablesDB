add bh bh +
xor edi edi +
adc eax offset SysFreeString +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_1007FBD  +
mov eax [eax+18h] +
test eax eax +
jz loc_1007FBD  +
mov ecx eax +
call sub_100AF4E  +
test eax eax +
jz loc_1007FBD  +
mov eax [esi+4] +
mov ecx [eax+18h] +
pop esi  +
jmp sub_100B121  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_1007FEA  +
mov eax [eax+18h] +
test eax eax +
jz loc_1007FEA  +
mov edx [esi+8] +
test edx edx +
jz loc_1007FEA  +
push 0  +
push 1  +
push edx  +
mov ecx eax +
call sub_100B6B6  +
push 0  +
push 1F4h  +
push 1  +
push dword ptr [esi]  +
call ds:SetTimer  +
mov [esi+10h] eax +
xor eax eax +
pop esi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
lea ecx [esi+4] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp+arg_4] +
mov [esi+8] eax +
mov eax [ebp+arg_0] +
mov [esi+0Ch] eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1008043  +
mov edx [ecx+8] +
mov [eax] edx +
cmp [ebp+arg_4] 0 +
jz loc_1008055  +
add ecx 4 +
push ecx  +
mov ecx [ebp+arg_4] +
call ??4CString@@QAEABV0@ABV0@@Z  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
push 0D7h  +
push dword ptr [esi]  +
call ds:GetDlgItem  +
push 104h  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call ds:GetWindowTextW  +
lea ecx [esi+4] +
test eax eax +
jnz loc_10080A4  +
push offset dword_10016F0  +
jmp loc_10080AB  +
lea eax [ebp+String] +
push eax  +
call ??4CString@@QAEABV0@PBG@Z  +
movzx eax [ebp+arg_4] +
push eax  +
push dword ptr [esi]  +
call ds:EndDialog  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1019E83  +
leave   +
retn 10h  +
***
mov eax [ecx] +
push esi  +
push edi  +
xor edi edi +
inc edi  +
call dword ptr [eax+8]  +
jmp loc_10080EF  +
mov ecx esi +
call sub_10080D3  +
add edi eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jnz loc_10080DF  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+20h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [esi+18h] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov ecx [ebp+arg_4] +
add esi 1Ch +
push esi  +
call ??4CString@@QAEABV0@ABV0@@Z  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
mov ebx ecx +
push 0DBh  +
push dword ptr [ebx]  +
call edi  +
xor edx edx +
mov [ebp+hWnd] eax +
cmp eax edx +
jz loc_1008191  +
cmp [ebp+wParam] edx +
jge loc_1008163  +
mov [ebp+wParam] edx +
push 64h  +
pop ecx  +
cmp [ebp+wParam] ecx +
jle loc_100816E  +
mov [ebp+wParam] ecx +
mov esi ds:SendMessageW +
push 640000h  +
push edx  +
push 401h  +
push eax  +
call esi  +
push 0  +
push [ebp+wParam]  +
push 402h  +
push [ebp+hWnd]  +
call esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
cmp dword ptr [eax-8] 0 +
jz loc_10081B2  +
push 0DCh  +
push dword ptr [ebx]  +
call edi  +
test eax eax +
jz loc_10081B2  +
push dword ptr [esi]  +
push eax  +
call ds:SetWindowTextW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
mov ebx 0D7h +
mov esi ecx +
push ebx  +
push dword ptr [esi]  +
call edi  +
push 0D6h  +
push dword ptr [esi]  +
mov [esi+10h] eax +
call edi  +
xor edi edi +
push edi  +
push 1  +
push 459h  +
push dword ptr [esi+10h]  +
mov [esi+14h] eax +
call ds:SendMessageW  +
push dword ptr [esi+4]  +
push ebx  +
push dword ptr [esi]  +
call ds:SetDlgItemTextW  +
cmp [esi+8] edi +
jz loc_1008214  +
lea eax [ebx-2] +
push eax  +
push eax  +
push 0D4h  +
jmp loc_1008232  +
mov ebx ds:EnableWindow +
push edi  +
push dword ptr [esi+10h]  +
call ebx  +
push edi  +
push dword ptr [esi+14h]  +
call ebx  +
mov eax 0D4h +
push eax  +
push 0D5h  +
push eax  +
push dword ptr [esi]  +
call ds:CheckRadioButton  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ebx [esi+4] +
mov edi 104h +
push edi  +
mov ecx ebx +
call ?GetBuffer@CString@@QAEPAGH@Z  +
push edi  +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetWindowTextW  +
push 0FFFFFFFFh  +
mov ecx ebx +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
movzx eax [ebp+arg_4] +
push eax  +
push dword ptr [esi]  +
call ds:EndDialog  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push 0D5h  +
push dword ptr [esi]  +
call ds:IsDlgButtonChecked  +
mov edi ds:EnableWindow +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push dword ptr [esi+10h]  +
mov [esi+8] eax +
call edi  +
push dword ptr [esi+8]  +
push dword ptr [esi+14h]  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10082DF  +
cmp ecx 7FFFFFFFh +
jbe loc_10082E4  +
mov eax 80070057h +
test eax eax +
jl loc_1008321  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1008311  +
cmp eax esi +
ja loc_1008311  +
jnz loc_100831C  +
jmp loc_1008316  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+hWnd] +
push ebx  +
xor ebx ebx +
sub eax 10h +
push esi  +
push edi  +
mov [ebp+hDlg] ecx +
mov [ebp+lpString] ebx +
mov [ebp+var_30] ebx +
jz loc_10083F7  +
mov esi 100h +
sub eax esi +
jz loc_1008377  +
dec eax  +
jnz loc_10083FF  +
push ebx  +
push ebx  +
push 10h  +
push ecx  +
call ds:SendMessageW  +
jmp loc_10083FF  +
mov edi ds:SysAllocStringLen +
push esi  +
push ebx  +
call edi  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_10083FF  +
push esi  +
push ebx  +
call edi  +
mov [ebp+var_30] eax +
cmp eax ebx +
jz loc_10083FF  +
push esi  +
push eax  +
push 0FBEh  +
push dword_1026830  +
call ds:LoadStringW  +
push 1DB1h  +
push 1  +
push 6  +
push offset aU_U_U  +
lea eax [ebp+var_28] +
push 12h  +
push eax  +
call sub_10082C9  +
add esp 18h +
test eax eax +
jl loc_10083FF  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_30]  +
push esi  +
push [ebp+lpString]  +
call sub_10082C9  +
add esp 10h +
test eax eax +
jl loc_10083FF  +
push [ebp+lpString]  +
push 191h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:SetWindowTextW  +
jmp loc_10083FF  +
push ebx  +
push ecx  +
call ds:EndDialog  +
push [ebp+var_30]  +
mov esi ds:SysFreeString +
call esi  +
push [ebp+lpString]  +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1019E83  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_10084AB  +
mov eax [eax+18h] +
test eax eax +
jz loc_10084AB  +
mov ecx eax +
call sub_100AF4E  +
test eax eax +
jnz loc_1008465  +
push dword ptr [esi+10h]  +
push dword ptr [esi]  +
call ds:KillTimer  +
push 0  +
push dword ptr [esi]  +
call ds:EndDialog  +
jmp loc_10084AB  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov eax [esi+4] +
mov ecx [eax+18h] +
call sub_10080FF  +
mov eax [ebp-14h] +
test eax eax +
jle loc_100848C  +
dec eax  +
imul eax eax +
cdq   +
idiv  dword ptr [esi+0Ch] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx esi +
push eax  +
call sub_1008138  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 10h +
jz loc_1008554  +
sub eax 100h +
jz loc_100852A  +
dec eax  +
jz loc_10084FD  +
dec eax  +
dec eax  +
jnz loc_100855F  +
mov ecx dword_1026C90 +
test ecx ecx +
jz loc_100855F  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 113h  +
call sub_1008427  +
jmp loc_100855F  +
mov eax [ebp+arg_8] +
shr eax 10h +
test ax ax +
jnz loc_100855F  +
movzx eax word ptr [ebp+arg_8] +
dec eax  +
jz loc_1008554  +
dec eax  +
jnz loc_100855F  +
push 2  +
push [ebp+hDlg]  +
call ds:EndDialog  +
mov ecx dword_1026C90 +
call sub_1007F93  +
jmp loc_100855F  +
mov eax dword_1026C90 +
test eax eax +
jz loc_100855F  +
mov ecx [ebp+hDlg] +
mov [eax] ecx +
mov ecx dword_1026C90 +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 110h  +
call sub_1007FC4  +
jmp loc_100855F  +
push 0  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
mov [esi+4] eax +
mov [esi+8] ecx +
call sub_10080D3  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_1008591  +
mov dword ptr [esi+0Ch] 1 +
push 0  +
push offset DialogFunc  +
push [ebp+hWndParent]  +
push 0D0h  +
push hInstance  +
call ds:DialogBoxParamW  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 10h +
jz loc_100864F  +
sub eax 100h +
jz loc_1008625  +
dec eax  +
jnz loc_100865A  +
mov eax [ebp+arg_8] +
dec eax  +
jz loc_100860D  +
dec eax  +
jz loc_10085F5  +
sub eax 0D2h +
jz loc_10085E8  +
dec eax  +
jnz loc_100865A  +
mov ecx dword_1026C94 +
call sub_1008291  +
jmp loc_100865A  +
mov ecx dword_1026C94 +
lea eax [ebp+hDlg] +
push eax  +
push [ebp+hDlg]  +
push 2  +
push 0  +
call sub_1008248  +
jmp loc_100865A  +
mov ecx dword_1026C94 +
lea eax [ebp+hDlg] +
push eax  +
push [ebp+hDlg]  +
push 1  +
push 0  +
call sub_100805E  +
jmp loc_100865A  +
mov eax dword_1026C94 +
test eax eax +
jz loc_100865A  +
mov ecx [ebp+hDlg] +
mov [eax] ecx +
mov ecx dword_1026C94 +
lea eax [ebp+hDlg] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 110h  +
call sub_10081BE  +
jmp loc_100865A  +
push 0  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
inc eax  +
test edx edx +
jz loc_1008685  +
cmp dword ptr [ecx+58h] 0 +
jl loc_1008683  +
push esi  +
mov esi [ecx+30h] +
mov [edx] esi +
pop esi  +
jmp loc_1008685  +
mov [edx] eax +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_100869B  +
cmp dword ptr [ecx+58h] 0 +
jl loc_1008699  +
mov ecx [ecx+2Ch] +
mov [edx] ecx +
jmp loc_100869B  +
mov [edx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+58h] 0 +
mov eax [ebp+8] +
jge loc_10086BA  +
test eax eax +
jnz loc_10086BA  +
xor eax eax +
jmp loc_10086C5  +
cmp eax [ecx+2Ch] +
jge loc_10086B6  +
mov ecx [ecx+44h] +
mov eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+58h] 0 +
mov eax [ebp+8] +
jge loc_10086E0  +
test eax eax +
jz loc_10086F5  +
mov edx [ecx+34h] +
test edx edx +
jz loc_10086F5  +
cmp eax [ecx+30h] +
jge loc_10086F5  +
imul eax eax +
mov eax [eax+edx+18h] +
jmp loc_10086F7  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ecx+30h] +
jge loc_100871E  +
test eax eax +
jl loc_100871E  +
mov ecx [ecx+34h] +
imul eax eax +
mov edx [ebp+arg_4] +
mov [eax+ecx+0Ch] edx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp [ecx+58h] ebx +
push edi  +
mov edi [ebp+arg_4] +
jge loc_1008767  +
cmp edi ebx +
jnz loc_1008767  +
cmp esi ebx +
jnz loc_1008767  +
mov edi [ebp+arg_8] +
cmp edi ebx +
jz loc_1008759  +
mov eax [ecx] +
push ebx  +
mov esi offset unk_1024434 +
push esi  +
call dword ptr [eax+3Ch]  +
mov [edi] esi +
mov eax [ebp+arg_C] +
cmp eax ebx +
jz loc_1008762  +
mov [eax] ebx +
xor eax eax +
inc eax  +
jmp loc_10087A2  +
cmp esi [ecx+2Ch] +
jge loc_10087A0  +
mov eax [ecx+30h] +
cmp edi eax +
jge loc_10087A0  +
mov edx [ebp+arg_8] +
cmp edx ebx +
jz loc_1008787  +
mov ebx [ecx+3Ch] +
imul eax esi +
add eax edi +
lea eax [ebx+eax*4] +
mov [edx] eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1008762  +
mov edx [ecx+30h] +
mov ecx [ecx+40h] +
imul edx esi +
add edx edi +
mov ecx [ecx+edx*4] +
mov [eax] ecx +
jmp loc_1008762  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10087BF  +
call ?Empty@CString@@QAEXXZ  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_10087CB  +
call ?Empty@CString@@QAEXXZ  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 2 +
push edi  +
mov edi ecx +
jz loc_1008807  +
push esi  +
push offset ??1CString@@QAE@XZ  +
lea esi [edi-4] +
push dword ptr [esi]  +
push 4  +
push edi  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
test [ebp+arg_0] 1 +
jz loc_1008802  +
push esi  +
call sub_10199FA  +
pop ecx  +
mov eax esi +
pop esi  +
jmp loc_100881B  +
call ??1CString@@QAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_1008819  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test eax eax +
jz loc_1008849  +
mov ecx [esi+30h] +
imul ecx [ebp+arg_0] +
add ecx [ebp+arg_4] +
push [ebp+arg_8]  +
lea ecx [eax+ecx*4] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi+40h] +
test eax eax +
jz loc_1008860  +
mov ecx [esi+30h] +
imul ecx [ebp+arg_0] +
add ecx [ebp+arg_4] +
mov edx [ebp+arg_C] +
mov [eax+ecx*4] edx +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+44h] +
test eax eax +
jz loc_100887F  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov [eax+edx*4] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push offset dword_10016F0  +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_100170C +
mov [esi+4] eax +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+10h] eax +
mov eax [ebp+arg_C] +
mov [esi+14h] eax +
mov eax [ebp+arg_10] +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
push offset dword_10016F0  +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_100170C +
mov [esi+4] edi +
call ??0CString@@QAE@PBG@Z  +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_100170C +
add ecx 8 +
jmp ??1CString@@QAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ecx] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_1008944  +
test cx cx +
jz loc_1008940  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_1008944  +
add eax 4 +
add edx 4 +
test cx cx +
jnz loc_100891E  +
xor eax eax +
jmp loc_1008949  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:_wcsicoll  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov edi [ebp+10h] +
xor esi esi +
mov [ebp-4] esi +
cmp edi esi +
jz loc_1008A98  +
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
lea ecx [ebp+10h] +
push ecx  +
push dword ptr [edi+18h]  +
mov ecx edi +
push dword ptr [ebp+8]  +
mov [ebp+10h] esi +
mov [ebp-8] esi +
mov [ebp-10h] esi +
mov [ebp-0Ch] esi +
call dword ptr [eax+28h]  +
mov eax [edi] +
lea ecx [ebp-0Ch] +
push ecx  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [edi+18h]  +
mov ecx edi +
push dword ptr [ebp+0Ch]  +
call dword ptr [eax+28h]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+30h]  +
cmp eax 1 +
jnz loc_1008A58  +
mov ecx [ebp+10h] +
cmp ecx esi +
jz loc_1008A58  +
cmp [ebp-8] esi +
jz loc_1008A58  +
push ebx  +
push 3  +
lea eax [ebp+8] +
push eax  +
call ?Left@CString@@QBE?AV1@H@Z  +
push offset aIrq  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp+8] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
pop ebx  +
jz loc_1008A58  +
mov ecx [ebp+10h] +
mov eax [ecx] +
mov eax [eax-8] +
inc eax  +
push eax  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov esi ds:_wtoi +
add eax 8 +
push eax  +
call esi  +
pop ecx  +
mov ecx [ebp+10h] +
push 0FFFFFFFFh  +
mov [ebp-10h] eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
mov ecx [ebp-8] +
mov eax [ecx] +
mov eax [eax-8] +
inc eax  +
push eax  +
call ?GetBuffer@CString@@QAEPAGH@Z  +
add eax 8 +
push eax  +
call esi  +
pop ecx  +
mov ecx [ebp-8] +
push 0FFFFFFFFh  +
mov [ebp-0Ch] eax +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
xor esi esi +
cmp [edi+1Ch] esi +
jz loc_1008A77  +
mov ecx [ebp+10h] +
cmp ecx esi +
jz loc_1008A90  +
mov eax [ebp-8] +
cmp eax esi +
jz loc_1008A90  +
push dword ptr [eax]  +
call sub_1008952  +
mov [ebp-4] eax +
jmp loc_1008A90  +
mov eax [ebp-10h] +
cmp eax [ebp-0Ch] +
jnb loc_1008A85  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008A90  +
xor ecx ecx +
cmp eax [ebp-0Ch] +
setnz cl  +
mov [ebp-4] ecx +
cmp [edi+20h] esi +
jnz loc_1008A98  +
neg dword ptr [ebp-4]  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
test ecx ecx +
jz loc_1008AD2  +
lea eax [esi+54h] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
test edi edi +
jz loc_1008B14  +
mov eax [esi+48h] +
test eax eax +
jz loc_1008B09  +
push 104h  +
lea ecx [ebp-20Ch] +
push ecx  +
push eax  +
push dword_1026830  +
call ds:LoadStringW  +
lea eax [ebp-20Ch] +
push eax  +
lea ecx [esi+50h] +
call ??4CString@@QAEABV0@PBG@Z  +
and dword ptr [esi+48h] 0 +
add esi 50h +
push esi  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1019E83  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_C] +
mov eax ecx +
mov ecx [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_214] ecx +
mov ecx [ebp+arg_0] +
cmp ecx [eax+30h] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_210] edx +
jge loc_1008C13  +
test ecx ecx +
jl loc_1008C13  +
mov esi ecx +
imul esi esi +
add esi [eax+34h] +
cmp dword ptr [eax+58h] 0 +
jge loc_1008BA8  +
test ecx ecx +
jnz loc_1008BA8  +
test edi edi +
jz loc_1008B92  +
mov ecx edi +
call ?Empty@CString@@QAEXXZ  +
mov edx [ebp+var_210] +
test ebx ebx +
jz loc_1008B9C  +
mov dword ptr [ebx] 0F0h +
test edx edx +
jz loc_1008BA3  +
and dword ptr [edx] 0 +
xor eax eax +
inc eax  +
jmp loc_1008C15  +
test edi edi +
jz loc_1008BF0  +
mov eax [esi+4] +
test eax eax +
jz loc_1008BDF  +
push 104h  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
push dword_1026830  +
call ds:LoadStringW  +
lea eax [ebp+Buffer] +
push eax  +
lea ecx [esi+8] +
call ??4CString@@QAEABV0@PBG@Z  +
and dword ptr [esi+4] 0 +
lea eax [esi+8] +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov edx [ebp+var_210] +
test ebx ebx +
jz loc_1008BF9  +
mov eax [esi+0Ch] +
mov [ebx] eax +
test edx edx +
jz loc_1008C02  +
mov eax [esi+10h] +
mov [edx] eax +
mov eax [ebp+var_214] +
test eax eax +
jz loc_1008BA3  +
mov ecx [esi+14h] +
mov [eax] ecx +
jmp loc_1008BA3  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1019E83  +
leave   +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_1008C42  +
push 3  +
call sub_10087D4  +
and dword ptr [esi+3Ch] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_1008C54  +
push eax  +
call sub_10199FA  +
and dword ptr [esi+40h] 0 +
pop ecx  +
mov eax [esi+44h] +
test eax eax +
jz loc_1008C66  +
push eax  +
call sub_10199FA  +
and dword ptr [esi+44h] 0 +
pop ecx  +
and dword ptr [esi+2Ch] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 2 +
push edi  +
mov edi ecx +
jz loc_1008CA4  +
push esi  +
push offset sub_1008901  +
lea esi [edi-4] +
push dword ptr [esi]  +
push 1Ch  +
push edi  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
test byte ptr [ebp+8] 1 +
jz loc_1008C9F  +
push esi  +
call sub_10199FA  +
pop ecx  +
mov eax esi +
pop esi  +
jmp loc_1008CB8  +
call sub_1008901  +
test byte ptr [ebp+8] 1 +
jz loc_1008CB6  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
call sub_1008C2B  +
mov eax [ebp+8] +
mov edi [esi+30h] +
imul edi eax +
mov [esi+2Ch] eax +
xor ecx ecx +
push 4  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp+8] eax +
xor ebx ebx +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_1008D2E  +
push offset ??1CString@@QAE@XZ  +
push offset ??0CString@@QAE@XZ  +
push edi  +
lea ebx [eax+4] +
push 4  +
push ebx  +
mov [eax] edi +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax ebx +
xor ebx ebx +
jmp loc_1008D30  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi+3Ch] eax +
mov eax [esi+30h] +
imul eax [esi+2Ch] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
mov [esi+40h] eax +
mov eax [esi+2Ch] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
pop ecx  +
pop ecx  +
mov [esi+44h] eax +
cmp [esi+3Ch] ebx +
jz loc_1008DAD  +
cmp [esi+40h] ebx +
jz loc_1008DAD  +
cmp eax ebx +
jz loc_1008DAD  +
xor eax eax +
cmp [esi+2Ch] ebx +
jle loc_1008DAD  +
mov ecx [esi+44h] +
mov [ecx+eax*4] ebx +
xor ecx ecx +
cmp [esi+30h] ebx +
jle loc_1008DA7  +
mov edx [esi+30h] +
mov edi [esi+40h] +
imul edx eax +
add edx ecx +
inc ecx  +
mov [edi+edx*4] ebx +
cmp ecx [esi+30h] +
jl loc_1008D93  +
inc eax  +
cmp eax [esi+2Ch] +
jl loc_1008D86  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1008C2B  +
cmp dword ptr [esi+38h] 0 +
jz loc_1008DF0  +
mov ecx [esi+34h] +
test ecx ecx +
jz loc_1008DEC  +
lea eax [ecx-4] +
cmp dword ptr [eax] 0 +
jz loc_1008DE1  +
mov eax [ecx] +
push 3  +
call dword ptr [eax]  +
jmp loc_1008DE8  +
push eax  +
call sub_10199FA  +
pop ecx  +
and dword ptr [esi+34h] 0 +
and dword ptr [esi+30h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100DF6E  +
test eax eax +
jl loc_1008E21  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_1008E21  +
mov [esi+4] ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_100DE5E  +
test eax eax +
jl loc_1008E52  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_1008E52  +
mov [esi+4] ecx +
pop esi  +
leave   +
retn 4  +
***
mov eax [ecx+4] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] ecx +
test edi edi +
jz loc_1008EB5  +
mov eax [edi] +
push esi  +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jz loc_1008E9E  +
push ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
push esi  +
mov ebx eax +
call sub_1008E65  +
mov esi ebx +
test ebx ebx +
jnz loc_1008E85  +
pop ebx  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+8] 0 +
mov eax [edi] +
pop esi  +
mov ecx edi +
jz loc_1008EB1  +
call dword ptr [eax+34h]  +
jmp loc_1008EB5  +
push 1  +
call dword ptr [eax]  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_100171C +
test eax eax +
jz loc_1008EDB  +
push eax  +
call sub_1008E65  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008EBF  +
test byte ptr [ebp+8] 1 +
jz loc_1008EFC  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
and dword ptr [eax+8] 0 +
mov dword ptr [eax] offset off_1001728 +
retn   +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
and dword ptr [eax+8] 0 +
mov dword ptr [eax] offset off_1001734 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001728 +
call sub_1008EBF  +
test byte ptr [ebp+8] 1 +
jz loc_1008F54  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001734 +
call sub_1008EBF  +
test byte ptr [ebp+8] 1 +
jz loc_1008F80  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_10075DC  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
call dword ptr [eax]  +
cmp eax esi +
jl loc_1008FCF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push 3  +
push 4  +
push esi  +
push esi  +
push 9  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_1008FEF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
mov [esi+4] eax +
test eax eax +
jz loc_1008FFF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
pop esi  +
test eax eax +
jz loc_1009010  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea edi [ecx+4] +
mov eax [edi] +
mov [ebp-4] ecx +
test eax eax +
jz loc_1009038  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [edi] 0 +
push dword ptr [ebp+0Ch]  +
call ds:SysAllocString  +
mov esi [ebp+8] +
mov [ebp+0Ch] eax +
test eax eax +
jz loc_1009066  +
mov ecx [esi] +
push 0  +
push edi  +
push 0  +
push 0  +
push eax  +
push esi  +
call dword ptr [ecx+18h]  +
push dword ptr [ebp+0Ch]  +
mov edi eax +
call ds:SysFreeString  +
jmp loc_100906B  +
mov edi 8007000Eh +
mov eax [ebp-4] +
mov [eax+8] esi +
test esi esi +
jz loc_100907B  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jnz loc_100909D  +
mov eax 80004005h +
jmp loc_10090DC  +
push ebx  +
push dword ptr [ebp+8]  +
call ds:SysAllocString  +
mov ebx eax +
test ebx ebx +
jz loc_10090D4  +
mov eax [esi+4] +
mov ecx [eax] +
push 0  +
push 0  +
push dword ptr [ebp+0Ch]  +
push 0  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
push ebx  +
mov esi eax +
call ds:SysFreeString  +
test esi esi +
jge loc_10090D9  +
mov esi 80043002h +
jmp loc_10090D9  +
mov esi 80004005h +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp-10h] +
push eax  +
mov esi ecx +
call ds:VariantInit  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
mov esi eax +
test esi esi +
jl loc_1009131  +
push 3  +
push 0  +
lea eax [ebp-10h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
test eax eax +
jnz loc_100912C  +
mov eax [ebp+0Ch] +
mov ecx [ebp-8] +
mov [eax] ecx +
jmp loc_1009131  +
mov esi 80043001h +
lea eax [ebp-10h] +
push eax  +
call ds:VariantClear  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp-10h] +
push eax  +
mov esi ecx +
call ds:VariantInit  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
mov esi eax +
test esi esi +
jl loc_1009192  +
push 5  +
push 0  +
lea eax [ebp-10h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
test eax eax +
jnz loc_100918D  +
fld  qword ptr [ebp-8] +
mov eax [ebp+0Ch] +
fstp  qword ptr [eax] +
jmp loc_1009192  +
mov esi 80043001h +
lea eax [ebp-10h] +
push eax  +
call ds:VariantClear  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp-10h] +
push eax  +
mov esi ecx +
call ds:VariantInit  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
mov esi eax +
test esi esi +
jl loc_10091F9  +
push 15h  +
push 0  +
lea eax [ebp-10h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
test eax eax +
jnz loc_10091F4  +
mov ecx [ebp-8] +
mov eax [ebp+0Ch] +
mov [eax] ecx +
mov ecx [ebp-4] +
mov [eax+4] ecx +
jmp loc_10091F9  +
mov esi 80043001h +
lea eax [ebp-10h] +
push eax  +
call ds:VariantClear  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea ebx [edi+4] +
cmp dword ptr [ebx] 0 +
jz loc_100922A  +
mov eax [ebx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi ds:SysAllocString +
push offset aWql  +
call esi  +
push [ebp+arg_0]  +
mov [ebp+var_4] eax +
call esi  +
cmp [ebp+var_4] 0 +
mov esi eax +
jz loc_1009262  +
test esi esi +
jz loc_1009262  +
mov eax [edi+8] +
mov ecx [eax] +
push ebx  +
push 0  +
push 30h  +
push esi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+50h]  +
mov [ebp+arg_0] eax +
jmp loc_1009269  +
mov [ebp+arg_0] 8007000Eh +
cmp [ebp+arg_0] 0 +
jl loc_1009276  +
push dword ptr [ebx]  +
call sub_1008F8C  +
mov edi ds:SysFreeString +
test esi esi +
jz loc_1009283  +
push esi  +
call edi  +
cmp [ebp+var_4] 0 +
jz loc_100928E  +
push [ebp+var_4]  +
call edi  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax 80004005h +
retn 8  +
***
mov eax 80004005h +
retn 4  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ??ACMapStringToString@@QAEAAVCString@@PBG@Z  +
mov ecx eax +
call ??4CString@@QAEABV0@PBG@Z  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov ecx [ebp+arg_0] +
mov [eax+0Ch] ecx +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call ds:SysAllocString  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
push edi  +
mov edi ecx +
jnz loc_1009347  +
mov eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
and eax 80070057h +
jmp loc_10093C5  +
mov eax [edi] +
push ebx  +
test eax eax +
jnz loc_1009352  +
xor ebx ebx +
jmp loc_100935B  +
push eax  +
call ds:SysStringLen  +
mov ebx eax +
mov eax [ebp+arg_4] +
add eax ebx +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_100936E  +
mov eax 8007000Eh +
jmp loc_10093C4  +
push esi  +
push eax  +
push 0  +
call ds:SysAllocStringLen  +
mov esi eax +
test esi esi +
jnz loc_1009385  +
mov eax 8007000Eh +
jmp loc_10093C3  +
mov eax [edi] +
test eax eax +
jz loc_1009399  +
lea ecx [ebx+ebx] +
push ecx  +
push eax  +
push esi  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
add eax eax +
push eax  +
push [ebp+arg_0]  +
lea eax [esi+ebx*2] +
push eax  +
call memcpy  +
mov ecx [ebp+var_4] +
xor eax eax +
add esp 0Ch +
mov [esi+ecx*2] ax +
push dword ptr [edi]  +
call ds:SysFreeString  +
mov [edi] esi +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
add [eax+24h] ecx +
add [ecx] al +
retn   +
***
push 8  +
mov eax offset loc_101AD5C +
call __EH_prolog3  +
mov edi ecx +
and dword ptr [ebp-14h] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
xor esi esi +
inc esi  +
mov ecx edi +
mov [ebp-4] esi +
call dword ptr [eax+8]  +
mov ecx [ebp+8] +
test eax eax +
jl loc_100941B  +
lea eax [ebp-10h] +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
jmp loc_1009425  +
push offset dword_10016F0  +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-10h] +
mov [ebp-14h] esi +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002448 +
jz loc_100945F  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002474 +
jz loc_1009492  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea edi [esi+4] +
mov ecx edi +
mov dword ptr [esi] offset off_1002484 +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ebx [esi+8] +
mov ecx ebx +
call ??0CString@@QAE@XZ  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
lea ecx [esi+10h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
and dword ptr [esi+14h] 0 +
push dword_1026830  +
mov byte ptr [ebp-4] 3 +
call sub_10092F2  +
push 15Fh  +
mov ecx edi +
call ?LoadStringW@CString@@QAEHI@Z  +
push 160h  +
mov ecx ebx +
call ?LoadStringW@CString@@QAEHI@Z  +
push 153h  +
lea ecx [esi+0Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 154h  +
lea ecx [esi+10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002484 +
lea ecx [esi+10h] +
mov dword ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+8] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009537  +
test byte ptr [ebp+8] 1 +
jz loc_10095A6  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10024BC +
mov eax [esi+4] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_10095DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+4] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_10095EF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+8] 0 +
mov dword ptr [esi] offset off_1002448 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
lea eax [ebp-14h] +
push eax  +
mov esi ecx +
call ds:VariantInit  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
mov [ebp+8] eax +
test eax eax +
jl loc_10096BE  +
push 8  +
push 0  +
lea eax [ebp-14h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
test eax eax +
jnz loc_10096B7  +
mov ecx [ebp-0Ch] +
mov esi ds:_wtoi +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
mov edi ebx +
stos   +
stos   +
stos   +
stos   +
lea edi [ecx+18h] +
push edi  +
mov [ebp-4] ecx +
call esi  +
mov [ebx+0Ch] ax +
xor eax eax +
mov [edi] ax +
mov edi [ebp-4] +
lea eax [edi+14h] +
push eax  +
call esi  +
mov [ebx+0Ah] ax +
xor eax eax +
mov [edi+14h] ax +
lea eax [edi+10h] +
push eax  +
call esi  +
mov [ebx+8] ax +
xor eax eax +
mov [edi+10h] ax +
lea eax [edi+0Ch] +
push eax  +
call esi  +
mov [ebx+6] ax +
xor eax eax +
mov [edi+0Ch] ax +
lea eax [edi+8] +
push eax  +
call esi  +
mov [ebx+2] ax +
xor eax eax +
push edi  +
mov [edi+8] ax +
call esi  +
add esp 18h +
pop edi  +
mov [ebx] ax +
pop ebx  +
jmp loc_10096BE  +
mov dword ptr [ebp+8] 80043001h +
lea eax [ebp-14h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+8] +
pop esi  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
and dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_10024E8 +
mov [esi+8] eax +
test eax eax +
jz loc_1009704  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10024E8 +
mov eax [esi+8] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_100973B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+4] +
test eax eax +
jz loc_1009748  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [esi] offset off_1002474 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ecx+4] 0 +
mov [ebp-4] ecx +
jz loc_1009771  +
mov eax [ecx+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1009781  +
cmp word ptr [eax] 0 +
mov [ebp+0Ch] eax +
jnz loc_1009788  +
mov dword ptr [ebp+0Ch] offset asc_1002518 +
mov eax [ebp+0Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100978E  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [ebp+8] +
lea edx [eax+2] +
push esi  +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10097A5  +
sub eax edx +
sar eax 1 +
lea eax [eax+ecx+0Eh] +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_10097D9  +
mov eax 8007000Eh +
jmp loc_1009832  +
mov eax [ebp+0Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10097DF  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [ebp+8] +
lea edx [eax+2] +
push edi  +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_10097F6  +
push dword ptr [ebp+8]  +
sub eax edx +
push dword ptr [ebp+0Ch]  +
sar eax 1 +
push offset aSelectSFromS  +
lea eax [eax+ecx+0Eh] +
push eax  +
push esi  +
call swprintf_s  +
mov ecx [ebp-4] +
add esp 14h +
push esi  +
call sub_100920F  +
push esi  +
mov edi eax +
call sub_10199FA  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+4] 0 +
jnz loc_1009857  +
mov eax 80004005h +
jmp loc_1009925  +
and dword ptr [ebp-8] 0 +
mov eax [ebx+4] +
mov ecx [eax] +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
neg esi  +
lea edx [ebp-0Ch] +
push edx  +
sbb esi esi +
lea edx [ebp-8] +
push edx  +
and esi 0FFFFB5C8h +
push 1  +
add esi 4E20h +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi 40004h +
jmp loc_10098AC  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_10098B3  +
mov eax [eax] +
test eax eax +
jnz loc_10098B3  +
mov eax [ebx+4] +
mov ecx [eax] +
lea edx [ebp-0Ch] +
push edx  +
lea edx [ebp-8] +
push edx  +
push 1  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-4] eax +
cmp eax edi +
jz loc_100988B  +
cmp dword ptr [ebp-4] 0 +
jnz loc_1009920  +
cmp dword ptr [ebp-0Ch] 1 +
jnz loc_1009920  +
mov esi [ebp+8] +
cmp dword ptr [esi] 0 +
jnz loc_10098EB  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_10098E3  +
and dword ptr [eax+4] 0 +
and dword ptr [eax+8] 0 +
mov dword ptr [eax] offset off_10024BC +
jmp loc_10098E5  +
xor eax eax +
mov [esi] eax +
test eax eax +
jz loc_1009910  +
push dword ptr [ebp-8]  +
mov ecx [esi] +
push dword ptr [ebx+8]  +
call sub_1008FDA  +
mov [ebp-4] eax +
test eax eax +
jge loc_1009917  +
mov ecx [esi] +
test ecx ecx +
jz loc_100990B  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi] 0 +
jmp loc_1009917  +
mov dword ptr [ebp-4] 8007000Eh +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_100949E  +
and dword ptr [ebp-4] 0 +
and dword ptr [esi+18h] 0 +
mov edi offset dword_10016F0 +
push edi  +
lea ecx [esi+1Ch] +
mov dword ptr [esi] offset off_1002520 +
call ??0CString@@QAE@PBG@Z  +
push edi  +
lea ecx [esi+20h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
push edi  +
lea ecx [esi+24h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBG@Z  +
and dword ptr [esi+28h] 0 +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002520 +
mov eax [esi+28h] +
mov dword ptr [ebp-4] 3 +
test eax eax +
jz loc_10099BB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+28h] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_10099CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+14h] 0 +
lea ecx [esi+24h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+20h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1009537  +
call __EH_epilog3  +
retn   +
***
push 8  +
mov eax offset loc_101AEF2 +
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+28h] 0 +
jnz loc_1009A24  +
mov eax 80004005h +
jmp loc_1009AB8  +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_1009A35  +
mov eax 80070057h +
jmp loc_1009AB8  +
mov esi [eax] +
test esi esi +
jnz loc_1009A65  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
and [ebp-4] esi +
test ecx ecx +
jz loc_1009A59  +
push dword ptr [edi+28h]  +
call near ptr dword_10096D0+5  +
jmp loc_1009A5B  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov esi eax +
test esi esi +
jz loc_1009A1A  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push offset dword_10016F0  +
xor edi edi +
push offset aMsiadvanced  +
lea eax [ebp-10h] +
inc edi  +
push eax  +
mov [ebp-4] edi +
call sub_1011C68  +
push dword ptr [ebp-10h]  +
mov eax [esi] +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
mov ebx eax +
test ebx ebx +
jl loc_1009AA3  +
mov eax [ebp+0Ch] +
mov [eax] esi +
jmp loc_1009AAA  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 0Ch  +
***
push 0  +
mov eax offset loc_101AF1C +
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+28h] 0 +
jnz loc_1009AE0  +
mov eax 80004005h +
jmp loc_1009B3A  +
mov ebx [ebp+0Ch] +
test ebx ebx +
jnz loc_1009AEE  +
mov eax 80070057h +
jmp loc_1009B3A  +
mov esi [ebx] +
test esi esi +
jnz loc_1009B1C  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+0Ch] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1009B12  +
push dword ptr [edi+28h]  +
call near ptr dword_10096D0+5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov esi eax +
test esi esi +
jz loc_1009AD9  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_100920F  +
mov edi eax +
test edi edi +
jl loc_1009B30  +
mov [ebx] esi +
jmp loc_1009B38  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
push 28h  +
mov eax offset loc_101AFCC +
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1009B65  +
mov eax 80070057h +
jmp loc_1009E97  +
push dword ptr [ebp+8]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
mov esi offset asc_100259C +
push esi  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1009CE3  +
push offset asc_1002598  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
push esi  +
lea ecx [ebp+8] +
mov ebx eax +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax ebx +
jg loc_1009CE3  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@ABV0@@Z  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0Bh +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Ch +
call ??0CString@@QAE@XZ  +
push 2  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Dh +
call ?Left@CString@@QBE?AV1@H@Z  +
mov esi offset asc_1002590 +
push esi  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-1Ch] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1009C3A  +
mov eax [ebp-10h] +
mov eax [eax-8] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Eh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
push esi  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@PBG@Z  +
push offset asc_100258C  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1009CC3  +
mov ecx [ebp-10h] +
mov ecx [ecx-8] +
sub ecx eax +
inc ecx  +
push ecx  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Fh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea eax [edi+20h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
lea eax [ebp-20h] +
push eax  +
mov byte ptr [ebp-4] 10h +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 11h +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 10h +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0Bh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
jmp loc_1009E2C  +
push offset a__1  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@PBG@Z  +
push offset aCimv2  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
lea eax [edi+20h] +
mov ecx [eax] +
cmp dword ptr [ecx-8] 0 +
mov byte ptr [ebp-4] 2 +
jz loc_1009D19  +
push eax  +
lea ecx [ebp-14h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea eax [edi+24h] +
mov ecx [eax] +
cmp dword ptr [ecx-8] 0 +
jz loc_1009D2D  +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push esi  +
lea ecx [ebp-34h] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push offset aRoot  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@PBG@Z  +
mov ebx eax +
push offset asc_1002590  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
lea eax [ebp-28h] +
push eax  +
mov byte ptr [ebp-4] 5 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push ebx  +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 6 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-18h] +
push ecx  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
mov byte ptr [ebp-4] 7 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push esi  +
push eax  +
lea eax [ebp-20h] +
push eax  +
mov byte ptr [ebp-4] 8 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp+8] +
push ecx  +
push eax  +
lea eax [ebp-24h] +
push eax  +
mov byte ptr [ebp-4] 9 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0Ah +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-34h] +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
xor ebx ebx +
mov dword ptr [ebp-1Ch] 80004005h +
cmp [edi+28h] ebx +
jz loc_1009E88  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax ebx +
jz loc_1009E5F  +
mov dword ptr [eax] offset off_10024BC +
mov [eax+4] ebx +
mov [eax+8] ebx +
mov esi eax +
jmp loc_1009E61  +
xor esi esi +
cmp esi ebx +
jz loc_1009E88  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [edi+28h]  +
call near ptr dword_1009018+3  +
cmp eax ebx +
mov [ebp-1Ch] eax +
jl loc_1009E80  +
mov eax [ebp+0Ch] +
mov [eax] esi +
jmp loc_1009E88  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-1Ch] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov ebx ecx +
mov [ebp-14h] ebx +
mov eax [ebx+28h] +
xor edi edi +
mov [ebp-10h] edi +
cmp eax edi +
jz loc_1009EC8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea esi [ebx+1Ch] +
push offset a__1  +
mov ecx esi +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp+8] +
cmp eax edi +
jz loc_1009FCA  +
cmp [eax] di +
jz loc_1009FCA  +
push eax  +
mov ecx esi +
call ??4CString@@QAEABV0@PBG@Z  +
push 2  +
lea eax [ebp-20h] +
push eax  +
mov ecx esi +
call ?Left@CString@@QBE?AV1@H@Z  +
push offset asc_1002590  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-20h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1009F4B  +
mov eax [esi] +
mov eax [eax-8] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebp-20h] +
push eax  +
mov ecx esi +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
mov ecx esi +
mov [ebp-4] edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
push offset a__1  +
mov ecx esi +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1009FBB  +
mov eax [esi] +
mov [ebp-20h] edi +
mov eax [eax-8] +
xor ecx ecx +
push 2  +
pop edx  +
mov [ebp-20h] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jnz loc_1009F8B  +
mov dword ptr [ebp-10h] 8007000Eh +
jmp loc_1009FC7  +
mov eax [esi] +
lea ecx [ebp-20h] +
push ecx  +
push ebx  +
push eax  +
call ds:DnsHostnameToComputerNameW  +
test eax eax +
jz loc_1009FAB  +
mov ecx [ebp-14h] +
push ebx  +
add ecx 20h +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_1009FB2  +
mov dword ptr [ebp-10h] 80070057h +
push ebx  +
call sub_10199FA  +
pop ecx  +
jmp loc_1009FC7  +
mov ecx [ebp-14h] +
push esi  +
add ecx 20h +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ebx [ebp-14h] +
lea ecx [ebx+24h] +
push offset aCimv2  +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp+0Ch] +
cmp eax edi +
jz loc_1009FEC  +
cmp [eax] di +
jz loc_1009FEC  +
push eax  +
lea ecx [ebx+24h] +
call ??4CString@@QAEABV0@PBG@Z  +
cmp [ebp-10h] edi +
mov [ebp-1Ch] edi +
mov [ebp-18h] edi +
jl loc_100A099  +
lea eax [ebp-18h] +
push eax  +
push offset riid  +
push 1  +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
cmp eax edi +
mov [ebp-10h] eax +
jl loc_100A087  +
cmp [ebp-18h] edi +
jz loc_100A087  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebx+24h]  +
lea eax [ebp+8] +
push dword ptr [esi]  +
mov dword ptr [ebp-4] 1 +
push offset aSRootS  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 10h +
lea ecx [ebp+8] +
call ?AllocSysString@CString@@QBEPAGXZ  +
mov esi eax +
cmp esi edi +
jz loc_100A06F  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push esi  +
mov [ebp-10h] eax +
call ds:SysFreeString  +
mov eax [ebp-18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
mov [ebp-18h] edi +
call ??1CString@@QAE@XZ  +
cmp [ebp-1Ch] edi +
jz loc_100A099  +
cmp [ebp-10h] edi +
jl loc_100A099  +
push dword ptr [ebp-1Ch]  +
call sub_1008F8C  +
mov eax [ebp-10h] +
mov ecx [ebp-1Ch] +
mov [ebx+18h] eax +
mov [ebx+28h] ecx +
call __EH_epilog3  +
retn 8  +
***
mov eax offset loc_101B05C +
call __EH_prolog3  +
mov edi ds:VariantInit +
lea eax [ebp-5Ch] +
xor esi esi +
push eax  +
mov [ebp-18h] esi +
mov [ebp-14h] esi +
call edi  +
lea eax [ebp-4Ch] +
push eax  +
call edi  +
mov ebx [ebp+8] +
cmp ebx esi +
jnz loc_100A0EC  +
mov eax 80004005h +
call __EH_epilog3  +
retn 14h  +
***
push offset asc_100259C  +
lea ecx [ebp-38h] +
call ??0CString@@QAE@PBG@Z  +
mov edi eax +
push offset a__1  +
lea ecx [ebp-34h] +
mov [ebp-4] esi +
call ??0CString@@QAE@PBG@Z  +
push eax  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-30h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [ebp+10h]  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push edi  +
push eax  +
lea eax [ebp-28h] +
push eax  +
mov byte ptr [ebp-4] 3 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [ebp+14h]  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-20h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp+18h]  +
mov ecx offset unk_10265F8 +
push dword ptr [ebp-20h]  +
call ?Lookup@CMapStringToString@@QBEHPBGAAVCString@@@Z  +
test eax eax +
jz loc_100A1B0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_100A0E4  +
***
push offset a_RootCimv2  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Bh +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-10h] +
call ?AllocSysString@CString@@QBEPAGXZ  +
push esi  +
lea ecx [ebp-18h] +
push ecx  +
push esi  +
mov edi eax +
mov eax [ebx] +
push 20000h  +
push edi  +
push ebx  +
call dword ptr [eax+18h]  +
push edi  +
mov edi ds:SysFreeString +
mov ebx eax +
call edi  +
cmp ebx esi +
jge loc_100A207  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
mov esi ebx +
jmp loc_100A19D  +
***
cmp [ebp-18h] esi +
jnz loc_100A222  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
mov esi 80004005h +
jmp loc_100A19D  +
***
mov ecx [ebp+10h] +
call ?AllocSysString@CString@@QBEPAGXZ  +
lea edx [ebp-14h] +
mov ebx eax +
mov eax [ebp-18h] +
mov ecx [eax] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+2Ch]  +
push ebx  +
mov [ebp+0Ch] eax +
call edi  +
cmp [ebp+0Ch] esi +
jl loc_100A3A9  +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_100A392  +
mov ecx [eax] +
push esi  +
lea edx [ebp-5Ch] +
push edx  +
push esi  +
push offset aValuemap  +
push eax  +
call dword ptr [ecx+0Ch]  +
push esi  +
lea edx [ebp-4Ch] +
push edx  +
push esi  +
mov ebx eax +
mov eax [ebp-14h] +
mov ecx [eax] +
push offset aValues  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
mov [ebp+0Ch] eax +
jl loc_100A389  +
mov eax 2008h +
cmp [ebp-4Ch] ax +
jnz loc_100A389  +
cmp ebx esi +
jl loc_100A313  +
mov ebx [ebp-54h] +
lea eax [ebp-24h] +
push eax  +
push 1  +
push ebx  +
mov [ebp-24h] esi +
mov [ebp+8] esi +
call ds:SafeArrayGetLBound  +
lea eax [ebp+8] +
push eax  +
push 1  +
push ebx  +
call ds:SafeArrayGetUBound  +
mov eax [ebp-24h] +
mov [ebp+10h] eax +
jmp loc_100A2FF  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp+10h] +
push eax  +
push ebx  +
call ds:SafeArrayGetElement  +
push dword ptr [ebp-3Ch]  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp-1Ch]  +
mov ecx [ebp+14h] +
call sub_10092D7  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-1Ch] +
test eax eax +
jz loc_100A306  +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp+10h]  +
mov eax [ebp+10h] +
cmp eax [ebp+8] +
jle loc_100A2C4  +
jmp loc_100A34D  +
mov eax [ebp+10h] +
mov [ebp+14h] eax +
call ??1CString@@QAE@XZ  +
jmp loc_100A34D  +
mov ebx [ebp+14h] +
mov eax [ebx] +
push 0Ah  +
lea ecx [ebp+10h] +
push ecx  +
push eax  +
mov [ebp+10h] esi +
call ds:wcstol  +
mov [ebp+14h] eax +
mov eax [ebp+10h] +
add esp 0Ch +
cmp eax esi +
jz loc_100A346  +
cmp [ebp+14h] esi +
jnz loc_100A33F  +
cmp [eax] si +
jnz loc_100A346  +
mov eax [ebx] +
cmp [eax-8] esi +
jnz loc_100A34D  +
mov dword ptr [ebp+0Ch] 80004005h +
cmp [ebp+0Ch] esi +
jl loc_100A389  +
mov eax [ebp+14h] +
mov [ebp+10h] eax +
lea eax [ebp+14h] +
push eax  +
lea eax [ebp+10h] +
push eax  +
push dword ptr [ebp-44h]  +
call ds:SafeArrayGetElement  +
test eax eax +
jl loc_100A382  +
push dword ptr [ebp+14h]  +
mov ecx [ebp+18h] +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+14h]  +
call edi  +
mov [ebp+0Ch] esi +
jmp loc_100A389  +
mov dword ptr [ebp+0Ch] 8004102Bh +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+0Ch] esi +
jl loc_100A3A9  +
mov eax [ebp+18h] +
push dword ptr [eax]  +
mov ecx offset unk_10265F8 +
push dword ptr [ebp-20h]  +
call near ptr dword_10092B4+3  +
mov esi ds:VariantClear +
lea eax [ebp-4Ch] +
push eax  +
call esi  +
lea eax [ebp-5Ch] +
push eax  +
call esi  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
mov esi [ebp+0Ch] +
jmp loc_100A19D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
cmp [ebp+arg_4] 80043001h +
push esi  +
mov [ebp+var_4] eax +
jz loc_100A423  +
cmp [ebp+arg_4] 80043002h +
jz loc_100A401  +
mov ecx [ebp+arg_0] +
push offset dword_10016F0  +
call ??0CString@@QAE@PBG@Z  +
jmp loc_100A453  +
mov ecx dword_1026618 +
mov esi offset dword_1026618 +
cmp [ecx-8] eax +
jnz loc_100A44A  +
push dword_1026830  +
call sub_10092F2  +
push 154h  +
jmp loc_100A443  +
mov ecx dword_1026614 +
mov esi offset dword_1026614 +
cmp [ecx-8] eax +
jnz loc_100A44A  +
push dword_1026830  +
call sub_10092F2  +
push 153h  +
mov ecx esi +
call ?LoadStringW@CString@@QAEHI@Z  +
mov ecx [ebp+arg_0] +
push esi  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+arg_0] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpString]  +
mov esi ecx +
call ds:lstrlenW  +
push eax  +
push [ebp+lpString]  +
mov ecx esi +
call sub_100932A  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysStringLen  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_100932A  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10095B2  +
test byte ptr [ebp+8] 1 +
jz loc_100A4C6  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 24h  +
mov eax offset loc_101B09C +
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp-30h] +
push eax  +
call ds:VariantInit  +
mov eax [esi] +
lea ecx [ebp-30h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+4]  +
xor edi edi +
cmp eax edi +
mov [ebp-20h] eax +
jl loc_100A6B7  +
test dword ptr [ebp-30h] 2000h +
jz loc_100A5BF  +
test byte ptr [ebp-30h] 8 +
jz loc_100A5BF  +
cmp [ebp-28h] edi +
jz loc_100A5BF  +
push dword ptr [ebp-28h]  +
call ds:SafeArrayGetDim  +
cmp eax 1 +
jnz loc_100A6B7  +
lea eax [ebp-14h] +
push eax  +
push 1  +
push dword ptr [ebp-28h]  +
mov [ebp-14h] edi +
mov [ebp-18h] edi +
call ds:SafeArrayGetLBound  +
lea eax [ebp-18h] +
push eax  +
push 1  +
push dword ptr [ebp-28h]  +
call ds:SafeArrayGetUBound  +
mov [ebp-10h] edi +
mov eax [ebp-14h] +
mov [ebp-4] edi +
mov [ebp-1Ch] edi +
mov [ebp+8] eax +
jmp loc_100A5A7  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-28h]  +
call ds:SafeArrayGetElement  +
test eax eax +
jl loc_100A5A1  +
mov eax [ebp+8] +
cmp eax [ebp-14h] +
jz loc_100A596  +
push offset asc_1002614  +
lea ecx [ebp-10h] +
call sub_100A460  +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-10h] +
call sub_100A486  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-18h] +
jle loc_100A56C  +
push dword ptr [ebp-10h]  +
mov ecx [ebp+0Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-10h]  +
jmp loc_100A6A4  +
push 8  +
push edi  +
lea eax [ebp-30h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
test eax eax +
jnz loc_100A6B0  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-1Ch] +
call near ptr dword_1009308+3  +
mov ebx [ebp-1Ch] +
xor esi esi +
inc esi  +
mov [ebp-4] esi +
cmp ebx edi +
jnz loc_100A5F2  +
mov [ebp+8] edi +
jmp loc_100A5FC  +
push ebx  +
call ds:SysStringLen  +
mov [ebp+8] eax +
xor ecx ecx +
xor eax eax +
cmp [ebp+8] edi +
jbe loc_100A69A  +
cmp ecx edi +
jnz loc_100A620  +
cmp word ptr [ebx+eax*2] 20h +
jnb loc_100A616  +
mov ecx esi +
inc eax  +
cmp eax [ebp+8] +
jb loc_100A609  +
cmp ecx edi +
jz loc_100A69A  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
movzx esi word ptr [ebx+edi*2] +
cmp si 20h +
jb loc_100A641  +
push esi  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@G@Z  +
jmp loc_100A67A  +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
movzx eax si +
push eax  +
lea eax [ebp-18h] +
push offset aX04x  +
push eax  +
mov byte ptr [ebp-4] 3 +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
inc edi  +
cmp edi [ebp+8] +
jb loc_100A62C  +
mov ecx [ebp+0Ch] +
lea eax [ebp-10h] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
jmp loc_100A6A3  +
mov ecx [ebp+0Ch] +
push ebx  +
call ??4CString@@QAEABV0@PBG@Z  +
push ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ds:SysFreeString  +
jmp loc_100A6B7  +
mov dword ptr [ebp-20h] 80043001h +
mov ecx [ebp+0Ch] +
call ?TrimLeft@CString@@QAEXXZ  +
lea eax [ebp-30h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-20h] +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009713  +
test byte ptr [ebp+8] 1 +
jz loc_100A7DE  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100998C  +
test byte ptr [ebp+8] 1 +
jz loc_100A804  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100B1CD  +
test [ebp+arg_0] 1 +
jz loc_100A82A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+18h] +
test ecx ecx +
jnz loc_100A843  +
mov eax 80004005h +
retn   +
***
jmp loc_100B729  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100A86D  +
mov eax [eax+18h] +
test eax eax +
jz loc_100A86D  +
push 0  +
push [ebp+arg_4]  +
push ecx  +
mov ecx eax +
call sub_100B6B6  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100A8A2  +
mov eax [esi+18h] +
test eax eax +
jz loc_100A8A2  +
push 0  +
push [ebp+arg_4]  +
push ecx  +
mov ecx eax +
call sub_100B6B6  +
mov ecx [esi+18h] +
call sub_100AF69  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
or dword ptr [esi+18h] 0FFFFFFFFh +
xor edi edi +
xor eax eax +
inc eax  +
lea ecx [esi+50h] +
mov dword ptr [esi] offset off_1002634 +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+24h] edi +
mov [esi+28h] eax +
mov [esi+34h] edi +
mov [esi+38h] eax +
mov [esi+3Ch] edi +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+48h] edi +
call ??0CString@@QAE@XZ  +
lea ecx [esi+54h] +
mov [ebp-4] edi +
call ??0CString@@QAE@XZ  +
mov [esi+58h] edi +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+10h] +
mov esi ecx +
mov ebx [ebp+0Ch] +
or dword ptr [esi+18h] 0FFFFFFFFh +
mov [esi+8] eax +
mov eax [ebp+14h] +
mov [esi+14h] eax +
mov eax [ebp+18h] +
xor edi edi +
mov [esi+34h] eax +
mov eax [ebp+1Ch] +
mov [esi+38h] eax +
mov eax [ebp+8] +
lea ecx [esi+50h] +
mov [ebp-128h] esi +
mov dword ptr [esi] offset off_1002634 +
mov [esi+4] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+24h] edi +
mov dword ptr [esi+28h] 1 +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov [esi+3Ch] edi +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+48h] eax +
mov [esi+4Ch] eax +
call ??0CString@@QAE@XZ  +
push ebx  +
lea ecx [esi+54h] +
mov [ebp-4] edi +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi+34h] +
mov ecx eax +
mov [esi+58h] edi +
cmp ecx edi +
jz loc_100A9B7  +
cmp [ecx+4] edi +
jnz loc_100A9AF  +
mov edx [ecx+8] +
cmp [edx-8] edi +
jz loc_100A9B7  +
inc dword ptr [esi+30h]  +
add ecx 1Ch +
jnz loc_100A9A2  +
cmp eax edi +
jz loc_100A9D0  +
cmp [eax+10h] edi +
jz loc_100A9D0  +
mov [esi+18h] edi +
mov dword ptr [esi+20h] 1 +
mov eax [eax+14h] +
mov [esi+1Ch] eax +
cmp [ebp+20h] edi +
jz loc_100AA11  +
lea eax [ebp-124h] +
push eax  +
mov dword ptr [ebp-124h] 114h +
call ds:GetVersionExW  +
test eax eax +
jz loc_100AA11  +
xor eax eax +
cmp dword ptr [ebp+20h] 1 +
jnz loc_100AA04  +
cmp dword ptr [ebp-114h] 2 +
setnz al  +
jmp loc_100AA0E  +
cmp dword ptr [ebp-114h] 2 +
setz al  +
mov [esi+24h] eax +
mov eax esi +
call sub_1019FA8  +
retn 1Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002634 +
mov dword ptr [ebp-4] 1 +
call sub_1008DBA  +
lea ecx [esi+54h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+50h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax [ecx+8] +
retn   +
***
mov eax [ecx+0Ch] +
jmp loc_100AA83  +
cmp dword ptr [eax+24h] 0 +
jnz loc_100AA80  +
cmp dword ptr [eax+28h] 0 +
jnz locret_100AA87  +
mov eax [eax+10h] +
test eax eax +
jnz loc_100AA74  +
retn   +
***
mov eax [ecx+10h] +
jmp loc_100AAA1  +
cmp dword ptr [eax+24h] 0 +
jnz loc_100AA9E  +
cmp dword ptr [eax+28h] 0 +
jnz locret_100AAA5  +
mov eax [eax+10h] +
test eax eax +
jnz loc_100AA92  +
retn   +
***
mov eax [ecx+14h] +
jmp loc_100AABF  +
cmp dword ptr [eax+24h] 0 +
jnz loc_100AABC  +
cmp dword ptr [eax+28h] 0 +
jnz locret_100AAC3  +
mov eax [eax+14h] +
test eax eax +
jnz loc_100AAB0  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
and [ebp+var_4] 0 +
push offset dword_10016F0  +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100AA20  +
test byte ptr [ebp+8] 1 +
jz loc_100AB15  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea ecx [esi+68h] +
call ??4CString@@QAEABV0@PBG@Z  +
and dword ptr [esi+58h] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] ecx +
test edi edi +
jz loc_100AB89  +
mov eax [edi] +
push esi  +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jz loc_100AB7B  +
push ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
push esi  +
mov ebx eax +
call sub_100AB42  +
mov esi ebx +
test ebx ebx +
jnz loc_100AB62  +
pop ebx  +
mov eax [ebp+var_4] +
push dword ptr [eax+1Ch]  +
mov ecx edi +
call sub_100AB21  +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
jmp fword ptr (byte_10233FF-102340Fh)[eax]  +
***
push ss  +
add [ecx] al +
lea ecx [esi+68h] +
mov [ebp-4] edi +
mov dword ptr [esi] offset off_1002694 +
mov [esi+5Ch] edi +
mov [esi+64h] eax +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+20h]  +
lea ecx [esi+6Ch] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi+8] +
cmp eax edi +
jz loc_100AC03  +
cmp [eax+0Ch] edi +
jnz loc_100AC03  +
mov [eax+0Ch] esi +
mov ecx [esi+14h] +
cmp ecx edi +
jz loc_100AC21  +
mov eax [ecx+10h] +
cmp eax edi +
jnz loc_100AC19  +
mov [ecx+10h] esi +
jmp loc_100AC21  +
mov eax [eax+10h] +
cmp [eax+10h] edi +
jnz loc_100AC16  +
mov [eax+10h] esi +
mov eax esi +
call __EH_epilog3  +
retn 28h  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
add ecx 6Ch +
push ecx  +
mov ecx [ebp+arg_0] +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp+arg_0] +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002694 +
lea ecx [esi+6Ch] +
mov dword ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+68h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_100AA20  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+58h] 0 +
jl loc_100ACC2  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10087AE  +
jmp loc_100AD47  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100ACD0  +
push 6Ch  +
call ?LoadStringW@CString@@QAEHI@Z  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_100AD47  +
mov eax [esi+58h] +
cmp eax 80041003h +
jz loc_100AD29  +
cmp eax 80041006h +
jz loc_100AD25  +
cmp eax 8004100Eh +
jz loc_100AD13  +
cmp eax 80041015h +
jz loc_100AD01  +
cmp eax 800706BAh +
jz loc_100AD01  +
push 74h  +
jmp loc_100AD34  +
mov eax [esi+68h] +
cmp dword ptr [eax-8] 0 +
jnz loc_100AD0E  +
push 73h  +
jmp loc_100AD34  +
push eax  +
push 72h  +
jmp loc_100AD3E  +
mov eax [esi+68h] +
cmp dword ptr [eax-8] 0 +
jnz loc_100AD20  +
push 71h  +
jmp loc_100AD34  +
push eax  +
push 70h  +
jmp loc_100AD3E  +
push 6Dh  +
jmp loc_100AD34  +
mov esi [esi+68h] +
cmp dword ptr [esi-8] 0 +
jnz loc_100AD3B  +
push 6Fh  +
call ?LoadStringW@CString@@QAEHI@Z  +
jmp loc_100AD47  +
push esi  +
push 6Eh  +
push ecx  +
call ?Format@CString@@QAAXIZZ  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor edi edi +
mov [esi+4] edi +
mov [esi+8] edi +
mov dword ptr [esi] offset off_10026F8 +
mov [ebp-4] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
push offset dword_10016F0  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 3 +
mov [esi+18h] edi +
call ??0CString@@QAE@PBG@Z  +
mov [esi+20h] edi +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov eax [ecx+18h] +
test eax eax +
jz locret_100ADB1  +
add eax 40h +
push eax  +
call ds:EnterCriticalSection  +
retn   +
***
mov eax [ecx+18h] +
test eax eax +
jz locret_100ADC8  +
add eax 40h +
push eax  +
call ds:LeaveCriticalSection  +
retn   +
***
mov ecx [ecx+18h] +
test ecx ecx +
jz locret_100ADDA  +
jmp sub_100AF69  +
***
retn   +
***
mov ecx [ecx+18h] +
test ecx ecx +
jz locret_100ADEC  +
jmp sub_100B121  +
***
retn   +
***
mov ecx [ecx+18h] +
test ecx ecx +
jz loc_100ADFE  +
jmp sub_100AF4E  +
***
xor eax eax +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10026F8 +
mov ecx [esi+18h] +
mov dword ptr [ebp-4] 4 +
test ecx ecx +
jz loc_100AE32  +
push 1  +
call sub_100A810  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov eax [esi+14h] +
mov byte ptr [ebp-4] 2 +
test eax eax +
jz loc_100AE4F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+10h] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_100AE60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+0Ch] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_100AE71  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1008EBF  +
call __EH_epilog3  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?empty@locale@std@@SA?AV12@XZ +
call __EH_prolog3  +
mov esi ecx +
push dword ptr [ebp+8]  +
lea ecx [esi+1Ch] +
mov dword ptr [esi+4] offset byte_1025168 +
mov dword ptr [esi+8] 1 +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_100AB42  +
push 6Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
mov edi [ebp+0Ch] +
test ecx ecx +
jz loc_100AED8  +
push edi  +
call sub_100AFC1  +
jmp loc_100AEDA  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi+18h] eax +
test eax eax +
jz loc_100AEF0  +
push dword ptr [ebp+8]  +
lea ecx [eax+4] +
call ??4CString@@QAEABV0@PBG@Z  +
mov [esi+20h] edi +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100AC5C  +
test byte ptr [ebp+8] 1 +
jz loc_100AF1C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100AE06  +
test byte ptr [ebp+8] 1 +
jz loc_100AF42  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call ds:WaitForSingleObject  +
sub eax 102h +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100AF4E  +
test eax eax +
jz loc_100AF93  +
push 927C0h  +
push dword ptr [esi+38h]  +
call ds:WaitForSingleObject  +
xor ecx ecx +
cmp eax 102h +
setnz cl  +
pop esi  +
mov eax ecx +
retn   +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
push 0Ah  +
call ??0CPtrList@@QAE@H@Z  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_GS  +
mov esi ecx +
xor ebx ebx +
lea ecx [esi+4] +
mov [ebp-3Ch] esi +
mov [esi] ebx +
call ??0CString@@QAE@XZ  +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
mov [esi+10h] ebx +
lea ecx [esi+1Ch] +
mov [ebp-4] ebx +
mov [esi+14h] ebx +
call ??0CString@@QAE@XZ  +
mov eax [ebp+8] +
push offset dword_10016F0  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 1 +
mov dword ptr [esi+5Ch] 80004005h +
mov [esi+60h] eax +
mov [esi+64h] ebx +
mov [esi+68h] ebx +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp-20h] +
push eax  +
mov byte ptr [ebp-4] 2 +
call ds:CoCreateGuid  +
test eax eax +
jl loc_100B051  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
call ds:StringFromCLSID  +
test eax eax +
jl loc_100B051  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-24h] +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-28h]  +
call ds:CoTaskMemFree  +
mov eax [ebp-24h] +
cmp [eax-8] ebx +
jnz loc_100B071  +
call ds:GetTickCount  +
push eax  +
lea eax [ebp-24h] +
push offset a08x  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
push offset aMsinfodone  +
lea ecx [ebp-2Ch] +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
lea eax [ebp-34h] +
push eax  +
mov byte ptr [ebp-4] 3 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [eax]  +
mov edi ds:CreateEventW +
push 1  +
push 1  +
push ebx  +
call edi  +
lea ecx [ebp-34h] +
mov [esi+38h] eax +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push offset aMsinfostart  +
lea ecx [ebp-30h] +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
lea eax [ebp-38h] +
push eax  +
mov byte ptr [ebp-4] 4 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [eax]  +
push ebx  +
push 1  +
push ebx  +
call edi  +
lea ecx [ebp-38h] +
mov [esi+3Ch] eax +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
mov edi ds:InitializeCriticalSection +
lea eax [esi+40h] +
push eax  +
call edi  +
lea eax [esi+20h] +
push eax  +
call edi  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
mov eax esi +
call sub_1019FA8  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi+8] 1 +
call sub_100AF69  +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
inc edi  +
mov [esi+8] edi +
call sub_100AF4E  +
mov ebx ds:WaitForSingleObject +
test eax eax +
jz loc_100B166  +
push 1388h  +
push dword ptr [esi+38h]  +
call ebx  +
push dword ptr [esi+3Ch]  +
mov [esi+0Ch] edi +
mov [esi+8] edi +
call ds:SetEvent  +
push 1388h  +
push dword ptr [esi+64h]  +
call ebx  +
cmp eax 102h +
jnz loc_100B191  +
push 0  +
push dword ptr [esi+64h]  +
call ds:TerminateThread  +
push dword ptr [esi+64h]  +
call ds:CloseHandle  +
and dword ptr [esi+64h] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1CString@@QAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_100B1C1  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
call sub_100B140  +
mov edi ds:DeleteCriticalSection +
lea eax [esi+40h] +
push eax  +
call edi  +
lea eax [esi+20h] +
push eax  +
call edi  +
push dword ptr [esi+38h]  +
mov edi ds:CloseHandle +
call edi  +
push dword ptr [esi+3Ch]  +
call edi  +
lea ecx [esi+1Ch] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 0Ah  +
lea ecx [ebp-70h] +
call ??0CMapPtrToPtr@@QAE@H@Z  +
xor ebx ebx +
push 0Ah  +
lea ecx [ebp-54h] +
mov [ebp-4] ebx +
call ??0CPtrList@@QAE@H@Z  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
xor esi esi +
call ??0CString@@QAE@XZ  +
mov edi [ebp+8] +
mov byte ptr [ebp-4] 2 +
mov byte ptr [ebp-0Dh] 0 +
cmp edi ebx +
jz loc_100B683  +
push ebx  +
call ds:CoInitialize  +
cmp eax ebx +
jl loc_100B27D  +
mov byte ptr [ebp-0Dh] 1 +
push 2Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
mov byte ptr [ebp-4] 3 +
cmp eax ebx +
jz loc_100B29C  +
mov ecx eax +
call sub_100992F  +
mov [ebp-18h] eax +
jmp loc_100B29F  +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp-18h] ebx +
jz loc_100B677  +
mov eax [edi+4] +
mov ecx [ebp-18h] +
push ebx  +
push eax  +
call sub_1009EA5  +
mov [ebp-34h] eax +
mov [edi+5Ch] eax +
jmp loc_100B623  +
push dword ptr [edi]  +
lea ecx [ebp-54h] +
call ?AddHead@CPtrList@@QAEPAU__POSITION@@PAX@Z  +
cmp [ebp-48h] ebx +
jz loc_100B5D4  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B5D4  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B5D4  +
lea ecx [ebp-54h] +
call ?RemoveHead@CPtrList@@QAEPAXXZ  +
mov esi eax +
cmp esi ebx +
jz loc_100B5C9  +
mov eax [esi] +
push 0  +
lea ecx [ebp-28h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
lea ebx [edi+20h] +
push ebx  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+18h]  +
lea eax [ebp-28h] +
push eax  +
lea ecx [edi+1Ch] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push ebx  +
call ds:LeaveCriticalSection  +
xor ecx ecx +
cmp [esi+30h] ecx +
jz loc_100B58A  +
cmp [esi+64h] ecx +
jz loc_100B58A  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B58A  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B58A  +
mov eax [ebp-34h] +
cmp eax ecx +
mov [esi+58h] ecx +
jge loc_100B371  +
mov [esi+58h] eax +
call ds:GetTickCount  +
mov [esi+5Ch] eax +
jmp loc_100B595  +
cmp [esi+64h] ecx +
jz loc_100B595  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B595  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B595  +
mov ebx [esi+30h] +
xor ecx ecx +
push 1Ch  +
pop edx  +
mov eax ebx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp-24h] eax +
mov byte ptr [ebp-4] 4 +
test eax eax +
jz loc_100B3E4  +
push offset ??1CPtrList@@UAE@XZ  +
push offset loc_100AF9D  +
push ebx  +
mov [eax] ebx +
add eax 4 +
push 1Ch  +
push eax  +
mov [ebp+8] eax +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov ebx [ebp+8] +
mov [ebp-24h] ebx +
jmp loc_100B3EB  +
and dword ptr [ebp-24h] 0 +
mov ebx [ebp-24h] +
mov byte ptr [ebp-4] 2 +
test ebx ebx +
jz loc_100B595  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [esi+64h]  +
lea ecx [ebp-70h] +
call ?Lookup@CMapPtrToPtr@@QBEHPAXAAPAX@Z  +
test eax eax +
jnz loc_100B40D  +
and [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [esi+30h]  +
lea eax [edi+8] +
push ebx  +
push eax  +
push dword ptr [esi+60h]  +
push dword ptr [ebp-18h]  +
call dword ptr [esi+64h]  +
cmp dword ptr [ebp-1Ch] 0 +
mov [esi+58h] eax +
jz loc_100B44F  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B44F  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B44F  +
mov eax [ebp-1Ch] +
push dword ptr [esi+64h]  +
lea ecx [ebp-70h] +
mov [ebp+8] eax +
call ??ACMapPtrToPtr@@QAEAAPAXPAX@Z  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [edi+8] +
test eax eax +
jnz loc_100B51C  +
cmp [esi+58h] eax +
jl loc_100B522  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B51C  +
mov ebx [ebx+0Ch] +
lea eax [edi+40h] +
push eax  +
call ds:EnterCriticalSection  +
mov ecx esi +
call sub_1008C2B  +
test ebx ebx +
jz loc_100B48E  +
push ebx  +
mov ecx esi +
call sub_1008CC2  +
and dword ptr [ebp-14h] 0 +
cmp dword ptr [esi+30h] 0 +
jle loc_100B507  +
mov eax [ebp-24h] +
mov [ebp-20h] eax +
and dword ptr [ebp+8] 0 +
cmp dword ptr [esi+2Ch] 0 +
jle loc_100B4F8  +
mov eax [ebp-20h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_100B4ED  +
mov ecx eax +
call ?RemoveHead@CPtrList@@QAEPAXXZ  +
mov ebx eax +
push dword ptr [ebx+4]  +
mov ecx esi +
push ebx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+8]  +
call sub_1008825  +
cmp dword ptr [ebp-14h] 0 +
jz loc_100B4D7  +
cmp dword ptr [ebx+8] 0 +
jz loc_100B4E4  +
push dword ptr [ebx+8]  +
mov ecx esi +
push dword ptr [ebp+8]  +
call sub_100886A  +
push 1  +
mov ecx ebx +
call sub_100B1A7  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [esi+2Ch] +
jl loc_100B4A8  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
add dword ptr [ebp-20h] 1Ch +
cmp eax [esi+30h] +
jl loc_100B49E  +
lea eax [edi+40h] +
push eax  +
call ds:LeaveCriticalSection  +
call ds:GetTickCount  +
mov ebx [ebp-24h] +
jmp loc_100B528  +
cmp dword ptr [esi+58h] 0 +
jge loc_100B52D  +
call ds:GetTickCount  +
mov ecx [edi] +
mov [ecx+5Ch] eax +
and dword ptr [ebp-24h] 0 +
cmp dword ptr [esi+30h] 0 +
jle loc_100B56E  +
lea eax [ebx+0Ch] +
mov [ebp+8] eax +
jmp loc_100B557  +
mov ecx [ebp+8] +
add ecx 0FFFFFFF4h +
call ?RemoveHead@CPtrList@@QAEPAXXZ  +
test eax eax +
jz loc_100B557  +
push 1  +
mov ecx eax +
call sub_100B1A7  +
mov eax [ebp+8] +
cmp dword ptr [eax] 0 +
jnz loc_100B53F  +
inc dword ptr [ebp-24h]  +
mov eax [ebp-24h] +
add dword ptr [ebp+8] 1Ch +
cmp eax [esi+30h] +
jl loc_100B557  +
lea eax [ebx-4] +
cmp dword ptr [eax] 0 +
jz loc_100B581  +
mov eax [ebx] +
push 3  +
mov ecx ebx +
call dword ptr [eax+4]  +
jmp loc_100B595  +
push eax  +
call sub_10199FA  +
pop ecx  +
jmp loc_100B595  +
call ds:GetTickCount  +
mov ecx [edi] +
mov [ecx+5Ch] eax +
mov eax [edi+10h] +
test eax eax +
jz loc_100B5C9  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_100B5C9  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B5C9  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
jmp loc_100B5C3  +
push ebx  +
lea ecx [ebp-54h] +
call ?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
mov ebx eax +
test ebx ebx +
jnz loc_100B5B3  +
xor ebx ebx +
cmp [ebp-48h] ebx +
jnz loc_100B2D7  +
cmp [edi+60h] ebx +
jz loc_100B5F5  +
mov eax [edi+8] +
test eax eax +
jnz loc_100B5F5  +
cmp esi ebx +
jz loc_100B5F5  +
push dword ptr [edi]  +
push ebx  +
push 401h  +
push dword ptr [edi+60h]  +
call ds:PostMessageW  +
push dword ptr [edi+38h]  +
call ds:SetEvent  +
push 0FFFFFFFFh  +
push dword ptr [edi+3Ch]  +
call ds:WaitForSingleObject  +
push dword ptr [edi+3Ch]  +
call ds:ResetEvent  +
push dword ptr [edi+38h]  +
call ds:ResetEvent  +
lea ecx [ebp-54h] +
call ?RemoveAll@CPtrList@@QAEXXZ  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_100B2C4  +
mov eax [ebp-64h] +
neg eax  +
sbb eax eax +
mov [ebp-30h] eax +
cmp eax ebx +
jz loc_100B666  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-70h] +
call ?GetNextAssoc@CMapPtrToPtr@@QBEXAAPAU__POSITION@@AAPAX1@Z  +
cmp [ebp-2Ch] ebx +
jz loc_100B661  +
lea eax [ebp-38h] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call dword ptr [ebp-2Ch]  +
cmp [ebp-30h] ebx +
jnz loc_100B63C  +
lea ecx [ebp-70h] +
call ?RemoveAll@CMapPtrToPtr@@QAEXXZ  +
mov ecx [ebp-18h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_100B683  +
call ds:CoUninitialize  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-54h] +
mov byte ptr [ebp-4] 0 +
call ??1CPtrList@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-70h] +
call ??1CMapPtrToPtr@@UAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
call sub_100B121  +
mov eax [ebp+arg_4] +
mov [esi+10h] eax +
mov eax [ebp+arg_8] +
mov [esi+14h] eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [esi] eax +
mov [esi+8] ebx +
mov [esi+18h] ebx +
cmp [esi+64h] ebx +
jnz loc_100B70C  +
push edi  +
push dword ptr [esi+38h]  +
mov edi ds:ResetEvent +
call edi  +
push dword ptr [esi+3Ch]  +
call edi  +
lea eax [esi+68h] +
push eax  +
push ebx  +
push esi  +
push offset StartAddress  +
push ebx  +
push ebx  +
call ds:CreateThread  +
mov [esi+64h] eax +
pop edi  +
jmp loc_100B71E  +
push dword ptr [esi+38h]  +
call ds:ResetEvent  +
push dword ptr [esi+3Ch]  +
call ds:SetEvent  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+60h] +
xor ebx ebx +
mov [ebp-4] eax +
mov [esi] ebx +
mov [esi+60h] ebx +
cmp [esi+64h] ebx +
jnz loc_100B76D  +
push edi  +
push dword ptr [esi+38h]  +
mov edi ds:ResetEvent +
call edi  +
push dword ptr [esi+3Ch]  +
call edi  +
lea eax [esi+68h] +
push eax  +
push ebx  +
push esi  +
push offset StartAddress  +
push ebx  +
push ebx  +
call ds:CreateThread  +
mov [esi+64h] eax +
pop edi  +
mov ecx esi +
call sub_100AF69  +
mov eax [ebp-4] +
mov [esi+60h] eax +
mov eax [esi+5Ch] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-8] 0 +
lea edx [ebp-4] +
push edx  +
push dword ptr [ebp+8]  +
call dword ptr [eax+4]  +
test eax eax +
jl loc_100B7CB  +
mov ecx [ebp-4] +
mov eax [ecx] +
push 0  +
lea edx [ebp-8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jge loc_100B7BE  +
and dword ptr [ebp-8] 0 +
mov ecx [ebp-4] +
test ecx ecx +
jz loc_100B7CB  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-8] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jl loc_100B7F0  +
mov eax [ecx] +
cmp edx [eax-8] +
jge loc_100B7F0  +
mov ax [eax+edx*2] +
jmp loc_100B7F2  +
xor eax eax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp+0Ch] +
mov [esi+4] eax +
mov eax [ebp+10h] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 10h  +
mov eax offset __ehhandler$?x_ismbbtype_l@@YAHPAUlocaleinfo_struct@@IHH@Z +
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-14h] ebx +
push dword_1026830  +
call sub_10092F2  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
mov [ebp-4] ebx +
call ?LoadStringW@CString@@QAEHI@Z  +
test eax eax +
jz loc_100B917  +
jmp loc_100B8FF  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_100B89F  +
push offset asc_1002758  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ?SpanExcluding@CString@@QBE?AV1@PBG@Z  +
mov eax [eax] +
mov ecx [ebp+8] +
or dword ptr [ebp-14h] 1 +
push ebx  +
push ebx  +
push eax  +
mov byte ptr [ebp-4] 2 +
call near ptr dword_100B7F8+3  +
mov esi eax +
jmp loc_100B8A1  +
xor esi esi +
test byte ptr [ebp-14h] 1 +
mov [ebp-4] ebx +
jz loc_100B8B6  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
cmp esi ebx +
jz loc_100B903  +
mov eax [ebp-10h] +
mov eax [eax-8] +
mov ecx [esi] +
sub eax [ecx-8] +
lea ecx [ebp-10h] +
dec eax  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx edi +
imul ecx ecx +
add ecx [ebp+0Ch] +
push esi  +
call ?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z  +
inc edi  +
cmp edi [ebp+10h] +
jnz loc_100B90B  +
xor edi edi +
jmp loc_100B90B  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
mov eax [ebp-10h] +
cmp [eax-8] ebx +
jnz loc_100B862  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
push 10h  +
mov eax offset __ehhandler$?x_ismbbtype_l@@YAHPAUlocaleinfo_struct@@IHH@Z_0 +
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-10h] ebx +
cmp [ebp+8] ebx +
jz loc_100BA1E  +
push dword ptr [ebp+8]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
mov [ebp-4] ebx +
jmp loc_100B9FA  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_100B99A  +
push offset asc_1002758  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp+8] +
call ?SpanExcluding@CString@@QBE?AV1@PBG@Z  +
mov eax [eax] +
mov ecx [ebp-14h] +
or dword ptr [ebp-10h] 1 +
push ebx  +
push ebx  +
push eax  +
mov byte ptr [ebp-4] 2 +
call near ptr dword_100B7F8+3  +
mov esi eax +
jmp loc_100B99C  +
xor esi esi +
test byte ptr [ebp-10h] 1 +
mov [ebp-4] ebx +
jz loc_100B9B1  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
cmp esi ebx +
jz loc_100B9FE  +
mov eax [ebp+8] +
mov eax [eax-8] +
mov ecx [esi] +
sub eax [ecx-8] +
lea ecx [ebp+8] +
dec eax  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx edi +
imul ecx ecx +
add ecx [ebp+0Ch] +
push esi  +
call ?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z  +
inc edi  +
cmp edi [ebp+10h] +
jnz loc_100BA06  +
xor edi edi +
jmp loc_100BA06  +
lea ecx [ebp+8] +
call ?Empty@CString@@QAEXXZ  +
mov eax [ebp+8] +
cmp [eax-8] ebx +
jnz loc_100B95D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
mov eax offset loc_101B414 +
call __EH_prolog3_GS  +
mov eax [ebp+8] +
and dword ptr [ebp-238h] 0 +
mov [ebp-234h] eax +
xor eax eax +
push 206h  +
push eax  +
mov [ebp-228h] ax +
lea eax [ebp-226h] +
push eax  +
call memset  +
xor eax eax +
add esp 0Ch +
mov dword ptr [ebp-20h] 2Ch +
lea edi [ebp-1Ch] +
stos   +
mov dword ptr [ebp-18h] 2Eh +
lea edi [ebp-14h] +
stos   +
mov edi ds:GetLocaleInfoW +
push 4  +
lea eax [ebp-20h] +
push eax  +
push 0Fh  +
mov esi 400h +
push esi  +
call edi  +
push 4  +
lea eax [ebp-18h] +
push eax  +
push 0Eh  +
push esi  +
call edi  +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp-250h] +
stos   +
mov edi [ebp+14h] +
mov dword ptr [ebp-248h] 3 +
test edi edi +
jz loc_100BACA  +
lea eax [ebp-18h] +
mov [ebp-244h] eax +
jmp loc_100BAD4  +
mov dword ptr [ebp-244h] offset dword_10016F0 +
lea eax [ebp-20h] +
lea ecx [ebp-22Ch] +
mov [ebp-250h] edi +
mov [ebp-240h] eax +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
inc ebx  +
lea ecx [ebp-230h] +
mov [ebp-4] ebx +
call ??0CString@@QAE@XZ  +
push edi  +
lea eax [ebp-230h] +
push offset a_Df  +
push eax  +
mov byte ptr [ebp-4] 2 +
call ?Format@CString@@QAAXPBGZZ  +
fld  qword ptr [ebp+0Ch] +
pop ecx  +
fstp  qword ptr [esp] +
push dword ptr [ebp-230h]  +
lea eax [ebp-22Ch] +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 10h +
push offset a__1  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-22Ch] +
push eax  +
call sub_1011C68  +
push 104h  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-250h] +
push eax  +
push dword ptr [ebp-22Ch]  +
push 0  +
push esi  +
call ds:GetNumberFormatW  +
mov ecx [ebp-234h] +
lea eax [ebp-228h] +
push eax  +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-230h] +
mov [ebp-238h] ebx +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-22Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-234h] +
call sub_1019FA8  +
retn 10h  +
***
call __EH_prolog3  +
mov ecx [ebp+8] +
mov eax [ecx] +
mov eax [eax-8] +
sub eax [ebp+10h] +
push eax  +
lea eax [ebp+8] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_100BBEA  +
add esi [ebp+10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
xor ebx ebx +
lea ecx [ebp-14h] +
mov [ebp-4] ebx +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
push offset dword_10016F0  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBG@Z  +
mov edi [ebp+8] +
push edi  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 4 +
mov [ebp-24h] ebx +
mov dword ptr [ebp+8] 1 +
cmp [eax-8] ebx +
jz loc_100BE98  +
push offset asc_1002774  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHPBG@Z  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_100BE73  +
lea eax [esi+1] +
push eax  +
push offset asc_1002774  +
lea eax [ebp-10h] +
push eax  +
call sub_100BBB0  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_100BCB4  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
jmp loc_100BD08  +
push ebx  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-10h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 5 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-10h] +
mov eax [eax-8] +
sub eax ebx +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 6 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
inc esi  +
push esi  +
lea ecx [ebp-18h] +
call sub_100B7D7  +
movzx eax ax +
push eax  +
mov [ebp-44h] eax +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jnz loc_100BD2C  +
mov eax [ebp-18h] +
cmp esi [eax-8] +
jl loc_100BD08  +
mov ebx [ebp+10h] +
push offset asc_1002770  +
mov ecx ebx +
call ?Find@CString@@QBEHPBG@Z  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_100BD95  +
push esi  +
lea eax [ebp-30h] +
push eax  +
mov ecx ebx +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 7 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
mov eax [ebx] +
mov eax [eax-8] +
sub eax esi +
dec eax  +
push eax  +
lea eax [ebp-34h] +
push eax  +
mov ecx ebx +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
mov ecx ebx +
mov byte ptr [ebp-4] 8 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
jmp loc_100BDA5  +
push ebx  +
lea ecx [ebp-14h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ecx ebx +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-14h] +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-14h] +
call ?TrimRight@CString@@QAEXXZ  +
push offset aMsiadvanced  +
lea ecx [ebp-3Ch] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push 0Bh  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 9 +
call ?Left@CString@@QBE?AV1@H@Z  +
push dword ptr [esi]  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-38h] +
inc bl  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_100BE35  +
mov eax [ebp-14h] +
mov eax [eax-8] +
add eax 0FFFFFFF5h +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-14h] +
mov dword ptr [ebp-24h] 1 +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Ah +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+0Ch] +
mov eax [ecx] +
lea edx [ebp-48h] +
push edx  +
lea edx [ebp-20h] +
push edx  +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-14h]  +
call dword ptr [eax+24h]  +
mov ebx eax +
test ebx ebx +
jl loc_100BE58  +
and dword ptr [ebp+8] 0 +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp-1Ch] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
jnz loc_100BC6D  +
jmp loc_100BE7F  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-1Ch] +
call ??YCString@@QAEABV0@ABV0@@Z  +
cmp dword ptr [ebp+8] 0 +
jnz loc_100BE98  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-48h] +
mov [edi+4] eax +
jmp loc_100BEBE  +
push ebx  +
lea eax [ebp+8] +
push eax  +
call sub_100A3D4  +
push eax  +
mov ecx edi +
mov byte ptr [ebp-4] 0Bh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
and dword ptr [edi+4] 0 +
mov eax [ebp-24h] +
lea ecx [ebp-10h] +
mov [edi+8] eax +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 0Ch  +
***
push 84h  +
mov eax offset loc_101B4C9 +
call __EH_prolog3  +
mov esi ecx +
push dword ptr [ebp+14h]  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+0Ch]  +
mov ebx [ebp+8] +
mov eax [esi] +
and dword ptr [ebp-4] 0 +
mov edi [ebx+0Ch] +
push ebx  +
push dword ptr [ebp+18h]  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor esi esi +
cmp [ebp+0Ch] esi +
jle loc_100BFBB  +
cmp esi 20h +
jge loc_100BFBB  +
push edi  +
mov ecx ebx +
call ?FindIndex@CPtrList@@QBEPAU__POSITION@@H@Z  +
mov [ebp+esi*4-90h] eax +
inc esi  +
add ebx 1Ch +
cmp esi [ebp+0Ch] +
jl loc_100BF4B  +
jmp loc_100BFBB  +
cmp dword ptr [ebp+0Ch] 0 +
jle loc_100BFBB  +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
lea esi [ebp-90h] +
mov [ebp+14h] eax +
cmp dword ptr [esi] 0 +
jz loc_100BFB0  +
push esi  +
mov ecx ebx +
call sub_100CBAE  +
mov edi [eax] +
test edi edi +
jz loc_100BFB0  +
push offset asc_1002774  +
mov ecx edi +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100BFB0  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+10h]  +
push edi  +
call near ptr dword_100BC00+5  +
add esi 4 +
add ebx 1Ch +
dec dword ptr [ebp+14h]  +
jnz loc_100BF7F  +
cmp dword ptr [ebp-90h] 0 +
jnz loc_100BF6A  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 14h  +
***
push 84h  +
mov eax offset loc_101B4C9 +
call __EH_prolog3  +
mov esi ecx +
push dword ptr [ebp+14h]  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+0Ch]  +
mov ebx [ebp+8] +
mov eax [esi] +
and dword ptr [ebp-4] 0 +
mov edi [ebx+0Ch] +
push ebx  +
push dword ptr [ebp+18h]  +
mov ecx esi +
call dword ptr [eax+10h]  +
xor esi esi +
cmp [ebp+0Ch] esi +
jle loc_100C088  +
cmp esi 20h +
jge loc_100C088  +
push edi  +
mov ecx ebx +
call ?FindIndex@CPtrList@@QBEPAU__POSITION@@H@Z  +
mov [ebp+esi*4-90h] eax +
inc esi  +
add ebx 1Ch +
cmp esi [ebp+0Ch] +
jl loc_100C018  +
jmp loc_100C088  +
cmp dword ptr [ebp+0Ch] 0 +
jle loc_100C088  +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
lea esi [ebp-90h] +
mov [ebp+14h] eax +
cmp dword ptr [esi] 0 +
jz loc_100C07D  +
push esi  +
mov ecx ebx +
call sub_100CBAE  +
mov edi [eax] +
test edi edi +
jz loc_100C07D  +
push offset asc_1002774  +
mov ecx edi +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100C07D  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+10h]  +
push edi  +
call near ptr dword_100BC00+5  +
add esi 4 +
add ebx 1Ch +
dec dword ptr [ebp+14h]  +
jnz loc_100C04C  +
cmp dword ptr [ebp-90h] 0 +
jnz loc_100C037  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 14h  +
***
push 0  +
mov eax offset loc_101B6F5 +
call __EH_prolog3  +
mov esi ecx +
mov ecx [ebp+8] +
mov eax [ecx+0Ch] +
test eax eax +
jnz loc_100C0C7  +
cmp [ebp+10h] eax +
jnz loc_100C108  +
mov eax [ebp+0Ch] +
test eax eax +
jle loc_100C108  +
mov edi ecx +
mov [ebp+10h] eax +
push offset dword_10016F0  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
and dword ptr [ebp-4] 0 +
push 0  +
push 0  +
lea ecx [ebp+8] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+30h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
add edi 1Ch +
dec dword ptr [ebp+10h]  +
jnz loc_100C0D3  +
call __EH_epilog3  +
retn 0Ch  +
***
push 39Ch  +
mov eax offset loc_101B5D3 +
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov edi [ebp+8] +
mov [ebp-344h] eax +
mov eax [ebp+14h] +
mov [ebp-34Ch] eax +
mov eax [ebp+18h] +
mov esi ecx +
push offset dword_10016F0  +
lea ecx [ebp-31Ch] +
mov [ebp-370h] eax +
mov dword ptr [ebp-320h] 80004005h +
call ??0CString@@QAE@PBG@Z  +
push dword_1026830  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-324h] ebx +
call sub_10092F2  +
movzx eax word ptr [ebp+10h] +
cmp eax 74h +
jg loc_100C5CD  +
jz loc_100C44A  +
sub eax 61h +
jz loc_100C3F3  +
dec eax  +
jz loc_100C381  +
dec eax  +
jz loc_100C296  +
dec eax  +
jz loc_100C78C  +
dec eax  +
dec eax  +
jz loc_100C243  +
sub eax 6 +
jz loc_100C20B  +
sub eax 7 +
jnz loc_100CA57  +
mov eax [esi] +
lea ecx [ebp-31Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
cmp word ptr [ebp+10h] 75h +
jnz loc_100CA32  +
lea ecx [ebp-31Ch] +
call ?MakeUpper@CString@@QAEXXZ  +
jmp loc_100CA44  +
mov eax [esi] +
lea ecx [ebp-33Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
fld  qword ptr [ebp-33Ch] +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [ebp-344h]  +
lea eax [ebp-31Ch] +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
fld  qword ptr [ebp-33Ch] +
add esp 10h +
call _ftol2  +
mov [ebp-324h] eax +
jmp loc_100CA4F  +
fldz   +
mov eax [esi] +
lea ecx [ebp-334h] +
fstp  qword ptr [ebp-340h] +
push ecx  +
push edi  +
mov ecx esi +
mov [ebp-338h] ebx +
call dword ptr [eax+10h]  +
mov [ebp-320h] eax +
lea eax [ebp-334h] +
push eax  +
lea ecx [ebp-39Ch] +
call ??4COleDateTime@@QAEABV0@ABU_SYSTEMTIME@@@Z  +
fld  qword ptr [ebp-39Ch] +
cmp [ebp-320h] ebx +
fstp  qword ptr [ebp-340h] +
mov eax [ebp-394h] +
mov [ebp-338h] eax +
jl loc_100CA57  +
fld  qword ptr [ebp-39Ch] +
call _ftol2  +
lea ecx [ebp-31Ch] +
mov [ebp-324h] eax +
call ?Empty@CString@@QAEXXZ  +
push 104h  +
lea eax [ebp-318h] +
push eax  +
push ebx  +
lea eax [ebp-334h] +
push eax  +
push 1  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
test eax eax +
jz loc_100C343  +
lea eax [ebp-318h] +
push eax  +
lea ecx [ebp-31Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp-31Ch] +
cmp [eax-8] ebx +
jnz loc_100CA4F  +
push esi  +
push ebx  +
lea eax [ebp-364h] +
push eax  +
lea ecx [ebp-340h] +
call ?Format@COleDateTime@@QBE?AVCString@@KK@Z  +
push eax  +
lea ecx [ebp-31Ch] +
mov byte ptr [ebp-4] 12h +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-364h] +
jmp loc_100CA11  +
mov eax dword_102661C +
cmp [eax-8] ebx +
jnz loc_100C39A  +
push 1B0h  +
mov ecx offset dword_102661C +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_1026620 +
cmp [eax-8] ebx +
jnz loc_100C3B3  +
push 1B1h  +
mov ecx offset dword_1026620 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [esi] +
lea ecx [ebp-324h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
mov eax offset dword_102661C +
cmp [ebp-324h] ebx +
jnz loc_100C3E2  +
mov eax offset dword_1026620 +
push eax  +
lea ecx [ebp-31Ch] +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_100CA4F  +
mov eax [esi] +
lea ecx [ebp-31Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
push 10h  +
push ebx  +
push dword ptr [ebp-31Ch]  +
call ds:wcstoul  +
add esp 0Ch +
push 104h  +
lea ecx [ebp-318h] +
push ecx  +
push 6  +
push eax  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_100CA4F  +
lea eax [ebp-318h] +
jmp loc_100C77B  +
fldz   +
mov eax [esi] +
lea ecx [ebp-334h] +
fstp  qword ptr [ebp-340h] +
push ecx  +
push edi  +
mov ecx esi +
mov [ebp-338h] ebx +
call dword ptr [eax+10h]  +
mov [ebp-320h] eax +
lea eax [ebp-334h] +
push eax  +
lea ecx [ebp-3A8h] +
call ??4COleDateTime@@QAEABV0@ABU_SYSTEMTIME@@@Z  +
fld  qword ptr [ebp-3A8h] +
cmp [ebp-320h] ebx +
fstp  qword ptr [ebp-340h] +
mov eax [ebp-3A0h] +
mov [ebp-338h] eax +
jl loc_100CA57  +
fld  qword ptr [ebp-3A8h] +
call _ftol2  +
lea ecx [ebp-31Ch] +
mov [ebp-324h] eax +
call ?Empty@CString@@QAEXXZ  +
mov edi 104h +
push edi  +
lea eax [ebp-318h] +
push eax  +
push ebx  +
lea eax [ebp-334h] +
push eax  +
push 1  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
test eax eax +
jz loc_100C58F  +
lea eax [ebp-318h] +
push eax  +
lea ecx [ebp-31Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
push edi  +
lea eax [ebp-318h] +
push eax  +
push ebx  +
lea eax [ebp-334h] +
push eax  +
push 2  +
push esi  +
call ds:GetTimeFormatW  +
test eax eax +
jz loc_100C58F  +
lea eax [ebp-318h] +
push eax  +
lea ecx [ebp-390h] +
call ??0CString@@QAE@PBG@Z  +
mov edi eax +
push (offset dword_1002794+4)  +
lea ecx [ebp-378h] +
mov byte ptr [ebp-4] 0Eh +
call ??0CString@@QAE@PBG@Z  +
push edi  +
push eax  +
lea eax [ebp-368h] +
push eax  +
mov byte ptr [ebp-4] 0Fh +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-31Ch] +
mov byte ptr [ebp-4] 10h +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-368h] +
mov byte ptr [ebp-4] 0Fh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-378h] +
mov byte ptr [ebp-4] 0Eh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-390h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov eax [ebp-31Ch] +
cmp [eax-8] ebx +
jnz loc_100CA4F  +
push esi  +
push ebx  +
lea eax [ebp-384h] +
push eax  +
lea ecx [ebp-340h] +
call ?Format@COleDateTime@@QBE?AVCString@@KK@Z  +
push eax  +
lea ecx [ebp-31Ch] +
mov byte ptr [ebp-4] 11h +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-384h] +
jmp loc_100CA11  +
sub eax 75h +
jz loc_100C20B  +
dec eax  +
jz loc_100CA1B  +
dec eax  +
jz loc_100C5F5  +
dec eax  +
jz loc_100C78C  +
dec eax  +
jz loc_100C6ED  +
dec eax  +
jnz loc_100CA57  +
mov eax dword_1026624 +
cmp [eax-8] ebx +
jnz loc_100C60E  +
push 14Eh  +
mov ecx offset dword_1026624 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_1026628 +
cmp [eax-8] ebx +
jnz loc_100C627  +
push 14Fh  +
mov ecx offset dword_1026628 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_102662C +
cmp [eax-8] ebx +
jnz loc_100C640  +
push 150h  +
mov ecx offset dword_102662C +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_1026630 +
cmp [eax-8] ebx +
jnz loc_100C659  +
push 151h  +
mov ecx offset dword_1026630 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_1026634 +
cmp [eax-8] ebx +
jnz loc_100C672  +
push 152h  +
mov ecx offset dword_1026634 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [esi] +
lea ecx [ebp-33Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+14h]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
lea ecx [ebp-328h] +
call ??0CString@@QAE@XZ  +
fld  qword ptr [ebp-33Ch] +
mov byte ptr [ebp-4] 1 +
call _ftol2  +
fld  qword ptr [ebp-33Ch] +
cmp word ptr [ebp+10h] 77h +
mov [ebp-324h] eax +
jnz loc_100C7C9  +
push ebx  +
push ecx  +
push ecx  +
lea eax [ebp-38Ch] +
fstp  qword ptr [esp] +
push eax  +
call near ptr dword_100BA28+3  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38Ch] +
jmp loc_100C9F0  +
xor eax eax +
push 0FEh  +
mov [ebp-110h] ax +
lea eax [ebp-10Eh] +
push ebx  +
push eax  +
mov [ebp-32Ch] ebx +
mov [ebp-328h] ebx +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp-32Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+18h]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
push ebx  +
push 400h  +
push dword ptr [ebp-328h]  +
push dword ptr [ebp-32Ch]  +
call __allmul  +
push 80h  +
lea ecx [ebp-110h] +
push ecx  +
push 1  +
push edx  +
push eax  +
mov [ebp-32Ch] eax +
mov [ebp-328h] edx +
call ds:StrFormatByteSizeEx  +
test eax eax +
jl loc_100CA4F  +
lea eax [ebp-110h] +
push eax  +
lea ecx [ebp-31Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100CA4F  +
mov eax [esi] +
lea ecx [ebp-324h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
mov [ebp-320h] eax +
jl loc_100CA57  +
push dword ptr [ebp-324h]  +
lea eax [ebp-31Ch] +
push dword ptr [ebp-344h]  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
jmp loc_100CA4F  +
xor edi edi +
fld  qword ptr ds:dword_100278C+4 +
fcomp  st(1) +
fnstsw  ax +
test ah 41h +
jp loc_100C7E6  +
fmul  qword ptr ds:dword_1002784+4 +
inc edi  +
cmp edi 4 +
jle loc_100C7CB  +
mov eax edi +
neg eax  +
sbb eax eax +
and eax 2 +
push eax  +
push ecx  +
push ecx  +
lea eax [ebp-35Ch] +
fstp  qword ptr [esp] +
push eax  +
call near ptr dword_100BA28+3  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 3 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-35Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
mov eax edi +
sub eax ebx +
mov esi (offset dword_1002794+4) +
jz loc_100C8EE  +
dec eax  +
jz loc_100C8C4  +
dec eax  +
jz loc_100C89A  +
dec eax  +
jz loc_100C870  +
dec eax  +
jnz loc_100C91F  +
push offset dword_1026634  +
push esi  +
lea eax [ebp-37Ch] +
push eax  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 8 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-37Ch] +
jmp loc_100C916  +
push offset dword_1026630  +
push esi  +
lea eax [ebp-350h] +
push eax  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 7 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-350h] +
jmp loc_100C916  +
push offset dword_102662C  +
push esi  +
lea eax [ebp-380h] +
push eax  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 6 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-380h] +
jmp loc_100C916  +
push offset dword_1026628  +
push esi  +
lea eax [ebp-36Ch] +
push eax  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 5 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-36Ch] +
jmp loc_100C916  +
push offset dword_1026624  +
push esi  +
lea eax [ebp-388h] +
push eax  +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 4 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-388h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
cmp word ptr [ebp+10h] 7Ah +
jnz loc_100C9F9  +
cmp edi ebx +
jz loc_100C9F9  +
fld  qword ptr [ebp-33Ch] +
push ebx  +
push ecx  +
push ecx  +
lea eax [ebp-348h] +
fstp  qword ptr [esp] +
push eax  +
call near ptr dword_100BA28+3  +
push eax  +
push offset asc_100277C  +
lea eax [ebp-360h] +
push eax  +
mov byte ptr [ebp-4] 9 +
call ??H@YG?AVCString@@PBGABV0@@Z  +
push esi  +
push eax  +
lea eax [ebp-358h] +
push eax  +
mov byte ptr [ebp-4] 0Ah +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
push offset dword_1026624  +
push eax  +
lea eax [ebp-354h] +
push eax  +
mov byte ptr [ebp-4] 0Bh +
call ??H@YG?AVCString@@ABV0@0@Z  +
push offset asc_1002778  +
push eax  +
lea eax [ebp-374h] +
push eax  +
mov byte ptr [ebp-4] 0Ch +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
push eax  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 0Dh +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-374h] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-354h] +
mov byte ptr [ebp-4] 0Bh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-358h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-360h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-348h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-328h] +
push eax  +
lea ecx [ebp-31Ch] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-328h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_100CA4F  +
mov eax [esi] +
lea ecx [ebp-31Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
mov [ebp-320h] eax +
jmp loc_100CA4F  +
cmp word ptr [ebp+10h] 6Ch +
jnz loc_100CA44  +
lea ecx [ebp-31Ch] +
call ?MakeLower@CString@@QAEXXZ  +
lea ecx [ebp-31Ch] +
call ?TrimRight@CString@@QAEXXZ  +
cmp [ebp-320h] ebx +
jge loc_100CA8D  +
push dword ptr [ebp-320h]  +
lea eax [ebp-348h] +
push eax  +
call sub_100A3D4  +
push eax  +
lea ecx [ebp-31Ch] +
mov byte ptr [ebp-4] 13h +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-348h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov [ebp-324h] ebx +
mov ecx [ebp-34Ch] +
cmp ecx ebx +
jz loc_100CB54  +
cmp word ptr [ebp+10h] 64h +
jz loc_100CB48  +
cmp word ptr [ebp+10h] 78h +
jz loc_100CB48  +
cmp word ptr [ebp+10h] 66h +
jz loc_100CB48  +
push dword ptr [ebp-344h]  +
lea ecx [ebp-328h] +
call ??0CString@@QAE@PBG@Z  +
push offset asc_1002774  +
lea ecx [ebp-328h] +
mov byte ptr [ebp-4] 14h +
call ?Find@CString@@QBEHPBG@Z  +
mov esi eax +
mov eax [ebp-328h] +
mov edi [eax-8] +
cmp esi 0FFFFFFFFh +
jz loc_100CB38  +
cmp esi edi +
jge loc_100CB38  +
push esi  +
lea ecx [ebp-328h] +
call sub_100B7D7  +
cmp ax [ebp+10h] +
jz loc_100CB0C  +
inc esi  +
cmp esi edi +
jl loc_100CAF5  +
cmp esi edi +
jge loc_100CB38  +
push 73h  +
push esi  +
lea ecx [ebp-328h] +
call ?SetAt@CString@@QAEXHG@Z  +
push dword ptr [ebp-31Ch]  +
push dword ptr [ebp-328h]  +
push dword ptr [ebp-34Ch]  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
lea ecx [ebp-328h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_100CB54  +
lea eax [ebp-31Ch] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-370h] +
cmp eax ebx +
jz loc_100CB66  +
mov ecx [ebp-324h] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-31Ch] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-320h] +
call sub_1019FA8  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1010D99  +
test [ebp+arg_0] 1 +
jz loc_100CBA2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
push 1  +
push 0Ch  +
push esi  +
call ?AfxIsValidAddress@@YGHPBXIH@Z  +
test eax eax +
jnz loc_100CBCD  +
call MFC42u_6928  +
mov eax [esi] +
mov [edi] eax +
pop edi  +
lea eax [esi+8] +
pop esi  +
pop ebp  +
retn 4  +
***
cmp ds:byte_101B6A2[eax] bh +
call __EH_prolog3  +
mov ebx [ebp+1Ch] +
xor edi edi +
mov [ebp-10h] edi +
cmp ebx edi +
jz loc_100D2CD  +
mov esi [ebp+8] +
cmp esi edi +
jz loc_100CC88  +
cmp [ebx] edi +
jnz loc_100CC53  +
push 24h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+1Ch] ecx +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_100CC25  +
call sub_1010CE4  +
jmp loc_100CC27  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebx] eax +
cmp eax edi +
jz loc_100D2CD  +
push esi  +
mov ecx eax +
call sub_1010DCA  +
cmp eax edi +
mov [ebp-10h] eax +
jge loc_100CC53  +
mov ecx [ebx] +
cmp ecx edi +
jz loc_100CC51  +
push 1  +
call sub_100CB88  +
mov [ebx] edi +
cmp dword ptr [ebp+0Ch] 3 +
mov ebx [ebx] +
mov [ebp-30h] ebx +
ja loc_100CF15  +
lea ecx [ebp+18h] +
call ??0CString@@QAE@XZ  +
mov eax [ebp+0Ch] +
sub eax edi +
mov dword ptr [ebp-4] 1 +
jz loc_100CCAE  +
dec eax  +
jz loc_100CCA7  +
dec eax  +
jz loc_100CCA0  +
dec eax  +
jnz loc_100CCBB  +
push offset aWin32_deviceme  +
jmp loc_100CCB3  +
mov ecx [ebx] +
cmp ecx edi +
jz loc_100D2CD  +
push 1  +
call sub_100CB88  +
xor eax eax +
jmp loc_100D2D2  +
push offset aWin32_portreso  +
jmp loc_100CCB3  +
push offset aWin32_irqresou  +
jmp loc_100CCB3  +
push offset aWin32_dmachann  +
lea ecx [ebp+18h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [esi] +
push edi  +
lea ecx [ebp-1Ch] +
push ecx  +
push dword ptr [ebp+18h]  +
mov ecx esi +
mov [ebp-1Ch] edi +
call dword ptr [eax+4]  +
cmp eax edi +
mov [ebp-10h] eax +
jl loc_100CF0D  +
lea ecx [ebp-20h] +
mov [ebp+1Ch] edi +
mov [ebp-18h] edi +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
jmp loc_100CEC6  +
mov eax [ebp+0Ch] +
sub eax edi +
mov [ebp-14h] edi +
jz loc_100CD24  +
dec eax  +
jz loc_100CD19  +
dec eax  +
jz loc_100CD0E  +
dec eax  +
jnz loc_100CD35  +
lea edx [ebp-14h] +
push edx  +
push offset aStartingaddres  +
jmp loc_100CD2D  +
lea edx [ebp-14h] +
push edx  +
push offset aIrqnumber  +
jmp loc_100CD2D  +
lea edx [ebp-14h] +
push edx  +
push offset aDmachannel  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
push offset a__path  +
lea edx [ebp-34h] +
push edx  +
call dword ptr [eax+20h]  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
push offset asc_100259C  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100CDA0  +
mov ecx [ebp+8] +
mov ecx [ecx-8] +
sub ecx eax +
dec ecx  +
push ecx  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 5 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-30h] +
lea eax [ebp+8] +
push eax  +
call sub_1010D72  +
mov [ebp-28h] eax +
cmp eax edi +
jz loc_100CEC6  +
mov eax [eax+4] +
mov [ebp-2Ch] eax +
cmp eax edi +
jz loc_100CEC6  +
mov ebx [ebp+14h] +
add ebx 1Ch +
mov ecx [ebp-28h] +
lea eax [ebp-2Ch] +
push eax  +
call sub_100CBAE  +
push eax  +
lea ecx [ebp-20h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_100CE30  +
mov ecx [ebp-18h] +
mov eax [ecx] +
push offset aCaption  +
lea edx [ebp-3Ch] +
push edx  +
call dword ptr [eax+20h]  +
mov edx [esi] +
push edi  +
push edi  +
push eax  +
push ebx  +
mov ecx esi +
mov byte ptr [ebp-4] 6 +
call dword ptr [edx+30h]  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-18h] +
cmp ecx edi +
jz loc_100CE2B  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-18h] edi +
jmp loc_100CE5B  +
push offset dword_10016F0  +
lea ecx [ebp-24h] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
push edi  +
push edi  +
lea ecx [ebp-24h] +
push ecx  +
push ebx  +
mov ecx esi +
mov byte ptr [ebp-4] 7 +
call dword ptr [eax+30h]  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
push offset aCaption  +
lea edx [ebp-40h] +
push edx  +
call dword ptr [eax+20h]  +
mov edx [esi] +
push edi  +
push dword ptr [ebp-14h]  +
mov ecx esi +
push eax  +
push dword ptr [ebp+14h]  +
mov byte ptr [ebp-4] 8 +
call dword ptr [edx+30h]  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
push offset aStatus  +
lea edx [ebp-44h] +
push edx  +
call dword ptr [eax+20h]  +
mov edx [esi] +
push edi  +
push edi  +
push eax  +
mov eax [ebp+14h] +
add eax 38h +
push eax  +
mov ecx esi +
mov byte ptr [ebp-4] 9 +
call dword ptr [edx+30h]  +
lea ecx [ebp-44h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
cmp [ebp-2Ch] edi +
jnz loc_100CDCB  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
push edi  +
lea edx [ebp+1Ch] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_100CCFB  +
mov ecx [ebp+1Ch] +
cmp ecx edi +
jz loc_100CEE8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-1Ch] +
cmp ecx edi +
jz loc_100CEF5  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+18h] +
jmp loc_100D1C8  +
cmp dword ptr [ebp+0Ch] 4 +
jnz loc_100D1D6  +
cmp ebx edi +
jz loc_100D2C8  +
cmp [ebx+10h] edi +
jz loc_100D2C8  +
lea ecx [ebp+0Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-4] 0Ah +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 0Bh +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-30h] +
mov eax [ecx+10h] +
neg eax  +
sbb eax eax +
mov byte ptr [ebp-4] 0Ch +
mov [ebp-2Ch] eax +
cmp eax edi +
jz loc_100D1AD  +
add ecx 4 +
mov [ebp-44h] ecx +
mov ebx (offset dword_1002794+4) +
mov ecx [ebp-44h] +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
call ?GetNextAssoc@CMapStringToOb@@QBEXAAPAU__POSITION@@AAVCString@@AAPAVCObject@@@Z  +
mov eax [ebp-1Ch] +
cmp eax edi +
jz loc_100D1A4  +
cmp dword ptr [eax+0Ch] 1 +
jle loc_100D1A4  +
push offset aWin32_irqresou  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_100CFEC  +
push offset aWin32_portreso  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_100CFEC  +
push offset aWin32_dmachann  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_100CFEC  +
push offset aWin32_deviceme  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100D1A4  +
lea ecx [ebp+1Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Dh +
call ??0CString@@QAE@XZ  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 0Eh +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi] +
lea ecx [ebp-20h] +
push ecx  +
push dword ptr [ebp-28h]  +
mov ecx esi +
mov [ebp-20h] edi +
call dword ptr [eax+20h]  +
cmp eax edi +
mov [ebp-10h] eax +
jl loc_100D0F9  +
lea ecx [ebp+1Ch] +
call ?Empty@CString@@QAEXXZ  +
push offset aWin32_portreso  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100D06E  +
push 1A7h  +
lea ecx [ebp+1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push ebx  +
lea ecx [ebp-40h] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea ecx [ebp+1Ch] +
mov byte ptr [ebp-4] 0Fh +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-40h] +
jmp loc_100D0A6  +
push offset aWin32_deviceme  +
lea ecx [ebp+0Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_100D0AF  +
push 1A9h  +
lea ecx [ebp+1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push ebx  +
lea ecx [ebp-3Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea ecx [ebp+1Ch] +
mov byte ptr [ebp-4] 10h +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 0Eh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-20h] +
mov eax [ecx] +
lea edx [ebp+8] +
push edx  +
push offset aCaption  +
mov byte ptr [ebp-4] 11h +
call dword ptr [eax+8]  +
mov eax [ebp+8] +
cmp [eax-8] edi +
jz loc_100D0E0  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp+1Ch] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov ecx [ebp-20h] +
cmp ecx edi +
jz loc_100D0ED  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0Eh +
call ??1CString@@QAE@XZ  +
mov eax [ebp-1Ch] +
mov eax [eax+4] +
mov [ebp-30h] eax +
cmp eax edi +
jz loc_100D17E  +
mov ecx [ebp-1Ch] +
lea eax [ebp-30h] +
push eax  +
call sub_100CBAE  +
push eax  +
lea ecx [ebp-24h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
push dword ptr [ebp-24h]  +
mov ecx esi +
mov [ebp-18h] edi +
call dword ptr [eax+20h]  +
cmp eax edi +
mov [ebp-10h] eax +
jl loc_100D179  +
mov ecx [ebp-18h] +
mov eax [ecx] +
lea edx [ebp-14h] +
push edx  +
push offset aCaption  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_100D16C  +
mov eax [esi] +
push edi  +
push edi  +
lea ecx [ebp+1Ch] +
push ecx  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov eax [esi] +
push edi  +
push edi  +
lea ecx [ebp-14h] +
push ecx  +
mov ecx [ebp+14h] +
add ecx 1Ch +
push ecx  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov ecx [ebp-18h] +
cmp ecx edi +
jz loc_100D179  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp [ebp-30h] edi +
jnz loc_100D106  +
mov eax [esi] +
push edi  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
call dword ptr [eax+2Ch]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+1Ch] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
cmp [ebp-2Ch] edi +
jnz loc_100CF77  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 0Bh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+0Ch] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ??1CString@@QAE@XZ  +
jmp loc_100D2C8  +
cmp dword ptr [ebp+0Ch] 5 +
jnz loc_100D2C8  +
mov eax [esi] +
push offset aCaptionPnpde_0  +
lea ecx [ebp+8] +
push ecx  +
push offset aWin32_pnpentit  +
mov ecx esi +
mov [ebp+8] edi +
call dword ptr [eax+4]  +
cmp eax edi +
mov [ebp-10h] eax +
jl loc_100D2C8  +
mov ecx [ebp+8] +
push edi  +
lea edx [ebp+1Ch] +
mov [ebp+1Ch] edi +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_100D2AE  +
mov ebx [ebp+14h] +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
lea edx [ebp+14h] +
push edx  +
push (offset dword_1002794+20h)  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_100D299  +
cmp [ebp+14h] edi +
jz loc_100D299  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
push offset aCaption  +
lea edx [ebp+0Ch] +
push edx  +
call dword ptr [eax+20h]  +
mov edx [esi] +
push edi  +
push edi  +
push eax  +
push ebx  +
mov ecx esi +
mov dword ptr [ebp-4] 12h +
call dword ptr [edx+30h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
push (offset dword_1002794+8)  +
lea edx [ebp-44h] +
push edx  +
call dword ptr [eax+20h]  +
mov edx [esi] +
push edi  +
push edi  +
push eax  +
lea eax [ebx+1Ch] +
push eax  +
mov ecx esi +
mov dword ptr [ebp-4] 13h +
call dword ptr [edx+30h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-44h] +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+8] +
mov eax [ecx] +
push edi  +
lea edx [ebp+1Ch] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_100D21E  +
mov ecx [ebp+1Ch] +
cmp ecx edi +
jz loc_100D2BB  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+8] +
cmp ecx edi +
jz loc_100D2C8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-10h] +
jmp loc_100D2D2  +
mov eax 80004005h +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_10205C8  +
lea eax [ebp-4] +
push eax  +
mov dword ptr [ebp-4] offset dword_1026638 +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_100298C +
call ??0CString@@QAE@XZ  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100D320  +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100298C +
mov ecx [esi+8] +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_100D359  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
and dword ptr [esi+8] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+0Ch] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
call dword ptr [eax+0Ch]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+8] +
mov eax [ecx] +
push 4  +
lea edx [ebp+arg_0] +
push edx  +
call dword ptr [eax+40h]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 2  +
push [ebp+arg_4]  +
call dword ptr [eax+3Ch]  +
cmp eax 2 +
jz loc_100D3C8  +
call loc_100D2DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 4  +
push [ebp+arg_4]  +
call dword ptr [eax+3Ch]  +
cmp eax 4 +
jz loc_100D3ED  +
call loc_100D2DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100D300  +
mov dword ptr [esi] offset off_10029B4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
pop eax  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-10h] +
push offset aLd  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
pop ecx  +
pop ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-10h] +
push offset aUd  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
pop ecx  +
pop ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100D509  +
mov eax [ebp+arg_0] +
jb loc_100D500  +
cmp eax 0FFFFFFFFh +
ja loc_100D509  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100D514  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_100D537  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100D542  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10029B4 +
call sub_100D32C  +
test byte ptr [ebp+8] 1 +
jz loc_100D56B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D32C  +
test byte ptr [ebp+8] 1 +
jz loc_100D591  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
call sub_100D3D1  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
call sub_100D3AC  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+8] 0 +
jz loc_100D65A  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push [ebp+var_4]  +
call sub_100D51D  +
test eax eax +
jl loc_100D65A  +
mov eax [ebp+var_4] +
push esi  +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_100D659  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
dec eax  +
mul  ecx +
push edx  +
push eax  +
call sub_100D4EB  +
test eax eax +
jl loc_100D652  +
push [ebp+var_8]  +
mov ecx [edi+8] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+3Ch]  +
mov ecx [ebp+var_4] +
xor eax eax +
mov [esi+ecx*2-2] ax +
mov ecx [ebp+arg_0] +
push esi  +
call ??4CString@@QAEABV0@PBG@Z  +
push esi  +
call sub_10199FA  +
pop ecx  +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [ebp+8] +
mov eax [eax-8] +
mov edx [esi] +
and dword ptr [ebp-4] 0 +
push eax  +
call dword ptr [edx+1Ch]  +
mov edx [ebp+8] +
mov eax [edx-8] +
mov ecx [esi+8] +
mov esi [ecx] +
add eax eax +
push eax  +
push edx  +
call dword ptr [esi+40h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov edx [ebp+8] +
mov eax [edx-8] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_100D6D3  +
mov ecx [ecx+8] +
mov esi [ecx] +
add eax eax +
push eax  +
push edx  +
call dword ptr [esi+40h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10029EC +
jz loc_100D707  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+58h] 0 +
jl loc_100D72E  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10087AE  +
jmp loc_100D780  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100D73C  +
push 6Ch  +
call ?LoadStringW@CString@@QAEHI@Z  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_100D780  +
mov eax [esi+58h] +
cmp eax 80041003h +
jz loc_100D779  +
cmp eax 80041006h +
jz loc_100D775  +
cmp eax 8004100Eh +
jz loc_100D771  +
cmp eax 80041015h +
jz loc_100D76D  +
cmp eax 800706BAh +
jz loc_100D76D  +
push 74h  +
jmp loc_100D77B  +
push 73h  +
jmp loc_100D77B  +
push 71h  +
jmp loc_100D77B  +
push 6Dh  +
jmp loc_100D77B  +
push 6Fh  +
call ?LoadStringW@CString@@QAEHI@Z  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_catch  +
mov esi [ebp+8] +
mov eax [esi] +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp dword ptr [ebp-14h] 11970h +
jnz loc_100D836  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp dword ptr [ebp-18h] 500h +
jnz loc_100D836  +
mov eax [esi] +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx esi +
call dword ptr [eax+8]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
lea ecx [ebp+8] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+10h]  +
mov eax [esi] +
lea ecx [ebp+8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100D838  +
mov esi [ebp-20h] +
mov eax [esi] +
push 0  +
push 0  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx esi +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_100D836 +
retn   +
mov ecx [ebp-24h] +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_100D836 +
retn   +
mov eax offset loc_100D836 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov ebx ecx +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
push 4B2h  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-34h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
mov eax [ebx] +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-30h] +
push ecx  +
mov ecx ebx +
mov byte ptr [ebp-4] 3 +
call dword ptr [eax+14h]  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push 4B1h  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push ecx  +
mov ecx esp +
mov [ebp-20h] esp +
mov edi offset dword_1002A24 +
push edi  +
call ??0CString@@QAE@PBD@Z  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
push ecx  +
lea eax [ebp-18h] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
mov eax [ebx] +
lea ecx [ebp-24h] +
push ecx  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+18h]  +
lea ecx [ebp-2Ch] +
call ??0CString@@QAE@XZ  +
push offset dword_1002A20  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@PBD@Z  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push edi  +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@PBD@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push edi  +
call ??0CString@@QAE@PBD@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_100D9A0  +
cmp dword ptr [ebp-24h] 0 +
jnz loc_100D9A0  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
push 4B3h  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 6 +
call ?LoadStringW@CString@@QAEHI@Z  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-20h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
lea ecx [ebp+8] +
jmp loc_100DAB4  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [ebp-10h] 0 +
jle loc_100D9F8  +
mov eax [ebx] +
lea ecx [ebp-38h] +
push ecx  +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
lea ecx [ebp-2Ch] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx ebx +
call dword ptr [eax+24h]  +
push ecx  +
lea eax [ebp-2Ch] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
push ecx  +
lea eax [ebp-28h] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-10h] +
jl loc_100D9AA  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push edi  +
call ??0CString@@QAE@PBD@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-1Ch] 0 +
cmp dword ptr [ebp-24h] 0 +
mov byte ptr [ebp-4] 7 +
jle loc_100DAB1  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [ebp-10h] 0 +
jle loc_100DA8F  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_100DA4E  +
mov ecx [ebx+30h] +
imul ecx [ebp-1Ch] +
add ecx [ebp+8] +
lea eax [eax+ecx*4] +
push eax  +
lea ecx [ebp-20h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_100DA58  +
push 6Ch  +
lea ecx [ebp-20h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push ecx  +
lea eax [ebp-20h] +
mov ecx esp +
mov [ebp-40h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
push ecx  +
lea eax [ebp-28h] +
mov ecx esp +
mov [ebp-40h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-10h] +
jl loc_100DA2F  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push edi  +
call ??0CString@@QAE@PBD@Z  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
inc dword ptr [ebp-1Ch]  +
mov eax [ebp-1Ch] +
cmp eax [ebp-24h] +
jl loc_100DA25  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100DAE9  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_100DAE9  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
jmp loc_100DAE3  +
mov eax [edi] +
push 1  +
push esi  +
mov ecx edi +
call dword ptr [eax+4Ch]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov edi eax +
test edi edi +
jnz loc_100DAD2  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_100DB58  +
cmp [ecx+4] eax +
jnz loc_100DB58  +
xor eax eax +
inc eax  +
jmp loc_100DB66  +
mov edx [ebp+arg_0] +
cmp edx eax +
jl loc_100DB64  +
cmp edx [ecx+4] +
jle loc_100DB53  +
xor eax eax +
pop ebp  +
retn 4  +
***
call ?AfxGetThread@@YGPAVCWinThread@@XZ  +
test eax eax +
jz loc_100DB91  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+7Ch]  +
xor eax eax +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [esi] offset off_1002A2C +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-20h] +
call ??0AFX_EXCEPTION_LINK@@QAE@XZ  +
mov ecx esi +
mov byte ptr [ebp-4] 2 +
call ?DeleteObject@CGdiObject@@QAEHXZ  +
mov dword ptr [ebp-4] 1 +
jmp loc_100DBFD  +
mov ecx [ebp-18h] +
mov [ebp-1Ch] ecx +
test ecx ecx +
jz loc_100DBED  +
call ?Delete@CException@@QAEXXZ  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_100DBFA +
retn   +
mov esi [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ?AfxTryCleanup@@YGXXZ  +
mov dword ptr [esi] offset off_10029EC +
call __EH_epilog3  +
retn   +
***
jmp sub_100DBA7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_30] +
push esi  +
push [ebp+arg_34]  +
mov esi ecx +
push eax  +
movzx eax [ebp+arg_2C] +
push eax  +
movzx eax [ebp+arg_28] +
push eax  +
movzx eax [ebp+arg_24] +
push eax  +
movzx eax [ebp+arg_20] +
push eax  +
movzx eax [ebp+arg_1C] +
push eax  +
movzx eax [ebp+arg_18] +
push eax  +
movzx eax [ebp+arg_14] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:CreateFontW  +
push eax  +
mov ecx esi +
call ?Attach@CGdiObject@@QAEHPAX@Z  +
pop esi  +
pop ebp  +
retn 38h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov edx [eax-8] +
push esi  +
mov esi [ecx] +
push edx  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [esi+64h]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
mov eax [eax] +
lea edx [ebp+var_8] +
push edx  +
push dword ptr [eax-8]  +
push eax  +
push dword ptr [ecx+8]  +
call ds:GetTextExtentPoint32W  +
mov ecx [ebp+var_8._cx] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_8.cy] +
mov [eax+4] ecx +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call ds:free  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov eax 0FFFh +
cmp [ecx] ax +
jnz loc_100DD02  +
push 8  +
pop eax  +
mov [ecx] ax +
push ecx  +
call ds:VariantClear  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100DCF2  +
test eax eax +
jge loc_100DD26  +
push 0Ah  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
jmp loc_100DD40  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
mov [esi] ecx +
call sub_100DCDA  +
cmp dword ptr [esi] 0 +
jnz loc_100DD34  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 1  +
push [ebp+arg_4]  +
call dword ptr [eax+3Ch]  +
cmp eax 1 +
jz loc_100DD68  +
call loc_100D2DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100A8AF  +
xor eax eax +
mov [esi+30h] eax +
mov [esi+2Ch] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+8] eax +
mov [esi+14h] eax +
mov dword ptr [esi] offset off_1002A5C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
push edi  +
mov edi [ebp+18h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
mov esi ecx +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1008B29  +
mov [ebp+14h] eax +
test eax eax +
jz loc_100DE19  +
xor eax eax +
inc eax  +
test edi edi +
jz loc_100DDCE  +
mov [edi] eax +
test ebx ebx +
jz loc_100DE19  +
mov [ebx] eax +
cmp dword ptr [esi+30h] 2 +
jnz loc_100DE19  +
xor edi edi +
cmp [esi+2Ch] edi +
jle loc_100DE19  +
xor eax eax +
cmp [ebx] eax +
jz loc_100DE19  +
mov edx [esi] +
push eax  +
lea ecx [ebp+18h] +
push ecx  +
push eax  +
push edi  +
mov ecx esi +
call dword ptr [edx+28h]  +
test eax eax +
jz loc_100DE13  +
mov eax [ebp+18h] +
test eax eax +
jz loc_100DE13  +
mov eax [eax] +
cmp dword ptr [eax-8] 0 +
jnz loc_100DE13  +
lea eax [edi+1] +
cmp eax [esi+2Ch] +
jge loc_100DE13  +
and dword ptr [ebx] 0 +
inc edi  +
cmp edi [esi+2Ch] +
jl loc_100DDE1  +
mov eax [ebp+14h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002A5C +
and dword ptr [ebp-4] 0 +
call sub_1008DBA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_100AA20  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push 5Ch  +
mov edi 80004005h +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_100DE8D  +
call sub_100DD71  +
mov esi eax +
jmp loc_100DE8F  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jz loc_100DEF4  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+5Ch]  +
test eax eax +
jnz loc_100DEB1  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor esi esi +
jmp loc_100DEF4  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_100DEF2  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-10h] +
push offset aS  +
push eax  +
mov dword ptr [ebp-4] 1 +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
lea eax [ebp-10h] +
push eax  +
lea ecx [esi+50h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor edi edi +
mov eax [ebp+8] +
mov [eax] esi +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100A8AF  +
xor eax eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+8] eax +
mov [esi+14h] eax +
mov dword ptr [esi] offset off_1002ACC +
mov eax esi +
pop esi  +
retn   +
***
inc eax  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1002ACC +
and dword ptr [ebp-4] 0 +
call sub_1008DBA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_100AA20  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_catch  +
mov esi [ebp-1Ch] +
mov ecx [ebp-20h] +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0Eh +
call ??0CString@@QAE@XZ  +
push 75h  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0Fh +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4D8h  +
lea ecx [ebp+0Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 0  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+0Ch]  +
push 0  +
call ds:MessageBoxW  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0Eh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
mov eax offset loc_100DFEE +
retn   +
***
call __EH_prolog3_catch  +
mov esi [ebp-24h] +
mov esi [ebp-28h] +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
call ??0CString@@QAE@XZ  +
push 75h  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 8 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4C7h  +
lea ecx [ebp+10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 0  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
push 0  +
call ds:MessageBoxW  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
mov eax offset loc_100E544 +
retn   +
***
call __EH_prolog3_catch  +
mov esi [ebp-20h] +
mov esi [ebp-24h] +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
push 75h  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 5 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4C7h  +
lea ecx [ebp+8] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 0  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+8]  +
push 0  +
call ds:MessageBoxW  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100E66E +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
xor edi edi +
lea ecx [ebp-18h] +
mov [ebp-4] edi +
call ??0CString@@QAE@XZ  +
mov ebx [ebp+8] +
mov byte ptr [ebp-4] 1 +
cmp [esi+8] edi +
jnz loc_100E800  +
mov ecx [ebx+8] +
push 2  +
lea edx [ebp-24h] +
mov dword ptr [ebp-24h] 0FEFFh +
mov eax [ecx] +
push edx  +
call dword ptr [eax+40h]  +
push offset a?xmlVersion1_0  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
lea eax [ebp-1Ch] +
push eax  +
call ?GetTickCount@CTime@@SG?AV1@XZ  +
push offset aXX  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-1Ch] +
call ?FormatGmt@CTime@@QBE?AVCString@@PBG@Z  +
push offset a8_0  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBD@Z  +
push dword ptr [ebp-28h]  +
lea eax [ebp-18h] +
push dword ptr [ebp-2Ch]  +
mov byte ptr [ebp-4] 3 +
push offset aMetadataVersio  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 10h +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-30h] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 5 +
call dword ptr [eax+14h]  +
push offset aCategoryName  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push offset asc_1002C4C  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
push offset asc_1002C3C  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi+58h] +
cmp eax edi +
mov byte ptr [ebp-4] 6 +
jl loc_100E9E9  +
mov eax [esi] +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 7 +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 8 +
cmp [ebp-2Ch] edi +
jnz loc_100E91D  +
cmp dword ptr [ebp-1Ch] 1 +
jle loc_100E91D  +
push offset aData  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
cmp dword ptr [ebp-1Ch] 0 +
jle loc_100E910  +
mov eax [esi] +
lea ecx [ebp-28h] +
push ecx  +
push ecx  +
lea ecx [ebp-38h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+24h]  +
jmp loc_100E8D4  +
push 5Fh  +
push eax  +
lea ecx [ebp-14h] +
call ?SetAt@CString@@QAEXHG@Z  +
push dword ptr [ebp-20h]  +
lea ecx [ebp-14h] +
call ?FindOneOf@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_100E8C9  +
push dword ptr [ebp-14h]  +
lea eax [ebp-18h] +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-14h]  +
push offset aSSS  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 14h +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc edi  +
cmp edi [ebp-1Ch] +
jl loc_100E8B2  +
push offset aData_0  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
xor ebx ebx +
cmp [ebp-2Ch] ebx +
jle loc_100E9CC  +
push offset aData  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
xor edi edi +
cmp [ebp-1Ch] edi +
jle loc_100E9B5  +
mov eax [esi] +
lea ecx [ebp-28h] +
push ecx  +
push ecx  +
lea ecx [ebp-38h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+24h]  +
jmp loc_100E95E  +
push 5Fh  +
push eax  +
lea ecx [ebp-14h] +
call ?SetAt@CString@@QAEXHG@Z  +
push dword ptr [ebp-20h]  +
lea ecx [ebp-14h] +
call ?FindOneOf@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_100E953  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_100E9B5  +
mov ecx [esi+30h] +
imul ecx ebx +
add ecx edi +
lea eax [eax+ecx*4] +
push eax  +
lea ecx [ebp-24h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp-14h]  +
lea eax [ebp-18h] +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-14h]  +
push offset aSCdataSS  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 14h +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc edi  +
cmp edi [ebp-1Ch] +
jl loc_100E93C  +
push offset aData_0  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
inc ebx  +
cmp ebx [ebp-2Ch] +
jl loc_100E928  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
mov ebx [ebp+8] +
jmp loc_100EA07  +
push eax  +
lea eax [ebp-18h] +
push offset aDataMsinfoerro  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
jmp loc_100EA35  +
mov eax [edi] +
push ebx  +
mov ecx edi +
call dword ptr [eax+54h]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov edi eax +
test edi edi +
jnz loc_100EA26  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push offset aCategory_0  +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
cmp [esi+8] edi +
jnz loc_100EA6E  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push offset aMsinfo  +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-1Ch] esi +
cmp dword ptr [esi+20h] 0 +
jz loc_100EADD  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
call ds:EndPage  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
call ds:EndDoc  +
mov edi eax +
test edi edi +
jge loc_100EBBD  +
call sub_10193B2  +
push eax  +
lea ecx [ebp-24h] +
call MFC42u_6466  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
cmp edi 0FFFFFFFBh +
jz loc_100EB44  +
cmp edi 0FFFFFFFCh +
jz loc_100EB3D  +
lea ecx [ebp-14h] +
cmp edi 0FFFFFFFDh +
jz loc_100EB36  +
push 4C2h  +
jmp loc_100EB4C  +
push 4C6h  +
jmp loc_100EB4C  +
push 4C4h  +
jmp loc_100EB49  +
push 4C3h  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 197h  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 3 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov edi [ebp-18h] +
mov ebx [ebp-14h] +
call sub_100DB81  +
test eax eax +
jz loc_100EB74  +
mov eax [eax+20h] +
push 0  +
push edi  +
push ebx  +
push eax  +
call ds:MessageBoxW  +
mov dword ptr [ebp-4] 2 +
jmp loc_100EB98  +
mov dword ptr [ebp-4] 2 +
mov eax offset loc_100EB95 +
retn   +
mov esi [ebp-1Ch] +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-20h] +
mov ecx [ebp-24h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax+4] ecx +
mov ecx [esi+0Ch] +
push dword ptr [esi+14h]  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_100EBD6  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
mov ecx [esi+0Ch] +
call ?Detach@CDC@@QAEPAUHDC__@@XZ  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_100EBEC  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 4B4h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 0  +
push dword ptr [ebp-10h]  +
call ds:wcstod  +
fimul  dword ptr [ebp+10h] +
pop ecx  +
pop ecx  +
call _ftol2_sse  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov esi eax +
imul esi [edi+10h] +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 4B9h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov ecx [esi+0Ch] +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_100DCA6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push 4C1h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov ecx [esi+0Ch] +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_100DCA6  +
mov eax [esi+0Ch] +
push 8  +
push dword ptr [eax+8]  +
call ds:GetDeviceCaps  +
sub eax [ebp-18h] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx [esi+0Ch] +
push 0  +
push eax  +
call sub_100DC81  +
inc dword ptr [esi+10h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DBA7  +
test byte ptr [ebp+8] 1 +
jz loc_100ED30  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002A44 +
call sub_100DBA7  +
test byte ptr [ebp+8] 1 +
jz loc_100ED5C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+lpMultiByteStr] edi +
jz loc_100EDCE  +
cmp [ebp+cchMultiByte] edi +
jz loc_100EDCE  +
mov esi ds:MultiByteToWideChar +
push edi  +
push edi  +
push [ebp+cchMultiByte]  +
mov [ebp+var_4] edi +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call esi  +
cmp [ebp+cchMultiByte] 0FFFFFFFFh +
mov ebx eax +
jnz loc_100ED9E  +
lea eax [ebx-1] +
push eax  +
push edi  +
call ds:SysAllocStringLen  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100EDD7  +
push ebx  +
push eax  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call esi  +
cmp eax ebx +
jz loc_100EDD7  +
push [ebp+var_8]  +
call ds:SysFreeString  +
lea ecx [ebp+var_4] +
call sub_100DD2D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
lea ecx [ebp+var_4] +
call sub_100DD2D  +
mov eax [ebp+var_8] +
jmp loc_100EDD0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
mov esi ecx +
call sub_100ED68  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DD0F  +
push 8  +
pop eax  +
push [ebp+arg_0]  +
mov [esi] ax +
call ds:SysAllocString  +
mov [esi+8] eax +
test eax eax +
jnz loc_100EE48  +
cmp [ebp+arg_0] eax +
jz loc_100EE48  +
push 0Ah  +
pop eax  +
mov [esi] ax +
mov dword ptr [esi+8] 8007000Eh +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DE28  +
test byte ptr [ebp+8] 1 +
jz loc_100EE6E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
mov [ebp-40h] ebx +
mov [ebp-34h] ebx +
mov [ebp-4] ebx +
mov [ebp-30h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-2Ch] ebx +
mov edi [ebp+8] +
mov eax [edi] +
lea ecx [ebp-2Ch] +
push ecx  +
push edi  +
mov byte ptr [ebp-4] 2 +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
call dword ptr [eax+44h]  +
test eax eax +
jl loc_100EF75  +
mov eax [ebp-2Ch] +
cmp eax ebx +
jz loc_100EF75  +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
cmp [ebp-14h] ebx +
jz loc_100EF75  +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov eax [ebp-14h] +
mov eax [eax] +
lea ecx [ebp-24h] +
push ecx  +
push dword ptr [ebp-14h]  +
mov byte ptr [ebp-4] 4 +
call dword ptr [eax+1Ch]  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
push offset aName  +
push dword ptr [ebp-24h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100EF43  +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-2Ch] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push dword ptr [ebp-20h]  +
mov edi ds:SysFreeString +
call edi  +
push dword ptr [ebp-24h]  +
call edi  +
cmp [ebp-14h] ebx +
jnz loc_100EEDC  +
jmp loc_100EF72  +
push dword ptr [ebp-20h]  +
lea edi [esi+54h] +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [esi+50h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [ebp-20h]  +
mov edi ds:SysFreeString +
call edi  +
push dword ptr [ebp-24h]  +
call edi  +
mov edi [ebp+8] +
push offset MultiByteStr  +
lea ecx [ebp-3Ch] +
mov [esi+30h] ebx +
mov [esi+2Ch] ebx +
call sub_100EDE9  +
mov eax [eax] +
mov ecx [edi] +
lea edx [ebp-30h] +
push edx  +
push eax  +
push edi  +
mov byte ptr [ebp-4] 5 +
mov dword ptr [ebp-40h] 1 +
call dword ptr [ecx+90h]  +
test eax eax +
jl loc_100EFB0  +
mov byte ptr [ebp+0Bh] 1 +
cmp [ebp-30h] ebx +
jnz loc_100EFB3  +
mov [ebp+0Bh] bl +
push dword ptr [ebp-3Ch]  +
mov dword ptr [ebp-4] 2 +
call ds:SysFreeString  +
cmp [ebp+0Bh] bl +
jz loc_100EFDE  +
mov eax [ebp-30h] +
lea edx [ebp+8] +
push edx  +
mov [ebp+8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+8] +
mov [esi+2Ch] eax +
cmp [esi+2Ch] ebx +
jle loc_100F00F  +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_100EFF4  +
push eax  +
call sub_10199FA  +
pop ecx  +
mov [esi+44h] ebx +
mov eax [esi+2Ch] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
pop ecx  +
mov [esi+44h] eax +
mov eax [edi] +
lea ecx [ebp-34h] +
push ecx  +
push edi  +
mov [ebp-28h] ebx +
mov [ebp-40h] ebx +
call dword ptr [eax+30h]  +
test eax eax +
jl loc_100F3F8  +
mov eax [ebp-34h] +
cmp eax ebx +
jz loc_100F3F8  +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_100F3EF  +
mov [ebp+8] ebx +
mov eax [ebp-10h] +
mov eax [eax] +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 6 +
call dword ptr [eax+1Ch]  +
mov edi ds:_wcsicmp +
push offset aData_2  +
push dword ptr [ebp+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F346  +
cmp [esi+2Ch] ebx +
jle loc_100F346  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jl loc_100F331  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100F33E  +
xor ecx ecx +
cmp [esi+34h] ebx +
setnz cl  +
mov [ebp-3Ch] ecx +
cmp ecx ebx +
jnz loc_100F239  +
lea edx [ebp-38h] +
push edx  +
mov [ebp-38h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp-38h] +
cmp eax ebx +
mov ecx [esi+34h] +
mov [esi+30h] eax +
mov dword ptr [esi+38h] 1 +
jle loc_100F147  +
cmp ecx ebx +
jz loc_100F0EB  +
lea eax [ecx-4] +
cmp [eax] ebx +
jz loc_100F0E1  +
mov eax [ecx] +
push 3  +
call dword ptr [eax]  +
jmp loc_100F0E8  +
push eax  +
call sub_10199FA  +
pop ecx  +
mov [esi+34h] ebx +
mov edi [esi+30h] +
xor ecx ecx +
push 1Ch  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp-48h] eax +
mov byte ptr [ebp-4] 7 +
cmp eax ebx +
jz loc_100F13C  +
push offset sub_1008901  +
push offset sub_10088CD  +
push edi  +
mov [eax] edi +
add eax 4 +
push 1Ch  +
push eax  +
mov [ebp-44h] eax +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [ebp-44h] +
jmp loc_100F13E  +
xor eax eax +
mov byte ptr [ebp-4] 6 +
mov [esi+34h] eax +
jmp loc_100F164  +
cmp ecx ebx +
jz loc_100F161  +
lea eax [ecx-4] +
cmp [eax] ebx +
jz loc_100F15A  +
mov eax [ecx] +
push 3  +
call dword ptr [eax]  +
jmp loc_100F161  +
push eax  +
call sub_10199FA  +
pop ecx  +
mov [esi+34h] ebx +
cmp [esi+30h] ebx +
jle loc_100F217  +
cmp [esi+2Ch] ebx +
jle loc_100F217  +
mov ecx [esi+3Ch] +
cmp ecx ebx +
jz loc_100F187  +
push 3  +
call sub_10087D4  +
mov [esi+3Ch] ebx +
mov edi [esi+2Ch] +
imul edi [esi+30h] +
xor ecx ecx +
push 4  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp-48h] eax +
mov byte ptr [ebp-4] 8 +
cmp eax ebx +
jz loc_100F1DC  +
push offset ??1CString@@QAE@XZ  +
push offset ??0CString@@QAE@XZ  +
push edi  +
mov [eax] edi +
add eax 4 +
push 4  +
push eax  +
mov [ebp-44h] eax +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [ebp-44h] +
jmp loc_100F1DE  +
xor eax eax +
mov [esi+3Ch] eax +
mov eax [esi+40h] +
mov byte ptr [ebp-4] 6 +
cmp eax ebx +
jz loc_100F1F6  +
push eax  +
call sub_10199FA  +
pop ecx  +
mov [esi+40h] ebx +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
pop ecx  +
mov [esi+40h] eax +
jmp loc_100F239  +
mov ecx [esi+3Ch] +
cmp ecx ebx +
jz loc_100F225  +
push 3  +
call sub_10087D4  +
mov eax [esi+40h] +
mov [esi+3Ch] ebx +
cmp eax ebx +
jz loc_100F236  +
push eax  +
call sub_10199FA  +
pop ecx  +
mov [esi+40h] ebx +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
mov [ebp-38h] ebx +
call dword ptr [ecx+24h]  +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_100F331  +
xor edi edi +
mov [ebp-20h] ebx +
mov [ebp-24h] ebx +
mov byte ptr [ebp-4] 0Ah +
cmp [ebp-3Ch] ebx +
jnz loc_100F2A8  +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [esi+34h] +
push dword ptr [ebp-20h]  +
lea ecx [eax+edi+8] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [esi+34h] +
mov dword ptr [eax+edi+0Ch] 96h +
mov eax [esi+34h] +
mov [eax+edi+10h] ebx +
mov eax [esi+34h] +
mov [eax+edi+14h] ebx +
mov eax [esi+34h] +
mov [eax+edi+18h] ebx +
mov eax [esi+34h] +
mov [eax+edi+4] ebx +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
push eax  +
call dword ptr [ecx+68h]  +
push offset aMsinfoerror  +
push dword ptr [ebp-20h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F2D3  +
push dword ptr [ebp-24h]  +
call ds:_wtoi  +
pop ecx  +
mov [esi+58h] eax +
mov eax [esi+30h] +
imul eax [ebp-28h] +
add eax [ebp-38h] +
mov ecx [esi+3Ch] +
push dword ptr [ebp-24h]  +
lea ecx [ecx+eax*4] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [esi+44h] +
mov ecx [ebp-28h] +
inc dword ptr [ebp-38h]  +
mov [eax+ecx*4] ebx +
mov eax [ebp-18h] +
mov ecx [eax] +
push eax  +
add edi 1Ch +
call dword ptr [ecx+8]  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push dword ptr [ebp-24h]  +
call ds:SysFreeString  +
push dword ptr [ebp-20h]  +
mov byte ptr [ebp-4] 6 +
call ds:SysFreeString  +
mov eax [ebp-18h] +
cmp eax ebx +
jnz loc_100F256  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100F33E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc dword ptr [ebp-28h]  +
jmp loc_100F3D0  +
push offset aXml  +
push dword ptr [ebp+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100F3C3  +
push offset aMsinfo_0  +
push dword ptr [ebp+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100F3C3  +
push offset aCategory_1  +
push dword ptr [ebp+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100F3D0  +
cmp [ebp+0Ch] ebx +
jnz loc_100F382  +
inc eax  +
mov [ebp+0Ch] eax +
push eax  +
jmp loc_100F3C6  +
push 5Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-48h] eax +
mov byte ptr [ebp-4] 0Bh +
cmp eax ebx +
jz loc_100F39E  +
mov ecx eax +
call sub_100DD71  +
jmp loc_100F3A0  +
xor eax eax +
mov ecx [ebp-40h] +
mov byte ptr [ebp-4] 6 +
mov [eax+8] esi +
mov [eax+14h] ecx +
cmp ecx ebx +
jz loc_100F3B6  +
mov [ecx+10h] eax +
jmp loc_100F3B9  +
mov [esi+0Ch] eax +
push dword ptr [ebp+0Ch]  +
mov [ebp-40h] eax +
mov ecx eax +
jmp loc_100F3C8  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
call sub_100EE7A  +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-34h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push dword ptr [ebp+8]  +
call ds:SysFreeString  +
cmp [ebp-10h] ebx +
jnz loc_100F041  +
mov eax [ebp-2Ch] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_100F409  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-30h] +
mov [ebp-4] bl +
cmp eax ebx +
jz loc_100F419  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-34h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax ebx +
jz loc_100F42A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100DF38  +
test byte ptr [ebp+8] 1 +
jz loc_100F453  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov edi [ebp+8] +
mov eax [edi] +
and dword ptr [ebp-4] 0 +
lea ebx [esi+54h] +
push ebx  +
mov ecx edi +
call dword ptr [eax+10h]  +
push ebx  +
lea ecx [esi+50h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ebx [esi+30h] +
push ebx  +
mov ecx edi +
call sub_100D370  +
mov edi [ebx] +
test edi edi +
jnz loc_100F4A4  +
and [esi+2Ch] edi +
xor eax eax +
inc eax  +
jmp loc_100F770  +
xor ecx ecx +
push 1Ch  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_100F4F2  +
push offset sub_1008901  +
push offset sub_10088CD  +
push edi  +
mov [eax] edi +
add eax 4 +
push 1Ch  +
push eax  +
mov [ebp-24h] eax +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [ebp-24h] +
jmp loc_100F4F4  +
xor eax eax +
mov ebx [ebx] +
mov byte ptr [ebp-4] 0 +
mov [esi+34h] eax +
mov edi [ebp+8] +
dec ebx  +
test ebx ebx +
jl loc_100F5BE  +
mov eax [edi] +
lea ecx [ebp-28h] +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp-20h] +
push ecx  +
mov ecx edi +
mov byte ptr [ebp-4] 2 +
call dword ptr [eax+10h]  +
mov eax [edi] +
lea ecx [ebp-24h] +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
xor eax eax +
cmp [ebp-24h] eax +
jz loc_100F54F  +
cmp dword ptr [ebp-24h] 2 +
jnz loc_100F54C  +
mov dword ptr [ebp-18h] 1 +
jmp loc_100F552  +
xor eax eax +
inc eax  +
mov [ebp-18h] eax +
mov [ebp-1Ch] eax +
lea eax [ebp-11h] +
push eax  +
push dword ptr [edi+8]  +
call sub_100DD4C  +
movzx eax byte ptr [ebp-11h] +
mov edi ebx +
imul edi edi +
mov [ebp-2Ch] eax +
lea eax [ebp-20h] +
push eax  +
mov eax [esi+34h] +
lea ecx [edi+eax+8] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi+34h] +
mov ecx [ebp-28h] +
mov [edi+eax+0Ch] ecx +
mov eax [esi+34h] +
mov ecx [ebp-18h] +
mov [edi+eax+10h] ecx +
mov eax [esi+34h] +
mov ecx [ebp-1Ch] +
mov [edi+eax+14h] ecx +
mov eax [esi+34h] +
mov ecx [ebp-2Ch] +
mov [edi+eax+18h] ecx +
mov eax [esi+34h] +
and dword ptr [edi+eax+4] 0 +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
jmp loc_100F4FD  +
mov ecx [ebp+8] +
lea ebx [esi+2Ch] +
push ebx  +
call sub_100D370  +
mov edi [esi+30h] +
imul edi [ebx] +
xor ecx ecx +
push 4  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call loc_1019A30  +
pop ecx  +
mov [ebp-28h] eax +
mov byte ptr [ebp-4] 3 +
test eax eax +
jz loc_100F61E  +
push offset ??1CString@@QAE@XZ  +
push offset ??0CString@@QAE@XZ  +
push edi  +
mov [eax] edi +
add eax 4 +
push 4  +
push eax  +
mov [ebp-2Ch] eax +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [ebp-2Ch] +
jmp loc_100F620  +
xor eax eax +
mov [esi+3Ch] eax +
mov eax [esi+30h] +
imul eax [ebx] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
mov byte ptr [ebp-4] 0 +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
pop ecx  +
mov [esi+40h] eax +
mov eax [ebx] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call loc_1019A30  +
xor edi edi +
pop ecx  +
mov [esi+44h] eax +
cmp eax edi +
jz loc_100F76E  +
cmp [esi+3Ch] edi +
jz loc_100F76E  +
cmp [esi+40h] edi +
jz loc_100F76E  +
mov ebx [ebx] +
dec ebx  +
cmp ebx edi +
jl loc_100F6A8  +
lea eax [ebp-11h] +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+8]  +
call sub_100DD4C  +
cmp byte ptr [ebp-11h] 0 +
mov eax [esi+44h] +
jnz loc_100F69F  +
mov [eax+ebx*4] edi +
jmp loc_100F67D  +
mov dword ptr [eax+ebx*4] 1 +
jmp loc_100F67D  +
mov edi [esi+30h] +
dec edi  +
test edi edi +
jl loc_100F49C  +
mov ebx [esi+2Ch] +
dec ebx  +
test ebx ebx +
jl loc_100F6F9  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-20h] +
push edx  +
mov byte ptr [ebp-4] 4 +
call dword ptr [eax+10h]  +
mov ecx [esi+3Ch] +
lea eax [ebp-20h] +
push eax  +
mov eax [esi+30h] +
imul eax ebx +
add eax edi +
lea ecx [ecx+eax*4] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
jmp loc_100F6B7  +
mov ebx [esi+2Ch] +
dec ebx  +
test ebx ebx +
jl loc_100F6AB  +
mov eax edi +
imul eax eax +
add eax [esi+34h] +
cmp dword ptr [eax+10h] 0 +
jz loc_100F6FC  +
cmp dword ptr [eax+14h] 0 +
jnz loc_100F6FC  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-2Ch] +
push edx  +
call dword ptr [eax+0Ch]  +
mov eax [esi+30h] +
mov ecx [esi+40h] +
imul eax ebx +
mov edx [ebp-2Ch] +
add eax edi +
mov [ecx+eax*4] edx +
jmp loc_100F6FC  +
mov esi [ebp-30h] +
mov eax [esi] +
push 0  +
push 0  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx esi +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_100F76E +
retn   +
mov ecx [ebp-34h] +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_100F76E +
retn   +
push dword_1026830  +
call sub_10092F2  +
mov eax offset loc_100F76E +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100EABA  +
test [ebp+arg_0] 1 +
jz loc_100F797  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov [ebp-3Ch] esi +
mov eax [ebp+10h] +
mov edi [ebp+8] +
xor ebx ebx +
mov [esi+4] eax +
mov eax [ebp+0Ch] +
push 10h  +
mov [ebp-28h] ebx +
mov [esi] edi +
mov [esi+8] eax +
mov [esi+10h] ebx +
mov dword ptr [esi+1Ch] 1 +
mov [ebp-4] ebx +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+8] ecx +
mov byte ptr [ebp-4] 1 +
cmp ecx ebx +
jz loc_100F7F5  +
call ??0CDC@@QAE@XZ  +
mov ecx eax +
jmp loc_100F7F7  +
xor ecx ecx +
mov [ebp-4] bl +
mov [esi+0Ch] ecx +
cmp ecx ebx +
jz loc_100FA9D  +
push edi  +
call ?Attach@CDC@@QAEHPAUHDC__@@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push offset aCourierNew  +
lea ecx [ebp-20h] +
mov dword ptr [ebp-2Ch] 0Ah +
mov dword ptr [ebp-38h] 190h +
mov byte ptr [ebp-34h] 1 +
mov [ebp-30h] bl +
call ??0CString@@QAE@PBD@Z  +
lea ecx [ebp+0Ch] +
mov dword ptr [ebp-4] 3 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 6 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
call ??0CString@@QAE@XZ  +
push 4BBh  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 8 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4BCh  +
lea ecx [ebp-1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4BDh  +
lea ecx [ebp-18h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4BEh  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4BFh  +
lea ecx [ebp+10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp+0Ch] +
cmp [eax-8] ebx +
jz loc_100F8DA  +
push eax  +
call ds:_wtol  +
pop ecx  +
test eax eax +
jz loc_100F8DA  +
push dword ptr [ebp+0Ch]  +
mov edi ds:_wtoi +
call edi  +
pop ecx  +
mov [ebp-2Ch] eax +
jmp loc_100F8E0  +
mov edi ds:_wtoi +
mov eax [ebp-1Ch] +
cmp [eax-8] ebx +
jz loc_100F8EF  +
push eax  +
call edi  +
pop ecx  +
mov [ebp-38h] eax +
mov eax [ebp-18h] +
cmp [eax-8] ebx +
jz loc_100F8FE  +
push eax  +
call edi  +
pop ecx  +
mov [ebp-34h] al +
mov eax [ebp-14h] +
cmp [eax-8] ebx +
jz loc_100F90D  +
push eax  +
call edi  +
pop ecx  +
mov [ebp-30h] al +
lea ecx [ebp+10h] +
call ?TrimLeft@CString@@QAEXXZ  +
mov eax [ebp+10h] +
cmp [eax-8] ebx +
jz loc_100F943  +
push offset aFacename  +
lea ecx [ebp-3Ch] +
call ??0CString@@QAE@PBD@Z  +
push dword ptr [eax]  +
lea ecx [ebp+10h] +
mov dword ptr [ebp-28h] 1 +
call sub_1008914  +
mov byte ptr [ebp+0Bh] 1 +
test eax eax +
jnz loc_100F946  +
mov [ebp+0Bh] bl +
test byte ptr [ebp-28h] 1 +
jz loc_100F954  +
lea ecx [ebp-3Ch] +
call ??1CString@@QAE@XZ  +
cmp [ebp+0Bh] bl +
jz loc_100F965  +
lea eax [ebp+10h] +
push eax  +
lea ecx [ebp-20h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push 8  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax ebx +
jz loc_100F97C  +
mov [eax+4] ebx +
mov dword ptr [eax] offset off_1002A44 +
jmp loc_100F97E  +
xor eax eax +
mov [esi+18h] eax +
cmp eax ebx +
jz loc_100FA35  +
mov eax [esi+0Ch] +
push 5Ah  +
push dword ptr [eax+8]  +
call ds:GetDeviceCaps  +
imul eax [ebp-2Ch] +
push 0FFFFFFB8h  +
pop ecx  +
push dword ptr [ebp-20h]  +
cdq   +
push dword ptr [ebp-30h]  +
idiv  ecx +
push ebx  +
push 1  +
mov ecx [esi+18h] +
push 2  +
push dword ptr [ebp-34h]  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-38h]  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
call sub_100DC27  +
mov ecx [esi+0Ch] +
push dword ptr [esi+18h]  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
mov [esi+14h] eax +
xor eax eax +
lea edi [ebp-54h] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea ecx [ebp-24h] +
mov dword ptr [ebp-54h] 14h +
call ??0CString@@QAE@XZ  +
push 4BAh  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 9 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-24h] +
mov [ebp-50h] eax +
mov eax [esi+0Ch] +
lea ecx [ebp-54h] +
push ecx  +
push dword ptr [eax+4]  +
call ds:StartDocW  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
call ds:StartPage  +
mov ecx esi +
call sub_100ECA5  +
lea ecx [ebp-24h] +
mov dword ptr [esi+20h] 1 +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
jmp loc_100FA9D  +
mov esi [ebp-40h] +
mov eax [esi] +
xor ebx ebx +
push ebx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx esi +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_100FA9A +
retn   +
mov esi [ebp-3Ch] +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
push dword ptr [esi+1Ch]  +
call sub_100DB41  +
test eax eax +
jz loc_100FB63  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push 4B9h  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [esi+1Ch]  +
lea eax [ebp-14h] +
push dword ptr [ebp-10h]  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
mov eax [esi+0Ch] +
mov edi ds:GetDeviceCaps +
add esp 0Ch +
push 8  +
push dword ptr [eax+8]  +
call edi  +
mov [ebp-18h] eax +
mov eax [esi+0Ch] +
push 0Ah  +
push dword ptr [eax+8]  +
call edi  +
mov edi eax +
lea eax [ebp-14h] +
push eax  +
mov ecx esi +
call sub_100EC54  +
mov ecx [esi+0Ch] +
sub edi eax +
mov eax [ebp-18h] +
cdq   +
sub eax edx +
push edi  +
sar eax 1 +
push eax  +
call sub_100DC81  +
push dword ptr [esi]  +
call ds:EndPage  +
and dword ptr [esi+20h] 0 +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
and dword ptr [esi+10h] 0 +
inc dword ptr [esi+1Ch]  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
xor eax eax +
mov [esi] ax +
call sub_100EE13  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-24h] ecx +
xor ebx ebx +
push ebx  +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
call ds:CoInitialize  +
test eax eax +
jl loc_100FBC5  +
mov dword ptr [ebp-1Ch] 1 +
lea eax [ebp-14h] +
push eax  +
push offset stru_10075FC  +
push 1  +
push ebx  +
push offset stru_100760C  +
call ds:CoCreateInstance  +
cmp eax ebx +
jl loc_100FC67  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100FC67  +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0FCh]  +
push dword ptr [ebp+8]  +
lea ecx [ebp-34h] +
call sub_100FB75  +
mov ecx [ebp-14h] +
mov edx [ecx] +
lea esi [ebp-10h] +
push esi  +
sub esp 10h +
mov edi esp +
mov esi eax +
movs   +
movs   +
movs   +
push ecx  +
mov [ebp-4] ebx +
movs   +
call dword ptr [edx+0E8h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
mov esi eax +
call sub_100DCF2  +
cmp esi ebx +
jl loc_100FC67  +
cmp [ebp-10h] bx +
jz loc_100FC67  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push offset dword_10075EC  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_100FC67  +
cmp [ebp-18h] ebx +
jz loc_100FC77  +
mov ecx [ebp-24h] +
push ebx  +
push dword ptr [ebp-18h]  +
call sub_100EE7A  +
test eax eax +
jl loc_100FC67  +
mov dword ptr [ebp-20h] 1 +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_100FC77  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100FC87  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
cmp [ebp-1Ch] ebx +
jz loc_100FC92  +
call ds:CoUninitialize  +
mov eax [ebp-20h] +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
inc dword ptr [esi+10h]  +
lea ecx [ebp+8] +
call ?TrimRight@CString@@QAEXXZ  +
push offset asc_1002DF4  +
push offset asc_1002DF0  +
lea eax [ebp+8] +
push eax  +
call sub_1011C68  +
mov ecx [esi+0Ch] +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-14h] +
push eax  +
call sub_100DCA6  +
mov ecx esi +
call sub_100EC54  +
mov edi ds:GetDeviceCaps +
push 0Ah  +
push dword ptr [esi]  +
call edi  +
push 0Ah  +
push dword ptr [esi]  +
call edi  +
mov ebx eax +
sub ebx [ebp-10h] +
mov ecx esi +
call sub_100EC54  +
push dword ptr [ebp-10h]  +
sub ebx eax +
mov [ebp-18h] ebx +
mov ebx [ebp-14h] +
push ebx  +
push dword ptr [esi+10h]  +
mov ecx esi +
call sub_100EBF7  +
cmp eax [ebp-18h] +
jl loc_100FD4D  +
mov ecx esi +
call sub_100FAAC  +
push dword ptr [esi+1Ch]  +
mov ecx esi +
call sub_100DB41  +
test eax eax +
jz loc_100FD4D  +
push dword ptr [esi]  +
call ds:StartPage  +
mov ecx esi +
call sub_100ECA5  +
mov dword ptr [esi+20h] 1 +
push 8  +
push dword ptr [esi]  +
call edi  +
cmp ebx eax +
mov [ebp-1Ch] eax +
jle loc_100FE3F  +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
mov eax [ebp+8] +
and dword ptr [ebp-10h] 0 +
cmp dword ptr [eax-8] 0 +
mov byte ptr [ebp-4] 1 +
jle loc_100FE31  +
push dword ptr [ebp-10h]  +
lea ecx [ebp+8] +
call sub_100B7D7  +
movzx eax ax +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@G@Z  +
mov ecx [esi+0Ch] +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_100DCA6  +
mov edi [eax] +
cmp edi [ebp-1Ch] +
mov ebx [eax+4] +
jg loc_100FDBC  +
inc dword ptr [ebp-10h]  +
mov eax [ebp+8] +
mov ecx [ebp-10h] +
cmp ecx [eax-8] +
jl loc_100FD7B  +
jmp loc_100FE31  +
dec dword ptr [ebp-10h]  +
push dword ptr [ebp-10h]  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-18h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
push dword ptr [esi+1Ch]  +
mov ecx esi +
call sub_100DB41  +
test eax eax +
jz loc_100FE11  +
mov eax [ebp-18h] +
push dword ptr [eax-8]  +
push eax  +
push ebx  +
push edi  +
push dword ptr [esi+10h]  +
call sub_100EBF7  +
push eax  +
push 0  +
push dword ptr [esi]  +
call ds:TextOutW  +
mov eax [ebp+8] +
mov eax [eax-8] +
sub eax [ebp-10h] +
push ecx  +
mov ecx esp +
mov [ebp-10h] esp +
push eax  +
push ecx  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov ecx esi +
call sub_100FCA2  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
jmp loc_100FE79  +
push dword ptr [esi+1Ch]  +
mov ecx esi +
call sub_100DB41  +
test eax eax +
jz loc_100FE79  +
push dword ptr [ebp-10h]  +
push ebx  +
push dword ptr [esi+10h]  +
call sub_100EBF7  +
mov eax [ebp+8] +
push dword ptr [eax-8]  +
mov ecx esi +
push eax  +
push dword ptr [ebp-10h]  +
push ebx  +
push dword ptr [esi+10h]  +
call sub_100EBF7  +
push eax  +
push 0  +
push dword ptr [esi]  +
call ds:TextOutW  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi [ebp-1Ch] +
lea ecx [ebp+10h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+18h] +
mov byte ptr [ebp-4] 6 +
call ??0CString@@QAE@XZ  +
push 75h  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 4C2h  +
lea ecx [ebp+18h] +
call ?LoadStringW@CString@@QAEHI@Z  +
xor edi edi +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+18h]  +
push edi  +
call ds:MessageBoxW  +
lea ecx [ebp+18h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100FFA9 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
push 4B2h  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
lea ecx [ebp-38h] +
push ecx  +
lea ecx [ebp-34h] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 3 +
call dword ptr [eax+14h]  +
lea eax [ebp-34h] +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push 4B1h  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
push ecx  +
mov ecx esp +
mov [ebp-28h] esp +
mov edi offset byte_1002E05 +
push edi  +
call ??0CString@@QAE@PBD@Z  +
mov ebx [ebp+8] +
mov ecx ebx +
call sub_100FCA2  +
push ecx  +
lea eax [ebp-18h] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx ebx +
call sub_100FCA2  +
mov eax [esi] +
lea ecx [ebp-24h] +
push ecx  +
lea ecx [ebp-10h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp-30h] +
call ??0CString@@QAE@XZ  +
push offset asc_1002E00  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@PBD@Z  +
push ecx  +
mov ecx esp +
mov [ebp+8] esp +
push edi  +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@PBD@Z  +
mov ecx ebx +
call sub_100FCA2  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_1010188  +
cmp dword ptr [ebp-24h] 0 +
jnz loc_1010192  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
push 4B3h  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 6 +
call ?LoadStringW@CString@@QAEHI@Z  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-28h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx ebx +
call sub_100FCA2  +
jmp loc_1010293  +
cmp dword ptr [ebp-10h] 0 +
jle loc_101029F  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-1Ch] 0 +
cmp dword ptr [ebp-10h] 0 +
mov byte ptr [ebp-4] 7 +
jle loc_10101E2  +
mov eax [esi] +
lea ecx [ebp-3Ch] +
push ecx  +
push ecx  +
lea ecx [ebp-40h] +
push ecx  +
lea ecx [ebp-30h] +
push ecx  +
push dword ptr [ebp-1Ch]  +
mov ecx esi +
call dword ptr [eax+24h]  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp+8] +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp+8] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc dword ptr [ebp-1Ch]  +
mov eax [ebp-1Ch] +
cmp eax [ebp-10h] +
jl loc_10101A8  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-20h] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx ebx +
call sub_100FCA2  +
push edi  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@PBD@Z  +
lea ecx [ebp-28h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-20h] 0 +
cmp dword ptr [ebp-24h] 0 +
mov byte ptr [ebp-4] 8 +
jle loc_1010287  +
and dword ptr [ebp-1Ch] 0 +
cmp dword ptr [ebp-10h] 0 +
jle loc_101025D  +
mov eax [esi+30h] +
imul eax [ebp-20h] +
add eax [ebp-1Ch] +
mov ecx [esi+3Ch] +
lea eax [ecx+eax*4] +
push eax  +
lea ecx [ebp-28h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp+8] +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp+8] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc dword ptr [ebp-1Ch]  +
mov eax [ebp-1Ch] +
cmp eax [ebp-10h] +
jl loc_1010221  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
mov ecx ebx +
call sub_100FCA2  +
push edi  +
lea ecx [ebp+8] +
call ??4CString@@QAEABV0@PBD@Z  +
inc dword ptr [ebp-20h]  +
mov eax [ebp-20h] +
cmp eax [ebp-24h] +
jl loc_1010217  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10102CB  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_10102CB  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
jmp loc_10102C5  +
mov eax [esi] +
push 1  +
push ebx  +
mov ecx esi +
call dword ptr [eax+44h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jnz loc_10102B4  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jnz loc_101033A  +
xor eax eax +
jmp loc_1010471  +
mov eax [esi] +
push offset aDescriptionMan  +
lea ecx [ebp-0Ch] +
push ecx  +
push offset aWin32_diskdriv  +
mov ecx esi +
mov [ebp-0Ch] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-18h] eax +
jl loc_101046E  +
mov ecx [ebp-0Ch] +
push ebx  +
lea edx [ebp-4] +
mov [ebp-4] ebx +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1010461  +
push edi  +
mov edi offset aCaptionSizeMsi +
mov eax [esi] +
push 1  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
push 23Ah  +
push offset aDescriptionMan  +
push dword ptr [ebp-4]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-4] +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
push offset aIndex  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_101044B  +
mov eax [esi] +
push edi  +
lea ecx [ebp-8] +
push ecx  +
push offset aWin32_diskpart  +
mov ecx esi +
mov [ebp-8] ebx +
call dword ptr [eax+4]  +
test eax eax +
jl loc_101043B  +
jmp loc_1010417  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-14h] +
push edx  +
push offset aDiskindex  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_101041A  +
mov eax [ebp-10h] +
cmp eax [ebp-14h] +
jnz loc_101041A  +
mov eax [esi] +
push 244h  +
push edi  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1010417  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+8] ebx +
mov ecx [ebp-8] +
mov eax [ecx] +
push ebx  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_10103D7  +
mov ecx [ebp-8] +
cmp ecx ebx +
jz loc_1010438  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-8] ebx +
mov ecx [ebp-4] +
cmp ecx ebx +
jz loc_1010448  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-4] ebx +
mov ecx [ebp-0Ch] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-4] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101037B  +
pop edi  +
mov ecx [ebp-0Ch] +
cmp ecx ebx +
jz loc_101046E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-18h] +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jnz loc_1010496  +
xor eax eax +
jmp loc_101051B  +
mov eax [esi] +
push edi  +
mov edi offset aCaptionPnpdevi +
push edi  +
lea ecx [ebp-4] +
push ecx  +
push offset aWin32_pnpentit  +
mov ecx esi +
mov [ebp-4] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-0Ch] eax +
jl loc_1010517  +
jmp loc_10104F6  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-8] +
push edx  +
push offset aConfigmanagere  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_10104E9  +
cmp [ebp-8] ebx +
jz loc_10104E9  +
mov eax [esi] +
push 245h  +
push edi  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_10104F6  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-4] +
push ebx  +
lea edx [ebp+8] +
mov [ebp+8] ebx +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_10104B9  +
mov ecx [ebp-4] +
cmp ecx ebx +
jz loc_1010517  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov eax offset loc_101BCB6 +
call __EH_prolog3  +
mov edi [ebp+8] +
xor ebx ebx +
cmp edi ebx +
jnz loc_1010542  +
xor eax eax +
jmp loc_1010621  +
mov [ebp-10h] ebx +
mov eax offset aAudio +
cmp [ebp+0Ch] ebx +
jz loc_1010554  +
mov eax offset aVideo +
push eax  +
lea ecx [ebp+0Ch] +
call ??0CString@@QAE@PBG@Z  +
mov eax [edi] +
mov esi offset aEightdotthreef +
push esi  +
lea ecx [ebp-10h] +
push ecx  +
push offset aWin32_codecfil  +
mov ecx edi +
mov [ebp-4] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-18h] eax +
jl loc_1010612  +
mov ecx [ebp-10h] +
push ebx  +
lea edx [ebp+8] +
mov [ebp+8] ebx +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1010602  +
mov ecx [ebp+8] +
mov eax [ecx] +
push offset aGroup  +
lea edx [ebp-14h] +
push edx  +
call dword ptr [eax+20h]  +
push dword ptr [eax]  +
push dword ptr [ebp+0Ch]  +
call ds:_wcsicmp  +
mov ebx eax +
pop ecx  +
neg ebx  +
pop ecx  +
sbb bl bl +
lea ecx [ebp-14h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_10105DD  +
mov eax [edi] +
push 249h  +
push esi  +
push dword ptr [ebp+8]  +
mov ecx edi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_10105EA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-10h] +
and dword ptr [ebp+8] 0 +
mov eax [ecx] +
push 0  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1010595  +
xor ebx ebx +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_101060F  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-10h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-18h] +
call __EH_epilog3  +
retn 18h  +
***
mov eax offset loc_101BCDE +
call __EH_prolog3  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jnz loc_101064A  +
xor eax eax +
jmp loc_101077D  +
push 68h  +
lea eax [ebp-80h] +
push edi  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
push offset aDrivetypeDevic  +
lea ecx [ebp-10h] +
push ecx  +
push offset aWin32_logicald  +
mov ecx esi +
mov [ebp-10h] edi +
call dword ptr [eax+4]  +
cmp eax edi +
mov [ebp-18h] eax +
jl loc_1010709  +
mov [ebp+8] edi +
jmp loc_10106E8  +
mov ecx [ebp+8] +
mov eax [ecx] +
push offset aDeviceid  +
lea edx [ebp-14h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-14h] +
mov [ebp-4] edi +
cmp [eax-8] edi +
jz loc_10106CC  +
lea ecx [ebp-14h] +
call ?MakeUpper@CString@@QAEXXZ  +
mov eax [ebp-14h] +
cmp [eax-8] edi +
jle loc_10106B2  +
movzx eax word ptr [eax] +
jmp loc_10106B4  +
xor eax eax +
lea ecx [eax-41h] +
cmp cx 19h +
mov ecx [ebp+8] +
ja loc_10106CF  +
movzx eax ax +
mov [ebp+eax*4-184h] ecx +
jmp loc_10106D9  +
mov ecx [ebp+8] +
cmp ecx edi +
jz loc_10106D9  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
mov [ebp+8] edi +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push edi  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1010681  +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_1010706  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-10h] edi +
mov ebx [ebp+18h] +
mov [ebp+8] edi +
mov eax [ebp+8] +
mov edi [ebp+eax*4-80h] +
test edi edi +
jz loc_1010771  +
mov eax [edi] +
lea ecx [ebp+18h] +
push ecx  +
push offset aDrivetype  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1010761  +
mov eax [ebp+18h] +
dec eax  +
dec eax  +
jz loc_101073E  +
dec eax  +
jz loc_101079E  +
dec eax  +
jz loc_1010785  +
dec eax  +
jnz loc_1010761  +
mov eax [esi] +
push 1  +
push ebx  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call dword ptr [eax+2Ch]  +
push 23Fh  +
push offset aDeviceidDesc_1  +
mov eax [esi] +
push edi  +
push ebx  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call dword ptr [eax+28h]  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
mov eax [ebp+8] +
and dword ptr [ebp+eax*4-80h] 0 +
inc dword ptr [ebp+8]  +
cmp dword ptr [ebp+8] 1Ah +
jl loc_101070F  +
mov eax [ebp-18h] +
call __EH_epilog3  +
retn 18h  +
***
mov eax [esi] +
push 1  +
push ebx  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call dword ptr [eax+2Ch]  +
push 241h  +
push offset aDeviceidDesc_0  +
jmp loc_1010755  +
***
mov eax [esi] +
push 1  +
push ebx  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call dword ptr [eax+2Ch]  +
push 240h  +
push offset aDeviceidDescri  +
jmp loc_1010755  +
***
push 48h  +
mov eax offset loc_101BD4C +
call __EH_prolog3  +
push 8  +
pop ecx  +
xor eax eax +
xor ebx ebx +
mov [ebp-54h] ebx +
lea edi [ebp-50h] +
stos   +
lea eax [ebp-54h] +
push eax  +
call ds:GetNativeSystemInfo  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov esi [ebp+8] +
mov [ebp-4] ebx +
cmp esi ebx +
jnz loc_1010808  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_1010AFB  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-18h] +
push ecx  +
push offset aWin32_operatin  +
mov ecx esi +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
call dword ptr [eax+4]  +
mov edi eax +
cmp edi ebx +
jl loc_101084B  +
mov ecx [ebp-18h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-14h] +
push edx  +
call dword ptr [eax+8]  +
mov edi eax +
cmp edi ebx +
jge loc_101083B  +
mov [ebp-14h] ebx +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1010848  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-18h] ebx +
cmp [ebp-14h] ebx +
jnz loc_1010854  +
mov esi edi +
jmp loc_10107F5  +
***
push offset aWinsock_dll  +
lea ecx [ebp-30h] +
call ??0CString@@QAE@PBG@Z  +
push offset aWsock32_dll  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
push offset aWsock32n_dll  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBG@Z  +
push offset dword_10016F0  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@PBG@Z  +
cmp word ptr [ebp-54h] 6 +
mov byte ptr [ebp-4] 4 +
mov ebx offset aNameFilesizeVe +
jz loc_10108AF  +
cmp word ptr [ebp-54h] 9 +
jnz loc_10109B1  +
push 208h  +
call loc_1019A30  +
pop ecx  +
mov [ebp+8] eax +
test eax eax +
jnz loc_10108E0  +
push offset ??1CString@@QAE@XZ  +
push 4  +
mov [ebp-4] al +
push 4  +
lea eax [ebp-30h] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
mov esi 8007000Eh +
jmp loc_10107F5  +
***
mov edi 104h +
push edi  +
push eax  +
call ds:GetSystemWow64DirectoryW  +
test eax eax +
jz loc_1010AD4  +
cmp eax edi +
ja loc_1010AD4  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+8]  +
call sub_10199FA  +
mov eax [ebp-30h] +
and dword ptr [ebp-20h] 0 +
cmp dword ptr [eax-8] 0 +
pop ecx  +
jz loc_10109B1  +
lea edi [ebp-30h] +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
push dword ptr [edi]  +
lea eax [ebp-1Ch] +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 5 +
push offset aCim_datafile_n  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
mov eax [esi] +
add esp 10h +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp-1Ch]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_101098F  +
mov eax [esi] +
push 1  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
push 242h  +
push ebx  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_101098B  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [ebp+8] 0 +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp-20h]  +
mov edi [ebp-20h] +
lea edi [ebp+edi*4-30h] +
mov eax [edi] +
cmp dword ptr [eax-8] 0 +
jnz loc_1010925  +
mov ecx [ebp-14h] +
mov eax [ecx] +
push offset aSystemdirector  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+20h]  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 6 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-14h] +
xor edi edi +
cmp ecx edi +
jz loc_10109EA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-10h] +
mov [ebp-14h] edi +
cmp [eax-8] edi +
jnz loc_1010A10  +
push offset ??1CString@@QAE@XZ  +
push 4  +
push 4  +
lea eax [ebp-30h] +
push eax  +
mov byte ptr [ebp-4] 0 +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
jmp loc_10107F3  +
***
mov eax [ebp-30h] +
mov [ebp-1Ch] edi +
cmp [eax-8] edi +
jz loc_1010AAE  +
lea edi [ebp-30h] +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
push dword ptr [edi]  +
lea eax [ebp-20h] +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 7 +
push offset aCim_datafile_n  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
mov eax [esi] +
add esp 10h +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1010A8C  +
mov eax [esi] +
push 1  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
push 242h  +
push ebx  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1010A88  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [ebp+8] 0 +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp-1Ch]  +
mov edi [ebp-1Ch] +
lea edi [ebp+edi*4-30h] +
mov eax [edi] +
cmp dword ptr [eax-8] 0 +
jnz loc_1010A22  +
push offset ??1CString@@QAE@XZ  +
push 4  +
push 4  +
lea eax [ebp-30h] +
push eax  +
mov byte ptr [ebp-4] 0 +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
jmp loc_1010AFB  +
push offset ??1CString@@QAE@XZ  +
push 4  +
push 4  +
lea eax [ebp-30h] +
push eax  +
mov byte ptr [ebp-4] 0 +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax 80004005h +
call __EH_epilog3  +
retn 18h  +
***
push 20h  +
mov eax offset loc_101BD84 +
call __EH_prolog3  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jnz loc_1010B24  +
xor eax eax +
jmp loc_1010CD7  +
mov eax [esi] +
push offset aCaptionPnpde_2  +
lea ecx [ebp-18h] +
push ecx  +
push offset aWin32_usbcon_0  +
mov ecx esi +
mov [ebp-18h] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-2Ch] eax +
jl loc_1010CD4  +
mov ecx [ebp-18h] +
push ebx  +
lea edx [ebp-10h] +
mov [ebp-10h] ebx +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1010CC7  +
mov edi offset aCaptionPnpde_1 +
mov eax [esi] +
push 248h  +
push edi  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push offset a__path  +
lea edx [ebp-28h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-28h] +
mov [ebp-4] ebx +
cmp [eax-8] ebx +
jz loc_1010C96  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-14h] +
push ecx  +
push offset aWin32_usbcontr  +
mov ecx esi +
mov [ebp-14h] ebx +
call dword ptr [eax+4]  +
test eax eax +
jl loc_1010C96  +
mov [ebp+8] ebx +
jmp loc_1010C71  +
lea ecx [ebp-24h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-24h] +
push edx  +
push offset aAntecedent  +
mov byte ptr [ebp-4] 2 +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1010C4A  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-24h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1010C4A  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-20h] +
push edx  +
push offset aDependent  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1010C4A  +
mov eax [esi] +
lea ecx [ebp-1Ch] +
push ecx  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1010C4A  +
mov eax [esi] +
push 248h  +
push edi  +
push dword ptr [ebp-1Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1010C47  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-1Ch] ebx +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1010C57  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-20h] +
mov [ebp+8] ebx +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-24h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-14h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1010BBE  +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_1010C93  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-14h] ebx +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_1010CA3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
mov [ebp-10h] ebx +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-18h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-10h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1010B64  +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1010CD4  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-2Ch] +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
push 0Ah  +
lea ecx [esi+4] +
call ??0CMapStringToOb@@QAE@H@Z  +
and dword ptr [esi+20h] 0 +
mov eax esi +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov eax [esi+10h] +
neg eax  +
sbb eax eax +
mov [ebp-10h] eax +
jz loc_1010D53  +
lea edi [esi+4] +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call ?GetNextAssoc@CMapStringToOb@@QBEXAAPAU__POSITION@@AAVCString@@AAPAVCObject@@@Z  +
mov ecx [ebp-18h] +
test ecx ecx +
jz loc_1010D4D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_1010D2C  +
lea ecx [esi+4] +
call ?RemoveAll@CMapStringToOb@@QAEXXZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
add ecx 4 +
call ?Lookup@CMapStringToOb@@QBEHPBGAAPAVCObject@@@Z  +
neg eax  +
sbb eax eax +
and eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
call sub_1010D03  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+4] +
call ??1CMapStringToOb@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
xor ebx ebx +
cmp [edi] ebx +
jz loc_1010DE6  +
mov eax [edi+20h] +
jmp loc_101109B  +
call sub_1010D03  +
push offset aWin32_pnpalloc  +
lea ecx [ebp-3Ch] +
call ??0CString@@QAE@PBG@Z  +
push offset aWin32_cimlogic  +
lea ecx [ebp-38h] +
mov [ebp-4] ebx +
call ??0CString@@QAE@PBG@Z  +
push offset dword_10016F0  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp-3Ch] +
mov dword ptr [ebp-4] 2 +
mov [ebp-20h] ebx +
cmp [eax-8] ebx +
jz loc_1011078  +
lea esi [ebp-3Ch] +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
mov esi [esi] +
mov ecx [ebp+8] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-1Ch] +
push edx  +
push esi  +
mov byte ptr [ebp-4] 5 +
mov [ebp-1Ch] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
jl loc_1011051  +
mov [ebp-18h] ebx +
jmp loc_1010FE7  +
lea ecx [ebp-14h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
mov ecx [ebp-18h] +
mov eax [ecx] +
lea edx [ebp-14h] +
push edx  +
push offset aAntecedent  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1010FE7  +
mov ecx [ebp-18h] +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
push offset aDependent  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1010FE7  +
mov esi offset asc_100259C +
push esi  +
lea ecx [ebp-14h] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1010EFD  +
mov ecx [ebp-14h] +
mov ecx [ecx-8] +
sub ecx eax +
dec ecx  +
push ecx  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 6 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
push esi  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1010F3A  +
mov ecx [ebp-10h] +
mov ecx [ecx-8] +
sub ecx eax +
dec ecx  +
push ecx  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 7 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-14h] +
push eax  +
mov ecx edi +
call sub_1010D72  +
mov [ebp-24h] eax +
cmp eax ebx +
jnz loc_1010F86  +
push 1Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-24h] ecx +
mov byte ptr [ebp-4] 8 +
cmp ecx ebx +
jz loc_1010F6C  +
push 0Ah  +
call ??0CStringList@@QAE@H@Z  +
mov esi eax +
jmp loc_1010F6E  +
xor esi esi +
mov byte ptr [ebp-4] 5 +
mov [ebp-24h] esi +
cmp esi ebx +
jz loc_1010F92  +
push dword ptr [ebp-14h]  +
lea ecx [edi+4] +
call ??ACMapStringToOb@@QAEAAPAVCObject@@PBG@Z  +
mov [eax] esi +
mov ecx [ebp-24h] +
lea eax [ebp-10h] +
push eax  +
call MFC42u_6565  +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call sub_1010D72  +
mov esi eax +
cmp esi ebx +
jnz loc_1010FDC  +
push 1Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-24h] ecx +
mov byte ptr [ebp-4] 9 +
cmp ecx ebx +
jz loc_1010FC3  +
push 0Ah  +
call ??0CStringList@@QAE@H@Z  +
mov esi eax +
jmp loc_1010FC5  +
xor esi esi +
mov byte ptr [ebp-4] 5 +
cmp esi ebx +
jz loc_1010FE7  +
push dword ptr [ebp-10h]  +
lea ecx [edi+4] +
call ??ACMapStringToOb@@QAEAAPAVCObject@@PBG@Z  +
mov [eax] esi +
xor ebx ebx +
lea eax [ebp-14h] +
push eax  +
mov ecx esi +
call MFC42u_6565  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-18h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1010E79  +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1011009  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1011016  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp-20h]  +
mov esi [ebp-20h] +
lea esi [ebp+esi*4-3Ch] +
mov eax [esi] +
cmp [eax-8] ebx +
jnz loc_1010E32  +
jmp loc_1011078  +
lea ecx [ebp-28h] +
mov [edi+20h] eax +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
call ds:GetTickCount  +
mov esi [edi+20h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push offset ??1CString@@QAE@XZ  +
push 3  +
mov [edi] eax +
push 4  +
lea eax [ebp-3Ch] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+14h] +
mov esi [ebp+8] +
xor ebx ebx +
push ebx  +
lea ecx [ebp-42Ch] +
push ecx  +
mov [ebp-414h] eax +
mov eax [esi] +
push offset aWin32_operatin  +
mov ecx esi +
mov [ebp-42Ch] ebx +
mov [ebp-424h] ebx +
call dword ptr [eax+4]  +
mov edi eax +
cmp edi ebx +
jl loc_101111E  +
mov ecx [ebp-42Ch] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-424h] +
push edx  +
call dword ptr [eax+8]  +
mov edi eax +
cmp edi ebx +
jge loc_101110A  +
mov [ebp-424h] ebx +
mov ecx [ebp-42Ch] +
cmp ecx ebx +
jz loc_101111A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp edi ebx +
jge loc_1011125  +
mov eax edi +
jmp loc_1011BD6  +
mov eax [esi] +
push offset aNameManufact_0  +
push offset aWin32_computer  +
mov ecx esi +
call dword ptr [eax+14h]  +
push offset aCaption  +
mov [ebp-43Ch] eax +
mov eax [esi] +
push offset aWin32_pagefile  +
mov ecx esi +
call dword ptr [eax+14h]  +
push 100h  +
mov [ebp-474h] eax +
lea eax [ebp-410h] +
push eax  +
push 29CCh  +
push ebx  +
call ds:GetModuleHandleW  +
push eax  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1011180  +
mov eax 80004005h +
jmp loc_1011BD6  +
cmp [ebp-424h] ebx +
jz loc_101120D  +
lea ecx [ebp-434h] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-424h] +
mov eax [ecx] +
lea edx [ebp-434h] +
push edx  +
push offset aCsdversion  +
mov [ebp-4] ebx +
call dword ptr [eax+8]  +
mov eax [ebp-434h] +
cmp [eax-8] ebx +
mov eax [esi] +
jz loc_10111E0  +
lea ecx [ebp-410h] +
push ecx  +
push offset aCaptionVersi_0  +
push dword ptr [ebp-424h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+24h]  +
jmp loc_10111FE  +
push 1EAh  +
push offset aCaptionVersion  +
push dword ptr [ebp-424h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-434h] +
call ??1CString@@QAE@XZ  +
mov eax [esi] +
push offset aRemaininggra_0  +
push offset aWin32_windowsp  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov edi eax +
cmp edi ebx +
jz loc_1011266  +
mov eax [edi] +
lea ecx [ebp-420h] +
push ecx  +
push offset aActivationrequ  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_101125E  +
cmp [ebp-420h] ebx +
jz loc_101125E  +
mov eax [esi] +
push 1E7h  +
push offset aRemaininggrace  +
push edi  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
cmp [ebp-43Ch] ebx +
jz loc_101128E  +
mov eax [esi] +
push 1DDh  +
push offset aNameManufactur  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
push offset aDescriptionM_0  +
lea ecx [ebp-444h] +
mov [ebp-42Ch] ebx +
mov [ebp-438h] ebx +
call ??0CString@@QAE@PBG@Z  +
mov edi offset aNameMaxclocksp +
push edi  +
lea ecx [ebp-460h] +
mov dword ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
push edi  +
lea ecx [ebp-458h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBG@Z  +
mov ecx [ebp-424h] +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-418h] 1DEh +
cmp ecx ebx +
jz loc_1011364  +
mov eax [ecx] +
lea edx [ebp-444h] +
push edx  +
push offset aVersion  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1011364  +
push offset a__1  +
lea ecx [ebp-444h] +
call ?Find@CString@@QBEHPBG@Z  +
push eax  +
lea eax [ebp-420h] +
push eax  +
lea ecx [ebp-444h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push dword ptr [eax]  +
call ds:_wtoi  +
pop ecx  +
lea ecx [ebp-420h] +
mov edi eax +
call ??1CString@@QAE@XZ  +
cmp edi 6 +
jl loc_1011364  +
mov edi offset aNumberofcoresN +
push edi  +
lea ecx [ebp-460h] +
call ??YCString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebp-458h] +
call ??YCString@@QAEABV0@PBG@Z  +
mov dword ptr [ebp-418h] 1E9h +
push dword ptr [ebp-460h]  +
mov eax [esi] +
lea ecx [ebp-42Ch] +
push ecx  +
push offset aWin32_processo  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jl loc_10113EA  +
jmp loc_10113C3  +
cmp [ebp-438h] ebx +
jz loc_10113DA  +
push dword ptr [ebp-418h]  +
mov eax [esi] +
push dword ptr [ebp-458h]  +
mov ecx esi +
push dword ptr [ebp-438h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-438h] +
cmp ecx ebx +
jz loc_10113BD  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-438h] ebx +
mov ecx [ebp-42Ch] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-438h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1011383  +
mov ecx [ebp-42Ch] +
cmp ecx ebx +
jz loc_10113EA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [esi] +
push offset aManufacturer_0  +
push offset aWin32_bios  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov [ebp-430h] eax +
mov edi offset asc_1003E14 +
cmp eax ebx +
jnz loc_1011429  +
mov eax [esi] +
push offset aManufacturerVe  +
push offset aWin32_bios  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov [ebp-430h] eax +
cmp eax ebx +
jz loc_101167D  +
mov ecx [ebp-430h] +
mov eax [ecx] +
lea edx [ebp-420h] +
push edx  +
push offset aSmbiospresent  +
mov [ebp-420h] ebx +
call dword ptr [eax+0Ch]  +
test eax eax +
jge loc_1011450  +
mov [ebp-420h] ebx +
lea ecx [ebp-418h] +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
cmp [ebp-420h] ebx +
jz loc_101162C  +
mov ecx [ebp-430h] +
mov eax [ecx] +
lea edx [ebp-418h] +
push edx  +
push offset aSmbiosbiosvers  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_101162C  +
lea ecx [ebp-41Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-434h] +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@XZ  +
push 1DFh  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 6 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 1E6h  +
lea ecx [ebp-434h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push offset aSSC  +
lea ecx [ebp-428h] +
call ??0CString@@QAE@PBG@Z  +
mov [ebp-45Ch] eax +
push edi  +
lea eax [ebp-454h] +
push eax  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 7 +
call ?SpanExcluding@CString@@QBE?AV1@PBG@Z  +
push dword ptr [ebp-45Ch]  +
mov byte ptr [ebp-4] 8 +
push eax  +
lea eax [ebp-450h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 9 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-450h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-454h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-428h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
push offset aD_D  +
lea ecx [ebp-45Ch] +
call ??0CString@@QAE@PBG@Z  +
mov [ebp-428h] eax +
push edi  +
lea eax [ebp-450h] +
push eax  +
lea ecx [ebp-434h] +
mov byte ptr [ebp-4] 0Ah +
call ?SpanExcluding@CString@@QBE?AV1@PBG@Z  +
push dword ptr [ebp-428h]  +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea eax [ebp-454h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-434h] +
mov byte ptr [ebp-4] 0Ch +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-454h] +
mov byte ptr [ebp-4] 0Bh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-450h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-45Ch] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-41Ch]  +
mov eax [esi] +
push offset aManufacturerSm  +
push dword ptr [ebp-430h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+24h]  +
push dword ptr [ebp-434h]  +
mov eax [esi] +
push offset aSmbiosmajorver  +
push dword ptr [ebp-430h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+24h]  +
lea ecx [ebp-434h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
jmp loc_101166E  +
mov ecx [ebp-430h] +
mov eax [ecx] +
lea edx [ebp-418h] +
push edx  +
push offset aBiosversion  +
call dword ptr [eax+8]  +
test eax eax +
mov eax [esi] +
push 1DFh  +
mov ecx esi +
jl loc_1011657  +
push offset aBiosversionRel  +
jmp loc_101165C  +
push offset aVersionRelease  +
push dword ptr [ebp-430h]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
lea ecx [ebp-418h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
cmp [ebp-424h] ebx +
jz loc_101176A  +
mov eax [esi] +
push 1E0h  +
push offset aWindowsdirecto  +
push dword ptr [ebp-424h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-424h] +
cmp ecx ebx +
jz loc_101176A  +
mov eax [ecx] +
push offset aSystemdirector  +
lea edx [ebp-420h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-420h] +
mov byte ptr [ebp-4] 0Dh +
cmp [eax-8] ebx +
jz loc_101175B  +
lea ecx [ebp-418h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp-420h]  +
lea eax [ebp-418h] +
push offset aCim_datafile_0  +
push eax  +
mov byte ptr [ebp-4] 0Eh +
call ?Format@CString@@QAAXPBGZZ  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp-41Ch] +
push ecx  +
push dword ptr [ebp-418h]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_101174C  +
mov eax [esi] +
push 1E8h  +
push offset aVersion  +
push dword ptr [ebp-41Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-41Ch] +
cmp ecx ebx +
jz loc_101174C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-418h] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-420h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
cmp [ebp-43Ch] ebx +
jz loc_101181A  +
mov eax [esi] +
push 1E1h  +
push offset aMsiadvanceduse  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-43Ch] +
mov eax [ecx] +
lea edx [ebp-428h] +
push edx  +
push offset aDaylightineffe  +
mov dword ptr [ebp-418h] 1 +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_10117C9  +
cmp [ebp-428h] ebx +
jz loc_10117C9  +
mov [ebp-418h] ebx +
mov eax [esi] +
push ebx  +
push offset aWin32_timezone  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov [ebp-420h] eax +
cmp eax ebx +
jz loc_101181A  +
mov eax offset aStandardname +
cmp [ebp-418h] ebx +
jnz loc_10117F2  +
mov eax offset aDaylightname +
mov edx [esi] +
push 1E5h  +
push eax  +
push dword ptr [ebp-420h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [edx+28h]  +
mov ecx [ebp-420h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-44Ch] +
mov [ebp-470h] ebx +
mov [ebp-46Ch] ebx +
call ??0CString@@QAE@XZ  +
xor eax eax +
push 0FEh  +
mov [ebp-210h] ax +
lea eax [ebp-20Eh] +
push ebx  +
push eax  +
mov byte ptr [ebp-4] 0Fh +
call memset  +
add esp 0Ch +
lea ecx [ebp-440h] +
call ??0CString@@QAE@XZ  +
push 1EBh  +
lea ecx [ebp-44Ch] +
mov byte ptr [ebp-4] 10h +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax dword_10268C4 +
cmp [eax-8] ebx +
jnz loc_10118D2  +
lea eax [ebp-470h] +
push eax  +
call ds:GetPhysicallyInstalledSystemMemory  +
test eax eax +
jz loc_10118D2  +
push 80h  +
lea eax [ebp-210h] +
push eax  +
push 1  +
push ebx  +
push 400h  +
push dword ptr [ebp-46Ch]  +
push dword ptr [ebp-470h]  +
call __allmul  +
push edx  +
push eax  +
call ds:StrFormatByteSizeEx  +
lea ecx [ebp-440h] +
test eax eax +
jl loc_10118D8  +
lea eax [ebp-210h] +
push eax  +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_10118E2  +
lea ecx [ebp-440h] +
push 153h  +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [esi] +
push ebx  +
push ebx  +
lea ecx [ebp-44Ch] +
push ecx  +
push dword ptr [ebp-414h]  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov eax [ebp-414h] +
mov edx [esi] +
push ebx  +
push ebx  +
lea ecx [ebp-440h] +
push ecx  +
add eax 1Ch +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
fldz   +
mov eax [esi] +
fstp  qword ptr [ebp-468h] +
push offset aTotalphysicalm  +
push offset aWin32_logicalm  +
mov ecx esi +
mov [ebp-448h] ebx +
mov [ebp-42Ch] ebx +
call dword ptr [eax+14h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jz loc_101196A  +
mov edx [eax] +
lea ecx [ebp-448h] +
push ecx  +
push offset aTotalphysicalm  +
mov ecx eax +
call dword ptr [edx+0Ch]  +
test eax eax +
jge loc_101195E  +
mov [ebp-448h] ebx +
mov ecx [ebp-428h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-448h] +
fild  dword ptr [ebp-448h] +
test eax eax +
jge loc_1011980  +
fadd  ds:dbl_10039B8 +
fstp  qword ptr [ebp-468h] +
fldz   +
fcomp  qword ptr [ebp-468h] +
fnstsw  ax +
test ah 44h +
jp loc_10119EE  +
mov eax [esi] +
push offset aTotalphysicalm  +
push offset aWin32_computer  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov [ebp-428h] eax +
cmp eax ebx +
jz loc_10119DB  +
mov edx [eax] +
lea ecx [ebp-468h] +
push ecx  +
push offset aTotalphysicalm  +
mov ecx eax +
call dword ptr [edx+14h]  +
test eax eax +
jge loc_10119CF  +
fldz   +
fstp  qword ptr [ebp-468h] +
mov ecx [ebp-428h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
fldz   +
fcomp  qword ptr [ebp-468h] +
fnstsw  ax +
test ah 44h +
jnp loc_1011AF0  +
xor eax eax +
push 0FEh  +
mov [ebp-110h] ax +
lea eax [ebp-10Eh] +
push ebx  +
push eax  +
call memset  +
fld  qword ptr [ebp-468h] +
add esp 0Ch +
push 80h  +
lea eax [ebp-110h] +
push eax  +
push 1  +
call _ftol2  +
push edx  +
push eax  +
call ds:StrFormatByteSizeEx  +
test eax eax +
jl loc_1011AF0  +
lea ecx [ebp-41Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-418h] +
mov byte ptr [ebp-4] 11h +
call ??0CString@@QAE@XZ  +
push 1E2h  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 12h +
call ?LoadStringW@CString@@QAEHI@Z  +
push edi  +
lea eax [ebp-428h] +
push eax  +
lea ecx [ebp-41Ch] +
call ?SpanExcluding@CString@@QBE?AV1@PBG@Z  +
push eax  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 13h +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-428h] +
mov byte ptr [ebp-4] 12h +
call ??1CString@@QAE@XZ  +
lea eax [ebp-110h] +
push eax  +
lea ecx [ebp-418h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov edi [ebp-414h] +
mov eax [esi] +
push ebx  +
push ebx  +
lea ecx [ebp-41Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov edx [esi] +
push ebx  +
push ebx  +
lea eax [ebp-418h] +
push eax  +
lea eax [edi+1Ch] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
lea ecx [ebp-418h] +
mov byte ptr [ebp-4] 11h +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-41Ch] +
mov byte ptr [ebp-4] 10h +
call ??1CString@@QAE@XZ  +
cmp [ebp-424h] ebx +
jz loc_1011B18  +
mov eax [esi] +
push 1E3h  +
push offset aFreephysicalme  +
push dword ptr [ebp-424h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov edi [ebp-474h] +
cmp edi ebx +
jz loc_1011B3D  +
mov eax [esi] +
push 1E4h  +
push offset aMsiadvancedcap  +
push edi  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp-414h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-424h] +
cmp ecx ebx +
jz loc_1011B4D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-43Ch] +
cmp ecx ebx +
jz loc_1011B5D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-438h] +
cmp ecx ebx +
jz loc_1011B6D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-430h] +
cmp ecx ebx +
jz loc_1011B7D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp edi ebx +
jz loc_1011B89  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
lea ecx [ebp-440h] +
mov byte ptr [ebp-4] 0Fh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-44Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-458h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-460h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-444h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call sub_1019FA8  +
retn 18h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [esi+4] +
mov [esi] eax +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+10h]  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+8] +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp+18h] +
mov [esi+0Ch] eax +
mov eax [ebp+14h] +
mov [esi+10h] eax +
mov eax [ebp+1Ch] +
mov [esi+14h] eax +
mov eax esi +
call __EH_epilog3  +
retn 18h  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_15 +
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
lea ecx [esi+8] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp-18h] +
mov esi [eax-8] +
mov byte ptr [ebp-4] 3 +
jmp loc_1011D42  +
push dword ptr [ebp-18h]  +
lea ecx [ebp-10h] +
call ?Find@CString@@QBEHPBG@Z  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_1011CE0  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-14h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
jmp loc_1011D42  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 4 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ebp-14h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
sub eax edi +
sub eax esi +
push eax  +
lea eax [ebp+10h] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 5 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
jnz loc_1011CB8  +
mov ecx [ebp+8] +
lea eax [ebp-14h] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
lea ecx [ebp-2Ch] +
call ??0CString@@QAE@XZ  +
xor edi edi +
lea ecx [ebp-28h] +
mov [ebp-4] edi +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@PBG@Z  +
push offset asc_1002590  +
push offset asc_100258C  +
lea eax [ebp-24h] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_1011C68  +
push dword ptr [ebp-24h]  +
lea eax [ebp-2Ch] +
push offset aWin32_pnpent_0  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
mov ecx [ebp+0Ch] +
add esp 0Ch +
lea eax [ebp-2Ch] +
push eax  +
call sub_1010D72  +
mov esi eax +
mov [ebp-34h] esi +
cmp esi edi +
jz loc_1012181  +
push dword_1026830  +
call sub_10092F2  +
mov eax [esi+4] +
mov [ebp-30h] eax +
cmp eax edi +
jz loc_1012181  +
mov esi offset asc_1002614 +
mov ecx [ebp-34h] +
lea eax [ebp-30h] +
push eax  +
call sub_100CBAE  +
push eax  +
lea ecx [ebp-28h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ebx [ebp+8] +
mov eax [ebx] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp-28h]  +
mov ecx ebx +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1012178  +
lea ecx [ebp+0Ch] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp+0Ch] +
push edx  +
push offset a__class  +
mov byte ptr [ebp-4] 3 +
call dword ptr [eax+8]  +
test eax eax +
jl loc_101215F  +
lea ecx [ebp+10h] +
call ??0CString@@QAE@XZ  +
push offset aWin32_irqresou  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 4 +
call sub_1008914  +
test eax eax +
jnz loc_1011EA2  +
push 1A6h  +
jmp loc_1011F00  +
push offset aWin32_portreso  +
lea ecx [ebp+0Ch] +
call sub_1008914  +
test eax eax +
jnz loc_1011EBA  +
push 1A7h  +
jmp loc_1011F00  +
push offset aWin32_dmachann  +
lea ecx [ebp+0Ch] +
call sub_1008914  +
test eax eax +
jnz loc_1011ED2  +
push 1A8h  +
jmp loc_1011F00  +
push offset aWin32_deviceme  +
lea ecx [ebp+0Ch] +
call sub_1008914  +
test eax eax +
jnz loc_1011EEA  +
push 1A9h  +
jmp loc_1011F00  +
push offset aCim_datafile  +
lea ecx [ebp+0Ch] +
call sub_1008914  +
test eax eax +
jnz loc_1011F08  +
push 1BBh  +
lea ecx [ebp+10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp+10h] +
cmp [eax-8] edi +
jz loc_1012153  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-20h] +
push edx  +
push offset aCaption  +
mov byte ptr [ebp-4] 5 +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1012147  +
push offset aCim_datafile  +
lea ecx [ebp+0Ch] +
call sub_1008914  +
test eax eax +
jnz loc_1012123  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 6 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 7 +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push edi  +
lea edx [ebp-14h] +
push edx  +
push 7Ah  +
push offset aZ  +
push offset aFilesize  +
mov byte ptr [ebp-4] 8 +
call dword ptr [eax+24h]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-1Ch] +
push edx  +
push offset aVersion  +
call dword ptr [eax+8]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push edi  +
lea edx [ebp-18h] +
push edx  +
push 74h  +
push offset aT  +
push offset aCreationdate  +
call dword ptr [eax+24h]  +
mov eax [ebp-1Ch] +
cmp [eax-8] edi +
jnz loc_1011FD1  +
mov eax [ebp-18h] +
cmp [eax-8] edi +
jnz loc_1011FD1  +
mov eax [ebp-14h] +
cmp [eax-8] edi +
jz loc_10120FF  +
push offset asc_1002778  +
lea ecx [ebp-60h] +
call ??0CString@@QAE@PBG@Z  +
mov edi eax +
push esi  +
lea ecx [ebp-5Ch] +
mov byte ptr [ebp-4] 9 +
call ??0CString@@QAE@PBG@Z  +
mov ebx eax +
push esi  +
lea ecx [ebp-58h] +
mov byte ptr [ebp-4] 0Ah +
call ??0CString@@QAE@PBG@Z  +
mov [ebp-38h] eax +
push offset asc_100277C  +
lea ecx [ebp-54h] +
mov byte ptr [ebp-4] 0Bh +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-1Ch] +
push ecx  +
push eax  +
lea eax [ebp-50h] +
push eax  +
mov byte ptr [ebp-4] 0Ch +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [ebp-38h]  +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
lea eax [ebp-48h] +
push eax  +
mov byte ptr [ebp-4] 0Eh +
call ??H@YG?AVCString@@ABV0@0@Z  +
push ebx  +
push eax  +
lea eax [ebp-44h] +
push eax  +
mov byte ptr [ebp-4] 0Fh +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-18h] +
push ecx  +
push eax  +
lea eax [ebp-40h] +
push eax  +
mov byte ptr [ebp-4] 10h +
call ??H@YG?AVCString@@ABV0@0@Z  +
push edi  +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
mov byte ptr [ebp-4] 11h +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 12h +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 11h +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 10h +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-44h] +
mov byte ptr [ebp-4] 0Fh +
call ??1CString@@QAE@XZ  +
mov byte ptr [ebp-4] 0Eh +
lea ecx [ebp-48h] +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-4Ch] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-50h] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-54h] +
mov byte ptr [ebp-4] 0Bh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-58h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-5Ch] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-60h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
mov ebx [ebp+8] +
xor edi edi +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
mov eax [ebx] +
push edi  +
push edi  +
lea ecx [ebp+10h] +
push ecx  +
push dword ptr [ebp+14h]  +
mov ecx ebx +
call dword ptr [eax+30h]  +
mov eax [ebx] +
push edi  +
push edi  +
lea ecx [ebp-20h] +
push ecx  +
mov ecx [ebp+14h] +
add ecx 1Ch +
push ecx  +
mov ecx ebx +
call dword ptr [eax+30h]  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_101216C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
cmp [ebp-30h] edi +
jnz loc_1011E2B  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
push 0Ah  +
lea ecx [ebp-4Ch] +
call ??0CPtrList@@QAE@H@Z  +
mov esi [ebp+8] +
mov eax [esi] +
push offset aCaptionAdapter  +
lea ecx [ebp-18h] +
push ecx  +
xor edi edi +
push offset aWin32_networ_0  +
mov ecx esi +
mov [ebp-4] edi +
mov [ebp-18h] edi +
call dword ptr [eax+4]  +
cmp eax edi +
mov [ebp-30h] eax +
jl loc_10123C4  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-18h] +
lea edx [ebp+8] +
mov [ebp+8] edi +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_101239B  +
mov ebx offset aServicenameIpa +
mov eax [ebp+0Ch] +
mov eax [eax] +
test eax eax +
jnz loc_101239B  +
mov eax [esi] +
push 1  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
push 23Bh  +
push offset aCaptionAdapter  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-1Ch] +
push edx  +
mov edi offset aIndex +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_101233C  +
cmp dword ptr [ebp-40h] 0 +
jnz loc_10122EA  +
mov eax [esi] +
and dword ptr [ebp-14h] 0 +
push ebx  +
lea ecx [ebp-14h] +
push ecx  +
push offset aWin32_networka  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jl loc_101233C  +
jmp loc_10122C4  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-28h] +
push edx  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_10122B9  +
mov eax [ebp-28h] +
cmp eax [ebp-1Ch] +
jnz loc_10122B9  +
mov eax [esi] +
push 23Ch  +
push ebx  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
push dword ptr [ebp-10h]  +
lea ecx [ebp-4Ch] +
call ?AddTail@CPtrList@@QAEPAU__POSITION@@PAX@Z  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
and dword ptr [ebp-10h] 0 +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101228A  +
mov ecx [ebp-14h] +
test ecx ecx +
jz loc_101233C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_101233C  +
mov eax [ebp-48h] +
mov [ebp-20h] eax +
test eax eax +
jz loc_101233C  +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp-4Ch] +
call sub_100CBAE  +
mov edi [eax] +
test edi edi +
jz loc_1012336  +
mov eax [edi] +
lea ecx [ebp-2Ch] +
push ecx  +
push offset aIndex  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1012336  +
mov eax [ebp-2Ch] +
cmp eax [ebp-1Ch] +
jnz loc_1012336  +
mov eax [esi] +
push 23Ch  +
push ebx  +
push edi  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
cmp dword ptr [ebp-20h] 0 +
jnz loc_10122F4  +
mov ecx [ebp+8] +
mov eax [ecx] +
push (offset dword_1002794+8)  +
lea edx [ebp-24h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-24h] +
cmp dword ptr [eax-8] 0 +
mov byte ptr [ebp-4] 1 +
jz loc_1012367  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call near ptr dword_1011D94+5  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1012374  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [ebp+8] 0 +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-18h] +
mov eax [ecx] +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1012215  +
mov ecx [ebp-18h] +
test ecx ecx +
jz loc_10123BE  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_10123BE  +
lea ecx [ebp-4Ch] +
call ?RemoveHead@CPtrList@@QAEPAXXZ  +
test eax eax +
jz loc_10123BE  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
cmp dword ptr [ebp-40h] 0 +
jnz loc_10123AA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-4Ch] +
call ??1CPtrList@@UAE@XZ  +
mov eax [ebp-30h] +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov esi [ebp+8] +
mov eax [esi] +
mov edi offset aNameStatusMsia +
push edi  +
lea ecx [ebp-18h] +
push ecx  +
xor ebx ebx +
push offset aWin32_serial_0  +
mov ecx esi +
mov [ebp-18h] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-28h] eax +
jl loc_1012582  +
mov [ebp+8] ebx +
jmp loc_1012551  +
mov eax [esi] +
push 1  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
push 23Dh  +
push edi  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-20h] +
push edx  +
push offset aDeviceid  +
mov [ebp-4] ebx +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1012510  +
mov eax [esi] +
push offset aBaudrateBitspe  +
lea ecx [ebp-14h] +
push ecx  +
push offset aWin32_serialpo  +
mov ecx esi +
mov [ebp-14h] ebx +
call dword ptr [eax+4]  +
test eax eax +
jl loc_1012510  +
mov [ebp-10h] ebx +
jmp loc_10124E3  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-1Ch] +
push edx  +
push offset aName  +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+8]  +
test eax eax +
jl loc_10124D8  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10124D8  +
mov eax [esi] +
push 23Eh  +
push offset aBaudrateBitspe  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call dword ptr [eax+28h]  +
lea ecx [ebp-1Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-14h] +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101248B  +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_1012503  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_1012510  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+8] +
mov eax [ecx] +
push (offset dword_1002794+8)  +
lea edx [ebp-24h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-24h] +
mov byte ptr [ebp-4] 2 +
cmp [eax-8] ebx +
jz loc_101253A  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call near ptr dword_1011D94+5  +
lea ecx [ebp-24h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-18h] +
mov eax [ecx] +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101241D  +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1012575  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1012582  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-28h] +
call __EH_epilog3  +
retn 14h  +
***
mov eax offset loc_101C132 +
call __EH_prolog3  +
mov edi [ebp+1Ch] +
test edi edi +
jnz loc_10125AF  +
mov eax 80004005h +
jmp loc_1012781  +
mov eax dword_1026640 +
mov esi offset dword_1026640 +
jmp loc_10125C5  +
cmp eax [ebp+0Ch] +
jz loc_10125DA  +
add esi 18h +
mov eax [esi] +
test eax eax +
jnz loc_10125BB  +
mov eax [ebp+0Ch] +
cmp [esi] eax +
jz loc_10125DA  +
cmp eax 14h +
jz loc_10125DA  +
cmp eax 15h +
jnz loc_10125A5  +
mov ebx [ebp+8] +
test ebx ebx +
jz loc_101264A  +
cmp dword ptr [edi] 0 +
jnz loc_101262A  +
push 24h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_1012602  +
mov ecx eax +
call sub_1010CE4  +
jmp loc_1012604  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [edi] eax +
test eax eax +
jz loc_101262A  +
push ebx  +
mov ecx eax +
call sub_1010DCA  +
test eax eax +
jge loc_101262A  +
mov ecx [edi] +
test ecx ecx +
jz loc_1012627  +
push 1  +
call sub_100CB88  +
and dword ptr [edi] 0 +
cmp dword ptr [ebp+0Ch] 14h +
mov edi [edi] +
mov [ebp-18h] edi +
jnz loc_1012664  +
push edi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ebx  +
call near ptr dword_10121B0+5  +
jmp loc_1012781  +
mov edi [edi] +
test edi edi +
jz loc_10125A5  +
push 1  +
mov ecx edi +
call sub_100CB88  +
xor eax eax +
jmp loc_1012781  +
cmp dword ptr [ebp+0Ch] 15h +
jnz loc_101267F  +
push edi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_10123E0  +
jmp loc_1012781  +
mov ecx [esi+4] +
mov edx [ebx] +
and dword ptr [ebp+1Ch] 0 +
lea edi [esi+8] +
mov eax [edi] +
push eax  +
lea eax [ebp+1Ch] +
push eax  +
push ecx  +
mov ecx ebx +
call dword ptr [edx+4]  +
mov [ebp+8] eax +
test eax eax +
jl loc_101277E  +
and dword ptr [ebp+0Ch] 0 +
jmp loc_1012759  +
push dword ptr [ebp+10h]  +
mov ecx [ebp+1Ch] +
mov eax [ecx] +
lea edx [ebp+0Ch] +
push edx  +
call dword ptr [eax+8]  +
mov [ebp+8] eax +
test eax eax +
jnz loc_1012768  +
push edi  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@ABV0@@Z  +
xor eax eax +
inc eax  +
cmp dword ptr [esi+14h] 0 +
mov [ebp-4] eax +
jz loc_10126E9  +
mov edx [ebx] +
push eax  +
push dword ptr [ebp+18h]  +
mov ecx ebx +
push dword ptr [ebp+14h]  +
call dword ptr [edx+2Ch]  +
push dword ptr [esi+10h]  +
mov eax [ebx] +
push dword ptr [ebp-14h]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_101273C  +
mov ecx [ebp+0Ch] +
mov eax [ecx] +
push (offset dword_1002794+8)  +
lea edx [ebp-10h] +
push edx  +
call dword ptr [eax+20h]  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
mov byte ptr [ebp-4] 2 +
jz loc_1012730  +
push dword ptr [ebp+14h]  +
push eax  +
push dword ptr [ebp-18h]  +
push ebx  +
call near ptr dword_1011D94+5  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_1012749  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [ebp+0Ch] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp+10h] +
mov eax [eax] +
test eax eax +
jz loc_10126AC  +
jmp loc_1012771  +
cmp eax 1 +
jnz loc_1012771  +
and dword ptr [ebp+8] 0 +
mov ecx [ebp+1Ch] +
test ecx ecx +
jz loc_101277E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 18h  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1012836  +
mov eax offset aSelectTimegene +
push ebx  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] offset aSelectTimege_0 +
mov dword ptr [ebp-14h] offset aSelectTimege_1 +
mov dword ptr [ebp-10h] offset aSelectTimege_2 +
mov dword ptr [ebp-0Ch] offset aSelectTimege_3 +
mov [ebp-8] edi +
xor ebx ebx +
mov edx [esi] +
lea ecx [ebp-4] +
push ecx  +
push eax  +
mov ecx esi +
mov [ebp-4] edi +
call dword ptr [edx+8]  +
test eax eax +
jl loc_101282C  +
mov [ebp+8] edi +
jmp loc_1012801  +
mov eax [esi] +
push 253h  +
push offset aTimegeneratedS  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-4] +
mov eax [ecx] +
push edi  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_10127E7  +
mov ecx [ebp+8] +
cmp ecx edi +
jz loc_101281F  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-4] +
cmp ecx edi +
jz loc_101282C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp+ebx*4-18h] +
inc ebx  +
cmp eax edi +
jnz loc_10127CF  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 18h  +
***
push esp  +
mov eax offset loc_101C290 +
call __EH_prolog3  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jnz loc_101285F  +
xor eax eax +
jmp loc_1012C81  +
lea ecx [ebp-3Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov [ebp-4] ebx +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 6 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 7 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 8 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 9 +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
push offset aNameExecutable  +
lea ecx [ebp-24h] +
push ecx  +
push offset aWin32_process  +
mov ecx esi +
mov byte ptr [ebp-4] 0Ah +
mov [ebp-24h] ebx +
call dword ptr [eax+4]  +
cmp eax ebx +
mov [ebp-60h] eax +
jl loc_1012BFB  +
mov ecx [ebp-24h] +
push ebx  +
lea edx [ebp+8] +
mov [ebp+8] ebx +
mov [ebp-10h] ebx +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1012BE1  +
mov edi [ebp+14h] +
lea ecx [ebp-3Ch] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-20h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-38h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-34h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-30h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-2Ch] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-28h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-1Ch] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-18h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebp-14h] +
call ?Empty@CString@@QAEXXZ  +
mov ecx [ebp+8] +
push ebx  +
lea edx [ebp-3Ch] +
push edx  +
push 6Ch  +
push offset asc_1006F2C  +
mov [ebp-58h] ebx +
mov [ebp-5Ch] ebx +
mov [ebp-54h] ebx +
mov [ebp-50h] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-48h] ebx +
mov [ebp-44h] ebx +
mov eax [ecx] +
push offset aName  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-20h] +
push edx  +
push 6Ch  +
push offset asc_1006F2C  +
push offset aExecutablepath  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-44h] +
push edx  +
lea edx [ebp-38h] +
push edx  +
push 78h  +
push offset aD  +
push offset aProcessid  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-48h] +
push edx  +
lea edx [ebp-34h] +
push edx  +
push 64h  +
push offset aD  +
push offset aPriority  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-4Ch] +
push edx  +
lea edx [ebp-30h] +
push edx  +
push 64h  +
push offset aD  +
push offset aMinimumworking  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-50h] +
push edx  +
lea edx [ebp-2Ch] +
push edx  +
push 64h  +
push offset aD  +
push offset aMaximumworking  +
call dword ptr [eax+24h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-54h] +
push edx  +
lea edx [ebp-28h] +
push edx  +
push 74h  +
push offset aT  +
push offset aCreationdate  +
call dword ptr [eax+24h]  +
push dword ptr [ebp-20h]  +
lea eax [ebp-40h] +
push offset aCim_datafile_1  +
push eax  +
call ?Format@CString@@QAAXPBGZZ  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp-40h]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1012ACF  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-5Ch] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 74h  +
push offset aT  +
push offset aCreationdate  +
call dword ptr [eax+24h]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
lea edx [ebp-58h] +
push edx  +
lea edx [ebp-18h] +
push edx  +
push 7Ah  +
push offset aZ  +
push offset aFilesize  +
call dword ptr [eax+24h]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-14h] +
push edx  +
push 73h  +
push offset aS_0  +
push offset aVersion  +
call dword ptr [eax+24h]  +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_1012ACA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp-10h] ebx +
jmp loc_1012B08  +
push 80043001h  +
lea eax [ebp+14h] +
push eax  +
call sub_100A3D4  +
push eax  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 0Bh +
call ??4CString@@QAEABV0@ABV0@@Z  +
push eax  +
lea ecx [ebp-18h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push eax  +
lea ecx [ebp-14h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp+14h] +
mov byte ptr [ebp-4] 0Ah +
call ??1CString@@QAE@XZ  +
mov eax [esi] +
push ebx  +
push ebx  +
lea ecx [ebp-3Ch] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov edx [esi] +
push ebx  +
push ebx  +
lea eax [ebp-20h] +
push eax  +
lea eax [edi+1Ch] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-44h]  +
lea eax [ebp-38h] +
push eax  +
lea eax [edi+38h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-48h]  +
lea eax [ebp-34h] +
push eax  +
lea eax [edi+54h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-4Ch]  +
lea eax [ebp-30h] +
push eax  +
lea eax [edi+70h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-50h]  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [edi+8Ch] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-54h]  +
lea eax [ebp-28h] +
push eax  +
lea eax [edi+0A8h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push ebx  +
lea eax [ebp-14h] +
push eax  +
lea eax [edi+0C4h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-58h]  +
lea eax [ebp-18h] +
push eax  +
lea eax [edi+0E0h] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov edx [esi] +
push ebx  +
push dword ptr [ebp-5Ch]  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [edi+0FCh] +
push eax  +
mov ecx esi +
call dword ptr [edx+30h]  +
mov ecx [ebp-24h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_1012923  +
mov ecx [ebp+8] +
cmp ecx ebx +
jz loc_1012BEE  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-24h] +
cmp ecx ebx +
jz loc_1012BFB  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-3Ch] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-60h] +
call __EH_epilog3  +
retn 18h  +
***
mov eax offset loc_101C300 +
call __EH_prolog3  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jnz loc_1012CAA  +
xor eax eax +
jmp loc_1012F80  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push 0Ah  +
lea ecx [ebp-58h] +
mov [ebp-4] edi +
call ??0CStringList@@QAE@H@Z  +
mov eax [esi] +
push edi  +
lea ecx [ebp-18h] +
push ecx  +
push offset aCim_processexe  +
mov ecx esi +
mov byte ptr [ebp-4] 1 +
mov [ebp-18h] edi +
call dword ptr [eax+4]  +
cmp eax edi +
mov ebx [ebp+10h] +
mov [ebp-3Ch] eax +
jl loc_1012D54  +
mov eax [ebx] +
mov [ebp-14h] edi +
test eax eax +
jnz loc_1012D47  +
mov ecx [ebp-18h] +
mov eax [ecx] +
push edi  +
lea edx [ebp-14h] +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1012D3A  +
mov ecx [ebp-14h] +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
push offset aAntecedent  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1012D34  +
lea ecx [ebp-10h] +
call ?MakeLower@CString@@QAEXXZ  +
push edi  +
push dword ptr [ebp-10h]  +
lea ecx [ebp-58h] +
call ?Find@CStringList@@QBEPAU__POSITION@@PBGPAU2@@Z  +
test eax eax +
jnz loc_1012D34  +
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-58h] +
call MFC42u_6565  +
mov eax [ebx] +
test eax eax +
jz loc_1012CEA  +
mov ecx [ebp-14h] +
cmp ecx edi +
jz loc_1012D47  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-18h] +
cmp ecx edi +
jz loc_1012D54  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
mov eax [ebx] +
mov byte ptr [ebp-4] 2 +
test eax eax +
jnz loc_1012F59  +
mov edi [ebp+14h] +
mov ebx offset dword_10016F0 +
cmp dword ptr [ebp-4Ch] 0 +
jz loc_1012F59  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-58h] +
call ?RemoveHead@CStringList@@QAE?AVCString@@XZ  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 3 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push offset asc_100259C  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1012DE2  +
mov ecx [ebp+8] +
mov ecx [ecx-8] +
sub ecx eax +
dec ecx  +
push ecx  +
lea eax [ebp-34h] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
mov eax [esi] +
lea ecx [ebp-1Ch] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1012E22  +
mov eax [esi] +
push 246h  +
push offset aFilenameVersio  +
push dword ptr [ebp-1Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push edi  +
call dword ptr [eax+28h]  +
mov ecx [ebp-1Ch] +
test ecx ecx +
jz loc_1012F4C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_1012F4C  +
push offset asc_100701C  +
lea ecx [ebp+8] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1012E63  +
mov ecx [ebp+8] +
mov ecx [ecx-8] +
sub ecx eax +
dec ecx  +
push ecx  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp+8] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 5 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push offset asc_100258C  +
push offset asc_1002590  +
lea eax [ebp+8] +
push eax  +
call sub_1011C68  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp+8] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+30h]  +
push ebx  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp-20h] +
push ecx  +
lea ecx [edi+1Ch] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 6 +
call dword ptr [eax+30h]  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push ebx  +
lea ecx [ebp-24h] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp-24h] +
push ecx  +
lea ecx [edi+38h] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 7 +
call dword ptr [eax+30h]  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push ebx  +
lea ecx [ebp-28h] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp-28h] +
push ecx  +
lea ecx [edi+54h] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 8 +
call dword ptr [eax+30h]  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push ebx  +
lea ecx [ebp-2Ch] +
call ??0CString@@QAE@PBG@Z  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [edi+70h] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp-4] 9 +
call dword ptr [eax+30h]  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
mov eax [esi] +
push 0  +
push 0  +
lea ecx [ebp+8] +
push ecx  +
lea ecx [edi+8Ch] +
push ecx  +
mov ecx esi +
call dword ptr [eax+30h]  +
mov eax [ebp+10h] +
mov eax [eax] +
test eax eax +
jz loc_1012D72  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-58h] +
mov byte ptr [ebp-4] 0 +
call ??1CStringList@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax [ebp-3Ch] +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jnz loc_1012FA9  +
xor eax eax +
jmp loc_101307C  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
push offset aCaptionLocal_0  +
lea ecx [ebp-10h] +
push ecx  +
push offset aWin32_classicc  +
mov ecx esi +
mov [ebp-4] edi +
mov [ebp-10h] edi +
call dword ptr [eax+4]  +
mov ebx eax +
cmp ebx edi +
jl loc_101306E  +
mov [ebp+8] edi +
jmp loc_1013043  +
or dword ptr [ebp-1Ch] 0FFFFFFFFh +
lea edx [ebp-18h] +
push edx  +
mov [ebp-18h] edi +
mov eax [ecx] +
push offset aInsertable  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-1Ch] +
push edx  +
push offset aControl  +
call dword ptr [eax+0Ch]  +
cmp dword ptr [ebp-18h] 0FFFFFFFFh +
jnz loc_1013043  +
cmp [ebp-1Ch] edi +
jnz loc_1013043  +
mov ecx [ebp+8] +
mov eax [ecx] +
lea edx [ebp-14h] +
push edx  +
push offset aCaption  +
call dword ptr [eax+8]  +
test eax eax +
jl loc_1013043  +
mov eax [ebp-14h] +
cmp [eax-8] edi +
jz loc_1013043  +
mov eax [esi] +
push 247h  +
push offset aCaptionLocalse  +
push dword ptr [ebp+8]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
call dword ptr [eax+28h]  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push edi  +
lea edx [ebp+8] +
push edx  +
call dword ptr [eax+8]  +
mov ecx [ebp+8] +
test eax eax +
jz loc_1012FDB  +
cmp ecx edi +
jz loc_1013061  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-10h] +
cmp ecx edi +
jz loc_101306E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx ax [ebp+arg_0] +
movzx eax ax +
push esi  +
push eax  +
mov esi ecx +
call ??YCString@@QAEABV0@G@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
push offset unk_1026820  +
lea ecx [ebp-10h] +
xor edi edi +
call ??0CString@@QAE@ABV0@@Z  +
push 5Ch  +
lea ecx [ebp-10h] +
mov [ebp-4] edi +
call sub_1013089  +
mov eax [ebp+0Ch] +
sub eax 11h +
jz loc_10130E1  +
dec eax  +
jz loc_1013114  +
dec eax  +
jmp loc_1013114  +
mov esi [ebp+10h] +
push dword ptr [esi]  +
xor edi edi +
lea ecx [ebp-10h] +
inc edi  +
call ??YCString@@QAEABV0@PBG@Z  +
mov eax [ebp-10h] +
mov eax [eax-8] +
push 0FFFFFFFFh  +
push eax  +
lea ecx [ebp-10h] +
call ?GetBuffer@CString@@QAEPAGH@Z  +
push eax  +
push 104h  +
add esi 12h +
push esi  +
call wcsncpy_s  +
add esp 10h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax edi +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov ecx offset unk_1026820 +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebp+arg_0] +
mov eax [eax] +
push 0  +
push offset MsgHandler  +
push 0  +
push eax  +
call ds:SetupIterateCabinetW  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+10h] +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
lea ecx [ebp-270h] +
mov [ebp-278h] edi +
mov [ebp-274h] eax +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-268h] +
call ??0CString@@QAE@XZ  +
push esi  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
push off_1024374  +
lea ecx [ebp-264h] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push 1  +
lea eax [ebp-26Ch] +
push eax  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 2 +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [esi]  +
mov ecx eax +
call sub_1008914  +
test eax eax +
lea ecx [ebp-26Ch] +
setnz bl  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_101323A  +
push off_1024374  +
lea ecx [ebp-264h] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 3 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
push edi  +
lea eax [ebp-268h] +
push eax  +
lea eax [ebp-264h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-270h] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
mov esi ds:FindFirstFileW +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-270h]  +
call esi  +
mov ebx ds:FindNextFileW +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10132FC  +
lea eax [ebp-234h] +
push eax  +
lea ecx [ebp-26Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-268h] +
push eax  +
lea eax [ebp-264h] +
push eax  +
mov byte ptr [ebp-4] 5 +
call ??H@YG?AVCString@@ABV0@0@Z  +
mov ecx [ebp-274h] +
push eax  +
mov byte ptr [ebp-4] 6 +
call MFC42u_6563  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-260h] +
push eax  +
push edi  +
call ebx  +
test eax eax +
jnz loc_101328F  +
push edi  +
call ds:FindClose  +
push offset asc_1002518  +
lea ecx [ebp-26Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-268h] +
push eax  +
lea eax [ebp-264h] +
push eax  +
mov byte ptr [ebp-4] 7 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-270h] +
mov byte ptr [ebp-4] 8 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-270h]  +
call esi  +
mov esi eax +
or edi 0FFFFFFFFh +
cmp esi edi +
jz loc_1013468  +
test byte ptr [ebp-260h] 10h +
jz loc_101344F  +
mov ecx offset a__1 +
lea eax [ebp-234h] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10133AC  +
test dx dx +
jz loc_10133A8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10133AC  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1013386  +
xor eax eax +
jmp loc_10133B0  +
sbb eax eax +
sbb eax edi +
test eax eax +
jz loc_101344F  +
mov ecx offset a__ +
lea eax [ebp-234h] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10133E9  +
test dx dx +
jz loc_10133E5  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10133E9  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10133C3  +
xor eax eax +
jmp loc_10133ED  +
sbb eax eax +
sbb eax edi +
test eax eax +
jz loc_101344F  +
lea eax [ebp-234h] +
push eax  +
lea ecx [ebp-26Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-268h] +
push eax  +
lea eax [ebp-264h] +
push eax  +
mov byte ptr [ebp-4] 9 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [ebp-274h]  +
mov byte ptr [ebp-4] 0Ah +
push eax  +
push dword ptr [ebp-278h]  +
call sub_1013165  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-260h] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jnz loc_101336E  +
push esi  +
call ds:FindClose  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-270h] +
mov [ebp-4] edi +
call ??1CString@@QAE@XZ  +
call sub_1019FA8  +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
mov [ebp-27Ch] ecx +
push eax  +
lea ecx [ebp-264h] +
call ??0CString@@QAE@ABV0@@Z  +
push off_1024374  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-26Ch] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push 1  +
lea eax [ebp-268h] +
push eax  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 1 +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [esi]  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-268h] +
inc bl  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1013553  +
mov eax [ebp-264h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp-26Ch] +
push eax  +
lea ecx [ebp-264h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-264h] +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
push offset a_  +
lea ecx [ebp-26Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-264h] +
push eax  +
lea eax [ebp-284h] +
push eax  +
mov byte ptr [ebp-4] 3 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-26Ch] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-270h] +
call ??0CString@@QAE@XZ  +
mov esi ds:FindFirstFileW +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-284h]  +
xor ebx ebx +
mov byte ptr [ebp-4] 6 +
inc ebx  +
call esi  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1013696  +
test ebx ebx +
jz loc_1013696  +
test byte ptr [ebp-260h] 10h +
jnz loc_1013681  +
push off_1024374  +
lea ecx [ebp-278h] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-264h] +
push eax  +
lea eax [ebp-274h] +
push eax  +
mov byte ptr [ebp-4] 7 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-234h] +
push ecx  +
push eax  +
lea eax [ebp-268h] +
push eax  +
mov byte ptr [ebp-4] 8 +
call ??H@YG?AVCString@@ABV0@PBG@Z  +
push eax  +
lea ecx [ebp-270h] +
mov byte ptr [ebp-4] 9 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-274h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-278h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-270h]  +
mov ecx [ebp-27Ch] +
call sub_10092D7  +
test eax eax +
jz loc_1013681  +
push 80h  +
push dword ptr [ebp-270h]  +
call ds:SetFileAttributesW  +
push dword ptr [ebp-270h]  +
call ds:DeleteFileW  +
lea eax [ebp-260h] +
push eax  +
push edi  +
call ds:FindNextFileW  +
mov ebx eax +
jmp loc_10135BC  +
mov ebx ds:FindClose +
push edi  +
call ebx  +
push offset asc_10071E0  +
lea ecx [ebp-27Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-264h] +
push eax  +
lea eax [ebp-280h] +
push eax  +
mov byte ptr [ebp-4] 0Ah +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-27Ch] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-280h]  +
call esi  +
mov [ebp-268h] eax +
cmp eax 0FFFFFFFFh +
jz loc_101385F  +
test byte ptr [ebp-260h] 10h +
jz loc_101383C  +
mov ecx offset a__1 +
lea eax [ebp-234h] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1013732  +
test dx dx +
jz loc_101372E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1013732  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_101370C  +
xor eax eax +
jmp loc_1013737  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_101383C  +
mov ecx offset a__ +
lea eax [ebp-234h] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1013770  +
test dx dx +
jz loc_101376C  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1013770  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_101374A  +
xor eax eax +
jmp loc_1013775  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_101383C  +
push offset byte_1002E05  +
lea ecx [ebp-28Ch] +
call ??0CString@@QAE@PBD@Z  +
mov esi eax +
lea eax [ebp-234h] +
push eax  +
lea ecx [ebp-290h] +
mov byte ptr [ebp-4] 0Dh +
call ??0CString@@QAE@PBG@Z  +
mov edi eax +
push off_1024374  +
lea ecx [ebp-288h] +
mov byte ptr [ebp-4] 0Eh +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-264h] +
push eax  +
lea eax [ebp-274h] +
push eax  +
mov byte ptr [ebp-4] 0Fh +
call ??H@YG?AVCString@@ABV0@0@Z  +
push edi  +
push eax  +
lea eax [ebp-278h] +
push eax  +
mov byte ptr [ebp-4] 10h +
call ??H@YG?AVCString@@ABV0@0@Z  +
push esi  +
push eax  +
mov byte ptr [ebp-4] 11h +
call sub_1013492  +
lea ecx [ebp-278h] +
mov byte ptr [ebp-4] 10h +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-274h] +
mov byte ptr [ebp-4] 0Fh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-288h] +
mov byte ptr [ebp-4] 0Eh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-290h] +
mov byte ptr [ebp-4] 0Dh +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-28Ch] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea eax [ebp-260h] +
push eax  +
push dword ptr [ebp-268h]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_10136F4  +
push dword ptr [ebp-268h]  +
call ebx  +
push dword ptr [ebp-264h]  +
call ds:RemoveDirectoryW  +
lea ecx [ebp-280h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-270h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-284h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-264h] +
call ??1CString@@QAE@XZ  +
call sub_1019FA8  +
retn 8  +
***
call __EH_prolog3  +
push 0Ah  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-4] 1 +
call ??0CStringList@@QAE@H@Z  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_1013165  +
xor esi esi +
cmp [ebp-24h] esi +
jz loc_10138EE  +
inc esi  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call ??1CStringList@@UAE@XZ  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_GS  +
mov edi [ebp+0Ch] +
mov esi [ebp+8] +
lea ecx [ebp-528h] +
mov [ebp-550h] edi +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-544h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-538h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
mov ecx edi +
mov byte ptr [ebp-4] 2 +
call ?Empty@CString@@QAEXXZ  +
push esi  +
lea ecx [ebp-538h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push off_1024374  +
lea ecx [ebp-52Ch] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push 1  +
lea eax [ebp-530h] +
push eax  +
lea ecx [ebp-538h] +
mov byte ptr [ebp-4] 3 +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [esi]  +
mov ecx eax +
call sub_1008914  +
test eax eax +
lea ecx [ebp-530h] +
setnz bl  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-52Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1013A03  +
push off_1024374  +
lea ecx [ebp-52Ch] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea ecx [ebp-538h] +
mov byte ptr [ebp-4] 4 +
call ??YCString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-52Ch] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push 66h  +
lea ecx [ebp-528h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push offset a__0  +
lea ecx [ebp-530h] +
call ??0CString@@QAE@PBD@Z  +
lea ecx [ebp-528h] +
push ecx  +
push eax  +
lea eax [ebp-52Ch] +
push eax  +
mov byte ptr [ebp-4] 5 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-528h] +
mov byte ptr [ebp-4] 6 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-52Ch] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-530h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
push 4B5h  +
lea ecx [ebp-544h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-54Ch] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
push dword ptr [ebp-544h]  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1013AF7  +
lea eax [ebp-52Ch] +
push eax  +
lea eax [ebp-524h] +
push eax  +
lea eax [ebp-530h] +
push eax  +
push esi  +
push lpValueName  +
mov dword ptr [ebp-52Ch] 104h +
push dword ptr [ebp-54Ch]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1013AEB  +
cmp dword ptr [ebp-530h] 1 +
jnz loc_1013AEB  +
lea eax [ebp-524h] +
push eax  +
lea ecx [ebp-528h] +
call ??4CString@@QAEABV0@PBD@Z  +
push dword ptr [ebp-54Ch]  +
call ds:RegCloseKey  +
lea ecx [ebp-534h] +
call ??0CString@@QAE@XZ  +
push 0Ah  +
lea ecx [ebp-56Ch] +
mov byte ptr [ebp-4] 7 +
call ??0CStringList@@QAE@H@Z  +
mov byte ptr [ebp-4] 8 +
jmp loc_1013C4B  +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_1013B42  +
lea eax [ebp-528h] +
push eax  +
lea ecx [ebp-534h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_1013B81  +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
push eax  +
lea eax [ebp-52Ch] +
push eax  +
lea ecx [ebp-528h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-534h] +
mov byte ptr [ebp-4] 9 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-52Ch] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-56Ch] +
call ?RemoveAll@CStringList@@QAEXXZ  +
lea eax [ebp-56Ch] +
push eax  +
lea eax [ebp-538h] +
push eax  +
lea eax [ebp-534h] +
push eax  +
call sub_1013165  +
mov eax [ebp-568h] +
mov [ebp-530h] eax +
cmp eax esi +
jnz loc_1013CAE  +
mov eax [ebp-528h] +
mov eax [eax-8] +
mov ecx [ebp-534h] +
sub eax [ecx-8] +
lea ecx [ebp-528h] +
push eax  +
lea eax [ebp-548h] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-528h] +
mov byte ptr [ebp-4] 0Ah +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-548h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
test eax eax +
jnz loc_1013C4B  +
mov eax [ebp-528h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp-540h] +
push eax  +
lea ecx [ebp-528h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-528h] +
mov byte ptr [ebp-4] 0Bh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-540h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-528h] +
cmp [eax-8] esi +
jnz loc_1013B1C  +
push offset a_xml_0  +
lea ecx [ebp-528h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp-528h] +
cmp [eax-8] esi +
jz loc_1013CCB  +
mov ebx ds:ReadFile +
mov edi ds:CloseHandle +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_1013D20  +
lea eax [ebp-528h] +
push eax  +
lea ecx [ebp-534h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_1013D5F  +
lea eax [ebp-530h] +
push eax  +
lea ecx [ebp-56Ch] +
call sub_100CBAE  +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
xor esi esi +
inc esi  +
lea ecx [ebp-56Ch] +
mov byte ptr [ebp-4] 7 +
call ??1CStringList@@UAE@XZ  +
lea ecx [ebp-534h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-538h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-544h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-528h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call sub_1019FA8  +
retn 8  +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
push eax  +
lea eax [ebp-540h] +
push eax  +
lea ecx [ebp-528h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-534h] +
mov byte ptr [ebp-4] 0Ch +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-540h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-56Ch] +
call ?RemoveAll@CStringList@@QAEXXZ  +
lea eax [ebp-56Ch] +
push eax  +
lea eax [ebp-538h] +
push eax  +
lea eax [ebp-534h] +
push eax  +
call sub_1013165  +
mov eax [ebp-568h] +
mov [ebp-530h] eax +
test eax eax +
jz loc_1013EDB  +
lea eax [ebp-530h] +
push eax  +
lea ecx [ebp-56Ch] +
call sub_100CBAE  +
mov esi [ebp-550h] +
push eax  +
mov ecx esi +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [esi] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 1  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1013ECE  +
push 0  +
lea eax [ebp-53Ch] +
push eax  +
push 1  +
lea eax [ebp-420h] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jz loc_1013F7E  +
cmp word ptr [ebp-420h] 3Ch +
jnz loc_1013E56  +
push 0  +
lea eax [ebp-53Ch] +
push eax  +
push 12h  +
lea eax [ebp-420h] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jz loc_1013F7E  +
lea eax [ebp-420h] +
push offset aMachineid  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013F88  +
push 1  +
push 0  +
push 0FFFFFFF0h  +
push esi  +
call ds:SetFilePointer  +
cmp dword ptr [ebp-53Ch] 12h +
jz loc_1013E05  +
jmp loc_1013ECB  +
push 0  +
lea eax [ebp-53Ch] +
push eax  +
push 1  +
lea eax [ebp-218h] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jz loc_1013F7E  +
push 0  +
lea eax [ebp-53Ch] +
push eax  +
push 12h  +
lea eax [ebp-218h] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jz loc_1013F7E  +
xor eax eax +
mov [ebp-1F4h] ax +
lea eax [ebp-218h] +
push offset aMachineid  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1013F88  +
push 1  +
push 0  +
push 0FFFFFFF0h  +
push esi  +
call ds:SetFilePointer  +
cmp dword ptr [ebp-53Ch] 12h +
jz loc_1013E73  +
push esi  +
call edi  +
cmp dword ptr [ebp-530h] 0 +
jnz loc_1013D98  +
mov eax [ebp-528h] +
mov eax [eax-8] +
mov ecx [ebp-534h] +
sub eax [ecx-8] +
lea ecx [ebp-528h] +
push eax  +
lea eax [ebp-548h] +
push eax  +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-528h] +
mov byte ptr [ebp-4] 0Dh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-548h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
push 7Ch  +
lea ecx [ebp-528h] +
call ?Find@CString@@QBEHG@Z  +
test eax eax +
jnz loc_1013F6C  +
mov eax [ebp-528h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp-52Ch] +
push eax  +
lea ecx [ebp-528h] +
call ?Right@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-528h] +
mov byte ptr [ebp-4] 0Eh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-52Ch] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-528h] +
cmp dword ptr [eax-8] 0 +
jnz loc_1013C81  +
jmp loc_1013F81  +
push esi  +
call edi  +
xor esi esi +
jmp loc_1013CCB  +
push esi  +
call edi  +
jmp loc_1013CC8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+10h] +
mov edi [ebp+8] +
lea ecx [ebp-22Ch] +
mov [ebp-230h] eax +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-21Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-220h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
lea eax [ebp-218h] +
push eax  +
mov esi 104h +
push esi  +
mov byte ptr [ebp-4] 2 +
call ds:GetTempPathW  +
cmp eax esi +
jbe loc_1014037  +
push offset dword_10016F0  +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
lea ecx [ebp-220h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call ??1CString@@QAE@XZ  +
xor eax eax +
call sub_1019FA8  +
retn 0Ch  +
push 4B6h  +
lea ecx [ebp-220h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-21Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
push off_1024374  +
lea ecx [ebp-224h] +
call ??0CString@@QAE@PBG@Z  +
mov esi eax +
push 1  +
lea eax [ebp-228h] +
push eax  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 3 +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [esi]  +
mov ecx eax +
call sub_1008914  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-228h] +
inc bl  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-224h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_10140E5  +
lea eax [ebp-220h] +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-224h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 4 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-224h] +
jmp loc_101415A  +
push off_1024374  +
lea ecx [ebp-234h] +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
mov byte ptr [ebp-4] 5 +
call ??H@YG?AVCString@@ABV0@0@Z  +
lea ecx [ebp-220h] +
push ecx  +
push eax  +
lea eax [ebp-224h] +
push eax  +
mov byte ptr [ebp-4] 6 +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 7 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-224h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-234h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
xor esi esi +
cmp [ebp+0Ch] esi +
jz loc_101417C  +
push dword ptr [ebp-230h]  +
lea eax [ebp-21Ch] +
push eax  +
call sub_1013492  +
push esi  +
push dword ptr [ebp-21Ch]  +
lea eax [ebp-218h] +
push eax  +
call ds:CreateDirectoryExW  +
test eax eax +
jnz loc_10141E1  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_10141E1  +
push offset byte_1002E05  +
mov ecx edi +
call ??4CString@@QAEABV0@PBD@Z  +
lea ecx [ebp-220h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_101402F  +
lea eax [ebp-21Ch] +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
xor esi esi +
inc esi  +
jmp loc_10141AD  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+16Ch] +
push eax  +
call ds:SetCurrentDirectoryW  +
mov ecx [esi+1Ch] +
test ecx ecx +
jz loc_1014225  +
cmp [esi+20h] ecx +
jnz loc_101421B  +
and dword ptr [esi+20h] 0 +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+1Ch] 0 +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_1014236  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+20h] 0 +
xor eax eax +
pop esi  +
retn 10h  +
***
push 1101h  +
push dword ptr [ecx+10h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax [ebp+arg_0] +
mov [ebp+lParam] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_18] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1132h  +
push dword ptr [ecx+10h]  +
mov [ebp+var_3C] 5 +
call ds:SendMessageW  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov edi ecx +
push 110Ah  +
push dword ptr [edi+10h]  +
call esi  +
test eax eax +
jz loc_10142E7  +
mov [ebp+var_24] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push dword ptr [edi+10h]  +
mov [ebp+lParam] 4 +
call esi  +
test eax eax +
jz loc_10142E7  +
mov eax [ebp+var_4] +
jmp loc_10142E9  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+arg_4] +
mov edx eax +
neg edx  +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 4 +
or edx 1 +
mov [ebp+lParam] edx +
mov edx [ebp+arg_0] +
mov [ebp+var_38] edx +
mov edx [ebp+arg_8] +
mov [ebp+var_34] eax +
test eax eax +
lea eax [ebp+lParam] +
mov [ebp+var_28] edx +
mov edx [ebp+arg_C] +
push eax  +
mov [ebp+var_1C] edx +
push 0  +
jnz loc_1014335  +
push 104Dh  +
jmp loc_101433A  +
push 104Ch  +
push dword ptr [ecx+14h]  +
call ds:SendMessageW  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+arg_4] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov [ebp+lParam] 26h +
mov [ebp+var_10] eax +
test eax eax +
jnz loc_101437E  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1060h  +
jmp loc_1014388  +
lea edx [ebp+lParam] +
push edx  +
push eax  +
push 1061h  +
push dword ptr [ecx+14h]  +
call ds:SendMessageW  +
leave   +
retn 0Ch  +
***
push 1009h  +
push dword ptr [ecx+14h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push edi  +
mov edi ecx +
mov eax [edi+168h] +
cmp eax 1 +
jle loc_10143E0  +
push esi  +
lea esi [eax-1] +
jmp loc_10143DA  +
push 0  +
push esi  +
push 101Ch  +
push dword ptr [edi+14h]  +
call ds:SendMessageW  +
dec esi  +
cmp esi 1 +
jge loc_10143C8  +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call sub_10142A0  +
mov esi eax +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax ecx +
jz loc_10144A5  +
cmp esi ecx +
jz loc_10144A5  +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] ecx +
cmp [edi+58h] ecx +
jz loc_101441E  +
mov ebx [eax+10h] +
jmp loc_101442D  +
mov eax [eax+10h] +
cmp eax [edi+168h] +
jge loc_10144A5  +
mov ebx [edi+eax*4+68h] +
mov eax [esi] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
push ecx  +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10144A5  +
cmp [ebp+arg_4] 0 +
jz loc_10144A5  +
cmp ebx [esi+18h] +
jnz loc_101445B  +
xor eax eax +
cmp [esi+20h] eax +
setz al  +
mov [esi+20h] eax +
jmp loc_1014462  +
mov dword ptr [esi+20h] 1 +
mov eax [ebp+var_4] +
mov [esi+1Ch] eax +
mov eax [esi] +
mov [esi+18h] ebx +
mov ecx esi +
xor ebx ebx +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1014486  +
mov ebx [edi+24h] +
test ebx ebx +
jz loc_1014486  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
push offset loc_100896D  +
push esi  +
push 1030h  +
push dword ptr [edi+14h]  +
call ds:SendMessageW  +
test ebx ebx +
jz loc_10144A5  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10144DA  +
test byte ptr [eax+0Ch] 1 +
jz loc_10144DA  +
mov eax [eax+5Ch] +
test eax eax +
jz loc_10144DA  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+4]  +
test eax eax +
jnz loc_10144DA  +
inc eax  +
jmp loc_10144DC  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0CCh  +
push dword ptr [esi+4]  +
call ds:IsDlgButtonChecked  +
cmp eax 1 +
jnz loc_101450D  +
push 0  +
push 0CDh  +
push dword ptr [esi+4]  +
call ds:CheckDlgButton  +
xor eax eax +
pop esi  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0CDh  +
push dword ptr [esi+4]  +
call ds:IsDlgButtonChecked  +
cmp eax 1 +
jnz loc_1014540  +
push 0  +
push 0CCh  +
push dword ptr [esi+4]  +
call ds:CheckDlgButton  +
xor eax eax +
pop esi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_10142A0  +
mov edi ds:SendMessageW +
xor ebx ebx +
push ebx  +
push ebx  +
push 1004h  +
push dword ptr [esi+14h]  +
call edi  +
cmp eax ebx +
mov [ebp+var_8] eax +
mov [ebp+wParam] ebx +
jle loc_10145A0  +
push 2  +
pop ebx  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_34] ebx +
push 102Bh  +
push dword ptr [esi+14h]  +
mov [ebp+var_38] ebx +
call edi  +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_8] +
jl loc_101457E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ecx+8] +
mov eax ecx +
lea edx [eax+2] +
push esi  +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10145B9  +
sub eax edx +
sar eax 1 +
pop esi  +
jnz loc_10145D8  +
push [ebp+nSize]  +
push [ebp+lpBuffer]  +
call ds:GetComputerNameW  +
jmp locret_10145EB  +
mov eax [ebp+nSize] +
push 0FFFFFFFFh  +
push ecx  +
push dword ptr [eax]  +
push [ebp+lpBuffer]  +
call wcsncpy_s  +
add esp 10h +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
test eax eax +
jz loc_1014674  +
cmp dword ptr [eax+18h] 0 +
jz loc_1014674  +
mov eax [esi+3D4h] +
test eax eax +
jz loc_1014622  +
push eax  +
call ??3@YAXPAX@Z  +
and dword ptr [esi+3D4h] 0 +
pop ecx  +
push 14h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
test ecx ecx +
jz loc_101463B  +
xor eax eax +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
stos   +
jmp loc_101463D  +
xor ecx ecx +
mov [esi+3D4h] ecx +
test ecx ecx +
jz loc_1014674  +
push dword ptr [esi+4]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100856A  +
push dword ptr [esi+3D4h]  +
mov edi eax +
call ??3@YAXPAX@Z  +
and dword ptr [esi+3D4h] 0 +
xor eax eax +
cmp edi 2 +
pop ecx  +
setnz al  +
jmp loc_1014676  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+ppv] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100729C  +
push 1  +
push 0  +
push offset stru_100728C  +
call ds:CoCreateInstance  +
test eax eax +
jl loc_10146CB  +
push esi  +
push offset aMshelpWindows?  +
call ds:SysAllocString  +
mov esi eax +
test esi esi +
jz loc_10146CA  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push esi  +
call ds:SysFreeString  +
pop esi  +
mov eax [ebp+ppv] +
test eax eax +
jz locret_10146D8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
neg eax  +
push eax  +
mov eax [ebp+arg_0] +
neg eax  +
push eax  +
push ecx  +
call ds:InflateRect  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:CreateFontIndirectW  +
push eax  +
mov ecx esi +
call ?Attach@CGdiObject@@QAEHPAX@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1014732  +
mov eax [eax+4] +
push eax  +
push dword ptr [ecx+4]  +
call ?SelectGdiObject@CDC@@KGPAVCGdiObject@@PAUHDC__@@PAX@Z  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+bRepaint]  +
push [ebp+nHeight]  +
push [ebp+nWidth]  +
push [ebp+Y]  +
push [ebp+X]  +
push dword ptr [ecx]  +
call ds:MoveWindow  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+4] +
push esi  +
mov esi [eax] +
push edi  +
push [ebp+bRepaint]  +
mov edi [eax+0Ch] +
mov eax [eax+8] +
sub edi edx +
push edi  +
sub eax esi +
push eax  +
push edx  +
push esi  +
push dword ptr [ecx]  +
call ds:MoveWindow  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
push offset dword_10016F0  +
lea ecx [esi+4] +
mov [esi] edi +
call ??0CString@@QAE@PBG@Z  +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
push ecx  +
call ds:AtlComPtrAssign  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 254h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov eax [eax] +
lea ecx [ebp+FindFileData] +
push ecx  +
push eax  +
call ds:FindFirstFileW  +
cmp eax 0FFFFFFFFh +
jz loc_101481C  +
push eax  +
call ds:FindClose  +
xor eax eax +
inc eax  +
jmp loc_101481E  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1019E83  +
leave   +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+374h] ebx +
jz loc_1014996  +
push edi  +
push dword_1026830  +
call sub_10092F2  +
mov eax [esi+398h] +
mov edi ds:ShowWindow +
neg eax  +
sbb eax eax +
and eax 5 +
push eax  +
push dword ptr [esi+394h]  +
call edi  +
mov eax [esi+398h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFBh +
add eax 5 +
push eax  +
push dword ptr [esi+38Ch]  +
call edi  +
mov eax [esi+3A0h] +
neg eax  +
sbb eax eax +
and eax 5 +
push eax  +
push dword ptr [esi+390h]  +
call edi  +
mov eax [esi+3A0h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFBh +
add eax 5 +
push eax  +
push dword ptr [esi+388h]  +
call edi  +
mov edi ds:EnableWindow +
xor eax eax +
cmp [esi+398h] ebx +
setz al  +
push eax  +
push dword ptr [esi+38Ch]  +
call edi  +
cmp [esi+398h] ebx +
jz loc_10148E4  +
cmp [esi+39Ch] ebx +
jnz loc_10148E4  +
xor eax eax +
inc eax  +
jmp loc_10148E6  +
xor eax eax +
push eax  +
push dword ptr [esi+394h]  +
call edi  +
cmp [esi+3A0h] ebx +
jnz loc_101490F  +
cmp [esi+398h] ebx +
jnz loc_101490F  +
mov eax [esi+3ACh] +
cmp [eax-8] ebx +
jz loc_101490F  +
xor eax eax +
inc eax  +
jmp loc_1014911  +
xor eax eax +
push eax  +
push dword ptr [esi+388h]  +
call edi  +
cmp [esi+3A0h] ebx +
jz loc_101493A  +
cmp [esi+398h] ebx +
jnz loc_101493A  +
mov eax [esi+3ACh] +
cmp [eax-8] ebx +
jz loc_101493A  +
xor eax eax +
inc eax  +
jmp loc_101493C  +
xor eax eax +
push eax  +
push dword ptr [esi+390h]  +
call edi  +
xor eax eax +
cmp [esi+398h] ebx +
setz al  +
push eax  +
push dword ptr [esi+378h]  +
call edi  +
xor eax eax +
cmp [esi+398h] ebx +
setz al  +
push eax  +
push dword ptr [esi+37Ch]  +
call edi  +
xor eax eax +
cmp [esi+398h] ebx +
setz al  +
push eax  +
push dword ptr [esi+380h]  +
call edi  +
xor eax eax +
cmp [esi+398h] ebx +
setz al  +
push eax  +
push dword ptr [esi+384h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
lea eax [ebp+arg_18] +
mov [ebp+var_4] eax +
cmp [ebp+lpLibFileName] edi +
jz loc_10149C7  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov edi eax +
mov eax 800h +
test edi edi +
jnz loc_10149CC  +
mov eax 1000h +
mov ecx [ebp+arg_14] +
neg ecx  +
sbb ecx ecx +
lea edx [ebp+var_4] +
and ecx edx +
push ecx  +
push [ebp+nSize]  +
push [ebp+lpBuffer]  +
push 400h  +
push [ebp+dwMessageId]  +
push edi  +
push eax  +
call ds:FormatMessageW  +
test eax eax +
jz loc_10149F7  +
xor esi esi +
jmp loc_1014A0D  +
call ds:GetLastError  +
test eax eax +
jle loc_1014A0B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test edi edi +
jz loc_1014A18  +
push edi  +
call ds:FreeLibrary  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword_1026830  +
mov byte ptr [ebp-4] 1 +
call sub_10092F2  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 0  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-10h]  +
push dword ptr [esi+4]  +
call ds:MessageBoxW  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push dword_1026830  +
and dword ptr [ebp-4] 0 +
call sub_10092F2  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp+8] +
mov eax [eax] +
push 0  +
push dword ptr [ebp-10h]  +
push eax  +
push dword ptr [esi+4]  +
call ds:MessageBoxW  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_1014B1A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov ebx ecx +
push offset dword_10016F0  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
mov esi [ebp+10h] +
mov eax [esi] +
xor edi edi +
mov [ebp-4] edi +
lea ecx [ebp-10h] +
cmp [ebx+3C8h] edi +
jnz loc_1014B5A  +
push edi  +
push ecx  +
jmp loc_1014B5C  +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1014BC1  +
cmp dword ptr [ebp+8] 0FFFF0000h +
jnz loc_1014BC1  +
lea eax [ebx+8] +
mov ecx [eax] +
cmp [ecx-8] edi +
jz loc_1014BC1  +
push eax  +
lea ecx [ebp+10h] +
call ??0CString@@QAE@ABV0@@Z  +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 1 +
call ?MakeLower@CString@@QAEXXZ  +
push offset asc_100258C  +
lea ecx [ebp+10h] +
call MFC42u_6919  +
push dword ptr [ebp+10h]  +
lea eax [ebp-10h] +
push 225h  +
push eax  +
call ?Format@CString@@QAAXIZZ  +
add esp 0Ch +
lea ecx [ebp+10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
push esi  +
push dword ptr [ebp-10h]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_101425C  +
mov edi eax +
mov eax [esi] +
mov ecx esi +
mov [esi+4] edi +
call dword ptr [eax+8]  +
jmp loc_1014BF5  +
push esi  +
push 0FFFF0002h  +
push edi  +
mov ecx ebx +
call sub_1014B26  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jnz loc_1014BE0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+374h] 0 +
jnz loc_1014C32  +
xor eax eax +
jmp loc_1014F48  +
push esi  +
push edi  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
mov esi ds:GetWindowRect +
lea ecx [ebp+var_78] +
lea eax [ebx+378h] +
push ecx  +
push dword ptr [eax]  +
mov [ebp+var_88] eax +
call esi  +
lea ecx [ebp+var_58] +
lea eax [ebx+37Ch] +
push ecx  +
push dword ptr [eax]  +
mov [ebp+var_7C] eax +
call esi  +
lea eax [ebp+var_14] +
push eax  +
push dword ptr [ebx+388h]  +
call esi  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [ebx+38Ch]  +
call esi  +
lea ecx [ebp+var_44] +
lea eax [ebx+380h] +
push ecx  +
push dword ptr [eax]  +
mov [ebp+var_80] eax +
call esi  +
lea ecx [ebp+var_68] +
lea eax [ebx+384h] +
push ecx  +
push dword ptr [eax]  +
mov [ebp+var_84] eax +
call esi  +
lea esi [ebp+Rect] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
push 5  +
movs   +
pop edi  +
push edi  +
push edi  +
lea ecx [ebp+rc] +
call sub_10146DF  +
mov ecx [ebp+var_70] +
sub ecx [ebp+var_78] +
mov eax [ebp+Rect.right] +
mov edx [ebp+var_1C] +
sub eax [ebp+Rect.left] +
mov esi [ebp+var_3C] +
add ecx ecx +
sub ecx [ebp+var_14] +
sub ecx [ebp+var_24] +
add ecx [ebp+var_C] +
lea ecx [ecx+edx+19h] +
cmp ecx eax +
mov ecx [ebp+var_60] +
jg loc_1014D10  +
mov edi ecx +
sub edi [ebp+var_68] +
push 5  +
sub edi [ebp+var_44] +
lea edi [edi+esi+0Fh] +
cmp edi eax +
pop edi  +
jg loc_1014D10  +
mov [ebp+var_4] 1 +
jmp loc_1014D14  +
and [ebp+var_4] 0 +
sub ecx [ebp+var_68] +
sub ecx [ebp+var_44] +
sub ecx [ebp+var_14] +
sub ecx [ebp+var_78] +
sub ecx [ebp+var_24] +
add ecx esi +
add ecx [ebp+var_70] +
mov esi [ebp+rc.right] +
add ecx [ebp+var_C] +
cmp [ebp+var_4] 0 +
lea ecx [ecx+edx+19h] +
jz loc_1014D61  +
mov eax esi +
sub eax [ebp+rc.left] +
cmp eax ecx +
jle loc_1014D5D  +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
push 0  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov edx [ebp+var_1C] +
mov esi [ebp+rc.right] +
xor eax eax +
jmp loc_1014D69  +
mov eax [ebp+var_18] +
sub eax [ebp+var_20] +
add eax edi +
sub eax [ebp+var_10] +
add eax [ebp+var_8] +
mov [ebp+var_48] eax +
mov eax [ebp+var_38] +
sub eax [ebp+var_40] +
cmp [ebp+var_4] 0 +
jz loc_1014D8A  +
sub eax [ebp+var_54] +
mov ecx [ebp+var_4C] +
lea eax [eax+ecx+5] +
jmp loc_1014D94  +
lea eax [eax+eax+0Ah] +
sub eax [ebp+var_54] +
add eax [ebp+var_4C] +
cmp [ebp+var_48] eax +
jge loc_1014D9C  +
mov [ebp+var_48] eax +
mov eax [ebp+rc.bottom] +
sub eax [ebp+var_48] +
cmp [ebp+var_4] 0 +
mov [ebp+rc.top] eax +
jz loc_1014DD3  +
sub eax [ebp+var_20] +
sub esi edx +
push eax  +
push esi  +
mov esi ds:OffsetRect +
lea eax [ebp+var_24] +
push eax  +
call esi  +
mov eax [ebp+rc.top] +
sub eax [ebp+var_10] +
push eax  +
mov eax [ebp+var_24] +
sub eax [ebp+var_C] +
sub eax edi +
push eax  +
lea eax [ebp+var_14] +
jmp loc_1014DFA  +
sub eax [ebp+var_10] +
sub esi [ebp+var_C] +
push eax  +
push esi  +
mov esi ds:OffsetRect +
lea eax [ebp+var_14] +
push eax  +
call esi  +
mov eax [ebp+var_8] +
sub eax [ebp+var_20] +
add eax edi +
push eax  +
mov eax [ebp+rc.right] +
sub eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
call esi  +
mov eax [ebp+var_4C] +
sub eax [ebp+var_6C] +
sub eax [ebp+var_54] +
add eax [ebp+var_74] +
cdq   +
sub eax edx +
sar eax 1 +
sub eax [ebp+var_74] +
add eax [ebp+rc.top] +
push eax  +
mov eax [ebp+rc.left] +
sub eax [ebp+var_78] +
push eax  +
lea eax [ebp+var_78] +
push eax  +
call esi  +
mov eax [ebp+rc.top] +
sub eax [ebp+var_54] +
push eax  +
mov eax [ebp+var_70] +
sub eax [ebp+var_58] +
add eax edi +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call esi  +
mov eax [ebp+var_14] +
add eax 0FFFFFFFBh +
mov [ebp+var_50] eax +
mov eax [ebp+var_4C] +
sub eax [ebp+var_40] +
add eax edi +
push eax  +
mov eax [ebp+rc.left] +
sub eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_44] +
push eax  +
call esi  +
cmp [ebp+var_4] 0 +
jz loc_1014E6E  +
mov eax [ebp+var_40] +
sub eax [ebp+var_64] +
push eax  +
mov eax [ebp+var_3C] +
sub eax [ebp+var_68] +
add eax edi +
jmp loc_1014E7D  +
mov eax [ebp+var_38] +
sub eax [ebp+var_64] +
add eax edi +
push eax  +
mov eax [ebp+rc.left] +
sub eax [ebp+var_68] +
push eax  +
lea eax [ebp+var_68] +
push eax  +
call esi  +
mov eax [ebp+var_60] +
mov ecx [ebp+var_3C] +
cmp eax ecx +
jge loc_1014E90  +
mov eax ecx +
add eax edi +
xor edi edi +
cmp [ebp+var_4] edi +
jnz loc_1014EC0  +
cmp [ebp+var_24] eax +
jge loc_1014EC0  +
sub eax [ebp+var_24] +
push edi  +
push eax  +
lea eax [ebp+var_24] +
push eax  +
call esi  +
mov eax [ebp+var_24] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call esi  +
mov eax [ebp+var_14] +
add eax 0FFFFFFFBh +
mov [ebp+var_50] eax +
xor esi esi +
inc esi  +
push esi  +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ebx+38Ch] +
call sub_1014769  +
push esi  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebx+388h] +
call sub_1014769  +
push esi  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebx+390h] +
call sub_1014769  +
push esi  +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ebx+394h] +
call sub_1014769  +
mov ecx [ebp+var_88] +
push esi  +
lea eax [ebp+var_78] +
push eax  +
call sub_1014769  +
mov ecx [ebp+var_7C] +
push esi  +
lea eax [ebp+var_58] +
push eax  +
call sub_1014769  +
mov ecx [ebp+var_80] +
push esi  +
lea eax [ebp+var_44] +
push eax  +
call sub_1014769  +
mov ecx [ebp+var_84] +
push esi  +
lea eax [ebp+var_68] +
push eax  +
call sub_1014769  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
pop edi  +
add eax 0Ah +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+NumberOfBytesRead] +
mov eax [eax] +
push esi  +
push edi  +
xor esi esi +
push esi  +
push 80h  +
push 3  +
push esi  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1014FB7  +
push esi  +
push edi  +
call ds:GetFileSize  +
cmp eax 4 +
jb loc_1014FB0  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 4  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_1014FB0  +
cmp [ebp+NumberOfBytesRead] 4 +
jnz loc_1014FB0  +
cmp [ebp+Buffer] 0E011CFD0h +
jnz loc_1014FB0  +
inc esi  +
push edi  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+pt.y]  +
mov edi ds:PtInRect +
push [ebp+pt.x]  +
mov esi ecx +
lea eax [esi+34h] +
push eax  +
call edi  +
mov ebx ds:SetCursor +
jmp loc_1015014  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_101503E  +
call ds:ReleaseCapture  +
and dword ptr [esi+2Ch] 0 +
push 7F00h  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ebx  +
push [ebp+pt.y]  +
lea eax [esi+34h] +
push [ebp+pt.x]  +
push eax  +
call edi  +
test eax eax +
jz loc_1014FE8  +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_101502E  +
push dword ptr [esi+4]  +
call ds:SetCapture  +
mov dword ptr [esi+2Ch] 1 +
push 7F84h  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ebx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push edi  +
mov edi ds:GetWindowRect +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+10h]  +
call edi  +
lea eax [esi+44h] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
mov eax [ebp+var_C] +
sub eax [ebp+Rect.top] +
sub eax 3 +
push eax  +
mov eax [ebp+var_10] +
sub eax [ebp+Rect.left] +
sub eax 3 +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
push 403h  +
push 0  +
push dword ptr [esi+4]  +
call ds:GetDCEx  +
mov edi eax +
lea eax [ebp+rc] +
push eax  +
push edi  +
call ds:DrawFocusRect  +
push edi  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
push [ebp+pt.y]  +
mov edi [ebp+pt.x] +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1015116  +
mov ecx esi +
call sub_101504A  +
mov eax [esi+44h] +
sub edi [esi+54h] +
mov ecx esi +
sub edi eax +
add [esi+4Ch] edi +
add eax edi +
mov [esi+44h] eax +
call sub_101504A  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101504A  +
mov edi ds:GetWindowRect +
lea eax [ebp+X] +
push eax  +
push dword ptr [esi+10h]  +
call edi  +
lea eax [ebp+var_20] +
push eax  +
push dword ptr [esi+14h]  +
call edi  +
xor eax eax +
lea edi [ebp+Point.y] +
stos   +
lea edi [ebp+var_C] +
stos   +
mov eax [ebp+X] +
mov edi ds:ScreenToClient +
mov [ebp+Point.x] eax +
mov eax [ebp-2Ch] +
mov [ebp+Point.y] eax +
mov eax [ebp-28h] +
mov [ebp+var_10] eax +
mov eax [ebp-24h] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov eax [ebp+Point.x] +
mov [ebp+X] eax +
mov eax [ebp+Point.y] +
mov [ebp-2Ch] eax +
mov eax [ebp+var_10] +
mov [ebp-28h] eax +
mov eax [ebp+var_C] +
mov [ebp-24h] eax +
mov eax [ebp+var_20] +
mov [ebp+Point.x] eax +
mov eax [ebp+Y] +
mov [ebp+Point.y] eax +
mov eax [ebp+var_18] +
mov [ebp+var_10] eax +
mov eax [ebp+var_14] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov ecx [ebp+Point.y] +
mov edx [ebp+X] +
mov eax [ebp+Point.x] +
mov ebx [ebp+var_10] +
mov [ebp+Y] ecx +
mov ecx [ebp+var_C] +
mov [ebp+var_14] ecx +
mov ecx [ebp-28h] +
cmp ecx edx +
mov [ebp+var_20] eax +
mov [ebp+var_18] ebx +
jg loc_101522D  +
jnz loc_10151EF  +
cmp ebx eax +
jg loc_101522D  +
mov eax [esi+4Ch] +
mov edx [ebp-24h] +
sub edx [ebp-2Ch] +
mov [ebp+var_18] eax +
push 1  +
lea ebx [esi+44h] +
mov eax [ebx] +
push edx  +
mov [ebp+X] eax +
sub eax ecx +
push eax  +
push dword ptr [ebp-2Ch]  +
push ecx  +
lea ecx [esi+10h] +
call sub_1014744  +
mov eax [ebp+var_14] +
sub eax [ebp+Y] +
push 1  +
push eax  +
mov eax [ebp+var_20] +
sub eax [ebp+var_18] +
push eax  +
push [ebp+Y]  +
push [ebp+var_18]  +
jmp loc_1015269  +
mov ecx [esi+4Ch] +
mov [ebp+var_20] ecx +
mov ecx [ebp-24h] +
sub ecx [ebp-2Ch] +
push 1  +
lea ebx [esi+44h] +
mov eax [ebx] +
push ecx  +
mov [ebp-28h] eax +
sub eax edx +
push eax  +
push dword ptr [ebp-2Ch]  +
lea ecx [esi+10h] +
push edx  +
call sub_1014744  +
mov eax [ebp+var_14] +
sub eax [ebp+Y] +
push 1  +
push eax  +
mov eax [ebp+var_18] +
sub eax [ebp+var_20] +
push eax  +
push [ebp+Y]  +
push [ebp+var_20]  +
lea ecx [esi+14h] +
call sub_1014744  +
push dword ptr [esi+14h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_10152EE  +
mov eax [esi+5Ch] +
cmp dword ptr [eax-8] 0 +
jnz loc_1015290  +
mov eax [esi+60h] +
cmp dword ptr [eax-8] 0 +
jz loc_10152EE  +
lea eax [ebp+var_40] +
push eax  +
push dword ptr [esi+14h]  +
call ds:GetWindowRect  +
mov eax [ebp+var_40] +
mov [ebp+Point.x] eax +
mov eax [ebp+var_3C] +
mov [ebp+Point.y] eax +
mov eax [ebp+var_38] +
mov [ebp+var_10] eax +
mov eax [ebp+var_34] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov eax [ebp+Point.x] +
mov [ebp+var_40] eax +
mov eax [ebp+Point.y] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_10] +
mov [ebp+var_38] eax +
mov eax [ebp+var_C] +
mov [ebp+var_34] eax +
push 1  +
lea eax [ebp+var_40] +
push eax  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
lea eax [ebp+var_50] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov ecx [ebp-28h] +
mov edx [ebp+X] +
cmp ecx edx +
jle loc_101530B  +
mov eax ecx +
sub eax edx +
jmp loc_1015311  +
jge loc_1015322  +
mov eax edx +
sub eax ecx +
mov ecx [ebp+var_48] +
imul eax eax +
sub ecx [ebp+var_50] +
cdq   +
idiv  ecx +
mov [esi+18h] eax +
jmp loc_1015329  +
mov dword ptr [esi+18h] 64h +
and dword ptr [esi+30h] 0 +
push ebx  +
lea edi [esi+34h] +
push edi  +
call ds:CopyRect  +
push 1  +
push edi  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
call ds:ReleaseCapture  +
and dword ptr [esi+2Ch] 0 +
push 7F00h  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
push edi  +
lea ecx [esi+5Ch] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ebx [ebp+arg_4] +
push ebx  +
lea ecx [esi+60h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [edi] +
xor edi edi +
cmp [eax-8] edi +
jnz loc_10153B1  +
mov eax [ebx] +
cmp [eax-8] edi +
jnz loc_10153B1  +
push 5  +
push dword ptr [esi+14h]  +
call ds:ShowWindow  +
jmp loc_1015437  +
push edi  +
push dword ptr [esi+14h]  +
call ds:ShowWindow  +
cmp [ebp+arg_8] edi +
jz loc_1015437  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+14h]  +
call ds:GetWindowRect  +
xor eax eax +
lea edi [ebp+Point.y] +
stos   +
lea edi [ebp+var_C] +
stos   +
mov eax [ebp+Rect.left] +
mov edi ds:ScreenToClient +
mov [ebp+Point.x] eax +
mov eax [ebp+Rect.top] +
mov [ebp+Point.y] eax +
mov eax [ebp+Rect.right] +
mov [ebp+var_10] eax +
mov eax [ebp+Rect.bottom] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov eax [ebp+Point.x] +
mov [ebp+Rect.left] eax +
mov eax [ebp+Point.y] +
mov [ebp+Rect.top] eax +
mov eax [ebp+var_10] +
mov [ebp+Rect.right] eax +
mov eax [ebp+var_C] +
mov [ebp+Rect.bottom] eax +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
push dword ptr [esi+4]  +
call ds:UpdateWindow  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov edi ecx +
mov esi offset dword_10016F0 +
push esi  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@PBG@Z  +
and dword ptr [ebp-4] 0 +
push esi  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
push dword_1026830  +
mov byte ptr [ebp-4] 1 +
call sub_10092F2  +
cmp dword ptr [ebp+8] 0 +
jz loc_101548C  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call ?LoadStringW@CString@@QAEHI@Z  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_101549D  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp+10h]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov ecx edi +
call sub_101536C  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_10142A0  +
mov esi eax +
test esi esi +
jz loc_1015510  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1015510  +
mov ecx edi +
call sub_101439A  +
push 0  +
push 0  +
push 67h  +
mov ecx edi +
call sub_1015443  +
mov eax [esi] +
push 0  +
push dword ptr [edi+24h]  +
mov ecx esi +
call dword ptr [eax+5Ch]  +
pop edi  +
pop esi  +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor edi edi +
cmp [esi+24h] edi +
jz loc_101564C  +
mov ecx [esi+24h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ebx eax +
cmp ebx edi +
jz loc_101564C  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1015577  +
cmp [esi+64h] edi +
jz loc_1015561  +
push 1  +
push dword ptr [esi+24h]  +
mov ecx ebx +
call sub_100A879  +
jmp loc_1015577  +
push ebx  +
push dword ptr [esi+24h]  +
mov ecx esi +
call sub_10145F4  +
neg eax  +
sbb eax eax +
inc eax  +
jnz loc_101564C  +
push edi  +
push 80h  +
push 2  +
push edi  +
push edi  +
push 40000000h  +
push dword ptr [ebp+8]  +
call ds:CreateFileW  +
mov [ebp+8] eax +
cmp eax 0FFFFFFFFh +
jz loc_10155DC  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_10155A8  +
mov edx [ebx] +
push eax  +
mov ecx ebx +
mov [ebp-4] edi +
call dword ptr [edx+58h]  +
push dword ptr [ebp+8]  +
call ds:CloseHandle  +
jmp loc_101564C  +
mov esi [ebp-18h] +
mov eax [esi] +
xor edi edi +
push edi  +
push edi  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx esi +
call ?Delete@CException@@QAEXXZ  +
push dword ptr [ebp+8]  +
call ds:CloseHandle  +
mov eax offset loc_10155DA +
retn   +
jmp loc_101564C  +
call ds:GetLastError  +
push edi  +
push edi  +
lea ecx [ebp+8] +
push ecx  +
push 400h  +
push eax  +
push edi  +
push 1300h  +
mov [ebp+8] edi +
call ds:FormatMessageW  +
lea ecx [ebp+0Ch] +
call ??0CString@@QAE@XZ  +
push dword_1026830  +
mov dword ptr [ebp-4] 2 +
call sub_10092F2  +
push 75h  +
lea ecx [ebp+0Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 30h  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [esi+4]  +
call ds:MessageBoxW  +
cmp [ebp+8] edi +
jz loc_1015640  +
push dword ptr [ebp+8]  +
call ds:LocalFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov esi [ebp-50h] +
mov esi [ebp-54h] +
call ds:GetLastError  +
xor ebx ebx +
push ebx  +
push ebx  +
lea ecx [ebp-40h] +
push ecx  +
push 400h  +
push eax  +
push ebx  +
push 1300h  +
call ds:FormatMessageW  +
lea ecx [ebp-48h] +
call ??0CString@@QAE@XZ  +
push dword_1026830  +
mov byte ptr [ebp-4] 3 +
call sub_10092F2  +
push 75h  +
lea ecx [ebp-48h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax [ebp-4Ch] +
push 30h  +
push dword ptr [ebp-48h]  +
push dword ptr [ebp-40h]  +
push dword ptr [eax+4]  +
call ds:MessageBoxW  +
push dword ptr [ebp-40h]  +
call ds:LocalFree  +
lea ecx [ebp-48h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
mov eax offset loc_1015728 +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
push 2Ch  +
xor ebx ebx +
lea eax [ebp-44h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
mov dword ptr [ebp-48h] 30h +
mov [ebp-14h] ebx +
cmp [edi+24h] ebx +
jz loc_10158A9  +
mov ecx [edi+24h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
cmp eax ebx +
jz loc_10158A9  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+30h]  +
mov [ebp-14h] eax +
push ebx  +
push dword ptr [edi+3CCh]  +
call ds:GetSubMenu  +
mov esi ds:SetMenuItemInfoW +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1015939  +
mov ecx [edi+20h] +
sub ecx [edi+24h] +
mov dword ptr [ebp-44h] 1 +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
mov [ebp-3Ch] ecx +
lea ecx [ebp-48h] +
push ecx  +
push ebx  +
push 0E102h  +
push eax  +
call esi  +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 8000h  +
push dword ptr [ebp-10h]  +
mov [ebp-3Ch] ebx +
call esi  +
mov eax [ebp-14h] +
neg eax  +
sbb eax eax +
and eax 3 +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 8001h  +
push dword ptr [ebp-10h]  +
call esi  +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 8006h  +
push dword ptr [ebp-10h]  +
mov [ebp-3Ch] ebx +
call esi  +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 0E107h  +
push dword ptr [ebp-10h]  +
mov [ebp-3Ch] ebx +
call esi  +
push 1  +
push dword ptr [edi+3CCh]  +
call ds:GetSubMenu  +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1015A17  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword ptr [edi+14h]  +
mov dword ptr [ebp-44h] 1 +
call ds:SendMessageW  +
push dword ptr [edi+14h]  +
inc eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 3 +
mov [ebp-3Ch] eax +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_101598D  +
mov dword ptr [ebp-3Ch] 3 +
mov eax [edi+37Ch] +
mov [ebp-18h] eax +
call ds:GetFocus  +
cmp eax [ebp-18h] +
jnz loc_10159C1  +
push dword ptr [ebp-18h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10159C1  +
push dword ptr [edi+37Ch]  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_10159C1  +
mov [ebp-3Ch] ebx +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 0E122h  +
push dword ptr [ebp-10h]  +
call esi  +
push dword ptr [edi+14h]  +
call ds:IsWindowVisible  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 3 +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 8010h  +
push dword ptr [ebp-10h]  +
call esi  +
mov eax [edi+374h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF8h +
add eax 8 +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 0E124h  +
push dword ptr [ebp-10h]  +
call esi  +
push 2  +
push dword ptr [edi+3CCh]  +
call ds:GetSubMenu  +
mov [ebp-10h] eax +
cmp eax ebx +
jz loc_1015ACA  +
mov eax [ebp-14h] +
neg eax  +
sbb eax eax +
and eax 3 +
mov [ebp-14h] eax +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 800Ah  +
push dword ptr [ebp-10h]  +
mov dword ptr [ebp-44h] 1 +
call esi  +
mov eax [edi+58h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF8h +
add eax 8 +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 800Bh  +
push dword ptr [ebp-10h]  +
call esi  +
mov eax [edi+58h] +
neg eax  +
sbb eax eax +
and eax 8 +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 800Ch  +
push dword ptr [ebp-10h]  +
call esi  +
mov eax [ebp-14h] +
mov [ebp-3Ch] eax +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 8011h  +
push dword ptr [ebp-10h]  +
call esi  +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
push 17Bh  +
lea ecx [ebp-18h] +
mov [ebp-4] ebx +
call ?LoadStringW@CString@@QAEHI@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CString@@QAE@XZ  +
push 4  +
push dword ptr [edi+3CCh]  +
call ds:GetSubMenu  +
cmp eax ebx +
jz loc_1015AF3  +
lea ecx [ebp-48h] +
push ecx  +
push ebx  +
push 800Dh  +
push eax  +
mov dword ptr [ebp-44h] 1 +
mov [ebp-3Ch] ebx +
call esi  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [esi+37Ch] +
call ds:GetFocus  +
cmp eax edi +
jnz loc_1015B51  +
push edi  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1015B51  +
push dword ptr [esi+37Ch]  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1015B51  +
push 0  +
push 0  +
push 301h  +
push dword ptr [esi+37Ch]  +
call ds:SendMessageW  +
jmp loc_1015CA5  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
push offset dword_10016F0  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx esi +
call sub_10142A0  +
mov [ebp-24h] eax +
test eax eax +
jz loc_1015C99  +
mov edx [eax] +
lea ecx [ebp-20h] +
push ecx  +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx eax +
call dword ptr [edx+18h]  +
and dword ptr [ebp-5Ch] 0 +
mov edi ds:SendMessageW +
push 2  +
mov dword ptr [ebp-64h] 4 +
push 0FFFFFFFFh  +
mov ebx 100Ch +
jmp loc_1015C26  +
mov eax [ebp-18h] +
mov [ebp-60h] eax +
lea eax [ebp-64h] +
push eax  +
push 0  +
push 104Bh  +
push dword ptr [esi+14h]  +
call edi  +
test eax eax +
jz loc_1015C21  +
mov eax [ebp-44h] +
cmp eax [ebp-20h] +
jge loc_1015C14  +
and dword ptr [ebp-14h] 0 +
cmp dword ptr [ebp-1Ch] 0 +
jle loc_1015C14  +
mov ecx [ebp-24h] +
mov eax [ecx] +
push 0  +
lea edx [ebp-28h] +
push edx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-44h]  +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_1015C09  +
cmp dword ptr [ebp-14h] 0 +
jz loc_1015BFE  +
push offset asc_1002DF0  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
cmp eax [ebp-1Ch] +
jl loc_1015BD3  +
push offset asc_10072AC  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@PBG@Z  +
push 2  +
push dword ptr [ebp-18h]  +
push ebx  +
push dword ptr [esi+14h]  +
call edi  +
mov [ebp-18h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1015BA7  +
push dword ptr [esi+4]  +
call ds:OpenClipboard  +
test eax eax +
jz loc_1015C99  +
call ds:EmptyClipboard  +
test eax eax +
jz loc_1015C93  +
mov eax [ebp-10h] +
mov eax [eax-8] +
lea edi [eax+eax+2] +
push edi  +
push 2002h  +
call ds:GlobalAlloc  +
mov esi eax +
test esi esi +
jz loc_1015C93  +
push esi  +
call ds:GlobalLock  +
test eax eax +
jz loc_1015C93  +
push edi  +
push dword ptr [ebp-10h]  +
push eax  +
call memcpy  +
add esp 0Ch +
push esi  +
call ds:GlobalUnlock  +
push esi  +
push 0Dh  +
call ds:SetClipboardData  +
call ds:CloseClipboard  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+24h] 0 +
jz loc_1015DE3  +
mov ecx [esi+24h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx esi +
mov [ebp+var_2C] eax +
call sub_10142A0  +
cmp [ebp+var_2C] 0 +
mov [ebp+nSize] eax +
jz loc_1015DE3  +
push ebx  +
mov ebx 540108h +
test eax eax +
jnz loc_1015D00  +
mov ebx 0D4010Ch +
push edi  +
push 54h  +
pop edi  +
push edi  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
mov eax [esi+4] +
or [ebp+var_38] 0FFFFFFFFh +
add esp 0Ch +
cmp [ebp+arg_0] 0 +
mov [ebp+var_70] ebx +
mov [ebp+var_84] edi +
mov [ebp+var_80] eax +
mov [ebp+var_68] 8100h +
jz loc_1015D3F  +
or ebx 400h +
mov [ebp+var_70] ebx +
lea eax [ebp+var_84] +
push eax  +
call ds:PrintDlgExW  +
test eax eax +
jl loc_1015DE1  +
xor edx edx +
inc edx  +
cmp [ebp+var_34] edx +
jnz loc_1015DE1  +
mov eax [ebp+var_70] +
test al dl +
jnz loc_1015D72  +
test eax 400000h +
jnz loc_1015D72  +
xor ecx ecx +
jmp loc_1015D74  +
mov ecx edx +
mov ebx [ebp+nSize] +
shr eax 16h +
not eax  +
and eax edx +
mov [ebp+var_30] eax +
test ecx ecx +
jnz loc_1015D88  +
mov ebx [ebp+var_2C] +
test ebx ebx +
jz loc_1015DE1  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1015DA6  +
push ebx  +
push dword ptr [esi+24h]  +
mov ecx esi +
call sub_10145F4  +
test eax eax +
jz loc_1015DE1  +
xor eax eax +
push 7  +
mov [ebp+Buffer] ax +
pop ecx  +
lea edi [ebp-22h] +
stos   +
stos   +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov ecx esi +
mov [ebp+nSize] 10h +
call sub_10145AA  +
mov eax [ebx] +
lea ecx [ebp+Buffer] +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push [ebp+var_30]  +
mov ecx ebx +
push [ebp+var_74]  +
call dword ptr [eax+48h]  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1019E83  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+398h] edi +
jz loc_1015E63  +
push dword ptr [esi+38Ch]  +
mov dword ptr [esi+39Ch] 1 +
mov [esi+3A0h] edi +
call ds:SetFocus  +
mov ecx esi +
call sub_1014831  +
mov ecx [esi+3B0h] +
cmp ecx edi +
jz loc_1015E63  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1015E63  +
mov esi [esi+24h] +
push ebx  +
push 7F02h  +
push edi  +
call ds:LoadCursorW  +
mov edi ds:SetCursor +
push eax  +
call edi  +
mov ebx eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push ebx  +
call edi  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
xor eax eax +
mov [esi+3A0h] eax +
cmp [esi+398h] eax +
jz loc_1015E9F  +
push dword ptr [esi+38Ch]  +
mov dword ptr [esi+39Ch] 1 +
call ds:SetFocus  +
mov ecx esi +
call sub_1014831  +
jmp loc_1015EAA  +
push eax  +
push 0E124h  +
call sub_1018751  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
and dword ptr [esi+3A0h] 0 +
push 0CBh  +
push dword ptr [esi+4]  +
call ds:GetDlgItem  +
push 104h  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call ds:GetWindowTextW  +
lea ecx [esi+3ACh] +
test eax eax +
jnz loc_1015F04  +
push offset dword_10016F0  +
jmp loc_1015F0B  +
lea eax [ebp+String] +
push eax  +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx esi +
call sub_1014831  +
mov ecx esi +
call sub_1015865  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1019E83  +
leave   +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
cmp [esi+3B0h] ebx +
jnz loc_1015F55  +
xor eax eax +
call __EH_epilog3  +
retn   +
lea eax [esi+3ACh] +
push eax  +
lea ecx [ebp-24h] +
call ??0CString@@QAE@ABV0@@Z  +
mov edi offset asc_10072B4 +
push edi  +
lea ecx [ebp-24h] +
mov [ebp-4] ebx +
call MFC42u_6919  +
push edi  +
lea ecx [ebp-24h] +
call MFC42u_6921  +
lea ecx [ebp-24h] +
call ?MakeLower@CString@@QAEXXZ  +
cmp dword ptr [esi+3B4h] 0FFFFFFFEh +
jnz loc_1016085  +
or dword ptr [esi+3B4h] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call ??0CString@@QAE@XZ  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-2Ch] +
push edx  +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+14h]  +
lea ecx [ebp-2Ch] +
call ?MakeLower@CString@@QAEXXZ  +
push dword ptr [ebp-24h]  +
lea ecx [ebp-2Ch] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_101607A  +
mov eax [esi+3B0h] +
mov eax [eax+4] +
mov [ebp-1Ch] eax +
cmp eax ebx +
jz loc_101607A  +
mov edi ds:SendMessageW +
push eax  +
push ebx  +
push 1114h  +
push dword ptr [esi+10h]  +
mov [esi+398h] ebx +
mov dword ptr [esi+3A0h] 1 +
call edi  +
push dword ptr [ebp-1Ch]  +
push 9  +
push 110Bh  +
push dword ptr [esi+10h]  +
call edi  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101603C  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_101603C  +
push 1  +
push ebx  +
push 69h  +
jmp loc_101603F  +
push ebx  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_1015443  +
mov ecx esi +
call sub_1014831  +
push dword ptr [esi+390h]  +
call ds:SetFocus  +
lea ecx [ebp-2Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
xor ebx ebx +
inc ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
jmp loc_1015F4F  +
lea ecx [ebp-2Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
cmp [esi+3A4h] ebx +
jnz loc_1016067  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
lea edx [ebp-34h] +
push edx  +
lea edx [ebp-30h] +
push edx  +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_1016067  +
cmp dword ptr [esi+3B4h] 0FFFFFFFFh +
mov edi ds:SendMessageW +
jnz loc_10161C9  +
lea ecx [ebp-28h] +
call ??0CString@@QAE@XZ  +
cmp [ebp-34h] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
jle loc_1016179  +
cmp [ebp-18h] ebx +
jnz loc_1016189  +
cmp [esi+58h] ebx +
jnz loc_10160F2  +
mov ecx [esi+3B0h] +
push dword ptr [ebp-14h]  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
test eax eax +
jnz loc_1016165  +
cmp [ebp-30h] ebx +
mov [ebp-10h] ebx +
jle loc_1016165  +
cmp [ebp-18h] ebx +
jnz loc_1016165  +
cmp [esi+58h] ebx +
jnz loc_1016116  +
mov ecx [esi+3B0h] +
push dword ptr [ebp-10h]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_101615A  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_101615A  +
push dword ptr [ebp-38h]  +
lea ecx [ebp-28h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-28h] +
call ?MakeLower@CString@@QAEXXZ  +
push dword ptr [ebp-24h]  +
lea ecx [ebp-28h] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_101615A  +
mov dword ptr [ebp-18h] 1 +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp-30h] +
jl loc_10160FA  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
cmp eax [ebp-34h] +
jl loc_10160D2  +
cmp [ebp-18h] ebx +
jnz loc_1016189  +
lea ecx [ebp-28h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_1016067  +
mov eax [esi+3B0h] +
mov eax [eax+4] +
mov [ebp-1Ch] eax +
cmp eax ebx +
jz loc_10161BE  +
push eax  +
push ebx  +
push 1114h  +
push dword ptr [esi+10h]  +
call edi  +
push dword ptr [ebp-1Ch]  +
push 9  +
push 110Bh  +
push dword ptr [esi+10h]  +
call edi  +
push ebx  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_1015443  +
lea ecx [ebp-28h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
inc dword ptr [esi+3B4h]  +
lea ecx [ebp-20h] +
call ??0CString@@QAE@XZ  +
push ebx  +
push ebx  +
push 1004h  +
push dword ptr [esi+14h]  +
mov byte ptr [ebp-4] 3 +
call edi  +
cmp [ebp-30h] ebx +
mov [ebp-1Ch] eax +
mov [ebp-18h] ebx +
mov [ebp-10h] ebx +
jle loc_1016291  +
cmp [esi+58h] ebx +
jnz loc_1016210  +
mov ecx [esi+3B0h] +
push dword ptr [ebp-10h]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_1016213  +
inc dword ptr [ebp-18h]  +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp-30h] +
jl loc_10161F9  +
jmp loc_1016291  +
cmp [ebp-18h] ebx +
mov [ebp-10h] ebx +
jle loc_101628B  +
mov eax [ebp-10h] +
mov [ebp-6Ch] eax +
mov eax 104h +
push eax  +
lea ecx [ebp-20h] +
mov [ebp-5Ch] eax +
call ?GetBuffer@CString@@QAEPAGH@Z  +
mov [ebp-60h] eax +
lea eax [ebp-74h] +
push eax  +
push dword ptr [esi+3B4h]  +
push 1073h  +
push dword ptr [esi+14h]  +
call edi  +
push 0FFFFFFFFh  +
lea ecx [ebp-20h] +
call ?ReleaseBuffer@CString@@QAEXH@Z  +
mov eax [ebp-20h] +
cmp [eax-8] ebx +
jz loc_1016280  +
lea ecx [ebp-20h] +
call ?MakeLower@CString@@QAEXXZ  +
push dword ptr [ebp-24h]  +
lea ecx [ebp-20h] +
call ?Find@CString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jnz loc_10162A4  +
inc dword ptr [ebp-10h]  +
mov eax [ebp-10h] +
cmp eax [ebp-18h] +
jl loc_1016228  +
inc dword ptr [esi+3B4h]  +
mov eax [ebp-1Ch] +
cmp [esi+3B4h] eax +
jl loc_1016220  +
lea ecx [ebp-20h] +
jmp loc_101617C  +
cmp [ebp-1Ch] ebx +
mov [ebp-14h] ebx +
jle loc_1016303  +
mov eax [ebp-14h] +
cmp eax [esi+3B4h] +
jnz loc_10162D6  +
push 1  +
push eax  +
push 1013h  +
push dword ptr [esi+14h]  +
call edi  +
push 2  +
pop eax  +
mov [ebp-64h] eax +
mov [ebp-68h] eax +
lea eax [ebp-74h] +
push eax  +
push dword ptr [ebp-14h]  +
jmp loc_10162EE  +
lea ecx [ebp-0B0h] +
push ecx  +
mov dword ptr [ebp-0A0h] 2 +
mov [ebp-0A4h] ebx +
push eax  +
push 102Bh  +
push dword ptr [esi+14h]  +
call edi  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
cmp eax [ebp-1Ch] +
jl loc_10162AC  +
push ebx  +
xor edi edi +
push ebx  +
inc edi  +
push ebx  +
mov ecx esi +
mov [esi+398h] ebx +
mov [esi+3A0h] edi +
call sub_1015443  +
mov ecx esi +
call sub_1014831  +
push dword ptr [esi+390h]  +
call ds:SetFocus  +
lea ecx [ebp-20h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ebx edi +
jmp loc_1016067  +
***
call __EH_prolog3_GS  +
lea eax [ebp-0ACh] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
mov [ebp-0B0h] eax +
lea eax [ebp-104h] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov edi ds:GetSysColor +
push 0Fh  +
call edi  +
push eax  +
push dword ptr [ebp-0B0h]  +
call ds:SetTextColor  +
push 0Fh  +
call edi  +
push eax  +
call ds:CreateSolidBrush  +
push eax  +
lea eax [ebp-104h] +
push eax  +
push dword ptr [ebp-0B0h]  +
call ds:FillRect  +
mov edi ds:InvalidateRect +
push 1  +
xor ebx ebx +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
push 405h  +
push ebx  +
push ebx  +
push dword ptr [esi+10h]  +
mov ebx ds:RedrawWindow +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+14h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+14h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+378h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+378h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+37Ch]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+37Ch]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+380h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+380h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+384h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+384h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+388h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+388h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+38Ch]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+38Ch]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+390h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+390h]  +
call ebx  +
push 1  +
push 0  +
push dword ptr [esi+394h]  +
call edi  +
push 405h  +
push 0  +
push 0  +
push dword ptr [esi+394h]  +
call ebx  +
push dword ptr [esi+14h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_10167C1  +
lea eax [ebp-0C0h] +
push eax  +
push dword ptr [esi+14h]  +
call ds:GetWindowRect  +
xor eax eax +
lea edi [ebp-0DCh] +
stos   +
lea edi [ebp-0E4h] +
stos   +
mov eax [ebp-0C0h] +
mov edi ds:ScreenToClient +
mov [ebp-0E0h] eax +
mov eax [ebp-0BCh] +
mov [ebp-0DCh] eax +
mov eax [ebp-0B8h] +
mov [ebp-0E8h] eax +
mov eax [ebp-0B4h] +
mov [ebp-0E4h] eax +
lea eax [ebp-0E0h] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp-0E8h] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov eax [ebp-0E0h] +
mov [ebp-0C0h] eax +
mov eax [ebp-0DCh] +
mov [ebp-0BCh] eax +
mov eax [ebp-0E8h] +
mov [ebp-0B8h] eax +
mov eax [ebp-0E4h] +
lea ecx [ebp-0D0h] +
mov [ebp-0B4h] eax +
call ??0CDC@@QAE@XZ  +
push dword ptr [ebp-0B0h]  +
xor ebx ebx +
lea ecx [ebp-0D0h] +
mov [ebp-4] ebx +
call ?Attach@CDC@@QAEHPAUHDC__@@@Z  +
mov edi ds:GetSysColor +
push 14h  +
call edi  +
push eax  +
push 10h  +
call edi  +
push eax  +
lea eax [ebp-0C0h] +
push eax  +
lea ecx [ebp-0D0h] +
call ?Draw3dRect@CDC@@QAEXPBUtagRECT@@KK@Z  +
mov ecx [ebp-0C0h] +
mov eax [ebp-0B8h] +
cmp ecx eax +
jle loc_10165E2  +
mov [ebp-0C0h] eax +
mov [ebp-0B8h] ecx +
mov eax [esi+5Ch] +
cmp [eax-8] ebx +
jnz loc_10165F6  +
mov eax [esi+60h] +
cmp [eax-8] ebx +
jz loc_10167A7  +
push 0FFFFFFF6h  +
push 0FFFFFFF6h  +
lea eax [ebp-0C0h] +
push eax  +
call ds:InflateRect  +
push 11h  +
lea ecx [ebp-0D0h] +
call ?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z  +
push 7  +
mov [ebp-0F0h] eax +
call edi  +
push eax  +
lea ecx [ebp-0D0h] +
call ?SetTextColor@CDC@@UAEKK@Z  +
push 1  +
lea ecx [ebp-0D0h] +
mov [ebp-0F4h] eax +
call ?SetBkMode@CDC@@QAEHH@Z  +
mov [ebp-0ECh] eax +
mov eax [esi+5Ch] +
cmp [eax-8] ebx +
jz loc_101674F  +
push 11h  +
lea ecx [ebp-0D0h] +
call ?SelectStockObject@CDC@@UAEPAVCGdiObject@@H@Z  +
mov ebx eax +
lea eax [ebp-6Ch] +
push eax  +
push 5Ch  +
push dword ptr [ebx+4]  +
call ds:GetObjectW  +
mov eax [ebp-6Ch] +
and dword ptr [ebp-0D4h] 0 +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
mov edi offset off_1002A44 +
mov [ebp-6Ch] eax +
mov dword ptr [ebp-5Ch] 2BCh +
mov [ebp-0D8h] edi +
lea eax [ebp-6Ch] +
push eax  +
lea ecx [ebp-0D8h] +
mov byte ptr [ebp-4] 1 +
call sub_1014700  +
lea eax [ebp-0D8h] +
push eax  +
lea ecx [ebp-0D0h] +
call ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z  +
lea eax [ebp-0C0h] +
push eax  +
lea eax [ebp-114h] +
push eax  +
call ds:CopyRect  +
mov eax [esi+5Ch] +
mov ecx [eax-8] +
push 410h  +
lea edx [ebp-114h] +
push edx  +
push ecx  +
push eax  +
mov eax [ebp-0D0h] +
lea ecx [ebp-0D0h] +
call dword ptr [eax+70h]  +
mov [ebp-0B0h] eax +
mov eax [esi+5Ch] +
mov ecx [eax-8] +
push 10h  +
lea edx [ebp-0C0h] +
push edx  +
push ecx  +
push eax  +
mov eax [ebp-0D0h] +
lea ecx [ebp-0D0h] +
call dword ptr [eax+70h]  +
mov eax [ebp-0BCh] +
mov ecx [ebp-0B0h] +
lea eax [eax+ecx+5] +
push ebx  +
lea ecx [ebp-0D0h] +
mov [ebp-0BCh] eax +
call ?SelectObject@CDC@@UAEPAVCFont@@PAV2@@Z  +
lea ecx [ebp-0D8h] +
mov byte ptr [ebp-4] 0 +
mov [ebp-0D8h] edi +
call sub_100DBA7  +
xor ebx ebx +
mov eax [esi+60h] +
cmp [eax-8] ebx +
jz loc_1016774  +
mov ecx [eax-8] +
push 10h  +
lea edx [ebp-0C0h] +
push edx  +
push ecx  +
push eax  +
mov eax [ebp-0D0h] +
lea ecx [ebp-0D0h] +
call dword ptr [eax+70h]  +
push dword ptr [ebp-0F0h]  +
lea ecx [ebp-0D0h] +
call sub_1014723  +
push dword ptr [ebp-0F4h]  +
lea ecx [ebp-0D0h] +
call ?SetTextColor@CDC@@UAEKK@Z  +
push dword ptr [ebp-0ECh]  +
lea ecx [ebp-0D0h] +
call ?SetBkMode@CDC@@QAEHH@Z  +
lea ecx [ebp-0D0h] +
call ?Detach@CDC@@QAEPAUHDC__@@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0D0h] +
call ??1CDC@@UAE@XZ  +
lea eax [ebp-0ACh] +
push eax  +
push dword ptr [esi+4]  +
call ds:EndPaint  +
xor eax eax +
call sub_1019FA8  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+rcSrc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov ecx esi +
call sub_1014C14  +
mov ebx ds:CopyRect +
mov edi eax +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+X] +
push eax  +
call ebx  +
add dword ptr [ebp-1Ch] 4 +
push 3  +
pop eax  +
add [ebp+X] eax +
test edi edi +
jz loc_1016823  +
mov eax edi +
mov ecx [ebp-14h] +
sub ecx eax +
mov eax [ebp+rcSrc.right] +
sub eax [ebp+rcSrc.left] +
push 64h  +
imul eax [esi+18h] +
pop edi  +
cdq   +
idiv  edi +
mov [ebp-14h] ecx +
sub ecx [ebp-1Ch] +
push 0  +
push ecx  +
lea edi [esi+10h] +
mov ecx edi +
add eax [ebp+rcSrc.left] +
mov [ebp-18h] eax +
sub eax [ebp+X] +
push eax  +
push dword ptr [ebp-1Ch]  +
push [ebp+X]  +
call sub_1014744  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call ebx  +
mov eax [ebp-18h] +
mov ecx [ebp+var_28] +
mov edx [ebp-1Ch] +
add eax 3 +
mov [ebp+var_30] eax +
mov eax [ebp-14h] +
sub ecx 3 +
push 0  +
mov [ebp+var_24] eax +
mov [ebp+var_28] ecx +
sub ecx [ebp+var_30] +
sub eax edx +
push eax  +
push ecx  +
push edx  +
push [ebp+var_30]  +
lea ebx [esi+14h] +
mov ecx ebx +
mov [ebp+var_2C] edx +
call sub_1014744  +
lea eax [ebp+X] +
push eax  +
push dword ptr [edi]  +
mov edi ds:GetWindowRect +
call edi  +
lea eax [ebp+var_30] +
push eax  +
push dword ptr [ebx]  +
call edi  +
xor eax eax +
lea edi [ebp+Point.y] +
stos   +
lea edi [ebp+var_C] +
stos   +
mov eax [ebp+X] +
mov edi ds:ScreenToClient +
mov [ebp+Point.x] eax +
mov eax [ebp-1Ch] +
mov [ebp+Point.y] eax +
mov eax [ebp-18h] +
mov [ebp+var_10] eax +
mov eax [ebp-14h] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov eax [ebp+Point.x] +
mov [ebp+X] eax +
mov eax [ebp+Point.y] +
mov [ebp-1Ch] eax +
mov eax [ebp+var_10] +
mov [ebp-18h] eax +
mov eax [ebp+var_C] +
mov [ebp-14h] eax +
mov eax [ebp+var_30] +
mov [ebp+Point.x] eax +
mov eax [ebp+var_2C] +
mov [ebp+Point.y] eax +
mov eax [ebp+var_28] +
mov [ebp+var_10] eax +
mov eax [ebp+var_24] +
mov [ebp+var_C] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
mov edx [ebp+var_C] +
mov ecx [ebp+Point.y] +
mov edi [ebp-18h] +
mov eax [ebp+Point.x] +
mov [ebp+var_24] edx +
mov edx [ebp+X] +
cmp edx edi +
mov [ebp+var_2C] ecx +
mov ecx [ebp+var_10] +
mov [ebp+var_30] eax +
mov [ebp+var_28] ecx +
jl loc_1016968  +
jnz loc_1016954  +
cmp eax ecx +
jl loc_1016968  +
cmp edx ecx +
jl loc_101695B  +
lea ecx [edx-3] +
push dword ptr [ebp-14h]  +
push ecx  +
push dword ptr [ebp-1Ch]  +
add ecx 0FFFFFFFDh +
push ecx  +
jmp loc_101697A  +
cmp edi eax +
jl loc_101696F  +
lea edi [eax-3] +
push dword ptr [ebp-14h]  +
lea eax [edi+3] +
push eax  +
push dword ptr [ebp-1Ch]  +
push edi  +
lea eax [esi+34h] +
push eax  +
call ds:SetRect  +
push 1  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
push dword ptr [esi+4]  +
call ds:UpdateWindow  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+374h] +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
and ebx 5 +
push edi  +
test eax eax +
jz loc_10169C7  +
call sub_1014C14  +
mov edi ds:ShowWindow +
push ebx  +
push dword ptr [esi+378h]  +
call edi  +
push ebx  +
push dword ptr [esi+37Ch]  +
call edi  +
push ebx  +
push dword ptr [esi+380h]  +
call edi  +
push ebx  +
push dword ptr [esi+384h]  +
call edi  +
push ebx  +
push dword ptr [esi+388h]  +
call edi  +
push ebx  +
push dword ptr [esi+38Ch]  +
call edi  +
push ebx  +
push dword ptr [esi+390h]  +
call edi  +
push ebx  +
push dword ptr [esi+394h]  +
call edi  +
test ebx ebx +
jnz loc_1016A67  +
mov edi ds:EnableWindow +
push ebx  +
push dword ptr [esi+378h]  +
call edi  +
push ebx  +
push dword ptr [esi+37Ch]  +
call edi  +
push ebx  +
push dword ptr [esi+380h]  +
call edi  +
push ebx  +
push dword ptr [esi+384h]  +
call edi  +
push ebx  +
push dword ptr [esi+388h]  +
call edi  +
push ebx  +
push dword ptr [esi+38Ch]  +
call edi  +
push ebx  +
push dword ptr [esi+390h]  +
call edi  +
push ebx  +
push dword ptr [esi+394h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp eax edi +
jz loc_1016AF0  +
cmp [esi+24h] eax +
jz loc_1016AF0  +
mov [esi+24h] eax +
mov [esi+28h] edi +
call sub_1014241  +
mov ecx [esi+24h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
cmp eax edi +
jz loc_1016AE9  +
push ebx  +
push eax  +
push 0FFFF0002h  +
push 0FFFF0000h  +
mov ecx esi +
call sub_1014B26  +
push edi  +
push edi  +
mov edi ds:SendMessageW +
mov ebx 110Ah +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
push eax  +
push 2  +
push 1102h  +
push dword ptr [esi+10h]  +
call edi  +
push 0  +
push 0  +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
push eax  +
push 9  +
push 110Bh  +
push dword ptr [esi+10h]  +
call edi  +
pop ebx  +
mov ecx esi +
call sub_1015865  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
xor ebx ebx +
cmp edi ebx +
jz loc_1016F28  +
push dword ptr [edi+4Ch]  +
call sub_10192DA  +
cmp [esi+28h] ebx +
jz loc_1016B64  +
cmp [ebp+0Ch] ebx +
jnz loc_1016B64  +
cmp [esi+168h] ebx +
jle loc_1016B62  +
lea eax [esi+68h] +
mov [ebp+8] eax +
push 0  +
push ebx  +
push 101Dh  +
push dword ptr [esi+14h]  +
call ds:SendMessageW  +
mov ecx [esi+28h] +
mov edx [ecx] +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax]  +
call dword ptr [edx+2Ch]  +
add dword ptr [ebp+8] 4 +
inc ebx  +
cmp ebx [esi+168h] +
jl loc_1016B36  +
xor ebx ebx +
mov ecx esi +
call sub_101439A  +
cmp [ebp+0Ch] ebx +
jnz loc_1016C0E  +
mov ecx esi +
call sub_10143B2  +
push ebx  +
lea ecx [ebp-2Ch] +
mov [esi+168h] ebx +
mov eax [edi] +
push ecx  +
mov ecx edi +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_1016C0E  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
cmp dword ptr [ebp-2Ch] 0 +
mov [ebp-4] ebx +
mov [ebp+0Ch] ebx +
jle loc_1016C00  +
lea eax [esi+68h] +
mov [ebp+8] eax +
cmp dword ptr [esi+58h] 0 +
jnz loc_1016BBD  +
mov eax [edi] +
push ebx  +
mov ecx edi +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_1016BFA  +
mov eax [edi] +
push 0  +
push 0  +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
mov ecx edi +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1016BFA  +
push dword ptr [ebp-14h]  +
mov eax [ebp+8] +
push dword ptr [ebp-30h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
mov [eax] ebx +
call sub_101434C  +
inc dword ptr [ebp+0Ch]  +
mov eax [ebp+0Ch] +
add dword ptr [ebp+8] 4 +
mov [esi+168h] eax +
inc ebx  +
cmp ebx [ebp-2Ch] +
jl loc_1016BAB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
xor ebx ebx +
mov [esi+28h] edi +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1016C77  +
cmp [edi+5Ch] ebx +
jnz loc_1016C77  +
push 1  +
push ebx  +
push 67h  +
mov ecx esi +
call sub_1015443  +
mov ecx [esi+24h] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
test eax eax +
jz loc_1016C67  +
push 7F02h  +
push ebx  +
call ds:LoadCursorW  +
mov ebx ds:SetCursor +
push eax  +
call ebx  +
push 0  +
push dword ptr [esi+24h]  +
mov [ebp-30h] eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+5Ch]  +
push dword ptr [ebp-30h]  +
call ebx  +
jmp loc_1016F28  +
mov eax [edi] +
push ebx  +
push dword ptr [esi+24h]  +
mov ecx edi +
call dword ptr [eax+5Ch]  +
jmp loc_1016F28  +
mov eax [edi] +
mov ecx edi +
mov [ebp-30h] ebx +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1016C94  +
mov ecx [esi+24h] +
mov [ebp-30h] ecx +
cmp ecx ebx +
jz loc_1016C94  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+38h]  +
test eax eax +
jl loc_1016EC2  +
mov eax [edi] +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-28h] +
push ecx  +
mov ecx edi +
call dword ptr [eax+18h]  +
test eax eax +
jz loc_1016E54  +
lea ecx [ebp-24h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov dword ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
cmp [ebp-2Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-1Ch] ebx +
mov [ebp+0Ch] ebx +
jle loc_1016E3C  +
cmp [esi+58h] ebx +
jnz loc_1016CFB  +
push dword ptr [ebp+0Ch]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test eax eax +
jnz loc_1016E2D  +
cmp [ebp-28h] ebx +
mov [ebp-18h] ebx +
mov [ebp+8] ebx +
jle loc_1016E2A  +
cmp [esi+58h] ebx +
jnz loc_1016D21  +
push dword ptr [ebp+8]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_1016E0D  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
mov ecx edi +
mov byte ptr [ebp-4] 3 +
call dword ptr [eax+14h]  +
push offset aSwenvservices  +
lea ecx [ebp-14h] +
call sub_1008914  +
test eax eax +
jnz loc_1016D7C  +
mov eax [edi] +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-10h] +
push ecx  +
push 1  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_1016D7C  +
mov ecx [ebp-10h] +
cmp ecx ebx +
jz loc_1016D7C  +
push dword_1026614  +
call sub_1008914  +
test eax eax +
jz loc_1016E1E  +
mov eax [edi] +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx edi +
push dword ptr [ebp+0Ch]  +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_1016E01  +
mov eax [ebp-10h] +
mov eax [eax] +
cmp [eax-8] ebx +
jz loc_1016DAE  +
push eax  +
mov ecx offset dword_1026614 +
call sub_1008914  +
test eax eax +
jnz loc_1016DE8  +
mov eax [edi] +
push ebx  +
push ebx  +
push ebx  +
lea ecx [ebp-24h] +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx edi +
call dword ptr [eax+24h]  +
push 1B4h  +
lea ecx [ebp-20h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-20h]  +
lea ecx [ebp-24h] +
call sub_1008914  +
test eax eax +
jnz loc_1016DE8  +
mov ecx [ebp-10h] +
push 1D1h  +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp-10h] +
mov eax [eax] +
push eax  +
push dword ptr [ebp-18h]  +
mov ecx esi +
push dword ptr [ebp-1Ch]  +
call sub_10142F2  +
inc dword ptr [ebp-18h]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-28h] +
jl loc_1016D0A  +
jmp loc_1016E2A  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
inc dword ptr [ebp-1Ch]  +
inc dword ptr [ebp+0Ch]  +
mov eax [ebp+0Ch] +
cmp eax [ebp-2Ch] +
jl loc_1016CE4  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CString@@QAE@XZ  +
cmp dword ptr [edi+18h] 0FFFFFFFFh +
jz loc_1016E6E  +
push offset loc_100896D  +
push edi  +
push 1030h  +
push dword ptr [esi+14h]  +
call ds:SendMessageW  +
cmp [esi+398h] ebx +
jnz loc_1016E9A  +
cmp [esi+3A0h] ebx +
jnz loc_1016E9A  +
push 2  +
pop eax  +
mov [ebp-60h] eax +
mov [ebp-64h] eax +
lea eax [ebp-70h] +
push eax  +
push ebx  +
push 102Bh  +
push dword ptr [esi+14h]  +
call ds:SendMessageW  +
cmp [ebp-28h] ebx +
jz loc_1016EB4  +
cmp [ebp-2Ch] ebx +
jnz loc_1016EAF  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_1016EB4  +
push ebx  +
push ebx  +
push ebx  +
jmp loc_1016EB9  +
push 1  +
push ebx  +
push 69h  +
mov ecx esi +
call sub_1015443  +
jmp loc_1016F15  +
lea ecx [ebp+8] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp+0Ch] +
mov dword ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp+0Ch] +
push ecx  +
lea ecx [ebp+8] +
push ecx  +
mov ecx edi +
mov byte ptr [ebp-4] 5 +
call dword ptr [eax+3Ch]  +
push 1  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov ecx esi +
call sub_101536C  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_1016F21  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx esi +
call sub_1015865  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
movzx edx ax +
shr eax 10h +
cmp dword ptr [ecx+30h] 0 +
push eax  +
push edx  +
jz loc_1016F52  +
call sub_10150CA  +
jmp loc_1016F57  +
call sub_1014FC4  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pt.y] +
push esi  +
push edi  +
mov edi [ebp+pt.x] +
push eax  +
mov esi ecx +
lea ecx [esi+34h] +
push edi  +
push ecx  +
call ds:PtInRect  +
test eax eax +
jz loc_1016FA4  +
push ebx  +
lea eax [esi+34h] +
push eax  +
lea ebx [esi+44h] +
push ebx  +
mov dword ptr [esi+30h] 1 +
call ds:CopyRect  +
mov ecx esi +
call sub_101504A  +
sub edi [ebx] +
pop ebx  +
mov [esi+54h] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov edi ecx +
push 110Ah  +
push dword ptr [edi+10h]  +
call esi  +
test eax eax +
jz loc_1017004  +
mov [ebp+var_24] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push dword ptr [edi+10h]  +
mov [ebp+lParam] 4 +
call esi  +
test eax eax +
jz loc_1017004  +
cmp [ebp+var_4] 0 +
jz loc_1017004  +
push [ebp+arg_0]  +
mov ecx edi +
push [ebp+var_4]  +
call sub_1016AFB  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10268AC 0 +
push ebx  +
mov ebx ecx +
jnz loc_1017048  +
cmp dword_10268B0 0 +
jnz loc_1017048  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1017048  +
push esi  +
mov esi [eax+5Ch] +
test esi esi +
jz loc_1017047  +
call sub_1015DF7  +
push 0  +
push esi  +
mov ecx ebx +
call sub_1016AFB  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_GS  +
xor eax eax +
push 206h  +
mov [ebp-428h] ax +
xor edi edi +
lea eax [ebp-426h] +
push edi  +
push eax  +
mov [ebp-42Ch] ecx +
call memset  +
mov esi ds:LoadStringW +
add esp 0Ch +
mov ebx 104h +
push ebx  +
lea eax [ebp-220h] +
push eax  +
push 17Ch  +
push dword_1026830  +
call esi  +
push 4  +
lea eax [ebp-18h] +
push eax  +
push 66h  +
push dword_1026830  +
call esi  +
xor ecx ecx +
cmp [ebp-220h] di +
jz loc_10170E2  +
lea eax [ebp-220h] +
cmp word ptr [eax] 7Ch +
jnz loc_10170D5  +
xor edx edx +
mov [eax] dx +
inc ecx  +
lea eax [ebp+ecx*2-220h] +
cmp [eax] di +
jnz loc_10170CA  +
push 58h  +
pop esi  +
push esi  +
lea eax [ebp-488h] +
push edi  +
push eax  +
call memset  +
mov eax [ebp-42Ch] +
mov eax [eax+4] +
mov [ebp-484h] eax +
lea eax [ebp-220h] +
mov [ebp-47Ch] eax +
lea eax [ebp-428h] +
mov [ebp-46Ch] eax +
lea eax [ebp-18h] +
mov [ebp-44Ch] eax +
add esp 0Ch +
lea eax [ebp-488h] +
push eax  +
mov [ebp-488h] esi +
mov [ebp-470h] edi +
mov [ebp-478h] edi +
mov [ebp-468h] ebx +
mov [ebp-464h] edi +
mov [ebp-460h] edi +
mov [ebp-45Ch] edi +
mov [ebp-458h] edi +
mov dword ptr [ebp-454h] 2 +
call ds:GetSaveFileNameW  +
test eax eax +
jz loc_10171C5  +
push 7F02h  +
push edi  +
call ds:LoadCursorW  +
mov esi ds:SetCursor +
push eax  +
call esi  +
push dword ptr [ebp-46Ch]  +
lea ecx [ebp-430h] +
mov ebx eax +
call ??0CString@@QAE@PBG@Z  +
push dword ptr [ebp-470h]  +
mov ecx [ebp-42Ch] +
push dword ptr [ebp-430h]  +
mov [ebp-4] edi +
call sub_1015518  +
push ebx  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-430h] +
call ??1CString@@QAE@XZ  +
call sub_1019FA8  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 680h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov esi 206h +
push esi  +
mov word ptr [ebp+var_624] ax +
xor ebx ebx +
lea eax [ebp+var_624+2] +
push ebx  +
push eax  +
mov [ebp+var_628] ecx +
call memset  +
xor eax eax +
push esi  +
mov word ptr [ebp+var_41C] ax +
lea eax [ebp+var_41C+2] +
push ebx  +
push eax  +
call memset  +
mov esi ds:LoadStringW +
add esp 18h +
mov edi 104h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 6Ah  +
push dword_1026830  +
call esi  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 6Bh  +
push dword_1026830  +
call esi  +
push edi  +
lea eax [ebp+var_41C] +
push eax  +
push 18Ah  +
push dword_1026830  +
call esi  +
xor ecx ecx +
cmp [ebp+Buffer] bx +
jz loc_1017291  +
lea eax [ebp+Buffer] +
cmp word ptr [eax] 7Ch +
jnz loc_1017284  +
xor edx edx +
mov [eax] dx +
inc ecx  +
lea eax [ebp+ecx*2+Buffer] +
cmp [eax] bx +
jnz loc_1017279  +
push 58h  +
pop esi  +
push esi  +
lea eax [ebp+var_680] +
push ebx  +
push eax  +
call memset  +
mov [ebp+var_680.lStructSize] esi +
mov esi [ebp+var_628] +
mov eax [esi+4] +
mov [ebp+var_680.hwndOwner] eax +
lea eax [ebp+Buffer] +
mov [ebp+var_680.lpstrFilter] eax +
lea eax [ebp+var_624] +
mov [ebp+var_680.lpstrFile] eax +
movzx eax word ptr [ebp+var_41C] +
add esp 0Ch +
neg eax  +
sbb eax eax +
lea ecx [ebp+var_41C] +
and eax ecx +
mov [ebp+var_680.lpstrTitle] eax +
lea eax [ebp+var_C] +
mov [ebp+var_680.lpstrDefExt] eax +
lea eax [ebp+var_680] +
push eax  +
mov [ebp+var_680.nFilterIndex] ebx +
mov [ebp+var_680.lpstrCustomFilter] ebx +
mov [ebp+var_680.nMaxFile] edi +
mov [ebp+var_680.lpstrFileTitle] ebx +
mov [ebp+var_680.nMaxFileTitle] ebx +
mov [ebp+var_680.lpstrInitialDir] ebx +
mov [ebp+var_680.Flags] 2 +
call ds:GetSaveFileNameW  +
test eax eax +
jz loc_1017362  +
push 7F02h  +
push ebx  +
call ds:LoadCursorW  +
mov edi ds:SetCursor +
push eax  +
call edi  +
mov ebx eax +
movzx eax [ebp+var_680.nFileExtension] +
push eax  +
push [ebp+var_680.lpstrFile]  +
mov ecx esi +
call sub_1015659  +
push ebx  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1019E83  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ds:IsDlgButtonChecked +
mov esi ecx +
push 0CDh  +
push dword ptr [esi+4]  +
call edi  +
push 0CCh  +
push dword ptr [esi+4]  +
mov [esi+3A4h] eax +
call edi  +
xor edi edi +
lea ecx [esi+3A0h] +
xor ebx ebx +
inc edi  +
mov [esi+3A8h] eax +
cmp [ecx] ebx +
jnz loc_10173F8  +
mov [esi+398h] edi +
mov [esi+39Ch] ebx +
mov [ecx] edi +
mov dword ptr [esi+3B4h] 0FFFFFFFEh +
cmp eax ebx +
jz loc_10173D7  +
mov ecx esi +
call sub_10142A0  +
jmp loc_10173DF  +
mov ecx [esi+24h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx esi +
mov [esi+3B0h] eax +
call sub_1014831  +
push dword ptr [esi+394h]  +
call ds:SetFocus  +
mov ecx esi +
call sub_1015F32  +
test eax eax +
jnz loc_1017475  +
mov ecx esi +
mov [esi+398h] edi +
mov [esi+39Ch] ebx +
call sub_1014831  +
push dword ptr [esi+394h]  +
call ds:SetFocus  +
cmp [esi+3B0h] ebx +
jz loc_1017475  +
push edi  +
push ebx  +
push 15Ch  +
mov ecx esi +
call sub_1015443  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1017460  +
cmp [esi+3A4h] ebx +
jnz loc_1017460  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
push ebx  +
push dword ptr [esi+24h]  +
call dword ptr [eax+5Ch]  +
jmp loc_1017475  +
push dword ptr [esi+3B0h]  +
push ebx  +
push 401h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+39Ch] edi +
jz loc_10174CF  +
push dword ptr [esi+38Ch]  +
mov ebx ds:SetFocus +
mov [esi+398h] edi +
mov [esi+3A0h] edi +
call ebx  +
push edi  +
mov ecx esi +
call sub_10142A0  +
push eax  +
mov ecx esi +
call sub_1016AFB  +
mov ecx esi +
call sub_1014831  +
push dword ptr [esi+388h]  +
call ebx  +
jmp loc_10175CB  +
call sub_1015F32  +
test eax eax +
jnz loc_10175CB  +
cmp [esi+3A8h] edi +
jz loc_10174EC  +
mov [esi+3B0h] edi +
jmp loc_101753B  +
mov ecx [esi+3B0h] +
mov dword ptr [esi+3B4h] 0FFFFFFFEh +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ebx eax +
cmp ebx edi +
jnz loc_1017535  +
cmp [esi+3B0h] edi +
jz loc_1017535  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ebx eax +
cmp ebx edi +
jnz loc_1017535  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [esi+3B0h] eax +
cmp eax edi +
jnz loc_101750F  +
mov [esi+3B0h] ebx +
mov ecx esi +
cmp [esi+3B0h] edi +
jnz loc_1017582  +
mov [esi+398h] edi +
mov [esi+3A0h] edi +
call sub_1014831  +
push 75h  +
push 157h  +
mov ecx esi +
call sub_1014A23  +
push edi  +
mov ecx esi +
call sub_10142A0  +
push eax  +
mov ecx esi +
call sub_1016AFB  +
push dword ptr [esi+38Ch]  +
call ds:SetFocus  +
jmp loc_10175CB  +
push edi  +
push edi  +
push 15Ch  +
call sub_1015443  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_10175B6  +
cmp [esi+3A4h] edi +
jnz loc_10175B6  +
mov ecx [esi+3B0h] +
mov eax [ecx] +
push edi  +
push dword ptr [esi+24h]  +
call dword ptr [eax+5Ch]  +
jmp loc_10175CB  +
push dword ptr [esi+3B0h]  +
push edi  +
push 401h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 0C9h +
jz loc_101760B  +
dec eax  +
jnz loc_101763B  +
mov edx [ebp+arg_8] +
mov eax [edx+8] +
cmp eax 0FFFFFF94h +
jz loc_10175FD  +
cmp eax 0FFFFFF9Bh +
jnz loc_101763B  +
call sub_1015865  +
jmp loc_101763B  +
push [ebp+arg_C]  +
push edx  +
push [ebp+arg_0]  +
call sub_10143E7  +
jmp loc_101763B  +
mov eax [ebp+arg_8] +
mov edx [eax+8] +
cmp edx 0FFFFFE3Ah +
jz loc_101762F  +
cmp edx 0FFFFFE3Dh +
jnz loc_101763B  +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_0]  +
call sub_101700F  +
jmp loc_101763B  +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_0]  +
call sub_10144B3  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push dword ptr [esi+1Ch]  +
call sub_1016A70  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
lea ecx [esi+0Ch] +
call ?Right@CString@@QBE?AV1@H@Z  +
push offset a_xml  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
mov ebx eax +
pop ecx  +
neg ebx  +
pop ecx  +
sbb bl bl +
lea ecx [ebp+var_4] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1017698  +
mov eax [esi+1Ch] +
lea ecx [eax+14h] +
push ecx  +
lea ecx [eax+0Ch] +
call sub_10147C9  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_10176AE  +
cmp ecx [esi+1Ch] +
jz loc_10176AA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+20h] 0 +
mov ecx esi +
call sub_1015865  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_catch  +
mov esi [ebp-18h] +
mov eax [esi] +
xor ebx ebx +
push ebx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx esi +
call ?Delete@CException@@QAEXXZ  +
mov ecx [ebp-14h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax offset loc_101772C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
call ds:SetFocus  +
mov eax [ebp+arg_8] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+arg_8] +
push eax  +
mov ecx esi +
call sub_1016F62  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 28h +
push esi  +
mov esi ecx +
test eax eax +
jz loc_10178B5  +
cmp dword ptr [esi+398h] 0 +
jz loc_101786B  +
cmp eax [esi+3B0h] +
jnz loc_101786B  +
call sub_1017480  +
jmp loc_10178B5  +
push edi  +
mov edi ds:SendMessageW +
push 0  +
push 9  +
push 110Ah  +
push dword ptr [esi+10h]  +
call edi  +
test eax eax +
jz loc_10178B4  +
mov [ebp+var_24] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push dword ptr [esi+10h]  +
mov [ebp+lParam] 4 +
call edi  +
test eax eax +
jz loc_10178B4  +
mov eax [ebp+arg_8] +
cmp [ebp+var_4] eax +
jnz loc_10178B4  +
push 1  +
push eax  +
mov ecx esi +
call sub_1016AFB  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call ds:GetFocus  +
cmp dword ptr [esi+374h] 0 +
jz loc_1017916  +
cmp eax [esi+38Ch] +
jz loc_101790D  +
cmp eax [esi+394h] +
jz loc_101790D  +
push dword ptr [esi+388h]  +
mov edi ds:IsWindowEnabled +
call edi  +
test eax eax +
jnz loc_1017904  +
push dword ptr [esi+390h]  +
call edi  +
test eax eax +
jz loc_1017916  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_1017376  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_1015E6B  +
pop edi  +
pop esi  +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov edi ecx +
xor ebx ebx +
push eax  +
lea ecx [ebp-248h] +
mov [ebp-224h] edi +
mov [ebp-21Ch] eax +
mov [ebp-220h] ebx +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp-248h] +
push eax  +
mov [ebp-4] ebx +
call sub_10147E3  +
test eax eax +
jnz loc_1017A5F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101797D  +
and eax 0FFFFh +
or eax 80070000h +
lea ecx [ebp-21Ch] +
mov esi eax +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-224h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
push 18Fh  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 2 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 75h  +
lea ecx [ebp-224h] +
call ?LoadStringW@CString@@QAEHI@Z  +
cmp esi ebx +
jz loc_1017A08  +
push 802h  +
call loc_1019A30  +
pop ecx  +
mov [ebp-238h] eax +
cmp eax ebx +
jz loc_10179E5  +
push ebx  +
push 400h  +
push eax  +
push ebx  +
push esi  +
push edi  +
call sub_101499E  +
add esp 18h +
push offset asc_1007370  +
lea ecx [ebp-21Ch] +
call ??YCString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-238h]  +
lea ecx [ebp-21Ch] +
call ??YCString@@QAEABV0@PBG@Z  +
jmp loc_1017A0B  +
push 2  +
pop esi  +
mov eax [ebp-21Ch] +
cmp [eax-8] ebx +
jz loc_1017A27  +
push ebx  +
push dword ptr [ebp-224h]  +
push eax  +
push dword ptr [edi+4]  +
call ds:MessageBoxW  +
lea ecx [ebp-224h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-21Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov ebx esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-248h] +
call ??1CString@@QAE@XZ  +
mov eax ebx +
call sub_1019FA8  +
retn 8  +
mov esi ds:_wcsicmp +
cmp [edi+20h] ebx +
jz loc_1017A9B  +
push 4  +
lea eax [ebp-238h] +
push eax  +
lea ecx [edi+0Ch] +
call ?Right@CString@@QBE?AV1@H@Z  +
push offset a_xml  +
push dword ptr [eax]  +
mov dword ptr [ebp-220h] 1 +
call esi  +
pop ecx  +
pop ecx  +
mov byte ptr [ebp-229h] 1 +
test eax eax +
jz loc_1017AA1  +
mov [ebp-229h] bl +
test byte ptr [ebp-220h] 1 +
jz loc_1017AB5  +
lea ecx [ebp-238h] +
call ??1CString@@QAE@XZ  +
cmp [ebp-229h] bl +
jz loc_1017AC4  +
mov ecx edi +
call sub_1017646  +
mov eax [edi+20h] +
push dword_1026830  +
mov [ebp-23Ch] eax +
call sub_10092F2  +
mov eax [ebp+0Ch] +
mov ecx [ebp-21Ch] +
lea edi [ecx+eax*2] +
push offset aNfo  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1017C57  +
push dword ptr [ebp-21Ch]  +
lea ecx [ebp-220h] +
call ??0CString@@QAE@PBG@Z  +
mov ecx [ebp-224h] +
lea eax [ebp-220h] +
push eax  +
call sub_1014F50  +
lea ecx [ebp-220h] +
mov esi eax +
call ??1CString@@QAE@XZ  +
cmp esi ebx +
jz loc_1017B46  +
push 75h  +
push 18Eh  +
mov ecx [ebp-224h] +
call sub_1014A23  +
mov ebx 80004005h +
jmp loc_1017A46  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push 1  +
push 80000000h  +
push dword ptr [ebp-21Ch]  +
call ds:CreateFileW  +
mov [ebp-220h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1017B72  +
push 75h  +
push 4D8h  +
jmp loc_1017B31  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-244h] eax +
mov byte ptr [ebp-4] 3 +
cmp eax ebx +
jz loc_1017B93  +
mov ecx eax +
call sub_1008F08  +
mov esi eax +
jmp loc_1017B95  +
xor esi esi +
mov [ebp-4] bl +
cmp esi ebx +
jz loc_1017BCA  +
push dword ptr [ebp-21Ch]  +
mov ecx esi +
push dword ptr [ebp-220h]  +
call sub_1008DF7  +
mov edi eax +
cmp edi ebx +
jge loc_1017BBF  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
jmp loc_1017BCF  +
mov eax [ebp-224h] +
mov [eax+20h] esi +
jmp loc_1017BCF  +
mov edi 80004005h +
push dword ptr [ebp-220h]  +
call ds:CloseHandle  +
cmp edi ebx +
jge loc_1018045  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-244h] eax +
mov byte ptr [ebp-4] 4 +
cmp eax ebx +
jz loc_1017C04  +
mov ecx eax +
call sub_1008F1E  +
mov esi eax +
jmp loc_1017C06  +
xor esi esi +
mov [ebp-4] bl +
cmp esi ebx +
jnz loc_1017C17  +
mov edi 80004005h +
jmp loc_101806A  +
push dword ptr [ebp-21Ch]  +
mov ecx esi +
call sub_1008E2B  +
mov edi eax +
cmp edi ebx +
jge loc_1017C49  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov ecx [ebp-224h] +
push 75h  +
push 4D8h  +
call sub_1014A23  +
jmp loc_1018041  +
mov eax [ebp-224h] +
mov [eax+20h] esi +
jmp loc_1018041  +
push offset aCab  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101802A  +
lea ecx [ebp-230h] +
call ??0CString@@QAE@XZ  +
push offset dword_10016F0  +
lea ecx [ebp-220h] +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp-220h] +
push eax  +
push 1  +
lea eax [ebp-230h] +
push eax  +
mov byte ptr [ebp-4] 6 +
call sub_1013F95  +
lea ecx [ebp-220h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-230h] +
cmp [eax-8] ebx +
jz loc_1018013  +
push dword ptr [ebp-21Ch]  +
lea ecx [ebp-220h] +
call ??0CString@@QAE@PBG@Z  +
lea eax [ebp-230h] +
push eax  +
lea eax [ebp-220h] +
push eax  +
mov byte ptr [ebp-4] 7 +
call sub_101312F  +
lea ecx [ebp-220h] +
mov esi eax +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
cmp esi ebx +
jz loc_1018013  +
lea ecx [ebp-228h] +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-234h] +
mov byte ptr [ebp-4] 8 +
call ??0CString@@QAE@XZ  +
mov esi ds:RegOpenKeyExW +
lea eax [ebp-240h] +
push eax  +
push 1  +
push ebx  +
push offset SubKey  +
mov edi 80000002h +
push edi  +
mov byte ptr [ebp-4] 9 +
call esi  +
test eax eax +
jnz loc_1017E7A  +
lea eax [ebp-24Ch] +
push eax  +
lea eax [ebp-218h] +
push eax  +
lea eax [ebp-244h] +
push eax  +
push 1000FFFFh  +
push offset ValueName  +
push ebx  +
push dword ptr [ebp-240h]  +
mov dword ptr [ebp-24Ch] 208h +
call ds:RegGetValueW  +
cmp eax ebx +
jnz loc_1017DE0  +
xor eax eax +
cmp dword ptr [ebp-244h] 1 +
mov [ebp-12h] ax +
jnz loc_1017DA3  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-234h] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_1017E6E  +
push dword ptr [ebp-240h]  +
call ds:RegCloseKey  +
lea ecx [ebp-234h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-230h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_1017B3C  +
cmp eax 2 +
jnz loc_1017E6E  +
lea eax [ebp-220h] +
push eax  +
push 2  +
push ebx  +
push offset SubKey  +
push edi  +
call esi  +
test eax eax +
jnz loc_1017E6E  +
push offset aIncident_xml  +
lea ecx [ebp-21Ch] +
call ??0CString@@QAE@PBG@Z  +
mov eax [ebp-21Ch] +
mov eax [eax-8] +
lea ecx [eax+eax] +
push ecx  +
push eax  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 0Ah +
call ?GetBuffer@CString@@QAEPAGH@Z  +
push eax  +
push 1  +
push ebx  +
push offset ValueName  +
push dword ptr [ebp-220h]  +
call ds:RegSetValueExW  +
lea eax [ebp-21Ch] +
push eax  +
lea ecx [ebp-234h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp-220h]  +
call ds:RegCloseKey  +
lea ecx [ebp-21Ch] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
push dword ptr [ebp-240h]  +
call ds:RegCloseKey  +
push ecx  +
lea eax [ebp-234h] +
mov ecx esp +
mov [ebp-23Ch] esp +
push eax  +
call ??0CString@@QAE@ABV0@@Z  +
push ecx  +
lea eax [ebp-230h] +
mov ecx esp +
mov [ebp-238h] esp +
push eax  +
mov byte ptr [ebp-4] 0Bh +
call ??0CString@@QAE@ABV0@@Z  +
mov byte ptr [ebp-4] 9 +
call sub_10138B4  +
cmp eax ebx +
jz loc_1017F7C  +
push offset asc_10072CC  +
lea ecx [ebp-238h] +
call ??0CString@@QAE@PBD@Z  +
lea eax [ebp-238h] +
push eax  +
lea eax [ebp-230h] +
push eax  +
lea eax [ebp-23Ch] +
push eax  +
mov byte ptr [ebp-4] 0Ch +
call ??H@YG?AVCString@@ABV0@0@Z  +
push eax  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 0Dh +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-23Ch] +
mov byte ptr [ebp-4] 0Ch +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-238h] +
mov byte ptr [ebp-4] 9 +
call ??1CString@@QAE@XZ  +
lea eax [ebp-234h] +
push eax  +
lea ecx [ebp-228h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov esi [ebp-228h] +
push offset a_xml  +
lea ecx [ebp-228h] +
call ?Find@CString@@QBEHPBG@Z  +
mov ecx [ebp-224h] +
inc eax  +
push eax  +
push esi  +
call sub_101791E  +
lea ecx [ebp-234h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-230h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_1017A46  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-230h] +
push eax  +
call sub_1013921  +
mov edi [ebp-228h] +
mov eax [edi-8] +
cmp eax ebx +
jz loc_1017FF5  +
lea esi [eax-1] +
cmp esi ebx +
jz loc_1017FF5  +
push esi  +
lea ecx [ebp-228h] +
call sub_100B7D7  +
cmp ax 2Eh +
jz loc_1017FB8  +
dec esi  +
jnz loc_1017FA3  +
cmp esi ebx +
jz loc_1017FF5  +
mov ecx [ebp-224h] +
inc esi  +
push esi  +
push edi  +
call sub_101791E  +
lea ecx [ebp-234h] +
mov esi eax +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-230h] +
jmp loc_1017A3C  +
lea ecx [ebp-234h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-228h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-224h] +
push 75h  +
push 15Eh  +
call sub_1014A23  +
jmp loc_1017DCD  +
mov ecx [ebp-224h] +
push 75h  +
push 166h  +
call sub_1014A23  +
mov edi 80004005h +
cmp edi ebx +
jl loc_101806A  +
mov ecx [ebp-23Ch] +
mov esi [ebp-224h] +
cmp ecx ebx +
jz loc_1018060  +
cmp ecx [esi+20h] +
jz loc_1018060  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
push dword ptr [esi+20h]  +
mov ecx esi +
call sub_1016A70  +
mov ebx edi +
jmp loc_1017A46  +
***
call __EH_prolog3  +
mov esi ecx +
mov ecx [esi+3D8h] +
xor ebx ebx +
cmp ecx ebx +
jz loc_101809D  +
push 1  +
call sub_1014AFD  +
mov [esi+3D8h] ebx +
push 18h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-18h] ecx +
mov [ebp-4] ebx +
cmp ecx ebx +
jz loc_10180B8  +
call sub_101479C  +
jmp loc_10180BA  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi+3D8h] eax +
cmp eax ebx +
jz loc_1018172  +
mov edx [esi+8] +
xor ecx ecx +
cmp [edx-8] ebx +
push edx  +
setnz cl  +
push ecx  +
push dword ptr [esi+4]  +
mov ecx eax +
call sub_1008009  +
push ebx  +
push offset sub_10085B6  +
push dword ptr [esi+4]  +
push 0CBh  +
push dword ptr [esi]  +
call ds:DialogBoxParamW  +
cmp eax 1 +
jnz loc_1018172  +
push 7F02h  +
push ebx  +
call ds:LoadCursorW  +
mov edi ds:SetCursor +
push eax  +
call edi  +
lea ecx [ebp-10h] +
mov [ebp-18h] eax +
call ??0CString@@QAE@XZ  +
mov ecx [esi+3D8h] +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov dword ptr [ebp-4] 1 +
call sub_1008032  +
cmp [ebp-14h] ebx +
jnz loc_1018145  +
lea ecx [ebp-10h] +
call ?Empty@CString@@QAEXXZ  +
push dword ptr [esi+8]  +
push dword ptr [ebp-10h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018161  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_10176BE  +
push dword ptr [ebp-18h]  +
call edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 478h +
mov eax dword_1024414 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
push 206h  +
mov word ptr [ebp+var_41C] ax +
xor edi edi +
lea eax [ebp+var_41C+2] +
push edi  +
push eax  +
mov [ebp+var_420] ecx +
call memset  +
mov esi ds:LoadStringW +
add esp 0Ch +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push 65h  +
push dword_1026830  +
call esi  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 66h  +
push dword_1026830  +
call esi  +
xor ecx ecx +
cmp [ebp+Buffer] di +
jz loc_101820F  +
lea eax [ebp+Buffer] +
cmp word ptr [eax] 7Ch +
jnz loc_1018202  +
xor edx edx +
mov [eax] dx +
inc ecx  +
lea eax [ebp+ecx*2+Buffer] +
cmp [eax] di +
jnz loc_10181F7  +
push 58h  +
pop esi  +
push esi  +
lea eax [ebp+var_478] +
push edi  +
push eax  +
call memset  +
mov [ebp+var_478.lStructSize] esi +
mov esi [ebp+var_420] +
mov eax [esi+4] +
mov [ebp+var_478.hwndOwner] eax +
lea eax [ebp+Buffer] +
mov [ebp+var_478.lpstrFilter] eax +
lea eax [ebp+var_41C] +
mov [ebp+var_478.lpstrFile] eax +
lea eax [ebp+var_C] +
mov [ebp+var_478.lpstrDefExt] eax +
add esp 0Ch +
lea eax [ebp+var_478] +
push eax  +
mov [ebp+var_478.nFilterIndex] 1 +
mov [ebp+var_478.lpstrCustomFilter] edi +
mov [ebp+var_478.nMaxFile] 104h +
mov [ebp+var_478.lpstrFileTitle] edi +
mov [ebp+var_478.nMaxFileTitle] edi +
mov [ebp+var_478.lpstrInitialDir] edi +
mov [ebp+var_478.lpstrTitle] edi +
mov [ebp+var_478.Flags] 1804h +
call ds:GetOpenFileNameW  +
test eax eax +
jz loc_10182BB  +
movzx eax [ebp+var_478.nFileExtension] +
push eax  +
push [ebp+var_478.lpstrFile]  +
mov ecx esi +
call sub_101791E  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1019E83  +
leave   +
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
mov edi 0C9h +
push edi  +
push dword ptr [ebx]  +
call ds:LoadMenuW  +
push eax  +
push dword ptr [ebx+4]  +
mov [ebx+3CCh] eax +
call ds:SetMenu  +
mov esi ds:GetDlgItem +
push 0CAh  +
push dword ptr [ebx+4]  +
call esi  +
push edi  +
push dword ptr [ebx+4]  +
mov [ebx+14h] eax +
call esi  +
mov edi ds:SendMessageW +
lea ecx [ebp-0A0h] +
push ecx  +
mov [ebx+10h] eax +
xor eax eax +
push eax  +
push 1061h  +
push dword ptr [ebx+14h]  +
mov dword ptr [ebp-0A0h] 26h +
mov [ebp-98h] eax +
mov dword ptr [ebp-94h] offset dword_10016F0 +
mov [ebp-84h] eax +
call edi  +
push 0D0h  +
push dword ptr [ebx+4]  +
call esi  +
push 0CBh  +
push dword ptr [ebx+4]  +
mov [ebx+378h] eax +
call esi  +
push 0CCh  +
push dword ptr [ebx+4]  +
mov [ebx+37Ch] eax +
call esi  +
push 0CDh  +
push dword ptr [ebx+4]  +
mov [ebx+380h] eax +
call esi  +
push 0D1h  +
push dword ptr [ebx+4]  +
mov [ebx+384h] eax +
call esi  +
push 3  +
push dword ptr [ebx+4]  +
mov [ebx+388h] eax +
call esi  +
push 5  +
push dword ptr [ebx+4]  +
mov [ebx+38Ch] eax +
call esi  +
push 4  +
push dword ptr [ebx+4]  +
mov [ebx+390h] eax +
call esi  +
mov [ebx+394h] eax +
lea eax [ebx+16Ch] +
push eax  +
push 104h  +
call ds:GetCurrentDirectoryW  +
lea ecx [ebx+8] +
call ?Empty@CString@@QAEXXZ  +
push 420h  +
xor esi esi +
push esi  +
push 1036h  +
push dword ptr [ebx+14h]  +
mov [ebx+64h] esi +
call edi  +
lea ecx [ebx+5Ch] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [ebx+60h] +
call ?Empty@CString@@QAEXXZ  +
mov [ebx+2Ch] esi +
mov [ebx+30h] esi +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebx+34h] +
push eax  +
call ds:SetRect  +
xor eax eax +
inc eax  +
push eax  +
push esi  +
push 445h  +
push dword ptr [ebx+37Ch]  +
mov dword ptr [ebx+18h] 21h +
mov [ebx+58h] eax +
mov [ebx+374h] eax +
call edi  +
push esi  +
push 1  +
push 459h  +
push dword ptr [ebx+37Ch]  +
call edi  +
mov esi ds:GetWindowRect +
lea eax [ebp-64h] +
push eax  +
push dword ptr [ebx+388h]  +
call esi  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebx+390h]  +
call esi  +
lea eax [ebp-54h] +
push eax  +
push dword ptr [ebx+38Ch]  +
call esi  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebx+394h]  +
call esi  +
mov eax [ebp-5Ch] +
mov ecx [ebp-2Ch] +
sub eax [ebp-64h] +
sub ecx [ebp-34h] +
cmp eax ecx +
jle loc_101849D  +
lea esi [ebp-64h] +
lea edi [ebp-34h] +
jmp loc_10184A3  +
lea esi [ebp-34h] +
lea edi [ebp-64h] +
mov eax [ebp-3Ch] +
mov ecx [ebp-4Ch] +
sub eax [ebp-44h] +
sub ecx [ebp-54h] +
movs   +
cmp ecx eax +
movs   +
movs   +
movs   +
jle loc_10184BF  +
lea esi [ebp-54h] +
lea edi [ebp-44h] +
jmp loc_10184C5  +
lea esi [ebp-44h] +
lea edi [ebp-54h] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
inc esi  +
push esi  +
lea eax [ebp-64h] +
push eax  +
lea ecx [ebx+388h] +
call sub_1014769  +
push esi  +
lea eax [ebp-34h] +
push eax  +
lea ecx [ebx+390h] +
call sub_1014769  +
push esi  +
lea eax [ebp-54h] +
push eax  +
lea ecx [ebx+38Ch] +
call sub_1014769  +
push esi  +
lea eax [ebp-44h] +
push eax  +
lea ecx [ebx+394h] +
call sub_1014769  +
xor esi esi +
mov edi offset dword_10016F0 +
push edi  +
lea ecx [ebp-14h] +
mov [ebx+398h] esi +
mov [ebx+39Ch] esi +
mov [ebx+3A0h] esi +
call ??0CString@@QAE@PBG@Z  +
push eax  +
lea ecx [ebx+3ACh] +
mov [ebp-4] esi +
call ??4CString@@QAEABV0@ABV0@@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov ecx ebx +
mov [ebx+3B0h] esi +
mov [ebx+3A4h] esi +
mov [ebx+3A8h] esi +
call sub_10169A8  +
mov ecx ebx +
call sub_1014831  +
lea ecx [ebx+3B8h] +
push edi  +
mov [ebx+168h] esi +
call ??4CString@@QAEABV0@PBG@Z  +
lea ecx [ebx+3BCh] +
push edi  +
call ??4CString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebx+3C0h] +
call ??4CString@@QAEABV0@PBG@Z  +
push 24h  +
mov [ebx+3C8h] esi +
mov [ebx+3C4h] esi +
mov [ebx+1Ch] esi +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
mov dword ptr [ebp-4] 1 +
cmp eax esi +
jz loc_10185C4  +
mov ecx eax +
call sub_100AD51  +
mov [ebp-10h] eax +
jmp loc_10185C7  +
mov [ebp-10h] esi +
mov ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp ecx esi +
jz loc_10185EC  +
push dword ptr [ebx+4]  +
mov eax [ecx] +
push edi  +
call dword ptr [eax+8]  +
test eax eax +
jge loc_1018741  +
mov ecx [ebp-10h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebx+1Ch] esi +
lea eax [ebx+3BCh] +
mov ecx [eax] +
mov [ebx+20h] esi +
mov [ebx+28h] esi +
cmp [ecx-8] esi +
jz loc_101860E  +
push eax  +
lea ecx [ebx+3B8h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ecx [ebx+3B8h] +
cmp [ecx-8] esi +
jz loc_101864D  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_101861E  +
sub eax edi +
sar eax 1 +
dec eax  +
cmp eax esi +
jl loc_101864D  +
cmp word ptr [ecx+eax*2] 2Eh +
jz loc_101863B  +
dec eax  +
jns loc_1018631  +
cmp eax esi +
jl loc_101864D  +
inc eax  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_101791E  +
cmp eax esi +
jge loc_101865C  +
mov eax [ebx+1Ch] +
cmp eax esi +
jz loc_101865C  +
push eax  +
mov ecx ebx +
call sub_1016A70  +
push 0D1h  +
push dword_1026830  +
call ds:LoadAcceleratorsW  +
mov [ebx+3D0h] eax +
xor eax eax +
mov [ebp-74h] esi +
lea edi [ebp-70h] +
stos   +
stos   +
stos   +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp-0C8h] +
stos   +
lea edi [ebp-20h] +
stos   +
stos   +
stos   +
push 32h  +
pop eax  +
push esi  +
mov [ebp-24h] eax +
mov [ebp-20h] eax +
lea eax [ebp-74h] +
push eax  +
push esi  +
push 30h  +
mov dword ptr [ebp-1Ch] 258h +
mov dword ptr [ebp-18h] 1C2h +
mov dword ptr [ebp-0CCh] 2Ch +
mov [ebp-0C4h] esi +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_10186EA  +
mov eax [ebp-6Ch] +
cmp eax 28Ah +
jle loc_10186DA  +
add eax 0FFFFFFCEh +
mov [ebp-1Ch] eax +
mov eax [ebp-68h] +
cmp eax 1F4h +
jle loc_10186EA  +
add eax 0FFFFFFCEh +
mov [ebp-18h] eax +
lea esi [ebp-24h] +
lea edi [ebp-0B0h] +
movs   +
movs   +
lea eax [ebp-0CCh] +
movs   +
push eax  +
push dword ptr [ebx+4]  +
movs   +
call ds:SetWindowPlacement  +
push 18Fh  +
push dword ptr [ebx]  +
call ds:LoadIconW  +
mov esi eax +
test esi esi +
jz loc_1018737  +
push esi  +
push 0FFFFFFDEh  +
push dword ptr [ebx+4]  +
call ds:SetClassLongW  +
push esi  +
push 0  +
push 80h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
mov eax [ebp-10h] +
mov [ebx+1Ch] eax +
jmp loc_10185EF  +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
mov dword ptr [ebp-10h] 1 +
mov [ebp-14h] edi +
cmp [esi+398h] edi +
jz loc_1018788  +
call sub_1015DF7  +
push edi  +
mov ecx esi +
call sub_10142A0  +
push eax  +
mov ecx esi +
call sub_1016AFB  +
mov ecx esi +
call sub_10142A0  +
cmp eax edi +
jz loc_10187D9  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+30h]  +
test eax eax +
jnz loc_10187D9  +
mov ebx [esi+24h] +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+1Ch]  +
test eax eax +
jz loc_10187D9  +
push 7F02h  +
push edi  +
mov dword ptr [ebp-14h] 1 +
call ds:LoadCursorW  +
mov edi ds:SetCursor +
push eax  +
call edi  +
mov [ebp-18h] eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+18h]  +
push dword ptr [ebp-18h]  +
call edi  +
xor edi edi +
mov eax [ebp+8] +
mov ecx 800Ch +
cmp eax ecx +
jg loc_1018953  +
jz loc_1018941  +
add ecx 0FFFFFFF4h +
cmp eax ecx +
jg loc_10188B9  +
jz loc_1018891  +
cmp eax 3 +
jl loc_10189F2  +
cmp eax 4 +
jle loc_1018885  +
cmp eax 5 +
jz loc_1018833  +
cmp eax 0CBh +
jz loc_101886C  +
cmp eax 0CCh +
jz loc_1018859  +
cmp eax 0CDh +
jz loc_1018846  +
cmp eax 0D1h +
jnz loc_10189F2  +
mov ecx esi +
call sub_1017376  +
or dword_1026CAC 20h +
jmp loc_1018B7B  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push edi  +
push edi  +
mov ecx esi +
call sub_1014518  +
jmp loc_1018B7B  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push edi  +
push edi  +
mov ecx esi +
call sub_10144E5  +
jmp loc_1018B7B  +
cmp dword ptr [ebp+0Ch] 300h +
jnz loc_1018B7B  +
mov ecx esi +
call sub_1015EB3  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_1015E6B  +
jmp loc_1018B7B  +
cmp [esi+374h] edi +
jz loc_10188A6  +
push edi  +
push 0E124h  +
mov ecx esi +
call sub_1018751  +
mov ecx esi +
call sub_101817D  +
or dword_1026CAC 1 +
jmp loc_1018B7B  +
sub eax 8001h +
jz loc_101892E  +
dec eax  +
jz loc_1018913  +
sub eax 4 +
jz loc_1018900  +
sub eax 4 +
jz loc_10188F4  +
dec eax  +
jnz loc_10189F2  +
cmp [esi+58h] edi +
jz loc_1018B7B  +
mov [esi+58h] edi +
push edi  +
mov ecx esi +
call sub_1016FAF  +
mov ecx esi +
call sub_1015865  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_10154D4  +
jmp loc_1018B90  +
mov ecx esi +
call sub_10171D0  +
or dword_1026CAC 4 +
jmp loc_1018B7B  +
mov eax [esi+4] +
cmp eax edi +
jz loc_1018B7B  +
push edi  +
push edi  +
push 10h  +
push eax  +
call ds:PostMessageW  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_1017054  +
or dword_1026CAC 2 +
jmp loc_1018B7B  +
cmp [esi+58h] edi +
jnz loc_1018B7B  +
mov dword ptr [esi+58h] 1 +
jmp loc_10188E0  +
mov ecx 8017h +
cmp eax ecx +
jg loc_10189CA  +
jz loc_10189BE  +
sub eax 800Dh +
jz loc_10189A3  +
sub eax 3 +
jz loc_1018997  +
dec eax  +
jz loc_1018984  +
dec eax  +
jz loc_1018B7B  +
dec eax  +
dec eax  +
jnz loc_10189F2  +
mov ecx esi +
call sub_1014681  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_1018076  +
or dword_1026CAC 10h +
jmp loc_1018B7B  +
mov ecx esi +
call sub_101454B  +
jmp loc_1018B7B  +
push edi  +
push offset sub_1008328  +
push dword ptr [esi+4]  +
push 0CDh  +
push dword ptr [esi]  +
call ds:DialogBoxParamW  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_10178C1  +
jmp loc_1018B7B  +
sub eax 0E102h +
jz loc_1018B5F  +
sub eax 5 +
jz loc_1018B4E  +
sub eax 1Bh +
jz loc_1018B45  +
dec eax  +
dec eax  +
jz loc_1018AF9  +
dec eax  +
jz loc_10189FA  +
mov [ebp-10h] edi +
jmp loc_1018B7B  +
mov ebx [esi+37Ch] +
call ds:GetFocus  +
cmp eax ebx +
jnz loc_1018B7B  +
push ebx  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1018B7B  +
push dword ptr [esi+37Ch]  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1018B7B  +
push dword ptr [esi+4]  +
mov [ebp+0Ch] edi +
call ds:OpenClipboard  +
mov ebx ds:SendMessageW +
test eax eax +
jz loc_1018AE5  +
push 0Dh  +
call ds:IsClipboardFormatAvailable  +
test eax eax +
jz loc_1018AD6  +
push 0Dh  +
call ds:GetClipboardData  +
mov [ebp-18h] eax +
cmp eax edi +
jz loc_1018AD6  +
push eax  +
call ds:GlobalLock  +
cmp eax edi +
jz loc_1018AD6  +
push eax  +
lea ecx [ebp+8] +
call ??0CString@@QAE@PBG@Z  +
push 9  +
lea ecx [ebp+8] +
mov [ebp-4] edi +
call ?Find@CString@@QBEHG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1018A98  +
push 20h  +
push 9  +
lea ecx [ebp+8] +
call MFC42u_6867  +
push dword ptr [ebp+8]  +
lea eax [ebp-20h] +
push eax  +
push 461h  +
push dword ptr [esi+37Ch]  +
mov dword ptr [ebp-20h] 2 +
mov dword ptr [ebp-1Ch] 4B0h +
call ebx  +
push dword ptr [ebp-18h]  +
mov dword ptr [ebp+0Ch] 1 +
call ds:GlobalUnlock  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call ??1CString@@QAE@XZ  +
call ds:CloseClipboard  +
cmp [ebp+0Ch] edi +
jnz loc_1018B7B  +
push edi  +
push edi  +
push 302h  +
push dword ptr [esi+37Ch]  +
call ebx  +
jmp loc_1018B7B  +
xor ecx ecx +
lea eax [esi+374h] +
cmp [eax] edi +
mov [esi+3A0h] edi +
setz cl  +
mov [esi+3B0h] edi +
mov [esi+39Ch] edi +
mov [esi+398h] edi +
mov [eax] ecx +
mov ecx esi +
call sub_10169A8  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push edi  +
push edi  +
mov ecx esi +
call sub_10167E0  +
mov ecx esi +
call sub_1015865  +
mov ecx esi +
call sub_1014831  +
jmp loc_1018B7B  +
mov ecx esi +
call sub_1015AFE  +
jmp loc_1018B7B  +
push edi  +
mov ecx esi +
call sub_1015CB0  +
or dword_1026CAC 8 +
jmp loc_1018B7B  +
cmp [esi+374h] edi +
jz loc_1018B74  +
push edi  +
push 0E124h  +
mov ecx esi +
call sub_1018751  +
mov ecx esi +
call sub_1017646  +
cmp [ebp-14h] edi +
jz loc_1018B90  +
push edi  +
mov ecx esi +
call sub_10142A0  +
push eax  +
mov ecx esi +
call sub_1016AFB  +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax 110h +
cmp ecx eax +
ja loc_1018C85  +
jz loc_1018C62  +
mov eax ecx +
dec eax  +
dec eax  +
jz loc_1018C47  +
sub eax 3 +
jz loc_1018C2C  +
sub eax 0Ah +
jz loc_1018C11  +
dec eax  +
jz loc_1018BF6  +
sub eax 3Eh +
jnz loc_1018CA2  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 4Eh  +
call sub_10175D4  +
jmp loc_1018D22  +
push 1  +
push hDlg  +
call ds:EndDialog  +
push 0  +
call ds:PostQuitMessage  +
jmp loc_1018D22  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 0Fh  +
call sub_1016346  +
jmp loc_1018D22  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 5  +
call sub_10167E0  +
jmp loc_1018D22  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 2  +
call sub_10141F9  +
jmp loc_1018D22  +
mov ecx [ebp+arg_0] +
mov hDlg ecx +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push eax  +
call sub_10182CE  +
jmp loc_1018D22  +
mov eax ecx +
sub eax 111h +
jz loc_1018D0C  +
sub eax 0EFh +
jz loc_1018CF1  +
dec eax  +
jz loc_1018CD6  +
dec eax  +
jz loc_1018CC1  +
sub eax 1FFh +
jz loc_1018CA6  +
xor eax eax +
jmp loc_1018D25  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 401h  +
call sub_1017841  +
jmp loc_1018D22  +
cmp dword_10268EC 0 +
jz loc_1018D22  +
mov ecx offset unk_10268BC +
call sub_1015121  +
jmp loc_1018D22  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 201h  +
call sub_1017811  +
jmp loc_1018D22  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_C]  +
mov ecx offset unk_10268BC +
push [ebp+arg_8]  +
push 200h  +
call sub_1016F35  +
jmp loc_1018D22  +
mov eax [ebp+arg_8] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+arg_8] +
push eax  +
mov ecx offset unk_10268BC +
call sub_1018751  +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
lea eax [ebp+pNumArgs] +
mov edi ecx +
and dword ptr [edi+3E0h] 0 +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov ebx eax +
test ebx ebx +
jz loc_1018EAD  +
mov eax [ebp+pNumArgs] +
push 2  +
pop ecx  +
cmp eax ecx +
jl loc_1018EAD  +
push esi  +
xor esi esi +
inc esi  +
dec eax  +
cmp eax esi +
jl loc_1018EAC  +
mov [ebp+var_C] ecx +
mov eax [ebx+esi*4] +
movzx ecx word ptr [eax] +
cmp cx 2Dh +
jz loc_1018D94  +
cmp cx 2Fh +
jnz loc_1018EB6  +
inc eax  +
inc eax  +
push offset a?  +
push eax  +
mov [ebp+var_8] eax +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018ECB  +
push offset aHelp  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1018ECB  +
mov eax [ebp+var_C] +
cmp eax [ebp+pNumArgs] +
jge loc_1018EAC  +
push offset aNfo_0  +
push [ebp+var_8]  +
inc esi  +
inc [ebp+var_C]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018E0C  +
mov dword_10268AC 1 +
push dword ptr [ebx+esi*4]  +
lea ecx [edi+3F0h] +
call ??4CString@@QAEABV0@PBG@Z  +
or [ebp+var_4] 2 +
jmp loc_1018E8E  +
push offset aReport  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018E3E  +
mov dword_10268AC 1 +
push dword ptr [ebx+esi*4]  +
lea ecx [edi+3ECh] +
call ??4CString@@QAEABV0@PBG@Z  +
or [ebp+var_4] 4 +
jmp loc_1018E8E  +
push offset aComputer  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018E70  +
mov dword_10268B0 1 +
push dword ptr [ebx+esi*4]  +
lea ecx [edi+3E4h] +
call ??4CString@@QAEABV0@PBG@Z  +
or [ebp+var_4] 8 +
jmp loc_1018E8E  +
push offset aCategory  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1018E8A  +
or [ebp+var_4] 10h +
jmp loc_1018E8E  +
or [ebp+var_4] 1 +
mov eax [ebp+pNumArgs] +
inc esi  +
inc [ebp+var_C]  +
dec eax  +
cmp esi eax +
jle loc_1018D7E  +
cmp [ebp+var_4] 0 +
jz loc_1018EAC  +
push [ebp+var_4]  +
call sub_1019309  +
pop esi  +
xor eax eax +
pop edi  +
inc eax  +
pop ebx  +
leave   +
retn 4  +
cmp esi 1 +
jnz loc_1018E9E  +
push dword ptr [ebx+4]  +
lea ecx [edi+3E8h] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_1018E9E  +
mov dword ptr [edi+3E0h] 1 +
jmp loc_1018EAC  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
call ??0CString@@QAE@XZ  +
xor edi edi +
lea ecx [esi+0Ch] +
mov [ebp-4] edi +
call ??0CString@@QAE@XZ  +
mov [esi+10h] edi +
lea ecx [esi+5Ch] +
mov byte ptr [ebp-4] 1 +
mov [esi+14h] edi +
call ??0CString@@QAE@XZ  +
lea ecx [esi+60h] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
mov [esi+378h] edi +
mov [esi+37Ch] edi +
mov [esi+380h] edi +
mov [esi+384h] edi +
mov [esi+388h] edi +
mov [esi+38Ch] edi +
mov [esi+390h] edi +
lea ecx [esi+3ACh] +
mov byte ptr [ebp-4] 3 +
mov [esi+394h] edi +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3B8h] +
mov byte ptr [ebp-4] 4 +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3BCh] +
mov byte ptr [ebp-4] 5 +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3C0h] +
mov byte ptr [ebp-4] 6 +
call ??0CString@@QAE@XZ  +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+3D4h] edi +
mov [esi+3D8h] edi +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_17 +
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+3C0h] +
mov dword ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+3BCh] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+3B8h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+3ACh] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+60h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+5Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+4] +
call sub_1018EDC  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+3E4h] +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3E8h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3ECh] +
mov byte ptr [ebp-4] 2 +
call ??0CString@@QAE@XZ  +
lea ecx [esi+3F0h] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor eax eax +
push 6  +
mov [ebp+var_C.dwSize] ebx +
lea edi [ebp+var_C.dwICC] +
stos   +
pop ecx  +
mov [ebp+Msg.hwnd] ebx +
lea edi [ebp+Msg.message] +
push ebx  +
stos   +
call ds:CoInitialize  +
push ebx  +
push ebx  +
push ebx  +
push 3  +
pop esi  +
push esi  +
push 4  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
call ds:CoInitializeSecurity  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C.dwSize] 8 +
mov [ebp+var_C.dwICC] esi +
call ds:InitCommonControlsEx  +
mov esi [ebp+hDlg] +
mov eax [esi] +
push 0D1h  +
lea edi [esi+4] +
push eax  +
mov [edi] eax +
call ds:LoadAcceleratorsW  +
mov [ebp+hAccel] eax +
cmp eax ebx +
jz loc_1019277  +
push ebx  +
push offset sub_1018BA0  +
push ebx  +
push 190h  +
push dword ptr [esi]  +
call ds:CreateDialogParamW  +
mov [ebp+hDlg] eax +
cmp eax ebx +
jz loc_101926E  +
mov eax [esi+3E4h] +
cmp [eax-8] ebx +
jz loc_10191A1  +
push eax  +
mov ecx edi +
call sub_10176BE  +
mov eax [esi+3ECh] +
cmp [eax-8] ebx +
jz loc_10191BA  +
push ebx  +
push eax  +
mov ecx edi +
call sub_1015659  +
jmp loc_101926E  +
mov eax [esi+3F0h] +
cmp [eax-8] ebx +
jz loc_10191D4  +
push 1  +
push eax  +
mov ecx edi +
call sub_1015518  +
jmp loc_101926E  +
mov ecx [esi+3E8h] +
mov eax [ecx-8] +
cmp eax ebx +
jz loc_10191F6  +
cmp eax 4 +
jle loc_10191EB  +
sub eax 3 +
jmp loc_10191ED  +
xor eax eax +
push eax  +
push ecx  +
mov ecx edi +
call sub_101791E  +
push 5  +
push [ebp+hDlg]  +
call ds:ShowWindow  +
cmp [esi+3E0h] ebx +
jz loc_1019210  +
mov ecx edi +
call sub_1014681  +
mov esi ds:GetMessageW +
jmp loc_1019256  +
cmp eax 0FFFFFFFFh +
jz loc_1019256  +
lea eax [ebp+Msg] +
push eax  +
push [ebp+hAccel]  +
push [ebp+hDlg]  +
call ds:TranslateAcceleratorW  +
test eax eax +
jnz loc_1019256  +
lea eax [ebp+Msg] +
push eax  +
push [ebp+hDlg]  +
call ds:IsDialogMessageW  +
test eax eax +
jnz loc_1019256  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
cmp eax ebx +
jnz loc_1019218  +
push dword_1026CAC  +
call sub_1019338  +
push [ebp+hAccel]  +
call ds:DestroyAcceleratorTable  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:HeapSetInformation  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
mov hInstance eax +
call ds:RegisterApplicationRestart  +
mov edi offset hInstance +
cmp [ebp+arg_8] esi +
jz loc_10192C6  +
push [ebp+arg_8]  +
mov ecx edi +
call sub_1018D2E  +
test eax eax +
jnz loc_10192C6  +
push 0Bh  +
pop eax  +
jmp loc_10192CF  +
push [ebp+arg_C]  +
push edi  +
call sub_10190FE  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] ecx +
xor eax eax +
lea ecx [ebp+var_8] +
push ecx  +
inc eax  +
push eax  +
push 7E1h  +
push 0  +
mov [ebp+var_8] eax +
call WinSqmAddToStream  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] ecx +
xor eax eax +
lea ecx [ebp+var_8] +
push ecx  +
inc eax  +
push eax  +
push 802h  +
push 0  +
mov [ebp+var_8] eax +
call WinSqmAddToStream  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] ecx +
xor eax eax +
lea ecx [ebp+var_8] +
push ecx  +
inc eax  +
push eax  +
push 803h  +
push 0  +
mov [ebp+var_8] eax +
call WinSqmAddToStream  +
xor eax eax +
leave   +
retn 4  +
***
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_19 +
call __EH_prolog3_catch  +
cmp dword ptr [ebp+0Ch] 1 +
jnz loc_101940B  +
and dword ptr [ebp-4] 0 +
push 2000h  +
push 0  +
call ds:LocalAlloc  +
test eax eax +
jnz loc_10193E8  +
xor eax eax +
jmp loc_1019421  +
push eax  +
call ds:LocalFree  +
call ?AfxGetThreadState@@YGPAV_AFX_THREAD_STATE@@XZ  +
push offset unk_1026CD0  +
mov esi eax +
call ?AfxSetModuleState@@YGPAVAFX_MODULE_STATE@@PAV1@@Z  +
mov [esi+8] eax +
jmp loc_101941E  +
mov eax offset loc_10193E4 +
retn   +
***
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_101941E  +
call ?AfxGetThreadState@@YGPAV_AFX_THREAD_STATE@@XZ  +
push dword ptr [eax+8]  +
call ?AfxSetModuleState@@YGPAVAFX_MODULE_STATE@@PAV1@@Z  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 0Ch  +
***
push esi  +
push 600h  +
push (offset dword_1019364+3)  +
push 1  +
mov esi ecx +
call ??0AFX_MODULE_STATE@@QAE@HP6GJPAUHWND__@@IIJ@ZK@Z  +
mov dword ptr [esi] offset off_10073D0 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1AFX_MODULE_STATE@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_101946C  +
push esi  +
call ??3CNoTrackObject@@SGXPAX@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ds:??1CMapStringToString@@UAE@XZ  +
***
jmp ds:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CException@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CGdiObject@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?GetRuntimeClass@CFont@@UBEPAUCRuntimeClass@@XZ  +
***
jmp ds:?AfxWndProc@@YGJPAUHWND__@@IIJ@Z  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ??0exception@@QAE@XZ  +
cmp dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_10073E4 +
jnz loc_1019993  +
cmp dword ptr [esi+8] 0 +
jnz loc_1019993  +
mov eax off_10243DC +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_10073E4 +
jmp ??1exception@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10073E4 +
call ??1exception@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_10199CC  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ??0exception@@QAE@ABV0@@Z  +
mov dword ptr [esi] offset off_10073E4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_10199D8  +
push offset dword_1021D04  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ds:malloc +
jmp loc_1019A4E  +
push dword ptr [ebp+8]  +
call _callnewh  +
pop ecx  +
test eax eax +
jz loc_1019A5B  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
test eax eax +
jz loc_1019A41  +
pop esi  +
leave   +
retn   +
***
test byte ptr dword_1028D6C 1 +
mov esi offset dword_1028D60 +
jnz loc_1019A82  +
or dword_1028D6C 1 +
mov ecx esi +
call sub_101996F  +
push offset loc_101F651  +
call sub_101A0EB  +
pop ecx  +
push esi  +
lea ecx [ebp-0Ch] +
call sub_10199D8  +
push offset dword_1021D04  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1019ABB  +
test eax eax +
jnz loc_1019AC0  +
mov ecx [esi] +
test ecx ecx +
jz loc_1019AB8  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1019AAC  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1028D94 +
push offset dword_1028D84  +
push dword_1028D90  +
mov dword_1028D84 eax +
push offset unk_1028D74  +
push offset unk_1028D78  +
push offset unk_1028D70  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1028D80 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1019B63  +
cmp eax esi +
jnz loc_1019B56  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1019B66  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1019B3D  +
xor esi esi +
inc esi  +
mov eax dword_10290BC +
cmp eax esi +
jnz loc_1019B79  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1019BA8  +
mov eax dword_10290BC +
test eax eax +
jnz loc_1019BA2  +
mov dword_10290BC esi +
push offset dword_10016B8  +
push offset dword_10016AC  +
call sub_1019A9F  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1019BA8  +
jmp loc_1019CCC  +
mov dword_1028D8C esi +
mov eax dword_10290BC +
cmp eax esi +
jnz loc_1019BCC  +
push offset dword_10016A8  +
push offset dword_1001558  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10290BC 2 +
cmp [ebp+var_20] ebx +
jnz loc_1019BD9  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10290CC ebx +
jz loc_1019BFA  +
push offset dword_10290CC  +
call sub_101A2E9  +
pop ecx  +
test eax eax +
jz loc_1019BFA  +
push ebx  +
push 2  +
push ebx  +
call dword_10290CC  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_1019CCC  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1019C1F  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_1019C34  +
cmp cx 20h +
ja loc_1019C34  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1019C1F  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1019C40  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_1019C43  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_1028D88 eax +
cmp dword_1028D7C ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_1019C75  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1019C09  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_1028D88 eax +
xor ebx ebx +
cmp dword_1028D7C ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_1028D8C ebx +
jnz loc_1019CB7  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1028D88 +
jmp loc_1019CD8  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1019CF5  +
xor eax eax +
jmp loc_1019D42  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1019CF1  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1019D2F  +
cmp ecx 20Bh +
jnz loc_1019CF1  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1019CF1  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1019D3D  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1019CF1  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_1028D7C eax +
call sub_101A482  +
push eax  +
call ds:__set_app_type  +
or dword_10290C4 0FFFFFFFFh +
or dword_10290C8 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1028D9C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1028D98 +
mov [eax] ecx +
call sub_101A414  +
cmp dword_1024428 0 +
jnz loc_1019D9B  +
push offset sub_101A414  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101A3FC  +
xor eax eax +
retn   +
***
call sub_101A4C1  +
jmp ___tmainCRTStartup  +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
dec [ebp+arg_8]  +
js loc_1019E07  +
mov ecx [ebp+arg_0] +
sub ecx [ebp+arg_4] +
mov [ebp+arg_0] ecx +
call [ebp+arg_C]  +
jmp loc_1019DC7  +
mov eax [ebp-14h] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
mov eax [eax] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_1019DFE  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-24h] +
retn   +
call ds:?terminate@@YAXXZ  +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-1Ch] 0 +
jnz $LN9  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1019DB7  +
retn   +
***
cmp ecx dword_1024414 +
jnz loc_1019E8E  +
retn 0  +
jmp loc_101A557  +
***
jmp ds:__CxxFrameHandler3  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1024414 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1024414 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1024414 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1024414 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1019E83  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1019E83  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1019FEB  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-20h] 0 +
jnz $LN10_0  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1019DB7  +
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_101A061  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_101A169  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
jmp ds:?what@exception@@UBEPBDXZ  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101A232  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101A232  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101A22C  +
cmp eax 19930521h +
jz loc_101A22C  +
cmp eax 19930522h +
jz loc_101A22C  +
cmp eax 1994000h +
jnz loc_101A232  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_101A1F4+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101A276  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101A272  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101A2DD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101A2D5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101A2DF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101A2C5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101A260  +
pop ecx  +
test eax eax +
jz loc_101A346  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101A2A0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A346  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101A34F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1019E83  +
push offset dword_1024414  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101A475  +
cmp ecx 0FFFFFFFFh +
jz loc_101A475  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101A46E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101A46E  +
cmp edx 10000000h +
jnb loc_101A46E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101A46E  +
jmp loc_101A469  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101A4B7  +
push eax  +
call sub_101A41C  +
test eax eax +
jz loc_101A4B7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101A4AC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101A4B7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1024414 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101A4F3  +
test eax ebx +
jz loc_101A4F3  +
not eax  +
mov dword_1024418 eax +
jmp loc_101A54E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101A53A  +
test dword_1024414 ebx +
jnz loc_101A53F  +
mov esi 0BB40E64Fh +
mov dword_1024414 esi +
not esi  +
mov dword_1024418 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1028EA0 eax +
mov dword_1028E9C ecx +
mov dword_1028E98 edx +
mov dword_1028E94 ebx +
mov dword_1028E90 esi +
mov dword_1028E8C edi +
mov word_1028EB8 ss +
mov word_1028EAC cs +
mov word_1028E88 ds +
mov word_1028E84 es +
mov word_1028E80 fs +
mov word_1028E7C gs +
pushf   +
pop dword_1028EB0  +
mov eax [ebp+0] +
mov dword_1028EA4 eax +
mov eax [ebp+4] +
mov dword_1028EA8 eax +
lea eax [ebp+8] +
mov dword_1028EB4 eax +
mov eax [ebp-320h] +
mov dword_1028DF0 10001h +
mov eax dword_1028EA8 +
mov dword_1028DAC eax +
mov dword_1028DA0 0C0000409h +
mov dword_1028DA4 1 +
mov eax dword_1024414 +
mov [ebp-328h] eax +
mov eax dword_1024418 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F670 +
jmp loc_1019E98  +
***
call fword ptr [ecx-3Dh]  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F69C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024454 +
jmp sub_1008901  +
***
mov ecx offset unk_1024470 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F6D8 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_10244C4 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F70C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_102451C +
jmp sub_1008901  +
***
mov ecx offset unk_1024538 +
jmp sub_1008901  +
***
mov ecx offset unk_1024554 +
jmp sub_1008901  +
***
mov ecx offset unk_1024570 +
jmp sub_1008901  +
***
mov ecx offset unk_102458C +
jmp sub_1008901  +
***
mov ecx offset unk_10245A8 +
jmp sub_1008901  +
***
mov ecx offset unk_10245C4 +
jmp sub_1008901  +
***
mov ecx offset unk_10245E0 +
jmp sub_1008901  +
***
mov ecx offset unk_10245FC +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F730 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024654 +
jmp sub_1008901  +
***
mov ecx offset unk_1024670 +
jmp sub_1008901  +
***
mov ecx offset unk_102468C +
jmp sub_1008901  +
***
mov ecx offset unk_10246A8 +
jmp sub_1008901  +
***
mov ecx offset unk_10246C4 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F7A4 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_102471C +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F808 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024774 +
jmp sub_1008901  +
***
mov ecx offset unk_1024790 +
jmp sub_1008901  +
***
mov ecx offset unk_10247AC +
jmp sub_1008901  +
***
mov ecx offset unk_10247C8 +
jmp sub_1008901  +
***
mov ecx offset unk_10247E4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024800 +
jmp sub_1008901  +
***
mov ecx offset unk_102481C +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F82C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024874 +
jmp sub_1008901  +
***
mov ecx offset unk_1024890 +
jmp sub_1008901  +
***
mov ecx offset unk_10248AC +
jmp sub_1008901  +
***
mov ecx offset unk_10248C8 +
jmp sub_1008901  +
***
mov ecx offset unk_10248E4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024900 +
jmp sub_1008901  +
***
mov ecx offset unk_102491C +
jmp sub_1008901  +
***
mov ecx offset unk_1024938 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F890 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_102498C +
jmp sub_1008901  +
***
mov ecx offset unk_10249A8 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F914 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_10249FC +
jmp sub_1008901  +
***
mov ecx offset unk_1024A18 +
jmp sub_1008901  +
***
mov ecx offset unk_1024A34 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F958 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024A8C +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F98C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024AE4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024B00 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101F9C8 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024B54 +
jmp sub_1008901  +
***
mov ecx offset unk_1024B70 +
jmp sub_1008901  +
***
mov ecx offset unk_1024B8C +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FA0C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024BE4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024C00 +
jmp sub_1008901  +
***
mov ecx offset unk_1024C1C +
jmp sub_1008901  +
***
mov ecx offset unk_1024C38 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FA30 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024C8C +
jmp sub_1008901  +
***
mov ecx offset unk_1024CA8 +
jmp sub_1008901  +
***
mov ecx offset unk_1024CC4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024CE0 +
jmp sub_1008901  +
***
mov ecx offset unk_1024CFC +
jmp sub_1008901  +
***
mov ecx offset unk_1024D18 +
jmp sub_1008901  +
***
mov ecx offset unk_1024D34 +
jmp sub_1008901  +
***
mov ecx offset unk_1024D50 +
jmp sub_1008901  +
***
mov ecx offset unk_1024D6C +
jmp sub_1008901  +
***
mov ecx offset unk_1024D88 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FA7C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024DDC +
jmp sub_1008901  +
***
mov ecx offset unk_1024DF8 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FB10 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1024E4C +
jmp sub_1008901  +
***
mov ecx offset unk_1024E68 +
jmp sub_1008901  +
***
mov ecx offset unk_1024E84 +
jmp sub_1008901  +
***
mov ecx offset unk_1024EA0 +
jmp sub_1008901  +
***
mov ecx offset unk_1024EBC +
jmp sub_1008901  +
***
mov ecx offset unk_1024ED8 +
jmp sub_1008901  +
***
mov ecx offset unk_1024EF4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024F10 +
jmp sub_1008901  +
***
mov ecx offset unk_1024F2C +
jmp sub_1008901  +
***
mov ecx offset unk_1024F48 +
jmp sub_1008901  +
***
mov ecx offset unk_1024F64 +
jmp sub_1008901  +
***
mov ecx offset unk_1024F80 +
jmp sub_1008901  +
***
mov ecx offset unk_1024F9C +
jmp sub_1008901  +
***
mov ecx offset unk_1024FB8 +
jmp sub_1008901  +
***
mov ecx offset unk_1024FD4 +
jmp sub_1008901  +
***
mov ecx offset unk_1024FF0 +
jmp sub_1008901  +
***
mov ecx offset unk_102500C +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FB34 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1025064 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FBF8 +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_10250BC +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FC2C +
jmp loc_1019E98  +
***
jmp sub_1008901  +
***
mov ecx offset unk_1025114 +
jmp sub_1008901  +
***
mov ecx offset unk_1025130 +
jmp sub_1008901  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FC68 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FC94 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FCC8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FD0C +
jmp loc_1019E98  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx [ebp-10h] +
add ecx 8 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FD48 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FD74 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FDA0 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FDDC +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FE20 +
jmp loc_1019E98  +
***
push dword ptr [ebp-14h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FE54 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FE80 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FEA4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FF68 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_101FF8C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020038 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102007C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10200A8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-12Ch] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10200D4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020108 +
jmp loc_1019E98  +
***
mov ecx [ebp-10h] +
jmp sub_100AA20  +
***
mov ecx [ebp-10h] +
add ecx 68h +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102013C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020180 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10201A4 +
jmp loc_1019E98  +
***
push dword ptr [ebp-10h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10201F8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102021C +
jmp loc_1019E98  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020268 +
jmp loc_1019E98  +
***
retn   +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10202B4 +
jmp loc_1019E98  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020300 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-254h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020364 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020388 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020414 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3ACh] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020438 +
jmp loc_1019E98  +
***
push dword ptr [ebp+1Ch]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
lea ecx [ebp+18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-34h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-38h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-3Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-40h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-44h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-40h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-3Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-44h] +
jmp ??1CString@@QAE@XZ  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020504 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020664 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020690 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10206E0 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020734 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10207DC +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020808 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102083C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020874 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102095C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020A0C +
jmp loc_1019E98  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-2Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-34h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-30h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020A90 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020B20 +
jmp loc_1019E98  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020B74 +
jmp loc_1019E98  +
***
call fword ptr [ecx-3Dh]  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020B98 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020C30 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020CD8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020D5C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020D88 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020DC4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020E1C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020E80 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020EF4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020F20 +
jmp loc_1019E98  +
***
jmp fword ptr (byte_10233FF-102344Bh)[eax]  +
***
xchg eax esp +
add [ecx] eax +
push 4  +
push 4  +
lea eax [ebp-30h] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020F44 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020FC0 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1020FEC +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021018 +
jmp loc_1019E98  +
***
push 3  +
push 4  +
lea eax [ebp-3Ch] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-2Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-30h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102103C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-478h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10210B0 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102117C +
jmp loc_1019E98  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10211A0 +
jmp loc_1019E98  +
***
lea ecx [ebp-2Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+0Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+10h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-60h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-5Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-58h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-54h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-50h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-4Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-48h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-44h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-40h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-3Ch] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10211F4 +
jmp loc_1019E98  +
***
lea ecx [ebp-4Ch] +
jmp ??1CPtrList@@UAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10212C0 +
jmp loc_1019E98  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10212FC +
jmp loc_1019E98  +
***
push dword ptr [ebp+8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021338 +
jmp loc_1019E98  +
***
jmp loc_1011C34  +
***
mov ecx offset unk_1026658 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026670 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026688 +
jmp loc_1011C34  +
***
mov ecx offset unk_10266A0 +
jmp loc_1011C34  +
***
mov ecx offset unk_10266B8 +
jmp loc_1011C34  +
***
mov ecx offset unk_10266D0 +
jmp loc_1011C34  +
***
mov ecx offset unk_10266E8 +
jmp loc_1011C34  +
***
mov ecx offset dword_1026700 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026718 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026730 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026748 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026760 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026778 +
jmp loc_1011C34  +
***
mov ecx offset unk_1026790 +
jmp loc_1011C34  +
***
mov ecx offset byte_10267A8 +
jmp loc_1011C34  +
***
mov ecx offset unk_10267C0 +
jmp loc_1011C34  +
***
mov ecx offset unk_10267D8 +
jmp loc_1011C34  +
***
mov ecx offset unk_10267F0 +
jmp loc_1011C34  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102135C +
jmp loc_1019E98  +
***
lea ecx [ebp-3Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-38h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-34h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-30h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-2Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-40h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-1Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp+14h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021418 +
jmp loc_1019E98  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-58h] +
jmp ??1CStringList@@UAE@XZ  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-30h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-34h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-38h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-20h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-24h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-28h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-2Ch] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102149C +
jmp loc_1019E98  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021518 +
jmp loc_1019E98  +
***
lea ecx [ebp-270h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-268h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-26Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-26Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-26Ch] +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-264h] +
jmp ??1CString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-27Ch] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102153C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-294h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10215B8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021684 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-570h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10216A8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-238h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021744 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10217B8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10217EC +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102184C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10218A4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021900 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_102192C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0B4h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021970 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-118h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10219A4 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_10219C8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48Ch] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021A24 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021A6C +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-250h] +
xor ecx eax +
call sub_1019E83  +
mov ecx [edx-4] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021AB8 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021B5C +
jmp loc_1019E98  +
***
call fword ptr [ecx-3Dh]  +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D0h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021B90 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021BBC +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021BE0 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021C5C +
jmp loc_1019E98  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021C88 +
jmp loc_1019E98  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1019E83  +
mov eax offset dword_1021CE0 +
jmp loc_1019E98  +
***
mov ecx offset unk_1024434 +
call ??0CString@@QAE@XZ  +
push offset loc_101F0BA  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
push 0  +
mov eax offset loc_101A6E9 +
call __EH_prolog3  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push 96h  +
push 19Ch  +
mov ecx offset unk_1024438 +
call sub_1008888  +
push esi  +
push 1  +
push 1  +
push 12Ch  +
push 19Ah  +
mov ecx offset unk_1024454 +
mov [ebp-4] esi +
call sub_1008888  +
push esi  +
push 1  +
push 1  +
push 64h  +
push 196h  +
mov ecx offset unk_1024470 +
mov byte ptr [ebp-4] 1 +
call sub_1008888  +
mov ecx offset unk_102448C +
mov byte ptr [ebp-4] 2 +
call sub_10088CD  +
push offset loc_101F0C9  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A71D +
call __EH_prolog3  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 0FAh  +
push 19Ch  +
mov ecx offset unk_10244A8 +
call sub_1008888  +
push esi  +
push esi  +
push esi  +
push 190h  +
push 19Ah  +
mov ecx offset unk_10244C4 +
mov [ebp-4] esi +
call sub_1008888  +
mov ecx offset unk_10244E0 +
mov byte ptr [ebp-4] 1 +
call sub_10088CD  +
push offset loc_101F0E2  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A7A1 +
call __EH_prolog3  +
xor esi esi +
push esi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 78h  +
push 19Eh  +
mov ecx offset unk_1024500 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 0C8h  +
push 1A2h  +
mov ecx offset unk_102451C +
mov [ebp-4] esi +
call sub_1008888  +
push ebx  +
push esi  +
push ebx  +
push 50h  +
push 1CCh  +
mov ecx offset unk_1024538 +
mov [ebp-4] bl +
call sub_1008888  +
push ebx  +
push esi  +
push ebx  +
push 3Ch  +
push 1C7h  +
mov ecx offset unk_1024554 +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push ebx  +
push esi  +
push ebx  +
push 50h  +
push 1CDh  +
mov ecx offset unk_1024570 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push ebx  +
push esi  +
push ebx  +
push 50h  +
push 1CEh  +
mov ecx offset unk_102458C +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
push ebx  +
push esi  +
push ebx  +
push 78h  +
push 1C2h  +
mov ecx offset unk_10245A8 +
mov byte ptr [ebp-4] 5 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 194h  +
mov ecx offset unk_10245C4 +
mov byte ptr [ebp-4] 6 +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push 55h  +
mov byte ptr [ebp-4] 7 +
push 193h  +
mov ecx offset unk_10245E0 +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push 78h  +
push 1CFh  +
mov ecx offset unk_10245FC +
mov byte ptr [ebp-4] 8 +
call sub_1008888  +
mov ecx offset unk_1024618 +
mov byte ptr [ebp-4] 9 +
call sub_10088CD  +
push offset loc_101F0FB  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A7FD +
call __EH_prolog3  +
xor esi esi +
push esi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 78h  +
push 19Eh  +
mov ecx offset unk_1024638 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 194h  +
mov ecx offset unk_1024654 +
mov [ebp-4] esi +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push 55h  +
push 193h  +
mov ecx offset unk_1024670 +
mov [ebp-4] bl +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push 78h  +
push 1CFh  +
mov ecx offset unk_102468C +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 198h  +
mov ecx offset unk_10246A8 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 0C8h  +
push 1A2h  +
mov ecx offset unk_10246C4 +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
mov ecx offset unk_10246E0 +
mov byte ptr [ebp-4] 5 +
call sub_10088CD  +
push offset loc_101F114  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A831 +
call __EH_prolog3  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 0C8h  +
push 191h  +
mov ecx offset unk_1024700 +
call sub_1008888  +
push esi  +
push esi  +
push esi  +
push 1DBh  +
push 190h  +
mov ecx offset unk_102471C +
mov [ebp-4] esi +
call sub_1008888  +
mov ecx offset unk_1024738 +
mov byte ptr [ebp-4] 1 +
call sub_10088CD  +
push offset loc_101F12D  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A8A1 +
call __EH_prolog3  +
xor esi esi +
push esi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 0C8h  +
push 199h  +
mov ecx offset unk_1024758 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 32h  +
pop edi  +
push edi  +
push 198h  +
mov ecx offset unk_1024774 +
mov [ebp-4] esi +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push edi  +
push 197h  +
mov ecx offset unk_1024790 +
mov [ebp-4] bl +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push edi  +
push 196h  +
mov ecx offset unk_10247AC +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push edi  +
push 195h  +
mov ecx offset unk_10247C8 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push edi  +
push 194h  +
mov ecx offset unk_10247E4 +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push edi  +
push 193h  +
mov ecx offset unk_1024800 +
mov byte ptr [ebp-4] 5 +
call sub_1008888  +
push esi  +
push esi  +
push ebx  +
push edi  +
push 192h  +
mov ecx offset unk_102481C +
mov byte ptr [ebp-4] 6 +
call sub_1008888  +
mov ecx offset unk_1024838 +
mov byte ptr [ebp-4] 7 +
call sub_10088CD  +
push offset loc_101F146  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A91B +
call __EH_prolog3  +
xor edi edi +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
mov esi 96h +
push esi  +
push 19Dh  +
mov ecx offset unk_1024858 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 64h  +
push 19Eh  +
mov ecx offset unk_1024874 +
mov [ebp-4] edi +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 32h  +
push 19Fh  +
mov ecx offset unk_1024890 +
mov [ebp-4] bl +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 50h  +
push 1A0h  +
mov ecx offset unk_10248AC +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 50h  +
push 1A1h  +
mov ecx offset unk_10248C8 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1A2h  +
mov ecx offset unk_10248E4 +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 50h  +
push 1A3h  +
mov ecx offset unk_1024900 +
mov byte ptr [ebp-4] 5 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 50h  +
push 1A4h  +
mov ecx offset unk_102491C +
mov byte ptr [ebp-4] 6 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 32h  +
mov byte ptr [ebp-4] 7 +
push 1A5h  +
mov ecx offset unk_1024938 +
call sub_1008888  +
mov ecx offset unk_1024954 +
mov byte ptr [ebp-4] 8 +
call sub_10088CD  +
push offset loc_101F15F  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A959 +
call __EH_prolog3  +
push 0  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
mov esi 0C8h +
push esi  +
push 1AAh  +
mov ecx offset unk_1024970 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push ebx  +
push ebx  +
push esi  +
push 19Eh  +
mov ecx offset unk_102498C +
call sub_1008888  +
push 0  +
push ebx  +
push ebx  +
push 96h  +
push 1ABh  +
mov ecx offset unk_10249A8 +
mov [ebp-4] bl +
call sub_1008888  +
mov ecx offset unk_10249C4 +
mov byte ptr [ebp-4] 2 +
call sub_10088CD  +
push offset loc_101F178  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A9A1 +
call __EH_prolog3  +
push 0  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 96h  +
push 1ACh  +
mov ecx offset unk_10249E0 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push ebx  +
push ebx  +
push 0C8h  +
push 1ADh  +
mov ecx offset unk_10249FC +
call sub_1008888  +
push 0  +
push ebx  +
push ebx  +
push 64h  +
push 1ABh  +
mov ecx offset unk_1024A18 +
mov [ebp-4] bl +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 64h  +
push 1AEh  +
mov ecx offset unk_1024A34 +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
mov ecx offset unk_1024A50 +
mov byte ptr [ebp-4] 3 +
call sub_10088CD  +
push offset loc_101F191  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101A9D5 +
call __EH_prolog3  +
xor esi esi +
push esi  +
push 1  +
push esi  +
push 0C8h  +
push 19Ah  +
mov ecx offset unk_1024A70 +
call sub_1008888  +
push esi  +
push 1  +
push esi  +
push 12Ch  +
push 1AFh  +
mov ecx offset unk_1024A8C +
mov [ebp-4] esi +
call sub_1008888  +
mov ecx offset unk_1024AA8 +
mov byte ptr [ebp-4] 1 +
call sub_10088CD  +
push offset loc_101F1AA  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AA13 +
call __EH_prolog3  +
push 0  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 96h  +
push 1B2h  +
mov ecx offset unk_1024AC8 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push ebx  +
push ebx  +
push 12Ch  +
push 190h  +
mov ecx offset unk_1024AE4 +
call sub_1008888  +
push 0  +
push ebx  +
push ebx  +
push 64h  +
push 1ABh  +
mov ecx offset unk_1024B00 +
mov [ebp-4] bl +
call sub_1008888  +
mov ecx offset unk_1024B1C +
mov byte ptr [ebp-4] 2 +
call sub_10088CD  +
push offset loc_101F1C3  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AA5B +
call __EH_prolog3  +
xor edi edi +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
mov esi 96h +
push esi  +
push 19Eh  +
mov ecx offset unk_1024B38 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1BBh  +
mov ecx offset unk_1024B54 +
mov [ebp-4] edi +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 64h  +
push 1B3h  +
mov ecx offset unk_1024B70 +
mov [ebp-4] bl +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1B4h  +
mov ecx offset unk_1024B8C +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
mov ecx offset unk_1024BA8 +
mov byte ptr [ebp-4] 3 +
call sub_10088CD  +
push offset loc_101F1DC  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AAAD +
call __EH_prolog3  +
xor esi esi +
push esi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 96h  +
push 1B5h  +
mov ecx offset unk_1024BC8 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 0C8h  +
push 1B6h  +
mov ecx offset unk_1024BE4 +
mov [ebp-4] esi +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 1B7h  +
mov ecx offset unk_1024C00 +
mov [ebp-4] bl +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 196h  +
mov ecx offset unk_1024C1C +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push esi  +
push ebx  +
push ebx  +
push 64h  +
push 1ABh  +
mov ecx offset unk_1024C38 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
mov ecx offset unk_1024C54 +
mov byte ptr [ebp-4] 4 +
call sub_10088CD  +
push offset loc_101F1F5  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AB3B +
call __EH_prolog3  +
xor edi edi +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 96h  +
push 19Eh  +
mov ecx offset unk_1024C70 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 0C8h  +
push 197h  +
mov ecx offset unk_1024C8C +
mov [ebp-4] edi +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 64h  +
pop esi  +
push esi  +
push 195h  +
mov ecx offset unk_1024CA8 +
mov [ebp-4] bl +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1B7h  +
mov ecx offset unk_1024CC4 +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1B8h  +
mov ecx offset unk_1024CE0 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1A0h  +
mov ecx offset unk_1024CFC +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 19Fh  +
mov ecx offset unk_1024D18 +
mov byte ptr [ebp-4] 5 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 196h  +
mov ecx offset unk_1024D34 +
mov byte ptr [ebp-4] 6 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
mov byte ptr [ebp-4] 7 +
push esi  +
push 1A3h  +
mov ecx offset unk_1024D50 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1B9h  +
mov ecx offset unk_1024D6C +
mov byte ptr [ebp-4] 8 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1BAh  +
mov ecx offset unk_1024D88 +
mov byte ptr [ebp-4] 9 +
call sub_1008888  +
mov ecx offset unk_1024DA4 +
mov byte ptr [ebp-4] 0Ah +
call sub_10088CD  +
push offset loc_101F20E  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AB79 +
call __EH_prolog3  +
push 0  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 96h  +
push 19Ah  +
mov ecx offset unk_1024DC0 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push ebx  +
push ebx  +
push 0C8h  +
push 1AFh  +
mov ecx offset unk_1024DDC +
call sub_1008888  +
push 0  +
push ebx  +
push ebx  +
push 64h  +
push 1BCh  +
mov ecx offset unk_1024DF8 +
mov [ebp-4] bl +
call sub_1008888  +
mov ecx offset unk_1024E14 +
mov byte ptr [ebp-4] 2 +
call sub_10088CD  +
push offset loc_101F227  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AC4D +
call __EH_prolog3  +
xor edi edi +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 78h  +
push 1BDh  +
mov ecx offset unk_1024E30 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push 3Ch  +
pop esi  +
push esi  +
push 193h  +
mov ecx offset unk_1024E4C +
mov [ebp-4] edi +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1BEh  +
mov ecx offset unk_1024E68 +
mov [ebp-4] bl +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1BFh  +
mov ecx offset unk_1024E84 +
mov byte ptr [ebp-4] 2 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 196h  +
mov ecx offset unk_1024EA0 +
mov byte ptr [ebp-4] 3 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1C1h  +
mov ecx offset unk_1024EBC +
mov byte ptr [ebp-4] 4 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1C2h  +
mov ecx offset unk_1024ED8 +
mov byte ptr [ebp-4] 5 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1C3h  +
mov ecx offset unk_1024EF4 +
mov byte ptr [ebp-4] 6 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
mov byte ptr [ebp-4] 7 +
push esi  +
push 1C4h  +
mov ecx offset unk_1024F10 +
call sub_1008888  +
push edi  +
push ebx  +
push ebx  +
push esi  +
push 1C5h  +
mov ecx offset unk_1024F2C +
mov byte ptr [ebp-4] 8 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 28h  +
push 1C6h  +
mov ecx offset unk_1024F48 +
mov byte ptr [ebp-4] 9 +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 28h  +
push 1C7h  +
mov ecx offset unk_1024F64 +
mov byte ptr [ebp-4] 0Ah +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 64h  +
pop esi  +
push esi  +
push 1C8h  +
mov ecx offset unk_1024F80 +
mov byte ptr [ebp-4] 0Bh +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1BBh  +
mov ecx offset unk_1024F9C +
mov byte ptr [ebp-4] 0Ch +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1C9h  +
mov ecx offset unk_1024FB8 +
mov byte ptr [ebp-4] 0Dh +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push 1CAh  +
mov ecx offset unk_1024FD4 +
mov byte ptr [ebp-4] 0Eh +
call sub_1008888  +
push ebx  +
push ebx  +
push ebx  +
push 50h  +
push 1CBh  +
mov ecx offset unk_1024FF0 +
mov byte ptr [ebp-4] 0Fh +
call sub_1008888  +
push ebx  +
mov byte ptr [ebp-4] 10h +
push ebx  +
push ebx  +
push esi  +
push 19Eh  +
mov ecx offset unk_102500C +
call sub_1008888  +
mov ecx offset unk_1025028 +
mov byte ptr [ebp-4] 11h +
call sub_10088CD  +
push offset loc_101F240  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101AC81 +
call __EH_prolog3  +
push 0  +
push 1  +
push 1  +
push 0C8h  +
push 19Ah  +
mov ecx offset unk_1025048 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push 1  +
push 1  +
push 12Ch  +
push 1AFh  +
mov ecx offset unk_1025064 +
call sub_1008888  +
mov ecx offset unk_1025080 +
mov byte ptr [ebp-4] 1 +
call sub_10088CD  +
push offset loc_101F259  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101ACB5 +
call __EH_prolog3  +
push 0  +
push 1  +
push 1  +
push 0C8h  +
push 1D0h  +
mov ecx offset unk_10250A0 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push 1  +
push 1  +
push 12Ch  +
push 1D1h  +
mov ecx offset unk_10250BC +
call sub_1008888  +
mov ecx offset unk_10250D8 +
mov byte ptr [ebp-4] 1 +
call sub_10088CD  +
push offset loc_101F272  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0  +
mov eax offset loc_101ACF3 +
call __EH_prolog3  +
push 0  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
push 82h  +
push 1D4h  +
mov ecx offset unk_10250F8 +
call sub_1008888  +
and dword ptr [ebp-4] 0 +
push 0  +
push ebx  +
push ebx  +
push 64h  +
push 1B7h  +
mov ecx offset unk_1025114 +
call sub_1008888  +
push 0  +
push ebx  +
push ebx  +
push 15Eh  +
push 1D6h  +
mov ecx offset unk_1025130 +
mov [ebp-4] bl +
call sub_1008888  +
mov ecx offset unk_102514C +
mov byte ptr [ebp-4] 2 +
call sub_10088CD  +
push offset loc_101F28B  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+58h]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102344Ch)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102343Dh)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F2D1  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F2E0  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F2EF  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F2FE  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F30D  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+8]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+3Ah]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+49h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+58h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+67h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+76h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102347Ah)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F394  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102340Fh)[eax]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102340Fh)[eax]  +
***
retf   +
***
dec ebp  +
cld   +
dec dword ptr [ebp+45E8F04Dh]  +
mov ah 0FFh +
jmp fword ptr (byte_10233FF-102344Dh)[eax]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-1023457h)[eax]  +
***
retf 0FFFEh  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
push offset loc_101F3C1  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102340Fh)[eax]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-1023402h)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F40C  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F41B  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
retf   +
***
mov esi 0FC4D83FFh +
dec dword ptr [ebp-1F170FB3h]  +
mov al 0FFh +
jmp fword ptr [eax+2Ah]  +
***
add eax ebp +
or eax 59FFFFBDh +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102340Fh)[eax]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+57h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+66h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+75h]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-102347Bh)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push offset loc_101F493  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+58h]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
xlat   +
mov dh 0FFh +
jmp fword ptr (byte_10233FF-102344Bh)[eax]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
sti   +
mov ch 0FFh +
jmp fword ptr [eax+54h]  +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr (byte_10233FF-1023403h)[eax]  +
***
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov ah 0FFh +
jmp fword ptr [eax+5Ch]  +
***
push offset loc_101F50B  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
jmp fword ptr [eax+1Ah]  +
***
cmc   +
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov bl 0FFh +
jmp fword ptr (byte_10233FF-1023407h)[eax]  +
***
jmp fword ptr [eax+29h]  +
***
cmc   +
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov bl 0FFh +
jmp fword ptr [eax+58h]  +
***
jmp fword ptr [eax+38h]  +
***
cmc   +
add [ecx] eax +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov dl 0FFh +
jmp fword ptr (byte_10233FF-1023457h)[eax]  +
***
push offset loc_101F547  +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
push 0Ah  +
mov ecx offset unk_10265F8 +
call ??0CMapStringToString@@QAE@H@Z  +
push offset loc_101F565  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026614 +
call ??0CString@@QAE@XZ  +
push offset loc_101F583  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026618 +
call ??0CString@@QAE@XZ  +
push offset loc_101F574  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_102661C +
call ??0CString@@QAE@XZ  +
push offset loc_101F592  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026620 +
call ??0CString@@QAE@XZ  +
push offset loc_101F5A1  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026624 +
call ??0CString@@QAE@XZ  +
push offset loc_101F5B0  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026628 +
call ??0CString@@QAE@XZ  +
push offset loc_101F5BF  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_102662C +
call ??0CString@@QAE@XZ  +
push offset loc_101F5CE  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026630 +
call ??0CString@@QAE@XZ  +
push offset loc_101F5DD  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset dword_1026634 +
call ??0CString@@QAE@XZ  +
push offset loc_101F5EC  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
push 0  +
mov ecx offset dword_1026638 +
call ??0CException@@QAE@H@Z  +
push offset loc_101F5FB  +
mov dword_1026638 offset off_1002A04 +
call sub_101A0EB  +
pop ecx  +
retn   +
***
cld   +
adc ch al +
nop   +
sub edi edi +
jmp fword ptr [eax+0Bh]  +
***
test byte ptr [ecx] 1 +
call sub_101A0EB  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov ecx offset unk_1026820 +
call ??0CString@@QAE@XZ  +
push offset loc_101F624  +
call sub_101A0EB  +
pop ecx  +
retn   +
***
call sub_101A0EB  +
pop ecx  +
retn   +
***
jmp fword ptr [eax+42h]  +
***
test byte ptr [ecx] 1 +
call sub_101A0EB  +
pop ecx  +
retn   +
***
mov ecx offset unk_1024434 +
jmp ??1CString@@QAE@XZ  +
***
push offset sub_1008901  +
push 4  +
push 1Ch  +
push offset unk_1024438  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 3  +
push 1Ch  +
push offset unk_10244A8  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 0Bh  +
push 1Ch  +
push offset unk_1024500  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 7  +
push 1Ch  +
push offset unk_1024638  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 3  +
push 1Ch  +
push offset unk_1024700  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 9  +
push 1Ch  +
push offset unk_1024758  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 0Ah  +
push 1Ch  +
push offset unk_1024858  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 4  +
push 1Ch  +
push offset unk_1024970  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 5  +
push 1Ch  +
push offset unk_10249E0  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 3  +
push 1Ch  +
push offset unk_1024A70  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 4  +
push 1Ch  +
push offset unk_1024AC8  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 5  +
push 1Ch  +
push offset unk_1024B38  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 6  +
push 1Ch  +
push offset unk_1024BC8  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 0Ch  +
push 1Ch  +
push offset unk_1024C70  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 4  +
push 1Ch  +
push offset unk_1024DC0  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 13h  +
push 1Ch  +
push offset unk_1024E30  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 3  +
push 1Ch  +
push offset unk_1025048  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 3  +
push 1Ch  +
push offset unk_10250A0  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1008901  +
push 4  +
push 1Ch  +
push offset unk_10250F8  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
mov ecx offset byte_1025168 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset unk_10252B8 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1025328 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1025398 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1025408 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1025478 +
jmp sub_100AC5C  +
***
mov ecx offset unk_10254E8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025558 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_10256A8 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_1025868 +
jmp sub_100AC5C  +
***
mov ecx offset unk_10258D8 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_10259B8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025A28 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025A98 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025B08 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_1025BE8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025C58 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset unk_1025D38 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025DA8 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_1025F68 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1025FD8 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1026048 +
jmp sub_100AC5C  +
***
mov ecx offset byte_10260B8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1026128 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1026198 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1026208 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1026278 +
jmp sub_100AC5C  +
***
mov ecx offset unk_10262E8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1026358 +
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
jmp sub_100AC5C  +
***
mov ecx offset byte_10264A8 +
jmp sub_100AC5C  +
***
mov ecx offset byte_1026518 +
jmp sub_100AC5C  +
***
mov ecx offset unk_1026588 +
jmp sub_100AC5C  +
***
mov ecx offset unk_10265F8 +
jmp loc_10195A4  +
***
mov ecx offset dword_1026618 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026614 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_102661C +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026620 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026624 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026628 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_102662C +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026630 +
jmp ??1CString@@QAE@XZ  +
***
mov ecx offset dword_1026634 +
jmp ??1CString@@QAE@XZ  +
***
mov dword_1026638 offset off_10029EC +
retn   +
***
push 14h  +
push 18h  +
push offset dword_1026640  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
mov ecx offset unk_1026820 +
jmp ??1CString@@QAE@XZ  +
***
jmp ??1AFX_MODULE_STATE@@UAE@XZ  +
***
mov dword_1028D60 offset off_10073E4 +
mov ecx offset dword_1028D60 +
jmp ??1exception@@UAE@XZ  +
***
add eax 60000000h +
retn 101h  +
***
add eax 8A000000h +
retn   +
***
add eax 56000000h +
retf 101h  +
***
add al [eax] +
shr byte ptr [edx+eax] 0 +
push esi  +
sub eax [edx] +
add [esi+2Bh] al +
add al [eax] +
xor al 2Bh +
add al [eax] +
and al 2Bh +
add al [eax] +
mov dh 29h +
add al [eax] +
retn 229h  +
***
retf   +
***
retf 4901h  +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 75707B71h  +
***
