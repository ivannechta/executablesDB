adc eax 52000000h +
push ebx  +
inc esp  +
push ebx  +
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
cmp edi esi +
jnz loc_1001D68  +
mov eax 80041008h +
jmp loc_1001DBA  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1001A70  +
push edi  +
call dword ptr [eax]  +
mov ebx eax +
cmp ebx esi +
jl loc_1001DB7  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_1001DAA  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_1001DB7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1001EE4  +
test [ebp+arg_1C] 60h +
mov ebx [ebp+arg_18] +
jz loc_1001DF3  +
test ebx ebx +
jnz loc_1001EE4  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push offset dword_1001A80  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1001EE9  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
mov edi offset dword_1001A70 +
push edi  +
push esi  +
call dword ptr [eax]  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_1001E34  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1001E2C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
jmp loc_1001EE9  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_1001E79  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1001E68  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1001E75  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_1001EE9  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1001E8A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
test ebx ebx +
jz loc_1001EDF  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1001ED5  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1001EDF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
jmp loc_1001EDF  +
cmp esi 80004002h +
jnz loc_1001EDF  +
xor esi esi +
mov eax [ebp+var_8] +
jmp loc_1001E6B  +
mov eax 80041008h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
cmp eax ebx +
jz loc_1001F43  +
push edi  +
mov edi ds:CoTaskMemFree +
cmp [eax] ebx +
jz loc_1001F1A  +
push dword ptr [eax]  +
call edi  +
mov eax [esi] +
mov [eax] ebx +
mov eax [esi] +
mov eax [eax+10h] +
cmp eax ebx +
jz loc_1001F2B  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+10h] ebx +
mov eax [esi] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1001F3C  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+8] ebx +
push dword ptr [esi]  +
call edi  +
mov [esi] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1001F6C  +
mov eax [ebp+arg_0] +
jb loc_1001F63  +
cmp eax 0FFFFFFFFh +
ja loc_1001F6C  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1001F77  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1001F9A  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1001FA5  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jge loc_1001FBF  +
pop ebp  +
jmp sub_1006E65  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_1001FF9  +
cmp [ebp+arg_0] eax +
jz loc_1001FF9  +
push 8007000Eh  +
call sub_1006E65  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1002017  +
push eax  +
call ds:SysFreeString  +
mov esi [esi+4] +
test esi esi +
jz loc_1002025  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+pvargSrc]  +
mov esi ecx +
push esi  +
call ds:VariantCopy  +
push eax  +
call sub_1001FAE  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_100205E  +
mov edx ecx +
mov eax dword ptr [ebp+vt] +
cmp ecx edx +
jnz loc_100206A  +
cmp ax [ecx] +
jz loc_100207B  +
push eax  +
push 0  +
push edx  +
push ecx  +
call ds:VariantChangeType  +
push eax  +
call sub_1001FAE  +
pop ebp  +
retn 8  +
***
adc eax offset VariantClear +
push eax  +
call sub_1001FAE  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax+7FFBFE00h] +
cmp ecx 0FDFFh +
ja loc_10020B9  +
add eax 0FFFFFE00h +
movzx eax ax +
jmp loc_10020BB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov [ebp+var_4] esi +
mov [ebp+var_8] 9 +
cmp edi esi +
jnz loc_10020E7  +
mov eax 80041008h +
jmp loc_1002126  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
call sub_1001D45  +
cmp eax esi +
jl loc_1002126  +
push esi  +
push [ebp+arg_4]  +
push 3  +
push 6  +
push esi  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push edi  +
call sub_1001DC5  +
cmp eax esi +
jge loc_1002126  +
push esi  +
push [ebp+arg_4]  +
push 3  +
push 6  +
push esi  +
push [ebp+var_4]  +
push 0Ah  +
push edi  +
call sub_1001DC5  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_C] ebx +
jnz loc_100214B  +
mov eax 80041008h +
jmp loc_10022A2  +
push esi  +
push 1Ch  +
call ds:CoTaskMemAlloc  +
mov esi eax +
mov [ebp+var_10] esi +
cmp esi ebx +
jnz loc_1002167  +
mov eax 80041006h +
jmp loc_10022A1  +
push 1Ch  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100216A  +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_10021CC  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
mov edi eax +
lea eax [ebp+cb] +
push eax  +
push 1  +
push edi  +
mov [esi] ebx +
call sub_1001F80  +
test eax eax +
jl loc_10021B5  +
mov eax [ebp+cb] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+cb] +
push ecx  +
push edx  +
push eax  +
call sub_1001F4E  +
test eax eax +
jl loc_10021B5  +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
mov [esi] eax +
cmp [esi] ebx +
jz loc_1002272  +
mov [esi+4] edi +
inc edi  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_10085B6  +
cmp [ebp+arg_8] ebx +
jz loc_1002227  +
push ebx  +
push [ebp+arg_8]  +
call sub_1007C44  +
mov edi eax +
lea eax [ebp+var_8] +
push eax  +
push 1  +
push edi  +
mov [esi+8] ebx +
call sub_1001F80  +
test eax eax +
jl loc_1002212  +
mov eax [ebp+var_8] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+var_8] +
push ecx  +
push edx  +
push eax  +
call sub_1001F4E  +
test eax eax +
jl loc_1002212  +
push [ebp+var_8]  +
call ds:CoTaskMemAlloc  +
mov [esi+8] eax +
cmp [esi+8] ebx +
jz loc_1002272  +
mov [esi+0Ch] edi +
inc edi  +
push edi  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
call sub_10085B6  +
cmp [ebp+arg_4] ebx +
jz loc_1002292  +
push ebx  +
push [ebp+arg_4]  +
call sub_1007C44  +
mov edi eax +
lea eax [ebp+var_C] +
push eax  +
push 1  +
push edi  +
mov [esi+10h] ebx +
call sub_1001F80  +
test eax eax +
jl loc_100226D  +
mov eax [ebp+var_C] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+var_C] +
push ecx  +
push edx  +
push eax  +
call sub_1001F4E  +
test eax eax +
jl loc_100226D  +
push [ebp+var_C]  +
call ds:CoTaskMemAlloc  +
mov [esi+10h] eax +
cmp [esi+10h] ebx +
jnz loc_1002282  +
lea eax [ebp+var_10] +
push eax  +
call sub_1001EF5  +
mov eax 80041006h +
jmp loc_10022A0  +
mov [esi+14h] edi +
inc edi  +
push edi  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
call sub_10085B6  +
mov eax [ebp+arg_C] +
mov dword ptr [esi+18h] 2 +
mov [eax] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_10022D9  +
push dword ptr [ebp+8]  +
call sub_1001FC8  +
jmp loc_10022DB  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
test eax eax +
jnz loc_10022EF  +
push 8007000Eh  +
call sub_1006E65  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jz loc_1002312  +
mov eax [eax] +
test eax eax +
jz loc_1002312  +
push eax  +
call ds:SysStringLen  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+len] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
push edi  +
mov ecx ebx +
mov dword ptr [esi+8] 1 +
call sub_10022FE  +
mov ecx [ebp+arg_4] +
mov edi eax +
call sub_10022FE  +
lea ecx [ebp+len] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call sub_1001F80  +
test eax eax +
jl loc_100236D  +
mov eax [ebp+len] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+len] +
push ecx  +
push edx  +
push eax  +
call sub_1001F4E  +
test eax eax +
jge loc_1002377  +
push 8007000Eh  +
call sub_1006E65  +
push [ebp+len]  +
push 0  +
call ds:SysAllocStringByteLen  +
mov [esi] eax +
test eax eax +
jnz loc_1002399  +
mov eax [ebp+var_4] +
add eax edi +
jz loc_10023E3  +
push 8007000Eh  +
call sub_1006E65  +
mov eax [ebx] +
test eax eax +
jz loc_10023A3  +
mov eax [eax] +
jmp loc_10023A5  +
xor eax eax +
test eax eax +
jz loc_10023B9  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_10023C6  +
mov eax [eax] +
jmp loc_10023C8  +
xor eax eax +
test eax eax +
jz loc_10023E3  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
mov eax [esi] +
lea eax [eax+edi*2] +
push eax  +
call memcpy  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+0Ch] +
xor ebx ebx +
cmp [esi] ebx +
jnz loc_1002496  +
push ebx  +
push ebx  +
push esi  +
push 400h  +
push dword ptr [edi+4]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
mov eax [esi] +
cmp eax ebx +
jz loc_1002456  +
push eax  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1002496  +
mov ecx [esi] +
lea ecx [ecx+eax*2-2] +
cmp word ptr [ecx] 0Ah +
jnz loc_1002496  +
xor edx edx +
mov [ecx] dx +
mov ecx [esi] +
lea eax [ecx+eax*2-4] +
cmp word ptr [eax] 0Dh +
jnz loc_1002496  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1002496  +
push 40h  +
push ebx  +
call ds:LocalAlloc  +
mov [ebp-4] eax +
mov [esi] eax +
cmp eax ebx +
jz loc_1002496  +
mov edi [edi+4] +
push edi  +
call sub_1002099  +
movzx eax ax +
cmp ax bx +
jz loc_1002484  +
movzx eax ax +
push eax  +
push offset aIdispatchError  +
jmp loc_100248A  +
push edi  +
push offset aUnknownError0x  +
push dword ptr [ebp-4]  +
call ds:wsprintfW  +
add esp 0Ch +
mov eax [esi] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov byte ptr [ebp-4] 2 +
mov edi [ebp+8] +
cmp edi ebx +
jnz loc_10024F9  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax 80041008h +
jmp loc_1002681  +
mov esi [ebp+14h] +
mov eax [esi] +
cmp eax ebx +
jz loc_1002529  +
push eax  +
push edi  +
call sub_10020C4  +
mov esi eax +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_1002681  +
cmp [ebp+0Ch] ebx +
jnz loc_1002566  +
cmp [ebp+10h] ebx +
jnz loc_1002566  +
push ebx  +
push ebx  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 9  +
push edi  +
call sub_1001DC5  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jge loc_1002667  +
push ebx  +
push ebx  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0Ah  +
push edi  +
call sub_1001DC5  +
mov [ebp-1Ch] eax +
jmp loc_1002667  +
push offset dword_1001308  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10025DC  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
inc edi  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
mov edi [ebp-18h] +
jnz loc_10025EF  +
mov edi [ebp-20h] +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
mov eax [ebp-14h] +
jnz loc_1002602  +
mov eax [ebp-24h] +
cmp [esi] ebx +
jnz loc_1002618  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push eax  +
call sub_1002131  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jl loc_1002667  +
push ebx  +
push dword ptr [esi]  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 9  +
push dword ptr [ebp+8]  +
call sub_1001DC5  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jge loc_1002648  +
push ebx  +
push dword ptr [esi]  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0Ah  +
push dword ptr [ebp+8]  +
call sub_1001DC5  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 1 +
jmp loc_1002667  +
mov dword ptr [ebp-1Ch] 80041006h +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1002665 +
retn   +
xor ebx ebx +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-1Ch] +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_catch  +
xor edi edi +
mov [ebp-18h] edi +
push offset dword_1001310  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@PBG@Z  +
mov [ebp-4] edi +
mov ebx [ebp+8] +
mov eax 80040154h +
cmp ebx eax +
jz loc_10027FB  +
cmp ebx 80070005h +
jz loc_10027E8  +
cmp ebx 525h +
jz loc_10027ED  +
mov byte ptr [ebp-4] 1 +
mov esi 0FEh +
push esi  +
lea ecx [ebp-14h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-1Ch] eax +
lea eax [ebp-18h] +
push eax  +
push offset riid  +
push 1  +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
cmp eax edi +
jl loc_1002748  +
mov [ebp+8] edi +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push edi  +
push edi  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jl loc_1002748  +
push esi  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
call sub_10085B6  +
push dword ptr [ebp+8]  +
call ds:SysFreeString  +
mov [ebp+8] edi +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_100274E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
jmp loc_100274E  +
push ebx  +
call sub_1006E65  +
push 0FFFFFFFFh  +
lea ecx [ebp-14h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push offset asc_100130C  +
lea ecx [ebp-14h] +
call ??YCHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-14h]  +
call sub_10079AE  +
mov [ebp-4] edi +
jmp loc_1002812  +
add byte ptr ds:loc_1002812[eax] bh +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
mov dword ptr [ebp-4] 2 +
mov eax (offset dword_1002778+32h) +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1002812 +
retn   +
mov ebx 52Eh +
push ebx  +
call ds:SetLastError  +
call sub_1007A15  +
jmp loc_1002812  +
push eax  +
call ds:SetLastError  +
push 1580h  +
call sub_1009994  +
push eax  +
call sub_10079AE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_1002848  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1002005  +
test [ebp+arg_0] 1 +
jz loc_100286E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
call sub_100268E  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor eax eax +
mov [ebp-4] eax +
cmp [ebp+8] eax +
jnz loc_10028C5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_100297B  +
push eax  +
push dword ptr [ebp+8]  +
call sub_1007C44  +
test eax eax +
jz loc_10028B1  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset word_10012B0  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100296D  +
push offset a?  +
lea ecx [ebp-14h] +
call ?FindOneOf@CHString@@QBEHPBG@Z  +
or esi 0FFFFFFFFh +
cmp eax esi +
jz loc_100290E  +
mov [ebp-4] esi +
jmp loc_1002971  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jz loc_1002951  +
inc eax  +
push eax  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jnz loc_1002909  +
mov [ebp-4] esi +
jmp loc_10028B5  +
push 80041006h  +
call sub_100268E  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100296D +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
mov esi [ebp+8] +
cmp esi edi +
jnz loc_10029BB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax edi +
jmp loc_1002AB0  +
push edi  +
push esi  +
call sub_1007C44  +
xor ebx ebx +
inc ebx  +
test eax eax +
mov eax [ebp+0Ch] +
jnz loc_10029D2  +
mov [eax] ebx +
mov edi ebx +
jmp loc_10029A8  +
mov [eax] edi +
mov [ebp-4] bl +
push esi  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push edi  +
push 0Ah  +
push esi  +
call sub_1009418  +
cmp eax ebx +
jz loc_1002AA2  +
push dword ptr [ebp-14h]  +
call sub_1009A46  +
cmp eax ebx +
jnz loc_1002A30  +
push 2  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] edi +
jz loc_1002AA2  +
push offset a@?  +
lea ecx [ebp-14h] +
call ?FindOneOf@CHString@@QBEHPBG@Z  +
or esi 0FFFFFFFFh +
cmp eax esi +
jz loc_1002A49  +
mov [ebp-4] esi +
jmp loc_1002AA6  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jnz loc_1002A44  +
push offset a_  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002A72  +
mov eax [ebp+0Ch] +
mov [eax] ebx +
jmp loc_1002A7F  +
push dword ptr [ebp-14h]  +
call sub_1009EB8  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
mov [ebp-4] esi +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
jmp loc_1002AB0  +
push 80041006h  +
call sub_100268E  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1002AA2 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_1002AE0  +
test esi esi +
jz loc_1002AE0  +
push 1  +
mov ecx esi +
call sub_1002854  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_1002AFD  +
call sub_1002ABD  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_1002B2A  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov ecx edi +
call sub_1002AEA  +
mov eax [esi] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
call sub_1002AEA  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1002B73  +
push dword ptr [ebp+8]  +
call sub_1001FC8  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor edi edi +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_1002BB7  +
push dword ptr [ebp+8]  +
push esi  +
call sub_100231A  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1002AEA  +
mov [esi] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push ecx  +
mov ecx [ebp+8] +
call sub_100282B  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1002B88  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_10022AC  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1002B88  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
and dword ptr [esi] 0 +
cmp word ptr [edi] 8 +
jnz loc_1002C7F  +
push dword ptr [edi+8]  +
call sub_1002B42  +
jmp loc_1002CB6  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push edi  +
push 8  +
lea ecx [ebp-1Ch] +
call sub_1002050  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_1002B42  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1001FAE  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-28h] ebx +
mov [ebp-20h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 1 +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 3 +
push ebx  +
call ds:SetLastError  +
mov edx [ebp+2Ch] +
cmp edx ebx +
jz loc_1002D01  +
mov [edx] ebx +
mov ecx [ebp+28h] +
cmp ecx ebx +
jz loc_1002D0A  +
mov [ecx] ebx +
cmp [ebp+8] ebx +
jz loc_10031F3  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_10031F3  +
cmp [eax] ebx +
jnz loc_10031F3  +
mov edi [ebp+24h] +
cmp edi ebx +
jz loc_10031F3  +
cmp edx ebx +
jz loc_10031F3  +
mov byte ptr [ebp-4] 4 +
mov [ebp-24h] ebx +
lea eax [ebp-28h] +
push eax  +
mov esi [ebp+10h] +
push esi  +
call sub_1002988  +
test eax eax +
jnz loc_1002D5B  +
push 800706BAh  +
call sub_1006E65  +
push dword ptr [ebp+14h]  +
call sub_1002893  +
test eax eax +
jnz loc_1002D71  +
push 525h  +
call sub_1006E65  +
push edi  +
lea ecx [ebp-18h] +
call sub_1002B42  +
cmp esi ebx +
jz loc_1002F55  +
cmp [ebp-28h] ebx +
jnz loc_1002F55  +
push esi  +
lea ecx [ebp-20h] +
call sub_1002B42  +
push esi  +
call sub_1009A46  +
push edi  +
cmp eax 1 +
jnz loc_1002E46  +
lea ecx [ebp-2Ch] +
call sub_10022AC  +
mov byte ptr [ebp-4] 5 +
push offset word_10012B0  +
lea ecx [ebp+10h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 6 +
lea eax [ebp+10h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-20h] +
call sub_1002BD3  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
mov ecx eax +
call sub_1002BD3  +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [ebp-18h] +
call sub_1002B0E  +
mov byte ptr [ebp-4] 7 +
mov ecx [ebp-3Ch] +
cmp ecx ebx +
jz loc_1002E04  +
call sub_1002ABD  +
mov [ebp-3Ch] ebx +
mov byte ptr [ebp-4] 6 +
mov ecx [ebp-40h] +
cmp ecx ebx +
jz loc_1002E17  +
call sub_1002ABD  +
mov [ebp-40h] ebx +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp+10h] +
cmp ecx ebx +
jz loc_1002E2A  +
call sub_1002ABD  +
mov [ebp+10h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-2Ch] +
cmp ecx ebx +
jz loc_1002F07  +
call sub_1002ABD  +
mov [ebp-2Ch] ebx +
jmp loc_1002F07  +
lea ecx [ebp-34h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 9 +
push offset word_10012B0  +
lea ecx [ebp-30h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 0Ah +
lea eax [ebp-20h] +
push eax  +
push offset asc_1001370  +
lea eax [ebp-4Ch] +
push eax  +
call sub_1002C16  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov ecx eax +
call sub_1002BD3  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call sub_1002BD3  +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea ecx [ebp-18h] +
call sub_1002B0E  +
mov byte ptr [ebp-4] 0Ch +
mov ecx [ebp-44h] +
cmp ecx ebx +
jz loc_1002EBB  +
call sub_1002ABD  +
mov [ebp-44h] ebx +
mov byte ptr [ebp-4] 0Bh +
mov ecx [ebp-48h] +
cmp ecx ebx +
jz loc_1002ECE  +
call sub_1002ABD  +
mov [ebp-48h] ebx +
mov byte ptr [ebp-4] 0Ah +
mov ecx [ebp-4Ch] +
cmp ecx ebx +
jz loc_1002EE1  +
call sub_1002ABD  +
mov [ebp-4Ch] ebx +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_1002EF4  +
call sub_1002ABD  +
mov [ebp-30h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1002F07  +
call sub_1002ABD  +
mov [ebp-34h] ebx +
cmp [ebp+14h] ebx +
jz loc_1002F55  +
push ebx  +
push dword ptr [ebp+14h]  +
call sub_1007C44  +
test eax eax +
jz loc_1002F55  +
push dword ptr [ebp+14h]  +
lea ecx [ebp-1Ch] +
call sub_1002B42  +
push dword ptr [ebp+18h]  +
lea ecx [ebp-14h] +
call sub_1002B42  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_1002F4A  +
lea ecx [ebp-14h] +
call sub_10022FE  +
test eax eax +
jnz loc_1002F4A  +
push ebx  +
lea ecx [ebp-14h] +
call sub_1002B42  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1002F55  +
mov edx [eax] +
jmp loc_1002F57  +
xor edx edx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1002F62  +
mov ecx [eax] +
jmp loc_1002F64  +
xor ecx ecx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1002F6F  +
mov eax [eax] +
jmp loc_1002F71  +
xor eax eax +
mov edi [ebp+8] +
mov esi [edi] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
push edi  +
call dword ptr [esi+0Ch]  +
mov esi eax +
mov [ebp-38h] esi +
cmp esi ebx +
jge loc_1003110  +
cmp esi 80070005h +
jnz loc_100302D  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_1003022  +
lea ecx [ebp-1Ch] +
call sub_10022FE  +
test eax eax +
jz loc_1003022  +
lea ecx [ebp-14h] +
call sub_10022FE  +
test eax eax +
jnz loc_1003022  +
push offset dword_1001308  +
lea ecx [ebp+14h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 0Eh +
cmp [eax] ebx +
jz loc_1002FD6  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1002FD8  +
xor eax eax +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_1002FE3  +
mov edx [ecx] +
jmp loc_1002FE5  +
xor edx edx +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_1002FF0  +
mov ecx [ecx] +
jmp loc_1002FF2  +
xor ecx ecx +
mov esi [edi] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push edx  +
push ecx  +
push edi  +
call dword ptr [esi+0Ch]  +
mov esi eax +
mov [ebp-38h] esi +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_100301A  +
call sub_1002ABD  +
mov [ebp+14h] ebx +
cmp esi ebx +
jge loc_1003103  +
push esi  +
call sub_1006E65  +
jmp loc_1003110  +
mov edi 80041064h +
cmp esi edi +
jnz loc_100308E  +
mov dword ptr [ebp-28h] 1 +
push ebx  +
lea ecx [ebp-1Ch] +
call sub_1002B42  +
push ebx  +
lea ecx [ebp-14h] +
call sub_1002B42  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-18h] +
call sub_1002B42  +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1003065  +
mov eax [eax] +
jmp loc_1003067  +
xor eax eax +
mov ecx [ebp+8] +
mov edx [ecx] +
push dword ptr [ebp+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov esi eax +
mov [ebp-38h] esi +
cmp esi ebx +
jl loc_1003022  +
mov eax [ebp+28h] +
cmp eax ebx +
jz loc_100301A  +
mov [eax] edi +
jmp loc_100301A  +
mov edi 80040154h +
cmp esi edi +
jnz loc_100301A  +
push 1580h  +
call sub_1009994  +
push eax  +
call sub_10079AE  +
mov eax [ebp+28h] +
mov [eax] edi +
mov [ebp-24h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_10030C2  +
call sub_1002ABD  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_10030D5  +
call sub_1002ABD  +
mov [ebp-1Ch] ebx +
mov [ebp-4] bl +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10030E7  +
call sub_1002ABD  +
mov [ebp-18h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-20h] +
cmp ecx ebx +
jz loc_1003201  +
call sub_1002ABD  +
mov [ebp-20h] ebx +
jmp loc_1003201  +
push offset dword_1001308  +
lea ecx [ebp-14h] +
call sub_1002B42  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100311B  +
mov ecx [eax] +
jmp loc_100311D  +
xor ecx ecx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1003128  +
mov eax [eax] +
jmp loc_100312A  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push ecx  +
push eax  +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
call sub_10024A2  +
mov [ebp-38h] eax +
cmp eax ebx +
jge loc_1003146  +
push eax  +
call sub_1006E65  +
xor ecx ecx +
inc ecx  +
mov [ebp-24h] ecx +
mov eax [ebp+28h] +
cmp eax ebx +
jz loc_1003155  +
mov [eax] ebx +
mov eax [ebp-28h] +
mov edx [ebp+2Ch] +
mov [edx] eax +
mov [ebp-24h] ecx +
mov dword ptr [ebp-4] 3 +
jmp loc_10031A3  +
retn   +
xor ebx ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_10031B6  +
call sub_1002ABD  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_10031C9  +
call sub_1002ABD  +
mov [ebp-1Ch] ebx +
mov [ebp-4] bl +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10031DB  +
call sub_1002ABD  +
mov [ebp-18h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-20h] +
cmp ecx ebx +
jz loc_10031EE  +
call sub_1002ABD  +
mov [ebp-20h] ebx +
mov eax [ebp-24h] +
jmp loc_1003203  +
cmp ecx ebx +
jz loc_10031FD  +
mov dword ptr [ecx] 80041008h +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
call __EH_epilog3  +
retn 28h  +
***
call __EH_prolog3_catch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10032F2 +
retn   +
***
call __EH_prolog3_catch  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jz loc_10034A9  +
cmp [ebp+0Ch] ebx +
jz loc_10034A9  +
mov [ebp-4] ebx +
lea eax [ebp-28h] +
push eax  +
call ds:VariantInit  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_10022AC  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_100344B  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100344D  +
xor eax eax +
mov ecx [esi] +
push ebx  +
push ebx  +
lea edx [ebp-28h] +
push edx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+10h]  +
mov [ebp-14h] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1003470  +
call sub_1002ABD  +
mov [ebp+0Ch] ebx +
lea eax [ebp-28h] +
push eax  +
cmp [ebp-14h] ebx +
jge loc_1003484  +
call ds:VariantClear  +
mov eax [ebp-14h] +
jmp loc_10034AE  +
mov ecx [ebp+10h] +
call sub_100202C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
jmp loc_1003479  +
mov eax [ebp-18h] +
mov eax [eax+4] +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1003490 +
retn   +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
xor esi esi +
mov [ebp-4] esi +
push esi  +
call ds:SetLastError  +
mov ecx [ebp+10h] +
call ?Empty@CHString@@QAEXXZ  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+14h]  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] esi +
jz loc_10034FE  +
cmp [ebp+0Ch] esi +
jnz loc_1003508  +
push 80041008h  +
call sub_1006E65  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1003403  +
cmp eax esi +
jge loc_1003521  +
push eax  +
call sub_1006E65  +
push 8  +
pop eax  +
cmp ax [ebp-24h] +
jnz loc_1003562  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_1002C5B  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1003544  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1003546  +
xor eax eax +
push eax  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
cmp ecx esi +
jz loc_1003562  +
call sub_1002ABD  +
mov [ebp+0Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1001FAE  +
xor eax eax +
inc eax  +
jmp loc_10035B7  +
retn   +
push 80041006h  +
call sub_100268E  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10035A1 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_1001FAE  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-24h] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] esi +
push esi  +
call ds:SetLastError  +
mov edi [ebp+8] +
cmp edi esi +
jnz loc_1003614  +
push 80041008h  +
call sub_100268E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
mov byte ptr [ebp-4] 1 +
push offset aWin32_operatin  +
lea ecx [ebp+8] +
call sub_10022AC  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1003633  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1003635  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-18h] +
push edx  +
push esi  +
push 30h  +
push eax  +
push edi  +
call dword ptr [ecx+48h]  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
cmp ecx esi +
jz loc_1003658  +
call sub_1002ABD  +
mov [ebp+8] esi +
cmp edi esi +
jge loc_1003662  +
push edi  +
call sub_1006E65  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call sub_10020C4  +
cmp eax esi +
jge loc_1003677  +
push eax  +
call sub_1006E65  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
or ebx 0FFFFFFFFh +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax esi +
jge loc_1003698  +
push eax  +
call sub_1006E65  +
cmp [ebp-24h] esi +
jnz loc_10036CC  +
push 1  +
call sub_100268E  +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_10036B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_10036C4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] ebx +
jmp loc_1003602  +
push 138Dh  +
call sub_1009994  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset aVersion  +
push dword ptr [ebp-1Ch]  +
call sub_10034BB  +
test eax eax +
mov eax [ebp-1Ch] +
jz loc_10036A7  +
cmp eax esi +
jz loc_10036FC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_100370C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-20h] esi +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi ebx +
jnz loc_1003740  +
push esi  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_1009418  +
test eax eax +
jz loc_10036C4  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_1009232  +
mov [ebp-20h] eax +
jmp loc_100385F  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
push esi  +
push 0Ah  +
push eax  +
call sub_1009418  +
mov ebx eax +
neg ebx  +
sbb bl bl +
inc bl  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
test bl bl +
jnz loc_10035FE  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
push 0Ah  +
pop ebx  +
push ebx  +
push eax  +
call sub_1009232  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
inc edi  +
push edi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_10037FD  +
push esi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1009418  +
test eax eax +
jz loc_10035FE  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_1009232  +
mov esi eax +
jmp loc_100385F  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 6 +
mov eax [eax] +
push esi  +
push ebx  +
push eax  +
call sub_1009418  +
mov ebx eax +
neg ebx  +
sbb bl bl +
inc bl  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
test bl bl +
jnz loc_10035FE  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 7 +
mov eax [eax] +
push 0Ah  +
push eax  +
call sub_1009232  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-20h] +
imul eax eax +
add eax esi +
mov [ebp-28h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-28h] +
jmp loc_100360C  +
***
retn   +
***
push 80041006h  +
call sub_100268E  +
mov eax [ebp-1Ch] +
xor esi esi +
cmp eax esi +
jz loc_10038D0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_10038E0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] esi +
mov eax offset loc_10035FE +
retn   +
***
mov edi edi +
push esi  +
push 0Bh  +
pop esi  +
push esi  +
call sub_1009994  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_100863C  +
inc esi  +
cmp esi 25h +
jbe loc_10038F4  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CF0h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [ebp+var_CEC] eax +
mov [ebp+lpString2] ecx +
test eax eax +
jnz loc_100396B  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
jmp loc_1003B46  +
push ebx  +
push esi  +
push edi  +
push 5  +
lea esi [ebp+var_A58] +
pop edi  +
and dword ptr [esi-4] 0 +
and dword ptr [esi] 0 +
push 41h  +
push offset dword_1001310  +
lea eax [esi-88h] +
push eax  +
call sub_10085B6  +
add esi 294h +
dec edi  +
jnz loc_1003977  +
push 0Ah  +
push 26h  +
call sub_1009994  +
push eax  +
call sub_1009232  +
mov esi 0FEh +
push esi  +
push 2  +
mov [ebp+var_AE8] eax +
mov [ebp+var_AE4] 1010h +
call sub_1009994  +
push eax  +
lea eax [ebp+var_CE8] +
push eax  +
call sub_10085B6  +
push 0Ah  +
push 27h  +
call sub_1009994  +
push eax  +
call sub_1009232  +
mov edi [ebp+arg_C] +
mov [ebp+var_854] eax +
mov eax edi +
dec eax  +
neg eax  +
sbb eax eax +
mov ebx 1000h +
and eax ebx +
push esi  +
add eax 10h +
push 3  +
mov [ebp+var_850] eax +
call sub_1009994  +
push eax  +
lea eax [ebp+var_A54] +
push eax  +
call sub_10085B6  +
push 0Ah  +
push 28h  +
call sub_1009994  +
push eax  +
call sub_1009232  +
dec edi  +
neg edi  +
sbb edi edi +
and edi ebx +
push esi  +
add edi 10h +
push 4  +
mov [ebp+var_5C0] eax +
mov [ebp+var_5BC] edi +
call sub_1009994  +
push eax  +
lea eax [ebp+var_7C0] +
push eax  +
call sub_10085B6  +
push 0Ah  +
push 29h  +
call sub_1009994  +
push eax  +
call sub_1009232  +
push esi  +
push 5  +
mov [ebp+var_32C] eax +
mov [ebp+var_328] 10h +
call sub_1009994  +
push eax  +
lea eax [ebp+var_52C] +
push eax  +
call sub_10085B6  +
push 0Ah  +
push 2Ah  +
call sub_1009994  +
push eax  +
call sub_1009232  +
push esi  +
push 6  +
mov [ebp+var_98] eax +
mov [ebp+var_94] 8C010h +
call sub_1009994  +
push eax  +
lea eax [ebp+var_298] +
push eax  +
call sub_10085B6  +
mov esi [ebp+lpString2] +
xor edi edi +
cmp esi edi +
jz loc_1003B0A  +
push edi  +
push 1  +
push esi  +
push 7  +
call sub_1009994  +
push eax  +
call sub_1007C65  +
test eax eax +
jnz loc_1003ADF  +
xor esi esi +
inc esi  +
jmp loc_1003B0D  +
push edi  +
push 1  +
push esi  +
push 8  +
call sub_1009994  +
push eax  +
call sub_1007C65  +
test eax eax +
jnz loc_1003AF9  +
push 3  +
pop esi  +
jmp loc_1003B23  +
push edi  +
push 1  +
push esi  +
push 9  +
call sub_1009994  +
push eax  +
call sub_1007C65  +
push 2  +
pop esi  +
push 46h  +
call sub_1009994  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_100863C  +
cmp [ebp+arg_8] 1 +
push [ebp+var_CEC]  +
lea eax [ebp+var_CE8] +
jnz loc_1003B37  +
or esi ebx +
push esi  +
push eax  +
push 5  +
call sub_100B11F  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1007233  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
cmp ebx esi +
jz loc_1003BEC  +
cmp [ebp+arg_8] esi +
jz loc_1003BEC  +
cmp [ebp+arg_C] esi +
jz loc_1003BEC  +
push esi  +
push ebx  +
call sub_1007C44  +
mov [ebp+var_4] eax +
imul eax eax +
shr eax 1 +
lea eax [eax+eax+4] +
push eax  +
call sub_1007E45  +
mov [ebp+lpString] eax +
test eax eax +
jnz loc_1003B9B  +
push 8  +
jmp loc_1003BEE  +
mov ax [ebx+edi*2] +
mov ecx [ebp+lpString] +
mov [ecx+esi*2] ax +
mov ecx [ebp+lpString] +
inc esi  +
inc edi  +
mov ax [ebx+edi*2] +
mov [ecx+esi*2] ax +
mov ecx [ebp+lpString] +
inc esi  +
inc edi  +
cmp edi [ebp+var_4] +
jnb loc_1003BCA  +
mov eax [ebp+arg_C] +
mov ax [eax] +
mov [ecx+esi*2] ax +
inc esi  +
jmp loc_1003B9B  +
push [ebp+arg_4]  +
xor eax eax +
mov [ecx+esi*2] ax +
push [ebp+lpString]  +
push [ebp+arg_8]  +
call sub_10085B6  +
lea eax [ebp+lpString] +
push eax  +
call sub_10081E1  +
xor eax eax +
inc eax  +
jmp loc_1003C0E  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
mov [ebp+totalentries] esi +
mov [ebp+resumehandle] esi +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jnz loc_1003C5A  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
jmp loc_1003D33  +
push 1FCh  +
call sub_1007E45  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_1003C6F  +
push 8  +
jmp loc_1003C35  +
push edi  +
push esi  +
push [ebp+lpString]  +
call sub_1007C44  +
test eax eax +
jz loc_1003CA3  +
push 0FEh  +
push [ebp+lpString]  +
push [ebp+var_4]  +
call sub_10085B6  +
lea eax [ebp+resumehandle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
push [ebp+entriesread]  +
push 0FFFFFFFFh  +
push [ebp+bufptr]  +
push esi  +
push [ebp+var_4]  +
jmp loc_1003CB5  +
lea eax [ebp+resumehandle] +
push eax  +
lea eax [ebp+totalentries] +
push eax  +
push [ebp+entriesread]  +
push 0FFFFFFFFh  +
push [ebp+bufptr]  +
push esi  +
push esi  +
call NetWkstaTransportEnum  +
mov edi eax +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
cmp edi esi +
pop edi  +
jz loc_1003D30  +
call ds:GetLastError  +
cmp eax 32h +
jz loc_1003D1E  +
cmp eax 35h +
jz loc_1003D1A  +
cmp eax 7Bh +
jz loc_1003D16  +
cmp eax 3E5h +
jz loc_1003CFB  +
cmp eax 6B5h +
jz loc_1003CF7  +
push 10001h  +
jmp loc_1003C45  +
push 44h  +
jmp loc_1003D20  +
push 3Eh  +
call sub_1009994  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_100863C  +
jmp loc_1003C53  +
push 43h  +
jmp loc_1003D20  +
push 42h  +
jmp loc_1003D20  +
push 41h  +
call sub_1009994  +
push eax  +
mov eax ds:_iob +
add eax 40h +
jmp loc_1003D0B  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1003D5F  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
call sub_10035C4  +
cmp eax 1388h +
ja loc_1003D5F  +
xor eax eax +
inc eax  +
jmp loc_1003D61  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push esi  +
call ds:VariantInit  +
push [ebp+pvargSrc]  +
push esi  +
call ds:VariantCopy  +
push eax  +
call sub_1001FAE  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
call ?Compare@CHString@@QBEHPBG@Z  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov eax [ebp+0Ch] +
mov [ebp-24Ch] eax +
mov ecx [ebp+10h] +
mov [ebp-25Ch] ecx +
mov edi [ebp+14h] +
mov [ebp-258h] edi +
mov eax [ebp+18h] +
mov [ebp-248h] eax +
mov eax [ebp+1Ch] +
mov [ebp-260h] eax +
mov eax [ebp+2Ch] +
mov [ebp-250h] eax +
xor esi esi +
cmp [ebp+20h] esi +
jz loc_100436B  +
cmp [ebp+24h] esi +
jz loc_100436B  +
cmp [ebp+28h] esi +
jz loc_100436B  +
cmp eax esi +
jz loc_100436B  +
mov [ebp-4] esi +
mov ebx 0FEh +
push ebx  +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-268h] eax +
push ebx  +
mov ecx edi +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-264h] eax +
push ebx  +
mov ecx [ebp-248h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-254h] eax +
push ebx  +
mov ecx [ebp-260h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-26Ch] eax +
push ebx  +
push offset Buffer  +
push dword ptr [ebp-254h]  +
call sub_10085B6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push 8  +
push offset aParser2  +
lea eax [ebp-244h] +
push eax  +
call sub_1008573  +
xor edi edi +
inc edi  +
mov [ebp-23Ch] edi +
mov dword ptr [ebp-224h] offset aS_6 +
mov [ebp-220h] esi +
mov [ebp-21Ch] esi +
mov dword ptr [ebp-234h] 0C0h +
mov [ebp-230h] esi +
mov [ebp-22Ch] edi +
mov [ebp-228h] esi +
mov eax [ebp-268h] +
mov [ebp-218h] eax +
mov [ebp-214h] ebx +
mov [ebp-210h] esi +
mov [ebp-20Ch] esi +
mov [ebp-208h] esi +
mov [ebp-204h] esi +
mov [ebp-200h] esi +
mov [ebp-1FCh] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-1F4h] +
push eax  +
call sub_1008573  +
mov [ebp-1ECh] edi +
mov dword ptr [ebp-1D4h] offset aU +
mov [ebp-1D0h] esi +
mov [ebp-1CCh] esi +
mov dword ptr [ebp-1E4h] 0C0h +
mov [ebp-1E0h] esi +
mov [ebp-1DCh] edi +
mov [ebp-1D8h] esi +
mov eax [ebp-264h] +
mov [ebp-1C8h] eax +
mov [ebp-1C4h] ebx +
mov [ebp-1C0h] esi +
mov [ebp-1BCh] esi +
mov [ebp-1B8h] esi +
mov [ebp-1B4h] esi +
mov [ebp-1B0h] esi +
mov [ebp-1ACh] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-1A4h] +
push eax  +
call sub_1008573  +
mov [ebp-19Ch] edi +
mov dword ptr [ebp-184h] offset aP +
mov [ebp-180h] esi +
mov [ebp-17Ch] esi +
mov dword ptr [ebp-194h] 10h +
mov [ebp-190h] esi +
mov [ebp-18Ch] edi +
mov [ebp-188h] esi +
mov eax [ebp-254h] +
mov [ebp-178h] eax +
mov [ebp-174h] ebx +
mov [ebp-170h] esi +
mov [ebp-16Ch] esi +
mov [ebp-168h] esi +
mov [ebp-164h] esi +
mov [ebp-160h] esi +
mov [ebp-15Ch] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-154h] +
push eax  +
call sub_1008573  +
mov [ebp-14Ch] edi +
mov dword ptr [ebp-134h] offset aFo +
mov [ebp-130h] esi +
push 2Fh  +
call sub_1009994  +
mov [ebp-12Ch] eax +
mov dword ptr [ebp-144h] 0C2h +
mov [ebp-140h] esi +
mov [ebp-13Ch] edi +
mov [ebp-138h] esi +
mov eax [ebp-26Ch] +
mov [ebp-128h] eax +
mov [ebp-124h] ebx +
mov [ebp-120h] esi +
mov [ebp-11Ch] esi +
mov [ebp-118h] esi +
mov [ebp-114h] esi +
mov [ebp-110h] esi +
mov [ebp-10Ch] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-104h] +
push eax  +
call sub_1008573  +
mov dword ptr [ebp-0FCh] 0Ah +
mov dword ptr [ebp-0E4h] offset a?_0 +
mov [ebp-0E0h] esi +
mov [ebp-0DCh] esi +
mov dword ptr [ebp-0F4h] 20000h +
mov [ebp-0F0h] esi +
mov [ebp-0ECh] edi +
mov [ebp-0E8h] esi +
mov eax [ebp+28h] +
mov [ebp-0D8h] eax +
mov [ebp-0D4h] ebx +
mov [ebp-0D0h] esi +
mov [ebp-0CCh] esi +
mov [ebp-0C8h] esi +
mov [ebp-0C4h] esi +
mov [ebp-0C0h] esi +
mov [ebp-0BCh] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-0B4h] +
push eax  +
call sub_1008573  +
mov dword ptr [ebp-0ACh] 0Ah +
mov dword ptr [ebp-94h] offset aNh +
mov [ebp-90h] esi +
mov [ebp-8Ch] esi +
mov [ebp-0A4h] esi +
mov [ebp-0A0h] esi +
mov [ebp-9Ch] edi +
mov [ebp-98h] esi +
mov eax [ebp+24h] +
mov [ebp-88h] eax +
mov [ebp-84h] ebx +
mov [ebp-80h] esi +
mov [ebp-7Ch] esi +
mov [ebp-78h] esi +
mov [ebp-74h] esi +
mov [ebp-70h] esi +
mov [ebp-6Ch] esi +
push 8  +
push offset aParser2  +
lea eax [ebp-64h] +
push eax  +
call sub_1008573  +
mov dword ptr [ebp-5Ch] 0Ah +
mov dword ptr [ebp-44h] offset aV +
mov [ebp-40h] esi +
mov [ebp-3Ch] esi +
mov [ebp-54h] esi +
mov [ebp-50h] esi +
mov [ebp-4Ch] edi +
mov [ebp-48h] esi +
mov eax [ebp+20h] +
mov [ebp-38h] eax +
mov [ebp-34h] ebx +
mov [ebp-30h] esi +
mov [ebp-2Ch] esi +
mov [ebp-28h] esi +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
push esi  +
lea eax [ebp-244h] +
push eax  +
push 7  +
or ebx 0FFFFFFFFh +
push ebx  +
push dword ptr [ebp-24Ch]  +
push dword ptr [ebp+8]  +
call sub_100C01F  +
mov [ebp-24Ch] eax +
push ebx  +
mov ecx [ebp-25Ch] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push ebx  +
mov ecx [ebp-258h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push ebx  +
mov ecx [ebp-248h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push ebx  +
mov ebx [ebp-260h] +
mov ecx ebx +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
cmp [ebp-24Ch] esi +
jz loc_1004378  +
mov eax [ebp+28h] +
cmp [eax] edi +
jnz loc_100426A  +
cmp dword ptr [ebp+8] 2 +
jbe loc_100426A  +
push 800401E4h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
push 47h  +
call sub_1009994  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100863C  +
jmp loc_100438B  +
cmp [ebp-1D8h] esi +
jz loc_100427E  +
cmp [ebp-228h] esi +
jnz loc_100428A  +
push 2Ch  +
jmp loc_1004251  +
cmp [ebp-188h] esi +
jz loc_100428A  +
push 2Dh  +
jmp loc_1004251  +
mov ebx [ebx] +
push esi  +
push edi  +
push ebx  +
push 7  +
call sub_1009994  +
push eax  +
call sub_1007C65  +
test eax eax +
jnz loc_10042AB  +
mov eax [ebp+24h] +
cmp [eax] edi +
jnz loc_10042AB  +
push 31h  +
jmp loc_1004251  +
cmp [ebp-228h] esi +
jz loc_10042CA  +
mov eax [ebp-25Ch] +
mov eax [eax] +
push esi  +
push eax  +
call sub_1007C44  +
test eax eax +
jnz loc_10042CA  +
push 45h  +
jmp loc_1004251  +
cmp [ebp-1D8h] esi +
jz loc_10042EC  +
mov eax [ebp-258h] +
mov eax [eax] +
push esi  +
push eax  +
call sub_1007C44  +
test eax eax +
jnz loc_10042EC  +
push 30h  +
jmp loc_1004251  +
cmp [ebp-188h] esi +
jz loc_100431A  +
push offset Buffer  +
mov ecx [ebp-248h] +
call ?Compare@CHString@@QBEHPBG@Z  +
test eax eax +
jnz loc_1004312  +
mov eax [ebp-250h] +
mov [eax] edi +
jmp loc_100433D  +
cmp [ebp-188h] esi +
jnz loc_100433D  +
cmp [ebp-228h] esi +
jnz loc_100432A  +
cmp [ebp-1D8h] esi +
jz loc_100433D  +
mov eax [ebp-250h] +
mov [eax] edi +
mov ecx [ebp-248h] +
call ?Empty@CHString@@QAEXXZ  +
mov eax edi +
jmp loc_100438D  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100438B +
retn   +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
call sub_1007312  +
retn 28h  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-4] esi +
push 2  +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jge loc_10043BE  +
push eax  +
call sub_1006E65  +
push esi  +
push esi  +
push esi  +
push 3  +
push 1  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
cmp eax esi +
jge loc_10043DA  +
push eax  +
call sub_1006E65  +
push dword ptr [ebp+8]  +
push offset stru_1001AE0  +
push 1  +
push esi  +
push offset stru_1001BB0  +
call ds:CoCreateInstance  +
cmp eax esi +
jge loc_10043FA  +
push eax  +
call sub_1006E65  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_100442D  +
mov eax [ebp-14h] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100442B +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov dword ptr [ebp-1Ch] 1 +
xor ebx ebx +
mov [ebp-14h] ebx +
lea eax [ebp-30h] +
push eax  +
call ds:VariantInit  +
mov [ebp-4] ebx +
push offset dword_1001310  +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov esi [ebp+0Ch] +
mov edi ds:VariantClear +
cmp dword ptr [ebp-1Ch] 1 +
jnz loc_1004519  +
mov eax [esi] +
lea ecx [ebp-1Ch] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push 1  +
push 0FFFFFFFFh  +
push esi  +
call dword ptr [eax+10h]  +
cmp eax ebx +
jge loc_100449F  +
push eax  +
call sub_1006E65  +
cmp [ebp-1Ch] ebx +
jz loc_1004519  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-30h] +
push edx  +
push ebx  +
push offset aCaption  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10044C3  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-30h] +
jz loc_1004479  +
xor eax eax +
cmp ax [ebp-30h] +
jz loc_1004479  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-30h] +
push eax  +
call edi  +
push dword ptr [ebp+8]  +
call sub_100C447  +
push ebx  +
test eax eax +
jz loc_1004509  +
push 1  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+8]  +
call sub_100D0D0  +
cmp eax 0FFFFFFFFh +
jnz loc_1004479  +
push ebx  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+8]  +
call sub_100C826  +
jmp loc_1004479  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-30h] +
push eax  +
call edi  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100453B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_10045CF  +
lea eax [ebp-30h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-20h] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100457D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10045CD +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-30h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10045C3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10045CD +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch_GS  +
mov esi [ebp+8] +
mov [ebp-258h] esi +
mov eax [ebp+0Ch] +
mov [ebp-250h] eax +
mov eax [ebp+10h] +
mov [ebp-26Ch] eax +
mov eax [ebp+14h] +
mov [ebp-24Ch] eax +
mov eax [ebp+18h] +
mov [ebp-270h] eax +
mov edi [ebp+1Ch] +
xor ebx ebx +
mov [ebp-274h] ebx +
mov dword ptr [ebp-278h] 1 +
mov [ebp-238h] ebx +
mov [ebp-244h] ebx +
mov [ebp-220h] ebx +
mov [ebp-240h] ebx +
mov [ebp-218h] ebx +
mov [ebp-234h] ebx +
mov [ebp-21Ch] ebx +
mov [ebp-248h] ebx +
mov [ebp-264h] ebx +
mov [ebp-214h] ebx +
mov [ebp-210h] ebx +
push 1F8h  +
push ebx  +
lea eax [ebp-20Ch] +
push eax  +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_10052CD  +
cmp [ebp-250h] ebx +
jz loc_10052CD  +
cmp [ebp-26Ch] ebx +
jz loc_10052CD  +
cmp [ebp-24Ch] ebx +
jz loc_10052CD  +
cmp edi ebx +
jz loc_10052CD  +
lea eax [ebp-230h] +
push eax  +
call ds:VariantInit  +
mov [ebp-4] ebx +
mov esi offset dword_1001310 +
push esi  +
lea ecx [ebp-23Ch] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
push esi  +
lea ecx [ebp-25Ch] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 2 +
mov esi 0FEh +
push esi  +
push offset aAssociatorsOfW  +
lea eax [ebp-210h] +
push eax  +
call sub_10085B6  +
push esi  +
push edi  +
lea eax [ebp-210h] +
push eax  +
call sub_10085F9  +
push esi  +
push offset aWhereResultcla  +
lea eax [ebp-210h] +
push eax  +
call sub_10085F9  +
lea eax [ebp-210h] +
push eax  +
lea ecx [ebp-268h] +
call sub_10022AC  +
mov edi eax +
mov byte ptr [ebp-4] 3 +
push offset aWql  +
lea ecx [ebp-288h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 4 +
cmp [edi] ebx +
jz loc_1004760  +
mov edi [edi] +
mov ecx [edi] +
mov [ebp-254h] ecx +
jmp loc_1004766  +
mov [ebp-254h] ebx +
cmp [eax] ebx +
jz loc_1004770  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1004772  +
xor ecx ecx +
mov eax [ebp-250h] +
mov edx [eax] +
lea edi [ebp-234h] +
push edi  +
push ebx  +
push 10h  +
push dword ptr [ebp-254h]  +
push ecx  +
push eax  +
call dword ptr [edx+50h]  +
mov edi eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-288h] +
cmp ecx ebx +
jz loc_10047AA  +
call sub_1002ABD  +
mov [ebp-288h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-268h] +
cmp ecx ebx +
jz loc_10047C3  +
call sub_1002ABD  +
mov [ebp-268h] ebx +
cmp edi ebx +
jge loc_10047CD  +
push edi  +
call sub_1006E65  +
push dword ptr [ebp-270h]  +
push dword ptr [ebp-234h]  +
call sub_10020C4  +
cmp eax ebx +
jge loc_10047E8  +
push eax  +
call sub_1006E65  +
cmp dword ptr [ebp-278h] 1 +
jnz loc_10048DD  +
mov eax [ebp-234h] +
mov ecx [eax] +
lea edx [ebp-278h] +
push edx  +
lea edx [ebp-238h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_100481D  +
push eax  +
call sub_1006E65  +
cmp [ebp-278h] ebx +
jz loc_10048DD  +
mov eax [ebp-238h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSettingid  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_100484E  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-230h] +
jz loc_10047E8  +
xor eax eax +
cmp ax [ebp-230h] +
jz loc_10047E8  +
lea eax [ebp-230h] +
push eax  +
lea ecx [ebp-29Ch] +
call sub_1003D6A  +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-29Ch] +
push eax  +
lea ecx [ebp-254h] +
call sub_1002C5B  +
mov byte ptr [ebp-4] 6 +
cmp [eax] ebx +
jz loc_100489B  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100489D  +
xor eax eax +
push eax  +
lea ecx [ebp-25Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp-254h] +
cmp ecx ebx +
jz loc_10048C2  +
call sub_1002ABD  +
mov [ebp-254h] ebx +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-29Ch] +
push eax  +
mov edi ds:VariantClear +
call edi  +
push eax  +
call sub_1001FAE  +
jmp loc_10048E3  +
mov edi ds:VariantClear +
push dword ptr [ebp-26Ch]  +
call sub_100C447  +
mov [ebp-268h] eax +
push esi  +
call sub_1007E45  +
mov [ebp-21Ch] eax +
cmp eax ebx +
jnz loc_100497E  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-238h] +
cmp eax ebx +
jz loc_100493A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-238h] ebx +
mov eax [ebp-234h] +
cmp eax ebx +
jz loc_1004950  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-234h] ebx +
lea eax [ebp-21Ch] +
push eax  +
call sub_10081E1  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-25Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-23Ch] +
call ??1CHString@@QAE@XZ  +
jmp loc_10052ED  +
mov [ebp-260h] ebx +
mov eax [ebp-260h] +
cmp eax [ebp-268h] +
jnb loc_1005064  +
push ebx  +
push 1  +
push offset String2  +
push eax  +
push dword ptr [ebp-26Ch]  +
call sub_100CBF4  +
push eax  +
call sub_1007C65  +
test eax eax +
jz loc_1004FD0  +
push offset aStdregprov  +
lea ecx [ebp-250h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 7 +
cmp [eax] ebx +
jz loc_10049D6  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10049D8  +
xor eax eax +
mov ecx [ebp-258h] +
mov edx [ecx] +
push ebx  +
lea esi [ebp-244h] +
push esi  +
push ebx  +
push ebx  +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
mov esi eax +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-250h] +
cmp ecx ebx +
jz loc_1004A0A  +
call sub_1002ABD  +
mov [ebp-250h] ebx +
cmp esi ebx +
jge loc_1004A14  +
push esi  +
call sub_1006E65  +
mov eax [ebp-244h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-240h] +
push edx  +
push ebx  +
push offset aGetmultistring  +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax ebx +
jge loc_1004A38  +
push eax  +
call sub_1006E65  +
mov eax [ebp-240h] +
mov ecx [eax] +
lea edx [ebp-218h] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jge loc_1004A56  +
push eax  +
call sub_1006E65  +
push 3  +
pop eax  +
mov [ebp-230h] ax +
mov dword ptr [ebp-228h] 80000002h +
mov eax [ebp-218h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aHdefkey  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-230h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1004A99  +
push esi  +
call sub_1006E65  +
push dword ptr [ebp-21Ch]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset aSystemCurrentc  +
push dword ptr [ebp-21Ch]  +
call sub_10085B6  +
push dword ptr [ebp-21Ch]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push dword ptr [ebp-260h]  +
push dword ptr [ebp-26Ch]  +
call sub_100CBF4  +
push eax  +
push dword ptr [ebp-21Ch]  +
call sub_10085F9  +
push dword ptr [ebp-21Ch]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset aLinkage  +
push dword ptr [ebp-21Ch]  +
call sub_10085F9  +
push 8  +
pop eax  +
mov [ebp-230h] ax +
push dword ptr [ebp-21Ch]  +
call ds:SysAllocString  +
mov [ebp-228h] eax +
mov eax [ebp-218h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSsubkeyname  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-230h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1004B4B  +
push esi  +
call sub_1006E65  +
push 8  +
pop eax  +
mov [ebp-230h] ax +
push offset aRoute  +
call ds:SysAllocString  +
mov [ebp-228h] eax +
mov eax [ebp-218h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSvaluename  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-230h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1004B95  +
push esi  +
call sub_1006E65  +
push offset aGetmultistring  +
lea ecx [ebp-280h] +
call sub_10022AC  +
mov esi eax +
mov byte ptr [ebp-4] 8 +
push offset aStdregprov  +
lea ecx [ebp-284h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 9 +
cmp [esi] ebx +
jz loc_1004BC9  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1004BCB  +
xor esi esi +
cmp [eax] ebx +
jz loc_1004BD5  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1004BD7  +
xor eax eax +
mov ecx [ebp-258h] +
mov ecx [ecx] +
push ebx  +
lea edx [ebp-220h] +
push edx  +
push dword ptr [ebp-218h]  +
push ebx  +
push ebx  +
push esi  +
push eax  +
push dword ptr [ebp-258h]  +
call dword ptr [ecx+60h]  +
mov esi eax +
mov byte ptr [ebp-4] 8 +
mov ecx [ebp-284h] +
cmp ecx ebx +
jz loc_1004C15  +
call sub_1002ABD  +
mov [ebp-284h] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-280h] +
cmp ecx ebx +
jz loc_1004C2E  +
call sub_1002ABD  +
mov [ebp-280h] ebx +
cmp esi ebx +
jge loc_1004C38  +
push esi  +
call sub_1006E65  +
push 3  +
pop eax  +
mov [ebp-230h] ax +
mov eax [ebp-220h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aReturnvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1004C67  +
push eax  +
call sub_1006E65  +
cmp [ebp-228h] ebx +
jnz loc_1004D88  +
lea eax [ebp-230h] +
push eax  +
call edi  +
push 8  +
pop eax  +
mov [ebp-230h] ax +
mov eax [ebp-220h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1004CAB  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-230h] +
jz loc_1004D88  +
xor eax eax +
cmp ax [ebp-230h] +
jz loc_1004D88  +
mov esi [ebp-228h] +
cmp esi ebx +
jz loc_1004D88  +
lea eax [ebp-248h] +
push eax  +
push 1  +
push esi  +
call ds:SafeArrayGetLBound  +
cmp eax ebx +
jge loc_1004CF2  +
push eax  +
call sub_1006E65  +
lea eax [ebp-264h] +
push eax  +
push 1  +
push esi  +
call ds:SafeArrayGetUBound  +
cmp eax ebx +
jge loc_1004D0C  +
push eax  +
call sub_1006E65  +
mov [ebp-274h] ebx +
mov eax [ebp-248h] +
mov [ebp-214h] eax +
mov eax [ebp-214h] +
cmp eax [ebp-264h] +
jg loc_1004D88  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-214h] +
push eax  +
push esi  +
call ds:SafeArrayGetElement  +
cmp eax ebx +
jge loc_1004D4B  +
push eax  +
call sub_1006E65  +
push dword ptr [ebp-228h]  +
lea ecx [ebp-23Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-25Ch]  +
push dword ptr [ebp-23Ch]  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_1004D80  +
mov dword ptr [ebp-274h] 1 +
jmp loc_1004D95  +
inc dword ptr [ebp-214h]  +
jmp loc_1004D1E  +
cmp dword ptr [ebp-274h] 1 +
jnz loc_1004FD0  +
push 8  +
pop eax  +
mov [ebp-230h] ax +
push offset aExport  +
call ds:SysAllocString  +
mov [ebp-228h] eax +
mov eax [ebp-218h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSvaluename  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-230h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1004DDF  +
push esi  +
call sub_1006E65  +
push offset aGetmultistring  +
lea ecx [ebp-270h] +
call sub_10022AC  +
mov esi eax +
mov byte ptr [ebp-4] 0Ah +
push offset aStdregprov  +
lea ecx [ebp-27Ch] +
call sub_10022AC  +
mov byte ptr [ebp-4] 0Bh +
cmp [esi] ebx +
jz loc_1004E13  +
mov esi [esi] +
mov esi [esi] +
jmp loc_1004E15  +
xor esi esi +
cmp [eax] ebx +
jz loc_1004E1F  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1004E21  +
xor eax eax +
mov ecx [ebp-258h] +
mov ecx [ecx] +
push ebx  +
lea edx [ebp-220h] +
push edx  +
push dword ptr [ebp-218h]  +
push ebx  +
push ebx  +
push esi  +
push eax  +
push dword ptr [ebp-258h]  +
call dword ptr [ecx+60h]  +
mov esi eax +
mov byte ptr [ebp-4] 0Ah +
mov ecx [ebp-27Ch] +
cmp ecx ebx +
jz loc_1004E5F  +
call sub_1002ABD  +
mov [ebp-27Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-270h] +
cmp ecx ebx +
jz loc_1004E78  +
call sub_1002ABD  +
mov [ebp-270h] ebx +
cmp esi ebx +
jge loc_1004E82  +
push esi  +
call sub_1006E65  +
push 3  +
pop eax  +
mov [ebp-230h] ax +
mov eax [ebp-220h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aReturnvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1004EB1  +
push eax  +
call sub_1006E65  +
cmp [ebp-228h] ebx +
jnz loc_1004FD0  +
lea eax [ebp-230h] +
push eax  +
call edi  +
push 8  +
pop eax  +
mov [ebp-230h] ax +
mov eax [ebp-220h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-230h] +
push edx  +
push ebx  +
push offset aSvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1004EF5  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-230h] +
jz loc_1004FD0  +
xor eax eax +
cmp ax [ebp-230h] +
jz loc_1004FD0  +
mov esi [ebp-228h] +
cmp esi ebx +
jz loc_1004FD0  +
lea eax [ebp-248h] +
push eax  +
push 1  +
push esi  +
call ds:SafeArrayGetLBound  +
cmp eax ebx +
jge loc_1004F3C  +
push eax  +
call sub_1006E65  +
lea eax [ebp-264h] +
push eax  +
push 1  +
push esi  +
call ds:SafeArrayGetUBound  +
cmp eax ebx +
jge loc_1004F56  +
push eax  +
call sub_1006E65  +
mov eax [ebp-248h] +
mov [ebp-214h] eax +
mov eax [ebp-214h] +
cmp eax [ebp-264h] +
jg loc_1004FEC  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-214h] +
push eax  +
push esi  +
call ds:SafeArrayGetElement  +
cmp eax ebx +
jge loc_1004F8F  +
push eax  +
call sub_1006E65  +
push dword ptr [ebp-228h]  +
lea ecx [ebp-23Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-25Ch]  +
push dword ptr [ebp-23Ch]  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_1004FDB  +
push ebx  +
push dword ptr [ebp-23Ch]  +
push dword ptr [ebp-24Ch]  +
call sub_100C826  +
mov edi ds:VariantClear +
inc dword ptr [ebp-260h]  +
jmp loc_1004984  +
inc dword ptr [ebp-214h]  +
mov edi ds:VariantClear +
jmp loc_1004F62  +
cmp ebx ebx +
jnz loc_1004FD0  +
lea eax [ebp-248h] +
push eax  +
push 1  +
push esi  +
call ds:SafeArrayGetLBound  +
mov eax [ebp-248h] +
mov [ebp-214h] eax +
mov eax [ebp-214h] +
cmp eax [ebp-264h] +
jg loc_1004FD0  +
lea eax [ebp-228h] +
push eax  +
lea eax [ebp-214h] +
push eax  +
push esi  +
call ds:SafeArrayGetElement  +
cmp eax ebx +
jge loc_1005039  +
push eax  +
call sub_1006E65  +
push dword ptr [ebp-228h]  +
lea ecx [ebp-23Ch] +
call ??4CHString@@QAEABV0@PBG@Z  +
push ebx  +
push dword ptr [ebp-23Ch]  +
push dword ptr [ebp-24Ch]  +
call sub_100C826  +
inc dword ptr [ebp-214h]  +
jmp loc_100500C  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-25Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-23Ch] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-24Ch]  +
call sub_100C447  +
test eax eax +
ja loc_10050A8  +
push ebx  +
push 2Bh  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-24Ch]  +
call sub_100C826  +
lea eax [ebp-21Ch] +
push eax  +
call sub_10081E1  +
mov eax [ebp-238h] +
cmp eax ebx +
jz loc_10050CA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-238h] ebx +
mov eax [ebp-244h] +
cmp eax ebx +
jz loc_10050E0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-244h] ebx +
mov eax [ebp-220h] +
cmp eax ebx +
jz loc_10050F6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-220h] ebx +
mov eax [ebp-240h] +
cmp eax ebx +
jz loc_100510C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-240h] ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_1005122  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
mov eax [ebp-234h] +
cmp eax ebx +
jz loc_1005132  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_10052EF  +
lea eax [ebp-230h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-28Ch] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-21Ch] +
push eax  +
call sub_10081E1  +
mov eax [ebp-238h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100518C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-238h] ebx +
mov eax [ebp-244h] +
cmp eax ebx +
jz loc_10051A2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-244h] ebx +
mov eax [ebp-220h] +
cmp eax ebx +
jz loc_10051B8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-220h] ebx +
mov eax [ebp-240h] +
cmp eax ebx +
jz loc_10051CE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-240h] ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_10051E4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
mov eax [ebp-234h] +
cmp eax ebx +
jz loc_10051FA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-234h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10052ED +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-230h] +
push eax  +
call ds:VariantClear  +
lea eax [ebp-21Ch] +
push eax  +
call sub_10081E1  +
mov eax [ebp-238h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1005255  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-238h] ebx +
mov eax [ebp-244h] +
cmp eax ebx +
jz loc_100526B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-244h] ebx +
mov eax [ebp-220h] +
cmp eax ebx +
jz loc_1005281  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-220h] ebx +
mov eax [ebp-240h] +
cmp eax ebx +
jz loc_1005297  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-240h] ebx +
mov eax [ebp-218h] +
cmp eax ebx +
jz loc_10052AD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-218h] ebx +
mov eax [ebp-234h] +
cmp eax ebx +
jz loc_10052C3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-234h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10052ED +
retn   +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
call sub_1007312  +
retn 18h  +
***
call __EH_prolog3_catch  +
mov dword ptr [ebp-2Ch] 1 +
xor ebx ebx +
mov [ebp-18h] ebx +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov [ebp-28h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-14h] ebx +
cmp [ebp+8] ebx +
jz loc_10058B6  +
cmp [ebp+10h] ebx +
jz loc_10058B6  +
mov esi [ebp+14h] +
cmp esi ebx +
jz loc_10058B6  +
cmp [ebp+18h] ebx +
jz loc_10058B6  +
lea eax [ebp-48h] +
push eax  +
call ds:VariantInit  +
mov [ebp-4] ebx +
push offset dword_1001310  +
lea ecx [ebp+14h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
jge loc_1005377  +
push eax  +
call sub_1006E65  +
mov edi ds:VariantClear +
cmp dword ptr [ebp-2Ch] 1 +
jnz loc_1005713  +
mov eax [esi] +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-18h] +
push ecx  +
push 1  +
push 0FFFFFFFFh  +
push esi  +
call dword ptr [eax+10h]  +
cmp eax ebx +
jge loc_10053A3  +
push eax  +
call sub_1006E65  +
cmp [ebp-2Ch] ebx +
jz loc_1005713  +
mov eax [ebp-18h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aMacaddress  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10053CB  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-48h] +
jz loc_100537D  +
xor eax eax +
cmp ax [ebp-48h] +
jz loc_100537D  +
push dword ptr [ebp-40h]  +
lea ecx [ebp+14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-48h] +
push eax  +
call edi  +
push ebx  +
push 1  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_1007C65  +
test eax eax +
jnz loc_100537D  +
mov eax [ebp-18h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aSettingid  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005422  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-48h] +
jz loc_1005713  +
xor eax eax +
cmp ax [ebp-48h] +
jz loc_1005713  +
push dword ptr [ebp-40h]  +
lea ecx [ebp+14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-48h] +
push eax  +
call edi  +
push 3F8h  +
call sub_1007E45  +
mov [ebp-14h] eax +
cmp eax ebx +
jnz loc_100549D  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_100548D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov [ebp-4] bl +
lea ecx [ebp+14h] +
call ??1CHString@@QAE@XZ  +
jmp loc_10058D6  +
push offset aStdregprov  +
lea ecx [ebp+10h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 2 +
cmp [eax] ebx +
jz loc_10054B8  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_10054BA  +
xor ecx ecx +
mov eax [ebp+18h] +
mov edx [eax] +
push ebx  +
lea esi [ebp-24h] +
push esi  +
push ebx  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edx+18h]  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+10h] +
cmp ecx ebx +
jz loc_10054E0  +
call sub_1002ABD  +
mov [ebp+10h] ebx +
cmp esi ebx +
jge loc_10054EA  +
push esi  +
call sub_1006E65  +
mov eax [ebp-24h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-28h] +
push edx  +
push ebx  +
push offset aGetstringvalue  +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax ebx +
jge loc_1005508  +
push eax  +
call sub_1006E65  +
mov eax [ebp-28h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+3Ch]  +
cmp eax ebx +
jge loc_1005520  +
push eax  +
call sub_1006E65  +
push 3  +
pop eax  +
mov [ebp-48h] ax +
mov dword ptr [ebp-40h] 80000002h +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aHdefkey  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-48h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1005554  +
push esi  +
call sub_1006E65  +
push dword ptr [ebp-14h]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset aSystemCurren_0  +
push dword ptr [ebp-14h]  +
call sub_10085B6  +
mov esi [ebp+14h] +
push dword ptr [ebp-14h]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push esi  +
push dword ptr [ebp-14h]  +
call sub_10085F9  +
push dword ptr [ebp-14h]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset aConnection  +
push dword ptr [ebp-14h]  +
call sub_10085F9  +
push 8  +
pop eax  +
mov [ebp-48h] ax +
push dword ptr [ebp-14h]  +
mov esi ds:SysAllocString +
call esi  +
mov [ebp-40h] eax +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aSsubkeyname  +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+10h] eax +
lea eax [ebp-48h] +
push eax  +
call edi  +
cmp [ebp+10h] ebx +
jge loc_10055DA  +
push dword ptr [ebp+10h]  +
call sub_1006E65  +
push 8  +
pop eax  +
mov [ebp-48h] ax +
push offset aName  +
call esi  +
mov [ebp-40h] eax +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aSvaluename  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
lea eax [ebp-48h] +
push eax  +
call edi  +
cmp esi ebx +
jge loc_1005611  +
push esi  +
call sub_1006E65  +
push offset aGetstringvalue  +
lea ecx [ebp-34h] +
call sub_10022AC  +
mov esi eax +
mov byte ptr [ebp-4] 3 +
push offset aStdregprov  +
lea ecx [ebp-30h] +
call sub_10022AC  +
mov byte ptr [ebp-4] 4 +
cmp [esi] ebx +
jz loc_1005642  +
mov esi [esi] +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_1005645  +
mov [ebp+10h] ebx +
cmp [eax] ebx +
jz loc_100564F  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1005651  +
xor ecx ecx +
mov eax [ebp+18h] +
mov edx [eax] +
push ebx  +
lea esi [ebp-20h] +
push esi  +
push dword ptr [ebp-1Ch]  +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
push ecx  +
push eax  +
call dword ptr [edx+60h]  +
mov esi eax +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_100567D  +
call sub_1002ABD  +
mov [ebp-30h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1005690  +
call sub_1002ABD  +
mov [ebp-34h] ebx +
cmp esi ebx +
jge loc_100569A  +
push esi  +
call sub_1006E65  +
push 3  +
pop eax  +
mov [ebp-48h] ax +
mov eax [ebp-20h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aReturnvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10056C0  +
push eax  +
call sub_1006E65  +
cmp [ebp-40h] ebx +
jnz loc_1005713  +
lea eax [ebp-48h] +
push eax  +
call edi  +
push 8  +
pop eax  +
mov [ebp-48h] ax +
mov eax [ebp-20h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aSvalue  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10056F1  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-48h] +
jz loc_1005727  +
xor eax eax +
cmp ax [ebp-48h] +
jz loc_1005727  +
push dword ptr [ebp-40h]  +
lea ecx [ebp+14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push ebx  +
push dword ptr [ebp+14h]  +
jmp loc_100571C  +
push ebx  +
push 2Bh  +
call sub_1009994  +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100CAAF  +
mov [ebp-4] bl +
lea ecx [ebp+14h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-48h] +
push eax  +
call edi  +
lea eax [ebp-14h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1005755  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-24h] +
cmp eax ebx +
jz loc_1005765  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-24h] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_1005775  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_1005785  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1005792  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_10058D8  +
lea eax [ebp-48h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-38h] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-14h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10057DD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-24h] +
cmp eax ebx +
jz loc_10057ED  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-24h] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_10057FD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_100580D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100581D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10058D6 +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-48h] +
push eax  +
call ds:VariantClear  +
lea eax [ebp-14h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_100586C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-24h] +
cmp eax ebx +
jz loc_100587C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-24h] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_100588C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov eax [ebp-28h] +
cmp eax ebx +
jz loc_100589C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-28h] ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_10058AC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10058D6 +
retn   +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-14h] ebx +
mov dword ptr [ebp-24h] 1 +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov edi [ebp+8] +
cmp edi ebx +
jz loc_1005E3F  +
cmp [ebp+0Ch] ebx +
jz loc_1005E3F  +
cmp [ebp+10h] ebx +
jz loc_1005E3F  +
cmp [ebp+18h] ebx +
jz loc_1005E3F  +
cmp [ebp+1Ch] ebx +
jz loc_1005E3F  +
cmp [ebp+20h] ebx +
jz loc_1005E3F  +
lea eax [ebp-38h] +
push eax  +
mov esi ds:VariantInit +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov [ebp-4] ebx +
push offset dword_1001310  +
lea ecx [ebp+8] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov esi ds:VariantClear +
cmp dword ptr [ebp-24h] 1 +
jnz loc_1005D42  +
mov eax [ebp+10h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-14h] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005990  +
push eax  +
call sub_1006E65  +
cmp [ebp-24h] ebx +
jz loc_1005D42  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-48h] +
push edx  +
push ebx  +
push offset aNetconnections  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10059B8  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-48h] +
jz loc_1005967  +
push ebx  +
push edi  +
call sub_100C9F1  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push ebx  +
push offset aSystemname  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10059E7  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-38h] +
jz loc_10059FD  +
xor eax eax +
cmp ax [ebp-38h] +
jz loc_10059FD  +
push dword ptr [ebp-30h]  +
jmp loc_1005A05  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-38h] +
push eax  +
call esi  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100CAAF  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push ebx  +
push offset aNetconnectioni  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005A3F  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-38h] +
jz loc_1005A55  +
xor eax eax +
cmp ax [ebp-38h] +
jz loc_1005A55  +
push dword ptr [ebp-30h]  +
jmp loc_1005A5D  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-38h] +
push eax  +
call esi  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100CAAF  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push ebx  +
push offset aName_0  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005A97  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-38h] +
jz loc_1005AAD  +
xor eax eax +
cmp ax [ebp-38h] +
jz loc_1005AAD  +
push dword ptr [ebp-30h]  +
jmp loc_1005AB5  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-38h] +
push eax  +
call esi  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100CAAF  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push ebx  +
push offset aMacaddress  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005AEF  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-38h] +
jz loc_1005B33  +
xor eax eax +
cmp ax [ebp-38h] +
jz loc_1005B33  +
push dword ptr [ebp-30h]  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov dword ptr [ebp-20h] 2 +
lea ecx [ebp+8] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov ecx [ebp-20h] +
cmp ecx [eax+4] +
jge loc_1005B4C  +
push 2Dh  +
push ecx  +
lea ecx [ebp+8] +
call ?SetAt@CHString@@QAEXHG@Z  +
add dword ptr [ebp-20h] 3 +
jmp loc_1005B12  +
cmp [ebp-40h] ebx +
jnz loc_1005B3C  +
push 3Dh  +
jmp loc_1005B3E  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-38h] +
push eax  +
call esi  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100CAAF  +
call sub_100C3A7  +
mov [ebp-18h] eax +
cmp eax ebx +
jnz loc_1005BB7  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-38h] +
push eax  +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005BA7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
jmp loc_1005E5F  +
mov eax [ebp-40h] +
cmp eax 2 +
jnz loc_1005C94  +
mov eax [ebp-14h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-38h] +
push edx  +
push ebx  +
push offset aDeviceid  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1005BE2  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-38h] +
jz loc_1005C4B  +
xor eax eax +
cmp ax [ebp-38h] +
jz loc_1005C4B  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-58h] +
call sub_1003D6A  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_1002C5B  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_1005C1D  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1005C1F  +
xor eax eax +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1005C3B  +
call sub_1002ABD  +
mov [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-58h] +
push eax  +
call esi  +
push eax  +
call sub_1001FAE  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
call sub_10045DC  +
cmp eax ebx +
jnz loc_1005D1A  +
lea eax [ebp-38h] +
push eax  +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005C86  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
lea eax [ebp-18h] +
push eax  +
call sub_100C41C  +
jmp loc_1005BA7  +
cmp eax 0Ah +
ja loc_1005CC8  +
jmp ds:off_1005E69[eax*4]  +
push 32h  +
jmp loc_1005CCA  +
push 33h  +
jmp loc_1005CCA  +
push 34h  +
jmp loc_1005CCA  +
push 35h  +
jmp loc_1005CCA  +
push 36h  +
jmp loc_1005CCA  +
push 37h  +
jmp loc_1005CCA  +
push 38h  +
jmp loc_1005CCA  +
push 39h  +
jmp loc_1005CCA  +
push 3Ah  +
jmp loc_1005CCA  +
push 3Bh  +
jmp loc_1005CCA  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp+8] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset dword_1001310  +
lea eax [ebp+8] +
push eax  +
call sub_1003D95  +
test eax eax +
jz loc_1005D0E  +
lea eax [ebp-38h] +
push eax  +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
jmp loc_1005B97  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-18h]  +
call sub_100C826  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100D158  +
inc dword ptr [ebp-1Ch]  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005967  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
jmp loc_1005967  +
mov [ebp-4] bl +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
call sub_100C447  +
test eax eax +
jbe loc_1005D84  +
push dword ptr [ebp-18h]  +
call sub_100C447  +
test eax eax +
ja loc_1005D84  +
push ebx  +
push 2Bh  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-18h]  +
call sub_100C826  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push edi  +
call sub_100D158  +
lea eax [ebp-38h] +
push eax  +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1005D9D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_1005E61  +
lea eax [ebp-38h] +
push eax  +
mov esi ds:VariantClear +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-28h] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1005DE7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005E5F +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-38h] +
push eax  +
mov esi ds:VariantClear +
call esi  +
lea eax [ebp-48h] +
push eax  +
call esi  +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1005E35  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005E5F +
retn   +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
call __EH_epilog3  +
retn 1Ch  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov dword ptr [ebp-3Ch] 1 +
mov [ebp-28h] ebx +
mov [ebp-40h] ebx +
mov [ebp-18h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-20h] ebx +
mov [ebp-24h] ebx +
cmp [ebp+8] ebx +
jz loc_10064FA  +
cmp [ebp+0Ch] ebx +
jz loc_10064FA  +
cmp [ebp+10h] ebx +
jz loc_10064FA  +
cmp [ebp+18h] ebx +
jz loc_10064FA  +
cmp [ebp+1Ch] ebx +
jz loc_10064FA  +
cmp [ebp+24h] ebx +
jz loc_10064FA  +
cmp [ebp+14h] ebx +
jz loc_10064FA  +
mov [ebp-4] ebx +
push offset dword_1001310  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-40h] +
push eax  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-18h] +
push eax  +
call sub_1003C1A  +
mov [ebp-30h] eax +
cmp eax ebx +
jnz loc_1005F3E  +
mov [ebp-4] bl +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
jmp loc_100651A  +
mov eax [ebp-18h] +
mov [ebp-44h] eax +
mov esi 100h +
push esi  +
call sub_1007E45  +
mov [ebp-20h] eax +
push esi  +
call sub_1007E45  +
mov [ebp-24h] eax +
cmp [ebp-20h] ebx +
jnz loc_1005F98  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
cmp [ebp-18h] ebx +
jz loc_1005F76  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
jmp loc_1005F2E  +
cmp eax ebx +
jnz loc_1005FAA  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
jmp loc_1005F63  +
mov [ebp-38h] ebx +
mov edi ds:VariantClear +
mov eax [ebp-38h] +
cmp eax [ebp-40h] +
jnb loc_10063CC  +
push esi  +
imul eax eax +
mov ecx [ebp-44h] +
push dword ptr [eax+ecx+0Ch]  +
push dword ptr [ebp-20h]  +
call sub_10085B6  +
push ebx  +
push 1  +
push offset a000000000000  +
push dword ptr [ebp-20h]  +
call sub_1007C65  +
test eax eax +
jz loc_10063C4  +
push 48h  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-24h]  +
push esi  +
push dword ptr [ebp-20h]  +
call sub_1003B59  +
mov [ebp-30h] eax +
cmp eax ebx +
jnz loc_100602D  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
cmp [ebp-18h] ebx +
jz loc_1005F2E  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
jmp loc_1005F2E  +
lea eax [ebp-58h] +
push eax  +
call ds:VariantInit  +
mov [ebp-30h] ebx +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_100604D  +
push eax  +
call sub_1006E65  +
cmp dword ptr [ebp-3Ch] 1 +
jnz loc_10063C4  +
mov eax [ebp+10h] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1006076  +
push eax  +
call sub_1006E65  +
cmp [ebp-3Ch] ebx +
jz loc_10063C4  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-58h] +
push edx  +
push ebx  +
push offset aMacaddress  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_100609E  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-58h] +
jz loc_100604D  +
xor eax eax +
cmp ax [ebp-58h] +
jz loc_100604D  +
push dword ptr [ebp-50h]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-58h] +
push eax  +
call edi  +
push ebx  +
push 1  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-24h]  +
call sub_1007C65  +
test eax eax +
jnz loc_100604D  +
mov dword ptr [ebp-30h] 1 +
push 0Ah  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-24h]  +
push esi  +
push dword ptr [ebp-20h]  +
call sub_1003B59  +
push ebx  +
push 1  +
push dword ptr [ebp-24h]  +
push 3  +
push dword ptr [ebp+8]  +
call sub_100D0F4  +
cmp eax ebx +
jnz loc_1006121  +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_10063C4  +
push eax  +
call sub_1006E65  +
jmp loc_10063C4  +
push ebx  +
push dword ptr [ebp+8]  +
call sub_100C9F1  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-58h] +
push edx  +
push ebx  +
push offset aSystemname  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1006149  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-58h] +
jz loc_100615F  +
xor eax eax +
cmp ax [ebp-58h] +
jz loc_100615F  +
push dword ptr [ebp-50h]  +
jmp loc_1006167  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-58h] +
push eax  +
call edi  +
push ebx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_100CAAF  +
push 48h  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-24h]  +
push esi  +
push dword ptr [ebp-20h]  +
call sub_1003B59  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_10052FC  +
mov [ebp-30h] eax +
cmp eax ebx +
jnz loc_10061DE  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1006017  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
jmp loc_1006017  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-58h] +
push edx  +
push ebx  +
push offset aName_0  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10061FD  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-58h] +
jz loc_1006213  +
xor eax eax +
cmp ax [ebp-58h] +
jz loc_1006213  +
push dword ptr [ebp-50h]  +
jmp loc_100621B  +
push 2Bh  +
call sub_1009994  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-58h] +
push eax  +
call edi  +
push ebx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_100CAAF  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-58h] +
push edx  +
push ebx  +
push offset aMacaddress  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_1006257  +
push eax  +
call sub_1006E65  +
push dword ptr [ebp-50h]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov dword ptr [ebp-34h] 2 +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov ecx [ebp-34h] +
cmp ecx [eax+4] +
jge loc_100628A  +
push 2Dh  +
push ecx  +
lea ecx [ebp-14h] +
call ?SetAt@CHString@@QAEXHG@Z  +
add dword ptr [ebp-34h] 3 +
jmp loc_1006269  +
lea eax [ebp-58h] +
push eax  +
call edi  +
push ebx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_100CAAF  +
call sub_100C3A7  +
mov [ebp-2Ch] eax +
cmp eax ebx +
jnz loc_10062D0  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
jmp loc_10061B3  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-58h] +
push edx  +
push ebx  +
push offset aDeviceid  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
jge loc_10062EF  +
push eax  +
call sub_1006E65  +
xor eax eax +
inc eax  +
cmp ax [ebp-58h] +
jz loc_1006358  +
xor eax eax +
cmp ax [ebp-58h] +
jz loc_1006358  +
lea eax [ebp-58h] +
push eax  +
lea ecx [ebp-68h] +
call sub_1003D6A  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-68h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_1002C5B  +
mov byte ptr [ebp-4] 3 +
cmp [eax] ebx +
jz loc_100632A  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100632C  +
xor eax eax +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1006348  +
call sub_1002ABD  +
mov [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-68h] +
push eax  +
call edi  +
push eax  +
call sub_1001FAE  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
call sub_10045DC  +
mov [ebp-30h] eax +
cmp eax ebx +
jnz loc_10063B3  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1006398  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
cmp [ebp-18h] ebx +
jz loc_10063A5  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
lea eax [ebp-2Ch] +
push eax  +
call sub_100C41C  +
jmp loc_1005F2E  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_100D158  +
inc dword ptr [ebp-28h]  +
inc dword ptr [ebp-38h]  +
jmp loc_1005FB3  +
mov [ebp-4] bl +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-18h] ebx +
jz loc_10063E8  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
push dword ptr [ebp+8]  +
call sub_100C447  +
test eax eax +
jbe loc_100641F  +
push dword ptr [ebp-2Ch]  +
call sub_100C447  +
test eax eax +
ja loc_100641F  +
push ebx  +
push 2Bh  +
call sub_1009994  +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_100C826  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+8]  +
call sub_100D158  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100643E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
jmp loc_100651C  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-48h] +
push dword ptr [eax+4]  +
call sub_100268E  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-1Ch] +
xor ebx ebx +
cmp eax ebx +
jz loc_1006488  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
cmp [ebp-18h] ebx +
jz loc_1006495  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100651A +
retn   +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
lea eax [ebp-20h] +
push eax  +
call sub_10081E1  +
lea eax [ebp-24h] +
push eax  +
call sub_10081E1  +
mov eax [ebp-1Ch] +
xor ebx ebx +
cmp eax ebx +
jz loc_10064E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
cmp [ebp-18h] ebx +
jz loc_10064F0  +
push dword ptr [ebp-18h]  +
call NetApiBufferFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100651A +
retn   +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
xor eax eax +
call __EH_epilog3  +
retn 20h  +
***
call __EH_prolog3_catch  +
mov eax [ebp-6Ch] +
call sub_1007A15  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10099AC  +
mov eax [ebp-18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1006DE0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] ebx +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1006DF0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_1006E00  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
mov eax [ebp-2Ch] +
cmp eax ebx +
jz loc_1006E10  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-2Ch] ebx +
mov eax [ebp-30h] +
cmp eax ebx +
jz loc_1006E20  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-30h] ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_1006E30  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
lea eax [ebp-24h] +
push eax  +
call sub_1001EF5  +
call ds:CoUninitialize  +
lea eax [ebp-38h] +
push eax  +
call sub_100C41C  +
lea eax [ebp-44h] +
push eax  +
call sub_100C41C  +
call sub_10084A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1006590 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call loc_1006EE4  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+0Ch] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_1001888 +
mov [esi+8] eax +
test eax eax +
jz loc_1006EAB  +
cmp [ebp+arg_8] 0 +
jz loc_1006EAB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_1001888 +
test eax eax +
jz loc_1006ECF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_1006EDD  +
push esi  +
call ds:LocalFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
push dword ptr [ebp+8]  +
call sub_1006E7D  +
push offset dword_100E1E8  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001888 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov eax [eax+8] +
and dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
test eax eax +
jz loc_1006F3B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1006EB7  +
test byte ptr [ebp+8] 1 +
jz loc_1006F61  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1006F89  +
test eax eax +
jnz loc_1006F8E  +
mov ecx [esi] +
test ecx ecx +
jz loc_1006F86  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1006F7A  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1010098 +
push offset dword_1010088  +
push dword_1010094  +
mov dword_1010088 eax +
push offset dword_1010078  +
push offset dword_101007C  +
push offset dword_1010074  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1010084 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1007016  +
cmp eax esi +
jnz loc_1007009  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1007019  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1006FF0  +
xor esi esi +
inc esi  +
mov eax dword_10104E8 +
cmp eax esi +
jnz loc_100702C  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1007067  +
mov eax dword_10104E8 +
test eax eax +
jnz loc_1007061  +
mov dword_10104E8 esi +
push offset dword_1001284  +
push offset dword_1001278  +
call sub_1006F6D  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007067  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1007131  +
mov dword_1010090 esi +
mov eax dword_10104E8 +
cmp eax esi +
jnz loc_100708B  +
push offset dword_1001274  +
push offset dword_100126C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10104E8 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1007098  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10104F0 ebx +
jz loc_10070B9  +
push offset dword_10104F0  +
call sub_10074A9  +
pop ecx  +
test eax eax +
jz loc_10070B9  +
push ebx  +
push 2  +
push ebx  +
call dword_10104F0  +
push dword_1010078  +
push dword_101007C  +
push dword_1010074  +
call sub_1006529  +
add esp 0Ch +
mov dword_101008C eax +
cmp dword_1010080 ebx +
jnz loc_1007117  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_101008C eax +
xor ebx ebx +
cmp dword_1010080 ebx +
jnz loc_1007117  +
push eax  +
call ds:_exit  +
cmp dword_1010090 ebx +
jnz loc_1007125  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101008C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100714E  +
xor eax eax +
jmp loc_100719B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100714A  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1007188  +
cmp ecx 20Bh +
jnz loc_100714A  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100714A  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1007196  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100714A  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1010080 eax +
call sub_1007642  +
push eax  +
call ds:__set_app_type  +
or dword_10104E0 0FFFFFFFFh +
or dword_10104E4 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10100A0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101009C +
mov [eax] ecx +
call sub_10075D4  +
cmp dword_1010058 0 +
jnz loc_10071F4  +
push offset sub_10075D4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10075BC  +
xor eax eax +
retn   +
***
call sub_1007681  +
jmp sub_1006FCE  +
***
jmp ds:__CxxFrameHandler3  +
***
cmp ecx dword_101003C +
jnz loc_100723E  +
retn 0  +
jmp loc_1007717  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101003C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101003C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101003C +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1007233  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100734C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10073EA  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10073EA  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10073E4  +
cmp eax 19930521h +
jz loc_10073E4  +
cmp eax 19930522h +
jz loc_10073E4  +
cmp eax 1994000h +
jnz loc_10073EA  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10073AC+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1007436  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1007432  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100749D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1007495  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100749F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1007485  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1007420  +
pop ecx  +
test eax eax +
jz loc_1007506  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1007460  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007506  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100750F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1007233  +
push offset dword_101003C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007635  +
cmp ecx 0FFFFFFFFh +
jz loc_1007635  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100762E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100762E  +
cmp edx 10000000h +
jnb loc_100762E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100762E  +
jmp loc_1007629  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1007677  +
push eax  +
call sub_10075DC  +
test eax eax +
jz loc_1007677  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100766C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1007677  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101003C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10076B3  +
test eax ebx +
jz loc_10076B3  +
not eax  +
mov dword_1010040 eax +
jmp loc_100770E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10076FA  +
test dword_101003C ebx +
jnz loc_10076FF  +
mov esi 0BB40E64Fh +
mov dword_101003C esi +
not esi  +
mov dword_1010040 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10101A8 eax +
mov dword_10101A4 ecx +
mov dword_10101A0 edx +
mov dword_101019C ebx +
mov dword_1010198 esi +
mov dword_1010194 edi +
mov word_10101C0 ss +
mov word_10101B4 cs +
mov word_1010190 ds +
mov word_101018C es +
mov word_1010188 fs +
mov word_1010184 gs +
pushf   +
pop dword_10101B8  +
mov eax [ebp+0] +
mov dword_10101AC eax +
mov eax [ebp+4] +
mov dword_10101B0 eax +
lea eax [ebp+8] +
mov dword_10101BC eax +
mov eax [ebp-320h] +
mov dword_10100F8 10001h +
mov eax dword_10101B0 +
mov dword_10100B4 eax +
mov dword_10100A8 0C0000409h +
mov dword_10100AC 1 +
mov eax dword_101003C +
mov [ebp-328h] eax +
mov eax dword_1010040 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp] eax +
retn   +
***
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_10103C8 edi +
jnz loc_1007874  +
push dword_10103D0  +
call sub_100C386  +
test eax eax +
jnz loc_1007870  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007908  +
push 42Bh  +
jmp loc_1007902  +
mov eax edi +
pop edi  +
retn   +
cmp dword_10103D0 0 +
jnz loc_1007858  +
call sub_100C3A7  +
push eax  +
mov dword_10103D0 eax +
call sub_100C386  +
test eax eax +
jz loc_10078F6  +
push 0  +
push offset dword_100189C  +
push dword_10103D0  +
call sub_100C826  +
test eax eax +
jnz loc_10078F6  +
push 3  +
push dword_10103D0  +
call sub_100C9F1  +
cmp eax edi +
jnz loc_10078F6  +
push 3  +
push dword_10103D0  +
call sub_100C9F1  +
cmp eax 2 +
jnz loc_10078F6  +
push 3  +
push dword_10103D0  +
call sub_100C9F1  +
cmp eax 3 +
jnz loc_10078F6  +
push 0  +
mov dword_10103C8 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1007908  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10103C8 0 +
push esi  +
jz loc_1007976  +
push 3  +
push dword_10103D0  +
call sub_100CB87  +
cmp eax [ebp+arg_0] +
jbe loc_1007976  +
push [ebp+arg_0]  +
push 3  +
push dword_10103D0  +
call sub_100D00D  +
test eax eax +
jz loc_1007976  +
push [ebp+arg_0]  +
push 3  +
push dword_10103D0  +
call sub_100CD3F  +
mov esi eax +
test esi esi +
jz loc_1007976  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1007976  +
mov eax [esi+0Ch] +
jmp loc_1007978  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_10103D0 +
test eax eax +
jz loc_10079A3  +
push eax  +
call sub_100C386  +
test eax eax +
jz loc_10079A3  +
push 0  +
push dword_10103D0  +
call sub_100CBF4  +
retn   +
mov eax offset dword_100189C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_10079D7  +
call esi  +
test eax eax +
jnz loc_10079D3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007A0A  +
call sub_100783B  +
test eax eax +
jz loc_10079D3  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_10103D0  +
call sub_100CE2F  +
test eax eax +
jnz loc_1007A00  +
call esi  +
test eax eax +
jnz loc_10079D3  +
push 8  +
jmp loc_10079CD  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_100783B  +
test eax eax +
jz loc_1007A94  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1007A6E  +
cmp [ebp+hMem] edi +
jz loc_1007A86  +
push [ebp+hMem]  +
call sub_10079AE  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1007A92  +
cmp [ebp+hMem] edi +
jz loc_1007A86  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1007A86  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1007A90  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1007A15  +
test eax eax +
jz loc_1007ABE  +
call sub_1007982  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1010060 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1010064 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_10103D4 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1007233  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1007B9C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007B98  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007C19  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1007C0D  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1007C0D  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1007C15  +
sub edi 0 +
jz loc_1007BE9  +
dec edi  +
jz loc_1007BE5  +
dec edi  +
jnz loc_1007C15  +
push 0FFFFFFF4h  +
jmp loc_1007BEB  +
push 0FFFFFFF5h  +
jmp loc_1007BEB  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1007C15  +
cmp eax 0FFFFFFFFh +
jz loc_1007C15  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1007C17  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1007C32  +
xor eax eax +
jmp loc_1007C3B  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1007C53  +
xor eax eax +
jmp loc_1007C5C  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1007CA3  +
cmp [ebp+lpString2] 0 +
jz loc_1007CA3  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1007C89  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1007CB7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007CB5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1007CFE  +
cmp [ebp+lpString2] 0 +
jz loc_1007CFE  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1007CE4  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1007D12  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007D10  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_1007DDF  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1007DDF  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1007D4A  +
cmp [eax] edi +
jnz loc_1007DDF  +
mov eax [eax] +
cmp eax edi +
jz loc_1007D58  +
cmp eax 1 +
jbe loc_1007DC6  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1007D6F  +
cmp esi edi +
jz loc_1007D6F  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1007D85  +
push edi  +
push [ebp+lpString]  +
call sub_1007C23  +
cmp eax esi +
jle loc_1007D85  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1007DD8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007DAD  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_1007DF1  +
cmp esi edi +
jz loc_1007DF1  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_1007DF1  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1007DF3  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1007DD3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007DF1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1007E18  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007E3A  +
push 57h  +
jmp loc_1007E34  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007E3A  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1007E3C  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1007E6B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007EDF  +
push 57h  +
call ds:SetLastError  +
jmp loc_1007EDF  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007EDF  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1007EE1  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1007EC6  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1007EC6  +
push 570h  +
call ds:SetLastError  +
call sub_1007A15  +
jmp loc_1007ED8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007ED8  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1007F10  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007F0B  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1007F32  +
push [ebp+lpMem]  +
call sub_1007DFF  +
test eax eax +
jz loc_1007F0B  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1007F0B  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1007F6B  +
cmp [ebp+arg_4] eax +
jz loc_1007F67  +
mov dl [ebx] +
test dl dl +
jz loc_1007F67  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1007F4F  +
test esi esi +
jnz loc_1007F72  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007F7E  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1007FBF  +
cmp [ebp+arg_4] eax +
jz loc_1007FBB  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1007FBB  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1007F9E  +
test esi esi +
jnz loc_1007FC7  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007FD5  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100800A  +
cmp eax esi +
ja loc_100800A  +
jz loc_100800F  +
jmp loc_1008017  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1008020  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1008048  +
call ds:GetLastError  +
test eax eax +
jnz loc_100808B  +
push 57h  +
jmp loc_1008085  +
push 0  +
push esi  +
call sub_1007C44  +
test eax eax +
jz loc_1008080  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_1008080  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_1008070  +
call ds:StrChrIW  +
jmp loc_1008076  +
call ds:StrChrW  +
test eax eax +
jz loc_1008080  +
sub eax esi +
sar eax 1 +
jmp loc_100808E  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_10080FD  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_10080FD  +
push esi  +
push edi  +
call sub_1007C44  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_10080F6  +
push esi  +
push ebx  +
call sub_1007C44  +
test eax eax +
jz loc_10080F6  +
push esi  +
push ebx  +
call sub_1007C44  +
cmp [ebp+arg_C] eax +
jnb loc_10080F6  +
cmp [ebp+arg_0] esi +
jbe loc_10080F6  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_100802D  +
cmp eax 0FFFFFFFFh +
jnz loc_1008112  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_10080DA  +
push 490h  +
jmp loc_1008109  +
call ds:GetLastError  +
test eax eax +
jnz loc_100810F  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1008185  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1008185  +
push 0  +
push edi  +
call sub_1007C44  +
push 0  +
push ebx  +
mov esi eax +
call sub_1007C44  +
test eax eax +
jz loc_1008178  +
test esi esi +
jz loc_1008178  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1008178  +
sub esi ecx +
cmp esi eax +
jb loc_1008178  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_100816E  +
call ds:StrStrIW  +
jmp loc_1008174  +
call ds:StrStrW  +
test eax eax +
jnz loc_100817F  +
push 490h  +
jmp loc_1008191  +
sub eax edi +
sar eax 1 +
jmp loc_100819A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008197  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_10081D5  +
push esi  +
push [ebp+lpString]  +
call sub_1007C44  +
test eax eax +
jz loc_10081D5  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_10081D7  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1008204  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008200  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008252  +
cmp dword ptr [esi] 0 +
jnz loc_100820E  +
xor eax eax +
inc eax  +
jmp loc_1008252  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1008232  +
push dword ptr [esi]  +
call sub_1007EEE  +
cmp eax 0FFFFFFFFh +
jnz loc_1008236  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008251  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_1008321  +
mov eax [esi] +
cmp eax edi +
jz loc_1008321  +
cmp [ebp+dwBytes] edi +
jnz loc_100828F  +
push esi  +
call sub_10081E1  +
jmp loc_1008335  +
push eax  +
call sub_1007DFF  +
test eax eax +
jnz loc_10082A0  +
mov [esi] edi +
jmp loc_1008333  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_1008333  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_10082DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10082D5  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1008333  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_1008335  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_10082C3  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_10082C3  +
push 570h  +
call ds:SetLastError  +
call sub_1007A15  +
jmp loc_10082D5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008333  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1008358  +
cmp edx 7FFFFFFFh +
jbe loc_100835D  +
mov eax 80070057h +
test eax eax +
jl loc_1008373  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1007F3B  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1008392  +
cmp edx 7FFFFFFFh +
jbe loc_1008397  +
mov eax 80070057h +
test eax eax +
jl loc_10083AD  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1007F8A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_10083CF  +
cmp edx ebx +
jbe loc_10083D4  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100840B  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10083F8  +
cmp [eax] cx +
jz loc_10083F4  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10083EA  +
cmp esi ecx +
jnz loc_1008401  +
mov [ebp+arg_4] 80070057h +
jmp loc_1008405  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_100840D  +
xor ecx ecx +
test eax eax +
jl loc_1008421  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1007F8A  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1008441  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1008446  +
mov eax 80070057h +
test eax eax +
jl loc_100845F  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1007FE1  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100847D  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1008482  +
mov eax 80070057h +
test eax eax +
jl loc_100849C  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1007FE1  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_10103D0  +
call sub_100C386  +
cmp eax 1 +
jnz loc_100852D  +
push edi  +
push 3  +
push dword_10103D0  +
call sub_100CB87  +
mov edi eax +
test edi edi +
jz loc_1008522  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_10103D0  +
call sub_100D00D  +
cmp eax 10000h +
jnz loc_100851B  +
push esi  +
push 3  +
push dword_10103D0  +
call sub_100CD3F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100851B  +
add eax 0Ch +
push eax  +
call sub_10081E1  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
push esi  +
push 3  +
push dword_10103D0  +
call sub_100CB50  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_10084D1  +
pop esi  +
push offset dword_10103D0  +
call sub_100C41C  +
pop edi  +
cmp dword_10103CC 1 +
jnz loc_100853C  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_100811E  +
cmp eax 0FFFFFFFFh +
jnz loc_1008566  +
xor eax eax +
jmp loc_1008569  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10085A6  +
cmp [ebp+arg_4] 0 +
jz loc_10085A6  +
cmp [ebp+arg_8] 0 +
jle loc_10085A6  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1008342  +
test eax eax +
jge loc_10085AC  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10085A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10085E9  +
cmp [ebp+arg_4] 0 +
jz loc_10085E9  +
cmp [ebp+arg_8] 0 +
jle loc_10085E9  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100837C  +
test eax eax +
jge loc_10085EF  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10085EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100862C  +
cmp [ebp+arg_4] 0 +
jz loc_100862C  +
cmp [ebp+arg_8] 0 +
jle loc_100862C  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10083B6  +
test eax eax +
jge loc_1008632  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100862E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1008881  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1008881  +
push [ebp+hConsoleOutput]  +
call sub_1007B75  +
cmp eax 1 +
jnz loc_100876E  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1008685  +
push 0FFFFFFF5h  +
jmp loc_1008695  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1008756  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1007C44  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_10086C9  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_100872E  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1008752  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1007C44  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_100872E  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1008700  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1008736  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1008736  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_10086F0  +
xor eax eax +
inc eax  +
jmp loc_1008895  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1007A9C  +
call sub_10084A3  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_100873C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008893  +
push 42Bh  +
jmp loc_100888D  +
push edi  +
push ebx  +
call sub_1007C44  +
push 100h  +
push edi  +
mov esi offset unk_10103E0 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_100872E  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_10087AE  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100880B  +
cmp eax ebx +
jbe loc_1008819  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_10087EB  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_10087EE  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_10087B7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100880B  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_100873F  +
cmp eax [ebp+cchWideChar] +
jnb loc_1008821  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100880B  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1008799  +
jmp loc_100872E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008893  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_1008900  +
call ds:GetLastError  +
test eax eax +
jnz loc_10088F9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008AFB  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_1008AB8  +
cmp edi 0Fh +
jz loc_1008930  +
cmp edi 3 +
jz loc_1008930  +
cmp edi 0FFFFFFFFh +
jz loc_1008930  +
mov [ebp+var_40] 1 +
jmp loc_100894C  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1008AB8  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_10089BE  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1008AB8  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_1008ABC  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_1007D1B  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_10089D6  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1008AAC  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1008ABC  +
cmp ax 8 +
jnz loc_1008A64  +
cmp [ebp+var_28] 0 +
jz loc_100896A  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008468  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008468  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1008468  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_100896A  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_1008A7C  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_10018B4  +
jmp loc_1008AA0  +
cmp ax 0Ah +
jz loc_100896A  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset Buffer  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_100896A  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1008AFA  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_10018AC  +
lea eax [ebp+var_18] +
push eax  +
call sub_10085B6  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1007233  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1008B28  +
cmp [ebp+arg_8] 0 +
jnz loc_1008B28  +
xor eax eax +
jmp loc_1008C7C  +
call sub_100783B  +
test eax eax +
jz loc_1008B21  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_10103D0  +
call sub_100CB87  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1008B75  +
push esi  +
push dword_10103D0  +
call sub_100CBBB  +
test eax eax +
jz loc_1008C40  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100CA6C  +
cmp eax 0FFFFFFFFh +
jz loc_1008C40  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100D00D  +
mov edi offset aBuffer +
test eax eax +
jz loc_1008BC3  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100CD3F  +
mov esi eax +
test esi esi +
jz loc_1008C40  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1008C40  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1008C02  +
mov edi [ebp+arg_8] +
jmp loc_1008C0D  +
push 10h  +
call sub_1007E45  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1008C40  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_1008573  +
push esi  +
push ebx  +
push 3  +
push dword_10103D0  +
call sub_100CF3A  +
test eax eax +
jnz loc_1008BA2  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10081E1  +
jmp loc_1008C40  +
push 0  +
push ebx  +
call sub_1007C44  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1008C23  +
cmp edi 100h +
jbe loc_1008C3A  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1008C3A  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1008C44  +
call sub_1007E45  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1008C40  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1008C4F  +
xor eax eax +
jmp loc_1008C79  +
lea eax [esi+0Ch] +
push eax  +
call sub_100825C  +
jmp loc_1008C33  +
test ebx ebx +
jz loc_1008C5F  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10085B6  +
jmp loc_1008C76  +
cmp [ebp+arg_C] 1 +
jnz loc_1008C76  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_10018C0 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1008D82  +
push eax  +
push ebx  +
call sub_1007C44  +
test eax eax +
jz loc_1008D82  +
cmp [ebp+lpStart] 0 +
jz loc_1008CE1  +
push 0  +
push [ebp+lpStart]  +
call sub_1007C44  +
test eax eax +
jnz loc_1008CE7  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1008CF6  +
cmp edi 1 +
jnz loc_1008D18  +
cmp word ptr [ebx] 0 +
jz loc_1008D15  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1008D15  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1008CFC  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1008D22  +
cmp edi 2 +
jnz loc_1008D64  +
cmp edi 2 +
jnz loc_1008D29  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1008D64  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1008D4A  +
cmp [ebp+var_14] 0 +
jnz loc_1008D4E  +
mov [ebp+var_14] esi +
jmp loc_1008D4E  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1008D31  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1008D64  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1008D7E  +
push 0  +
push [ebp+var_18]  +
call sub_1007C44  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_10085B6  +
mov eax ebx +
jmp loc_1008D87  +
mov eax offset dword_100189C +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1008DDF  +
cmp [ebp+arg_4] edi +
jz loc_1008DDF  +
push [ebp+arg_C]  +
push offset dword_100189C  +
push esi  +
call sub_10085B6  +
cmp [ebp+arg_8] edi +
jbe loc_1008DDB  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_10085F9  +
test eax eax +
jz loc_1008DDB  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_1008DC5  +
mov eax esi +
jmp loc_1008DF6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008DF1  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100189C +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1008E24  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008E20  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008E8B  +
cmp [ebp+arg_0] esi +
jnz loc_1008E36  +
push [ebp+arg_4]  +
call sub_10079AE  +
xor eax eax +
inc eax  +
jmp loc_1008E8B  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1008B10  +
mov edi eax +
test edi edi +
jz loc_1008E76  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_100842C  +
cmp eax 8007007Ah +
jz loc_1008E37  +
test eax eax +
jge loc_1008E84  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008E8A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008E72  +
push 8  +
jmp loc_1008E6C  +
push edi  +
call sub_10079AE  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1008B10  +
mov ebx eax +
test ebx ebx +
jnz loc_1008EBB  +
push 8  +
pop eax  +
jmp loc_1008EFD  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1008B10  +
mov esi eax +
test esi esi +
jz loc_1008EB6  +
push esi  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_1008EFD  +
push ebx  +
call sub_10079AE  +
test eax eax +
jz loc_1008EB6  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1008F33  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008F29  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100189C +
jmp loc_1009040  +
call sub_100783B  +
test eax eax +
jz loc_1008F29  +
push esi  +
push 1  +
push dword_10103D0  +
call sub_100CB87  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1008F90  +
push 1  +
push dword_10103D0  +
call sub_100CBBB  +
cmp eax ebx +
jz loc_1008F74  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100CA6C  +
cmp eax 0FFFFFFFFh +
jnz loc_1008F90  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008F86  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100189C +
jmp loc_100903F  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1008B10  +
mov edi eax +
cmp edi ebx +
jz loc_1009004  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1008FE7  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1009016  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1009016  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1008F96  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_10103D0  +
call sub_100CF74  +
test eax eax +
jnz loc_100901D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009016  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100189C +
jmp loc_100903E  +
cmp [ebp+lpString] ebx +
jz loc_100902E  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_10103D0  +
call sub_100CD76  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_10091EF  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
test eax eax +
jz loc_10091EF  +
call sub_100783B  +
test eax eax +
jz loc_1009201  +
call sub_100783B  +
test eax eax +
jz loc_10091A9  +
push 3  +
pop esi  +
push esi  +
push dword_10103D0  +
call sub_100CB87  +
mov edi eax +
cmp edi ebx +
ja loc_10090CC  +
push esi  +
push dword_10103D0  +
call sub_100CBBB  +
cmp eax ebx +
jz loc_10091A9  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100CA6C  +
cmp eax 0FFFFFFFFh +
jz loc_10091A9  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100D00D  +
mov edi offset aBuffer +
test eax eax +
jz loc_1009144  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100CD3F  +
mov esi eax +
cmp esi ebx +
jz loc_10091A9  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10091A9  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1009130  +
cmp edi 100h +
jbe loc_1009191  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1009191  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1009181  +
call sub_1007E45  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100918C  +
push 10h  +
call sub_1007E45  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10091A9  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1008573  +
push esi  +
push ebx  +
push 3  +
push dword_10103D0  +
call sub_100CF3A  +
test eax eax +
jnz loc_10090F9  +
lea eax [ebp+var_8] +
push eax  +
call sub_10081E1  +
jmp loc_10091A9  +
lea eax [esi+0Ch] +
push eax  +
call sub_100825C  +
test eax eax +
jz loc_10091A9  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10091A9  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10085B6  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10091B7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009201  +
push 8  +
jmp loc_10091FB  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10091EF  +
cmp [ebp+var_4] ebx +
jz loc_10091EA  +
push ebx  +
push [ebp+var_4]  +
call sub_1007C44  +
test eax eax +
jnz loc_10091EF  +
fld  qword ptr [ebp-0Ch] +
jmp loc_1009203  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009201  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_100904A  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10093F8  +
cmp [ebp+lpString] ebx +
jz loc_10093F8  +
call sub_100783B  +
test eax eax +
jz loc_100940A  +
call sub_100783B  +
test eax eax +
jz loc_100938E  +
push 3  +
pop esi  +
push esi  +
push dword_10103D0  +
call sub_100CB87  +
mov edi eax +
cmp edi ebx +
ja loc_10092B1  +
push esi  +
push dword_10103D0  +
call sub_100CBBB  +
cmp eax ebx +
jz loc_100938E  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100CA6C  +
cmp eax 0FFFFFFFFh +
jz loc_100938E  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100D00D  +
mov edi offset aBuffer +
test eax eax +
jz loc_1009329  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100CD3F  +
mov esi eax +
cmp esi ebx +
jz loc_100938E  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100938E  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1009315  +
cmp edi 100h +
jbe loc_1009376  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1009376  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1009366  +
call sub_1007E45  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1009371  +
push 10h  +
call sub_1007E45  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100938E  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1008573  +
push esi  +
push ebx  +
push 3  +
push dword_10103D0  +
call sub_100CF3A  +
test eax eax +
jnz loc_10092DE  +
lea eax [ebp+var_8] +
push eax  +
call sub_10081E1  +
jmp loc_100938E  +
lea eax [esi+0Ch] +
push eax  +
call sub_100825C  +
test eax eax +
jz loc_100938E  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100938E  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10085B6  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100939C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100940A  +
push 8  +
jmp loc_1009404  +
push 3  +
push ebx  +
push esi  +
call sub_1008C85  +
push ebx  +
push esi  +
call sub_1007C44  +
test eax eax +
jz loc_10093F8  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10093D0  +
call ds:wcstol  +
jmp loc_10093D6  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10093F8  +
cmp [ebp+var_4] ebx +
jz loc_10093F4  +
push ebx  +
push [ebp+var_4]  +
call sub_1007C44  +
test eax eax +
jnz loc_10093F8  +
mov eax esi +
jmp loc_100940C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100940A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10095DB  +
cmp [ebp+lpString] ebx +
jz loc_10095DB  +
call sub_100783B  +
test eax eax +
jz loc_1009567  +
push 3  +
pop esi  +
push esi  +
push dword_10103D0  +
call sub_100CB87  +
mov edi eax +
cmp edi ebx +
ja loc_100948A  +
push esi  +
push dword_10103D0  +
call sub_100CBBB  +
cmp eax ebx +
jz loc_1009567  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100CA6C  +
cmp eax 0FFFFFFFFh +
jz loc_1009567  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100D00D  +
mov edi offset aBuffer +
test eax eax +
jz loc_1009502  +
push ebx  +
push esi  +
push dword_10103D0  +
call sub_100CD3F  +
mov esi eax +
cmp esi ebx +
jz loc_1009567  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1009567  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10094EE  +
cmp edi 100h +
jbe loc_100954F  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100954F  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100953F  +
call sub_1007E45  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100954A  +
push 10h  +
call sub_1007E45  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1009567  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1008573  +
push esi  +
push ebx  +
push 3  +
push dword_10103D0  +
call sub_100CF3A  +
test eax eax +
jnz loc_10094B7  +
lea eax [ebp+var_8] +
push eax  +
call sub_10081E1  +
jmp loc_1009567  +
lea eax [esi+0Ch] +
push eax  +
call sub_100825C  +
test eax eax +
jz loc_1009567  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1009567  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10085B6  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1009575  +
call ds:GetLastError  +
test eax eax +
jnz loc_10095ED  +
push 8  +
jmp loc_10095E7  +
push 3  +
push ebx  +
push esi  +
call sub_1008C85  +
push ebx  +
push esi  +
call sub_1007C44  +
test eax eax +
jz loc_10095ED  +
cmp [ebp+arg_8] ebx +
jnz loc_1009594  +
cmp word ptr [esi] 2Dh +
jz loc_10095ED  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10095B4  +
call ds:wcstol  +
jmp loc_10095BA  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10095ED  +
cmp [ebp+var_4] ebx +
jz loc_10095D6  +
push ebx  +
push [ebp+var_4]  +
call sub_1007C44  +
test eax eax +
jnz loc_10095ED  +
xor eax eax +
inc eax  +
jmp loc_10095EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10095ED  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10096B9  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10096B9  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1007C44  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1008B10  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100964A  +
call ds:GetLastError  +
test eax eax +
jnz loc_10096CB  +
push 8  +
jmp loc_10096C5  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1007C44  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1008B10  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1009638  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1008468  +
add esp 10h +
test eax eax +
jge loc_1009689  +
movzx eax ax +
push eax  +
jmp loc_10096C5  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1008468  +
add esp 10h +
test eax eax +
jl loc_1009683  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100811E  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10096CD  +
call ds:GetLastError  +
test eax eax +
jnz loc_10096CB  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_100971F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009715  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_100189C +
jmp loc_100982C  +
push ecx  +
call sub_10081A6  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_1009730  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_1008B10  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_100975E  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_10097B9  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_1008B10  +
mov esi eax +
test esi esi +
jnz loc_100977A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009770  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_100189C +
jmp loc_100982B  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset String  +
push esi  +
call sub_1008D9D  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_10097A2  +
push esi  +
push [ebp+var_10]  +
call sub_10085B6  +
push edi  +
push [ebp+var_18]  +
jmp loc_10097AF  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_10085B6  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_10085F9  +
jmp loc_1009818  +
xor ebx ebx +
cmp eax esi +
jbe loc_1009818  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_10085B6  +
lea eax [ebp+String] +
push eax  +
call sub_10081A6  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_10097FD  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_10085F9  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_10097C5  +
cmp ebx [ebp+arg_4] +
jnb loc_1009818  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset String  +
push [ebp+var_10]  +
call sub_10085F9  +
dec esi  +
jnz loc_1009807  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_10085B6  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1007233  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1009948  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1009948  +
cmp [ebp+arg_4] ebx +
jnz loc_1009873  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
jmp loc_100995C  +
cmp [ebp+arg_8] ebx +
jnz loc_1009908  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1008B10  +
mov edi eax +
test edi edi +
jz loc_10098F5  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10098E5  +
call ds:GetLastError  +
test eax eax +
jz loc_1009903  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_100995A  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1009880  +
push edi  +
jmp loc_1009866  +
call ds:GetLastError  +
test eax eax +
jnz loc_100995A  +
push 8  +
jmp loc_1009954  +
xor eax eax +
inc eax  +
jmp loc_100995C  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1008B10  +
mov edi eax +
test edi edi +
jz loc_10098F5  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_100842C  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1009908  +
test eax eax +
jge loc_10098EF  +
movzx eax ax +
push eax  +
jmp loc_1009954  +
call ds:GetLastError  +
test eax eax +
jnz loc_100995A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_10103DC  +
mov eax dword_10103DC +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1008F06  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1009965  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009A28  +
test [ebp+arg_4] 0F0000h +
jz loc_1009A28  +
test [ebp+arg_4] 10000h +
jz loc_10099D0  +
call sub_1007A15  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10099E2  +
push 1389h  +
jmp loc_1009A01  +
test al 4 +
jz loc_10099ED  +
push 138Ah  +
jmp loc_1009A01  +
test al 2 +
jz loc_10099F8  +
push 138Ch  +
jmp loc_1009A01  +
test al 8 +
jz loc_1009A17  +
push 138Bh  +
call sub_1009994  +
push eax  +
push offset aS_1  +
push ebx  +
push ebx  +
push esi  +
call sub_1009841  +
add esp 14h +
call sub_1007982  +
push eax  +
push esi  +
call sub_100863C  +
mov eax ebx +
pop ebx  +
jmp loc_1009A3C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009A3A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_1009A67  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009A63  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1009A8C  +
push 0  +
push [ebp+lpString1]  +
call sub_1007C44  +
cmp eax 2 +
jbe loc_1009A63  +
push 2  +
push 1  +
push offset asc_1001370  +
push [ebp+lpString1]  +
call sub_1007C65  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_1009B26  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009B26  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1008B10  +
cmp eax esi +
jnz loc_1009AD5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009B31  +
push 8  +
jmp loc_1009B2B  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1009B26  +
push 0  +
push 0Ah  +
push ebx  +
call sub_1009418  +
test eax eax +
jz loc_1009B31  +
push 0Ah  +
push ebx  +
call sub_1009232  +
cmp eax 0FFh +
ja loc_1009B31  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1009AEC  +
cmp [ebp+var_4] 4 +
jnz loc_1009B26  +
inc eax  +
jmp loc_1009B33  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1009CC3  +
cmp ebx esi +
jz loc_1009CC3  +
mov eax [ebx] +
cmp eax esi +
jz loc_1009BBC  +
cmp eax 2 +
jb loc_1009CC3  +
cmp edx esi +
jz loc_1009CC3  +
cmp dword_10103CC esi +
jnz loc_1009BF0  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1009BE6  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1009CCF  +
mov dword_10103CC 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_1009CD5  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1009C5D  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1009C63  +
cmp eax 2AFCh +
jnz loc_1009C5A  +
cmp [ebp+var_848] di +
jnz loc_1009C63  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1009C1D  +
jmp loc_1009CAF  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1009C80  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_1007C44  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_1009C9C  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1009CAF  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_10085B6  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_1009CD7  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009CD5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_1009D41  +
push esi  +
push edi  +
call sub_1007C44  +
test eax eax +
jz loc_1009D41  +
push edi  +
call sub_1009A46  +
push edi  +
test eax eax +
jnz loc_1009D49  +
push offset aS_2  +
push 1  +
call sub_1008E01  +
add esp 0Ch +
test eax eax +
jnz loc_1009D50  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009D3C  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_10079AE  +
jmp loc_1009D26  +
call sub_1007982  +
cmp eax esi +
jnz loc_1009D62  +
push 0Dh  +
call sub_1007911  +
jmp loc_1009D6C  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1008B10  +
cmp eax esi +
jz loc_1009D2A  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1009D41  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_1009D9B  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1009D43  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_1009EAA  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009EAA  +
push esi  +
call sub_1009A46  +
cmp eax 1 +
jnz loc_1009DE0  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1009E1B  +
push offset aIpc  +
push esi  +
push offset aSS  +
push 2  +
call sub_1008E01  +
add esp 10h +
test eax eax +
jnz loc_1009E48  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009E13  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_1009EAC  +
test bl 20h +
jz loc_1009E27  +
push offset aAdmin  +
jmp loc_1009DED  +
test bl 40h +
jz loc_1009E36  +
cmp [ebp+arg_4] edi +
jz loc_1009E36  +
push [ebp+arg_4]  +
jmp loc_1009DED  +
push esi  +
push offset aS_2  +
push 1  +
call sub_1008E01  +
add esp 0Ch +
jmp loc_1009DFD  +
call sub_1007982  +
cmp eax edi +
jnz loc_1009E5A  +
push 12h  +
call sub_1007911  +
jmp loc_1009E64  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1008B10  +
cmp eax edi +
jz loc_1009E01  +
test ebx 10000000h +
jz loc_1009E77  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_1009E9D  +
cmp esi 4B8h +
jz loc_1009E96  +
call sub_1007A15  +
jmp loc_1009EA6  +
call sub_1008E93  +
jmp loc_1009EA6  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_1009EAC  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_100A010  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A010  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_1009F0D  +
xor eax eax +
jmp loc_100A013  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1008B10  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_1009F31  +
call ebx  +
test eax eax +
jnz loc_1009F06  +
push 8  +
call ds:SetLastError  +
jmp loc_1009F06  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_1009F06  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1007C65  +
test eax eax +
jz loc_100A010  +
push [ebp+lpString]  +
call sub_1009A95  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_1009FCC  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_1009B3F  +
test eax eax +
jz loc_1009F06  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1008B10  +
mov esi eax +
cmp esi edi +
jz loc_1009F06  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_1009B3F  +
test eax eax +
jz loc_1009F06  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1007C65  +
test eax eax +
jnz loc_1009FB8  +
mov eax ebx +
jmp loc_100A013  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1007C65  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100A013  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_1009F06  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1008B10  +
mov ebx eax +
cmp ebx edi +
jz loc_1009F06  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_1009F06  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_1009FC0  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_100A0BB  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A0BB  +
push ebx  +
call sub_1009A95  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_100A09D  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_1009B3F  +
test eax eax +
jnz loc_100A079  +
xor eax eax +
jmp loc_100A0BE  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1008B10  +
cmp eax esi +
jz loc_100A075  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_1009B3F  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100A0BE  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1008098  +
cmp eax 0FFFFFFFFh +
jz loc_100A0B7  +
push 35h  +
call ds:SetLastError  +
jmp loc_100A075  +
mov eax edi +
jmp loc_100A0BE  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_1009DAA  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_100A24C  +
push esi  +
call sub_1009EB8  +
cmp eax 1 +
jz loc_100A24C  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_1009A46  +
cmp eax 1 +
jnz loc_100A12B  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_100A01F  +
test eax eax +
jnz loc_100A147  +
call sub_1007A15  +
call ds:GetLastError  +
jmp loc_100A280  +
cmp [ebp+lpString] ebx +
jz loc_100A170  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A170  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS  +
push 2  +
call sub_1008E01  +
add esp 10h +
jmp loc_100A182  +
push dword ptr [ebp+arg_0]  +
push offset aS_2  +
push 1  +
call sub_1008E01  +
add esp 0Ch +
test eax eax +
jnz loc_100A1A5  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A198  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push 8  +
pop eax  +
jmp loc_100A280  +
call sub_1007982  +
cmp eax ebx +
jnz loc_100A1B7  +
push 12h  +
call sub_1007911  +
jmp loc_100A1C1  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1008B10  +
mov edx eax +
cmp edx ebx +
jz loc_100A186  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_100A212  +
cmp esi 4B8h +
jz loc_100A20B  +
push esi  +
call ds:SetLastError  +
call sub_1007A15  +
jmp loc_100A27A  +
call sub_1008E93  +
jmp loc_100A27A  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_1009CED  +
push eax  +
call sub_1007B5D  +
test eax eax +
jnz loc_100A27A  +
push dword ptr [ebp+arg_0]  +
call sub_100A0D4  +
push 1580h  +
call sub_1009994  +
push eax  +
call sub_10079AE  +
mov esi 4B8h +
jmp loc_100A27A  +
cmp [ebp+lpUserName] ebx +
jz loc_100A27E  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A27E  +
push 157Eh  +
call sub_1009994  +
push eax  +
call sub_10079AE  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_100A280  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_100A0F1  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_100A40C  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100A40B  +
cmp [ebp+hConsoleOutput] edi +
jz loc_100A40B  +
push ebx  +
call sub_10081A6  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_100A2E7  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_1008B10  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_100A329  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A311  +
push 8  +
call ds:SetLastError  +
call sub_1007A15  +
push ebx  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001310  +
jmp loc_100A405  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_100A33C  +
push [ebp+arg_8]  +
call sub_10081A6  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_100A3D2  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_1008546  +
cmp eax edi +
jz loc_100A3D2  +
push eax  +
call sub_10081A6  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_10081A6  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_100A373  +
mov esi eax +
xor edi edi +
jmp loc_100A33E  +
test esi esi +
jz loc_100A37C  +
cmp eax [ebp+arg_C] +
jnz loc_100A37F  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_100A38A  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_10085B6  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_10096D9  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push edi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_10085B6  +
push ebx  +
call sub_10081A6  +
cmp eax esi +
push ebx  +
jle loc_100A3F8  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_100A405  +
cmp esi edi +
jz loc_100A37C  +
push ebx  +
call sub_10081A6  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_100A37C  +
push ebx  +
call sub_10081A6  +
cmp eax [ebp+arg_C] +
jg loc_100A37F  +
push ebx  +
call sub_10081A6  +
mov esi eax +
jmp loc_100A37F  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001308  +
push ebx  +
call sub_10085B6  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_1007911  +
mov edi eax +
test edi edi +
jz loc_100A4FD  +
cmp [ebp+arg_8] 0 +
jz loc_100A4FD  +
push ebx  +
push esi  +
push edi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001310  +
push edi  +
call sub_10085B6  +
push [ebp+arg_0]  +
call sub_100C447  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_1008B10  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_1008B10  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_100A4FB  +
cmp eax esi +
jz loc_100A4FB  +
push [ebp+lpString]  +
call sub_10081A6  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_100A4FB  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_100D190  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_1008468  +
add esp 10h +
push edi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_10085F9  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_100A4FB  +
cmp ebx [ebp+var_C] +
jb loc_100A4FB  +
push edi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_10085F9  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_100A49A  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS_3 +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_1007911  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_100A687  +
test esi esi +
jz loc_100A687  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_1007EEE  +
shr eax 1 +
push eax  +
mov edi offset dword_1001310 +
push edi  +
push esi  +
call sub_10085B6  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_100A746  +
sub eax edx +
jz loc_100A708  +
sub eax edx +
jz loc_100A6C2  +
sub eax edx +
jz loc_100A698  +
sub eax 20h +
jz loc_100A5FB  +
sub eax 20h +
jz loc_100A5D5  +
push esi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_10085B6  +
jmp loc_100A656  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_100A687  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_100A5EF  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_100A656  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_100CCC8  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_100A653  +
call sub_1007A15  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
call sub_1007982  +
push eax  +
push [ebp+lpMem]  +
call sub_10085B6  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_100A687  +
test dword ptr [ebx+204h] 100000h +
jz loc_100A687  +
push esi  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_1009994  +
push eax  +
push esi  +
call sub_10085B6  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100A6A9  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100A765  +
call sub_100CC93  +
jmp loc_100A6EA  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100A6D3  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100A765  +
call sub_100CC5E  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1008468  +
add esp 14h +
jmp loc_100A656  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100A719  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100A765  +
call sub_100CC23  +
push eax  +
push edi  +
push esi  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1008468  +
add esp 10h +
jmp loc_100A656  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100A757  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_100A787  +
call sub_100CBBB  +
test eax eax +
jz loc_100A687  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_100A417  +
jmp loc_100A656  +
call sub_100CBF4  +
test eax eax +
jz loc_100A687  +
jmp loc_100A72C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100ABFD  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_100ABFD  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_1008B10  +
mov [ebp+lpMem] eax +
call sub_100C3A7  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100ABEF  +
cmp [ebp+lpMem] edi +
jz loc_100ABEF  +
test [ebp+arg_C] ebx +
jnz loc_100A8EF  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_100A881  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_100A876  +
xor edi edi +
test eax 10000h +
jnz loc_100A82D  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100A82D  +
cmp eax 30h +
jz loc_100A82D  +
cmp eax 40h +
jnz loc_100A830  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_100A842  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_10085B6  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_10096D9  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100A80A  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_100A8E2  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_100A8D9  +
cmp eax 1 +
jnz loc_100A8B7  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_1001984  +
push [ebp+lpMem]  +
call sub_1008D9D  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_100A8A0  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+arg_10]  +
call sub_100C447  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_100ABE4  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001310  +
push [ebp+lpMem]  +
call sub_10085B6  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_100CBBB  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_100ABD5  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100AA6A  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_100AA55  +
test eax 88000h +
jz loc_100A97A  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_1007EEE  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_100197C +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_100A507  +
xor ecx ecx +
test ebx ebx +
jnz loc_100A9C4  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_100A9B6  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100A9B6  +
cmp eax 30h +
jz loc_100A9B6  +
cmp eax 40h +
jnz loc_100A9B9  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_10096D9  +
cmp ebx 1 +
jnz loc_100A9CE  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_100A9E1  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
test dword ptr [esi+4] 8000h +
jz loc_100AA43  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100A2AC  +
push [ebp+lpMem]  +
call sub_10081A6  +
test eax eax +
jz loc_100AA4E  +
push 3  +
push [ebp+var_8]  +
call sub_100C9F1  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_100AA4E  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_100CFB1  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_100CF74  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_100CF74  +
jmp loc_100AA4E  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100A94E  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+var_8]  +
call sub_100C447  +
mov [ebp+var_10] eax +
jmp loc_100ABCD  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_100ABBD  +
jmp loc_100AA9F  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100CDAD  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_100AB16  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_100AB0D  +
cmp [ebp+var_C] 1 +
jnz loc_100AAE7  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset String  +
push [ebp+lpMem]  +
call sub_1008D9D  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_100AACB  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_100AB2C  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100CD76  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_100CD76  +
mov ebx eax +
test edi edi +
jz loc_100ABAE  +
test ebx ebx +
jz loc_100ABAE  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_10085B6  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100A2AC  +
push edi  +
call sub_10081A6  +
test eax eax +
jnz loc_100AB9E  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100CAEA  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_100ABAE  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100CF74  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_100AA9C  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_100AA87  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_100A906  +
lea eax [ebp+var_8] +
push eax  +
call sub_100C41C  +
jmp loc_100AC14  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AC0F  +
push 8  +
jmp loc_100AC09  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AC0F  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_100AEB6  +
cmp edi ebx +
jz loc_100AEB6  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_1008B10  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_100ACAA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AEC8  +
push 8  +
jmp loc_100AEC2  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_100ACD5  +
push edi  +
call sub_10081A6  +
cmp [ebp+var_90] eax +
jnb loc_100ACCC  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_100ACB8  +
push [ebp+var_9C]  +
call sub_100C447  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_100AECD  +
mov edi offset asc_100130C +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_100CBBB  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_100AE9C  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_100AE81  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001310  +
push ebx  +
call sub_10085B6  +
test dword ptr [esi+4] 1000h +
jnz loc_100AE66  +
lea eax [esi-200h] +
push eax  +
push offset aS_4  +
push ebx  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1008468  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_10096D9  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_1007EEE  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100A507  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100AE54  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100AE54  +
push [ebp+lpMem]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset String  +
lea eax [ebp+String] +
push eax  +
call sub_10085B6  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10096D9  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
jmp loc_100ADDB  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100AD36  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_100AE9C  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_100ACFA  +
jmp loc_100AECD  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AEC8  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_100B097  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_100B097  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_1008B10  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_100AF32  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B0A9  +
push 8  +
jmp loc_100B0A3  +
test [ebp+arg_C] edi +
jnz loc_100AF9A  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_100AF8D  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_100AF82  +
cmp eax 1 +
jnz loc_100AF5D  +
push offset asc_10019A0  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push esi  +
push offset aS_5  +
push ebx  +
call sub_1007EEE  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1008468  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100AF43  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+arg_10]  +
call sub_100C447  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_100B0AE  +
mov ebx offset asc_1001990 +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_100CBBB  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_100B086  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100B079  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_1007EEE  +
shr eax 1 +
push eax  +
push offset dword_1001310  +
push [ebp+lpString]  +
call sub_10085B6  +
test [esi+4] edi +
jnz loc_100B064  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_1007EEE  +
push offset asc_10019A0  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100A507  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_100B03F  +
push offset asc_10019A0  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100AFE6  +
push offset asc_100130C  +
push [ebp+hConsoleOutput]  +
call sub_100863C  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_100AFB6  +
jmp loc_100B0AE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B0A9  +
push 57h  +
call ds:SetLastError  +
call sub_1007A15  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_100B115  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_100B115  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_100B0FF  +
dec eax  +
jz loc_100B0EF  +
dec eax  +
jnz loc_100B10D  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100AEE3  +
jmp loc_100B10D  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100A79B  +
jmp loc_100B10D  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100AC20  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100B0BA  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100B176  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B16E  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100B16E  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_10019A4  +
call sub_100802D  +
cmp eax 0FFFFFFFFh +
jz loc_100B16E  +
xor eax eax +
inc eax  +
jmp loc_100B170  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_100B1C4  +
movzx eax ds:byte_100B1D3[eax] +
jmp ds:off_100B1CB[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_100B1C6  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100B267  +
cmp [ebp+arg_4] ebx +
jnz loc_100B267  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_100802D  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100B221  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1007C44  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1008B10  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100B244  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B275  +
push 8  +
jmp loc_100B273  +
lea ecx [esi+1] +
push ecx  +
push offset dword_10012AC  +
push eax  +
call sub_10085B6  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_10085F9  +
mov eax [ebp+arg_4] +
jmp loc_100B277  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B275  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_100B2BC  +
cmp ecx edi +
jnz loc_100B2BC  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B2B5  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_100B51F  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100B2A7  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_100B51B  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_100B525  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1007CC0  +
test eax eax +
jnz loc_100B3D7  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_100B3D7  +
cmp [edi+4] ebx +
jnz loc_100B3D7  +
cmp [edi+8] ebx +
jnz loc_100B3D7  +
cmp [edi+0Ch] ebx +
jnz loc_100B3D7  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100B352  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_100B3D7  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B3D7  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100B367  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_100B3D7  +
mov edx eax +
or edx ecx +
jz loc_100B378  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_100B3D7  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_100B38D  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_100B3D7  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_100B399  +
xor eax eax +
or ebx eax +
jnz loc_100B3D7  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_100B3D7  +
jmp ds:off_100B547[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_100B3F0  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100B3D7  +
cmp [edi-10h] ecx +
jnz loc_100B3D7  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_100B40F  +
cmp eax 2 +
jnb loc_100B40F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B3E9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100B51E  +
mov eax [edi-10h] +
test eax eax +
jz loc_100B3D7  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_100B40F  +
push dword ptr [eax]  +
call sub_100C386  +
test eax eax +
jz loc_100B3D7  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100B41F  +
cmp [edi-14h] ecx +
jz loc_100B3D7  +
xor eax eax +
or ebx eax +
jnz loc_100B505  +
cmp dword ptr [edi-24h] 1 +
jnz loc_100B3D7  +
and esi 20h +
or esi eax +
jnz loc_100B3D7  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_100B505  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_100B3D7  +
jmp loc_100B505  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100B53D  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_100B3D7  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_100B3D7  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_100B3D7  +
mov edx [edi-10h] +
test edx edx +
jz loc_100B3D7  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_100B4AD  +
push dword ptr [edx]  +
call sub_100C386  +
test eax eax +
jz loc_100B3D7  +
jmp loc_100B505  +
cmp dword ptr [edi-24h] 1 +
ja loc_100B3D7  +
and esi 20h +
xor eax eax +
jmp loc_100B4FD  +
cmp dword ptr [edi-8] 0 +
jz loc_100B3D7  +
cmp dword ptr [edi-4] 0 +
jnz loc_100B505  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_100B505  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_100B3D7  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_100B3D7  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_100B3D7  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_100B2D6  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B3E9  +
push 42Bh  +
jmp loc_100B3E3  +
push 78h  +
jmp loc_100B3E3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_100B5BA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B5AE  +
push 57h  +
call ebx  +
call sub_1007A15  +
xor eax eax +
jmp loc_100BB1E  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_100BB08  +
cmp eax edi +
jz loc_100BB08  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_100B659  +
cmp [ebp+lpString2] 0 +
jnz loc_100B659  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_100B659  +
cmp dword ptr [ebp+lpString] edx +
jz loc_100B637  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B637  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1009994  +
push eax  +
push 2  +
call sub_1008E01  +
add esp 10h +
jmp loc_100B64D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B648  +
push 42Bh  +
call ebx  +
call sub_1007A15  +
push 800401E4h  +
call ebx  +
jmp loc_100BB1B  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_100B671  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_100B67C  +
jmp loc_100BB08  +
cmp dword ptr [esi+24h] 0 +
jz loc_100B682  +
cmp ecx 9 +
jz loc_100B682  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_100BB08  +
jmp ds:off_100BB24[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100B6F0  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_100B6F0  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1008B10  +
test eax eax +
jnz loc_100B6D0  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BB16  +
push 8  +
call ds:SetLastError  +
jmp loc_100BB16  +
push 3  +
push offset asc_10018C0  +
push eax  +
call sub_1008C85  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_100BB16  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100B76B  +
test ebx ebx +
jz loc_100BB03  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10095FB  +
test eax eax +
jnz loc_100B76B  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100B742  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B742  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1009994  +
push eax  +
push 3  +
call sub_1008E01  +
add esp 14h +
jmp loc_100B75B  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1009994  +
push eax  +
push 2  +
call sub_1008E01  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100BB1B  +
test ebx ebx +
jz loc_100BB03  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_100B7C4  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_100B7C4  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100B7AA  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100B7AA  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_100B74B  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1009994  +
push eax  +
push 1  +
call sub_1008E01  +
add esp 0Ch +
jmp loc_100B75B  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_100B814  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_100B7F7  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100D0D0  +
cmp eax 0FFFFFFFFh +
jnz loc_100BB03  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100C826  +
cmp eax 0FFFFFFFFh +
jnz loc_100BB03  +
jmp loc_100B6B5  +
cmp [ebp+var_C] ecx +
jz loc_100B853  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_100B853  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100B844  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100B844  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_100B74B  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_100B7B2  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_100B87D  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1007E45  +
test eax eax +
jz loc_100B6B5  +
mov [esi+2Ch] eax +
jmp loc_100B883  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_10085B6  +
jmp loc_100BB03  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_100BB03  +
push 0  +
push ebx  +
call sub_1007C44  +
test eax eax +
jz loc_100B95C  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1009418  +
test eax eax +
jz loc_100B95C  +
push 0Ah  +
push ebx  +
call sub_1009232  +
cmp [ebp+var_C] 1 +
jnz loc_100B8DE  +
mov dword ptr [ebp+String2] eax +
jmp loc_100B8E1  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100B946  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_100B91F  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100B90C  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100D044  +
jmp loc_100B916  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100D067  +
cmp eax 0FFFFFFFFh +
jnz loc_100BB03  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100B937  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100C89D  +
jmp loc_100B806  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100C8F2  +
jmp loc_100B806  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_100B955  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_100BB03  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_100B96E  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_100B9C2  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100B990  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B990  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_100B74B  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_100B7B2  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100BB03  +
push ebx  +
call sub_100920F  +
test eax eax +
jnz loc_100B9FB  +
and edi 10h +
or edi eax +
jz loc_100B9CC  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_100B9CC  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_100BB1D  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100B9EE  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100B9EE  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_100B74B  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_100B7B2  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_100BA0C  +
call sub_100904A  +
fstp  [ebp+var_18] +
jmp loc_100BA14  +
call sub_100904A  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100BA8A  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_100BA5B  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100BA44  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100D08A  +
jmp loc_100BA52  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100D0AD  +
cmp eax 0FFFFFFFFh +
jnz loc_100BB03  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100BA77  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100C947  +
jmp loc_100B806  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100C99C  +
jmp loc_100B806  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_100BA9A  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_100BB03  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_100BB03  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_100BB1D  +
cmp [ebp+lpString2] 0 +
jz loc_100BAFA  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100BADB  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100BADB  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_100B74B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BAF0  +
push 42Bh  +
call ds:SetLastError  +
call sub_1007A15  +
jmp loc_100B75B  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_100BB1D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BB16  +
push 57h  +
call ebx  +
call sub_1007A15  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100BC12  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100BC12  +
cmp [ebp+arg_8] edi +
jz loc_100BC12  +
push [ebp+arg_8]  +
call sub_100B148  +
test eax eax +
jnz loc_100BB97  +
push 490h  +
jmp loc_100BC1E  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100BB8D  +
add esi 20h +
jmp loc_100BBA6  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_100BBF3  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_100BBBE  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_100BBE3  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_100BBE3  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10095FB  +
cmp eax 1 +
jz loc_100BC0D  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100BBA4  +
jmp loc_100BB8D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BC04  +
push 42Bh  +
call ebx  +
call sub_1007A15  +
xor eax eax +
jmp loc_100BC23  +
mov eax [ebp+arg_4] +
jmp loc_100BC23  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BC20  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100BD07  +
cmp [ebp+arg_4] edi +
jz loc_100BD07  +
cmp [ebp+lpString] edi +
jz loc_100BD07  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100BD07  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_100802D  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_100BD18  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1008B10  +
mov [esi] eax +
test eax eax +
jnz loc_100BCBE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BD15  +
push 8  +
call ds:SetLastError  +
jmp loc_100BD15  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1008B10  +
mov [esi+4] eax +
test eax eax +
jz loc_100BCAA  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_10085B6  +
test edi edi +
jz loc_100BCF8  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_10085B6  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100BB51  +
jmp loc_100BD18  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BD15  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100BDA3  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100BDA3  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1007982  +
test eax eax +
jnz loc_100BD54  +
push 7  +
call sub_1007911  +
jmp loc_100BD60  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1008B10  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100BDA3  +
test ebx ebx +
jbe loc_100BD8D  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100BD87  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100BD87  +
push esi  +
call sub_10081E1  +
add esi 50h +
dec ebx  +
jnz loc_100BD6E  +
push [ebp+arg_0]  +
call sub_10079AE  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100BDA5  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1008B10  +
mov ebx eax +
cmp ebx edi +
jz loc_100BE34  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_100BE46  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_100BDDD  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_100BE4D  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_100BE46  +
call esi  +
test eax eax +
jnz loc_100BE46  +
push 57h  +
jmp loc_100BE40  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BE46  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100C013  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1007E45  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_100BE46  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_100BE7A  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10081E1  +
jmp loc_100BE46  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_100BE6F  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1008B10  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_100BE6F  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1008468  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_100BEF1  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100BEAF  +
cmp dword ptr [ebp+lpString] edi +
jz loc_100BE6F  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1007C44  +
cmp eax 4 +
ja loc_100BF29  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10081E1  +
call ds:GetLastError  +
test eax eax +
jnz loc_100BE46  +
push 42Bh  +
jmp loc_100BE40  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100811E  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100BF63  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001898 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_100BFB3  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1008B10  +
mov esi eax +
cmp esi edi +
jnz loc_100BF9A  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10081E1  +
jmp loc_100BE34  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_0  +
push [ebp+dwLen]  +
push esi  +
call sub_1008468  +
add esp 14h +
jmp loc_100BFD3  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_100BFC1  +
push 7  +
call sub_1007911  +
jmp loc_100BFCD  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1008B10  +
mov esi eax +
cmp esi edi +
jz loc_100BF8C  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1008B10  +
mov esi eax +
cmp esi edi +
jz loc_100BF8C  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1009994  +
push eax  +
push 50h  +
push esi  +
call sub_1008468  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_10081E1  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100C095  +
cmp [ebp+arg_4] ebx +
jz loc_100C095  +
cmp [ebp+arg_C] ebx +
jz loc_100C095  +
cmp [ebp+dwErrCode] ebx +
jz loc_100C095  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100C095  +
call sub_1007AC7  +
test eax eax +
jnz loc_100C075  +
push 157Fh  +
call sub_1009994  +
push eax  +
call sub_10079AE  +
push 47Eh  +
call edi  +
jmp loc_100C09E  +
call sub_100783B  +
test eax eax +
jz loc_100C099  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_100C0BD  +
cmp eax [ebp+arg_C] +
jl loc_100C0A7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C099  +
push 57h  +
call edi  +
call sub_1007A15  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_100B1E2  +
mov esi eax +
cmp esi ebx +
jz loc_100C099  +
push esi  +
call sub_100BDB0  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_100C099  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100B283  +
test eax eax +
jz loc_100C099  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_100C21F  +
jmp loc_100C0F4  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_100C10D  +
mov edi [ecx+4] +
jmp loc_100C10F  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BB51  +
cmp eax 0FFFFFFFFh +
jnz loc_100C154  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BC2F  +
cmp eax 0FFFFFFFFh +
jnz loc_100C147  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_100C25C  +
mov edi ebx +
xor ebx ebx +
jmp loc_100C14D  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_100C28F  +
test edi edi +
jz loc_100C1AF  +
cmp [ebp+arg_8] 2 +
jnz loc_100C1AF  +
push dword ptr [esi+8]  +
call sub_100B1A3  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_100C1AA  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BB51  +
cmp eax 0FFFFFFFFh +
jnz loc_100C1A1  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BC2F  +
cmp eax 0FFFFFFFFh +
jz loc_100C1AF  +
mov [ebp+arg_8] 1 +
jmp loc_100C1AD  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_100B574  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_100C308  +
mov eax [esi+18h] +
test eax eax +
jz loc_100C1EA  +
cmp eax [esi+1Ch] +
jz loc_100C2AD  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_100C203  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_100C0F1  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_100C251  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_100C251  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_100C2F2  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_100C248  +
cmp [ecx+1Ch] ebx +
jz loc_100C318  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_100C229  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_100C0A0  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1009994  +
push eax  +
push esi  +
call sub_1008E01  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BD24  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100C09E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C099  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_100C099  +
test ebx ebx +
jz loc_100C2DA  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100C2DA  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1009994  +
push eax  +
push 3  +
call sub_1008E01  +
add esp 14h +
jmp loc_100C274  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1009994  +
push eax  +
push 2  +
jmp loc_100C26C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C303  +
push 42Bh  +
call edi  +
call sub_1007A15  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100BD24  +
jmp loc_100C09E  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100C332  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_100C2F2  +
mov edi [ecx+24h] +
jmp loc_100C34A  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_100C348  +
push ebx  +
push eax  +
call sub_100B1E2  +
mov edi eax +
test edi edi +
jnz loc_100C34E  +
jmp loc_100C303  +
mov edi ecx +
test edi edi +
jz loc_100C364  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100C364  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_100C2E5  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1009994  +
push eax  +
push 1  +
call sub_1008E01  +
add esp 0Ch +
jmp loc_100C274  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100C39C  +
cmp dword ptr [eax] 9 +
jnz loc_100C39C  +
xor eax eax +
inc eax  +
jmp loc_100C39E  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100C3B7  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100C386  +
test eax eax +
jz loc_100C412  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100C406  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_100C513  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10081E1  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100C3EA  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100C386  +
test eax eax +
jz loc_100C43D  +
push ecx  +
call sub_100C3CC  +
push esi  +
call sub_10081E1  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100C386  +
test eax eax +
jz loc_100C45C  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100C386  +
test eax eax +
jnz loc_100C47B  +
xor eax eax +
jmp loc_100C4A0  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100C477  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100C496  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_100C48E  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_100C49F  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100C386  +
test eax eax +
jnz loc_100C4C1  +
or eax 0FFFFFFFFh +
jmp loc_100C509  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100C4BC  +
push 14h  +
call sub_1007E45  +
test eax eax +
jz loc_100C4BC  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100C4FC  +
mov [esi+8] eax +
jmp loc_100C502  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100C587  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_100C552  +
jz loc_100C56E  +
cmp eax 20000h +
jz loc_100C56E  +
cmp eax 30000h +
jz loc_100C56E  +
cmp eax 40000h +
jz loc_100C56E  +
cmp eax 50000h +
jz loc_100C56E  +
cmp eax 60000h +
jz loc_100C56E  +
jmp loc_100C587  +
cmp eax 80000h +
jz loc_100C579  +
cmp eax 90000h +
jz loc_100C56E  +
cmp eax 0A0000h +
jz loc_100C56E  +
cmp eax 0B0000h +
jnz loc_100C587  +
add edx 0Ch +
push edx  +
call sub_10081E1  +
jmp loc_100C587  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100C41C  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100C386  +
test eax eax +
jnz loc_100C5AB  +
or eax 0FFFFFFFFh +
jmp loc_100C6BA  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_100C6B5  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_100C6A5  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100C639  +
jz loc_100C627  +
cmp eax 20000h +
jz loc_100C60B  +
cmp eax 30000h +
jz loc_100C69C  +
cmp eax 40000h +
jz loc_100C69C  +
cmp eax 60000h +
jnz loc_100C6A5  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100C62E  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1007C65  +
test eax eax +
jz loc_100C6BF  +
mov edx [ebp+arg_0] +
jmp loc_100C6A5  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100C6A5  +
mov eax edx +
jmp loc_100C6B8  +
cmp eax 90000h +
jz loc_100C69C  +
cmp eax 0A0000h +
jz loc_100C65F  +
cmp eax 0B0000h +
jnz loc_100C6A5  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100C6A5  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100C6A3  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100C6A5  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100C6A5  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100C6A5  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100C6A5  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100C6A5  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100C6A3  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100C635  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100C5C1  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100C6B8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100C386  +
test eax eax +
jnz loc_100C6E4  +
or eax 0FFFFFFFFh +
jmp loc_100C81C  +
and [ebp+arg_0] 0 +
cmp dword ptr [ebx+4] 0 +
push esi  +
push edi  +
mov edi [ebx+8] +
jbe loc_100C817  +
mov esi [ebp+arg_C] +
cmp dword ptr [edi+4] 80000h +
jnz loc_100C805  +
push 0  +
push [ebp+arg_4]  +
push dword ptr [edi+0Ch]  +
call sub_100C465  +
test eax eax +
jz loc_100C805  +
mov ecx [ebp+arg_8] +
cmp [eax+4] ecx +
jnz loc_100C805  +
mov edx 70000h +
cmp ecx edx +
ja loc_100C796  +
jz loc_100C780  +
cmp ecx 20000h +
jz loc_100C76A  +
cmp ecx 30000h +
jz loc_100C7FC  +
cmp ecx 40000h +
jz loc_100C7FC  +
cmp ecx 60000h +
jnz loc_100C805  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100C787  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push esi  +
push dword ptr [eax+0Ch]  +
call sub_1007C65  +
test eax eax +
jmp loc_100C803  +
mov eax [eax+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100C805  +
mov eax [ebp+arg_0] +
jmp loc_100C81A  +
cmp ecx 90000h +
jz loc_100C7FC  +
cmp ecx 0A0000h +
jz loc_100C7BF  +
cmp ecx 0B0000h +
jnz loc_100C805  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100C805  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100C803  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100C805  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100C805  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100C805  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100C805  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100C805  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100C803  +
mov eax [eax+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100C78E  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
mov edi [edi+10h] +
cmp eax [ebx+4] +
jb loc_100C6FA  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100C386  +
test eax eax +
jnz loc_100C841  +
or eax 0FFFFFFFFh +
jmp locret_100C894  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100C854  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1007E45  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C88F  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_10085B6  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz loc_100C892  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100C386  +
test eax eax +
jz loc_100C8E6  +
push 4  +
call sub_1007E45  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C8E6  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz locret_100C8E9  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100C386  +
test eax eax +
jz loc_100C93B  +
push 4  +
call sub_1007E45  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C93B  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz locret_100C93E  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100C386  +
test eax eax +
jz loc_100C990  +
push 4  +
call sub_1007E45  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C990  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz locret_100C993  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100C386  +
test eax eax +
jz loc_100C9E5  +
push 8  +
call sub_1007E45  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100C9E5  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz locret_100C9E8  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100C386  +
test eax eax +
jz loc_100CA5F  +
call sub_100C3A7  +
push eax  +
mov [ebp+var_4] eax +
call sub_100C386  +
test eax eax +
jz loc_100CA5F  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100CA39  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jz loc_100CA39  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100CA23  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100CA56  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jnz loc_100CA62  +
lea eax [ebp+var_4] +
push eax  +
call sub_100C41C  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100C386  +
test eax eax +
jnz loc_100CA82  +
or eax 0FFFFFFFFh +
jmp loc_100CAA6  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_100CAA3  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100C4A9  +
cmp eax 0FFFFFFFFh +
jz loc_100CAA3  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100CA8A  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CADE  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CADE  +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [eax+0Ch]  +
call sub_100C826  +
jmp loc_100CAE1  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100C465  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100CB46  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100CB23  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100CB29  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_100CB31  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_100C513  +
lea eax [ebp+var_4] +
push eax  +
call sub_10081E1  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CB7C  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CB7C  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CAEA  +
jmp loc_100CB7E  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CBB0  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CBB0  +
push dword ptr [eax+0Ch]  +
call sub_100C447  +
jmp loc_100CBB2  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jnz loc_100CBD5  +
xor eax eax +
jmp loc_100CBEB  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100CBE8  +
cmp ecx 80000h +
jnz loc_100CBD1  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jnz loc_100CC0E  +
xor eax eax +
jmp loc_100CC1A  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100CC0A  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jnz loc_100CC3D  +
xor eax eax +
jmp loc_100CC55  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100CC50  +
cmp ecx 30000h +
jnz loc_100CC39  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jnz loc_100CC7C  +
fld  ds:flt_1001A50 +
jmp loc_100CC8A  +
cmp dword ptr [eax+4] 60000h +
jnz loc_100CC74  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jnz loc_100CCB1  +
fld  ds:dbl_1001A58 +
jmp loc_100CCBF  +
cmp dword ptr [eax+4] 70000h +
jnz loc_100CCA9  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_100C465  +
test eax eax +
jz loc_100CD32  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_100CD0C  +
cmp edx 0B0000h +
jnz loc_100CD32  +
cmp edx ecx +
jnz loc_100CD19  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_100CD32  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CD6B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CD6B  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CBBB  +
jmp loc_100CD6D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CDA2  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CDA2  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CBF4  +
jmp loc_100CDA4  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CDD9  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CDD9  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CC23  +
jmp loc_100CDDB  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100CDF5  +
xor eax eax +
jmp loc_100CE25  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CDF1  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100CE18  +
test ecx ecx +
jz loc_100CE1C  +
jmp loc_100CDF1  +
test ecx ecx +
jnz loc_100CE1F  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
mov esi eax +
cmp esi edi +
jnz loc_100CE4E  +
xor eax eax +
jmp loc_100CECD  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100CE5F  +
cmp eax edi +
jnz loc_100CEB4  +
cmp [ebp+arg_C] edi +
jnz loc_100CE70  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_100CE94  +
lea edi [eax+eax] +
push edi  +
call sub_1007E45  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100CEB4  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100CEBB  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100CEBB  +
lea edi [esi+0Ch] +
push edi  +
call sub_10081E1  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1007E45  +
mov [edi] eax +
test eax eax +
jnz loc_100CEB8  +
xor eax eax +
jmp loc_100CECC  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10085B6  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
mov esi eax +
test esi esi +
jnz loc_100CEF5  +
xor eax eax +
jmp loc_100CF30  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_100CF05  +
test eax eax +
jz loc_100CF09  +
jmp loc_100CEF1  +
test eax eax +
jnz loc_100CF25  +
push 4  +
call sub_1007E45  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100CEF1  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CF69  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CF69  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CDE4  +
jmp loc_100CF6B  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CFA6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CFA6  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CE2F  +
jmp loc_100CFA8  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100CFE0  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100CFE0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CED8  +
jmp loc_100CFE2  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100D004  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100D039  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100D039  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100CFEB  +
jmp loc_100D03B  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100C590  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100C590  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100C590  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100C590  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100C590  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 20000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C6C9  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100C386  +
test eax eax +
jz loc_100D14C  +
push [ebp+arg_4]  +
call sub_100C386  +
test eax eax +
jz loc_100D14C  +
push [ebp+arg_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100C4A9  +
jmp loc_100D14F  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100C465  +
test eax eax +
jz loc_100D184  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100D184  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100D11B  +
jmp loc_100D187  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_101003C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_100D1D9  +
xor eax eax +
jmp loc_100D28D  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_100C465  +
mov esi eax +
test esi esi +
jz loc_100D1D2  +
push ebx  +
push offset dword_1001310  +
push edi  +
call sub_10085B6  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_100D27C  +
cmp eax 30000h +
jz loc_100D270  +
cmp eax 40000h +
jz loc_100D250  +
cmp eax 60000h +
jz loc_100D249  +
cmp eax 70000h +
jnz loc_100D286  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1008468  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_100D280  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_100D221  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1008468  +
add esp 10h +
jmp loc_100D23F  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_100D25A  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_10085B6  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1007233  +
leave   +
retn 10h  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100D8F4 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100D978 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DA30 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DA98 +
jmp loc_1007228  +
***
push dword ptr [ebp-10h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DAC4 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DAF0 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DB1C +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DB64 +
jmp loc_1007228  +
***
lea ecx [ebp-14h] +
jmp ??1CHString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DC44 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DCA4 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DD1C +
jmp loc_1007228  +
***
lea ecx [ebp-14h] +
jmp ??1CHString@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DD74 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-270h] +
xor ecx eax +
call sub_1007233  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DE14 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DE6C +
jmp loc_1007228  +
***
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
int 3  +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DEDC +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2A0h] +
xor ecx eax +
call sub_1007233  +
mov ecx [edx-8] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DF34 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100DFF4 +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100E07C +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100E0FC +
jmp loc_1007228  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_1007233  +
mov eax offset dword_100E17C +
jmp loc_1007228  +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 756F35EBh  +
***
