cmps   +
retn 11D1h  +
***
push esi  +
retf   +
***
push cs  +
retn 3882h  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_40914E  +
cmp [esi] al +
jz loc_40914A  +
inc esi  +
dec edx  +
jnz loc_409142  +
test edx edx +
jnz loc_409153  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_409164  +
test eax eax +
jl loc_409161  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_409185  +
cmp [esi] ax +
jz loc_409181  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_409177  +
test edx edx +
jnz loc_40918A  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_40919B  +
test eax eax +
jl loc_409198  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_4091B4  +
cmp edx [ebp+arg_4] +
jbe loc_4091B9  +
mov eax 80070057h +
test eax eax +
jl loc_4091C7  +
mov eax [ebp+arg_0] +
call sub_409135  +
jmp loc_4091CA  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_409209  +
cmp [ebp+arg_4] eax +
jz loc_409205  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_409205  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_4091E8  +
test esi esi +
jnz loc_409211  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40921F  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov cx [ebp+arg_4] +
mov [eax+4] cx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_14] +
mov [eax+10h] ecx +
mov ecx [ebp+arg_18] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_10] +
mov [eax+18h] ecx +
mov ecx [ebp+arg_1C] +
mov [eax+1Ch] ecx +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_41AB41  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
test eax eax +
jnz loc_4092EB  +
push 1  +
push 183Fh  +
push offset aDW7rtmComCompl  +
push offset aI_pstartingcol  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_4093FC  +
cmp [ebp+arg_4] 0 +
jnz loc_409304  +
push 1  +
push 1840h  +
push offset aDW7rtmComCompl  +
push offset aI_bstrcollecti  +
jmp loc_4092DC  +
mov ebx [ebp+arg_18] +
test ebx ebx +
jnz loc_40931E  +
push 1  +
push 1841h  +
push offset aDW7rtmComCompl  +
push offset aO_preturncoll  +
jmp loc_4092DC  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+38h]  +
mov esi eax +
test esi esi +
jge loc_409374  +
cmp esi 8007000Eh +
jz loc_4093ED  +
cmp esi 800705AFh +
jz loc_4093ED  +
cmp esi 8007045Bh +
jz loc_4093ED  +
cmp esi 800705AAh +
jz loc_4093ED  +
push 1844h  +
jmp loc_4093E2  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push offset dword_408F70  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_4093AF  +
cmp esi 8007000Eh +
jz loc_4093ED  +
cmp esi 800705AFh +
jz loc_4093ED  +
cmp esi 8007045Bh +
jz loc_4093ED  +
cmp esi 800705AAh +
jz loc_4093ED  +
push 1847h  +
jmp loc_4093E2  +
mov eax [ebx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
test esi esi +
jge loc_4093ED  +
cmp esi 8007000Eh +
jz loc_4093ED  +
cmp esi 800705AFh +
jz loc_4093ED  +
cmp esi 8007045Bh +
jz loc_4093ED  +
cmp esi 800705AAh +
jz loc_4093ED  +
push 184Ah  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4093FA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
test eax eax +
jnz loc_409439  +
push 1  +
push 185Dh  +
push offset aDW7rtmComCompl  +
push offset aI_pcatalog  +
call nullsub_4  +
mov eax 80070057h +
jmp locret_4094FC  +
cmp [ebp+arg_4] 0 +
jnz loc_409452  +
push 1  +
push 185Eh  +
push offset aDW7rtmComCompl  +
push offset aI_bstrcollecti  +
jmp loc_40942A  +
cmp [ebp+arg_8] 0 +
jnz loc_40946B  +
push 1  +
push 185Fh  +
push offset aDW7rtmComCompl  +
push offset aO_preturncoll  +
jmp loc_40942A  +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_4094A6  +
cmp esi 8007000Eh +
jz loc_4094EC  +
cmp esi 800705AFh +
jz loc_4094EC  +
cmp esi 8007045Bh +
jz loc_4094EC  +
cmp esi 800705AAh +
jz loc_4094EC  +
push 1862h  +
jmp loc_4094E1  +
push [ebp+arg_8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_408F70  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_4094EC  +
cmp esi 8007000Eh +
jz loc_4094EC  +
cmp esi 800705AFh +
jz loc_4094EC  +
cmp esi 8007045Bh +
jz loc_4094EC  +
cmp esi 800705AAh +
jz loc_4094EC  +
push 1865h  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4094F9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
test eax eax +
jnz loc_409536  +
push 1  +
push 1878h  +
push offset aDW7rtmComCompl  +
push offset aI_pcoll  +
call nullsub_4  +
mov eax 80070057h +
jmp locret_4095DD  +
cmp [ebp+arg_4] 0 +
jnz loc_40954F  +
push 1  +
push 1879h  +
push offset aDW7rtmComCompl  +
push offset aO_pobj  +
jmp loc_409527  +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jge loc_409587  +
cmp esi 8007000Eh +
jz loc_4095CD  +
cmp esi 800705AFh +
jz loc_4095CD  +
cmp esi 8007045Bh +
jz loc_4095CD  +
cmp esi 800705AAh +
jz loc_4095CD  +
push 187Ch  +
jmp loc_4095C2  +
push [ebp+arg_4]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_408F60  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_4095CD  +
cmp esi 8007000Eh +
jz loc_4095CD  +
cmp esi 800705AFh +
jz loc_4095CD  +
cmp esi 8007045Bh +
jz loc_4095CD  +
cmp esi 800705AAh +
jz loc_4095CD  +
push 187Fh  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4095DA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
test eax eax +
jnz loc_409617  +
push 1  +
push 1893h  +
push offset aDW7rtmComCompl  +
push offset aI_pcoll  +
call nullsub_4  +
mov eax 80070057h +
jmp locret_4096C1  +
cmp [ebp+arg_8] 0 +
jnz loc_409630  +
push 1  +
push 1894h  +
push offset aDW7rtmComCompl  +
push offset aO_pobj  +
jmp loc_409608  +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jge loc_40966B  +
cmp esi 8007000Eh +
jz loc_4096B1  +
cmp esi 800705AFh +
jz loc_4096B1  +
cmp esi 8007045Bh +
jz loc_4096B1  +
cmp esi 800705AAh +
jz loc_4096B1  +
push 1897h  +
jmp loc_4096A6  +
push [ebp+arg_8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_408F60  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_4096B1  +
cmp esi 8007000Eh +
jz loc_4096B1  +
cmp esi 800705AFh +
jz loc_4096B1  +
cmp esi 8007045Bh +
jz loc_4096B1  +
cmp esi 800705AAh +
jz loc_4096B1  +
push 189Ah  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4096BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+ppv] 0 +
cmp [ebp+arg_4] 0 +
jnz loc_4096FA  +
push 1  +
push 18ADh  +
push offset aDW7rtmComCompl  +
push offset aO_ppcoll  +
call nullsub_4  +
mov eax 80070057h +
jmp locret_4097F2  +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jz loc_409756  +
mov ecx [eax] +
lea edx [ebp+ppv] +
push edx  +
push offset riid  +
push offset rclsid  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jge loc_40979B  +
cmp esi 8007000Eh +
jz loc_4097E2  +
cmp esi 800705AFh +
jz loc_4097E2  +
cmp esi 8007045Bh +
jz loc_4097E2  +
cmp esi 800705AAh +
jz loc_4097E2  +
push 18B2h  +
jmp loc_4097D7  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jge loc_40979B  +
cmp esi 8007000Eh +
jz loc_4097E2  +
cmp esi 800705AFh +
jz loc_4097E2  +
cmp esi 8007045Bh +
jz loc_4097E2  +
cmp esi 800705AAh +
jz loc_4097E2  +
push 18B7h  +
jmp loc_4097D7  +
push [ebp+arg_4]  +
push dword_422BD8  +
push [ebp+ppv]  +
call sub_409408  +
mov esi eax +
test esi esi +
jge loc_4097E2  +
cmp esi 8007000Eh +
jz loc_4097E2  +
cmp esi 800705AFh +
jz loc_4097E2  +
cmp esi 8007045Bh +
jz loc_4097E2  +
cmp esi 800705AAh +
jz loc_4097E2  +
push 18BBh  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_4097EF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_409824  +
cmp [ebp+arg_4] 0 +
jz loc_409847  +
push [ebp+arg_4]  +
push eax  +
call ds:_wcsicmp  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
and eax 80004005h +
jmp loc_409843  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_409856  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_40982E  +
sub eax edx +
sar eax 1 +
jz loc_409856  +
mov eax 80004005h +
pop ebp  +
retn 8  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_40984A  +
jmp loc_409838  +
xor eax eax +
jmp loc_409843  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ds:SysAllocString +
push edi  +
push [ebp+arg_4]  +
xor eax eax +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea edi [ebp+pvarg.anonymous_0+2] +
stos   +
stos   +
stos   +
stos   +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_409890  +
mov esi 8007000Eh +
jmp loc_4098C9  +
push 8  +
pop eax  +
push [ebp+arg_8]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call esi  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_4098AA  +
mov esi 8007000Eh +
jmp loc_4098C2  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
push ebx  +
call ds:SysFreeString  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 94h +
call ds:GetVersionExA  +
test eax eax +
jz loc_40991A  +
mov eax [ebp+VersionInformation.dwPlatformId] +
inc eax  +
jmp loc_40991D  +
push 2  +
pop eax  +
mov dword_422B64 eax +
cmp eax 2 +
jz loc_409942  +
cmp eax 3 +
jz loc_409942  +
push 1  +
push 19E9h  +
push offset aDW7rtmComCompl  +
push offset aG_dwoperatings  +
call nullsub_4  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_412CC0  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
and dword ptr [ebx] 0 +
cmp dword_422B64 3 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
jnz loc_40997F  +
call ?GetRegNodeDispenser@@YGJPAPAUIRegNodeDispenser@@@Z  +
mov esi eax +
test esi esi +
jl loc_4099D2  +
jmp loc_4099C9  +
push offset stru_40223C  +
push 1  +
push 0  +
push offset stru_40224C  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jge loc_4099CD  +
cmp esi 8007000Eh +
jz loc_4099C9  +
cmp esi 800705AFh +
jz loc_4099C9  +
cmp esi 8007045Bh +
jz loc_4099C9  +
cmp esi 800705AAh +
jz loc_4099C9  +
push 1A04h  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
test esi esi +
jl loc_4099D2  +
mov eax [ebp+var_4] +
mov [ebx] eax +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_409B50  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+lpszStart] +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_4099FE  +
sub eax ecx +
sar eax 1 +
lea esi [edi+eax*2] +
push esi  +
push edi  +
call ds:CharPrevW  +
mov esi eax +
movzx eax word ptr [esi] +
push eax  +
call ds:IsCharAlphaW  +
test eax eax +
jnz loc_409A3A  +
movzx eax word ptr [esi] +
push eax  +
call ds:IsCharAlphaNumericW  +
cmp eax 1 +
jnz loc_409A3A  +
cmp esi edi +
jnz loc_409A0F  +
cmp word ptr [esi] 5Ch +
jnz loc_409A45  +
xor eax eax +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenA  +
add eax esi +
push eax  +
push esi  +
call ds:CharPrevA  +
mov cl [eax] +
cmp cl 20h +
jz loc_409A78  +
cmp cl 5Ch +
jnz loc_409A7C  +
cmp eax esi +
jnz loc_409A64  +
mov cl [eax] +
cmp cl 20h +
jz loc_409A94  +
cmp cl 5Ch +
jz loc_409A94  +
push eax  +
call ds:CharNextA  +
mov byte ptr [eax] 0 +
jmp loc_409A97  +
mov byte ptr [esi] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenW  +
lea eax [esi+eax*2] +
push eax  +
push esi  +
call ds:CharPrevW  +
movzx ecx word ptr [eax] +
cmp cx 20h +
jz loc_409ACD  +
cmp cx 5Ch +
jnz loc_409AD1  +
cmp eax esi +
jnz loc_409AB6  +
movzx ecx word ptr [eax] +
cmp cx 20h +
jz loc_409AEE  +
cmp cx 5Ch +
jz loc_409AEE  +
push eax  +
call ds:CharNextW  +
xor ecx ecx +
mov [eax] cx +
jmp loc_409AF3  +
xor eax eax +
mov [esi] ax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_409B47  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_409B10  +
sub eax edx +
sar eax 1 +
cmp eax 400h +
jb loc_409B2A  +
mov eax 3FFh +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [eax+eax] +
push esi  +
push [ebp+arg_4]  +
push edi  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov [esi+edi] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx hFile +
push esi  +
push edi  +
test ecx ecx +
jz loc_409C40  +
cmp ecx 0FFFFFFFFh +
jz loc_409C40  +
mov esi 1388h +
cmp dword_422B6C esi +
ja loc_409C40  +
cmp byte_41D001 0 +
jz loc_409BC7  +
mov eax [ebp+lpBuffer] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_409B8F  +
push 0  +
lea edx [ebp+NumberOfBytesWritten] +
push edx  +
sub eax edi +
push eax  +
push [ebp+lpBuffer]  +
push ecx  +
call ds:WriteFile  +
inc dword_422B6C  +
cmp dword_422B6C esi +
jnz loc_409C46  +
push offset aTurningOffLogg  +
call sub_409B50  +
jmp loc_409C46  +
mov edi ds:CoTaskMemAlloc +
push 8  +
call edi  +
mov esi eax +
test esi esi +
jnz loc_409BDE  +
mov eax 8007000Eh +
jmp loc_409C48  +
mov eax [ebp+lpBuffer] +
and dword ptr [esi+4] 0 +
and dword ptr [esi] 0 +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_409BEB  +
sub eax ecx +
inc eax  +
push eax  +
call edi  +
mov [esi] eax +
test eax eax +
jnz loc_409C07  +
push esi  +
call ds:CoTaskMemFree  +
jmp loc_409BD7  +
mov ecx [ebp+lpBuffer] +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_409C0D  +
sub ecx edi +
inc ecx  +
push ecx  +
push [ebp+lpBuffer]  +
push eax  +
call memcpy  +
mov eax dword_422BB8 +
add esp 0Ch +
test eax eax +
jz loc_409C32  +
mov [eax+4] esi +
jmp loc_409C38  +
mov dword_422BBC esi +
mov dword_422BB8 esi +
jmp loc_409C46  +
inc dword_422B90  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov al byte_41D001 +
push esi  +
mov esi dword_422BBC +
mov [ebp+var_1] al +
mov byte_41D001 1 +
test esi esi +
jz loc_409C9C  +
push ebx  +
mov ebx ds:CoTaskMemFree +
push edi  +
push dword ptr [esi]  +
call sub_409B50  +
mov edi esi +
mov eax [edi] +
mov esi [esi+4] +
test eax eax +
jz loc_409C93  +
push eax  +
call ebx  +
and dword ptr [edi] 0 +
push edi  +
call ebx  +
test esi esi +
jnz loc_409C7B  +
pop edi  +
pop ebx  +
mov al [ebp+var_1] +
and dword_422BBC 0 +
and dword_422BB8 0 +
mov byte_41D001 al +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi dword_422BBC +
test esi esi +
jz loc_409CE9  +
push ebx  +
mov ebx ds:CoTaskMemFree +
push edi  +
mov edi esi +
mov eax [edi] +
mov esi [esi+4] +
test eax eax +
jz loc_409CE0  +
push eax  +
call ebx  +
and dword ptr [edi] 0 +
push edi  +
call ebx  +
test esi esi +
jnz loc_409CCF  +
pop edi  +
pop ebx  +
and dword_422BBC 0 +
and dword_422BB8 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_409D14  +
cmp edx 7FFFFFFFh +
jbe loc_409D19  +
mov eax 80070057h +
test eax eax +
jl loc_409D2F  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_4091D4  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_4091A1  +
test eax eax +
jl loc_409D9E  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ebx  +
push 0  +
lea eax [edx+esi] +
pop ebx  +
jz loc_409D92  +
mov esi ecx +
sub esi [ebp+arg_4] +
push edi  +
lea edi [esi+edx+7FFFFFFFh] +
mov esi [ebp+arg_8] +
sub esi eax +
test edi edi +
jz loc_409D8D  +
mov dl [esi+eax] +
test dl dl +
jz loc_409D8D  +
mov [eax] dl +
inc eax  +
dec ecx  +
dec edi  +
test ecx ecx +
jnz loc_409D79  +
pop edi  +
test ecx ecx +
jnz loc_409D98  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_409DC1  +
cmp edx esi +
jbe loc_409DC6  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_409DDE  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_40916A  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_409DE0  +
xor ecx ecx +
test eax eax +
jl loc_409DF7  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_4091D4  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_409E18  +
cmp ecx 7FFFFFFFh +
jbe loc_409E1D  +
mov eax 80070057h +
test eax eax +
jl loc_409E59  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_409E49  +
cmp eax esi +
ja loc_409E49  +
jnz loc_409E54  +
jmp loc_409E4E  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_409E8D  +
push 1  +
push 18FBh  +
push offset aDW7rtmComCompl  +
push offset a0I_wszkey  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_40A07C  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_409EB5  +
push 1  +
push 18FCh  +
push offset aDW7rtmComCompl  +
push offset a0I_wszvalue  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_40A07B  +
push esi  +
push [ebp+arg_4]  +
push offset unk_41F9F0  +
call sub_409AFF  +
push edi  +
push offset unk_420A50  +
call sub_409AFF  +
push [ebp+arg_10]  +
push offset unk_41E1D8  +
call sub_409AFF  +
mov esi [ebp+cb] +
test esi esi +
jnz loc_409EF5  +
push 1  +
push 1903h  +
push offset aDW7rtmComCompl  +
push offset a0I_pirn  +
jmp loc_409F0D  +
mov eax [ebp+arg_C] +
test eax eax +
jnz loc_409F1C  +
push 1  +
push 1904h  +
push offset aDW7rtmComCompl  +
push offset a0O_pwszdata  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_40A07A  +
and dword ptr [eax] 0 +
mov eax [esi] +
push ebx  +
push edi  +
push [ebp+arg_4]  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_10] 0 +
push esi  +
jz loc_409F3C  +
call dword ptr [eax+3Ch]  +
test eax eax +
jge loc_409F54  +
jmp loc_40A079  +
call dword ptr [eax+38h]  +
mov edi eax +
cmp edi ebx +
jnz loc_409F4C  +
mov eax ebx +
jmp loc_40A079  +
test edi edi +
jl loc_40A068  +
mov eax [esi] +
lea ecx [ebp+arg_8] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
cmp [ebp+arg_8] ebx +
jz loc_409F6F  +
cmp [ebp+arg_8] 7 +
jz loc_409F6F  +
cmp [ebp+arg_8] 2 +
jnz loc_409FCE  +
mov eax [esi] +
lea ecx [ebp+cb] +
push ecx  +
push esi  +
call dword ptr [eax+24h]  +
mov eax [ebp+cb] +
test eax eax +
jz loc_409FCE  +
cmp dword_422C00 eax +
jnb loc_409FB0  +
push eax  +
push pv  +
call ds:CoTaskMemRealloc  +
test eax eax +
jnz loc_409FA3  +
mov eax 8007000Eh +
jmp loc_40A079  +
mov pv eax +
mov eax [ebp+cb] +
mov dword_422C00 eax +
push pv  +
mov ecx [esi] +
push eax  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_409FCE  +
mov eax pv +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
cmp [ebp+arg_10] 0 +
jz loc_40A029  +
mov eax [ebp+arg_10] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_409FDA  +
push [ebp+arg_10]  +
mov ecx [esi] +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push ebx  +
push esi  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jge loc_40A029  +
cmp eax 8007000Eh +
jz loc_409FCE  +
cmp eax 800705AFh +
jz loc_409FCE  +
cmp eax 8007045Bh +
jz loc_409FCE  +
cmp eax 800705AAh +
jz loc_409FCE  +
push 1934h  +
push offset aDW7rtmComCompl  +
push eax  +
call nullsub_5  +
jmp loc_409FCE  +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
mov edi eax +
test edi edi +
jl loc_40A077  +
mov ebx [ebp+arg_4] +
push 5Ch  +
pop eax  +
cmp ax [ebx] +
jz loc_40A068  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
mov edi eax +
test edi edi +
jl loc_40A077  +
push 5Ch  +
push ebx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40A068  +
push eax  +
call ds:CharNextW  +
mov ebx eax +
test ebx ebx +
jnz loc_40A040  +
mov eax [ebp+arg_C] +
push dword ptr [eax]  +
push offset unk_4222B8  +
call sub_409AFF  +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
xor eax eax +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea edi [ebp+pvarg.anonymous_0+2] +
stos   +
stos   +
stos   +
mov esi offset unk_421AB0 +
push esi  +
stos   +
call sub_409AFF  +
push [ebp+arg_8]  +
push esi  +
call sub_409AFF  +
push [ebp+arg_4]  +
mov esi ds:SysAllocString +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_40A0CD  +
mov esi 8007000Eh +
jmp loc_40A106  +
push 8  +
pop eax  +
push [ebp+arg_8]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call esi  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_40A0E7  +
mov esi 8007000Eh +
jmp loc_40A0FF  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
mov esi eax +
push ebx  +
call ds:SysFreeString  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C04h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
push esi  +
mov [ebp+var_C04] ax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov esi 400h +
push esi  +
lea eax [ebp+var_C04] +
push eax  +
call sub_409E02  +
test eax eax +
jl loc_40A194  +
push offset asc_40256C  +
push esi  +
lea eax [ebp+var_C04] +
push eax  +
call sub_409DA8  +
test eax eax +
jl loc_40A194  +
push esi  +
lea eax [ebp+var_C04] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call ds:wcstombs  +
add esp 0Ch +
lea eax [ebp+Buffer] +
push eax  +
call sub_409B50  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_412CC0  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp dword_41D170 edi +
jbe loc_40A22B  +
push esi  +
mov esi offset unk_41D028 +
mov eax [esi-8] +
test [ebp+arg_0] eax +
jz loc_40A1DD  +
cmp dword ptr [esi] 13h +
jnz loc_40A1D0  +
mov eax [esi+4] +
push dword ptr [eax]  +
jmp loc_40A1D3  +
push dword ptr [esi+4]  +
push dword ptr [esi-4]  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
mov eax [esi-8] +
test [ebp+arg_4] eax +
jz loc_40A21E  +
cmp dword ptr [esi] 13h +
jnz loc_40A1F0  +
mov eax [esi+4] +
or dword ptr [eax] 0FFFFFFFFh +
cmp dword ptr [esi] 48h +
jnz loc_40A204  +
push 50h  +
push 0  +
push dword ptr [esi+4]  +
call memset  +
add esp 0Ch +
cmp dword ptr [esi] 82h +
jnz loc_40A21E  +
push 802h  +
push 0  +
push dword ptr [esi+4]  +
call memset  +
add esp 0Ch +
inc edi  +
add esi 10h +
cmp edi dword_41D170 +
jb loc_40A1BC  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
mov edi [eax] +
and dword ptr [eax] 0 +
mov esi offset aTestandlogHrX +
test edi edi +
jge loc_40A279  +
push edi  +
push esi  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
test ebx 100h +
jz loc_40A277  +
cmp byte_422B68 0 +
jz loc_40A277  +
mov byte_41D000 0 +
test edi edi +
jnz loc_40A282  +
mov bl 1 +
jmp loc_40A352  +
cmp edi 1 +
jnz loc_40A2F4  +
test ebx edi +
jnz loc_40A2B2  +
push edi  +
push esi  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push offset aError  +
call sub_409B50  +
cmp [ebp+lpBuffer] 0 +
jz loc_40A2AC  +
push [ebp+lpBuffer]  +
call sub_409B50  +
mov eax [ebp+arg_18] +
mov [ebp+var_4] eax +
mov eax ebx +
and eax 8 +
cmp al 8 +
jnz loc_40A2CF  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_40A2E9  +
cmp dword ptr [eax] 0 +
jl loc_40A2E9  +
mov dword ptr [eax] 80004005h +
jmp loc_40A2E9  +
test ebx 4 +
jnz loc_40A2E9  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_40A2E9  +
cmp dword ptr [eax] 0 +
jnz loc_40A2E9  +
mov dword ptr [eax] 1 +
and bl 2 +
cmp bl 2 +
setz bl  +
jmp loc_40A352  +
mov esi [ebp+arg_10] +
test esi esi +
jnz loc_40A2FE  +
mov esi [ebp+lpBuffer] +
test ebx 10h +
jnz loc_40A320  +
push offset aError  +
call sub_409B50  +
test esi esi +
jz loc_40A31A  +
push esi  +
call sub_409B50  +
mov eax [ebp+arg_18] +
mov [ebp+var_4] eax +
test bl bl +
js loc_40A34C  +
mov eax ebx +
and eax 40h +
cmp al 40h +
mov eax [ebp+arg_4] +
jnz loc_40A341  +
test eax eax +
jz loc_40A34C  +
cmp dword ptr [eax] 0 +
jnz loc_40A34C  +
mov dword ptr [eax] 1 +
jmp loc_40A34C  +
test eax eax +
jz loc_40A34C  +
cmp dword ptr [eax] 0 +
jl loc_40A34C  +
mov [eax] edi +
shr bl 5 +
and bl 1 +
push [ebp+arg_1C]  +
push [ebp+var_4]  +
call sub_40A1A6  +
pop edi  +
pop esi  +
mov al bl +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_8] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_0] ebx +
jnz loc_40A3AF  +
push 1  +
push 702h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40A3AF  +
mov eax 80070057h +
jmp loc_40A462  +
cmp [ebp+arg_4] ebx +
jz loc_40A3BD  +
mov byte_41D9CA 1 +
jmp loc_40A3D9  +
push 1  +
push 703h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40A3A5  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset asc_4026C8  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 5  +
push offset aPirntransserve  +
push offset aPirntransser_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A458  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirntransser_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A458  +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirntransser_2  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_4] +
cmp eax ebx +
jl loc_40A462  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 278h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_278] edi +
mov [ebp+var_270] eax +
mov [ebp+var_268] ebx +
mov [ebp+var_26C] ebx +
cmp esi ebx +
jz loc_40A4C7  +
mov byte_41D9CA 1 +
cmp edi ebx +
jz loc_40A4C0  +
cmp [ebp+var_270] ebx +
jnz loc_40A4F5  +
xor esi esi +
jmp loc_40A87A  +
push 1  +
push 749h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40A4B4  +
mov esi 80070057h +
jmp loc_40A87A  +
mov eax [esi] +
lea ecx [ebp+var_26C] +
push ecx  +
push 20019h  +
push esi  +
call dword ptr [eax+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirnpacksGetan  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A66A  +
mov byte_41D9CA 1 +
xor esi esi +
mov [ebp+var_274] esi +
cmp [ebp+arg_4] ebx +
jbe loc_40A874  +
mov eax [ebp+var_26C] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+40h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMoveto  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
mov dword_41D008 esi +
call sub_40A235  +
test al al +
jz loc_40A84E  +
mov eax [ebp+var_26C] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_260] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_260] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40A5AB  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
lea eax [ebp+var_260] +
push eax  +
ja loc_40A7CA  +
push 28h  +
lea eax [ebp+var_54] +
push eax  +
call sub_409CFE  +
mov esi eax +
cmp esi ebx +
jl loc_40A8BE  +
push 14h  +
pop ecx  +
lea esi [ebp+var_54] +
mov edi offset unk_422AC0 +
movs   +
mov esi [ebp+var_278] +
mov eax [esi] +
mov edi offset asc_4026C8 +
push edi  +
lea ecx [ebp+var_54] +
push ecx  +
push esi  +
call dword ptr [eax+38h]  +
push ebx  +
push 1  +
push 5  +
push offset aPirnappidsMove  +
push offset aPirnappidsMo_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A6F2  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnappidsMo_1  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A69C  +
mov byte_41D9CA 1 +
jmp loc_40A6C4  +
push 1  +
push 75Ch  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40A539  +
mov esi 8000FFFFh +
jmp loc_40A87A  +
push 1  +
push 794h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40A8F0  +
mov eax [esi] +
lea ecx [ebp+var_54] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPirnappidsDele  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_270] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_54] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push 1  +
push 5  +
push offset aPirnclsidsMove  +
push offset aPirnclsidsMo_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A7E8  +
mov esi [ebp+var_270] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnclsidsMo_1  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A772  +
mov byte_41D9CA 1 +
jmp loc_40A79A  +
push 1  +
push 7B9h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40A8F0  +
mov eax [esi] +
lea ecx [ebp+var_54] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPirnclsidsDele  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
jmp loc_40A7E8  +
push offset aErrorInvalidAp  +
call sub_40A11E  +
cmp [ebp+var_268] ebx +
pop ecx  +
pop ecx  +
jl loc_40A7E8  +
mov [ebp+var_268] 8000FFFFh +
mov eax [ebp+var_26C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMove_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40A826  +
mov byte_41D9CA 1 +
jmp loc_40A84E  +
push 1  +
push 7D8h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40A8F0  +
push 50h  +
push ebx  +
push offset unk_422AC0  +
call memset  +
mov esi [ebp+var_274] +
add esp 0Ch +
inc esi  +
mov [ebp+var_274] esi +
cmp esi [ebp+arg_4] +
jb loc_40A54A  +
mov esi [ebp+var_264] +
or dword_41D008 0FFFFFFFFh +
push 50h  +
push ebx  +
push offset unk_422AC0  +
call memset  +
mov eax [ebp+var_26C] +
add esp 0Ch +
cmp eax ebx +
jz loc_40A8A1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40A8AB  +
mov esi [ebp+var_268] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 10h  +
cmp esi 8007000Eh +
jz loc_40A87A  +
cmp esi 800705AFh +
jz loc_40A87A  +
cmp esi 8007045Bh +
jz loc_40A87A  +
cmp esi 800705AAh +
jz loc_40A87A  +
push 775h  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
jmp loc_40A87A  +
mov esi [ebp+var_268] +
jmp loc_40A87A  +
***
call __SEH_prolog4  +
xor edi edi +
mov [ebp+var_1C] edi +
mov [ebp+hKey] edi +
mov [ebp+dwDisposition] edi +
mov dword ptr [ebp+Data] edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] edi +
mov [ebp+ms_exc.disabled] edi +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push 20006h  +
push edi  +
push edi  +
push edi  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
mov [ebp+var_24] eax +
mov ebx 80070000h +
cmp eax edi +
jle loc_40A954  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
cmp esi edi +
jge loc_40A997  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 802h  +
jmp loc_40ABC7  +
mov esi offset String +
push esi  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push 1  +
push edi  +
push offset ValueName  +
push [ebp+hKey]  +
mov edi ds:RegSetValueExW +
call edi  +
mov [ebp+var_24] eax +
test eax eax +
jle loc_40A9CA  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
test esi esi +
jge loc_40AA0D  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 808h  +
jmp loc_40ABC7  +
and dword ptr [ebp+Data] 0 +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset aImpersonate  +
push [ebp+hKey]  +
call edi  +
mov [ebp+var_24] eax +
test eax eax +
jle loc_40AA33  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
test esi esi +
jge loc_40AA76  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 80Eh  +
jmp loc_40ABC7  +
mov dword ptr [ebp+Data] 1 +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset aAsynchronous  +
push [ebp+hKey]  +
call edi  +
mov [ebp+var_24] eax +
test eax eax +
jle loc_40AA9F  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
test esi esi +
jge loc_40AAE2  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 814h  +
jmp loc_40ABC7  +
mov esi offset aCatsrvut_dll +
push esi  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push 2  +
push 0  +
push offset aDllname  +
push [ebp+hKey]  +
call edi  +
mov [ebp+var_24] eax +
test eax eax +
jle loc_40AB10  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
test esi esi +
jge loc_40AB50  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 81Ah  +
jmp loc_40ABC7  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+var_24] eax +
test eax eax +
jle loc_40AB67  +
and eax 0FFFFh +
or eax ebx +
mov esi eax +
mov [ebp+var_1C] esi +
test esi esi +
jge loc_40ABD2  +
cmp esi 8007000Eh +
jz loc_40ABD2  +
cmp esi 800705AFh +
jz loc_40ABD2  +
cmp esi 8007045Bh +
jz loc_40ABD2  +
cmp esi 800705AAh +
jz loc_40ABD2  +
push 81Eh  +
jmp loc_40ABC7  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-34h] eax +
mov [ebp-2Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push dword ptr [ebp-2Ch]  +
push offset aErrorFailedWit  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
mov esi 80004005h +
mov [ebp+var_1C] esi +
push 825h  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax esi +
call __SEH_epilog4  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_234] eax +
mov [ebp+var_220] ecx +
mov [ebp+var_218] ebx +
mov dword ptr [ebp+var_22C] ebx +
mov [ebp+var_230] ebx +
mov [ebp+var_21C] ebx +
mov [ebp+var_228] ebx +
mov [ebp+var_224] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp eax ebx +
jnz loc_40AC64  +
push 1  +
push 845h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40ACEC  +
cmp [ebp+var_220] ebx +
jz loc_40ACD0  +
mov byte_41D9CA 1 +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+var_21C] +
push edx  +
push 20019h  +
push offset asc_4026C8  +
push offset aSoftwareMicros  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aGetregnodefrom  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40ACF6  +
mov byte_41D9CA 1 +
jmp loc_40AD16  +
push 1  +
push 846h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40AC73  +
mov esi 80070057h +
jmp loc_40AFFA  +
push 1  +
push 854h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B053  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aTransactionSer  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 5  +
push offset aPirncomputerli  +
push offset aPirncomputer_0  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B053  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_22C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirncomputer_1  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40ADA0  +
mov byte_41D9CA 1 +
jmp loc_40ADC0  +
push 1  +
push 870h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B053  +
push dword ptr [ebp+var_22C]  +
push offset aComputerListCo  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_228] +
push eax  +
push dword_422BE4  +
push [ebp+var_234]  +
call sub_409408  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcatalogGetcol  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40AE1A  +
mov byte_41D9CA 1 +
jmp loc_40AE3A  +
push 1  +
push 880h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B053  +
mov [ebp+var_220] ebx +
cmp dword ptr [ebp+var_22C] ebx +
jbe loc_40AFBE  +
mov eax [ebp+var_21C] +
push [ebp+var_220]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirncomputer_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40AFA6  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_210] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_210] +
push eax  +
push offset aMyComputer  +
call sub_4097FB  +
test eax eax +
jz loc_40AF49  +
lea eax [ebp+var_224] +
push eax  +
push [ebp+var_228]  +
call sub_409505  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcomputerlistc  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40AF49  +
lea eax [ebp+var_210] +
push eax  +
push offset aName  +
push [ebp+var_224]  +
call sub_40A085  +
mov [ebp+var_214] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_224] +
cmp eax ebx +
jz loc_40AF49  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_224] ebx +
mov eax [ebp+var_21C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirncomputer_3  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40AF86  +
mov byte_41D9CA 1 +
jmp loc_40AFA6  +
push 1  +
push 8BDh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B053  +
inc [ebp+var_220]  +
mov eax [ebp+var_220] +
cmp eax dword ptr [ebp+var_22C] +
jb loc_40AE4C  +
mov eax [ebp+var_228] +
mov ecx [eax] +
lea edx [ebp+var_230] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcomputerlis_0  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov esi [ebp+var_214] +
mov eax [ebp+var_228] +
cmp eax ebx +
jz loc_40B010  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_228] ebx +
mov eax [ebp+var_224] +
cmp eax ebx +
jz loc_40B026  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_224] ebx +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40B036  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40B040  +
mov esi [ebp+var_218] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 8  +
mov esi [ebp+var_218] +
jmp loc_40AFFA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+var_8] 1 +
mov [ebp+var_10] ebx +
call ds:VariantInit  +
mov [ebp+var_C] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_8] ebx +
jnz loc_40B0B3  +
push 1  +
push 0D67h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B1EF  +
cmp [ebp+arg_0] ebx +
jnz loc_40B0D8  +
push 1  +
push 0D68h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B1EF  +
cmp [ebp+arg_4] ebx +
jz loc_40B1CF  +
mov byte_41D9CA 1 +
mov eax [ebp+arg_8] +
mov eax [eax] +
cmp eax ebx +
jz loc_40B0FC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcollGet_count  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B1B4  +
xor esi esi +
cmp [ebp+var_10] ebx +
jle loc_40B1AD  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call sub_4095E6  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcollGet_itemF  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B197  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPptempcatobjec  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B197  +
push [ebp+arg_0]  +
push dword ptr [ebp-18h]  +
call sub_4097FB  +
test eax eax +
jz loc_40B1F8  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40B1A7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
inc esi  +
cmp esi [ebp+var_10] +
jl loc_40B132  +
mov [ebp+var_8] 1 +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
cmp eax ebx +
pop ebx  +
jl locret_40B1CB  +
mov eax [ebp+var_8] +
leave   +
retn 10h  +
push 1  +
push 0D69h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B0E8  +
mov [ebp+var_4] 80070057h +
jmp loc_40B1B4  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov [eax] esi +
mov eax [ebp+var_C] +
mov [ecx] eax +
mov [ebp+var_8] ebx +
jmp loc_40B1B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor eax eax +
push esi  +
xor ebx ebx +
inc eax  +
push edi  +
mov [ebp+var_4] eax +
mov [ebp+var_8] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_40B258  +
push eax  +
push 0DC2h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B258  +
mov esi 80070057h +
jmp loc_40B2E4  +
cmp [ebp+arg_0] ebx +
jz loc_40B266  +
mov byte_41D9CA 1 +
jmp loc_40B282  +
push 1  +
push 0DC3h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B24E  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aOrigin  +
push [ebp+arg_0]  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 83h  +
push 1  +
push offset aRegreadwritest  +
push offset aRegreadwrite_0  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov esi [ebp+arg_0] +
test al al +
jz loc_40B2DD  +
cmp esi ebx +
jnz loc_40B2DF  +
push [ebp+var_8]  +
push offset aInstall  +
call sub_4097FB  +
test eax eax +
jnz loc_40B2E1  +
mov [ebp+var_4] ebx +
cmp esi ebx +
jl loc_40B2E4  +
mov esi [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+lpszStart] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_40B33A  +
push 1  +
push 0DFDh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B486  +
cmp [ebp+arg_8] ebx +
jnz loc_40B35F  +
push 1  +
push 0DFEh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B486  +
cmp [ebp+arg_0] ebx +
jz loc_40B466  +
mov byte_41D9CA 1 +
push ebx  +
lea eax [ebp+lpszStart] +
push eax  +
push offset aDllserver  +
push [ebp+arg_0]  +
push [ebp+cb]  +
call sub_409E62  +
mov edi 80h +
push edi  +
lea esi [edi+3] +
push esi  +
push 8  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B4D6  +
push [ebp+lpszStart]  +
push offset unk_41D1C8  +
call sub_409AFF  +
push [ebp+lpszStart]  +
call ds:SysAllocString  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_40B45F  +
push ebx  +
lea eax [ebp+lpszStart] +
push eax  +
push offset aTypelib  +
push [ebp+arg_0]  +
push [ebp+cb]  +
call sub_409E62  +
push edi  +
push esi  +
push 5  +
push offset aRegreadwritest  +
push offset aRegreadwrite_2  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov byte ptr [ebp+arg_0+3] al +
mov esi offset dword_402F60 +
cmp al bl +
jz loc_40B451  +
push [ebp+lpszStart]  +
call sub_4099EF  +
mov edi eax +
push edi  +
push offset unk_41D9D0  +
call sub_409AFF  +
push edi  +
call ds:SysAllocString  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_40B45F  +
push [ebp+var_10]  +
push eax  +
call sub_4097FB  +
test eax eax +
jnz loc_40B443  +
mov byte ptr [ebp+arg_0+3] bl +
cmp byte ptr [ebp+arg_0+3] bl +
jnz loc_40B49A  +
push [ebp+var_8]  +
call ds:SysFreeString  +
push esi  +
call ds:SysAllocString  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_40B48D  +
mov edi 8007000Eh +
jmp loc_40B4D9  +
push 1  +
push 0DFFh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B36F  +
mov edi 80070057h +
jmp loc_40B4D9  +
push esi  +
push offset unk_41D9D0  +
call sub_409AFF  +
jmp loc_40B4A0  +
inc dword_422B8C  +
mov eax [ebp+arg_8] +
inc dword_422B88  +
mov ecx [eax] +
push esi  +
push [ebp+var_8]  +
push [ebp+var_10]  +
push eax  +
call dword ptr [ecx+1Ch]  +
push 40h  +
push 43h  +
push 100h  +
push ebx  +
push offset aPtempcomputilI  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov edi [ebp+var_4] +
mov esi 802h +
push esi  +
push ebx  +
push offset unk_41D9D0  +
call memset  +
push esi  +
push ebx  +
push offset unk_41D1C8  +
call memset  +
add esp 18h +
cmp [ebp+var_10] ebx +
jz loc_40B507  +
push [ebp+var_10]  +
call ds:SysFreeString  +
cmp [ebp+var_8] ebx +
jz loc_40B515  +
push [ebp+var_8]  +
call ds:SysFreeString  +
cmp edi ebx +
jl loc_40B51C  +
mov edi [ebp+var_14] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_4] ebx +
jnz loc_40B56D  +
push 1  +
push 0E70h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B56D  +
mov edi 80070057h +
jmp loc_40B612  +
cmp [ebp+arg_8] ebx +
jnz loc_40B58E  +
push 1  +
push 0E71h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B563  +
cmp [ebp+arg_0] ebx +
jz loc_40B59C  +
mov byte_41D9CA 1 +
jmp loc_40B5B8  +
push 1  +
push 0E72h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B563  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov esi eax +
cmp esi ebx +
jnz loc_40B5CE  +
mov edi 8007000Eh +
jmp loc_40B600  +
mov eax [ebp+arg_8] +
inc dword_422B84  +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
push ebx  +
push 3  +
push 100h  +
push ebx  +
push offset aPtempcomputi_0  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov edi [ebp+arg_0] +
cmp esi ebx +
jz loc_40B60B  +
push esi  +
call ds:SysFreeString  +
cmp edi ebx +
jl loc_40B612  +
mov edi [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_40B668  +
push 1  +
push 0FD8h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B668  +
mov eax 80070057h +
jmp loc_40B7B3  +
cmp [ebp+arg_8] ebx +
jnz loc_40B689  +
push 1  +
push 0FD9h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B65E  +
cmp [ebp+arg_0] ebx +
jnz loc_40B6AA  +
push 1  +
push 0FDAh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B65E  +
cmp [ebp+arg_4] ebx +
jz loc_40B6B8  +
mov byte_41D9CA 1 +
jmp loc_40B6D4  +
push 1  +
push 0FDBh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B65E  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_40B060  +
mov [ebp+var_4] eax +
cmp eax 1 +
jnz loc_40B77D  +
push [ebp+cb]  +
push [ebp+arg_0]  +
call sub_40B20F  +
push ebx  +
push ebx  +
push 5  +
push offset aWascompinstall  +
push offset aWascompinsta_0  +
mov [ebp+var_4] eax +
push offset aWascompinsta_1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push [ebp+arg_8]  +
push [ebp+cb]  +
push [ebp+arg_0]  +
test al al +
jz loc_40B73E  +
call sub_40B2F2  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aInstallcompint  +
jmp loc_40B74C  +
call sub_40B52A  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aImportcompinte  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
cmp byte_41D000 bl +
jz loc_40B79C  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPtempcompcolle  +
mov [ebp+var_4] eax +
push ebx  +
jmp loc_40B78F  +
push ebx  +
push ebx  +
push ebx  +
push offset aGetobjectfromc  +
push offset aGetobjectfro_0  +
push offset aGetobjectfro_1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40B7A9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax ebx +
jl loc_40B7B3  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_40B80D  +
push 1  +
push 115Bh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B80D  +
mov eax 80070057h +
jmp loc_40B94F  +
cmp [ebp+arg_4] ebx +
jnz loc_40B82E  +
push 1  +
push 115Ch  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B803  +
cmp [ebp+arg_8] ebx +
jz loc_40B83C  +
mov byte_41D9CA 1 +
jmp loc_40B858  +
push 1  +
push 115Dh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40B803  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aChangeable  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 81h  +
push 95h  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+cb] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+cb] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B945  +
push [ebp+var_8]  +
push offset aN_0  +
call sub_4097FB  +
test eax eax +
jnz loc_40B945  +
mov edi [ebp+arg_4] +
lea eax [ebp+cb] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push [ebp+arg_8]  +
call sub_40B060  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aGetobjectfro_2  +
mov [ebp+cb] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+cb] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40B938  +
push [ebp+var_8]  +
push offset aChangeable_0  +
push [ebp+var_C]  +
call sub_40A085  +
push ebx  +
mov esi 101h +
push esi  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+cb] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+cb] +
push eax  +
call sub_40A235  +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push edi  +
call dword ptr [eax+34h]  +
push ebx  +
push esi  +
push ebx  +
push ebx  +
push offset aPpkgcollection  +
mov [ebp+cb] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+cb] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40B945  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+cb] +
cmp eax ebx +
jl loc_40B94F  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
call ds:VariantInit  +
mov esi offset aDW7rtmComCompl +
mov edi offset aG_btempfortest +
cmp [ebp+arg_0] ebx +
jnz loc_40B9AD  +
push 1  +
push 11B2h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BA6C  +
cmp [ebp+arg_8] ebx +
jnz loc_40B9D2  +
push 1  +
push 11B3h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BA6C  +
cmp [ebp+arg_C] ebx +
jz loc_40BA4C  +
mov byte_41D9CA 1 +
cmp [ebp+arg_4] ebx +
jz loc_40BC06  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_409505  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aTemporaryAppli  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_4] +
cmp eax ebx +
jge loc_40BA78  +
cmp eax 8007000Eh +
jz loc_40BD5E  +
cmp eax 800705AFh +
jz loc_40BD5E  +
cmp eax 8007045Bh +
jz loc_40BD5E  +
cmp eax 800705AAh +
jz loc_40BD5E  +
push 11C2h  +
push esi  +
push eax  +
jmp loc_40BC99  +
push 1  +
push 11B4h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40B9DE  +
mov [ebp+arg_4] 80070057h +
jmp loc_40BD5E  +
push offset aTemporaryPacka  +
push offset aName_0  +
push [ebp+var_8]  +
call sub_40A085  +
mov [ebp+arg_4] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40BAB6  +
mov byte_41D9CA 1 +
jmp loc_40BAD6  +
push 1  +
push 11D0h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BD58  +
push offset a5d15c5a84c2911  +
push offset aId  +
push [ebp+var_8]  +
call sub_40A085  +
mov [ebp+arg_4] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40BB14  +
mov byte_41D9CA 1 +
jmp loc_40BB34  +
push 1  +
push 11DDh  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BD58  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
cmp [ebp+var_4] ebx +
jge loc_40BB9B  +
cmp [ebp+var_4] 8007000Eh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AFh +
jz loc_40BD5E  +
cmp [ebp+var_4] 8007045Bh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AAh +
jz loc_40BD5E  +
push 11E9h  +
jmp loc_40BC00  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcatobjectGet_  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
cmp [ebp+var_4] ebx +
jge loc_40BC1B  +
cmp [ebp+var_4] 8007000Eh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AFh +
jz loc_40BD5E  +
cmp [ebp+var_4] 8007045Bh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AAh +
jz loc_40BD5E  +
push 11F6h  +
push esi  +
jmp loc_40BC96  +
push 8  +
pop eax  +
push offset a5d15c5a84c2911  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
push [ebp+arg_8]  +
lea esi [ebp+pvarg] +
sub esp 10h +
mov edi esp +
push dword_422BEC  +
movs   +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
cmp [ebp+var_4] ebx +
jge loc_40BCA3  +
cmp [ebp+var_4] 8007000Eh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AFh +
jz loc_40BD5E  +
cmp [ebp+var_4] 8007045Bh +
jz loc_40BD5E  +
cmp [ebp+var_4] 800705AAh +
jz loc_40BD5E  +
push 1209h  +
push offset aDW7rtmComCompl  +
push [ebp+var_4]  +
call nullsub_5  +
jmp loc_40BD5E  +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPpcompcollecti  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40BCD9  +
mov byte_41D9CA 1 +
jmp loc_40BCFD  +
push 1  +
push 1219h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BD58  +
push [ebp+arg_C]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push offset dword_401748  +
push eax  +
call dword ptr [ecx]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aQiFailed  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40BD34  +
mov byte_41D9CA 1 +
jmp loc_40BD5E  +
push 1  +
push 1226h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40BD5E  +
mov eax [ebp+var_4] +
mov [ebp+arg_4] eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40BD78  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40BD85  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jl loc_40BD8F  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+cb] edi +
mov [ebp+var_228] eax +
mov dword ptr [ebp+var_224] esi +
mov [ebp+var_214] ebx +
mov [ebp+var_21C] ebx +
cmp edi ebx +
jnz loc_40BE0E  +
push 1  +
push 124Dh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40BE0E  +
mov eax 80070057h +
jmp loc_40C0F9  +
cmp esi ebx +
jz loc_40BE1B  +
mov byte_41D9CA 1 +
jmp loc_40BE3F  +
push 1  +
push 124Eh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40BE04  +
mov eax [edi] +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
push edi  +
call dword ptr [eax+1Ch]  +
lea eax [ebp+var_210] +
push eax  +
push 28h  +
push esi  +
call sub_409CFE  +
cmp eax ebx +
mov [ebp+var_218] eax +
jge loc_40BE83  +
push offset aErrorThePackag  +
mov [ebp+var_214] 8000FFFFh +
call sub_409B50  +
jmp loc_40C0E9  +
push 14h  +
pop ecx  +
push ebx  +
lea eax [ebp+var_21C] +
push eax  +
mov edi offset unk_422AC0 +
movs   +
push offset aSystem  +
mov esi offset asc_4026C8 +
push esi  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 81h  +
push 8  +
push ebx  +
mov edi offset aRegreadwrite_1 +
push edi  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C0E9  +
push [ebp+var_21C]  +
push offset aY_0  +
call sub_4097FB  +
test eax eax +
jz loc_40C0D7  +
push ebx  +
lea eax [ebp+var_21C] +
push eax  +
push offset aName_1  +
push esi  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 81h  +
push 8  +
push ebx  +
push edi  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C0E9  +
push [ebp+var_21C]  +
push offset aSampleBank  +
call sub_4097FB  +
test eax eax +
jz loc_40C0D7  +
push [ebp+var_21C]  +
push offset aTicTacToe  +
call sub_4097FB  +
test eax eax +
jz loc_40C0D7  +
push [ebp+var_21C]  +
push offset aIisInProcessAp  +
call sub_4097FB  +
test eax eax +
jz loc_40C0D7  +
push [ebp+var_21C]  +
push offset aIisUtilities  +
call sub_4097FB  +
test eax eax +
jz loc_40C0D7  +
mov eax [ebp+cb] +
mov ecx [eax] +
push esi  +
push offset aComponents  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 95h  +
push ebx  +
push offset aPirnpackMove_1  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C058  +
mov eax [ebp+cb] +
mov ecx [eax] +
push ebx  +
push [ebp+var_228]  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push 84h  +
push ebx  +
push offset aPirnpackGetnum  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
mov eax [ebp+cb] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMove_2  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C10A  +
mov byte_41D9CA 1 +
push ebx  +
lea eax [ebp+var_21C] +
push eax  +
push offset aActivation  +
push esi  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 81h  +
push 8  +
push ebx  +
push edi  +
mov [ebp+var_218] eax +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C0E9  +
push [ebp+var_21C]  +
push offset aLocal  +
call sub_4097FB  +
test eax eax +
jz loc_40C0E9  +
push [ebp+var_21C]  +
push offset aInproc  +
call sub_4097FB  +
test eax eax +
jz loc_40C0E9  +
push dword ptr [ebp+var_224]  +
push offset aSPackageIsNotA  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
cmp [ebp+var_214] ebx +
jl loc_40C0E9  +
mov [ebp+var_214] 1 +
mov eax [ebp+var_218] +
cmp eax ebx +
jl loc_40C0F9  +
mov eax [ebp+var_214] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
push 1  +
push 12C7h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40C058  +
mov eax [ebp+var_214] +
mov [ebp+var_218] eax +
jmp loc_40C0E9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
call ds:VariantInit  +
mov esi [ebp+arg_0] +
cmp esi ebx +
jnz loc_40C199  +
push 1  +
push 136Dh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C205  +
cmp [ebp+arg_4] ebx +
jz loc_40C1E1  +
mov byte_41D9CA 1 +
mov eax [esi] +
push offset asc_4026C8  +
push offset aRoles  +
push esi  +
call dword ptr [eax+38h]  +
push ebx  +
push 1  +
push 5  +
push offset aPirnpackMove_3  +
push offset aPirnpackMove_4  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40C20F  +
mov esi [ebp+var_8] +
jmp loc_40C5E1  +
push 1  +
push 136Eh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40C1A5  +
mov esi 80070057h +
jmp loc_40C5E1  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+var_18] +
push ecx  +
push esi  +
call dword ptr [eax+30h]  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C242  +
mov byte_41D9CA 1 +
jmp loc_40C26A  +
push 1  +
push 138Bh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C585  +
mov eax [ebp+var_18] +
add dword_422B80 eax +
mov dword_422BA0 eax +
lea eax [ebp+var_14] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BC0  +
lea esi [ebp+arg_8] +
push [ebp+arg_4]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_2  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C2BE  +
mov byte_41D9CA 1 +
jmp loc_40C2E6  +
push 1  +
push 139Bh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C582  +
mov [ebp+arg_4] ebx +
cmp [ebp+var_18] ebx +
jbe loc_40C582  +
cmp byte_41D000 bl +
jz loc_40C582  +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_0] +
push eax  +
mov dword_41D010 eax +
mov ecx [edi] +
push edi  +
call dword ptr [ecx+40h]  +
push ebx  +
push 5  +
push 8  +
push ebx  +
push offset aPirnpackMove_5  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C573  +
push ebx  +
lea eax [ebp+var_10] +
push eax  +
push offset aName_1  +
mov esi offset asc_4026C8 +
push esi  +
push edi  +
call sub_409E62  +
push 80h  +
push 85h  +
push 8  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C50D  +
push [ebp+var_10]  +
push offset unk_41E9E0  +
call sub_409AFF  +
push 8  +
pop eax  +
push [ebp+var_10]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jz loc_40C4EE  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_14]  +
call sub_409505  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aProlecollectio  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C4E2  +
push [ebp+var_10]  +
push offset aName_0  +
push [ebp+var_C]  +
call sub_40A085  +
push 100h  +
push 105h  +
push ebx  +
push ebx  +
push offset aAdminsetproper  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C4AE  +
push ebx  +
lea eax [ebp+var_10] +
push eax  +
push offset aDescription  +
push esi  +
push edi  +
call sub_409E62  +
push 80h  +
push 85h  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C470  +
push [ebp+var_10]  +
push offset aDescription_0  +
push [ebp+var_C]  +
call sub_40A085  +
push 100h  +
push 105h  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push 5  +
push 100h  +
push ebx  +
push offset aProlecollect_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40C4E2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
jmp loc_40C4E2  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40C4BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aProlecollect_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
jmp loc_40C50D  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aOutOfMemoryAll  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] 8007000Eh +
call sub_40A235  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMove_6  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C53C  +
mov byte_41D9CA 1 +
jmp loc_40C560  +
push 1  +
push 1431h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C5B3  +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
add esp 0Ch +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_18] +
jb loc_40C2F2  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirnpackMove_7  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C5B7  +
mov byte_41D9CA 1 +
jmp loc_40C5DE  +
mov esi edi +
jmp loc_40C585  +
push 1  +
push 1444h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_8] +
cmp byte_41D9CA bl +
jz loc_40C5E1  +
mov esi [ebp+var_4] +
or dword_41D010 0FFFFFFFFh +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
add esp 0Ch +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40C615  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_40C622  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40C629  +
mov esi [ebp+var_8] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+arg_8] +
lea edi [ebp+pvarg] +
movs   +
movs   +
xor ebx ebx +
movs   +
mov [ebp+var_220] eax +
mov [ebp+var_228] ecx +
movs   +
mov [ebp+var_218] ebx +
mov [ebp+var_224] ebx +
mov [ebp+var_230] ebx +
mov [ebp+var_244] ebx +
mov [ebp+var_21C] ebx +
mov [ebp+var_22C] ebx +
cmp eax ebx +
jnz loc_40C6C0  +
push 1  +
push 146Bh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C787  +
cmp [ebp+var_228] ebx +
jz loc_40C75F  +
mov byte_41D9CA 1 +
mov eax [ebp+var_220] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aUsers  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push 5  +
push 5  +
push offset aPirnpackMove_8  +
push offset aPirnpackMove_9  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C9C7  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_224] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_1  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C791  +
mov byte_41D9CA 1 +
jmp loc_40C7B9  +
push 1  +
push 146Ch  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40C6D3  +
mov esi 80070057h +
jmp loc_40CCC3  +
push 1  +
push 1487h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40CC55  +
mov eax [ebp+var_224] +
add dword_422B7C eax +
lea eax [ebp+var_21C] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BC8  +
lea esi [ebp+pvarg] +
push [ebp+var_228]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aProlecollect_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C81D  +
mov byte_41D9CA 1 +
jmp loc_40C845  +
push 1  +
push 1496h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40CC55  +
cmp [ebp+arg_18] bl +
jz loc_40CA68  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aPuserscollecti  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C88B  +
mov byte_41D9CA 1 +
jmp loc_40C8B3  +
push 1  +
push 14ACh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40C9C7  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
lea edx [ebp+var_230] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aPuserscollec_0  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40C99F  +
mov byte_41D9CA 1 +
cmp [ebp+var_230] ebx +
ja loc_40CA68  +
push dword ptr [ebp-238h]  +
push offset aReader  +
call sub_4097FB  +
mov esi ds:VariantClear +
mov edi ds:SysAllocString +
test eax eax +
jnz loc_40C953  +
push offset aResettingTheRo  +
call sub_409B50  +
lea eax [ebp+pvarg] +
push eax  +
call esi  +
push 8  +
pop eax  +
push offset aReaders  +
mov word ptr [ebp+pvarg] ax +
call edi  +
mov [ebp-238h] eax +
cmp eax ebx +
jz loc_40C995  +
push dword ptr [ebp-238h]  +
push offset aAdministrator  +
call sub_4097FB  +
test eax eax +
jnz loc_40C9D2  +
push offset aResettingThe_0  +
call sub_409B50  +
lea eax [ebp+pvarg] +
push eax  +
call esi  +
push 8  +
pop eax  +
push offset aAdministrators  +
mov word ptr [ebp+pvarg] ax +
call edi  +
mov [ebp-238h] eax +
cmp eax ebx +
jnz loc_40C9D2  +
mov esi 8007000Eh +
jmp loc_40CCC3  +
push 1  +
push 14B9h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40C8F9  +
mov esi [ebp+var_218] +
jmp loc_40CCC3  +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40C9E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] ebx +
lea eax [ebp+var_21C] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BC8  +
lea esi [ebp+pvarg] +
push [ebp+var_228]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aProlecollect_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CA40  +
mov byte_41D9CA 1 +
jmp loc_40CA68  +
push 1  +
push 14DEh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40CC55  +
xor edi edi +
cmp [ebp+var_224] ebx +
jbe loc_40CC3F  +
mov esi [ebp+var_220] +
push edi  +
mov dword_41D01C edi +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push ebx  +
push 25h  +
push 8  +
push ebx  +
push offset aPirnpackMov_10  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CC32  +
mov eax [esi] +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
lea eax [ebp+var_210] +
push eax  +
push offset unk_4212A8  +
call sub_409AFF  +
lea eax [ebp+var_210] +
test eax eax +
jz loc_40CB00  +
lea eax [ebp+var_210] +
push 2Fh  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_40CB00  +
push 5Ch  +
pop ecx  +
mov [eax] cx +
jmp loc_40CAE3  +
lea eax [ebp+var_210] +
push eax  +
push offset unk_4212A8  +
call sub_409AFF  +
lea eax [ebp+var_22C] +
push eax  +
push [ebp+var_21C]  +
call sub_409505  +
push ebx  +
push 25h  +
push ebx  +
push ebx  +
push offset aPuserscollec_1  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CBC3  +
lea eax [ebp+var_210] +
push eax  +
push offset aUser  +
push [ebp+var_22C]  +
call sub_40A085  +
push ebx  +
push 125h  +
push ebx  +
push ebx  +
push offset aAdminsetproper  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
lea edx [ebp+var_244] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push 125h  +
push ebx  +
push ebx  +
push offset aPuserscollec_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 25h  +
push 8  +
push ebx  +
push offset aPirnpackMov_11  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CBFB  +
mov byte_41D9CA 1 +
jmp loc_40CC1F  +
push 1  +
push 1537h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40CC55  +
push 802h  +
push ebx  +
push offset unk_4212A8  +
call memset  +
add esp 0Ch +
inc edi  +
cmp edi [ebp+var_224] +
jb loc_40CA76  +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40CC55  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] ebx +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 5  +
push 8  +
push ebx  +
push offset aPirnpackMov_12  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CC93  +
mov byte_41D9CA 1 +
jmp loc_40CCBD  +
push 1  +
push 154Ch  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_218] +
cmp byte_41D9CA bl +
jz loc_40CCC3  +
mov esi [ebp+var_214] +
or dword_41D01C 0FFFFFFFFh +
push 802h  +
push ebx  +
push offset unk_4212A8  +
call memset  +
mov eax [ebp+var_21C] +
add esp 0Ch +
cmp eax ebx +
jz loc_40CCF3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] ebx +
mov eax [ebp+var_22C] +
cmp eax ebx +
jz loc_40CD03  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40CD0D  +
mov esi [ebp+var_218] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 248h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_220] eax +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_218] ebx +
mov [ebp+var_228] ebx +
mov [ebp+var_230] ebx +
mov [ebp+var_234] ebx +
mov [ebp+var_21C] ebx +
call ds:VariantInit  +
mov edi offset aG_btempfortest +
cmp esi ebx +
jnz loc_40CDA3  +
push 1  +
push 169Eh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40CE5A  +
cmp [ebp+var_220] ebx +
jz loc_40CE36  +
mov byte_41D9CA 1 +
mov eax [esi] +
push offset asc_4026C8  +
push offset aMethods  +
push esi  +
call dword ptr [eax+38h]  +
push ebx  +
push 0Bh  +
push 5  +
push offset aPirnpackMov_13  +
push offset aPirnpackMov_14  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D0E4  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+var_228] +
push ecx  +
push esi  +
call dword ptr [eax+30h]  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CE64  +
mov byte_41D9CA 1 +
jmp loc_40CE88  +
push 1  +
push 169Fh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40CDB6  +
mov esi 80070057h +
jmp loc_40D268  +
push 1  +
push 16BDh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D204  +
mov eax [ebp+var_228] +
add dword_422B78 eax +
mov dword_422B9C eax +
cmp eax ebx +
jbe loc_40CF48  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPmethodcollect  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40CEDE  +
mov byte_41D9CA 1 +
jmp loc_40CF02  +
push 1  +
push 16CFh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D0E4  +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+var_230] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPmethodcolle_0  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D0C0  +
mov byte_41D9CA 1 +
mov [ebp+var_224] ebx +
cmp [ebp+var_228] ebx +
jbe loc_40D1C9  +
mov eax [ebp+var_224] +
push eax  +
mov dword_41D018 eax +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+40h]  +
push ebx  +
push 1Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_15  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D1B1  +
mov eax [esi] +
push 104h  +
lea ecx [ebp+var_210] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
lea eax [ebp+var_210] +
push eax  +
push offset unk_41F1E8  +
call sub_409AFF  +
push ebx  +
lea eax [ebp+var_234] +
push eax  +
push offset aDescription  +
push offset asc_4026C8  +
push esi  +
call sub_409E62  +
push 80h  +
push 9Bh  +
push 5  +
push offset aRegreadwritest  +
push offset aRegreadwrite_3  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D146  +
cmp [ebp+var_230] ebx +
mov [ebp+var_22C] ebx +
jle loc_40D146  +
lea eax [ebp+var_21C] +
push eax  +
push [ebp+var_22C]  +
push [ebp+var_220]  +
call sub_4095E6  +
push ebx  +
push 1Bh  +
push ebx  +
push ebx  +
push offset aPmethodcolle_1  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D0A3  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push dword_422BC4  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_210] +
push eax  +
push dword ptr [ebp-23Ch]  +
call sub_4097FB  +
test eax eax +
jz loc_40D0EF  +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40D0A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] ebx +
inc [ebp+var_22C]  +
mov eax [ebp+var_22C] +
cmp eax [ebp+var_230] +
jl loc_40D01E  +
jmp loc_40D146  +
push 1  +
push 16DCh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40CF48  +
mov esi [ebp+var_218] +
jmp loc_40D268  +
push [ebp+var_234]  +
push offset aDescription_1  +
push [ebp+var_21C]  +
call sub_40A085  +
push 100h  +
push 11Bh  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40D146  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_21C] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 1Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_16  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D17E  +
mov byte_41D9CA 1 +
jmp loc_40D19E  +
push 1  +
push 1731h  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D204  +
push 802h  +
push ebx  +
push offset unk_41F1E8  +
call memset  +
add esp 0Ch +
inc [ebp+var_224]  +
mov eax [ebp+var_224] +
cmp eax [ebp+var_228] +
jb loc_40CF5A  +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+var_248] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push 0Bh  +
push 108h  +
push ebx  +
push offset aPmethodcolle_2  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 0Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_17  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D23C  +
mov byte_41D9CA 1 +
jmp loc_40D262  +
push 1  +
push 174Dh  +
push offset aDW7rtmComCompl  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_218] +
cmp byte_41D9CA bl +
jz loc_40D268  +
mov esi [ebp+var_214] +
or dword_41D018 0FFFFFFFFh +
push 802h  +
push ebx  +
push offset unk_41F1E8  +
call memset  +
add esp 0Ch +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_21C] +
cmp eax ebx +
jz loc_40D29F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40D2A9  +
mov esi [ebp+var_218] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 284h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+cb] ecx +
mov ecx [ebp+arg_8] +
push edi  +
mov [ebp+var_270] eax +
mov [ebp+var_26C] ecx +
mov [ebp+var_274] ebx +
mov [ebp+var_27C] ebx +
mov [ebp+var_268] ebx +
mov [ebp+var_278] ebx +
mov [ebp+var_280] ebx +
mov esi offset aDW7rtmComCompl +
mov edi offset aG_btempfortest +
cmp eax ebx +
jnz loc_40D33E  +
push 1  +
push 1776h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D3B7  +
cmp [ebp+var_26C] ebx +
jz loc_40D39B  +
mov byte_41D9CA 1 +
mov eax [ebp+var_270] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aRolemembership  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push 0Bh  +
push 5  +
push offset aPirnpackMov_18  +
push offset aPirnpackMov_19  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40D3C1  +
mov esi [ebp+var_268] +
jmp loc_40D7BC  +
push 1  +
push 1779h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40D34D  +
mov esi 80070057h +
jmp loc_40D7BC  +
mov eax [ebp+var_270] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_278] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40D41D  +
push 1  +
push 1796h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D756  +
cmp [ebp+var_278] ebx +
jbe loc_40D490  +
cmp [ebp+cb] ebx +
jnz loc_40D490  +
push 1  +
push 1799h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D756  +
mov eax [ebp+var_26C] +
mov ecx [eax] +
lea edx [ebp+var_27C] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aProlecollGetut  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D499  +
mov byte_41D9CA 1 +
jmp loc_40D4B9  +
mov byte_41D9CA 1 +
jmp loc_40D44D  +
push 1  +
push 17A7h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D756  +
mov eax [ebp+var_27C] +
mov ecx [eax] +
lea edx [ebp+var_274] +
push edx  +
push offset dword_401778  +
push eax  +
call dword ptr [ecx]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aQiFailed_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D500  +
mov byte_41D9CA 1 +
jmp loc_40D520  +
push 1  +
push 17B3h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D756  +
mov [ebp+var_26C] ebx +
cmp [ebp+var_278] ebx +
jbe loc_40D756  +
cmp byte_41D000 bl +
jz loc_40D756  +
mov ecx [ebp+var_26C] +
mov eax [ebp+var_270] +
push ecx  +
mov dword_41D010 ecx +
mov edx [eax] +
push eax  +
call dword ptr [edx+40h]  +
push ebx  +
push 0Fh  +
push 8  +
push ebx  +
push offset aPirnpackMov_20  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D73E  +
mov eax [ebp+var_270] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_260] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_260] +
push eax  +
push 28h  +
lea eax [ebp+var_54] +
push eax  +
call sub_409CFE  +
cmp eax ebx +
jge loc_40D5D7  +
push offset aErrorFieldCont  +
call sub_409B50  +
cmp [ebp+var_268] ebx +
jl loc_40D69C  +
mov [ebp+var_268] 8000FFFFh +
jmp loc_40D69C  +
push 14h  +
pop ecx  +
push ebx  +
lea eax [ebp+var_280] +
push eax  +
push offset aName_1  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+cb]  +
lea esi [ebp+var_54] +
mov edi offset unk_421258 +
movs   +
call sub_409E62  +
push 80h  +
push 8Fh  +
push 8  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D692  +
push [ebp+var_280]  +
push offset unk_41E9E0  +
call sub_409AFF  +
push [ebp+var_280]  +
call ds:SysAllocString  +
mov esi eax +
cmp esi ebx +
jz loc_40D6DA  +
mov eax [ebp+var_274] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
push ebx  +
push 0Fh  +
push 100h  +
push ebx  +
push offset aProleassocutil  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
push esi  +
call ds:SysFreeString  +
mov esi offset aDW7rtmComCompl +
mov edi offset aG_btempfortest +
mov eax [ebp+var_270] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 0Fh  +
push 8  +
push ebx  +
push offset aPirnpackMov_21  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D702  +
mov byte_41D9CA 1 +
jmp loc_40D71E  +
push offset aErrorFailureAl  +
call sub_409B50  +
cmp [ebp+var_268] ebx +
mov edi offset aG_btempfortest +
mov esi offset aDW7rtmComCompl +
jl loc_40D69C  +
mov [ebp+var_268] 8007000Eh +
jmp loc_40D69C  +
push 1  +
push 180Ch  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40D756  +
push 50h  +
push ebx  +
push offset unk_421258  +
call memset  +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
add esp 18h +
inc [ebp+var_26C]  +
mov eax [ebp+var_26C] +
cmp eax [ebp+var_278] +
jb loc_40D532  +
mov eax [ebp+var_270] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 0Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_22  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D794  +
mov byte_41D9CA 1 +
jmp loc_40D7B6  +
push 1  +
push 181Fh  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_268] +
cmp byte_41D9CA bl +
jz loc_40D7BC  +
mov esi [ebp+var_264] +
or dword_41D010 0FFFFFFFFh +
push 50h  +
push ebx  +
push offset unk_421258  +
call memset  +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
mov eax [ebp+var_274] +
add esp 18h +
cmp eax ebx +
jz loc_40D7F9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_274] ebx +
mov eax [ebp+var_27C] +
cmp eax ebx +
jz loc_40D809  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40D813  +
mov esi [ebp+var_268] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
push [ebp+arg_4]  +
xor edi edi +
push offset asc_4026C8  +
push esi  +
mov [ebp+var_4] edi +
call dword ptr [eax+38h]  +
push edi  +
push edi  +
push 1  +
push offset aPirnMovetodesc  +
push offset aPirnMovetode_0  +
mov [ebp+arg_0] eax +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40D8B9  +
push [ebp+arg_8]  +
mov eax [esi] +
push 4  +
push 4  +
push esi  +
call dword ptr [eax+28h]  +
push edi  +
push edi  +
push 1  +
push offset aPirnGetcontent  +
push offset aPirnGetconte_0  +
mov [ebp+arg_0] eax +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
push edi  +
push edi  +
push 8  +
push edi  +
push offset aPirnMovetopare  +
mov [ebp+arg_0] eax +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov eax [ebp+arg_0] +
cmp eax edi +
pop edi  +
pop esi  +
jl locret_40D8C5  +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+var_4] ebx +
call ds:VariantInit  +
push 3  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+arg_8] +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+20h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcatobjectPut_  +
mov [ebp+arg_8] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
call sub_40A235  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+arg_8] +
cmp eax ebx +
jl loc_40D93B  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 32Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push 206h  +
lea eax [ebp+var_314] +
push ebx  +
push eax  +
mov [ebp+var_318] ebx +
call memset  +
xor eax eax +
push 103h  +
mov word ptr [ebp+String] ax +
lea eax [ebp-10Ah] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
cmp hFile ebx +
jnz loc_40DB97  +
cmp dword_422B64 3 +
push esi  +
push edi  +
push 104h  +
jz loc_40DA3B  +
lea eax [ebp+String] +
push eax  +
call ds:GetWindowsDirectoryA  +
test eax eax +
jnz loc_40D9EE  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_40D9DA  +
and eax 0FFFFh +
or eax 80070000h +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov [ebp+var_31C] eax +
push offset aGetwindowsdire  +
jmp loc_40DA7C  +
lea eax [ebp+String] +
push eax  +
call sub_409A52  +
push offset aMtstocom_log_0  +
push 105h  +
lea eax [ebp+String] +
push eax  +
call sub_409D38  +
cmp eax ebx +
mov [ebp+var_31C] eax +
push ebx  +
jl loc_40DA74  +
mov edi 80000080h +
push edi  +
push 4  +
push ebx  +
push 1  +
mov esi 40000000h +
push esi  +
lea eax [ebp+String] +
push eax  +
call ds:CreateFileA  +
jmp loc_40DAAD  +
lea eax [ebp+var_318] +
push eax  +
call sub_41560C  +
lea eax [ebp+var_318] +
push eax  +
call sub_409AA3  +
push offset aMtstocom_log  +
push 105h  +
lea eax [ebp+var_318] +
push eax  +
call sub_409DA8  +
cmp eax ebx +
mov [ebp+var_31C] eax +
push ebx  +
jge loc_40DA8F  +
push ebx  +
push ebx  +
push ebx  +
push offset aFilenameLenght  +
push ebx  +
lea eax [ebp+var_31C] +
push eax  +
push eax  +
call sub_40A235  +
jmp loc_40DB95  +
mov edi 80000080h +
push edi  +
push 4  +
push ebx  +
push 1  +
mov esi 40000000h +
push esi  +
lea eax [ebp+var_318] +
push eax  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax 0FFFFFFFFh +
jz loc_40DB95  +
push ebx  +
push eax  +
call ds:GetFileSize  +
cmp eax 100000h +
jbe loc_40DB11  +
push hFile  +
call ds:CloseHandle  +
cmp dword_422B64 3 +
push ebx  +
push edi  +
push 5  +
push ebx  +
push 1  +
push esi  +
jz loc_40DAF6  +
lea eax [ebp+String] +
push eax  +
call ds:CreateFileA  +
jmp loc_40DB03  +
lea eax [ebp+var_318] +
push eax  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax 0FFFFFFFFh +
jz loc_40DB95  +
push 2  +
push ebx  +
push ebx  +
push hFile  +
call ds:SetFilePointer  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov esi offset asc_403FD0 +
push esi  +
call sub_409B50  +
mov ax [ebp+SystemTime.wHour] +
mov ecx offset aPm +
cmp ax 0Ch +
jnb loc_40DB50  +
mov ecx offset aAm +
ja loc_40DB57  +
movzx edx ax +
jmp loc_40DB60  +
movzx eax ax +
push 0Ch  +
cdq   +
pop edi  +
idiv  edi +
movzx eax [ebp+SystemTime.wMinute] +
push ecx  +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push edx  +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
push offset aSetupStartedDa  +
call sub_40A11E  +
add esp 1Ch +
push esi  +
call sub_409B50  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
call ds:VariantInit  +
mov esi [ebp+arg_0] +
mov edi offset aDW7rtmComCompl +
cmp esi ebx +
jnz loc_40DBF5  +
push 1  +
push 5DCh  +
push edi  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40DC5E  +
cmp [ebp+arg_4] ebx +
jz loc_40DC3E  +
mov byte_41D9CA 1 +
mov eax [esi] +
push offset asc_4026C8  +
push offset aRoles  +
push esi  +
call dword ptr [eax+38h]  +
push ebx  +
push ebx  +
push 95h  +
push offset aPirnpackMov_23  +
push offset aPirnpackMov_24  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40DC68  +
xor esi esi +
jmp loc_40DE91  +
push 1  +
push 5DDh  +
push edi  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40DC01  +
mov esi 80070057h +
jmp loc_40DE91  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+var_14] +
push ecx  +
push esi  +
call dword ptr [eax+30h]  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_3  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40DC9B  +
mov byte_41D9CA 1 +
jmp loc_40DCBF  +
push 1  +
push 5FAh  +
push edi  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40DE3C  +
mov [ebp+var_C] ebx +
cmp [ebp+var_14] ebx +
jbe loc_40DE3C  +
mov eax [ebp+var_C] +
push eax  +
mov dword_41D010 eax +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+40h]  +
push ebx  +
push ebx  +
push 95h  +
push ebx  +
push offset aPirnpackMov_25  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40DE2D  +
push ebx  +
lea eax [ebp+var_10] +
push eax  +
push offset aName_1  +
push offset asc_4026C8  +
push esi  +
call sub_409E62  +
push 80h  +
push 85h  +
push 8  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40DDCB  +
push [ebp+var_10]  +
push offset unk_41E9E0  +
call sub_409AFF  +
push 8  +
pop eax  +
push [ebp+var_10]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jz loc_40DDA2  +
push [ebp+arg_8]  +
lea esi [ebp+pvarg] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
movs   +
push [ebp+arg_0]  +
movs   +
movs   +
movs   +
call sub_40C637  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMigrateroleuse  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov esi [ebp+arg_0] +
mov edi offset aDW7rtmComCompl +
jmp loc_40DDC1  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aOutOfMemoryA_0  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] 8007000Eh +
call sub_40A235  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 5  +
push 8  +
push ebx  +
push offset aPirnpackMov_26  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40DDFA  +
mov byte_41D9CA 1 +
jmp loc_40DE1A  +
push 1  +
push 646h  +
push edi  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40DE3C  +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
add esp 0Ch +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_14] +
jb loc_40DCCB  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_27  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40DE6B  +
mov byte_41D9CA 1 +
jmp loc_40DE8E  +
push 1  +
push 65Ah  +
push edi  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_8] +
cmp byte_41D9CA bl +
jz loc_40DE91  +
mov esi [ebp+var_4] +
or dword_41D010 0FFFFFFFFh +
push 802h  +
push ebx  +
push offset unk_41E9E0  +
call memset  +
add esp 0Ch +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp esi ebx +
jl loc_40DEBC  +
mov esi [ebp+var_8] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_40DF59  +
mov byte_41D9CA 1 +
mov eax [edi] +
push esi  +
lea ecx [ebp+var_4] +
push ecx  +
push 0F003Fh  +
mov esi offset asc_4026C8 +
push esi  +
push offset aSoftwareMicr_0  +
push 80000002h  +
push offset a?  +
push edi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_40DF8B  +
cmp edi 8007000Eh +
jz loc_40E118  +
cmp edi 800705AFh +
jz loc_40E118  +
cmp edi 8007045Bh +
jz loc_40E118  +
cmp edi 800705AAh +
jz loc_40E118  +
push 67Ch  +
push offset aDW7rtmComCompl  +
push edi  +
call nullsub_5  +
jmp loc_40E118  +
push 1  +
push 679h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40DEE9  +
mov edi 80070057h +
jmp loc_40E119  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push offset aNocleanup  +
push eax  +
call dword ptr [ecx+38h]  +
mov edi eax +
cmp edi ebx +
jnz loc_40DFB6  +
push offset aWonTCleanupBec  +
call sub_409B50  +
mov [ebp+var_8] 1 +
jmp loc_40E118  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push offset aPostmigrationp  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 1  +
push offset aPirntransser_3  +
push offset aPirntransser_4  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E115  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirntransser_5  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E115  +
push offset aPackages  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push 5  +
pop edi  +
push edi  +
push ebx  +
mov esi offset aDeleteakeyFail +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aComputers  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aExtender  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aExtenders  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aLocalComputer  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aComponents_0  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
push offset aPostmigrationp  +
push [ebp+var_4]  +
call sub_40A36B  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
push esi  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov edi [ebp+arg_0] +
pop esi  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_40E126  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jl loc_40E12D  +
mov edi [ebp+var_8] +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_14] ebx +
mov [ebp+cb] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_0] ebx +
jnz loc_40E18A  +
push 1  +
push 8F2h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E200  +
cmp [ebp+arg_4] ebx +
jz loc_40E1E4  +
mov byte_41D9CA 1 +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+cb] +
push edx  +
push 20019h  +
push offset asc_4026C8  +
push offset aSoftwareMicros  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aGetregnodefr_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E20A  +
mov byte_41D9CA 1 +
jmp loc_40E22A  +
push 1  +
push 8F3h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40E196  +
mov esi 80070057h +
jmp loc_40E636  +
push 1  +
push 901h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
mov eax [ebp+cb] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aTransactionS_0  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 5  +
push offset aPirnlocalcompu  +
push offset aPirnlocalcom_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E693  +
mov eax [ebp+cb] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirnlocalcom_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40E2B0  +
push 1  +
push 91Dh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
cmp [ebp+var_1C] 1 +
jnz loc_40E2BF  +
mov byte_41D9CA 1 +
jmp loc_40E2DF  +
push 1  +
push 920h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E3E2  +
lea eax [ebp+var_10] +
push eax  +
push dword_422BF8  +
push [ebp+arg_0]  +
call sub_409408  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcatalogGetc_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E318  +
mov byte_41D9CA 1 +
jmp loc_40E338  +
push 1  +
push 92Eh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomputer  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E368  +
mov byte_41D9CA 1 +
jmp loc_40E388  +
push 1  +
push 93Ch  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E3BC  +
mov byte_41D9CA 1 +
jmp loc_40E3DC  +
push 1  +
push 94Ah  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
cmp [ebp+var_18] 1 +
jz loc_40E3EC  +
mov esi 8000FFFFh +
jmp loc_40E636  +
mov eax [ebp+cb] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+40h]  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aPirnlocalcom_2  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E41E  +
mov byte_41D9CA 1 +
jmp loc_40E43E  +
push 1  +
push 95Dh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E693  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push [ebp+var_10]  +
call sub_4095E6  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E673  +
mov byte_41D9CA 1 +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push offset aRemoteserverna  +
mov edi offset asc_4026C8 +
push edi  +
push [ebp+cb]  +
call sub_409E62  +
mov esi 80h +
push esi  +
push esi  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E4DF  +
push [ebp+var_14]  +
push offset aRemoteserver_0  +
push [ebp+var_C]  +
call sub_40A085  +
mov [ebp+arg_4] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push offset aDescription  +
push edi  +
push [ebp+cb]  +
call sub_409E62  +
push esi  +
push esi  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E540  +
push [ebp+var_14]  +
push offset aDescription_1  +
push [ebp+var_C]  +
call sub_40A085  +
mov [ebp+arg_4] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push offset aResourcepoolin  +
push edi  +
push [ebp+cb]  +
call sub_409E62  +
push esi  +
push esi  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E5C0  +
mov esi [ebp+var_14] +
cmp esi ebx +
jz loc_40E58E  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40E57E  +
sub eax edx +
sar eax 1 +
jnz loc_40E593  +
mov esi offset aY_1 +
push esi  +
push offset aResourcepool_0  +
push [ebp+var_C]  +
call sub_40A085  +
mov [ebp+arg_4] eax +
mov eax 100h +
push eax  +
push eax  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
lea eax [ebp+var_20] +
push eax  +
push offset aTransactiontim  +
push [ebp+cb]  +
call sub_40D82B  +
push ebx  +
push ebx  +
push 5  +
push offset aRegreaddwordFa  +
push offset aRegreaddwordRe  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E5FC  +
mov eax [ebp+var_20] +
mov dword_41D004 eax +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40E60C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_2  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
mov esi [ebp+arg_4] +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_40E646  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40E656  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+cb] +
cmp eax ebx +
jz loc_40E663  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40E66A  +
mov esi [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 1  +
push 96Bh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40E474  +
mov esi [ebp+var_4] +
jmp loc_40E636  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_0] ebx +
jz loc_40E705  +
mov byte_41D9CA 1 +
lea eax [ebp+var_8] +
push eax  +
push dword_422BF8  +
push [ebp+arg_0]  +
call sub_409408  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPcatalogGetc_0  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E72B  +
mov byte_41D9CA 1 +
jmp loc_40E74B  +
push 1  +
push 9E9h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40E6CC  +
mov esi 80070057h +
jmp loc_40E89D  +
push 1  +
push 9F6h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E8DA  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomputer  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E77B  +
mov byte_41D9CA 1 +
jmp loc_40E79B  +
push 1  +
push 0A04h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E8DA  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_0  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E7CF  +
mov byte_41D9CA 1 +
jmp loc_40E7EF  +
push 1  +
push 0A12h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E8DA  +
cmp [ebp+var_10] 1 +
jz loc_40E7FF  +
mov esi 8000FFFFh +
jmp loc_40E89D  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push [ebp+var_8]  +
call sub_4095E6  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_1  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40E8BA  +
mov byte_41D9CA 1 +
push dword_41D004  +
push dword_422BD0  +
push [ebp+var_C]  +
call sub_40D8CE  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aSettingTheTran  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40E873  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPlocalcomput_3  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov esi [ebp+arg_0] +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40E8AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40E8B1  +
mov esi [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push 1  +
push 0A25h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40E835  +
mov esi [ebp+var_4] +
jmp loc_40E89D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_10] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_4] ebx +
jnz loc_40E932  +
push 1  +
push 0C77h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40E932  +
mov eax 80070057h +
jmp loc_40EBD6  +
cmp [ebp+arg_0] ebx +
jnz loc_40E953  +
push 1  +
push 0C78h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E928  +
cmp [ebp+arg_8] ebx +
jnz loc_40E974  +
push 1  +
push 0C79h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E928  +
cmp [ebp+cb] ebx +
jz loc_40E982  +
mov byte_41D9CA 1 +
jmp loc_40E99E  +
push 1  +
push 0C7Ah  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40E928  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_40B060  +
push ebx  +
push 3  +
push 8  +
push ebx  +
push offset aGetobjectfro_3  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EBBF  +
push [ebp+arg_0]  +
push offset aPackageid  +
push [ebp+var_10]  +
call sub_40A085  +
mov esi 100h +
push esi  +
push 103h  +
push ebx  +
push ebx  +
mov edi offset aSettingPropert +
push edi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aTransaction  +
push [ebp+arg_4]  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 83h  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EA89  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40EA89  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40EA4F  +
sub eax edx +
sar eax 1 +
jz loc_40EA89  +
push [ebp+var_8]  +
push offset aTransaction_0  +
push [ebp+var_10]  +
call sub_40A085  +
push esi  +
push 103h  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aSecurityenable  +
push [ebp+arg_4]  +
push [ebp+arg_10]  +
call sub_409E62  +
push 80h  +
push 83h  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EB10  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40EADF  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40EACF  +
sub eax edx +
sar eax 1 +
jnz loc_40EAE6  +
mov [ebp+var_8] offset aY_1 +
push [ebp+var_8]  +
push offset aSecurityenab_0  +
push [ebp+var_10]  +
call sub_40A085  +
push esi  +
push 103h  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aWrapped  +
push [ebp+arg_4]  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 83h  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EB97  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40EB66  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40EB56  +
sub eax edx +
sar eax 1 +
jnz loc_40EB6D  +
mov [ebp+var_8] offset aY_2 +
push [ebp+var_8]  +
push offset aRunasmtsobject  +
push [ebp+var_10]  +
call sub_40A085  +
push esi  +
push 103h  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push 3  +
push esi  +
push ebx  +
push offset aPtempcompcol_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_40EBCC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax ebx +
jl loc_40EBD6  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
cmp esi ebx +
jz loc_40ECA2  +
mov byte_41D9CA 1 +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push offset a5d15c5a84c2911  +
call sub_40B060  +
push ebx  +
push ebx  +
push 4  +
push ebx  +
push offset aGetobjectfro_4  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EC85  +
push [ebp+var_8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+28h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_3  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov eax [esi] +
lea ecx [ebp+var_10] +
push ecx  +
push esi  +
call dword ptr [eax+34h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_4  +
mov [ebp+arg_0] eax +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40EC92  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jl loc_40EC9C  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push 1  +
push 0D23h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40EC0C  +
mov eax 80070057h +
jmp loc_40EC9C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_8] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_40ED24  +
push 1  +
push 1044h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F24F  +
cmp [ebp+arg_0] ebx +
jnz loc_40ED49  +
push 1  +
push 1045h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F24F  +
cmp [ebp+arg_4] ebx +
jz loc_40F22F  +
mov byte_41D9CA 1 +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
call sub_409505  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_5  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F256  +
mov byte_41D9CA 1 +
push [ebp+arg_4]  +
push offset aId  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aName_1  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
mov edi 81h +
push edi  +
push 40h  +
push ebx  +
mov esi offset aRegreadwrite_1 +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EE34  +
push [ebp+var_C]  +
push offset aName_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aDescription  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 5  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EEA2  +
cmp [ebp+var_C] ebx +
jz loc_40EEA2  +
push [ebp+var_C]  +
push offset aDescription_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aActivation  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 40h  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EF0B  +
push [ebp+var_C]  +
push offset aActivation_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
lea eax [ebp+var_18] +
push eax  +
push offset aAuthentication  +
push [ebp+cb]  +
call sub_40D82B  +
push ebx  +
push 1  +
push 5  +
push offset aRegreaddword_0  +
push offset aRegreaddword_1  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EF6D  +
push [ebp+var_18]  +
push dword_422BD4  +
push [ebp+var_10]  +
call sub_40D8CE  +
push ebx  +
push 1  +
push 40h  +
push ebx  +
push offset aAdminsetdwordp  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aCreatedby  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 5  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40EFDB  +
cmp [ebp+var_C] ebx +
jz loc_40EFDB  +
push [ebp+var_C]  +
push offset aCreatedby_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aDeleteable  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 5  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F065  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40F02B  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40F01B  +
sub eax edx +
sar eax 1 +
jnz loc_40F032  +
mov [ebp+var_C] offset aY_1 +
push [ebp+var_C]  +
push offset aDeleteable_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aNevershutdown  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 5  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F0EF  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_40F0B5  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40F0A5  +
sub eax edx +
sar eax 1 +
jnz loc_40F0BC  +
mov [ebp+var_C] offset aN +
push [ebp+var_C]  +
push offset aRunforever  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push offset aSecurityenable  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push edi  +
push 5  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F177  +
mov edx [ebp+var_C] +
cmp edx ebx +
jz loc_40F141  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40F131  +
sub eax esi +
sar eax 1 +
jnz loc_40F146  +
mov edx offset aN +
push edx  +
push offset aSecurityenab_0  +
push [ebp+var_10]  +
call sub_40A085  +
push 100h  +
push 101h  +
push 40h  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
lea eax [ebp+var_14] +
push eax  +
push offset aLatency  +
push [ebp+cb]  +
call sub_40D82B  +
push ebx  +
push 1  +
push 5  +
push offset aRegreaddwordSh  +
push offset aRegreaddword_2  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F1E3  +
mov eax [ebp+var_14] +
push 3Ch  +
pop ecx  +
xor edx edx +
div  ecx +
push eax  +
push dword_422BCC  +
mov [ebp+var_14] eax +
push [ebp+var_10]  +
call sub_40D8CE  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aAdminsetdwor_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push ebx  +
push 1  +
push 100h  +
push ebx  +
push offset aPpkgcollection  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov esi [ebp+var_4] +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_40F21F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40F226  +
mov esi [ebp+var_8] +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push 1  +
push 1046h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40ED59  +
mov esi 80070057h +
jmp loc_40F212  +
push 1  +
push 1054h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40ED8F  +
mov esi [ebp+var_8] +
jmp loc_40F212  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2A0h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_18] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+cb] esi +
mov [ebp+var_27C] edi +
mov [ebp+var_28C] eax +
mov [ebp+var_268] ebx +
mov [ebp+var_270] ebx +
mov [ebp+var_274] ebx +
mov [ebp+var_278] ebx +
mov [ebp+var_284] ebx +
mov [ebp+var_280] ebx +
mov [ebp+var_288] ebx +
mov [ebp+var_290] ebx +
cmp esi ebx +
jnz loc_40F311  +
push 1  +
push 1577h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F395  +
cmp edi ebx +
jz loc_40F371  +
mov byte_41D9CA 1 +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
mov eax [esi] +
push offset asc_4026C8  +
push offset aInterfaces  +
push esi  +
call dword ptr [eax+38h]  +
push ebx  +
push 3  +
push 5  +
push offset aPirnpackMov_28  +
push offset aPirnpackMov_29  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_40F39F  +
mov esi [ebp+var_268] +
jmp loc_40F9BB  +
push 1  +
push 1578h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40F31C  +
mov esi 80070057h +
jmp loc_40F9BB  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+var_280] +
push ecx  +
push esi  +
call dword ptr [eax+30h]  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aPirnpackGetn_4  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F3DE  +
mov byte_41D9CA 1 +
jmp loc_40F406  +
push 1  +
push 159Ah  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F921  +
mov eax [ebp+var_280] +
add dword_422B74 eax +
mov dword_422B98 eax +
lea eax [ebp+var_270] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BE8  +
lea esi [ebp+arg_8] +
push [ebp+var_27C]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aPcompcollectio  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F46C  +
mov byte_41D9CA 1 +
jmp loc_40F494  +
push 1  +
push 15AAh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F91B  +
mov eax [ebp+var_270] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 5  +
push ebx  +
push ebx  +
push offset aPinterfacecoll  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F4D1  +
mov byte_41D9CA 1 +
jmp loc_40F4F9  +
push 1  +
push 15B7h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F91B  +
mov [ebp+var_27C] ebx +
cmp [ebp+var_280] ebx +
jbe loc_40F91B  +
cmp byte_41D000 bl +
jz loc_40F91B  +
mov eax [ebp+var_27C] +
mov esi [ebp+cb] +
push eax  +
mov dword_41D014 eax +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+40h]  +
push ebx  +
push 0Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_30  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F903  +
mov eax [esi] +
push 104h  +
lea ecx [ebp+var_260] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
lea eax [ebp+var_260] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40F577  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
jbe loc_40F5AF  +
push offset aErrorFieldCont  +
call sub_409B50  +
cmp [ebp+var_268] ebx +
jl loc_40F897  +
mov [ebp+var_268] 8000FFFFh +
jmp loc_40F897  +
lea eax [ebp+var_260] +
push eax  +
push 28h  +
lea eax [ebp+var_54] +
push eax  +
call sub_409CFE  +
mov esi eax +
cmp esi ebx +
jl loc_40F959  +
push 14h  +
pop ecx  +
push 8  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea eax [ebp+var_54] +
lea esi [ebp+var_54] +
mov edi offset unk_422B10 +
push eax  +
movs   +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jnz loc_40F611  +
cmp [ebp+var_268] ebx +
jl loc_40F884  +
mov [ebp+var_268] 8007000Eh +
jmp loc_40F884  +
push ebx  +
lea eax [ebp+var_288] +
push eax  +
push offset aDescription  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 8Bh  +
push 5  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F734  +
lea eax [ebp+var_264] +
push eax  +
lea eax [ebp+var_284] +
push eax  +
push [ebp+var_270]  +
lea eax [ebp+var_54] +
push eax  +
call sub_40B060  +
push ebx  +
push 0Bh  +
push 8  +
push ebx  +
push offset aGetobjectfro_5  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F734  +
push [ebp+var_288]  +
mov edi [ebp+var_284] +
push offset aDescription_1  +
push edi  +
call sub_40A085  +
push ebx  +
mov esi 10Bh +
push esi  +
push ebx  +
push ebx  +
push offset aSettingPropert  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_270] +
mov ecx [eax] +
lea edx [ebp+var_290] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov [ebp+var_264] eax +
lea eax [esi-0Bh] +
push eax  +
push esi  +
push eax  +
push ebx  +
push offset aSavechangesFai  +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
cmp edi ebx +
jz loc_40F734  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov [ebp+var_284] ebx +
cmp byte_41D000 bl +
jz loc_40F884  +
lea eax [ebp+var_274] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BE0  +
lea esi [ebp+pvarg] +
push [ebp+var_270]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPinterfaceco_0  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F7DF  +
push [ebp+var_274]  +
push [ebp+var_28C]  +
push [ebp+cb]  +
call sub_40D2C1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aAssociateroleF  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_274] +
cmp eax ebx +
jz loc_40F7DF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_274] ebx +
cmp byte_41D000 bl +
jz loc_40F884  +
lea eax [ebp+var_278] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BF0  +
lea esi [ebp+pvarg] +
push [ebp+var_270]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 0Bh  +
push ebx  +
push ebx  +
push offset aPinterfaceco_1  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F884  +
push [ebp+var_278]  +
push [ebp+cb]  +
call sub_40CD25  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMigratemethodd  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_278] +
cmp eax ebx +
jz loc_40F884  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_278] ebx +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov esi [ebp+cb] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 0Bh  +
push 8  +
push ebx  +
push offset aPirnpackMov_31  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F8CF  +
mov byte_41D9CA 1 +
jmp loc_40F8F3  +
push 1  +
push 165Dh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40F91B  +
push 50h  +
push ebx  +
push offset unk_422B10  +
call memset  +
add esp 0Ch +
inc [ebp+var_27C]  +
mov eax [ebp+var_27C] +
cmp eax [ebp+var_280] +
jb loc_40F50B  +
mov esi [ebp+cb] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push ebx  +
push 3  +
push 8  +
push ebx  +
push offset aPirnpackMov_32  +
mov [ebp+var_264] eax +
push ebx  +
lea eax [ebp+var_268] +
push eax  +
lea eax [ebp+var_264] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40F98B  +
mov byte_41D9CA 1 +
jmp loc_40F9B5  +
cmp esi 8007000Eh +
jz loc_40F9BB  +
cmp esi 800705AFh +
jz loc_40F9BB  +
cmp esi 8007045Bh +
jz loc_40F9BB  +
cmp esi 800705AAh +
jz loc_40F9BB  +
push 15D8h  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
jmp loc_40F9BB  +
push 1  +
push 1671h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
mov esi [ebp+var_268] +
cmp byte_41D9CA bl +
jz loc_40F9BB  +
mov esi [ebp+var_264] +
or dword_41D014 0FFFFFFFFh +
push 50h  +
push ebx  +
push offset unk_422B10  +
call memset  +
add esp 0Ch +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_270] +
cmp eax ebx +
jz loc_40F9F5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_270] ebx +
mov eax [ebp+var_274] +
cmp eax ebx +
jz loc_40FA0B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_274] ebx +
mov eax [ebp+var_278] +
cmp eax ebx +
jz loc_40FA21  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_278] ebx +
mov eax [ebp+var_284] +
cmp eax ebx +
jz loc_40FA31  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_40FA3B  +
mov esi [ebp+var_268] +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2C4h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi ds:VariantInit +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_28C] eax +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_274] edi +
mov [ebp+var_278] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_290] ebx +
mov [ebp+var_288] ebx +
mov [ebp+var_2A4] ebx +
mov byte ptr [ebp+var_2A0] bl +
call esi  +
lea eax [ebp+var_2B4] +
push eax  +
call esi  +
cmp edi ebx +
mov [ebp+var_298] ebx +
mov [ebp+var_29C] ebx +
mov [ebp+var_280] ebx +
mov [ebp+cb] ebx +
mov esi offset aDW7rtmComCompl +
mov edi offset aG_btempfortest +
jnz loc_40FB01  +
push 1  +
push 4C6h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40FE5A  +
cmp [ebp+var_28C] ebx +
jz loc_40FB12  +
mov byte_41D9CA 1 +
jmp loc_40FB32  +
push 1  +
push 4C7h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_40FE5A  +
mov eax [ebp+var_274] +
mov ecx [eax] +
lea edx [ebp+cb] +
push edx  +
push 0F003Fh  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp+var_274] eax +
jge loc_40FB8A  +
cmp eax 8007000Eh +
jz loc_410232  +
cmp eax 800705AFh +
jz loc_410232  +
cmp eax 8007045Bh +
jz loc_410232  +
cmp eax 800705AAh +
jz loc_410232  +
push 4CBh  +
jmp loc_40FC73  +
mov eax [ebp+cb] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_33  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_40FBCB  +
mov byte_41D9CA 1 +
jmp loc_40FBEB  +
push 1  +
push 4D9h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410226  +
mov eax [ebp+cb] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_260] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_260] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40FC0C  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
ja loc_40FC79  +
mov byte_41D9CA 1 +
lea eax [ebp+var_260] +
push eax  +
push 28h  +
lea eax [ebp+sz] +
push eax  +
call sub_409CFE  +
cmp eax ebx +
mov [ebp+var_274] eax +
jge loc_40FCA4  +
cmp eax 8007000Eh +
jz loc_410232  +
cmp eax 800705AFh +
jz loc_410232  +
cmp eax 8007045Bh +
jz loc_410232  +
cmp eax 800705AAh +
jz loc_410232  +
push 4E0h  +
push esi  +
jmp loc_40FD1E  +
push 1  +
push 4DDh  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_40FC26  +
mov [ebp+var_274] 8000FFFFh +
jmp loc_410232  +
push 14h  +
pop ecx  +
push offset a0c66dfd9D52311  +
lea eax [ebp+sz] +
lea esi [ebp+sz] +
mov edi offset unk_422AC0 +
push eax  +
movs   +
call sub_4097FB  +
test eax eax +
jnz loc_40FD29  +
push offset a02d4b3f1Fd8811  +
push 28h  +
lea eax [ebp+sz] +
push eax  +
mov byte ptr [ebp+var_2A0] 1 +
call sub_409CFE  +
cmp eax ebx +
mov [ebp+var_274] eax +
jge loc_4100DD  +
cmp eax 8007000Eh +
jz loc_410232  +
cmp eax 800705AFh +
jz loc_410232  +
cmp eax 8007045Bh +
jz loc_410232  +
cmp eax 800705AAh +
jz loc_410232  +
push 4EAh  +
push offset aDW7rtmComCompl  +
push eax  +
call nullsub_5  +
jmp loc_410232  +
lea eax [ebp+var_274] +
push eax  +
lea eax [ebp+var_280] +
push eax  +
push [ebp+var_28C]  +
lea eax [ebp+sz] +
push eax  +
call sub_40B060  +
push ebx  +
push 1  +
push 5  +
push ebx  +
push offset aGetobjectfro_6  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4101C4  +
push ebx  +
lea eax [ebp+var_288] +
push eax  +
push offset aUserid  +
push offset asc_4026C8  +
push [ebp+cb]  +
call sub_409E62  +
push 80h  +
push 81h  +
push 5  +
push ebx  +
push offset aRegreadwrite_4  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4100DD  +
cmp [ebp+var_288] ebx +
jz loc_4100DD  +
mov eax [ebp+var_288] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40FDD9  +
sub eax edx +
sar eax 1 +
jz loc_4100DD  +
push [ebp+var_288]  +
push offset aInteractiveUse  +
call sub_4097FB  +
test eax eax +
jz loc_4100DD  +
lea eax [ebp+var_29C] +
push eax  +
push offset dword_407F14  +
call sub_416008  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aGetsecurityadm  +
mov [ebp+var_274] eax +
push offset aGetsecuritya_0  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4100DD  +
lea eax [ebp+pclsid] +
push eax  +
lea eax [ebp+sz] +
push eax  +
call ds:CLSIDFromString  +
cmp eax ebx +
jge loc_40FE69  +
mov [ebp+var_274] 80070057h +
jmp loc_410232  +
mov eax [ebp+var_29C] +
mov ecx [eax] +
lea edx [ebp+var_290] +
push edx  +
lea edx [ebp+pv] +
push edx  +
lea edx [ebp+pclsid] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aGetmtsappident  +
mov [ebp+var_274] eax +
push offset aGetmtsappide_0  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4100DD  +
mov esi dword_422BF4 +
push esi  +
push offset unk_421AB0  +
mov [ebp+var_279] bl +
call sub_409AFF  +
mov eax [ebp+var_280] +
mov ecx [eax] +
lea edx [ebp+var_2B4] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
push 100h  +
mov esi 101h +
push esi  +
push ebx  +
push ebx  +
push offset aPcatobjectGe_0  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
mov edi offset aSettingPropert +
test al al +
jz loc_40FF83  +
cmp word ptr [ebp+var_2B4] 8 +
jz loc_40FF30  +
push offset aErrorChangeabl  +
call sub_409B50  +
jmp loc_40FF83  +
push offset aN_0  +
push [ebp+var_2AC]  +
call sub_4097FB  +
test eax eax +
jnz loc_40FF83  +
push offset aY  +
push offset aChangeable_0  +
push [ebp+var_280]  +
mov [ebp+var_279] 1 +
call sub_40A085  +
push 100h  +
push esi  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
push [ebp+var_288]  +
push offset aIdentity  +
push [ebp+var_280]  +
call sub_40A085  +
push ebx  +
push esi  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
push [ebp+var_290]  +
push offset aPassword  +
push [ebp+var_280]  +
call sub_40985F  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_28C] +
mov ecx [eax] +
lea edx [ebp+var_2A4] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push 100h  +
push esi  +
push ebx  +
push ebx  +
push offset aSavechangesOnP  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
cmp [ebp+var_279] bl +
jz loc_41009E  +
push offset aN_0  +
push offset aChangeable_0  +
push [ebp+var_280]  +
call sub_40A085  +
push ebx  +
push esi  +
push ebx  +
push ebx  +
push edi  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_28C] +
mov ecx [eax] +
lea edx [ebp+var_2A4] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
push 100h  +
push esi  +
push ebx  +
push ebx  +
push offset aSavechangesO_0  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
lea eax [ebp+var_2B4] +
push eax  +
call ds:VariantClear  +
mov esi ds:CoTaskMemFree +
cmp [ebp+pv] ebx +
jz loc_4100C7  +
push [ebp+pv]  +
call esi  +
mov [ebp+pv] ebx +
cmp [ebp+var_290] ebx +
jz loc_4100DD  +
push [ebp+var_290]  +
call esi  +
mov [ebp+var_290] ebx +
push 8  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea eax [ebp+sz] +
push eax  +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jnz loc_41010A  +
mov [ebp+var_274] 8007000Eh +
jmp loc_410232  +
lea eax [ebp+var_298] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BC0  +
lea esi [ebp+pvarg] +
push [ebp+var_28C]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 1  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_6  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410162  +
mov byte_41D9CA 1 +
jmp loc_41018A  +
push 1  +
push 59Eh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410226  +
push [ebp+var_2A0]  +
push [ebp+var_298]  +
push [ebp+cb]  +
call sub_40DBA9  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aWalkrolesmigra  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
mov eax [ebp+cb] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_34  +
mov [ebp+var_274] eax +
push ebx  +
lea eax [ebp+var_278] +
push eax  +
lea eax [ebp+var_274] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410202  +
mov byte_41D9CA 1 +
jmp loc_410232  +
push 1  +
push 5B7h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410232  +
mov eax [ebp+var_278] +
mov [ebp+var_274] eax +
mov esi ds:VariantClear +
lea eax [ebp+var_2B4] +
push eax  +
call esi  +
lea eax [ebp+pvarg] +
push eax  +
call esi  +
mov eax [ebp+var_280] +
cmp eax ebx +
jz loc_41025A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_29C] +
cmp eax ebx +
jz loc_410270  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_29C] ebx +
mov eax [ebp+var_298] +
cmp eax ebx +
jz loc_410286  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_298] ebx +
mov eax [ebp+cb] +
cmp eax ebx +
jz loc_410296  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_274] ebx +
jl loc_4102AA  +
mov eax [ebp+var_278] +
mov [ebp+var_274] eax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_274] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+var_C] ebx +
call ds:VariantInit  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+arg_8] ebx +
jnz loc_410315  +
push 1  +
push 1309h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_4103C6  +
cmp [ebp+arg_4] ebx +
jnz loc_41033A  +
push 1  +
push 130Ch  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_4103C6  +
cmp [ebp+arg_0] ebx +
jz loc_4103AA  +
mov byte_41D9CA 1 +
lea eax [ebp+var_8] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BEC  +
lea esi [ebp+arg_10] +
push [ebp+arg_4]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aPpkgcollecti_7  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410493  +
push 8  +
pop eax  +
push [ebp+arg_0]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jnz loc_4103D2  +
mov [ebp+arg_4] 8007000Eh +
jmp loc_410493  +
push 1  +
push 130Dh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410346  +
mov [ebp+arg_4] 80070057h +
jmp loc_410493  +
lea eax [ebp+var_4] +
push eax  +
sub esp 10h +
mov edi esp +
push dword_422BDC  +
lea esi [ebp+pvarg] +
push [ebp+var_8]  +
movs   +
movs   +
movs   +
movs   +
call sub_4092B7  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aPcompcollect_0  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410483  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_40D2C1  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aAssociateroleF  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
cmp byte_41D000 bl +
jz loc_410473  +
push [ebp+arg_C]  +
lea esi [ebp+pvarg] +
sub esp 10h +
mov edi esp +
push [ebp+var_8]  +
movs   +
push [ebp+arg_8]  +
movs   +
movs   +
movs   +
call sub_40F280  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMigrateinterfa  +
mov [ebp+arg_4] eax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_410483  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_410493  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_4104A3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_4104B0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jl loc_4104BA  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 49Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov [ebp+cb] ecx +
mov ecx [ebp+arg_C] +
mov [ebp+var_48C] ecx +
mov ecx [ebp+arg_10] +
mov [ebp+var_490] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_494] ecx +
mov ecx [ebp+arg_18] +
push ebx  +
mov [ebp+var_480] ecx +
mov ecx [ebp+arg_1C] +
xor ebx ebx +
push esi  +
mov [ebp+var_498] ecx +
mov ecx [ebp+arg_30] +
push edi  +
mov [ebp+var_484] eax +
mov [ebp+var_49C] ecx +
mov [ebp+var_474] ebx +
mov [ebp+var_478] ebx +
mov [ebp+var_47C] ebx +
mov esi offset aDW7rtmComCompl +
mov edi offset aG_btempfortest +
cmp eax ebx +
jnz loc_410568  +
push 1  +
push 0EAFh  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41079E  +
cmp [ebp+cb] ebx +
jnz loc_410590  +
push 1  +
push 0EB0h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41079E  +
cmp [ebp+arg_8] ebx +
jbe loc_4105BD  +
cmp [ebp+var_48C] ebx +
jnz loc_4105BD  +
push 1  +
push 0EB3h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41079E  +
cmp [ebp+var_480] ebx +
jz loc_4105CE  +
mov byte_41D9CA 1 +
jmp loc_4105EE  +
push 1  +
push 0EB5h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41079E  +
mov eax [ebp+var_480] +
mov ecx [eax] +
lea edx [ebp+var_47C] +
push edx  +
push 0F003Fh  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirnclsidsGeta  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410CBB  +
cmp [ebp+arg_8] ebx +
jbe loc_41065E  +
cmp [ebp+var_490] ebx +
jnz loc_41065E  +
push 1  +
push 0EC5h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410BEF  +
cmp [ebp+var_494] ebx +
jz loc_41077E  +
mov byte_41D9CA 1 +
mov eax [ebp+var_484] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aComponents  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push ebx  +
push 5  +
push offset aPirnpackMov_35  +
push offset aPirnpackMov_36  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410CBB  +
mov eax [ebp+arg_8] +
add dword_422B70 eax +
mov dword_422B94 eax +
mov [ebp+var_480] ebx +
cmp eax ebx +
jbe loc_410BEF  +
cmp byte_41D000 bl +
jz loc_410BEF  +
mov ecx [ebp+var_480] +
mov eax [ebp+var_484] +
push ecx  +
mov dword_41D00C ecx +
mov edx [eax] +
push eax  +
call dword ptr [edx+40h]  +
push ebx  +
push 3  +
push 8  +
push ebx  +
push offset aPirnpackMov_37  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410BDA  +
mov eax [ebp+var_484] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_260] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+var_260] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_410746  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
jbe loc_4107AD  +
push offset aErrorComponent  +
call sub_409B50  +
cmp [ebp+var_474] ebx +
jl loc_410B6C  +
mov [ebp+var_474] 8000FFFFh +
jmp loc_410B6C  +
push 1  +
push 0EC6h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410671  +
mov [ebp+var_470] 80070057h +
jmp loc_410CC7  +
lea eax [ebp+var_260] +
push eax  +
push 28h  +
lea eax [ebp+var_54] +
push eax  +
call sub_409CFE  +
cmp eax ebx +
mov [ebp+var_470] eax +
jl loc_410C30  +
push 14h  +
pop ecx  +
push ebx  +
lea eax [ebp+var_478] +
push eax  +
push offset aEnabled  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+cb]  +
lea esi [ebp+var_54] +
mov edi offset unk_4201F8 +
movs   +
call sub_409E62  +
mov edi 80h +
push edi  +
lea esi [edi+3] +
push esi  +
push 5  +
push offset aRegreadwritest  +
push offset aRegreadwrite_5  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410853  +
push [ebp+var_478]  +
push offset aN_1  +
call sub_4097FB  +
test eax eax +
jnz loc_410853  +
lea eax [ebp+var_54] +
push eax  +
push offset aSComponentWasN  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
jmp loc_410B62  +
push ebx  +
lea eax [ebp+var_478] +
push eax  +
push offset aDllserver  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+cb]  +
call sub_409E62  +
push edi  +
push esi  +
push 40h  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410A71  +
mov eax [ebp+var_478] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_4108A4  +
sub eax edx +
sar eax 1 +
cmp eax 104h +
jbe loc_4108DE  +
push offset aErrorCompone_0  +
call sub_409B50  +
cmp [ebp+var_474] ebx +
jl loc_410A71  +
mov [ebp+var_474] 8000FFFFh +
jmp loc_410A71  +
push [ebp+var_478]  +
lea eax [ebp+var_46C] +
push 105h  +
push eax  +
call sub_409CFE  +
cmp eax ebx +
mov [ebp+var_470] eax +
jl loc_410C5D  +
mov eax [ebp+var_47C] +
mov ecx [eax] +
push offset asc_4026C8  +
lea edx [ebp+var_54] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aCouldNotFindCo  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410A71  +
lea eax [ebp+var_46C] +
push eax  +
lea eax [ebp+var_478] +
push eax  +
push offset asc_4026C8  +
push offset aInprocserver32  +
push [ebp+var_47C]  +
call sub_409E62  +
push edi  +
push esi  +
push ebx  +
push ebx  +
push offset aRegreadwrite_1  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
push ebx  +
lea eax [ebp+var_478] +
push eax  +
push offset asc_4026C8  +
push offset aLocalserver32  +
push [ebp+var_47C]  +
call sub_409E62  +
push edi  +
push esi  +
push 5  +
push offset aRegreadwritest  +
push offset aRegreadwrite_6  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410A40  +
cmp [ebp+var_478] ebx +
jz loc_410A40  +
mov eax [ebp+var_478] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_4109E4  +
sub eax edx +
sar eax 1 +
jz loc_410A40  +
push offset aMtx_exe  +
push [ebp+var_478]  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_410A40  +
mov eax [ebp+var_47C] +
mov ecx [eax] +
push offset aLocalserver32  +
push eax  +
call dword ptr [ecx+18h]  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push offset aPirnclsidDelet  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_47C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 3  +
push 8  +
push ebx  +
push offset aPirnclsidMovet  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
push [ebp+cb]  +
lea eax [ebp+var_54] +
push [ebp+var_490]  +
push [ebp+var_48C]  +
push eax  +
call sub_40B620  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aInstallorimpor  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410B62  +
cmp byte_41D000 bl +
jz loc_410B62  +
push [ebp+var_484]  +
lea eax [ebp+var_54] +
push [ebp+cb]  +
push [ebp+var_48C]  +
push eax  +
push [ebp+var_494]  +
call sub_40E8E4  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMoveacomponent  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410B62  +
cmp byte_41D000 bl +
jz loc_410B62  +
sub esp 10h +
mov edi esp +
push [ebp+var_49C]  +
lea esi [ebp+arg_20] +
push [ebp+var_484]  +
movs   +
push [ebp+var_498]  +
movs   +
movs   +
lea eax [ebp+var_54] +
push eax  +
movs   +
call sub_4102C6  +
push ebx  +
push ebx  +
push 5  +
push offset aSetrolesoncomp  +
push offset aSetrolesonco_0  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
mov edi offset aG_btempfortest +
mov esi offset aDW7rtmComCompl +
mov eax [ebp+var_484] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 3  +
push 8  +
push ebx  +
push offset aPirnpackMov_38  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410BAA  +
mov byte_41D9CA 1 +
jmp loc_410BCA  +
push 1  +
push 0FA2h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410CBB  +
push 50h  +
push ebx  +
push offset unk_4201F8  +
call memset  +
add esp 0Ch +
inc [ebp+var_480]  +
mov eax [ebp+var_480] +
cmp eax [ebp+arg_8] +
jb loc_4106D3  +
mov eax [ebp+var_484] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_39  +
mov [ebp+var_470] eax +
push ebx  +
lea eax [ebp+var_474] +
push eax  +
lea eax [ebp+var_470] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410C9F  +
mov byte_41D9CA 1 +
jmp loc_410CC7  +
cmp eax 8007000Eh +
jz loc_410CC7  +
cmp eax 800705AFh +
jz loc_410CC7  +
cmp eax 8007045Bh +
jz loc_410CC7  +
cmp eax 800705AAh +
jz loc_410CC7  +
push 0EFDh  +
push esi  +
push eax  +
jmp loc_410C98  +
cmp eax 8007000Eh +
jz loc_410CC7  +
cmp [ebp+var_470] 800705AFh +
jz loc_410CC7  +
cmp [ebp+var_470] 8007045Bh +
jz loc_410CC7  +
cmp [ebp+var_470] 800705AAh +
jz loc_410CC7  +
push 0F27h  +
push offset aDW7rtmComCompl  +
push [ebp+var_470]  +
call nullsub_5  +
jmp loc_410CC7  +
push 1  +
push 0FB7h  +
push esi  +
push edi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410CC7  +
mov eax [ebp+var_474] +
mov [ebp+var_470] eax +
or dword_41D00C 0FFFFFFFFh +
push 50h  +
push ebx  +
push offset unk_4201F8  +
call memset  +
mov eax [ebp+var_47C] +
add esp 0Ch +
cmp eax ebx +
jz loc_410CEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_470] ebx +
jl loc_410D02  +
mov eax [ebp+var_474] +
mov [ebp+var_470] eax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_470] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_8] ebx +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+cb] ebx +
jnz loc_410D62  +
push 1  +
push 0C25h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410D62  +
mov eax 80070057h +
jmp loc_410E99  +
cmp [ebp+arg_4] ebx +
jnz loc_410D83  +
push 1  +
push 0C26h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410D58  +
cmp [ebp+arg_8] ebx +
jnz loc_410DA4  +
push 1  +
push 0C27h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410D58  +
cmp [ebp+arg_14] ebx +
jz loc_410DB2  +
mov byte_41D9CA 1 +
jmp loc_410DCE  +
push 1  +
push 0C28h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410D58  +
push [ebp+cb]  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
call sub_40ECD6  +
push ebx  +
push ebx  +
push 0Ah  +
push offset aInstallnewpack  +
push offset aInstallnewpa_0  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
test al al +
jz loc_410E8F  +
cmp byte_41D000 bl +
jz loc_410E8F  +
sub esp 10h +
mov edi esp +
push [ebp+arg_8]  +
lea esi [ebp+arg_1C] +
push [ebp+cb]  +
movs   +
movs   +
movs   +
movs   +
call sub_40C145  +
push ebx  +
push ebx  +
push 5  +
push ebx  +
push offset aMigratepackage  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
cmp byte_41D000 bl +
jz loc_410E8F  +
push [ebp+arg_30]  +
lea esi [ebp+arg_1C] +
sub esp 10h +
mov edi esp +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_2C]  +
movs   +
push [ebp+arg_14]  +
movs   +
push [ebp+arg_10]  +
movs   +
push [ebp+arg_C]  +
push [ebp+arg_18]  +
push [ebp+arg_4]  +
push [ebp+cb]  +
call sub_4104C6  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aWorkonallcompo  +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_4] +
cmp eax ebx +
jl loc_410E99  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 34h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+hObject] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_78] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_98] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_9C] eax +
mov eax [ebp+arg_14] +
push ebx  +
xor ebx ebx +
mov [ebp+var_A4] eax +
mov eax [ebp+arg_18] +
push esi  +
mov [ebp+var_A8] eax +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_5C] ebx +
mov [ebp+var_A0] ebx +
mov [ebp+var_5D] bl +
mov [ebp+var_94] ebx +
mov [ebp+cb] ebx +
mov [ebp+var_6C] ebx +
mov [ebp+ppv] ebx +
mov [ebp+var_80] ebx +
mov [ebp+var_88] ebx +
mov [ebp+var_7C] ebx +
call ds:VariantInit  +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
cmp [ebp+hObject] ebx +
jnz loc_410F5D  +
push 1  +
push 0A7Eh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410F5D  +
mov [ebp+var_58] 80070057h +
jmp loc_4116A3  +
cmp [ebp+var_78] ebx +
jnz loc_410F7E  +
push 1  +
push 0A7Fh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410F51  +
cmp [ebp+var_98] ebx +
jz loc_410F8F  +
mov byte_41D9CA 1 +
jmp loc_410FAB  +
push 1  +
push 0A80h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_410F51  +
mov eax [ebp+hObject] +
mov ecx [eax] +
lea edx [ebp+cb] +
push edx  +
push 0FFFFh  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirnpacksGet_0  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_41101E  +
mov byte_41D9CA 1 +
mov eax [ebp+var_78] +
mov ecx [eax] +
lea edx [ebp+var_94] +
push edx  +
push 0FFFFh  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirncompsGetan  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411045  +
mov byte_41D9CA 1 +
jmp loc_411061  +
push 1  +
push 0A94h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_410FE2  +
mov eax [ebp+var_5C] +
mov [ebp+var_58] eax +
jmp loc_4116A3  +
push 1  +
push 0AA2h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41103A  +
mov eax [ebp+hObject] +
mov ecx [eax] +
lea edx [ebp+var_6C] +
push edx  +
push 0FFFFh  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirnpacksGet_1  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_41109A  +
mov byte_41D9CA 1 +
jmp loc_4110B6  +
push 1  +
push 0AB0h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41103A  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_408F50  +
push 1  +
push ebx  +
push offset stru_408F30  +
call ds:CoCreateInstance  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aCouldNotGetThe  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411179  +
lea eax [ebp+var_7C] +
push eax  +
push [ebp+ppv]  +
call sub_4096CA  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aCouldNotGetT_0  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411179  +
lea eax [ebp+var_88] +
push eax  +
lea eax [ebp+var_80] +
push eax  +
push ebx  +
push [ebp+var_7C]  +
call sub_40B95B  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aCouldNotGetT_1  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411179  +
mov eax [ebp+var_80] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_88] +
mov [ebp+var_78] eax +
mov eax [ebp+var_7C] +
mov byte_422B68 1 +
mov byte_41D001 bl +
mov [ebp+var_5D] 1 +
jmp loc_41119A  +
mov eax [ebp+var_9C] +
mov [ebp+var_8C] eax +
mov eax [ebp+var_A4] +
mov [ebp+var_78] eax +
mov eax [ebp+var_98] +
mov byte_422B68 bl +
push offset Name  +
push ebx  +
push 2  +
mov [ebp+var_84] eax +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
mov [ebp+var_70] ebx +
cmp [ebp+arg_8] ebx +
jbe loc_411695  +
cmp [ebp+hObject] ebx +
jz loc_4111D9  +
cmp byte_422B68 1 +
jz loc_4111D0  +
cmp [ebp+var_5D] bl +
jnz loc_4111D9  +
push [ebp+hObject]  +
call ds:SetEvent  +
mov ecx [ebp+var_70] +
mov eax [ebp+cb] +
push ecx  +
mov dword_41D008 ecx +
mov edx [eax] +
push eax  +
call dword ptr [edx+40h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_40  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411653  +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+var_A0] +
push eax  +
push [ebp+cb]  +
call sub_40BD9B  +
push ebx  +
push ebx  +
push 5  +
push offset aValidatepackag  +
push offset aValidatepack_0  +
mov [ebp+var_58] eax +
push offset aValidatepack_1  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411460  +
push 8  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea eax [ebp+var_54] +
push eax  +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jz loc_411664  +
mov eax [ebp+var_6C] +
push [ebp+var_70]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackrolesM  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4112A5  +
mov byte_41D9CA 1 +
jmp loc_4112C5  +
push 1  +
push 0B2Eh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41166D  +
mov eax [ebp+var_6C] +
mov ecx [eax] +
push offset asc_4026C8  +
push offset aRoles  +
push eax  +
call dword ptr [ecx+38h]  +
push ebx  +
push 1  +
push 5  +
push offset aPirnpackrole_0  +
push offset aPirnpackrole_1  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
push [ebp+var_6C]  +
mov [ebp+var_71] al +
push [ebp+var_A8]  +
lea eax [ebp+var_54] +
sub esp 10h +
mov edi esp +
push [ebp+var_A0]  +
lea esi [ebp+pvarg] +
push eax  +
push [ebp+var_78]  +
movs   +
push [ebp+var_8C]  +
movs   +
push [ebp+var_84]  +
movs   +
push [ebp+var_94]  +
mov byte_41D000 1 +
push [ebp+cb]  +
movs   +
call sub_410D1E  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aInstallappandr  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
cmp [ebp+var_71] bl +
jz loc_4113BA  +
mov eax [ebp+var_6C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackrole_2  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411392  +
mov byte_41D9CA 1 +
jmp loc_4113BA  +
push 1  +
push 0B5Fh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41166D  +
cmp byte_41D000 bl +
jz loc_4113EF  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_84]  +
push [ebp+cb]  +
call sub_40B7BF  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aSetchangeablef  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
mov eax [ebp+var_6C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackrole_3  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411421  +
mov byte_41D9CA 1 +
jmp loc_411449  +
push 1  +
push 0B7Fh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41166D  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov edi offset aDW7rtmComCompl +
mov esi offset aG_btempfortest +
mov eax [ebp+cb] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPirnpackMov_41  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_411492  +
mov byte_41D9CA 1 +
jmp loc_4114B2  +
push 1  +
push 0B91h  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41166D  +
cmp byte_422B68 bl +
jz loc_4115AA  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+var_58] eax +
jge loc_4115A3  +
push offset aFailedTheTrans  +
call sub_409B50  +
mov eax dword_422B94 +
sub dword_422B70 eax +
mov eax dword_422B98 +
sub dword_422B74 eax +
mov eax dword_422B9C +
sub dword_422B78 eax +
mov eax dword_422BA0 +
sub dword_422B80 eax +
mov eax dword_422BA4 +
sub dword_422B84 eax +
mov eax dword_422BA8 +
sub dword_422B88 eax +
mov eax dword_422BAC +
sub dword_422B8C eax +
mov eax [ebp+var_9C] +
dec [ebp+var_70]  +
mov [ebp+var_8C] eax +
mov eax [ebp+var_A4] +
mov [ebp+var_78] eax +
mov eax [ebp+var_98] +
mov [ebp+var_84] eax +
mov byte_422B68 bl +
call sub_409CBA  +
mov eax [ebp+var_9C] +
mov byte_41D001 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPusecompcollec  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jz loc_41159A  +
mov byte_41D9CA 1 +
jmp loc_41161F  +
push 1  +
push 0BBBh  +
jmp loc_41160A  +
call sub_409C53  +
jmp loc_41161F  +
inc dword_422BB0  +
cmp [ebp+var_5D] bl +
jz loc_41161F  +
mov ecx [ebp+var_88] +
mov eax [ebp+var_80] +
mov [ebp+var_78] ecx +
mov ecx [ebp+var_7C] +
mov [ebp+var_84] ecx +
mov byte_422B68 1 +
mov byte_41D001 bl +
mov ecx [eax] +
push eax  +
mov [ebp+var_8C] eax +
call dword ptr [ecx+30h]  +
push ebx  +
push 1  +
push 8  +
push ebx  +
push offset aPusecompcoll_0  +
mov [ebp+var_58] eax +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_41158E  +
push 1  +
push 0BDCh  +
push edi  +
push esi  +
mov byte_41D9CA bl +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41166D  +
cmp dword_422BB4 1 +
jnz loc_41163D  +
call ds:clock  +
cdq   +
mov ecx 3E8h +
idiv  ecx +
cmp eax 708h +
jge loc_411675  +
push 50h  +
push ebx  +
push offset unk_422AC0  +
mov dword_422BA0 ebx +
call memset  +
add esp 0Ch +
inc [ebp+var_70]  +
mov eax [ebp+var_70] +
cmp eax [ebp+arg_8] +
jb loc_4111BD  +
jmp loc_411695  +
mov [ebp+var_58] 8007000Eh +
jmp loc_411695  +
mov eax [ebp+var_5C] +
mov [ebp+var_58] eax +
jmp loc_411695  +
push 1  +
push 1  +
push ebx  +
push ebx  +
push offset aWeHaveRunForLo  +
push ebx  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
mov [ebp+var_58] 800705B4h +
call sub_40A235  +
cmp [ebp+hObject] ebx +
jz loc_4116A3  +
push [ebp+hObject]  +
call ds:CloseHandle  +
or dword_41D008 0FFFFFFFFh +
lea eax [ebp+pvarg] +
push eax  +
mov byte_41D001 1 +
call ds:VariantClear  +
mov eax [ebp+var_94] +
cmp eax ebx +
jz loc_4116D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_94] ebx +
mov eax [ebp+cb] +
cmp eax ebx +
jz loc_4116E4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+cb] ebx +
mov eax [ebp+var_6C] +
cmp eax ebx +
jz loc_4116F4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_6C] ebx +
mov eax [ebp+var_7C] +
cmp eax ebx +
jz loc_411704  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_7C] ebx +
mov eax [ebp+var_88] +
cmp eax ebx +
jz loc_41171A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_88] ebx +
mov eax [ebp+var_80] +
cmp eax ebx +
jz loc_41172A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_80] ebx +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_41173A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_58] +
cmp eax ebx +
jl loc_411744  +
mov eax [ebp+var_5C] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 1Ch  +
***
call __SEH_prolog4_GS  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:HeapSetInformation  +
mov [ebp+var_5CC] ebx +
mov [ebp+var_5C8] ebx +
mov [ebp+var_5DC] ebx +
mov [ebp+var_5E0] ebx +
mov [ebp+var_5E8] ebx +
mov [ebp+var_5F8] ebx +
mov [ebp+var_5D4] ebx +
mov [ebp+var_5F4] ebx +
mov [ebp+var_5FC] ebx +
mov dword ptr [ebp+ppv] ebx +
mov dword ptr [ebp+var_5EC] ebx +
mov [ebp+var_5E4] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_5C0] ebx +
mov dword ptr [ebp+var_5C4] ebx +
cmp dword_422BDC ebx +
jz loc_412896  +
cmp dword_422BEC ebx +
jz loc_412896  +
cmp dword_422BD8 ebx +
jz loc_412896  +
cmp dword_422BC0 ebx +
jz loc_412896  +
cmp dword_422BC8 ebx +
jz loc_412896  +
cmp dword_422BE8 ebx +
jz loc_412896  +
cmp dword_422BE0 ebx +
jz loc_412896  +
cmp dword_422BF8 ebx +
jz loc_412896  +
cmp dword_422BE4 ebx +
jz loc_412896  +
cmp dword_422BF0 ebx +
jz loc_412896  +
cmp dword_422BC4 ebx +
jz loc_412896  +
cmp dword_422BD0 ebx +
jz loc_412896  +
cmp dword_422BD4 ebx +
jz loc_412896  +
cmp dword_422BCC ebx +
jz loc_412896  +
cmp dword_422BF4 ebx +
jz loc_412896  +
mov [ebp+var_5CD] bl +
mov [ebp+var_5BC] ebx +
push 206h  +
push ebx  +
lea eax [ebp+var_5B8] +
push eax  +
call memset  +
xor eax eax +
mov [ebp+var_1A4] ax +
push 103h  +
push ebx  +
lea eax [ebp+var_1A2] +
push eax  +
call memset  +
add esp 18h +
call sub_4098E1  +
call sub_40D947  +
lea eax [ebp+Buffer] +
push eax  +
call ds:_strtime  +
mov [esp+65Ch+var_65C] offset asc_40649C +
push 80h  +
lea eax [ebp+Buffer] +
push eax  +
call sub_409D38  +
test eax eax +
jge loc_411901  +
or eax 0FFFFFFFFh +
jmp loc_41289B  +
lea eax [ebp+Buffer] +
push eax  +
call sub_409B50  +
mov [ebp+ms_exc.disabled] ebx +
push offset aInitalizationS  +
call sub_4099DF  +
push ebx  +
push ebx  +
call ds:CoInitializeEx  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_41193A  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_41256F  +
push 2  +
pop esi  +
cmp [ebp+arg_0] esi +
jg loc_411967  +
mov byte_41D9CA 1 +
cmp [ebp+arg_0] 1 +
jz loc_411998  +
push offset aPre  +
push dword ptr [edi+4]  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_411998  +
xor esi esi +
jmp loc_411990  +
mov byte_41D9CA bl +
push 1  +
push 27Fh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_411949  +
mov esi 80070057h +
mov [ebp+var_5C0] esi +
jmp loc_41192E  +
cmp [ebp+arg_0] esi +
jnz loc_411A04  +
push offset aWin9x  +
push dword ptr [edi+4]  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4119BD  +
mov dword_422BB4 1 +
jmp loc_411A04  +
push offset aPost  +
push dword ptr [edi+4]  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4119DA  +
mov byte_41D9CA 1 +
jmp loc_4119FE  +
mov byte_41D9CA bl +
push 1  +
push 291h  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
call nullsub_4  +
cmp byte_41D9CA bl +
jz loc_41198B  +
mov dword_422BB4 esi +
lea eax [ebp+var_5CC] +
push eax  +
call sub_409953  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jl loc_41192E  +
mov eax [ebp+var_5CC] +
mov ecx [eax] +
lea edx [ebp+var_5C8] +
push edx  +
push 20019h  +
mov edi offset asc_4026C8 +
push edi  +
push offset aSoftwareMicros  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411A9E  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 29Ch  +
push offset aDW7rtmComCompl  +
push esi  +
call nullsub_5  +
jmp loc_41192E  +
mov eax [ebp+var_5C8] +
mov ecx [eax] +
push edi  +
push offset aTransactionS_1  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aNoPackageRegis  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_411AEE  +
mov eax [ebp+var_5C8] +
cmp eax ebx +
jz loc_411AEE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C8] ebx +
mov eax [ebp+var_5CC] +
mov ecx [eax] +
lea edx [ebp+var_5DC] +
push edx  +
push 20019h  +
push edi  +
push offset aSoftwareMicros  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411B5C  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2AEh  +
jmp loc_411A8E  +
mov eax [ebp+var_5DC] +
mov ecx [eax] +
push edi  +
push offset aTransactionS_2  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aNoComponentsRe  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_411BAC  +
mov eax [ebp+var_5DC] +
cmp eax ebx +
jz loc_411BAC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5DC] ebx +
mov eax [ebp+var_5CC] +
mov ecx [eax] +
lea edx [ebp+var_5E8] +
push edx  +
push 20019h  +
push edi  +
push offset aSoftwareClasse  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411C1A  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2C2h  +
jmp loc_411A8E  +
mov eax [ebp+var_5E8] +
mov ecx [eax] +
push edi  +
push offset aAppid  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aNoAppidsRegist  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_411C6A  +
mov eax [ebp+var_5E8] +
cmp eax ebx +
jz loc_411C6A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5E8] ebx +
mov eax [ebp+var_5CC] +
mov ecx [eax] +
lea edx [ebp+var_5E0] +
push edx  +
push 20019h  +
push edi  +
push offset aSoftwareClasse  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411CD8  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2D4h  +
jmp loc_411A8E  +
mov eax [ebp+var_5E0] +
mov ecx [eax] +
push edi  +
push offset aClsid  +
push eax  +
call dword ptr [ecx+38h]  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push offset aNoClsidRegistr  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jnz loc_411D28  +
mov eax [ebp+var_5E0] +
cmp eax ebx +
jz loc_411D28  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5E0] ebx +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push ebx  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411D88  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2E7h  +
jmp loc_411A8E  +
mov eax dword ptr [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_610] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411DE1  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2EBh  +
jmp loc_411A8E  +
cmp [ebp+var_610] 4 +
jg loc_411E4F  +
mov byte_41D9CA 1 +
lea eax [ebp+var_5D4] +
push eax  +
push dword_422BD8  +
push dword ptr [ebp+ppv]  +
call sub_409408  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411E81  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 2EFh  +
jmp loc_411A8E  +
mov byte_41D9CA bl +
push 1  +
push 2ECh  +
push offset aDW7rtmComCompl  +
push offset aG_btempfortest  +
call nullsub_4  +
cmp byte_41D9CA bl +
jnz loc_411DF1  +
mov esi 8000FFFFh +
jmp loc_411990  +
push offset aCallingPpkgcol  +
call sub_4099DF  +
mov eax [ebp+var_5D4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_5C0] eax +
cmp eax ebx +
jge loc_411F6F  +
push 1  +
push 2F7h  +
mov esi offset aDW7rtmComCompl +
push esi  +
push offset aHrHresult0l  +
call nullsub_4  +
mov eax [ebp+var_5C0] +
mov [ebp+var_630] eax +
push 22h  +
pop eax  +
mov [ebp+var_62C] ax +
mov [ebp+var_628] 40000308h +
mov [ebp+var_624] ebx +
mov [ebp+var_620] ebx +
mov [ebp+var_61C] ebx +
mov [ebp+var_618] ebx +
mov [ebp+var_614] 1 +
push 2FAh  +
push esi  +
lea eax [ebp+var_630] +
push eax  +
call sub_40926C  +
add esp 0Ch +
push offset aCallingPpkgc_0  +
call sub_4099DF  +
mov eax [ebp+var_5D4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411F6F  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 300h  +
jmp loc_411A8E  +
mov eax [ebp+var_5C8] +
cmp eax ebx +
jz loc_411FDF  +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_5EC] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_411FCD  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 307h  +
jmp loc_411A8E  +
push dword ptr [ebp+var_5EC]  +
push offset aNumberOfPackag  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor esi esi +
inc esi  +
cmp [ebp+arg_0] esi +
jnz loc_4122B4  +
mov [ebp+ms_exc.disabled] esi +
push offset aStartingUserMi  +
call sub_4099DF  +
push offset Name  +
push ebx  +
push 2  +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
cmp [ebp+var_5C8] ebx +
jz loc_412274  +
xor edi edi +
mov [ebp+var_60C] edi +
cmp edi dword ptr [ebp+var_5EC] +
jnb loc_4120CB  +
mov dword_41D008 edi +
cmp [ebp+hObject] ebx +
jz loc_41204D  +
push [ebp+hObject]  +
call ds:SetEvent  +
push [ebp+var_5D4]  +
push [ebp+var_5C8]  +
push edi  +
call sub_40FA53  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMigrateuserand  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push 50h  +
push ebx  +
push offset unk_422AC0  +
call memset  +
add esp 0Ch +
inc edi  +
jmp loc_412021  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-660h] eax +
mov [ebp-5E4h] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push dword ptr [ebp-5E4h]  +
push offset aErrorFailedW_3  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push 310h  +
jmp loc_412870  +
or dword_41D008 0FFFFFFFFh +
cmp dword ptr [ebp+var_5C4] ebx +
jnz loc_412274  +
push [ebp+var_5CC]  +
call sub_40DECA  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 5  +
push offset aDeletetransact  +
push offset aDeletetransa_0  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_412274  +
mov [ebp+var_5CD] 1 +
mov [ebp+hKey] ebx +
mov [ebp+dwDisposition] ebx +
mov dword ptr [ebp+Data] esi +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 20006h  +
push ebx  +
push ebx  +
push ebx  +
push offset aSystemCurrentc  +
push 80000002h  +
call ds:RegCreateKeyExW  +
mov esi 0FFFFh +
mov edi 80070000h +
cmp eax ebx +
jle loc_41216B  +
and eax esi +
or eax edi +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aRegcreatekeyex  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
test al al +
jz loc_4121EC  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push ebx  +
push offset aAllowprotected  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
cmp eax ebx +
jle loc_4121B7  +
and eax esi +
or eax edi +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aRegsetvalueexT  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
push 104h  +
lea eax [ebp+ExistingFileName] +
push eax  +
push ebx  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_412243  +
lea eax [ebp+ExistingFileName] +
push eax  +
push offset aModuleNameWasS  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push 4  +
push ebx  +
lea eax [ebp+ExistingFileName] +
push eax  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_412274  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_412238  +
and eax esi +
or eax edi +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aMovefileexToDe  +
jmp loc_41225A  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_412251  +
and eax esi +
or eax edi +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aGettingTheMtst  +
mov [ebp+var_5C0] eax +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push offset aEndingUserMigr  +
jmp loc_41255B  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-65Ch] eax +
mov [ebp-5E4h] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push dword ptr [ebp-5E4h]  +
push offset aErrorFailedW_2  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push 39Ah  +
jmp loc_412870  +
mov [ebp+ms_exc.disabled] 2 +
push offset aStartingPostPh  +
call sub_4099DF  +
push [ebp+var_5E0]  +
push [ebp+var_5E8]  +
push dword ptr [ebp+var_5EC]  +
push [ebp+var_5C8]  +
call sub_40A46E  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aCleanupcomregi  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push [ebp+var_5CC]  +
push dword ptr [ebp+ppv]  +
call sub_40ABE6  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aCopycomputerli  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push [ebp+var_5CC]  +
push dword ptr [ebp+ppv]  +
call sub_40E13A  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push 5  +
push ebx  +
push offset aCopylocalcompu  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
lea eax [ebp+var_5FC] +
push eax  +
lea eax [ebp+var_5F4] +
push eax  +
push esi  +
push [ebp+var_5D4]  +
call sub_40B95B  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aGetcomponentsa  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
cmp [ebp+var_5C8] ebx +
jz loc_41240D  +
cmp [ebp+var_5DC] ebx +
jz loc_41240D  +
push [ebp+var_5E0]  +
push [ebp+var_5FC]  +
push [ebp+var_5F4]  +
push [ebp+var_5D4]  +
push dword ptr [ebp+var_5EC]  +
push [ebp+var_5DC]  +
push [ebp+var_5C8]  +
call sub_410EA5  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPostpackageloo  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
cmp [ebp+var_5F4] ebx +
jz loc_412443  +
push [ebp+var_5D4]  +
call sub_40EBE2  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aRemovetemppack  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push dword ptr [ebp+ppv]  +
call sub_40E69D  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aResettingTheTr  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
cmp dword ptr [ebp+var_5C4] ebx +
jnz loc_41252E  +
mov eax [ebp+var_5CC] +
mov ecx [eax] +
lea edx [ebp+var_5F8] +
push edx  +
push 0F003Fh  +
push edi  +
push offset aSoftwareMicr_0  +
push 80000002h  +
push offset a?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov [ebp+var_5C0] esi +
cmp esi ebx +
jge loc_4124EB  +
cmp esi 8007000Eh +
jz loc_41192E  +
cmp esi 800705AFh +
jz loc_41192E  +
cmp esi 8007045Bh +
jz loc_41192E  +
cmp esi 800705AAh +
jz loc_41192E  +
push 40Bh  +
jmp loc_411A8E  +
push offset aCreatingThePos  +
call sub_4099DF  +
mov eax [ebp+var_5F8] +
mov ecx [eax] +
push edi  +
push offset aPostmigrationp  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov [ebp+var_5C0] eax +
cmp eax ebx +
jge loc_41252E  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aPirntransser_6  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
call sub_40A8FD  +
mov [ebp+var_5C0] eax +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aAddwinlogonhoo  +
push ebx  +
lea eax [ebp+var_5C4] +
push eax  +
lea eax [ebp+var_5C0] +
push eax  +
call sub_40A235  +
push offset aEndingPostPhas  +
call sub_4099DF  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor esi esi +
mov [ebp+var_5C0] esi +
mov [ebp+ms_exc.disabled] 3 +
cmp [ebp+hObject] ebx +
jz loc_41258A  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp dword_422B6C 14h +
jb loc_41259A  +
sub dword_422B6C 14h +
cmp dword_422BB4 ebx +
jnz loc_4125EF  +
push dword_422B7C  +
push offset aTotalUsersInRo  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
jmp loc_412672  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-658h] eax +
mov [ebp-5E4h] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push dword ptr [ebp-5E4h]  +
push offset aErrorFailedW_1  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push 432h  +
jmp loc_412870  +
push dword_422B70  +
push offset aTotalComponent  +
call sub_40A11E  +
push dword_422B74  +
push offset aTotalInterface  +
call sub_40A11E  +
push dword_422B78  +
push offset aTotalMethodsOn  +
call sub_40A11E  +
push dword_422B80  +
push offset aTotalRolesInPa  +
call sub_40A11E  +
push dword_422BB0  +
push offset aTotalNonCompos  +
call sub_40A11E  +
push dword_422B84  +
push offset aTotalImportCom  +
call sub_40A11E  +
push dword_422B88  +
push offset aTotalInstallDl  +
call sub_40A11E  +
push dword_422B8C  +
push offset aTotalInstallTl  +
call sub_40A11E  +
add esp 40h +
push dword_422B90  +
push offset aNumberOfLinesN  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
mov eax [ebp+var_5CC] +
cmp eax ebx +
jz loc_41269A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5CC] ebx +
mov eax [ebp+var_5E0] +
cmp eax ebx +
jz loc_4126B0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5E0] ebx +
mov eax [ebp+var_5C8] +
cmp eax ebx +
jz loc_4126C6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5C8] ebx +
mov eax [ebp+var_5DC] +
cmp eax ebx +
jz loc_4126DC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5DC] ebx +
mov eax [ebp+var_5E8] +
cmp eax ebx +
jz loc_4126F2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5E8] ebx +
mov eax [ebp+var_5F8] +
cmp eax ebx +
jz loc_412708  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5F8] ebx +
mov eax [ebp+var_5FC] +
cmp eax ebx +
jz loc_41271E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5FC] ebx +
mov eax [ebp+var_5F4] +
cmp eax ebx +
jz loc_412734  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5F4] ebx +
mov eax [ebp+var_5D4] +
cmp eax ebx +
jz loc_41274A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_5D4] ebx +
mov eax dword ptr [ebp+ppv] +
cmp eax ebx +
jz loc_412760  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov dword ptr [ebp+ppv] ebx +
call ds:CoUninitialize  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
cmp esi ebx +
jl loc_412777  +
mov esi dword ptr [ebp+var_5C4] +
push esi  +
push offset aMainIsReturnin  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
cmp esi ebx +
jnz loc_4127A3  +
cmp [ebp+var_5CD] 1 +
jnz loc_4127A1  +
mov eax hFile +
cmp eax ebx +
jz loc_4127A1  +
push eax  +
call ds:CloseHandle  +
cmp esi ebx +
jge loc_4127FB  +
mov [ebp+var_650] esi +
push 22h  +
pop eax  +
mov [ebp+var_64C] ax +
mov [ebp+var_648] 80001164h +
mov [ebp+var_644] ebx +
mov [ebp+var_640] ebx +
mov [ebp+var_63C] ebx +
mov [ebp+var_638] ebx +
mov [ebp+var_634] 1 +
push ebx  +
push 48Bh  +
push offset aDW7rtmComCompl  +
lea eax [ebp+var_650] +
push eax  +
call sub_41AB41  +
add esp 10h +
cmp esi 1 +
jnz loc_412802  +
xor esi esi +
lea eax [ebp+Buffer] +
push eax  +
call ds:_strtime  +
mov [esp+788h+var_788] offset asc_40649C +
push 80h  +
lea eax [ebp+Buffer] +
push eax  +
call sub_409D38  +
test eax eax +
jl loc_4118F9  +
lea eax [ebp+Buffer] +
push eax  +
call sub_409B50  +
mov eax esi +
jmp loc_41289B  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-654h] eax +
mov [ebp-5E4h] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
push dword ptr [ebp-5E4h]  +
push offset aErrorFailedW_0  +
call sub_40A11E  +
pop ecx  +
pop ecx  +
push 469h  +
mov eax 80004005h +
mov esi eax +
mov [ebp+var_5C0] esi +
push offset aDW7rtmComCompl  +
push eax  +
call nullsub_5  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor ebx ebx +
jmp loc_41256F  +
mov eax 8007000Eh +
call __SEH_epilog4_GS  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_4128F0  +
movzx eax cx +
mov [ebp-8] eax +
test edx edx +
jnz loc_41296F  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_41294D  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_412942  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_4066A4 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jz loc_41296F  +
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_41296F  +
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_41296F  +
call GetLastError  +
cmp eax 7Eh +
jz loc_41295E  +
cmp eax 0C1h +
jnz loc_4129B1  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_412975  +
mov [ebp+8] eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_41297E  +
mov dword ptr [ebp-4] 1 +
jmp loc_4129B1  +
cmp dword ptr [ebp+8] 0 +
jz loc_4129B1  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_4129A6  +
call GetLastError  +
cmp eax 7Fh +
jz loc_4129A6  +
cmp eax 0B6h +
jnz loc_4129AD  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jnz loc_4129BC  +
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp dword ptr [ebp-4] 0 +
jz loc_4129C7  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_412A39  +
test eax eax +
jnz loc_412A3E  +
mov ecx [esi] +
test ecx ecx +
jz loc_412A36  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_412A2A  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_422C28 +
push offset dword_422C18  +
push dword_422C24  +
mov dword_422C18 eax +
push offset dword_422C08  +
push offset dword_422C0C  +
push offset dword_422C04  +
call ds:__getmainargs  +
add esp 14h +
mov dword_422C14 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jz loc_412AC6  +
cmp eax esi +
jnz loc_412AB9  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_412AC9  +
push 3E8h  +
call ds:Sleep  +
jmp loc_412AA0  +
xor esi esi +
inc esi  +
mov eax dword_424EF0 +
cmp eax esi +
jnz loc_412ADC  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_412B17  +
mov eax dword_424EF0 +
test eax eax +
jnz loc_412B11  +
mov dword_424EF0 esi +
push offset dword_401398  +
push offset dword_40138C  +
call sub_412A1D  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_412B17  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_412BE1  +
mov dword_422C20 esi +
mov eax dword_424EF0 +
cmp eax esi +
jnz loc_412B3B  +
push offset dword_401388  +
push offset dword_401330  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_424EF0 2 +
cmp [ebp+var_1C] ebx +
jnz loc_412B48  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_424EF8 ebx +
jz loc_412B69  +
push offset dword_424EF8  +
call sub_412EC9  +
pop ecx  +
test eax eax +
jz loc_412B69  +
push ebx  +
push 2  +
push ebx  +
call dword_424EF8  +
push dword_422C08  +
push dword_422C0C  +
push dword_422C04  +
call sub_41175D  +
add esp 0Ch +
mov dword_422C1C eax +
cmp dword_422C10 ebx +
jnz loc_412BC7  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_422C1C eax +
xor ebx ebx +
cmp dword_422C10 ebx +
jnz loc_412BC7  +
push eax  +
call ds:_exit  +
cmp dword_422C20 ebx +
jnz loc_412BD5  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_422C1C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jz loc_412BFE  +
xor eax eax +
jmp loc_412C4B  +
mov eax ds:dword_40003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jnz loc_412BFA  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_412C38  +
cmp ecx 20Bh +
jnz loc_412BFA  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_412BFA  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_412C46  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_412BFA  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_422C10 eax +
call sub_41307D  +
push eax  +
call ds:__set_app_type  +
or dword_424EE8 0FFFFFFFFh +
or dword_424EEC 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_422C30 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_422C2C +
mov [eax] ecx +
call sub_412F69  +
cmp dword_41D184 0 +
jnz loc_412CA4  +
push offset sub_412F69  +
call ds:__setusermatherr  +
pop ecx  +
call sub_412F51  +
xor eax eax +
retn   +
***
call sub_4130BC  +
jmp sub_412A7E  +
***
cmp ecx dword_41D174 +
jnz loc_412CCB  +
retn 0  +
jmp loc_413152  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_412CC0  +
push offset dword_41D174  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_412CC0  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_412E11  +
cmp dword ptr [eax+10h] 3 +
jnz loc_412E11  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_412E0B  +
cmp eax 19930521h +
jz loc_412E0B  +
cmp eax 19930522h +
jz loc_412E0B  +
cmp eax 1994000h +
jnz loc_412E11  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_412DD4  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_412E56  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_412E52  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_412EBD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_412EB5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_412EBF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_412EA5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_412E40  +
pop ecx  +
test eax eax +
jz loc_412F26  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_412E80  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_412F26  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_412F2F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_412F71  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_413070  +
cmp ecx 0FFFFFFFFh +
jz loc_413070  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_413069  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_413069  +
cmp edx 10000000h +
jnb loc_413069  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_413069  +
jmp loc_413064  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_4130B2  +
push eax  +
call sub_413017  +
test eax eax +
jz loc_4130B2  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_4130A7  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_4130B2  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41D174 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_4130EE  +
test eax ebx +
jz loc_4130EE  +
not eax  +
mov dword_41D178 eax +
jmp loc_413149  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_413135  +
test dword_41D174 ebx +
jnz loc_41313A  +
mov esi 0BB40E64Fh +
mov dword_41D174 esi +
not esi  +
mov dword_41D178 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_422D38 eax +
mov dword_422D34 ecx +
mov dword_422D30 edx +
mov dword_422D2C ebx +
mov dword_422D28 esi +
mov dword_422D24 edi +
mov word_422D50 ss +
mov word_422D44 cs +
mov word_422D20 ds +
mov word_422D1C es +
mov word_422D18 fs +
mov word_422D14 gs +
pushf   +
pop dword_422D48  +
mov eax [ebp+0] +
mov dword_422D3C eax +
mov eax [ebp+4] +
mov dword_422D40 eax +
lea eax [ebp+8] +
mov dword_422D4C eax +
mov eax [ebp-320h] +
mov dword_422C88 10001h +
mov eax dword_422D40 +
mov dword_422C44 eax +
mov dword_422C38 0C0000409h +
mov dword_422C3C 1 +
mov eax dword_41D174 +
mov [ebp-328h] eax +
mov eax dword_41D178 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
call __EH_prolog3  +
mov eax [ebp+8] +
xor edi edi +
xor ebx ebx +
cmp eax edi +
jnz loc_41329D  +
push 1  +
push 18h  +
push offset aDW7rtmComCom_0  +
push offset a0I_pirnd  +
call nullsub_4  +
mov eax 80110001h +
jmp loc_413364  +
mov [eax] edi +
cmp dword_422F54 edi +
jnz loc_41334D  +
push 8  +
mov [ebp-10h] edi +
call ds:CoTaskMemAlloc  +
mov ecx eax +
mov [ebp-14h] ecx +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_4132CB  +
call ??0DNameNode@@IAE@XZ  +
mov esi eax +
jmp loc_4132CD  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp esi edi +
jnz loc_4132DF  +
mov ebx 8007000Eh +
jmp loc_413362  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push offset stru_40223C  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
cmp ebx edi +
jge loc_41332E  +
cmp ebx 8007000Eh +
jz loc_413362  +
cmp ebx 800705AFh +
jz loc_413362  +
cmp ebx 8007045Bh +
jz loc_413362  +
cmp ebx 800705AAh +
jz loc_413362  +
push 2Bh  +
push offset aDW7rtmComCom_0  +
push ebx  +
call nullsub_5  +
jmp loc_413362  +
push edi  +
push dword ptr [ebp-10h]  +
push offset dword_422F54  +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jz loc_41334D  +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-10h] edi +
mov eax dword_422F54 +
mov ecx [ebp+8] +
mov [ecx] eax +
mov eax dword_422F54 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax ebx +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_415175  +
test [ebp+arg_0] 1 +
jz loc_41338B  +
push esi  +
call ds:CoTaskMemFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jnz loc_4133AA  +
mov eax 80070057h +
jmp loc_4133EE  +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
xor edx edx +
mov edx [ebp+8] +
pop ecx  +
mov edi offset dword_40231C +
cmps   +
jz loc_4133D6  +
mov esi [ebp+0Ch] +
push ebx  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset stru_40223C +
cmps   +
pop ebx  +
jnz loc_4133D8  +
mov [eax] edx +
cmp dword ptr [eax] 0 +
pop edi  +
pop esi  +
jz loc_4133E9  +
mov eax [edx] +
push edx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_4133EE  +
mov eax 80004002h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_413433  +
push esi  +
call ds:CoTaskMemFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+20h] +
push edi  +
mov edi offset aDW7rtmComCom_1 +
test esi esi +
jnz loc_413462  +
push 1  +
push 26h  +
push edi  +
push offset a0O_ppirn  +
call nullsub_4  +
and dword ptr [esi] 0 +
push 138h  +
call ds:CoTaskMemAlloc  +
test eax eax +
jz loc_41347F  +
mov ecx eax +
call sub_414699  +
mov esi eax +
jmp loc_413481  +
xor esi esi +
test esi esi +
jnz loc_41348C  +
mov eax 8007000Eh +
jmp loc_4134E8  +
push ebx  +
push dword ptr [ebp+1Ch]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_41522C  +
mov ebx eax +
test ebx ebx +
jge loc_4134C5  +
push 1  +
push 2Dh  +
push edi  +
push offset aHresultHr0  +
call nullsub_4  +
push 1  +
mov ecx esi +
call sub_413371  +
mov eax ebx +
jmp loc_4134E7  +
push dword ptr [ebp+20h]  +
mov eax [esi] +
push offset dword_40222C  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jge loc_4134E5  +
push 1  +
push 35h  +
push edi  +
push offset aHresultHr0  +
call nullsub_4  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov eax ecx +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_4067E4 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_41351E  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn 0Ch  +
pop ebp  +
jmp ds:RegConnectRegistryW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+lpSubKey] +
mov eax [ebp+hKey] +
test ecx ecx +
jz loc_413540  +
xor edx edx +
cmp dx [ecx] +
jnz loc_41355C  +
cmp eax 80000000h +
jz loc_41356F  +
cmp eax 80000001h +
jz loc_41356F  +
cmp eax 80000002h +
jz loc_41356F  +
cmp eax 80000003h +
jz loc_41356F  +
push [ebp+phkResult]  +
push [ebp+samDesired]  +
push [ebp+ulOptions]  +
push ecx  +
push eax  +
call ds:RegOpenKeyExW  +
jmp loc_413576  +
mov ecx [ebp+phkResult] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+lpSubKey] +
mov eax [ebp+hKey] +
test ecx ecx +
jz loc_413595  +
xor edx edx +
cmp dx [ecx] +
jnz loc_4135B1  +
cmp eax 80000000h +
jz loc_4135D0  +
cmp eax 80000001h +
jz loc_4135D0  +
cmp eax 80000002h +
jz loc_4135D0  +
cmp eax 80000003h +
jz loc_4135D0  +
push [ebp+lpdwDisposition]  +
push [ebp+phkResult]  +
push [ebp+lpSecurityAttributes]  +
push [ebp+samDesired]  +
push [ebp+dwOptions]  +
push [ebp+lpClass]  +
push [ebp+Reserved]  +
push ecx  +
push eax  +
call ds:RegCreateKeyExW  +
jmp loc_4135D7  +
mov ecx [ebp+phkResult] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+hKey] +
cmp eax 80000000h +
jz loc_41360D  +
cmp eax 80000001h +
jz loc_41360D  +
cmp eax 80000002h +
jz loc_41360D  +
cmp eax 80000003h +
jz loc_41360D  +
push eax  +
call ds:RegCloseKey  +
jmp loc_41360F  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+0Ch]  +
call ds:RegFlushKey  +
test eax eax +
jz loc_41365D  +
cmp eax 522h +
jz loc_413656  +
cmp eax 5 +
jz loc_413656  +
push 1  +
push 152h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80004005h +
jmp loc_41365F  +
mov eax 80110823h +
jmp loc_41365F  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
test ebx ebx +
jz loc_41367E  +
xor eax eax +
cmp ax [ebx] +
jnz loc_413694  +
push 1  +
push 160h  +
push offset aDW7rtmComCom_2  +
push offset a0I_tszvaluenam  +
call nullsub_4  +
mov edi [ebp+8] +
mov eax [edi+18h] +
mov ecx ebx +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_4136C2  +
test dx dx +
jz loc_4136BE  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_4136C2  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_41369C  +
xor eax eax +
jmp loc_4136C7  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4136E1  +
push 1  +
push 162h  +
push offset aDW7rtmComCom_2  +
push offset a0Ir  +
call nullsub_4  +
push 5Ch  +
pop eax  +
sub ax [ebx] +
movzx esi ax +
neg esi  +
sbb esi esi +
and esi ebx +
push esi  +
push dword ptr [edi+0Ch]  +
call ds:RegDeleteValueW  +
xor ebx ebx +
cmp eax 2 +
jnz loc_413703  +
xor eax eax +
cmp eax ebx +
jz loc_413737  +
cmp eax 522h +
jz loc_413730  +
cmp eax 5 +
jz loc_413730  +
push 1  +
push 173h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110022h +
jmp loc_41378C  +
mov eax 80110823h +
jmp loc_41378C  +
cmp esi ebx +
jnz loc_41378A  +
push ebx  +
lea eax [ebp+0Fh] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [edi+0Ch]  +
mov [edi+1Ch] ebx +
mov [edi+20h] ebx +
mov byte ptr [ebp+0Fh] 0 +
call ds:RegSetValueExW  +
cmp eax 2 +
jnz loc_41375D  +
xor eax eax +
cmp eax ebx +
jz loc_41378A  +
cmp eax 522h +
jz loc_413730  +
cmp eax 5 +
jz loc_413730  +
push 1  +
push 17Eh  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110028h +
jmp loc_41378C  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
push dword ptr [eax+0Ch]  +
call ds:RegDeleteTreeW  +
test eax eax +
jz loc_4137E0  +
cmp eax 522h +
jz loc_4137D9  +
cmp eax 5 +
jz loc_4137D9  +
push 1  +
push 18Bh  +
push offset aDW7rtmComCom_2  +
push offset a0lRc  +
call nullsub_4  +
mov eax 80110022h +
jmp loc_4137E2  +
mov eax 80110823h +
jmp loc_4137E2  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jnz loc_41380E  +
push 1  +
push 1BFh  +
push offset aDW7rtmComCom_2  +
push offset a0Io_pdwtype  +
call nullsub_4  +
mov eax [ebp+8] +
mov eax [eax+1Ch] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jnz loc_413843  +
push 1  +
push 1CBh  +
push offset aDW7rtmComCom_2  +
push offset a0Io_pulcb  +
call nullsub_4  +
mov eax [ebp+8] +
mov eax [eax+20h] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+1Ch] +
push edi  +
mov edi offset aDW7rtmComCom_2 +
cmp eax [ebp+0Ch] +
jz loc_41387F  +
push 1  +
push 1DFh  +
push edi  +
push offset aM_dwtypeI_dwty  +
call nullsub_4  +
mov eax [esi+20h] +
cmp eax [ebp+10h] +
jz loc_413899  +
push 1  +
push 1E0h  +
push edi  +
push offset aM_ulcbsizeI_ul  +
call nullsub_4  +
xor ebx ebx +
cmp [ebp+14h] ebx +
jnz loc_4138B2  +
push 1  +
push 1E1h  +
push edi  +
push offset a0Io_pbcontent  +
call nullsub_4  +
cmp [esi+1Ch] ebx +
jz loc_4138BC  +
cmp [esi+20h] ebx +
jnz loc_4138CE  +
push 1  +
push 1E3h  +
push edi  +
push offset a0M_dwtype0M_ul  +
call nullsub_4  +
mov eax [esi+20h] +
mov [ebp+8] eax +
cmp [esi+30h] ebx +
jz loc_4138EB  +
push eax  +
add esi 34h +
push esi  +
push dword ptr [ebp+14h]  +
call memcpy  +
add esp 0Ch +
jmp loc_413965  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp+0Ch] +
push eax  +
push ebx  +
push dword ptr [esi+18h]  +
push dword ptr [esi+0Ch]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_413933  +
cmp eax 522h +
jz loc_41392C  +
cmp eax 5 +
jz loc_41392C  +
push 1  +
push 1EEh  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110027h +
jmp loc_41396E  +
mov eax 80110823h +
jmp loc_41396E  +
mov eax [esi+1Ch] +
cmp eax [ebp+0Ch] +
jnz loc_413943  +
mov eax [esi+20h] +
cmp eax [ebp+8] +
jz loc_413955  +
push 1  +
push 1F0h  +
push edi  +
push offset aM_dwtypeDwtype  +
call nullsub_4  +
mov eax [ebp+0Ch] +
cmp [esi+1Ch] eax +
jnz loc_413969  +
mov eax [ebp+8] +
cmp [esi+20h] eax +
jnz loc_413969  +
xor eax eax +
jmp loc_41396E  +
mov eax 8000FFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor esi esi +
mov ebx offset aDW7rtmComCom_2 +
cmp edi esi +
jnz loc_413997  +
cmp [ebp+10h] esi +
jz loc_4139AE  +
jmp loc_41399C  +
cmp [ebp+10h] esi +
jnz loc_4139AE  +
push 1  +
push 200h  +
push ebx  +
push offset a0I_dwtype0I_ul  +
call nullsub_4  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+14h]  +
push edi  +
push esi  +
mov esi [ebp+8] +
push dword ptr [esi+18h]  +
push dword ptr [esi+0Ch]  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_4139F5  +
cmp eax 522h +
jz loc_4139EE  +
cmp eax 5 +
jz loc_4139EE  +
push 1  +
push 202h  +
push ebx  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110028h +
jmp loc_413A00  +
mov eax 80110823h +
jmp loc_413A00  +
mov eax [ebp+10h] +
mov [esi+20h] eax +
mov [esi+1Ch] edi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx offset aDW7rtmComCom_2 +
cmp [ebp+0Ch] edi +
jnz loc_413A39  +
cmp [ebp+10h] edi +
jnz loc_413A39  +
push 1  +
push 213h  +
push ebx  +
push offset aIo_pulckeys0Io  +
call nullsub_4  +
mov esi [ebp+8] +
test dword ptr [esi+4] 3 +
jz loc_413A57  +
push 1  +
push 214h  +
push ebx  +
push offset aNmrn_at_unname  +
call nullsub_4  +
mov eax [esi+4] +
and eax 3 +
cmp al 1 +
jnz loc_413A67  +
xor eax eax +
xor ecx ecx +
jmp loc_413AB7  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp-8] +
push eax  +
push edi  +
push edi  +
lea eax [ebp-4] +
push eax  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+0Ch]  +
call ds:RegQueryInfoKeyW  +
cmp eax edi +
jz loc_413AB1  +
cmp eax 522h +
jz loc_413AAA  +
cmp eax 5 +
jz loc_413AAA  +
push 1  +
push 21Fh  +
push ebx  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110027h +
jmp loc_413ACB  +
mov eax 80110823h +
jmp loc_413ACB  +
mov eax [ebp-4] +
mov ecx [ebp-8] +
mov edx [ebp+0Ch] +
cmp edx edi +
jz loc_413AC0  +
mov [edx] eax +
mov eax [ebp+10h] +
cmp eax edi +
jz loc_413AC9  +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+phkResult]  +
push dword ptr [ecx+24h]  +
push 0  +
push 0  +
push dword ptr [ecx+0Ch]  +
call sub_41352A  +
test eax eax +
jz loc_413B22  +
cmp eax 522h +
jz loc_413B1B  +
cmp eax 5 +
jz loc_413B1B  +
push 1  +
push 3DFh  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110025h +
jmp loc_413B24  +
mov eax 80110823h +
jmp loc_413B24  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7F4h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+hKey] eax +
push 2  +
mov esi 7D0h +
xor ecx ecx +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
mov [ebp+var_7F0] edi +
mov [ebp+cbValueName] esi +
neg ecx  +
or eax ecx +
push eax  +
call ds:CoTaskMemAlloc  +
mov [ebp+pv] eax +
xor eax eax +
cmp [ebp+pv] eax +
jnz loc_413B92  +
mov eax 8007000Eh +
jmp loc_413D19  +
push ebx  +
lea ecx [ebp+cbData] +
push ecx  +
lea ecx [ebp+Data] +
push ecx  +
lea ecx [ebp+Type] +
push ecx  +
push eax  +
lea ecx [ebp+cbValueName] +
push ecx  +
push [ebp+pv]  +
mov [ebp+dwIndex] eax +
push eax  +
push edi  +
mov edi ds:RegEnumValueW +
mov [ebp+cbValueName] esi +
mov [ebp+cbData] esi +
call edi  +
mov ebx 103h +
jmp loc_413C98  +
cmp [ebp+cbValueName] esi +
jb loc_413BFA  +
push 1  +
push 5CAh  +
push offset aDW7rtmComCom_2  +
push offset a2000Ctchname  +
call nullsub_4  +
cmp [ebp+cbData] esi +
jb loc_413C18  +
push 1  +
push 5CBh  +
push offset aDW7rtmComCom_2  +
push offset a2000Cbsize  +
call nullsub_4  +
cmp [ebp+var_7E4] 0 +
jnz loc_413CAA  +
push [ebp+cbData]  +
lea eax [ebp+Data] +
push eax  +
push [ebp+Type]  +
push 0  +
push [ebp+pv]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_413CDC  +
inc [ebp+dwIndex]  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
lea eax [ebp+cbValueName] +
push eax  +
push [ebp+pv]  +
mov [ebp+cbValueName] esi +
push [ebp+dwIndex]  +
mov [ebp+cbData] esi +
push [ebp+var_7F0]  +
call edi  +
mov [ebp+var_7E4] eax +
cmp eax ebx +
jnz loc_413BDC  +
xor esi esi +
jmp loc_413D0A  +
cmp [ebp+var_7E4] 522h +
jz loc_413D05  +
cmp [ebp+var_7E4] 5 +
jz loc_413D05  +
push 1  +
push 5CCh  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov esi 8011002Bh +
jmp loc_413D0A  +
cmp eax 522h +
jz loc_413D05  +
cmp eax 5 +
jz loc_413D05  +
push 1  +
push 5D0h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov esi 80110025h +
jmp loc_413D0A  +
mov esi 80110823h +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax esi +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_412CC0  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jnz loc_413D41  +
mov eax 80070057h +
jmp loc_413D85  +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
xor edx edx +
mov edx [ebp+8] +
pop ecx  +
mov edi offset dword_40231C +
cmps   +
jz loc_413D6D  +
mov esi [ebp+0Ch] +
push ebx  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset dword_40222C +
cmps   +
pop ebx  +
jnz loc_413D6F  +
mov [eax] edx +
cmp dword ptr [eax] 0 +
pop edi  +
pop esi  +
jz loc_413D80  +
mov eax [edx] +
push edx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_413D85  +
mov eax 80004002h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 134h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_413DC0  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jge loc_413DFC  +
push 1  +
push 69Dh  +
push offset aDW7rtmComCom_2  +
push offset aPos0  +
call nullsub_4  +
mov eax [esi] +
test eax eax +
jge loc_413DFC  +
mov eax 80070057h +
jmp loc_413E21  +
cmp eax [edi+4] +
jge loc_413E1E  +
mov ecx [edi] +
mov eax [ecx+eax*8] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov ecx [edi] +
mov eax [esi] +
mov eax [ecx+eax*8+4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
inc dword ptr [esi]  +
xor eax eax +
jmp loc_413E21  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
mov eax [esi] +
lea ecx ds:28h[ecx*8] +
push ecx  +
push eax  +
call ds:CoTaskMemRealloc  +
test eax eax +
jnz loc_413E50  +
mov eax 8007000Eh +
pop esi  +
retn   +
add dword ptr [esi+8] 5 +
mov [esi] eax +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+4] edi +
jle loc_413E89  +
mov eax [esi] +
push dword ptr [eax+edi*8]  +
push [ebp+arg_0]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_413E92  +
inc edi  +
cmp edi [esi+4] +
jl loc_413E6F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edi +
jmp loc_413E8C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_413EB1  +
cmp ecx 7FFFFFFFh +
jbe loc_413EB6  +
mov eax 80070057h +
test eax eax +
jl loc_413EF3  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_413EE3  +
cmp eax esi +
ja loc_413EE3  +
jnz loc_413EEE  +
jmp loc_413EE8  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jz loc_413F55  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_413F55  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_413F14  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
push 2  +
xor ecx ecx +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ds:CoTaskMemAlloc  +
mov [edi] eax +
test eax eax +
jnz loc_413F49  +
mov eax 8007000Eh +
jmp loc_413F6D  +
push [ebp+arg_0]  +
push esi  +
push eax  +
call sub_409CFE  +
jmp loc_413F6D  +
push 1  +
push 6Bh  +
push offset aDW7rtmComCom_2  +
push offset a0  +
call nullsub_4  +
mov eax 8000FFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push esi  +
mov esi offset aDW7rtmComCom_2 +
jnz loc_413F9B  +
push 1  +
push 1A4h  +
push esi  +
push offset a0Io_tsz  +
call nullsub_4  +
cmp dword ptr [ebp+10h] 1 +
ja loc_413FB3  +
push 1  +
push 1A5h  +
push esi  +
push offset a1I_ulc  +
call nullsub_4  +
mov ecx [ebp+8] +
mov eax [ecx+4] +
and eax 3 +
sub eax 0 +
jz loc_413FE2  +
dec eax  +
jz loc_413FDD  +
push 1  +
push 1B2h  +
push esi  +
push offset a0  +
call nullsub_4  +
mov eax 80004005h +
jmp loc_413FF0  +
push dword ptr [ecx+18h]  +
jmp loc_413FE5  +
push dword ptr [ecx+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_409CFE  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_413DAB  +
test [ebp+arg_0] 1 +
jz loc_414014  +
push esi  +
call ds:CoTaskMemFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor esi esi +
mov ebx 7D0h +
push edi  +
mov [ebp+var_1C] ecx +
mov [ebp+var_10] ebx +
mov [ebp+phkResult] esi +
mov [ebp+var_C] esi +
mov edi offset aDW7rtmComCom_2 +
cmp [ebp+hKey] esi +
jz loc_41404D  +
cmp [ebp+arg_4] esi +
jnz loc_41405F  +
push 1  +
push 56Ch  +
push edi  +
push offset a0I_hkeysrc0I_h  +
call nullsub_4  +
mov eax [ebp+var_10] +
push 2  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
push eax  +
call ds:CoTaskMemAlloc  +
mov [ebp+lpSubKey] eax +
cmp eax esi +
jnz loc_414088  +
mov eax 8007000Eh +
jmp loc_4142A3  +
push [ebp+arg_4]  +
mov ecx [ebp+var_1C] +
push [ebp+hKey]  +
call sub_413B2D  +
cmp eax esi +
mov [ebp+var_4] eax +
jge loc_4140B4  +
push 1  +
push 572h  +
push edi  +
push offset aHresultHr0_0  +
call nullsub_4  +
jmp loc_41424B  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+lpSubKey]  +
mov [ebp+var_10] ebx +
mov ebx ds:RegEnumKeyExW +
mov [ebp+var_18] esi +
push esi  +
jmp loc_4141A5  +
cmp [ebp+var_10] 7D0h +
jb loc_4140EC  +
push 1  +
push 57Eh  +
push edi  +
push offset a2000Ctchchild  +
call nullsub_4  +
cmp [ebp+var_4] esi +
jnz loc_4141CC  +
lea eax [ebp+phkResult] +
push eax  +
push 2001Fh  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call sub_41352A  +
cmp eax esi +
jnz loc_4141F6  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push 2001Fh  +
push esi  +
push esi  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+arg_4]  +
call sub_41357F  +
cmp eax esi +
jnz loc_41421D  +
push [ebp+var_C]  +
mov ecx [ebp+var_1C] +
push [ebp+phkResult]  +
call sub_414020  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_4141C0  +
push [ebp+phkResult]  +
call sub_4135E0  +
mov [ebp+phkResult] esi +
cmp eax esi +
jz loc_41416C  +
push 1  +
push 590h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
push [ebp+var_C]  +
call sub_4135E0  +
mov [ebp+var_C] esi +
cmp eax esi +
jz loc_41418D  +
push 1  +
push 593h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
inc [ebp+var_18]  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+lpSubKey]  +
mov [ebp+var_10] 7D0h +
push [ebp+var_18]  +
push [ebp+hKey]  +
call ebx  +
mov [ebp+var_4] eax +
cmp eax 103h +
jnz loc_4140D1  +
mov [ebp+var_4] esi +
jmp loc_41424B  +
push 1  +
push 58Bh  +
jmp loc_4140A4  +
cmp [ebp+var_4] 522h +
jz loc_414244  +
cmp [ebp+var_4] 5 +
jz loc_414244  +
push 1  +
push 57Fh  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov [ebp+var_4] 8011002Bh +
jmp loc_41424B  +
cmp eax 522h +
jz loc_414244  +
cmp eax 5 +
jz loc_414244  +
push 1  +
push 583h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov [ebp+var_4] 80110031h +
jmp loc_41424B  +
cmp eax 522h +
jz loc_414244  +
cmp eax 5 +
jz loc_414244  +
push 1  +
push 587h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov [ebp+var_4] 80110021h +
jmp loc_41424B  +
mov [ebp+var_4] 80110823h +
cmp [ebp+phkResult] esi +
jz loc_414271  +
push [ebp+phkResult]  +
call sub_4135E0  +
mov [ebp+phkResult] esi +
cmp eax esi +
jz loc_414271  +
push 1  +
push 59Ch  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
cmp [ebp+var_C] esi +
jz loc_414297  +
push [ebp+var_C]  +
call sub_4135E0  +
mov [ebp+var_C] esi +
cmp eax esi +
jz loc_414297  +
push 1  +
push 5A2h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
push [ebp+lpSubKey]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push ebx  +
push esi  +
push edi  +
mov edi offset aDW7rtmComCom_2 +
jnz loc_4142D4  +
push 1  +
push 602h  +
push edi  +
push offset a0Io_tsz  +
call nullsub_4  +
mov ebx [ebp+14h] +
test ebx ebx +
jnz loc_4142ED  +
push 1  +
push 603h  +
push edi  +
push offset a0O_ulc  +
call nullsub_4  +
cmp dword ptr [ebp+10h] 1 +
ja loc_414305  +
push 1  +
push 604h  +
push edi  +
push offset a1I_ulc  +
call nullsub_4  +
mov esi [ebp+8] +
mov eax [esi+4] +
and eax 3 +
sub eax 0 +
jz loc_414342  +
dec eax  +
jz loc_41432F  +
push 1  +
push 613h  +
push edi  +
push offset a0  +
call nullsub_4  +
mov edi 80004005h +
jmp loc_41435E  +
push dword ptr [esi+18h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_409CFE  +
push dword ptr [esi+18h]  +
jmp loc_414353  +
push dword ptr [esi+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_409CFE  +
push dword ptr [esi+14h]  +
mov edi eax +
call ds:lstrlenW  +
inc eax  +
mov [ebx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov esi ecx +
test edi edi +
jnz loc_41439C  +
push 1  +
push 65Bh  +
push offset aDW7rtmComCom_2  +
push offset aSzkey  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_4143F6  +
push edi  +
call sub_413E5F  +
cmp eax 0FFFFFFFFh +
jz loc_4143BD  +
push 1  +
push 65Ch  +
push offset aDW7rtmComCom_2  +
push offset aFindSzkey1  +
call nullsub_4  +
mov eax [esi+8] +
cmp eax [esi+4] +
jg loc_4143D2  +
mov ecx esi +
call sub_413E2C  +
mov ebx eax +
test ebx ebx +
jl loc_4143F4  +
mov eax [esi+4] +
test eax eax +
jge loc_4143E0  +
mov eax 80070216h +
jmp loc_4143F6  +
mov ecx [esi] +
mov edx [ebp+arg_4] +
mov [ecx+eax*8] edi +
mov eax [esi+4] +
mov ecx [esi] +
mov [ecx+eax*8+4] edx +
inc dword ptr [esi+4]  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push edi  +
mov edi ecx +
jnz loc_41442D  +
push 1  +
push 677h  +
push offset aDW7rtmComCom_2  +
push offset aSzkey  +
call nullsub_4  +
mov eax 80070057h +
jmp loc_41446B  +
push esi  +
push [ebp+arg_0]  +
call sub_413E5F  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jg loc_414441  +
xor eax eax +
jmp loc_41446A  +
cmp esi [edi+4] +
jl loc_41445C  +
push 1  +
push 67Dh  +
push offset aDW7rtmComCom_2  +
push offset aLindexM_lcount  +
call nullsub_4  +
mov eax [edi] +
mov eax [eax+esi*8+4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_414499  +
push 1  +
push 68Ah  +
push offset aDW7rtmComCom_2  +
push offset aSzkey  +
call nullsub_4  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_413E5F  +
cmp eax 0FFFFFFFFh +
jz loc_4144BE  +
dec dword ptr [esi+4]  +
mov edx [esi+4] +
mov ecx [esi] +
mov esi [ecx+edx*8] +
mov [ecx+eax*8] esi +
mov edx [ecx+edx*8+4] +
mov [ecx+eax*8+4] edx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+0Ch] +
mov [ebp-4] ebx +
mov [ebp-0Ch] ebx +
mov [ebp-8] ebx +
mov esi offset aDW7rtmComCom_2 +
cmp edi ebx +
jz loc_4144F1  +
xor eax eax +
cmp ax [edi] +
jnz loc_414503  +
push 1  +
push 300h  +
push esi  +
push offset a0I_tszkeyL0I_t  +
call nullsub_4  +
push 5Ch  +
pop eax  +
cmp ax [edi] +
jnz loc_41451D  +
push 1  +
push 301h  +
push esi  +
push offset aLI_tszkey  +
call nullsub_4  +
push 5Ch  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41453E  +
push 1  +
push 304h  +
push esi  +
push offset a0WcschrI_tszke  +
call nullsub_4  +
cmp [ebp+10h] ebx +
jnz loc_414555  +
push 1  +
push 305h  +
push esi  +
push offset a0I_pirndest  +
call nullsub_4  +
lea eax [ebp-4] +
push eax  +
mov eax [ebp+8] +
mov ebx 2001Fh +
push ebx  +
push 0  +
push edi  +
push dword ptr [eax+0Ch]  +
call sub_41352A  +
mov edi offset a0lLr +
test eax eax +
jz loc_41459C  +
cmp eax 522h +
jz loc_4145FA  +
cmp eax 5 +
jz loc_4145FA  +
push 1  +
push 309h  +
push esi  +
push edi  +
call nullsub_4  +
mov dword ptr [ebp+10h] 80110031h +
jmp loc_41462A  +
mov ecx [ebp+10h] +
lea eax [ebp-0Ch] +
push eax  +
call sub_413AD7  +
mov [ebp+10h] eax +
xor eax eax +
cmp [ebp+10h] eax +
jge loc_4145BB  +
push 1  +
push 30Dh  +
jmp loc_41461F  +
lea ecx [ebp-10h] +
push ecx  +
lea ecx [ebp-8] +
push ecx  +
push eax  +
push ebx  +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-0Ch]  +
call sub_41357F  +
test eax eax +
jz loc_414603  +
cmp eax 522h +
jz loc_4145FA  +
cmp eax 5 +
jz loc_4145FA  +
push 1  +
push 30Fh  +
push esi  +
push edi  +
call nullsub_4  +
mov dword ptr [ebp+10h] 80110021h +
jmp loc_41462A  +
mov dword ptr [ebp+10h] 80110823h +
jmp loc_41462A  +
push dword ptr [ebp-8]  +
mov ecx [ebp+8] +
push dword ptr [ebp-4]  +
call sub_414020  +
mov [ebp+10h] eax +
test eax eax +
jge loc_41462A  +
push 1  +
push 313h  +
push esi  +
push offset aHresultHr0_0  +
call nullsub_4  +
cmp dword ptr [ebp-4] 0 +
jz loc_41464A  +
push dword ptr [ebp-4]  +
call sub_4135E0  +
test eax eax +
jz loc_41464A  +
push 1  +
push 31Ch  +
push esi  +
push edi  +
call nullsub_4  +
cmp dword ptr [ebp-8] 0 +
jz loc_41466A  +
push dword ptr [ebp-8]  +
call sub_4135E0  +
test eax eax +
jz loc_41466A  +
push 1  +
push 321h  +
push esi  +
push edi  +
call nullsub_4  +
cmp dword ptr [ebp-0Ch] 0 +
jz loc_41468A  +
push dword ptr [ebp-0Ch]  +
call sub_4135E0  +
test eax eax +
jz loc_41468A  +
push 1  +
push 326h  +
push esi  +
push edi  +
call nullsub_4  +
mov eax [ebp+10h] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax ecx +
and dword ptr [eax+4] 0FFFFFFFCh +
xor ecx ecx +
mov dword ptr [eax] offset off_406E10 +
mov [eax+28h] ecx +
mov [eax+2Ch] ecx +
mov [eax+134h] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+20h] ecx +
mov dword ptr [eax+24h] 20019h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 2  +
pop eax  +
mov esi ecx +
mov [ebp+dwDisposition] eax +
mov [ebp+var_10] edi +
mov [ebp+hKey] edi +
mov [ebp+pv] edi +
mov ebx offset aDW7rtmComCom_2 +
cmp [ebp+arg_0] edi +
jz loc_41471A  +
cmp [ebp+arg_0] 1 +
jz loc_41471A  +
cmp [ebp+arg_0] eax +
jz loc_41471A  +
push 1  +
push 409h  +
push ebx  +
push offset aCmdrn_fail_whe  +
call nullsub_4  +
mov eax [ebp+lpSubKey] +
cmp eax edi +
jz loc_414728  +
xor ecx ecx +
cmp cx [eax] +
jnz loc_41473A  +
push 1  +
push 40Ah  +
push ebx  +
push offset a0I_tszkeypathL  +
call nullsub_4  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_414748  +
xor eax eax +
cmp ax [edi] +
jnz loc_41475A  +
push 1  +
push 40Bh  +
push ebx  +
push offset a0I_tszvaluenam  +
call nullsub_4  +
push 5Ch  +
pop eax  +
cmp ax [edi] +
jnz loc_41476C  +
and [ebp+var_20] 0 +
and [ebp+lpValueName] 0 +
jmp loc_414776  +
mov [ebp+var_20] 1 +
mov [ebp+lpValueName] edi +
mov edi [ebp+lpSubKey] +
push 5Ch  +
pop eax  +
cmp ax [edi] +
jnz loc_4147C5  +
mov eax [esi+0Ch] +
mov [ebp+hKey] eax +
mov eax [esi+14h] +
mov [ebp+var_18] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [esi+34h] +
push eax  +
lea eax [ebp+Type] +
push eax  +
xor ebx ebx +
push ebx  +
push [ebp+lpValueName]  +
mov [ebp+cbData] 100h +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov edi eax +
cmp edi ebx +
jnz loc_4149DA  +
mov dword ptr [esi+30h] 1 +
jmp loc_4149E7  +
mov eax [esi+10h] +
test eax eax +
jz loc_4147E1  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_4147CF  +
sub eax edx +
sar eax 1 +
mov ecx eax +
jmp loc_4147E3  +
xor ecx ecx +
mov eax edi +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_4147E8  +
sub eax edi +
sar eax 1 +
lea edi [eax+ecx+2] +
push 2  +
xor ecx ecx +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ds:CoTaskMemAlloc  +
mov [ebp+pv] eax +
test eax eax +
jnz loc_414822  +
mov eax 8007000Eh +
jmp loc_414BE5  +
xor ecx ecx +
mov [eax] cx +
mov eax [esi+10h] +
test eax eax +
jz loc_41484A  +
push eax  +
push offset aS  +
push edi  +
push [ebp+pv]  +
call sub_413E9B  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jl loc_414BD4  +
push [ebp+lpSubKey]  +
push edi  +
push [ebp+pv]  +
call sub_409DA8  +
mov ebx eax +
test ebx ebx +
jl loc_414BD4  +
mov ebx [ebp+pv] +
push 5Ch  +
push ebx  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41489C  +
push eax  +
call ds:CharNextW  +
xor ecx ecx +
mov [ebp+var_18] eax +
mov edi offset aDW7rtmComCom_2 +
cmp cx [eax] +
jnz loc_4148A4  +
push 1  +
push 43Bh  +
push edi  +
push offset aL0Tszkeyname  +
call nullsub_4  +
jmp loc_4148A4  +
mov [ebp+var_18] ebx +
mov edi offset aDW7rtmComCom_2 +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_4148C5  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
call sub_414402  +
test eax eax +
jz loc_4148C5  +
xor edx edx +
inc edx  +
xor ebx ebx +
mov [ebp+var_10] edx +
xor eax eax +
jmp loc_4148DE  +
lea eax [ebp+hKey] +
push eax  +
push dword ptr [esi+24h]  +
push 0  +
push [ebp+lpSubKey]  +
push dword ptr [esi+0Ch]  +
call sub_41352A  +
xor edx edx +
xor ebx ebx +
inc edx  +
mov ecx [ebp+arg_0] +
sub ecx ebx +
jz loc_4149BE  +
dec ecx  +
jz loc_414996  +
dec ecx  +
jz loc_41490E  +
push edx  +
push 479h  +
push edi  +
push offset aUnknownCommand  +
call nullsub_4  +
mov ebx 8000FFFFh +
jmp loc_414BD4  +
cmp eax 2 +
jnz loc_41495D  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push dword ptr [esi+24h]  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+lpSubKey]  +
push dword ptr [esi+0Ch]  +
call sub_41357F  +
cmp eax ebx +
jz loc_41478D  +
cmp eax 522h +
jz loc_41498C  +
cmp eax 5 +
jz loc_41498C  +
push 1  +
push 46Fh  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov ebx 80110021h +
jmp loc_414BD4  +
cmp eax ebx +
jz loc_41478D  +
cmp eax 522h +
jz loc_41498C  +
cmp eax 5 +
jz loc_41498C  +
push edx  +
push 473h  +
push edi  +
push offset a0lLr  +
call nullsub_4  +
mov ebx 80110031h +
jmp loc_414BD4  +
mov ebx 80110823h +
jmp loc_414BD4  +
cmp eax 2 +
jnz loc_4149A2  +
mov ebx edx +
jmp loc_414BD4  +
cmp eax ebx +
jz loc_41478D  +
cmp eax 522h +
jz loc_41498C  +
cmp eax 5 +
jz loc_41498C  +
push edx  +
push 466h  +
jmp loc_414977  +
cmp eax ebx +
jz loc_41478D  +
cmp eax 522h +
jz loc_41498C  +
cmp eax 5 +
jz loc_41498C  +
push edx  +
push 457h  +
jmp loc_414977  +
mov [esi+30h] ebx +
cmp edi 0EAh +
jnz loc_4149E7  +
xor edi edi +
cmp edi 2 +
jnz loc_4149F9  +
cmp [ebp+lpValueName] ebx +
jnz loc_4149F9  +
mov [ebp+Type] ebx +
mov [ebp+cbData] ebx +
xor edi edi +
mov eax [ebp+arg_0] +
dec eax  +
mov ebx 80110027h +
jz loc_414A57  +
dec eax  +
jnz loc_414A5F  +
cmp edi 2 +
jnz loc_414A5F  +
push eax  +
push eax  +
push eax  +
push eax  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov edi eax +
test edi edi +
jz loc_414A3B  +
push 1  +
push 4B0h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
inc ebx  +
jmp loc_414A5F  +
lea eax [ebp+cbData] +
push eax  +
push 0  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov edi eax +
jmp loc_414A5F  +
cmp edi 2 +
jnz loc_414A5F  +
xor ebx ebx +
inc ebx  +
test edi edi +
jz loc_414AD6  +
cmp edi 2 +
jnz loc_414A6E  +
cmp [ebp+arg_0] 1 +
jz loc_414A84  +
push 1  +
push 4BCh  +
push offset aDW7rtmComCom_2  +
push offset a0lLr2lLrCmdrn_  +
call nullsub_4  +
mov eax [ebp+hKey] +
cmp [esi+0Ch] eax +
jz loc_414BD4  +
cmp [ebp+var_10] 0 +
jnz loc_414BD4  +
push eax  +
call sub_4135E0  +
test eax eax +
jz loc_414ABA  +
push 1  +
push 4C3h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
cmp [ebp+pv] 0 +
jz loc_414BE3  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
and [ebp+pv] 0 +
jmp loc_414BD4  +
mov eax [esi+4] +
xor eax [ebp+var_20] +
mov ecx [ebp+lpSubKey] +
and eax 3 +
xor [esi+4] eax +
push 5Ch  +
pop eax  +
cmp ax [ecx] +
jz loc_414B83  +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_414B39  +
cmp [ebp+var_10] 0 +
jnz loc_414B19  +
cmp [ebp+pv] 0 +
jz loc_414B19  +
push [ebp+hKey]  +
push [ebp+pv]  +
call sub_41436C  +
mov ebx eax +
test ebx ebx +
jl loc_414BD4  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_414B31  +
mov eax [esi+10h] +
test eax eax +
jz loc_414B31  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi+10h] 0 +
mov eax [ebp+var_10] +
mov [esi+2Ch] eax +
jmp loc_414B6D  +
push dword ptr [esi+0Ch]  +
call sub_4135E0  +
test eax eax +
jz loc_414B5B  +
push 1  +
push 4E3h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax [esi+10h] +
test eax eax +
jz loc_414B6D  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [esi+10h] 0 +
mov eax [ebp+hKey] +
mov [esi+0Ch] eax +
mov eax [ebp+pv] +
and [ebp+pv] 0 +
mov [esi+10h] eax +
mov eax [ebp+var_18] +
mov [esi+14h] eax +
lea edi [esi+18h] +
mov eax [edi] +
test eax eax +
jz loc_414B96  +
push eax  +
call ds:CoTaskMemFree  +
and dword ptr [edi] 0 +
mov ecx [ebp+arg_8] +
push 5Ch  +
pop eax  +
cmp ax [ecx] +
jz loc_414BB0  +
push edi  +
push ecx  +
call sub_413EFA  +
mov ebx eax +
test ebx ebx +
jl loc_414BD4  +
jmp loc_414BB3  +
and dword ptr [edi] 0 +
cmp [ebp+arg_0] 2 +
mov eax [ebp+Type] +
mov [esi+1Ch] eax +
mov eax [ebp+cbData] +
mov [esi+20h] eax +
jnz loc_414BD2  +
cmp [ebp+dwDisposition] 1 +
jnz loc_414BD2  +
mov ebx 110002h +
jmp loc_414BD4  +
xor ebx ebx +
cmp [ebp+pv] 0 +
jz loc_414BE3  +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_4] edi +
mov [ebp+cbName] 7D0h +
cmp [ebp+arg_0] edi +
jz loc_414C2A  +
cmp [ebp+arg_0] 1 +
jz loc_414C2A  +
push 1  +
push 51Fh  +
push offset aDW7rtmComCom_2  +
push offset aNmrn_child_key  +
call nullsub_4  +
test dword ptr [ebx+4] 3 +
jz loc_414C5C  +
push 1  +
push 520h  +
push offset aDW7rtmComCom_2  +
push offset aNmrn_at_unname  +
call nullsub_4  +
test dword ptr [ebx+4] 3 +
jz loc_414C5C  +
mov eax 80110045h +
jmp loc_414DA4  +
mov eax [ebp+cbName] +
push 2  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
push eax  +
call ds:CoTaskMemAlloc  +
mov ecx eax +
mov [ebp+lpSubKey] ecx +
cmp ecx edi +
jnz loc_414C87  +
mov eax 8007000Eh +
jmp loc_414DA4  +
mov eax [ebp+arg_0] +
sub eax edi +
push esi  +
jz loc_414CCB  +
dec eax  +
jz loc_414CB4  +
push 1  +
push 533h  +
push offset aDW7rtmComCom_2  +
push offset aUnknownChildEn  +
call nullsub_4  +
mov [ebp+var_4] 8000FFFFh +
jmp loc_414D7C  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbName] +
push eax  +
push ecx  +
push [ebp+dwIndex]  +
push dword ptr [ebx+0Ch]  +
call ds:RegEnumValueW  +
jmp loc_414CE0  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbName] +
push eax  +
push ecx  +
push [ebp+dwIndex]  +
push dword ptr [ebx+0Ch]  +
call ds:RegEnumKeyExW  +
cmp [ebp+cbName] 7D0h +
mov esi eax +
jb loc_414D01  +
push 1  +
push 538h  +
push offset aDW7rtmComCom_2  +
push offset a2000Ctchchildn  +
call nullsub_4  +
cmp esi edi +
jz loc_414D3A  +
cmp esi 522h +
jz loc_414D31  +
cmp esi 5 +
jz loc_414D31  +
push 1  +
push 53Ah  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov [ebp+var_4] 8011002Bh +
jmp loc_414D7C  +
mov [ebp+var_4] 80110823h +
jmp loc_414D7C  +
mov eax [ebp+arg_0] +
sub eax edi +
jz loc_414D69  +
dec eax  +
jnz loc_414D7C  +
mov esi offset asc_4026C8 +
cmp [ebp+cbName] edi +
jnz loc_414D63  +
push esi  +
push 7D0h  +
push [ebp+lpSubKey]  +
call sub_409CFE  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_414D7C  +
push [ebp+lpSubKey]  +
push esi  +
jmp loc_414D71  +
push offset asc_4026C8  +
push [ebp+lpSubKey]  +
push edi  +
mov ecx ebx +
call sub_4146D5  +
mov [ebp+var_4] eax +
push [ebp+lpSubKey]  +
call ds:CoTaskMemFree  +
cmp [ebp+var_4] edi +
pop esi  +
jge loc_414DA1  +
push 1  +
push 550h  +
push offset aDW7rtmComCom_2  +
push offset aHresultHr0_0  +
call nullsub_4  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+hKey] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
mov esi ecx +
mov ecx [esi+28h] +
lea eax [ebp+var_4] +
push eax  +
call sub_413DC7  +
test eax eax +
jnz loc_414E2B  +
push edi  +
mov eax [ebp+hKey] +
cmp [esi+0Ch] eax +
jnz loc_414DE5  +
cmp [ebp+arg_0] 0 +
jz loc_414E12  +
push eax  +
call sub_4135E0  +
mov edi [ebp+var_8] +
mov ecx [esi+28h] +
push edi  +
call sub_414475  +
dec [ebp+var_4]  +
cmp edi [esi+10h] +
jnz loc_414E03  +
and dword ptr [esi+10h] 0 +
test edi edi +
jz loc_414E12  +
push edi  +
call ds:CoTaskMemFree  +
and [ebp+var_8] 0 +
mov ecx [esi+28h] +
lea eax [ebp+hKey] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_413DC7  +
test eax eax +
jz loc_414DD7  +
pop edi  +
mov dword ptr [esi+2Ch] 1 +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
push 0  +
call sub_4146D5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
push 1  +
call sub_4146D5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
push 2  +
call sub_4146D5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
push 0  +
call sub_414BF1  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
push 1  +
call sub_414BF1  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
and eax 3 +
cmp eax 1 +
jz loc_414EFA  +
test eax eax +
jz loc_414EFA  +
push 1  +
push 27Fh  +
push offset aDW7rtmComCom_2  +
push offset aNmrn_at_named_  +
call nullsub_4  +
mov eax offset asc_4026C8 +
push eax  +
push eax  +
push 0  +
mov ecx esi +
call sub_4146D5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7ECh +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp-4] eax +
and dword ptr [ebp-7E4h] 0 +
push ebx  +
push esi  +
mov esi [ebp+8] +
test dword ptr [esi+4] 3 +
push edi  +
jz loc_414F55  +
push 1  +
push 293h  +
push offset aDW7rtmComCom_2  +
push offset aNmrn_at_unname  +
call nullsub_4  +
mov eax [esi+10h] +
cmp eax [esi+14h] +
jnz loc_414F73  +
push 1  +
push 296h  +
push offset aDW7rtmComCom_2  +
push offset aM_tszkeypathM_  +
call nullsub_4  +
mov eax [esi+0Ch] +
mov ebx [esi+10h] +
mov [ebp-7DCh] eax +
mov eax [esi+14h] +
mov [ebp-7ECh] eax +
mov eax [esi+2Ch] +
mov [ebp-7E0h] eax +
mov eax ebx +
mov [ebp-7E8h] ebx +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_414F9C  +
sub eax ecx +
sar eax 1 +
mov ecx 3E8h +
cmp eax ecx +
jnb loc_414FC5  +
push ebx  +
lea edi [ebp-7D4h] +
push ecx  +
mov eax edi +
push eax  +
call sub_409CFE  +
jmp loc_41501B  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_414FCA  +
sub eax edx +
sar eax 1 +
lea ebx [eax+1] +
push 2  +
xor ecx ecx +
pop edx  +
mov eax ebx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ds:CoTaskMemAlloc  +
mov edi eax +
test edi edi +
jnz loc_415002  +
mov eax 8007000Eh +
jmp loc_4150FD  +
push dword ptr [ebp-7E8h]  +
push ebx  +
push edi  +
call sub_409CFE  +
mov ebx [ebp-7E8h] +
mov [ebp-7E4h] edi +
mov [ebp-7D8h] eax +
xor eax eax +
cmp [ebp-7D8h] eax +
jl loc_41507D  +
mov ecx [esi+8] +
push 5Ch  +
push edi  +
mov [esi+0Ch] ecx +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+2Ch] eax +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_415061  +
push 1  +
push 2BCh  +
push offset aDW7rtmComCom_2  +
push offset a0Tsztmp  +
call nullsub_4  +
jmp loc_415066  +
xor ecx ecx +
mov [eax] cx +
push offset asc_4026C8  +
push edi  +
push 0  +
mov ecx esi +
call sub_4146D5  +
mov [ebp-7D8h] eax +
xor eax eax +
cmp [ebp-7E4h] eax +
jz loc_41508E  +
push edi  +
call ds:CoTaskMemFree  +
xor eax eax +
cmp [ebp-7D8h] eax +
jl loc_4150D9  +
cmp [esi+28h] eax +
jz loc_4150A7  +
cmp [ebp-7E0h] eax +
jz loc_4150F7  +
cmp ebx eax +
jmp loc_4150CE  +
push dword ptr [ebp-7DCh]  +
call sub_4135E0  +
test eax eax +
jz loc_4150CC  +
push 1  +
push 2DCh  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
test ebx ebx +
jz loc_4150F7  +
push ebx  +
call ds:CoTaskMemFree  +
jmp loc_4150F7  +
mov eax [ebp-7DCh] +
mov [esi+0Ch] eax +
mov eax [ebp-7ECh] +
mov [esi+14h] eax +
mov eax [ebp-7E0h] +
mov [esi+10h] ebx +
mov [esi+2Ch] eax +
mov eax [ebp-7D8h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
cmp [esi+28h] edi +
jnz loc_415160  +
push 0Ch  +
call ds:CoTaskMemAlloc  +
cmp eax edi +
jz loc_41513A  +
mov [eax] edi +
mov [eax+4] edi +
mov [eax+8] edi +
jmp loc_41513C  +
xor eax eax +
mov [esi+28h] eax +
cmp eax edi +
jnz loc_41514A  +
mov eax 8007000Eh +
jmp loc_41516A  +
mov ecx [esi+10h] +
cmp ecx edi +
jz loc_415168  +
push dword ptr [esi+0Ch]  +
push ecx  +
mov ecx eax +
call sub_41436C  +
mov edi eax +
jmp loc_415168  +
push edi  +
mov ecx esi +
call sub_414DAF  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
mov [esi] ebx +
cmp [esi+28h] ebx +
jz loc_41519E  +
push 1  +
call sub_414DAF  +
mov ecx [esi+28h] +
cmp ecx ebx +
jz loc_415199  +
push 1  +
call sub_413FFA  +
mov [esi+28h] ebx +
jmp loc_4151C0  +
push dword ptr [esi+0Ch]  +
call sub_4135E0  +
test eax eax +
jz loc_4151C0  +
push 1  +
push 381h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax [esi+10h] +
push edi  +
mov edi ds:CoTaskMemFree +
cmp eax ebx +
jz loc_4151D4  +
push eax  +
call edi  +
mov [esi+10h] ebx +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_4151E1  +
push eax  +
call edi  +
mov [esi+18h] ebx +
push dword ptr [esi+8]  +
call sub_4135E0  +
pop edi  +
test eax eax +
jz loc_415204  +
push 1  +
push 388h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
and dword ptr [esi+4] 0FFFFFFFCh +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [esi+1Ch] ebx +
mov [esi+20h] ebx +
mov dword ptr [esi+24h] 20019h +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpsz] +
push esi  +
mov esi [ebp+arg_10] +
and esi 0FFFFFCFFh +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_415268  +
movzx eax word ptr [ebx] +
push 3Fh  +
pop ecx  +
cmp cx ax +
jz loc_41527E  +
push 5Ch  +
pop ecx  +
cmp cx ax +
jnz loc_415268  +
push ebx  +
call ds:CharNextW  +
push 5Ch  +
pop ecx  +
cmp cx [eax] +
jz loc_41527E  +
push 1  +
push 3A9h  +
push offset aDW7rtmComCom_2  +
push offset a0I_tszhostL?I_  +
call nullsub_4  +
cmp [ebp+arg_4] 80000002h +
jz loc_4152A6  +
cmp [ebp+arg_4] 80000003h +
jz loc_4152A6  +
push 1  +
push 3AAh  +
push offset aDW7rtmComCom_2  +
push offset aHkeyUlong_ptrL  +
call nullsub_4  +
mov eax [ebp+lpSubKey] +
test eax eax +
jz loc_4152BF  +
movzx eax word ptr [eax] +
xor ecx ecx +
cmp cx ax +
jz loc_4152BF  +
push 5Ch  +
pop ecx  +
cmp cx ax +
jnz loc_4152D5  +
push 1  +
push 3ABh  +
push offset aDW7rtmComCom_2  +
push offset a0I_tszkeypat_0  +
call nullsub_4  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_4152E3  +
xor ecx ecx +
cmp cx [eax] +
jnz loc_4152F9  +
push 1  +
push 3ACh  +
push offset aDW7rtmComCom_2  +
push offset a0I_tszvaluenam  +
call nullsub_4  +
cmp esi 2001Fh +
jz loc_415345  +
cmp esi 20h +
jz loc_415345  +
cmp esi 4 +
jz loc_415345  +
cmp esi 8 +
jz loc_415345  +
cmp esi 20019h +
jz loc_415345  +
cmp esi 10h +
jz loc_415345  +
cmp esi 1 +
jz loc_415345  +
cmp esi 2 +
jz loc_415345  +
cmp esi 20006h +
jz loc_415345  +
push 1  +
push 3BAh  +
push offset aDW7rtmComCom_2  +
push offset a0x00020000l0x0  +
call nullsub_4  +
push 3Fh  +
pop eax  +
sub ax [ebx] +
lea esi [edi+8] +
movzx eax ax +
neg eax  +
push esi  +
push [ebp+arg_4]  +
sbb eax eax +
and eax ebx +
push eax  +
call sub_413505  +
xor ebx ebx +
cmp eax ebx +
jz loc_415397  +
cmp eax 522h +
jz loc_415390  +
cmp eax 5 +
jz loc_415390  +
push 1  +
push 3C6h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov eax 80110033h +
jmp loc_4153F4  +
mov eax 80110823h +
jmp loc_4153F4  +
lea eax [edi+0Ch] +
push eax  +
push 20019h  +
push ebx  +
push ebx  +
push dword ptr [esi]  +
call sub_41352A  +
cmp eax ebx +
jz loc_4153C2  +
cmp eax 522h +
jz loc_415390  +
cmp eax 5 +
jz loc_415390  +
push 1  +
push 3C9h  +
jmp loc_41537A  +
push [ebp+arg_C]  +
mov eax [ebp+arg_10] +
push [ebp+lpSubKey]  +
mov ecx edi +
push ebx  +
mov [edi+24h] eax +
call sub_4146D5  +
mov esi eax +
cmp esi ebx +
jge loc_4153F2  +
push 1  +
push 3CFh  +
push offset aDW7rtmComCom_2  +
push offset aHresultHr0_0  +
call nullsub_4  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+134h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_41542A  +
test esi esi +
jz loc_41542A  +
push 1  +
mov ecx esi +
call sub_413371  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 0 +
jnz loc_415458  +
push 1  +
push 0E5h  +
push offset aDW7rtmComCom_2  +
push offset a0O_ppirn  +
call nullsub_4  +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
mov ebx 20019h +
cmp esi 0FFFFh +
jnz loc_415476  +
mov eax [edi+24h] +
mov [ebp+0Ch] eax +
jmp loc_4154C6  +
mov eax esi +
and eax 0FFFFFCFFh +
cmp eax 0F003Fh +
jz loc_4154C3  +
cmp eax 20h +
jz loc_4154C3  +
cmp eax 4 +
jz loc_4154C3  +
cmp eax 8 +
jz loc_4154C3  +
cmp eax ebx +
jz loc_4154C3  +
cmp eax 10h +
jz loc_4154C3  +
cmp eax 1 +
jz loc_4154C3  +
cmp eax 2 +
jz loc_4154C3  +
cmp eax 20006h +
jz loc_4154C3  +
push 1  +
push 0FBh  +
push offset aDW7rtmComCom_2  +
push offset a0x001f0000l0x0  +
call nullsub_4  +
mov [ebp+0Ch] esi +
mov eax [ebp+10h] +
xor esi esi +
push 138h  +
mov [eax] esi +
call ds:CoTaskMemAlloc  +
cmp eax esi +
jz loc_4154E5  +
mov ecx eax +
call sub_414699  +
mov esi eax +
test esi esi +
jnz loc_4154F3  +
mov eax 8007000Eh +
jmp loc_4155F0  +
mov eax [edi+4] +
xor eax [esi+4] +
and eax 3 +
xor [esi+4] eax +
lea eax [esi+8] +
push eax  +
push ebx  +
push 0  +
push 0  +
push dword ptr [edi+8]  +
call sub_41352A  +
test eax eax +
jz loc_41551D  +
push 1  +
push 10Fh  +
jmp loc_41553B  +
lea eax [esi+0Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
push 0  +
push 0  +
push dword ptr [edi+0Ch]  +
call sub_41352A  +
test eax eax +
jz loc_41555F  +
push 1  +
push 114h  +
push offset aDW7rtmComCom_2  +
push offset a0lLr  +
call nullsub_4  +
mov edi 80110033h +
push 1  +
mov ecx esi +
call sub_413371  +
mov eax edi +
jmp loc_4155F0  +
lea ebx [esi+10h] +
push ebx  +
push dword ptr [edi+10h]  +
call sub_413EFA  +
test eax eax +
jge loc_415573  +
mov edi eax +
jmp loc_41554F  +
***
mov ebx [ebx] +
mov [esi+14h] ebx +
jmp loc_415595  +
push 5Ch  +
pop ecx  +
cmp cx ax +
jnz loc_41558C  +
push ebx  +
call ds:CharNextW  +
mov [esi+14h] eax +
push ebx  +
call ds:CharNextW  +
mov ebx eax +
movzx eax word ptr [ebx] +
test ax ax +
jnz loc_41557A  +
lea eax [esi+18h] +
and dword ptr [eax] 0 +
mov ecx [edi+18h] +
test ecx ecx +
jz loc_4155B5  +
push eax  +
push ecx  +
call sub_413EFA  +
test eax eax +
jl loc_41556F  +
mov eax [edi+1Ch] +
push dword ptr [ebp+10h]  +
mov [esi+1Ch] eax +
mov eax [edi+20h] +
mov [esi+20h] eax +
mov eax [ebp+0Ch] +
push offset dword_40222C  +
mov [esi+24h] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
test eax eax +
jge loc_4155EE  +
push 1  +
push 144h  +
push offset aDW7rtmComCom_2  +
push offset aHresultHr0  +
call nullsub_4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
test edi edi +
jz loc_415665  +
push esi  +
push offset LibFileName  +
mov [edi] ax +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_41565A  +
push offset ProcName  +
push esi  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_415653  +
push [ebp+uSize]  +
push edi  +
call eax  +
push esi  +
mov edi eax +
call ds:__imp_FreeLibrary  +
mov eax edi +
jmp loc_415664  +
push esi  +
call ds:__imp_FreeLibrary  +
push [ebp+uSize]  +
push edi  +
call ds:GetWindowsDirectoryW  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_41568A  +
cmp edx 7FFFFFFFh +
jbe loc_41568C  +
mov eax ecx +
test eax eax +
jl loc_4156B5  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_4156A5  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_4156B5  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_4091D4  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_407F24 +
test eax eax +
jz loc_4156D6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4156E3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+10h] +
test eax eax +
jz loc_4156F0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+14h] +
test eax eax +
jz loc_4156FD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+18h] +
test eax eax +
jz loc_41570A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_415717  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+20h] +
test esi esi +
jz loc_415724  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+4]  +
mov eax [eax+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_40231C +
xor edx edx +
cmps   +
jz loc_415771  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_407F14 +
xor edx edx +
cmps   +
jnz loc_41577D  +
mov ecx [ebp+8] +
mov [eax] ecx +
inc dword ptr [ecx+4]  +
xor eax eax +
jmp loc_415782  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
xor ecx ecx +
cmp edi ecx +
jz loc_41588B  +
mov ebx [ebp+10h] +
cmp ebx ecx +
jz loc_41588B  +
cmp [ebp+14h] ecx +
jz loc_41588B  +
cmp [ebp+18h] ecx +
jz loc_41588B  +
cmp [ebp+1Ch] ecx +
jz loc_41588B  +
cmp [ebp+20h] ecx +
jz loc_41588B  +
cmp [ebp+24h] ecx +
jz loc_41588B  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
cmp eax ecx +
jz loc_4157EA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+8] edi +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_415800  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+0Ch] ebx +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
test eax eax +
jz loc_415816  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+14h] +
mov [esi+10h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+14h] +
test eax eax +
jz loc_41582F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+18h] +
mov [esi+14h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+18h] +
test eax eax +
jz loc_415848  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+1Ch] +
mov [esi+18h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_415861  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+20h] +
mov [esi+1Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+20h] +
test eax eax +
jz loc_41587A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+24h] +
mov [esi+20h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
pop esi  +
jmp loc_415890  +
mov eax 80004003h +
pop edi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
xor esi esi +
push edi  +
cmp [ebx+8] esi +
jz loc_415A0C  +
cmp [ebx+0Ch] esi +
jz loc_415A0C  +
cmp [ebx+10h] esi +
jz loc_415A0C  +
cmp [ebx+14h] esi +
jz loc_415A0C  +
cmp [ebx+18h] esi +
jz loc_415A0C  +
cmp [ebx+1Ch] esi +
jz loc_415A0C  +
cmp [ebx+20h] esi +
jz loc_415A0C  +
mov eax [ebp+18h] +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_4158F4  +
mov [ebp+18h] ecx +
dec eax  +
jz loc_4159E7  +
dec eax  +
jz loc_4159A1  +
dec eax  +
jnz loc_415921  +
mov [ebp+8] esi +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_40230C +
xor eax eax +
cmps   +
jnz loc_41593B  +
cmp dword_42316C eax +
jnz loc_41592B  +
mov eax 80070057h +
jmp loc_415A11  +
mov ecx ebx +
call sub_417CCF  +
test eax eax +
jge loc_415997  +
jmp loc_415A11  +
xor edi edi +
xor esi esi +
cmp [ebp+10h] edi +
jbe loc_41596C  +
mov eax [ebp+14h] +
push dword ptr [eax+esi*4]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
call sub_41789E  +
cmp eax edi +
jl loc_415A11  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_415966  +
mov [ebp+8] ecx +
inc esi  +
cmp esi [ebp+10h] +
jb loc_415944  +
push 1  +
lea eax [ebp+18h] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_418B3A  +
cmp eax edi +
jl loc_415A11  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_416E2B  +
cmp eax edi +
jl loc_415A11  +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
jmp loc_415A11  +
xor edi edi +
cmp [ebp+10h] esi +
jbe loc_4159C2  +
mov eax [ebp+14h] +
push dword ptr [eax+edi*4]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
call sub_416C9C  +
cmp eax esi +
jl loc_415A11  +
inc edi  +
cmp edi [ebp+10h] +
jb loc_4159A8  +
push 1  +
lea eax [ebp+18h] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_418B3A  +
cmp eax esi +
jl loc_415A11  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_416E2B  +
jmp loc_415A11  +
xor edi edi +
cmp [ebp+10h] esi +
jbe loc_415A08  +
mov eax [ebp+14h] +
push dword ptr [eax+edi*4]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
call sub_416B01  +
cmp eax esi +
jl loc_415A11  +
inc edi  +
cmp edi [ebp+10h] +
jb loc_4159EE  +
xor eax eax +
jmp loc_415A11  +
mov eax 8000FFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+8] eax +
jz loc_415A67  +
cmp [ecx+0Ch] eax +
jz loc_415A67  +
cmp [ecx+10h] eax +
jz loc_415A67  +
cmp [ecx+14h] eax +
jz loc_415A67  +
cmp [ecx+18h] eax +
jz loc_415A67  +
cmp [ecx+1Ch] eax +
jz loc_415A67  +
cmp [ecx+20h] eax +
jz loc_415A67  +
push eax  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_418B3A  +
jmp loc_415A6C  +
mov eax 8000FFFFh +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+14h] +
push edi  +
mov edi [ebp+10h] +
push 28h  +
lea ecx [ebp-54h] +
push ecx  +
push eax  +
call ds:StringFromGUID2  +
test eax eax +
jl loc_415B28  +
test edi edi +
jnz loc_415AC1  +
test esi esi +
jnz loc_415AC1  +
push esi  +
push esi  +
lea eax [ebp-54h] +
push eax  +
push offset aScm  +
call sub_419249  +
jmp loc_415B26  +
mov ecx edi +
mov eax offset aInteractiveU_0 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415AEE  +
test dx dx +
jz loc_415AEA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415AEE  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_415AC8  +
xor eax eax +
jmp loc_415AF3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_415B26  +
push esi  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push esi  +
lea eax [ebp-54h] +
push eax  +
push offset aScm  +
call sub_419249  +
test eax eax +
jnz loc_415B28  +
push offset aSebatchlogonri  +
push edi  +
call sub_418F18  +
cmp eax 1 +
jnz loc_415B28  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_412CC0  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_1C]  +
mov eax [ebp+arg_0] +
push [ebp+arg_18]  +
mov ecx [eax] +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+hMem] +
push 0  +
push [ebp+uBytes]  +
push edi  +
call ds:LocalReAlloc  +
mov esi eax +
test esi esi +
jnz loc_415BB2  +
push ebx  +
push edi  +
call ds:LocalSize  +
push [ebp+uBytes]  +
mov ebx eax +
push esi  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_415BB1  +
push ebx  +
push edi  +
push esi  +
call memcpy  +
add esp 0Ch +
push edi  +
call ds:LocalFree  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_4156BE  +
test [ebp+arg_0] 1 +
jz loc_415BD9  +
push esi  +
call sub_4092A2  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_415BFC  +
cmp edx 7FFFFFFFh +
jbe loc_415C01  +
mov eax 80070057h +
test eax eax +
jl loc_415C17  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_4091D4  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+10h] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor esi esi +
mov [ebp-3Ch] eax +
cmp edi esi +
jz loc_415E07  +
cmp eax esi +
jz loc_415E07  +
push edi  +
xor ebx ebx +
call ds:lstrlenW  +
test eax eax +
jle loc_415C70  +
cmp word ptr [edi+esi*2] 5Ch +
jz loc_415CD2  +
push edi  +
inc esi  +
call ds:lstrlenW  +
cmp esi eax +
jl loc_415C5D  +
mov esi ebx +
push 4  +
lea eax [edi+esi*2] +
push offset aCom_  +
push eax  +
mov [ebp-38h] eax +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_415D45  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-24h] +
push eax  +
mov dword ptr [ebp-2Ch] 10h +
call ds:GetComputerNameW  +
test eax eax +
jnz loc_415D1E  +
test ebx ebx +
jz loc_415CB5  +
push ebx  +
call sub_4092A2  +
pop ecx  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_415E0C  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_415E0C  +
inc esi  +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_415CFA  +
mov eax 8007000Eh +
jmp loc_415E0C  +
lea eax [esi-1] +
push eax  +
push edi  +
push esi  +
push ebx  +
call sub_41566F  +
test eax eax +
jge loc_415C72  +
mov esi eax +
push ebx  +
call sub_4092A2  +
pop ecx  +
mov eax esi +
jmp loc_415E0C  +
lea eax [ebp-24h] +
push eax  +
lea eax [edi+esi*2+8] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_415D45  +
test ebx ebx +
jz loc_415D3E  +
push ebx  +
call sub_4092A2  +
pop ecx  +
xor eax eax +
jmp loc_415E0C  +
xor esi esi +
cmp ebx esi +
jnz loc_415DE5  +
push 10h  +
pop eax  +
xor ecx ecx +
push 2  +
pop edx  +
mov [ebp-30h] eax +
mul  edx +
seto cl  +
mov [ebp-28h] esi +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
mov ebx eax +
pop ecx  +
cmp ebx esi +
jz loc_415CF0  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
push ebx  +
lea eax [ebp-28h] +
push eax  +
push esi  +
push edi  +
push esi  +
mov esi ds:LookupAccountNameW +
call esi  +
push dword ptr [ebp-28h]  +
call sub_40928D  +
pop ecx  +
mov [ebp-2Ch] eax +
test eax eax +
jnz loc_415DA9  +
mov esi 8007000Eh +
jmp loc_415D10  +
***
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-30h] +
push ecx  +
push ebx  +
lea ecx [ebp-28h] +
push ecx  +
push eax  +
push edi  +
push 0  +
mov dword ptr [ebp-30h] 10h +
call esi  +
test eax eax +
jnz loc_415DDC  +
push ebx  +
call sub_4092A2  +
push dword ptr [ebp-2Ch]  +
call sub_4092A2  +
pop ecx  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_415E0C  +
push dword ptr [ebp-2Ch]  +
call sub_4092A2  +
pop ecx  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-38h]  +
push ebx  +
call sub_419519  +
mov esi eax +
test ebx ebx +
jz loc_415DFE  +
push ebx  +
call sub_4092A2  +
pop ecx  +
xor eax eax +
test esi esi +
setz al  +
jmp loc_415E0C  +
mov eax 80004003h +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+rguid] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov [eax] ebx +
push 28h  +
lea eax [ebp+sz] +
push eax  +
push ecx  +
mov [ebp+pv] ebx +
mov [esi] ebx +
call ds:StringFromGUID2  +
cmp eax ebx +
jl loc_415E79  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+sz] +
push eax  +
push edi  +
call sub_4193CB  +
cmp eax 80070002h +
jnz loc_415E8A  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 10h  +
cmp eax ebx +
jl loc_415E79  +
push [ebp+pv]  +
call ds:lstrlenW  +
lea edi [eax+eax+2] +
push edi  +
call ds:CoTaskMemAlloc  +
mov [esi] eax +
cmp eax ebx +
jnz loc_415ED1  +
push ebx  +
call ds:CoTaskMemFree  +
mov ecx [ebp+var_5C] +
mov eax [ebp+pv] +
cmp ecx ebx +
jz loc_415EBF  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_415EB9  +
mov esi 8007000Eh +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax esi +
jmp loc_415E79  +
push [ebp+pv]  +
push edi  +
push eax  +
call sub_415BE5  +
push [ebp+var_5C]  +
mov esi eax +
push ebx  +
push [ebp+pv]  +
call memset  +
add esp 0Ch +
jmp loc_415EC4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+10h]  +
push offset aScm  +
push dword ptr [ebp+0Ch]  +
call sub_415E22  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+10h]  +
push offset aMtx  +
push dword ptr [ebp+0Ch]  +
call sub_415E22  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+4]  +
mov eax [ecx+4] +
jnz loc_415F54  +
push 1  +
call sub_415BBF  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi ds:CoCreateInstance +
xor eax eax +
lea ecx [esi+8] +
push ecx  +
push offset stru_401688  +
push 1  +
push eax  +
mov ebx offset stru_4022FC +
push ebx  +
mov dword ptr [esi] offset off_407F24 +
mov [esi+4] eax +
mov [ecx] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
call edi  +
lea eax [esi+0Ch] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
lea eax [esi+10h] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
lea eax [esi+14h] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
lea eax [esi+18h] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
lea eax [esi+1Ch] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
lea eax [esi+20h] +
push eax  +
push offset stru_401688  +
push 1  +
push 0  +
push ebx  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
call __EH_prolog3  +
mov edi [ebp+0Ch] +
and dword ptr [edi] 0 +
push 24h  +
call sub_40928D  +
pop ecx  +
mov ecx eax +
mov [ebp+0Ch] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_416038  +
call sub_415F5D  +
mov esi eax +
jmp loc_41603A  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jnz loc_416049  +
mov eax 8007000Eh +
jmp loc_416063  +
mov eax [esi] +
push edi  +
push dword ptr [ebp+8]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jge loc_416061  +
push 1  +
mov ecx esi +
call sub_415BBF  +
mov eax edi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_416099  +
cmp eax esi +
ja loc_416099  +
jz loc_41609E  +
jmp loc_4160A6  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_4160AF  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_423170 +
mov ecx [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_240] ecx +
cmp eax ebx +
jz loc_4160F0  +
mov [ecx] eax +
xor eax eax +
jmp loc_41622B  +
push esi  +
push 20h  +
mov [ecx] ebx +
mov [ebp+cbName] ebx +
mov [ebp+cbReferencedDomainName] ebx +
call sub_40928D  +
mov esi eax +
pop ecx  +
cmp esi ebx +
jnz loc_416117  +
mov eax 8007000Eh +
jmp loc_41622A  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 20h  +
push 1  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_41620F  +
mov edi ds:LookupAccountSidW +
push ebx  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
push ebx  +
lea eax [ebp+cbName] +
push eax  +
push ebx  +
push [ebp+pSid]  +
push ebx  +
call edi  +
cmp [ebp+cbName] ebx +
jz loc_416201  +
cmp [ebp+cbName] 111h +
ja loc_416201  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
push esi  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call edi  +
test eax eax +
jz loc_41620F  +
push [ebp+pSid]  +
call ds:FreeSid  +
push ebx  +
push esi  +
push offset dword_423170  +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jz loc_4161F0  +
push esi  +
call sub_4092A2  +
pop ecx  +
mov eax dword_423170 +
mov ecx [ebp+var_240] +
mov [ecx] eax +
xor eax eax +
jmp loc_41622A  +
push esi  +
call sub_4092A2  +
pop ecx  +
mov eax 8000FFFFh +
jmp loc_41622A  +
push esi  +
call sub_4092A2  +
pop ecx  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_41622A  +
and eax 0FFFFh +
or eax 80070000h +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
xor eax eax +
xor esi esi +
mov [ebp+ObjectAttributes.Length] esi +
lea edi [ebp+ObjectAttributes.RootDirectory] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
push 1  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push esi  +
mov [ebp+ObjectHandle] esi +
mov [ebx] esi +
call LsaOpenPolicy  +
cmp eax esi +
jz loc_416279  +
or eax 10000000h +
jmp loc_4162EC  +
lea eax [ebp+Buffer] +
push eax  +
push 5  +
push [ebp+ObjectHandle]  +
call LsaQueryInformationPolicy  +
mov edi eax +
cmp edi esi +
jz loc_416299  +
push [ebp+ObjectHandle]  +
call LsaClose  +
mov eax edi +
jmp loc_416272  +
mov eax [ebp+Buffer] +
movzx esi word ptr [eax] +
shr esi 1 +
xor ecx ecx +
push 2  +
pop edx  +
lea eax [esi+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_4162DA  +
mov eax [ebp+Buffer] +
movzx ecx word ptr [eax] +
push ecx  +
push dword ptr [eax+4]  +
push edi  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov [edi+esi*2] ax +
mov [ebx] edi +
push [ebp+Buffer]  +
call LsaFreeMemory  +
push [ebp+ObjectHandle]  +
call LsaClose  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_416308  +
xor eax eax +
inc eax  +
jmp loc_416336  +
and [ebp+pv] 0 +
push ebx  +
lea ebx [ebp+pv] +
call sub_416240  +
push 0  +
push [ebp+pv]  +
push esi  +
call ds:__imp_InterlockedCompareExchange  +
pop ebx  +
test eax eax +
jz loc_41632F  +
push [ebp+pv]  +
call sub_4092A2  +
pop ecx  +
xor eax eax +
cmp [esi] eax +
setnz al  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_416355  +
cmp ecx 7FFFFFFFh +
jbe loc_41635A  +
mov eax 80070057h +
test eax eax +
jl loc_416373  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax ecx +
push 0  +
call sub_416070  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword ptr [ebp+arg_0] +
push esi  +
push ecx  +
push eax  +
push offset aSS  +
lea eax [ebp+AccountName] +
xor esi esi +
push 111h  +
push eax  +
mov [ebp+cbSid] esi +
mov [ebp+cbReferencedDomainName] esi +
call sub_413E9B  +
add esp 14h +
test eax eax +
jge loc_4163C4  +
xor eax eax +
jmp loc_4163FB  +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
push esi  +
lea eax [ebp+cbSid] +
push eax  +
push esi  +
lea eax [ebp+AccountName] +
push eax  +
push esi  +
call ds:LookupAccountNameW  +
test eax eax +
jnz loc_4163F8  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_4163C0  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_412CC0  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 460h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor eax eax +
mov esi 220h +
push esi  +
push eax  +
mov [ebp-228h] ax +
lea eax [ebp-226h] +
push eax  +
mov [ebp-458h] ebx +
call memset  +
xor eax eax +
push esi  +
push eax  +
mov [ebp-44Ch] ax +
lea eax [ebp-44Ah] +
push eax  +
call memset  +
and dword ptr [ebx] 0 +
add esp 18h +
mov ecx offset dword_423174 +
call sub_4162F5  +
test eax eax +
jnz loc_416484  +
mov eax 8000FFFFh +
jmp loc_416893  +
mov ebx ds:lstrlenW +
push edi  +
call ebx  +
mov esi 111h +
cmp eax esi +
jl loc_4164A0  +
mov eax 80070057h +
jmp loc_416893  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_416511  +
and dword ptr [ebp-450h] 0 +
lea eax [ebp-450h] +
push eax  +
push edi  +
call ConvertStringSidToSidW  +
test eax eax +
jz loc_416511  +
push dword ptr [ebp-450h]  +
call ds:LocalFree  +
push edi  +
call ebx  +
lea esi [eax+eax+2] +
push esi  +
call ds:CoTaskMemAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_4164E8  +
mov eax 8007000Eh +
jmp loc_416893  +
push edi  +
push esi  +
push ebx  +
call sub_415BE5  +
mov esi eax +
test esi esi +
jge loc_416502  +
push ebx  +
call ds:CoTaskMemFree  +
jmp loc_416891  +
mov eax [ebp-458h] +
mov [eax] ebx +
xor eax eax +
jmp loc_416893  +
and dword ptr [ebp-450h] 0 +
push edi  +
call ebx  +
test eax eax +
jle loc_416595  +
mov eax [ebp-450h] +
movzx eax word ptr [edi+eax*2] +
cmp ax 5Ch +
jz loc_416535  +
cmp ax 2Fh +
jnz loc_416584  +
mov ecx [ebp-450h] +
movzx ebx ax +
xor eax eax +
push edi  +
mov [edi+ecx*2] ax +
push esi  +
lea eax [ebp-228h] +
push eax  +
call sub_409CFE  +
mov ecx [ebp-450h] +
mov [edi+ecx*2] bx +
test eax eax +
jl loc_416893  +
lea eax [edi+ecx*2+2] +
push eax  +
push esi  +
lea eax [ebp-44Ch] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416893  +
mov ebx ds:lstrlenW +
inc dword ptr [ebp-450h]  +
push edi  +
call ebx  +
cmp [ebp-450h] eax +
jl loc_41651F  +
xor eax eax +
cmp [ebp-228h] ax +
jnz loc_4166BF  +
cmp [ebp-44Ch] ax +
jnz loc_4165D3  +
push edi  +
call ebx  +
cmp eax 100h +
jg loc_416496  +
push edi  +
push esi  +
lea eax [ebp-44Ch] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416893  +
xor eax eax +
mov edi ds:LookupAccountNameW +
lea ecx [ebp-45Ch] +
push ecx  +
lea ecx [ebp-454h] +
push ecx  +
lea ecx [ebp-228h] +
push ecx  +
lea ecx [ebp-450h] +
push ecx  +
push eax  +
lea ecx [ebp-44Ch] +
push ecx  +
push eax  +
mov [ebp-450h] eax +
mov dword ptr [ebp-454h] 10h +
call edi  +
test eax eax +
jnz loc_4167E6  +
push dword ptr [ebp-450h]  +
call ds:CoTaskMemAlloc  +
mov [ebp-460h] eax +
test eax eax +
jz loc_4164DE  +
lea ecx [ebp-45Ch] +
push ecx  +
lea ecx [ebp-454h] +
push ecx  +
lea ecx [ebp-228h] +
push ecx  +
lea ecx [ebp-450h] +
push ecx  +
push eax  +
lea eax [ebp-44Ch] +
push eax  +
push 0  +
call edi  +
push dword ptr [ebp-460h]  +
mov edi eax +
call ds:CoTaskMemFree  +
cmp dword ptr [ebp+14h] 0 +
jz loc_416693  +
test edi edi +
jnz loc_4167E6  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_416893  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_416893  +
test edi edi +
jz loc_4166A5  +
cmp word ptr [ebp-228h] 0 +
jz loc_4167E6  +
push offset a_  +
push esi  +
lea eax [ebp-228h] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416893  +
mov edi ds:_wcsicmp +
lea eax [ebp-228h] +
push offset a_  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_416769  +
and [ebp-454h] eax +
lea eax [ebp-454h] +
push eax  +
call sub_4160BC  +
test eax eax +
jl loc_416893  +
push dword ptr [ebp-454h]  +
lea eax [ebp-228h] +
push esi  +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416893  +
lea eax [ebp-228h] +
push eax  +
lea ecx [ebp-44Ch] +
call sub_41637A  +
test eax eax +
jnz loc_416803  +
cmp [ebp+14h] eax +
jz loc_41674A  +
push dword_423174  +
lea ecx [ebp-44Ch] +
call sub_41637A  +
test eax eax +
jz loc_416676  +
push offset a_  +
push esi  +
lea eax [ebp-228h] +
push eax  +
call sub_409CFE  +
test eax eax +
jge loc_416803  +
jmp loc_416893  +
lea eax [ebp-228h] +
push eax  +
lea ecx [ebp-44Ch] +
call sub_41637A  +
test eax eax +
jnz loc_4167E6  +
push dword_423174  +
lea eax [ebp-228h] +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_416868  +
and [ebp-450h] eax +
lea eax [ebp-450h] +
push eax  +
call sub_4160BC  +
test eax eax +
jl loc_416893  +
push dword ptr [ebp-450h]  +
lea ecx [ebp-44Ch] +
call sub_41637A  +
test eax eax +
jz loc_41685D  +
push dword ptr [ebp-450h]  +
lea eax [ebp-228h] +
push esi  +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416893  +
push dword_423174  +
lea eax [ebp-228h] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41674A  +
lea eax [ebp-44Ch] +
push eax  +
call ebx  +
mov esi eax +
lea eax [ebp-228h] +
push eax  +
call ebx  +
add esi eax +
lea esi [esi+esi+4] +
push esi  +
call ds:CoTaskMemAlloc  +
mov edi [ebp-458h] +
mov [edi] eax +
test eax eax +
jz loc_4164DE  +
cmp word ptr [ebp-228h] 0 +
lea ecx [ebp-44Ch] +
push ecx  +
jz loc_416879  +
lea ecx [ebp-228h] +
push ecx  +
push offset aSS_0  +
push esi  +
push eax  +
call sub_41633E  +
add esp 14h +
jmp loc_416880  +
cmp dword ptr [ebp+14h] 0 +
jz loc_4167E6  +
jmp loc_416676  +
***
cmp dword ptr [ebp+14h] 0 +
jz loc_4167E6  +
mov eax 80070534h +
jmp loc_416893  +
push esi  +
push eax  +
call sub_415BE5  +
mov esi eax +
test esi esi +
jge loc_416891  +
push dword ptr [edi]  +
call ds:CoTaskMemFree  +
and dword ptr [edi] 0 +
mov eax esi +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 458h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor eax eax +
mov esi 220h +
push esi  +
push eax  +
mov [ebp-228h] ax +
lea eax [ebp-226h] +
push eax  +
mov [ebp-454h] ebx +
call memset  +
xor eax eax +
push esi  +
push eax  +
mov [ebp-44Ch] ax +
lea eax [ebp-44Ah] +
push eax  +
call memset  +
and dword ptr [ebx] 0 +
mov ebx ds:lstrlenW +
add esp 18h +
push edi  +
call ebx  +
mov esi 111h +
cmp eax esi +
jl loc_416922  +
mov eax 80070057h +
jmp loc_416ABD  +
and dword ptr [ebp-450h] 0 +
push edi  +
call ebx  +
test eax eax +
jle loc_4169A7  +
mov ecx [ebp-450h] +
movzx eax word ptr [edi+ecx*2] +
cmp ax 5Ch +
jz loc_416946  +
cmp ax 2Fh +
jnz loc_416996  +
movzx eax ax +
mov [ebp-458h] eax +
xor eax eax +
push edi  +
mov [edi+ecx*2] ax +
push esi  +
lea eax [ebp-228h] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416ABD  +
mov cx [ebp-458h] +
mov eax [ebp-450h] +
mov [edi+eax*2] cx +
lea eax [edi+eax*2+2] +
push eax  +
push esi  +
lea eax [ebp-44Ch] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416ABD  +
inc dword ptr [ebp-450h]  +
push edi  +
call ebx  +
cmp [ebp-450h] eax +
jl loc_416930  +
cmp word ptr [ebp-228h] 0 +
jnz loc_4169C7  +
push edi  +
push esi  +
lea eax [ebp-44Ch] +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416ABD  +
mov ecx offset dword_423174 +
call sub_4162F5  +
test eax eax +
jnz loc_4169DF  +
mov eax 8000FFFFh +
jmp loc_416ABD  +
and dword ptr [ebp-450h] 0 +
lea eax [ebp-450h] +
push eax  +
call sub_4160BC  +
test eax eax +
jl loc_416ABD  +
mov edi ds:_wcsicmp +
lea eax [ebp-228h] +
push offset a_  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_416A2F  +
cmp dword ptr [ebp+14h] 0 +
jz loc_416A46  +
push dword ptr [ebp-450h]  +
lea eax [ebp-228h] +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_416A46  +
push dword_423174  +
lea eax [ebp-228h] +
push esi  +
push eax  +
call sub_409CFE  +
test eax eax +
jl loc_416ABD  +
lea eax [ebp-44Ch] +
push eax  +
call ebx  +
mov esi eax +
lea eax [ebp-228h] +
push eax  +
call ebx  +
add esi eax +
lea esi [esi+esi+4] +
push esi  +
call ds:CoTaskMemAlloc  +
mov ebx [ebp-454h] +
mov [ebx] eax +
test eax eax +
jnz loc_416A7A  +
mov eax 8007000Eh +
jmp loc_416ABD  +
cmp word ptr [ebp-228h] 0 +
lea ecx [ebp-44Ch] +
push ecx  +
jz loc_416AA3  +
lea ecx [ebp-228h] +
push ecx  +
push offset aSS  +
push esi  +
push eax  +
call sub_41633E  +
add esp 14h +
jmp loc_416AAA  +
push esi  +
push eax  +
call sub_415BE5  +
mov esi eax +
test esi esi +
jge loc_416ABB  +
push dword ptr [ebx]  +
call ds:CoTaskMemFree  +
and dword ptr [ebx] 0 +
mov eax esi +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_416AED  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_416AF8  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
mov edi ds:BuildTrusteeWithNameW +
mov ebx offset pName +
push ebx  +
lea eax [ebp+pOwner] +
xor esi esi +
push eax  +
mov [ebp+var_14] ecx +
mov [ebp+hMem] esi +
call edi  +
push ebx  +
lea eax [ebp+pGroup] +
push eax  +
call edi  +
push 2  +
pop ebx  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+pSizeNewSD] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+pGroup] +
push eax  +
lea eax [ebp+pOwner] +
push eax  +
mov [ebp+pGroup.TrusteeType] ebx +
call ds:BuildSecurityDescriptorW  +
cmp eax esi +
jz loc_416B67  +
jle loc_416C90  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_416C90  +
push 4  +
push 8  +
lea eax [ebp+pAcl] +
push eax  +
call ds:InitializeAcl  +
lea eax [ebp+uBytes] +
push eax  +
push 8  +
push [ebp+pSizeNewSD]  +
call sub_416AD3  +
cmp eax esi +
jl loc_416C90  +
push esi  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
call sub_415B69  +
cmp eax esi +
jnz loc_416BAE  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax 8007000Eh +
jmp loc_416C90  +
mov edx [ebp+pSizeNewSD] +
mov ecx dword ptr [ebp+pAcl.AclRevision] +
mov [ebp+hMem] eax +
mov [eax+edx] ecx +
mov edx [ebp+pSizeNewSD] +
mov ecx dword ptr [ebp+pAcl.AceCount] +
mov [eax+edx+4] ecx +
mov eax [ebp+pSizeNewSD] +
mov ecx [ebp+hMem] +
mov [ecx+10h] eax +
mov ecx [ebp+var_14] +
add [ebp+pSizeNewSD] 8 +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
push 1  +
push esi  +
push esi  +
push offset nullsub_2  +
push offset dword_40225C  +
push dword ptr [ecx+0Ch]  +
mov [ebp+var_4] esi +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
push [ebp+arg_4]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push 1  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
push [ebp+hMem]  +
mov eax [ebp+var_4] +
push [ebp+pSizeNewSD]  +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
cmp edi esi +
jl loc_416C73  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
cmp [ebp+hMem] esi +
jz loc_416C81  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_416C8E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
mov edi ds:lstrlenW +
mov [ebp+var_30] eax +
xor eax eax +
xor ebx ebx +
inc ebx  +
push esi  +
mov [ebp+var_8] ecx +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] 48h +
mov [ebp+var_20] 10h +
mov [ebp+var_1C] esi +
mov [ebp+var_18] eax +
mov [ebp+var_14] ebx +
mov [ebp+var_10] 82h +
call edi  +
and [ebp+var_54] 0 +
lea eax [eax+eax+2] +
push esi  +
mov [ebp+var_C] eax +
mov [ebp+var_58] esi +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] 82h +
call edi  +
and [ebp+var_40] 0 +
and [ebp+lpString] 0 +
push 2  +
lea eax [eax+eax+2] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_44] eax +
pop eax  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+var_8] +
mov edi 20000h +
push edi  +
push ebx  +
push eax  +
mov [ebp+var_3C] eax +
lea eax [ebp+var_30] +
push eax  +
push offset nullsub_2  +
mov esi offset dword_40225C +
push esi  +
push dword ptr [ecx+0Ch]  +
mov [ebp+var_38] 48h +
mov [ebp+var_34] 10h +
call sub_415B3D  +
test eax eax +
jl loc_416E1F  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov ecx [ebp+var_8] +
lea eax [ebp+lpString] +
push eax  +
push edi  +
push ebx  +
push 2  +
lea eax [ebp+var_58] +
push eax  +
push offset nullsub_3  +
push esi  +
push dword ptr [ecx+10h]  +
call sub_415B3D  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_416E02  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_416E02  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_416DD9  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+arg_0] eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_416E0F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+lpString] +
test eax eax +
jz loc_416E1C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 48h  +
pop edx  +
push 10h  +
mov esi ecx +
pop ecx  +
mov [ebp+var_58] eax +
mov [ebp+var_6C] eax +
lea eax [ebp+var_1C] +
push eax  +
push 20001h  +
push 1  +
push 1  +
lea eax [ebp+var_58] +
push eax  +
xor ebx ebx +
push offset nullsub_2  +
mov edi offset dword_40225C +
push edi  +
push dword ptr [esi+8]  +
mov [ebp+var_48] ecx +
mov [ebp+var_5C] ecx +
mov ecx esi +
mov [ebp+uBytes] esi +
mov [ebp+var_54] ebx +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] edx +
mov [ebp+var_68] ebx +
mov [ebp+var_64] ebx +
mov [ebp+var_60] edx +
mov [ebp+var_1C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+pv] ebx +
mov [ebp+var_2C] 8 +
mov [ebp+hMem] ebx +
call sub_415B3D  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_401688  +
push 1  +
push ebx  +
push offset stru_4022FC  +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov ecx [ebp+uBytes] +
lea eax [ebp+var_14] +
push eax  +
push 20000h  +
push 1  +
push 1  +
lea eax [ebp+var_6C] +
push eax  +
push offset dword_4022EC  +
push edi  +
push [ebp+ppv]  +
call sub_415B3D  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov [ebp+var_34] ebx +
jmp loc_416FE5  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
inc [ebp+var_34]  +
lea edx [ebp+pSecurityDescriptor] +
push edx  +
push ebx  +
push ebx  +
push 2  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
cmp [ebp+pSecurityDescriptor] ebx +
jz loc_41715A  +
lea eax [ebp+bDaclDefaulted] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+bDaclPresent] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_417144  +
cmp [ebp+bDaclPresent] ebx +
jz loc_416FE5  +
mov eax [ebp+pDacl] +
cmp eax ebx +
jz loc_416FE5  +
cmp [ebp+pv] ebx +
jnz loc_416FC4  +
movzx eax word ptr [eax+2] +
mov ecx [ebp+var_2C] +
lea eax [ecx+eax-8] +
mov [ebp+var_2C] eax +
jmp loc_416FE5  +
movzx ecx word ptr [eax+2] +
sub ecx 8 +
push ecx  +
add eax 8 +
push eax  +
push 0FFFFFFFFh  +
push 2  +
push [ebp+pv]  +
call ds:AddAce  +
test eax eax +
jz loc_417144  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_416F5F  +
cmp [ebp+pv] ebx +
jnz loc_417090  +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 12h  +
push 1  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_417144  +
cmp [ebp+pSid] ebx +
jz loc_41715A  +
push [ebp+pSid]  +
call ds:GetLengthSid  +
mov ecx [ebp+var_2C] +
lea esi [ecx+eax+8] +
push esi  +
mov [ebp+var_2C] esi +
call sub_40928D  +
mov edi eax +
pop ecx  +
mov [ebp+pv] edi +
cmp edi ebx +
jz loc_41713A  +
push 2  +
push esi  +
push edi  +
call ds:InitializeAcl  +
push [ebp+pSid]  +
push 1  +
push 2  +
push edi  +
call ds:AddAccessAllowedAce  +
push [ebp+pSid]  +
call ds:FreeSid  +
cmp [ebp+var_34] ebx +
jnz loc_416F44  +
mov esi ds:BuildTrusteeWithNameW +
mov edi offset pName +
push edi  +
lea eax [ebp+pOwner] +
push eax  +
call esi  +
push edi  +
lea eax [ebp+pGroup] +
push eax  +
call esi  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+pSizeNewSD] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+pGroup] +
push eax  +
lea eax [ebp+pOwner] +
push eax  +
mov [ebp+pGroup.TrusteeType] 2 +
call ds:BuildSecurityDescriptorW  +
test eax eax +
jnz loc_417144  +
mov ecx [ebp+uBytes] +
lea eax [ebp+var_30] +
push eax  +
push [ebp+pv]  +
mov [ebp+var_30] ebx +
call sub_419647  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
cmp [ebp+var_30] ebx +
jz loc_4171CE  +
push [ebp+pv]  +
call sub_4092A2  +
mov eax [ebp+var_30] +
movzx edi word ptr [eax+2] +
pop ecx  +
mov [ebp+pv] eax +
lea eax [ebp+uBytes] +
push eax  +
push edi  +
push [ebp+pSizeNewSD]  +
call sub_416AD3  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
push ebx  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
call sub_415B69  +
cmp eax ebx +
jnz loc_417161  +
mov esi 8007000Eh +
jmp loc_4171CE  +
call ds:__imp_GetLastError  +
cmp eax ebx +
jle loc_4171CC  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_4171CC  +
mov esi 8000FFFFh +
jmp loc_4171CE  +
mov ecx [ebp+pSizeNewSD] +
push edi  +
push [ebp+pv]  +
add ecx eax +
push ecx  +
mov [ebp+hMem] eax +
call memcpy  +
mov ecx [ebp+pSizeNewSD] +
mov eax [ebp+hMem] +
mov [eax+10h] ecx +
mov eax [ebp+hMem] +
mov ecx 0FFEFh +
and [eax+2] cx +
mov eax [ebp+var_14] +
add [ebp+pSizeNewSD] edi +
mov ecx [eax] +
add esp 0Ch +
push eax  +
call dword ptr [ecx+40h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
push [ebp+hMem]  +
mov eax [ebp+var_14] +
push [ebp+pSizeNewSD]  +
mov ecx [eax] +
push 17h  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov esi eax +
cmp esi ebx +
jl loc_4171CE  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov esi eax +
cmp [ebp+hMem] ebx +
jz loc_4171DC  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+pv] ebx +
jz loc_4171EA  +
push [ebp+pv]  +
call sub_4092A2  +
pop ecx  +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_4171F7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_417204  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push esi  +
push [ebp+arg_0]  +
call ds:IsWellKnownSid  +
test eax eax +
jnz loc_41723D  +
inc esi  +
cmp esi 3Ch +
jbe loc_417224  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_417238  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
mov ecx [ebx] +
push esi  +
push edi  +
mov esi offset dword_40230C +
lea edi [ebp+var_14] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
movs   +
lea edx [ebp+var_1C] +
push edx  +
mov [ebp+var_24] eax +
xor eax eax +
push eax  +
push eax  +
movs   +
push eax  +
push ebx  +
mov [ebp+var_1C] eax +
movs   +
mov [ebp+var_18] eax +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_41731B  +
mov esi [ebp+var_1C] +
test esi esi +
jnz loc_4172A2  +
mov eax 8000FFFFh +
jmp loc_41731B  +
mov eax [ebx] +
lea edi [ebp+var_14] +
movs   +
movs   +
lea ecx [ebp+var_18] +
push ecx  +
push 0  +
push 0  +
movs   +
push 1  +
push ebx  +
movs   +
call dword ptr [eax+20h]  +
xor esi esi +
cmp eax esi +
jl loc_41731B  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+44h]  +
cmp eax esi +
jl loc_41731B  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+3Ch]  +
cmp eax esi +
jl loc_41731B  +
mov eax [ebx] +
lea ecx [ebp+var_14] +
push ecx  +
push esi  +
push esi  +
push ebx  +
call dword ptr [eax+50h]  +
cmp eax esi +
jl loc_41731B  +
push [ebp+var_18]  +
mov eax [ebx] +
push esi  +
push 1  +
push ebx  +
call dword ptr [eax+50h]  +
cmp eax esi +
jl loc_41731B  +
push [ebp+var_20]  +
mov eax [ebx] +
push esi  +
push 2  +
push ebx  +
call dword ptr [eax+50h]  +
cmp eax esi +
jl loc_41731B  +
push [ebp+var_24]  +
mov eax [ebx] +
push [ebp+arg_8]  +
push 3  +
push ebx  +
call dword ptr [eax+50h]  +
cmp eax esi +
jl loc_41731B  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+48h]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_D0] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi ds:LookupAccountNameW +
mov [ebp+var_C4] eax +
mov eax [ebp+arg_14] +
and dword ptr [eax] 0 +
push 40h  +
mov [ebp+var_E8] eax +
pop ebx  +
lea eax [ebp+var_EC] +
push eax  +
lea eax [ebp+var_C0] +
push eax  +
lea eax [ebp+var_64] +
push eax  +
lea eax [ebp+cb] +
mov [ebp+var_D4] ecx +
lea ecx [ebp+var_A4] +
push eax  +
mov eax ecx +
mov [ebp+var_B8] 1 +
mov [ebp+pv] ecx +
mov [ebp+var_C0] 10h +
mov [ebp+cb] ebx +
push eax  +
jmp loc_417412  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_417428  +
cmp [ebp+var_C0] 10h +
ja loc_417420  +
cmp [ebp+cb] ebx +
jbe loc_417420  +
push [ebp+cb]  +
call sub_40928D  +
pop ecx  +
mov [ebp+pv] eax +
test eax eax +
jz loc_417868  +
lea eax [ebp+var_EC] +
push eax  +
lea eax [ebp+var_C0] +
push eax  +
lea eax [ebp+var_64] +
push eax  +
lea eax [ebp+cb] +
push eax  +
push [ebp+pv]  +
push esi  +
push 0  +
call edi  +
test eax eax +
jz loc_4173BD  +
jmp loc_4176FC  +
xor eax eax +
inc eax  +
jmp loc_417888  +
cmp eax 534h +
jnz loc_417868  +
mov ebx ds:lstrlenW +
push esi  +
call ebx  +
inc eax  +
mov [ebp+hMem] 0 +
jz loc_417492  +
lea edi [ebp+var_24] +
mov ecx esi +
sub edi esi +
cmp [ebp+hMem] 0Fh +
ja loc_417868  +
movzx edx word ptr [ecx] +
test dx dx +
jz loc_417868  +
cmp dx 5Ch +
jz loc_417485  +
inc [ebp+hMem]  +
mov [edi+ecx] dx +
inc ecx  +
inc ecx  +
cmp [ebp+hMem] eax +
jb loc_417450  +
jmp loc_417492  +
mov ecx [ebp+hMem] +
xor eax eax +
mov [ebp+ecx*2+var_24] ax +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
test eax eax +
jz loc_4174D0  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4174D0  +
and [ebp+var_B8] eax +
jmp loc_417868  +
lea eax [ebp+var_C8] +
push eax  +
push 10000h  +
xor eax eax +
push eax  +
push eax  +
lea ecx [ebp+var_24] +
push ecx  +
push eax  +
call DsGetDcNameW  +
test eax eax +
jnz loc_417868  +
lea edi [ebp+ObjectAttributes.RootDirectory] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_FC] +
mov [ebp+ObjectAttributes.SecurityQualityOfService] eax +
mov eax [ebp+var_C8] +
mov [ebp+var_FC] 0Ch +
mov [ebp+var_F8] 2 +
mov [ebp+var_F4] 1 +
mov [ebp+var_F3] 0 +
mov [ebp+ObjectAttributes.Length] 18h +
mov eax [eax] +
push eax  +
mov [ebp+SystemName.Buffer] eax +
call ebx  +
add eax eax +
mov [ebp+SystemName.Length] ax +
mov eax dword ptr [ebp+SystemName.Length] +
add eax 2 +
mov [ebp+SystemName.MaximumLength] ax +
lea eax [ebp+ObjectHandle] +
push eax  +
push 800h  +
lea eax [ebp+ObjectAttributes] +
push eax  +
lea eax [ebp+SystemName] +
push eax  +
call LsaOpenPolicy  +
push [ebp+var_C8]  +
mov edi eax +
call NetApiBufferFree  +
test edi edi +
jnz loc_417868  +
and [ebp+ReferencedDomains] edi +
and [ebp+Sids] edi +
push esi  +
mov [ebp+Names.Buffer] esi +
call ebx  +
add eax eax +
mov [ebp+Names.Length] ax +
mov eax dword ptr [ebp+Names.Length] +
add eax 2 +
mov [ebp+Names.MaximumLength] ax +
lea eax [ebp+Sids] +
push eax  +
lea eax [ebp+ReferencedDomains] +
push eax  +
lea eax [ebp+Names] +
push eax  +
push 1  +
push [ebp+ObjectHandle]  +
call LsaLookupNames  +
push [ebp+ObjectHandle]  +
mov esi eax +
call LsaClose  +
cmp esi edi +
jz loc_417626  +
cmp [ebp+ReferencedDomains] edi +
jz loc_417608  +
push [ebp+ReferencedDomains]  +
call LsaFreeMemory  +
cmp [ebp+Sids] edi +
jz loc_41761B  +
push [ebp+Sids]  +
call LsaFreeMemory  +
mov [ebp+var_B8] edi +
jmp loc_417868  +
mov eax [ebp+Sids] +
mov eax [eax+8] +
mov ecx [ebp+ReferencedDomains] +
imul eax eax +
mov ecx [ecx+4] +
mov esi [eax+ecx+8] +
mov edi ds:GetSidSubAuthorityCount +
push esi  +
call edi  +
mov bl [eax] +
mov eax [ebp+Sids] +
cmp dword ptr [eax] 3 +
mov byte ptr [ebp+hMem] bl +
jz loc_417663  +
inc bl  +
mov byte ptr [ebp+hMem] bl +
push [ebp+hMem]  +
call ds:GetSidLengthRequired  +
mov [ebp+cb] eax +
cmp eax 40h +
jbe loc_4176A6  +
push eax  +
call sub_40928D  +
pop ecx  +
mov [ebp+pv] eax +
test eax eax +
jnz loc_4176A6  +
push [ebp+ReferencedDomains]  +
call LsaFreeMemory  +
push [ebp+Sids]  +
call LsaFreeMemory  +
jmp loc_417868  +
push esi  +
push [ebp+pv]  +
push [ebp+cb]  +
call ds:CopySid  +
push [ebp+pv]  +
call edi  +
mov [eax] bl +
mov eax [ebp+Sids] +
cmp dword ptr [eax] 3 +
jz loc_4176E6  +
lea esi [eax+4] +
movzx eax bl +
dec eax  +
push eax  +
push [ebp+pv]  +
call ds:GetSidSubAuthority  +
mov ecx [esi] +
mov [eax] ecx +
push [ebp+ReferencedDomains]  +
call LsaFreeMemory  +
push [ebp+Sids]  +
call LsaFreeMemory  +
xor ebx ebx +
cmp dword_42316C ebx +
jz loc_417709  +
mov [ebp+arg_8] ebx +
mov edi [ebp+pv] +
push edi  +
call ds:GetSidSubAuthorityCount  +
movzx eax byte ptr [eax] +
push eax  +
call ds:GetSidLengthRequired  +
mov [ebp+cb] eax +
cmp [ebp+arg_8] ebx +
jz loc_417750  +
cmp eax [ebp+arg_C] +
jnz loc_417745  +
mov edi [ebp+arg_8] +
mov esi [ebp+pv] +
mov ecx eax +
xor eax eax +
cmps   +
jz loc_41783B  +
mov [ebp+var_B8] ebx +
jmp loc_417868  +
mov ecx [ebp+var_D4] +
push edi  +
call sub_41721C  +
test eax eax +
jz loc_417802  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
mov [ebp+hMem] ebx +
call ConvertSidToStringSidW  +
test eax eax +
jz loc_417802  +
push [ebp+hMem]  +
call ds:lstrlenW  +
lea esi [eax+eax+2] +
push esi  +
call ds:CoTaskMemAlloc  +
push [ebp+hMem]  +
mov edi eax +
cmp edi ebx +
jnz loc_4177B3  +
mov [ebp+var_B8] ebx +
call ds:LocalFree  +
jmp loc_417868  +
push esi  +
push edi  +
call sub_415BE5  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
cmp esi ebx +
jge loc_4177DE  +
push edi  +
mov [ebp+var_B8] ebx +
call ds:CoTaskMemFree  +
jmp loc_417868  +
push [ebp+pv]  +
mov ecx [ebp+var_D4] +
push [ebp+cb]  +
push edi  +
push [ebp+var_D0]  +
call sub_417247  +
test eax eax +
jl loc_417868  +
jmp loc_41782F  +
mov esi [ebp+var_D0] +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jl loc_417868  +
mov eax [esi] +
push edi  +
push [ebp+cb]  +
push 3  +
push esi  +
call dword ptr [eax+50h]  +
test eax eax +
jl loc_417868  +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
test eax eax +
jl loc_41783B  +
mov eax [ebp+var_C4] +
mov dword ptr [eax] 1 +
push [ebp+cb]  +
call sub_40928D  +
pop ecx  +
mov ecx [ebp+var_E8] +
mov [ecx] eax +
cmp eax ebx +
jz loc_417868  +
push [ebp+cb]  +
push [ebp+pv]  +
push eax  +
call memcpy  +
add esp 0Ch +
lea eax [ebp+var_A4] +
cmp [ebp+pv] eax +
jz loc_417882  +
push [ebp+pv]  +
call sub_4092A2  +
pop ecx  +
mov eax [ebp+var_B8] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov eax [ebp+cCountOfAccessEntries] +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
push edi  +
mov [ebp+var_14] ecx +
mov [ebp+var_8C] eax +
mov [ebp+var_88] esi +
mov [ebp+var_84] esi +
mov [ebp+var_80] 48h +
mov [ebp+var_7C] 10h +
mov [ebp+var_78] edi +
mov [ebp+var_74] esi +
mov [ebp+var_70] 1 +
mov [ebp+var_6C] 82h +
call ebx  +
lea eax [eax+eax+2] +
mov [ebp+var_68] eax +
mov eax [ebp+cCountOfAccessEntries] +
push edi  +
mov [ebp+var_64] eax +
mov [ebp+var_60] esi +
mov [ebp+var_5C] esi +
mov [ebp+var_58] 48h +
mov [ebp+var_54] 10h +
mov [ebp+var_50] edi +
mov [ebp+var_4C] esi +
mov [ebp+var_48] 1 +
mov [ebp+var_44] 82h +
call ebx  +
mov ecx [ebp+var_14] +
lea eax [eax+eax+2] +
mov [ebp+var_40] eax +
lea eax [ebp+lpString] +
push eax  +
push 20000h  +
push 1  +
push 2  +
lea eax [ebp+var_8C] +
push eax  +
push offset dword_4022AC  +
push offset dword_40225C  +
push dword ptr [ecx+8]  +
mov [ebp+var_4] esi +
mov [ebp+var_18] esi +
mov [ebp+cCountOfAccessEntries] esi +
mov [ebp+pListOfAccessEntries] esi +
mov [ebp+hMem] esi +
call sub_415B3D  +
cmp eax esi +
jl loc_417CC3  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_417C8B  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_2C] +
push edx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi esi +
jl loc_417C8B  +
mov eax [ebp+var_2C] +
cmp eax esi +
jz loc_417ADB  +
xor ecx ecx +
push 20h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
pop ecx  +
mov [ebp+pListOfAccessEntries] eax +
cmp eax esi +
jz loc_417B82  +
lea ebx [eax+8] +
mov eax [ebp+lpString] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
lea edx [ebp+var_90] +
push edx  +
lea edx [ebp+var_30] +
push edx  +
push 2  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+lpString] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
lea edx [ebp+cb] +
push edx  +
lea edx [ebp+var_30] +
push edx  +
push 3  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push esi  +
lea edx [ebp+pv] +
push edx  +
push [ebp+var_34]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov ecx [ebp+var_14] +
lea eax [ebp+uBytes] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+cb]  +
push [ebp+var_24]  +
push [ebp+pv]  +
push [ebp+lpString]  +
call sub_417331  +
test eax eax +
jz loc_417AB1  +
cmp [ebp+uBytes] esi +
jnz loc_417A8D  +
cmp [ebp+var_24] esi +
jz loc_417B8C  +
push [ebp+cb]  +
call sub_40928D  +
pop ecx  +
mov [ebp+uBytes] eax +
cmp eax esi +
jz loc_417B8C  +
push [ebp+cb]  +
push [ebp+var_24]  +
push eax  +
call memcpy  +
add esp 0Ch +
push [ebp+uBytes]  +
xor eax eax +
inc eax  +
mov [ebx-8] eax +
mov [ebx-4] eax +
lea eax [ebx+4] +
push eax  +
mov dword ptr [ebx] 3 +
call ds:BuildTrusteeWithSidW  +
inc [ebp+cCountOfAccessEntries]  +
add ebx 20h +
jmp loc_417AC1  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov [ebp+var_18] 1 +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_4179DC  +
mov edi ds:BuildTrusteeWithNameW +
mov ebx offset pName +
push ebx  +
lea eax [ebp+pOwner] +
push eax  +
call edi  +
push ebx  +
lea eax [ebp+pGroup] +
push eax  +
call edi  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+pSizeNewSD] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+pListOfAccessEntries]  +
lea eax [ebp+pGroup] +
push [ebp+cCountOfAccessEntries]  +
mov [ebp+pGroup.TrusteeType] 2 +
push eax  +
lea eax [ebp+pOwner] +
push eax  +
call ds:BuildSecurityDescriptorW  +
mov ebx eax +
cmp [ebp+var_18] esi +
jz loc_417B43  +
mov eax [ebp+lpString] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
cmp [ebp+var_2C] esi +
jnz loc_417BB9  +
cmp ebx esi +
jnz loc_417BBD  +
push 4  +
push 8  +
lea eax [ebp+pAcl] +
push eax  +
call ds:InitializeAcl  +
lea eax [ebp+uBytes] +
push eax  +
push 8  +
push [ebp+pSizeNewSD]  +
call sub_416AD3  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
push esi  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
call sub_415B69  +
cmp eax esi +
jnz loc_417B96  +
mov edi 8007000Eh +
jmp loc_417C5D  +
mov edi 8000FFFFh +
jmp loc_417C5D  +
mov edx [ebp+pSizeNewSD] +
mov ecx dword ptr [ebp+pAcl.AclRevision] +
mov [ebp+hMem] eax +
mov [eax+edx] ecx +
mov ecx dword ptr [ebp+pAcl.AceCount] +
mov edx [ebp+pSizeNewSD] +
mov [eax+edx+4] ecx +
mov eax [ebp+pSizeNewSD] +
mov ecx [ebp+hMem] +
mov [ecx+10h] eax +
add [ebp+pSizeNewSD] 8 +
cmp ebx esi +
jz loc_417BD2  +
jle loc_417BCB  +
and ebx 0FFFFh +
or ebx 80070000h +
mov edi ebx +
jmp loc_417C5D  +
mov ecx [ebp+var_14] +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
push 1  +
push 2  +
lea eax [ebp+var_64] +
push eax  +
push offset nullsub_2  +
push offset dword_40225C  +
push dword ptr [ecx+0Ch]  +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
push [ebp+hMem]  +
mov eax [ebp+var_4] +
push [ebp+pSizeNewSD]  +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
cmp edi esi +
jl loc_417C5D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
mov ebx [ebp+pListOfAccessEntries] +
cmp ebx esi +
jz loc_417C8B  +
cmp [ebp+cCountOfAccessEntries] esi +
jbe loc_417C82  +
mov eax [ebp+cCountOfAccessEntries] +
add ebx 1Ch +
mov [ebp+cCountOfAccessEntries] eax +
push dword ptr [ebx]  +
call sub_4092A2  +
add ebx 20h +
dec [ebp+cCountOfAccessEntries]  +
pop ecx  +
jnz loc_417C72  +
push [ebp+pListOfAccessEntries]  +
call sub_4092A2  +
pop ecx  +
cmp [ebp+hMem] esi +
jz loc_417C99  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+lpString] +
cmp eax esi +
jz loc_417CA6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_417CB3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi esi +
jl loc_417CC1  +
xor eax eax +
cmp [ebp+var_18] esi +
setnz al  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_401688  +
xor ebx ebx +
xor esi esi +
inc ebx  +
push ebx  +
push esi  +
push offset stru_4022FC  +
mov [ebp+var_10] ecx +
mov [ebp+ppv] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebp+var_20] ebx +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov ecx [ebp+var_10] +
lea eax [ebp+var_8] +
push eax  +
push 20000h  +
push ebx  +
push esi  +
push esi  +
push offset dword_4022EC  +
push offset dword_40225C  +
push [ebp+ppv]  +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
jmp loc_417E9C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+cCountOfAccessEntries] +
push edx  +
push esi  +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_401688  +
push ebx  +
push esi  +
push offset stru_4022FC  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+cCountOfAccessEntries] +
mov ecx [ebp+var_10] +
mov [ebp+var_34] eax +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
push ebx  +
push ebx  +
lea eax [ebp+var_34] +
push eax  +
push offset dword_4022BC  +
push offset dword_40225C  +
push [ebp+ppv]  +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] 48h +
mov [ebp+var_24] 10h +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
mov [ebp+var_18] esi +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_417E90  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+lpString] +
push edx  +
push esi  +
push esi  +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
push [ebp+lpString]  +
mov ecx [ebp+var_10] +
push [ebp+cCountOfAccessEntries]  +
call sub_41789E  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
inc [ebp+var_18]  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_417E25  +
cmp [ebp+var_18] esi +
jbe loc_417E90  +
mov ecx [ebp+var_10] +
push ebx  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+cCountOfAccessEntries]  +
call sub_418B3A  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
push [ebp+cCountOfAccessEntries]  +
mov ecx [ebp+var_10] +
call sub_416E2B  +
mov edi eax +
cmp edi esi +
jl loc_417EAD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] esi +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_417D64  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_417EBA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_417EC7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_417ED4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
push 48h  +
pop edx  +
push 10h  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_4] +
xor ebx ebx +
mov [ebp+var_7C] eax +
pop eax  +
mov [ebp+var_68] ecx +
mov ecx [ebp+arg_8] +
push 13h  +
pop esi  +
mov [ebp+var_54] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_6C] eax +
mov [ebp+var_58] eax +
mov [ebp+var_44] eax +
push 4  +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_40] ecx +
pop ecx  +
mov [ebp+var_78] ebx +
mov [ebp+var_74] ebx +
mov [ebp+var_70] edx +
mov [ebp+var_64] ebx +
mov [ebp+var_60] ebx +
mov [ebp+var_5C] edx +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] edx +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_34] esi +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] edi +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] edx +
mov [ebp+var_18] eax +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] esi +
mov [ebp+var_8] ecx +
cmp eax ebx +
jz loc_417FA5  +
mov edi [ebp+arg_1C] +
mov eax [ebp+var_4] +
mov esi offset dword_40229C +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+14h] +
push 6  +
pop eax  +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_20] +
mov [ebp+arg_0] eax +
mov [ebp+var_38] 5 +
mov [ecx] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_24] 3 +
mov dword ptr [eax] 7 +
jmp loc_418007  +
cmp edi ebx +
jz loc_417FD0  +
mov edi [ebp+arg_1C] +
mov eax [ebp+var_4] +
mov esi offset loc_40227C +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+1Ch] +
mov eax [ebp+arg_20] +
mov [ebp+arg_0] 5 +
mov [ebp+var_38] ecx +
mov dword ptr [eax] 6 +
jmp loc_417F93  +
cmp [ebp+arg_0] ebx +
jz loc_41809D  +
mov edi [ebp+arg_1C] +
mov eax [ebp+var_4] +
mov esi offset nullsub_1 +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+20h] +
mov eax [ebp+arg_20] +
mov dword ptr [eax] 13h +
mov eax [ebp+arg_24] +
mov [ebp+arg_0] ecx +
mov [ebp+var_38] 3 +
mov dword ptr [eax] 14h +
xor edi edi +
inc edi  +
mov [ebp+var_74] ebx +
mov [ebp+var_60] edi +
mov [ebp+var_4C] 2 +
cmp dword_42316C ebx +
jz loc_41805E  +
mov eax [ebp+arg_0] +
push 14h  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ds:CoTaskMemAlloc  +
mov [ebp+arg_20] eax +
cmp eax ebx +
jnz loc_418045  +
mov eax 8007000Eh +
jmp loc_4180B8  +
mov ecx [ebp+arg_0] +
imul ecx ecx +
push ecx  +
lea ecx [ebp+var_7C] +
push ecx  +
push eax  +
call memcpy  +
mov eax [ebp+arg_20] +
add esp 0Ch +
jmp loc_418061  +
lea eax [ebp+var_7C] +
push [ebp+arg_18]  +
mov ecx [ebp+var_4] +
push 20000h  +
push edi  +
push [ebp+arg_0]  +
push eax  +
push [ebp+arg_1C]  +
push offset dword_40225C  +
push esi  +
call sub_415B3D  +
cmp eax ebx +
jl loc_4180B8  +
mov esi [ebp+arg_18] +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_4180B8  +
mov eax [esi] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_4180B8  +
push 1  +
push 1D7h  +
push offset aDW7rtmComCom_3  +
push offset aShouldNeverGet  +
call nullsub_4  +
mov eax 8000FFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
push 48h  +
pop edx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_4] +
xor ebx ebx +
mov [ebp+var_54] ecx +
mov ecx [ebp+arg_8] +
push 10h  +
pop eax  +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_14] +
push 4  +
mov [ebp+var_2C] ecx +
pop ecx  +
mov [ebp+var_68] edi +
mov [ebp+var_64] ebx +
mov [ebp+var_60] ebx +
mov [ebp+var_5C] edx +
mov [ebp+var_58] eax +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] edx +
mov [ebp+var_44] eax +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_34] edx +
mov [ebp+var_30] eax +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] 13h +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] esi +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] edx +
mov [ebp+var_8] eax +
cmp [ebp+arg_10] ebx +
jnz loc_4181DE  +
cmp esi ebx +
jz loc_418170  +
mov edi [ebp+arg_1C] +
mov eax [ebp+var_4] +
mov esi offset dword_40229C +
movs   +
movs   +
movs   +
movs   +
mov eax [eax+14h] +
push 5  +
pop esi  +
mov edi esi +
mov [ebp+var_24] esi +
mov esi [ebp+arg_20] +
mov [ebp+var_10] 3 +
mov [esi] ecx +
jmp loc_418194  +
cmp edi ebx +
jz loc_4181DE  +
mov edi [ebp+arg_1C] +
mov eax [ebp+var_4] +
mov esi offset loc_40227C +
movs   +
movs   +
movs   +
movs   +
mov eax [eax+1Ch] +
mov edi ecx +
mov [ebp+var_24] ecx +
mov ecx [ebp+arg_20] +
mov dword ptr [ecx] 3 +
mov esi [ebp+arg_18] +
push esi  +
push 20000h  +
xor edx edx +
inc edx  +
push edx  +
push edi  +
lea ecx [ebp+var_68] +
push ecx  +
push [ebp+arg_1C]  +
mov ecx [ebp+var_4] +
push offset dword_40225C  +
push eax  +
mov [ebp+var_38] 2 +
mov [ebp+var_4C] edx +
mov [ebp+var_60] ebx +
call sub_415B3D  +
cmp eax ebx +
jl loc_4181E3  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_4181E3  +
mov esi [esi] +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
jmp loc_4181E3  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
call __EH_prolog3  +
mov ebx ecx +
xor esi esi +
lea ecx [ebp-48h] +
mov [ebp-10h] esi +
mov [ebp-28h] esi +
mov dword ptr [ebp-18h] 8 +
mov [ebp-14h] esi +
mov [ebp-1Ch] esi +
mov [ebp-80h] esi +
mov [ebp-7Ch] esi +
mov [ebp-78h] esi +
mov [ebp-74h] esi +
mov [ebp-30h] esi +
call unknown_libname_1  +
mov [ebp-4] esi +
mov [ebp-24h] esi +
cmp [ebp+18h] esi +
jnz loc_418240  +
cmp [ebp+0Ch] esi +
jnz loc_4185C7  +
mov eax [ebp+14h] +
cmp eax esi +
jz loc_4184C1  +
push 48h  +
pop ecx  +
push 10h  +
mov [ebp-94h] eax +
pop eax  +
mov [ebp-88h] ecx +
mov [ebp-64h] ecx +
mov [ebp-84h] eax +
mov [ebp-60h] eax +
lea ecx [ebp-14h] +
push ecx  +
push 20000h  +
xor eax eax +
inc eax  +
push eax  +
push eax  +
mov [ebp-54h] eax +
lea eax [ebp-94h] +
push eax  +
push offset nullsub_3  +
push offset dword_40225C  +
push dword ptr [ebx+10h]  +
mov ecx ebx +
mov [ebp-90h] esi +
mov [ebp-8Ch] esi +
mov [ebp-70h] esi +
mov [ebp-6Ch] esi +
mov [ebp-68h] esi +
mov [ebp-5Ch] esi +
mov [ebp-58h] esi +
mov dword ptr [ebp-50h] 82h +
mov [ebp-4Ch] esi +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-14h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp-14h] +
mov ecx [eax] +
push esi  +
lea edx [ebp-28h] +
push edx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
cmp [ebp-28h] esi +
jz loc_4184C1  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-5Ch] +
push edx  +
push esi  +
push esi  +
push 1  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-70h] +
push edx  +
push esi  +
push esi  +
push 2  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-5Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_418344  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp-4Ch] eax +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_418369  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
lea eax [ebp-1Ch] +
push eax  +
push 20000h  +
push 1  +
push 2  +
lea eax [ebp-70h] +
push eax  +
push offset nullsub_2  +
push offset dword_40225C  +
push dword ptr [ebx+0Ch]  +
mov ecx ebx +
call sub_415B3D  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp+14h] +
push edx  +
push esi  +
push esi  +
push 2  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
cmp [ebp+14h] esi +
jz loc_418490  +
lea eax [ebp-98h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp+14h]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_4184AB  +
cmp [ebp-34h] esi +
jz loc_418441  +
mov eax [ebp-3Ch] +
cmp eax esi +
jz loc_418441  +
cmp [ebp-10h] esi +
jnz loc_418424  +
movzx eax word ptr [eax+2] +
mov ecx [ebp-18h] +
lea eax [ecx+eax-8] +
mov [ebp-18h] eax +
jmp loc_418441  +
movzx ecx word ptr [eax+2] +
sub ecx 8 +
push ecx  +
add eax 8 +
push eax  +
push 0FFFFFFFFh  +
push 2  +
push dword ptr [ebp-10h]  +
call ds:AddAce  +
test eax eax +
jz loc_4184AB  +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_418308  +
cmp [ebp-10h] esi +
jnz loc_4184DD  +
push dword ptr [ebp-18h]  +
call ds:CoTaskMemAlloc  +
mov [ebp-10h] eax +
cmp eax esi +
jz loc_4184B7  +
push 2  +
push dword ptr [ebp-18h]  +
push eax  +
call ds:InitializeAcl  +
mov eax [ebp-14h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jge loc_418308  +
jmp loc_4186AE  +
mov edi 8000FFFFh +
jmp loc_4186AE  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_4186AE  +
call ds:__imp_GetLastError  +
cmp eax esi +
jg loc_41849A  +
jmp loc_4184A4  +
mov edi 8007000Eh +
jmp loc_4186AE  +
push 8  +
call ds:CoTaskMemAlloc  +
mov [ebp-10h] eax +
cmp eax esi +
jz loc_4184B7  +
push 2  +
push 8  +
push eax  +
call ds:InitializeAcl  +
jmp loc_418513  +
lea eax [ebp+18h] +
push eax  +
push dword ptr [ebp-10h]  +
mov ecx ebx +
mov [ebp+18h] esi +
call sub_419647  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
cmp [ebp+18h] esi +
jz loc_418490  +
push dword ptr [ebp-10h]  +
call ds:CoTaskMemFree  +
mov eax [ebp+18h] +
mov [ebp-10h] eax +
movzx eax word ptr [eax+2] +
mov [ebp-18h] eax +
mov edi ds:BuildTrusteeWithNameW +
mov ebx offset pName +
push ebx  +
lea eax [ebp-0C0h] +
push eax  +
call edi  +
push ebx  +
lea eax [ebp-0ACh] +
push eax  +
call edi  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp-0ACh] +
push eax  +
lea eax [ebp-0C0h] +
push eax  +
mov dword ptr [ebp-0A0h] 2 +
call ds:BuildSecurityDescriptorW  +
cmp eax esi +
jnz loc_4184B3  +
mov ebx [ebp-18h] +
lea eax [ebp-18h] +
push eax  +
push ebx  +
push dword ptr [ebp-20h]  +
mov dword ptr [ebp-30h] 1 +
call sub_416AD3  +
mov edi eax +
cmp edi esi +
jl loc_4186AE  +
push esi  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+0Ch]  +
call sub_415B69  +
cmp eax esi +
jz loc_4184B7  +
mov ecx [ebp-20h] +
push ebx  +
push dword ptr [ebp-10h]  +
mov [ebp+0Ch] eax +
add eax ecx +
push eax  +
call memcpy  +
mov ecx [ebp-20h] +
mov eax [ebp+0Ch] +
mov [eax+10h] ecx +
mov eax [ebp+0Ch] +
mov ecx 0FFEFh +
and [eax+2] cx +
add esp 0Ch +
add [ebp-20h] ebx +
lea ecx [ebp-48h] +
mov [ebp-2Ch] esi +
xor edi edi +
call sub_41AD0C  +
test eax eax +
jl loc_4186AE  +
lea eax [ebp-24h] +
push eax  +
push 8  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
mov ebx ds:__imp_GetLastError +
mov [ebp-18h] eax +
cmp eax esi +
jnz loc_418600  +
call ebx  +
mov edi eax +
lea ecx [ebp-48h] +
call sub_41AD7A  +
test eax eax +
jz loc_418614  +
lea ecx [ebp-48h] +
call sub_41AD87  +
cmp [ebp-18h] esi +
jnz loc_41862F  +
cmp edi esi +
jle loc_4186AE  +
and edi 0FFFFh +
or edi 80070000h +
jmp loc_4186AE  +
lea eax [ebp-80h] +
push eax  +
push dword ptr [ebp-24h]  +
xor edi edi +
push 11h  +
push 1  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:CreatePrivateObjectSecurityEx  +
test eax eax +
jnz loc_418657  +
call ebx  +
jmp loc_4184B1  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
mov eax [ebp+10h] +
push dword ptr [eax]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jnz loc_41868F  +
call ebx  +
cmp eax esi +
jle loc_418682  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+10h]  +
mov edi eax +
call ds:DestroyPrivateObjectSecurity  +
jmp loc_4186AE  +
mov eax [ebp-38h] +
movzx ecx word ptr [eax+2] +
sub ecx 8 +
lea eax [eax+8] +
jz loc_4186AE  +
movzx edx word ptr [eax+2] +
and byte ptr [eax+1] 0F7h +
sub ecx edx +
add eax edx +
cmp ecx esi +
jnz loc_41869E  +
cmp [ebp-24h] esi +
jz loc_4186BC  +
push dword ptr [ebp-24h]  +
call ds:CloseHandle  +
cmp [ebp-30h] esi +
jz loc_4186CA  +
push dword ptr [ebp+0Ch]  +
call ds:LocalFree  +
cmp [ebp-10h] esi +
jz loc_4186D8  +
push dword ptr [ebp-10h]  +
call ds:CoTaskMemFree  +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_4186E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] esi +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_4186F8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-48h] +
call sub_41AE32  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D8h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_10] +
mov [ebp+var_34] ecx +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_18] +
mov [ebp+var_2C] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_44] esi +
push edi  +
mov edi [ebp+arg_14] +
mov [ebp+var_30] ecx +
mov ecx [ebp+arg_C] +
xor esi esi +
mov [ebp+var_3C] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_28] edx +
mov [ebp+var_24] edi +
cmp eax esi +
jnz loc_418767  +
mov eax 80070057h +
jmp loc_418B25  +
cmp edx esi +
jz loc_41876F  +
cmp ecx esi +
jz loc_41875D  +
cmp edi esi +
jz loc_41875D  +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_1C] esi +
jz loc_418781  +
mov [ebp+var_1C] ebx +
jmp loc_418787  +
mov edi [ebp+arg_20] +
mov [ebp+var_1C] edi +
lea edi [ebp+var_60] +
push edi  +
lea edi [ebp+var_48] +
push edi  +
lea edi [ebp+var_14] +
push edi  +
lea edi [ebp+var_18] +
push edi  +
push [ebp+var_24]  +
mov [ebp+var_18] esi +
push edx  +
push ecx  +
push [ebp+var_30]  +
mov ecx [ebp+var_34] +
push [ebp+var_2C]  +
mov [ebp+ObjectDescriptor] esi +
push eax  +
mov [ebp+var_4C] esi +
call sub_417EE0  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+pSecurityDescriptor] +
push edx  +
push esi  +
lea edx [ebp+var_5C] +
push edx  +
push [ebp+var_48]  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax esi +
jl loc_418B24  +
cmp [ebp+pSecurityDescriptor] esi +
jz loc_4187F7  +
push [ebp+pSecurityDescriptor]  +
call ds:IsValidSecurityDescriptor  +
test eax eax +
jnz loc_4187F7  +
mov edi 8000FFFFh +
jmp loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push esi  +
lea edx [ebp+var_5C] +
push edx  +
push [ebp+var_60]  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
push [ebp+var_1C]  +
mov ecx [ebp+var_34] +
push [ebp+var_58]  +
lea eax [ebp+ObjectDescriptor] +
push eax  +
push [ebp+pSecurityDescriptor]  +
push [ebp+var_44]  +
call sub_4181EF  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
cmp [ebp+var_28] esi +
jz loc_4189F9  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_44] +
push edx  +
push esi  +
push esi  +
push 9  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_4189F9  +
mov eax [ebp+var_3C] +
push 48h  +
pop ecx  +
mov edx [ebp+var_2C] +
push 10h  +
mov [ebp+var_D8] eax +
pop eax  +
push 4  +
mov [ebp+var_C8] eax +
mov [ebp+var_B4] eax +
mov [ebp+var_A0] eax +
mov [ebp+var_8C] eax +
mov eax [ebp+var_44] +
mov [ebp+var_88] eax +
pop eax  +
push 13h  +
mov [ebp+var_CC] ecx +
mov [ebp+var_B8] ecx +
mov [ebp+var_A4] ecx +
mov [ebp+var_90] ecx +
pop ecx  +
mov [ebp+var_80] eax +
mov [ebp+var_78] eax +
mov [ebp+var_64] eax +
lea eax [ebp+var_1C] +
push eax  +
push 20000h  +
push ebx  +
push 6  +
mov [ebp+var_C4] edx +
mov edx [ebp+var_30] +
lea eax [ebp+var_D8] +
push eax  +
mov [ebp+var_B0] edx +
mov edx [ebp+var_38] +
push offset dword_40228C  +
mov [ebp+var_BC] ebx +
mov ebx [ebp+var_34] +
push offset dword_40225C  +
push dword ptr [ebx+18h]  +
mov [ebp+var_9C] edx +
mov edx [ebp+var_24] +
mov [ebp+var_7C] ecx +
mov [ebp+var_68] ecx +
mov ecx ebx +
mov [ebp+var_D4] esi +
mov [ebp+var_D0] esi +
mov [ebp+var_C0] esi +
mov [ebp+var_AC] esi +
mov [ebp+var_A8] 2 +
mov [ebp+var_98] esi +
mov [ebp+var_94] 3 +
mov [ebp+var_84] esi +
mov [ebp+var_74] edx +
mov [ebp+var_70] esi +
mov [ebp+var_6C] 5 +
mov [ebp+var_1C] esi +
call sub_415B3D  +
cmp eax esi +
jl loc_4189EA  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
jl loc_4189EA  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
cmp eax esi +
jl loc_4189EA  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov edi eax +
cmp edi esi +
jl loc_4189CE  +
push [ebp+ObjectDescriptor]  +
mov eax [ebp+var_1C] +
mov edi [eax] +
push [ebp+ObjectDescriptor]  +
add edi 50h +
call ds:GetSecurityDescriptorLength  +
push eax  +
push 6  +
push [ebp+var_1C]  +
call dword ptr [edi]  +
mov edi eax +
cmp edi esi +
jl loc_4189CE  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
cmp edi esi +
jl loc_4189CE  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
mov eax [ebp+var_1C] +
cmp eax esi +
jz loc_4189E0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
mov [ebp+var_1C] eax +
cmp edi esi +
jl loc_418B03  +
jmp loc_4189ED  +
mov eax [ebp+var_1C] +
cmp eax esi +
jz loc_4189FC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_4189FC  +
mov ebx [ebp+var_34] +
push [ebp+ObjectDescriptor]  +
mov eax [ebp+var_18] +
mov edi [eax] +
push [ebp+ObjectDescriptor]  +
add edi 50h +
call ds:GetSecurityDescriptorLength  +
push eax  +
push [ebp+var_48]  +
push [ebp+var_18]  +
call dword ptr [edi]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
cmp eax esi +
jz loc_418A59  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] esi +
cmp [ebp+var_28] esi +
jnz loc_418B03  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_24]  +
mov ecx ebx +
push esi  +
push [ebp+var_38]  +
push [ebp+var_30]  +
push [ebp+var_2C]  +
push [ebp+var_3C]  +
call sub_4180C4  +
jmp loc_418AF0  +
mov eax [ebp+var_18] +
mov ecx [eax] +
cmp [ebp+var_38] esi +
jnz loc_418AB4  +
lea edx [ebp+var_50] +
push edx  +
push esi  +
push esi  +
push [ebp+var_28]  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
push [ebp+arg_20]  +
push esi  +
push [ebp+ObjectDescriptor]  +
push [ebp+var_24]  +
push esi  +
push [ebp+var_50]  +
jmp loc_418AE0  +
lea edx [ebp+var_4C] +
push edx  +
push esi  +
push esi  +
push [ebp+var_28]  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
push [ebp+arg_20]  +
mov eax [ebp+var_4C] +
mov eax [eax] +
push esi  +
push [ebp+ObjectDescriptor]  +
mov [ebp+var_54] eax +
push [ebp+var_24]  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_38]  +
push [ebp+var_30]  +
mov ecx ebx +
push [ebp+var_2C]  +
push [ebp+var_3C]  +
call sub_418713  +
mov edi eax +
cmp edi esi +
jl loc_418B03  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_418A87  +
mov eax [ebp+var_18] +
cmp eax esi +
jz loc_418B13  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] esi +
cmp [ebp+ObjectDescriptor] esi +
jz loc_418B22  +
lea eax [ebp+ObjectDescriptor] +
push eax  +
call ds:DestroyPrivateObjectSecurity  +
mov eax edi +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_412CC0  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
push edi  +
xor edi edi +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edi +
cmp [ebp+arg_14] edi +
jz loc_418B67  +
cmp [ebp+arg_10] edi +
jz loc_418B5D  +
cmp [ebp+arg_4] edi +
jnz loc_418B67  +
mov eax 80070057h +
jmp loc_418DD0  +
push ebx  +
push esi  +
cmp [ebp+arg_10] edi +
jz loc_418B81  +
cmp [ebp+arg_4] edi +
jnz loc_418C81  +
mov eax 80070057h +
jmp loc_418DCE  +
cmp [ebp+arg_4] edi +
jnz loc_418C81  +
mov eax [ebp+arg_0] +
mov [ebp+var_88] eax +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
lea eax [ebp+var_88] +
push eax  +
push offset nullsub_1  +
push offset dword_40225C  +
push dword ptr [ecx+20h]  +
mov [ebp+var_84] edi +
mov [ebp+var_80] 4 +
mov [ebp+var_7C] 48h +
mov [ebp+var_78] 10h +
call sub_415B3D  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_418C65  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_10] +
push edx  +
push edi  +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push edi  +
push edi  +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push edi  +
push edi  +
push 2  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov ecx [ebp+var_8] +
push ebx  +
push ebx  +
push edi  +
push [ebp+arg_18]  +
push edi  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
call sub_418713  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_418BFD  +
jmp loc_418DBF  +
xor ebx ebx +
inc ebx  +
mov [ebp+arg_0] edi +
cmp [ebp+arg_10] edi +
jz loc_418D9C  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
push 48h  +
pop ecx  +
mov [ebp+var_60] edx +
mov edx [ebp+arg_C] +
push 10h  +
mov [ebp+var_74] eax +
pop eax  +
mov [ebp+var_4C] edx +
mov edx [ebp+arg_18] +
push 4  +
mov [ebp+var_38] edx +
pop edx  +
mov [ebp+var_70] edi +
mov [ebp+var_68] ecx +
mov [ebp+var_64] eax +
mov [ebp+var_5C] edi +
mov [ebp+var_54] ecx +
mov [ebp+var_50] eax +
mov [ebp+var_48] edi +
mov [ebp+var_40] ecx +
mov [ebp+var_3C] eax +
mov [ebp+var_34] edi +
mov [ebp+var_2C] 13h +
mov [ebp+var_28] edx +
mov [ebp+var_6C] edi +
mov [ebp+var_58] ebx +
mov [ebp+var_44] 2 +
cmp [ebp+arg_14] edi +
jz loc_418D26  +
mov esi [ebp+arg_10] +
mov [ebp+var_14] eax +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
push ebx  +
push 5  +
lea eax [ebp+var_74] +
push eax  +
push offset loc_40227C  +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_8] +
push offset dword_40225C  +
push dword ptr [ecx+1Ch]  +
mov [ebp+var_24] esi +
mov [ebp+var_20] edi +
mov [ebp+var_30] edx +
mov [ebp+var_1C] 3 +
jmp loc_418D4C  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
push 20000h  +
push ebx  +
push edx  +
lea eax [ebp+var_74] +
push eax  +
push offset nullsub_1  +
push offset dword_40225C  +
push dword ptr [ecx+20h]  +
mov [ebp+var_30] 3 +
call sub_415B3D  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_10] +
push edx  +
cmp [ebp+arg_14] edi +
jz loc_418D90  +
push 6  +
jmp loc_418D92  +
push 13h  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
cmp esi edi +
jl loc_418DBF  +
push [ebp+arg_1C]  +
mov ecx [ebp+var_8] +
push ebx  +
push [ebp+arg_0]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_418713  +
mov esi eax +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_418DCC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_B0] 0 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_B4] eax +
mov [ebp+var_AC] 50h +
test eax eax +
jnz loc_418E1C  +
mov esi 8000FFFFh +
jmp loc_418F0F  +
push 2  +
call ds:GetSidLengthRequired  +
push eax  +
mov [ebp+var_A8] eax +
call ds:malloc  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_418EE6  +
mov esi ds:LookupAccountNameW +
jmp loc_418E9E  +
call ds:__imp_GetLastError  +
cmp eax 7Ah +
jnz loc_418E73  +
cmp [ebp+var_AC] 50h +
ja loc_418EDF  +
push [ebp+var_A8]  +
push ebx  +
call ds:realloc  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_418EE6  +
mov ebx eax +
jmp loc_418E9E  +
cmp [ebp+var_B0] 0 +
jnz loc_418EED  +
push 5Ch  +
push edi  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
mov [ebp+var_B0] 1 +
test eax eax +
jz loc_418EED  +
push eax  +
call ds:CharNextW  +
mov edi eax +
lea eax [ebp+var_B8] +
push eax  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A4] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push ebx  +
push edi  +
push 0  +
call esi  +
test eax eax +
jz loc_418E44  +
mov eax [ebp+var_B4] +
mov [eax] ebx +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 4  +
mov esi 80070057h +
jmp loc_418F03  +
mov esi 8007000Eh +
jmp loc_418F03  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_418F01  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test ebx ebx +
jz loc_418F0F  +
push ebx  +
call ds:free  +
pop ecx  +
mov eax esi +
jmp loc_418ECE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+ObjectAttributes] +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
xor esi esi +
mov ebx 811h +
push ebx  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push esi  +
mov [ebp+ObjectHandle] esi +
mov [ebp+AccountSid] esi +
mov [ebp+bufptr] esi +
mov [ebp+Buffer] esi +
mov [ebp+CountOfRights] esi +
mov [ebp+var_18] esi +
call LsaOpenPolicy  +
cmp eax esi +
jz loc_418F63  +
or eax 10000000h +
jmp loc_4190D0  +
mov ecx [ebp+arg_0] +
lea eax [ebp+AccountSid] +
push eax  +
call sub_418DDA  +
mov [ebp+arg_0] eax +
cmp eax esi +
jnz loc_4190C5  +
mov edx [ebp+arg_4] +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_418F82  +
sub eax esi +
sar eax 1 +
add eax eax +
mov word ptr [ebp+var_20] ax +
mov eax [ebp+var_20] +
add eax 2 +
mov word ptr [ebp+var_20+2] ax +
mov [ebp+lpString2] edx +
lea eax [ebp+CountOfRights] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+AccountSid]  +
push [ebp+ObjectHandle]  +
call LsaEnumerateAccountRights  +
test eax eax +
jnz loc_418FF8  +
xor esi esi +
cmp [ebp+CountOfRights] esi +
jbe loc_418FF8  +
movzx ecx word ptr [ebp+var_20] +
mov eax [ebp+Buffer] +
shr ecx 1 +
push ecx  +
push [ebp+lpString2]  +
lea eax [eax+esi*8] +
movzx ecx word ptr [eax] +
shr ecx 1 +
push ecx  +
push dword ptr [eax+4]  +
xor edi edi +
inc edi  +
push edi  +
push 400h  +
call ds:CompareStringW  +
cmp eax 2 +
jz loc_4190D7  +
inc esi  +
cmp esi [ebp+CountOfRights] +
jb loc_418FC1  +
xor esi esi +
inc esi  +
push esi  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+AccountSid]  +
push [ebp+ObjectHandle]  +
call LsaAddAccountRights  +
xor edi edi +
cmp eax edi +
jz loc_419095  +
cmp eax 0C0000187h +
jnz loc_41908D  +
cmp [ebp+var_18] edi +
jnz loc_41908D  +
lea eax [ebp+bufptr] +
push eax  +
push edi  +
push edi  +
mov [ebp+var_18] esi +
call NetGetDCName  +
test eax eax +
jnz loc_4190DC  +
mov eax [ebp+bufptr] +
add eax 4 +
mov [ebp+SystemName.Buffer] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_419043  +
push [ebp+ObjectHandle]  +
sub eax edx +
sar eax 1 +
add eax eax +
mov [ebp+SystemName.Length] ax +
mov eax dword ptr [ebp+SystemName.Length] +
add eax 2 +
mov [ebp+SystemName.MaximumLength] ax +
call LsaClose  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+ObjectAttributes] +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
push ebx  +
lea eax [ebp+ObjectAttributes] +
push eax  +
lea eax [ebp+SystemName] +
push eax  +
call LsaOpenPolicy  +
test eax eax +
jz loc_418FA3  +
or eax 10000000h +
mov [ebp+arg_0] eax +
xor esi esi +
cmp [ebp+Buffer] esi +
jz loc_4190A4  +
push [ebp+Buffer]  +
call LsaFreeMemory  +
cmp [ebp+bufptr] esi +
jz loc_4190B1  +
push [ebp+bufptr]  +
call NetApiBufferFree  +
cmp [ebp+AccountSid] esi +
jz loc_4190C0  +
push [ebp+AccountSid]  +
call ds:free  +
pop ecx  +
cmp [ebp+ObjectHandle] esi +
jz loc_4190CD  +
push [ebp+ObjectHandle]  +
call LsaClose  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov [ebp+arg_0] edi +
jmp loc_419095  +
mov [ebp+arg_0] 8000FFFFh +
jmp loc_419095  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+ObjectAttributes] +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
mov esi 811h +
push esi  +
xor ebx ebx +
lea eax [ebp+ObjectAttributes] +
push eax  +
push ebx  +
mov [ebp+ObjectHandle] ebx +
mov [ebp+AccountSid] ebx +
mov [ebp+Buffer] ebx +
call LsaOpenPolicy  +
cmp eax ebx +
jz loc_41912C  +
or eax 10000000h +
jmp loc_41923D  +
mov ecx [ebp+arg_0] +
lea eax [ebp+AccountSid] +
push eax  +
call sub_418DDA  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jnz loc_419232  +
mov ecx [ebp+arg_4] +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_41914B  +
sub eax edi +
sar eax 1 +
add eax eax +
mov [ebp+UserRights.Length] ax +
mov eax dword ptr [ebp+UserRights.Length] +
add eax 2 +
push 1  +
mov [ebp+UserRights.MaximumLength] ax +
lea eax [ebp+UserRights] +
push eax  +
push ebx  +
push [ebp+AccountSid]  +
mov [ebp+UserRights.Buffer] ecx +
push [ebp+ObjectHandle]  +
call LsaRemoveAccountRights  +
cmp eax 0C0000187h +
jnz loc_419209  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push ebx  +
call NetGetDCName  +
test eax eax +
jz loc_4191A1  +
mov [ebp+arg_0] 8000FFFFh +
jmp loc_419211  +
mov eax [ebp+Buffer] +
add eax 4 +
mov [ebp+SystemName.Buffer] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_4191AD  +
push [ebp+ObjectHandle]  +
sub eax edx +
sar eax 1 +
add eax eax +
mov [ebp+SystemName.Length] ax +
mov eax dword ptr [ebp+SystemName.Length] +
add eax 2 +
mov [ebp+SystemName.MaximumLength] ax +
call LsaClose  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+ObjectAttributes] +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
push esi  +
lea eax [ebp+ObjectAttributes] +
push eax  +
lea eax [ebp+SystemName] +
push eax  +
call LsaOpenPolicy  +
cmp eax ebx +
jnz loc_419209  +
push 1  +
lea eax [ebp+UserRights] +
push eax  +
push ebx  +
push [ebp+AccountSid]  +
push [ebp+ObjectHandle]  +
call LsaRemoveAccountRights  +
cmp eax ebx +
jz loc_419211  +
or eax 10000000h +
mov [ebp+arg_0] eax +
cmp [ebp+Buffer] ebx +
jz loc_41921E  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
cmp [ebp+AccountSid] ebx +
jz loc_41922D  +
push [ebp+AccountSid]  +
call ds:free  +
pop ecx  +
cmp [ebp+ObjectHandle] ebx +
jz loc_41923A  +
push [ebp+ObjectHandle]  +
call LsaClose  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor eax eax +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp+ObjectAttributes.Length] ebx +
lea edi [ebp+ObjectAttributes.RootDirectory] +
stos   +
stos   +
stos   +
push dword ptr [ebp+lpString]  +
mov esi ds:lstrlenW +
stos   +
stos   +
xor eax eax +
mov word ptr [ebp+pv] ax +
lea edi [ebp+pv+2] +
stos   +
stos   +
xor eax eax +
mov word ptr [ebp+var_14] ax +
lea edi [ebp+var_14+2] +
stos   +
mov [ebp+ObjectHandle] ebx +
stos   +
call esi  +
push [ebp+arg_4]  +
mov edi eax +
call esi  +
add edi eax +
lea eax [edi+edi+2] +
mov word ptr [ebp+pv] ax +
mov word ptr [ebp+pv+2] ax +
movzx eax ax +
push eax  +
call sub_40928D  +
pop ecx  +
mov [ebp-8] eax +
cmp eax ebx +
jnz loc_4192B9  +
mov eax 8007000Eh +
jmp loc_4193BF  +
push [ebp+arg_4]  +
movzx ecx word ptr [ebp+pv] +
push dword ptr [ebp+lpString]  +
push offset aSS_1  +
push ecx  +
push eax  +
call sub_41633E  +
add esp 14h +
cmp eax ebx +
jge loc_4192E8  +
mov esi eax +
push dword ptr [ebp-8]  +
call sub_4092A2  +
pop ecx  +
mov eax esi +
jmp loc_4193BF  +
cmp [ebp+arg_8] ebx +
jz loc_419330  +
mov esi [ebp+cb] +
push esi  +
mov word ptr [ebp+var_14] si +
mov word ptr [ebp+var_14+2] si +
call sub_40928D  +
pop ecx  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_41931E  +
movzx eax word ptr [ebp+pv] +
mov ecx [ebp-8] +
cmp eax ebx +
jz loc_419317  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_419311  +
mov esi 8007000Eh +
jmp loc_4192D8  +
push esi  +
push [ebp+arg_8]  +
push eax  +
call memcpy  +
add esp 0Ch +
lea esi [ebp+var_14] +
jmp loc_419332  +
xor esi esi +
lea eax [ebp+ObjectHandle] +
push eax  +
push 20h  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push ebx  +
mov [ebp+ObjectAttributes.Length] 18h +
call LsaOpenPolicy  +
mov edi eax +
cmp edi ebx +
jnz loc_41935E  +
push esi  +
lea eax [ebp+pv] +
push eax  +
push [ebp+ObjectHandle]  +
call LsaStorePrivateData  +
mov edi eax +
mov ecx [ebp-8] +
cmp ecx ebx +
jz loc_41937C  +
movzx eax word ptr [ebp+pv] +
cmp eax ebx +
jz loc_419373  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_41936D  +
push dword ptr [ebp-8]  +
call sub_4092A2  +
pop ecx  +
mov ecx [ebp+var_10] +
cmp ecx ebx +
jz loc_41939A  +
movzx eax word ptr [ebp+var_14] +
cmp eax ebx +
jz loc_419391  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_41938B  +
push [ebp+var_10]  +
call sub_4092A2  +
pop ecx  +
cmp [ebp+ObjectHandle] ebx +
jz loc_4193A7  +
push [ebp+ObjectHandle]  +
call LsaClose  +
cmp edi ebx +
jz loc_4193BD  +
jle loc_4193B9  +
and edi 0FFFFh +
or edi 80070000h +
mov eax edi +
jmp loc_4193BF  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+ObjectAttributes.Length] 0 +
and [ebp+ObjectHandle] 0 +
push esi  +
mov esi ds:lstrlenW +
push edi  +
push dword ptr [ebp+lpString]  +
xor eax eax +
lea edi [ebp+ObjectAttributes.RootDirectory] +
stos   +
stos   +
stos   +
stos   +
stos   +
call esi  +
push [ebp+arg_4]  +
mov edi eax +
call esi  +
add edi eax +
lea eax [edi+edi+2] +
movzx esi ax +
mov word ptr [ebp+KeyName] ax +
mov word ptr [ebp+KeyName+2] ax +
mov eax esi +
call __alloca_probe_16  +
mov [ebp-10h] esp +
push [ebp+arg_4]  +
push dword ptr [ebp+lpString]  +
push offset aSS_1  +
push esi  +
push dword ptr [ebp-10h]  +
call sub_41633E  +
mov edi eax +
add esp 14h +
test edi edi +
jl loc_419463  +
lea eax [ebp+ObjectHandle] +
push eax  +
push 4  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push 0  +
mov [ebp+ObjectAttributes.Length] 18h +
call LsaOpenPolicy  +
test eax eax +
jz loc_419476  +
jle loc_419463  +
and eax 0FFFFh +
or eax 80070000h +
lea esp [ebp-34h] +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_412CC0  +
leave   +
retn 10h  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+KeyName] +
push eax  +
push [ebp+ObjectHandle]  +
call LsaRetrievePrivateData  +
mov esi eax +
test esi esi +
jz loc_4194A8  +
push [ebp+ObjectHandle]  +
call LsaClose  +
test esi esi +
jle loc_4194A4  +
and esi 0FFFFh +
or esi 80070000h +
mov eax esi +
jmp loc_419463  +
mov eax [ebp+Buffer] +
test eax eax +
jnz loc_4194BE  +
mov esi 8000FFFFh +
push [ebp+ObjectHandle]  +
call LsaClose  +
jmp loc_4194A4  +
movzx ecx word ptr [eax] +
mov edx [ebp+arg_C] +
mov [edx] ecx +
movzx eax word ptr [eax] +
push eax  +
call ds:CoTaskMemAlloc  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
test eax eax +
jz loc_4194EE  +
mov ecx [ebp+Buffer] +
movzx edx word ptr [ecx] +
push edx  +
push dword ptr [ecx+4]  +
push eax  +
call memcpy  +
add esp 0Ch +
jmp loc_4194F3  +
mov edi 8007000Eh +
mov eax [ebp+Buffer] +
movzx edx word ptr [eax] +
mov ecx [eax+4] +
test edx edx +
jz loc_41950A  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec edx  +
jnz loc_419500  +
mov eax [ebp+Buffer] +
push eax  +
call LsaFreeMemory  +
mov esi edi +
jmp loc_4194B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:LogonUserW +
push esi  +
push edi  +
lea eax [ebp+hObject] +
push eax  +
xor edi edi +
push edi  +
push 3  +
push [ebp+lpszPassword]  +
mov [ebp+var_4] edi +
push dword ptr [ebp+lpszDomain]  +
mov [ebp+hObject] edi +
push [ebp+lpszUsername]  +
call ebx  +
mov esi eax +
call ds:__imp_GetLastError  +
cmp esi edi +
jnz loc_41962B  +
cmp eax 569h +
jz loc_419565  +
cmp eax 544h +
jnz loc_419639  +
xor esi esi +
cmp dword ptr [ebp+lpszDomain] edi +
mov edi ds:lstrlenW +
jz loc_41957A  +
push dword ptr [ebp+lpszDomain]  +
call edi  +
mov esi eax +
inc esi  +
push [ebp+lpszUsername]  +
call edi  +
lea esi [esi+eax+1] +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_4195A7  +
xor eax eax +
jmp loc_41963B  +
cmp dword ptr [ebp+lpszDomain] 0 +
jz loc_4195C4  +
push dword ptr [ebp+lpszDomain]  +
push offset aS  +
push esi  +
push edi  +
call sub_413E9B  +
add esp 10h +
mov [ebp+var_4] eax +
jmp loc_4195C9  +
xor eax eax +
mov [edi] ax +
cmp [ebp+var_4] 0 +
jl loc_4195DD  +
push [ebp+lpszUsername]  +
push esi  +
push edi  +
call sub_409DA8  +
test eax eax +
jge loc_4195E6  +
push edi  +
call sub_4092A2  +
pop ecx  +
jmp loc_4195A0  +
push offset aSebatchlogonri  +
push edi  +
call sub_418F18  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_4195DD  +
lea eax [ebp+hObject] +
push eax  +
push 0  +
push 4  +
push [ebp+lpszPassword]  +
push dword ptr [ebp+lpszDomain]  +
push [ebp+lpszUsername]  +
call ebx  +
cmp [ebp+var_4] 0 +
mov esi eax +
jnz loc_41961E  +
push offset aSebatchlogonri  +
push edi  +
call sub_4190EA  +
push edi  +
call sub_4092A2  +
pop ecx  +
test esi esi +
jz loc_419639  +
xor edi edi +
cmp [ebp+hObject] edi +
jz loc_419639  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
movzx eax word ptr [edi+2] +
push eax  +
call sub_40928D  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_41966F  +
mov eax 8007000Eh +
jmp loc_419728  +
mov byte ptr [ebx] 2 +
mov byte ptr [ebx+1] 0 +
mov ax [edi+2] +
mov [ebx+2] ax +
xor eax eax +
and [ebp+var_10] eax +
push esi  +
mov [ebx+4] ax +
mov [ebx+6] ax +
cmp ax [edi+4] +
lea esi [edi+8] +
mov [ebp+var_14] 8 +
jmp loc_419713  +
and [ebp+var_8] 0 +
lea eax [ebx+8] +
mov [ebp+var_4] eax +
xor eax eax +
cmp ax [ebx+4] +
jnb loc_4196E5  +
movzx eax word ptr [esi+2] +
mov edx [ebp+var_4] +
movzx ecx word ptr [edx+2] +
cmp ax cx +
jnz loc_4196CF  +
movzx ecx ax +
mov edi edx +
xor edx edx +
cmps   +
mov edi [ebp+arg_0] +
mov esi [ebp+pAceList] +
jz loc_419704  +
mov ecx [ebp+var_4] +
movzx ecx word ptr [ecx+2] +
add [ebp+var_4] ecx +
movzx ecx word ptr [ebx+4] +
inc [ebp+var_8]  +
cmp [ebp+var_8] ecx +
jb loc_4196B2  +
movzx eax word ptr [esi+2] +
push eax  +
push esi  +
push 0FFFFFFFFh  +
push 2  +
push ebx  +
call ds:AddAce  +
test eax eax +
jz loc_41972E  +
movzx eax word ptr [esi+2] +
movzx ecx ax +
add [ebp+var_14] ecx +
movzx eax ax +
add esi eax +
movzx eax word ptr [edi+4] +
inc [ebp+var_10]  +
cmp [ebp+var_10] eax +
mov [ebp+pAceList] esi +
jb loc_41969C  +
mov ax word ptr [ebp+var_14] +
mov [ebx+2] ax +
mov eax [ebp+arg_4] +
mov [eax] ebx +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
push ebx  +
call sub_4092A2  +
pop ecx  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_419727  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_419727  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_41977A  +
test [ebp+arg_8] 1000h +
jz loc_41977A  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_4197C2  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_4197AA  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_4197C2  +
test esi esi +
jbe loc_4197DB  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_4197DB  +
test [ebp+arg_8] 800h +
jz loc_4197DB  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
add ecx 4 +
push ecx  +
call ds:EnterCriticalSection  +
retn   +
***
add ecx 4 +
push ecx  +
call ds:LeaveCriticalSection  +
retn   +
***
cmp dword_424ED0 0 +
jnz loc_419815  +
call sub_41AF6F  +
mov eax dword_424EAC +
retn   +
***
mov eax dword_423E3C +
test eax eax +
jnz locret_41983C  +
push 2  +
push eax  +
push offset aComres_dll  +
call ds:LoadLibraryExW  +
mov dword_423E3C eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpBuffer] +
push 80h  +
push eax  +
push [ebp+uID]  +
xor ecx ecx +
mov [eax] cx +
call sub_419820  +
push eax  +
call ds:LoadStringW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_419899  +
and dword ptr [esi] 0 +
mov eax dword_423E40 +
test eax eax +
jz loc_419899  +
and [ebp+arg_0] 0 +
lea ecx [ebp+arg_0] +
push ecx  +
call eax  +
test eax eax +
jl loc_419899  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov eax [ebp-20h] +
cmp eax esi +
jnz locret_419944  +
mov eax dword_423E38 +
mov [ebp-20h] eax +
retn   +
***
cmp [ebp-1Ch] esi +
jl locret_419A16  +
mov eax [ebp+10h] +
cmp [eax] esi +
jnz locret_419A16  +
mov dword ptr [ebp-1Ch] 80004005h +
retn   +
***
push eax  +
call ds:TerminateProcess  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_14] +
push esi  +
and eax 100h +
push edi  +
mov [ebp+var_10] eax +
jz loc_419B16  +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_419A5D  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_419A68  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
jbe loc_419A6D  +
mov eax 80070057h +
test eax eax +
jl loc_419A79  +
test edx edx +
jnz loc_419B34  +
and [ebp+var_4] 0 +
mov esi eax +
test eax eax +
jl loc_419B0E  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
sub ebx eax +
xor esi esi +
lea edi [ecx+eax*2] +
mov [ebp+var_8] edi +
mov [ebp+var_C] ebx +
cmp [ebp+var_10] esi +
jz loc_419AAF  +
cmp [ebp+arg_8] esi +
jnz loc_419AAF  +
mov [ebp+arg_8] offset dword_402F60 +
test [ebp+arg_14] 0FFFFE000h +
jz loc_419B44  +
mov esi 80070057h +
test [ebp+arg_14] 1C00h +
jz loc_419AEF  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_419AEF  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+var_4] +
add eax eax +
push eax  +
lea ebx [ebp+var_C] +
call sub_419750  +
mov edi [ebp+var_8] +
mov ebx [ebp+var_C] +
test esi esi +
jge loc_419AFB  +
cmp esi 8007007Ah +
jnz loc_419B0D  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_419B04  +
mov [eax] edi +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_419B0D  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_419B27  +
cmp edx 7FFFFFFFh +
jbe loc_419B2C  +
mov eax 80070057h +
test eax eax +
jl loc_419A79  +
mov eax [ebp+arg_0] +
lea edi [ebp+var_4] +
call sub_40916A  +
jmp loc_419A7D  +
cmp ebx 1 +
ja loc_419B65  +
mov eax [ebp+arg_8] +
cmp [eax] si +
jz loc_419AFB  +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_419AC1  +
push 7FFFFFFEh  +
lea eax [ebp+var_C] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ebx +
mov ecx edi +
mov [ebp+var_C] esi +
call sub_4091D4  +
mov esi eax +
mov eax [ebp+var_C] +
sub ebx eax +
lea edi [edi+eax*2] +
mov [ebp+var_8] edi +
mov [ebp+var_C] ebx +
test esi esi +
jl loc_419AC1  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_419AFB  +
cmp ebx 1 +
jbe loc_419AFB  +
lea ecx [ebx+ebx] +
cmp ecx 2 +
jbe loc_419AFB  +
add ecx 0FFFFFFFEh +
push ecx  +
and eax 0FFh +
push eax  +
lea eax [edi+2] +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_419AFB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
xor eax eax +
cmp [esi] eax +
jz loc_419C07  +
push 1000h  +
lea ecx [ebp+arg_C] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov [ebp+arg_C] eax +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
call sub_419A34  +
mov eax [ebp+arg_C] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_423E30 0 +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov [ebp+var_58] eax +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+var_5C] eax +
mov edi offset Buffer +
mov ebx 400h +
mov esi offset word_423390 +
jz loc_419CEE  +
xor eax eax +
mov word ptr [ebp+sz] ax +
push 27h  +
lea eax [ebp+sz] +
push eax  +
push offset rguid  +
call ds:StringFromGUID2  +
push edi  +
xor eax eax +
push 39Fh  +
mov Buffer ax +
call sub_419842  +
xor eax eax +
mov word_423390 ax +
lea eax [ebp+sz] +
push eax  +
push edi  +
push ebx  +
push esi  +
call sub_413E9B  +
add esp 10h +
push [ebp+var_5C]  +
push [ebp+var_58]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
xor eax eax +
mov word ptr [ebp+sz] ax +
push 27h  +
lea eax [ebp+sz] +
push eax  +
push offset stru_423E44  +
call ds:StringFromGUID2  +
push edi  +
xor eax eax +
push 3B0h  +
mov Buffer ax +
call sub_419842  +
xor eax eax +
mov word_423390 ax +
lea eax [ebp+sz] +
push eax  +
push edi  +
push ebx  +
push esi  +
call sub_413E9B  +
add esp 10h +
push [ebp+var_5C]  +
push [ebp+var_58]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
cmp dword_423E2C 0 +
jz loc_419D31  +
push edi  +
xor eax eax +
push 3A0h  +
mov Buffer ax +
call sub_419842  +
push offset unk_423DA8  +
push edi  +
xor eax eax +
push ebx  +
push esi  +
mov word_423390 ax +
call sub_413E9B  +
add esp 10h +
push [ebp+var_5C]  +
push [ebp+var_58]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
xor eax eax +
cmp dword_423E30 eax +
jnz loc_419DC5  +
cmp dword_423E2C eax +
jnz loc_419DC5  +
push 80h  +
push offset Filename  +
push eax  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_419DC5  +
mov eax offset Filename +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_419D64  +
sub eax edx +
sar eax 1 +
jmp loc_419D7F  +
cmp Filename[eax*2] 5Ch +
jz loc_419D85  +
dec eax  +
mov [ebp+var_60] eax +
jnz loc_419D74  +
push edi  +
xor eax eax +
push 3AEh  +
mov Buffer ax +
call sub_419842  +
xor eax eax +
mov word_423390 ax +
mov eax [ebp+var_60] +
lea eax byte_42318A[eax*2] +
push eax  +
push edi  +
push ebx  +
push esi  +
call sub_413E9B  +
add esp 10h +
push [ebp+var_5C]  +
push [ebp+var_58]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aTheSeriousNatu  +
push 81h  +
mov esi offset Filename +
push esi  +
call sub_409CFE  +
push esi  +
push 3A1h  +
call sub_419842  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+dwMessageId] 0 +
jz loc_419E94  +
push esi  +
push edi  +
push offset aErrorCode0x08x  +
push 81h  +
mov esi offset Filename +
push esi  +
call sub_409CFE  +
push esi  +
push 3A2h  +
call sub_419842  +
xor eax eax +
push eax  +
push 80h  +
mov edi offset Buffer +
push edi  +
push eax  +
push dword ptr [ebp+dwMessageId]  +
mov Buffer ax +
push eax  +
push 1200h  +
call ds:FormatMessageW  +
push edi  +
push dword ptr [ebp+dwMessageId]  +
push esi  +
push 400h  +
mov esi offset word_423390 +
push esi  +
call sub_413E9B  +
add esp 14h +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aInternalsInfor  +
push 81h  +
mov esi offset Filename +
push esi  +
call sub_409CFE  +
push esi  +
push 3A3h  +
call sub_419842  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push esi  +
push 400h  +
mov esi offset word_423390 +
push esi  +
call sub_413E9B  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_419BD8  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
push offset aNotLoaded  +
push [ebp+arg_C]  +
xor eax eax +
push [ebp+arg_10]  +
mov [ecx] ax +
call sub_409CFE  +
mov ecx [ebp+arg_18] +
push [ebp+lpModuleName]  +
xor eax eax +
mov [ecx] ax +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_41A036  +
push 10h  +
push 1  +
push esi  +
call ds:FindResourceW  +
test eax eax +
jz loc_41A036  +
push eax  +
push esi  +
call ds:LoadResource  +
test eax eax +
jz loc_41A036  +
push eax  +
call ds:LockResource  +
mov edi eax +
test edi edi +
jz loc_41A036  +
movzx esi word ptr [edi] +
mov eax esi +
shr eax 1 +
add eax esi +
call __alloca_probe_16  +
mov ebx esp +
push esi  +
push edi  +
push ebx  +
call memcpy  +
add esp 0Ch +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push ebx  +
call VerQueryValueW  +
test eax eax +
jz loc_419FD0  +
mov ecx [ebp+lpBuffer] +
movzx ecx word ptr [ecx] +
xor eax eax +
cmp cx ds:word_408308[eax*8] +
jz loc_419FBE  +
inc eax  +
cmp eax 27h +
jb loc_419FAC  +
jmp loc_419FD0  +
push ds:off_40830C[eax*8]  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
call sub_409CFE  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset asc_4026C8  +
push ebx  +
call VerQueryValueW  +
test eax eax +
jz loc_41A036  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+8] 0FFFFFFFFh +
jz loc_41A01A  +
movzx ecx word ptr [eax+0Ch] +
push ecx  +
movzx ecx word ptr [eax+0Eh] +
push ecx  +
movzx ecx word ptr [eax+8] +
movzx eax word ptr [eax+0Ah] +
push ecx  +
push eax  +
push offset aU_U_U_U  +
push [ebp+arg_C]  +
push [ebp+arg_10]  +
call sub_413E9B  +
mov eax [ebp+var_8] +
add esp 1Ch +
test byte ptr [eax+1Ch] 1 +
mov eax offset aDbg +
jnz loc_41A02A  +
mov eax offset aShp +
push eax  +
push [ebp+arg_14]  +
push [ebp+arg_18]  +
call sub_409CFE  +
lea esp [ebp-1Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_412CC0  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push offset aComsvcs_dllFil  +
push 81h  +
mov esi offset Filename +
push esi  +
call sub_409CFE  +
push esi  +
push 3AFh  +
call sub_419842  +
lea eax [ebp+var_1C] +
push eax  +
push 5  +
lea eax [ebp+var_80] +
push eax  +
push 32h  +
lea eax [ebp+var_10] +
push eax  +
push 5  +
push offset ModuleName  +
call sub_419EF6  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_80] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push esi  +
push 400h  +
mov esi offset word_423390 +
push esi  +
call sub_413E9B  +
add esp 18h +
push ebx  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_419BD8  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+dwEventID] +
push ebx  +
shr eax 1Eh +
push esi  +
push edi  +
cmp eax 1 +
jbe loc_41A10A  +
push 2  +
pop ebx  +
cmp eax ebx +
jz loc_41A10D  +
xor ebx ebx +
inc ebx  +
jmp loc_41A10D  +
push 4  +
pop ebx  +
lea eax [ebp+var_4] +
xor edi edi +
push eax  +
mov [ebp+var_4] edi +
call sub_41986D  +
mov esi [ebp+var_4] +
cmp esi edi +
jz loc_41A147  +
movzx ecx [ebp+wNumStrings] +
mov eax [esi] +
push edi  +
push [ebp+lpStrings]  +
push edi  +
push ecx  +
movzx ecx [ebp+wCategory] +
push edi  +
push [ebp+dwEventID]  +
push ecx  +
movzx ecx bx +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_41A177  +
push offset SourceName  +
push edi  +
call ds:RegisterEventSourceW  +
mov esi eax +
cmp esi edi +
jz loc_41A177  +
push edi  +
push [ebp+lpStrings]  +
push edi  +
push dword ptr [ebp+wNumStrings]  +
push edi  +
push [ebp+dwEventID]  +
push dword ptr [ebp+wCategory]  +
push ebx  +
push esi  +
call ds:ReportEventW  +
push esi  +
call ds:DeregisterEventSource  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+Strings] +
mov [ebp+Strings] eax +
lea eax [ebp+Strings] +
push eax  +
push 1  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+dwEventID]  +
push dword ptr [ebp+wCategory]  +
call sub_41A0EA  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 87Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov dword ptr [ebp+var_87C] eax +
xor eax eax +
push 206h  +
mov [ebp+FileName] ax +
xor edi edi +
lea eax [ebp-622h] +
push edi  +
push eax  +
call memset  +
xor eax eax +
mov esi 208h +
push esi  +
mov [ebp+var_41C] ax +
lea eax [ebp-41Ah] +
push edi  +
push eax  +
call memset  +
xor eax eax +
push esi  +
mov [ebp+var_210] ax +
lea eax [ebp-20Eh] +
push edi  +
push eax  +
call memset  +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push edi  +
push eax  +
xor esi esi +
mov [ebp+FindFileData.dwFileAttributes] edi +
call memset  +
push ebx  +
push dword ptr [ebp+var_87C]  +
lea eax [ebp+FileName] +
push offset aSS_dmp  +
push 104h  +
push eax  +
call sub_413E9B  +
add esp 44h +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_41A2CE  +
inc esi  +
cmp [ebp+var_41C] di +
jz loc_41A29F  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_41A2B7  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push 105h  +
lea eax [ebp+var_41C] +
push eax  +
call sub_409CFE  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_41A27B  +
cmp esi [ebp+arg_8] +
jb loc_41A364  +
lea eax [ebp+var_41C] +
push eax  +
push dword ptr [ebp+var_87C]  +
lea eax [ebp+var_210] +
push offset aSS  +
push 105h  +
push eax  +
call sub_413E9B  +
mov esi ds:SetFileAttributesW +
add esp 14h +
mov ebx 80h +
push ebx  +
lea eax [ebp+var_210] +
push eax  +
call esi  +
mov edi ds:DeleteFileW +
lea eax [ebp+var_210] +
push eax  +
call edi  +
lea eax [ebp+var_210] +
push 2Eh  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41A364  +
xor ecx ecx +
push offset a_txt  +
mov [eax] cx +
push 105h  +
lea eax [ebp+var_210] +
push eax  +
call sub_409DA8  +
push ebx  +
lea eax [ebp+var_210] +
push eax  +
call esi  +
lea eax [ebp+var_210] +
push eax  +
call edi  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
jz loc_41A37C  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 46Ch +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
push edi  +
mov [ebp+CommandLine] ax +
mov [ebp+var_6] ax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+CommandLine] +
push 208h  +
push eax  +
call sub_409E02  +
xor edi edi +
cmp eax edi +
jl loc_41A480  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push 6  +
pop eax  +
mov [ebp+StartupInfo.wShowWindow] ax +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push edi  +
push edi  +
push 8  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+CommandLine] +
push eax  +
push edi  +
mov [ebp+StartupInfo.cb] 44h +
mov [ebp+StartupInfo.dwFlags] 81h +
call ds:CreateProcessW  +
test eax eax +
jz loc_41A46C  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hObject]  +
call ds:GetExitCodeProcess  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-424h]  +
call esi  +
mov eax [ebp+ExitCode] +
pop esi  +
jmp loc_41A472  +
call ds:__imp_GetLastError  +
cmp eax edi +
jle loc_41A480  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_412CC0  +
leave   +
retn   +
***
call __SEH_prolog4_GS  +
jmp loc_41A6FB  +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-27Ch] 8000FFFFh +
***
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_27C] +
call __SEH_epilog4_GS  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push edi  +
xor edi edi +
mov ebx offset CriticalSection +
cmp dword_423EA0 edi +
jz loc_41A735  +
push ebx  +
call ds:EnterCriticalSection  +
cmp dword_42338C edi +
jnz loc_41A7B7  +
push esi  +
xor eax eax +
mov esi offset word_423B98 +
push esi  +
mov word_423B98 ax +
call sub_41A492  +
cmp eax edi +
jnz loc_41A779  +
push 28h  +
pop ecx  +
xor eax eax +
inc eax  +
push esi  +
mov dword_42338C eax +
mov [ebp+var_20] edi +
mov [ebp+var_1C] cx +
mov [ebp+var_18] 40000309h +
mov [ebp+var_4] eax +
push 4C2h  +
jmp loc_41A799  +
jge loc_41A7B6  +
push 28h  +
mov [ebp+var_20] eax +
pop eax  +
push esi  +
mov [ebp+var_1C] ax +
mov [ebp+var_18] 4000030Ah +
mov [ebp+var_4] 1 +
push 4C6h  +
lea eax [ebp+var_20] +
push offset aDW7rtmComCom_4  +
push eax  +
mov [ebp+var_14] esi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
call sub_41AB41  +
add esp 10h +
pop esi  +
push ebx  +
call ds:LeaveCriticalSection  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-338h] eax +
mov [ebp-340h] edi +
mov [ebp-320h] ebx +
mov [ebp-328h] ebx +
call sub_419807  +
test eax eax +
jz loc_41AAE3  +
cmp [ebp+18h] ebx +
jz loc_41AAE3  +
call ds:IsDebuggerPresent  +
test eax eax +
jnz loc_41AADD  +
call sub_41B37C  +
test eax eax +
jnz loc_41AADD  +
lea eax [ebp-320h] +
push eax  +
push offset stru_408EF4  +
push 3  +
push ebx  +
push offset stru_408EC4  +
mov [ebp-324h] ebx +
call ds:CoCreateInstance  +
cmp eax ebx +
jl loc_41AA85  +
mov eax [ebp-320h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_41A877  +
mov eax [ebp-320h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-320h] ebx +
jmp loc_41AA85  +
push 2C8h  +
lea eax [ebp-318h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp-31Ch] +
push eax  +
mov dword ptr [ebp-31Ch] 10001h +
call ds:GetCurrentThread  +
push eax  +
call ds:GetThreadContext  +
mov eax [ebp-320h] +
mov ecx [eax] +
push ebx  +
push ebx  +
lea edx [ebp-31Ch] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-328h] eax +
cmp eax ebx +
jz loc_41AA85  +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
xor ecx ecx +
push 2  +
pop edx  +
mov esi eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
pop ecx  +
mov ecx eax +
mov [ebp-32Ch] ecx +
cmp ecx ebx +
jz loc_41AA85  +
push ebx  +
xor eax eax +
push ecx  +
mov [ecx] ax +
mov eax [ebp-328h] +
mov edx [eax] +
push esi  +
push eax  +
call dword ptr [edx+14h]  +
test eax eax +
jz loc_41AA71  +
mov eax [ebp-32Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_41A920  +
sub eax edx +
sar eax 1 +
mov esi eax +
mov eax [ebp-338h] +
cmp eax ebx +
jz loc_41A94D  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_41A93D  +
sub eax edx +
sar eax 1 +
add esi eax +
cmp edi ebx +
jz loc_41A966  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_41A956  +
sub eax edx +
sar eax 1 +
add esi eax +
push 20Ah  +
call sub_40928D  +
mov edi eax +
pop ecx  +
mov [ebp-33Ch] edi +
cmp edi ebx +
jz loc_41A99A  +
push 104h  +
push edi  +
xor eax eax +
push ebx  +
mov [edi] ax +
call ds:GetModuleFileNameW  +
add esi eax +
xor eax eax +
mov [edi+208h] ax +
add esi 200h +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40928D  +
pop ecx  +
mov [ebp-324h] eax +
cmp eax ebx +
jz loc_41AA66  +
call ds:GetCurrentProcessId  +
mov [ebp-334h] eax +
call ds:GetCurrentThreadId  +
mov ecx [ebp-338h] +
mov [ebp-330h] eax +
mov eax offset dword_402F60 +
cmp ecx ebx +
jnz loc_41A9EE  +
mov ecx eax +
cmp edi ebx +
mov ebx edi +
jnz loc_41A9F6  +
mov ebx eax +
mov edi [ebp-340h] +
test edi edi +
jnz loc_41AA02  +
mov edi eax +
push ecx  +
lea eax [ebp-50h] +
push eax  +
call ds:_wstrdate  +
pop ecx  +
push eax  +
lea eax [ebp-30h] +
push eax  +
call ds:_wstrtime  +
pop ecx  +
push eax  +
push dword ptr [ebp-334h]  +
push dword ptr [ebp-334h]  +
push dword ptr [ebp-330h]  +
push dword ptr [ebp-330h]  +
push ebx  +
push dword ptr [ebp+10h]  +
push edi  +
push offset aFileSLineDExeN  +
push esi  +
push dword ptr [ebp-324h]  +
call sub_413E9B  +
add esp 34h +
push dword ptr [ebp-32Ch]  +
push esi  +
push dword ptr [ebp-324h]  +
call sub_409DA8  +
mov edi [ebp-33Ch] +
xor ebx ebx +
cmp edi ebx +
jz loc_41AA71  +
push edi  +
call sub_4092A2  +
pop ecx  +
push dword ptr [ebp-32Ch]  +
call sub_4092A2  +
pop ecx  +
cmp [ebp-324h] ebx +
jnz loc_41AA90  +
mov eax off_41D19C +
mov [ebp-324h] eax +
mov esi [ebp-324h] +
push esi  +
lea ecx [ebp-35Ch] +
call sub_41B0B0  +
lea ecx [ebp-35Ch] +
mov [ebp-4] ebx +
call sub_41B325  +
cmp eax 25Bh +
jnz loc_41AABD  +
call ds:DebugBreak  +
cmp esi off_41D19C +
jz loc_41AACC  +
push esi  +
call sub_4092A2  +
pop ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-35Ch] +
call nullsub_7  +
jmp loc_41AAE3  +
call ds:DebugBreak  +
cmp [ebp+14h] ebx +
jz loc_41AAED  +
call sub_41A715  +
cmp dword_423E34 ebx +
jnz loc_41AAFA  +
call sub_419A1C  +
call sub_41B0A5  +
test eax eax +
jnz loc_41AB08  +
call sub_41B095  +
mov eax [ebp-320h] +
mov dword_423E34 ebx +
cmp eax ebx +
jz loc_41AB24  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-320h] ebx +
mov eax [ebp-328h] +
cmp eax ebx +
jz loc_41AB34  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call sub_41B5CD  +
retn 14h  +
***
call __SEH_prolog4  +
mov edi offset word_4246A8 +
xor ebx ebx +
cmp [ebp-20h] ebx +
jz locret_41ACF7  +
push offset stru_423E68  +
call ds:LeaveCriticalSection  +
retn   +
***
mov eax ecx +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
test byte ptr [esi+4] 1 +
jz loc_41AD21  +
mov eax 8000FFFFh +
jmp loc_41AD72  +
push edi  +
lea edi [esi+8] +
push edi  +
push 1  +
push 4  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jz loc_41AD6F  +
push 0  +
push 0  +
call ds:SetThreadToken  +
test eax eax +
jz loc_41AD4F  +
or dword ptr [esi+4] 1 +
jmp loc_41AD6F  +
push dword ptr [edi]  +
call ds:CloseHandle  +
and [edi] ebx +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_41AD6D  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
movzx eax byte ptr [ecx+4] +
and eax 1 +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
test byte ptr [esi+4] 1 +
jnz loc_41AD9C  +
mov eax 8000FFFFh +
jmp loc_41ADD4  +
push dword ptr [esi+8]  +
push 0  +
call ds:SetThreadToken  +
test eax eax +
jnz loc_41ADC1  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_41ADBF  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push dword ptr [esi+8]  +
call ds:CloseHandle  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+4] 0FFFFFFFEh +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
xor edi edi +
test eax eax +
jz loc_41AE0A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
push 0  +
push 0  +
call ds:SetThreadToken  +
test byte ptr [esi+4] 1 +
jz loc_41AE19  +
mov ecx esi +
call sub_41AD87  +
mov edi eax +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jl loc_41AE27  +
test edi edi +
jge loc_41AE27  +
mov [eax] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
test byte ptr [ecx+4] 1 +
jnz loc_41AE47  +
cmp dword ptr [ecx] 0 +
jz locret_41AE50  +
lea eax [ebp+var_4] +
push eax  +
call sub_41ADDC  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F8h +
mov eax dword_41D174 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpValueName] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+hKey] +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push ebx  +
push edi  +
mov [ebp+cbData] 0F0h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_41AECB  +
cmp [ebp+cbData] 2 +
jb loc_41AEFC  +
mov eax dword ptr [ebp+Data] +
and eax 0FFDFh +
cmp eax 4Eh +
jz loc_41AEC6  +
cmp eax 59h +
jnz loc_41AEFC  +
mov dword ptr [esi] 1 +
jmp loc_41AEFC  +
and dword ptr [esi] 0 +
jmp loc_41AEFC  +
mov eax [esi] +
neg eax  +
sbb eax eax +
and eax 0Bh +
add eax 4Eh +
mov word ptr [ebp+Data] ax +
xor eax eax +
push 4  +
mov [ebp-0F2h] ax +
lea eax [ebp+Data] +
push eax  +
push 1  +
push 0  +
push ebx  +
push edi  +
call ds:RegSetValueExW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_412CC0  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpData] +
mov ebx [esi] +
push edi  +
push 4  +
pop edi  +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
mov [ebp+cbData] edi +
push [ebp+hKey]  +
mov [ebp+Type] edi +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_41AF4E  +
cmp [ebp+Type] edi +
jz loc_41AF61  +
mov [esi] ebx +
jmp loc_41AF61  +
push edi  +
push esi  +
push edi  +
push 0  +
push [ebp+lpValueName]  +
mov [esi] ebx +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 2001Bh  +
push 0  +
mov ebx offset aSoftwareMicr_2 +
push ebx  +
mov edi 80000002h +
push edi  +
call esi  +
test eax eax +
jz loc_41AFB2  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push ebx  +
push edi  +
call esi  +
test eax eax +
jnz loc_41B081  +
push offset unk_424EA8  +
push offset aAutoaddtraceto  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset dword_424EAC  +
push offset aDebugbreakonfa  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EB0  +
push offset aDebugbreakonin  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EB4  +
push offset aDebugbreakonlo  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EB8  +
push offset aTraceactivitym  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EBC  +
push offset aTracecontextcr  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EC0  +
push offset aTraceinfrastru  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EC4  +
push offset aTracestapool  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424EC8  +
push offset aTracesecurity  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset unk_424ECC  +
push offset aTracesecurityp  +
push [ebp+hKey]  +
call sub_41AE57  +
push offset Data  +
push offset aEventdispatcht  +
push [ebp+hKey]  +
call sub_41AF12  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
mov dword_424ED0 1 +
pop ebx  +
leave   +
retn   +
***
mov dword_424ED8 1 +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
call ds:GetDesktopWindow  +
mov edi eax +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
mov esi ds:GetClientRect +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call esi  +
lea eax [ebp+Points] +
push eax  +
push edi  +
call esi  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push edi  +
call ds:MapWindowPoints  +
mov edx [ebp+var_18] +
mov eax [ebp+Points.x] +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
add eax edx +
cdq   +
mov esi [ebp+Rect.bottom] +
sub eax edx +
sub esi [ebp+Rect.top] +
mov edi eax +
mov eax ecx +
cdq   +
sub eax edx +
mov edx [ebp+var_14] +
sar eax 1 +
sar edi 1 +
sub edi eax +
mov eax [ebp+Points.y] +
add eax edx +
cdq   +
sub eax edx +
mov ebx eax +
mov eax esi +
cdq   +
sub eax edx +
sar ebx 1 +
sar eax 1 +
sub ebx eax +
cmp edi [ebp+var_10] +
jge loc_41B154  +
mov edi [ebp+var_10] +
jmp loc_41B162  +
mov eax [ebp+var_8] +
lea edx [edi+ecx] +
cmp edx eax +
jle loc_41B162  +
sub eax ecx +
mov edi eax +
cmp ebx [ebp+var_C] +
jge loc_41B16C  +
mov ebx [ebp+var_C] +
jmp loc_41B17A  +
mov eax [ebp+var_4] +
lea ecx [ebx+esi] +
cmp ecx eax +
jle loc_41B17A  +
sub eax esi +
mov ebx eax +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ebx  +
push edi  +
push 0  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
lea eax [ebp+hObject] +
push eax  +
xor edi edi +
push 8  +
mov esi ecx +
mov [ebp+hObject] edi +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_41B1C8  +
xor eax eax +
jmp loc_41B282  +
push 4  +
pop eax  +
lea ecx [ebp+ReturnLength] +
push ecx  +
push eax  +
mov [ebp+ReturnLength] eax +
lea eax [ebp+TokenInformation] +
push eax  +
push 0Ch  +
push [ebp+hObject]  +
call ds:GetTokenInformation  +
push [ebp+hObject]  +
test eax eax +
jnz loc_41B1F1  +
call ds:CloseHandle  +
jmp loc_41B1C1  +
call ds:CloseHandle  +
mov [ebp+hObject] edi +
cmp [ebp+TokenInformation] edi +
jz loc_41B1C1  +
call ds:GetProcessWindowStation  +
mov [esi+14h] eax +
cmp eax edi +
jz loc_41B1C1  +
mov edi ds:GetCurrentThreadId +
push ebx  +
call edi  +
mov ebx ds:GetThreadDesktop +
push eax  +
call ebx  +
mov [esi+8] eax +
test eax eax +
jz loc_41B270  +
push 37Fh  +
push 0  +
push offset szWinSta  +
call ds:OpenWindowStationW  +
mov [esi+18h] eax +
test eax eax +
jz loc_41B270  +
push eax  +
call ds:SetProcessWindowStation  +
test eax eax +
jz loc_41B270  +
call edi  +
push eax  +
call ebx  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_41B270  +
push 182h  +
push 0  +
push 0  +
push offset szDesktop  +
call ds:OpenDesktopW  +
mov [esi+10h] eax +
test eax eax +
jnz loc_41B274  +
xor eax eax +
jmp loc_41B281  +
push eax  +
call ds:SetThreadDesktop  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+14h]  +
call ds:SetProcessWindowStation  +
test eax eax +
jnz loc_41B2A1  +
xor eax eax +
pop esi  +
retn   +
push dword ptr [esi+8]  +
call ds:SetThreadDesktop  +
test eax eax +
jz loc_41B29D  +
push dword ptr [esi+18h]  +
call ds:CloseWindowStation  +
test eax eax +
jz loc_41B29D  +
push dword ptr [esi+10h]  +
call ds:CloseDesktop  +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_41B301  +
dec eax  +
jnz loc_41B31A  +
mov eax [ebp+arg_8] +
shr eax 10h +
test ax ax +
jnz loc_41B31A  +
movzx eax word ptr [ebp+arg_8] +
push eax  +
push [ebp+hWnd]  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_41B31C  +
push [ebp+lpString]  +
push 259h  +
push [ebp+hWnd]  +
call ds:SetDlgItemTextW  +
push [ebp+hWnd]  +
call sub_41B0CC  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_41B199  +
test eax eax +
jz loc_41B372  +
push ebx  +
push edi  +
push 2  +
push 0  +
push offset aComres_dll  +
call ds:LoadLibraryExW  +
push dword ptr [esi+4]  +
mov edi eax +
push offset DialogFunc  +
push 0  +
push 259h  +
push edi  +
call ds:DialogBoxParamW  +
push edi  +
mov ebx eax +
call ds:__imp_FreeLibrary  +
mov ecx esi +
call sub_41B28B  +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
movzx eax byte ptr ds:7FFE02D4h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
test eax eax +
jle loc_41B3A2  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+arg_1C]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_18]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_40922B  +
mov eax esi +
pop esi  +
pop ebp  +
retn 20h  +
***
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
and dword ptr [esi+1Ch] 0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_408464 +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_41B431  +
push 1  +
push eax  +
push eax  +
push eax  +
push offset aInitializecrit  +
push 0C0021251h  +
push 15h  +
call ds:__imp_GetLastError  +
push eax  +
lea ecx [ebp-20h] +
call sub_41B389  +
push dword ptr [ebp-14h]  +
lea eax [ebp-20h] +
push 94h  +
push offset aDW7rtmComCom_5  +
push eax  +
mov dword ptr [ebp-8] 1 +
call sub_41AB41  +
add esp 10h +
jmp loc_41B438  +
mov dword ptr [esi+1Ch] 1 +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
jmp eax  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_41D174 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_41D174 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_412CC0  +
jmp __EH_epilog3  +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_41B609  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
cmp cl 40h +
jnb loc_41B68A  +
cmp cl 20h +
jnb loc_41B680  +
shrd eax edx +
shr edx cl +
retn   +
***
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
pop ecx  +
retn   +
***
push offset aRolesforpackag  +
call ds:SysAllocString  +
mov dword_422BDC eax +
retn   +
***
push offset aComponentsinpa  +
call ds:SysAllocString  +
mov dword_422BEC eax +
retn   +
***
push offset aPackages_0  +
call ds:SysAllocString  +
mov dword_422BD8 eax +
retn   +
***
push offset aRolesinpackage  +
call ds:SysAllocString  +
mov dword_422BC0 eax +
retn   +
***
push offset aUsersinrole  +
call ds:SysAllocString  +
mov dword_422BC8 eax +
retn   +
***
push offset aInterfacesforc  +
call ds:SysAllocString  +
mov dword_422BE8 eax +
retn   +
***
push offset aRolesforpack_0  +
call ds:SysAllocString  +
mov dword_422BE0 eax +
retn   +
***
push offset aLocalcomputer  +
call ds:SysAllocString  +
mov dword_422BF8 eax +
retn   +
***
push offset aComputerlist  +
call ds:SysAllocString  +
mov dword_422BE4 eax +
retn   +
***
push offset aMethodsforinte  +
call ds:SysAllocString  +
mov dword_422BF0 eax +
retn   +
***
push offset aName_2  +
call ds:SysAllocString  +
mov dword_422BC4 eax +
retn   +
***
push offset aTransactiont_0  +
call ds:SysAllocString  +
mov dword_422BD0 eax +
retn   +
***
push offset aAuthenticati_0  +
call ds:SysAllocString  +
mov dword_422BD4 eax +
retn   +
***
push offset aShutdownafter  +
call ds:SysAllocString  +
mov dword_422BCC eax +
retn   +
***
push offset aChangeable_1  +
call ds:SysAllocString  +
mov dword_422BF4 eax +
retn   +
***
jmp fword ptr [eax+68h]  +
***
jmp fword ptr (byte_41CFFF-41D07Ch)[eax]  +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_40230C +
mov edi offset rguid +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_40230C +
mov edi offset stru_423E44 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
push dword_423174  +
call sub_4092A2  +
pop ecx  +
retn   +
***
push offset stru_423E68  +
mov dword_423E64 offset off_408464 +
call ds:DeleteCriticalSection  +
retn   +
***
mov dword_423E84 offset off_408464 +
call ds:DeleteCriticalSection  +
retn   +
***
sub al al +
add [eax] eax +
rol byte ptr ss:[ecx] 0 +
dec eax  +
rol byte ptr [ecx] 0 +
sub cl dl +
add [eax] eax +
inc eax  +
retf 1  +
***
dec edx  +
retf 1  +
***
pop esi  +
retf 1  +
***
pushf   +
retn   +
***
