mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_10021E0  +
cmp [esi] ax +
jz loc_10021DC  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_10021D2  +
test edx edx +
jnz loc_10021E5  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_10021F6  +
test eax eax +
jl loc_10021F3  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1002231  +
cmp [ebp+arg_4] eax +
jz loc_100222D  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100222D  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1002210  +
test esi esi +
jnz loc_1002239  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002247  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 80000003h +
jz loc_100229E  +
cmp eax 80000002h +
jz loc_100229E  +
cmp eax 80000000h +
jz loc_100229E  +
cmp eax 80000001h +
jz loc_100229E  +
cmp eax 80000005h +
jz loc_100229E  +
cmp eax 80000004h +
jz loc_100229E  +
cmp eax 80000050h +
jz loc_100229E  +
cmp eax 80000060h +
jz loc_100229E  +
cmp eax 80000006h +
jz loc_100229E  +
xor eax eax +
jmp loc_10022A1  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_10022CC  +
cmp edi 0FFFFFFFFh +
jz loc_10022CC  +
push edi  +
call sub_1002253  +
test eax eax +
jnz loc_10022CC  +
push edi  +
call ds:RegCloseKey  +
and dword ptr [esi] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
test ecx ecx +
jz loc_10022EC  +
cmp ecx 3 +
jnz loc_10022F5  +
mov dword ptr [eax+4] 1 +
jmp loc_1002303  +
cmp ecx 1 +
jz loc_10022FF  +
cmp ecx 2 +
jnz loc_1002303  +
and dword ptr [eax+4] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push offset Value  +
push offset Name  +
xor esi esi +
call ds:SetEnvironmentVariableW  +
test eax eax +
jnz loc_100232D  +
call ds:GetLastError  +
mov esi eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
xor esi esi +
push esi  +
push offset Name  +
call ds:SetEnvironmentVariableW  +
test eax eax +
jnz loc_100235D  +
call ds:GetLastError  +
mov esi eax +
cmp esi 0CBh +
jnz loc_100235D  +
xor esi esi +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
xor ebx ebx +
push edi  +
mov ecx esi +
cmp esi ebx +
jz loc_10023F3  +
mov edx [ebp+arg_4] +
cmp edx ebx +
jz loc_10023F3  +
cmp [esi] bx +
jz loc_10023F3  +
push 2  +
pop edi  +
add ecx edi +
movzx eax word ptr [ecx] +
cmp ax 27h +
jnz loc_1002394  +
inc ebx  +
test ax ax +
jnz loc_1002388  +
test ebx ebx +
jz loc_10023F3  +
and dword ptr [edx] 0 +
push esi  +
call ds:lstrlenW  +
add eax ebx +
lea eax [eax+eax+2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
test eax eax +
jnz loc_10023BF  +
push 0Eh  +
pop eax  +
jmp loc_10023F5  +
mov ecx eax +
jmp loc_10023E1  +
cmp dx 27h +
jnz loc_10023DA  +
push 27h  +
pop edx  +
mov [ecx] dx +
add ecx edi +
add esi edi +
mov [ecx] dx +
add ecx edi +
jmp loc_10023E1  +
mov [ecx] dx +
add ecx edi +
add esi edi +
movzx edx word ptr [esi] +
test dx dx +
jnz loc_10023C3  +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jle loc_100243D  +
cmp word ptr [esi] 22h +
jnz loc_100243D  +
cmp word ptr [esi+eax*2-2] 22h +
jnz loc_100243D  +
xor ecx ecx +
mov [esi+eax*2-2] cx +
lea eax [eax+eax-2] +
push eax  +
lea eax [esi+2] +
push eax  +
push esi  +
call ds:memmove  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100245C  +
push eax  +
call ds:LocalFree  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1002481  +
cmp edx 7FFFFFFFh +
jbe loc_1002486  +
mov eax 80070057h +
test eax eax +
jl loc_100249C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10021FC  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_10024BE  +
cmp edx esi +
jbe loc_10024C3  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_10024DB  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_10021C5  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_10024DD  +
xor ecx ecx +
test eax eax +
jl loc_10024F4  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_10021FC  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002515  +
cmp ecx 7FFFFFFFh +
jbe loc_100251A  +
mov eax 80070057h +
test eax eax +
jl loc_1002557  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002547  +
cmp eax esi +
ja loc_1002547  +
jnz loc_1002552  +
jmp loc_100254C  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
push offset SubKey  +
push 80000001h  +
mov [ebp+hKey] esi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100261C  +
lea eax [ebp+FileTime1] +
push eax  +
lea eax [ebp+cbSecurityDescriptor] +
push eax  +
lea eax [ebp+cbMaxValueLen] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
lea eax [ebp+cbMaxClassLen] +
push eax  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jnz loc_100261C  +
cmp FileTime2.dwLowDateTime esi +
jz loc_10025DA  +
push offset FileTime2  +
lea eax [ebp+FileTime1] +
push eax  +
call ds:CompareFileTime  +
cmp eax 1 +
jnz loc_100261C  +
mov eax [ebp+FileTime1.dwLowDateTime] +
mov FileTime2.dwLowDateTime eax +
mov eax [ebp+FileTime1.dwHighDateTime] +
push edi  +
push offset LibFileName  +
mov FileTime2.dwHighDateTime eax +
call ds:LoadLibraryW  +
mov edi eax +
cmp edi esi +
jz loc_100261B  +
push offset ProcName  +
push edi  +
call ds:GetProcAddress  +
cmp eax esi +
jz loc_1002614  +
push 1  +
lea ecx [ebp+var_24] +
push ecx  +
call eax  +
push edi  +
call ds:FreeLibrary  +
pop edi  +
lea ecx [ebp+hKey] +
call sub_10022AA  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ds:GetEnvironmentVariableW +
push edi  +
push 0  +
push 0  +
push [ebp+lpName]  +
call esi  +
mov edi eax +
test edi edi +
jnz loc_1002650  +
xor eax eax +
jmp loc_100268F  +
and [ebp+hMem] 0 +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
push eax  +
lea ecx [ebp+hMem] +
call sub_1002447  +
cmp [ebp+hMem] 0 +
jz loc_100264C  +
push edi  +
push [ebp+hMem]  +
push [ebp+lpName]  +
call esi  +
test eax eax +
jnz loc_1002687  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_100264C  +
dec edi  +
cmp eax edi +
jnz loc_100267C  +
mov eax [ebp+hMem] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi offset aPath +
push edi  +
call sub_100262F  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
test eax eax +
jz loc_1002726  +
push ebx  +
push esi  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
push [ebp+lpString]  +
mov ebx eax +
call esi  +
and [ebp+var_4] 0 +
add ebx eax +
lea ebx [ebx+ebx+4] +
push ebx  +
push 40h  +
call ds:LocalAlloc  +
push eax  +
lea ecx [ebp+var_4] +
call sub_1002447  +
mov esi [ebp+var_4] +
test esi esi +
jnz loc_10026EE  +
xor eax eax +
jmp loc_1002724  +
push [ebp+lpString]  +
shr ebx 1 +
push ebx  +
push esi  +
call sub_100246B  +
push offset asc_1001228  +
push ebx  +
push esi  +
call sub_10024A5  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push ebx  +
push esi  +
call sub_10024A5  +
push esi  +
push edi  +
call ds:SetEnvironmentVariableW  +
push esi  +
call ds:LocalFree  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 72Ch +
mov eax dword_1006110 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+hMem] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+lpCurrentDirectory] eax +
mov eax [ebp+arg_18] +
push esi  +
mov [ebp+var_6AC] eax +
mov eax [ebp+arg_1C] +
push edi  +
mov [ebp+hKey] eax +
xor eax eax +
mov [ebp+ExitCode] eax +
mov esi ds:LocalAlloc +
mov edi 800h +
push edi  +
push 40h  +
mov [ebp+var_690] ecx +
mov [ebp+lpValue] eax +
mov dword ptr [ebp+Data] eax +
mov [ebp+lpPathName] eax +
mov [ebp+lpString] eax +
mov [ebp+var_680] eax +
call esi  +
push eax  +
lea ecx [ebp+lpString] +
call sub_1002447  +
cmp [ebp+lpString] 0 +
jnz loc_10027CF  +
mov dword ptr [ebp+Data] 0Eh +
jmp loc_1002BFB  +
push edi  +
push 40h  +
call esi  +
push eax  +
lea ecx [ebp+var_680] +
call sub_1002447  +
cmp [ebp+var_680] 0 +
jz loc_10027C0  +
push edi  +
push 40h  +
call esi  +
push eax  +
lea ecx [ebp+lpPathName] +
call sub_1002447  +
cmp [ebp+lpPathName] 0 +
jz loc_10027C0  +
mov esi 400h +
push esi  +
push [ebp+lpPathName]  +
call ds:GetSystemDirectoryW  +
dec eax  +
cmp eax 3FFh +
ja loc_100282D  +
push [ebp+lpPathName]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jnz loc_1002839  +
call ds:GetLastError  +
mov dword ptr [ebp+Data] eax +
cmp dword ptr [ebp+Data] 0 +
jnz loc_1002BFB  +
mov edi ds:ExpandEnvironmentStringsW +
push esi  +
push [ebp+lpString]  +
push ebx  +
call edi  +
mov ebx [ebp+var_680] +
test eax eax +
jbe loc_100286C  +
push esi  +
push ebx  +
push [ebp+hMem]  +
call edi  +
test eax eax +
jnz loc_100287F  +
call ds:GetLastError  +
mov dword ptr [ebp+Data] eax +
jmp loc_1002BFB  +
mov ecx [ebp+var_690] +
lea eax [ebp+lpValue] +
push eax  +
push [ebp+lpCurrentDirectory]  +
call sub_100269A  +
test eax eax +
jz loc_100286E  +
xor esi esi +
cmp [ebp+arg_20] esi +
jz loc_1002AAC  +
xor eax eax +
mov [ebp+hObject] esi +
lea edi [ebp-6A0h] +
stos   +
stos   +
push 40h  +
stos   +
lea eax [ebp+StartupInfo.lpReserved] +
push esi  +
push eax  +
call memset  +
mov ecx [ebp+var_690] +
add esp 0Ch +
lea eax [ebp+hMem] +
push eax  +
push [ebp+lpString]  +
mov [ebp+StartupInfo.cb] 44h +
mov [ebp+ExitCode] esi +
mov [ebp+hMem] esi +
call sub_1002366  +
mov dword ptr [ebp+Data] eax +
cmp eax esi +
jz loc_100291E  +
cmp [ebp+hMem] esi +
jz loc_1002BFB  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_1002BFB  +
mov [ebp+StartupInfo.dwFlags] 1 +
cmp [ebp+arg_14] esi +
jz loc_1002931  +
xor eax eax +
jmp loc_100293C  +
mov eax [ebp+arg_10] +
neg eax  +
sbb eax eax +
and eax 6 +
inc eax  +
mov edi [ebp+hMem] +
mov [ebp+StartupInfo.wShowWindow] ax +
cmp edi esi +
lea eax [ebp+CommandLine] +
mov esi 104h +
jz loc_100295B  +
push edi  +
jmp loc_1002961  +
push [ebp+lpString]  +
push offset aExecutionpolic  +
push esi  +
push eax  +
call sub_10024FF  +
add esp 10h +
test eax eax +
jz loc_100298F  +
jle loc_100297E  +
movzx eax ax +
or eax 80070000h +
test edi edi +
mov dword ptr [ebp+Data] eax +
jz loc_1002BFB  +
push edi  +
jmp loc_1002913  +
cmp word ptr [ebx] 0 +
jz loc_10029A7  +
push ebx  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_10024A5  +
test eax eax +
jnz loc_1002974  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_10029C1  +
call ds:GetLastError  +
jmp loc_100297E  +
push offset aWindowspowersh  +
lea eax [ebp+Buffer] +
push eax  +
push offset aSS  +
lea eax [ebp+ApplicationName] +
push 12Dh  +
push eax  +
call sub_10024FF  +
xor ebx ebx +
add esp 14h +
cmp eax ebx +
jz loc_10029FA  +
jle loc_10029F6  +
movzx eax ax +
or eax 80070000h +
cmp edi ebx +
jmp loc_1002980  +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push [ebp+lpCurrentDirectory]  +
lea eax [ebp+CommandLine] +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
lea eax [ebp+ApplicationName] +
push eax  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_1002A39  +
call ds:GetLastError  +
mov dword ptr [ebp+Data] eax +
jmp loc_1002A98  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hObject]  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_1002A66  +
mov eax [ebp+ExitCode] +
jmp loc_1002A6C  +
call ds:GetLastError  +
mov esi ds:CloseHandle +
mov dword ptr [ebp+Data] eax +
cmp [ebp+hObject] ebx +
jz loc_1002A88  +
push [ebp+hObject]  +
call esi  +
cmp [ebp-6A0h] ebx +
jz loc_1002A98  +
push dword ptr [ebp-6A0h]  +
call esi  +
cmp edi ebx +
jz loc_1002BD5  +
push edi  +
call ds:LocalFree  +
jmp loc_1002BD5  +
mov esi [ebp+lpString] +
mov ecx [ebp+var_690] +
push esi  +
call sub_1002401  +
push 3Ch  +
pop edi  +
push edi  +
lea eax [ebp+var_6E8] +
push 0  +
push eax  +
call memset  +
mov [ebp+var_6E8] edi +
xor ecx ecx +
xor edi edi +
add esp 0Ch +
mov [ebp+var_6E4] 800640h +
mov [ebp+var_6D8] esi +
inc ecx  +
cmp [ebx] di +
jnz loc_1002B07  +
mov [ebp+ExitCode] ecx +
mov [ebp+hMem] edi +
lea eax [ebp+hMem] +
jmp loc_1002B0D  +
lea eax [ebp+var_680] +
mov eax [eax] +
mov [ebp+var_6D4] eax +
test byte ptr [ebp+ExitCode] cl +
jz loc_1002B31  +
cmp [ebp+hMem] edi +
jz loc_1002B31  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+lpCurrentDirectory] +
mov [ebp+var_6D0] eax +
cmp [ebp+arg_14] edi +
jz loc_1002B4A  +
mov [ebp+var_6CC] edi +
jmp loc_1002B5B  +
mov eax [ebp+arg_10] +
neg eax  +
sbb eax eax +
and eax 6 +
inc eax  +
mov [ebp+var_6CC] eax +
lea eax [ebp+var_6E8] +
push eax  +
call [ebp+var_6AC]  +
mov ebx eax +
call ds:GetLastError  +
mov esi ds:SetEnvironmentVariableW +
mov dword ptr [ebp+Data] eax +
cmp [ebp+lpValue] edi +
jz loc_1002B91  +
push [ebp+lpValue]  +
push offset aPath  +
call esi  +
cmp ebx edi +
jz loc_1002BD3  +
and dword ptr [ebp+Data] 0 +
cmp [ebp+arg_C] 0 +
jz loc_1002BC7  +
push 0FFFFFFFFh  +
push [ebp+hHandle]  +
call ds:WaitForSingleObject  +
mov ecx [ebp+var_690] +
call sub_100255E  +
push offset Value  +
push offset Name  +
call esi  +
push [ebp+hHandle]  +
call ds:CloseHandle  +
xor ebx ebx +
cmp dword ptr [ebp+Data] ebx +
jz loc_1002BFB  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
cmp [ebp+var_680] 0 +
mov esi dword ptr [ebp+Data] +
mov edi ds:LocalFree +
jz loc_1002C18  +
push [ebp+var_680]  +
call edi  +
cmp [ebp+lpString] 0 +
jz loc_1002C29  +
push [ebp+lpString]  +
call edi  +
cmp [ebp+lpPathName] 0 +
jz loc_1002C3A  +
push [ebp+lpPathName]  +
call edi  +
cmp [ebp+lpValue] 0 +
jz loc_1002C4B  +
push [ebp+lpValue]  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004780  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_1006110 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
mov [ebp+var_7C] eax +
mov eax [ebp+arg_14] +
push edi  +
mov edi ecx +
mov [ebp+var_70] eax +
mov eax [edi] +
mov eax lpSubKey[eax*8] +
xor esi esi +
mov [ebp+var_74] edi +
mov [ebp+hKey] edx +
mov [ebp+cSubKeys] esi +
mov [ebp+cbData] 4 +
mov dword ptr [ebp+Data] esi +
mov [ebp+var_58] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_1002CB0  +
sub eax ecx +
lea ecx [ebp+var_64] +
push ecx  +
lea ecx [ebp+var_58] +
push ecx  +
sar eax 1 +
push 400h  +
add eax 9 +
push eax  +
push offset aFilesyspath  +
push edx  +
call sub_1004378  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002ECC  +
push offset aScripts  +
push [ebp+var_64]  +
push [ebp+var_58]  +
call sub_10024A5  +
cmp eax esi +
jge loc_1002D07  +
movzx ebx ax +
push ebx  +
call ds:SetLastError  +
jmp loc_1002ECC  +
mov eax [edi] +
push lpSubKey[eax*8]  +
push [ebp+var_64]  +
push [ebp+var_58]  +
call sub_10024A5  +
cmp eax esi +
jl loc_1002CF8  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cSubKeys] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002ECC  +
mov [ebp+var_5C] esi +
cmp [ebp+cSubKeys] esi +
jbe loc_1002ECC  +
lea eax [ebp+phkResult] +
push eax  +
push 2  +
push esi  +
push 10h  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+var_5C]  +
mov [ebp+var_48] esi +
mov [ebp+phkResult] esi +
call ds:_itow  +
mov edi ds:RegOpenKeyExW +
add esp 0Ch +
push eax  +
push [ebp+var_7C]  +
call edi  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002EBC  +
lea eax [ebp+var_48] +
push eax  +
push 20019h  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call edi  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002EBC  +
push esi  +
lea eax [ebp+var_4C] +
push eax  +
mov edi 400h +
push edi  +
push esi  +
push offset aScript  +
push [ebp+var_48]  +
mov [ebp+var_4C] esi +
call sub_1004378  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002EAE  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
push esi  +
push offset aParameters  +
push [ebp+var_48]  +
mov [ebp+hMem] esi +
call sub_1004378  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002EA0  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset aIspowershell  +
push [ebp+var_48]  +
call ds:RegQueryValueExW  +
mov ebx eax +
cmp ebx esi +
jnz loc_1002EA0  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
push dword ptr [ebp+Data]  +
mov ecx [ebp+var_74] +
push [ebp+phkResult]  +
push [ebp+var_70]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_58]  +
push [ebp+hMem]  +
push [ebp+var_4C]  +
call sub_1002730  +
mov ebx eax +
cmp ebx esi +
jz loc_1002E49  +
xor eax eax +
lea edi [ebp+SystemTime] +
stos   +
stos   +
stos   +
stos   +
push 10h  +
lea eax [ebp+SystemTime] +
push eax  +
push 0Bh  +
push esi  +
push offset aExectime  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
cmp [ebp+hMem] esi +
jz loc_1002E71  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_4C] esi +
jz loc_1002E7F  +
push [ebp+var_4C]  +
call ds:LocalFree  +
lea ecx [ebp+phkResult] +
call sub_10022AA  +
lea ecx [ebp+var_48] +
call sub_10022AA  +
inc [ebp+var_5C]  +
mov eax [ebp+var_5C] +
cmp eax [ebp+cSubKeys] +
jb loc_1002D4C  +
jmp loc_1002ECC  +
cmp [ebp+hMem] esi +
jz loc_1002EAE  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_4C] esi +
jz loc_1002EBC  +
push [ebp+var_4C]  +
call ds:LocalFree  +
lea ecx [ebp+phkResult] +
call sub_10022AA  +
lea ecx [ebp+var_48] +
call sub_10022AA  +
cmp [ebp+var_58] esi +
jz loc_1002EDA  +
push [ebp+var_58]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1004780  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
mov [ebp+var_C] edi +
mov [ebp+var_1C] esi +
mov [ebp+hKey] esi +
mov [ebp+phkResult] esi +
mov [ebp+var_14] esi +
mov [ebp+hMem] esi +
cmp [edi+4] esi +
jnz loc_1002F9F  +
lea eax [ebp+hObject] +
push eax  +
push 8  +
mov [ebp+hObject] esi +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1002F5F  +
call ds:GetLastError  +
mov ebx eax +
cmp [ebp+hObject] esi +
jz loc_10031EA  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_10031EA  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_10031EA  +
push [ebp+hObject]  +
lea ecx [ebp+var_30] +
call sub_1003951  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_30] +
call sub_1003C1A  +
lea ecx [ebp+var_30] +
mov ebx eax +
call sub_100396D  +
test ebx ebx +
jnz loc_1002F3E  +
cmp [ebp+hObject] esi +
jz loc_1002F98  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1002F98  +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor esi esi +
cmp [edi+4] esi +
jz loc_1002FA4  +
push 4Dh  +
pop esi  +
jmp loc_1002FBB  +
mov eax [ebp+var_14] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1002FAA  +
sub eax edx +
sar eax 1 +
lea esi [eax+46h] +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
push eax  +
lea ecx [ebp+hMem] +
call sub_1002447  +
mov ebx [ebp+hMem] +
test ebx ebx +
jnz loc_1002FE6  +
push 0Eh  +
pop ebx  +
push ebx  +
call ds:SetLastError  +
jmp loc_10031EA  +
push offset aSoftwareMicr_1  +
push esi  +
push ebx  +
call sub_100246B  +
test eax eax +
jge loc_1003005  +
movzx ebx ax +
push ebx  +
call ds:SetLastError  +
jmp loc_10031E1  +
cmp dword ptr [edi+4] 0 +
jz loc_1003091  +
push offset aMachineScripts  +
push esi  +
push ebx  +
call sub_10024A5  +
test eax eax +
jl loc_1002FF6  +
mov esi ds:RegOpenKeyExW +
lea eax [ebp+hKey] +
push eax  +
mov edi 20019h +
push edi  +
push 0  +
push [ebp+hMem]  +
push 80000002h  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_10031E1  +
lea eax [ebp+phkResult] +
push eax  +
mov eax [ebp+var_C] +
mov eax [eax] +
push edi  +
push ebx  +
push lpSubKey[eax*8]  +
push [ebp+hKey]  +
call esi  +
mov ebx eax +
xor ecx ecx +
cmp ebx ecx +
jz loc_10030AD  +
cmp Data ecx +
jz loc_10031E1  +
mov eax [ebp+var_C] +
mov eax [eax] +
push ebx  +
push lpSubKey[eax*8]  +
push offset aErrorOpeningRe  +
push 0  +
call sub_1003510  +
add esp 10h +
jmp loc_10031E1  +
push [ebp+var_14]  +
push esi  +
push ebx  +
call sub_10024A5  +
test eax eax +
jl loc_1002FF6  +
push offset aScripts_0  +
jmp loc_1003014  +
lea eax [ebp+var_1C] +
push eax  +
mov eax [ebp+var_C] +
mov edx [eax] +
push edi  +
push ecx  +
push off_1006018[edx*8]  +
xor edx edx +
cmp [eax+4] ecx +
setnz dl  +
add edx 80000001h +
push edx  +
call esi  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jz loc_10030F3  +
cmp Data eax +
jz loc_10031E1  +
mov eax [ebp+var_C] +
mov eax [eax] +
push ebx  +
push off_1006018[eax*8]  +
jmp loc_100307D  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
lea ecx [ebp+cSubKeys] +
push ecx  +
push eax  +
push eax  +
push eax  +
push [ebp+var_1C]  +
mov [ebp+cSubKeys] eax +
call ds:RegQueryInfoKeyW  +
mov ebx eax +
test ebx ebx +
jnz loc_10031E1  +
push offset LibFileName  +
call ds:LoadLibraryW  +
test eax eax +
jz loc_1003139  +
push offset aShellexecuteex  +
push eax  +
call ds:GetProcAddress  +
mov [ebp+var_2C] eax +
test eax eax +
jnz loc_1003146  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_10031E1  +
and [ebp+var_18] 0 +
cmp [ebp+cSubKeys] 0 +
jbe loc_10031E1  +
mov ebx [ebp+phkResult] +
lea ecx [ebp+hObject] +
push ecx  +
xor eax eax +
push edi  +
push eax  +
push 10h  +
push [ebp+hMem]  +
mov [ebp+var_10] eax +
push [ebp+var_18]  +
mov [ebp+hObject] eax +
call ds:_itow  +
add esp 0Ch +
push eax  +
push ebx  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_10031D1  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
push ebx  +
push [ebp+hMem]  +
push [ebp+var_1C]  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_10031D1  +
push [ebp+var_2C]  +
mov ecx [ebp+var_C] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+hObject]  +
push [ebp+var_10]  +
call sub_1002C63  +
test eax eax +
jz loc_10031B4  +
mov ebx eax +
lea ecx [ebp+hObject] +
call sub_10022AA  +
lea ecx [ebp+var_10] +
call sub_10022AA  +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
cmp eax [ebp+cSubKeys] +
jb loc_1003154  +
jmp loc_10031E1  +
lea ecx [ebp+hObject] +
call sub_10022AA  +
lea ecx [ebp+var_10] +
call sub_10022AA  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_14] 0 +
jz loc_10031F9  +
push [ebp+var_14]  +
call ds:LocalFree  +
lea ecx [ebp+phkResult] +
call sub_10022AA  +
lea ecx [ebp+hKey] +
call sub_10022AA  +
lea ecx [ebp+var_1C] +
call sub_10022AA  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor eax eax +
inc eax  +
push edi  +
mov esi ecx +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
call sub_100230C  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_1003270  +
cmp Data ebx +
jz loc_10032F7  +
push edi  +
push offset aDisablescriptz  +
push ebx  +
call sub_1003510  +
add esp 0Ch +
cmp Data ebx +
jz loc_10032F7  +
push offset aNotExecutingSc  +
jmp loc_10032EF  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
xor eax eax +
cmp [esi+4] ebx +
setnz al  +
add eax 80000001h +
push eax  +
push dword ptr [esi]  +
call sub_10042BB  +
mov edi eax +
cmp edi ebx +
jnz loc_10032AB  +
push [ebp+var_C]  +
mov ecx esi +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1002EF2  +
mov edi eax +
jmp loc_10032D7  +
cmp Data ebx +
jz loc_10032D7  +
push edi  +
push offset aGetscriptsexec  +
push ebx  +
call sub_1003510  +
add esp 0Ch +
cmp Data ebx +
jz loc_10032D7  +
push offset aNotExecutingSc  +
push ebx  +
call sub_1003510  +
pop ecx  +
pop ecx  +
mov ecx esi +
call sub_1002336  +
test eax eax +
jz loc_10032F7  +
cmp Data ebx +
jz loc_10032F7  +
push offset aEnablescriptzo  +
push ebx  +
call sub_1003510  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
test eax eax +
jnz locret_100332E  +
call ds:GetLastError  +
cmp Data 0 +
jz locret_100332E  +
push eax  +
push offset aUpdateuserFail  +
push 0  +
call sub_1003510  +
add esp 0Ch +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push esi  +
mov [ebp+hLibModule] esi +
mov [ebp+pNumArgs] esi +
call ds:HeapSetInformation  +
push esi  +
call sub_100372F  +
push 52h  +
call ds:GetSystemMetrics  +
or ebx 0FFFFFFFFh +
test eax eax +
jz loc_100338C  +
push offset aImm32_dll  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax esi +
jz loc_100338C  +
push offset aImmdisableime  +
push eax  +
call ds:GetProcAddress  +
cmp eax esi +
jz loc_100338C  +
push ebx  +
call eax  +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov edi eax +
cmp edi esi +
jz loc_1003460  +
cmp [ebp+pNumArgs] 1 +
jle loc_1003460  +
mov esi ds:CompareStringW +
push ebx  +
push offset String2  +
push ebx  +
push dword ptr [edi+4]  +
push 1  +
push 7Fh  +
call esi  +
cmp eax 2 +
jnz loc_10033E2  +
xor eax eax +
inc eax  +
push eax  +
lea ecx [ebp+var_10] +
call sub_10022D7  +
lea ecx [ebp+var_10] +
call sub_100321F  +
jmp loc_1003460  +
push ebx  +
push offset aLogoff  +
push ebx  +
push dword ptr [edi+4]  +
push 1  +
push 7Fh  +
call esi  +
cmp eax 2 +
jnz loc_10033FB  +
push eax  +
pop eax  +
jmp loc_10033CF  +
push ebx  +
push offset aStartup  +
push ebx  +
push dword ptr [edi+4]  +
push 1  +
push 7Fh  +
call esi  +
cmp eax 2 +
jnz loc_1003414  +
xor eax eax +
jmp loc_10033CF  +
push ebx  +
push offset aShutdown  +
push ebx  +
push dword ptr [edi+4]  +
push 1  +
push 7Fh  +
call esi  +
cmp eax 2 +
jnz loc_100342D  +
push 3  +
jmp loc_10033F8  +
push ebx  +
push offset aRefreshsystemp  +
push ebx  +
push dword ptr [edi+4]  +
push 1  +
push 7Fh  +
call esi  +
cmp eax 2 +
jnz loc_1003449  +
call sub_1003303  +
jmp loc_1003460  +
cmp Data 0 +
jz loc_1003460  +
push offset aGpscriptIncorr  +
push 0  +
call sub_1003510  +
pop ecx  +
pop ecx  +
cmp [ebp+hLibModule] 0 +
jz loc_100346F  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
test edi edi +
jz loc_100347A  +
push edi  +
call ds:GlobalFree  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10034B1  +
cmp eax esi +
ja loc_10034B1  +
jz loc_10034B6  +
jmp loc_10034BE  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10034C7  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10034E9  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10034EE  +
mov eax 80070057h +
test eax eax +
jl loc_1003507  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1003488  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
mov eax dword_1006110 +
xor eax ebp +
mov [ebp+var_4] eax +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
mov eax Data +
movzx ecx ax +
dec ecx  +
jz loc_100354F  +
dec ecx  +
jz loc_100354A  +
xor ecx ecx +
cmp [ebp+arg_0] 1 +
setz cl  +
jmp loc_1003558  +
xor ecx ecx +
inc ecx  +
jmp loc_1003558  +
xor ecx ecx +
cmp [ebp+arg_0] 2 +
setnz cl  +
push esi  +
mov esi eax +
and eax 10000h +
and esi 20000h +
mov [ebp+hMem] eax +
test ecx ecx +
jz loc_1003711  +
push 1000h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+lpBuffer] eax +
test eax eax +
jz loc_1003711  +
push ebx  +
push edi  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wMilliseconds] +
push eax  +
movzx eax [ebp+SystemTime.wSecond] +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetCurrentProcessId  +
push eax  +
push offset aGpsvcX_X02d02d  +
lea eax [ebp+Buffer] +
push 3Ch  +
push eax  +
call sub_10024FF  +
mov edi ds:OutputDebugStringW +
add esp 24h +
test esi esi +
jz loc_10035EC  +
lea eax [ebp+Buffer] +
push eax  +
call edi  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push 800h  +
push [ebp+lpBuffer]  +
call sub_10034D4  +
mov ebx offset asc_1001B54 +
test esi esi +
jz loc_1003611  +
push [ebp+lpBuffer]  +
call edi  +
push ebx  +
call edi  +
cmp [ebp+hMem] 0 +
jz loc_1003706  +
push 208h  +
push 40h  +
call ds:LocalAlloc  +
xor edi edi +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_1003706  +
mov esi 104h +
push esi  +
push eax  +
push offset Src  +
call ds:ExpandEnvironmentStringsW  +
cmp eax edi +
jz loc_10036FA  +
cmp eax esi +
ja loc_10036FA  +
push edi  +
push 80h  +
push 4  +
push edi  +
push 1  +
push 6  +
push [ebp+hMem]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_10036FA  +
push 2  +
push edi  +
push edi  +
push eax  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jz loc_10036EE  +
mov esi ds:lstrlenW +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call esi  +
mov edi ds:WriteFile +
add eax eax +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hObject]  +
call edi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+lpBuffer]  +
call esi  +
add eax eax +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hObject]  +
call edi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
call esi  +
add eax eax +
push eax  +
push ebx  +
push [ebp+hObject]  +
call edi  +
push [ebp+hObject]  +
call ds:CloseHandle  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+lpBuffer]  +
call ds:LocalFree  +
pop edi  +
pop ebx  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1004780  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 650h +
mov eax dword_1006110 +
xor eax ebp +
mov [ebp+var_4] eax +
and Data 0 +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
lea eax [ebp+hKey] +
push eax  +
mov ebx 20019h +
push ebx  +
push 0  +
push offset aSoftwareMicr_2  +
mov edi 80000002h +
push edi  +
call esi  +
mov [ebp+var_62C] eax +
test eax eax +
jnz loc_10037B6  +
lea eax [ebp+cbData] +
push eax  +
push offset Data  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aGpsvcdebugleve  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [ebp+var_62C] 2 +
jnz loc_1003811  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 0  +
push offset aSoftwareMicros  +
push edi  +
call esi  +
test eax eax +
jnz loc_1003811  +
lea eax [ebp+cbData] +
push eax  +
push offset Data  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aUserenvdebugle  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 0  +
push offset aSoftwarePolici  +
push edi  +
call esi  +
xor ebx ebx +
test eax eax +
jnz loc_1003864  +
lea eax [ebp+cbData] +
push eax  +
push offset Data  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aGpsvcdebugleve  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp Data ebx +
jz loc_100393B  +
cmp [ebp+arg_0] ebx +
jz loc_100393B  +
mov edi ds:ExpandEnvironmentStringsW +
mov esi 104h +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push offset aSystemrootDe_0  +
call edi  +
cmp eax ebx +
jz loc_100393B  +
cmp eax esi +
ja loc_100393B  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call sub_10041C3  +
push esi  +
lea eax [ebp+ExistingFileName] +
push eax  +
push offset Src  +
call edi  +
cmp eax ebx +
jz loc_100393B  +
cmp eax esi +
ja loc_100393B  +
lea eax [ebp+FileInformation] +
push eax  +
push ebx  +
lea eax [ebp+ExistingFileName] +
push eax  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_100393B  +
cmp [ebp+var_630] 4B000h +
jb loc_100393B  +
push esi  +
lea eax [ebp+NewFileName] +
push eax  +
push offset aSystemrootDe_1  +
call edi  +
cmp eax ebx +
jz loc_100393B  +
cmp eax esi +
ja loc_100393B  +
push 1  +
lea eax [ebp+NewFileName] +
push eax  +
lea eax [ebp+ExistingFileName] +
push eax  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_100393B  +
cmp Data ebx +
jz loc_100393B  +
call ds:GetLastError  +
push eax  +
push offset aMovingLogFileT  +
push 2  +
call sub_1003510  +
add esp 0Ch +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004780  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1001CCC +
mov [eax+4] ecx +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1001CCC +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
mov ecx [ebp+8] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi ecx +
xor eax eax +
cmp [edi+4] eax +
jnz loc_10039AC  +
mov ecx [ebp+8] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ds:GetCurrentProcess +
push 2  +
push eax  +
push eax  +
push dword ptr [ebp+8]  +
call esi  +
push eax  +
push dword ptr [edi+4]  +
call esi  +
push eax  +
call ds:DuplicateHandle  +
pop esi  +
test eax eax +
jnz loc_10039A5  +
call ds:GetLastError  +
jmp loc_10039A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx+4] eax +
mov ecx [ebp+8] +
setz al  +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [esi] ebx +
cmp [edi+4] ebx +
jnz loc_1003A15  +
mov ebx 545h +
jmp loc_1003A65  +
push esi  +
push 1  +
push 2000Ch  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jnz loc_1003A40  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx 3F0h +
jnz loc_1003A65  +
xor ebx ebx +
push dword ptr [edi+4]  +
call ds:ImpersonateLoggedOnUser  +
test eax eax +
jnz loc_1003A65  +
mov eax [esi] +
test eax eax +
jz loc_1003A5D  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi] 0 +
call ds:GetLastError  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [esi]  +
xor edi edi +
push edi  +
call ds:SetThreadToken  +
test eax eax +
jnz loc_1003A94  +
call ds:GetLastError  +
mov edi eax +
mov eax [esi] +
test eax eax +
jz loc_1003AA4  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ecx+4] 0 +
jnz loc_1003AD6  +
cmp Data 0 +
jz locret_1003B06  +
push offset aUserSidMachine  +
push 2  +
call sub_1003510  +
pop ecx  +
pop ecx  +
leave   +
retn   +
***
mov eax [ecx] +
lea edx [ebp-4] +
push edx  +
call dword ptr [eax+20h]  +
test eax eax +
jnz locret_1003B06  +
cmp Data eax +
jz loc_1003AFD  +
push dword ptr [ebp-4]  +
push offset aUserSidWs  +
push 2  +
call sub_1003510  +
add esp 0Ch +
push dword ptr [ebp-4]  +
call ds:LocalFree  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebx] esi +
mov eax [ecx+4] +
mov [ebp+var_8] ecx +
mov [ebp+ReturnLength] esi +
cmp eax esi +
jz loc_1003BD3  +
lea ecx [ebp+ReturnLength] +
push ecx  +
push esi  +
push esi  +
push 1  +
push eax  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_1003B52  +
call ds:GetLastError  +
mov esi eax +
cmp esi 7Ah +
jnz loc_1003BD3  +
mov esi ds:LocalAlloc +
push edi  +
push [ebp+ReturnLength]  +
push 40h  +
call esi  +
mov edi eax +
test edi edi +
jz loc_1003BA0  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
mov eax [ebp+var_8] +
push edi  +
push 1  +
push dword ptr [eax+4]  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_1003B8A  +
call ds:GetLastError  +
mov esi eax +
jmp loc_1003BC7  +
push dword ptr [edi]  +
call ds:RtlLengthSid  +
push eax  +
push 40h  +
mov [ebp+ReturnLength] eax +
call esi  +
mov [ebx] eax +
test eax eax +
jnz loc_1003BA5  +
push 0Eh  +
pop esi  +
jmp loc_1003BC7  +
push dword ptr [edi]  +
push eax  +
push [ebp+ReturnLength]  +
call ds:RtlCopySid  +
mov esi eax +
test esi esi +
jge loc_1003BC7  +
push dword ptr [ebx]  +
mov esi 10Ah +
call ds:LocalFree  +
and dword ptr [ebx] 0 +
test edi edi +
jz loc_1003BD2  +
push edi  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jz locret_1003BED  +
push eax  +
call ds:LocalFree  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001CCC +
jz loc_1003C0E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
xor edi edi +
mov [ebp-14h] edi +
mov [ebp-10h] edi +
mov esi [ebp+8] +
mov [esi] edi +
mov [ebp-4] edi +
cmp [ecx+4] edi +
jz loc_1003C81  +
mov eax [ecx] +
lea edx [ebp-10h] +
push edx  +
call dword ptr [eax+24h]  +
mov ebx ds:LocalFree +
mov [ebp-14h] eax +
cmp eax edi +
jnz loc_1003C77  +
push esi  +
push dword ptr [ebp-10h]  +
call ConvertSidToStringSidW  +
test eax eax +
jnz loc_1003C67  +
call ds:GetLastError  +
mov [ebp-14h] eax +
cmp [ebp-14h] edi +
jz loc_1003C77  +
mov eax [esi] +
cmp eax edi +
jz loc_1003C77  +
push eax  +
call ebx  +
mov [esi] edi +
cmp [ebp-10h] edi +
jz loc_1003C81  +
push dword ptr [ebp-10h]  +
call ebx  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
push 10h  +
mov eax offset __ehhandler$?_Locimp_Addfac@_Locimp@locale@std@@CAXPAV123@PAVfacet@23@I@Z +
call __EH_prolog3  +
mov esi ecx +
mov eax [ebp+0Ch] +
xor ebx ebx +
lea ecx [ebp-18h] +
mov [eax] ebx +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov [ebp-18h] ebx +
mov [ebp-1Ch] ebx +
call dword ptr [eax+8]  +
mov edi [ebp+8] +
mov eax [edi] +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx edi +
call dword ptr [eax+8]  +
cmp [ebp-1Ch] ebx +
jz loc_1003CDA  +
cmp [ebp-18h] ebx +
jz loc_1003D43  +
mov eax [ebp+0Ch] +
mov dword ptr [eax] 1 +
jmp loc_1003D48  +
cmp [ebp-18h] ebx +
jnz loc_1003D43  +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov eax [edi] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+24h]  +
mov edi eax +
cmp edi ebx +
jnz loc_1003D25  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+24h]  +
mov edi eax +
cmp edi ebx +
jnz loc_1003D25  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call ds:EqualSid  +
mov ecx [ebp+0Ch] +
neg eax  +
sbb eax eax +
neg eax  +
mov [ecx] eax +
mov esi ds:LocalFree +
cmp [ebp-10h] ebx +
jz loc_1003D35  +
push dword ptr [ebp-10h]  +
call esi  +
cmp [ebp-14h] ebx +
jz loc_1003D3F  +
push dword ptr [ebp-14h]  +
call esi  +
mov eax edi +
jmp loc_1003D4A  +
mov eax [ebp+0Ch] +
mov [eax] ebx +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
mov edi [ebp+FilePart] +
lea eax [ebp+var_24] +
push eax  +
xor esi esi +
push esi  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call ds:RtlDosPathNameToRelativeNtPathName_U  +
test al al +
jnz loc_1003D89  +
push 3  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1003EC4  +
mov eax 1F0h +
cmp word ptr [ebp+var_C] ax +
jbe loc_1003DF1  +
cmp word ptr [edi] 5Ch +
jnz loc_1003DAF  +
cmp word ptr [edi+2] 5Ch +
jnz loc_1003DAF  +
cmp word ptr [edi+4] 3Fh +
jnz loc_1003DAF  +
cmp word ptr [edi+6] 5Ch +
jz loc_1003DF1  +
lea eax [ebp+FilePart] +
push eax  +
push esi  +
push esi  +
push edi  +
call ds:GetFullPathNameW  +
cmp eax esi +
jz loc_1003DCA  +
add eax 0Ch +
cmp eax 104h +
jbe loc_1003DF1  +
lea eax [ebp+var_24] +
push eax  +
call ds:RtlReleaseRelativeName  +
push [ebp+var_8]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
push 0CEh  +
jmp loc_1003D7C  +
mov eax [ebp+var_8] +
mov [ebp+FilePart] eax +
mov eax [ebp+var_24] +
cmp ax si +
jz loc_1003E0A  +
mov [ebp+var_C] eax +
mov eax [ebp+var_20] +
mov [ebp+var_8] eax +
jmp loc_1003E0D  +
mov [ebp+var_1C] esi +
mov eax [ebp+var_1C] +
mov [ebp+var_38] eax +
lea eax [ebp+var_C] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_3C] 18h +
mov [ebp+var_30] 40h +
mov [ebp+var_2C] esi +
mov [ebp+var_28] esi +
cmp eax esi +
jz loc_1003E3A  +
mov eax [eax+4] +
mov [ebp+var_2C] eax +
push ebx  +
push esi  +
push esi  +
push 4021h  +
push 2  +
push 3  +
push 4  +
push esi  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push 100001h  +
lea eax [ebp+var_4] +
push eax  +
call ds:NtCreateFile  +
mov ebx eax +
lea eax [ebp+var_24] +
push eax  +
call ds:RtlReleaseRelativeName  +
push [ebp+FilePart]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
cmp ebx esi +
jl loc_1003E94  +
push [ebp+var_4]  +
call ds:NtClose  +
xor eax eax +
inc eax  +
jmp loc_1003EC3  +
push edi  +
call ds:RtlIsDosDeviceName_U  +
test eax eax +
jz loc_1003EA4  +
mov ebx 0C0000103h +
cmp ebx 102h +
jnz loc_1003EB3  +
push 5B4h  +
jmp loc_1003EBB  +
push ebx  +
call ds:RtlNtStatusToDosError  +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 440h +
mov eax dword_1006110 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+lpFileName] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov [ebp+lpPathName] esi +
mov [ebp+lpSecurityAttributes] edi +
cmp esi ebx +
jz loc_1004196  +
cmp [esi] bx +
jz loc_1004196  +
lea eax [ebp+FileInformation] +
push eax  +
push ebx  +
push esi  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_1003F3F  +
test byte ptr [ebp+FileInformation] 10h +
jz loc_1003F32  +
mov eax 0B7h +
jmp loc_10041AD  +
push 5  +
call ds:SetLastError  +
jmp loc_10041AB  +
push edi  +
push esi  +
cmp [ebp+arg_8] ebx +
jz loc_1003F58  +
call ds:CreateDirectoryW  +
test eax eax +
jz loc_1003F6F  +
xor eax eax +
inc eax  +
jmp loc_10041AD  +
call sub_1003D57  +
test eax eax +
jz loc_1003F6F  +
push 80h  +
push esi  +
call ds:SetFileAttributesW  +
jmp loc_1003F50  +
push esi  +
push 208h  +
lea eax [ebp+FileName] +
push eax  +
call sub_100246B  +
cmp eax ebx +
jge loc_1003FA5  +
cmp Data ebx +
jz loc_10041AB  +
push eax  +
push offset aCreatenesteddi  +
push ebx  +
call sub_1003510  +
add esp 0Ch +
jmp loc_10041AB  +
push esi  +
call ds:lstrlenW  +
mov edi eax +
inc edi  +
cmp word ptr [ebp-412h] 3Ah +
lea esi [ebp+FileName] +
jnz loc_1003FCD  +
lea esi [ebp+var_40E] +
sub edi 3 +
jmp loc_1004053  +
push 5Ch  +
pop edx  +
cmp [ebp-412h] dx +
jnz loc_1004043  +
push 2  +
pop ecx  +
sub edi ecx +
lea esi [ebp-410h] +
jz loc_1004150  +
cmp [ebp+var_410] bx +
jz loc_10041AB  +
movzx eax [ebp+var_410] +
cmp ax dx +
jz loc_100400E  +
add esi ecx +
movzx eax word ptr [esi] +
dec edi  +
cmp ax bx +
jnz loc_1003FFE  +
cmp [esi] bx +
jz loc_10041AB  +
add esi ecx +
movzx eax word ptr [esi] +
dec edi  +
cmp ax bx +
jz loc_10041AB  +
cmp ax dx +
jz loc_1004036  +
add esi ecx +
movzx eax word ptr [esi] +
dec edi  +
cmp ax bx +
jnz loc_1004026  +
cmp [esi] bx +
jz loc_10041AB  +
add esi ecx +
jmp loc_1004052  +
cmp [ebp+FileName] dx +
jnz loc_1004059  +
lea esi [ebp-412h] +
dec edi  +
jz loc_1004150  +
cmp [esi] bx +
mov ebx ds:SetFileAttributesW +
jnz loc_10040AD  +
cmp [ebp+arg_8] 0 +
push [ebp+lpSecurityAttributes]  +
push [ebp+lpPathName]  +
jz loc_100415F  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_1003F50  +
mov esi ds:GetLastError +
call esi  +
mov ecx 0B7h +
cmp eax ecx +
jnz loc_100417E  +
mov eax ecx +
jmp loc_10041AD  +
cmp word ptr [esi] 5Ch +
jz loc_10040B3  +
inc esi  +
inc esi  +
dec edi  +
cmp word ptr [esi] 0 +
jnz loc_10040A4  +
test edi edi +
jz loc_100414E  +
cmp word ptr [esi] 5Ch +
jnz loc_100413F  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+FileInformation] +
push eax  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_1004134  +
cmp [ebp+arg_8] 0 +
push [ebp+lpSecurityAttributes]  +
lea eax [ebp+FileName] +
push eax  +
jz loc_100411D  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_1004134  +
cmp Data 0 +
jz loc_10041AB  +
call ds:GetLastError  +
push eax  +
push offset FilePart  +
push 0  +
jmp loc_1003F98  +
call sub_1003D57  +
test eax eax +
jz loc_10040FD  +
push 80h  +
lea eax [ebp+FileName] +
push eax  +
call ebx  +
push 5Ch  +
pop eax  +
mov [esi] ax +
inc esi  +
inc esi  +
dec edi  +
jz loc_100414E  +
cmp word ptr [esi] 0 +
jnz loc_10040A4  +
jmp loc_1004064  +
xor ebx ebx +
cmp Data ebx +
jz loc_10041AB  +
push offset aCreatenested_1  +
jmp loc_10041A3  +
call sub_1003D57  +
test eax eax +
jz loc_1004088  +
push 80h  +
push [ebp+lpPathName]  +
call ebx  +
jmp loc_1003F50  +
cmp Data 0 +
jz loc_10041AB  +
call esi  +
push eax  +
push offset aCreatenested_2  +
push 2  +
jmp loc_1003F98  +
cmp Data ebx +
jz loc_10041AB  +
push offset aCreatenested_3  +
push ebx  +
call sub_1003510  +
pop ecx  +
pop ecx  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004780  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_4]  +
push [ebp+lpFileName]  +
call sub_1003ECF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+cbData] +
push offset aSoftwareMicr_0  +
push offset aSoftwareMicros  +
lea ecx [ebp+var_C] +
call sub_1004D19  +
push esi  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpValueName]  +
lea ecx [ebp+var_C] +
push [ebp+hKey]  +
call sub_1004DB2  +
test eax eax +
jnz loc_100421B  +
cmp [ebp+cbData] eax +
setnz al  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push offset aSoftwareMicr_0  +
push offset aSoftwareMicros  +
lea ecx [ebp+var_10] +
xor esi esi +
call sub_1004D19  +
push esi  +
lea eax [ebp+cbData] +
push eax  +
push offset aRunlogonscript  +
push [ebp+hKey]  +
lea ecx [ebp+var_10] +
call sub_1004E00  +
test eax eax +
jnz loc_1004265  +
cmp [ebp+cbData] esi +
setnz al  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push offset aSoftwareMicr_0  +
push offset aSoftwareMicros  +
lea ecx [ebp+var_10] +
xor esi esi +
call sub_1004D19  +
push esi  +
lea eax [ebp+cbData] +
push eax  +
push offset aRunstartupscri  +
push 80000002h  +
lea ecx [ebp+var_10] +
call sub_1004DB2  +
test eax eax +
jnz loc_10042B1  +
cmp [ebp+cbData] esi +
setnz al  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_100436A  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_100436A  +
mov ebx [ebp+arg_10] +
test ebx ebx +
jz loc_100436A  +
push edi  +
xor edi edi +
inc edi  +
mov [eax] edi +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_100433C  +
dec eax  +
jz loc_1004329  +
dec eax  +
jz loc_100431E  +
dec eax  +
jz loc_1004308  +
mov [ebp+var_4] 57h +
jmp loc_1004364  +
push edi  +
push offset aHideshutdownsc  +
push 80000002h  +
mov [esi] edi +
call sub_10041DE  +
mov [ebx] eax +
jmp loc_100435A  +
push edi  +
push offset aHidelogoffscri  +
push [ebp+hKey]  +
jmp loc_1004313  +
push [ebp+hKey]  +
call sub_1004227  +
push edi  +
push offset aHidelogonscrip  +
push [ebp+hKey]  +
jmp loc_100434C  +
call sub_1004271  +
push edi  +
push offset aHidestartupscr  +
push 80000002h  +
mov [esi] eax +
call sub_10041DE  +
mov [ebx] eax +
cmp dword ptr [esi] 0 +
jz loc_1004364  +
test eax eax +
jnz loc_1004364  +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
mov eax [ebp+var_4] +
pop edi  +
jmp loc_100436D  +
push 57h  +
pop eax  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-10h] ebx +
mov eax [ebp+18h] +
mov esi ds:RegQueryValueExW +
mov [eax] ebx +
lea eax [ebp-14h] +
push eax  +
push ebx  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] ebx +
push dword ptr [ebp+8]  +
call esi  +
mov edi eax +
cmp edi ebx +
jnz loc_100444D  +
mov eax [ebp-14h] +
mov ecx [ebp+10h] +
shr eax 1 +
lea eax [eax+ecx+1] +
mov [ebp+10h] eax +
cmp eax [ebp+14h] +
jbe loc_10043E5  +
push 6Fh  +
pop edi  +
cmp Data ebx +
jz loc_100444D  +
push dword ptr [ebp+0Ch]  +
push offset aWsKeyValueIsGr  +
push ebx  +
call sub_1003510  +
add esp 0Ch +
jmp loc_100444D  +
lea edi [eax+eax] +
push edi  +
push 40h  +
call ds:LocalAlloc  +
push eax  +
lea ecx [ebp-10h] +
call sub_1002447  +
cmp [ebp-10h] ebx +
jnz loc_1004404  +
push 0Eh  +
pop edi  +
jmp loc_100444D  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-10h]  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-18h] 1 +
push dword ptr [ebp+8]  +
mov [ebp-14h] edi +
call esi  +
mov edi eax +
cmp edi ebx +
jnz loc_100443F  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jz loc_1004434  +
mov ecx [ebp+10h] +
mov [eax] ecx +
mov eax [ebp-10h] +
mov ecx [ebp+18h] +
mov [ebp-10h] ebx +
mov [ecx] eax +
cmp [ebp-10h] ebx +
jz loc_100444D  +
push dword ptr [ebp-10h]  +
call ds:LocalFree  +
mov eax edi +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1004483  +
test eax eax +
jnz loc_1004488  +
mov ecx [esi] +
test ecx ecx +
jz loc_1004480  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1004474  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1006168 +
push offset dword_1006158  +
push dword_1006164  +
mov dword_1006158 eax +
push offset unk_1006148  +
push offset unk_100614C  +
push offset unk_1006144  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1006154 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset Destination +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_1004528  +
cmp eax esi +
jnz loc_100451B  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_100452B  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1004502  +
xor esi esi +
inc esi  +
mov eax dword_100649C +
cmp eax esi +
jnz loc_100453E  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_100456D  +
mov eax dword_100649C +
test eax eax +
jnz loc_1004567  +
mov dword_100649C esi +
push offset dword_10011B0  +
push offset dword_10011A4  +
call sub_1004467  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100456D  +
jmp loc_1004695  +
mov dword_1006160 esi +
mov eax dword_100649C +
cmp eax esi +
jnz loc_1004591  +
push offset dword_10011A0  +
push offset dword_1001194  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100649C 2 +
test ebx ebx +
jnz loc_100459D  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10064A4 0 +
jz loc_10045C1  +
push offset dword_10064A4  +
call sub_10049B9  +
pop ecx  +
test eax eax +
jz loc_10045C1  +
push 0  +
push 2  +
push 0  +
call dword_10064A4  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp+var_20] esi +
mov al [esi] +
cmp al 20h +
ja $LN61  +
test al al +
jz loc_10045DB  +
cmp [ebp+var_1C] 0 +
jnz $LN61  +
mov al [esi] +
test al al +
jz loc_10045EB  +
cmp al 20h +
ja loc_10045EB  +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_10045DB  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_10045F7  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_10045FA  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push 1000000h  +
call _WinMain@16  +
mov dword_100615C eax +
cmp dword_1006150 0 +
jnz $LN62  +
push eax  +
call ds:exit  +
cmp al 22h +
jnz loc_100462C  +
xor ecx ecx +
cmp [ebp+var_1C] ecx +
setz cl  +
mov [ebp+var_1C] ecx +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jz loc_100463F  +
inc esi  +
mov [ebp+var_20] esi +
inc esi  +
jmp loc_10045C8  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_100615C eax +
cmp dword_1006150 0 +
jnz $LN62  +
push eax  +
call ds:_exit  +
cmp dword_1006160 0 +
jnz loc_1004680  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100615C +
jmp loc_10046A1  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10046BE  +
xor eax eax +
jmp loc_100470B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10046BA  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10046F8  +
cmp ecx 20Bh +
jnz loc_10046BA  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10046BA  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1004706  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10046BA  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_1006150 eax +
call sub_1004B52  +
push eax  +
call ds:__set_app_type  +
or dword_1006494 0FFFFFFFFh +
or dword_1006498 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1006170 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100616C +
mov [eax] ecx +
call sub_1004AE4  +
cmp dword_1006128 0 +
jnz loc_1004764  +
push offset sub_1004AE4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1004ACC  +
xor eax eax +
retn   +
***
call sub_1004B91  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1006110 +
jnz loc_100478B  +
retn 0  +
jmp loc_1004C27  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1006110 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
xor edi edi +
mov eax [esp+14h] +
or eax eax +
jge loc_1004831  +
inc edi  +
mov edx [esp+10h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+14h] eax +
mov [esp+10h] edx +
mov eax [esp+1Ch] +
or eax eax +
jge loc_100484D  +
inc edi  +
mov edx [esp+18h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+1Ch] eax +
mov [esp+18h] edx +
or eax eax +
jnz loc_1004869  +
mov ecx [esp+18h] +
mov eax [esp+14h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+10h] +
div  ecx +
mov edx ebx +
jmp loc_10048AA  +
mov ebx eax +
mov ecx [esp+18h] +
mov edx [esp+14h] +
mov eax [esp+10h] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_1004877  +
div  ecx +
mov esi eax +
mul  dword ptr [esp+1Ch] +
mov ecx eax +
mov eax [esp+18h] +
mul  esi +
add edx ecx +
jb loc_10048A5  +
cmp edx [esp+14h] +
ja loc_10048A5  +
jb loc_10048A6  +
cmp eax [esp+10h] +
jbe loc_10048A6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_10048B4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10048FC  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10048FC  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10048F6  +
cmp eax 19930521h +
jz loc_10048F6  +
cmp eax 19930522h +
jz loc_10048F6  +
cmp eax 1994000h +
jnz loc_10048FC  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10048BC+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1004946  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1004942  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10049AD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10049A5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10049AF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1004995  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1004930  +
pop ecx  +
test eax eax +
jz loc_1004A16  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1004970  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004A16  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004A1F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1004780  +
push offset dword_1006110  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004B45  +
cmp ecx 0FFFFFFFFh +
jz loc_1004B45  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1004B3E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1004B3E  +
cmp edx 10000000h +
jnb loc_1004B3E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1004B3E  +
jmp loc_1004B39  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1004B87  +
push eax  +
call sub_1004AEC  +
test eax eax +
jz loc_1004B87  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1004B7C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1004B87  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1006110 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1004BC3  +
test eax ebx +
jz loc_1004BC3  +
not eax  +
mov dword_1006114 eax +
jmp loc_1004C1E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1004C0A  +
test dword_1006110 ebx +
jnz loc_1004C0F  +
mov esi 0BB40E64Fh +
mov dword_1006110 esi +
not esi  +
mov dword_1006114 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1006278 eax +
mov dword_1006274 ecx +
mov dword_1006270 edx +
mov dword_100626C ebx +
mov dword_1006268 esi +
mov dword_1006264 edi +
mov word_1006290 ss +
mov word_1006284 cs +
mov word_1006260 ds +
mov word_100625C es +
mov word_1006258 fs +
mov word_1006254 gs +
pushf   +
pop dword_1006288  +
mov eax [ebp+0] +
mov dword_100627C eax +
mov eax [ebp+4] +
mov dword_1006280 eax +
lea eax [ebp+8] +
mov dword_100628C eax +
mov eax [ebp-320h] +
mov dword_10061C8 10001h +
mov eax dword_1006280 +
mov dword_1006184 eax +
mov dword_1006178 0C0000409h +
mov dword_100617C 1 +
mov eax dword_1006110 +
mov [ebp-328h] eax +
mov eax dword_1006114 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+phkResult] 0 +
push esi  +
mov esi [ebp+cbData] +
push edi  +
mov edi [esi] +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push 0  +
push [ebp+Type]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1004D92  +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
mov [ebp+cbData] 4 +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1004D90  +
cmp [ebp+Type] 4 +
jz loc_1004D97  +
push 0Dh  +
mov [esi] edi +
pop eax  +
jmp loc_1004D97  +
mov [esi] edi +
cmp eax 2 +
jz loc_1004DA9  +
mov esi eax +
lea ecx [ebp+phkResult] +
call sub_10022AA  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
xor esi esi +
jmp loc_1004D99  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+cbData] +
mov esi ecx +
mov [edi] eax +
mov eax [esi+4] +
xor ebx ebx +
test eax eax +
jz loc_1004DDA  +
push edi  +
push [ebp+lpValueName]  +
push eax  +
push [ebp+hKey]  +
call sub_1004D35  +
mov eax [esi+8] +
test eax eax +
jz loc_1004DF2  +
push edi  +
push [ebp+lpValueName]  +
mov ecx esi +
push eax  +
push [ebp+hKey]  +
call sub_1004D35  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_C] +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+cbData] +
mov esi ecx +
mov [edi] eax +
mov eax [esi+4] +
test eax eax +
jz loc_1004E2B  +
push edi  +
push [ebp+lpValueName]  +
push eax  +
push [ebp+hKey]  +
call sub_1004D35  +
mov eax [esi+4] +
mov ebx 80000002h +
test eax eax +
jz loc_1004E44  +
push edi  +
push [ebp+lpValueName]  +
mov ecx esi +
push eax  +
push ebx  +
call sub_1004D35  +
mov eax [esi+8] +
test eax eax +
jz loc_1004E61  +
push edi  +
push [ebp+lpValueName]  +
mov ecx esi +
push eax  +
push [ebp+hKey]  +
call sub_1004D35  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1004E7B  +
mov eax [esi+8] +
test eax eax +
jz loc_1004E78  +
push edi  +
push [ebp+lpValueName]  +
mov ecx esi +
push eax  +
push ebx  +
call sub_1004D35  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
lea ecx [ebp-10h] +
jmp loc_1003BE0  +
***
mov eax off_1006004 +
mov lpSubKey eax +
mov eax off_1006008 +
mov dword_100601C eax +
mov eax off_100600C +
mov dword_1006024 eax +
mov eax off_1006010 +
mov dword_100602C eax +
retn   +
***
