mov eax [ebp+arg_4] +
push ebx  +
push edi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_C] +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push esi  +
mov dl [ebp+arg_C] +
push esi  +
push ecx  +
sub esp 48h +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp ebx [edi+90h] +
jnz loc_401D24  +
lea edx [edi+124h] +
lea ecx [edi+120h] +
mov [ebp+var_10] edx +
jmp loc_401D30  +
mov ecx [edi+12Ch] +
lea eax [ecx+4] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_8] ecx +
mov esi [ebp+arg_10] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
push eax  +
push ebx  +
mov [ebp+var_4] eax +
call dword ptr [ebx+4]  +
mov edx [ebp+var_10] +
mov ecx eax +
mov eax [ebp+var_4] +
add ecx 5 +
add esp 10h +
mov [edx] eax +
cmp ecx 12h +
ja loc_40244B  +
jmp ds:off_4025C4[ecx*4]  +
mov eax [ebp+var_4] +
sub eax [ebx+44h] +
push eax  +
mov eax [ebp+arg_C] +
add eax [ebx+44h] +
push eax  +
push ebx  +
call dword ptr [ebx+30h]  +
add esp 0Ch +
mov byte ptr [ebp+arg_8+3] al +
test al al +
jz loc_401D9D  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_40244B  +
lea ecx [ebp+arg_8+3] +
push 1  +
push ecx  +
jmp loc_401E4F  +
mov eax [ebp+var_4] +
sub eax [ebx+44h] +
push eax  +
mov eax [ebp+arg_C] +
add eax [ebx+44h] +
push eax  +
lea eax [edi+1B0h] +
push ebx  +
push eax  +
call sub_404D49  +
add esp 10h +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_402437  +
push 0  +
push eax  +
lea eax [edi+160h] +
push eax  +
call sub_40465D  +
mov esi eax +
mov eax [edi+1C0h] +
add esp 0Ch +
cmp byte ptr [edi+1E1h] 0 +
mov [edi+1BCh] eax +
jz loc_401E0D  +
cmp byte ptr [edi+1E2h] 0 +
jnz loc_401E0D  +
test esi esi +
jnz loc_401E1F  +
mov eax [edi+78h] +
test eax eax +
jz loc_40244B  +
push esi  +
push [ebp+arg_0]  +
jmp loc_401E4F  +
test esi esi +
jz loc_40247F  +
cmp byte ptr [esi+1Eh] 0 +
jz loc_40247B  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_402477  +
xor ecx ecx +
cmp [esi+18h] ecx +
jnz loc_402473  +
cmp [esi+4] ecx +
jz loc_401EC1  +
cmp [edi+130h] cl +
jnz loc_401E64  +
mov eax [edi+78h] +
test eax eax +
jz loc_401E5C  +
push ecx  +
push dword ptr [esi]  +
push dword ptr [edi+4]  +
call eax  +
add esp 0Ch +
jmp loc_402461  +
cmp [edi+50h] ecx +
jmp loc_40244F  +
mov byte ptr [esi+1Ch] 1 +
mov eax [edi+12Ch] +
mov [ebp+var_28] eax +
lea eax [ebp+var_30] +
mov [edi+12Ch] eax +
mov eax [esi+8] +
add eax [esi+4] +
push ecx  +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+var_24] esi +
push dword ptr [edi+0E4h]  +
mov [ebp+var_30] ecx +
push dword ptr [edi+134h]  +
mov [ebp+var_2C] ecx +
push edi  +
call sub_401CFC  +
mov ecx eax +
mov eax [ebp+var_28] +
add esp 18h +
mov byte ptr [esi+1Ch] 0 +
mov [edi+12Ch] eax +
test ecx ecx +
jz loc_402461  +
mov eax ecx +
jmp loc_4024AC  +
cmp [edi+70h] ecx +
jz loc_401E5C  +
push edi  +
mov byte ptr [esi+1Ch] 1 +
call sub_404112  +
pop ecx  +
mov byte ptr [esi+1Ch] 0 +
test eax eax +
jz loc_402437  +
push dword ptr [esi+14h]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+10h]  +
push eax  +
push dword ptr [edi+74h]  +
call dword ptr [edi+70h]  +
add esp 14h +
test eax eax +
jz loc_40246F  +
mov eax [edi+258h] +
mov [edi+254h] eax +
jmp loc_402461  +
xor eax eax +
cmp [edi+34h] eax +
jnz loc_401F27  +
push eax  +
push eax  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_40558D  +
add esp 14h +
test eax eax +
jnz loc_4024AC  +
mov esi [edi+224h] +
test esi esi +
jz loc_401F3B  +
mov eax [esi] +
mov [edi+224h] eax +
jmp loc_401F62  +
push 30h  +
call dword ptr [edi+0Ch]  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_402437  +
push 20h  +
call dword ptr [edi+0Ch]  +
pop ecx  +
mov [esi+24h] eax +
test eax eax +
jz loc_402483  +
add eax 20h +
mov [esi+28h] eax +
xor ecx ecx +
mov [esi+2Ch] ecx +
mov eax [edi+220h] +
mov [esi] eax +
mov [edi+220h] esi +
mov [esi+10h] ecx +
mov [esi+14h] ecx +
mov eax [ebp+arg_C] +
add eax [ebx+44h] +
push eax  +
push ebx  +
mov [esi+4] eax +
call dword ptr [ebx+20h]  +
mov [esi+8] eax +
inc dword ptr [edi+134h]  +
mov eax [esi+4] +
mov ecx [esi+8] +
add ecx eax +
mov [ebp+arg_0] eax +
mov eax [esi+24h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
dec eax  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
mov [ebp+var_14] ecx +
call dword ptr [ebx+3Ch]  +
add esp 1Ch +
jmp loc_402005  +
mov eax [esi+28h] +
sub eax [esi+24h] +
add eax eax +
push eax  +
push dword ptr [esi+24h]  +
mov [ebp+var_1C] eax +
call dword ptr [edi+10h]  +
mov edx eax +
pop ecx  +
pop ecx  +
test edx edx +
jz loc_402437  +
mov eax [ebp+var_1C] +
add eax edx +
mov [esi+28h] eax +
mov eax [ebp+var_18] +
add eax edx +
mov [esi+24h] edx +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
dec eax  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_14]  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
call dword ptr [ebx+3Ch]  +
add esp 14h +
mov eax [ebp+var_C] +
sub eax [esi+24h] +
mov ecx [ebp+var_14] +
mov [ebp+var_18] eax +
cmp [ebp+arg_0] ecx +
jnz loc_401FBD  +
mov [esi+18h] eax +
mov eax [esi+24h] +
lea ecx [esi+0Ch] +
xor edx edx +
mov [ecx] eax +
mov eax [ebp+var_C] +
mov [eax] dl +
cmp [edi+34h] edx +
jz loc_40205B  +
lea eax [esi+2Ch] +
push eax  +
push ecx  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_40558D  +
add esp 14h +
test eax eax +
jnz loc_4024AC  +
push dword ptr [edi+23Ch]  +
push dword ptr [esi+0Ch]  +
push dword ptr [edi+4]  +
call dword ptr [edi+34h]  +
add esp 0Ch +
jmp loc_402070  +
cmp [edi+50h] edx +
jz loc_402070  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
lea eax [edi+248h] +
push eax  +
call sub_404B65  +
pop ecx  +
jmp loc_402461  +
cmp dword ptr [edi+34h] 0 +
jnz loc_4020CC  +
push 0  +
push 0  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_40558D  +
add esp 14h +
test eax eax +
jnz loc_4024AC  +
cmp dword ptr [edi+34h] 0 +
jnz loc_4020CC  +
cmp dword ptr [edi+38h] 0 +
jnz loc_4020CC  +
cmp dword ptr [edi+50h] 0 +
jz loc_4021AF  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
jmp loc_4021AF  +
mov esi [ebx+44h] +
add esi [ebp+arg_C] +
and [ebp+arg_0] 0 +
push esi  +
push ebx  +
call dword ptr [ebx+20h]  +
add eax esi +
push eax  +
push esi  +
push ebx  +
lea esi [edi+248h] +
push esi  +
call sub_404D49  +
add esp 18h +
mov [ebp+var_48] eax +
test eax eax +
jz loc_402437  +
mov eax [edi+254h] +
mov [edi+258h] eax +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_40558D  +
add esp 14h +
test eax eax +
jnz loc_4024AC  +
mov eax [edi+254h] +
mov [edi+258h] eax +
mov eax [edi+34h] +
test eax eax +
jz loc_402147  +
push dword ptr [edi+23Ch]  +
push [ebp+var_48]  +
push dword ptr [edi+4]  +
call eax  +
add esp 0Ch +
cmp dword ptr [edi+38h] 0 +
jz loc_402168  +
cmp dword ptr [edi+34h] 0 +
jz loc_40215D  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_8] +
mov eax [eax] +
mov [ecx] eax +
push [ebp+var_48]  +
push dword ptr [edi+4]  +
call dword ptr [edi+38h]  +
pop ecx  +
pop ecx  +
push esi  +
call sub_404B65  +
mov esi [ebp+arg_0] +
pop ecx  +
test esi esi +
jz loc_4021AC  +
mov ecx [edi+68h] +
mov edx esi +
mov [ebp+arg_0] edx +
test ecx ecx +
jz loc_40218F  +
mov eax [esi] +
push dword ptr [eax]  +
push dword ptr [edi+4]  +
call ecx  +
pop ecx  +
pop ecx  +
mov edx esi +
mov eax [edi+22Ch] +
lea ecx [esi+4] +
mov esi [ecx] +
mov [ecx] eax +
mov [edi+22Ch] edx +
mov ecx [edx] +
mov eax [edx+8] +
mov [ecx+4] eax +
jmp loc_402172  +
mov esi [ebp+arg_10] +
cmp dword ptr [edi+134h] 0 +
jnz loc_402461  +
push [ebp+arg_14]  +
push esi  +
push [ebp+var_4]  +
push edi  +
call sub_403DE1  +
add esp 10h +
jmp loc_4024AC  +
mov eax [ebp+arg_4] +
cmp [edi+134h] eax +
jz loc_402496  +
mov esi [edi+220h] +
mov eax [esi] +
mov [edi+220h] eax +
mov eax [edi+224h] +
mov [esi] eax +
mov eax [ebp+arg_C] +
mov [edi+224h] esi +
mov ecx [ebx+44h] +
lea eax [eax+ecx*2] +
push eax  +
push ebx  +
mov [ebp+arg_0] eax +
call dword ptr [ebx+20h]  +
pop ecx  +
pop ecx  +
cmp eax [esi+8] +
jnz loc_40248A  +
push eax  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call sub_440E4A  +
add esp 0Ch +
test eax eax +
jnz loc_40248A  +
dec dword ptr [edi+134h]  +
cmp [edi+38h] eax +
jz loc_402291  +
cmp byte ptr [edi+0ECh] 0 +
mov eax [esi+10h] +
jz loc_402284  +
test eax eax +
jz loc_402284  +
mov ecx [esi+1Ch] +
add ecx [esi+0Ch] +
jmp loc_402256  +
mov [ecx] dl +
inc ecx  +
inc eax  +
mov dl [eax] +
test dl dl +
jnz loc_402252  +
cmp byte ptr [edi+0EDh] 0 +
mov edx [esi+14h] +
jz loc_402281  +
test edx edx +
jz loc_402281  +
mov al [edi+280h] +
mov [ecx] al +
inc ecx  +
jmp loc_40227B  +
mov [ecx] al +
inc ecx  +
inc edx  +
mov al [edx] +
test al al +
jnz loc_402277  +
mov byte ptr [ecx] 0 +
push dword ptr [esi+0Ch]  +
push dword ptr [edi+4]  +
call dword ptr [edi+38h]  +
pop ecx  +
pop ecx  +
jmp loc_4022E4  +
cmp dword ptr [edi+50h] 0 +
jz loc_4022E4  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
jmp loc_4022E4  +
mov ecx [edi+68h] +
mov edx [esi+2Ch] +
mov [ebp+arg_0] edx +
test ecx ecx +
jz loc_4022C4  +
mov eax [edx] +
push dword ptr [eax]  +
push dword ptr [edi+4]  +
call ecx  +
mov edx [ebp+arg_0] +
pop ecx  +
pop ecx  +
mov eax [esi+2Ch] +
mov eax [eax+4] +
mov [esi+2Ch] eax +
mov eax [edi+22Ch] +
mov [edx+4] eax +
mov [edi+22Ch] edx +
mov ecx [edx] +
mov eax [edx+8] +
mov [ecx+4] eax +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_4022A9  +
cmp dword ptr [edi+134h] 0 +
jnz loc_402461  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
jmp loc_4021C0  +
push [ebp+arg_C]  +
push ebx  +
call dword ptr [ebx+2Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
js loc_40249A  +
xor ecx ecx +
cmp [edi+3Ch] ecx +
jz loc_401E5C  +
lea ecx [ebp+var_20] +
push ecx  +
push eax  +
call sub_40A15B  +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push dword ptr [edi+4]  +
call dword ptr [edi+3Ch]  +
add esp 14h +
jmp loc_402461  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_40244B  +
mov byte ptr [ebp+arg_0+3] 0Ah +
lea ecx [ebp+arg_0+3] +
jmp loc_401D95  +
mov eax [edi+48h] +
test eax eax +
jz loc_402361  +
push dword ptr [edi+4]  +
call eax  +
pop ecx  +
jmp loc_402377  +
cmp dword ptr [edi+50h] 0 +
jz loc_402377  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
push [ebp+arg_14]  +
lea eax [ebp+var_4] +
push esi  +
push eax  +
push ebx  +
push edi  +
call sub_401B83  +
add esp 14h +
cmp [ebp+var_4] 0 +
jnz loc_402461  +
mov dword ptr [edi+118h] offset sub_4019E6 +
jmp loc_4024AC  +
mov ecx [edi+3Ch] +
test ecx ecx +
jz loc_40244B  +
cmp byte ptr [ebx+48h] 0 +
jnz loc_40240F  +
mov eax [edi+2Ch] +
push dword ptr [edi+30h]  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
lea eax [ebp+arg_C] +
push eax  +
push ebx  +
call dword ptr [ebx+3Ch]  +
mov esi [ebp+var_10] +
jmp loc_4023ED  +
mov ecx [ebp+var_8] +
mov [ecx] eax +
mov eax [edi+2Ch] +
push dword ptr [edi+30h]  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
lea eax [ebp+arg_C] +
push eax  +
push ebx  +
call dword ptr [ebx+3Ch]  +
mov eax [ebp+arg_C] +
mov [esi] eax +
mov eax [ebp+arg_0] +
sub eax [edi+2Ch] +
push eax  +
push dword ptr [edi+2Ch]  +
push dword ptr [edi+4]  +
call dword ptr [edi+3Ch]  +
mov eax [ebp+arg_C] +
add esp 20h +
cmp eax [ebp+var_4] +
jnz loc_4023D0  +
jmp loc_402461  +
mov eax [ebp+var_4] +
sub eax [ebp+arg_C] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [edi+4]  +
call ecx  +
jmp loc_401E54  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_405167  +
add esp 10h +
test eax eax +
jnz loc_402461  +
xor eax eax +
inc eax  +
jmp loc_4024AC  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_40505D  +
jmp loc_402430  +
cmp dword ptr [edi+50h] 0 +
jz loc_402461  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
mov [ebp+arg_C] eax +
jmp loc_401D36  +
push 15h  +
jmp loc_4024EB  +
push 0Fh  +
jmp loc_4024EB  +
push 0Ch  +
jmp loc_4024EB  +
push 18h  +
jmp loc_4024EB  +
push 0Bh  +
jmp loc_4024EB  +
push esi  +
call dword ptr [edi+14h]  +
pop ecx  +
jmp loc_402437  +
mov ecx [ebp+var_8] +
mov eax [ebp+arg_0] +
mov [ecx] eax +
push 7  +
jmp loc_4024EB  +
push 0Dh  +
jmp loc_4024EB  +
push 0Eh  +
jmp loc_4024EB  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jz loc_4024B1  +
mov eax [ebp+arg_C] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov [edx] esi +
mov eax [edi+3Ch] +
test eax eax +
jz loc_4024CE  +
push 1  +
lea ecx [ebp+arg_8+3] +
push ecx  +
push dword ptr [edi+4]  +
mov byte ptr [ebp+arg_8+3] 0Ah +
call eax  +
add esp 0Ch +
jmp loc_4024E2  +
cmp dword ptr [edi+50h] 0 +
jz loc_4024E2  +
push esi  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_4024FC  +
push 3  +
pop eax  +
jmp loc_4024AC  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jnz loc_4024A5  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jle loc_4024E9  +
xor eax eax +
cmp [edi+134h] ecx +
push 0Dh  +
pop edx  +
cmovnz eax edx +
jmp loc_4024AC  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx] eax +
push 4  +
jmp loc_4024EB  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jnz loc_4024A5  +
push 5  +
jmp loc_4024EB  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jnz loc_4024A5  +
push 6  +
jmp loc_4024EB  +
push 11h  +
jmp loc_4024EB  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jnz loc_4024A5  +
mov ecx [edi+3Ch] +
test ecx ecx +
jz loc_40258C  +
cmp byte ptr [ebx+48h] 0 +
jnz loc_402579  +
mov eax [edi+2Ch] +
push dword ptr [edi+30h]  +
mov [ebp+arg_8] eax +
lea eax [ebp+arg_8] +
push eax  +
push esi  +
lea eax [ebp+arg_C] +
push eax  +
push ebx  +
call dword ptr [ebx+3Ch]  +
mov eax [ebp+arg_8] +
sub eax [edi+2Ch] +
push eax  +
push dword ptr [edi+2Ch]  +
push dword ptr [edi+4]  +
call dword ptr [edi+3Ch]  +
add esp 20h +
jmp loc_4025A0  +
mov eax esi +
sub eax [ebp+arg_C] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [edi+4]  +
call ecx  +
add esp 0Ch +
jmp loc_4025A0  +
cmp dword ptr [edi+50h] 0 +
jz loc_4025A0  +
push esi  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
call sub_4050D5  +
add esp 10h +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_4025AB  +
push 3  +
jmp loc_4025B9  +
cmp [edi+134h] eax +
jz loc_4024AA  +
push 0Dh  +
mov ecx [ebp+var_8] +
pop eax  +
mov [ecx] esi +
jmp loc_4024AC  +
***
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
cmp ecx [esi+90h] +
jnz loc_4026EA  +
lea eax [esi+120h] +
lea ecx [esi+124h] +
jmp loc_4026F3  +
mov eax [esi+12Ch] +
lea ecx [eax+4] +
mov edi [ebp+arg_10] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] eax +
mov edx [ebp+arg_8] +
mov [eax] edx +
mov eax [ebp+arg_14] +
mov bl 1 +
mov [ecx] eax +
test edi edi +
jg loc_402748  +
mov eax [ebp+arg_18] +
test eax eax +
jz loc_40271B  +
test edi edi +
jnz loc_4039CE  +
cmp edi 0FFFFFFFCh +
jz loc_4039F4  +
cmp edi 0FFFFFFFEh +
jz loc_4039ED  +
cmp edi 0FFFFFFFFh +
jz loc_4039E6  +
test edi edi +
jz loc_4039D7  +
mov ecx [ebp+arg_C] +
neg edi  +
mov [ebp+arg_14] ecx +
jmp loc_40274B  +
mov ecx [ebp+arg_14] +
push [ebp+arg_4]  +
lea eax [esi+100h] +
push ecx  +
push edx  +
push edi  +
push eax  +
call dword ptr [eax]  +
mov ecx eax +
add esp 14h +
lea eax [ecx+1] +
mov [ebp+arg_10] ecx +
cmp eax 3Dh +
ja loc_402B0B  +
jmp ds:off_403B2B[eax*4]  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push 0  +
push esi  +
call sub_404DFF  +
add esp 10h +
test eax eax +
jnz loc_403B26  +
mov eax [esi+90h] +
mov [ebp+arg_4] eax +
jmp loc_402B25  +
cmp dword ptr [esi+54h] 0 +
jz loc_4027DF  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
lea eax [esi+248h] +
push eax  +
call sub_404D49  +
add esp 10h +
mov [esi+13Ch] eax +
test eax eax +
jz loc_402A56  +
mov eax [esi+254h] +
and dword ptr [esi+144h] 0 +
mov [esi+258h] eax +
xor bl bl +
and dword ptr [esi+140h] 0 +
jmp loc_4039C1  +
mov eax [esi+54h] +
test eax eax +
jz loc_402B0B  +
push 1  +
push dword ptr [esi+144h]  +
push dword ptr [esi+140h]  +
push dword ptr [esi+13Ch]  +
push dword ptr [esi+4]  +
call eax  +
and dword ptr [esi+13Ch] 0 +
lea eax [esi+248h] +
push eax  +
call sub_404B65  +
add esp 18h +
jmp loc_402B25  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push 1  +
jmp loc_40277E  +
cmp dword ptr [esi+54h] 0 +
mov byte ptr [esi+289h] 0 +
mov byte ptr [esi+1E1h] 1 +
jz loc_402889  +
mov ebx [ebp+arg_4] +
mov eax [ebp+arg_14] +
sub eax [ebx+44h] +
lea edx [esi+248h] +
push eax  +
mov eax [ebp+arg_8] +
add eax [ebx+44h] +
push eax  +
push ebx  +
push edx  +
call sub_404D49  +
add esp 10h +
mov [esi+144h] eax +
test eax eax +
jz loc_402A56  +
mov eax [esi+254h] +
mov [esi+258h] eax +
xor bl bl +
push 20h  +
lea eax [esi+1E4h] +
push offset unk_460338  +
push eax  +
call sub_40465D  +
add esp 0Ch +
mov [esi+138h] eax +
test eax eax +
jz loc_402A56  +
mov ecx [ebp+var_4] +
mov edi [ebp+arg_8] +
mov eax [ebp+arg_4] +
push ecx  +
push [ebp+arg_14]  +
push edi  +
push eax  +
call dword ptr [eax+38h]  +
add esp 10h +
test eax eax +
jz loc_403A36  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_4039C1  +
cmp dword ptr [esi+138h] 0 +
jz loc_4039C1  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_14] +
mov ecx [edx+44h] +
sub eax ecx +
push eax  +
lea eax [ecx+edi] +
push eax  +
push edx  +
lea eax [esi+1B0h] +
push eax  +
call sub_404D49  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_402A56  +
push edi  +
call sub_404951  +
mov eax [esi+138h] +
pop ecx  +
mov [eax+14h] edi +
cmp dword ptr [esi+88h] 0 +
mov eax [esi+1BCh] +
mov [esi+1C0h] eax +
jz loc_4039C1  +
jmp loc_4039BF  +
mov eax [esi+13Ch] +
test eax eax +
jz loc_40296C  +
push 0  +
push dword ptr [esi+144h]  +
push dword ptr [esi+140h]  +
push eax  +
push dword ptr [esi+4]  +
call dword ptr [esi+54h]  +
lea eax [esi+248h] +
push eax  +
call sub_404B65  +
add esp 18h +
xor bl bl +
cmp dword ptr [esi+140h] 0 +
jnz loc_402982  +
cmp byte ptr [esi+289h] 0 +
jz loc_402A1F  +
cmp dword ptr [esi+28Ch] 0 +
mov byte ptr [esi+1E1h] 1 +
jz loc_402A18  +
cmp dword ptr [esi+70h] 0 +
jz loc_402A18  +
push 20h  +
lea eax [esi+1E4h] +
push offset unk_460338  +
push eax  +
call sub_40465D  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jz loc_402A56  +
cmp byte ptr [esi+289h] 0 +
jz loc_4029CE  +
mov eax [esi+21Ch] +
mov [ecx+10h] eax +
mov byte ptr [esi+1E3h] 0 +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+10h]  +
push 0  +
push dword ptr [esi+74h]  +
call dword ptr [esi+70h]  +
add esp 14h +
test eax eax +
jz loc_403A3D  +
cmp byte ptr [esi+1E3h] 0 +
jz loc_402A18  +
cmp byte ptr [esi+1E2h] 0 +
jnz loc_402A18  +
mov eax [esi+6Ch] +
test eax eax +
jz loc_402A18  +
push dword ptr [esi+4]  +
call eax  +
pop ecx  +
test eax eax +
jz loc_4035DB  +
mov byte ptr [esi+289h] 0 +
mov eax [esi+58h] +
test eax eax +
jz loc_4039C1  +
push dword ptr [esi+4]  +
call eax  +
pop ecx  +
jmp loc_4039BF  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_4043F8  +
add esp 10h +
mov [esi+154h] eax +
test eax eax +
jnz loc_402AF9  +
xor eax eax +
inc eax  +
jmp loc_403B26  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_403F40  +
add esp 10h +
mov [esi+158h] eax +
test eax eax +
jz loc_402A56  +
and dword ptr [esi+148h] 0 +
mov word ptr [esi+15Ch] 0 +
jmp loc_402AF9  +
mov byte ptr [esi+15Ch] 1 +
mov dword ptr [esi+148h] offset aCdata +
jmp loc_402AF9  +
mov byte ptr [esi+15Dh] 1 +
mov dword ptr [esi+148h] offset aId +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aIdref +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aIdrefs +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aEntity +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aEntities +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aNmtoken +
jmp loc_402AF9  +
mov dword ptr [esi+148h] offset aNmtokens +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+84h] 0 +
jnz loc_402B25  +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+50h] 0 +
jz loc_402B25  +
push [ebp+arg_14]  +
push ebx  +
push edi  +
push esi  +
call sub_4050D5  +
add esp 10h +
mov eax [ebp+arg_14] +
lea ecx [ebp+arg_14] +
push ecx  +
push [ebp+arg_C]  +
mov [ebp+arg_8] eax +
push eax  +
mov eax [ebp+arg_4] +
push eax  +
call dword ptr [eax]  +
mov ecx [ebp+arg_0] +
mov edi eax +
mov eax [ebp+var_4] +
add esp 10h +
jmp loc_4026FC  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+84h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+148h] 0 +
jz loc_402B6B  +
mov ebx offset asc_46038C +
jmp loc_402B7B  +
mov ebx offset aNotation +
mov eax offset asc_460390 +
cmp ecx 20h +
cmovnz ebx eax +
lea edi [esi+248h] +
jmp loc_402BA5  +
mov eax [edi+0Ch] +
cmp eax [edi+8] +
jnz loc_402B9A  +
push edi  +
call sub_404C19  +
pop ecx  +
test al al +
jz loc_402A56  +
mov ecx [edi+0Ch] +
mov al [ebx] +
mov [ecx] al +
inc dword ptr [edi+0Ch]  +
inc ebx  +
cmp byte ptr [ebx] 0 +
jnz loc_402B83  +
cmp dword ptr [edi+10h] 0 +
jz loc_402A56  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_404B0F  +
add esp 10h +
test eax eax +
jz loc_402A56  +
mov eax [esi+258h] +
mov [esi+148h] eax +
jmp loc_402B25  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
movzx eax byte ptr [esi+15Dh] +
push esi  +
push 0  +
push eax  +
movzx eax byte ptr [esi+15Ch] +
push eax  +
push dword ptr [esi+158h]  +
push dword ptr [esi+154h]  +
call sub_401A9E  +
add esp 18h +
test eax eax +
jz loc_402A56  +
cmp dword ptr [esi+84h] 0 +
jz loc_402B0B  +
mov eax [esi+148h] +
test eax eax +
jz loc_402B0B  +
mov cl [eax] +
cmp cl 28h +
jz loc_402C4C  +
cmp cl 4Eh +
jnz loc_402CC8  +
cmp byte ptr [eax+1] 4Fh +
jnz loc_402CC8  +
mov eax [esi+254h] +
cmp eax [esi+250h] +
jnz loc_402C6F  +
lea eax [esi+248h] +
push eax  +
call sub_404C19  +
pop ecx  +
test al al +
jz loc_402A56  +
mov eax [esi+254h] +
mov byte ptr [eax] 29h +
inc dword ptr [esi+254h]  +
mov eax [esi+254h] +
cmp eax [esi+250h] +
jnz loc_402CA1  +
lea eax [esi+248h] +
push eax  +
call sub_404C19  +
pop ecx  +
test al al +
jz loc_402A56  +
mov eax [esi+254h] +
mov byte ptr [eax] 0 +
inc dword ptr [esi+254h]  +
mov eax [esi+258h] +
mov ecx [esi+254h] +
mov [esi+148h] eax +
mov [esi+258h] ecx +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [edx] eax +
xor eax eax +
cmp [ebp+arg_10] 24h +
setz al  +
push eax  +
push 0  +
push dword ptr [esi+148h]  +
mov eax [esi+158h] +
push dword ptr [eax]  +
mov eax [esi+154h] +
push dword ptr [eax]  +
push dword ptr [esi+4]  +
call dword ptr [esi+84h]  +
lea eax [esi+248h] +
push eax  +
call sub_404B65  +
add esp 1Ch +
jmp loc_402B25  +
cmp byte ptr [esi+1E0h] 0 +
mov ebx [ebp+arg_8] +
jz loc_402B0E  +
mov edx [ebp+arg_4] +
lea eax [esi+1B0h] +
mov ecx [edx+44h] +
push eax  +
mov eax [ebp+arg_14] +
sub eax ecx +
push eax  +
lea eax [ecx+ebx] +
push eax  +
movzx eax byte ptr [esi+15Ch] +
push eax  +
push edx  +
push esi  +
call sub_40552A  +
add esp 18h +
test eax eax +
jnz loc_403B26  +
mov eax [esi+1BCh] +
mov edi [esi+1C0h] +
push esi  +
push edi  +
mov [esi+1C0h] eax +
movzx eax byte ptr [esi+15Ch] +
push 0  +
push eax  +
push dword ptr [esi+158h]  +
push dword ptr [esi+154h]  +
call sub_401A9E  +
add esp 18h +
test eax eax +
jz loc_402A56  +
cmp dword ptr [esi+84h] 0 +
jz loc_402B0E  +
mov eax [esi+148h] +
test eax eax +
jz loc_402B0E  +
mov cl [eax] +
cmp cl 28h +
jz loc_402DBB  +
cmp cl 4Eh +
jnz loc_402E37  +
cmp byte ptr [eax+1] 4Fh +
jnz loc_402E37  +
mov eax [esi+254h] +
cmp eax [esi+250h] +
jnz loc_402DDE  +
lea eax [esi+248h] +
push eax  +
call sub_404C19  +
pop ecx  +
test al al +
jz loc_402A56  +
mov eax [esi+254h] +
mov byte ptr [eax] 29h +
inc dword ptr [esi+254h]  +
mov eax [esi+254h] +
cmp eax [esi+250h] +
jnz loc_402E10  +
lea eax [esi+248h] +
push eax  +
call sub_404C19  +
pop ecx  +
test al al +
jz loc_402A56  +
mov eax [esi+254h] +
mov byte ptr [eax] 0 +
inc dword ptr [esi+254h]  +
mov eax [esi+258h] +
mov ecx [esi+254h] +
mov [esi+148h] eax +
mov [esi+258h] ecx +
mov edx [ebp+arg_0] +
xor eax eax +
cmp [ebp+arg_10] 26h +
mov [edx] ebx +
setz al  +
push eax  +
push edi  +
jmp loc_402CDC  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_14] +
sub eax [edx+44h] +
push eax  +
mov eax [ebp+arg_8] +
add eax [edx+44h] +
push eax  +
push edx  +
push esi  +
call sub_405C4E  +
mov ecx [esi+138h] +
add esp 10h +
mov edi eax +
mov eax [esi+1D8h] +
test ecx ecx +
jz loc_402EE7  +
mov [ecx+4] eax +
mov ecx [esi+1D4h] +
sub ecx [esi+1D8h] +
mov eax [esi+138h] +
mov [eax+8] ecx +
cmp dword ptr [esi+88h] 0 +
mov eax [esi+1D4h] +
mov [esi+1D8h] eax +
jz loc_402EED  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_8] +
xor ebx ebx +
push ebx  +
push ebx  +
mov [edx] eax +
mov ecx [esi+138h] +
push ebx  +
push dword ptr [esi+21Ch]  +
movzx eax byte ptr [ecx+1Dh] +
push dword ptr [ecx+8]  +
push dword ptr [ecx+4]  +
push eax  +
push dword ptr [ecx]  +
push dword ptr [esi+4]  +
call dword ptr [esi+88h]  +
add esp 24h +
jmp loc_402EED  +
mov [esi+1D4h] eax +
test edi edi +
jz loc_4039C1  +
mov eax edi +
jmp loc_403B26  +
cmp dword ptr [esi+54h] 0 +
mov byte ptr [esi+289h] 0 +
mov byte ptr [esi+1E1h] 1 +
jz loc_402F4F  +
mov ebx [ebp+arg_4] +
mov eax [ebp+arg_14] +
sub eax [ebx+44h] +
lea edx [esi+248h] +
push eax  +
mov eax [ebp+arg_8] +
add eax [ebx+44h] +
push eax  +
push ebx  +
push edx  +
call sub_404D49  +
add esp 10h +
mov [esi+140h] eax +
test eax eax +
jz loc_402A56  +
mov eax [esi+254h] +
mov [esi+258h] eax +
xor bl bl +
jmp loc_402F59  +
mov dword ptr [esi+140h] offset unk_460338 +
cmp byte ptr [esi+1E2h] 0 +
jnz loc_402F80  +
cmp dword ptr [esi+28Ch] 0 +
jnz loc_402F80  +
mov eax [esi+6Ch] +
test eax eax +
jz loc_402F80  +
push dword ptr [esi+4]  +
call eax  +
pop ecx  +
test eax eax +
jz loc_4035DB  +
cmp dword ptr [esi+138h] 0 +
jnz loc_402FB1  +
push 20h  +
lea eax [esi+1E4h] +
push offset unk_460338  +
push eax  +
call sub_40465D  +
add esp 0Ch +
mov [esi+138h] eax +
test eax eax +
jz loc_402A56  +
and dword ptr [eax+14h] 0 +
cmp byte ptr [esi+1E0h] 0 +
jz loc_4039C1  +
cmp dword ptr [esi+138h] 0 +
jz loc_4039C1  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_14] +
sub eax [edx+44h] +
push eax  +
mov eax [ebp+arg_8] +
add eax [edx+44h] +
push eax  +
push edx  +
lea eax [esi+1B0h] +
push eax  +
call sub_404D49  +
mov ecx [esi+138h] +
add esp 10h +
mov [ecx+0Ch] eax +
mov ecx [esi+138h] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_402A56  +
mov eax [esi+21Ch] +
mov [ecx+10h] eax +
jmp loc_40291E  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+138h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+88h] 0 +
jz loc_402B0B  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
push 0  +
mov [edx] eax +
mov ecx [esi+138h] +
push dword ptr [ecx+14h]  +
movzx eax byte ptr [ecx+1Dh] +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+10h]  +
push 0  +
push 0  +
push eax  +
push dword ptr [ecx]  +
push dword ptr [esi+4]  +
call dword ptr [esi+88h]  +
add esp 24h +
jmp loc_402B25  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+138h] 0 +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
jz loc_402B11  +
push [ebp+arg_14]  +
lea eax [esi+1B0h] +
push ebx  +
push edi  +
push eax  +
call sub_404D49  +
mov ecx [esi+138h] +
add esp 10h +
mov [ecx+18h] eax +
mov eax [esi+138h] +
cmp dword ptr [eax+18h] 0 +
jz loc_402A56  +
cmp dword ptr [esi+5Ch] 0 +
mov eax [esi+1BCh] +
mov [esi+1C0h] eax +
jz loc_4030F2  +
mov edx [ebp+arg_0] +
mov [edx] ebx +
mov eax [esi+138h] +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax]  +
push dword ptr [esi+4]  +
call dword ptr [esi+5Ch]  +
jmp loc_402822  +
cmp dword ptr [esi+88h] 0 +
jz loc_402B11  +
mov edx [ebp+arg_0] +
mov [edx] ebx +
mov eax [esi+138h] +
xor ebx ebx +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [eax]  +
jmp loc_40305E  +
push [ebp+arg_14]  +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
push ebx  +
push edi  +
call dword ptr [edi+30h]  +
add esp 0Ch +
test eax eax +
jz loc_403143  +
and dword ptr [esi+138h] 0 +
jmp loc_402B11  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_4031F5  +
push [ebp+arg_14]  +
lea eax [esi+1B0h] +
push ebx  +
push edi  +
push eax  +
call sub_404D49  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_402A56  +
push 20h  +
lea eax [esi+160h] +
push edi  +
push eax  +
call sub_40465D  +
mov ecx eax +
add esp 0Ch +
mov [esi+138h] ecx +
test ecx ecx +
jz loc_402A56  +
cmp [ecx] edi +
jz loc_4031AC  +
mov eax [esi+1C0h] +
and dword ptr [esi+138h] 0 +
mov [esi+1BCh] eax +
jmp loc_402B0E  +
mov eax [esi+1BCh] +
mov [esi+1C0h] eax +
and dword ptr [ecx+14h] 0 +
mov eax [esi+138h] +
xor ecx ecx +
mov [eax+1Dh] cl +
cmp [esi+284h] ecx +
jnz loc_4031DA  +
cmp [esi+12Ch] ecx +
jnz loc_4031DA  +
xor ecx ecx +
inc ecx  +
mov eax [esi+138h] +
mov [eax+1Eh] cl +
cmp dword ptr [esi+88h] 0 +
jz loc_402B0E  +
jmp loc_402B25  +
mov eax [esi+1C0h] +
mov [esi+1BCh] eax +
jmp loc_403137  +
cmp byte ptr [esi+1E0h] 0 +
mov ebx [ebp+arg_8] +
jz loc_403194  +
push [ebp+arg_14]  +
lea eax [esi+1B0h] +
push ebx  +
push [ebp+arg_4]  +
push eax  +
call sub_404D49  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_402A56  +
push 20h  +
lea eax [esi+1E4h] +
push edi  +
push eax  +
call sub_40465D  +
mov ecx eax +
add esp 0Ch +
mov [esi+138h] ecx +
test ecx ecx +
jz loc_402A56  +
cmp [ecx] edi +
jnz loc_403194  +
mov eax [esi+1BCh] +
mov [esi+1C0h] eax +
and dword ptr [ecx+14h] 0 +
mov eax [esi+138h] +
mov byte ptr [eax+1Dh] 1 +
cmp dword ptr [esi+284h] 0 +
jnz loc_40328C  +
cmp dword ptr [esi+12Ch] 0 +
jz loc_4031D7  +
xor ecx ecx +
jmp loc_4031DA  +
xor ebx ebx +
mov [esi+150h] ebx +
mov [esi+14Ch] ebx +
cmp [esi+60h] ebx +
jz loc_402B0B  +
push [ebp+arg_14]  +
mov edi [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
lea eax [esi+248h] +
push eax  +
call sub_404D49  +
add esp 10h +
mov [esi+14Ch] eax +
test eax eax +
jz loc_402A56  +
mov eax [esi+254h] +
mov [esi+258h] eax +
jmp loc_402B25  +
mov ecx [ebp+var_4] +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
push ecx  +
push [ebp+arg_14]  +
push ebx  +
push edi  +
call dword ptr [edi+38h]  +
add esp 10h +
test eax eax +
jz loc_403A36  +
cmp dword ptr [esi+14Ch] 0 +
jz loc_402B11  +
mov ecx [edi+44h] +
mov eax [ebp+arg_14] +
sub eax ecx +
push eax  +
lea eax [ecx+ebx] +
push eax  +
lea edx [esi+248h] +
push edi  +
push edx  +
call sub_404D49  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_402A56  +
push edi  +
call sub_404951  +
pop ecx  +
mov [esi+150h] edi +
jmp loc_4032D1  +
cmp dword ptr [esi+14Ch] 0 +
jz loc_40339F  +
cmp dword ptr [esi+60h] 0 +
jz loc_40339F  +
mov edi [ebp+arg_4] +
mov eax [ebp+arg_14] +
mov ecx [edi+44h] +
mov ebx [ebp+arg_8] +
sub eax ecx +
push eax  +
lea eax [ecx+ebx] +
push eax  +
lea edx [esi+248h] +
push edi  +
push edx  +
call sub_404D49  +
add esp 10h +
test eax eax +
jz loc_402A56  +
mov edx [ebp+arg_0] +
mov [edx] ebx +
push dword ptr [esi+150h]  +
push eax  +
push dword ptr [esi+21Ch]  +
push dword ptr [esi+14Ch]  +
push dword ptr [esi+4]  +
call dword ptr [esi+60h]  +
add esp 14h +
xor bl bl +
lea eax [esi+248h] +
push eax  +
call sub_404B65  +
pop ecx  +
jmp loc_4039C1  +
xor ecx ecx +
cmp [esi+150h] ecx +
jz loc_40339F  +
cmp [esi+60h] ecx +
jz loc_40339F  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_8] +
mov [edx] eax +
push dword ptr [esi+150h]  +
push ecx  +
jmp loc_403388  +
cmp dword ptr [esi+50h] 0 +
jz loc_4033E9  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_4050D5  +
add esp 10h +
push [ebp+arg_18]  +
lea eax [ebp+arg_14] +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_402610  +
add esp 14h +
cmp [ebp+arg_14] 0 +
jnz loc_402B25  +
mov dword ptr [esi+118h] offset sub_4045CB +
jmp loc_403B26  +
mov eax [esi+27Ch] +
cmp [esi+104h] eax +
jb loc_403492  +
test eax eax +
jz loc_403476  +
add eax eax +
push eax  +
push dword ptr [esi+278h]  +
mov [esi+27Ch] eax +
call dword ptr [esi+10h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_402A56  +
mov ecx [esi+218h] +
mov [esi+278h] eax +
test ecx ecx +
jz loc_403492  +
mov eax [esi+27Ch] +
shl eax 2 +
push eax  +
push ecx  +
call dword ptr [esi+10h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_402A56  +
mov [esi+218h] eax +
jmp loc_403492  +
push 20h  +
pop eax  +
push eax  +
mov [esi+27Ch] eax +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov [esi+278h] eax +
test eax eax +
jz loc_402A56  +
mov ecx [esi+278h] +
mov eax [esi+104h] +
mov byte ptr [ecx+eax] 0 +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
push esi  +
call sub_40482F  +
mov edx eax +
pop ecx  +
test edx edx +
js loc_402A56  +
mov ecx [esi+214h] +
mov eax [esi+218h] +
mov [eax+ecx*4] edx +
inc dword ptr [esi+214h]  +
imul edx edx +
mov eax [esi+204h] +
mov dword ptr [edx+eax] 6 +
cmp dword ptr [esi+80h] 0 +
jmp loc_402B09  +
mov eax [esi+278h] +
mov ecx [esi+104h] +
cmp byte ptr [eax+ecx] 7Ch +
jz loc_403A36  +
mov byte ptr [eax+ecx] 2Ch +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
jmp loc_4034E5  +
mov ecx [esi+278h] +
mov eax [esi+104h] +
mov al [ecx+eax] +
cmp al 2Ch +
jz loc_403A36  +
cmp byte ptr [esi+200h] 0 +
jz loc_403572  +
test al al +
jnz loc_403572  +
mov ecx [esi+214h] +
mov eax [esi+218h] +
mov eax [eax+ecx*4-4] +
mov ecx [esi+204h] +
imul eax eax +
cmp dword ptr [eax+ecx] 3 +
jz loc_403572  +
mov dword ptr [eax+ecx] 5 +
xor eax eax +
cmp [esi+80h] eax +
movzx ebx bl +
cmovnz ebx eax +
mov ecx [esi+278h] +
mov eax [esi+104h] +
mov byte ptr [ecx+eax] 7Ch +
jmp loc_4039C1  +
cmp dword ptr [esi+110h] 0 +
jz loc_403599  +
cmp ecx 3Bh +
jz loc_403A44  +
cmp dword ptr [esi+28Ch] 0 +
mov byte ptr [esi+1E1h] 1 +
jnz loc_4035E2  +
mov al [esi+1E2h] +
mov [esi+1E0h] al +
cmp byte ptr [esi+1E2h] 0 +
jnz loc_4039C1  +
mov eax [esi+6Ch] +
test eax eax +
jz loc_4039C1  +
push dword ptr [esi+4]  +
call eax  +
pop ecx  +
test eax eax +
jnz loc_4039C1  +
push 16h  +
jmp loc_403B25  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_14] +
sub eax [edx+44h] +
push eax  +
mov eax [ebp+arg_8] +
add eax [edx+44h] +
push eax  +
push edx  +
lea eax [esi+1B0h] +
push eax  +
call sub_404D49  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jz loc_402A56  +
push 0  +
lea eax [esi+1E4h] +
push ebx  +
push eax  +
call sub_40465D  +
mov edi eax +
mov eax [esi+1C0h] +
add esp 0Ch +
cmp dword ptr [esi+110h] 0 +
mov [esi+1BCh] eax +
jz loc_40368D  +
xor eax eax +
cmp [esi+1E2h] al +
jz loc_403648  +
cmp [esi+12Ch] eax +
jmp loc_40364E  +
cmp [esi+1E1h] al +
setz al  +
test eax eax +
jz loc_40368D  +
test edi edi +
jz loc_403A52  +
cmp byte ptr [edi+1Eh] 0 +
jz loc_403A4B  +
cmp byte ptr [edi+1Ch] 0 +
jnz loc_403A59  +
cmp dword ptr [edi+4] 0 +
jz loc_4036C2  +
push edi  +
push esi  +
call sub_404D8C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_403B26  +
jmp loc_402B25  +
test edi edi +
jnz loc_403667  +
cmp [ebp+arg_10] 3Ch +
mov al [esi+1E2h] +
mov [esi+1E0h] al +
jnz loc_402B0B  +
mov eax [esi+78h] +
test eax eax +
jz loc_402B0B  +
push 1  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
jmp loc_402B25  +
cmp dword ptr [esi+70h] 0 +
jz loc_403712  +
mov byte ptr [esi+1E3h] 0 +
push dword ptr [edi+14h]  +
mov byte ptr [edi+1Ch] 1 +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+10h]  +
push 0  +
push dword ptr [esi+74h]  +
call dword ptr [esi+70h]  +
add esp 14h +
mov byte ptr [edi+1Ch] 0 +
test eax eax +
jz loc_403A3D  +
xor bl bl +
cmp [esi+1E3h] bl +
jnz loc_4035B5  +
mov al [esi+1E2h] +
mov [esi+1E0h] al +
jmp loc_402B25  +
mov al [esi+1E2h] +
mov [esi+1E0h] al +
jmp loc_402B0B  +
cmp dword ptr [esi+80h] 0 +
jz loc_402B0B  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_4043F8  +
add esp 10h +
mov [esi+154h] eax +
test eax eax +
jz loc_402A56  +
and dword ptr [esi+214h] 0 +
and dword ptr [esi+210h] 0 +
mov byte ptr [esi+200h] 1 +
jmp loc_402B25  +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+80h] 0 +
jz loc_4037C7  +
push 14h  +
call dword ptr [esi+0Ch]  +
pop ecx  +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_402A58  +
mov edx [ebp+arg_0] +
xor ebx ebx +
cmp [ebp+arg_10] 29h +
mov [ecx+4] ebx +
setz al  +
mov [ecx+8] ebx +
mov [ecx+0Ch] ebx +
mov [ecx+10h] ebx +
push ecx  +
inc eax  +
mov [ecx] eax +
mov eax [ebp+arg_8] +
mov [edx] eax +
mov eax [esi+154h] +
push dword ptr [eax]  +
push dword ptr [esi+4]  +
call dword ptr [esi+80h]  +
add esp 0Ch +
mov byte ptr [esi+200h] 0 +
jmp loc_4039C1  +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
mov eax [esi+218h] +
mov ecx [esi+214h] +
mov ecx [eax+ecx*4-4] +
mov eax [esi+204h] +
imul ecx ecx +
mov dword ptr [ecx+eax] 3 +
jmp loc_4034E5  +
xor edi edi +
jmp loc_403818  +
xor edi edi +
inc edi  +
jmp loc_403818  +
push 2  +
pop eax  +
mov edi eax +
jmp loc_403818  +
push 3  +
pop edi  +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
mov eax [ebp+arg_14] +
test edi edi +
jz loc_403832  +
mov ecx [ebp+arg_4] +
sub eax [ecx+44h] +
push esi  +
mov [ebp+arg_10] eax +
call sub_40482F  +
mov ebx eax +
pop ecx  +
test ebx ebx +
js loc_402A56  +
mov eax [esi+204h] +
imul ebx ebx +
push [ebp+arg_10]  +
mov dword ptr [ebx+eax] 4 +
mov eax [esi+204h] +
push [ebp+arg_8]  +
mov [ebx+eax+4] edi +
mov edi [ebp+arg_4] +
push edi  +
push esi  +
call sub_4043F8  +
add esp 10h +
test eax eax +
jz loc_402A56  +
mov edx [eax] +
mov eax [esi+204h] +
xor ecx ecx +
mov [ebx+eax+8] edx +
mov al [ecx+edx] +
inc ecx  +
test al al +
jnz loc_403889  +
add [esi+208h] ecx +
cmp dword ptr [esi+80h] 0 +
jnz loc_402B25  +
mov ebx [ebp+arg_8] +
jmp loc_402B11  +
xor edx edx +
jmp loc_4038BF  +
xor edx edx +
inc edx  +
jmp loc_4038BF  +
push 2  +
pop eax  +
mov edx eax +
jmp loc_4038BF  +
push 3  +
pop edx  +
cmp byte ptr [esi+200h] 0 +
jz loc_402B0B  +
mov eax [esi+218h] +
xor ecx ecx +
cmp [esi+80h] ecx +
movzx ebx bl +
cmovnz ebx ecx +
dec dword ptr [esi+214h]  +
mov ecx [esi+214h] +
mov ecx [eax+ecx*4] +
mov eax [esi+204h] +
imul ecx ecx +
mov [ecx+eax+4] edx +
cmp dword ptr [esi+214h] 0 +
jnz loc_4039C1  +
test bl bl +
jnz loc_403939  +
push esi  +
call sub_4018C2  +
pop ecx  +
test eax eax +
jz loc_402A56  +
mov edx [ebp+arg_0] +
mov edi [ebp+arg_8] +
mov [edx] edi +
push eax  +
mov eax [esi+154h] +
push dword ptr [eax]  +
push dword ptr [esi+4]  +
call dword ptr [esi+80h]  +
add esp 0Ch +
and dword ptr [esi+208h] 0 +
mov byte ptr [esi+200h] 0 +
jmp loc_4039C1  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_405167  +
add esp 10h +
test eax eax +
jz loc_402A56  +
jmp loc_402B25  +
push [ebp+arg_14]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_40505D  +
jmp loc_403958  +
cmp edi 0Eh +
jnz loc_402B0B  +
jmp loc_402B25  +
cmp dword ptr [esi+54h] 0 +
jmp loc_402B09  +
cmp byte ptr [esi+1E0h] 0 +
jz loc_402B0B  +
cmp dword ptr [esi+88h] 0 +
jmp loc_402B09  +
cmp dword ptr [esi+60h] 0 +
jmp loc_402B09  +
cmp dword ptr [esi+80h] 0 +
jz loc_402B0B  +
xor bl bl +
test bl bl +
jz loc_402B25  +
jmp loc_402B0B  +
mov [eax] edx +
xor eax eax +
jmp loc_403B26  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_14] +
mov [ecx] eax +
push 4  +
jmp loc_403B25  +
push 5  +
jmp loc_403B25  +
push 6  +
jmp loc_403B25  +
mov ecx [ebp+arg_4] +
cmp ecx [esi+90h] +
jnz loc_4039D0  +
cmp byte ptr [esi+288h] 0 +
jz loc_403A2F  +
push ecx  +
push [ebp+arg_C]  +
lea eax [esi+100h] +
push [ebp+arg_C]  +
push 0FFFFFFFCh  +
push eax  +
call dword ptr [eax]  +
add esp 14h +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
push 2  +
pop eax  +
cmovz ecx eax +
mov eax ecx +
jmp loc_403B26  +
push 3  +
jmp loc_403B25  +
push 2  +
jmp loc_403B25  +
push 15h  +
jmp loc_403B25  +
push 0Ah  +
jmp loc_403B25  +
push 18h  +
jmp loc_403B25  +
push 0Bh  +
jmp loc_403B25  +
push 0Ch  +
jmp loc_403B25  +
cmp byte ptr [esi+289h] 0 +
jz loc_403AF2  +
xor ebx ebx +
mov byte ptr [esi+1E1h] 1 +
cmp [esi+28Ch] ebx +
jz loc_403AF2  +
cmp [esi+70h] ebx +
jz loc_403AF2  +
push 20h  +
lea eax [esi+1E4h] +
push offset unk_460338  +
push eax  +
call sub_40465D  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jz loc_402A56  +
mov eax [esi+21Ch] +
mov [ecx+10h] eax +
mov [esi+1E3h] bl +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+10h]  +
push ebx  +
push dword ptr [esi+74h]  +
call dword ptr [esi+70h]  +
add esp 14h +
test eax eax +
jz loc_403A3D  +
cmp [esi+1E3h] bl +
jz loc_403AF2  +
cmp [esi+1E2h] bl +
jnz loc_403AF2  +
mov eax [esi+6Ch] +
test eax eax +
jz loc_403AF2  +
push dword ptr [esi+4]  +
call eax  +
pop ecx  +
test eax eax +
jz loc_4035DB  +
push [ebp+arg_18]  +
mov dword ptr [esi+118h] offset sub_401A66 +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_401A66  +
add esp 10h +
jmp loc_403B26  +
cmp edi 0Ch +
jz loc_403B23  +
push 0Ah  +
pop eax  +
push 2  +
cmp edi 1Ch +
pop ecx  +
cmovnz eax ecx +
jmp loc_403B26  +
push 11h  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push ecx  +
mov ecx [ebp+arg_0] +
sub esp 0BCh +
push ebx  +
mov eax [ebp+arg_0] +
push esi  +
push ecx  +
push ecx  +
push ebx  +
sub esp 410h +
mov edx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
push esi  +
push esi  +
sub esp 18h +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov edx [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
sub esp 10h +
sub esp 14h +
push esi  +
push esi  +
push edi  +
push ecx  +
push ecx  +
push ebx  +
mov ecx [ebp+arg_4] +
push esi  +
sub esp 28h +
sub esp 0Ch +
push ecx  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_4062F3  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_406565  +
mov eax edi +
sub eax esi +
test al 1 +
jz loc_40630B  +
and eax 0FFFFFFFEh +
jnz loc_406308  +
or eax 0FFFFFFFFh +
jmp loc_406565  +
lea edi [eax+esi] +
mov cl [esi+1] +
push ebx  +
mov bl [esi] +
test bl bl +
jnz loc_406322  +
mov edx [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40632F  +
push ecx  +
push ebx  +
call sub_40E5D2  +
mov edx [ebp+arg_0] +
add esp 8 +
sub eax 2 +
cmp eax 22h +
ja loc_40655D  +
movzx eax ds:byte_406787[eax] +
mov [ebp+arg_4] 1Fh +
jmp ds:off_406733[eax*4]  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
push 0Ch  +
jmp loc_406368  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
push 0Dh  +
call sub_40AAEF  +
add esp 14h +
jmp loc_406564  +
add esi 2 +
cmp esi edi +
jz loc_4066FA  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_406391  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40639B  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 5 +
jl loc_4063BE  +
cmp eax 7 +
jle loc_4063F2  +
cmp eax 0Fh +
jz loc_4063DF  +
cmp eax 10h +
jz loc_4063CC  +
cmp eax 16h +
jz loc_4063F2  +
cmp eax 18h +
jz loc_4063F2  +
cmp eax 1Dh +
jz loc_4063F2  +
xor ecx ecx +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax ecx +
jmp loc_406564  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40A7F7  +
jmp loc_40654D  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40B114  +
jmp loc_40654D  +
mov eax [ebp+arg_C] +
lea ecx [esi-2] +
mov [eax] ecx +
push 1Dh  +
jmp loc_4064BD  +
lea eax [esi+2] +
cmp eax edi +
jnz loc_406445  +
mov eax [ebp+arg_C] +
push 0FFFFFFF1h  +
mov [eax] edi +
jmp loc_4064BD  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_406425  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40642F  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
sub eax 9 +
jz loc_40643E  +
dec eax  +
jz loc_406445  +
sub eax 0Bh +
jnz loc_40644C  +
jmp loc_406445  +
lea eax [esi+2] +
cmp eax edi +
jz loc_40644C  +
add esi 2 +
cmp esi edi +
jnz loc_406414  +
push 0Fh  +
jmp loc_40651E  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40AF94  +
jmp loc_40654D  +
push 26h  +
jmp loc_406532  +
push 19h  +
jmp loc_406532  +
add esi 2 +
cmp esi edi +
jnz loc_40647F  +
push 0FFFFFFE6h  +
jmp loc_4064BD  +
cmp byte ptr [esi] 0 +
jnz loc_4064AC  +
cmp byte ptr [esi+1] 5Dh +
jnz loc_4064AC  +
lea eax [esi+2] +
cmp eax edi +
jz loc_4066FA  +
cmp byte ptr [eax] 0 +
jnz loc_4064AC  +
cmp byte ptr [esi+3] 3Eh +
jnz loc_4064AC  +
mov eax [ebp+arg_C] +
lea ecx [esi+4] +
mov [eax] ecx +
push 22h  +
jmp loc_4064BD  +
push 1Ah  +
jmp loc_40651E  +
push 17h  +
jmp loc_406532  +
add esi 2 +
cmp esi edi +
jnz loc_4064C3  +
push 0FFFFFFE8h  +
pop eax  +
jmp loc_406564  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_4064D4  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_4064DE  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 20h +
jg loc_406506  +
jz loc_40651C  +
cmp eax 9 +
jl loc_4063BE  +
cmp eax 0Bh +
jle loc_40651C  +
cmp eax 0Fh +
jz loc_406502  +
cmp eax 15h +
jz loc_40651C  +
jmp loc_4063BE  +
push 23h  +
jmp loc_406532  +
cmp eax 21h +
jz loc_406528  +
cmp eax 22h +
jz loc_406524  +
add eax 0FFFFFFDDh +
cmp eax 1 +
ja loc_4063BE  +
push 18h  +
pop ecx  +
jmp loc_4063C0  +
push 25h  +
jmp loc_406532  +
push 24h  +
jmp loc_406532  +
push 15h  +
jmp loc_406532  +
push 11h  +
mov eax [ebp+arg_C] +
lea ecx [esi+2] +
pop edx  +
mov [eax] ecx +
mov eax edx +
jmp loc_406564  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40B35B  +
add esp 10h +
jmp loc_406564  +
sub edi esi +
cmp edi 2 +
jl loc_4066E5  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
sub edi esi +
cmp edi 3 +
jmp loc_406557  +
sub edi esi +
cmp edi 4 +
jmp loc_406557  +
push 12h  +
jmp loc_4065C5  +
movzx eax bl +
mov [ebp+arg_8] eax +
movzx ecx cl +
xor eax eax +
mov ebx ecx +
and ecx [ebp+arg_4] +
inc eax  +
shl eax cl +
shr ebx 5 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
movzx eax ds:byte_461D78[eax] +
lea eax [ebx+eax*8] +
test ds:dword_461878[eax*4] ecx +
jnz loc_406577  +
mov eax [ebp+arg_8] +
movzx eax ds:byte_461E78[eax] +
lea eax [ebx+eax*8] +
test ds:dword_461878[eax*4] ecx +
jz loc_40655D  +
push 13h  +
add esi 2 +
pop ebx  +
cmp esi edi +
jz loc_40672A  +
mov al [esi] +
mov cl [esi+1] +
mov [ebp+arg_8] eax +
test al al +
jnz loc_4065E7  +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_4065F1  +
push ecx  +
push eax  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
cmp eax [ebp+arg_4] +
ja loc_4066D5  +
movzx eax ds:byte_4067D7[eax] +
jmp ds:off_4067AB[eax*4]  +
mov eax [ebp+arg_8] +
movzx eax al +
movzx ecx cl +
movzx edx ds:byte_461E78[eax] +
mov eax ecx +
and ecx [ebp+arg_4] +
shr eax 5 +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40655D  +
add esi 2 +
cmp esi edi +
jz loc_40672A  +
mov edx [ebp+arg_0] +
jmp loc_4065D1  +
add esi 2 +
cmp ebx 12h +
jz loc_40665A  +
cmp ebx 29h +
jnz loc_40663B  +
push 13h  +
pop ebx  +
jmp loc_40663B  +
cmp esi edi +
jz loc_4066FA  +
mov al [esi] +
mov cl [esi+1] +
push 29h  +
pop ebx  +
mov [ebp+arg_8] eax +
test al al +
jnz loc_40667B  +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_406685  +
push ecx  +
push eax  +
call sub_40E5D2  +
add esp 8 +
cmp eax 5 +
jz loc_4066F3  +
cmp eax 6 +
jz loc_4066EC  +
cmp eax 7 +
jz loc_4066DE  +
cmp eax 16h +
jz loc_406638  +
cmp eax 17h +
jle loc_406655  +
cmp eax 1Bh +
jle loc_406638  +
cmp eax 1Dh +
jnz loc_406655  +
mov eax [ebp+arg_8] +
movzx eax al +
movzx ecx cl +
movzx edx ds:byte_461E78[eax] +
mov eax ecx +
and ecx [ebp+arg_4] +
shr eax 5 +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jnz loc_406638  +
xor ebx ebx +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_40672C  +
sub edi esi +
cmp edi 4 +
jge loc_4066D5  +
push 0FFFFFFFEh  +
jmp loc_4064BD  +
sub edi esi +
cmp edi 3 +
jmp loc_4066E3  +
sub edi esi +
cmp edi 2 +
jmp loc_4066E3  +
or eax 0FFFFFFFFh +
jmp loc_406564  +
cmp ebx 13h +
jz loc_4066D5  +
push 20h  +
jmp loc_40671C  +
cmp ebx 13h +
jz loc_4066D5  +
mov eax [ebp+arg_4] +
jmp loc_40671D  +
cmp ebx 13h +
jz loc_4066D5  +
push 1Eh  +
pop eax  +
mov ecx [ebp+arg_C] +
lea edx [esi+2] +
mov [ecx] edx +
jmp loc_406564  +
neg ebx  +
mov eax ebx +
jmp loc_406564  +
***
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_8] +
mov edx [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp edx edi +
jnz loc_406CDF  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_406E36  +
mov eax edi +
sub eax edx +
test al 1 +
jz loc_406CF7  +
and eax 0FFFFFFFEh +
jnz loc_406CF4  +
or eax 0FFFFFFFFh +
jmp loc_406E36  +
lea edi [eax+edx] +
mov cl [edx+1] +
movzx eax byte ptr [edx] +
push ebx  +
test cl cl +
jnz loc_406D0C  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_406D19  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov ebx [ebp+arg_0] +
add esp 8 +
push esi  +
push 2  +
pop esi  +
cmp eax 0Ah +
ja loc_406DD7  +
jmp ds:off_406EEC[eax*4]  +
push [ebp+arg_C]  +
lea eax [edx+2] +
push edi  +
push eax  +
push ebx  +
call sub_40C60A  +
jmp loc_406D4B  +
push [ebp+arg_C]  +
lea eax [edx+2] +
push edi  +
push eax  +
push ebx  +
call sub_40CECE  +
add esp 10h +
jmp loc_406E34  +
push 2  +
pop esi  +
add edx esi +
cmp edx edi +
jnz loc_406D63  +
push 0FFFFFFFDh  +
jmp loc_406E23  +
mov cl [edx+1] +
movzx eax byte ptr [edx] +
test cl cl +
jnz loc_406D74  +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_406D7E  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Ah +
jnz loc_406D85  +
add edx esi +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_406D94  +
mov eax [ebp+arg_C] +
lea ecx [edx+2] +
mov [eax] ecx +
push 7  +
jmp loc_406E23  +
add edx esi +
cmp edx edi +
jz loc_406DB2  +
cmp byte ptr [edx+1] 0 +
jnz loc_406DD9  +
cmp byte ptr [edx] 5Dh +
jnz loc_406DD9  +
add edx esi +
cmp edx edi +
jnz loc_406DB6  +
push 0FFFFFFFBh  +
jmp loc_406E23  +
cmp byte ptr [edx+1] 0 +
jnz loc_406DCB  +
cmp byte ptr [edx] 3Eh +
jnz loc_406DCB  +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_406E9F  +
sub edx esi +
jmp loc_406DD9  +
mov ecx edi +
sub ecx edx +
cmp ecx esi +
jl loc_406E21  +
add edx esi +
push 6  +
pop ebx  +
cmp edx edi +
jz loc_406E2D  +
lea eax [edx+4] +
mov [ebp+arg_8] eax +
lea eax [edx+2] +
mov ecx edi +
mov [ebp+arg_4] eax +
sub ecx edx +
mov al [edx+1] +
test al al +
mov [ebp+var_4] eax +
movzx eax byte ptr [edx] +
jnz loc_406E39  +
mov esi [ebp+arg_0] +
push 2  +
movzx eax byte ptr [eax+esi+4Ch] +
pop esi  +
jmp loc_406E45  +
mov eax edi +
sub eax edx +
cmp eax 3 +
jl loc_406E21  +
add edx 3 +
jmp loc_406DD9  +
mov eax edi +
sub eax edx +
cmp eax 4 +
jge loc_406E26  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_406E34  +
add edx 4 +
jmp loc_406DD9  +
xor ebx ebx +
mov ecx [ebp+arg_C] +
mov eax ebx +
mov [ecx] edx +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
push eax  +
push [ebp+var_4]  +
call sub_40E5D2  +
add esp 8 +
cmp eax ebx +
jg loc_406EB3  +
jz loc_406EAF  +
test eax eax +
js loc_406EC3  +
cmp eax 3 +
jle loc_406E2D  +
cmp eax 4 +
jz loc_406E73  +
cmp eax 5 +
jnz loc_406EC3  +
cmp ecx esi +
jl loc_406E2D  +
mov eax [ebp+arg_8] +
add [ebp+arg_4] esi +
add edx esi +
add eax esi +
mov [ebp+arg_8] eax +
sub ecx esi +
jmp loc_406EDF  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_406E2D  +
cmp byte ptr [edx+3] 0 +
jnz loc_406EA3  +
cmp byte ptr [eax] 5Dh +
jnz loc_406EA3  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_406E2D  +
cmp byte ptr [edx+5] 0 +
jnz loc_406E65  +
cmp byte ptr [eax] 3Eh +
jnz loc_406E65  +
mov eax [ebp+arg_C] +
lea ecx [edx+4] +
mov [eax] ecx +
xor eax eax +
jmp loc_406E34  +
add edx esi +
add eax esi +
mov [ebp+arg_4] eax +
add [ebp+arg_8] esi +
jmp loc_406E6F  +
push 3  +
jmp loc_406ECC  +
cmp eax 7 +
jz loc_406ECA  +
jle loc_406EC3  +
cmp eax 0Ah +
jle loc_406E2D  +
add edx esi +
add [ebp+arg_4] esi +
jmp loc_406EAA  +
push 4  +
pop eax  +
cmp ecx eax +
jl loc_406E2D  +
add [ebp+arg_4] eax +
add [ebp+arg_8] eax +
add edx eax +
sub ecx eax +
cmp edx edi +
jnz loc_406DF0  +
jmp loc_406E2D  +
***
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
cmp edx ebx +
jnz loc_406F2E  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_4070B2  +
mov eax ebx +
sub eax edx +
test al 1 +
jz loc_406F49  +
and eax 0FFFFFFFEh +
jnz loc_406F43  +
or eax 0FFFFFFFFh +
jmp loc_4070B2  +
lea ebx [eax+edx] +
mov [ebp+arg_8] ebx +
mov cl [edx] +
movzx eax byte ptr [edx+1] +
push esi  +
test cl cl +
jnz loc_406F5E  +
mov esi [ebp+arg_0] +
movzx eax byte ptr [eax+esi+4Ch] +
jmp loc_406F6B  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov esi [ebp+arg_0] +
add esp 8 +
push edi  +
push 2  +
pop edi  +
cmp eax 0Ah +
ja loc_406FFC  +
jmp ds:off_4070B8[eax*4]  +
add edx edi +
cmp edx ebx +
jz loc_406FB2  +
cmp byte ptr [edx] 0 +
jnz loc_406FFE  +
cmp byte ptr [edx+1] 5Dh +
jnz loc_406FFE  +
add edx edi +
cmp edx ebx +
jz loc_406FB2  +
cmp byte ptr [edx] 0 +
jnz loc_406FA5  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_406FA5  +
push 28h  +
jmp loc_406FE6  +
sub edx edi +
jmp loc_406FFE  +
push 2  +
pop edi  +
add edx edi +
cmp edx ebx +
jnz loc_406FBA  +
or eax 0FFFFFFFFh +
jmp loc_4070B0  +
mov cl [edx] +
movzx eax byte ptr [edx+1] +
test cl cl +
jnz loc_406FCB  +
movzx eax byte ptr [eax+esi+4Ch] +
jmp loc_406FD5  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Ah +
jnz loc_406FDC  +
add edx edi +
push 7  +
pop esi  +
jmp loc_4070A9  +
push 7  +
mov eax [ebp+arg_C] +
lea ecx [edx+2] +
pop esi  +
mov [eax] ecx +
jmp loc_4070AE  +
mov ecx ebx +
sub ecx edx +
cmp ecx edi +
jl loc_40703E  +
add edx edi +
push 6  +
pop esi  +
cmp edx ebx +
jz loc_4070A9  +
mov ecx ebx +
sub ecx edx +
mov al [edx] +
test al al +
mov [ebp+arg_4] eax +
movzx eax byte ptr [edx+1] +
jnz loc_40704C  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
mov ebx [ebp+arg_8] +
jmp loc_407058  +
mov eax ebx +
sub eax edx +
cmp eax 3 +
jl loc_40703E  +
add edx 3 +
jmp loc_406FFE  +
mov eax ebx +
sub eax edx +
cmp eax 4 +
jge loc_407043  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_4070B0  +
add edx 4 +
jmp loc_406FFE  +
xor esi esi +
jmp loc_4070A9  +
push eax  +
push [ebp+arg_4]  +
call sub_40E5D2  +
add esp 8 +
cmp eax esi +
jg loc_407088  +
jz loc_40707B  +
test eax eax +
js loc_407075  +
cmp eax 1 +
jle loc_4070A9  +
cmp eax 4 +
jz loc_4070A9  +
cmp eax 5 +
jnz loc_407075  +
cmp ecx edi +
jl loc_4070A9  +
add edx edi +
sub ecx edi +
jmp loc_4070A1  +
cmp ecx 3 +
jl loc_4070A9  +
add edx 3 +
sub ecx 3 +
jmp loc_4070A1  +
cmp eax 7 +
jz loc_407096  +
jle loc_407075  +
cmp eax 0Ah +
jle loc_4070A9  +
jmp loc_407075  +
cmp ecx 4 +
jl loc_4070A9  +
add edx 4 +
sub ecx 4 +
cmp edx ebx +
jnz loc_40700D  +
mov ecx [ebp+arg_C] +
mov [ecx] edx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
mov eax esi +
push edi  +
sub eax edx +
xor edi edi +
test al 1 +
jz loc_40721E  +
mov esi eax +
and esi 0FFFFFFFEh +
add esi edx +
cmp edx esi +
jz loc_4072F8  +
mov ecx esi +
sub ecx edx +
mov bl [edx] +
movzx eax byte ptr [edx+1] +
test bl bl +
jnz loc_40723E  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_407248  +
push eax  +
push ebx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 8 +
ja loc_4072EA  +
jmp ds:off_407315[eax*4]  +
push 2  +
pop eax  +
cmp ecx eax +
jl loc_407300  +
add edx eax +
sub ecx eax +
jmp loc_4072F0  +
cmp ecx 3 +
jl loc_407300  +
add edx 3 +
sub ecx 3 +
jmp loc_4072F0  +
cmp ecx 4 +
jl loc_407300  +
add edx 4 +
sub ecx 4 +
jmp loc_4072F0  +
push 2  +
pop eax  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4072F8  +
cmp byte ptr [edx] 0 +
jnz loc_4072F0  +
cmp byte ptr [edx+1] 21h +
jnz loc_4072F0  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4072F8  +
cmp byte ptr [edx] 0 +
jnz loc_4072F0  +
cmp byte ptr [edx+1] 5Bh +
jnz loc_4072F0  +
inc edi  +
jmp loc_407263  +
push 2  +
pop eax  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4072F8  +
cmp byte ptr [edx] 0 +
jnz loc_4072F0  +
cmp byte ptr [edx+1] 5Dh +
jnz loc_4072F0  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4072F8  +
cmp byte ptr [edx] 0 +
jnz loc_4072F0  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_4072F0  +
add edx eax +
sub ecx eax +
test edi edi +
jz loc_407305  +
dec edi  +
jmp loc_4072F0  +
add edx 2 +
sub ecx 2 +
cmp edx esi +
jnz loc_40722A  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_4072FB  +
push 2Ah  +
pop eax  +
jmp loc_40730C  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] edx +
jmp loc_4072FB  +
***
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
add ecx 2 +
sub edx 2 +
push esi  +
push edi  +
cmp ecx edx +
jz loc_407431  +
mov edi [ebp+arg_0] +
mov al [ecx+1] +
mov bl [ecx] +
mov [ebp+arg_4] eax +
test bl bl +
jnz loc_4073C0  +
movzx eax al +
movzx eax byte ptr [eax+edi+4Ch] +
jmp loc_4073CA  +
push eax  +
push ebx  +
call sub_40E5D2  +
add esp 8 +
sub eax 9 +
cmp eax 1Ah +
ja loc_40740D  +
movzx eax ds:byte_407449[eax] +
jmp ds:off_407439[eax*4]  +
test bl bl +
jnz loc_407426  +
mov eax [ebp+arg_4] +
cmp al 9 +
jnz loc_407426  +
mov eax [ebp+arg_C] +
mov [eax] ecx +
xor eax eax +
jmp loc_407434  +
mov eax [ebp+arg_4] +
test bl bl +
jnz loc_407400  +
movsx esi al +
jmp loc_407403  +
or esi 0FFFFFFFFh +
test esi 0FFFFFF80h +
jz loc_407426  +
jmp loc_407410  +
mov eax [ebp+arg_4] +
test bl bl +
jnz loc_407419  +
movsx eax al +
jmp loc_40741C  +
or eax 0FFFFFFFFh +
cmp eax 24h +
jz loc_407426  +
cmp eax 40h +
jnz loc_4073EB  +
add ecx 2 +
cmp ecx edx +
jnz loc_4073AA  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_4] +
sub esp 0Ch +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_10] +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_4] +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
cmp esi ebx +
jnz loc_407B78  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_407C73  +
movzx eax byte ptr [esi] +
mov ecx [ebp+arg_0] +
push edi  +
movzx eax byte ptr [eax+ecx+4Ch] +
cmp eax 0Ah +
ja loc_407C77  +
jmp ds:off_407DA0[eax*4]  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push ebx  +
push eax  +
push ecx  +
call sub_40D8F4  +
jmp loc_407BB2  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push ebx  +
push eax  +
push ecx  +
call sub_40E279  +
add esp 10h +
jmp loc_407C72  +
inc esi  +
cmp esi ebx +
jnz loc_407BC6  +
push 0FFFFFFFDh  +
jmp loc_407C49  +
movzx eax byte ptr [esi] +
cmp byte ptr [eax+ecx+4Ch] 0Ah +
jnz loc_407BD1  +
inc esi  +
mov eax [ebp+arg_C] +
mov [eax] esi +
jmp loc_407BE0  +
mov eax [ebp+arg_C] +
lea ecx [esi+1] +
mov [eax] ecx +
push 7  +
jmp loc_407C49  +
inc esi  +
cmp esi ebx +
jz loc_407BF7  +
cmp byte ptr [esi] 5Dh +
jnz loc_407C78  +
inc esi  +
cmp esi ebx +
jnz loc_407BFB  +
push 0FFFFFFFBh  +
jmp loc_407C49  +
cmp byte ptr [esi] 3Eh +
jz loc_407C5A  +
dec esi  +
jmp loc_407C78  +
mov eax ebx +
sub eax esi +
cmp eax 2 +
jl loc_407C47  +
push esi  +
push ecx  +
call dword ptr [ecx+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407C5A  +
add esi 2 +
mov ecx [ebp+arg_0] +
jmp loc_407C78  +
mov eax ebx +
sub eax esi +
cmp eax 3 +
jl loc_407C47  +
push esi  +
push ecx  +
call dword ptr [ecx+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407C5A  +
add esi 3 +
jmp loc_407C1D  +
mov eax ebx +
sub eax esi +
cmp eax 4 +
jge loc_407C4C  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_407C72  +
push esi  +
push ecx  +
call dword ptr [ecx+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407C64  +
mov eax [ebp+arg_C] +
mov [eax] esi +
jmp loc_407D97  +
add esi 4 +
jmp loc_407C1D  +
xor edi edi +
mov ecx [ebp+arg_C] +
mov eax edi +
mov [ecx] esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
inc esi  +
push 6  +
pop edi  +
cmp esi ebx +
jz loc_407C6B  +
lea eax [esi+2] +
mov edx ebx +
mov [ebp+arg_8] eax +
lea eax [esi+1] +
sub edx esi +
mov [ebp+arg_4] eax +
mov [ebp+var_4] edx +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ecx+4Ch] +
cmp eax edi +
jg loc_407D3B  +
jz loc_407D1C  +
test eax eax +
js loc_407D4B  +
cmp eax 3 +
jle loc_407C6B  +
cmp eax 4 +
jz loc_407CE7  +
cmp eax 5 +
jnz loc_407D4B  +
cmp edx 2 +
jl loc_407C6B  +
push esi  +
push ecx  +
call dword ptr [ecx+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407C6B  +
mov edx [ebp+var_4] +
push 2  +
pop ecx  +
add [ebp+arg_4] ecx +
add [ebp+arg_8] ecx +
add esi ecx +
sub edx ecx +
jmp loc_407D7C  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jz loc_407C6B  +
cmp byte ptr [eax] 5Dh +
jz loc_407D02  +
inc esi  +
inc eax  +
mov [ebp+arg_4] eax +
inc [ebp+arg_8]  +
dec edx  +
jmp loc_407D7F  +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_407C6B  +
cmp byte ptr [eax] 3Eh +
jz loc_407D8F  +
inc esi  +
inc [ebp+arg_4]  +
inc eax  +
mov [ebp+arg_8] eax +
jmp loc_407CFF  +
cmp edx 3 +
jl loc_407C6B  +
push esi  +
push ecx  +
call dword ptr [ecx+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407C6B  +
push 3  +
jmp loc_407D6E  +
cmp eax 7 +
jz loc_407D51  +
jle loc_407D4B  +
cmp eax 0Ah +
jle loc_407C6B  +
inc esi  +
inc [ebp+arg_4]  +
jmp loc_407CFC  +
cmp edx 4 +
jl loc_407C6B  +
push esi  +
push ecx  +
call dword ptr [ecx+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407C6B  +
push 4  +
mov edx [ebp+var_4] +
pop eax  +
add [ebp+arg_4] eax +
add [ebp+arg_8] eax +
add esi eax +
sub edx eax +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] edx +
cmp esi ebx +
jnz loc_407C92  +
jmp loc_407C6B  +
mov eax [ebp+arg_C] +
lea ecx [esi+2] +
mov [eax] ecx +
xor eax eax +
jmp loc_407C72  +
***
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_10] +
mov eax [ebp+arg_4] +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_408000  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_408272  +
mov eax edi +
sub eax esi +
test al 1 +
jz loc_408018  +
and eax 0FFFFFFFEh +
jnz loc_408015  +
or eax 0FFFFFFFFh +
jmp loc_408272  +
lea edi [eax+esi] +
mov cl [esi] +
push ebx  +
mov bl [esi+1] +
test bl bl +
jnz loc_40802F  +
mov edx [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40803C  +
push ecx  +
push ebx  +
call sub_40E5D2  +
mov edx [ebp+arg_0] +
add esp 8 +
sub eax 2 +
cmp eax 22h +
ja loc_40826A  +
movzx eax ds:byte_408494[eax] +
mov [ebp+arg_4] 1Fh +
jmp ds:off_408440[eax*4]  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
push 0Ch  +
jmp loc_408075  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
push 0Dh  +
call sub_40C51A  +
add esp 14h +
jmp loc_408271  +
add esi 2 +
cmp esi edi +
jz loc_408407  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40809E  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_4080A8  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 5 +
jl loc_4080CB  +
cmp eax 7 +
jle loc_4080FF  +
cmp eax 0Fh +
jz loc_4080EC  +
cmp eax 10h +
jz loc_4080D9  +
cmp eax 16h +
jz loc_4080FF  +
cmp eax 18h +
jz loc_4080FF  +
cmp eax 1Dh +
jz loc_4080FF  +
xor ecx ecx +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax ecx +
jmp loc_408271  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40C222  +
jmp loc_40825A  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40CB3F  +
jmp loc_40825A  +
mov eax [ebp+arg_C] +
lea ecx [esi-2] +
mov [eax] ecx +
push 1Dh  +
jmp loc_4081CA  +
lea eax [esi+2] +
cmp eax edi +
jnz loc_408152  +
mov eax [ebp+arg_C] +
push 0FFFFFFF1h  +
mov [eax] edi +
jmp loc_4081CA  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_408132  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40813C  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
sub eax 9 +
jz loc_40814B  +
dec eax  +
jz loc_408152  +
sub eax 0Bh +
jnz loc_408159  +
jmp loc_408152  +
lea eax [esi+2] +
cmp eax edi +
jz loc_408159  +
add esi 2 +
cmp esi edi +
jnz loc_408121  +
push 0Fh  +
jmp loc_40822B  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40C9BF  +
jmp loc_40825A  +
push 26h  +
jmp loc_40823F  +
push 19h  +
jmp loc_40823F  +
add esi 2 +
cmp esi edi +
jnz loc_40818C  +
push 0FFFFFFE6h  +
jmp loc_4081CA  +
cmp byte ptr [esi+1] 0 +
jnz loc_4081B9  +
cmp byte ptr [esi] 5Dh +
jnz loc_4081B9  +
lea eax [esi+2] +
cmp eax edi +
jz loc_408407  +
cmp byte ptr [esi+3] 0 +
jnz loc_4081B9  +
cmp byte ptr [eax] 3Eh +
jnz loc_4081B9  +
mov eax [ebp+arg_C] +
lea ecx [esi+4] +
mov [eax] ecx +
push 22h  +
jmp loc_4081CA  +
push 1Ah  +
jmp loc_40822B  +
push 17h  +
jmp loc_40823F  +
add esi 2 +
cmp esi edi +
jnz loc_4081D0  +
push 0FFFFFFE8h  +
pop eax  +
jmp loc_408271  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_4081E1  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_4081EB  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 20h +
jg loc_408213  +
jz loc_408229  +
cmp eax 9 +
jl loc_4080CB  +
cmp eax 0Bh +
jle loc_408229  +
cmp eax 0Fh +
jz loc_40820F  +
cmp eax 15h +
jz loc_408229  +
jmp loc_4080CB  +
push 23h  +
jmp loc_40823F  +
cmp eax 21h +
jz loc_408235  +
cmp eax 22h +
jz loc_408231  +
add eax 0FFFFFFDDh +
cmp eax 1 +
ja loc_4080CB  +
push 18h  +
pop ecx  +
jmp loc_4080CD  +
push 25h  +
jmp loc_40823F  +
push 24h  +
jmp loc_40823F  +
push 15h  +
jmp loc_40823F  +
push 11h  +
mov eax [ebp+arg_C] +
lea ecx [esi+2] +
pop edx  +
mov [eax] ecx +
mov eax edx +
jmp loc_408271  +
push [ebp+arg_C]  +
lea eax [esi+2] +
push edi  +
push eax  +
push edx  +
call sub_40CD86  +
add esp 10h +
jmp loc_408271  +
sub edi esi +
cmp edi 2 +
jl loc_4083F2  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
sub edi esi +
cmp edi 3 +
jmp loc_408264  +
sub edi esi +
cmp edi 4 +
jmp loc_408264  +
push 12h  +
jmp loc_4082D2  +
movzx eax bl +
mov [ebp+arg_8] eax +
movzx ecx cl +
xor eax eax +
mov ebx ecx +
and ecx [ebp+arg_4] +
inc eax  +
shl eax cl +
shr ebx 5 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
movzx eax ds:byte_461D78[eax] +
lea eax [ebx+eax*8] +
test ds:dword_461878[eax*4] ecx +
jnz loc_408284  +
mov eax [ebp+arg_8] +
movzx eax ds:byte_461E78[eax] +
lea eax [ebx+eax*8] +
test ds:dword_461878[eax*4] ecx +
jz loc_40826A  +
push 13h  +
add esi 2 +
pop ebx  +
cmp esi edi +
jz loc_408437  +
mov al [esi+1] +
mov cl [esi] +
mov [ebp+arg_8] eax +
test al al +
jnz loc_4082F4  +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_4082FE  +
push ecx  +
push eax  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
cmp eax [ebp+arg_4] +
ja loc_4083E2  +
movzx eax ds:byte_4084E4[eax] +
jmp ds:off_4084B8[eax*4]  +
mov eax [ebp+arg_8] +
movzx eax al +
movzx ecx cl +
movzx edx ds:byte_461E78[eax] +
mov eax ecx +
and ecx [ebp+arg_4] +
shr eax 5 +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40826A  +
add esi 2 +
cmp esi edi +
jz loc_408437  +
mov edx [ebp+arg_0] +
jmp loc_4082DE  +
add esi 2 +
cmp ebx 12h +
jz loc_408367  +
cmp ebx 29h +
jnz loc_408348  +
push 13h  +
pop ebx  +
jmp loc_408348  +
cmp esi edi +
jz loc_408407  +
mov al [esi+1] +
mov cl [esi] +
push 29h  +
pop ebx  +
mov [ebp+arg_8] eax +
test al al +
jnz loc_408388  +
movzx eax cl +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_408392  +
push ecx  +
push eax  +
call sub_40E5D2  +
add esp 8 +
cmp eax 5 +
jz loc_408400  +
cmp eax 6 +
jz loc_4083F9  +
cmp eax 7 +
jz loc_4083EB  +
cmp eax 16h +
jz loc_408345  +
cmp eax 17h +
jle loc_408362  +
cmp eax 1Bh +
jle loc_408345  +
cmp eax 1Dh +
jnz loc_408362  +
mov eax [ebp+arg_8] +
movzx eax al +
movzx ecx cl +
movzx edx ds:byte_461E78[eax] +
mov eax ecx +
and ecx [ebp+arg_4] +
shr eax 5 +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jnz loc_408345  +
xor ebx ebx +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_408439  +
sub edi esi +
cmp edi 4 +
jge loc_4083E2  +
push 0FFFFFFFEh  +
jmp loc_4081CA  +
sub edi esi +
cmp edi 3 +
jmp loc_4083F0  +
sub edi esi +
cmp edi 2 +
jmp loc_4083F0  +
or eax 0FFFFFFFFh +
jmp loc_408271  +
cmp ebx 13h +
jz loc_4083E2  +
push 20h  +
jmp loc_408429  +
cmp ebx 13h +
jz loc_4083E2  +
mov eax [ebp+arg_4] +
jmp loc_40842A  +
cmp ebx 13h +
jz loc_4083E2  +
push 1Eh  +
pop eax  +
mov ecx [ebp+arg_C] +
lea edx [esi+2] +
mov [ecx] edx +
jmp loc_408271  +
neg ebx  +
mov eax ebx +
jmp loc_408271  +
***
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_40885C  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_408B51  +
movzx eax byte ptr [esi] +
push ebx  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
add eax 0FFFFFFFEh +
cmp eax 22h +
ja loc_408B49  +
movzx eax ds:byte_408CC9[eax] +
jmp ds:off_408C75[eax*4]  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
push 0Ch  +
jmp loc_40889A  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
push 0Dh  +
call sub_40D7F9  +
add esp 14h +
jmp loc_408B50  +
inc esi  +
cmp esi edi +
jz loc_408990  +
movzx eax byte ptr [esi] +
mov al [eax+ebx+4Ch] +
cmp al 5 +
jb loc_4088D3  +
cmp al 7 +
jbe loc_4088FD  +
cmp al 0Fh +
jz loc_4088EA  +
cmp al 10h +
jz loc_4088D7  +
cmp al 16h +
jz loc_4088FD  +
cmp al 18h +
jz loc_4088FD  +
cmp al 1Dh +
jz loc_4088FD  +
xor ecx ecx +
jmp loc_40894B  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
call sub_40D542  +
jmp loc_408A3A  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
call sub_40DE4B  +
jmp loc_408A3A  +
mov eax [ebp+arg_C] +
lea ecx [esi-1] +
mov [eax] ecx +
push 1Dh  +
jmp loc_408C46  +
lea eax [esi+1] +
cmp eax edi +
jnz loc_40891F  +
mov eax [ebp+arg_C] +
push 0FFFFFFF1h  +
mov [eax] edi +
jmp loc_408C46  +
inc esi  +
cmp esi edi +
jz loc_408948  +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ebx+4Ch] +
sub eax 9 +
jz loc_40893E  +
dec eax  +
jz loc_408942  +
sub eax 0Bh +
jnz loc_408948  +
jmp loc_408942  +
cmp ecx edi +
jz loc_408948  +
inc esi  +
inc ecx  +
cmp esi edi +
jnz loc_408927  +
push 0Fh  +
pop ecx  +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax ecx +
jmp loc_408B50  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
call sub_40DCA4  +
jmp loc_408A3A  +
push 26h  +
jmp loc_408C65  +
push 19h  +
jmp loc_408C65  +
inc esi  +
cmp esi edi +
jnz loc_408984  +
push 0FFFFFFE6h  +
jmp loc_408C46  +
cmp byte ptr [esi] 5Dh +
jnz loc_4089AC  +
lea eax [esi+1] +
cmp eax edi +
jnz loc_408998  +
or eax 0FFFFFFFFh +
jmp loc_408B50  +
cmp byte ptr [eax] 3Eh +
jnz loc_4089AC  +
mov ecx [ebp+arg_C] +
lea edx [esi+2] +
mov [ecx] edx +
push 22h  +
jmp loc_408C46  +
push 1Ah  +
jmp loc_408A0D  +
push 17h  +
jmp loc_408C65  +
inc esi  +
cmp esi edi +
jnz loc_4089C3  +
push 0FFFFFFE8h  +
jmp loc_408C46  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ebx+4Ch] +
cmp eax 20h +
jg loc_4089F9  +
jz loc_408A0B  +
cmp eax 9 +
jl loc_4089E6  +
cmp eax 0Bh +
jle loc_408A0B  +
cmp eax 0Fh +
jz loc_4089F2  +
cmp eax 15h +
jz loc_408A0B  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_408B50  +
push 23h  +
jmp loc_408C65  +
cmp eax 21h +
jz loc_408A17  +
cmp eax 22h +
jz loc_408A10  +
add eax 0FFFFFFDDh +
cmp eax 1 +
ja loc_4089E6  +
push 18h  +
pop eax  +
jmp loc_4089E8  +
push 25h  +
jmp loc_408C65  +
push 24h  +
jmp loc_408C65  +
push 15h  +
jmp loc_408C65  +
push 11h  +
jmp loc_408C65  +
push [ebp+arg_C]  +
lea eax [esi+1] +
push edi  +
push eax  +
push ebx  +
call sub_40E0E9  +
add esp 10h +
jmp loc_408B50  +
mov eax edi +
sub eax esi +
cmp eax 2 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+158h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408A67  +
add esi 2 +
push 12h  +
jmp loc_408AF0  +
push esi  +
push ebx  +
call dword ptr [ebx+14Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408B49  +
add esi 2 +
jmp loc_408AEE  +
mov eax edi +
sub eax esi +
cmp eax 3 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+15Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408A9E  +
add esi 3 +
jmp loc_408A60  +
push esi  +
push ebx  +
call dword ptr [ebx+150h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408B49  +
add esi 3 +
jmp loc_408AEE  +
mov eax edi +
sub eax esi +
cmp eax 4 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+160h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408AD5  +
add esi 4 +
jmp loc_408A60  +
push esi  +
push ebx  +
call dword ptr [ebx+154h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408B49  +
add esi 4 +
jmp loc_408AEE  +
push 12h  +
inc esi  +
jmp loc_408AF0  +
inc esi  +
push 13h  +
mov eax [ebp+arg_8] +
pop edi  +
cmp esi eax +
jz loc_408C3B  +
mov ecx eax +
sub ecx esi +
push 1Fh  +
mov [ebp+arg_4] ecx +
pop edx  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ebx+4Ch] +
add eax 0FFFFFFFBh +
cmp eax edx +
ja loc_408C07  +
movzx eax ds:byte_408D19[eax] +
jmp ds:off_408CED[eax*4]  +
inc esi  +
dec ecx  +
jmp loc_408C2F  +
cmp ecx 2 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+14Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_408C23  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+150h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408B49  +
mov ecx [ebp+arg_4] +
add esi 3 +
sub ecx 3 +
jmp loc_408C2C  +
cmp ecx 4 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+154h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408C07  +
mov ecx [ebp+arg_4] +
add esi 4 +
sub ecx 4 +
jmp loc_408C2C  +
inc esi  +
dec ecx  +
mov [ebp+arg_4] ecx +
cmp edi 12h +
jz loc_408BB4  +
cmp edi 29h +
jnz loc_408C32  +
jmp loc_408BEB  +
cmp esi [ebp+arg_8] +
jz loc_408990  +
movzx eax byte ptr [esi] +
push 29h  +
mov al [eax+ebx+4Ch] +
pop edi  +
cmp al 5 +
jz loc_408C10  +
cmp al 6 +
jz loc_408BF0  +
cmp al 7 +
jz loc_408B7A  +
cmp al 16h +
jz loc_408B27  +
cmp al 17h +
jbe loc_408BEB  +
cmp al 1Bh +
jbe loc_408B27  +
cmp al 1Dh +
jz loc_408C07  +
push 13h  +
pop edi  +
jmp loc_408C32  +
cmp ecx 3 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+150h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_408B6C  +
xor edi edi +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_408C3D  +
cmp ecx 2 +
jl loc_408C44  +
push esi  +
push ebx  +
call dword ptr [ebx+14Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408C07  +
mov ecx [ebp+arg_4] +
add esi 2 +
sub ecx 2 +
push 1Fh  +
pop edx  +
mov [ebp+arg_4] ecx +
cmp esi [ebp+arg_8] +
jnz loc_408B06  +
neg edi  +
mov eax edi +
jmp loc_408B50  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_408B50  +
cmp edi 13h +
jz loc_408C07  +
push 20h  +
jmp loc_408C65  +
cmp edi 13h +
jz loc_408C07  +
push 1Fh  +
jmp loc_408C65  +
cmp edi 13h +
jz loc_408C07  +
push 1Eh  +
mov ecx [ebp+arg_C] +
lea edx [esi+1] +
pop eax  +
mov [ecx] edx +
jmp loc_408B50  +
***
mov edx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
cmp edx ebx +
jnz loc_408E49  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_408FCD  +
mov eax ebx +
sub eax edx +
test al 1 +
jz loc_408E64  +
and eax 0FFFFFFFEh +
jnz loc_408E5E  +
or eax 0FFFFFFFFh +
jmp loc_408FCD  +
lea ebx [eax+edx] +
mov [ebp+arg_8] ebx +
mov cl [edx+1] +
movzx eax byte ptr [edx] +
push esi  +
test cl cl +
jnz loc_408E79  +
mov esi [ebp+arg_0] +
movzx eax byte ptr [eax+esi+4Ch] +
jmp loc_408E86  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov esi [ebp+arg_0] +
add esp 8 +
push edi  +
push 2  +
pop edi  +
cmp eax 0Ah +
ja loc_408F17  +
jmp ds:off_408FD3[eax*4]  +
add edx edi +
cmp edx ebx +
jz loc_408ECD  +
cmp byte ptr [edx+1] 0 +
jnz loc_408F19  +
cmp byte ptr [edx] 5Dh +
jnz loc_408F19  +
add edx edi +
cmp edx ebx +
jz loc_408ECD  +
cmp byte ptr [edx+1] 0 +
jnz loc_408EC0  +
cmp byte ptr [edx] 3Eh +
jnz loc_408EC0  +
push 28h  +
jmp loc_408F01  +
sub edx edi +
jmp loc_408F19  +
push 2  +
pop edi  +
add edx edi +
cmp edx ebx +
jnz loc_408ED5  +
or eax 0FFFFFFFFh +
jmp loc_408FCB  +
mov cl [edx+1] +
movzx eax byte ptr [edx] +
test cl cl +
jnz loc_408EE6  +
movzx eax byte ptr [eax+esi+4Ch] +
jmp loc_408EF0  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Ah +
jnz loc_408EF7  +
add edx edi +
push 7  +
pop esi  +
jmp loc_408FC4  +
push 7  +
mov eax [ebp+arg_C] +
lea ecx [edx+2] +
pop esi  +
mov [eax] ecx +
jmp loc_408FC9  +
mov ecx ebx +
sub ecx edx +
cmp ecx edi +
jl loc_408F59  +
add edx edi +
push 6  +
pop esi  +
cmp edx ebx +
jz loc_408FC4  +
mov ecx ebx +
sub ecx edx +
mov al [edx+1] +
test al al +
mov [ebp+arg_4] eax +
movzx eax byte ptr [edx] +
jnz loc_408F67  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
mov ebx [ebp+arg_8] +
jmp loc_408F73  +
mov eax ebx +
sub eax edx +
cmp eax 3 +
jl loc_408F59  +
add edx 3 +
jmp loc_408F19  +
mov eax ebx +
sub eax edx +
cmp eax 4 +
jge loc_408F5E  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_408FCB  +
add edx 4 +
jmp loc_408F19  +
xor esi esi +
jmp loc_408FC4  +
push eax  +
push [ebp+arg_4]  +
call sub_40E5D2  +
add esp 8 +
cmp eax esi +
jg loc_408FA3  +
jz loc_408F96  +
test eax eax +
js loc_408F90  +
cmp eax 1 +
jle loc_408FC4  +
cmp eax 4 +
jz loc_408FC4  +
cmp eax 5 +
jnz loc_408F90  +
cmp ecx edi +
jl loc_408FC4  +
add edx edi +
sub ecx edi +
jmp loc_408FBC  +
cmp ecx 3 +
jl loc_408FC4  +
add edx 3 +
sub ecx 3 +
jmp loc_408FBC  +
cmp eax 7 +
jz loc_408FB1  +
jle loc_408F90  +
cmp eax 0Ah +
jle loc_408FC4  +
jmp loc_408F90  +
cmp ecx 4 +
jl loc_408FC4  +
add edx 4 +
sub ecx 4 +
cmp edx ebx +
jnz loc_408F28  +
mov ecx [ebp+arg_C] +
mov [ecx] edx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
mov eax esi +
push edi  +
sub eax edx +
xor edi edi +
test al 1 +
jz loc_40901C  +
mov esi eax +
and esi 0FFFFFFFEh +
add esi edx +
cmp edx esi +
jz loc_4090F6  +
mov ecx esi +
sub ecx edx +
mov bl [edx+1] +
movzx eax byte ptr [edx] +
test bl bl +
jnz loc_40903C  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_409046  +
push eax  +
push ebx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 8 +
ja loc_4090E8  +
jmp ds:off_409113[eax*4]  +
push 2  +
pop eax  +
cmp ecx eax +
jl loc_4090FE  +
add edx eax +
sub ecx eax +
jmp loc_4090EE  +
cmp ecx 3 +
jl loc_4090FE  +
add edx 3 +
sub ecx 3 +
jmp loc_4090EE  +
cmp ecx 4 +
jl loc_4090FE  +
add edx 4 +
sub ecx 4 +
jmp loc_4090EE  +
push 2  +
pop eax  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4090F6  +
cmp byte ptr [edx+1] 0 +
jnz loc_4090EE  +
cmp byte ptr [edx] 21h +
jnz loc_4090EE  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4090F6  +
cmp byte ptr [edx+1] 0 +
jnz loc_4090EE  +
cmp byte ptr [edx] 5Bh +
jnz loc_4090EE  +
inc edi  +
jmp loc_409061  +
push 2  +
pop eax  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4090F6  +
cmp byte ptr [edx+1] 0 +
jnz loc_4090EE  +
cmp byte ptr [edx] 5Dh +
jnz loc_4090EE  +
add edx eax +
sub ecx eax +
cmp edx esi +
jz loc_4090F6  +
cmp byte ptr [edx+1] 0 +
jnz loc_4090EE  +
cmp byte ptr [edx] 3Eh +
jnz loc_4090EE  +
add edx eax +
sub ecx eax +
test edi edi +
jz loc_409103  +
dec edi  +
jmp loc_4090EE  +
add edx 2 +
sub ecx 2 +
cmp edx esi +
jnz loc_409028  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_4090F9  +
push 2Ah  +
pop eax  +
jmp loc_40910A  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] edx +
jmp loc_4090F9  +
***
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
add ecx 2 +
sub edx 2 +
push esi  +
push edi  +
cmp ecx edx +
jz loc_4091DB  +
mov edi [ebp+arg_0] +
mov al [ecx] +
mov bl [ecx+1] +
mov [ebp+arg_4] eax +
test bl bl +
jnz loc_40916A  +
movzx eax al +
movzx eax byte ptr [eax+edi+4Ch] +
jmp loc_409174  +
push eax  +
push ebx  +
call sub_40E5D2  +
add esp 8 +
sub eax 9 +
cmp eax 1Ah +
ja loc_4091B7  +
movzx eax ds:byte_4091F3[eax] +
jmp ds:off_4091E3[eax*4]  +
test bl bl +
jnz loc_4091D0  +
mov eax [ebp+arg_4] +
cmp al 9 +
jnz loc_4091D0  +
mov eax [ebp+arg_C] +
mov [eax] ecx +
xor eax eax +
jmp loc_4091DE  +
mov eax [ebp+arg_4] +
test bl bl +
jnz loc_4091AA  +
movsx esi al +
jmp loc_4091AD  +
or esi 0FFFFFFFFh +
test esi 0FFFFFF80h +
jz loc_4091D0  +
jmp loc_4091BA  +
mov eax [ebp+arg_4] +
test bl bl +
jnz loc_4091C3  +
movsx eax al +
jmp loc_4091C6  +
or eax 0FFFFFFFFh +
cmp eax 24h +
jz loc_4091D0  +
cmp eax 40h +
jnz loc_409195  +
add ecx 2 +
cmp ecx edx +
jnz loc_409154  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 10h +
push ecx  +
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp edx edi +
jnz loc_409451  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_4095A8  +
mov eax edi +
sub eax edx +
test al 1 +
jz loc_409469  +
and eax 0FFFFFFFEh +
jnz loc_409466  +
or eax 0FFFFFFFFh +
jmp loc_4095A8  +
lea edi [eax+edx] +
mov cl [edx] +
movzx eax byte ptr [edx+1] +
push ebx  +
test cl cl +
jnz loc_40947E  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_40948B  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov ebx [ebp+arg_0] +
add esp 8 +
push esi  +
push 2  +
pop esi  +
cmp eax 0Ah +
ja loc_409549  +
jmp ds:off_40965E[eax*4]  +
push [ebp+arg_C]  +
lea eax [edx+2] +
push edi  +
push eax  +
push ebx  +
call sub_40ABDF  +
jmp loc_4094BD  +
push [ebp+arg_C]  +
lea eax [edx+2] +
push edi  +
push eax  +
push ebx  +
call sub_40B4A3  +
add esp 10h +
jmp loc_4095A6  +
push 2  +
pop esi  +
add edx esi +
cmp edx edi +
jnz loc_4094D5  +
push 0FFFFFFFDh  +
jmp loc_409595  +
mov cl [edx] +
movzx eax byte ptr [edx+1] +
test cl cl +
jnz loc_4094E6  +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_4094F0  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Ah +
jnz loc_4094F7  +
add edx esi +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_409506  +
mov eax [ebp+arg_C] +
lea ecx [edx+2] +
mov [eax] ecx +
push 7  +
jmp loc_409595  +
add edx esi +
cmp edx edi +
jz loc_409524  +
cmp byte ptr [edx] 0 +
jnz loc_40954B  +
cmp byte ptr [edx+1] 5Dh +
jnz loc_40954B  +
add edx esi +
cmp edx edi +
jnz loc_409528  +
push 0FFFFFFFBh  +
jmp loc_409595  +
cmp byte ptr [edx] 0 +
jnz loc_40953D  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_40953D  +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_409611  +
sub edx esi +
jmp loc_40954B  +
mov ecx edi +
sub ecx edx +
cmp ecx esi +
jl loc_409593  +
add edx esi +
push 6  +
pop ebx  +
cmp edx edi +
jz loc_40959F  +
lea eax [edx+4] +
mov [ebp+arg_8] eax +
lea eax [edx+2] +
mov ecx edi +
mov [ebp+arg_4] eax +
sub ecx edx +
mov al [edx] +
test al al +
mov [ebp+var_4] eax +
movzx eax byte ptr [edx+1] +
jnz loc_4095AB  +
mov esi [ebp+arg_0] +
push 2  +
movzx eax byte ptr [eax+esi+4Ch] +
pop esi  +
jmp loc_4095B7  +
mov eax edi +
sub eax edx +
cmp eax 3 +
jl loc_409593  +
add edx 3 +
jmp loc_40954B  +
mov eax edi +
sub eax edx +
cmp eax 4 +
jge loc_409598  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_4095A6  +
add edx 4 +
jmp loc_40954B  +
xor ebx ebx +
mov ecx [ebp+arg_C] +
mov eax ebx +
mov [ecx] edx +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
push eax  +
push [ebp+var_4]  +
call sub_40E5D2  +
add esp 8 +
cmp eax ebx +
jg loc_409625  +
jz loc_409621  +
test eax eax +
js loc_409635  +
cmp eax 3 +
jle loc_40959F  +
cmp eax 4 +
jz loc_4095E5  +
cmp eax 5 +
jnz loc_409635  +
cmp ecx esi +
jl loc_40959F  +
mov eax [ebp+arg_8] +
add [ebp+arg_4] esi +
add edx esi +
add eax esi +
mov [ebp+arg_8] eax +
sub ecx esi +
jmp loc_409651  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_40959F  +
cmp byte ptr [eax] 0 +
jnz loc_409615  +
cmp byte ptr [edx+3] 5Dh +
jnz loc_409615  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_40959F  +
cmp byte ptr [eax] 0 +
jnz loc_4095D7  +
cmp byte ptr [edx+5] 3Eh +
jnz loc_4095D7  +
mov eax [ebp+arg_C] +
lea ecx [edx+4] +
mov [eax] ecx +
xor eax eax +
jmp loc_4095A6  +
add edx esi +
add eax esi +
mov [ebp+arg_4] eax +
add [ebp+arg_8] esi +
jmp loc_4095E1  +
push 3  +
jmp loc_40963E  +
cmp eax 7 +
jz loc_40963C  +
jle loc_409635  +
cmp eax 0Ah +
jle loc_40959F  +
add edx esi +
add [ebp+arg_4] esi +
jmp loc_40961C  +
push 4  +
pop eax  +
cmp ecx eax +
jl loc_40959F  +
add [ebp+arg_4] eax +
add [ebp+arg_8] eax +
add edx eax +
sub ecx eax +
cmp edx edi +
jnz loc_409562  +
jmp loc_40959F  +
***
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_4099D5  +
push 0FFFFFFFCh  +
pop eax  +
jmp loc_409B58  +
movzx eax byte ptr [esi] +
push ebx  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
cmp eax 0Ah +
ja loc_409AA6  +
jmp ds:off_409B5E[eax*4]  +
inc esi  +
cmp esi edi +
jz loc_409A18  +
cmp byte ptr [esi] 5Dh +
jnz loc_409AA7  +
inc esi  +
cmp esi edi +
jz loc_409A18  +
cmp byte ptr [esi] 3Eh +
jz loc_409A0F  +
dec esi  +
jmp loc_409AA7  +
push 28h  +
jmp loc_409A35  +
inc esi  +
cmp esi edi +
jnz loc_409A20  +
or eax 0FFFFFFFFh +
jmp loc_409B57  +
movzx eax byte ptr [esi] +
cmp byte ptr [eax+ebx+4Ch] 0Ah +
jnz loc_409A2B  +
inc esi  +
push 7  +
pop edi  +
jmp loc_409B50  +
push 7  +
mov ecx [ebp+arg_C] +
lea edx [esi+1] +
pop eax  +
mov [ecx] edx +
jmp loc_409B57  +
mov eax edi +
sub eax esi +
cmp eax 2 +
jl loc_409A8B  +
push esi  +
push ebx  +
call dword ptr [ebx+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_409A61  +
xor edi edi +
jmp loc_409B50  +
add esi 2 +
jmp loc_409AA7  +
mov eax edi +
sub eax esi +
cmp eax 3 +
jl loc_409A8B  +
push esi  +
push ebx  +
call dword ptr [ebx+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409A5A  +
add esi 3 +
jmp loc_409AA7  +
mov eax edi +
sub eax esi +
cmp eax 4 +
jge loc_409A93  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_409B57  +
push esi  +
push ebx  +
call dword ptr [ebx+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409A5A  +
add esi 4 +
jmp loc_409AA7  +
inc esi  +
push 6  +
pop edi  +
cmp esi [ebp+arg_8] +
jz loc_409B50  +
mov ecx [ebp+arg_8] +
sub ecx esi +
mov [ebp+arg_4] ecx +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ebx+4Ch] +
cmp eax edi +
jg loc_409B18  +
jz loc_409AFA  +
test eax eax +
js loc_409B24  +
cmp eax 1 +
jle loc_409B50  +
cmp eax 4 +
jz loc_409B50  +
cmp eax 5 +
jnz loc_409B24  +
cmp ecx 2 +
jl loc_409B50  +
push esi  +
push ebx  +
call dword ptr [ebx+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409B50  +
mov ecx [ebp+arg_4] +
add esi 2 +
sub ecx 2 +
jmp loc_409B44  +
cmp ecx 3 +
jl loc_409B50  +
push esi  +
push ebx  +
call dword ptr [ebx+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409B50  +
mov ecx [ebp+arg_4] +
add esi 3 +
sub ecx 3 +
jmp loc_409B44  +
cmp eax 7 +
jz loc_409B28  +
jle loc_409B24  +
cmp eax 0Ah +
jle loc_409B50  +
inc esi  +
dec ecx  +
jmp loc_409B44  +
cmp ecx 4 +
jl loc_409B50  +
push esi  +
push ebx  +
call dword ptr [ebx+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409B50  +
mov ecx [ebp+arg_4] +
add esi 4 +
sub ecx 4 +
mov [ebp+arg_4] ecx +
cmp esi [ebp+arg_8] +
jnz loc_409ABB  +
mov ecx [ebp+arg_C] +
mov eax edi +
mov [ecx] esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
push edi  +
mov [ebp+var_4] edx +
cmp esi ebx +
jz loc_409C4A  +
mov ecx [ebp+arg_0] +
mov edi ebx +
sub edi esi +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ecx+4Ch] +
cmp eax 8 +
ja loc_409C40  +
jmp ds:off_409C92[eax*4]  +
cmp edi 2 +
jl loc_409C7D  +
push esi  +
push ecx  +
call dword ptr [ecx+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409C74  +
add esi 2 +
sub edi 2 +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_4] +
jmp loc_409C42  +
cmp edi 3 +
jl loc_409C7D  +
push esi  +
push ecx  +
call dword ptr [ecx+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409C74  +
add esi 3 +
sub edi 3 +
jmp loc_409BE4  +
cmp edi 4 +
jl loc_409C7D  +
push esi  +
push ecx  +
call dword ptr [ecx+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_409C74  +
add esi 4 +
sub edi 4 +
jmp loc_409BE4  +
inc esi  +
dec edi  +
cmp esi ebx +
jz loc_409C4A  +
cmp byte ptr [esi] 21h +
jnz loc_409C42  +
inc esi  +
dec edi  +
cmp esi ebx +
jz loc_409C4A  +
cmp byte ptr [esi] 5Bh +
jnz loc_409C42  +
inc edx  +
mov [ebp+var_4] edx +
inc esi  +
dec edi  +
cmp esi ebx +
jnz loc_409BAB  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
inc esi  +
dec edi  +
cmp esi ebx +
jz loc_409C4A  +
cmp byte ptr [esi] 5Dh +
jnz loc_409C42  +
inc esi  +
dec edi  +
cmp esi ebx +
jz loc_409C4A  +
cmp byte ptr [esi] 3Eh +
jnz loc_409C42  +
inc esi  +
dec edi  +
test edx edx +
jz loc_409C82  +
dec edx  +
mov [ebp+var_4] edx +
jmp loc_409C42  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
jmp loc_409C4D  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_409C4D  +
push 2Ah  +
pop edx  +
jmp loc_409C89  +
xor edx edx +
mov ecx [ebp+arg_C] +
mov eax edx +
mov [ecx] esi +
jmp loc_409C4D  +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
inc ecx  +
dec edx  +
push ebx  +
push esi  +
cmp ecx edx +
jz loc_409DD5  +
mov esi [ebp+arg_0] +
mov bl [ecx] +
movzx eax bl +
movzx eax byte ptr [eax+esi+4Ch] +
add eax 0FFFFFFF7h +
cmp eax 1Ah +
ja loc_409DC6  +
movzx eax ds:byte_409DEC[eax] +
jmp ds:off_409DDC[eax*4]  +
cmp bl 9 +
jnz loc_409DD0  +
mov eax [ebp+arg_C] +
mov [eax] ecx +
xor eax eax +
jmp loc_409DD8  +
test bl bl +
jns loc_409DD0  +
mov al bl +
cmp al 24h +
jz loc_409DD0  +
cmp al 40h +
jnz loc_409DB9  +
inc ecx  +
cmp ecx edx +
jnz loc_409D94  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push [ebp+arg_8]  +
push [ebp+arg_8]  +
sub esp 10h +
push [ebp+arg_C]  +
push [ebp+arg_24]  +
push [ebp+arg_24]  +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_8] +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
jmp loc_40A5E3  +
mov dl [esi] +
mov cl [esi+1] +
test dl dl +
jnz loc_40A2C3  +
mov edi [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edi+4Ch] +
mov edi [ebp+arg_8] +
jmp loc_40A2CD  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 15h +
jg loc_40A534  +
jz loc_40A325  +
cmp eax 5 +
jz loc_40A601  +
cmp eax 6 +
jz loc_40A5FA  +
cmp eax 7 +
jz loc_40A5F3  +
cmp eax 8 +
jle loc_40A362  +
cmp eax 0Ah +
jle loc_40A325  +
cmp eax 0Eh +
jnz loc_40A362  +
and [ebp+var_4] 0 +
add esi 2 +
cmp esi edi +
jz loc_40A5EB  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_40A36E  +
mov edx [ebp+arg_0] +
movzx ebx byte ptr [eax+edx+4Ch] +
jmp loc_40A37D  +
add esi 2 +
cmp esi edi +
jz loc_40A5EB  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_40A344  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [eax+ecx+4Ch] +
jmp loc_40A34E  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Eh +
jz loc_40A302  +
cmp eax 9 +
jl loc_40A362  +
cmp eax 0Ah +
jle loc_40A325  +
cmp eax 15h +
jz loc_40A325  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
jmp loc_40A5EE  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov edx [ebp+arg_0] +
add esp 8 +
mov ebx eax +
cmp ebx 0Ch +
jz loc_40A3A0  +
cmp ebx 0Dh +
jz loc_40A3A0  +
cmp ebx 9 +
jl loc_40A362  +
cmp ebx 0Ah +
jle loc_40A306  +
cmp ebx 15h +
jz loc_40A306  +
jmp loc_40A362  +
add esi 2 +
mov [ebp+arg_4] esi +
cmp esi edi +
jz loc_40A5EB  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_40A3BF  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40A3C9  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax ebx +
jz loc_40A433  +
cmp eax 8 +
ja loc_40A3A0  +
jmp ds:off_40A64E[eax*4]  +
mov eax edi +
sub eax esi +
cmp eax 2 +
jl loc_40A60C  +
jmp loc_40A3A0  +
mov eax edi +
sub eax esi +
cmp eax 3 +
jl loc_40A60C  +
add esi 3 +
jmp loc_40A3A3  +
mov eax edi +
sub eax esi +
cmp eax 4 +
jl loc_40A60C  +
add esi 4 +
jmp loc_40A3A3  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
lea eax [esi+2] +
push eax  +
push edx  +
call sub_40B4A3  +
mov edx eax +
add esp 10h +
test edx edx +
jle loc_40A611  +
mov esi [ebp+arg_4] +
mov edx [ebp+arg_0] +
jmp loc_40A3A6  +
push 2  +
pop ebx  +
add esi ebx +
cmp esi edi +
jz loc_40A5EB  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_40A451  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40A45B  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 9 +
jl loc_40A362  +
cmp eax 0Ah +
jle loc_40A480  +
cmp eax 0Bh +
jz loc_40A4E2  +
cmp eax 11h +
jz loc_40A625  +
cmp eax 15h +
jnz loc_40A362  +
add esi ebx +
cmp esi edi +
jz loc_40A5EB  +
mov cl [esi] +
movzx eax byte ptr [esi+1] +
test cl cl +
jnz loc_40A49B  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40A4A5  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 11h +
jg loc_40A4EA  +
jz loc_40A625  +
cmp eax 5 +
jz loc_40A61F  +
cmp eax 6 +
jz loc_40A5FA  +
cmp eax 7 +
jz loc_40A5F3  +
cmp eax 8 +
jle loc_40A362  +
cmp eax 0Ah +
jle loc_40A480  +
cmp eax 0Bh +
jnz loc_40A362  +
xor eax eax +
inc eax  +
jmp loc_40A641  +
sub eax 15h +
jz loc_40A480  +
dec eax  +
jz loc_40A52A  +
sub eax ebx +
jz loc_40A52A  +
sub eax 5 +
jnz loc_40A362  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [esi+1] +
movzx edx ds:byte_461D78[eax] +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40A362  +
add esi ebx +
mov ebx [ebp+var_4] +
jmp loc_40A5E3  +
cmp eax 16h +
jz loc_40A5E0  +
cmp eax 17h +
jz loc_40A566  +
jle loc_40A362  +
cmp eax 1Bh +
jle loc_40A5E0  +
cmp eax 1Dh +
jnz loc_40A362  +
movzx eax dl +
movzx edx ds:byte_461E78[eax] +
jmp loc_40A5C0  +
test ebx ebx +
jnz loc_40A362  +
add esi 2 +
inc ebx  +
cmp esi edi +
jz loc_40A5EB  +
mov dl [esi] +
mov cl [esi+1] +
test dl dl +
jnz loc_40A58F  +
mov edi [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edi+4Ch] +
mov edi [ebp+arg_8] +
jmp loc_40A599  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
jz loc_40A601  +
dec eax  +
jz loc_40A5FA  +
dec eax  +
jz loc_40A5F3  +
sub eax 0Fh +
jz loc_40A5E0  +
dec eax  +
dec eax  +
jz loc_40A5E0  +
sub eax 5 +
jnz loc_40A362  +
movzx eax dl +
movzx edx ds:byte_461D78[eax] +
movzx ecx cl +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40A362  +
add esi 2 +
cmp esi edi +
jnz loc_40A2AA  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
sub edi esi +
cmp edi 4 +
jmp loc_40A606  +
sub edi esi +
cmp edi 3 +
jmp loc_40A606  +
sub edi esi +
cmp edi 2 +
jge loc_40A362  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_40A5EE  +
jnz loc_40A61B  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov eax edx +
jmp loc_40A5EE  +
sub edi esi +
cmp edi ebx +
jmp loc_40A606  +
add esi ebx +
cmp esi edi +
jz loc_40A5EB  +
cmp byte ptr [esi] 0 +
jnz loc_40A362  +
cmp byte ptr [esi+1] 3Eh +
jnz loc_40A362  +
push 3  +
pop eax  +
mov ecx [ebp+arg_C] +
lea edx [esi+2] +
mov [ecx] edx +
jmp loc_40A5EE  +
***
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push esi  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
push ecx  +
push esi  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_40B372  +
or eax 0FFFFFFFFh +
jmp loc_40B463  +
mov dl [esi] +
mov cl [esi+1] +
push ebx  +
mov ebx [ebp+arg_0] +
test dl dl +
jnz loc_40B389  +
movzx eax cl +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_40B393  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
jz loc_40B44F  +
dec eax  +
jz loc_40B42C  +
dec eax  +
jz loc_40B448  +
sub eax 0Fh +
jz loc_40B421  +
dec eax  +
dec eax  +
jz loc_40B421  +
sub eax 5 +
jnz loc_40B45B  +
movzx eax dl +
movzx edx ds:byte_461D78[eax] +
jmp loc_40B405  +
mov dl [esi] +
mov cl [esi+1] +
test dl dl +
jnz loc_40B3DB  +
movzx eax cl +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_40B3E5  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
cmp eax 1Fh +
ja loc_40B43A  +
movzx eax ds:byte_40B483[eax] +
jmp ds:off_40B467[eax*4]  +
movzx eax dl +
movzx edx ds:byte_461E78[eax] +
movzx ecx cl +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40B45B  +
add esi 2 +
cmp esi edi +
jnz loc_40B3C8  +
push 0FFFFFFECh  +
jmp loc_40B458  +
sub edi esi +
cmp edi 3 +
jmp loc_40B454  +
sub edi esi +
cmp edi 4 +
jl loc_40B456  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_40B462  +
push 14h  +
pop eax  +
jmp loc_40B43C  +
sub edi esi +
cmp edi 4 +
jmp loc_40B454  +
sub edi esi +
cmp edi 2 +
jge loc_40B45B  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_40B462  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov ecx [ebp+arg_0] +
sub esp 0Ch +
sub esp 8Ch +
sub esp 8Ch +
cmp [ebp+arg_0] 0 +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_C] +
sub eax ecx +
xor edx edx +
mov dword ptr [edi] 0Bh +
cmp eax 6 +
jz loc_40BC51  +
xor eax eax +
inc eax  +
jmp loc_40BCBC  +
or eax 0FFFFFFFFh +
push esi  +
cmp [ecx+1] dl +
jnz loc_40BC5F  +
movsx esi byte ptr [ecx] +
jmp loc_40BC61  +
mov esi eax +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp esi 58h +
jz loc_40BC74  +
cmp esi 78h +
jz loc_40BC76  +
xor eax eax +
inc eax  +
jmp loc_40BCBA  +
mov edx ebx +
cmp byte ptr [ecx+3] 0 +
jnz loc_40BC82  +
movsx esi byte ptr [ecx+2] +
jmp loc_40BC84  +
mov esi eax +
cmp esi 4Dh +
jz loc_40BC90  +
cmp esi 6Dh +
jz loc_40BC92  +
jmp loc_40BCB8  +
mov edx ebx +
cmp byte ptr [ecx+5] 0 +
jnz loc_40BC9C  +
movsx eax byte ptr [ecx+4] +
cmp eax 4Ch +
jz loc_40BCA8  +
cmp eax 6Ch +
jz loc_40BCAA  +
jmp loc_40BCB8  +
mov edx ebx +
test edx edx +
jz loc_40BCB2  +
xor eax eax +
jmp loc_40BCBA  +
mov dword ptr [edi] 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
jmp loc_40C00D  +
mov dl [esi+1] +
mov cl [esi] +
test dl dl +
jnz loc_40BCED  +
mov edi [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edi+4Ch] +
mov edi [ebp+arg_8] +
jmp loc_40BCF7  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 15h +
jg loc_40BF5E  +
jz loc_40BD4F  +
cmp eax 5 +
jz loc_40C02B  +
cmp eax 6 +
jz loc_40C024  +
cmp eax 7 +
jz loc_40C01D  +
cmp eax 8 +
jle loc_40BD8C  +
cmp eax 0Ah +
jle loc_40BD4F  +
cmp eax 0Eh +
jnz loc_40BD8C  +
and [ebp+var_4] 0 +
add esi 2 +
cmp esi edi +
jz loc_40C015  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40BD98  +
mov edx [ebp+arg_0] +
movzx ebx byte ptr [eax+edx+4Ch] +
jmp loc_40BDA7  +
add esi 2 +
cmp esi edi +
jz loc_40C015  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40BD6E  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [eax+ecx+4Ch] +
jmp loc_40BD78  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 0Eh +
jz loc_40BD2C  +
cmp eax 9 +
jl loc_40BD8C  +
cmp eax 0Ah +
jle loc_40BD4F  +
cmp eax 15h +
jz loc_40BD4F  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
jmp loc_40C018  +
push eax  +
push ecx  +
call sub_40E5D2  +
mov edx [ebp+arg_0] +
add esp 8 +
mov ebx eax +
cmp ebx 0Ch +
jz loc_40BDCA  +
cmp ebx 0Dh +
jz loc_40BDCA  +
cmp ebx 9 +
jl loc_40BD8C  +
cmp ebx 0Ah +
jle loc_40BD30  +
cmp ebx 15h +
jz loc_40BD30  +
jmp loc_40BD8C  +
add esi 2 +
mov [ebp+arg_4] esi +
cmp esi edi +
jz loc_40C015  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40BDE9  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40BDF3  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax ebx +
jz loc_40BE5D  +
cmp eax 8 +
ja loc_40BDCA  +
jmp ds:off_40C078[eax*4]  +
mov eax edi +
sub eax esi +
cmp eax 2 +
jl loc_40C036  +
jmp loc_40BDCA  +
mov eax edi +
sub eax esi +
cmp eax 3 +
jl loc_40C036  +
add esi 3 +
jmp loc_40BDCD  +
mov eax edi +
sub eax esi +
cmp eax 4 +
jl loc_40C036  +
add esi 4 +
jmp loc_40BDCD  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
lea eax [esi+2] +
push eax  +
push edx  +
call sub_40CECE  +
mov edx eax +
add esp 10h +
test edx edx +
jle loc_40C03B  +
mov esi [ebp+arg_4] +
mov edx [ebp+arg_0] +
jmp loc_40BDD0  +
push 2  +
pop ebx  +
add esi ebx +
cmp esi edi +
jz loc_40C015  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40BE7B  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40BE85  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 9 +
jl loc_40BD8C  +
cmp eax 0Ah +
jle loc_40BEAA  +
cmp eax 0Bh +
jz loc_40BF0C  +
cmp eax 11h +
jz loc_40C04F  +
cmp eax 15h +
jnz loc_40BD8C  +
add esi ebx +
cmp esi edi +
jz loc_40C015  +
mov cl [esi+1] +
movzx eax byte ptr [esi] +
test cl cl +
jnz loc_40BEC5  +
movzx eax byte ptr [eax+edx+4Ch] +
jmp loc_40BECF  +
push eax  +
push ecx  +
call sub_40E5D2  +
add esp 8 +
cmp eax 11h +
jg loc_40BF14  +
jz loc_40C04F  +
cmp eax 5 +
jz loc_40C049  +
cmp eax 6 +
jz loc_40C024  +
cmp eax 7 +
jz loc_40C01D  +
cmp eax 8 +
jle loc_40BD8C  +
cmp eax 0Ah +
jle loc_40BEAA  +
cmp eax 0Bh +
jnz loc_40BD8C  +
xor eax eax +
inc eax  +
jmp loc_40C06B  +
sub eax 15h +
jz loc_40BEAA  +
dec eax  +
jz loc_40BF54  +
sub eax ebx +
jz loc_40BF54  +
sub eax 5 +
jnz loc_40BD8C  +
movzx eax byte ptr [esi+1] +
movzx ecx byte ptr [esi] +
movzx edx ds:byte_461D78[eax] +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40BD8C  +
add esi ebx +
mov ebx [ebp+var_4] +
jmp loc_40C00D  +
cmp eax 16h +
jz loc_40C00A  +
cmp eax 17h +
jz loc_40BF90  +
jle loc_40BD8C  +
cmp eax 1Bh +
jle loc_40C00A  +
cmp eax 1Dh +
jnz loc_40BD8C  +
movzx eax dl +
movzx edx ds:byte_461E78[eax] +
jmp loc_40BFEA  +
test ebx ebx +
jnz loc_40BD8C  +
add esi 2 +
inc ebx  +
cmp esi edi +
jz loc_40C015  +
mov dl [esi+1] +
mov cl [esi] +
test dl dl +
jnz loc_40BFB9  +
mov edi [ebp+arg_0] +
movzx eax cl +
movzx eax byte ptr [eax+edi+4Ch] +
mov edi [ebp+arg_8] +
jmp loc_40BFC3  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
jz loc_40C02B  +
dec eax  +
jz loc_40C024  +
dec eax  +
jz loc_40C01D  +
sub eax 0Fh +
jz loc_40C00A  +
dec eax  +
dec eax  +
jz loc_40C00A  +
sub eax 5 +
jnz loc_40BD8C  +
movzx eax dl +
movzx edx ds:byte_461D78[eax] +
movzx ecx cl +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40BD8C  +
add esi 2 +
cmp esi edi +
jnz loc_40BCD4  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
sub edi esi +
cmp edi 4 +
jmp loc_40C030  +
sub edi esi +
cmp edi 3 +
jmp loc_40C030  +
sub edi esi +
cmp edi 2 +
jge loc_40BD8C  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_40C018  +
jnz loc_40C045  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov eax edx +
jmp loc_40C018  +
sub edi esi +
cmp edi ebx +
jmp loc_40C030  +
add esi ebx +
cmp esi edi +
jz loc_40C015  +
cmp byte ptr [esi+1] 0 +
jnz loc_40BD8C  +
cmp byte ptr [esi] 3Eh +
jnz loc_40BD8C  +
push 3  +
pop eax  +
mov ecx [ebp+arg_C] +
lea edx [esi+2] +
mov [ecx] edx +
jmp loc_40C018  +
***
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push esi  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
push ecx  +
push esi  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_40CD9D  +
or eax 0FFFFFFFFh +
jmp loc_40CE8E  +
mov dl [esi+1] +
mov cl [esi] +
push ebx  +
mov ebx [ebp+arg_0] +
test dl dl +
jnz loc_40CDB4  +
movzx eax cl +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_40CDBE  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
jz loc_40CE7A  +
dec eax  +
jz loc_40CE57  +
dec eax  +
jz loc_40CE73  +
sub eax 0Fh +
jz loc_40CE4C  +
dec eax  +
dec eax  +
jz loc_40CE4C  +
sub eax 5 +
jnz loc_40CE86  +
movzx eax dl +
movzx edx ds:byte_461D78[eax] +
jmp loc_40CE30  +
mov dl [esi+1] +
mov cl [esi] +
test dl dl +
jnz loc_40CE06  +
movzx eax cl +
movzx eax byte ptr [eax+ebx+4Ch] +
jmp loc_40CE10  +
push ecx  +
push edx  +
call sub_40E5D2  +
add esp 8 +
sub eax 5 +
cmp eax 1Fh +
ja loc_40CE65  +
movzx eax ds:byte_40CEAE[eax] +
jmp ds:off_40CE92[eax*4]  +
movzx eax dl +
movzx edx ds:byte_461E78[eax] +
movzx ecx cl +
mov eax ecx +
shr eax 5 +
and ecx 1Fh +
lea edx [eax+edx*8] +
xor eax eax +
inc eax  +
shl eax cl +
test ds:dword_461878[edx*4] eax +
jz loc_40CE86  +
add esi 2 +
cmp esi edi +
jnz loc_40CDF3  +
push 0FFFFFFECh  +
jmp loc_40CE83  +
sub edi esi +
cmp edi 3 +
jmp loc_40CE7F  +
sub edi esi +
cmp edi 4 +
jl loc_40CE81  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_40CE8D  +
push 14h  +
pop eax  +
jmp loc_40CE67  +
sub edi esi +
cmp edi 4 +
jmp loc_40CE7F  +
sub edi esi +
cmp edi 2 +
jge loc_40CE86  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_40CE8D  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov eax [ebp+arg_8] +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
xor edx edx +
push edi  +
mov [ebp+var_4] edx +
cmp esi ebx +
jz loc_40D355  +
mov edi [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+edi+4Ch] +
cmp eax 15h +
jg loc_40D33B  +
jz loc_40D18A  +
cmp eax 5 +
jz loc_40D15D  +
cmp eax 6 +
jz loc_40D139  +
cmp eax 7 +
jz loc_40D115  +
cmp eax 8 +
jle loc_40D38A  +
cmp eax 0Ah +
jle loc_40D18A  +
cmp eax 0Eh +
jnz loc_40D38A  +
and [ebp+var_4] 0 +
inc esi  +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [eax+edi+4Ch] +
mov [ebp+arg_8] ecx +
cmp ecx 0Ch +
jz loc_40D1BC  +
cmp ecx 0Dh +
jz loc_40D1BC  +
cmp ecx 9 +
jl loc_40D38A  +
cmp ecx 0Ah +
jle loc_40D0D7  +
cmp ecx 15h +
jz loc_40D0D7  +
jmp loc_40D38A  +
mov eax ebx +
sub eax esi +
cmp eax 4 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+154h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40D38A  +
add esi 4 +
jmp loc_40D17F  +
mov eax ebx +
sub eax esi +
cmp eax 3 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+150h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40D38A  +
add esi 3 +
jmp loc_40D17F  +
mov eax ebx +
sub eax esi +
cmp eax 2 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+14Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40D38A  +
add esi 2 +
mov edx [ebp+var_4] +
xor ecx ecx +
inc ecx  +
jmp loc_40D34D  +
inc esi  +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+edi+4Ch] +
cmp eax 0Eh +
jz loc_40D0D3  +
cmp eax 9 +
jl loc_40D38A  +
cmp eax 0Ah +
jle loc_40D18A  +
cmp eax 15h +
jz loc_40D18A  +
jmp loc_40D38A  +
inc esi  +
mov [ebp+arg_4] esi +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+edi+4Ch] +
cmp eax ecx +
jz loc_40D277  +
cmp eax 8 +
ja loc_40D1BC  +
jmp ds:off_40D3D6[eax*4]  +
mov eax ebx +
sub eax esi +
cmp eax 2 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+164h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40D38A  +
add esi 2 +
mov [ebp+arg_4] esi +
mov ecx [ebp+arg_8] +
jmp loc_40D1C0  +
mov eax ebx +
sub eax esi +
cmp eax 3 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+168h]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40D38A  +
add esi 3 +
jmp loc_40D206  +
mov eax ebx +
sub eax esi +
cmp eax 4 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+16Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40D38A  +
add esi 4 +
jmp loc_40D206  +
lea eax [ebp+arg_4] +
push eax  +
push ebx  +
lea eax [esi+1] +
push eax  +
push edi  +
call sub_40E279  +
mov edx eax +
add esp 10h +
test edx edx +
jle loc_40D3AE  +
mov esi [ebp+arg_4] +
jmp loc_40D209  +
inc esi  +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
mov al [eax+edi+4Ch] +
cmp al 9 +
jb loc_40D38A  +
cmp al 0Ah +
jbe loc_40D2A7  +
cmp al 0Bh +
jz loc_40D2ED  +
cmp al 11h +
jz loc_40D3BC  +
cmp al 15h +
jnz loc_40D38A  +
inc esi  +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+edi+4Ch] +
cmp eax 11h +
jg loc_40D2F5  +
jz loc_40D3BC  +
cmp eax 5 +
jz loc_40D393  +
cmp eax 6 +
jz loc_40D325  +
cmp eax 7 +
jz loc_40D30B  +
cmp eax 8 +
jle loc_40D38A  +
cmp eax 0Ah +
jle loc_40D2A7  +
cmp eax 0Bh +
jnz loc_40D38A  +
xor eax eax +
inc eax  +
jmp loc_40D3C9  +
sub eax 15h +
jz loc_40D2A7  +
dec eax  +
jz loc_40D305  +
dec eax  +
dec eax  +
jnz loc_40D387  +
inc esi  +
jmp loc_40D17F  +
mov eax ebx +
sub eax esi +
cmp eax 4 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+160h]  +
jmp loc_40D12A  +
mov eax ebx +
sub eax esi +
cmp eax 3 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+15Ch]  +
jmp loc_40D14E  +
cmp eax 16h +
jz loc_40D34C  +
cmp eax 17h +
jz loc_40D35D  +
jle loc_40D38A  +
cmp eax 1Bh +
jg loc_40D38A  +
inc esi  +
cmp esi ebx +
jnz loc_40D08A  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
test edx edx +
jnz loc_40D38A  +
inc esi  +
mov edx ecx +
mov [ebp+var_4] edx +
cmp esi ebx +
jz loc_40D355  +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+edi+4Ch] +
sub eax 5 +
jz loc_40D393  +
dec eax  +
jz loc_40D325  +
dec eax  +
jz loc_40D30B  +
sub eax 0Fh +
jz loc_40D34C  +
dec eax  +
dec eax  +
jz loc_40D34C  +
sub eax 5 +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
jmp loc_40D358  +
mov eax ebx +
sub eax esi +
cmp eax 2 +
jl loc_40D3A9  +
push esi  +
push edi  +
call dword ptr [edi+158h]  +
jmp loc_40D172  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_40D358  +
jnz loc_40D3B8  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov eax edx +
jmp loc_40D358  +
inc esi  +
cmp esi ebx +
jz loc_40D355  +
cmp byte ptr [esi] 3Eh +
jnz loc_40D38A  +
push 3  +
pop eax  +
mov ecx [ebp+arg_C] +
lea edx [esi+1] +
mov [ecx] edx +
jmp loc_40D358  +
***
mov ecx [ebp+arg_4] +
push ebx  +
mov edx [ebp+arg_4] +
push esi  +
mov ecx [ebp+arg_4] +
push ebx  +
push ebx  +
push ebx  +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jnz loc_40E100  +
or eax 0FFFFFFFFh +
jmp loc_40E22B  +
movzx eax byte ptr [esi] +
push ebx  +
mov ebx [ebp+arg_0] +
movzx eax byte ptr [eax+ebx+4Ch] +
sub eax 5 +
jz loc_40E171  +
dec eax  +
jz loc_40E155  +
dec eax  +
jz loc_40E132  +
sub eax 0Fh +
jz loc_40E12F  +
dec eax  +
dec eax  +
jz loc_40E12F  +
sub eax 5 +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor eax eax +
jmp loc_40E22A  +
inc esi  +
jmp loc_40E18B  +
mov eax edi +
sub eax esi +
cmp eax 4 +
jge loc_40E142  +
push 0FFFFFFFEh  +
jmp loc_40E229  +
push esi  +
push ebx  +
call dword ptr [ebx+160h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E123  +
add esi 4 +
jmp loc_40E18B  +
mov eax edi +
sub eax esi +
cmp eax 3 +
jl loc_40E13B  +
push esi  +
push ebx  +
call dword ptr [ebx+15Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E123  +
add esi 3 +
jmp loc_40E18B  +
mov eax edi +
sub eax esi +
cmp eax 2 +
jl loc_40E13B  +
push esi  +
push ebx  +
call dword ptr [ebx+158h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E123  +
add esi 2 +
cmp esi edi +
jz loc_40E227  +
sub edi esi +
movzx eax byte ptr [esi] +
movzx eax byte ptr [eax+ebx+4Ch] +
add eax 0FFFFFFFBh +
cmp eax 1Fh +
ja loc_40E234  +
movzx eax ds:byte_40E259[eax] +
jmp ds:off_40E23D[eax*4]  +
inc esi  +
dec edi  +
jmp loc_40E21E  +
cmp edi 2 +
jl loc_40E13B  +
push esi  +
push ebx  +
call dword ptr [ebx+14Ch]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E123  +
add esi 2 +
sub edi 2 +
jmp loc_40E21E  +
cmp edi 3 +
jl loc_40E13B  +
push esi  +
push ebx  +
call dword ptr [ebx+150h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E123  +
add esi 3 +
sub edi 3 +
jmp loc_40E21E  +
cmp edi 4 +
jl loc_40E13B  +
push esi  +
push ebx  +
call dword ptr [ebx+154h]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40E234  +
add esi 4 +
sub edi 4 +
cmp esi [ebp+arg_8] +
jnz loc_40E195  +
push 0FFFFFFECh  +
pop eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
push 14h  +
pop eax  +
jmp loc_40E236  +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_40E22A  +
***
push esi  +
push ebx  +
mov edx [ebp+arg_4] +
push ecx  +
mov al [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_0] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
push esi  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
cmp [ebp+arg_4] 0Fh +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_4] +
sub eax 0Bh +
jz loc_40F806  +
dec eax  +
dec eax  +
jz loc_40F802  +
dec eax  +
dec eax  +
jz loc_40F7FE  +
sub eax 0Eh +
jz loc_40F7F1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_40EAE6  +
add esp 8 +
pop ebp  +
retn   +
mov ecx [ebp+arg_0] +
push 2  +
mov dword ptr [ecx] offset sub_4141C0 +
jmp loc_40F808  +
xor eax eax +
pop ebp  +
retn   +
push 38h  +
jmp loc_40F808  +
push 37h  +
pop eax  +
pop ebp  +
retn   +
***
push ecx  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
push ecx  +
push ecx  +
mov ecx offset dword_47581C +
call loc_4109B0  +
push offset sub_45F7A0  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_4757A4 +
call loc_4109B0  +
push offset sub_45F800  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_4757EC +
call loc_4109B0  +
push offset sub_45F860  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_475804 +
call loc_4109B0  +
push offset sub_45F8C0  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_4757BC +
call loc_4109B0  +
push offset sub_45F920  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_4757D4 +
call loc_4109B0  +
push offset sub_45F980  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
push ecx  +
push ecx  +
call sub_41DFF0  +
push offset sub_45F9F0  +
mov dword_478174 eax +
call sub_43FFBF  +
pop ecx  +
retn   +
***
mov ecx offset dword_47583C +
call loc_4109B0  +
push offset sub_45FA60  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
push ecx  +
push ecx  +
push ecx  +
mov ecx offset dword_474160 +
mov ecx offset dword_474130 +
mov ecx offset dword_474118 +
mov ecx offset dword_474148 +
pop ecx  +
pop ecx  +
mov ecx offset unk_476F10 +
pop ecx  +
mov ecx offset unk_476FC0 +
mov ecx offset unk_47801C +
call sub_45B3D1  +
push offset loc_45FBC7  +
call sub_43FFBF  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov eax [ebp+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_40FACF  +
xor eax eax +
pop ebp  +
retn   +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40FAD2  +
sub eax edx +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46271C +
jz loc_40FAFB  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
lea edx [ebp+var_8] +
sub esp 8 +
push [ebp+arg_0]  +
push edx  +
call dword ptr [eax+0Ch]  +
mov edx [ebp+arg_4] +
mov ecx [eax+4] +
cmp ecx [edx+4] +
jnz loc_40FB5B  +
mov eax [eax] +
cmp eax [edx] +
jnz loc_40FB5B  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 8  +
xor al al +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
cmp ecx [eax+4] +
jnz loc_40FB88  +
mov eax [eax] +
cmp eax [ebp+arg_4] +
jnz loc_40FB88  +
mov al 1 +
pop ebp  +
retn 8  +
xor al al +
pop ebp  +
retn 8  +
***
retn   +
***
push ecx  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp eax 1 +
jnz loc_40FC5F  +
push 15h  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
push esi  +
call sub_40FBA0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
call sub_43A52E  +
add esp 4 +
test eax eax +
mov eax [ebp+arg_0] +
mov [eax] esi +
jz loc_40FD15  +
mov dword ptr [eax+4] offset off_475864 +
pop esi  +
pop ebp  +
retn 8  +
mov dword ptr [eax+4] offset off_475860 +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45B5A6  +
mov eax large fs:0 +
push eax  +
mov eax 1044h +
call sub_4442E0  +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+var_1030] +
push eax  +
call sub_436BCD  +
add esp 4 +
lea eax [ebp+var_1030] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_104C] +
call sub_437FB6  +
mov eax [ebp+var_104C] +
mov [ebp+var_1034] 1 +
mov dword ptr [ebp+pIdentifierAuthority.Value] 0 +
mov word ptr [ebp+pIdentifierAuthority.Value+4] 500h +
cmp dword ptr [eax] 6 +
jl loc_40FEB8  +
lea eax [ebp+hObject] +
push eax  +
push 20008h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_40FDDB  +
lea esi [eax+1] +
jmp loc_40FF1E  +
lea eax [ebp+ReturnLength] +
push eax  +
push 1000h  +
lea eax [ebp+TokenInformation] +
push eax  +
push 2  +
push [ebp+hObject]  +
call ds:GetTokenInformation  +
push [ebp+hObject]  +
mov [ebp+var_1034] eax +
call ds:CloseHandle  +
cmp [ebp+var_1034] 0 +
jnz loc_40FE27  +
mov esi 1 +
mov [ebp+var_1034] esi +
jmp loc_40FF1E  +
lea eax [ebp+pSid] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call ds:AllocateAndInitializeSid  +
test eax eax +
jnz loc_40FE64  +
mov esi 1 +
mov [ebp+var_1034] esi +
jmp loc_40FF1E  +
xor esi esi +
mov [ebp+var_1034] 0 +
cmp [ebp+TokenInformation] esi +
jbe loc_40FF0C  +
mov ebx ds:EqualSid +
lea edi [ebp+var_100C] +
jmp loc_40FE90  +
push dword ptr [edi]  +
push [ebp+pSid]  +
call ebx  +
test eax eax +
jnz loc_40FEAC  +
inc esi  +
add edi 8 +
cmp esi [ebp+TokenInformation] +
jb loc_40FE90  +
jmp loc_40FF0C  +
mov [ebp+var_1034] 1 +
jmp loc_40FF0C  +
lea eax [ebp+pSid] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call ds:AllocateAndInitializeSid  +
mov esi eax +
mov [ebp+var_1034] esi +
test esi esi +
jz loc_40FF1E  +
lea eax [ebp+var_1034] +
push eax  +
push [ebp+pSid]  +
push 0  +
call ds:CheckTokenMembership  +
neg eax  +
sbb eax eax +
and [ebp+var_1034] eax +
push [ebp+pSid]  +
call ds:FreeSid  +
mov esi [ebp+var_1034] +
lea ecx [ebp+var_104C] +
mov byte ptr [ebp+var_4] 0 +
call sub_438033  +
cmp [ebp+var_101C] 10h +
jb loc_40FF44  +
push [ebp+var_1030]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
lea eax [ebp+pcbData] +
mov [ebp+pdwType] 0 +
push eax  +
lea eax [ebp+pvData] +
mov [ebp+pvData] 0 +
push eax  +
lea eax [ebp+pdwType] +
mov [ebp+pcbData] 4 +
push eax  +
push offset pszValue  +
push offset pszSubKey  +
push 80000002h  +
call ds:SHGetValueW  +
test eax eax +
jz loc_40FFB6  +
xor al al +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
cmp [ebp+pvData] eax +
setnz al  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
lea eax [ebp+Buffer] +
mov [ebp+Buffer] 0 +
push eax  +
push 1  +
push 0  +
mov esi ecx +
call ds:NetWkstaUserGetInfo  +
test eax eax +
mov eax [ebp+Buffer] +
jnz loc_410039  +
test eax eax +
jz loc_410032  +
mov edx [eax] +
cmp word ptr [edx] 0 +
jnz loc_410003  +
xor ecx ecx +
jmp loc_410020  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
lea esp [esp+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_410010  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
push [ebp+Buffer]  +
call ds:NetApiBufferFree  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
test eax eax +
jz loc_410044  +
push eax  +
call ds:NetApiBufferFree  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
lea eax [ebp+Buffer] +
mov [ebp+Buffer] 0 +
push eax  +
push 1  +
push 0  +
mov esi ecx +
call ds:NetWkstaUserGetInfo  +
test eax eax +
mov eax [ebp+Buffer] +
jnz loc_4100B9  +
test eax eax +
jz loc_4100B2  +
mov edx [eax+4] +
cmp word ptr [edx] 0 +
jnz loc_410084  +
xor ecx ecx +
jmp loc_4100A0  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
lea ebx [ebx+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_410090  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
push [ebp+Buffer]  +
call ds:NetApiBufferFree  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
test eax eax +
jz loc_4100C4  +
push eax  +
call ds:NetApiBufferFree  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [ecx] 0 +
jnz loc_410101  +
xor edx edx +
push edx  +
push ecx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov edx ecx +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_410107  +
sub edx edi +
pop edi  +
push edx  +
push ecx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_410164  +
mov eax [esi+10h] +
inc eax  +
jz loc_41016E  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_41016E  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov eax edi +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp esi [ebp+arg_0] +
jz loc_4101D6  +
cmp dword ptr [esi+14h] 10h +
jb loc_4101BB  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
push [ebp+arg_0]  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_4103E0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+14h] 10h +
jb loc_4101F3  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
cmp dword ptr [esi+14h] 8 +
jnb loc_4102A8  +
mov eax [esi+10h] +
inc eax  +
jz loc_4102B2  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_4102B2  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+14h] 8 +
jb loc_4102F3  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 7 +
xor eax eax +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_41032D  +
xor eax eax +
push eax  +
push edx  +
call loc_410BB0  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_410333  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_410BB0  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [esi+4] +
cmp edi ecx +
jnb loc_4103B6  +
mov eax [esi] +
cmp eax edi +
ja loc_4103B6  +
sub edi eax +
mov eax 2AAAAAABh +
imul  edi +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ecx [esi+8] +
jnz loc_410397  +
push ecx  +
mov ecx esi +
call loc_410910  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4103D0  +
mov eax [esi] +
lea edx [edi+edi*2] +
lea eax [eax+edx*8] +
push eax  +
call sub_410130  +
add dword ptr [esi+4] 18h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp ecx [esi+8] +
jnz loc_4103C3  +
push ecx  +
mov ecx esi +
call loc_410910  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4103D0  +
push edi  +
call sub_410130  +
add dword ptr [esi+4] 18h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jnb loc_410403  +
mov eax [esi+10h] +
inc eax  +
jz loc_410411  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_410411  +
test edi edi +
jz loc_41040B  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov eax [edi+10h] +
cmp eax ecx +
jb loc_4104E0  +
mov ebx [ebp+10h] +
sub eax ecx +
mov ecx [esi+10h] +
cmp eax ebx +
mov [ebp+8] ecx +
cmovb ebx eax +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax ebx +
jbe loc_4104EA  +
test ebx ebx +
jz loc_4104D7  +
lea eax [ecx+ebx] +
mov ecx esi +
push 0  +
push eax  +
call loc_410AE0  +
test al al +
jz loc_4104D7  +
cmp dword ptr [edi+14h] 10h +
jb loc_41048F  +
mov edi [edi] +
cmp dword ptr [esi+14h] 10h +
jb loc_410499  +
mov ecx [esi] +
jmp loc_41049B  +
mov ecx esi +
test ebx ebx +
jz loc_4104B4  +
mov eax [ebp+0Ch] +
add eax edi +
push ebx  +
push eax  +
mov eax [esi+10h] +
add eax ecx +
push eax  +
call loc_4425D0  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ecx +
jb loc_4104D1  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_410565  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_41051A  +
mov eax [esi] +
jmp loc_41051C  +
mov eax esi +
cmp edi eax +
jb loc_410565  +
cmp ecx 10h +
jb loc_410529  +
mov edx [esi] +
jmp loc_41052B  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax edi +
jbe loc_410565  +
cmp ecx 10h +
jb loc_41054F  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub edi eax +
push edi  +
push esi  +
call loc_410440  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub edi eax +
push edi  +
push esi  +
call loc_410440  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx [esi+10h] +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+0Ch] +
sub eax ecx +
mov [ebp+8] ecx +
cmp eax ebx +
jbe loc_4105D9  +
test ebx ebx +
jz loc_4105D0  +
lea eax [ecx+ebx] +
mov ecx esi +
push 0  +
push eax  +
call loc_410AE0  +
test al al +
jz loc_4105D0  +
cmp dword ptr [esi+14h] 10h +
jb loc_410597  +
mov ecx [esi] +
jmp loc_410599  +
mov ecx esi +
test ebx ebx +
jz loc_4105AD  +
mov eax [esi+10h] +
push ebx  +
add eax ecx +
push edi  +
push eax  +
call loc_4425D0  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ecx +
jb loc_4105CA  +
mov eax [esi] +
pop ebx  +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov edi [ebx+10h] +
cmp edi ecx +
jb loc_4106F2  +
sub edi ecx +
cmp [ebp+10h] edi +
cmovb edi [ebp+10h] +
cmp esi ebx +
jnz loc_41065D  +
lea eax [edi+ecx] +
cmp [esi+10h] eax +
jb loc_4106FC  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] eax +
jb loc_410644  +
mov edx [esi] +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_410720  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_410720  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 0FFFFFFFEh +
ja loc_410706  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_410691  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_410D80  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_4106E9  +
cmp dword ptr [ebx+14h] 10h +
jb loc_410687  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_4106B7  +
mov edx [esi] +
jmp loc_4106B9  +
test edi edi +
jnz loc_41067F  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_4106AB  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_4106CB  +
push edi  +
lea eax [ebx+ecx] +
push eax  +
push edx  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4106E3  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_4107AF  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_41075F  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ecx +
jb loc_410753  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_4107A7  +
cmp dword ptr [esi+14h] 10h +
jb loc_41076D  +
mov eax [esi] +
jmp loc_41076F  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx] +
mov eax edi +
sub eax ecx +
jz loc_410789  +
push eax  +
lea eax [ebx+edx] +
push eax  +
push ebx  +
call loc_43F850  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
pop ebx  +
jb loc_4107A1  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_43A666  +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_4107F2  +
cmp dword ptr [esi+14h] 10h +
jb loc_4107F2  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_4107E8  +
push edi  +
push ebx  +
push esi  +
call loc_4425D0  +
add esp 0Ch +
push ebx  +
call sub_43FFF6  +
add esp 4 +
pop ebx  +
mov [esi+10h] edi +
mov dword ptr [esi+14h] 0Fh +
mov byte ptr [edi+esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_410835  +
mov eax [esi+10h] +
inc eax  +
jz loc_410843  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_410843  +
test edi edi +
jz loc_41083D  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_4108A5  +
cmp dword ptr [esi+14h] 8 +
jb loc_4108A5  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_41089B  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call loc_4425D0  +
add esp 0Ch +
push ebx  +
call sub_43FFF6  +
add esp 4 +
pop ebx  +
mov [esi+10h] edi +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_4108C9  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_410908  +
nop   +
cmp dword ptr [esi+14h] 10h +
jb loc_4108F0  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
add esi 18h +
cmp esi edi +
jnz loc_4108E0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ecx+4] +
mov eax 2AAAAAABh +
push edi  +
mov edi [ecx+8] +
mov edx edi +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_410992  +
sub esi [ecx] +
mov eax 2AAAAAABh +
imul  esi +
push ebx  +
sar edx 2 +
mov ebx 0AAAAAAAh +
mov esi edx +
mov eax ebx +
shr esi 1Fh +
add esi edx +
sub eax esi +
cmp eax 1 +
jb loc_410997  +
sub edi [ecx] +
mov eax 2AAAAAABh +
imul  edi +
inc esi  +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx eax +
shr edx 1 +
sub ebx edx +
cmp ebx eax +
pop ebx  +
jnb loc_410985  +
xor eax eax +
cmp eax esi +
cmovb eax esi +
push eax  +
call loc_410CE0  +
pop edi  +
pop esi  +
retn 4  +
***
add eax edx +
cmp eax esi +
cmovb eax esi +
push eax  +
call loc_410CE0  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_410A15  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_4109CA  +
mov eax [esi] +
jmp loc_4109CC  +
mov eax esi +
cmp ebx eax +
jb loc_410A15  +
cmp ecx 10h +
jb loc_4109D9  +
mov edx [esi] +
jmp loc_4109DB  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_410A15  +
cmp ecx 10h +
jb loc_4109FF  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_4105F0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_4105F0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 0FFFFFFFEh +
ja loc_410A9C  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_410A3E  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_410D80  +
test edi edi +
jz loc_410A93  +
cmp dword ptr [esi+14h] 10h +
jb loc_410A64  +
mov eax [esi] +
jmp loc_410A66  +
test edi edi +
jnz loc_410A34  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_410A58  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
test edi edi +
jz loc_410A75  +
push edi  +
push ebx  +
push eax  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_410A8D  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
cmp dword ptr [ecx+14h] 10h +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
jb loc_410AC9  +
mov eax [ecx] +
mov byte ptr [eax+edx] 0 +
pop ebp  +
retn 4  +
mov byte ptr [ecx+edx] 0 +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFEh +
ja loc_410B86  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_410B11  +
push dword ptr [esi+10h]  +
push edi  +
call sub_410D80  +
xor eax eax +
cmp eax edi +
pop edi  +
sbb eax eax +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_410B67  +
cmp edi 10h +
jnb loc_410B67  +
push ebx  +
mov ebx [esi+10h] +
cmp edi ebx +
cmovb ebx edi +
cmp eax 10h +
jb loc_410B4A  +
mov eax [esi] +
mov [ebp+0Ch] eax +
test ebx ebx +
jz loc_410B41  +
push ebx  +
push eax  +
push esi  +
call loc_4425D0  +
mov eax [ebp+0Ch] +
add esp 0Ch +
push eax  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esi+10h] ebx +
mov dword ptr [esi+14h] 0Fh +
cmp eax edi +
mov byte ptr [ebx+esi] 0 +
pop ebx  +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_410B78  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_410B75  +
mov esi [esi] +
mov byte ptr [esi] 0 +
xor eax eax +
cmp eax edi +
pop edi  +
sbb eax eax +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_410C06  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_410BCA  +
mov eax [esi] +
jmp loc_410BCC  +
mov eax esi +
cmp ebx eax +
jb loc_410C06  +
cmp ecx 8 +
jb loc_410BD9  +
mov edx [esi] +
jmp loc_410BDB  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_410C06  +
cmp ecx 8 +
jb loc_410BEE  +
mov eax [esi] +
jmp loc_410BF0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call loc_410ED0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7FFFFFFEh +
ja loc_410C9F  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_410C36  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_411190  +
test edi edi +
jz loc_410C96  +
cmp dword ptr [esi+14h] 8 +
jb loc_410C60  +
mov ecx [esi] +
jmp loc_410C62  +
test edi edi +
jnz loc_410C2C  +
mov [esi+10h] edi +
cmp eax 8 +
jb loc_410C52  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ecx esi +
test edi edi +
jz loc_410C74  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_410C8E  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
cmp dword ptr [ecx+14h] 8 +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
jb loc_410CCB  +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
xor eax eax +
mov [ecx+edx*2] ax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
xor edi edi +
test esi esi +
jz loc_410D0E  +
cmp esi 0AAAAAAAh +
ja loc_410D72  +
lea eax [esi+esi*2] +
shl eax 3 +
push eax  +
call sub_440048  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_410D72  +
push dword ptr [ebp+8]  +
mov edx [ebx+4] +
mov ecx [ebx] +
sub esp 8 +
push edi  +
call sub_411CA0  +
mov ecx [ebx+4] +
mov eax 2AAAAAABh +
sub ecx [ebx] +
add esp 10h +
imul  ecx +
mov eax [ebx] +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+8] ecx +
test eax eax +
jz loc_410D57  +
push dword ptr [ebx+4]  +
push eax  +
call sub_4108D0  +
push dword ptr [ebx]  +
call sub_43FFF6  +
mov ecx [ebp+8] +
add esp 4 +
lea eax [esi+esi*2] +
mov [ebx] edi +
lea eax [edi+eax*8] +
mov [ebx+8] eax +
lea eax [ecx+ecx*2] +
lea eax [edi+eax*8] +
pop edi  +
pop esi  +
mov [ebx+4] eax +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_43A607  +
push 0FFFFFFFFh  +
push offset loc_45B5D0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_410DC1  +
mov edi eax +
jmp loc_410DE8  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_410DE8  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_410DE8  +
mov edi 0FFFFFFFEh +
lea ecx [edi+1] +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_14] eax +
test ecx ecx +
jz loc_410E41  +
cmp ecx 0FFFFFFFFh +
ja loc_410E10  +
push ecx  +
call sub_440048  +
add esp 4 +
mov [ebp+var_14] eax +
test eax eax +
jnz loc_410E41  +
call sub_43A607  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_0+3] +
mov [ebp+var_14] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call loc_4110B0  +
mov [ebp+arg_0] eax +
mov eax offset loc_410E35 +
retn   +
mov edi [ebp-14h] +
mov eax [ebp+8] +
mov esi [ebp-18h] +
mov [ebp-14h] eax +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_410E90  +
cmp dword ptr [esi+14h] 10h +
jb loc_410E7F  +
mov ecx [esi] +
jmp loc_410E81  +
mov esi [ebp-18h] +
cmp dword ptr [esi+14h] 10h +
jb loc_410E65  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push 0  +
mov byte ptr [esi] 0 +
call sub_443DCE  +
mov ecx esi +
test ebx ebx +
jz loc_410E90  +
push ebx  +
push ecx  +
push eax  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_410EA0  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_14] +
mov byte ptr [esi] 0 +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp edi 10h +
jb loc_410EB5  +
mov esi eax +
mov byte ptr [esi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov edi [ebx+10h] +
cmp edi ecx +
jb loc_410FCC  +
sub edi ecx +
cmp [ebp+10h] edi +
cmovb edi [ebp+10h] +
cmp esi ebx +
jnz loc_410F29  +
lea eax [edi+ecx] +
cmp [esi+10h] eax +
jb loc_410FD6  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] eax +
jb loc_410F0F  +
mov edx [esi] +
jmp loc_410F11  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call loc_4110E0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 7FFFFFFEh +
ja loc_410FE0  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_410F60  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_411190  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_410FC3  +
cmp dword ptr [ebx+14h] 8 +
jb loc_410F56  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_410F8A  +
mov edx [esi] +
jmp loc_410F8C  +
test edi edi +
jnz loc_410F4E  +
mov [esi+10h] edi +
cmp eax 8 +
jb loc_410F7C  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_410FA1  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_410FBB  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 7FFFFFFEh +
ja loc_41109E  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_411024  +
push dword ptr [esi+10h]  +
push edi  +
call sub_411190  +
xor eax eax +
cmp eax edi +
pop edi  +
sbb eax eax +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_41107D  +
cmp edi 8 +
jnb loc_41107D  +
push ebx  +
mov ebx [esi+10h] +
cmp edi ebx +
cmovb ebx edi +
cmp eax 8 +
jb loc_411060  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
test ebx ebx +
jz loc_411057  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push esi  +
call loc_4425D0  +
mov ecx [ebp+0Ch] +
add esp 0Ch +
push ecx  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esi+10h] ebx +
mov dword ptr [esi+14h] 7 +
cmp eax edi +
mov [esi+ebx*2] ax +
pop ebx  +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_411090  +
mov [esi+10h] edi +
cmp eax 8 +
jb loc_41108B  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
xor eax eax +
cmp eax edi +
pop edi  +
sbb eax eax +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
xor ecx ecx +
test eax eax +
jz loc_4110D0  +
cmp eax 0FFFFFFFFh +
ja loc_4110D6  +
push eax  +
call sub_440048  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_4110D6  +
mov eax ecx +
pop ebp  +
retn 4  +
***
call sub_43A607  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_41117D  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_411127  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ecx +
jb loc_411119  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_411175  +
cmp dword ptr [esi+14h] 8 +
jb loc_411135  +
mov eax [esi] +
jmp loc_411137  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_411153  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call loc_43F850  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
pop ebx  +
jb loc_41116D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push 0FFFFFFFFh  +
push offset loc_45B5F0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_4111D4  +
mov edi eax +
jmp loc_4111FB  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_4111FB  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_4111FB  +
mov edi 7FFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
xor ecx ecx +
mov [ebp+var_14] ecx +
test eax eax +
jz loc_41125A  +
cmp eax 7FFFFFFFh +
ja loc_411229  +
add eax eax +
push eax  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
test ecx ecx +
jnz loc_41125A  +
call sub_43A607  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_0+3] +
mov [ebp+var_14] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_4112F0  +
mov [ebp+arg_0] eax +
mov eax offset loc_41124E +
retn   +
mov edi [ebp-14h] +
mov ecx [ebp+8] +
mov esi [ebp-18h] +
mov [ebp-14h] ecx +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_4112AC  +
cmp dword ptr [esi+14h] 8 +
jb loc_411298  +
mov edx [esi] +
jmp loc_41129A  +
mov esi [ebp-18h] +
cmp dword ptr [esi+14h] 8 +
jb loc_41127E  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
push eax  +
mov dword ptr [esi+10h] 0 +
push eax  +
mov [esi] ax +
call sub_443DCE  +
mov edx esi +
test ebx ebx +
jz loc_4112AC  +
lea eax [ebx+ebx] +
push eax  +
push edx  +
push ecx  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_4112BC  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_14] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp edi 8 +
jb loc_4112CE  +
mov esi eax +
xor eax eax +
mov [esi+ebx*2] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_0] +
mov ebx edx +
cmp word ptr [ecx] 0 +
jnz loc_41142F  +
xor esi esi +
jmp loc_411443  +
mov esi ecx +
lea edx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_411434  +
sub esi edx +
sar esi 1 +
push esi  +
push ecx  +
mov ecx ebx +
call loc_411870  +
mov esi eax +
mov dword ptr [edi+14h] 7 +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
cmp dword ptr [esi+14h] 8 +
jnb loc_41147C  +
mov eax [esi+10h] +
inc eax  +
jz loc_411486  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_411486  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov edi ecx +
mov [ebp+var_4] 0 +
mov ecx edx +
call loc_4117A0  +
mov esi eax +
mov dword ptr [edi+14h] 7 +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
cmp dword ptr [esi+14h] 8 +
jnb loc_4114FD  +
mov eax [esi+10h] +
inc eax  +
jz loc_411507  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_411507  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_411565  +
cmp eax 0FFFFFFFFh +
ja loc_411560  +
push eax  +
call sub_440048  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_411565  +
jmp sub_43A607  +
mov eax ecx +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_411599  +
cmp eax 7FFFFFFFh +
ja loc_411594  +
add eax eax +
push eax  +
call sub_440048  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_411599  +
jmp sub_43A607  +
mov eax ecx +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_4115BD  +
xor eax eax +
push eax  +
push edx  +
call loc_411870  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4115C3  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_411870  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+10h] +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_41164C  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_41160B  +
mov eax [esi] +
jmp loc_41160D  +
mov eax esi +
cmp edx eax +
jb loc_41164C  +
cmp ecx 10h +
jb loc_41161A  +
mov edi [esi] +
jmp loc_41161C  +
mov edi esi +
mov eax [esi+10h] +
add eax edi +
cmp eax edx +
jbe loc_41164C  +
cmp ecx 10h +
jb loc_41162E  +
mov eax [esi] +
jmp loc_411630  +
mov eax esi +
push dword ptr [ebp+14h]  +
sub edx eax +
mov ecx esi +
push edx  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_411950  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov ecx [esi+10h] +
mov eax [ebp+8] +
cmp ecx eax +
jb loc_41177C  +
mov edi [ebp+0Ch] +
mov edx ecx +
sub edx eax +
cmp edx edi +
push ebx  +
mov ebx [ebp+14h] +
cmovb edi edx +
or eax 0FFFFFFFFh +
sub ecx edi +
sub eax ebx +
cmp eax ecx +
jbe loc_411786  +
sub edx edi +
mov [ebp-4] edx +
cmp ebx edi +
jnb loc_4116C2  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411691  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_411694  +
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_4116A0  +
mov eax [esi] +
mov [ebp+14h] eax +
jmp loc_4116A3  +
mov [ebp+14h] esi +
test edx edx +
jz loc_4116C2  +
mov eax [ebp+0Ch] +
add eax [ebp+8] +
add eax edi +
push edx  +
push eax  +
mov eax [ebp+14h] +
add eax [ebp+8] +
add eax ebx +
push eax  +
call loc_43F850  +
add esp 0Ch +
test ebx ebx +
jnz loc_4116CE  +
test edi edi +
jz loc_411771  +
mov eax ebx +
mov ecx esi +
sub eax edi +
add eax [esi+10h] +
push 0  +
push eax  +
mov [ebp+14h] eax +
call loc_410AE0  +
test al al +
jz loc_411771  +
cmp edi ebx +
jnb loc_41172C  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4116FD  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_411700  +
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_411709  +
mov edx [esi] +
jmp loc_41170B  +
mov edx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_41172C  +
mov ecx [ebp+8] +
push eax  +
mov eax [ebp+0Ch] +
add eax ecx +
add eax edi +
push eax  +
lea eax [edx+ecx] +
add eax ebx +
push eax  +
call loc_43F850  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_411736  +
mov ecx [esi] +
jmp loc_411738  +
mov ecx esi +
test ebx ebx +
jz loc_41174E  +
mov eax [ebp+8] +
push ebx  +
push dword ptr [ebp+10h]  +
add eax ecx +
push eax  +
call loc_4425D0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov ecx [ebp+14h] +
mov [esi+10h] ecx +
jb loc_41176B  +
mov eax [esi] +
pop ebx  +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov eax [edi+10h] +
cmp eax ecx +
jb loc_41184D  +
mov ebx [ebp+10h] +
sub eax ecx +
mov ecx [esi+10h] +
cmp eax ebx +
mov [ebp+8] ecx +
cmovb ebx eax +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax ebx +
jbe loc_411857  +
test ebx ebx +
jz loc_411844  +
lea eax [ecx+ebx] +
mov ecx esi +
push 0  +
push eax  +
call loc_410FF0  +
test al al +
jz loc_411844  +
cmp dword ptr [edi+14h] 8 +
jb loc_4117F3  +
mov edi [edi] +
cmp dword ptr [esi+14h] 8 +
jb loc_4117FD  +
mov ecx [esi] +
jmp loc_4117FF  +
mov ecx esi +
test ebx ebx +
jz loc_41181D  +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+0Ch] +
lea eax [edi+eax*2] +
push eax  +
mov eax [esi+10h] +
lea eax [ecx+eax*2] +
push eax  +
call loc_4425D0  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ecx +
jb loc_41183C  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor edx edx +
mov [eax+ecx*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_4118C6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_41188A  +
mov eax [esi] +
jmp loc_41188C  +
mov eax esi +
cmp edi eax +
jb loc_4118C6  +
cmp ecx 8 +
jb loc_411899  +
mov edx [esi] +
jmp loc_41189B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_4118C6  +
cmp ecx 8 +
jb loc_4118AE  +
mov eax [esi] +
jmp loc_4118B0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
call loc_4117A0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx [esi+10h] +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+0Ch] +
sub eax ecx +
mov [ebp+8] ecx +
cmp eax ebx +
jbe loc_411942  +
test ebx ebx +
jz loc_411939  +
lea eax [ecx+ebx] +
mov ecx esi +
push 0  +
push eax  +
call loc_410FF0  +
test al al +
jz loc_411939  +
cmp dword ptr [esi+14h] 8 +
jb loc_4118F8  +
mov ecx [esi] +
jmp loc_4118FA  +
mov ecx esi +
test ebx ebx +
jz loc_411912  +
lea eax [ebx+ebx] +
push eax  +
mov eax [esi+10h] +
push edi  +
lea eax [ecx+eax*2] +
push eax  +
call loc_4425D0  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ecx +
jb loc_411931  +
mov eax [esi] +
xor edx edx +
pop ebx  +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
mov [eax+ecx*2] dx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov ecx [esi+10h] +
cmp ecx edi +
jb loc_411C92  +
mov eax [ebp+10h] +
push ebx  +
mov ebx [ebp+14h] +
mov eax [eax+10h] +
cmp eax ebx +
jb loc_411C92  +
mov edx [ebp+0Ch] +
sub ecx edi +
cmp ecx edx +
cmovb edx ecx +
sub eax ebx +
mov ebx [ebp+18h] +
cmp eax ebx +
mov [ebp+0Ch] edx +
cmovb ebx eax +
mov eax [esi+10h] +
sub eax edx +
mov [ebp-4] eax +
or eax 0FFFFFFFFh +
sub eax ebx +
cmp eax [ebp-4] +
jbe loc_411C88  +
mov eax [ebp-4] +
sub ecx edx +
add eax ebx +
mov [ebp+18h] ecx +
mov [ebp-4] eax +
cmp [esi+10h] eax +
jnb loc_4119C7  +
push 0  +
push eax  +
mov ecx esi +
call loc_410AE0  +
mov ecx [ebp+18h] +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
cmp esi eax +
jz loc_411A43  +
cmp dword ptr [esi+14h] 10h +
jb loc_4119DE  +
mov edi [esi] +
mov [ebp+0Ch] edi +
mov edi [ebp+8] +
jmp loc_4119E1  +
mov [ebp+0Ch] esi +
cmp dword ptr [esi+14h] 10h +
jb loc_4119F1  +
mov edi [esi] +
mov [ebp+18h] edi +
mov edi [ebp+8] +
jmp loc_4119F4  +
mov [ebp+18h] esi +
test ecx ecx +
jz loc_411A14  +
mov eax [ebp+0Ch] +
add eax edi +
add eax edx +
push ecx  +
push eax  +
mov eax [ebp+18h] +
add eax edi +
add eax ebx +
push eax  +
call loc_43F850  +
mov eax [ebp+10h] +
add esp 0Ch +
cmp dword ptr [eax+14h] 10h +
jb loc_411A1C  +
mov eax [eax] +
cmp dword ptr [esi+14h] 10h +
jb loc_411A26  +
mov ecx [esi] +
jmp loc_411A28  +
mov ecx esi +
test ebx ebx +
jz loc_411C5D  +
add eax [ebp+14h] +
push ebx  +
push eax  +
lea eax [ecx+edi] +
push eax  +
call loc_4425D0  +
jmp loc_411C5A  +
cmp ebx edx +
ja loc_411ABA  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411A56  +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_411A59  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_411A62  +
mov ecx [esi] +
jmp loc_411A64  +
mov ecx esi +
test ebx ebx +
jz loc_411A7F  +
mov eax [ebp+8] +
add eax [ebp+14h] +
push ebx  +
push eax  +
lea eax [ecx+edi] +
push eax  +
call loc_43F850  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411A8E  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_411A91  +
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_411A9A  +
mov ecx [esi] +
jmp loc_411A9C  +
mov ecx esi +
mov eax [ebp+18h] +
test eax eax +
jz loc_411C5D  +
push eax  +
mov eax [ebp+0Ch] +
add eax edi +
add eax edx +
push eax  +
lea eax [ecx+edi] +
add eax ebx +
jmp loc_411C54  +
cmp [ebp+14h] edi +
ja loc_411B30  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411AD1  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_411AD4  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_411AE0  +
mov eax [esi] +
mov [ebp+0Ch] eax +
jmp loc_411AE3  +
mov [ebp+0Ch] esi +
test ecx ecx +
jz loc_411B00  +
mov eax [ebp+8] +
add eax edi +
add eax edx +
push ecx  +
push eax  +
mov eax [ebp+0Ch] +
add eax edi +
add eax ebx +
push eax  +
call loc_43F850  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411B0C  +
mov edx [esi] +
jmp loc_411B0E  +
mov edx esi +
cmp eax 10h +
jb loc_411B17  +
mov ecx [esi] +
jmp loc_411B19  +
mov ecx esi +
test ebx ebx +
jz loc_411C5D  +
mov eax [ebp+14h] +
add eax edx +
push ebx  +
push eax  +
lea eax [ecx+edi] +
jmp loc_411C54  +
lea eax [edi+edx] +
cmp eax [ebp+14h] +
mov eax [esi+14h] +
ja loc_411BAE  +
cmp eax 10h +
jb loc_411B4A  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_411B4D  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_411B59  +
mov eax [esi] +
mov [ebp+10h] eax +
jmp loc_411B5C  +
mov [ebp+10h] esi +
test ecx ecx +
jz loc_411B7C  +
mov eax [ebp+8] +
add eax edi +
add eax edx +
push ecx  +
push eax  +
mov eax [ebp+10h] +
add eax edi +
add eax ebx +
push eax  +
call loc_43F850  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_411B88  +
mov eax [esi] +
jmp loc_411B8A  +
mov eax esi +
cmp ecx 10h +
jb loc_411B93  +
mov ecx [esi] +
jmp loc_411B95  +
mov ecx esi +
test ebx ebx +
jz loc_411C5D  +
sub eax edx +
add eax [ebp+14h] +
add eax ebx +
push ebx  +
push eax  +
lea eax [ecx+edi] +
jmp loc_411C54  +
cmp eax 10h +
jb loc_411BBA  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_411BBD  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_411BC6  +
mov ecx [esi] +
jmp loc_411BC8  +
mov ecx esi +
test edx edx +
jz loc_411BE3  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
push edx  +
push eax  +
lea eax [ecx+edi] +
push eax  +
call loc_43F850  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411BF2  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_411BF5  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_411BFE  +
mov ecx [esi] +
jmp loc_411C00  +
mov ecx esi +
mov eax [ebp+18h] +
test eax eax +
jz loc_411C1E  +
push eax  +
mov eax [ebp+10h] +
add eax edi +
add eax edx +
push eax  +
lea eax [ecx+edi] +
add eax ebx +
push eax  +
call loc_43F850  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_411C2D  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_411C30  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_411C39  +
mov edx [esi] +
jmp loc_411C3B  +
mov edx esi +
mov ecx [ebp+0Ch] +
mov eax ebx +
sub eax ecx +
jz loc_411C5D  +
push eax  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
add eax ebx +
push eax  +
mov eax edi +
add eax edx +
add eax ecx +
push eax  +
call loc_43F850  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov ecx [ebp-4] +
mov [esi+10h] ecx +
pop ebx  +
jb loc_411C7A  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push offset aStringTooLong  +
call sub_43A638  +
push offset aInvalidStringP  +
call sub_43A666  +
push ebx  +
mov ebx edx +
cmp ecx ebx +
jz loc_411D1E  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [ecx+10h] +
test edi edi +
jz loc_411D0A  +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+4] 10h +
jnb loc_411CE2  +
mov eax [esi] +
inc eax  +
jz loc_411CEE  +
push eax  +
lea eax [esi-10h] +
push eax  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_411CEE  +
mov eax [esi-10h] +
mov [edi] eax +
mov dword ptr [esi-10h] 0 +
mov eax [esi] +
mov [edi+10h] eax +
mov eax [esi+4] +
mov [edi+14h] eax +
mov dword ptr [esi+4] 0Fh +
mov dword ptr [esi] 0 +
mov byte ptr [esi-10h] 0 +
add esi 18h +
add edi 18h +
lea ecx [esi-10h] +
cmp ecx ebx +
jnz loc_411CB2  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
test edx edx +
jz loc_411D55  +
mov esi [ebp+arg_4] +
mov eax 7FFFFFFEh +
sub esi ecx +
test eax eax +
jz loc_411D64  +
mov bl [esi+ecx] +
test bl bl +
jz loc_411D64  +
mov [ecx] bl +
dec eax  +
inc ecx  +
dec edx  +
jnz loc_411D43  +
pop esi  +
mov byte ptr [ecx-1] 0 +
mov eax 8007007Ah +
pop ebx  +
pop ebp  +
retn 0Ch  +
test edx edx +
jz loc_411D55  +
pop esi  +
mov byte ptr [ecx] 0 +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_8] +
push esi  +
mov esi ecx +
call sub_44067A  +
test [ebp+arg_0] 1 +
jz loc_411E0A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea eax [ebp+arg_0] +
mov esi ecx +
push eax  +
call sub_440606  +
mov dword ptr [esi] offset off_4626A4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push esi  +
call sub_43A9BD  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_411F2C  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_411F43  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_411F5A  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_411F71  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_411F88  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_411F9F  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov ecx esi +
pop esi  +
jmp sub_43AC06  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_4626A4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4626B0 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4626B0 +
jz loc_411FFB  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_412040  +
push 0  +
lea ecx [ebp+var_4] +
call sub_43ABAB  +
cmp dword ptr [esi] 0 +
jnz loc_412038  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov [esi] eax +
lea ecx [ebp+var_4] +
call sub_43AC06  +
mov eax [esi] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_412097  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz locret_412097  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45B6D9  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+5Ch+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [esp+5Ch+var_48] 0 +
mov eax [ecx] +
test eax eax +
jnz loc_412101  +
mov [esp+5Ch+var_18] 0Fh +
mov [esp+5Ch+var_1C] eax +
mov byte ptr [esp+5Ch+var_2C] al +
lea edi [esp+5Ch+var_2C] +
lea ebx [eax+1] +
jmp loc_41214D  +
mov edx [eax+18h] +
test edx edx +
jnz loc_41210B  +
lea edx [eax+1Ch] +
mov [esp+5Ch+var_30] 0Fh +
mov [esp+5Ch+var_34] 0 +
mov byte ptr [esp+5Ch+var_44] 0 +
cmp byte ptr [edx] 0 +
jnz loc_412129  +
xor ecx ecx +
jmp loc_412139  +
mov ecx edx +
lea edi [ecx+1] +
mov edi edi +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_412130  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [esp+64h+var_44] +
call loc_4109B0  +
lea edi [esp+64h+var_4C] +
mov ebx 2 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp dword ptr [edi+14h] 10h +
jnb loc_412177  +
mov eax [edi+10h] +
inc eax  +
jz loc_412181  +
push eax  +
push edi  +
push esi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_412181  +
mov eax [edi] +
mov [esi] eax +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
or ebx 4 +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
test bl 2 +
jz loc_4121D1  +
and ebx 0FFFFFFFDh +
cmp [esp+64h+var_38] 10h +
jb loc_4121BC  +
push [esp+64h+var_4C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+64h+var_38] 0Fh +
mov [esp+64h+var_3C] 0 +
mov byte ptr [esp+64h+var_4C] 0 +
test bl 1 +
jz loc_4121E9  +
cmp [esp+64h+var_20] 10h +
jb loc_4121E9  +
push [esp+64h+var_34]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [esp+64h+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+54h+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
test eax eax +
jnz loc_41221C  +
mov eax (offset asc_4696CC+2) +
retn   +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_412226  +
mov eax ecx +
retn   +
add eax 1Ch +
retn   +
***
mov ecx [ecx] +
push esi  +
mov esi [ebp+arg_0] +
cmp esi [ecx+0Ch] +
jnb loc_41224A  +
mov eax [ecx+8] +
mov eax [eax+esi*4] +
test eax eax +
jnz loc_412269  +
jmp loc_41224C  +
xor eax eax +
cmp byte ptr [ecx+14h] 0 +
jz loc_412269  +
call sub_43A897  +
cmp esi [eax+0Ch] +
jnb loc_412267  +
mov eax [eax+8] +
mov eax [eax+esi*4] +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B742  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_64] ebx +
mov eax [edi] +
mov [ebp+var_68] ecx +
cmp eax [ecx] +
jz loc_41233D  +
lea eax [ebp+var_5C] +
mov ecx edi +
push eax  +
call sub_4120A0  +
mov ecx eax +
mov [ebp+var_4] ebx +
mov ebx 1 +
cmp dword ptr [ecx+14h] 10h +
mov esi [ecx+10h] +
mov [ebp+var_64] ebx +
jb loc_4122D5  +
mov ecx [ecx] +
cmp esi 1 +
mov eax ebx +
cmovb eax esi +
push eax  +
push offset asc_4696CC  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_4122FF  +
cmp esi 1 +
jb loc_4122FF  +
cmp esi 1 +
setnz al  +
test eax eax +
jz loc_412337  +
mov ecx [ebp+var_68] +
lea eax [ebp+var_44] +
push eax  +
call sub_4120A0  +
mov esi eax +
lea eax [ebp+var_2C] +
mov [ebp+var_4] 1 +
push eax  +
mov ecx edi +
mov [ebp+var_64] 3 +
call sub_4120A0  +
push esi  +
mov ecx eax +
mov ebx 7 +
call sub_413E30  +
test eax eax +
jz loc_41233D  +
mov [ebp+var_5D] 0 +
jmp loc_412341  +
mov [ebp+var_5D] 1 +
test bl 4 +
jz loc_41236C  +
and ebx 0FFFFFFFBh +
cmp [ebp+var_18] 10h +
jb loc_41235A  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
test bl 2 +
jz loc_412397  +
and ebx 0FFFFFFFDh +
cmp [ebp+var_30] 10h +
jb loc_412385  +
push [ebp+var_44]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
test bl 1 +
jz loc_4123AD  +
cmp [ebp+var_48] 10h +
jb loc_4123AD  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
mov al [ebp+var_5D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B77B  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test edi edi +
jz loc_41247B  +
cmp [edi] ebx +
jnz loc_41247B  +
push 18h  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_41246A  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
test ecx ecx +
jnz loc_41242E  +
mov eax (offset asc_4696CC+2) +
jmp loc_412438  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_412438  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_54] +
call sub_411E50  +
lea eax [ebp+var_20] +
mov dword ptr [esi+4] 0 +
push eax  +
mov ebx 1 +
mov dword ptr [esi] offset off_4626EC +
call sub_43AC38  +
add esp 4 +
movdqu xmm0 qword ptr [eax] +
movdqu qword ptr [esi+8] xmm0 +
jmp loc_41246C  +
xor esi esi +
mov [edi] esi +
test bl 1 +
jz loc_41247B  +
lea ecx [ebp+var_54] +
call sub_411F10  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
mov eax [ebp+arg_0] +
movzx eax al +
push eax  +
call sub_43ACA4  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_4124FA  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_43ACA4  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_4124E2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
mov eax [ebp+arg_0] +
movzx eax al +
push eax  +
call sub_43ADA3  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_41256A  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_43ADA3  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_412552  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_8]  +
call loc_4425D0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_C]  +
call loc_4425D0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_4626EC +
test eax eax +
jle loc_4125FD  +
push dword ptr [esi+0Ch]  +
call sub_4407E4  +
jmp loc_412607  +
jns loc_41260A  +
push dword ptr [esi+0Ch]  +
call sub_440842  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi] offset off_4626B0 +
test [ebp+arg_0] 1 +
jz loc_41262A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ecx+4] +
push dword ptr [ecx]  +
mov ecx eax +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
mov edx [eax] +
call dword ptr [edx+8]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B7B0  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_30] 0 +
mov [ebp+var_4] 0 +
cmp [ebp+arg_1C] 0 +
jz loc_4126BF  +
push 2  +
push offset asc_4696D0  +
lea ecx [ebp+arg_C] +
call loc_410500  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_412640  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+arg_C] +
mov byte ptr [ebp+var_4] 1 +
call loc_410440  +
cmp [ebp+var_18] 10h +
jb loc_4126ED  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov edx [ebp+arg_20] +
cmp edx 10h +
jnb loc_41271F  +
mov eax [ebp+arg_1C] +
inc eax  +
jz loc_412724  +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push esi  +
call loc_43F850  +
mov edx [ebp+arg_20] +
add esp 0Ch +
jmp loc_412724  +
mov ecx [ebp+arg_C] +
mov [esi] ecx +
mov ecx [ebp+arg_1C] +
mov eax esi +
mov [esi+10h] ecx +
mov [esi+14h] edx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45B7E8  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax esp +
mov [esp+34h+var_14] eax +
push esi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+3Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_8] +
sub esp 18h +
mov ecx esp +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
push [ebp+arg_4]  +
lea eax [esp+64h+var_38] +
push [ebp+arg_0]  +
push eax  +
call sub_412670  +
add esp 24h +
mov [esp+48h+var_10] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_4127CD  +
mov eax [eax] +
mov [esp+48h+var_3C] eax +
mov ecx esi +
lea eax [esp+48h+var_3C] +
push eax  +
call sub_440606  +
cmp [esp+48h+var_24] 10h +
mov dword ptr [esi] offset off_4626A4 +
jb loc_4127F6  +
push [esp+48h+var_38]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+arg_0] +
mov eax esi +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [esi] offset off_462738 +
mov [esi+10h] ecx +
mov ecx [esp+48h+var_18] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [esp+40h+var_20] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45B818  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_474390 +
xor eax esp +
mov [esp+30h+var_14] eax +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+3Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [ebp+arg_8] +
mov [esp+3Ch+var_18] 0Fh +
mov [esp+3Ch+var_1C] 0 +
mov byte ptr [esp+3Ch+var_2C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_412889  +
xor ecx ecx +
jmp loc_412899  +
mov ecx edx +
lea edi [ecx+1] +
mov edi edi +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_412890  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [esp+44h+var_2C] +
call loc_4109B0  +
lea eax [esp+44h+var_34] +
mov [esp+44h+var_C] 0 +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_412750  +
cmp [esp+44h+var_20] 10h +
jb loc_4128D1  +
push [esp+44h+var_34]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov dword ptr [esi] offset off_462744 +
mov ecx [esp+44h+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [esp+38h+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 18h +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
and ecx eax +
jz loc_41292F  +
cmp byte ptr [ebp+0Ch] 0 +
jnz loc_412935  +
test cl 4 +
jnz loc_41293E  +
test cl 2 +
lea ecx [esp+4] +
jnz loc_41296A  +
jmp loc_412992  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_443DCE  +
push offset aIos_baseBadbit  +
push offset off_475868  +
push 1  +
lea ecx [esp+10h] +
call sub_412830  +
push offset unk_47218C  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4627A4 +
push eax  +
call sub_443DCE  +
push offset aIos_baseFailbi  +
push offset off_475868  +
push 1  +
call sub_412830  +
push offset unk_47218C  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4627A4 +
push eax  +
call sub_443DCE  +
push offset aIos_baseEofbit  +
push offset off_475868  +
push 1  +
call sub_412830  +
push offset unk_47218C  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4627A4 +
push eax  +
call sub_443DCE  +
mov eax [ecx+30h] +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [eax] +
mov [esi] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B859  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
mov eax [edi+30h] +
mov ebx [ebp+arg_0] +
mov ecx [eax] +
mov [ebx] ecx +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov esi [edi+30h] +
mov [ebp+var_10] 1 +
mov ecx [esi] +
cmp ecx [eax] +
jz loc_412A5C  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_412A50  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov [esi] ecx +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov esi [edi+2Ch] +
test esi esi +
jz loc_412A77  +
push dword ptr [esi+4]  +
mov ecx [esi+8] +
push edi  +
push 1  +
call ecx  +
mov esi [esi] +
add esp 0Ch +
test esi esi +
jnz loc_412A63  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_43AAFE  +
pop ecx  +
retn   +
***
mov esi ecx +
push edi  +
push 0  +
push 0  +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 201h +
mov dword ptr [esi+18h] 6 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
call loc_412900  +
push 4  +
call sub_440048  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_412B17  +
push 1  +
call sub_43A89D  +
mov [edi] eax +
add esp 4 +
mov [esi+30h] edi +
pop edi  +
pop esi  +
pop ecx  +
retn   +
pop edi  +
mov dword ptr [esi+30h] 0 +
pop esi  +
pop ecx  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+2Ch] +
test esi esi +
jz loc_412B56  +
push ebx  +
mov ebx [ebp+arg_0] +
push dword ptr [esi+4]  +
mov eax [esi+8] +
push edi  +
push ebx  +
call eax  +
mov esi [esi] +
add esp 0Ch +
test esi esi +
jnz loc_412B42  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_440646  +
mov dword ptr [edi] offset off_462738 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push esi  +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_412C14  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_412C40  +
call ds:GetLastError  +
test eax eax +
jle locret_412C42  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B88B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_412CBA  +
push offset asc_46971C  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_412CBC  +
push 8007000Eh  +
call sub_45B490  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_412CD3  +
push 8007000Eh  +
call sub_45B490  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_412D45  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jnz loc_412D3F  +
test esi esi +
jz loc_412D3F  +
mov eax [esi] +
test eax eax +
jz loc_412D1F  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_412D36  +
push eax  +
call sub_440842  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
call ds:VariantClear  +
retn   +
***
mov dword ptr [ecx] offset off_463FF0 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_463FF0 +
jz loc_412D8B  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B8C0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor esi esi +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
mov ebx [ebp+arg_4] +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_412E14  +
mov eax [ecx] +
lea edx [ebp+arg_4] +
push edx  +
call dword ptr [eax+14h]  +
mov byte ptr [ebp+var_4] 1 +
mov esi [eax] +
mov [ebp+var_10] esi +
test esi esi +
jz loc_412DF5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_412E14  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov ecx [ebp+arg_4] +
xor edx edx +
test al al +
cmovnz ecx edx +
mov [ebp+arg_4] ecx +
mov edi [ebp+arg_0] +
mov eax [ebx+0Ch] +
mov [edi+0Ch] eax +
mov eax [ebx+10h] +
mov [edi+10h] eax +
mov eax [ebx+8] +
mov [edi+8] eax +
mov ecx [edi+4] +
test ecx ecx +
jz loc_412E42  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_412E42  +
mov dword ptr [edi+4] 0 +
mov [edi+4] esi +
test esi esi +
jz loc_412E50  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_412E62  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
mov dword ptr [ecx] offset off_4699A4 +
jmp sub_44067A  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4699A4 +
call sub_44067A  +
test [ebp+arg_0] 1 +
jz loc_412EC0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45B8E8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 28h  +
push offset aDayOfMonthValu  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
mov ecx esi +
cmovnb eax [ebp+var_28] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_2C] +
push eax  +
call sub_440606  +
cmp [ebp+var_14] 10h +
mov dword ptr [esi] offset off_463860 +
jb loc_412F53  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov dword ptr [esi] offset off_469990 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B8E8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 27h  +
push offset aYearIsOutOfVal  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
mov ecx esi +
cmovnb eax [ebp+var_28] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_2C] +
push eax  +
call sub_440606  +
cmp [ebp+var_14] 10h +
mov dword ptr [esi] offset off_463860 +
jb loc_413003  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov dword ptr [esi] offset off_469A38 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B8E8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 22h  +
push offset aMonthNumberIsO  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
mov ecx esi +
cmovnb eax [ebp+var_28] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_2C] +
push eax  +
call sub_440606  +
cmp [ebp+var_14] 10h +
mov dword ptr [esi] offset off_463860 +
jb loc_4130B3  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov dword ptr [esi] offset off_464018 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B920  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ax word ptr [ebp+arg_0] +
lea ecx [ebp+var_34] +
mov si [ebp+arg_8] +
mov word ptr [ebp+var_34] ax +
mov ax word ptr [ebp+arg_4] +
mov word ptr [ebp+var_34+2] ax +
mov [ebp+var_30] si +
call sub_415070  +
push [ebp+arg_4]  +
mov [edi] eax +
push [ebp+arg_0]  +
call sub_415240  +
add esp 8 +
cmp ax si +
jnb loc_413196  +
push 22h  +
push offset aDayOfMonthIsNo  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_4109B0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_2C] +
cmp [ebp+var_18] 10h +
lea ecx [ebp+var_40] +
cmovnb eax [ebp+var_2C] +
mov [ebp+var_34] eax +
lea eax [ebp+var_34] +
push eax  +
call sub_440606  +
mov [ebp+var_40] offset off_469990 +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
call loc_4152B0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45B960  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
call sub_440896  +
add esp 4 +
test eax eax +
jnz loc_41323A  +
lea eax [ebp+var_10] +
mov [ebp+var_10] offset aCouldNotConver +
push eax  +
lea ecx [ebp+var_1C] +
call sub_440606  +
mov [ebp+var_1C] offset off_4626A4 +
lea edx [ebp+var_1C] +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_3C] +
call sub_4192E0  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_68] +
call sub_419330  +
push offset unk_471F84  +
lea eax [ebp+var_68] +
push eax  +
call sub_443DCE  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_415300  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [esi+6Ch] 8 +
jb loc_413284  +
push dword ptr [esi+58h]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+6Ch] 7 +
mov dword ptr [esi+68h] 0 +
mov [esi+58h] ax +
cmp dword ptr [esi+50h] 10h +
jb loc_4132A9  +
push dword ptr [esi+3Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+50h] 0Fh +
mov dword ptr [esi+4Ch] 0 +
mov byte ptr [esi+3Ch] 0 +
cmp dword ptr [esi+18h] 8 +
jb loc_4132CC  +
push dword ptr [esi+4]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+18h] 7 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+4] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BA10  +
mov eax large fs:0 +
push eax  +
sub esp 174h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
xor eax eax +
mov dword ptr [esi] 0 +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] eax +
mov word ptr [ebp+var_40] ax +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
call sub_40FFD0  +
test al al +
jnz loc_41336C  +
mov dword ptr [esi] 47h +
xor bl bl +
jmp loc_413889  +
lea ecx [ebp+var_40] +
call sub_410050  +
test al al +
jnz loc_413385  +
mov dword ptr [esi] 48h +
xor bl bl +
jmp loc_413889  +
push ecx  +
lea edx [ebp+arg_0] +
lea ecx [ebp+var_70] +
call sub_415320  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
push ecx  +
mov edx eax +
lea ecx [ebp+var_88] +
call sub_4114B0  +
push offset unk_469850  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_28] +
call sub_411410  +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 5 +
push ecx  +
mov edx eax +
lea ecx [ebp+var_A0] +
call sub_4114B0  +
add esp 10h +
cmp [ebp+var_14] 8 +
jb loc_4133E2  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
cmp [ebp+var_74] 8 +
jb loc_41340A  +
push [ebp+var_88]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_74] 7 +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
mov byte ptr [ebp+var_4] 9 +
cmp [ebp+var_5C] 8 +
jb loc_413436  +
push [ebp+var_70]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_5C] 7 +
mov word ptr [ebp+var_70] ax +
lea eax [ebp+var_B8] +
push eax  +
mov [ebp+var_60] 0 +
call sub_436BCD  +
add esp 4 +
lea eax [ebp+var_B8] +
mov byte ptr [ebp+var_4] 0Ah +
push eax  +
lea ecx [ebp+var_17C] +
call sub_437FB6  +
mov byte ptr [ebp+var_4] 0Bh +
mov eax [ebp+var_17C] +
cmp dword ptr [eax] 6 +
jl loc_4135AE  +
xor eax eax +
mov [ebp+ExitCode] 0 +
mov [ebp+Parameter] esi +
mov [ebp+var_148] 7 +
mov [ebp+var_14C] 0 +
mov word ptr [ebp+var_15C] ax +
mov [ebp+var_110] 0Fh +
mov [ebp+var_114] eax +
mov byte ptr [ebp+var_124] al +
mov [ebp+var_F4] 7 +
mov [ebp+var_F8] eax +
mov word ptr [ebp+var_108] ax +
push eax  +
mov byte ptr [ebp+var_4] 0Ch +
lea ecx [ebp+var_124] +
push (offset asc_4696CC+2)  +
mov [ebp+var_10C] eax +
call loc_4109B0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_15C] +
call loc_410ED0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+var_A0] +
push eax  +
lea ecx [ebp+var_108] +
call loc_410ED0  +
lea eax [ebp+ppv] +
push eax  +
push 0  +
lea eax [ebp+Parameter] +
push eax  +
push offset StartAddress  +
push 0  +
push 0  +
call ds:CreateThread  +
mov esi eax +
test esi esi +
jz loc_41359C  +
push 2710h  +
push esi  +
call ds:WaitForSingleObject  +
cmp eax 102h +
jnz loc_413583  +
push 1  +
push esi  +
call ds:TerminateThread  +
push esi  +
call ds:CloseHandle  +
cmp [ebp+ExitCode] 1 +
jnz loc_41359C  +
lea ecx [ebp+Parameter] +
mov bl 1 +
call sub_413270  +
jmp loc_413814  +
lea eax [ebp+ExitCode] +
push eax  +
push esi  +
call ds:GetExitCodeThread  +
test eax eax +
jnz loc_413561  +
push esi  +
call ds:CloseHandle  +
lea ecx [ebp+Parameter] +
xor bl bl +
call sub_413270  +
jmp loc_413814  +
push 0  +
call ds:CoInitialize  +
test eax eax +
js loc_41380C  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
test eax eax +
jns loc_4135EE  +
mov dword ptr [esi] 3Eh +
call ds:CoUninitialize  +
jmp loc_413812  +
push ecx  +
lea edx [ebp+arg_0] +
lea ecx [ebp+var_D0] +
call sub_415320  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 0Dh +
push ecx  +
mov edx eax +
lea ecx [ebp+var_E8] +
call sub_4114B0  +
push offset unk_469850  +
mov edx eax +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_88] +
call sub_411410  +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 0Fh +
push ecx  +
mov edx eax +
lea ecx [ebp+var_70] +
call sub_4114B0  +
push offset a_job  +
mov edx eax +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_28] +
call sub_411410  +
add esp 14h +
lea ecx [ebp+var_70] +
call sub_4102E0  +
lea ecx [ebp+var_88] +
call sub_4102E0  +
lea ecx [ebp+var_E8] +
call sub_4102E0  +
lea ecx [ebp+var_D0] +
mov byte ptr [ebp+var_4] 15h +
call sub_4102E0  +
mov eax [ebp+ppv] +
lea edx [ebp+ExitCode] +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
test eax eax +
jns loc_4136B3  +
mov eax [ebp+ppv] +
mov dword ptr [esi] 3Dh +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
xor bl bl +
jmp loc_4137F9  +
mov eax [ebp+ExitCode] +
lea edx [ebp+var_164] +
push edx  +
lea edx [ebp+pv] +
mov [ebp+var_164] 0 +
push edx  +
mov ecx [eax] +
push 5  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
js loc_41377E  +
mov esi [ebp+var_164] +
test esi esi +
jz loc_41377E  +
nop   +
mov ebx [ebp+pv] +
lea eax [ebp+var_28] +
dec esi  +
cmp [ebp+var_14] 8 +
mov [ebp+var_164] esi +
cmovnb eax [ebp+var_28] +
mov edi [ebx+esi*4] +
mov ecx edi +
lea ecx [ecx+0] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_413736  +
test dx dx +
jz loc_413732  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_413736  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_413710  +
xor eax eax +
jmp loc_41373B  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4137A6  +
mov ebx ds:CoTaskMemFree +
push edi  +
call ebx  +
mov esi [ebp+var_164] +
test esi esi +
jnz loc_4136F0  +
push [ebp+pv]  +
call ebx  +
mov eax [ebp+ExitCode] +
lea edx [ebp+var_164] +
push edx  +
lea edx [ebp+pv] +
push edx  +
mov ecx [eax] +
push 5  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jns loc_4136E1  +
mov eax [ebp+ppv] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+ExitCode] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
lea ecx [ebp+var_28] +
call sub_4102E0  +
jmp loc_413812  +
mov edi ds:CoTaskMemFree +
test esi esi +
jz loc_4137CD  +
mov eax [ebx+esi*4] +
dec esi  +
push eax  +
mov [ebp+var_164] esi +
call edi  +
mov esi [ebp+var_164] +
mov ebx [ebp+pv] +
test esi esi +
jnz loc_4137B0  +
push dword ptr [ebx]  +
call edi  +
push [ebp+pv]  +
call edi  +
mov eax [ebp+ppv] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+ExitCode] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
mov bl 1 +
cmp [ebp+var_14] 8 +
jb loc_413814  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
jmp loc_413814  +
mov dword ptr [esi] 3Eh +
xor bl bl +
lea ecx [ebp+var_17C] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_438033  +
cmp [ebp+var_A4] 10h +
jb loc_41383A  +
push [ebp+var_B8]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_8C] 8 +
mov [ebp+var_A4] 0Fh +
mov [ebp+var_A8] 0 +
mov byte ptr [ebp+var_B8] 0 +
jb loc_41386C  +
push [ebp+var_A0]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_8C] 7 +
mov [ebp+var_90] 0 +
mov word ptr [ebp+var_A0] ax +
cmp [ebp+var_2C] 8 +
jb loc_41389A  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_2C] 7 +
cmp [ebp+var_44] 8 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
jb loc_4138BF  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_44] 7 +
cmp [ebp+arg_14] 8 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
jb loc_4138E4  +
push [ebp+arg_0]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx] offset off_4696A0 +
retn   +
***
and esp 0FFFFFFF0h +
push 0FFFFFFFFh  +
push offset loc_45BA73  +
mov eax large fs:0 +
push eax  +
sub esp 9Ch +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0B4h+var_C] +
mov large fs:0 eax +
push 0  +
push 0  +
call ds:CoInitializeEx  +
mov esi eax +
push esi  +
sub esp 18h +
mov ecx esp +
push 30h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aIstaskpresentf  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629BC  +
call sub_438A98  +
add esp 20h +
test esi esi +
jns loc_4139A2  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov dword ptr [eax] 3Eh +
jmp loc_413D20  +
push 0  +
push 0  +
push 0  +
push 3  +
push 6  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
call ds:CoInitializeSecurity  +
push eax  +
sub esp 18h +
mov ecx esp +
push 38h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aIstaskpresen_0  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629BC  +
call sub_438A98  +
add esp 20h +
mov [esp+0C4h+ppv] 0 +
lea eax [esp+0C4h+ppv] +
push eax  +
push offset stru_4692B8  +
push 1  +
push 0  +
push offset stru_4694C8  +
call ds:CoCreateInstance  +
test eax eax +
jns loc_413A26  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov dword ptr [eax] 3Eh +
call ds:CoUninitialize  +
jmp loc_413D20  +
mov esi ds:VariantInit +
lea eax [esp+0C4h+pvarg] +
push eax  +
call esi  +
mov [esp+0C4h+var_14] 0 +
lea eax [esp+0C4h+var_70] +
movdqa xmm0 oword ptr [esp+0C4h+pvarg.anonymous_0] +
push eax  +
movdqa oword ptr [esp+0C8h+var_50] xmm0 +
call esi  +
movdqa xmm0 oword ptr [esp+0C4h+var_70] +
lea eax [esp+0C4h+var_80] +
push eax  +
movdqa oword ptr [esp+0C8h+var_40] xmm0 +
call esi  +
movdqa xmm0 oword ptr [esp+0C4h+var_80] +
lea eax [esp+0C4h+var_90] +
push eax  +
movdqa oword ptr [esp+0C8h+var_30] xmm0 +
call esi  +
mov byte ptr [esp+0C4h+var_14] 3 +
sub esp 10h +
movdqa xmm0 oword ptr [esp+0D4h+var_50] +
mov eax esp +
mov ecx [esp+0D4h+ppv] +
sub esp 10h +
movdqu qword ptr [eax] xmm0 +
mov eax esp +
mov edx [ecx] +
movdqa xmm0 oword ptr [esp+0E4h+var_40] +
sub esp 10h +
movdqu qword ptr [eax] xmm0 +
mov eax esp +
sub esp 10h +
movdqa xmm0 oword ptr [esp+104h+var_30] +
movdqu qword ptr [eax] xmm0 +
mov eax esp +
movdqu xmm0 [esp+104h+var_90] +
push ecx  +
movdqu qword ptr [eax] xmm0 +
call dword ptr [edx+28h]  +
mov edi ds:VariantClear +
mov esi eax +
lea eax [esp+108h+var_D4] +
push eax  +
call edi  +
lea eax [esp+108h+var_C4] +
push eax  +
call edi  +
lea eax [esp+108h+var_B4] +
push eax  +
call edi  +
lea eax [esp+108h+var_A4] +
mov dword ptr [esp+108h+pvarg.anonymous_0+8] 0FFFFFFFFh +
push eax  +
call edi  +
test esi esi +
jns loc_413B27  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov dword ptr [eax] 3Eh +
mov eax [esp+108h+var_F0] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
jmp loc_413D20  +
push ecx  +
lea ecx [esp+10Ch+var_E8] +
mov [esp+10Ch+var_DC] 0 +
call sub_412C50  +
mov dword ptr [esp+108h+pvarg.anonymous_0+8] 4 +
mov eax [eax] +
test eax eax +
jz loc_413B4E  +
mov edx [eax] +
jmp loc_413B50  +
xor edx edx +
mov eax [esp+108h+var_F0] +
lea esi [esp+108h+var_DC] +
push esi  +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+1Ch]  +
lea ecx [esp+114h+var_F4] +
mov dword ptr [esp+114h+var_70+0Ch] 0FFFFFFFFh +
mov esi eax +
call sub_412CF0  +
test esi esi +
jns loc_413B9A  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov dword ptr [eax] 3Dh +
mov eax dword ptr [esp+114h+var_FC] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
jmp loc_413D20  +
mov eax dword ptr [esp+114h+var_FC] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [esp+118h+var_EC] +
lea edx [esp+118h+var_FC] +
push edx  +
mov dword ptr [esp+11Ch+var_FC] 0 +
push 0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov ecx dword ptr [esp+124h+var_FC+4] +
mov esi eax +
push ecx  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test esi esi +
jns loc_413BE3  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov dword ptr [eax] 3Dh +
call ds:CoUninitialize  +
jmp loc_413D20  +
mov eax [esp+128h+var_10C] +
lea edx [esp+128h+var_100] +
mov [esp+128h+var_100] 0 +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+1Ch]  +
mov eax [esp+130h+var_108] +
test eax eax +
jnz loc_413C17  +
mov eax [esp+130h+var_114] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
jmp loc_413D20  +
xor edi edi +
test eax eax +
jle loc_413CF3  +
mov eax 3 +
mov [esp+130h+var_10C] 0 +
inc edi  +
mov word ptr [esp+130h+var_FC] ax +
mov [esp+130h+var_F4] edi +
mov dword ptr [esp+130h+var_80] 5 +
lea eax [esp+130h+var_10C] +
mov ecx [esp+130h+var_114] +
movdqu xmm0 [esp+130h+var_FC] +
push eax  +
sub esp 10h +
mov edx [ecx] +
mov eax esp +
push ecx  +
movdqu qword ptr [eax] xmm0 +
call dword ptr [edx+20h]  +
mov esi eax +
mov [esp+148h+var_98] 0FFFFFFFFh +
lea eax [esp+148h+var_114] +
push eax  +
call ds:VariantClear  +
test esi esi +
js loc_413CE9  +
mov eax [esp+148h+var_124] +
lea edx [esp+148h+var_118] +
mov [esp+148h+var_118] 0 +
push edx  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+1Ch]  +
test eax eax +
js loc_413CDF  +
mov eax [ebp+arg_0] +
add eax 58h +
cmp dword ptr [eax+14h] 8 +
jb loc_413CA6  +
mov eax [eax] +
mov esi [esp+150h+var_120] +
mov ecx esi +
lea esp [esp+0] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_413CD6  +
test dx dx +
jz loc_413CD2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_413CD6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_413CB0  +
xor eax eax +
jmp loc_413CDB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_413D39  +
mov eax [esp+150h+var_12C] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
cmp edi [esp+154h+var_12C] +
jl loc_413C21  +
mov eax [esp+154h+var_138] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
sub esp 18h +
mov ecx esp +
push offset aIsTaskPresentT  +
call sub_4100D0  +
push ds:dword_4629BC  +
call sub_438BF5  +
add esp 1Ch +
xor eax eax +
mov ecx [esp+158h+var_B0] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push esi  +
call ds:SysFreeString  +
mov eax [esp+150h+var_12C] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [esp+154h+var_138] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
sub esp 18h +
mov ecx esp +
push offset aIsTaskPresen_0  +
call sub_4100D0  +
push ds:dword_4629BC  +
call sub_438BF5  +
add esp 1Ch +
mov eax 1 +
mov ecx [esp+158h+var_B0] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+14h] 0Fh +
mov eax ecx +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi] 0 +
jnz loc_413E0A  +
xor edx edx +
push edx  +
push esi  +
call loc_4109B0  +
pop esi  +
pop ebp  +
retn 4  +
mov edx esi +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_413E10  +
sub edx edi +
pop edi  +
push edx  +
push esi  +
call loc_4109B0  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
push edi  +
cmp dword ptr [edx+14h] 10h +
mov edi [edx+10h] +
jb loc_413E43  +
mov edx [edx] +
cmp dword ptr [ecx+14h] 10h +
mov esi [ecx+10h] +
jb loc_413E4E  +
mov ecx [ecx] +
cmp esi edi +
mov eax edi +
cmovb eax esi +
push eax  +
push edx  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_413E78  +
cmp esi edi +
jnb loc_413E71  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
cmp esi edi +
setnz al  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_413E92  +
push eax  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_4627C8 +
retn 4  +
***
xor edx edx +
retn   +
***
retn   +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jnz loc_413F11  +
or eax eax +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_414022  +
mov edi [ebp+arg_4] +
jg loc_413F61  +
test edi edi +
jz loc_414022  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_414660  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_413FD4  +
jg loc_413F88  +
test esi esi +
jz loc_413FD4  +
cmp ebx eax +
jg loc_413F98  +
jl loc_413F92  +
cmp edi esi +
jnb loc_413F98  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_413FB1  +
mov ecx [esp+20h+var_C] +
push esi  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_4425D0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+2Ch] +
sub [eax] esi +
mov eax [ecx+1Ch] +
add [eax] esi +
jmp loc_413FFF  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_414011  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
inc ecx  +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] ecx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov ecx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_413F71  +
jl loc_414011  +
test edi edi +
jnz loc_413F71  +
mov edx [esp+20h+var_14] +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_414134  +
mov edi [ebp+arg_4] +
jg loc_414071  +
test edi edi +
jz loc_414134  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_414680  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_4140E4  +
jg loc_414098  +
test esi esi +
jz loc_4140E4  +
cmp ebx eax +
jg loc_4140A8  +
jl loc_4140A2  +
cmp edi esi +
jnb loc_4140A8  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_4140C1  +
mov ecx [esp+20h+var_C] +
push esi  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_4425D0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+30h] +
sub [eax] esi +
mov eax [ecx+20h] +
add [eax] esi +
jmp loc_414111  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax byte ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_414123  +
mov ecx [esp+24h+var_10] +
inc esi  +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_414081  +
jl loc_414123  +
test edi edi +
jnz loc_414081  +
mov edx [esp+24h+var_18] +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
retn 0Ch  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BABC  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_8] 0 +
mov [ebp+var_10] 0 +
jz loc_414223  +
mov dword ptr [esi] offset unk_469A60 +
mov dword ptr [esi+8] offset off_4627B8 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [esi] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_462808 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call sub_4145A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_462808 +
mov eax [ecx-8] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45BAE8  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+24h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+38h] 0 +
jz loc_414343  +
push esi  +
lea ecx [esp+28h+var_18] +
call sub_414800  +
mov [esp+24h+var_4] 0 +
cmp byte ptr [esp+24h+var_14] 0 +
jz loc_414313  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
cmp eax 0FFFFFFFFh +
jnz loc_414313  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41430B  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [esp+2Ch+var_C] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_41432D  +
mov ecx [esp+2Ch+var_20] +
call sub_414D50  +
mov ecx [esp+2Ch+var_20] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_414343  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [esp+2Ch+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_41437A  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_41437A  +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edx [ebp+arg_4] +
sub esp 8 +
mov edx [edx] +
push esi  +
mov esi ecx +
lea ecx [ebp+var_8] +
call loc_415120  +
mov eax [ebp+arg_0] +
mov ecx [esi+8] +
pop esi  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_4] +
sub esp 8 +
mov edx [edx] +
push esi  +
mov esi ecx +
lea ecx [ebp+var_8] +
call loc_415120  +
mov ecx [esi+8] +
mov eax [ebp+arg_0] +
neg ecx  +
pop esi  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_4627C8 +
test edi edi +
jz loc_414414  +
mov ecx [edi] +
test ecx ecx +
jz loc_41440B  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41440B  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push edi  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_414423  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-8] +
mov eax [esi] +
lea edx [esi+8] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_462808 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_414472  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4696A0 +
jz loc_41449B  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_41451F  +
cmp dword ptr [esi+14h] 10h +
jb loc_4144CE  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp dword ptr [edi+14h] 10h +
jnb loc_4144F8  +
mov eax [edi+10h] +
inc eax  +
jz loc_414502  +
push eax  +
push edi  +
push esi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_414502  +
mov eax [edi] +
mov [esi] eax +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ecx+10h] +
mov edx [ebp+8] +
cmp eax edx +
jb loc_414589  +
push esi  +
mov esi [ebp+0Ch] +
sub eax edx +
cmp eax esi +
push edi  +
cmovb esi eax +
cmp dword ptr [ecx+14h] 10h +
jb loc_414551  +
mov ecx [ecx] +
mov edi [ebp+14h] +
cmp esi edi +
mov eax edi +
cmovb eax esi +
push eax  +
push dword ptr [ebp+10h]  +
lea eax [ecx+edx] +
push eax  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_414583  +
cmp esi edi +
jnb loc_41457C  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
xor eax eax +
cmp esi edi +
setnz al  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push 0FFFFFFFFh  +
push offset loc_45BB18  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_412AA0  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+arg_0] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_414F50  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [ebp+arg_0] +
mov edi eax +
test ecx ecx +
jz loc_414614  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_414614  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [edi] +
mov ecx edi +
push 20h  +
mov eax [eax+20h] +
call eax  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] al +
jnz loc_414638  +
mov eax [esi+0Ch] +
mov ecx esi +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
cmp [ebp+arg_4] 0 +
jz loc_414647  +
push esi  +
call sub_43AAAD  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_41466F  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41468F  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ebp+arg_4] +
sub esp 8 +
mov edx [eax] +
cmp edx 80000000h +
jz loc_414711  +
cmp edx 7FFFFFFFh +
jz loc_414711  +
cmp edx 7FFFFFFEh +
jz loc_414711  +
mov eax [ecx] +
test eax eax +
jz loc_4146E2  +
cmp eax 0FFFFFFFFh +
jz loc_4146E2  +
cmp eax 0FFFFFFFEh +
jz loc_4146E7  +
mov ecx [ebp+arg_0] +
add eax edx +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
cmp eax 0FFFFFFFEh +
jnz loc_4146F9  +
mov ecx [ebp+arg_0] +
mov eax 0FFFFFFFEh +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
test eax eax +
jz loc_414704  +
cmp eax 0FFFFFFFFh +
jz loc_414704  +
add eax edx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ecx] +
lea ecx [ebp+var_4] +
mov [ebp+var_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_8] +
mov [ebp+arg_4] edx +
push eax  +
call sub_4155A0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
lea eax [ebp-30h] +
mov esi ecx +
push edi  +
push eax  +
call sub_440B35  +
add esp 4 +
lea edx [ebp-28h] +
lea ecx [ebp-30h] +
call sub_4131C0  +
mov edx eax +
movzx edi word ptr [edx+0Ch] +
lea eax [edi+1] +
cmp eax 2 +
jl loc_4147D1  +
cmp edi 1Fh +
ja loc_4147D7  +
mov ax [edx+10h] +
inc ax  +
movzx ecx ax +
lea eax [ecx+1] +
cmp eax 2 +
jl loc_4147DD  +
cmp ecx 0Ch +
ja loc_4147E7  +
mov eax 76Ch +
add ax [edx+14h] +
movzx edx ax +
lea eax [edx+1] +
cmp eax 579h +
jl loc_4147F1  +
mov eax 2710h +
cmp dx ax +
ja loc_4147F7  +
mov [esi+2] cx +
mov eax esi +
mov ecx [ebp-4] +
mov [esi+4] di +
xor ecx ebp +
pop edi  +
mov [esi] dx +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push 0  +
push ecx  +
push 1  +
call loc_414EA0  +
push 1  +
push ecx  +
push 1  +
call loc_414EA0  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414E30  +
push 0FFFFFFFFh  +
push offset loc_45BB48  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_414841  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_414865  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_414865  +
cmp ecx esi +
jz loc_414865  +
call sub_414290  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_43AC2A  +
test al al +
jnz loc_4148A3  +
mov ecx [esi] +
call sub_414D50  +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_4148B8  +
mov eax [ecx] +
pop esi  +
jmp dword ptr [eax+8]  +
pop esi  +
retn   +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+18h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+1Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
mov edx [ecx+8] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41495C  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_414962  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_4149BC  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4149C2  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+14h] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_414A1C  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_414A22  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_4628F0 +
call sub_440842  +
push dword ptr [esi+10h]  +
call sub_440842  +
push dword ptr [esi+14h]  +
call sub_440842  +
add esp 0Ch +
mov dword ptr [esi] offset off_4626B0 +
test [ebp+arg_0] 1 +
jz loc_414A7C  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jz loc_414B43  +
cmp edi 0FFFFFFFEh +
ja loc_414B4D  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_414AD4  +
push dword ptr [esi+10h]  +
push edi  +
call sub_410D80  +
test edi edi +
jz loc_414B3B  +
cmp edi 1 +
jnz loc_414B01  +
cmp dword ptr [esi+14h] 10h +
jb loc_414AF8  +
mov ecx [esi] +
mov al [ebp+0Ch] +
mov [ecx] al +
jmp loc_414B1E  +
test edi edi +
jnz loc_414AC0  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_414AED  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov al [ebp+0Ch] +
mov ecx esi +
mov [ecx] al +
jmp loc_414B1E  +
cmp dword ptr [esi+14h] 10h +
jb loc_414B0B  +
mov ecx [esi] +
jmp loc_414B0D  +
mov ecx esi +
mov eax [ebp+0Ch] +
push edi  +
movsx eax al +
push eax  +
push ecx  +
call sub_442C20  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_414B35  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push offset aStringTooLong  +
call sub_43A638  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx ebx +
jb loc_414C07  +
mov edi [ebp+0Ch] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax edi +
jbe loc_414C11  +
test edi edi +
jz loc_414BFE  +
lea eax [ecx+edi] +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+8] eax +
call loc_410AE0  +
test al al +
jz loc_414BFE  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_414BAA  +
mov edx [esi] +
jmp loc_414BAC  +
mov edx esi +
cmp eax 10h +
jb loc_414BB5  +
mov ecx [esi] +
jmp loc_414BB7  +
mov ecx esi +
mov eax [esi+10h] +
sub eax ebx +
jz loc_414BD1  +
push eax  +
lea eax [edx+ebx] +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_43F850  +
add esp 0Ch +
push dword ptr [ebp+10h]  +
mov ecx esi +
push edi  +
push ebx  +
call sub_414C20  +
cmp dword ptr [esi+14h] 10h +
mov ecx [ebp+8] +
mov [esi+10h] ecx +
jb loc_414BF8  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
mov eax [ebp+arg_4] +
mov edx ecx +
cmp eax 1 +
jnz loc_414C42  +
cmp dword ptr [edx+14h] 10h +
jb loc_414C35  +
mov edx [edx] +
mov eax [ebp+arg_0] +
mov cl [ebp+arg_8] +
mov [edx+eax] cl +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edx+14h] 10h +
jb loc_414C4A  +
mov edx [edx] +
push eax  +
mov eax dword ptr [ebp+arg_8] +
movsx eax al +
push eax  +
mov eax [ebp+arg_0] +
add eax edx +
push eax  +
call sub_442C20  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45BB78  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+var_10] +
push eax  +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_414F50  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [ebp+var_10] +
mov esi eax +
test ecx ecx +
jz loc_414CCE  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_414CCE  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_0]  +
mov eax [eax+20h] +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+4] +
mov [ecx+0Ch] eax +
lea edx [ecx+8] +
lea eax [ecx+14h] +
mov [ecx+10h] edx +
mov [ecx+1Ch] eax +
lea eax [ecx+18h] +
mov [ecx+20h] eax +
lea eax [ecx+24h] +
mov [ecx+2Ch] eax +
lea eax [ecx+28h] +
mov [ecx+30h] eax +
mov dword ptr [edx] 0 +
mov eax [ecx+20h] +
mov dword ptr [eax] 0 +
mov eax [ecx+30h] +
mov dword ptr [eax] 0 +
mov eax [ecx+0Ch] +
mov dword ptr [eax] 0 +
mov eax [ecx+1Ch] +
mov dword ptr [eax] 0 +
mov eax [ecx+2Ch] +
mov dword ptr [eax] 0 +
retn   +
***
push 0FFFFFFFFh  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45BBC8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+18h] +
mov large fs:0 eax +
lea ecx [esp+8] +
call sub_412ED0  +
mov ecx eax +
mov dword ptr [esp+20h] 0 +
call loc_4152B0  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45BC00  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+60h] +
mov large fs:0 eax +
lea ecx [esp+4] +
call sub_412F80  +
mov edx eax +
mov dword ptr [esp+68h] 0 +
lea ecx [esp+10h] +
call sub_4198B0  +
mov edx eax +
mov byte ptr [esp+68h] 1 +
lea ecx [esp+30h] +
call sub_419900  +
push offset unk_471F20  +
lea eax [esp+34h] +
push eax  +
call sub_443DCE  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45BBC8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+18h] +
mov large fs:0 eax +
lea ecx [esp+8] +
call sub_413030  +
push eax  +
mov dword ptr [esp+24h] 0 +
call loc_415640  +
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+14h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push dword ptr [esi+8]  +
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_476EB4 +
mov ebx dword_47805C +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_414FCB  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_476EB4 edi +
jnz loc_414FBD  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_476EB4 eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_476EB4 +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_414FE1  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41504D  +
jmp loc_414FE3  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_414FF9  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_414FFD  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41504D  +
test ebx ebx +
jz loc_415005  +
mov esi ebx +
jmp loc_41504D  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_4123D0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_415034  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_47805C esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx 0Eh +
push esi  +
push edi  +
movzx esi word ptr [ebx+2] +
mov eax esi +
sub edx eax +
mov eax 2AAAAAABh +
imul  edx +
sar edx 1 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx 12C0h +
movzx ecx ax +
mov ax [ebx] +
sub ax cx +
add ax dx +
movzx edi ax +
lea eax [ecx+ecx*2] +
lea eax ds:0FFFFFFFDh[eax*4] +
add eax esi +
movzx eax ax +
imul ecx eax +
mov eax 66666667h +
add ecx 2 +
imul  ecx +
mov eax 51EB851Fh +
sar edx 1 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
imul  edi +
mov eax 51EB851Fh +
sar edx 7 +
mov esi edx +
add ecx edx +
imul  edi +
shr esi 1Fh +
sar edx 5 +
add esi ecx +
mov eax edx +
shr eax 1Fh +
add eax edx +
sub esi eax +
movzx eax word ptr [ebx+4] +
add esi eax +
imul eax edi +
shr edi 2 +
add esi eax +
lea eax [edi-7D2Dh] +
pop edi  +
add eax esi +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
lea ebx [edx+7D2Ch] +
mov [ebp-8] ecx +
lea edx ds:3[ebx*4] +
mov eax 396B06BDh +
mul  edx +
push esi  +
mov eax edx +
shr eax 0Fh +
mov [ebp-4] eax +
imul eax eax +
push edi  +
shr eax 2 +
sub ebx eax +
mov eax 166DB073h +
lea ecx ds:3[ebx*4] +
mul  ecx +
mov edi edx +
shr edi 7 +
imul eax edi +
shr eax 2 +
sub ebx eax +
mov eax 0D62B80D7h +
lea ecx ds:2[ebx*4] +
add ecx ebx +
mul  ecx +
mov eax 0CCCCCCCDh +
mov esi edx +
shr esi 7 +
imul ecx esi +
add ecx 2 +
mul  ecx +
mov eax 0CCCCCCCDh +
shr edx 2 +
sub ebx edx +
mul  esi +
inc ebx  +
shr edx 3 +
movzx ebx bx +
lea eax [edx+edx*2] +
add edx 0FFFFED40h +
shl eax 2 +
sub esi eax +
imul eax [ebp-4] +
add esi 3 +
movzx ecx si +
add eax edi +
add eax edx +
movzx edx ax +
lea eax [edx+1] +
cmp eax 579h +
jl loc_41520B  +
mov eax 2710h +
cmp dx ax +
ja loc_415211  +
lea eax [ebx+1] +
cmp eax 2 +
jl loc_415217  +
cmp ebx 1Fh +
ja loc_41521D  +
lea eax [ecx+1] +
cmp eax 2 +
jl loc_415223  +
cmp ecx 0Ch +
ja loc_41522D  +
mov eax [ebp-8] +
pop edi  +
pop esi  +
mov [eax+4] bx +
mov [eax] dx +
mov [eax+2] cx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push 0  +
push ecx  +
push 1  +
call loc_414EA0  +
push 1  +
push ecx  +
push 1  +
call loc_414EA0  +
mov eax [ebp+arg_4] +
movzx eax ax +
add eax 0FFFFFFFEh +
cmp eax 9 +
ja loc_415283  +
movzx eax ds:byte_415298[eax] +
jmp ds:off_41528C[eax*4]  +
push [ebp+arg_0]  +
call sub_419230  +
add esp 4 +
test al al +
jz loc_415275  +
mov eax 1Dh +
pop ebp  +
retn   +
mov eax 1Ch +
pop ebp  +
retn   +
mov eax 1Eh +
pop ebp  +
retn   +
mov eax 1Fh +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45BC58  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx ecx +
lea ecx [ebp-2Ch] +
call sub_419270  +
mov edx eax +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-58h] +
call sub_4192C0  +
push offset unk_47200C  +
lea eax [ebp-58h] +
push eax  +
call sub_443DCE  +
push ecx  +
push esi  +
push dword ptr [edx]  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_416590  +
add esp 4 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B629  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
mov [ebp+var_4] eax +
mov eax [ebx+10h] +
mov edi [esi+10h] +
inc eax  +
mov [ebp+var_10] 1 +
cmp edi eax +
ja loc_4153A4  +
cmp [esi+14h] eax +
jz loc_4153A4  +
push 1  +
push eax  +
call loc_410FF0  +
test al al +
jz loc_4153A4  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_41539C  +
mov eax [esi] +
jmp loc_41539E  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call loc_4117A0  +
push 1  +
push offset unk_469850  +
mov ecx esi +
call loc_411870  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov [ebp+var_4] 0 +
cmp byte ptr [edx] 0 +
jnz loc_4153F9  +
xor ecx ecx +
jmp loc_415409  +
mov ecx edx +
lea esi [ecx+1] +
mov edi edi +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_415400  +
sub ecx esi +
push ecx  +
mov ecx [ebp+arg_8] +
push edx  +
push 0  +
call loc_4171C0  +
mov edi [ebp+arg_0] +
mov esi eax +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_415444  +
mov eax [esi+10h] +
inc eax  +
jz loc_41544E  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_41544E  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov ecx [esi+10h] +
mov eax edi +
mov [edi+10h] ecx +
mov ecx [esi+14h] +
mov [edi+14h] ecx +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_478258 +
mov ebx dword_478060 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_4154FB  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_478258 edi +
jnz loc_4154ED  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_478258 eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_478258 +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_415511  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41557D  +
jmp loc_415513  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_415529  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_41552D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41557D  +
test ebx ebx +
jz loc_415535  +
mov esi ebx +
jmp loc_41557D  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_416210  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_415564  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_478060 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx] +
mov edx [ebp+arg_4] +
test ecx ecx +
jz loc_4155CD  +
cmp ecx 0FFFFFFFFh +
jz loc_4155CD  +
cmp ecx 0FFFFFFFEh +
jz loc_4155F2  +
mov eax [edx] +
cmp eax 80000000h +
jz loc_4155CD  +
cmp eax 7FFFFFFFh +
jz loc_4155CD  +
cmp eax 7FFFFFFEh +
jnz loc_41562C  +
cmp ecx 0FFFFFFFEh +
jz loc_4155F2  +
mov eax [edx] +
cmp eax 7FFFFFFEh +
jz loc_4155F2  +
cmp ecx 0FFFFFFFFh +
jnz loc_4155E7  +
cmp eax 80000000h +
jz loc_4155F2  +
test ecx ecx +
jnz loc_4155FF  +
cmp eax 7FFFFFFFh +
jnz loc_41562E  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFEh +
pop ebp  +
retn 8  +
cmp ecx 0FFFFFFFFh +
jz loc_41562E  +
cmp eax 7FFFFFFFh +
jnz loc_415618  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFFh +
pop ebp  +
retn 8  +
cmp eax 80000000h +
jnz loc_41562C  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
pop ebp  +
retn 8  +
add ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45BC88  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push dword ptr [ebp+8]  +
lea eax [ebp-30h] +
push eax  +
call sub_419920  +
push eax  +
lea eax [ebp-5Ch] +
mov dword ptr [ebp-4] 0 +
push eax  +
call sub_419970  +
add esp 10h +
lea eax [ebp-5Ch] +
push offset unk_472294  +
push eax  +
call sub_443DCE  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+4] ecx +
test ecx ecx +
jz loc_4156BF  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+8] eax +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_463FF0 +
mov eax ecx +
retn 4  +
***
call sub_416310  +
mov dword ptr [esi+28h] offset off_463FF0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BCD4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_415765  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_469990 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_415786  +
add edi 0Ch +
jmp loc_415788  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_41579E  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469678 +
mov dword ptr [esi+0Ch] offset off_46999C +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469690 +
mov eax [esi+20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi+1Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_45BCF8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_469990 +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_415839  +
add edi 0Ch +
jmp loc_41583B  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415851  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi] offset off_46966C +
mov dword ptr [esi+0Ch] offset off_469A5C +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_469990 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_463860 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_463848 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_416470  +
mov dword ptr [esi+28h] offset off_463FF0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BCD4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_415965  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_4626A4 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_415986  +
add edi 0Ch +
jmp loc_415988  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_41599E  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469684 +
mov dword ptr [esi+0Ch] offset off_469980 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469A44 +
mov eax [esi+20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi+1Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_45BCF8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_4626A4 +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_415A39  +
add edi 0Ch +
jmp loc_415A3B  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415A51  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi] offset off_469A0C +
mov dword ptr [esi+0Ch] offset off_469A54 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push esi  +
lea esi [ecx+50h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_4628A0 +
mov eax [esi-50h] +
mov ecx [eax+4] +
lea eax [ecx-50h] +
mov [ecx+esi-54h] eax +
lea ecx [esi-4Ch] +
call sub_416800  +
mov eax [esi-50h] +
push esi  +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_462808 +
mov eax [esi-50h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-54h] eax +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
pop esi  +
retn   +
***
call sub_416E90  +
mov dword ptr [esi+28h] offset off_463FF0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BCD4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_415B65  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_469A38 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_415B86  +
add edi 0Ch +
jmp loc_415B88  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415B9E  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469A7C +
mov dword ptr [esi+0Ch] offset off_469A18 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_4699C8 +
mov eax [esi+20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi+1Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_45BCF8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_469A38 +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_415C39  +
add edi 0Ch +
jmp loc_415C3B  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415C51  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi] offset off_469A20 +
mov dword ptr [esi+0Ch] offset off_469958 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_469A38 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_417000  +
mov dword ptr [esi+28h] offset off_463FF0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BCD4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_415D25  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_464018 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_415D46  +
add edi 0Ch +
jmp loc_415D48  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415D5E  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_464038 +
mov dword ptr [esi+0Ch] offset off_464044 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_46404C +
mov eax [esi+20h] +
mov eax [eax+4] +
mov dword ptr [eax+esi+1Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_45BCF8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_464018 +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_415DF9  +
add edi 0Ch +
jmp loc_415DFB  +
xor edi edi +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [edi+4] +
mov [esi+10h] ecx +
test ecx ecx +
jz loc_415E11  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+8] +
mov [esi+14h] eax +
mov eax [edi+0Ch] +
mov [esi+18h] eax +
mov eax [edi+10h] +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi] offset off_464024 +
mov dword ptr [esi+0Ch] offset off_464030 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_440646  +
mov dword ptr [esi] offset off_464018 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_416310  +
test [ebp+arg_0] 1 +
mov dword ptr [esi+28h] offset off_463FF0 +
jz loc_415E91  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
mov esi ecx +
call sub_416470  +
test [ebp+arg_0] 1 +
mov dword ptr [esi+28h] offset off_463FF0 +
jz loc_415F11  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
mov esi ecx +
call sub_416E90  +
test [ebp+arg_0] 1 +
mov dword ptr [esi+28h] offset off_463FF0 +
jz loc_415F91  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
mov esi ecx +
call sub_417000  +
test [ebp+arg_0] 1 +
mov dword ptr [esi+28h] offset off_463FF0 +
jz loc_416011  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 0FFFFFFFFh  +
push offset loc_45BD38  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_4160BA  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_4160DE  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_4160DE  +
cmp ecx esi +
jz loc_4160DE  +
call sub_414290  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_4161A9  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_419990  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_1C] +
mov ebx eax +
test ecx ecx +
jz loc_416132  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_416132  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov byte ptr [ebp+var_4] 3 +
mov eax [esi] +
mov ecx [eax+4] +
mov al [ecx+esi+40h] +
add ecx esi +
mov byte ptr [ebp+var_20] al +
mov eax [ebp+arg_0] +
movzx eax ax +
push eax  +
push [ebp+var_20]  +
mov byte ptr [ebp+var_34] 0 +
lea eax [ebp+var_34] +
push ecx  +
push dword ptr [ecx+38h]  +
mov ecx ebx +
push [ebp+var_34]  +
push eax  +
call sub_417810  +
mov ecx 4 +
mov al [eax] +
test al al +
cmovnz edi ecx +
jmp loc_4161A2  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41618C  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41619C +
retn   +
mov esi [ebp-18h] +
mov edi [ebp-24h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_4161CA  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_4161C2  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_4161E1  +
mov ecx esi +
call sub_414D50  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_4161F3  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45BD8C  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
mov [ebp+var_10] ebx +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_4162B9  +
cmp [edi] ebx +
jnz loc_4162B9  +
push 18h  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_4162A8  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
test ecx ecx +
jnz loc_41626E  +
mov eax (offset asc_4696CC+2) +
jmp loc_416278  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_416278  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_44] +
call sub_411E50  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov [ebp+var_10] ebx +
push ebx  +
mov [ebp+var_4] 2 +
mov ecx esi +
push eax  +
mov dword ptr [esi] offset off_4628F0 +
call sub_4185A0  +
jmp loc_4162AA  +
xor esi esi +
mov [edi] esi +
test bl 1 +
jz loc_4162B9  +
lea ecx [ebp+var_44] +
call sub_411F10  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46966C +
mov dword ptr [esi+0Ch] offset off_469A5C +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_416300  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_416300  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
mov eax [esi+20h] +
push 0FFFFFFFFh  +
push offset loc_45BDBB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 2Ch  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_4163E2  +
push ecx  +
mov byte ptr [ebp+var_10] 0 +
lea eax [esi-28h] +
push [ebp+var_10]  +
push eax  +
call sub_4172D0  +
test eax eax +
jz loc_4163E2  +
mov ecx [eax+20h] +
add eax 20h +
mov ecx [ecx+4] +
add eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
lea eax [ecx-28h] +
lea ecx [ebp-2Ch] +
push 1  +
push eax  +
call sub_415710  +
push offset unk_47200C  +
lea eax [ebp-2Ch] +
push eax  +
call sub_443DCE  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469A0C +
mov dword ptr [esi+0Ch] offset off_469A54 +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_416460  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_416460  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
mov eax [esi+20h] +
push 0FFFFFFFFh  +
push offset loc_45BDBB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 2Ch  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_416542  +
push ecx  +
mov byte ptr [ebp+var_10] 0 +
lea eax [esi-28h] +
push [ebp+var_10]  +
push eax  +
call sub_4173D0  +
test eax eax +
jz loc_416542  +
mov ecx [eax+20h] +
add eax 20h +
mov ecx [ecx+4] +
add eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
lea eax [ecx-28h] +
lea ecx [ebp-2Ch] +
push 1  +
push eax  +
call sub_415910  +
push offset unk_471F84  +
lea eax [ebp-2Ch] +
push eax  +
call sub_443DCE  +
sub esp 10h +
mov edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
push esi  +
mov esi ecx +
cmp edx 0FFFFFFFEh +
jnz loc_4165CC  +
push 0Fh  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push offset aNotADateTime  +
mov byte ptr [esi] 0 +
call loc_4109B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
test edx edx +
jnz loc_4165E1  +
push offset aInfinity  +
call sub_4100D0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp edx 0FFFFFFFFh +
jnz loc_4165F7  +
push offset aInfinity_0  +
call sub_4100D0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
lea ecx [ebp+var_C] +
call loc_415120  +
mov eax [ebp+var_C] +
sub esp 8 +
mov ecx esp +
mov [ecx] eax +
mov ax [ebp+var_8] +
mov [ecx+4] ax +
mov ecx esi +
call sub_418090  +
add esp 8 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BE17  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
cmp [ebp+arg_4] 0 +
jz loc_416685  +
mov dword ptr [esi] offset unk_469844 +
mov dword ptr [esi+50h] offset off_4627B8 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_462808 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov edi [eax+4] +
add edi esi +
mov ecx edi +
call sub_412AA0  +
lea eax [esi+4] +
mov dword ptr [edi+3Ch] 0 +
mov [edi+38h] eax +
mov ecx edi +
lea eax [ebp+arg_4] +
push eax  +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+arg_4] +
mov ebx eax +
test ecx ecx +
jz loc_4166F1  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4166F1  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [ebx] +
mov ecx ebx +
push 20h  +
mov eax [eax+20h] +
call eax  +
cmp dword ptr [edi+38h] 0 +
mov [edi+40h] al +
jnz loc_416715  +
mov eax [edi+0Ch] +
mov ecx edi +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov ebx [ebp+arg_0] +
mov [ebp+var_4] 3 +
or ebx 2 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4628A0 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-50h] +
mov [ecx+esi-4] eax +
lea ecx [esi+4] +
call sub_418510  +
xor eax eax +
mov dword ptr [esi+4] offset off_462860 +
test bl 1 +
mov ecx 4 +
cmovz eax ecx +
test bl 2 +
jnz loc_41675E  +
or eax 2 +
test bl 8 +
jz loc_416766  +
or eax 8 +
test bl cl +
jz loc_41676D  +
or eax 10h +
mov [esi+40h] eax +
mov eax esi +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi-50h] +
lea ecx [esi-4Ch] +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_4628A0 +
mov eax [esi-50h] +
mov edx [eax+4] +
lea eax [edx-50h] +
mov [edx+esi-54h] eax +
call sub_416800  +
mov eax [esi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_462808 +
mov eax [esi-50h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-54h] eax +
pop esi  +
retn   +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 4 +
mov [ebp+var_4] 0 +
call sub_4174D0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
test byte ptr [esi+3Ch] 1 +
mov dword ptr [esi] offset off_462860 +
jz loc_41681C  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
call sub_43FFF6  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_4627C8 +
mov esi [esi+34h] +
test esi esi +
jz loc_41688A  +
mov ecx [esi] +
test ecx ecx +
jz loc_416881  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_416881  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_4168AA  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+8] +
cmp ebx 0FFFFFFFFh +
jnz loc_4168BD  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_4168E5  +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_4168E5  +
mov edi [esi+38h] +
cmp edx edi +
jnb loc_4168E5  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
add ecx edx +
sub ecx edi +
mov [eax] edi +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_416918  +
mov edi [esi+30h] +
mov ecx [edi] +
lea eax [ecx+edx] +
cmp edx eax +
jnb loc_416914  +
dec ecx  +
mov eax ebx +
mov [edi] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+1] +
mov [edx] ecx +
mov [esi] bl +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test edx edx +
jnz loc_41691C  +
xor edi edi +
jmp loc_416928  +
mov eax [esi+30h] +
mov ecx [esi+0Ch] +
mov edi [eax] +
sub edi [ecx] +
add edi edx +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_416938  +
mov ecx 20h +
jmp loc_416940  +
test ecx ecx +
jz loc_416953  +
lea esp [esp+0] +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_41694F  +
shr ecx 1 +
jnz loc_416940  +
test ecx ecx +
jnz loc_41695F  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
xor ebx ebx +
mov [ebp-8] eax +
test eax eax +
jz loc_416987  +
cmp eax 0FFFFFFFFh +
ja loc_416A7D  +
push eax  +
call sub_440048  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_416A7D  +
mov eax [esi+0Ch] +
mov ecx [eax] +
mov [ebp-4] ecx +
test edi edi +
jz loc_4169A5  +
push edi  +
push ecx  +
push ebx  +
call loc_4425D0  +
mov ecx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_4169E5  +
mov eax [esi+10h] +
mov edx [ebp-8] +
mov edi [ebp-4] +
mov [esi+38h] ebx +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] edx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_4169D8  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_416A4D  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_416A4D  +
mov edi [ebp-4] +
mov eax ebx +
sub eax ecx +
add [esi+38h] eax +
mov eax [esi+20h] +
mov edx [eax] +
mov eax ebx +
sub edx ecx +
sub eax edi +
mov ecx [esi+10h] +
add edx ebx +
add [ecx] eax +
mov ecx ebx +
mov eax [esi+20h] +
sub ecx edx +
add ecx [ebp-8] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_416A2D  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_416A4D  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov ecx [eax] +
mov eax [esi+0Ch] +
sub ecx edi +
add ecx ebx +
sub edx ecx +
inc edx  +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_416A5C  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+8] +
mov [edx] al +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_43A607  +
mov edx ecx +
push esi  +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_416ADF  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_416ADF  +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
jz loc_416AB9  +
cmp cl [esi-1] +
jz loc_416AB9  +
test byte ptr [edx+3Ch] 2 +
jnz loc_416ADF  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
dec dword ptr [eax]  +
cmp ecx 0FFFFFFFFh +
jz loc_416AD6  +
mov eax [edx+1Ch] +
pop esi  +
mov eax [eax] +
mov [eax] cl +
mov eax ecx +
pop ebp  +
retn 4  +
xor ecx ecx +
mov eax ecx +
pop esi  +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [esi] +
test edx edx +
jnz loc_416AFF  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
mov edi [ecx+2Ch] +
mov eax [edi] +
add eax edx +
cmp edx eax +
jnb loc_416B11  +
movzx eax byte ptr [edx] +
pop edi  +
pop esi  +
retn   +
test byte ptr [ecx+3Ch] 4 +
jnz loc_416B43  +
mov eax [ecx+20h] +
mov eax [eax] +
test eax eax +
jz loc_416B43  +
cmp eax edx +
ja loc_416B29  +
cmp [ecx+38h] edx +
jbe loc_416B43  +
cmp [ecx+38h] eax +
jnb loc_416B31  +
mov [ecx+38h] eax +
mov eax [ecx+38h] +
sub eax [esi] +
mov [edi] eax +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
movzx eax byte ptr [eax] +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_416B6A  +
cmp [ebx+38h] eax +
jnb loc_416B6A  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_416C4F  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_416C4F  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_416BA3  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416BD9  +
cmp eax 1 +
jnz loc_416BC1  +
test cl 2 +
jnz loc_416BC5  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416BD9  +
test eax eax +
jz loc_416BD3  +
mov esi ds:dword_463880 +
mov edi ds:dword_463884 +
jmp loc_416BD9  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_416CEB  +
jg loc_416BEB  +
test esi esi +
jb loc_416CEB  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_416CEB  +
jl loc_416C08  +
cmp esi eax +
ja loc_416CEB  +
mov eax [ebx+2Ch] +
sub ecx [ebp+var_4] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_10] 2 +
jz loc_416CF7  +
mov eax [ebx+20h] +
mov eax [eax] +
mov [ebp+arg_10] eax +
test eax eax +
jz loc_416CF7  +
mov eax [ebx+1Ch] +
mov edx [eax] +
mov eax [ebx+30h] +
mov ecx [eax] +
mov eax [ebx+20h] +
add ecx [ebp+arg_10] +
sub ecx edx +
mov [eax] edx +
mov eax [ebx+30h] +
mov [eax] ecx +
jmp loc_416CF7  +
test cl 2 +
jz loc_416CDF  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_416CDF  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_416C7E  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416CAF  +
cmp eax 1 +
jnz loc_416C97  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416CAF  +
test eax eax +
jz loc_416CA9  +
mov esi ds:dword_463880 +
mov edi ds:dword_463884 +
jmp loc_416CAF  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_416CEB  +
jg loc_416CB9  +
test esi esi +
jb loc_416CEB  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_416CEB  +
jl loc_416CCE  +
cmp esi eax +
ja loc_416CEB  +
mov eax [ebx+30h] +
sub ecx [ebp+arg_10] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+20h] +
add [eax] ecx +
jmp loc_416CF7  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_416CF7  +
mov esi ds:dword_463880 +
mov edi ds:dword_463884 +
mov eax [ebp+arg_0] +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_C] +
add esi [ebp+arg_4] +
push edi  +
adc ebx [ebp+arg_8] +
mov edi ecx +
mov edx [edi+20h] +
mov eax [edx] +
test eax eax +
jz loc_416D4B  +
cmp [edi+38h] eax +
jnb loc_416D4B  +
mov [edi+38h] eax +
mov eax ds:dword_463884 +
cmp esi ds:dword_463880 +
jnz loc_416D60  +
cmp ebx eax +
jz loc_416E24  +
mov ecx [ebp+arg_1C] +
test cl 1 +
jz loc_416DE0  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+18h+var_8] eax +
test eax eax +
jz loc_416DDB  +
test ebx ebx +
jl loc_416DD3  +
jg loc_416D7F  +
test esi esi +
jb loc_416DD3  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_416DD3  +
jl loc_416D94  +
cmp esi eax +
ja loc_416DD3  +
mov eax [edi+2Ch] +
sub ecx [esp+18h+var_8] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_1C] 2 +
jz loc_416E24  +
mov eax [edi+20h] +
mov eax [eax] +
mov [esp+18h+var_8] eax +
test eax eax +
jz loc_416E24  +
mov eax [edi+1Ch] +
mov edx [eax] +
mov eax [edi+30h] +
mov ecx [eax] +
mov eax [edi+20h] +
add ecx [esp+18h+var_8] +
sub ecx edx +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_416E24  +
mov ebx ds:dword_463884 +
jmp loc_416E1E  +
mov eax ds:dword_463884 +
test cl 2 +
jz loc_416E1C  +
cmp dword ptr [edx] 0 +
jz loc_416E1C  +
test ebx ebx +
jl loc_416DD3  +
jg loc_416DF4  +
test esi esi +
jb loc_416DD3  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_416DD3  +
jl loc_416E09  +
cmp esi eax +
ja loc_416DD3  +
mov eax [edi+20h] +
sub ecx [eax] +
mov eax [edi+30h] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+20h] +
add [eax] ecx +
jmp loc_416E24  +
mov ebx eax +
mov esi ds:dword_463880 +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] esi +
pop esi  +
mov [eax+4] ebx +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469A20 +
mov dword ptr [esi+0Ch] offset off_469958 +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_416E80  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_416E80  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
mov eax [esi+20h] +
push 0FFFFFFFFh  +
push offset loc_45BDBB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 2Ch  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_416F62  +
push ecx  +
mov byte ptr [ebp+var_10] 0 +
lea eax [esi-28h] +
push [ebp+var_10]  +
push eax  +
call sub_417600  +
test eax eax +
jz loc_416F62  +
mov ecx [eax+20h] +
add eax 20h +
mov ecx [ecx+4] +
add eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
lea eax [ecx-28h] +
lea ecx [ebp-2Ch] +
push 1  +
push eax  +
call sub_415B10  +
push offset unk_471F20  +
lea eax [ebp-2Ch] +
push eax  +
call sub_443DCE  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_464024 +
mov dword ptr [esi+0Ch] offset off_464030 +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_416FE0  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_416FE0  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
mov eax [esi+20h] +
push 0FFFFFFFFh  +
push offset loc_45BDBB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 2Ch  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_4170D3  +
push 1  +
mov byte ptr [ebp+var_10] 0 +
lea eax [esi-28h] +
push [ebp+var_10]  +
push eax  +
call sub_417700  +
test eax eax +
jz loc_4170D3  +
mov ecx [eax+20h] +
add eax 20h +
mov ecx [ecx+4] +
add eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
lea eax [ecx-28h] +
lea ecx [ebp-2Ch] +
push 1  +
push eax  +
call sub_415CD0  +
push offset unk_472294  +
lea eax [ebp-2Ch] +
push eax  +
call sub_443DCE  +
push esi  +
push edi  +
lea edi [ecx-50h] +
mov eax [edi] +
lea esi [edi+50h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_4628A0 +
mov eax [esi-50h] +
mov ecx [eax+4] +
lea eax [ecx-50h] +
mov [ecx+esi-54h] eax +
lea ecx [esi-4Ch] +
call sub_416800  +
mov eax [esi-50h] +
push esi  +
mov eax [eax+4] +
mov dword ptr [eax+esi-50h] offset off_462808 +
mov eax [esi-50h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-54h] eax +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_417186  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_416800  +
test [ebp+arg_0] 1 +
jz loc_4171AA  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
test edi edi +
jz loc_417216  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_4171DA  +
mov eax [esi] +
jmp loc_4171DC  +
mov eax esi +
cmp edi eax +
jb loc_417216  +
cmp ecx 10h +
jb loc_4171E9  +
mov edx [esi] +
jmp loc_4171EB  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax edi +
jbe loc_417216  +
cmp ecx 10h +
jb loc_4171FD  +
mov eax [esi] +
jmp loc_4171FF  +
mov eax esi +
push dword ptr [ebp+10h]  +
sub edi eax +
mov ecx esi +
push edi  +
push esi  +
push dword ptr [ebp+8]  +
call loc_418350  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [esi+10h] +
cmp ecx [ebp+8] +
jb loc_4172BA  +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_4172C4  +
test ebx ebx +
jz loc_4172B1  +
lea eax [ecx+ebx] +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+0Ch] eax +
call loc_410AE0  +
test al al +
jz loc_4172B1  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_41725A  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_41725D  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_417266  +
mov edx [esi] +
jmp loc_417268  +
mov edx esi +
mov eax [esi+10h] +
mov ecx [ebp+8] +
sub eax ecx +
jz loc_41728A  +
push eax  +
mov eax [ebp+10h] +
add eax ecx +
push eax  +
lea eax [edx+ecx] +
add eax ebx +
push eax  +
call loc_43F850  +
mov ecx [ebp+8] +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_417294  +
mov eax [esi] +
jmp loc_417296  +
mov eax esi +
test ebx ebx +
jz loc_4172A7  +
push ebx  +
add eax ecx +
push edi  +
push eax  +
call loc_4425D0  +
add esp 0Ch +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_410AB0  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45BE6C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_469990 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_41733F  +
lea ecx [edi+0Ch] +
jmp loc_417341  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_417361  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469678 +
mov dword ptr [ebx] offset off_46999C +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469690 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_4173AA  +
add edi 0Ch +
jmp loc_4173AC  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45BEBC  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_4626A4 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_41743F  +
lea ecx [edi+0Ch] +
jmp loc_417441  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_417461  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469684 +
mov dword ptr [ebx] offset off_469980 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469A44 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_4174AA  +
add edi 0Ch +
jmp loc_4174AC  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 20h +
mov eax dword_474390 +
xor eax esp +
mov [esp+20h+var_4] eax +
mov edx ecx +
mov [esp+20h+var_20] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_41756A  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_41756A  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
mov eax [eax] +
sub ecx eax +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 0Fh +
mov [esp+30h+var_C] 0 +
mov byte ptr [esp+30h+var_1C] 0 +
call loc_4109B0  +
lea eax [esp+30h+var_24] +
mov ecx esi +
push eax  +
call sub_410130  +
cmp [esp+30h+var_10] 10h +
jb loc_4175DF  +
push [esp+30h+var_24]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
mov ecx [esp+28h+var_C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
test cl 4 +
jnz loc_417584  +
mov eax [edx+1Ch] +
mov edi [eax] +
test edi edi +
jz loc_417584  +
mov eax [edx+2Ch] +
mov ecx [eax] +
mov eax [edx+0Ch] +
add ecx edi +
jmp loc_41750E  +
mov [esp+28h+var_8] 0Fh +
mov [esp+28h+var_C] 0 +
mov byte ptr [esp+28h+var_1C] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov ecx [esp+28h+var_8] +
cmp ecx 10h +
jnb loc_4175CF  +
mov eax [esp+28h+var_C] +
inc eax  +
jz loc_4175D5  +
push eax  +
lea eax [esp+2Ch+var_1C] +
push eax  +
push esi  +
call loc_43F850  +
mov ecx [esp+34h+var_8] +
add esp 0Ch +
jmp loc_4175D5  +
mov eax [esp+28h+var_1C] +
mov [esi] eax +
mov eax [esp+28h+var_C] +
mov [esi+10h] eax +
mov [esi+14h] ecx +
mov ecx [esp+28h+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45BF0C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_469A38 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_41766F  +
lea ecx [edi+0Ch] +
jmp loc_417671  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_417691  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469A7C +
mov dword ptr [ebx] offset off_469A18 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_4699C8 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_4176DA  +
add edi 0Ch +
jmp loc_4176DC  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45BF5C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_8] 0 +
mov [ebp+var_10] 0 +
jz loc_417756  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_464018 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_417777  +
lea ecx [edi+0Ch] +
jmp loc_417779  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_8] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_417799  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_8] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_464038 +
mov dword ptr [ebx] offset off_464044 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_46404C +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_4177E2  +
add edi 0Ch +
jmp loc_4177E4  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_14]  +
mov eax [ecx] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+20h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45BF90  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+64h+var_C] +
mov large fs:0 eax +
mov [esp+64h+var_50] ecx +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_10] +
mov ebx [ebp+arg_0] +
mov byte ptr [esp+64h+var_54] al +
test dword ptr [esi+14h] 4000h +
jnz loc_4178AE  +
mov eax [ebp+arg_14] +
mov edx [ecx] +
movzx eax al +
push eax  +
push [esp+68h+var_54]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [edx+24h]  +
jmp loc_417A09  +
lea eax [esp+64h+var_4C] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+68h+var_4] 0 +
call sub_415480  +
mov [esp+68h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+64h+var_4C] +
mov edi eax +
test ecx ecx +
jz loc_4178EE  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4178EE  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [esp+68h+var_34] 0Fh +
mov [esp+68h+var_38] 0 +
mov byte ptr [esp+68h+var_48] 0 +
cmp byte ptr [ebp+arg_14] 0 +
lea eax [esp+68h+var_30] +
mov [esp+68h+var_8] 1 +
mov ecx edi +
push eax  +
jz loc_41791F  +
call sub_4148E0  +
jmp loc_417924  +
call sub_4148C0  +
push eax  +
lea ecx [esp+6Ch+var_48] +
call sub_4144B0  +
cmp [esp+68h+var_1C] 10h +
jb loc_417941  +
push [esp+68h+var_30]  +
call sub_43FFF6  +
add esp 4 +
cmp dword ptr [esi+24h] 0 +
mov ecx [esp+68h+var_38] +
jl loc_41795E  +
jg loc_417953  +
cmp dword ptr [esi+20h] 0 +
jbe loc_41795E  +
mov edi [esi+20h] +
cmp edi ecx +
jbe loc_41795E  +
sub edi ecx +
jmp loc_417960  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41799C  +
push edi  +
push [esp+6Ch+var_58]  +
lea eax [esp+70h+var_50] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [esp+7Ch+var_54]  +
call sub_4190E0  +
mov ecx [esp+80h+var_38] +
add esp 18h +
xor edi edi +
mov edx [eax] +
mov [ebp+arg_4] edx +
mov eax [eax+4] +
mov [ebp+arg_8] eax +
jmp loc_4179A2  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
cmp [esp+68h+var_34] 10h +
mov [esp+68h+var_50] eax +
lea eax [esp+68h+var_48] +
cmovnb eax [esp+68h+var_48] +
push ecx  +
push eax  +
push [esp+70h+var_50]  +
lea eax [esp+74h+var_50] +
push edx  +
push eax  +
push [esp+7Ch+var_54]  +
call sub_419070  +
push edi  +
push [esp+84h+var_58]  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push ebx  +
push [esp+94h+var_54]  +
mov [ebp+arg_8] eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call sub_4190E0  +
add esp 30h +
cmp [esp+68h+var_34] 10h +
jb loc_417A09  +
push [esp+68h+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov eax ebx +
mov ecx [esp+68h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+58h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_418CD0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_418CD0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+78h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_418CD0  +
mov ecx [esp+94h+var_4] +
add esp 34h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+78h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_418CD0  +
mov ecx [esp+94h+var_4] +
add esp 34h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+98h+var_4] eax +
mov eax [ebp+arg_0] +
mov [esp+98h+var_88] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [esp+0A0h+var_84] ecx +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov [esp+0A0h+var_8C] eax +
test edi edi +
jg loc_417C89  +
jl loc_417C6E  +
test esi esi +
jnz loc_417C7E  +
test dword ptr [eax+14h] 2000h +
jnz loc_417C7E  +
mov esi 6 +
xor edi edi +
test edi edi +
jl loc_417C94  +
jg loc_417C89  +
cmp esi 24h +
jbe loc_417C94  +
mov eax 24h +
mov [esp+0A0h+var_90] eax +
jmp loc_417C9A  +
mov eax esi +
mov [esp+0A0h+var_90] esi +
movsd xmm1 [ebp+arg_14] +
cdq   +
sub esi eax +
mov eax [esp+0A0h+var_8C] +
sbb edi edx +
xor edx edx +
xor ecx ecx +
mov [esp+0A0h+var_98] edx +
mov eax [eax+14h] +
and eax 3000h +
mov [esp+0A0h+var_94] ecx +
cmp eax 2000h +
jnz loc_417D75  +
movapd xmm0 xmm1 +
mulsd xmm0 ds:qword_46AE88 +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jnp loc_417D75  +
movsd xmm4 ds:qword_46AEA0 +
xorps xmm3 xmm3 +
comisd xmm3 xmm1 +
setnbe al  +
test al al +
jz loc_417CFB  +
xorpd xmm1 xmm4 +
movsd xmm0 ds:qword_46AE98 +
comisd xmm1 xmm0 +
movsd xmm2 ds:qword_46AE90 +
jb loc_417D2A  +
cmp edx 1388h +
jnb loc_417D26  +
divsd xmm1 xmm2 +
add edx 0Ah +
comisd xmm1 xmm0 +
jnb loc_417D11  +
mov [esp+0A0h+var_98] edx +
comisd xmm1 xmm3 +
jbe loc_417D6D  +
test edi edi +
jl loc_417D6D  +
jg loc_417D3B  +
cmp esi 0Ah +
jb loc_417D6D  +
movsd xmm0 ds:qword_46AE80 +
comisd xmm0 xmm1 +
jb loc_417D69  +
cmp ecx 1388h +
jnb loc_417D69  +
add esi 0FFFFFFF6h +
mulsd xmm1 xmm2 +
adc edi 0FFFFFFFFh +
add ecx 0Ah +
test edi edi +
jg loc_417D43  +
jl loc_417D69  +
cmp esi 0Ah +
jnb loc_417D43  +
mov [esp+0A0h+var_94] ecx +
test al al +
jz loc_417D75  +
xorpd xmm1 xmm4 +
mov edi [esp+0A0h+var_8C] +
lea eax [esp+0A0h+var_80+1] +
mov byte ptr [esp+0A0h+var_80] 25h +
mov edx [edi+14h] +
test dl 20h +
jz loc_417D93  +
mov byte ptr [esp+0A0h+var_80+1] 2Bh +
lea eax [esp+0A0h+var_80+2] +
test dl 10h +
jz loc_417D9C  +
mov byte ptr [eax] 23h +
inc eax  +
mov ecx edx +
mov word ptr [eax] 2A2Eh +
and ecx 3000h +
test dl 4 +
jz loc_417DD4  +
cmp ecx 2000h +
jz loc_417DDC  +
cmp ecx 3000h +
jnz loc_417DC2  +
mov cl 41h +
jmp loc_417DFC  +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
jmp loc_417DFC  +
cmp ecx 2000h +
jnz loc_417DE0  +
mov cl 66h +
jmp loc_417DFC  +
cmp ecx 3000h +
jnz loc_417DEC  +
mov cl 61h +
jmp loc_417DFC  +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax+2] cl +
sub esp 8 +
add eax 3 +
movsd [esp+0A8h+var_A8] xmm1 +
mov byte ptr [eax] 0 +
lea eax [esp+0A8h+var_80] +
push [esp+0A8h+var_90]  +
push eax  +
lea eax [esp+0B0h+var_78] +
push 6Ch  +
push eax  +
call sub_4407C8  +
push eax  +
push esi  +
push [esp+0C0h+var_94]  +
mov esi [esp+0C4h+var_88] +
lea eax [esp+0C4h+var_78] +
push [esp+0C4h+var_98]  +
push eax  +
push [ebp+arg_10]  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [esp+0E0h+var_84]  +
call sub_4187C0  +
mov ecx [esp+0E4h+var_4] +
add esp 44h +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+98h+var_4] eax +
mov eax [ebp+arg_0] +
mov [esp+98h+var_88] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [esp+0A0h+var_84] ecx +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov [esp+0A0h+var_98] eax +
test edi edi +
jg loc_417EC9  +
jl loc_417EAE  +
test esi esi +
jnz loc_417EBE  +
test dword ptr [eax+14h] 2000h +
jnz loc_417EBE  +
mov esi 6 +
xor edi edi +
test edi edi +
jl loc_417ED4  +
jg loc_417EC9  +
cmp esi 24h +
jbe loc_417ED4  +
mov eax 24h +
mov [esp+0A0h+var_94] eax +
jmp loc_417EDA  +
mov eax esi +
mov [esp+0A0h+var_94] esi +
movsd xmm0 [ebp+arg_14] +
cdq   +
sub esi eax +
mov eax [esp+0A0h+var_98] +
sbb edi edx +
xor edx edx +
xor ecx ecx +
mov [esp+0A0h+var_8C] edx +
mov eax [eax+14h] +
mov [esp+0A0h+var_80] eax +
and eax 3000h +
mov [esp+0A0h+var_90] ecx +
cmp eax 2000h +
jnz loc_417FA4  +
movsd xmm4 ds:qword_46AEA0 +
xorps xmm3 xmm3 +
comisd xmm3 xmm0 +
setnbe al  +
test al al +
jz loc_417F25  +
xorpd xmm0 xmm4 +
movsd xmm1 ds:qword_46AE98 +
comisd xmm0 xmm1 +
movsd xmm2 ds:qword_46AE90 +
jb loc_417F59  +
jmp loc_417F40  +
cmp edx 1388h +
jnb loc_417F55  +
divsd xmm0 xmm2 +
add edx 0Ah +
comisd xmm0 xmm1 +
jnb loc_417F40  +
mov [esp+0A0h+var_8C] edx +
comisd xmm0 xmm3 +
jbe loc_417F9C  +
test edi edi +
jl loc_417F9C  +
jg loc_417F6A  +
cmp esi 0Ah +
jb loc_417F9C  +
movsd xmm1 ds:qword_46AE80 +
comisd xmm1 xmm0 +
jb loc_417F98  +
cmp ecx 1388h +
jnb loc_417F98  +
add esi 0FFFFFFF6h +
mulsd xmm0 xmm2 +
adc edi 0FFFFFFFFh +
add ecx 0Ah +
test edi edi +
jg loc_417F72  +
jl loc_417F98  +
cmp esi 0Ah +
jnb loc_417F72  +
mov [esp+0A0h+var_90] ecx +
test al al +
jz loc_417FA4  +
xorpd xmm0 xmm4 +
mov edi [esp+0A0h+var_84] +
lea eax [esp+0A0h+var_80] +
sub esp 8 +
movsd [esp+0A8h+var_A8] xmm0 +
push [esp+0A8h+var_94]  +
push [esp+0ACh+var_80]  +
push 4Ch  +
push eax  +
push edi  +
call sub_418700  +
add esp 10h +
push eax  +
lea eax [esp+0B0h+var_78] +
push 6Ch  +
push eax  +
call sub_4407C8  +
push eax  +
push esi  +
push [esp+0C0h+var_90]  +
mov esi [esp+0C4h+var_88] +
lea eax [esp+0C4h+var_78] +
push [esp+0C4h+var_8C]  +
push eax  +
push [ebp+arg_10]  +
push [esp+0D0h+var_98]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_4187C0  +
mov ecx [esp+0E4h+var_4] +
add esp 44h +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_418CD0  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_45BFDB  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 1  +
push 2  +
lea ecx [ebp+var_B0] +
mov [ebp+var_18] 0 +
call sub_416630  +
mov [ebp+var_4] 0 +
call sub_43AA26  +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov eax [ebp+var_B0] +
lea ecx [ebp+var_B0] +
mov eax [eax+4] +
add ecx eax +
call sub_418480  +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_418112  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418112  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
lea ecx [ebp+var_B0] +
call sub_416070  +
push 1  +
call sub_43A89D  +
add esp 4 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_14] +
push eax  +
mov eax [ebp+var_B0] +
lea ecx [ebp+var_B0] +
mov eax [eax+4] +
add ecx eax +
call sub_418480  +
mov ecx [ebp+var_14] +
test ecx ecx +
jz loc_418167  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418167  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov byte ptr [ebp+var_4] 0 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_418183  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418183  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov dl 2Dh +
lea ecx [ebp+var_B0] +
call sub_419600  +
mov eax [ebp+arg_0+2] +
lea ecx [ebp+var_B0] +
movzx esi ax +
mov eax [ebp+var_B0] +
push 30h  +
mov eax [eax+4] +
add ecx eax +
call sub_414C70  +
push 0  +
mov bl al +
lea eax [ebp+var_C0] +
push 2  +
push eax  +
call sub_43AA7F  +
mov ecx [ebp+var_B0] +
add esp 0Ch +
push dword ptr [eax+0Ch]  +
mov ecx [ecx+4] +
push dword ptr [eax+8]  +
mov eax [eax] +
lea ecx [ebp+ecx+var_B0] +
push ecx  +
call eax  +
mov eax [ebp+var_B0] +
lea ecx [ebp+var_B0] +
add esp 0Ch +
mov eax [eax+4] +
push esi  +
mov [ebp+eax+var_70] bl +
call sub_416070  +
mov dl 2Dh +
lea ecx [ebp+var_B0] +
call sub_419600  +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_B0] +
movzx eax ax +
mov [ebp+var_10] eax +
mov eax [ebp+var_B0] +
mov eax [eax+4] +
add ecx eax +
lea eax [ebp+var_14] +
push eax  +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 0 +
add esp 4 +
mov ecx [ebp+var_14] +
mov esi eax +
test ecx ecx +
jz loc_418255  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_418255  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [esi] +
mov ecx esi +
push 30h  +
mov eax [eax+20h] +
call eax  +
push 0  +
mov bl al +
lea eax [ebp+var_C0] +
push 2  +
push eax  +
call sub_43AA7F  +
mov ecx [ebp+var_B0] +
add esp 0Ch +
push dword ptr [eax+0Ch]  +
mov ecx [ecx+4] +
push dword ptr [eax+8]  +
mov eax [eax] +
lea ecx [ebp+ecx+var_B0] +
push ecx  +
call eax  +
mov eax [ebp+var_B0] +
lea ecx [ebp+var_B0] +
add esp 0Ch +
mov eax [eax+4] +
push [ebp+var_10]  +
mov [ebp+eax+var_70] bl +
call sub_416070  +
push edi  +
lea ecx [ebp+var_B0] +
call sub_4167E0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_B0] +
mov eax [eax+4] +
mov [ebp+eax+var_B0] offset off_4628A0 +
mov eax [ebp+var_B0] +
mov ecx [eax+4] +
lea eax [ecx-50h] +
mov [ebp+ecx+var_B4] eax +
lea ecx [ebp+var_AC] +
call sub_416800  +
mov eax [ebp+var_B0] +
mov eax [eax+4] +
mov [ebp+eax+var_B0] offset off_462808 +
mov eax [ebp+var_B0] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ebp+ecx+var_B4] eax +
lea eax [ebp+var_60] +
push eax  +
mov [ebp+var_60] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edx [esi+10h] +
cmp edx [ebp+8] +
jb loc_41846C  +
mov ebx [ebp+0Ch] +
mov eax [ebp+10h] +
mov ecx [ebx+10h] +
cmp ecx eax +
jb loc_41846C  +
mov edi [ebp+14h] +
sub ecx eax +
cmp ecx edi +
cmovb edi ecx +
or eax 0FFFFFFFFh +
sub eax edx +
cmp eax edi +
jbe loc_418462  +
test edi edi +
jz loc_418459  +
lea eax [edx+edi] +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+14h] eax +
call loc_410AE0  +
test al al +
jz loc_418459  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4183BB  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_4183BE  +
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_4183C7  +
mov edx [esi] +
jmp loc_4183C9  +
mov edx esi +
mov eax [esi+10h] +
mov ecx [ebp+8] +
sub eax ecx +
jz loc_4183EB  +
push eax  +
mov eax [ebp+0Ch] +
add eax ecx +
push eax  +
lea eax [edx+ecx] +
add eax edi +
push eax  +
call loc_43F850  +
mov ecx [ebp+8] +
add esp 0Ch +
cmp esi ebx +
jnz loc_418424  +
mov eax [ebp+10h] +
cmp ecx eax +
jnb loc_4183F8  +
add eax edi +
mov edx [esi+14h] +
cmp edx 10h +
jb loc_418404  +
mov ebx [esi] +
jmp loc_418406  +
mov ebx esi +
cmp edx 10h +
jb loc_41840F  +
mov edx [esi] +
jmp loc_418411  +
mov edx esi +
test edi edi +
jz loc_41844F  +
add eax ebx +
push edi  +
push eax  +
lea eax [edx+ecx] +
push eax  +
call loc_43F850  +
jmp loc_41844C  +
cmp dword ptr [ebx+14h] 10h +
jb loc_41842C  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_418436  +
mov edx [esi] +
jmp loc_418438  +
mov edx esi +
test edi edi +
jz loc_41844F  +
mov eax [ebp+10h] +
add eax ebx +
push edi  +
push eax  +
lea eax [edx+ecx] +
push eax  +
call loc_4425D0  +
add esp 0Ch +
push dword ptr [ebp+14h]  +
mov ecx esi +
call sub_410AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aStringTooLong  +
call sub_43A638  +
push offset aInvalidStringP  +
call sub_43A666  +
push 0FFFFFFFFh  +
push offset loc_45C019  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
push [ebp+arg_4]  +
mov edi [ebp+arg_0] +
push edi  +
call sub_4129E0  +
mov [ebp+var_4] 0 +
mov ecx [esi+38h] +
mov [ebp+var_10] 1 +
test ecx ecx +
jz loc_4184FA  +
push [ebp+arg_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_419150  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_4184FA  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4184FA  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push 4  +
mov dword ptr [esi] offset off_4627C8 +
call sub_440048  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_418538  +
push 1  +
call sub_43A89D  +
add esp 4 +
mov [edi] eax +
jmp loc_41853A  +
xor edi edi +
lea eax [esi+4] +
mov [esi+34h] edi +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
pop edi  +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C040  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_14] ebx +
call sub_44081C  +
mov esi eax +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_18] esi +
call sub_43A694  +
add esp 4 +
mov dword ptr [ebx+8] 0 +
cmp [ebp+arg_4] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov [ebp+var_4] 0 +
jz loc_41860F  +
mov esi (offset asc_4696CC+2) +
jmp loc_418612  +
mov esi [esi+8] +
lea eax [ebp+var_44] +
push eax  +
call sub_43A694  +
mov edi esi +
add esp 4 +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_418623  +
sub edi ecx +
inc edi  +
push edi  +
call sub_43AC2F  +
add esp 4 +
mov edx eax +
test edi edi +
jz loc_41864C  +
mov ecx edx +
sub ecx esi +
mov al [esi] +
lea esi [esi+1] +
mov [ecx+esi-1] al +
dec edi  +
jnz loc_418640  +
mov edi 6 +
mov [ebx+8] edx +
push edi  +
mov esi offset aFalse +
call sub_43AC2F  +
mov edx eax +
add esp 4 +
sub edx esi +
mov cl [esi] +
lea esi [esi+1] +
mov [edx+esi-1] cl +
dec edi  +
jnz loc_418666  +
mov edi 5 +
mov [ebx+10h] eax +
push edi  +
mov esi offset aTrue +
call sub_43AC2F  +
mov edx eax +
add esp 4 +
sub edx esi +
lea esp [esp+0] +
mov cl [esi] +
lea esi [esi+1] +
mov [edx+esi-1] cl +
dec edi  +
jnz loc_418690  +
cmp [ebp+arg_4] 0 +
mov [ebx+14h] eax +
jz loc_4186BF  +
mov word ptr [ebx+0Ch] 2C2Eh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+var_18] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
mov [ebx+0Ch] al +
mov eax [ecx+4] +
movzx eax byte ptr [eax] +
mov [ebx+0Dh] al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_418719  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_418722  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_418734  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_418779  +
cmp ecx 2000h +
jz loc_418781  +
cmp ecx 3000h +
jnz loc_41875E  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_41878E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_4187A3  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C080  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+84h+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_28] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov ebx [ebp+arg_18] +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_64] esi +
mov [esp+84h+var_58] ecx +
test ecx ecx +
jz loc_418824  +
mov al [ebx] +
cmp al 2Bh +
jz loc_41881D  +
cmp al 2Dh +
jnz loc_418824  +
mov edi 1 +
jmp loc_418826  +
xor edi edi +
mov eax [esi+14h] +
and eax 3000h +
mov [esp+84h+var_74] edi +
cmp eax 3000h +
jz loc_418840  +
mov edx offset aEe +
jmp loc_418866  +
lea eax [edi+2] +
mov edx offset aPp +
cmp eax ecx +
ja loc_418866  +
cmp byte ptr [ebx+edi] 30h +
jnz loc_418866  +
mov cl [ebx+edi+1] +
cmp cl 78h +
jz loc_418860  +
cmp cl 58h +
jnz loc_418866  +
mov edi eax +
mov [esp+84h+var_74] edi +
push edx  +
push ebx  +
call sub_440850  +
mov [esp+8Ch+var_50] eax +
mov eax 2Eh +
mov word ptr [esp+8Ch+var_70] ax +
call sub_44081C  +
mov eax [eax] +
mov al [eax] +
mov byte ptr [esp+8Ch+var_70] al +
lea eax [esp+8Ch+var_70] +
push eax  +
push ebx  +
call sub_440850  +
add esp 10h +
mov [esp+84h+var_68] eax +
lea eax [esp+84h+var_5C] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+88h+var_4] 0 +
call sub_414F50  +
mov [esp+88h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+84h+var_5C] +
mov [esp+84h+var_6C] eax +
test ecx ecx +
jz loc_4188E2  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_4188E2  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [esp+88h+var_70] +
push 30h  +
mov eax [ecx] +
mov eax [eax+20h] +
call eax  +
push 0  +
push [esp+90h+var_60]  +
lea ecx [esp+94h+var_4C] +
mov byte ptr [esp+94h+var_54] al +
mov [esp+94h+var_38] 0Fh +
mov [esp+94h+var_3C] 0 +
mov byte ptr [esp+94h+var_4C] 0 +
call loc_414A90  +
mov ecx [esp+94h+var_7C] +
lea eax [esp+94h+var_54] +
mov [esp+94h+var_14] 1 +
cmp [esp+94h+var_40] 10h +
cmovnb eax [esp+94h+var_54] +
mov edx [ecx] +
push eax  +
mov eax [esp+98h+var_68] +
add eax ebx +
push eax  +
push ebx  +
call dword ptr [edx+1Ch]  +
lea eax [esp+0A0h+var_78] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+0A4h+var_20] 2 +
call sub_415480  +
mov [esp+0A4h+var_20] 1 +
add esp 4 +
mov ecx [esp+0A0h+var_78] +
mov ebx eax +
mov [esp+0A0h+var_88] ebx +
test ecx ecx +
jz loc_418986  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_418986  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [esp+0A4h+var_4C] +
mov ecx ebx +
push eax  +
call sub_414F10  +
mov [esp+0A4h+var_24] 3 +
mov ecx ebx +
mov eax [ebx] +
mov eax [eax+10h] +
call eax  +
mov ecx [esp+0A4h+var_70] +
mov byte ptr [esp+0A4h+var_74] al +
mov eax [esp+0A4h+var_88] +
cmp eax [esp+0A4h+var_78] +
jnz loc_4189CC  +
mov eax [ebp+arg_1C] +
push [esp+0A4h+var_6C]  +
push eax  +
lea ebx [ecx+eax] +
push ecx  +
lea ecx [esp+0B0h+var_64] +
call loc_414B60  +
jmp loc_418A29  +
mov esi [esp+0A4h+var_6C] +
mov edi [ebp+arg_1C] +
push esi  +
push [ebp+arg_24]  +
push ecx  +
lea ecx [esp+0B0h+var_64] +
lea ebx [eax+edi] +
call loc_414B60  +
mov eax [esp+0B0h+var_94] +
lea ecx [esp+0B0h+var_70] +
push esi  +
push [ebp+arg_20]  +
inc eax  +
push eax  +
call loc_414B60  +
mov ecx [esp+0BCh+var_A4] +
mov eax [ecx] +
mov eax [eax+0Ch] +
call eax  +
cmp [esp+0BCh+var_68] 10h +
mov cl al +
mov edx [esp+0BCh+var_A0] +
lea eax [esp+0BCh+var_7C] +
cmovnb eax [esp+0BCh+var_7C] +
push esi  +
push edi  +
push edx  +
mov [eax+edx] cl +
lea ecx [esp+0C8h+var_7C] +
call loc_414B60  +
mov edi [esp+0C8h+var_B8] +
cmp [esp+0C8h+var_5C] 10h +
lea esi [esp+0C8h+var_70] +
cmovnb esi [esp+0C8h+var_70] +
mov al [esi] +
cmp al 7Fh +
jz loc_418A71  +
lea ecx [ecx+0] +
test al al +
jle loc_418A71  +
movsx ecx al +
mov eax ebx +
sub eax edi +
cmp ecx eax +
jnb loc_418A71  +
push [esp+0C8h+var_98]  +
sub ebx ecx +
lea ecx [esp+0CCh+var_88] +
push 1  +
push ebx  +
call loc_414B60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_418A40  +
mov ebx [esp+0D4h+var_B4] +
mov eax [esp+0D4h+var_84] +
mov [esp+0D4h+var_A4] eax +
cmp dword ptr [ebx+24h] 0 +
jl loc_418A96  +
jg loc_418A8B  +
cmp dword ptr [ebx+20h] 0 +
jbe loc_418A96  +
mov esi [ebx+20h] +
cmp esi eax +
jbe loc_418A96  +
sub esi eax +
jmp loc_418A98  +
xor esi esi +
mov eax [ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_418B4A  +
cmp eax 100h +
jz loc_418AFD  +
push esi  +
push [ebp+arg_14]  +
lea eax [esp+0DCh+var_B4] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4190E0  +
mov ecx eax +
xor esi esi +
cmp [esp+0ECh+var_80] 10h +
push edi  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0F0h+var_94] +
cmovnb eax [esp+0F0h+var_94] +
push eax  +
push dword ptr [ecx+4]  +
lea eax [esp+0F8h+var_B4] +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
add esp 30h +
jmp loc_418B70  +
cmp [esp+0D4h+var_80] 10h +
lea eax [esp+0D4h+var_94] +
push edi  +
cmovnb eax [esp+0D8h+var_94] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0E0h+var_B4] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
mov ecx eax +
push esi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0F4h+var_B4] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4190E0  +
add esp 30h +
xor esi esi +
jmp loc_418B70  +
cmp [esp+0D4h+var_80] 10h +
lea eax [esp+0D4h+var_94] +
push edi  +
cmovnb eax [esp+0D8h+var_94] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0E0h+var_B4] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
add esp 18h +
mov edx [eax] +
cmp [esp+0D4h+var_80] 10h +
mov ecx [esp+0D4h+var_A4] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [esp+0D4h+var_C4] eax +
mov [ebp+arg_C] eax +
lea eax [esp+0D4h+var_94] +
cmovnb eax [esp+0D4h+var_94] +
sub ecx edi +
push ecx  +
add eax edi +
mov edi [ebp+arg_0] +
push eax  +
push [esp+0DCh+var_C4]  +
lea eax [esp+0E0h+var_B4] +
push edx  +
push eax  +
push edi  +
call sub_419070  +
push esi  +
push [ebp+arg_14]  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov ebx [esp+0FCh+var_98] +
push ebx  +
push edi  +
mov [ebp+arg_C] eax +
call sub_4190E0  +
add esp 30h +
cmp [esp+0D4h+var_68] 10h +
jb loc_418BEA  +
push [esp+0D4h+var_7C]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0D4h+var_80] 10h +
mov [esp+0D4h+var_68] 0Fh +
mov [esp+0D4h+var_6C] 0 +
mov byte ptr [esp+0D4h+var_7C] 0 +
jb loc_418C12  +
push [esp+0D4h+var_94]  +
call sub_43FFF6  +
add esp 4 +
mov eax ebx +
mov ecx [esp+0D4h+var_5C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0C4h+var_64] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test cl 20h +
jz loc_418C5A  +
mov byte ptr [eax] 2Bh +
inc eax  +
test cl 8 +
jz loc_418C63  +
mov byte ptr [eax] 23h +
inc eax  +
mov edi [ebp+arg_8] +
mov dl [edi] +
cmp dl 4Ch +
jz loc_418C72  +
mov [eax] dl +
inc eax  +
jmp loc_418C7E  +
mov word ptr [eax] 3649h +
mov byte ptr [eax+2] 34h +
add eax 3 +
mov edx ecx +
and edx 0E00h +
cmp edx 400h +
jnz loc_418C9C  +
mov cl 6Fh +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
cmp edx 800h +
jz loc_418CB3  +
mov cl [edi+1] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
shl cl 3 +
not cl  +
and cl 20h +
or cl 58h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C0D0  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_474390 +
xor eax esp +
mov [esp+5Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+6Ch+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov ecx [ebp+arg_18] +
mov [esp+6Ch+var_48] eax +
mov [esp+6Ch+var_54] esi +
mov [esp+6Ch+var_5C] ecx +
test edi edi +
jz loc_418D34  +
mov al [ecx] +
cmp al 2Bh +
jz loc_418D2D  +
cmp al 2Dh +
jnz loc_418D34  +
mov ebx 1 +
jmp loc_418D36  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 0E00h +
cmp eax 800h +
jnz loc_418D62  +
lea eax [ebx+2] +
cmp eax edi +
ja loc_418D62  +
cmp byte ptr [ecx+ebx] 30h +
jnz loc_418D62  +
mov cl [ecx+ebx+1] +
cmp cl 78h +
jz loc_418D60  +
cmp cl 58h +
jnz loc_418D62  +
mov ebx eax +
lea eax [esp+6Ch+var_4C] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+70h+var_4] 0 +
call sub_414F50  +
mov [esp+70h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_58] eax +
test ecx ecx +
jz loc_418DA4  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418DA4  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 0  +
push edi  +
lea ecx [esp+78h+var_48] +
mov [esp+78h+var_34] 0Fh +
mov [esp+78h+var_38] 0 +
mov byte ptr [esp+78h+var_48] 0 +
call loc_414A90  +
mov [esp+78h+var_10] 1 +
lea eax [esp+78h+var_50] +
cmp [esp+78h+var_3C] 10h +
mov ecx [esp+78h+var_68] +
cmovnb eax [esp+78h+var_50] +
mov edx [esp+78h+var_64] +
push eax  +
lea eax [edi+ecx] +
push eax  +
mov edx [edx] +
push ecx  +
mov ecx [esp+84h+var_64] +
call dword ptr [edx+1Ch]  +
lea eax [esp+84h+var_74] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+88h+var_1C] 2 +
call sub_415480  +
mov [esp+88h+var_1C] 1 +
add esp 4 +
mov ecx [esp+84h+var_74] +
mov esi eax +
mov [esp+84h+var_64] esi +
test ecx ecx +
jz loc_418E30  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418E30  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [esp+88h+var_48] +
mov ecx esi +
push eax  +
call sub_414F10  +
mov [esp+88h+var_20] 3 +
lea esi [esp+88h+var_48] +
cmp [esp+88h+var_34] 10h +
cmovnb esi [esp+88h+var_48] +
mov al [esi] +
cmp al 7Fh +
jz loc_418EA1  +
test al al +
jle loc_418EA1  +
mov ecx [esp+88h+var_68] +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov byte ptr [esp+88h+var_78] al +
mov al [esi] +
cmp al 7Fh +
jz loc_418EA1  +
mov edi edi +
test al al +
jle loc_418EA1  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_418EA1  +
push [esp+88h+var_78]  +
sub edi ecx +
lea ecx [esp+8Ch+var_60] +
push 1  +
push edi  +
call loc_414B60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_418E70  +
mov esi [esp+94h+var_7C] +
mov eax [esp+94h+var_5C] +
mov [esp+94h+var_84] eax +
cmp dword ptr [esi+24h] 0 +
jl loc_418EC6  +
jg loc_418EBB  +
cmp dword ptr [esi+20h] 0 +
jbe loc_418EC6  +
mov edi [esi+20h] +
cmp edi eax +
jbe loc_418EC6  +
sub edi eax +
jmp loc_418EC8  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_418F7A  +
cmp eax 100h +
jz loc_418F2D  +
push edi  +
push [ebp+arg_14]  +
lea eax [esp+9Ch+var_7C] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4190E0  +
mov edx eax +
lea ecx [esp+0ACh+var_6C] +
xor edi edi +
cmp [esp+0ACh+var_58] 10h +
push ebx  +
cmovnb ecx [esp+0B0h+var_6C] +
mov eax [edx] +
mov [ebp+arg_8] eax +
mov eax [edx+4] +
push ecx  +
mov [ebp+arg_C] eax +
lea eax [esp+0B4h+var_7C] +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
add esp 30h +
jmp loc_418FA0  +
cmp [esp+94h+var_58] 10h +
lea eax [esp+94h+var_6C] +
push ebx  +
cmovnb eax [esp+98h+var_6C] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0A0h+var_7C] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
mov ecx eax +
push edi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0B4h+var_7C] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4190E0  +
add esp 30h +
xor edi edi +
jmp loc_418FA0  +
cmp [esp+94h+var_58] 10h +
lea eax [esp+94h+var_6C] +
push ebx  +
cmovnb eax [esp+98h+var_6C] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0A0h+var_7C] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_419070  +
add esp 18h +
mov edx [eax] +
cmp [esp+94h+var_58] 10h +
mov ecx [esp+94h+var_84] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [esp+94h+var_80] eax +
mov [ebp+arg_C] eax +
lea eax [esp+94h+var_6C] +
cmovnb eax [esp+94h+var_6C] +
sub ecx ebx +
push ecx  +
add eax ebx +
mov ebx [ebp+arg_0] +
push eax  +
push [esp+9Ch+var_80]  +
lea eax [esp+0A0h+var_7C] +
push edx  +
push eax  +
push ebx  +
call sub_419070  +
push edi  +
push [ebp+arg_14]  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov esi [esp+0BCh+var_70] +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
call sub_4190E0  +
add esp 30h +
cmp [esp+94h+var_40] 10h +
jb loc_41901A  +
push [esp+94h+var_54]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+94h+var_58] 10h +
mov [esp+94h+var_40] 0Fh +
mov [esp+94h+var_44] 0 +
mov byte ptr [esp+94h+var_54] 0 +
jb loc_419042  +
push [esp+94h+var_6C]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [esp+94h+var_34] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+84h+var_3C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+arg_C] +
test esi esi +
jz loc_4190D0  +
push ebx  +
mov ebx [ebp+arg_10] +
test edi edi +
jz loc_4190C7  +
mov eax [edi+20h] +
mov cl [ebx] +
mov byte ptr [ebp+arg_14+3] cl +
cmp dword ptr [eax] 0 +
jz loc_4190B4  +
mov edx [edi+30h] +
mov eax [edx] +
test eax eax +
jle loc_4190B4  +
dec eax  +
mov [edx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al byte ptr [ebp+arg_14+3] +
mov [edx] al +
movzx eax al +
jmp loc_4190BF  +
mov edx [edi] +
movzx eax cl +
mov ecx edi +
push eax  +
call dword ptr [edx+0Ch]  +
mov edi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_4190CB  +
mov byte ptr [ebp+arg_8] 1 +
inc ebx  +
dec esi  +
jnz loc_419083  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_419137  +
push ebx  +
mov bl [ebp+arg_10] +
test esi esi +
jz loc_41912F  +
mov eax [esi+20h] +
cmp dword ptr [eax] 0 +
jz loc_41911C  +
mov ecx [esi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_41911C  +
dec eax  +
mov [ecx] eax +
mov ecx [esi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov [edx] bl +
movzx eax bl +
jmp loc_419127  +
mov edx [esi] +
mov ecx esi +
movzx eax bl +
push eax  +
call dword ptr [edx+0Ch]  +
mov esi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_419133  +
mov byte ptr [ebp+arg_8] 1 +
dec edi  +
jnz loc_4190F3  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop edi  +
mov [eax+4] esi +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45B859  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
mov eax [esi+34h] +
mov edi [ebp+arg_0] +
mov ecx [eax] +
mov [edi] ecx +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ebx [ebp+arg_4] +
mov ecx esi +
mov [ebp+var_4] 0 +
mov eax [esi] +
push ebx  +
mov [ebp+var_10] 1 +
call dword ptr [eax+38h]  +
mov esi [esi+34h] +
mov ecx [esi] +
cmp ecx [ebx] +
jz loc_4191D1  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4191C8  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov ecx [ebx] +
mov [esi] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41921D  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_41921D  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+arg_0] +
mov [edx] al +
movzx eax al +
pop ebp  +
retn 4  +
mov eax dword ptr [ebp+arg_0] +
mov edx [ecx] +
movzx eax al +
mov dword ptr [ebp+arg_0] eax +
pop ebp  +
jmp dword ptr [edx+0Ch]  +
***
mov eax [ebp+arg_0] +
movzx ecx ax +
mov eax ecx +
and eax 80000003h +
jns loc_419247  +
dec eax  +
or eax 0FFFFFFFCh +
inc eax  +
jnz loc_41926B  +
push esi  +
mov eax ecx +
mov esi 64h +
cdq   +
idiv  esi +
pop esi  +
test edx edx +
jnz loc_419267  +
mov eax ecx +
mov ecx 190h +
cdq   +
idiv  ecx +
test edx edx +
jnz loc_41926B  +
mov al 1 +
pop ebp  +
retn   +
xor al al +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_440646  +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov dword ptr [esi] offset off_46966C +
mov dword ptr [esi+0Ch] offset off_469A5C +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push ecx  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_419D80  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_440646  +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov dword ptr [esi] offset off_469A0C +
mov dword ptr [esi+0Ch] offset off_469A54 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push ecx  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_419E80  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C110  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax [ebp+arg_4] +
xor esi esi +
mov [ebp+var_1C] esi +
cmp byte ptr [eax] 0 +
jnz loc_41938C  +
xor edx edx +
jmp loc_41939A  +
mov edx eax +
lea ecx [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_419391  +
sub edx ecx +
mov ecx [ebp+arg_0] +
mov [ebp+var_18] edx +
mov eax [ecx] +
mov eax [eax+4] +
mov ebx [eax+ecx+24h] +
mov edi [eax+ecx+20h] +
test ebx ebx +
jl loc_4193C7  +
jg loc_4193C1  +
test edi edi +
jz loc_4193C7  +
test ebx ebx +
jl loc_4193C7  +
jg loc_4193C1  +
cmp edi edx +
jbe loc_4193C7  +
sub edi edx +
sbb ebx esi +
jmp loc_4193D5  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-28h] xmm0 +
mov ebx [ebp+var_24] +
mov edi [ebp+var_28] +
mov edx [eax+ecx+38h] +
mov [ebp+var_28] ecx +
test edx edx +
jz loc_4193EA  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+4]  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax [ecx] +
mov eax [eax+4] +
cmp dword ptr [eax+ecx+0Ch] 0 +
jnz loc_419413  +
mov eax [eax+ecx+3Ch] +
test eax eax +
jz loc_419413  +
cmp eax ecx +
jz loc_419413  +
mov ecx eax +
call sub_414290  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov edx [eax+4] +
add edx ecx +
cmp dword ptr [edx+0Ch] 0 +
setz al  +
mov byte ptr [ebp+var_24] al +
mov [ebp+var_4] 1 +
test al al +
jnz loc_419439  +
mov esi 4 +
jmp loc_419597  +
mov byte ptr [ebp+var_4] 2 +
mov eax [edx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_4194B4  +
lea ebx [ebx+0] +
test ebx ebx +
jl loc_4194AC  +
jg loc_41945A  +
test edi edi +
jz loc_4194AC  +
mov eax [ecx] +
mov eax [eax+4] +
mov dl [eax+ecx+40h] +
mov ecx [eax+ecx+38h] +
mov [ebp+var_11] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_419495  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_419492  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_41949E  +
mov dl [ebp+var_11] +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
mov ecx [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jnz loc_41951B  +
or esi 4 +
mov [ebp+var_1C] esi +
test esi esi +
jnz loc_419549  +
mov eax [ecx] +
push 0  +
push [ebp+var_18]  +
mov eax [eax+4] +
push [ebp+arg_4]  +
mov ecx [eax+ecx+38h] +
call sub_419D60  +
cmp eax [ebp+var_18] +
jnz loc_419541  +
test edx edx +
jnz loc_419541  +
test ebx ebx +
jl loc_419546  +
jg loc_4194DD  +
test edi edi +
jz loc_419546  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+4] +
mov dl [eax+ecx+40h] +
mov ecx [eax+ecx+38h] +
mov byte ptr [ebp+arg_4+3] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_419526  +
mov eax [ecx+30h] +
mov eax [eax] +
test eax eax +
jle loc_419526  +
mov edx [ecx+30h] +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al byte ptr [ebp+arg_4+3] +
mov [edx] al +
movzx eax al +
jmp loc_41952F  +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
jmp loc_419450  +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_419539  +
or esi 4 +
jmp loc_419546  +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
jmp loc_4194D3  +
mov esi 4 +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+4] +
mov dword ptr [eax+ecx+20h] 0 +
mov dword ptr [eax+ecx+24h] 0 +
jmp loc_419590  +
mov ecx [ebp+8] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41957A  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41958A +
retn   +
mov esi [ebp-1Ch] +
mov ecx [ebp+8] +
mov [ebp+var_4] 1 +
mov eax [ecx] +
mov edx [eax+4] +
add edx ecx +
test esi esi +
jz loc_4195BA  +
mov eax [edx+0Ch] +
or eax esi +
cmp dword ptr [edx+38h] 0 +
jnz loc_4195B0  +
or eax 4 +
push 0  +
push eax  +
mov ecx edx +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
mov esi [ebp+var_28] +
test al al +
jnz loc_4195D4  +
mov ecx esi +
call sub_414D50  +
mov ecx [esi] +
mov ecx [ecx+4] +
mov ecx [ecx+esi+38h] +
test ecx ecx +
jz loc_4195E6  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C140  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_12] dl +
mov edi ecx +
mov [ebp+var_20] edi +
mov eax [edi] +
xor esi esi +
mov ebx edi +
mov [ebp+var_1C] esi +
mov [ebp+var_28] ebx +
mov eax [eax+4] +
mov ecx [eax+edi+38h] +
test ecx ecx +
jz loc_41964F  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [edi] +
mov eax [eax+4] +
cmp dword ptr [eax+edi+0Ch] 0 +
jnz loc_419673  +
mov ecx [eax+edi+3Ch] +
test ecx ecx +
jz loc_419673  +
cmp ecx edi +
jz loc_419673  +
call sub_414290  +
mov eax [edi] +
mov edx [eax+4] +
add edx edi +
cmp dword ptr [edx+0Ch] 0 +
setz al  +
mov [ebp+var_24] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41983B  +
mov ecx [edx+24h] +
mov ebx [edx+20h] +
test ecx ecx +
jg loc_4196B4  +
jl loc_4196A4  +
cmp ebx 1 +
ja loc_4196B4  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-30h] xmm0 +
mov ecx [ebp+var_2C] +
mov ebx [ebp+var_30] +
jmp loc_4196BA  +
sub ebx 1 +
sbb ecx 0 +
mov byte ptr [ebp+var_4] 2 +
mov eax [edx+14h] +
and eax 1C0h +
mov [ebp+var_18] ecx +
cmp eax 40h +
jz loc_419740  +
mov edi edi +
test esi esi +
jnz loc_419831  +
test ecx ecx +
jl loc_419740  +
jg loc_4196E2  +
test ebx ebx +
jz loc_419740  +
mov eax [edi] +
mov eax [eax+4] +
mov cl [eax+edi+40h] +
mov [ebp+var_11] cl +
mov ecx [eax+edi+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41971A  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_41971A  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_419724  +
movzx eax [ebp+var_11] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
mov ecx [ebp+var_18] +
cmp eax 0FFFFFFFFh +
mov edx 4 +
cmovz esi edx +
add ebx 0FFFFFFFFh +
mov [ebp+var_1C] esi +
adc ecx 0FFFFFFFFh +
mov [ebp+var_18] ecx +
jmp loc_4196D0  +
mov eax [edi] +
mov eax [eax+4] +
mov ecx [eax+edi+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_419771  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_419771  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_12] +
mov [edx] al +
movzx eax al +
jmp loc_41977B  +
movzx eax [ebp+var_12] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
mov eax 4 +
cmovz esi eax +
mov eax [ebp+var_18] +
mov [ebp+var_1C] esi +
test esi esi +
jnz loc_419831  +
test eax eax +
jl loc_419831  +
jg loc_4197A6  +
test ebx ebx +
jz loc_419831  +
mov eax [edi] +
mov eax [eax+4] +
mov cl [eax+edi+40h] +
mov [ebp+var_12] cl +
mov ecx [eax+edi+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_4197DE  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_4197DE  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_12] +
mov [edx] al +
movzx eax al +
jmp loc_4197E8  +
movzx eax [ebp+var_12] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
mov eax 4 +
cmovz esi eax +
mov eax [ebp+var_18] +
add ebx 0FFFFFFFFh +
adc eax 0FFFFFFFFh +
mov [ebp+var_18] eax +
jmp loc_419789  +
mov ecx [ebp-20h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41981B  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41982B +
retn   +
mov edi [ebp-20h] +
mov esi [ebp-1Ch] +
mov [ebp+var_4] 1 +
mov ebx [ebp+var_28] +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [eax+edi+20h] 0 +
mov dword ptr [eax+edi+24h] 0 +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
test esi esi +
jz loc_419871  +
mov eax [ecx+0Ch] +
or eax esi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_419869  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_419888  +
mov ecx ebx +
call sub_414D50  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
test ecx ecx +
jz loc_41989A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_440646  +
mov dword ptr [esi+0Ch] offset off_463FE8 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov dword ptr [esi] offset off_469A20 +
mov dword ptr [esi+0Ch] offset off_469958 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push ecx  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_419F80  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
push 1  +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
call sub_41A080  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_47825C +
mov ebx dword_478064 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_419A0B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_47825C edi +
jnz loc_4199FD  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_47825C eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_47825C +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_419A21  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_419A8D  +
jmp loc_419A23  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_419A39  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_419A3D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_419A8D  +
test ebx ebx +
jz loc_419A45  +
mov esi ebx +
jmp loc_419A8D  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_41A190  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_419A74  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_478064 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45C168  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx ecx +
lea ecx [ebp-34h] +
call sub_41A4A0  +
mov edx eax +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-68h] +
call sub_41A510  +
push offset unk_47225C  +
lea eax [ebp-68h] +
push eax  +
call sub_443DCE  +
call sub_41A280  +
mov dword ptr [esi+30h] offset off_463FF0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C1B4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_419B75  +
mov dword ptr [esi+28h] offset unk_4699E0 +
mov dword ptr [esi+30h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_4405CF  +
mov dword ptr [esi] offset off_4699A4 +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov [ebp+var_4] 1 +
mov dword ptr [esi+14h] offset off_463FE8 +
mov ecx [edi+18h] +
mov [esi+18h] ecx +
test ecx ecx +
jz loc_419BAF  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+1Ch] +
mov [esi+1Ch] eax +
mov eax [edi+20h] +
mov [esi+20h] eax +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax [esi+28h] +
mov dword ptr [esi] offset off_469A2C +
mov dword ptr [esi+14h] offset off_469978 +
mov eax [eax+4] +
mov dword ptr [eax+esi+28h] offset off_4699EC +
mov eax [esi+28h] +
mov eax [eax+4] +
mov dword ptr [eax+esi+24h] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_45C1D8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push edi  +
call sub_4405CF  +
mov dword ptr [esi] offset off_4699A4 +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] offset off_463FE8 +
mov ecx [edi+18h] +
mov [esi+18h] ecx +
test ecx ecx +
jz loc_419C62  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [edi+1Ch] +
mov [esi+1Ch] eax +
mov eax [edi+20h] +
mov [esi+20h] eax +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax esi +
mov dword ptr [esi] offset off_4699D8 +
mov dword ptr [esi+14h] offset off_4699B0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_4405CF  +
mov dword ptr [edi] offset off_4699A4 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41A280  +
test [ebp+arg_0] 1 +
mov dword ptr [esi+30h] offset off_463FF0 +
jz loc_419CF1  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4699D8 +
mov dword ptr [esi+14h] offset off_4699B0 +
mov dword ptr [esi+14h] offset off_463FE8 +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_419D33  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_419D33  +
mov dword ptr [esi+18h] 0 +
mov ecx esi +
mov dword ptr [esi] offset off_4699A4 +
call sub_44067A  +
test [ebp+arg_0] 1 +
jz loc_419D4F  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+24h] +
call eax  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45BE6C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_469990 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_419DEF  +
lea ecx [edi+0Ch] +
jmp loc_419DF1  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_419E11  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469678 +
mov dword ptr [ebx] offset off_46999C +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469690 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_419E5A  +
add edi 0Ch +
jmp loc_419E5C  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45BEBC  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_4626A4 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_419EEF  +
lea ecx [edi+0Ch] +
jmp loc_419EF1  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_419F11  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469684 +
mov dword ptr [ebx] offset off_469980 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_469A44 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_419F5A  +
add edi 0Ch +
jmp loc_419F5C  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45BF0C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push edi  +
mov [ebp+var_10] 1 +
call sub_440646  +
mov dword ptr [esi] offset off_469A38 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_419FEF  +
lea ecx [edi+0Ch] +
jmp loc_419FF1  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_0] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_41A011  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_469A7C +
mov dword ptr [ebx] offset off_469A18 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_4699C8 +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_41A05A  +
add edi 0Ch +
jmp loc_41A05C  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45BF5C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jz loc_41A0D6  +
mov dword ptr [esi+20h] offset unk_469984 +
mov dword ptr [esi+28h] offset off_463FF0 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edi [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_440646  +
mov dword ptr [esi] offset off_464018 +
mov [ebp+var_4] 1 +
test edi edi +
jz loc_41A0F7  +
lea ecx [edi+0Ch] +
jmp loc_41A0F9  +
xor ecx ecx +
lea ebx [esi+0Ch] +
mov [ebp+arg_4] ecx +
mov dword ptr [ebx] offset off_463FE8 +
mov edx [ecx+4] +
mov [ebx+4] edx +
test edx edx +
jz loc_41A119  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+arg_4] +
mov eax [ecx+8] +
mov [ebx+8] eax +
mov eax [ecx+0Ch] +
mov [ebx+0Ch] eax +
mov eax [ecx+10h] +
mov [ebx+10h] eax +
mov [ebp+var_4] 2 +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_464038 +
mov dword ptr [ebx] offset off_464044 +
mov eax [eax+4] +
mov dword ptr [eax+esi+20h] offset off_46404C +
mov eax [esi+20h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+1Ch] eax +
test edi edi +
jz loc_41A162  +
add edi 0Ch +
jmp loc_41A164  +
xor edi edi +
push edi  +
push ebx  +
call sub_412DA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45C20B  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test edi edi +
jz loc_41A226  +
cmp [edi] ebx +
jnz loc_41A226  +
push 8  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_41A215  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
test ecx ecx +
jnz loc_41A1EE  +
mov eax (offset asc_4696CC+2) +
jmp loc_41A1F8  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41A1F8  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_44] +
call sub_411E50  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_4628C0 +
jmp loc_41A217  +
xor esi esi +
mov [edi] esi +
test bl 1 +
jz loc_41A226  +
lea ecx [ebp+var_44] +
call sub_411F10  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4699D8 +
mov dword ptr [esi+14h] offset off_4699B0 +
mov dword ptr [esi+14h] offset off_463FE8 +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_41A270  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_41A270  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi] offset off_4699A4 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
mov eax [esi+28h] +
mov dword ptr [esi] offset off_469A2C +
mov dword ptr [esi+14h] offset off_469978 +
mov eax [eax+4] +
mov dword ptr [eax+esi+28h] offset off_4699EC +
mov eax [esi+28h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+24h] eax +
mov dword ptr [esi] offset off_4699D8 +
mov dword ptr [esi+14h] offset off_4699B0 +
mov dword ptr [esi+14h] offset off_463FE8 +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_41A2D8  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_41A2D8  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi] offset off_4699A4 +
mov ecx esi +
pop esi  +
jmp sub_44067A  +
***
push 0FFFFFFFFh  +
push offset loc_45BDBB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 34h  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_41A362  +
push ecx  +
mov byte ptr [ebp+var_10] 0 +
lea eax [esi-30h] +
push [ebp+var_10]  +
push eax  +
call sub_41A3B0  +
test eax eax +
jz loc_41A362  +
mov ecx [eax+28h] +
add eax 28h +
mov ecx [ecx+4] +
add eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 34h +
lea eax [ecx-30h] +
lea ecx [ebp-34h] +
push 1  +
push eax  +
call sub_419B20  +
push offset unk_47225C  +
lea eax [ebp-34h] +
push eax  +
call sub_443DCE  +
push 0FFFFFFFFh  +
push offset loc_45C25C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi+28h] offset unk_4699E0 +
mov dword ptr [edi+30h] offset off_463FF0 +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
push esi  +
mov [ebp+var_10] 1 +
call sub_4405CF  +
mov dword ptr [edi] offset off_4699A4 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
lea ebx [esi+14h] +
mov [ebp+var_4] 1 +
lea esi [edi+14h] +
mov dword ptr [esi] offset off_463FE8 +
mov ecx [ebx+4] +
mov [esi+4] ecx +
test ecx ecx +
jz loc_41A43D  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov [ebp+var_4] 2 +
mov eax [edi+28h] +
mov dword ptr [edi] offset off_469A2C +
mov dword ptr [esi] offset off_469978 +
push ebx  +
mov eax [eax+4] +
push esi  +
mov dword ptr [eax+edi+28h] offset off_4699EC +
mov eax [edi+28h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi+24h] eax +
call sub_412DA0  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push edi  +
mov esi edx +
mov [ebp+var_4] 0 +
push esi  +
mov edi ecx +
call sub_4405CF  +
mov dword ptr [edi] offset off_4699A4 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi+14h] offset off_463FE8 +
mov dword ptr [edi+18h] 0 +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0FFFFFFFFh +
mov dword ptr [edi] offset off_4699D8 +
mov dword ptr [edi+14h] offset off_4699B0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push ecx  +
push edx  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_41A530  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx 14h +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx 0Ch +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx 0Ch +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx 0Ch +
sub ecx 14h +
jmp sub_419D00  +
***
push 0FFFFFFFFh  +
push offset loc_45C298  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov eax [eax+4] +
test byte ptr [eax+esi+0Ch] 1 +
jnz loc_41A89D  +
mov ecx [eax+esi+38h] +
xor edi edi +
mov [ebp+var_1C] edi +
mov ebx esi +
mov [ebp+var_24] ebx +
test ecx ecx +
jz loc_41A765  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_20] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41A863  +
lea eax [ebp+var_14] +
push eax  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_14] +
mov [ebp+var_18] eax +
test ecx ecx +
jz loc_41A7C3  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41A7C3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov byte ptr [ebp+var_4] 3 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_41A7E6  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_41A7E6  +
movzx eax byte ptr [edx] +
jmp loc_41A7F0  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
jmp loc_41A7F0  +
cmp eax 0FFFFFFFFh +
jnz loc_41A801  +
or edi 1 +
mov [ebp+var_4] 1 +
jmp loc_41A863  +
movzx ecx al +
mov eax [ebp+var_18] +
mov eax [eax+0Ch] +
test byte ptr [eax+ecx*2] 48h +
jnz loc_41A819  +
mov [ebp+var_4] 1 +
jmp loc_41A863  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call sub_41BE10  +
jmp loc_41A7F0  +
mov ecx [ebp+8] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41A843  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41A853 +
retn   +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
mov dword ptr [ebp-4] 1 +
mov ebx [ebp-24h] +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_41A884  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41A87C  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebx] +
mov ecx [ecx+4] +
mov ecx [ecx+ebx+38h] +
test ecx ecx +
jz loc_41A89D  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C2EC  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_469D2C +
mov dword ptr [esi+18h] 0Fh +
mov dword ptr [esi+14h] 0 +
mov byte ptr [esi+4] 0 +
mov [ebp+var_4] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
call sub_41DFF0  +
mov [esi+1Ch] eax +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+44h] 0Fh +
mov dword ptr [esi+40h] 0 +
mov byte ptr [esi+30h] 0 +
push 0FFFFFFFFh  +
lea ecx [esi+48h] +
mov byte ptr [ebp+var_4] 3 +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov byte ptr [esi+60h] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45C347  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi] offset off_469D2C +
mov [ebp+var_4] 4 +
cmp dword ptr [edi+44h] 10h +
jb loc_41A9D3  +
mov ecx [edi+30h] +
jmp loc_41A9D6  +
lea ecx [edi+30h] +
mov eax [edi+40h] +
add eax ecx +
cmp dword ptr [edi+44h] 10h +
jb loc_41A9E6  +
mov ecx [edi+30h] +
jmp loc_41A9E9  +
lea ecx [edi+30h] +
cmp dword ptr [edi+44h] 10h +
jb loc_41A9F4  +
mov esi [edi+30h] +
jmp loc_41A9F7  +
lea esi [edi+30h] +
test ecx ecx +
jnz loc_41A9FF  +
xor edx edx +
jmp loc_41AA03  +
mov edx ecx +
sub edx esi +
test eax eax +
jz loc_41AA09  +
sub eax ecx +
push eax  +
push edx  +
lea ecx [edi+30h] +
call loc_410720  +
mov eax [edi+1Ch] +
lea ecx [edi+1Ch] +
push dword ptr [eax+4]  +
call sub_41CED0  +
mov eax [edi+1Ch] +
mov [eax+4] eax +
mov eax [edi+1Ch] +
mov [eax] eax +
mov eax [edi+1Ch] +
mov [eax+8] eax +
mov dword ptr [edi+20h] 0 +
mov esi [edi+24h] +
cmp esi [edi+28h] +
jz loc_41AA55  +
mov ecx [esi] +
test ecx ecx +
jz loc_41AA4D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
add esi 4 +
cmp esi [edi+28h] +
jnz loc_41AA41  +
cmp dword ptr [edi+5Ch] 10h +
jb loc_41AA66  +
push dword ptr [edi+48h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+5Ch] 0Fh +
mov dword ptr [edi+58h] 0 +
mov byte ptr [edi+48h] 0 +
cmp dword ptr [edi+44h] 10h +
jb loc_41AA89  +
push dword ptr [edi+30h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+44h] 0Fh +
mov dword ptr [edi+40h] 0 +
mov byte ptr [edi+30h] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_41AAC0  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
mov eax [edi+1Ch] +
lea ecx [edi+1Ch] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_10] +
push eax  +
call sub_41D740  +
push dword ptr [edi+1Ch]  +
call sub_43FFF6  +
add esp 4 +
cmp dword ptr [edi+18h] 10h +
jb loc_41AAEE  +
push dword ptr [edi+4]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+18h] 0Fh +
mov dword ptr [edi+14h] 0 +
mov byte ptr [edi+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add ecx 30h +
cmp ecx eax +
jz loc_41AB37  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
add ecx 30h +
call loc_410440  +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C380  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_474390 +
xor eax esp +
mov [esp+64h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+74h+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [esp+74h+var_64] ebx +
mov al [ebx+60h] +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
test al al +
jz loc_41AC13  +
cmp dword ptr [esi+14h] 10h +
mov ebx [esi+10h] +
jb loc_41ABB7  +
mov ecx [esi] +
jmp loc_41ABB9  +
mov ecx esi +
mov eax 7 +
cmp ebx eax +
cmovb eax ebx +
push eax  +
push offset aVersion_0  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_41ABEA  +
cmp ebx 7 +
jnb loc_41ABE0  +
or eax 0FFFFFFFFh +
jmp loc_41ABE8  +
xor eax eax +
cmp ebx 7 +
setnz al  +
test eax eax +
setz al  +
test al al +
jz loc_41AC0F  +
mov ecx [esp+74h+var_64] +
add ecx 4 +
cmp ecx edi +
jz loc_41ACBD  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
call loc_4105F0  +
jmp loc_41ACBD  +
mov ebx [esp+74h+var_64] +
mov [esp+74h+var_48] 0Fh +
mov [esp+74h+var_4C] 0 +
mov byte ptr [esp+74h+var_5C] 0 +
lea eax [esp+74h+var_5C] +
mov [esp+74h+var_4] 0 +
cmp eax edi +
jz loc_41AC44  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov ecx eax +
call loc_4105F0  +
push esi  +
lea eax [esp+84h+var_70] +
add ebx 1Ch +
push eax  +
mov ecx ebx +
call sub_41BF80  +
mov eax [esp+80h+var_70] +
cmp [ebx] eax +
jnz loc_41AC95  +
lea eax [esp+80h+var_68] +
push eax  +
push esi  +
lea ecx [esp+88h+var_50] +
call sub_41E040  +
push eax  +
mov ecx ebx +
mov [esp+84h+var_10] 1 +
call sub_41E8A0  +
push eax  +
add eax 10h +
push eax  +
push ecx  +
lea eax [esp+8Ch+var_70] +
mov ecx ebx +
push eax  +
call sub_41E8D0  +
lea ecx [esp+80h+var_50] +
call sub_41B0E0  +
jmp loc_41ACAA  +
lea ecx [eax+28h] +
lea eax [esp+80h+var_68] +
cmp ecx eax +
jz loc_41ACAA  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
cmp [esp+8Ch+var_60] 10h +
jb loc_41ACBD  +
push [esp+8Ch+var_74]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [esp+8Ch+var_24] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+7Ch+var_2C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp [ebp+arg_0] 0 +
jz loc_41ACF5  +
lea eax [ebp+arg_0] +
add ecx 24h +
push eax  +
call sub_41BF10  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
xor dl dl +
mov eax [edi+28h] +
mov esi [edi+24h] +
cmp esi eax +
jz loc_41AD53  +
mov ecx [ebp+arg_0] +
cmp [esi] ecx +
jz loc_41AD21  +
add esi 4 +
cmp esi eax +
jnz loc_41AD16  +
cmp esi eax +
jz loc_41AD53  +
mov ecx [esi] +
test ecx ecx +
jz loc_41AD31  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [edi+28h] +
lea ecx [esi+4] +
sub eax ecx +
and eax 0FFFFFFFCh +
push eax  +
push ecx  +
push esi  +
call loc_43F850  +
add esp 0Ch +
mov al 1 +
add dword ptr [edi+28h] 0FFFFFFFCh +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
pop edi  +
mov al dl +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 30h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 48h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45C3D9  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_44] eax +
mov ebx [ebp+arg_0] +
mov [ebp+var_48] 0 +
mov [ebp+var_4C] ebx +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov [ebp+var_4] 0 +
mov eax [eax+1Ch] +
mov [ebp+var_48] 1 +
mov esi [eax] +
cmp esi eax +
jz loc_41AF8E  +
lea esp [esp+0] +
push 0FFFFFFFFh  +
push 0  +
lea edi [esi+10h] +
mov [ebp+var_2C] 0Fh +
push edi  +
lea ecx [ebp+var_40] +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
call loc_4105F0  +
push 0FFFFFFFFh  +
mov [ebp+var_4] 1 +
lea eax [edi+18h] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4105F0  +
mov [ebp+var_4] 2 +
lea ecx [ebp+var_40] +
mov eax [ebx+4] +
cmp ecx eax +
jnb loc_41AEE6  +
mov edx [ebx] +
cmp edx ecx +
ja loc_41AEE6  +
sub ecx edx +
mov eax 2AAAAAABh +
imul  ecx +
mov eax [ebx+4] +
sar edx 3 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp eax [ebx+8] +
jnz loc_41AED5  +
push ecx  +
mov ecx ebx +
call loc_41D000  +
mov ecx [ebx+4] +
lea eax [edi+edi*2] +
shl eax 4 +
add eax [ebx] +
test ecx ecx +
jz loc_41AF03  +
jmp loc_41AEFD  +
cmp eax [ebx+8] +
jnz loc_41AEF3  +
push ecx  +
mov ecx ebx +
call loc_41D000  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_41AF03  +
lea eax [ebp+var_40] +
push eax  +
call sub_422920  +
add dword ptr [ebx+4] 30h +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_14] 10h +
jb loc_41AF1C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_2C] 10h +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
jb loc_41AF3F  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41AF82  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41AF64  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41AF82  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41AF58  +
jmp loc_41AF82  +
mov ecx [esi+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41AF80  +
lea ecx [ecx+0] +
cmp esi [ecx+8] +
jnz loc_41AF80  +
mov esi ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_41AF70  +
mov esi ecx +
mov eax [ebp+var_44] +
cmp esi [eax+1Ch] +
jnz loc_41AE50  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push 0FFFFFFFFh  +
push offset loc_45C40B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_469D2C +
mov dword ptr [esi+18h] 0Fh +
mov dword ptr [esi+14h] 0 +
mov byte ptr [esi+4] 0 +
mov [ebp+var_4] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
call sub_41DFF0  +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+44h] 0Fh +
mov dword ptr [esi+40h] 0 +
mov byte ptr [esi+30h] 0 +
mov dword ptr [esi+5Ch] 0Fh +
mov dword ptr [esi+58h] 0 +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+60h] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41A990  +
test [ebp+arg_0] 1 +
jz loc_41B09A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call sub_41D740  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [esi+2Ch] 10h +
jb loc_41B0F4  +
push dword ptr [esi+18h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+2Ch] 0Fh +
mov dword ptr [esi+28h] 0 +
mov byte ptr [esi+18h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_41B116  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C459  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
lea ecx [edi+8] +
mov dword ptr [edi] offset off_469B64 +
call loc_41C050  +
mov byte ptr [ebp+var_4] 1 +
lea ebx [edi+48h] +
push 0FFFFFFFFh  +
mov dword ptr [edi+44h] 0 +
mov ecx ebx +
push 0  +
mov dword ptr [ebx+14h] 0Fh +
mov dword ptr [ebx+10h] 0 +
push esi  +
mov byte ptr [ebx] 0 +
call loc_4105F0  +
push 0FFFFFFFFh  +
lea ecx [edi+60h] +
mov byte ptr [ebp+var_4] 2 +
push 0  +
lea eax [ebp+arg_4] +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov byte ptr [ebp+var_4] 3 +
cmp dword ptr [edi+58h] 0 +
mov dword ptr [edi+78h] 0 +
mov dword ptr [edi+80h] 0 +
mov dword ptr [edi+84h] 0 +
jz loc_41B1F2  +
push ebx  +
mov ecx edi +
call loc_41B600  +
cmp [ebp+arg_18] 10h +
jb loc_41B203  +
push [ebp+arg_4]  +
call sub_43FFF6  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45C4A1  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi] offset off_469B64 +
mov [ebp+var_4] 2 +
mov eax [edi+40h] +
test eax eax +
jz loc_41B26E  +
push eax  +
call sub_401324  +
add esp 4 +
mov dword ptr [edi+40h] 0 +
cmp dword ptr [edi+20h] 0 +
jz loc_41B286  +
dec dword ptr [edi+20h]  +
jnz loc_41B280  +
mov dword ptr [edi+1Ch] 0 +
cmp dword ptr [edi+20h] 0 +
jnz loc_41B274  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_41B29A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+44h] 0 +
cmp dword ptr [edi+74h] 10h +
jb loc_41B2B2  +
push dword ptr [edi+60h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+74h] 0Fh +
mov dword ptr [edi+70h] 0 +
mov byte ptr [edi+60h] 0 +
cmp dword ptr [edi+5Ch] 10h +
jb loc_41B2D5  +
push dword ptr [edi+48h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+5Ch] 0Fh +
lea ecx [edi+8] +
mov dword ptr [edi+58h] 0 +
mov byte ptr [edi+48h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41C0D0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
xor bl bl +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B333  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_41B333  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
mov ecx [ebp+arg_0] +
mov al 1 +
mov [esi+78h] ecx +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov esi ecx +
xor bh bh +
xor bl bl +
push edi  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B374  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41B374  +
mov ecx esi +
call sub_41B3C0  +
mov bl al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B386  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_41B3B6  +
lea edi [esi+48h] +
push edi  +
call sub_4378BA  +
add esp 4 +
test al al +
jz loc_41B3B6  +
push edi  +
mov ecx esi +
call loc_41B600  +
test bl bl +
jz loc_41B3B0  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B3B0  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
mov al bh +
pop ebx  +
retn   +
***
and esp 0FFFFFFF8h +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B408  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41B3E9  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
test al al +
jz loc_41B40F  +
mov ecx esi +
call sub_41B420  +
mov bl al +
test bl bl +
jnz loc_41B400  +
mov ecx [esi+78h] +
push 0  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov al bl +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx esi +
call sub_41B420  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
lea eax [ebp+var_8] +
push esi  +
mov esi ecx +
push edi  +
push eax  +
lea edi [esi+48h] +
push edi  +
call sub_43795D  +
add esp 8 +
test al al +
jz loc_41B466  +
mov eax [esi+84h] +
cmp eax [ebp+var_4] +
ja loc_41B493  +
jb loc_41B456  +
mov eax [esi+80h] +
cmp eax [ebp+var_8] +
jnb loc_41B493  +
push edi  +
mov ecx esi +
call loc_41B600  +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword ptr [esi+84h] 0 +
ja loc_41B478  +
cmp dword ptr [esi+80h] 0 +
jbe loc_41B493  +
mov ecx esi +
call sub_41B7D0  +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+84h] 0 +
pop edi  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C4C8  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+2Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
xor bh bh +
test ecx ecx +
jz loc_41B527  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41B527  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B51E  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41B505  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_41B527  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_41B527  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_41B527  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B53D  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_41B5DD  +
push 20h  +
lea eax [esi+48h] +
push offset aWb  +
push eax  +
lea ecx [esp+38h+var_1C] +
call sub_4396D5  +
lea ecx [esp+2Ch+var_1C] +
mov [esp+2Ch+var_4] 0 +
call sub_4398A1  +
mov edi eax +
cmp dword ptr [edi+54h] 0 +
jz loc_41B5BA  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_41B582  +
push eax  +
push edi  +
call sub_438E33  +
add esp 8 +
mov ecx edi +
call sub_414290  +
lea ecx [esp+2Ch+var_1C] +
call sub_439871  +
lea eax [esi+80h] +
push eax  +
lea eax [esi+48h] +
push eax  +
call sub_43795D  +
add esp 8 +
test bh bh +
jz loc_41B5B6  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B5B6  +
mov eax [ecx] +
push 0  +
mov eax [eax+4] +
call eax  +
mov bl al +
jmp loc_41B5CC  +
mov bl 1 +
jmp loc_41B5CC  +
test bh bh +
jz loc_41B5CC  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B5CC  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
lea ecx [esp+30h+var_20] +
mov [esp+30h+var_8] 0FFFFFFFFh +
call sub_43981C  +
mov al bl +
mov ecx [esp+30h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45C50B  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
test ecx ecx +
jz loc_41B647  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41B647  +
mov ecx esi +
call sub_41B3C0  +
mov bl al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B65D  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_41B785  +
mov eax [ebp+8] +
lea edi [esi+48h] +
cmp edi eax +
jz loc_41B673  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
call loc_4105F0  +
lea ecx [esi+8] +
call sub_41C410  +
sub esp 8 +
mov dword ptr [esi+44h] 0 +
lea ecx [esi+8] +
call sub_41C1A0  +
cmp dword ptr [esi+58h] 0 +
jz loc_41B799  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B6AD  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_41B773  +
push ecx  +
push edi  +
lea ecx [esi+8] +
call sub_41C460  +
test al al +
jnz loc_41B6D8  +
test bl bl +
jz loc_41B785  +
push edi  +
call sub_4378BA  +
add esp 4 +
mov ecx esi +
call sub_41B7D0  +
jmp loc_41B777  +
push dword ptr [esi+0Ch]  +
lea ecx [ebp-3Ch] +
call sub_41C5C0  +
sub esp 34h +
mov dword ptr [ebp-4] 0 +
lea edx [esi+60h] +
mov ecx esp +
call sub_41E0D0  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [ebp-3Ch] +
call sub_41E230  +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-28h] +
cmp eax [ebp-24h] +
jnz loc_41B747  +
push 64h  +
call sub_440048  +
add esp 4 +
mov [ebp+8] eax +
mov byte ptr [ebp-4] 2 +
test eax eax +
jz loc_41B733  +
lea ecx [esi+60h] +
push ecx  +
mov ecx eax +
call sub_41A8C0  +
mov edx eax +
jmp loc_41B735  +
xor edx edx +
mov byte ptr [ebp-4] 1 +
mov ecx [esi+0Ch] +
mov [esi+44h] edx +
push edx  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_41B75C  +
mov eax [eax] +
mov [esi+44h] eax +
lea eax [esi+80h] +
push eax  +
push edi  +
call sub_43795D  +
add esp 8 +
lea ecx [ebp-2Ch] +
call sub_41C630  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_41C630  +
test bl bl +
jz loc_41B785  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41B785  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ebp+8] +
mov dword ptr [ebp+8] offset aPrefsFileUnabl +
push eax  +
lea ecx [ebp-1Ch] +
call sub_440606  +
push offset unk_4720E8  +
lea eax [ebp-1Ch] +
mov dword ptr [ebp-1Ch] offset off_4626A4 +
push eax  +
call sub_443DCE  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_45C583  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov eax [edi+44h] +
xor esi esi +
test eax eax +
jz loc_41B9E3  +
mov [ebp+var_34] offset off_469D00 +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] esi +
push eax  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] esi +
call sub_41D610  +
mov edx [ebp+arg_0] +
sub esp 34h +
mov ecx esp +
mov [ebp+var_4] 1 +
call sub_41E0D0  +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ebp+var_34] +
call sub_41E230  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_20] +
cmp eax [ebp+var_1C] +
jnz loc_41B9A8  +
cmp [ebp+arg_4] 0 +
jz loc_41B9AA  +
push 64h  +
mov byte ptr [ebp+var_4] 3 +
call sub_440048  +
add esp 4 +
mov dword ptr [ebp+arg_4] eax +
mov byte ptr [ebp+var_4] 4 +
test eax eax +
jz loc_41B97F  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_41A8C0  +
mov esi eax +
jmp loc_41B981  +
xor esi esi +
mov byte ptr [ebp+var_4] 3 +
mov ecx [edi+44h] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov eax [ebp+var_20] +
jmp loc_41B9AA  +
mov dword ptr [ebp+0Ch] 0 +
mov eax offset loc_41B9A0 +
retn   +
mov esi [ebp+0Ch] +
mov eax [ebp-20h] +
jmp loc_41B9AA  +
mov esi [eax] +
mov [ebp+var_24] offset off_469D00 +
test eax eax +
jz loc_41B9D3  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
mov eax [ebp+var_30] +
test eax eax +
jz loc_41B9E3  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_41B220  +
test [ebp+arg_0] 1 +
jz loc_41BA1A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx offset dword_478260 +
call sub_41B350  +
lea eax [ebp-2Ch] +
mov ecx offset dword_478260 +
push eax  +
call loc_41B600  +
mov eax offset loc_41BC2D +
retn   +
***
xor esi esi +
mov byte ptr [ebp-4] 7 +
mov ecx dword_4782D8 +
mov dword_47830C esi +
test ecx ecx +
jz loc_41BC9C  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41BCA2  +
mov dword_4782D8 esi +
cmp dword ptr [ebp-30h] 10h +
jb loc_41BCB3  +
push dword ptr [ebp-44h]  +
call sub_43FFF6  +
add esp 4 +
cmp dword ptr [ebp-18h] 10h +
jb loc_41BCC4  +
push dword ptr [ebp-2Ch]  +
call sub_43FFF6  +
add esp 4 +
mov eax offset dword_478260 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-60h] +
mov dword ptr [ebp-60h] offset aUnableToCreate +
push eax  +
lea ecx [ebp-6Ch] +
call sub_440606  +
push offset unk_4720E8  +
lea eax [ebp-6Ch] +
mov dword ptr [ebp-6Ch] offset off_4626A4 +
push eax  +
call sub_443DCE  +
push esi  +
mov esi ecx +
call sub_41BD40  +
test [ebp+arg_0] 1 +
jz loc_41BD2A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45C626  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_469B34 +
mov [ebp+var_4] 1 +
mov ecx [esi+0ACh] +
test ecx ecx +
jz loc_41BD87  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+0Ch]  +
mov dword ptr [esi+88h] offset off_469D10 +
cmp dword ptr [esi+0A4h] 10h +
jb loc_41BDA8  +
push dword ptr [esi+90h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+0A4h] 0Fh +
mov ecx esi +
mov dword ptr [esi+0A0h] 0 +
mov byte ptr [esi+90h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41B220  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_4627C0 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
mov eax [esi+1Ch] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov eax [esi+4] +
sub eax [esi] +
sar eax 2 +
push eax  +
call loc_41CDF0  +
test al al +
jz loc_41BED2  +
mov ecx [esi] +
mov eax [esi+4] +
sub eax ecx +
sar eax 2 +
lea esi ds:0[eax*4] +
push esi  +
push ecx  +
push dword ptr [edi]  +
call loc_43F850  +
add esp 0Ch +
add eax esi +
mov [edi+4] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
test eax eax +
jz loc_41BF06  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+4] +
cmp edi eax +
jnb loc_41BF51  +
mov ecx [esi] +
cmp ecx edi +
ja loc_41BF51  +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_41BF39  +
push ecx  +
mov ecx esi +
call loc_41CE60  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41BF69  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax [esi+8] +
jnz loc_41BF5E  +
push ecx  +
mov ecx esi +
call loc_41CE60  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41BF69  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push ebx  +
mov edi ecx +
call sub_41D800  +
mov esi eax +
mov eax [edi] +
mov [ebp+arg_4] eax +
cmp esi eax +
jz loc_41BFF8  +
cmp dword ptr [esi+24h] 10h +
lea ecx [esi+10h] +
mov edx [ecx+10h] +
mov [ebp+var_4] edx +
jb loc_41BFAE  +
mov ecx [ecx] +
cmp dword ptr [ebx+14h] 10h +
mov edi [ebx+10h] +
jb loc_41BFB9  +
mov ebx [ebx] +
cmp edi edx +
mov eax edx +
cmovb eax edi +
push eax  +
push ecx  +
push ebx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_41BFDD  +
mov ecx [ebp+var_4] +
cmp edi ecx +
jb loc_41BFF5  +
cmp edi ecx +
setnz al  +
test eax eax +
js loc_41BFF5  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_4] +
pop edi  +
mov [ebp+arg_4] esi +
mov ecx [ecx] +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
lea ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov ecx [ecx] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_41C047  +
push [ebp+var_4]  +
mov edx [esi+4] +
push ecx  +
call sub_41EAE0  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 0Ch +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+8] +
push 8  +
mov dword ptr [edi] offset off_469D24 +
mov dword ptr [edi+4] 0 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_41C0C9  +
mov [esi] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi] +
mov [eax] esi +
mov eax edi +
mov dword ptr [edi+30h] 0Fh +
mov dword ptr [edi+2Ch] 0 +
mov byte ptr [edi+1Ch] 0 +
mov byte ptr [edi+34h] 0 +
mov dword ptr [edi+38h] 0 +
pop edi  +
pop esi  +
retn   +
***
call sub_43A607  +
push 0FFFFFFFFh  +
push offset loc_45C666  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_469D24 +
mov [ebp+var_4] 1 +
mov eax [esi+38h] +
test eax eax +
jz loc_41C11D  +
push eax  +
call sub_401324  +
add esp 4 +
mov dword ptr [esi+38h] 0 +
cmp dword ptr [esi+18h] 0 +
jz loc_41C135  +
dec dword ptr [esi+18h]  +
jnz loc_41C12F  +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 0 +
jnz loc_41C123  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41C149  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [esi+4] 0 +
cmp dword ptr [esi+30h] 10h +
jb loc_41C15A  +
push dword ptr [esi+1Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+30h] 0Fh +
lea ecx [esi+8] +
mov dword ptr [esi+2Ch] 0 +
mov byte ptr [esi+1Ch] 0 +
call sub_41DA20  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+8] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C6BB  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov eax [esi+38h] +
test eax eax +
jz loc_41C1E7  +
push eax  +
call sub_401324  +
add esp 4 +
mov dword ptr [esi+38h] 0 +
cmp dword ptr [esi+18h] 0 +
jz loc_41C202  +
lea ecx [ecx+0] +
dec dword ptr [esi+18h]  +
jnz loc_41C1FC  +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 0 +
jnz loc_41C1F0  +
mov ecx [esi+4] +
lea edi [esi+4] +
test ecx ecx +
jz loc_41C218  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [edi] 0 +
push 0  +
push 0  +
push 0  +
xor bl bl +
call sub_401179  +
add esp 0Ch +
mov [esi+38h] eax +
test eax eax +
jz loc_41C3EC  +
push esi  +
push eax  +
call sub_401459  +
push 64h  +
mov [ebp+var_4] 0 +
call sub_440048  +
add esp 0Ch +
mov [ebp+var_7C] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41C25F  +
mov ecx eax +
call sub_41AFD0  +
jmp loc_41C261  +
xor eax eax +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_74] +
push 3  +
push offset a1_0  +
mov [edi] eax +
mov [ebp+var_60] 0Fh +
mov [ebp+var_64] 0 +
mov byte ptr [ebp+var_74] 0 +
call loc_4109B0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
push 7  +
push offset aVersion_0  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_4109B0  +
mov byte ptr [ebp+var_4] 3 +
lea edx [ebp+var_74] +
mov ecx [edi] +
push edx  +
lea edx [ebp+var_2C] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [ebp+var_18] 10h +
jb loc_41C2D1  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_60] 10h +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
jb loc_41C2F8  +
push [ebp+var_74]  +
call sub_43FFF6  +
add esp 4 +
push 5  +
push offset aUtf8  +
lea ecx [ebp+var_5C] +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
call loc_4109B0  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_44] +
push 8  +
push offset aEncoding_0  +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
call loc_4109B0  +
mov byte ptr [ebp+var_4] 5 +
lea edx [ebp+var_5C] +
mov ecx [edi] +
push edx  +
lea edx [ebp+var_44] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [ebp+var_30] 10h +
jb loc_41C362  +
push [ebp+var_44]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_48] 10h +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
jb loc_41C389  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
push edi  +
lea ecx [esi+8] +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
call loc_41D990  +
push offset sub_41D0A0  +
push dword ptr [esi+38h]  +
call sub_40144B  +
push offset sub_41D320  +
push dword ptr [esi+38h]  +
call sub_40143D  +
push offset sub_41D340  +
push dword ptr [esi+38h]  +
call sub_40142F  +
push offset sub_41D430  +
push dword ptr [esi+38h]  +
call sub_401470  +
add esp 20h +
mov bl 1 +
jmp loc_41C3EC  +
mov byte ptr [ebp-75h] 0 +
mov eax offset loc_41C3E9 +
retn   +
mov bl [ebp-75h] +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi+38h] +
test eax eax +
jz loc_41C42A  +
push eax  +
call sub_401324  +
add esp 4 +
mov dword ptr [esi+38h] 0 +
cmp dword ptr [esi+18h] 0 +
jz loc_41C442  +
dec dword ptr [esi+18h]  +
jnz loc_41C43C  +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 0 +
jnz loc_41C430  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41C456  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C6F8  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
push 24h  +
push offset aRb  +
push [ebp+arg_0]  +
lea ecx [ebp+var_24] +
mov bl 1 +
call sub_439599  +
lea ecx [ebp+var_24] +
mov [ebp+var_4] 0 +
call sub_4398A1  +
mov esi eax +
cmp dword ptr [esi+60h] 0 +
jz loc_41C591  +
push 2  +
sub esp 8 +
mov ecx esi +
call sub_41CC10  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_41C589  +
lea eax [ebp+var_40] +
mov ecx esi +
push eax  +
call sub_41CD10  +
mov ecx [eax+8] +
add ecx [eax] +
mov edx [eax+0Ch] +
adc edx [eax+4] +
test ecx ecx +
jnz loc_41C4FA  +
test edx edx +
jz loc_41C589  +
push 0  +
sub esp 8 +
mov ecx esi +
call sub_41CC10  +
mov eax [esi] +
mov bl 1 +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_41C589  +
test bl bl +
jz loc_41C589  +
push 400h  +
push dword ptr [edi+38h]  +
call sub_401000  +
add esp 8 +
test eax eax +
jnz loc_41C530  +
xor bl bl +
jmp loc_41C57D  +
sub esp 8 +
mov ecx esi +
push eax  +
call sub_41CAE0  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+0Ch] +
test cl 6 +
mov eax [esi+0Ch] +
mov [ebp+var_14] eax +
mov eax 0 +
setnz al  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [edi+38h]  +
call sub_4010F0  +
mov edi eax +
add esp 0Ch +
mov eax [ebp+var_10] +
push dword ptr [eax+38h]  +
call sub_403EFA  +
add esp 4 +
cmp edi 1 +
mov edi [ebp+var_10] +
setz bl  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jz loc_41C514  +
lea ecx [ebp+var_24] +
call sub_439871  +
lea ecx [ebp+var_24] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_439811  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45C72B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_469D00 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call sub_41D610  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_469D00 +
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
lea ecx [esi+8] +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_469D10 +
mov dword ptr [esi+4] 0 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax [ebp+arg_4] +
mov al [eax] +
mov [esi+20h] al +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov [ecx+4] eax +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469D10 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_41C6DA  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
lea eax [ecx+20h] +
push eax  +
push [ebp+arg_0]  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_41E580  +
pop ebp  +
retn 4  +
***
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_41E720  +
pop ebp  +
retn 4  +
***
mov dl [ebp+arg_0] +
xor eax eax +
cmp dl [ecx+20h] +
setz al  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-18h] +
mov eax [esi] +
lea edx [esi+18h] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_4627C0 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_41C792  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41C0D0  +
test [ebp+arg_0] 1 +
jz loc_41C7BA  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41DA20  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469D00 +
mov eax [esi+4] +
test eax eax +
jz loc_41C821  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
test [ebp+arg_0] 1 +
jz loc_41C830  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469D10 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_41C85D  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_41C87E  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
or eax 0FFFFFFFFh +
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_41C922  +
test ebx ebx +
jz loc_41C91A  +
push edi  +
lea edi [ecx+ebx] +
cmp edi 0FFFFFFFEh +
ja loc_41C92C  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_41C8ED  +
push ecx  +
push edi  +
mov ecx esi +
call sub_410D80  +
test edi edi +
jz loc_41C919  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_414C20  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_41C913  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_41C8C7  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_41C907  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push offset aStringTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45C758  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_41CAA9  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_41C98D  +
call sub_414290  +
cmp [ebp+arg_0] 0 +
jnz loc_41CA86  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test byte ptr [ecx+14h] 1 +
jz loc_41CA86  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_414F50  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx dword ptr [ebp+arg_0] +
mov edi eax +
test ecx ecx +
jz loc_41C9E2  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41C9E2  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_41CA08  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_41CA08  +
movzx eax byte ptr [edx] +
jmp loc_41CA10  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
lea ecx [ecx+0] +
cmp eax 0FFFFFFFFh +
jnz loc_41CA36  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 1 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41CA2C  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
jmp loc_41CA7F  +
movzx ecx al +
mov eax [edi+0Ch] +
test byte ptr [eax+ecx*2] 48h +
jz loc_41CA7F  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call sub_41BE10  +
jmp loc_41CA10  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41CA6C  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41CA7C +
retn   +
mov esi [ebp-14h] +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_41CAA9  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ecx+0Ch] +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41CAB8  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45C790  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
xor edi edi +
mov [ebp+var_20] esi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov eax [esi] +
mov [ebp+var_18] edi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CB30  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_1C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41CBBB  +
mov byte ptr [ebp+var_4] 2 +
mov eax [esi] +
push 0  +
push 400h  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx] +
mov eax [eax+20h] +
call eax  +
add [esi+8] eax +
adc [esi+0Ch] edx +
cmp eax 400h +
jnz loc_41CB7D  +
test edx edx +
jz loc_41CBB4  +
mov edi 3 +
jmp loc_41CBB4  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41CB9E  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41CBAE +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_41CBDC  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41CBD4  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CBF5  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45C7C0  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
and eax 0FFFFFFFEh +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41CC4F  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov eax [esi] +
mov [ebp+var_18] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CC6C  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_14] al +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
test byte ptr [eax+esi+0Ch] 6 +
jnz loc_41CCE2  +
push 1  +
push [ebp+arg_8]  +
lea ecx [ebp+var_34] +
push 0  +
push 0  +
push ecx  +
mov ecx [eax+esi+38h] +
call sub_41D690  +
mov ecx [eax+8] +
add ecx [eax] +
mov edx [eax+0Ch] +
adc edx [eax+4] +
cmp ecx ds:dword_463880 +
jnz loc_41CCE2  +
cmp edx ds:dword_463884 +
jnz loc_41CCE2  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41CCDA  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CCFB  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C7F0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+24h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov [esp+24h+var_18] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CD53  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [esp+28h+var_4] 0 +
call sub_41C940  +
mov [esp+24h+var_14] al +
mov edi [ebp+arg_0] +
mov [esp+24h+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
test byte ptr [eax+esi+0Ch] 6 +
jnz loc_41CD93  +
mov ecx [eax+esi+38h] +
push 1  +
push 1  +
push 0  +
mov eax [ecx] +
push 0  +
push edi  +
call dword ptr [eax+28h]  +
jmp loc_41CDB7  +
mov eax ds:dword_463880 +
mov [edi] eax +
mov eax ds:dword_463884 +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
mov [esp+24h+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41CDD1  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax edi +
mov ecx [esp+24h+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test eax eax +
jnz loc_41CE18  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp eax 3FFFFFFFh +
ja loc_41CE46  +
push edi  +
lea edi ds:0[eax*4] +
push edi  +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_41CE50  +
mov [esi] eax +
mov [esi+4] eax +
add eax edi +
mov [esi+8] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_43A638  +
call sub_43A607  +
mov edx [ecx+8] +
mov eax edx +
push esi  +
mov esi [ecx+4] +
sub eax esi +
sar eax 2 +
cmp eax 1 +
jnb loc_41CEB6  +
sub esi [ecx] +
push edi  +
mov edi 3FFFFFFFh +
sar esi 2 +
mov eax edi +
sub eax esi +
cmp eax 1 +
jb loc_41CEBA  +
sub edx [ecx] +
inc esi  +
sar edx 2 +
mov eax edx +
shr eax 1 +
sub edi eax +
cmp edi edx +
pop edi  +
jnb loc_41CEA9  +
xor edx edx +
cmp edx esi +
cmovb edx esi +
push edx  +
call loc_41D6C0  +
pop esi  +
retn 4  +
***
add edx eax +
cmp edx esi +
cmovb edx esi +
push edx  +
call loc_41D6C0  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_43A638  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41CF46  +
push dword ptr [edi+8]  +
mov ecx ebx +
call sub_41CED0  +
cmp dword ptr [esi+3Ch] 10h +
mov edi [edi] +
jb loc_41CF00  +
push dword ptr [esi+28h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+3Ch] 0Fh +
mov dword ptr [esi+38h] 0 +
mov byte ptr [esi+28h] 0 +
cmp dword ptr [esi+24h] 10h +
jb loc_41CF23  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41CEE3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
cmp dword ptr [ecx+14h] 10h +
mov esi [ecx+10h] +
jb loc_41CF63  +
mov ecx [ecx] +
mov edx [ebp+arg_0] +
cmp dword ptr [edx+14h] 10h +
mov edi [edx+10h] +
jb loc_41CF71  +
mov edx [edx] +
cmp edi esi +
mov eax esi +
cmovb eax edi +
push eax  +
push ecx  +
push edx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_41CFA2  +
cmp edi esi +
jnb loc_41CF99  +
or eax 0FFFFFFFFh +
test eax eax +
pop edi  +
sets al  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
cmp edi esi +
setnz al  +
test eax eax +
pop edi  +
sets al  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41CFFC  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41CFDF  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41CFDA  +
jmp loc_41CFD0  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41CFD0  +
mov [edx] ecx +
mov eax edx +
retn   +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41CFFA  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_41CFFA  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41CFE8  +
mov [edx] eax +
mov eax edx +
retn   +
***
push esi  +
mov esi [ecx+4] +
mov eax 2AAAAAABh +
push edi  +
mov edi [ecx+8] +
mov edx edi +
sub edx esi +
imul  edx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_41D082  +
sub esi [ecx] +
mov eax 2AAAAAABh +
imul  esi +
push ebx  +
sar edx 3 +
mov ebx 5555555h +
mov esi edx +
mov eax ebx +
shr esi 1Fh +
add esi edx +
sub eax esi +
cmp eax 1 +
jb loc_41D087  +
sub edi [ecx] +
mov eax 2AAAAAABh +
imul  edi +
inc esi  +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx eax +
shr edx 1 +
sub ebx edx +
cmp ebx eax +
pop ebx  +
jnb loc_41D075  +
xor eax eax +
cmp eax esi +
cmovb eax esi +
push eax  +
call loc_41D8E0  +
pop edi  +
pop esi  +
retn 4  +
***
add eax edx +
cmp eax esi +
cmovb eax esi +
push eax  +
call loc_41D8E0  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_43A638  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C844  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
mov eax dword_474390 +
xor eax esp +
mov [esp+84h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+94h+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
mov eax [ebp+arg_8] +
mov esi [ebp+arg_4] +
push ecx  +
lea ecx [esp+98h+var_74] +
mov [esp+98h+var_80] eax +
push ecx  +
lea eax [ebx+8] +
mov [esp+9Ch+var_78] 0 +
lea ecx [esp+9Ch+var_68] +
mov [esp+9Ch+var_84] eax +
push ecx  +
mov ecx eax +
call sub_41DF90  +
mov ecx eax +
call sub_41DFB0  +
mov edi [eax] +
test edi edi +
jz loc_41D117  +
mov edi [edi] +
mov edx [eax+8] +
mov eax edx +
mov ecx [edi+8] +
and edx 3 +
shr eax 2 +
dec ecx  +
and ecx eax +
mov eax [edi+4] +
push 64h  +
mov eax [eax+ecx*4] +
mov edi [eax+edx*4] +
mov byte ptr [ebx+34h] 1 +
call sub_440048  +
mov ebx eax +
add esp 4 +
mov [esp+94h+var_7C] ebx +
mov [esp+94h+var_4] 0 +
test ebx ebx +
jz loc_41D1AB  +
cmp byte ptr [esi] 0 +
mov [esp+94h+var_30] 0Fh +
mov [esp+94h+var_34] 0 +
mov byte ptr [esp+94h+var_44] 0 +
jnz loc_41D172  +
xor ecx ecx +
jmp loc_41D180  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41D177  +
sub ecx edx +
push ecx  +
push esi  +
lea ecx [esp+9Ch+var_44] +
call loc_4109B0  +
lea eax [esp+9Ch+var_4C] +
mov byte ptr [esp+9Ch+var_C] 1 +
push eax  +
mov ecx ebx +
mov [esp+0A0h+var_80] 1 +
call sub_41A8C0  +
mov ebx eax +
jmp loc_41D1AD  +
xor ebx ebx +
mov [esp+94h+var_4] 0FFFFFFFFh +
test byte ptr [esp+94h+var_78] 1 +
mov [esp+94h+var_7C] ebx +
jz loc_41D1D6  +
cmp [esp+94h+var_30] 10h +
jb loc_41D1D6  +
push [esp+94h+var_44]  +
call sub_43FFF6  +
add esp 4 +
test ebx ebx +
jz loc_41D1F0  +
mov eax [edi] +
mov ecx edi +
push ebx  +
call dword ptr [eax+10h]  +
mov ecx [esp+98h+var_88] +
lea eax [esp+98h+var_80] +
push eax  +
call loc_41D990  +
mov eax [esp+9Ch+var_88] +
xor edi edi +
cmp [eax] edi +
jz loc_41D2FD  +
mov esi eax +
mov edx [esi+4] +
mov [esp+9Ch+var_20] 0Fh +
mov [esp+9Ch+var_24] 0 +
mov byte ptr [esp+9Ch+var_34] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41D221  +
xor ecx ecx +
jmp loc_41D23B  +
mov ecx edx +
lea eax [ecx+1] +
mov [esp+9Ch+var_8C] eax +
lea ebx [ebx+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41D230  +
sub ecx [esp+9Ch+var_8C] +
push ecx  +
push edx  +
lea ecx [esp+0A4h+var_34] +
call loc_4109B0  +
mov [esp+0A4h+var_14] 3 +
mov edx [esi] +
mov [esp+0A4h+var_58] 0Fh +
mov [esp+0A4h+var_5C] 0 +
mov byte ptr [esp+0A4h+var_6C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41D271  +
xor eax eax +
jmp loc_41D27F  +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41D276  +
sub eax esi +
push eax  +
push edx  +
lea ecx [esp+0ACh+var_6C] +
call loc_4109B0  +
lea ecx [esp+0ACh+var_44] +
mov [esp+0ACh+var_1C] 4 +
mov eax [ebx] +
push ecx  +
lea ecx [esp+0B0h+var_74] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
cmp [esp+0B4h+var_68] 10h +
jb loc_41D2B6  +
push [esp+0B4h+var_7C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+0B4h+var_24] 0FFFFFFFFh +
cmp [esp+0B4h+var_38] 10h +
mov [esp+0B4h+var_68] 0Fh +
mov [esp+0B4h+var_6C] 0 +
mov byte ptr [esp+0B4h+var_7C] 0 +
jb loc_41D2E9  +
push [esp+0B4h+var_4C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [esp+0B4h+var_A0] +
add edi 2 +
cmp dword ptr [eax+edi*4] 0 +
lea esi [eax+edi*4] +
jnz loc_41D200  +
mov ecx [esp+0B4h+var_2C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0A4h+var_34] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov byte ptr [eax+34h] 0 +
dec dword ptr [eax+18h]  +
jnz loc_41D336  +
mov dword ptr [eax+14h] 0 +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C888  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax esp +
mov [esp+44h+var_14] eax +
push esi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+4Ch+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
cmp byte ptr [esi+34h] 0 +
jz loc_41D409  +
push ecx  +
push eax  +
lea ecx [esp+54h+var_2C] +
mov [esp+54h+var_18] 0Fh +
mov [esp+54h+var_1C] 0 +
mov byte ptr [esp+54h+var_2C] 0 +
call loc_4109B0  +
push ecx  +
lea eax [esp+58h+var_40] +
mov [esp+58h+var_C] 0 +
push eax  +
lea eax [esp+5Ch+var_4C] +
push eax  +
lea ecx [esi+8] +
call sub_41DF90  +
mov ecx eax +
call sub_41DFB0  +
mov esi [eax] +
test esi esi +
jz loc_41D3D2  +
mov esi [esi] +
mov edx [eax+8] +
mov ecx edx +
mov eax [esi+8] +
and edx 3 +
dec eax  +
shr ecx 2 +
and ecx eax +
mov eax [esi+4] +
mov eax [eax+ecx*4] +
mov ecx [eax+edx*4] +
lea edx [esp+54h+var_34] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+8]  +
cmp [esp+58h+var_24] 10h +
jb loc_41D409  +
push [esp+58h+var_38]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [esp+58h+var_18] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [esp+50h+var_20] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C8D0  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_474390 +
xor eax esp +
mov [esp+78h+var_14] eax +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+84h+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_4] +
mov esi [ebp+arg_0] +
test edx edx +
jz loc_41D5E5  +
cmp byte ptr [edx] 0 +
mov [esp+84h+var_30] 0Fh +
mov [esp+84h+var_34] 0 +
mov byte ptr [esp+84h+var_44] 0 +
jnz loc_41D492  +
xor ecx ecx +
jmp loc_41D4A0  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41D497  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [esp+8Ch+var_44] +
call loc_4109B0  +
mov [esp+8Ch+var_C] 0 +
lea ecx [esp+8Ch+var_64] +
push 7  +
push offset aVersion_0  +
mov [esp+94h+var_50] 0Fh +
mov [esp+94h+var_54] 0 +
mov byte ptr [esp+94h+var_64] 0 +
call loc_4109B0  +
mov byte ptr [esp+94h+var_14] 1 +
lea edx [esp+94h+var_54] +
mov ecx [esi+4] +
push edx  +
lea edx [esp+98h+var_6C] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [esp+9Ch+var_60] 10h +
jb loc_41D508  +
push [esp+9Ch+var_74]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+9Ch+var_1C] 0FFFFFFFFh +
cmp [esp+9Ch+var_48] 10h +
mov [esp+9Ch+var_60] 0Fh +
mov [esp+9Ch+var_64] 0 +
mov byte ptr [esp+9Ch+var_74] 0 +
jb loc_41D53B  +
push [esp+9Ch+var_5C]  +
call sub_43FFF6  +
add esp 4 +
push 5  +
push offset aUtf8  +
lea ecx [esp+0A4h+var_44] +
mov [esp+0A4h+var_30] 0Fh +
mov [esp+0A4h+var_34] 0 +
mov byte ptr [esp+0A4h+var_44] 0 +
call loc_4109B0  +
mov [esp+0A4h+var_24] 2 +
lea ecx [esp+0A4h+var_94] +
push 8  +
push offset aEncoding_0  +
mov [esp+0ACh+var_80] 0Fh +
mov [esp+0ACh+var_84] 0 +
mov byte ptr [esp+0ACh+var_94] 0 +
call loc_4109B0  +
mov [esp+0ACh+var_2C] 3 +
lea edx [esp+0ACh+var_54] +
mov ecx [esi+4] +
push edx  +
lea edx [esp+0B0h+var_9C] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [esp+0B4h+var_90] 10h +
jb loc_41D5BD  +
push [esp+0B4h+var_A4]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0B4h+var_48] 10h +
mov [esp+0B4h+var_90] 0Fh +
mov [esp+0B4h+var_94] 0 +
mov byte ptr [esp+0B4h+var_A4] 0 +
jb loc_41D5E5  +
push [esp+0B4h+var_5C]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [esp+0B4h+var_3C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [esp+0A8h+var_44] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+4] +
push esi  +
lea esi [ecx+4] +
lea ecx [ebp+arg_0] +
mov [esi+4] eax +
cmp ecx eax +
jnb loc_41D65A  +
mov ecx eax +
lea edx [ebp+arg_0] +
cmp ecx edx +
ja loc_41D65A  +
push edi  +
mov edi edx +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_41D642  +
push ecx  +
mov ecx esi +
call loc_41CE60  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41D650  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax [esi+8] +
jnz loc_41D667  +
push ecx  +
mov ecx esi +
call loc_41CE60  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41D673  +
mov eax [ebp+arg_0] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx+60h] eax +
setnz al  +
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
mov eax [ecx] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+28h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_41D6EF  +
cmp ebx 3FFFFFFFh +
ja loc_41D736  +
lea eax ds:0[ebx*4] +
push eax  +
call sub_440048  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41D736  +
mov ecx [edi] +
mov eax [edi+4] +
sub eax ecx +
and eax 0FFFFFFFCh +
push eax  +
push ecx  +
push esi  +
call loc_43F850  +
mov ecx [edi] +
add esp 0Ch +
mov eax [edi+4] +
sub eax ecx +
sar eax 2 +
mov [ebp+8] eax +
test ecx ecx +
jz loc_41D71E  +
push ecx  +
call sub_43FFF6  +
add esp 4 +
lea eax [esi+ebx*4] +
mov [edi] esi +
mov [edi+8] eax +
mov eax [ebp+8] +
lea eax [esi+eax*4] +
mov [edi+4] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_43A607  +
push ecx  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov ecx [esi] +
cmp eax [ecx] +
jnz loc_41D786  +
cmp edx ecx +
jnz loc_41D786  +
push dword ptr [ecx+4]  +
mov ecx esi +
call sub_41CED0  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
mov [eax] eax +
mov eax [esi] +
mov [eax+8] eax +
mov eax [esi] +
mov dword ptr [esi+4] 0 +
pop esi  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp eax edx +
jz loc_41D7EF  +
lea ebx [ebx+0] +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_41D7DB  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41D7BC  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41D7D8  +
lea esp [esp+0] +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41D7B0  +
jmp loc_41D7D8  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41D7D8  +
cmp eax [edx+8] +
jnz loc_41D7D8  +
mov eax edx +
mov [ebp+arg_4] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_41D7C5  +
mov [ebp+arg_4] edx +
push ecx  +
lea eax [ebp+var_4] +
mov ecx esi +
push eax  +
call sub_41DA80  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_8] +
jnz loc_41D790  +
mov ecx [ebp+arg_0] +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
push ebx  +
mov ebx [ecx] +
push edi  +
mov [ebp+var_8] ebx +
mov edi [ebx+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_41D8CF  +
mov edx [ebp+arg_0] +
push esi  +
mov ecx [edx+10h] +
mov [ebp+var_4] ecx +
cmp dword ptr [edx+14h] 10h +
lea eax [edi+10h] +
jb loc_41D831  +
mov esi [edx] +
jmp loc_41D833  +
mov esi edx +
cmp dword ptr [eax+14h] 10h +
mov ebx [eax+10h] +
jb loc_41D83E  +
mov eax [eax] +
cmp ebx ecx +
mov edx ecx +
cmovb edx ebx +
test edx edx +
jz loc_41D8A3  +
sub edx 4 +
jb loc_41D861  +
mov edi edi +
mov ecx [eax] +
cmp ecx [esi] +
jnz loc_41D866  +
add eax 4 +
add esi 4 +
sub edx 4 +
jnb loc_41D850  +
cmp edx 0FFFFFFFCh +
jz loc_41D89A  +
mov cl [eax] +
cmp cl [esi] +
jnz loc_41D893  +
cmp edx 0FFFFFFFDh +
jz loc_41D89A  +
mov cl [eax+1] +
cmp cl [esi+1] +
jnz loc_41D893  +
cmp edx 0FFFFFFFEh +
jz loc_41D89A  +
mov cl [eax+2] +
cmp cl [esi+2] +
jnz loc_41D893  +
cmp edx 0FFFFFFFFh +
jz loc_41D89A  +
mov al [eax+3] +
cmp al [esi+3] +
jz loc_41D89A  +
sbb eax eax +
or eax 1 +
jmp loc_41D89C  +
xor eax eax +
mov ecx [ebp+var_4] +
test eax eax +
jnz loc_41D8B0  +
cmp ebx ecx +
jb loc_41D8BB  +
xor eax eax +
cmp ebx ecx +
setnz al  +
test eax eax +
js loc_41D8BB  +
mov ebx edi +
mov edi [edi] +
mov [ebp+var_8] ebx +
jmp loc_41D8C1  +
mov edi [edi+8] +
mov ebx [ebp+var_8] +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebp+arg_0] +
jz loc_41D824  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
xor edi edi +
test esi esi +
jz loc_41D912  +
cmp esi 5555555h +
ja loc_41D97F  +
lea eax [esi+esi*2] +
shl eax 4 +
push eax  +
call sub_440048  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41D97F  +
push dword ptr [ebp+8]  +
mov edx [ebx+4] +
mov ecx [ebx] +
sub esp 8 +
push edi  +
call sub_4229E0  +
mov ecx [ebx+4] +
mov eax 2AAAAAABh +
sub ecx [ebx] +
add esp 10h +
imul  ecx +
mov eax [ebx] +
sar edx 3 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+8] ecx +
test eax eax +
jz loc_41D960  +
push dword ptr [ebp+8]  +
mov edx [ebx+4] +
push ecx  +
mov ecx eax +
call sub_41EAE0  +
push dword ptr [ebx]  +
call sub_43FFF6  +
mov ecx [ebp+8] +
add esp 0Ch +
lea eax [esi+esi*2] +
mov [ebx] edi +
shl eax 4 +
add eax edi +
mov [ebx+8] eax +
lea eax [ecx+ecx*2] +
shl eax 4 +
add eax edi +
pop edi  +
pop esi  +
mov [ebx+4] eax +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_43A607  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov ecx [esi+10h] +
add eax ecx +
test al 3 +
jnz loc_41D9B5  +
lea eax [ecx+4] +
shr eax 2 +
cmp [esi+8] eax +
ja loc_41D9B5  +
push ecx  +
mov ecx esi +
call sub_41DD50  +
mov ecx [esi+8] +
push ebx  +
push edi  +
mov edi [esi+10h] +
lea eax ds:0FFFFFFFFh[ecx*4] +
dec ecx  +
and [esi+0Ch] eax +
add edi [esi+0Ch] +
mov eax edi +
shr eax 2 +
and ecx eax +
mov eax [esi+4] +
lea ebx ds:0[ecx*4] +
cmp dword ptr [ebx+eax] 0 +
jnz loc_41D9F8  +
push 10h  +
call sub_440048  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_41DA19  +
mov eax [esi+4] +
mov [ebx+eax] ecx +
mov eax [esi+4] +
and edi 3 +
mov eax [eax+ebx] +
lea ecx [eax+edi*4] +
pop edi  +
pop ebx  +
test ecx ecx +
jz loc_41DA11  +
mov eax [ebp+8] +
mov eax [eax] +
mov [ecx] eax +
inc dword ptr [esi+10h]  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_43A607  +
mov eax [esi+10h] +
test eax eax +
jz loc_41DA3D  +
lea ebx [ebx+0] +
dec eax  +
jnz loc_41DA36  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_41DA30  +
mov [esi+10h] eax +
push edi  +
mov edi [esi+8] +
test edi edi +
jz loc_41DA5D  +
mov eax [esi+4] +
dec edi  +
mov eax [eax+edi*4] +
test eax eax +
jz loc_41DA59  +
push eax  +
call sub_43FFF6  +
add esp 4 +
test edi edi +
jnz loc_41DA45  +
mov eax [esi+4] +
pop edi  +
test eax eax +
jz loc_41DA6E  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov [ebp+var_4] ecx +
lea ecx [ebp+arg_4] +
push edi  +
call sub_41CFB0  +
mov edx [ebx] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_41DAA4  +
mov edi [ebx+8] +
jmp loc_41DAC2  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41DAB1  +
mov edi edx +
jmp loc_41DAC2  +
mov ecx [ebp+arg_4] +
mov [ebp+var_8] ecx +
mov edi [ecx+8] +
cmp ecx ebx +
jnz loc_41DB48  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [ebx+4] +
jnz loc_41DACE  +
mov [edi+4] esi +
mov edx [ebp+var_4] +
mov eax [edx] +
cmp [eax+4] ebx +
jnz loc_41DADD  +
mov [eax+4] edi +
jmp loc_41DAE8  +
cmp [esi] ebx +
jnz loc_41DAE5  +
mov [esi] edi +
jmp loc_41DAE8  +
mov [esi+8] edi +
mov eax [edx] +
cmp [eax] ebx +
jnz loc_41DB10  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41DAF8  +
mov ecx esi +
jmp loc_41DB0E  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41DB0C  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41DB02  +
mov eax [edx] +
mov [eax] ecx +
mov eax [edx] +
cmp [eax+8] ebx +
jnz loc_41DBA7  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41DB2B  +
mov ecx esi +
mov [eax+8] ecx +
jmp loc_41DBA7  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41DB41  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41DB36  +
mov eax [edx] +
mov [eax+8] ecx +
jmp loc_41DBA7  +
mov [edx+4] ecx +
mov eax [ebx] +
mov [ecx] eax +
cmp ecx [ebx+8] +
jnz loc_41DB58  +
mov esi ecx +
jmp loc_41DB72  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [ecx+4] +
jnz loc_41DB64  +
mov [edi+4] esi +
mov [esi] edi +
mov eax [ebx+8] +
mov [ecx+8] eax +
mov eax [ebx+8] +
mov [eax+4] ecx +
mov edx [ebp+var_4] +
mov eax [edx] +
cmp [eax+4] ebx +
jnz loc_41DB81  +
mov [eax+4] ecx +
jmp loc_41DB8F  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_41DB8C  +
mov [eax] ecx +
jmp loc_41DB8F  +
mov [eax+8] ecx +
mov eax [ebx+4] +
mov edx [ebp+var_8] +
mov [ecx+4] eax +
mov al [ebx+0Ch] +
mov cl [ecx+0Ch] +
mov [edx+0Ch] al +
mov edx [ebp+var_4] +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_41DCDA  +
mov eax [edx] +
cmp edi [eax+4] +
jz loc_41DC93  +
lea esp [esp+0] +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_41DC93  +
mov ecx [esi] +
cmp edi ecx +
jnz loc_41DC4D  +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_41DBEF  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx edx +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_41DED0  +
mov ecx [esi+8] +
mov edx [ebp+var_4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41DC83  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41DC0A  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_41DC7F  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41DC28  +
mov eax [ecx] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx edx +
call sub_41DF30  +
mov ecx [esi+8] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx+8] +
push esi  +
mov esi [ebp+var_4] +
mov ecx esi +
mov byte ptr [eax+0Ch] 1 +
call sub_41DED0  +
mov byte ptr [edi+0Ch] 1 +
jmp loc_41DCDD  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_41DC68  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx edx +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_41DF30  +
mov ecx [esi] +
mov edx [ebp+var_4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41DC83  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41DC9C  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41DC9C  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edx] +
mov edi esi +
mov esi [esi+4] +
cmp edi [eax+4] +
jnz loc_41DBC0  +
mov esi [ebp+var_4] +
mov byte ptr [edi+0Ch] 1 +
jmp loc_41DCDD  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41DCB9  +
mov eax [ecx+8] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx edx +
call sub_41DED0  +
mov ecx [esi] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx] +
push esi  +
mov esi [ebp+var_4] +
mov ecx esi +
mov byte ptr [eax+0Ch] 1 +
call sub_41DF30  +
mov byte ptr [edi+0Ch] 1 +
jmp loc_41DCDD  +
mov esi [ebp+var_4] +
cmp dword ptr [ebx+3Ch] 10h +
jb loc_41DCEE  +
push dword ptr [ebx+28h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [ebx+3Ch] 0Fh +
mov dword ptr [ebx+38h] 0 +
mov byte ptr [ebx+28h] 0 +
cmp dword ptr [ebx+24h] 10h +
jb loc_41DD11  +
push dword ptr [ebx+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [ebx+24h] 0Fh +
mov dword ptr [ebx+20h] 0 +
push ebx  +
mov byte ptr [ebx+10h] 0 +
call sub_43FFF6  +
mov eax [esi+4] +
add esp 4 +
mov ecx [ebp+arg_4] +
test eax eax +
jz loc_41DD3A  +
dec eax  +
mov [esi+4] eax +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 14h +
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx+8] +
mov eax [esi] +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41DEEA  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_41DF04  +
mov [eax+4] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_41DF17  +
mov [eax] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov [eax+8] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx] +
mov eax [esi+8] +
mov [edx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41DF4A  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_41DF65  +
mov [eax+4] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_41DF7B  +
mov [eax+8] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
mov [eax] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ecx+10h] +
add edx [ecx+0Ch] +
mov ecx [ecx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov [eax+8] edx +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push esi  +
xor esi esi +
test eax eax +
jz loc_41DFC4  +
mov eax [eax] +
test eax eax +
jz loc_41DFC4  +
mov esi [eax] +
mov eax [ebp+arg_0] +
mov edx [ecx+8] +
dec edx  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+8] edx +
test esi esi +
jz loc_41DFE9  +
mov ecx [esi] +
test ecx ecx +
jz loc_41DFE9  +
mov ecx [ecx] +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz sub_43A607  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_41E00D  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_41E016  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
cmp ecx eax +
jz loc_41E037  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
mov al 1 +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C908  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
push 0FFFFFFFFh  +
lea ecx [esi+18h] +
mov [ebp+var_4] 0 +
push 0  +
push [ebp+arg_4]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45C950  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
lea ecx [ebp+var_5C] +
mov [ebp+var_64] esi +
mov [ebp+var_60] 0 +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
call loc_4105F0  +
mov [ebp+var_4] 0 +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_5C] +
push 0  +
push eax  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_4105F0  +
cmp [ebp+var_48] 10h +
jb loc_41E174  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
push 0FFFFFFFFh  +
mov [ebp+var_4] 2 +
lea eax [ebp+var_44] +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push eax  +
mov byte ptr [esi] 0 +
call loc_4105F0  +
push 0FFFFFFFFh  +
lea ecx [esi+18h] +
mov byte ptr [ebp+var_4] 3 +
push 0  +
lea eax [ebp+var_2C] +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
cmp [ebp+var_18] 10h +
jb loc_41E1E3  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_30] 10h +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
jb loc_41E206  +
push [ebp+var_44]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C9B1  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_4C] ecx +
mov ebx [ebp+arg_0] +
mov [ebp+var_30] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_58] 0 +
mov [ebp+var_4] 1 +
mov dword ptr [ebx] offset off_469D00 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov edi [ecx+4] +
mov [ebp+var_58] 1 +
mov eax [ebp+var_4C] +
mov [ebp+var_38] edi +
cmp edi [eax+8] +
jz loc_41E523  +
mov ecx [edi] +
lea eax [ebp+var_48] +
push eax  +
call sub_41AFB0  +
mov esi [ebp+var_48] +
mov [ebp+var_3C] esi +
cmp esi [ebp+var_44] +
jz loc_41E4F2  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [esi] +
test ecx ecx +
jz loc_41E456  +
mov eax [ecx] +
lea edx [ebp+var_2C] +
push edx  +
call dword ptr [eax+20h]  +
lea ecx [ebp+arg_4] +
mov byte ptr [ebp+var_4] 4 +
push ecx  +
push eax  +
call sub_4227C0  +
mov byte ptr [ebp+var_4] 3 +
mov bl al +
cmp [ebp+var_18] 10h +
jb loc_41E302  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
test bl bl +
jz loc_41E453  +
cmp [ebp+arg_30] 10h +
lea edx [ebp+arg_1C] +
mov ecx [ebp+arg_2C] +
lea eax [ebp+arg_4] +
cmovnb edx [ebp+arg_1C] +
mov ebx ecx +
cmp [ebp+arg_18] 10h +
cmovnb eax [ebp+arg_4] +
cmp [ebp+arg_14] ecx +
cmovb ebx [ebp+arg_14] +
test ebx ebx +
jz loc_41E39A  +
sub ebx 4 +
jb loc_41E358  +
mov ecx [eax] +
cmp ecx [edx] +
jnz loc_41E35D  +
add eax 4 +
add edx 4 +
sub ebx 4 +
jnb loc_41E347  +
cmp ebx 0FFFFFFFCh +
jz loc_41E391  +
mov cl [eax] +
cmp cl [edx] +
jnz loc_41E38A  +
cmp ebx 0FFFFFFFDh +
jz loc_41E391  +
mov cl [eax+1] +
cmp cl [edx+1] +
jnz loc_41E38A  +
cmp ebx 0FFFFFFFEh +
jz loc_41E391  +
mov cl [eax+2] +
cmp cl [edx+2] +
jnz loc_41E38A  +
cmp ebx 0FFFFFFFFh +
jz loc_41E391  +
mov al [eax+3] +
cmp al [edx+3] +
jz loc_41E391  +
sbb eax eax +
or eax 1 +
jmp loc_41E393  +
xor eax eax +
test eax eax +
jnz loc_41E3AF  +
mov ecx [ebp+arg_2C] +
mov edx [ebp+arg_14] +
cmp edx ecx +
jnb loc_41E3A6  +
or eax 0FFFFFFFFh +
jmp loc_41E3AD  +
xor eax eax +
cmp edx ecx +
setnz al  +
test eax eax +
mov ebx [ebp+var_30] +
setz al  +
test al al +
jz loc_41E456  +
mov ecx [ebx+8] +
cmp esi ecx +
jnb loc_41E465  +
mov edx [ebx+4] +
cmp edx esi +
ja loc_41E465  +
mov eax esi +
sub eax edx +
mov edx [ebx+0Ch] +
sar eax 2 +
mov [ebp+var_34] eax +
cmp ecx edx +
jnz loc_41E43B  +
mov eax edx +
sub eax ecx +
sar eax 2 +
cmp eax 1 +
jnb loc_41E43B  +
sub ecx [ebx+4] +
mov eax 3FFFFFFFh +
sar ecx 2 +
sub eax ecx +
cmp eax 1 +
jnb loc_41E40C  +
push offset aVectorTTooLong  +
call sub_43A638  +
sub edx [ebx+4] +
inc ecx  +
sar edx 2 +
mov eax 3FFFFFFFh +
mov [ebp+var_50] ecx +
mov ecx edx +
shr ecx 1 +
sub eax ecx +
cmp eax edx +
jnb loc_41E429  +
xor edx edx +
jmp loc_41E42B  +
add edx ecx +
cmp edx [ebp+var_50] +
lea ecx [ebx+4] +
cmovb edx [ebp+var_50] +
push edx  +
call loc_41D6C0  +
mov ecx [ebp+var_34] +
mov eax [ebx+4] +
lea eax [eax+ecx*4] +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_41E44F  +
mov eax [eax] +
mov [ecx] eax +
add dword ptr [ebx+8] 4 +
mov ebx [ebp+var_30] +
mov [ebp+var_4] 2 +
add esi 4 +
jmp loc_41E2BA  +
mov edx [ebx+0Ch] +
cmp ecx edx +
jnz loc_41E4C3  +
mov eax edx +
sub eax ecx +
sar eax 2 +
cmp eax 1 +
jnb loc_41E4C3  +
sub ecx [ebx+4] +
mov eax 3FFFFFFFh +
sar ecx 2 +
sub eax ecx +
cmp eax 1 +
jnb loc_41E494  +
push offset aVectorTTooLong  +
call sub_43A638  +
sub edx [ebx+4] +
inc ecx  +
sar edx 2 +
mov eax 3FFFFFFFh +
mov [ebp+var_34] ecx +
mov ecx edx +
shr ecx 1 +
sub eax ecx +
cmp eax edx +
jnb loc_41E4B1  +
xor edx edx +
jmp loc_41E4B3  +
add edx ecx +
cmp edx [ebp+var_34] +
lea ecx [ebx+4] +
cmovb edx [ebp+var_34] +
push edx  +
call loc_41D6C0  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_41E44F  +
mov eax [esi] +
jmp loc_41E44D  +
mov eax offset loc_41E4D7 +
retn   +
mov dword ptr [ebp-4] 2 +
mov esi [ebp-3Ch] +
mov ebx [ebp-54h] +
add esi 4 +
mov edi [ebp-38h] +
mov [ebp-30h] ebx +
jmp loc_41E2BA  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_48] +
test eax eax +
jz loc_41E51B  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_48] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_40] 0 +
add edi 4 +
jmp loc_41E29D  +
cmp [ebp+arg_30] 10h +
jb loc_41E534  +
push [ebp+arg_1C]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+arg_18] 10h +
mov [ebp+arg_30] 0Fh +
mov [ebp+arg_2C] 0 +
mov byte ptr [ebp+arg_1C] 0 +
jb loc_41E557  +
push [ebp+arg_4]  +
call sub_43FFF6  +
add esp 4 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 38h  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C9E8  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+5Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+5Ch+var_4C] eax +
mov [esp+5Ch+var_48] 0 +
test ecx ecx +
jz loc_41E624  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41E624  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E61B  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41E602  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_41E624  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_41E624  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_41E624  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E63A  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_41E6E7  +
push 0  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_41E665  +
mov eax [edi] +
lea ecx [esp+5Ch+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx 1 +
cmp dword ptr [eax+10h] 0 +
jz loc_41E669  +
xor bl bl +
jmp loc_41E66B  +
mov ecx [esp+5Ch+var_48] +
mov bl 1 +
test cl 1 +
jz loc_41E683  +
cmp [esp+5Ch+var_18] 10h +
jb loc_41E683  +
push [esp+5Ch+var_2C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_41E696  +
mov eax [ebp+arg_8] +
mov bl 1 +
mov ecx [esp+5Ch+var_4C] +
mov al [eax] +
mov [ecx] al +
jmp loc_41E6E7  +
mov eax [edi] +
lea ecx [esp+5Ch+var_44] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx [esp+60h+var_50] +
push ecx  +
push eax  +
mov [esp+68h+var_8] 0 +
call sub_41EBF0  +
mov [esp+60h+var_8] 0FFFFFFFFh +
mov bl al +
cmp [esp+60h+var_34] 10h +
jb loc_41E6D2  +
push [esp+60h+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+60h+var_34] 0Fh +
mov [esp+60h+var_38] 0 +
mov byte ptr [esp+60h+var_48] 0 +
test bh bh +
jz loc_41E6F9  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E6F9  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+64h+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+54h+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CA18  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax esp +
mov [esp+34h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+44h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+44h+var_30] eax +
test ecx ecx +
jz loc_41E7BC  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41E7BC  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E7B3  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_41E79A  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_41E7BC  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_41E7BC  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_41E7BC  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E7D2  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_41E870  +
push 1  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_41E85C  +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
lea eax [esp+44h+var_2C] +
mov [esp+44h+var_4] 0 +
push eax  +
push [esp+48h+var_30]  +
call sub_41ED50  +
test al al +
jz loc_41E828  +
mov eax [edi] +
lea ecx [esp+44h+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ecx esi +
call sub_41B4A0  +
mov bl al +
jmp loc_41E82A  +
xor bl bl +
mov [esp+44h+var_4] 0FFFFFFFFh +
cmp [esp+44h+var_18] 10h +
jb loc_41E845  +
push [esp+44h+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
jmp loc_41E85E  +
xor bl bl +
test bh bh +
jz loc_41E870  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_41E870  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+48h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+38h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
call loc_41EBB0  +
mov esi eax +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
test ecx ecx +
jz loc_41E8C2  +
push [ebp+arg_0]  +
call sub_422920  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45CA40  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_24] ebx +
mov [ebp+var_4] 0 +
mov al 1 +
mov edx [ebx] +
mov ecx edx +
mov [ebp+var_28] edx +
mov [ebp+var_18] ecx +
mov byte ptr [ebp+var_20] al +
mov edi [edx+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_41E9F1  +
mov eax [ebp+arg_8] +
mov [ebp+var_14] eax +
mov ecx [eax+10h] +
mov [ebp+var_1C] ecx +
jmp loc_41E934  +
mov eax [ebp+arg_8] +
cmp dword ptr [edi+24h] 10h +
lea ecx [edi+10h] +
mov ebx [ecx+10h] +
mov [ebp+var_18] edi +
jb loc_41E945  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
jb loc_41E94F  +
mov esi [eax] +
jmp loc_41E951  +
mov esi eax +
cmp [ebp+var_1C] ebx +
mov edx ebx +
cmovb edx [ebp+var_1C] +
test edx edx +
jz loc_41E9B3  +
sub edx 4 +
jb loc_41E974  +
mov eax [esi] +
cmp eax [ecx] +
jnz loc_41E979  +
add esi 4 +
add ecx 4 +
sub edx 4 +
jnb loc_41E963  +
cmp edx 0FFFFFFFCh +
jz loc_41E9AD  +
mov al [esi] +
cmp al [ecx] +
jnz loc_41E9A6  +
cmp edx 0FFFFFFFDh +
jz loc_41E9AD  +
mov al [esi+1] +
cmp al [ecx+1] +
jnz loc_41E9A6  +
cmp edx 0FFFFFFFEh +
jz loc_41E9AD  +
mov al [esi+2] +
cmp al [ecx+2] +
jnz loc_41E9A6  +
cmp edx 0FFFFFFFFh +
jz loc_41E9AD  +
mov al [esi+3] +
cmp al [ecx+3] +
jz loc_41E9AD  +
sbb eax eax +
or eax 1 +
jmp loc_41E9AF  +
xor eax eax +
test eax eax +
jnz loc_41E9C8  +
mov edx [ebp+var_1C] +
cmp edx ebx +
jnb loc_41E9BF  +
or eax 0FFFFFFFFh +
jmp loc_41E9C6  +
xor eax eax +
cmp edx ebx +
setnz al  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_20] al +
test al al +
jz loc_41E9D6  +
mov edi [edi] +
jmp loc_41E9D9  +
mov edi [edi+8] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41E931  +
mov edi [ebp+arg_8] +
mov ecx [ebp+var_18] +
mov edx [ebp+var_28] +
mov ebx [ebp+var_24] +
jmp loc_41E9F7  +
mov edi [ebp+arg_8] +
mov [ebp+var_14] edi +
mov esi ecx +
mov [ebp+arg_8] esi +
test al al +
jz loc_41EA40  +
cmp ecx [edx] +
jnz loc_41EA35  +
push [ebp+arg_C]  +
lea eax [ebp+arg_8] +
push ecx  +
push ecx  +
push 1  +
mov ecx ebx +
push eax  +
call loc_421E40  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call sub_41F3A0  +
mov esi [ebp+arg_8] +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
mov ebx [edi+10h] +
jb loc_41EA51  +
mov edi [edi] +
mov [ebp+var_14] edi +
cmp dword ptr [ecx+14h] 10h +
mov edi [ecx+10h] +
jb loc_41EA5C  +
mov ecx [ecx] +
cmp edi ebx +
mov eax ebx +
cmovb eax edi +
push eax  +
push [ebp+var_14]  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_41EA86  +
cmp edi ebx +
jnb loc_41EA7D  +
or eax 0FFFFFFFFh +
jmp loc_41EA84  +
xor eax eax +
cmp edi ebx +
setnz al  +
test eax eax +
push [ebp+arg_C]  +
sets al  +
test al al +
jz loc_41EAB3  +
push ecx  +
push [ebp+var_18]  +
mov ecx [ebp+var_24] +
lea eax [ebp+var_28] +
push [ebp+var_20]  +
jmp loc_41EA10  +
push dword ptr [ebp+14h]  +
call sub_41EB50  +
push 0  +
push 0  +
call sub_443DCE  +
call sub_41EB50  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
cmp ecx edi +
jz loc_41EB3F  +
push esi  +
lea esi [ecx+2Ch] +
jmp loc_41EAF0  +
cmp dword ptr [esi] 10h +
jb loc_41EB00  +
push dword ptr [esi-14h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi] 0Fh +
mov dword ptr [esi-4] 0 +
mov byte ptr [esi-14h] 0 +
cmp dword ptr [esi-18h] 10h +
jb loc_41EB22  +
push dword ptr [esi-2Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi-18h] 0Fh +
mov dword ptr [esi-1Ch] 0 +
mov byte ptr [esi-2Ch] 0 +
add esi 30h +
lea eax [esi-2Ch] +
cmp eax edi +
jnz loc_41EAF0  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+3Ch] 10h +
jb loc_41EB68  +
push dword ptr [esi+28h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+3Ch] 0Fh +
mov dword ptr [esi+38h] 0 +
mov byte ptr [esi+28h] 0 +
cmp dword ptr [esi+24h] 10h +
jb loc_41EB8B  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 40h  +
mov esi ecx +
call sub_440048  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_41EBE1  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_41EBD2  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_41EBDD  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_43A607  +
push 0FFFFFFFFh  +
push offset loc_45CA9A  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_C0] offset unk_46AD30 +
mov [ebp+var_B0] offset unk_469D54 +
mov [ebp+var_58] offset off_4627B8 +
push 0  +
lea eax [ebp+var_A8] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_C0] +
mov [ebp+var_10] 1 +
call sub_41F400  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_462948 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
call sub_418510  +
mov [ebp+var_A8] offset off_462860 +
mov [ebp+var_70] 0 +
mov [ebp+var_6C] 0 +
push [ebp+arg_0]  +
lea eax [ebp+var_B0] +
mov [ebp+var_4] 3 +
push eax  +
call sub_422050  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_41ED0C  +
push [ebp+arg_4]  +
lea ecx [ebp+var_C0] +
call sub_41EED0  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_41ED0C  +
lea eax [ebp+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_41ED0C  +
mov bl 1 +
jmp loc_41ED0E  +
xor bl bl +
lea ecx [ebp+var_58] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [ebp+var_58] +
mov [ebp+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45CA9A  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_C0] offset unk_46AD30 +
mov [ebp+var_B0] offset unk_469D54 +
mov [ebp+var_58] offset off_4627B8 +
push 0  +
lea eax [ebp+var_A8] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_C0] +
mov [ebp+var_10] 1 +
call sub_41F400  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_462948 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
call sub_418510  +
mov [ebp+var_A8] offset off_462860 +
mov [ebp+var_70] 0 +
mov [ebp+var_6C] 0 +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_B0] +
mov [ebp+var_4] 3 +
movzx eax byte ptr [eax] +
push eax  +
call sub_41F040  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_41EE70  +
push [ebp+arg_4]  +
lea eax [ebp+var_C0] +
push eax  +
call sub_422A20  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_41EE70  +
lea eax [ebp+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_41EE70  +
mov bl 1 +
jmp loc_41EE72  +
xor bl bl +
lea ecx [ebp+var_58] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [ebp+var_58] +
mov [ebp+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
lea esi [ecx+68h] +
mov ecx esi +
call sub_41F1E0  +
push esi  +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CAD8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov [ebp+var_1C] 0 +
mov eax [esi] +
mov [ebp+var_28] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41EF1C  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 0  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_24] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41EFE3  +
lea eax [ebp+var_20] +
push eax  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_4222C0  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_20] +
mov edi eax +
test ecx ecx +
jz loc_41EF79  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41EF79  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 3 +
lea ebx [ebp+var_1C] +
mov eax [esi] +
mov edx [edi] +
push ebx  +
mov byte ptr [ebp+var_2C] 1 +
mov eax [eax+4] +
add eax esi +
push eax  +
push [ebp+var_2C]  +
mov ecx [eax+38h] +
test ecx ecx +
push 0  +
setz byte ptr [ebp+var_34]  +
lea eax [ebp+var_38] +
push [ebp+var_34]  +
push ecx  +
push eax  +
mov ecx edi +
call dword ptr [edx+34h]  +
jmp loc_41EFDC  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41EFC9  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41EFD9 +
retn   +
mov esi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov edx [ebp+var_1C] +
mov ecx [eax+4] +
add ecx esi +
test edx edx +
jz loc_41F007  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41EFFF  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41F020  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45CB18  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41F08A  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_41F0AE  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_41F0AE  +
cmp ecx esi +
jz loc_41F0AE  +
call sub_414290  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41F174  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_419990  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_1C] +
mov ebx eax +
test ecx ecx +
jz loc_41F102  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41F102  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 3 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
mov byte ptr [ebp+var_34] 0 +
mov al [ecx+40h] +
mov byte ptr [ebp+var_20] al +
push [ebp+var_20]  +
mov eax [ebx] +
push ecx  +
push dword ptr [ecx+38h]  +
lea ecx [ebp+var_34] +
push [ebp+var_34]  +
push ecx  +
mov ecx ebx +
call dword ptr [eax+28h]  +
cmp byte ptr [ebp+var_34] 0 +
mov eax 4 +
cmovnz edi eax +
jmp loc_41F16D  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41F157  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_41F167 +
retn   +
mov esi [ebp-18h] +
mov edi [ebp-24h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_41F195  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41F18D  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_41F1AC  +
mov ecx esi +
call sub_414D50  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41F1BE  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [esi-68h] +
lea ecx [esi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_462948 +
mov eax [esi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+esi-6Ch] eax +
call sub_416800  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_462940 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-6Ch] eax +
mov eax [esi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-58h] offset off_462808 +
mov eax [esi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-5Ch] eax +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_4627C0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-6Ch] eax +
pop esi  +
retn   +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_462940 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_462808 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_4627C0 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
push esi  +
push edi  +
lea edi [ecx-68h] +
lea esi [edi+68h] +
mov ecx esi +
call sub_41F1E0  +
push esi  +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_41F2F0  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_41F330  +
test [ebp+arg_0] 1 +
jz loc_41F31D  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
lea edx [ecx+20h] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_462940 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edx-24h] eax +
mov eax [edx-10h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-10h] offset off_462808 +
mov eax [edx-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-14h] eax +
mov eax [edx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_4627C0 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-24h] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
pop ecx  +
retn   +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41F3B2  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41F3D3  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41F3F9  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41F3C3  +
mov [edx] ecx +
mov eax edx +
retn   +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41F3F1  +
lea esp [esp+0] +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_41F3F1  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_41F3E0  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41F3FB  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CB6F  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
cmp [ebp+arg_4] 0 +
jz loc_41F45C  +
mov dword ptr [esi] offset unk_469CF4 +
mov dword ptr [esi+10h] offset unk_469D7C +
mov dword ptr [esi+20h] offset off_4627B8 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4627C0 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov edi [eax+4] +
add edi esi +
mov ecx edi +
call sub_412AA0  +
mov eax [ebp+arg_0] +
mov ecx edi +
mov [edi+38h] eax +
lea eax [ebp+arg_4] +
push eax  +
mov dword ptr [edi+3Ch] 0 +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+arg_4] +
mov ebx eax +
test ecx ecx +
jz loc_41F4D6  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41F4D6  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [ebx] +
mov ecx ebx +
push 20h  +
mov eax [eax+20h] +
call eax  +
cmp dword ptr [edi+38h] 0 +
mov [edi+40h] al +
jnz loc_41F4FA  +
mov eax [edi+0Ch] +
mov ecx edi +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov eax [esi+10h] +
mov eax [eax+4] +
mov dword ptr [esi+eax+10h] offset off_462808 +
mov eax [esi+10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+0Ch] eax +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_462940 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CBB8  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_474390 +
xor eax esp +
mov [esp+7Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+8Ch+var_C] +
mov large fs:0 eax +
mov [esp+8Ch+var_6C] ecx +
mov eax [ebp+arg_14] +
or edi 0FFFFFFFFh +
mov esi [ebp+arg_0] +
mov ecx [ebp+arg_1C] +
mov ebx [ebp+arg_18] +
test dword ptr [eax+14h] 4000h +
mov [esp+8Ch+var_78] esi +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_70] ecx +
jz loc_41F709  +
lea ecx [esp+8Ch+var_7C] +
push ecx  +
mov ecx eax +
call sub_4129C0  +
push eax  +
mov [esp+90h+var_4] 0 +
call sub_415480  +
mov [esp+90h+var_4] edi +
add esp 4 +
mov ecx [esp+8Ch+var_7C] +
mov esi eax +
test ecx ecx +
jz loc_41F5F8  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41F5F8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esp+90h+var_54] 0Fh +
mov word ptr [esp+90h+var_68] 0 +
mov [esp+90h+var_58] 1 +
lea eax [esp+90h+var_50] +
mov [esp+90h+var_8] 1 +
push eax  +
mov ecx esi +
call sub_4148C0  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esp+9Ch+var_68] +
mov byte ptr [esp+9Ch+var_8] 2 +
call loc_410440  +
mov byte ptr [esp+9Ch+var_14] 1 +
cmp [esp+9Ch+var_48] 10h +
jb loc_41F657  +
push [esp+9Ch+var_5C]  +
call sub_43FFF6  +
add esp 4 +
push 0  +
push 1  +
lea ecx [esp+0A4h+var_74] +
call loc_41C890  +
lea eax [esp+0A4h+var_64] +
mov ecx esi +
push eax  +
call sub_4148E0  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esp+0B0h+var_7C] +
mov [esp+0B0h+var_1C] 3 +
call loc_410440  +
mov byte ptr [esp+0B0h+var_28] 1 +
cmp [esp+0B0h+var_5C] 10h +
jb loc_41F6A1  +
push [esp+0B0h+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0B0h+var_74] 10h +
lea eax [esp+0B0h+var_88] +
cmovnb eax [esp+0B0h+var_88] +
push eax  +
push 2  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_4223E0  +
add esp 10h +
mov [esp+0B0h+var_28] 0FFFFFFFFh +
cmp [esp+0B0h+var_74] 10h +
mov edi eax +
jb loc_41F6E2  +
push [esp+0B0h+var_88]  +
call sub_43FFF6  +
add esp 4 +
mov esi [esp+0B0h+var_9C] +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41F6F9  +
or dword ptr [ebx] 1 +
test edi edi +
jns loc_41F7B1  +
or dword ptr [ebx] 2 +
jmp loc_41F7BA  +
lea ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_78] 0 +
push ecx  +
mov ecx eax +
call sub_4129C0  +
lea ecx [esp+8Ch+var_78] +
mov [esp+8Ch+var_4] 4 +
push ecx  +
push eax  +
mov eax [esp+94h+var_7C] +
push dword ptr [eax+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+0A0h+var_34] +
push eax  +
push [esp+0A4h+var_6C]  +
call sub_420320  +
add esp 18h +
push eax  +
lea eax [esp+94h+var_74] +
push eax  +
lea eax [esp+98h+var_34] +
push eax  +
call sub_43B670  +
mov [esp+9Ch+var_4] 0FFFFFFFFh +
add esp 10h +
mov ecx [esp+8Ch+var_68] +
mov [esp+8Ch+var_7C] eax +
test ecx ecx +
jz loc_41F78D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41F789  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [esp+90h+var_80] +
lea ecx [esp+90h+var_38] +
cmp [esp+90h+var_78] ecx +
jz loc_41F6E6  +
cmp [esp+90h+var_7C] 0 +
jnz loc_41F6E6  +
cmp eax 1 +
cmovbe edi eax +
jmp loc_41F6E6  +
mov eax [esp+0B0h+var_94] +
setnz cl  +
mov [eax] cl +
mov ecx [ebp+arg_4] +
mov eax esi +
mov [esi] ecx +
mov ecx [ebp+arg_8] +
mov [esi+4] ecx +
mov ecx [esp+0B0h+var_30] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0A0h+var_38] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_45CBE8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_40] eax +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_34] 0 +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
lea eax [ebp+arg_C] +
push dword ptr [esi+14h]  +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push edi  +
call sub_420320  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov ecx [ebp+var_44] +
mov esi eax +
test ecx ecx +
jz loc_41F882  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41F882  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp byte ptr [ebp+var_30] 2Dh +
lea eax [ebp+var_30] +
lea edi [ebp+var_30+1] +
cmovnz edi eax +
lea eax [ebp+var_34] +
push eax  +
push esi  +
lea eax [ebp+var_38] +
push eax  +
push edi  +
call sub_43B670  +
add esp 10h +
lea ecx [ebp+arg_4] +
mov esi eax +
lea eax [ebp+arg_C] +
push eax  +
call sub_422720  +
test al al +
jz loc_41F8B6  +
or dword ptr [ebx] 1 +
cmp [ebp+var_38] edi +
jz loc_41F8D9  +
cmp [ebp+var_34] 0 +
jnz loc_41F8D9  +
cmp esi 0FFFFh +
ja loc_41F8D9  +
cmp byte ptr [ebp+var_30] 2Dh +
jnz loc_41F8D1  +
neg esi  +
mov eax [ebp+var_40] +
mov [eax] si +
jmp loc_41F8DC  +
or dword ptr [ebx] 2 +
mov eax [ebp+var_3C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_45CBE8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_40] eax +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_34] 0 +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
lea eax [ebp+arg_C] +
push dword ptr [esi+14h]  +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push edi  +
call sub_420320  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 18h +
mov ecx [ebp+var_44] +
mov esi eax +
test ecx ecx +
jz loc_41F9A2  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41F9A2  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
cmp byte ptr [ebp+var_30] 2Dh +
lea eax [ebp+var_30] +
lea edi [ebp+var_30+1] +
cmovnz edi eax +
lea eax [ebp+var_34] +
push eax  +
push esi  +
lea eax [ebp+var_38] +
push eax  +
push edi  +
call sub_43B670  +
add esp 10h +
lea ecx [ebp+arg_4] +
mov esi eax +
lea eax [ebp+arg_C] +
push eax  +
call sub_422720  +
test al al +
jz loc_41F9D6  +
or dword ptr [ebx] 1 +
cmp [ebp+var_38] edi +
jz loc_41F9F5  +
cmp [ebp+var_34] 0 +
jnz loc_41F9F5  +
cmp esi 0FFFFFFFFh +
ja loc_41F9F5  +
cmp byte ptr [ebp+var_30] 2Dh +
jnz loc_41F9EE  +
neg esi  +
mov eax [ebp+var_40] +
mov [eax] esi +
jmp loc_41F9F8  +
or dword ptr [ebx] 2 +
mov eax [ebp+var_3C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_45CBE8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_40] eax +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_34] 0 +
call sub_4129C0  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] 0 +
push ecx  +
push eax  +
push dword ptr [esi+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push edi  +
call sub_420320  +
add esp 18h +
push eax  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_43AEA2  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 10h +
mov ecx [ebp+var_44] +
mov esi eax +
test ecx ecx +
jz loc_41FAD7  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FAD7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41FAEA  +
or dword ptr [ebx] 1 +
lea eax [ebp+var_30] +
cmp [ebp+var_38] eax +
jz loc_41FAFF  +
cmp [ebp+var_34] 0 +
jnz loc_41FAFF  +
mov eax [ebp+var_40] +
mov [eax] esi +
jmp loc_41FB02  +
or dword ptr [ebx] 2 +
mov eax [ebp+var_3C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_45CBE8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_40] eax +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_34] 0 +
call sub_4129C0  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] 0 +
push ecx  +
push eax  +
push dword ptr [esi+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push edi  +
call sub_420320  +
add esp 18h +
push eax  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_43B670  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 10h +
mov ecx [ebp+var_44] +
mov esi eax +
test ecx ecx +
jz loc_41FBD7  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FBD7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41FBEA  +
or dword ptr [ebx] 1 +
lea eax [ebp+var_30] +
cmp [ebp+var_38] eax +
jz loc_41FBFF  +
cmp [ebp+var_34] 0 +
jnz loc_41FBFF  +
mov eax [ebp+var_40] +
mov [eax] esi +
jmp loc_41FC02  +
or dword ptr [ebx] 2 +
mov eax [ebp+var_3C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CC18  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+5Ch+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [esp+5Ch+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [esp+5Ch+var_40] eax +
lea eax [esp+5Ch+var_38] +
push eax  +
mov [esp+60h+var_48] 0 +
call sub_4129C0  +
lea ecx [esp+5Ch+var_48] +
mov [esp+5Ch+var_4] 0 +
push ecx  +
push eax  +
push dword ptr [esi+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+70h+var_34] +
push eax  +
push edi  +
call sub_420320  +
add esp 18h +
push eax  +
lea eax [esp+64h+var_44] +
push eax  +
lea eax [esp+68h+var_34] +
push eax  +
call sub_43B154  +
mov [esp+6Ch+var_4] 0FFFFFFFFh +
add esp 10h +
mov ecx [esp+5Ch+var_38] +
mov esi eax +
mov edi edx +
test ecx ecx +
jz loc_41FCF0  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FCF0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41FD03  +
or dword ptr [ebx] 1 +
lea eax [esp+60h+var_38] +
cmp [esp+60h+var_48] eax +
jz loc_41FD1F  +
cmp [esp+60h+var_4C] 0 +
jnz loc_41FD1F  +
mov eax [esp+60h+var_44] +
mov [eax] esi +
mov [eax+4] edi +
jmp loc_41FD22  +
or dword ptr [ebx] 2 +
mov eax [esp+60h+var_40] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [esp+60h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+50h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CC18  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+5Ch+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_14] +
mov ecx esi +
mov ebx [ebp+arg_18] +
mov [esp+5Ch+var_3C] eax +
mov eax [ebp+arg_1C] +
mov [esp+5Ch+var_40] eax +
lea eax [esp+5Ch+var_38] +
push eax  +
mov [esp+60h+var_48] 0 +
call sub_4129C0  +
lea ecx [esp+5Ch+var_48] +
mov [esp+5Ch+var_4] 0 +
push ecx  +
push eax  +
push dword ptr [esi+14h]  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+70h+var_34] +
push eax  +
push edi  +
call sub_420320  +
add esp 18h +
push eax  +
lea eax [esp+64h+var_44] +
push eax  +
lea eax [esp+68h+var_34] +
push eax  +
call sub_43B21C  +
mov [esp+6Ch+var_4] 0FFFFFFFFh +
add esp 10h +
mov ecx [esp+5Ch+var_38] +
mov esi eax +
mov edi edx +
test ecx ecx +
jz loc_41FE20  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FE20  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41FE33  +
or dword ptr [ebx] 1 +
lea eax [esp+60h+var_38] +
cmp [esp+60h+var_48] eax +
jz loc_41FE4F  +
cmp [esp+60h+var_4C] 0 +
jnz loc_41FE4F  +
mov eax [esp+60h+var_44] +
mov [eax] esi +
mov [eax+4] edi +
jmp loc_41FE52  +
or dword ptr [ebx] 2 +
mov eax [esp+60h+var_40] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+arg_8] +
mov [eax+4] ecx +
mov ecx [esp+60h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+50h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFC0h +
sub esp 74h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_4] eax +
mov eax [ebp+arg_14] +
lea edx [esp+74h+var_4C] +
push ebx  +
mov ebx [ebp+arg_1C] +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
mov edi [ebp+arg_0] +
push edx  +
push ecx  +
lea edx [esp+88h+var_48] +
mov [esp+88h+var_4C] 0 +
push edx  +
push eax  +
lea eax [ebp+arg_C] +
mov [esp+90h+var_48] 0 +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+98h+var_40] +
push eax  +
push ecx  +
call sub_420810  +
add esp 1Ch +
push eax  +
lea eax [esp+88h+var_44] +
push eax  +
lea eax [esp+8Ch+var_40] +
push eax  +
call sub_43AF42  +
mov eax [esp+90h+var_48] +
add esp 10h +
fstp  [esp+80h+var_50] +
test eax eax +
jz loc_41FF25  +
movss xmm0 [esp+80h+var_50] +
shl eax 2 +
cvtps2pd xmm0 xmm0 +
push eax  +
sub esp 8 +
movsd [esp+8Ch+var_8C] xmm0 +
call sub_440B86  +
fstp  [esp+8Ch+var_50] +
add esp 0Ch +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_41FF38  +
or dword ptr [esi] 1 +
lea eax [esp+80h+var_40] +
cmp [esp+80h+var_44] eax +
jz loc_41FF55  +
cmp [esp+80h+var_4C] 0 +
jnz loc_41FF55  +
movss xmm0 [esp+80h+var_50] +
movss dword ptr [ebx] xmm0 +
jmp loc_41FF58  +
or dword ptr [esi] 2 +
mov ecx [ebp+arg_4] +
mov eax edi +
mov [edi] ecx +
mov ecx [ebp+arg_8] +
mov [edi+4] ecx +
mov ecx [esp+80h+var_4] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFC0h +
sub esp 74h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_4] eax +
mov eax [ebp+arg_14] +
lea edx [esp+74h+var_50] +
push ebx  +
mov ebx [ebp+arg_1C] +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
mov edi [ebp+arg_0] +
push edx  +
push ecx  +
lea edx [esp+88h+var_54] +
mov [esp+88h+var_50] 0 +
push edx  +
push eax  +
lea eax [ebp+arg_C] +
mov [esp+90h+var_54] 0 +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+98h+var_40] +
push eax  +
push ecx  +
call sub_420810  +
add esp 1Ch +
push eax  +
lea eax [esp+88h+var_4C] +
push eax  +
lea eax [esp+8Ch+var_40] +
push eax  +
call sub_43B7EC  +
mov eax [esp+90h+var_54] +
add esp 10h +
fstp  [esp+80h+var_48] +
test eax eax +
jz loc_420012  +
movsd xmm0 [esp+80h+var_48] +
shl eax 2 +
push eax  +
sub esp 8 +
movsd [esp+8Ch+var_8C] xmm0 +
call sub_440B86  +
fstp  [esp+8Ch+var_48] +
add esp 0Ch +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_420025  +
or dword ptr [esi] 1 +
lea eax [esp+80h+var_40] +
cmp [esp+80h+var_4C] eax +
jz loc_420042  +
cmp [esp+80h+var_50] 0 +
jnz loc_420042  +
movsd xmm0 [esp+80h+var_48] +
movsd qword ptr [ebx] xmm0 +
jmp loc_420045  +
or dword ptr [esi] 2 +
mov ecx [ebp+arg_4] +
mov eax edi +
mov [edi] ecx +
mov ecx [ebp+arg_8] +
mov [edi+4] ecx +
mov ecx [esp+80h+var_4] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFC0h +
sub esp 74h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_4] eax +
mov eax [ebp+arg_14] +
lea edx [esp+74h+var_50] +
push ebx  +
mov ebx [ebp+arg_1C] +
push esi  +
mov esi [ebp+arg_18] +
push edi  +
mov edi [ebp+arg_0] +
push edx  +
push ecx  +
lea edx [esp+88h+var_54] +
mov [esp+88h+var_50] 0 +
push edx  +
push eax  +
lea eax [ebp+arg_C] +
mov [esp+90h+var_54] 0 +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [esp+98h+var_40] +
push eax  +
push ecx  +
call sub_420810  +
add esp 1Ch +
push eax  +
lea eax [esp+88h+var_4C] +
push eax  +
lea eax [esp+8Ch+var_40] +
push eax  +
call sub_43B407  +
mov eax [esp+90h+var_54] +
add esp 10h +
fstp  [esp+80h+var_48] +
test eax eax +
jz loc_420102  +
movsd xmm0 [esp+80h+var_48] +
shl eax 2 +
push eax  +
sub esp 8 +
movsd [esp+8Ch+var_8C] xmm0 +
call sub_440B86  +
fstp  [esp+8Ch+var_48] +
add esp 0Ch +
lea eax [ebp+arg_C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_422720  +
test al al +
jz loc_420115  +
or dword ptr [esi] 1 +
lea eax [esp+80h+var_40] +
cmp [esp+80h+var_4C] eax +
jz loc_420132  +
cmp [esp+80h+var_50] 0 +
jnz loc_420132  +
movsd xmm0 [esp+80h+var_48] +
movsd qword ptr [ebx] xmm0 +
jmp loc_420135  +
or dword ptr [esi] 2 +
mov ecx [ebp+arg_4] +
mov eax edi +
mov [edi] ecx +
mov ecx [ebp+arg_8] +
mov [edi+4] ecx +
mov ecx [esp+80h+var_4] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CC8C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
cmp [ebp+arg_8] 0 +
mov [ebp+var_10] 0 +
jz loc_4202D3  +
mov dword ptr [esi] offset unk_469D04 +
mov dword ptr [esi+18h] offset off_4627B8 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [esi] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4627C0 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_4145A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CCC0  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+84h+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_14] +
mov esi [ebp+arg_8] +
mov [esp+84h+var_68] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov [esp+88h+var_6C] eax +
call sub_415480  +
add esp 4 +
mov edi eax +
lea eax [esp+84h+var_48] +
mov ecx edi +
push eax  +
call sub_414F10  +
mov [esp+84h+var_4] 0 +
cmp [esp+84h+var_38] 0 +
jnz loc_42039B  +
mov [esp+84h+var_72] 0 +
jmp loc_4203A8  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
mov [esp+84h+var_72] al +
push ebx  +
call sub_414F50  +
add esp 4 +
lea ecx [esp+84h+var_30] +
mov edx [eax] +
push ecx  +
push (offset a0123456789abcd+1Ah)  +
push offset a0123456789abcd  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
mov edi [esp+90h+var_78] +
mov ecx esi +
mov ebx [esp+1Ch] +
push edi  +
mov [esp+94h+var_7C] ebx +
call sub_422720  +
test al al +
jnz loc_420445  +
cmp [esi+4] al +
jnz loc_420419  +
mov ecx [esi] +
test ecx ecx +
jz loc_42040F  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420400  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420400  +
movzx eax byte ptr [edx] +
jmp loc_420405  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_42040F  +
mov [esi+5] al +
jmp loc_420415  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
mov ecx esi +
cmp al [esp+90h+var_25] +
jnz loc_420429  +
mov byte ptr [ebx] 2Bh +
jmp loc_420439  +
call sub_421DA0  +
cmp al [esp+90h+var_26] +
jnz loc_420445  +
mov byte ptr [ebx] 2Dh +
mov ecx esi +
lea eax [ebx+1] +
mov [esp+90h+var_7C] eax +
call sub_421DF0  +
mov ebx [ebp+arg_10] +
and ebx 0E00h +
cmp ebx 400h +
jnz loc_42045D  +
mov ebx 8 +
jmp loc_420473  +
cmp ebx 800h +
jnz loc_42046C  +
mov ebx 10h +
jmp loc_420473  +
neg ebx  +
sbb ebx ebx +
and ebx 0Ah +
push edi  +
mov ecx esi +
mov [ebp+arg_10] ebx +
mov byte ptr [esp+15h] 0 +
mov [esp+94h+var_7D] 0 +
call sub_422720  +
test al al +
jnz loc_420532  +
cmp [esi+4] al +
jnz loc_4204CA  +
mov ecx [esi] +
test ecx ecx +
jz loc_4204C0  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4204B1  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4204B1  +
movzx eax byte ptr [edx] +
jmp loc_4204B6  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4204C0  +
mov [esi+5] al +
jmp loc_4204C6  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [esp+90h+var_3C] +
jnz loc_420532  +
mov ecx esi +
mov byte ptr [esp+11h] 1 +
call sub_421DF0  +
push edi  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_420524  +
mov ecx esi +
call sub_421DA0  +
cmp al [esp+90h+var_23] +
jz loc_420505  +
mov ecx esi +
call sub_421DA0  +
cmp al [esp+90h+var_24] +
jnz loc_420524  +
test ebx ebx +
jz loc_42050E  +
cmp ebx 10h +
jnz loc_420524  +
mov ebx 10h +
mov byte ptr [esp+11h] 0 +
mov ecx esi +
mov [ebp+arg_10] ebx +
call sub_421DF0  +
jmp loc_42053B  +
test ebx ebx +
jnz loc_420536  +
mov ebx 8 +
mov [ebp+arg_10] ebx +
jmp loc_42053B  +
test ebx ebx +
jz loc_420550  +
cmp ebx 0Ah +
jz loc_420550  +
mov ecx 8 +
mov eax 16h +
cmp ebx ecx +
cmovz eax ecx +
mov [esp+90h+var_70] eax +
jmp loc_420558  +
mov [esp+90h+var_70] 0Ah +
mov al [esp+11h] +
mov ebx 0Fh +
mov [esp+90h+var_58] ebx +
mov byte ptr [esp+90h+var_6C] al +
mov [esp+90h+var_5C] 1 +
mov byte ptr [esp+90h+var_6C+1] 0 +
push [esp+90h+var_78]  +
mov ecx esi +
mov [esp+94h+var_10] 1 +
xor edi edi +
call sub_422720  +
test al al +
jnz loc_420743  +
jmp loc_420599  +
mov ebx [esp+90h+var_58] +
cmp byte ptr [esi+4] 0 +
jnz loc_4205D4  +
mov ecx [esi] +
test ecx ecx +
jz loc_4205CA  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4205BB  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4205BB  +
movzx eax byte ptr [edx] +
jmp loc_4205C0  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4205CA  +
mov [esi+5] al +
jmp loc_4205D0  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [esp+90h+var_3C] +
lea eax [esp+90h+var_3C] +
mov dl [esi+5] +
test cl cl +
jz loc_4205EF  +
cmp cl dl +
jz loc_4205EF  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_4205E3  +
lea ecx [esp+90h+var_3C] +
sub eax ecx +
cmp eax [esp+90h+var_70] +
jnb loc_420655  +
cmp [esp+90h+var_7D] 0 +
mov ecx [esp+90h+var_7C] +
mov al byte ptr ds:a0123456789abcd[eax] +
mov [ecx] al +
jnz loc_420612  +
cmp al 30h +
jz loc_420627  +
mov edx [esp+1Ch] +
lea eax [edx+1Fh] +
cmp ecx eax +
jnb loc_420627  +
inc ecx  +
mov [esp+90h+var_7D] 1 +
mov [esp+90h+var_7C] ecx +
cmp ebx 10h +
mov byte ptr [esp+11h] 1 +
mov ebx [esp+90h+var_6C] +
lea eax [esp+90h+var_6C] +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 7Fh +
jz loc_4206CF  +
cmp [esp+90h+var_58] 10h +
lea eax [esp+90h+var_6C] +
cmovnb eax ebx +
inc byte ptr [eax+edi]  +
jmp loc_4206CB  +
cmp ebx 10h +
lea eax [esp+90h+var_6C] +
mov ebx [esp+90h+var_6C] +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 0 +
jz loc_420725  +
mov al [esp+90h+var_7E] +
test al al +
jz loc_420725  +
cmp byte ptr [esi+4] 0 +
jnz loc_4206B8  +
mov ecx [esi] +
test ecx ecx +
jz loc_4206AA  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_42069B  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_42069B  +
movzx eax byte ptr [edx] +
jmp loc_4206A0  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4206AA  +
mov [esi+5] al +
jmp loc_4206B0  +
mov dword ptr [esi] 0 +
mov al [esp+90h+var_7E] +
mov byte ptr [esi+4] 1 +
cmp [esi+5] al +
jnz loc_420725  +
push 0  +
push 1  +
lea ecx [esp+98h+var_6C] +
call loc_41C890  +
inc edi  +
mov ebx [esp+24h] +
mov ecx [esi] +
test ecx ecx +
jz loc_420708  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4206F8  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_4206F8  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4206FD  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420708  +
mov byte ptr [esi+4] 0 +
jmp loc_420712  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push dword ptr [esp+98h+var_80]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_420595  +
test edi edi +
jz loc_420743  +
cmp [esp+98h+var_60] 10h +
lea eax [esp+24h] +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 0 +
jle loc_42073E  +
inc edi  +
jmp loc_420743  +
mov [esp+98h+var_87] 0 +
mov esi [esp+98h+var_48] +
lea edx [esp+98h+var_5C] +
mov ebx [esp+98h+var_5C] +
cmp esi 10h +
cmovnb edx ebx +
cmp [esp+98h+var_87] 0 +
jz loc_4207B1  +
lea esp [esp+0] +
test edi edi +
jz loc_4207A0  +
mov cl [edx] +
cmp cl 7Fh +
jz loc_4207A0  +
dec edi  +
jz loc_420781  +
cmp [esp+98h+var_60] 10h +
lea eax [esp+24h] +
cmovnb eax [esp+24h] +
cmp cl [eax+edi] +
jnz loc_4207B1  +
test edi edi +
jnz loc_420797  +
cmp [esp+98h+var_60] 10h +
lea eax [esp+24h] +
cmovnb eax [esp+24h] +
cmp cl [eax] +
jl loc_4207B1  +
cmp byte ptr [edx+1] 0 +
jle loc_420760  +
inc edx  +
jmp loc_420760  +
cmp [esp+98h+var_85] 0 +
mov eax [esp+98h+var_84] +
jnz loc_4207B5  +
mov byte ptr [eax] 30h +
inc eax  +
jmp loc_4207B5  +
mov eax [esp+98h+var_7C] +
cmp [esp+98h+var_60] 10h +
mov byte ptr [eax] 0 +
jb loc_4207D3  +
push dword ptr [esp+24h]  +
call sub_43FFF6  +
mov esi [esp+9Ch+var_48] +
add esp 4 +
mov ebx [esp+98h+var_5C] +
cmp esi 10h +
jb loc_4207E1  +
push ebx  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+arg_10] +
mov ecx [esp+98h+var_20] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+60h] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CD10  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_10] +
mov ebx [ebp+arg_4] +
mov edx [ebp+arg_C] +
mov esi [ebp+arg_8] +
mov eax [edi+14h] +
mov ecx [ebp+arg_14] +
and eax 3000h +
mov [ebp+var_70] ebx +
mov [ebp+var_58] edx +
cmp eax 3000h +
jnz loc_420874  +
push ecx  +
push edi  +
push edx  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_421260  +
add esp 18h +
jmp loc_42123D  +
lea eax [ebp+var_78] +
mov ecx edi +
push eax  +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_415480  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [ebp+var_78] +
mov ebx eax +
mov [ebp+var_74] ebx +
test ecx ecx +
jz loc_4208B3  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4208B3  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [ebp+var_50] +
mov ecx ebx +
push eax  +
call sub_414F10  +
mov ebx [ebp+var_70] +
lea eax [ebp+var_6C] +
push eax  +
mov ecx edi +
mov [ebp+var_4] 1 +
mov [ebp+var_60] ebx +
mov [ebp+var_5A] 0 +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_6C] +
mov edi eax +
test ecx ecx +
jz loc_420905  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_420905  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [edi] +
lea ecx [ebp+var_20] +
push ecx  +
push (offset a0123456789Ee+0Eh)  +
push offset a0123456789Ee  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_42095B  +
mov ecx esi +
call sub_421DA0  +
mov ecx esi +
cmp al [ebp+var_15] +
jnz loc_42093E  +
mov eax [ebp+var_70] +
mov byte ptr [eax] 2Bh +
jmp loc_420950  +
call sub_421DA0  +
cmp al [ebp+var_16] +
jnz loc_42095B  +
mov eax [ebp+var_70] +
mov ecx esi +
mov byte ptr [eax] 2Dh +
lea ebx [eax+1] +
mov [ebp+var_60] ebx +
call sub_421DF0  +
xor edi edi +
mov [ebp+var_51] 0 +
cmp [ebp+var_3C] 10h +
lea eax [ebp+var_50] +
mov [ebp+var_68] edi +
cmovnb eax [ebp+var_50] +
mov [ebp+var_6C] eax +
mov [ebp+var_64] edi +
mov al [eax] +
cmp al 7Fh +
jz loc_420B99  +
test al al +
jle loc_420B99  +
cmp [ebp+var_40] edi +
jnz loc_420992  +
mov [ebp+var_59] 0 +
jmp loc_42099F  +
mov ecx [ebp+var_74] +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov [ebp+var_59] al +
mov [ebp+var_24] 0Fh +
mov word ptr [ebp+var_38] di +
mov [ebp+var_28] 1 +
push [ebp+var_58]  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
xor edi edi +
call sub_422720  +
mov ebx [ebp+var_38] +
test al al +
jnz loc_420AE0  +
lea esp [esp+0] +
cmp byte ptr [esi+4] 0 +
jnz loc_420A0B  +
mov ecx [esi] +
test ecx ecx +
jz loc_420A01  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4209F2  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4209F2  +
movzx eax byte ptr [edx] +
jmp loc_4209F7  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420A01  +
mov [esi+5] al +
jmp loc_420A07  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_20] +
lea eax [ebp+var_20] +
mov dl [esi+5] +
test cl cl +
jz loc_420A24  +
cmp cl dl +
jz loc_420A24  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_420A18  +
lea ecx [ebp+var_20] +
sub eax ecx +
cmp eax 0Ah +
jnb loc_420A7A  +
mov ecx [ebp+var_68] +
mov [ebp+var_51] 1 +
cmp ecx 24h +
jl loc_420A3F  +
inc [ebp+var_64]  +
jmp loc_420A5A  +
test eax eax +
jnz loc_420A47  +
test ecx ecx +
jz loc_420A5A  +
mov edx [ebp+var_60] +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [edx] al +
inc edx  +
inc ecx  +
mov [ebp+var_60] edx +
mov [ebp+var_68] ecx +
mov ecx [ebp+var_24] +
lea eax [ebp+var_38] +
cmp ecx 10h +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 7Fh +
jz loc_420AAE  +
cmp ecx 10h +
lea eax [ebp+var_38] +
cmovnb eax ebx +
inc byte ptr [eax+edi]  +
jmp loc_420AAB  +
mov edx [ebp+var_24] +
lea eax [ebp+var_38] +
cmp edx 10h +
cmovnb eax ebx +
cmp byte ptr [edi+eax] 0 +
jz loc_420ACA  +
cmp [ebp+var_59] 0 +
jz loc_420ACA  +
mov ecx esi +
call sub_421DA0  +
cmp al [ebp+var_59] +
jnz loc_420AC7  +
push 0  +
push 1  +
lea ecx [ebp+var_38] +
call loc_41C890  +
inc edi  +
mov ebx [ebp+var_38] +
mov ecx esi +
call sub_421DF0  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_4209D0  +
mov edx [ebp+var_24] +
test edi edi +
jz loc_420AE0  +
cmp edx 10h +
lea eax [ebp+var_38] +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 0 +
jle loc_420B21  +
inc edi  +
mov edi edi +
mov eax [ebp+var_6C] +
test edi edi +
jz loc_420B27  +
mov cl [eax] +
cmp cl 7Fh +
jz loc_420B27  +
mov edx [ebp+var_24] +
dec edi  +
jz loc_420B02  +
cmp edx 10h +
lea eax [ebp+var_38] +
cmovnb eax ebx +
cmp cl [eax+edi] +
jnz loc_420B21  +
test edi edi +
jnz loc_420B13  +
cmp edx 10h +
lea eax [ebp+var_38] +
cmovnb eax ebx +
cmp cl [eax] +
jl loc_420B21  +
mov eax [ebp+var_6C] +
inc eax  +
cmp byte ptr [eax] 0 +
jle loc_420AE0  +
mov [ebp+var_6C] eax +
jmp loc_420AE3  +
mov [ebp+var_5A] 1 +
jmp loc_420B2A  +
mov edx [ebp+var_24] +
mov byte ptr [ebp+var_4] 1 +
cmp edx 10h +
jb loc_420B3C  +
push ebx  +
call sub_43FFF6  +
add esp 4 +
mov edi [ebp+var_68] +
cmp [ebp+var_51] 0 +
jz loc_420B53  +
test edi edi +
jnz loc_420B53  +
mov eax [ebp+var_60] +
mov byte ptr [eax] 30h +
inc eax  +
mov [ebp+var_60] eax +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_420D0B  +
cmp [esi+4] al +
jnz loc_420CA3  +
mov ecx [esi] +
test ecx ecx +
jz loc_420C99  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420C8A  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420C8A  +
movzx eax byte ptr [edx] +
jmp loc_420C8F  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_420B53  +
cmp byte ptr [esi+4] 0 +
jnz loc_420BE2  +
mov ecx [esi] +
test ecx ecx +
jz loc_420BD8  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420BC9  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420BC9  +
movzx eax byte ptr [edx] +
jmp loc_420BCE  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420BD8  +
mov [esi+5] al +
jmp loc_420BDE  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_20] +
lea eax [ebp+var_20] +
mov dl [esi+5] +
test cl cl +
jz loc_420BFC  +
nop   +
cmp cl dl +
jz loc_420BFC  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_420BF0  +
lea ecx [ebp+var_20] +
sub eax ecx +
cmp eax 0Ah +
jnb loc_420B3F  +
cmp edi 24h +
jl loc_420C14  +
inc [ebp+var_64]  +
jmp loc_420C2C  +
test eax eax +
jnz loc_420C1C  +
test edi edi +
jz loc_420C2C  +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov [ebp+var_60] ebx +
mov [ebp+var_68] edi +
mov ecx [esi] +
mov [ebp+var_51] 1 +
test ecx ecx +
jz loc_420C69  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_420C59  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_420C59  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_420C5E  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420C69  +
mov byte ptr [esi+4] 0 +
jmp loc_420C73  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_420BA7  +
jmp loc_420B45  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420C99  +
mov [esi+5] al +
jmp loc_420C9F  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov ecx [ebp+var_74] +
mov bl [esi+5] +
mov eax [ecx] +
mov eax [eax+0Ch] +
call eax  +
cmp bl al +
jnz loc_420D0B  +
call sub_44081C  +
mov ebx [ebp+var_60] +
mov eax [eax] +
mov al [eax] +
mov [ebx] al +
inc ebx  +
mov ecx [esi] +
mov [ebp+var_60] ebx +
test ecx ecx +
jz loc_420CFF  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_420CEF  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_420CEF  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_420CF4  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420CFF  +
mov byte ptr [esi+4] 0 +
jmp loc_420D0E  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_420D0E  +
mov ebx [ebp+var_60] +
test edi edi +
jnz loc_420DE3  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_420DD4  +
mov ebx [ebp+var_58] +
mov edi [ebp+var_64] +
mov edi edi +
cmp byte ptr [esi+4] 0 +
jnz loc_420D6B  +
mov ecx [esi] +
test ecx ecx +
jz loc_420D61  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420D52  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420D52  +
movzx eax byte ptr [edx] +
jmp loc_420D57  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420D61  +
mov [esi+5] al +
jmp loc_420D67  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [ebp+var_20] +
jnz loc_420DCB  +
mov ecx [esi] +
dec edi  +
mov [ebp+var_51] 1 +
test ecx ecx +
jz loc_420DB1  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_420DA1  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_420DA1  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_420DA6  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420DB1  +
mov byte ptr [esi+4] 0 +
jmp loc_420DBB  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push ebx  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_420D30  +
mov ebx [ebp+var_60] +
mov [ebp+var_64] edi +
mov edi [ebp+var_68] +
mov eax [ebp+var_64] +
test eax eax +
jns loc_420DE3  +
mov byte ptr [ebx] 30h +
inc ebx  +
inc eax  +
mov [ebp+var_64] eax +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_420EC0  +
cmp byte ptr [esi+4] 0 +
jnz loc_420E30  +
mov ecx [esi] +
test ecx ecx +
jz loc_420E26  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420E17  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420E17  +
movzx eax byte ptr [edx] +
jmp loc_420E1C  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420E26  +
mov [esi+5] al +
jmp loc_420E2C  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_20] +
lea eax [ebp+var_20] +
mov dl [esi+5] +
test cl cl +
jz loc_420E4C  +
lea ecx [ecx+0] +
cmp cl dl +
jz loc_420E4C  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_420E40  +
lea ecx [ebp+var_20] +
sub eax ecx +
cmp eax 0Ah +
jnb loc_420EC0  +
cmp edi 24h +
jge loc_420E65  +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov ecx [esi] +
mov [ebp+var_51] 1 +
test ecx ecx +
jz loc_420EA2  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_420E92  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_420E92  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_420E97  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420EA2  +
mov byte ptr [esi+4] 0 +
jmp loc_420EAC  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_420DF5  +
jmp loc_420ECB  +
mov al [ebp+var_51] +
test al al +
jz loc_421219  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421216  +
cmp [esi+4] al +
jnz loc_420F17  +
mov ecx [esi] +
test ecx ecx +
jz loc_420F0D  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420EFE  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420EFE  +
movzx eax byte ptr [edx] +
jmp loc_420F03  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420F0D  +
mov [esi+5] al +
jmp loc_420F13  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_13] +
jz loc_420F66  +
cmp byte ptr [esi+4] 0 +
jnz loc_420F5A  +
mov ecx [esi] +
test ecx ecx +
jz loc_420F50  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420F41  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_420F41  +
movzx eax byte ptr [edx] +
jmp loc_420F46  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420F50  +
mov [esi+5] al +
jmp loc_420F56  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_14] +
jnz loc_421216  +
mov byte ptr [ebx] 65h +
inc ebx  +
mov ecx [esi] +
test ecx ecx +
jz loc_420FA3  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_420F93  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_420F93  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_420F98  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_420FA3  +
mov byte ptr [esi+4] 0 +
jmp loc_420FAD  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_58]  +
mov ecx esi +
mov [ebp+var_51] 0 +
xor edi edi +
call sub_422720  +
test al al +
jnz loc_421087  +
cmp [esi+4] al +
jnz loc_420FFA  +
mov ecx [esi] +
test ecx ecx +
jz loc_420FF4  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_420FE5  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_420FE5  +
movzx eax byte ptr [edx] +
jmp loc_420FEA  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_420FF4  +
mov [esi+5] al +
jmp loc_420FF6  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_15] +
jnz loc_421007  +
mov byte ptr [ebx] 2Bh +
jmp loc_421048  +
cmp byte ptr [esi+4] 0 +
jnz loc_42103D  +
mov ecx [esi] +
test ecx ecx +
jz loc_421037  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421028  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_421028  +
movzx eax byte ptr [edx] +
jmp loc_42102D  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421037  +
mov [esi+5] al +
jmp loc_421039  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_16] +
jnz loc_421087  +
mov byte ptr [ebx] 2Dh +
mov ecx [esi] +
inc ebx  +
test ecx ecx +
jz loc_421081  +
mov eax [ecx+1Ch] +
cmp [eax] edi +
jz loc_421071  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421071  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421076  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421081  +
mov byte ptr [esi+4] 0 +
jmp loc_421087  +
mov byte ptr [esi+4] 1 +
mov [esi] edi +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_42113E  +
lea esp [esp+0] +
cmp byte ptr [esi+4] 0 +
jnz loc_4210D6  +
mov ecx [esi] +
test ecx ecx +
jz loc_4210D0  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4210C1  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_4210C1  +
movzx eax byte ptr [edx] +
jmp loc_4210C6  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4210D0  +
mov [esi+5] al +
jmp loc_4210D2  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [ebp+var_20] +
jnz loc_421134  +
mov ecx [esi] +
mov [ebp+var_51] 1 +
test ecx ecx +
jz loc_42111A  +
mov eax [ecx+1Ch] +
cmp [eax] edi +
jz loc_42110A  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_42110A  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_42110F  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_42111A  +
mov byte ptr [esi+4] 0 +
jmp loc_421120  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_4210A0  +
jmp loc_42113A  +
cmp [ebp+var_51] 0 +
jz loc_42113E  +
mov byte ptr [ebx] 30h +
inc ebx  +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421216  +
cmp byte ptr [esi+4] 0 +
jnz loc_42118B  +
mov ecx [esi] +
test ecx ecx +
jz loc_421181  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421172  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421172  +
movzx eax byte ptr [edx] +
jmp loc_421177  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421181  +
mov [esi+5] al +
jmp loc_421187  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_20] +
lea eax [ebp+var_20] +
mov dl [esi+5] +
test cl cl +
jz loc_4211A4  +
cmp cl dl +
jz loc_4211A4  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_421198  +
lea ecx [ebp+var_20] +
sub eax ecx +
cmp eax 0Ah +
jnb loc_421216  +
cmp edi 8 +
jge loc_4211BD  +
mov al byte ptr ds:a0123456789Ee[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov ecx [esi] +
mov [ebp+var_51] 1 +
test ecx ecx +
jz loc_4211FA  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4211EA  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_4211EA  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4211EF  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_4211FA  +
mov byte ptr [esi+4] 0 +
jmp loc_421204  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_58]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_421150  +
mov al [ebp+var_51] +
cmp [ebp+var_5A] 0 +
jnz loc_421223  +
test al al +
jnz loc_421226  +
mov ebx [ebp+var_70] +
cmp [ebp+var_3C] 10h +
mov byte ptr [ebx] 0 +
jb loc_42123A  +
push [ebp+var_50]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_64] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CD63  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_C] +
mov edi [ebp+arg_10] +
mov ecx edi +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [ebp+var_64] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_88] eax +
lea eax [ebp+var_84] +
push eax  +
mov [ebp+var_7C] ebx +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_415480  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [ebp+var_84] +
mov ebx eax +
mov [ebp+var_80] ebx +
test ecx ecx +
jz loc_4212EB  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4212EB  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [ebp+var_5C] +
mov ecx ebx +
push eax  +
call sub_414F10  +
lea eax [ebp+var_74] +
mov [ebp+var_4] 1 +
push eax  +
mov ecx edi +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_414F50  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_74] +
mov edi eax +
test ecx ecx +
jz loc_421333  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_421333  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [edi] +
lea ecx [ebp+var_2C] +
push ecx  +
push (offset a0123456789ab_0+1Ch)  +
push offset a0123456789ab_0  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
push [ebp+var_64]  +
mov edi [ebp+var_7C] +
mov ecx esi +
mov ebx edi +
mov [ebp+var_66] 0 +
call sub_422720  +
test al al +
jnz loc_4213BF  +
cmp [esi+4] al +
jnz loc_421399  +
mov ecx [esi] +
test ecx ecx +
jz loc_42138F  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421380  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421380  +
movzx eax byte ptr [edx] +
jmp loc_421385  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_42138F  +
mov [esi+5] al +
jmp loc_421395  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
mov ecx esi +
cmp al [ebp+var_15] +
jnz loc_4213A8  +
mov byte ptr [edi] 2Bh +
jmp loc_4213B7  +
call sub_421DA0  +
cmp al [ebp+var_16] +
jnz loc_4213BF  +
mov byte ptr [edi] 2Dh +
mov ecx esi +
lea ebx [edi+1] +
call sub_421DF0  +
push [ebp+var_64]  +
mov word ptr [ebx] 7830h +
xor edi edi +
add ebx 2 +
mov [ebp+var_5D] 0 +
mov ecx esi +
mov [ebp+var_6C] ebx +
mov [ebp+var_78] edi +
mov [ebp+var_70] edi +
call sub_422720  +
test al al +
jnz loc_42145B  +
cmp [esi+4] al +
jnz loc_421419  +
mov ecx [esi] +
test ecx ecx +
jz loc_421413  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421404  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_421404  +
movzx eax byte ptr [edx] +
jmp loc_421409  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421413  +
mov [esi+5] al +
jmp loc_421415  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [ebp+var_2C] +
jnz loc_42145B  +
mov ecx esi +
call sub_421DF0  +
push [ebp+var_64]  +
mov ecx eax +
call sub_422720  +
test al al +
jnz loc_421457  +
mov ecx esi +
call sub_421DA0  +
cmp al [ebp+var_13] +
jz loc_42144E  +
mov ecx esi +
call sub_421DA0  +
cmp al [ebp+var_14] +
jnz loc_421457  +
mov ecx esi +
call sub_421DF0  +
jmp loc_42145B  +
mov [ebp+var_5D] 1 +
cmp [ebp+var_48] 10h +
lea eax [ebp+var_5C] +
cmovnb eax [ebp+var_5C] +
mov [ebp+var_74] eax +
mov al [eax] +
cmp al 7Fh +
jz loc_4216C9  +
test al al +
jle loc_4216C9  +
cmp [ebp+var_4C] edi +
jnz loc_421486  +
mov [ebp+var_65] 0 +
jmp loc_421493  +
mov ecx [ebp+var_80] +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov [ebp+var_65] al +
mov [ebp+var_30] 0Fh +
mov word ptr [ebp+var_44] di +
mov [ebp+var_34] 1 +
push [ebp+var_64]  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
xor edi edi +
call sub_422720  +
mov ebx [ebp+var_44] +
test al al +
jnz loc_421610  +
cmp byte ptr [esi+4] 0 +
jnz loc_4214FB  +
mov ecx [esi] +
test ecx ecx +
jz loc_4214F1  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4214E2  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4214E2  +
movzx eax byte ptr [edx] +
jmp loc_4214E7  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4214F1  +
mov [esi+5] al +
jmp loc_4214F7  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_2C] +
lea eax [ebp+var_2C] +
mov dl [esi+5] +
test cl cl +
jz loc_421514  +
cmp cl dl +
jz loc_421514  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_421508  +
lea ecx [ebp+var_2C] +
sub eax ecx +
cmp eax 16h +
jnb loc_42156A  +
mov edx [ebp+var_78] +
mov [ebp+var_5D] 1 +
cmp edx 24h +
jl loc_42152F  +
inc [ebp+var_70]  +
jmp loc_42154A  +
test eax eax +
jnz loc_421537  +
test edx edx +
jz loc_42154A  +
mov ecx [ebp+var_6C] +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [ecx] al +
inc ecx  +
inc edx  +
mov [ebp+var_6C] ecx +
mov [ebp+var_78] edx +
mov ecx [ebp+var_30] +
lea eax [ebp+var_44] +
cmp ecx 10h +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 7Fh +
jz loc_42159E  +
cmp ecx 10h +
lea eax [ebp+var_44] +
cmovnb eax ebx +
inc byte ptr [eax+edi]  +
jmp loc_42159B  +
mov edx [ebp+var_30] +
lea eax [ebp+var_44] +
cmp edx 10h +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 0 +
jz loc_4215F6  +
cmp [ebp+var_65] 0 +
jz loc_4215F6  +
mov ecx esi +
call sub_421DA0  +
cmp al [ebp+var_65] +
jnz loc_4215F3  +
push 0  +
push 1  +
lea ecx [ebp+var_44] +
call loc_41C890  +
inc edi  +
mov ebx [ebp+var_44] +
mov ecx [esi] +
test ecx ecx +
jz loc_4215D7  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4215C7  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_4215C7  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4215CC  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_4215D7  +
mov byte ptr [esi+4] 0 +
jmp loc_4215E1  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_4214C0  +
mov edx [ebp+var_30] +
test edi edi +
jz loc_421610  +
cmp edx 10h +
lea eax [ebp+var_44] +
cmovnb eax ebx +
cmp byte ptr [eax+edi] 0 +
jle loc_421651  +
inc edi  +
lea ebx [ebx+0] +
mov eax [ebp+var_74] +
test edi edi +
jz loc_421657  +
mov cl [eax] +
cmp cl 7Fh +
jz loc_421657  +
mov edx [ebp+var_30] +
dec edi  +
jz loc_421632  +
cmp edx 10h +
lea eax [ebp+var_44] +
cmovnb eax ebx +
cmp cl [eax+edi] +
jnz loc_421651  +
test edi edi +
jnz loc_421643  +
cmp edx 10h +
lea eax [ebp+var_44] +
cmovnb eax ebx +
cmp cl [eax] +
jl loc_421651  +
mov eax [ebp+var_74] +
inc eax  +
cmp byte ptr [eax] 0 +
jle loc_421610  +
mov [ebp+var_74] eax +
jmp loc_421613  +
mov [ebp+var_66] 1 +
jmp loc_42165A  +
mov edx [ebp+var_30] +
mov byte ptr [ebp+var_4] 1 +
cmp edx 10h +
jb loc_42166C  +
push ebx  +
call sub_43FFF6  +
add esp 4 +
mov edi [ebp+var_78] +
mov ebx [ebp+var_6C] +
cmp [ebp+var_5D] 0 +
jz loc_421683  +
test edi edi +
jnz loc_421683  +
mov byte ptr [ebx] 30h +
inc ebx  +
mov [ebp+var_6C] ebx +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_42183B  +
cmp [esi+4] al +
jnz loc_4217D3  +
mov ecx [esi] +
test ecx ecx +
jz loc_4217C9  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4217BA  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4217BA  +
movzx eax byte ptr [edx] +
jmp loc_4217BF  +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421672  +
cmp byte ptr [esi+4] 0 +
jnz loc_421712  +
mov ecx [esi] +
test ecx ecx +
jz loc_421708  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_4216F9  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_4216F9  +
movzx eax byte ptr [edx] +
jmp loc_4216FE  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421708  +
mov [esi+5] al +
jmp loc_42170E  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_2C] +
lea eax [ebp+var_2C] +
mov dl [esi+5] +
test cl cl +
jz loc_42172C  +
nop   +
cmp cl dl +
jz loc_42172C  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_421720  +
lea ecx [ebp+var_2C] +
sub eax ecx +
cmp eax 16h +
jnb loc_421672  +
cmp edi 24h +
jl loc_421744  +
inc [ebp+var_70]  +
jmp loc_42175C  +
test eax eax +
jnz loc_42174C  +
test edi edi +
jz loc_42175C  +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov [ebp+var_6C] ebx +
mov [ebp+var_78] edi +
mov ecx [esi] +
mov [ebp+var_5D] 1 +
test ecx ecx +
jz loc_421799  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_421789  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421789  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_42178E  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421799  +
mov byte ptr [esi+4] 0 +
jmp loc_4217A3  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_4216D7  +
jmp loc_421678  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4217C9  +
mov [esi+5] al +
jmp loc_4217CF  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov ecx [ebp+var_80] +
mov bl [esi+5] +
mov eax [ecx] +
mov eax [eax+0Ch] +
call eax  +
cmp bl al +
jnz loc_42183B  +
call sub_44081C  +
mov ebx [ebp+var_6C] +
mov eax [eax] +
mov al [eax] +
mov [ebx] al +
inc ebx  +
mov ecx [esi] +
mov [ebp+var_6C] ebx +
test ecx ecx +
jz loc_42182F  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_42181F  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_42181F  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421824  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_42182F  +
mov byte ptr [esi+4] 0 +
jmp loc_42183E  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
jmp loc_42183E  +
mov ebx [ebp+var_6C] +
test edi edi +
jnz loc_421913  +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421904  +
mov ebx [ebp+var_64] +
mov edi [ebp+var_70] +
mov edi edi +
cmp byte ptr [esi+4] 0 +
jnz loc_42189B  +
mov ecx [esi] +
test ecx ecx +
jz loc_421891  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421882  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421882  +
movzx eax byte ptr [edx] +
jmp loc_421887  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421891  +
mov [esi+5] al +
jmp loc_421897  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [ebp+var_2C] +
jnz loc_4218FB  +
mov ecx [esi] +
dec edi  +
mov [ebp+var_5D] 1 +
test ecx ecx +
jz loc_4218E1  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4218D1  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_4218D1  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4218D6  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_4218E1  +
mov byte ptr [esi+4] 0 +
jmp loc_4218EB  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push ebx  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_421860  +
mov ebx [ebp+var_6C] +
mov [ebp+var_70] edi +
mov edi [ebp+var_78] +
mov eax [ebp+var_70] +
test eax eax +
jns loc_421913  +
mov byte ptr [ebx] 30h +
inc ebx  +
inc eax  +
mov [ebp+var_70] eax +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_4219F0  +
cmp byte ptr [esi+4] 0 +
jnz loc_421960  +
mov ecx [esi] +
test ecx ecx +
jz loc_421956  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421947  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421947  +
movzx eax byte ptr [edx] +
jmp loc_42194C  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421956  +
mov [esi+5] al +
jmp loc_42195C  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_2C] +
lea eax [ebp+var_2C] +
mov dl [esi+5] +
test cl cl +
jz loc_42197C  +
lea ecx [ecx+0] +
cmp cl dl +
jz loc_42197C  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_421970  +
lea ecx [ebp+var_2C] +
sub eax ecx +
cmp eax 16h +
jnb loc_4219F0  +
cmp edi 24h +
jge loc_421995  +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov ecx [esi] +
mov [ebp+var_5D] 1 +
test ecx ecx +
jz loc_4219D2  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4219C2  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_4219C2  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4219C7  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_4219D2  +
mov byte ptr [esi+4] 0 +
jmp loc_4219DC  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_421925  +
jmp loc_4219FB  +
mov al [ebp+var_5D] +
test al al +
jz loc_421D49  +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421D46  +
cmp [esi+4] al +
jnz loc_421A47  +
mov ecx [esi] +
test ecx ecx +
jz loc_421A3D  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421A2E  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421A2E  +
movzx eax byte ptr [edx] +
jmp loc_421A33  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421A3D  +
mov [esi+5] al +
jmp loc_421A43  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_11] +
jz loc_421A96  +
cmp byte ptr [esi+4] 0 +
jnz loc_421A8A  +
mov ecx [esi] +
test ecx ecx +
jz loc_421A80  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421A71  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421A71  +
movzx eax byte ptr [edx] +
jmp loc_421A76  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421A80  +
mov [esi+5] al +
jmp loc_421A86  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_12] +
jnz loc_421D46  +
mov byte ptr [ebx] 70h +
inc ebx  +
mov ecx [esi] +
test ecx ecx +
jz loc_421AD3  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_421AC3  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421AC3  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421AC8  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421AD3  +
mov byte ptr [esi+4] 0 +
jmp loc_421ADD  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
mov [ebp+var_5D] 0 +
xor edi edi +
call sub_422720  +
test al al +
jnz loc_421BB7  +
cmp [esi+4] al +
jnz loc_421B2A  +
mov ecx [esi] +
test ecx ecx +
jz loc_421B24  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421B15  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_421B15  +
movzx eax byte ptr [edx] +
jmp loc_421B1A  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421B24  +
mov [esi+5] al +
jmp loc_421B26  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_15] +
jnz loc_421B37  +
mov byte ptr [ebx] 2Bh +
jmp loc_421B78  +
cmp byte ptr [esi+4] 0 +
jnz loc_421B6D  +
mov ecx [esi] +
test ecx ecx +
jz loc_421B67  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421B58  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_421B58  +
movzx eax byte ptr [edx] +
jmp loc_421B5D  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421B67  +
mov [esi+5] al +
jmp loc_421B69  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al [ebp+var_16] +
jnz loc_421BB7  +
mov byte ptr [ebx] 2Dh +
mov ecx [esi] +
inc ebx  +
test ecx ecx +
jz loc_421BB1  +
mov eax [ecx+1Ch] +
cmp [eax] edi +
jz loc_421BA1  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421BA1  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421BA6  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421BB1  +
mov byte ptr [esi+4] 0 +
jmp loc_421BB7  +
mov byte ptr [esi+4] 1 +
mov [esi] edi +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421C6E  +
lea esp [esp+0] +
cmp byte ptr [esi+4] 0 +
jnz loc_421C06  +
mov ecx [esi] +
test ecx ecx +
jz loc_421C00  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421BF1  +
mov eax [ecx+2Ch] +
cmp [eax] edi +
jle loc_421BF1  +
movzx eax byte ptr [edx] +
jmp loc_421BF6  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421C00  +
mov [esi+5] al +
jmp loc_421C02  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
cmp al byte ptr [ebp+var_2C] +
jnz loc_421C64  +
mov ecx [esi] +
mov [ebp+var_5D] 1 +
test ecx ecx +
jz loc_421C4A  +
mov eax [ecx+1Ch] +
cmp [eax] edi +
jz loc_421C3A  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421C3A  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421C3F  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421C4A  +
mov byte ptr [esi+4] 0 +
jmp loc_421C50  +
mov [esi] edi +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_421BD0  +
jmp loc_421C6A  +
cmp [ebp+var_5D] 0 +
jz loc_421C6E  +
mov byte ptr [ebx] 30h +
inc ebx  +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jnz loc_421D46  +
cmp byte ptr [esi+4] 0 +
jnz loc_421CBB  +
mov ecx [esi] +
test ecx ecx +
jz loc_421CB1  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421CA2  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421CA2  +
movzx eax byte ptr [edx] +
jmp loc_421CA7  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421CB1  +
mov [esi+5] al +
jmp loc_421CB7  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov cl byte ptr [ebp+var_2C] +
lea eax [ebp+var_2C] +
mov dl [esi+5] +
test cl cl +
jz loc_421CD4  +
cmp cl dl +
jz loc_421CD4  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_421CC8  +
lea ecx [ebp+var_2C] +
sub eax ecx +
cmp eax 16h +
jnb loc_421D46  +
cmp edi 8 +
jge loc_421CED  +
mov al byte ptr ds:a0123456789ab_0[eax] +
mov [ebx] al +
inc ebx  +
inc edi  +
mov ecx [esi] +
mov [ebp+var_5D] 1 +
test ecx ecx +
jz loc_421D2A  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_421D1A  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421D1A  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421D1F  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421D2A  +
mov byte ptr [esi+4] 0 +
jmp loc_421D34  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
push [ebp+var_64]  +
mov ecx esi +
call sub_422720  +
test al al +
jz loc_421C80  +
mov al [ebp+var_5D] +
cmp [ebp+var_66] 0 +
jnz loc_421D53  +
test al al +
jnz loc_421D56  +
mov ebx [ebp+var_7C] +
cmp [ebp+var_48] 10h +
mov ecx [ebp+var_88] +
mov eax [ebp+var_70] +
mov byte ptr [ebx] 0 +
mov [ecx] eax +
jb loc_421D75  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp byte ptr [esi+4] 0 +
jnz loc_421DE2  +
mov ecx [esi] +
test ecx ecx +
jz loc_421DD8  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_421DC5  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_421DC5  +
movzx eax byte ptr [edx] +
jmp loc_421DCA  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_421DD8  +
mov [esi+5] al +
mov byte ptr [esi+4] 1 +
pop esi  +
retn   +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
mov al [esi+5] +
pop esi  +
retn   +
***
mov ecx [esi] +
test ecx ecx +
jz loc_421E2E  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_421E1C  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_421E1C  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_421E21  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_421E2E  +
mov byte ptr [esi+4] 0 +
mov eax esi +
pop esi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov byte ptr [esi+4] 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 3FFFFFEh +
jnb loc_422034  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_421E76  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_421E95  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_421E88  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_421E95  +
mov [ecx] ebx +
jmp loc_421E95  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_421E95  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_422020  +
push esi  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_421F60  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_421F66  +
cmp eax [ecx+8] +
jnz loc_421F01  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_421EDC  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_421EEE  +
mov [ecx+4] edx +
jmp loc_421EFC  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_421EF9  +
mov [ecx] edx +
jmp loc_421EFC  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_421F2B  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_421F43  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_42200F  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_421F56  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_42200F  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_42200F  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_421F83  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_422012  +
cmp eax [ecx] +
jnz loc_421FC3  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_421F9C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_421FAE  +
mov [ecx+4] edx +
jmp loc_421FBD  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_421FBB  +
mov [ecx+8] edx +
jmp loc_421FBD  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_421FED  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_421FFF  +
mov [ecx+4] esi +
jmp loc_42200D  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_42200A  +
mov [ecx] esi +
jmp loc_42200D  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_421EA5  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push dword ptr [ebp+18h]  +
call sub_41EB50  +
push offset aMapSetTTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45CDA0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax [ebp+arg_4] +
xor edi edi +
mov ebx [ebp+arg_0] +
mov [ebp+var_1C] edi +
mov edx [eax+10h] +
mov eax [ebx] +
mov [ebp+var_18] edx +
mov ecx [eax+4] +
mov eax [ecx+ebx+24h] +
mov esi [ecx+ebx+20h] +
test eax eax +
jl loc_4220B1  +
jg loc_4220A3  +
test esi esi +
jz loc_4220B1  +
mov [ebp+var_24] eax +
cmp esi edx +
jbe loc_4220B1  +
mov [ebp+var_24] eax +
sub esi edx +
jmp loc_4220B3  +
xor esi esi +
mov ecx [ecx+ebx+38h] +
mov [ebp+var_28] ebx +
test ecx ecx +
jz loc_4220C3  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
jnz loc_4220E7  +
mov ecx [eax+ebx+3Ch] +
test ecx ecx +
jz loc_4220E7  +
cmp ecx ebx +
jz loc_4220E7  +
call sub_414290  +
mov eax [ebx] +
mov ecx [eax+4] +
cmp dword ptr [ecx+ebx+0Ch] 0 +
setz al  +
mov byte ptr [ebp+var_24] al +
mov [ebp+var_4] 1 +
test al al +
jnz loc_42210C  +
mov edi 4 +
jmp loc_42224E  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ecx+ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_422175  +
mov edi edi +
test esi esi +
jz loc_422171  +
mov eax [ebx] +
mov eax [eax+4] +
mov cl [eax+ebx+40h] +
mov [ebp+var_11] cl +
mov ecx [eax+ebx+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_42215C  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_42215C  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_422166  +
movzx eax [ebp+var_11] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_4221DF  +
or edi 4 +
mov [ebp+var_1C] edi +
test edi edi +
jnz loc_4221A0  +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+14h] 10h +
jb loc_422180  +
mov ecx [ecx] +
mov eax [ebx] +
push 0  +
push [ebp+var_18]  +
mov eax [eax+4] +
push ecx  +
mov ecx [eax+ebx+38h] +
call sub_419D60  +
cmp eax [ebp+var_18] +
jnz loc_4221FB  +
test edx edx +
jnz loc_4221FB  +
lea ecx [ecx+0] +
test esi esi +
jz loc_422200  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
mov dl [eax+ebx+40h] +
mov byte ptr [ebp+arg_4+3] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_4221E5  +
mov eax [ecx+30h] +
mov eax [eax] +
test eax eax +
jle loc_4221E5  +
mov edx [ecx+30h] +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al byte ptr [ebp+arg_4+3] +
mov [edx] al +
movzx eax al +
jmp loc_4221EE  +
dec esi  +
jmp loc_422120  +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_4221F8  +
or edi 4 +
jmp loc_422200  +
dec esi  +
jmp loc_4221A0  +
mov edi 4 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [eax+ebx+20h] 0 +
mov dword ptr [eax+ebx+24h] 0 +
jmp loc_422247  +
mov ecx [ebp+8] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_422231  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_422241 +
retn   +
mov ebx [ebp+8] +
mov edi [ebp-1Ch] +
mov [ebp+var_4] 1 +
mov eax [ebx] +
mov ecx [eax+4] +
add ecx ebx +
test edi edi +
jz loc_42226F  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_422267  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
mov esi [ebp+var_28] +
test al al +
jnz loc_422289  +
mov ecx esi +
call sub_414D50  +
mov ecx [esi] +
mov ecx [ecx+4] +
mov ecx [ecx+esi+38h] +
test ecx ecx +
jz loc_42229B  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ebp  +
jmp sub_422A20  +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_47824C +
mov ebx dword_478068 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_42233B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_47824C edi +
jnz loc_42232D  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_47824C eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_47824C +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_422351  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4223BD  +
jmp loc_422353  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_422369  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_42236D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4223BD  +
test ebx ebx +
jz loc_422375  +
mov esi ebx +
jmp loc_4223BD  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_422670  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4223A4  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_478068 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CDC8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax esp +
mov [esp+44h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+54h+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_8] +
mov dl [ebx] +
mov [esp+54h+var_30] eax +
test dl dl +
jz loc_42243E  +
mov al dl +
mov ecx ebx +
cmp al dl +
jnz loc_422436  +
inc esi  +
mov al [ecx+1] +
inc ecx  +
test al al +
jnz loc_422431  +
push 0  +
push esi  +
lea ecx [esp+5Ch+var_2C] +
mov [esp+5Ch+var_34] esi +
mov [esp+5Ch+var_18] 0Fh +
mov [esp+5Ch+var_1C] 0 +
mov byte ptr [esp+5Ch+var_2C] 0 +
call loc_414A90  +
mov ecx 1 +
mov [esp+5Ch+var_C] 0 +
mov eax 0FFFFFFFEh +
mov [esp+5Ch+var_48] ecx +
xor edx edx +
mov [esp+5Ch+var_40] eax +
xor esi esi +
mov [esp+5Ch+var_49] 0 +
mov [esp+5Ch+var_44] edx +
cmp [esp+5Ch+var_3C] edx +
jbe loc_422634  +
jmp loc_42249A  +
mov ecx [esp+5Ch+var_48] +
mov al [esi+ebx] +
test al al +
jz loc_4224B4  +
mov cl [ebx] +
cmp al cl +
jz loc_4224B0  +
mov al [esi+ebx+1] +
inc esi  +
test al al +
jnz loc_4224A3  +
mov ecx [esp+5Ch+var_48] +
cmp [esp+5Ch+var_20] 10h +
lea eax [esp+5Ch+var_34] +
cmovnb eax [esp+5Ch+var_34] +
cmp byte ptr [eax+edx] 0 +
jz loc_4224E1  +
cmp [esp+5Ch+var_20] 10h +
lea eax [esp+5Ch+var_34] +
cmovnb eax [esp+5Ch+var_34] +
movsx eax byte ptr [eax+edx] +
add esi eax +
jmp loc_4225AD  +
add esi ecx +
mov al [esi+ebx] +
cmp al [ebx] +
jz loc_42257F  +
test al al +
jz loc_42257F  +
push [esp+5Ch+var_38]  +
mov ecx edi +
call sub_422720  +
test al al +
jnz loc_422553  +
cmp [edi+4] al +
jnz loc_42253F  +
mov ecx [edi] +
test ecx ecx +
jz loc_422535  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_422526  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_422526  +
movzx eax byte ptr [edx] +
jmp loc_42252B  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_422535  +
mov [edi+5] al +
jmp loc_42253B  +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 1 +
mov al [esi+ebx] +
cmp al [edi+5] +
jnz loc_422553  +
mov edx [esp+5Ch+var_44] +
mov ah 1 +
mov [esp+5Ch+var_49] ah +
jmp loc_4225B1  +
cmp [esp+5Ch+var_20] 10h +
lea edx [esp+5Ch+var_34] +
mov eax [esp+5Ch+var_48] +
mov ecx 7Fh +
cmovnb edx [esp+5Ch+var_34] +
cmp [esp+5Ch+var_48] ecx +
movzx eax al +
cmovb ecx eax +
mov eax [esp+5Ch+var_44] +
mov [edx+eax] cl +
mov edx eax +
jmp loc_4225AD  +
cmp [esp+5Ch+var_20] 10h +
lea edx [esp+5Ch+var_34] +
mov eax [esp+5Ch+var_48] +
mov ecx 7Fh +
cmovnb edx [esp+5Ch+var_34] +
cmp [esp+5Ch+var_48] ecx +
movzx eax al +
cmovb ecx eax +
mov eax [esp+5Ch+var_44] +
mov [edx+eax] cl +
mov edx eax +
mov [esp+5Ch+var_40] edx +
mov ah [esp+5Ch+var_49] +
inc edx  +
mov [esp+5Ch+var_44] edx +
cmp edx [esp+5Ch+var_3C] +
jb loc_422496  +
test ah ah +
jz loc_422630  +
push [esp+5Ch+var_38]  +
mov ecx edi +
call sub_422720  +
test al al +
jnz loc_422630  +
inc [esp+5Ch+var_48]  +
mov ecx [edi] +
test ecx ecx +
jz loc_42261A  +
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_422600  +
mov edx [ecx+2Ch] +
mov eax [edx] +
test eax eax +
jle loc_422600  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_422605  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_42261A  +
mov ecx [esp+5Ch+var_48] +
or eax 0FFFFFFFFh +
mov byte ptr [edi+4] 0 +
jmp loc_422479  +
mov ecx [esp+5Ch+var_48] +
or eax 0FFFFFFFFh +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 1 +
jmp loc_422479  +
mov eax [esp+5Ch+var_40] +
cmp [esp+5Ch+var_20] 10h +
jb loc_42264B  +
push [esp+5Ch+var_34]  +
call sub_43FFF6  +
mov eax [esp+60h+var_40] +
add esp 4 +
mov ecx [esp+5Ch+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+4Ch+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45C20B  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test edi edi +
jz loc_422706  +
cmp [edi] ebx +
jnz loc_422706  +
push 8  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_4226F5  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
test ecx ecx +
jnz loc_4226CE  +
mov eax (offset asc_4696CC+2) +
jmp loc_4226D8  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_4226D8  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_44] +
call sub_411E50  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_462978 +
jmp loc_4226F7  +
xor esi esi +
mov [edi] esi +
test bl 1 +
jz loc_422706  +
lea ecx [ebp+var_44] +
call sub_411F10  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
cmp byte ptr [edi+4] 0 +
jnz loc_422762  +
mov ecx [edi] +
test ecx ecx +
jz loc_422758  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_422749  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_422749  +
movzx eax byte ptr [edx] +
jmp loc_42274E  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_422758  +
mov [edi+5] al +
jmp loc_42275E  +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 1 +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jnz loc_4227A0  +
mov ecx [esi] +
test ecx ecx +
jz loc_422796  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_422787  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_422787  +
movzx eax byte ptr [edx] +
jmp loc_42278C  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_422796  +
mov [esi+5] al +
jmp loc_42279C  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
cmp dword ptr [edi] 0 +
jnz loc_4227B2  +
cmp dword ptr [esi] 0 +
jz loc_4227B7  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
cmp dword ptr [esi] 0 +
jz loc_4227AA  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45CA9A  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_C0] offset unk_46AD30 +
mov [ebp+var_B0] offset unk_469D54 +
mov [ebp+var_58] offset off_4627B8 +
push 0  +
lea eax [ebp+var_A8] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_C0] +
mov [ebp+var_10] 1 +
call sub_41F400  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_462948 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
call sub_418510  +
mov [ebp+var_A8] offset off_462860 +
mov [ebp+var_70] 0 +
mov [ebp+var_6C] 0 +
push [ebp+arg_0]  +
lea eax [ebp+var_B0] +
mov [ebp+var_4] 3 +
push eax  +
call sub_422050  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_4228E0  +
push [ebp+arg_4]  +
lea eax [ebp+var_C0] +
push eax  +
call sub_422A20  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_4228E0  +
lea eax [ebp+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_4228E0  +
mov bl 1 +
jmp loc_4228E2  +
xor bl bl +
lea ecx [ebp+var_58] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [ebp+var_58] +
mov [ebp+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_422955  +
mov eax [esi+10h] +
inc eax  +
jz loc_42295F  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_42295F  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
lea ebx [edi+18h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
add esi 18h +
mov dword ptr [ebx+14h] 0Fh +
mov dword ptr [ebx+10h] 0 +
mov byte ptr [ebx] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_4229AC  +
mov eax [esi+10h] +
inc eax  +
jz loc_4229B6  +
push eax  +
push esi  +
push ebx  +
call loc_43F850  +
add esp 0Ch +
jmp loc_4229B6  +
mov eax [esi] +
mov [ebx] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax edi +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_422A0E  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4229FD  +
push edi  +
mov ecx esi +
call sub_422920  +
add edi 30h +
add esi 30h +
cmp edi ebx +
jnz loc_4229F1  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_41C750  +
***
push 0FFFFFFFFh  +
push offset loc_45CE50  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0FFFFFFFFh  +
push 0  +
xor bl bl +
mov [ebp+var_14] 0Fh +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] bl +
call loc_4105F0  +
lea eax [ebp+var_5C] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call sub_436FFF  +
mov ecx [ebp+var_5C] +
add esp 8 +
test al al +
mov [ebp+var_2C] 0Fh +
mov edx 1FCh +
mov [ebp+var_30] 0 +
cmovz ecx edx +
mov byte ptr [ebp+var_40] bl +
push 5  +
mov [ebp+var_5C] ecx +
lea ecx [ebp+var_40] +
push offset aAdobe  +
call loc_4109B0  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_43772F  +
mov esi eax +
add esp 0Ch +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_422D11  +
cmp [ebp+var_14] 10h +
jb loc_422CF6  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4103E0  +
cmp [ebp+var_44] 10h +
jb loc_422D22  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_2C] 10h +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
jb loc_422D49  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
lea eax [ebp+var_28] +
push eax  +
call sub_437909  +
add esp 4 +
test al al +
jnz loc_422D84  +
lea eax [ebp+var_28] +
push eax  +
call sub_4378B1  +
add esp 4 +
test al al +
jz loc_422F38  +
push [ebp+var_5C]  +
lea eax [ebp+var_28] +
push eax  +
call sub_437C05  +
add esp 8 +
test al al +
jz loc_422F38  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call sub_436FFF  +
mov ecx [ebp+var_5C] +
add esp 8 +
test al al +
mov [ebp+var_2C] 0Fh +
mov eax 1FCh +
mov [ebp+var_30] 0 +
cmovz ecx eax +
mov byte ptr [ebp+var_40] 0 +
push 0Ah  +
mov [ebp+var_5C] ecx +
lea ecx [ebp+var_40] +
push offset aAamupdater  +
call loc_4109B0  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_43772F  +
mov esi eax +
add esp 0Ch +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_422E12  +
cmp [ebp+var_14] 10h +
jb loc_422DF7  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4103E0  +
cmp [ebp+var_44] 10h +
jb loc_422E23  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_2C] 10h +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
jb loc_422E4A  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
push 3  +
push offset a1_0_0  +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
call loc_4109B0  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call sub_43772F  +
mov esi eax +
add esp 0Ch +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_422EB8  +
cmp [ebp+var_14] 10h +
jb loc_422E9D  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4103E0  +
cmp [ebp+var_44] 10h +
jb loc_422EC9  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_2C] 10h +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
jb loc_422EF0  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
lea eax [ebp+var_28] +
push eax  +
call sub_437909  +
add esp 4 +
test al al +
jnz loc_422F23  +
lea eax [ebp+var_28] +
push eax  +
call sub_4378B1  +
add esp 4 +
test al al +
jz loc_422F38  +
push [ebp+var_5C]  +
lea eax [ebp+var_28] +
push eax  +
call sub_437C05  +
add esp 8 +
test al al +
jz loc_422F38  +
lea eax [ebp+var_28] +
mov bl 1 +
cmp edi eax +
jz loc_422F38  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
call loc_4105F0  +
cmp [ebp+var_14] 10h +
jb loc_422F49  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CE88  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
xor bl bl +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] bl +
push 1  +
lea eax [ebp+var_2C] +
mov [ebp+var_4] 0 +
push eax  +
push ecx  +
call sub_439912  +
add esp 0Ch +
test al al +
jz loc_422FEA  +
lea ecx [ebp+var_2C] +
call sub_422C30  +
mov bl al +
test bl bl +
jz loc_422FEA  +
lea eax [ebp+var_2C] +
cmp esi eax +
jz loc_422FEA  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_4105F0  +
cmp [ebp+var_18] 10h +
jb loc_422FFB  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CEC8  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0  +
push esi  +
push 0Dh  +
xor bl bl +
call sub_439912  +
add esp 0Ch +
test al al +
jz loc_423249  +
push 5  +
push offset aAdobe  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] bl +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_4230CB  +
cmp dword ptr [esi+14h] 10h +
jb loc_4230B2  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_4230DC  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_423106  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 13h  +
push offset aAamupdaterinve  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42316E  +
cmp dword ptr [esi+14h] 10h +
jb loc_423155  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_42317F  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_4231A9  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 3  +
push offset a1_0_0  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
call loc_4109B0  +
lea eax [ebp+var_58] +
mov [ebp+var_4] 2 +
push eax  +
lea eax [ebp+var_70] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_423211  +
cmp dword ptr [esi+14h] 10h +
jb loc_4231F8  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_5C] 10h +
jb loc_423222  +
push [ebp+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_44] 10h +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] 0 +
mov byte ptr [ebp+var_70] 0 +
jb loc_423245  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
jmp loc_42324B  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_47582C 0 +
push esi  +
mov esi ecx +
jz loc_423296  +
cmp esi offset dword_47581C +
jz loc_423292  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
mov al 1 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_423292  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CF18  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_4232FD  +
mov eax [esi] +
jmp loc_4232FF  +
mov eax esi +
push 0  +
push esi  +
push 0Dh  +
mov byte ptr [eax] 0 +
call sub_439912  +
add esp 0Ch +
test al al +
jz loc_423641  +
push 5  +
push offset aAdobe  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42337F  +
cmp dword ptr [esi+14h] 10h +
jb loc_423366  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_423390  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_4233BA  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 4  +
push offset aOobe  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_423422  +
cmp dword ptr [esi+14h] 10h +
jb loc_423409  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_423433  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_42345D  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 5  +
push offset aPdapp  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 2 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_4234C5  +
cmp dword ptr [esi+14h] 10h +
jb loc_4234AC  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_4234D6  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_423500  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 3  +
push offset aUwa  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 3 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_423568  +
cmp dword ptr [esi+14h] 10h +
jb loc_42354F  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_423579  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_4235A3  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
push 18h  +
push offset aAamUpdatesNoti  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
call loc_4109B0  +
lea eax [ebp+var_58] +
mov [ebp+var_4] 4 +
push eax  +
lea eax [ebp+var_70] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42360B  +
cmp dword ptr [esi+14h] 10h +
jb loc_4235F2  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_5C] 10h +
jb loc_42361C  +
push [ebp+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_44] 10h +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] 0 +
mov byte ptr [ebp+var_70] 0 +
jb loc_42363F  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_42366C  +
pop ebp  +
retn   +
push eax  +
mov eax [ebp+arg_8] +
movsx eax byte ptr [eax] +
push eax  +
push [ebp+arg_0]  +
call sub_440D80  +
add esp 0Ch +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CF50  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0 +
call sub_43AA26  +
mov esi [eax] +
mov ecx esi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov eax [esi] +
call dword ptr [eax+4]  +
mov byte ptr [ebp+var_4] 1 +
xor ebx ebx +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_42376F  +
mov esi eax +
lea esp [esp+0] +
cmp [ebp+arg_18] 10h +
lea eax [ebp+arg_4] +
cmovnb eax [ebp+arg_4] +
mov al [eax+ebx] +
mov byte ptr [ebp+var_10] al +
lea eax [ebp+var_14] +
push eax  +
call sub_414F50  +
add esp 4 +
mov ecx eax +
mov edx [eax] +
push [ebp+var_10]  +
mov eax [edx+10h] +
call eax  +
cmp [ebp+arg_18] 10h +
lea ecx [ebp+arg_4] +
cmovnb ecx [ebp+arg_4] +
mov [ecx+ebx] al +
inc ebx  +
cmp ebx esi +
jb loc_423730  +
mov esi [ebp+var_18] +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
mov ecx [ebp+arg_18] +
cmp ecx 10h +
jnb loc_4237A1  +
mov eax [ebp+arg_14] +
inc eax  +
jz loc_4237AD  +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
call loc_43F850  +
mov ecx [ebp+arg_18] +
add esp 0Ch +
jmp loc_4237AD  +
mov eax [ebp+arg_4] +
mov [edi] eax +
mov [ebp+arg_4] 0 +
mov eax [ebp+arg_14] +
mov [edi+14h] ecx +
mov ecx esi +
mov [edi+10h] eax +
mov [ebp+arg_18] 0Fh +
mov [ebp+arg_14] 0 +
mov byte ptr [ebp+arg_4] 0 +
mov byte ptr [ebp+var_4] 0 +
mov eax [esi] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4237DF  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
cmp [ebp+arg_18] 10h +
jb loc_4237F0  +
push [ebp+arg_4]  +
call sub_43FFF6  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45CF78  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push ecx  +
lea edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
call sub_428D00  +
add esp 4 +
cmp [ebp+arg_14] 10h +
jb loc_42385A  +
push [ebp+arg_0]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
xor bl bl +
cmp dword ptr [esi+44h] 0 +
jnz loc_423887  +
xor al al +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov ecx [esi+78h] +
xor bh bh +
test ecx ecx +
jz loc_4238A4  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_4238A4  +
mov ecx esi +
call sub_41B3C0  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4238B6  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_4238FF  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_41B8D0  +
mov edx eax +
test edx edx +
jz loc_4238D9  +
mov ecx [esi+44h] +
push edx  +
mov eax [ecx] +
mov eax [eax+14h] +
call eax  +
mov bl al +
test bl bl +
jz loc_4238ED  +
mov ecx [esi+44h] +
push [ebp+arg_4]  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx esi +
call sub_41B4A0  +
mov bl al +
test bh bh +
jz loc_4238FF  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4238FF  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor bh bh +
xor bl bl +
mov ecx [edi+78h] +
test ecx ecx +
jz loc_423975  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_423975  +
mov ecx [edi+78h] +
test ecx ecx +
jz loc_42396C  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_423953  +
mov ecx [edi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bl al +
test bl bl +
jz loc_423975  +
mov ecx edi +
call sub_41B420  +
mov bl al +
test bl bl +
jnz loc_423975  +
mov ecx [edi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_423975  +
mov ecx edi +
call sub_41B420  +
mov bl al +
mov ecx [edi+78h] +
test ecx ecx +
jz loc_423987  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_4239A3  +
mov esi [ebp+arg_4] +
mov ecx edi +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi] 0 +
call sub_41B8D0  +
test eax eax +
mov [esi] eax +
setnz bh  +
test bl bl +
jz loc_4239B5  +
mov ecx [edi+78h] +
test ecx ecx +
jz loc_4239B5  +
mov edx [ecx] +
push 0  +
call dword ptr [edx+4]  +
pop edi  +
pop esi  +
mov al bh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx offset dword_478320 +
call sub_41B350  +
lea eax [ebp-0A8h] +
mov ecx offset dword_478320 +
push eax  +
call loc_41B600  +
mov eax offset loc_424F10 +
retn   +
***
sub esp 18h +
mov ecx esp +
push offset aCouldNotGetUpd  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
sub esp 18h +
mov dword ptr [ebp-178h] 0 +
mov ecx esp +
push offset aAdobeaamupdate  +
call sub_410210  +
lea ecx [ebp-178h] +
call sub_4132F0  +
add esp 18h +
test al al +
jnz loc_42505A  +
lea eax [ebp-169h] +
mov ecx offset dword_47853C +
push eax  +
mov eax dword_47853C +
call dword ptr [eax+4]  +
lea eax [ebp-171h] +
mov ecx offset dword_478518 +
push eax  +
mov eax dword_478518 +
call dword ptr [eax+4]  +
cmp byte ptr [ebp-169h] 0 +
jnz loc_42505A  +
cmp byte ptr [ebp-171h] 1 +
jnz loc_42505A  +
mov eax dword_478518 +
mov ecx offset dword_478518 +
push 0  +
call dword ptr [eax+8]  +
mov eax dword_4785CC +
mov ecx offset dword_4785CC +
push 3  +
call dword ptr [eax+8]  +
lea ecx [ebp-138h] +
call sub_4101E0  +
lea ecx [ebp-78h] +
call sub_4101E0  +
lea ecx [ebp-0D8h] +
call sub_4101E0  +
lea ecx [ebp-0A8h] +
call sub_4101E0  +
mov eax offset dword_478320 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-18h] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx offset dword_478320 +
call sub_41B350  +
lea eax [ebp-0A8h] +
mov ecx offset dword_478320 +
push eax  +
call loc_41B600  +
mov eax offset loc_425214 +
retn   +
***
xor eax eax +
mov byte ptr [ebp-4] 0B6h +
mov ecx offset dword_478320 +
push eax  +
mov dword_478AF8 eax +
call sub_41B310  +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 0B3h +
call sub_4101E0  +
sub esp 18h +
lea eax [ebp-78h] +
mov ecx esp +
push eax  +
call sub_413DA0  +
mov eax dword_478628 +
mov ecx offset dword_478628 +
call dword ptr [eax+8]  +
jmp loc_424FD7  +
***
push offset aUnableToCreate  +
lea ecx [ebp-188h] +
call sub_411E30  +
push offset unk_4720E8  +
lea eax [ebp-188h] +
push eax  +
call sub_443DCE  +
push offset aUnableToCreate  +
lea ecx [ebp-194h] +
call sub_411E30  +
push offset unk_4720E8  +
lea eax [ebp-194h] +
push eax  +
call sub_443DCE  +
push esi  +
mov esi ecx +
call sub_425330  +
test [ebp+arg_0] 1 +
jz loc_42531A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45D7E2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_46A0A0 +
mov [ebp+var_4] 2Bh +
mov ecx [esi+7D8h] +
test ecx ecx +
jz loc_425377  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+0Ch]  +
cmp dword ptr [esi+7F0h] 10h +
jb loc_42538E  +
push dword ptr [esi+7DCh]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+7F0h] 0Fh +
mov dword ptr [esi+7ECh] 0 +
mov byte ptr [esi+7DCh] 0 +
mov dword ptr [esi+7B4h] offset off_46A0DC +
cmp dword ptr [esi+7D0h] 10h +
jb loc_4253CA  +
push dword ptr [esi+7BCh]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+7D0h] 0Fh +
mov dword ptr [esi+7CCh] 0 +
mov byte ptr [esi+7BCh] 0 +
mov dword ptr [esi+790h] offset off_46A0DC +
cmp dword ptr [esi+7ACh] 10h +
jb loc_425406  +
push dword ptr [esi+798h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+7ACh] 0Fh +
mov dword ptr [esi+7A8h] 0 +
mov byte ptr [esi+798h] 0 +
mov dword ptr [esi+758h] offset off_46A07C +
cmp dword ptr [esi+78Ch] 10h +
jb loc_425442  +
push dword ptr [esi+778h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+78Ch] 0Fh +
mov dword ptr [esi+788h] 0 +
mov byte ptr [esi+778h] 0 +
cmp dword ptr [esi+774h] 10h +
jb loc_425474  +
push dword ptr [esi+760h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+774h] 0Fh +
mov dword ptr [esi+770h] 0 +
mov byte ptr [esi+760h] 0 +
mov dword ptr [esi+720h] offset off_46A07C +
cmp dword ptr [esi+754h] 10h +
jb loc_4254B0  +
push dword ptr [esi+740h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+754h] 0Fh +
mov dword ptr [esi+750h] 0 +
mov byte ptr [esi+740h] 0 +
cmp dword ptr [esi+73Ch] 10h +
jb loc_4254E2  +
push dword ptr [esi+728h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+73Ch] 0Fh +
mov dword ptr [esi+738h] 0 +
mov byte ptr [esi+728h] 0 +
mov dword ptr [esi+6E8h] offset off_46A07C +
cmp dword ptr [esi+71Ch] 10h +
jb loc_42551E  +
push dword ptr [esi+708h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+71Ch] 0Fh +
mov dword ptr [esi+718h] 0 +
mov byte ptr [esi+708h] 0 +
cmp dword ptr [esi+704h] 10h +
jb loc_425550  +
push dword ptr [esi+6F0h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+704h] 0Fh +
mov dword ptr [esi+700h] 0 +
mov byte ptr [esi+6F0h] 0 +
mov dword ptr [esi+6B0h] offset off_46A07C +
cmp dword ptr [esi+6E4h] 10h +
jb loc_42558C  +
push dword ptr [esi+6D0h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+6E4h] 0Fh +
mov dword ptr [esi+6E0h] 0 +
mov byte ptr [esi+6D0h] 0 +
cmp dword ptr [esi+6CCh] 10h +
jb loc_4255BE  +
push dword ptr [esi+6B8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+6CCh] 0Fh +
mov dword ptr [esi+6C8h] 0 +
mov byte ptr [esi+6B8h] 0 +
mov dword ptr [esi+68Ch] offset off_46A0A8 +
cmp dword ptr [esi+6A8h] 10h +
jb loc_4255FA  +
push dword ptr [esi+694h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+6A8h] 0Fh +
mov dword ptr [esi+6A4h] 0 +
mov byte ptr [esi+694h] 0 +
mov dword ptr [esi+654h] offset off_46A07C +
cmp dword ptr [esi+688h] 10h +
jb loc_425636  +
push dword ptr [esi+674h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+688h] 0Fh +
mov dword ptr [esi+684h] 0 +
mov byte ptr [esi+674h] 0 +
cmp dword ptr [esi+670h] 10h +
jb loc_425668  +
push dword ptr [esi+65Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+670h] 0Fh +
mov dword ptr [esi+66Ch] 0 +
mov byte ptr [esi+65Ch] 0 +
mov dword ptr [esi+61Ch] offset off_46A07C +
cmp dword ptr [esi+650h] 10h +
jb loc_4256A4  +
push dword ptr [esi+63Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+650h] 0Fh +
mov dword ptr [esi+64Ch] 0 +
mov byte ptr [esi+63Ch] 0 +
cmp dword ptr [esi+638h] 10h +
jb loc_4256D6  +
push dword ptr [esi+624h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+638h] 0Fh +
mov dword ptr [esi+634h] 0 +
mov byte ptr [esi+624h] 0 +
mov dword ptr [esi+5E4h] offset off_46A07C +
cmp dword ptr [esi+618h] 10h +
jb loc_425712  +
push dword ptr [esi+604h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+618h] 0Fh +
mov dword ptr [esi+614h] 0 +
mov byte ptr [esi+604h] 0 +
cmp dword ptr [esi+600h] 10h +
jb loc_425744  +
push dword ptr [esi+5ECh]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+600h] 0Fh +
mov dword ptr [esi+5FCh] 0 +
mov byte ptr [esi+5ECh] 0 +
mov dword ptr [esi+5ACh] offset off_46A07C +
cmp dword ptr [esi+5E0h] 10h +
jb loc_425780  +
push dword ptr [esi+5CCh]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+5E0h] 0Fh +
mov dword ptr [esi+5DCh] 0 +
mov byte ptr [esi+5CCh] 0 +
cmp dword ptr [esi+5C8h] 10h +
jb loc_4257B2  +
push dword ptr [esi+5B4h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+5C8h] 0Fh +
mov dword ptr [esi+5C4h] 0 +
mov byte ptr [esi+5B4h] 0 +
mov dword ptr [esi+574h] offset off_46A07C +
cmp dword ptr [esi+5A8h] 10h +
jb loc_4257EE  +
push dword ptr [esi+594h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+5A8h] 0Fh +
mov dword ptr [esi+5A4h] 0 +
mov byte ptr [esi+594h] 0 +
cmp dword ptr [esi+590h] 10h +
jb loc_425820  +
push dword ptr [esi+57Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+590h] 0Fh +
mov dword ptr [esi+58Ch] 0 +
mov byte ptr [esi+57Ch] 0 +
mov dword ptr [esi+53Ch] offset off_46A07C +
cmp dword ptr [esi+570h] 10h +
jb loc_42585C  +
push dword ptr [esi+55Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+570h] 0Fh +
mov dword ptr [esi+56Ch] 0 +
mov byte ptr [esi+55Ch] 0 +
cmp dword ptr [esi+558h] 10h +
jb loc_42588E  +
push dword ptr [esi+544h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+558h] 0Fh +
mov dword ptr [esi+554h] 0 +
mov byte ptr [esi+544h] 0 +
mov dword ptr [esi+518h] offset off_46A0A8 +
cmp dword ptr [esi+534h] 10h +
jb loc_4258CA  +
push dword ptr [esi+520h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+534h] 0Fh +
mov dword ptr [esi+530h] 0 +
mov byte ptr [esi+520h] 0 +
mov dword ptr [esi+4E0h] offset off_46A07C +
cmp dword ptr [esi+514h] 10h +
jb loc_425906  +
push dword ptr [esi+500h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+514h] 0Fh +
mov dword ptr [esi+510h] 0 +
mov byte ptr [esi+500h] 0 +
cmp dword ptr [esi+4FCh] 10h +
jb loc_425938  +
push dword ptr [esi+4E8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4FCh] 0Fh +
mov dword ptr [esi+4F8h] 0 +
mov byte ptr [esi+4E8h] 0 +
mov dword ptr [esi+4A8h] offset off_46A07C +
cmp dword ptr [esi+4DCh] 10h +
jb loc_425974  +
push dword ptr [esi+4C8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4DCh] 0Fh +
mov dword ptr [esi+4D8h] 0 +
mov byte ptr [esi+4C8h] 0 +
cmp dword ptr [esi+4C4h] 10h +
jb loc_4259A6  +
push dword ptr [esi+4B0h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4C4h] 0Fh +
mov dword ptr [esi+4C0h] 0 +
mov byte ptr [esi+4B0h] 0 +
mov dword ptr [esi+470h] offset off_46A07C +
cmp dword ptr [esi+4A4h] 10h +
jb loc_4259E2  +
push dword ptr [esi+490h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+4A4h] 0Fh +
mov dword ptr [esi+4A0h] 0 +
mov byte ptr [esi+490h] 0 +
cmp dword ptr [esi+48Ch] 10h +
jb loc_425A14  +
push dword ptr [esi+478h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+48Ch] 0Fh +
mov dword ptr [esi+488h] 0 +
mov byte ptr [esi+478h] 0 +
mov dword ptr [esi+450h] offset off_46A0BC +
cmp dword ptr [esi+46Ch] 10h +
jb loc_425A50  +
push dword ptr [esi+458h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+46Ch] 0Fh +
mov dword ptr [esi+468h] 0 +
mov byte ptr [esi+458h] 0 +
mov dword ptr [esi+430h] offset off_46A0BC +
cmp dword ptr [esi+44Ch] 10h +
jb loc_425A8C  +
push dword ptr [esi+438h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+44Ch] 0Fh +
mov dword ptr [esi+448h] 0 +
mov byte ptr [esi+438h] 0 +
mov dword ptr [esi+410h] offset off_46A0BC +
cmp dword ptr [esi+42Ch] 10h +
jb loc_425AC8  +
push dword ptr [esi+418h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+42Ch] 0Fh +
mov dword ptr [esi+428h] 0 +
mov byte ptr [esi+418h] 0 +
mov dword ptr [esi+3F0h] offset off_46A06C +
cmp dword ptr [esi+40Ch] 10h +
jb loc_425B04  +
push dword ptr [esi+3F8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+40Ch] 0Fh +
mov dword ptr [esi+408h] 0 +
mov byte ptr [esi+3F8h] 0 +
mov dword ptr [esi+3D0h] offset off_46A0BC +
cmp dword ptr [esi+3ECh] 10h +
jb loc_425B40  +
push dword ptr [esi+3D8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+3ECh] 0Fh +
mov dword ptr [esi+3E8h] 0 +
mov byte ptr [esi+3D8h] 0 +
mov dword ptr [esi+3ACh] offset off_469D10 +
cmp dword ptr [esi+3C8h] 10h +
jb loc_425B7C  +
push dword ptr [esi+3B4h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+3C8h] 0Fh +
mov dword ptr [esi+3C4h] 0 +
mov byte ptr [esi+3B4h] 0 +
mov dword ptr [esi+388h] offset off_469D10 +
cmp dword ptr [esi+3A4h] 10h +
jb loc_425BB8  +
push dword ptr [esi+390h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+3A4h] 0Fh +
mov dword ptr [esi+3A0h] 0 +
mov byte ptr [esi+390h] 0 +
mov dword ptr [esi+364h] offset off_46A0A8 +
cmp dword ptr [esi+380h] 10h +
jb loc_425BF4  +
push dword ptr [esi+36Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+380h] 0Fh +
mov dword ptr [esi+37Ch] 0 +
mov byte ptr [esi+36Ch] 0 +
mov dword ptr [esi+340h] offset off_46A0A8 +
cmp dword ptr [esi+35Ch] 10h +
jb loc_425C30  +
push dword ptr [esi+348h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+35Ch] 0Fh +
lea ecx [esi+308h] +
mov dword ptr [esi+358h] 0 +
mov byte ptr [esi+348h] 0 +
call sub_427330  +
lea ecx [esi+2D0h] +
call sub_427330  +
mov dword ptr [esi+2ACh] offset off_46A0A8 +
cmp dword ptr [esi+2C8h] 10h +
jb loc_425C82  +
push dword ptr [esi+2B4h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+2C8h] 0Fh +
mov dword ptr [esi+2C4h] 0 +
mov byte ptr [esi+2B4h] 0 +
mov dword ptr [esi+288h] offset off_46A0A8 +
cmp dword ptr [esi+2A4h] 10h +
jb loc_425CBE  +
push dword ptr [esi+290h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+2A4h] 0Fh +
mov dword ptr [esi+2A0h] 0 +
mov byte ptr [esi+290h] 0 +
mov dword ptr [esi+264h] offset off_469D10 +
cmp dword ptr [esi+280h] 10h +
jb loc_425CFA  +
push dword ptr [esi+26Ch]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+280h] 0Fh +
mov dword ptr [esi+27Ch] 0 +
mov byte ptr [esi+26Ch] 0 +
mov dword ptr [esi+240h] offset off_469D10 +
cmp dword ptr [esi+25Ch] 10h +
jb loc_425D36  +
push dword ptr [esi+248h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+25Ch] 0Fh +
mov dword ptr [esi+258h] 0 +
mov byte ptr [esi+248h] 0 +
mov dword ptr [esi+21Ch] offset off_469D10 +
cmp dword ptr [esi+238h] 10h +
jb loc_425D72  +
push dword ptr [esi+224h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+238h] 0Fh +
mov dword ptr [esi+234h] 0 +
mov byte ptr [esi+224h] 0 +
mov dword ptr [esi+1F8h] offset off_469D10 +
cmp dword ptr [esi+214h] 10h +
jb loc_425DAE  +
push dword ptr [esi+200h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+214h] 0Fh +
mov dword ptr [esi+210h] 0 +
mov byte ptr [esi+200h] 0 +
mov dword ptr [esi+1D4h] offset off_469D10 +
cmp dword ptr [esi+1F0h] 10h +
jb loc_425DEA  +
push dword ptr [esi+1DCh]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1F0h] 0Fh +
lea ecx [esi+19Ch] +
mov dword ptr [esi+1ECh] 0 +
mov byte ptr [esi+1DCh] 0 +
call sub_427330  +
lea ecx [esi+164h] +
call sub_427330  +
lea ecx [esi+12Ch] +
call sub_427330  +
lea ecx [esi+0F4h] +
call sub_427330  +
mov dword ptr [esi+0D0h] offset off_46A0A8 +
cmp dword ptr [esi+0ECh] 10h +
jb loc_425E52  +
push dword ptr [esi+0D8h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+0ECh] 0Fh +
mov dword ptr [esi+0E8h] 0 +
mov byte ptr [esi+0D8h] 0 +
mov dword ptr [esi+0ACh] offset off_46A0A8 +
cmp dword ptr [esi+0C8h] 10h +
jb loc_425E8E  +
push dword ptr [esi+0B4h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+0C8h] 0Fh +
mov dword ptr [esi+0C4h] 0 +
mov byte ptr [esi+0B4h] 0 +
mov dword ptr [esi+88h] offset off_469D10 +
cmp dword ptr [esi+0A4h] 10h +
jb loc_425ECA  +
push dword ptr [esi+90h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+0A4h] 0Fh +
mov ecx esi +
mov dword ptr [esi+0A0h] 0 +
mov byte ptr [esi+90h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41B220  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_44] 0 +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push (offset asc_4696CC+2)  +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
call loc_4109B0  +
push 1  +
push esi  +
mov [ebp+var_4] 0 +
push 7  +
mov [ebp+var_44] 1 +
call sub_439912  +
add esp 0Ch +
test al al +
jnz loc_425F96  +
push 1  +
push esi  +
push 2  +
call sub_439912  +
add esp 0Ch +
cmp dword ptr [esi+10h] 0 +
jz loc_42603C  +
push 5  +
push offset aAdobe  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_426008  +
cmp dword ptr [esi+14h] 10h +
jb loc_425FEF  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_426019  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_42603C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D869  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_2C] 0 +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push (offset asc_4696CC+2)  +
mov [ebp+var_30] esi +
mov byte ptr [esi] 0 +
call loc_4109B0  +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_2C] 1 +
jz loc_4260EB  +
cmp esi offset dword_47581C +
jz loc_426113  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
mov ecx esi +
call loc_4105F0  +
jmp loc_426113  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_426113  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_426160  +
lea eax [ebp+var_28] +
push esi  +
push eax  +
call sub_437A0C  +
mov edi eax +
add esp 8 +
cmp esi edi +
jz loc_42614F  +
cmp dword ptr [esi+14h] 10h +
jb loc_426136  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_14] 10h +
jb loc_426160  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_4262B1  +
cmp esi offset dword_47581C +
jz loc_4261F8  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
push 7  +
push offset aInstall  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_426260  +
cmp dword ptr [esi+14h] 10h +
jb loc_426247  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_426271  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
jb loc_426294  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_4261F8  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_4261F8  +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_4262F5  +
mov eax [esi] +
mov byte ptr [eax] 0 +
jmp loc_426294  +
mov eax esi +
mov byte ptr [eax] 0 +
jmp loc_426294  +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_426376  +
cmp esi offset dword_47581C +
jz loc_4263A2  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_4263A2  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_4263A2  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_42642C  +
push 8  +
push offset aAamu_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42640A  +
cmp dword ptr [esi+14h] 10h +
jb loc_4263F1  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_42641B  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_42642C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_4264C6  +
cmp esi offset dword_47581C +
jz loc_4264F2  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_4264F2  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_4264F2  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_42657C  +
push 9  +
push offset aAamui_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42655A  +
cmp dword ptr [esi+14h] 10h +
jb loc_426541  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_42656B  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_42657C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_426616  +
cmp esi offset dword_47581C +
jz loc_426642  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_426642  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_426642  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_4266CC  +
push 9  +
push offset aAamun_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_4266AA  +
cmp dword ptr [esi+14h] 10h +
jb loc_426691  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_4266BB  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_4266CC  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_426766  +
cmp esi offset dword_47581C +
jz loc_426792  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_426792  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_426792  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_42681C  +
push 9  +
push offset aAamul_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_4267FA  +
cmp dword ptr [esi+14h] 10h +
jb loc_4267E1  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_42680B  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_42681C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_4268B6  +
cmp esi offset dword_47581C +
jz loc_4268E2  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_4268E2  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_4268E2  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_42696C  +
push 9  +
push offset aAamus_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_42694A  +
cmp dword ptr [esi+14h] 10h +
jb loc_426931  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_42695B  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_42696C  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D821  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_44] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_48] esi +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0 +
cmp dword_47582C 0 +
mov [ebp+var_44] 1 +
jz loc_426A06  +
cmp esi offset dword_47581C +
jz loc_426A32  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_47581C  +
call loc_4105F0  +
jmp loc_426A32  +
push ecx  +
mov edx esi +
mov ecx 7 +
call sub_422F70  +
add esp 4 +
test al al +
jnz loc_426A32  +
push ecx  +
mov edx esi +
mov ecx 2 +
call sub_422F70  +
add esp 4 +
test al al +
jz loc_426ABC  +
push 0Ch  +
push offset aAamuulib_log  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4109B0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call sub_43772F  +
mov edi eax +
add esp 0Ch +
cmp esi edi +
jz loc_426A9A  +
cmp dword ptr [esi+14h] 10h +
jb loc_426A81  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_4103E0  +
cmp [ebp+var_2C] 10h +
jb loc_426AAB  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_14] 10h +
jb loc_426ABC  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push esi  +
mov esi ecx +
mov [ebp+var_C] 0 +
lea ecx [ebp+var_8] +
call loc_414740  +
mov ecx eax +
call sub_415070  +
lea edx [ebp+var_8] +
mov [ebp+var_8] eax +
mov ecx esi +
call sub_413250  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45D8E7  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
xor bl bl +
mov [ebp+var_78] 0Fh +
mov [ebp+var_7C] 0 +
mov byte ptr [ebp+var_8C] bl +
mov [ebp+var_4] 0 +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] bl +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] bl +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] bl +
xor esi esi +
mov [ebp+var_AC] esi +
mov [ebp+var_A8] esi +
mov [ebp+var_A4] esi +
lea ecx [edi+2D0h] +
mov byte ptr [ebp+var_4] 4 +
mov eax [ecx] +
lea edx [ebp+var_5C] +
push edx  +
mov [ebp+var_C0] ecx +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_426FBC  +
mov eax [edi+2ACh] +
lea ecx [edi+2ACh] +
lea edx [ebp+var_BC] +
push edx  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_426FBC  +
push 1  +
push esi  +
lea eax [ebp+var_90] +
mov byte ptr [ebp+var_90] 54h +
push eax  +
lea ecx [ebp+var_5C] +
call sub_4286A0  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_426DB5  +
push esi  +
push 0  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call sub_427040  +
mov edi eax +
lea eax [ebp+var_44] +
cmp eax edi +
jz loc_426C62  +
cmp [ebp+var_30] 10h +
jb loc_426C47  +
push [ebp+var_44]  +
call sub_43FFF6  +
add esp 4 +
push edi  +
lea ecx [ebp+var_44] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
call sub_4103E0  +
cmp dword ptr [ebp+SystemTime.wSecond] 10h +
jb loc_426C73  +
push [ebp+var_74]  +
call sub_43FFF6  +
add esp 4 +
push 0FFFFFFFFh  +
lea eax [esi+1] +
push eax  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call sub_427040  +
mov esi eax +
lea eax [ebp+var_2C] +
cmp eax esi +
jz loc_426CBA  +
cmp [ebp+var_18] 10h +
jb loc_426C9F  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
push esi  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call sub_4103E0  +
cmp dword ptr [ebp+SystemTime.wSecond] 10h +
jb loc_426CCB  +
push [ebp+var_74]  +
call sub_43FFF6  +
add esp 4 +
push offset asc_469860  +
lea ecx [ebp+var_74] +
call sub_4100D0  +
lea eax [ebp+var_AC] +
mov byte ptr [ebp+var_4] 5 +
push eax  +
lea edx [ebp+var_74] +
lea ecx [ebp+var_2C] +
call sub_42C250  +
add esp 4 +
mov byte ptr [ebp+var_4] 4 +
cmp dword ptr [ebp+SystemTime.wSecond] 10h +
jb loc_426D06  +
push [ebp+var_74]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+var_A8] +
mov eax 2AAAAAABh +
mov esi [ebp+var_AC] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 3 +
jz loc_426D84  +
sub esp 18h +
lea ecx [ebp+var_2C] +
mov eax esp +
push ecx  +
push offset aInvalidTime  +
push eax  +
call sub_429530  +
add esp 0Ch +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
lea ecx [ebp+var_AC] +
call sub_4283D0  +
lea ecx [ebp+var_2C] +
call sub_4101E0  +
lea ecx [ebp+var_44] +
call sub_4101E0  +
lea ecx [ebp+var_5C] +
call sub_4101E0  +
lea ecx [ebp+var_8C] +
call sub_4101E0  +
mov al 1 +
jmp loc_427015  +
cmp dword ptr [esi+14h] 10h +
jb loc_426D8E  +
mov eax [esi] +
jmp loc_426D90  +
mov eax esi +
push eax  +
call sub_440E2D  +
add esi 18h +
mov [ebp+var_B4] eax +
add esp 4 +
cmp dword ptr [esi+14h] 10h +
jb loc_426DAA  +
mov esi [esi] +
push esi  +
call sub_440E2D  +
add esp 4 +
jmp loc_426DC7  +
mov eax [ebp+var_BC] +
mov [ebp+var_B4] eax +
mov eax [ebp+var_BC] +
cmp [ebp+var_34] 0 +
mov [ebp+var_B0] eax +
jnz loc_426DDA  +
mov bl 1 +
jmp loc_426F9D  +
sub esp 18h +
mov byte ptr [ebp+var_4] 6 +
mov ecx esp +
lea eax [ebp+var_44] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
lea ecx [ebp+var_B8] +
call sub_423810  +
add esp 18h +
lea ecx [ebp+var_96] +
call loc_414740  +
mov ecx eax +
call sub_415070  +
mov esi [ebp+var_B8] +
mov edi eax +
cmp edi esi +
jnb loc_426E42  +
sub esp 18h +
mov ecx esp +
call sub_426AE0  +
mov ecx [ebp+var_C0] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax [ebp+var_BC] +
cmp eax 1 +
jnz loc_426EFD  +
mov [ebp-98h] edi +
mov [ebp+var_9C] offset off_46A090 +
mov [ebp+var_96+2] eax +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_9C] +
call sub_428470  +
cmp [eax+4] esi +
setnb bl  +
test bl bl +
jz loc_426F9D  +
cmp [ebp-98h] esi +
jnz loc_426F9D  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov [ebp+var_9C] offset off_4696A0 +
movzx ecx [ebp+SystemTime.wHour] +
mov eax [ebp+var_B4] +
cmp ecx eax +
jg loc_426D4F  +
lea ecx [ebp+var_AC] +
jnz loc_426ECE  +
movzx eax [ebp+SystemTime.wMinute] +
cmp eax [ebp+var_B0] +
jge loc_426D55  +
call sub_4283D0  +
lea ecx [ebp+var_2C] +
call sub_4101E0  +
lea ecx [ebp+var_44] +
call sub_4101E0  +
lea ecx [ebp+var_5C] +
call sub_4101E0  +
lea ecx [ebp+var_8C] +
call sub_4101E0  +
xor al al +
jmp loc_427015  +
test eax eax +
jnz loc_426F24  +
mov [ebp-98h] edi +
mov [ebp+var_9C] offset off_4699B8 +
mov [ebp+var_96+2] 1 +
mov byte ptr [ebp+var_4] 8 +
jmp loc_426E6B  +
cmp eax 3 +
jnz loc_426F2D  +
xor bl bl +
jmp loc_426F9D  +
xor eax eax +
mov [ebp+var_9C] edi +
mov [ebp+var_A0] offset off_46A0CC +
mov dword ptr [ebp-98h] 1 +
mov word ptr [ebp+var_96+2] ax +
lea ecx [ebp+var_A0] +
mov byte ptr [ebp+var_4] 9 +
call sub_428470  +
cmp [eax+4] esi +
setnb bl  +
test bl bl +
jz loc_426F9D  +
cmp [ebp+var_9C] esi +
jnz loc_426F9D  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov [ebp+var_A0] offset off_4696A0 +
jmp loc_426EA4  +
mov byte ptr [ebp-90h] 1 +
mov eax offset loc_426F97 +
retn   +
mov bl [ebp-90h] +
mov esi [ebp+var_AC] +
test esi esi +
jz loc_426FBC  +
push [ebp+var_A8]  +
push esi  +
call sub_4108D0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_18] 10h +
jb loc_426FCD  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_30] 10h +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
jb loc_426FF0  +
push [ebp+var_44]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_48] 10h +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
jb loc_427013  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
cmp eax 4 +
ja loc_4270C2  +
jmp ds:off_4270D0[eax*4]  +
mov dword ptr [ecx] 80000000h +
mov eax ecx +
pop ebp  +
retn 4  +
mov dword ptr [ecx] 7FFFFFFFh +
mov eax ecx +
pop ebp  +
retn 4  +
mov dword ptr [ecx] 7FFFFFFDh +
mov eax ecx +
pop ebp  +
retn 4  +
mov dword ptr [ecx] 80000001h +
mov eax ecx +
pop ebp  +
retn 4  +
mov dword ptr [ecx] 7FFFFFFEh +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov ecx [ecx] +
sub esp 8 +
mov edx [ebp+arg_4] +
cmp ecx 0FFFFFFFEh +
jz loc_427126  +
test ecx ecx +
jz loc_427126  +
cmp ecx 0FFFFFFFFh +
jz loc_427126  +
mov eax [edx] +
cmp eax 0FFFFFFFEh +
jz loc_427126  +
test eax eax +
jz loc_427126  +
cmp eax 0FFFFFFFFh +
jz loc_427126  +
sub ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [edx] +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_8] +
mov [ebp+var_4] ecx +
push eax  +
lea ecx [ebp+var_4] +
call sub_429620  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFEh +
jnz loc_42715A  +
xor ecx ecx +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_427080  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
test eax eax +
jnz loc_427175  +
mov ecx 1 +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_427080  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
cmp eax 0FFFFFFFFh +
mov edx 2 +
mov ecx 5 +
cmovz ecx edx +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_427080  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
lea ecx [esi+8] +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_46A0A8 +
mov dword ptr [esi+4] 0 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [esi+20h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov dword ptr [ecx+4] offset dword_478320 +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0A8 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42721A  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
lea eax [ecx+20h] +
push eax  +
push [ebp+arg_0]  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_4296B0  +
pop ebp  +
retn 4  +
***
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_429850  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
xor eax eax +
cmp edx [ecx+20h] +
setz al  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45D91B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 0FFFFFFFFh  +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_46A07C +
mov dword ptr [esi+4] 0 +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
push 0FFFFFFFFh  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
push 0  +
push [ebp+arg_4]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov dword ptr [esi] offset off_46A07C +
cmp dword ptr [esi+34h] 10h +
jb loc_42734A  +
push dword ptr [esi+20h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+34h] 0Fh +
mov dword ptr [esi+30h] 0 +
mov byte ptr [esi+20h] 0 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42736D  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
lea eax [ecx+20h] +
push eax  +
push [ebp+arg_0]  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_4291F0  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45D948  +
mov eax large fs:0 +
push eax  +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_4293B0  +
cmp [ebp+arg_14] 10h +
mov bl al +
jb loc_4273FD  +
push [ebp+arg_0]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
cmp dword ptr [ecx+34h] 10h +
lea edx [ecx+20h] +
push ebx  +
push esi  +
mov esi [edx+10h] +
push edi  +
jb loc_427434  +
mov edx [edx] +
cmp [ebp+arg_14] 10h +
lea ecx [ebp+arg_0] +
mov edi [ebp+arg_10] +
mov eax esi +
cmovnb ecx [ebp+arg_0] +
cmp edi esi +
cmovb eax edi +
push eax  +
push edx  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_42746A  +
cmp edi esi +
jnb loc_427461  +
or eax 0FFFFFFFFh +
jmp loc_427468  +
xor eax eax +
cmp edi esi +
setnz al  +
test eax eax +
setz bl  +
cmp [ebp+arg_14] 10h +
jb loc_42747E  +
push [ebp+arg_0]  +
call sub_43FFF6  +
add esp 4 +
pop edi  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 18h  +
***
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
lea ecx [esi+8] +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_46A0BC +
mov dword ptr [esi+4] 0 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0BC +
cmp dword ptr [esi+1Ch] 10h +
jb loc_4274EA  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45D9A9  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_474390 +
xor eax esp +
mov [esp+7Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+8Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
xor eax eax +
mov [esp+8Ch+var_6C] eax +
mov ecx edi +
mov [esp+8Ch+var_70] eax +
mov eax [edi] +
push dword ptr [eax+4]  +
call sub_428CA0  +
mov eax [edi] +
mov [esp+8Ch+var_74] 0 +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
lea eax [esp+8Ch+var_74] +
push eax  +
lea eax [esi+8] +
mov dword ptr [edi+4] 0 +
mov ecx [esi+4] +
push eax  +
call sub_423910  +
test al al +
jz loc_4277AF  +
mov ecx [esp+8Ch+var_74] +
lea eax [esp+8Ch+var_68] +
mov bl 1 +
push eax  +
mov byte ptr [esp+90h+var_78+1] bl +
call sub_41AFB0  +
mov [esp+8Ch+var_4] 0 +
mov [esp+8Ch+var_30] 0Fh +
mov [esp+8Ch+var_34] 0 +
mov byte ptr [esp+8Ch+var_44] 0 +
mov eax 0Fh +
mov [esp+8Ch+var_4C] 0 +
mov [esp+8Ch+var_48] eax +
mov byte ptr [esp+8Ch+var_5C] 0 +
mov byte ptr [esp+8Ch+var_4] 2 +
mov ecx [esp+8Ch+var_68] +
mov esi ecx +
cmp ecx [esp+8Ch+var_64] +
jz loc_42774C  +
lea ecx [ecx+0] +
test bl bl +
jz loc_427748  +
push 0Ah  +
push offset aMapprefkey  +
lea ecx [esp+94h+var_2C] +
mov [esp+94h+var_18] 0Fh +
mov [esp+94h+var_1C] 0 +
mov byte ptr [esp+94h+var_2C] 0 +
call loc_4109B0  +
mov byte ptr [esp+94h+var_C] 3 +
lea eax [esp+94h+var_34] +
mov ebx [esi] +
push eax  +
lea eax [esp+98h+var_7C] +
add ebx 1Ch +
push eax  +
mov ecx ebx +
call sub_41BF80  +
mov eax [esp+94h+var_7C] +
cmp eax [ebx] +
jnz loc_427647  +
xor bl bl +
jmp loc_42765E  +
add eax 28h +
lea ecx [esp+94h+var_64] +
cmp ecx eax +
jz loc_42765C  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
mov bl 1 +
mov byte ptr [esp+0A0h+var_18] 2 +
cmp [esp+0A0h+var_2C] 10h +
jb loc_427679  +
push [esp+0A0h+var_40]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_427714  +
push 0FFFFFFFFh  +
push 0  +
lea eax [esp+0A8h+var_70] +
push eax  +
lea ecx [esp+0ACh+var_58] +
call loc_4105F0  +
mov ecx [esi] +
lea edx [esp+0ACh+var_4C] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov byte ptr [esp+0B0h+var_28] 4 +
lea ecx [esp+0B0h+var_9A+1] +
mov ebx [esp+0B0h+var_94] +
push ecx  +
or ebx 1 +
push eax  +
mov [esp+0B8h+var_94] ebx +
mov [esp+0B8h+var_90] ebx +
call sub_41EBF0  +
test al al +
mov [esp+0B0h+var_28] 2 +
setnz al  +
mov byte ptr [esp+0B0h+var_9A] al +
test bl 1 +
jz loc_4276F8  +
and ebx 0FFFFFFFEh +
cmp [esp+0B0h+var_3C] 10h +
mov [esp+0B0h+var_94] ebx +
jb loc_4276F8  +
push [esp+0B0h+var_50]  +
call sub_43FFF6  +
mov al byte ptr [esp+0B4h+var_9A] +
add esp 4 +
mov ecx edi +
test al al +
jz loc_427716  +
lea eax [esp+0B0h+var_68] +
push eax  +
call sub_4287F0  +
mov cl byte ptr [esp+0B0h+var_9A+1] +
mov bl [esp+15h] +
mov [eax] cl +
jmp loc_42773B  +
mov ecx edi +
mov eax [edi] +
xor bl bl +
mov [esp+0A0h+var_8B] bl +
push dword ptr [eax+4]  +
call sub_428CA0  +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
mov dword ptr [edi+4] 0 +
add esi 4 +
cmp esi [esp+0A0h+var_78] +
jnz loc_4275F0  +
mov eax [esp+0A0h+var_5C] +
cmp eax 10h +
jb loc_42775D  +
push [esp+0A0h+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0A0h+var_44] 10h +
mov [esp+0A0h+var_5C] 0Fh +
mov [esp+0A0h+var_60] 0 +
mov byte ptr [esp+0A0h+var_70] 0 +
jb loc_427785  +
push [esp+0A0h+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov eax [esp+0A0h+var_7C] +
mov [esp+0A0h+var_44] 0Fh +
mov [esp+0A0h+var_48] 0 +
mov byte ptr [esp+0A0h+var_58] 0 +
test eax eax +
jz loc_4277AB  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
jmp loc_4277D2  +
mov eax [edi] +
mov ecx edi +
push dword ptr [eax+4]  +
call sub_428CA0  +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
mov al 1 +
mov dword ptr [edi+4] 0 +
mov ecx [esp+8Ch+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+7Ch+var_14] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DA3E  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+0A4h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0B4h+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [esp+0B4h+var_98] edi +
xor eax eax +
mov [esp+0B4h+var_94] eax +
mov [esp+0B4h+var_A0] eax +
mov [esp+0B4h+var_A2] al +
mov [esp+11h] al +
mov eax [edi+4] +
mov ecx [eax+78h] +
test ecx ecx +
jz loc_4278BD  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_4278BD  +
mov esi [edi+4] +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4278B2  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_427895  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov dl al +
mov [esp+11h] dl +
test dl dl +
jz loc_4278BD  +
mov ecx esi +
call sub_41B420  +
mov dl al +
mov [esp+11h] dl +
test dl dl +
jnz loc_4278BD  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_4278BD  +
mov ecx esi +
call sub_41B420  +
mov [esp+11h] al +
mov eax [edi+4] +
mov ecx [eax+78h] +
test ecx ecx +
jz loc_4278D6  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_427B93  +
push 64h  +
call sub_440048  +
mov ecx eax +
add esp 4 +
mov [esp+0B4h+var_94] ecx +
mov [esp+0B4h+var_4] 0 +
test ecx ecx +
jz loc_427906  +
lea eax [edi+8] +
push eax  +
call sub_41A8C0  +
mov ebx eax +
mov [esp+0B4h+var_9C] eax +
jmp loc_42790C  +
xor ebx ebx +
mov [esp+0B4h+var_9C] ebx +
mov [esp+0B4h+var_48] 0Fh +
mov [esp+0B4h+var_4C] 0 +
mov byte ptr [esp+0B4h+var_5C] 0 +
mov [esp+0B4h+var_4] 1 +
mov [esp+0B4h+var_78] 0Fh +
mov [esp+0B4h+var_7C] 0 +
mov byte ptr [esp+0B4h+var_8C] 0 +
mov [esp+0B4h+var_18] 0Fh +
mov [esp+0B4h+var_1C] 0 +
mov [esp+0B4h+var_2C] 0 +
mov eax [ebp+arg_0] +
mov cl 1 +
mov byte ptr [esp+0B4h+var_4] 3 +
mov [esp+0B4h+var_A1] cl +
mov eax [eax] +
mov esi [eax] +
cmp esi eax +
jz loc_427BBD  +
lea esp [esp+0] +
test cl cl +
jz loc_427B2A  +
lea ebx [esi+10h] +
lea eax [esp+0B4h+var_8C] +
cmp eax ebx +
jz loc_42799F  +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx eax +
call loc_4105F0  +
lea eax [esp+0C0h+var_68] +
push eax  +
lea eax [ebx+18h] +
push eax  +
call sub_41ED50  +
test al al +
jz loc_427AC6  +
push 64h  +
call sub_440048  +
mov edi eax +
add esp 4 +
mov [esp+0C0h+var_9C] edi +
mov byte ptr [esp+0C0h+var_10] 4 +
test edi edi +
jz loc_427A06  +
push offset aMapprefentry  +
lea ecx [esp+0C4h+var_80] +
call sub_4100D0  +
mov byte ptr [esp+0C0h+var_10] 5 +
mov ecx edi +
mov eax [esp+0C0h+var_AC] +
or eax 1 +
mov [esp+0C0h+var_AC] eax +
mov [esp+0C0h+var_A0] eax +
lea eax [esp+0C0h+var_80] +
push eax  +
call sub_41A8C0  +
mov edi eax +
jmp loc_427A08  +
xor edi edi +
mov [esp+0C0h+var_10] 3 +
mov eax [esp+0C0h+var_AC] +
test al 1 +
jz loc_427A4A  +
and eax 0FFFFFFFEh +
cmp [esp+0C0h+var_6C] 10h +
mov [esp+0C0h+var_AC] eax +
jb loc_427A35  +
push [esp+0C0h+var_80]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+0C0h+var_6C] 0Fh +
mov [esp+0C0h+var_70] 0 +
mov byte ptr [esp+0C0h+var_80] 0 +
push 0Ah  +
push offset aMapprefkey  +
lea ecx [esp+0C8h+var_50] +
mov [esp+0C8h+var_3C] 0Fh +
mov [esp+0C8h+var_40] 0 +
mov byte ptr [esp+0C8h+var_50] 0 +
call loc_4109B0  +
mov byte ptr [esp+0C8h+var_18] 7 +
lea ecx [esp+0C8h+var_58] +
mov eax [edi] +
push ebx  +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov byte ptr [esp+0D0h+var_20] 3 +
cmp [esp+0D0h+var_4C] 10h +
jb loc_427AA8  +
push [esp+0D0h+var_60]  +
call sub_43FFF6  +
add esp 4 +
mov eax [edi] +
lea ecx [esp+0D0h+var_78] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ebx [esp+0D4h+var_BC] +
mov ecx ebx +
push edi  +
mov eax [ebx] +
call dword ptr [eax+10h]  +
mov cl [esp+13h] +
jmp loc_427AD0  +
mov ebx [esp+0C0h+var_A8] +
xor cl cl +
mov [esp+0C0h+var_AD] cl +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_427B17  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_427AFC  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_427B17  +
lea esp [esp+0] +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_427AF0  +
jmp loc_427B17  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_427B15  +
cmp esi [eax+8] +
jnz loc_427B15  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_427B05  +
mov esi eax +
mov eax [ebp+arg_0] +
cmp esi [eax] +
jnz loc_427980  +
test cl cl +
jnz loc_427BB9  +
test ebx ebx +
jz loc_427B36  +
mov eax [ebx] +
mov ecx ebx +
push 1  +
call dword ptr [eax]  +
mov bl byte ptr [esp+0C4h+var_B4+2] +
mov edi [esp+0C4h+var_A8] +
cmp byte ptr [esp+0C4h+var_B4+1] 0 +
jz loc_427B56  +
mov ecx [edi+4] +
mov ecx [ecx+78h] +
test ecx ecx +
jz loc_427B56  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
cmp [esp+0C8h+var_8C] 10h +
jb loc_427B69  +
push [esp+0C8h+var_A0]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0C8h+var_5C] 10h +
mov [esp+0C8h+var_8C] 0Fh +
mov [esp+0C8h+var_90] 0 +
mov byte ptr [esp+0C8h+var_A0] 0 +
jb loc_427B91  +
push [esp+0C8h+var_70]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [esp+0C8h+var_20] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0B8h+var_28] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
mov edi dword ptr [esp+0C0h+var_A4] +
mov ecx [edi+4] +
lea eax [edi+8] +
push ebx  +
push eax  +
call sub_423870  +
mov bl al +
jmp loc_427B3E  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A06C +
cmp dword ptr [esi+1Ch] 10h +
jb loc_427BFA  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DAB7  +
mov eax large fs:0 +
push eax  +
sub esp 88h +
mov eax dword_474390 +
xor eax esp +
mov [esp+94h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0A4h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+arg_0] +
xor eax eax +
mov [esp+0A4h+var_84] eax +
mov ecx ebx +
mov [esp+0A4h+var_8C] eax +
mov eax [ebx] +
push dword ptr [eax+4]  +
call sub_41CED0  +
mov eax [ebx] +
mov [esp+0A4h+var_88] 0 +
mov [eax+4] eax +
mov eax [ebx] +
mov [eax] eax +
mov eax [ebx] +
mov [eax+8] eax +
lea eax [esp+0A4h+var_88] +
push eax  +
lea eax [esi+8] +
mov dword ptr [ebx+4] 0 +
mov ecx [esi+4] +
push eax  +
call sub_423910  +
test al al +
jz loc_427F2C  +
mov ecx [esp+0A4h+var_88] +
lea eax [esp+0A4h+var_80] +
push eax  +
mov [esp+0A8h+var_8E] 1 +
call sub_41AFB0  +
mov [esp+0A4h+var_4] 0 +
mov [esp+0A4h+var_30] 0Fh +
mov [esp+0A4h+var_34] 0 +
mov byte ptr [esp+0A4h+var_44] 0 +
mov [esp+0A4h+var_60] 0Fh +
mov [esp+0A4h+var_64] 0 +
mov byte ptr [esp+0A4h+var_74] 0 +
mov eax 0Fh +
mov [esp+0A4h+var_4C] 0 +
mov [esp+0A4h+var_48] eax +
mov byte ptr [esp+0A4h+var_5C] 0 +
mov byte ptr [esp+0A4h+var_4] 3 +
mov edi [esp+0A4h+var_80] +
mov esi edi +
cmp edi [esp+0A4h+var_7C] +
jz loc_427EA3  +
jmp loc_427D20  +
cmp [esp+0A4h+var_8E] 0 +
jz loc_427E9B  +
push 0Ah  +
push offset aMapprefkey  +
lea ecx [esp+0ACh+var_2C] +
mov [esp+0ACh+var_18] 0Fh +
mov [esp+0ACh+var_1C] 0 +
mov byte ptr [esp+0ACh+var_2C] 0 +
call loc_4109B0  +
mov byte ptr [esp+0ACh+var_C] 4 +
lea eax [esp+0ACh+var_34] +
mov edi [esi] +
push eax  +
lea eax [esp+20h] +
push eax  +
lea ecx [edi+1Ch] +
call sub_41BF80  +
mov eax [esp+1Ch] +
cmp eax [edi+1Ch] +
jnz loc_427D88  +
mov byte ptr [esp+17h] 0 +
jmp loc_427DA2  +
add eax 28h +
lea ecx [esp+0ACh+var_64] +
cmp ecx eax +
jz loc_427D9D  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
mov [esp+0B8h+var_A1] 1 +
mov byte ptr [esp+0B8h+var_18] 3 +
cmp [esp+0B8h+var_2C] 10h +
jb loc_427DC0  +
push [esp+0B8h+var_40]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0B8h+var_A1] 0 +
jz loc_427E68  +
push 0FFFFFFFFh  +
push 0  +
lea eax [esp+0C0h+var_70] +
push eax  +
lea ecx [esp+0C4h+var_58] +
call loc_4105F0  +
mov ecx [esi] +
lea edx [esp+0C4h+var_4C] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov ecx eax +
mov [esp+0C8h+var_28] 5 +
lea edx [esp+30h] +
mov eax [esp+0C8h+var_B0] +
or eax 1 +
mov [esp+0C8h+var_B0] eax +
mov [esp+0C8h+var_A8] eax +
cmp edx ecx +
jz loc_427E1A  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_4105F0  +
mov eax [esp+0D4h+var_BC] +
mov [esp+0D4h+var_34] 3 +
test al 1 +
jz loc_427E46  +
and eax 0FFFFFFFEh +
cmp [esp+0D4h+var_48] 10h +
mov [esp+0D4h+var_BC] eax +
jb loc_427E46  +
push [esp+0D4h+var_5C]  +
call sub_43FFF6  +
add esp 4 +
lea eax [esp+0D4h+var_74] +
mov ecx ebx +
push eax  +
call sub_428740  +
lea ecx [esp+30h] +
cmp eax ecx +
jz loc_427E8E  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx eax +
call loc_4105F0  +
jmp loc_427E8E  +
mov eax [ebx] +
mov ecx ebx +
mov [esp+0B8h+var_A2] 0 +
push dword ptr [eax+4]  +
call sub_41CED0  +
mov eax [ebx] +
mov [eax+4] eax +
mov eax [ebx] +
mov [eax] eax +
mov eax [ebx] +
mov [eax+8] eax +
mov dword ptr [ebx+4] 0 +
add esi 4 +
cmp esi [esp+28h] +
jnz loc_427D20  +
mov eax [esp+0B8h+var_5C] +
mov edi [esp+0B8h+var_94] +
cmp eax 10h +
jb loc_427EB4  +
push [esp+0B8h+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0B8h+var_74] 10h +
mov [esp+0B8h+var_5C] 0Fh +
mov [esp+0B8h+var_60] 0 +
mov byte ptr [esp+0B8h+var_70] 0 +
jb loc_427EDC  +
push [esp+0B8h+var_88]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0B8h+var_44] 10h +
mov [esp+0B8h+var_74] 0Fh +
mov [esp+0B8h+var_78] 0 +
mov byte ptr [esp+0B8h+var_88] 0 +
jb loc_427F04  +
push [esp+0B8h+var_58]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+0B8h+var_44] 0Fh +
mov [esp+0B8h+var_48] 0 +
mov byte ptr [esp+0B8h+var_58] 0 +
test edi edi +
jz loc_427F26  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov al [esp+0B8h+var_A2] +
jmp loc_427F4F  +
mov eax [ebx] +
mov ecx ebx +
push dword ptr [eax+4]  +
call sub_41CED0  +
mov eax [ebx] +
mov [eax+4] eax +
mov eax [ebx] +
mov [eax] eax +
mov eax [ebx] +
mov [eax+8] eax +
mov al 1 +
mov dword ptr [ebx+4] 0 +
mov ecx [esp+0A4h+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+94h+var_14] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DB4E  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+0A4h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0B4h+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [esp+0B4h+var_94] edi +
xor eax eax +
mov [esp+0B4h+var_98] eax +
mov [esp+0B4h+var_A0] eax +
mov [esp+0B4h+var_A1] al +
mov eax [edi+4] +
mov ecx [eax+78h] +
test ecx ecx +
jz loc_428039  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_428039  +
mov esi [edi+4] +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_42802E  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_428011  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov dl al +
mov [esp+0B4h+var_A1] dl +
test dl dl +
jz loc_428039  +
mov ecx esi +
call sub_41B420  +
mov dl al +
mov [esp+0B4h+var_A1] dl +
test dl dl +
jnz loc_428039  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_428039  +
mov ecx esi +
call sub_41B420  +
mov [esp+0B4h+var_A1] al +
mov eax [edi+4] +
mov ecx [eax+78h] +
test ecx ecx +
jz loc_428052  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_4282DC  +
push 64h  +
call sub_440048  +
add esp 4 +
mov [esp+0B4h+var_98] eax +
mov [esp+0B4h+var_4] 0 +
test eax eax +
jz loc_428082  +
lea ecx [edi+8] +
push ecx  +
mov ecx eax +
call sub_41A8C0  +
mov ebx eax +
mov [esp+0B4h+var_9C] eax +
jmp loc_428088  +
xor ebx ebx +
mov [esp+0B4h+var_9C] ebx +
mov [esp+0B4h+var_60] 0Fh +
mov [esp+0B4h+var_64] 0 +
mov byte ptr [esp+0B4h+var_74] 0 +
mov [esp+0B4h+var_4] 1 +
mov [esp+0B4h+var_78] 0Fh +
mov [esp+0B4h+var_7C] 0 +
mov byte ptr [esp+0B4h+var_8C] 0 +
mov [esp+0B4h+var_18] 0Fh +
mov [esp+0B4h+var_1C] 0 +
mov [esp+0B4h+var_2C] 0 +
mov eax [ebp+arg_0] +
mov byte ptr [esp+0B4h+var_4] 3 +
mov eax [eax] +
mov esi [eax] +
cmp esi eax +
jz loc_428278  +
lea ebx [esi+10h] +
lea eax [esp+0B4h+var_8C] +
cmp eax ebx +
jz loc_428109  +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx eax +
call loc_4105F0  +
lea eax [ebx+18h] +
lea ecx [esp+0C0h+var_80] +
cmp ecx eax +
jz loc_42811E  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
push 64h  +
call sub_440048  +
mov edi eax +
add esp 4 +
mov [esp+0CCh+var_A8] edi +
mov byte ptr [esp+0CCh+var_1C] 4 +
test edi edi +
jz loc_42816F  +
push offset aMapprefentry  +
lea ecx [esp+0D0h+var_74] +
call sub_4100D0  +
mov byte ptr [esp+0CCh+var_1C] 5 +
mov ecx edi +
mov eax [esp+0CCh+var_B8] +
or eax 1 +
mov [esp+0CCh+var_B8] eax +
mov [esp+0CCh+var_B0] eax +
lea eax [esp+0CCh+var_74] +
push eax  +
call sub_41A8C0  +
mov edi eax +
jmp loc_428171  +
xor edi edi +
mov [esp+0CCh+var_1C] 3 +
mov eax [esp+0CCh+var_B8] +
test al 1 +
jz loc_4281B3  +
and eax 0FFFFFFFEh +
cmp [esp+0CCh+var_60] 10h +
mov [esp+0CCh+var_B8] eax +
jb loc_42819E  +
push [esp+0CCh+var_74]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+0CCh+var_60] 0Fh +
mov [esp+0CCh+var_64] 0 +
mov byte ptr [esp+0CCh+var_74] 0 +
push 0Ah  +
push offset aMapprefkey  +
lea ecx [esp+0D4h+var_5C] +
mov [esp+0D4h+var_48] 0Fh +
mov [esp+0D4h+var_4C] 0 +
mov byte ptr [esp+0D4h+var_5C] 0 +
call loc_4109B0  +
mov [esp+0D4h+var_24] 7 +
lea ecx [esp+0D4h+var_64] +
mov eax [edi] +
push ebx  +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov [esp+0DCh+var_2C] 3 +
cmp [esp+0DCh+var_58] 10h +
jb loc_428211  +
push [esp+0DCh+var_6C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [edi] +
lea ecx [esp+0DCh+var_9C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ebx [esp+0E0h+var_C8] +
mov ecx ebx +
push edi  +
mov eax [ebx] +
call dword ptr [eax+10h]  +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_428269  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42824E  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_428269  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_428242  +
jmp loc_428269  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_428267  +
cmp esi [eax+8] +
jnz loc_428267  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_428257  +
mov esi eax +
mov eax [ebp+arg_0] +
cmp esi [eax] +
jnz loc_4280F2  +
mov edi [esp+0E4h+var_C4] +
mov ecx [edi+4] +
lea eax [edi+8] +
push ebx  +
push eax  +
call sub_423870  +
cmp byte ptr [esp+13h] 0 +
mov bl al +
jz loc_42829F  +
mov ecx [edi+4] +
mov ecx [ecx+78h] +
test ecx ecx +
jz loc_42829F  +
mov edx [ecx] +
push 0  +
call dword ptr [edx+4]  +
cmp [esp+0E8h+var_AC] 10h +
jb loc_4282B2  +
push [esp+0E8h+var_C0]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0E8h+var_94] 10h +
mov [esp+0E8h+var_AC] 0Fh +
mov [esp+0E8h+var_B0] 0 +
mov byte ptr [esp+0E8h+var_C0] 0 +
jb loc_4282DA  +
push [esp+0E8h+var_A8]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [esp+0E8h+var_40] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0D8h+var_48] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
lea ecx [esi+8] +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_46A0DC +
mov dword ptr [esi+4] 0 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [esi+20h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0DC +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42837A  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
lea eax [ecx+20h] +
push eax  +
push [ebp+arg_0]  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_4299D0  +
pop ebp  +
retn 4  +
***
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+8] +
mov ecx [ecx+4] +
push eax  +
call sub_429B70  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
test eax eax +
jz loc_428400  +
push dword ptr [esi+4]  +
push eax  +
call sub_4108D0  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edx [ebp+arg_4] +
sub esp 8 +
mov edx [edx] +
push esi  +
mov esi ecx +
lea ecx [ebp+var_8] +
call loc_415120  +
mov eax [esi+8] +
pop esi  +
lea ecx ds:0[eax*8] +
sub ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_4] +
sub esp 8 +
push esi  +
push edi  +
mov edi ecx +
lea ecx [ebp+var_4] +
mov eax [edi] +
lea esi [edi+4] +
push esi  +
push ecx  +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
lea eax [ebp+var_8] +
mov ecx esi +
push eax  +
call sub_4146A0  +
mov eax [eax] +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+arg_4]  +
add ecx 8 +
push [ebp+arg_0]  +
call loc_4288A0  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
push [ebp+arg_4]  +
add ecx 8 +
push [ebp+arg_0]  +
call loc_428A90  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0A8 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42850D  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_42852E  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A07C +
cmp dword ptr [esi+34h] 10h +
jb loc_42855D  +
push dword ptr [esi+20h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+34h] 0Fh +
mov dword ptr [esi+30h] 0 +
mov byte ptr [esi+20h] 0 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_428580  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_4285A1  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0BC +
cmp dword ptr [esi+1Ch] 10h +
jb loc_4285CD  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_4285EE  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A06C +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42861D  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_42863E  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46A0DC +
cmp dword ptr [esi+1Ch] 10h +
jb loc_42866D  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
jz loc_42868E  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_4] ecx +
test ebx ebx +
jnz loc_4286C0  +
cmp edx [ecx+10h] +
ja loc_4286C0  +
mov eax edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push esi  +
mov esi [ecx+10h] +
push edi  +
cmp edx esi +
jnb loc_428733  +
sub esi edx +
cmp ebx esi +
ja loc_428733  +
mov eax 1 +
sub eax ebx +
add esi eax +
cmp dword ptr [ecx+14h] 10h +
jb loc_4286E0  +
mov ecx [ecx] +
lea ebx [ecx+edx] +
test esi esi +
jz loc_428733  +
mov eax [ebp+arg_0] +
push esi  +
movsx eax byte ptr [eax] +
push eax  +
push ebx  +
call sub_440D80  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_428733  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push edi  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jz loc_42871B  +
sub ebx edi +
dec ebx  +
add esi ebx +
lea ebx [edi+1] +
jmp loc_4286E3  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+14h] 10h +
jb loc_428726  +
mov eax [eax] +
sub edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov [ebp+var_4] ebx +
call sub_41D800  +
mov esi eax +
cmp esi [ebx] +
jz loc_4287B8  +
cmp dword ptr [esi+24h] 10h +
lea ecx [esi+10h] +
mov edx [ecx+10h] +
mov [ebp+var_8] edx +
jb loc_42876E  +
mov ecx [ecx] +
cmp dword ptr [edi+14h] 10h +
mov ebx [edi+10h] +
jb loc_42877E  +
mov eax [edi] +
mov [ebp+arg_0] eax +
jmp loc_428781  +
mov [ebp+arg_0] edi +
cmp ebx edx +
mov eax edx +
cmovb eax ebx +
push eax  +
push ecx  +
push [ebp+arg_0]  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_4287A7  +
mov ecx [ebp+var_8] +
cmp ebx ecx +
jb loc_4287B5  +
cmp ebx ecx +
setnz al  +
test eax eax +
js loc_4287B5  +
pop edi  +
lea eax [esi+28h] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx [ebp+var_4] +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_42A450  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_42A510  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
add eax 28h +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov [ebp+var_4] ebx +
call sub_41D800  +
mov esi eax +
cmp esi [ebx] +
jz loc_428868  +
cmp dword ptr [esi+24h] 10h +
lea ecx [esi+10h] +
mov edx [ecx+10h] +
mov [ebp+var_8] edx +
jb loc_42881E  +
mov ecx [ecx] +
cmp dword ptr [edi+14h] 10h +
mov ebx [edi+10h] +
jb loc_42882E  +
mov eax [edi] +
mov [ebp+arg_0] eax +
jmp loc_428831  +
mov [ebp+arg_0] edi +
cmp ebx edx +
mov eax edx +
cmovb eax ebx +
push eax  +
push ecx  +
push [ebp+arg_0]  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_428857  +
mov ecx [ebp+var_8] +
cmp ebx ecx +
jb loc_428865  +
cmp ebx ecx +
setnz al  +
test eax eax +
js loc_428865  +
pop edi  +
lea eax [esi+28h] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ebx [ebp+var_4] +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_42A750  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_42A800  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
add eax 28h +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esp+0Ch] +
mov edx [edx] +
push edi  +
call loc_415120  +
cmp word ptr [esi+4] 0 +
mov edi [esp+12h] +
jnz loc_428901  +
mov bx [esp+14h] +
push edi  +
push dword ptr [esp+14h]  +
mov [esi+4] bx +
call sub_415240  +
movzx ecx ax +
add esp 8 +
lea eax [ecx+1] +
cmp eax 2 +
jl loc_428A38  +
cmp ecx 1Fh +
ja loc_428A3E  +
cmp cx bx +
jnz loc_428901  +
or eax 0FFFFFFFFh +
mov [esi+4] ax +
mov eax 1 +
lea ecx [eax+0Bh] +
cmp di ax +
jge loc_428913  +
mov di ax +
jmp loc_42891B  +
cmp di cx +
jle loc_42891B  +
mov di cx +
movzx eax word ptr [esi] +
cwde   +
cdq   +
idiv  ecx +
movzx ecx dx +
add di cx +
movzx edx ax +
mov [esp+0Ch] di +
mov eax edx +
cmp di 0Ch +
jle loc_428941  +
lea eax [edx+1] +
add di 0FFF4h +
jmp loc_42894E  +
cmp di 1 +
jge loc_428956  +
lea eax [edx-1] +
add di 0Ch +
mov [esp+0Ch] di +
movzx eax ax +
mov ecx [esp+10h] +
add eax ecx +
push ecx  +
movzx ebx ax +
mov ecx esp +
mov eax 1 +
mov [ecx] ax +
movzx eax di +
inc eax  +
cmp eax 2 +
jl loc_428A44  +
cmp di 0Ch +
ja loc_428A51  +
mov [ecx] di +
mov eax 578h +
push ecx  +
mov ecx esp +
mov [ecx] ax +
lea eax [ebx+1] +
cmp eax 579h +
jl loc_428A5E  +
mov eax 2710h +
cmp bx ax +
ja loc_428A64  +
mov [ecx] bx +
call sub_415240  +
mov dx ax +
add esp 8 +
movzx ecx dx +
inc ecx  +
mov [esp+0Ch] dx +
cmp ecx 2 +
jl loc_428A6A  +
cmp dx 1Fh +
ja loc_428A70  +
movzx eax word ptr [esi+4] +
cmp ax 0FFFFh +
jz loc_428A06  +
mov esi eax +
lea eax [esi+1] +
cmp eax 2 +
jl loc_428A76  +
cmp esi 1Fh +
ja loc_428A7C  +
cmp si dx +
movzx eax dx +
mov ecx esi +
cmova ecx eax +
mov [esp+0Ch] cx +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
push dword ptr [esp+14h]  +
push ecx  +
mov ecx esp +
push ecx  +
mov [ecx] di +
mov ecx esp +
mov [ecx] bx +
lea ecx [esp+20h] +
call sub_4130E0  +
mov ecx eax +
call sub_4270F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push 0  +
push dword ptr [esp+14h]  +
push 1  +
call loc_414EA0  +
push 1  +
push dword ptr [esp+14h]  +
push 1  +
call loc_414EA0  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 14h +
mov edx [ebp+0Ch] +
push ebx  +
mov ebx ecx +
lea ecx [esp+10h] +
push esi  +
mov edx [edx] +
push edi  +
mov [esp+14h] ebx +
call loc_415120  +
cmp word ptr [ebx+4] 0 +
mov edi [esp+1Ah] +
jnz loc_428AF5  +
mov si [esp+1Ch] +
push edi  +
push dword ptr [esp+1Ch]  +
mov [ebx+4] si +
call sub_415240  +
movzx ecx ax +
add esp 8 +
lea eax [ecx+1] +
cmp eax 2 +
jl loc_428C51  +
cmp ecx 1Fh +
ja loc_428C57  +
cmp cx si +
jnz loc_428AF5  +
or eax 0FFFFFFFFh +
mov [ebx+4] ax +
mov eax 1 +
lea esi [eax+0Bh] +
cmp di ax +
jge loc_428B07  +
mov di ax +
jmp loc_428B0F  +
cmp di si +
jle loc_428B0F  +
mov di si +
movzx eax word ptr [ebx] +
movsx ecx ax +
mov eax ecx +
cdq   +
idiv  esi +
mov eax 0D5555555h +
movzx esi dx +
imul  ecx +
sub di si +
sar edx 1 +
mov eax edx +
mov [esp+10h] di +
shr eax 1Fh +
add eax edx +
movzx ecx ax +
mov eax ecx +
cmp di 0Ch +
jle loc_428B49  +
lea eax [ecx+1] +
add di 0FFF4h +
jmp loc_428B56  +
cmp di 1 +
jge loc_428B5E  +
lea eax [ecx-1] +
add di 0Ch +
mov [esp+10h] di +
movzx eax ax +
mov ecx [esp+18h] +
add eax ecx +
push ecx  +
movzx ebx ax +
mov ecx esp +
mov eax 1 +
mov [ecx] ax +
movzx eax di +
inc eax  +
cmp eax 2 +
jl loc_428C5D  +
cmp di 0Ch +
ja loc_428C6A  +
mov [ecx] di +
mov eax 578h +
push ecx  +
mov ecx esp +
mov [ecx] ax +
lea eax [ebx+1] +
cmp eax 579h +
jl loc_428C77  +
mov eax 2710h +
cmp bx ax +
ja loc_428C7D  +
mov [ecx] bx +
call sub_415240  +
mov dx ax +
add esp 8 +
movzx ecx dx +
inc ecx  +
mov [esp+10h] dx +
cmp ecx 2 +
jl loc_428C83  +
cmp dx 1Fh +
ja loc_428C89  +
mov eax [esp+14h] +
movzx eax word ptr [eax+4] +
cmp ax 0FFFFh +
jnz loc_428BF8  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
push dword ptr [esp+18h]  +
jmp loc_428C2A  +
mov esi eax +
lea eax [esi+1] +
cmp eax 2 +
jl loc_428C8F  +
cmp esi 1Fh +
ja loc_428C95  +
push dword ptr [ebp+0Ch]  +
cmp si dx +
movzx eax dx +
mov ecx esi +
mov esi [ebp+8] +
cmova ecx eax +
push esi  +
mov [esp+1Ch] cx +
push dword ptr [esp+1Ch]  +
push ecx  +
mov ecx esp +
push ecx  +
mov [ecx] di +
mov ecx esp +
mov [ecx] bx +
lea ecx [esp+28h] +
call sub_4130E0  +
mov ecx eax +
call sub_4270F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push 0  +
push dword ptr [esp+18h]  +
push 1  +
call loc_414EA0  +
push 1  +
push dword ptr [esp+18h]  +
push 1  +
call loc_414EA0  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414E30  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ecx  +
call loc_414DE0  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_428CF3  +
push dword ptr [edi+8]  +
mov ecx ebx +
call sub_428CA0  +
cmp dword ptr [esi+24h] 10h +
mov edi [edi] +
jb loc_428CD0  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jz loc_428CB3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DBB6  +
mov eax large fs:0 +
push eax  +
sub esp 188h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov [ebp+var_190] ecx +
mov [ebp+var_180] 0 +
mov [ebp+var_20] 0Fh +
mov [ebp+var_24] 0 +
mov byte ptr [ebp+var_34] 0 +
push 3  +
push offset aYmd  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] 0 +
call loc_4109B0  +
xor esi esi +
mov [ebp+var_1C] 202E2D2Ch +
xor edx edx +
mov [ebp+var_18] 2Fh +
mov [ebp+var_18C] edx +
mov [ebp+var_188] edx +
mov [ebp+var_184] edx +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] edx +
mov byte ptr [ebp+var_70] dl +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1C] +
mov [ebp+var_48] edx +
mov byte ptr [ebp+var_58] dl +
lea edx [ecx+1] +
mov [ebp+var_44] 0Fh +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_428DB0  +
sub ecx edx +
lea eax [ebp+var_1C] +
push ecx  +
push eax  +
lea ecx [ebp+var_58] +
call loc_4109B0  +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov byte ptr [ebp+var_4] 3 +
mov ecx [edi+14h] +
cmp ecx 10h +
jb loc_428DE7  +
mov eax [edi] +
jmp loc_428DE9  +
mov eax edi +
mov [ebp+var_11C] eax +
cmp ecx 10h +
jb loc_428DF8  +
mov ecx [edi] +
jmp loc_428DFA  +
mov ecx edi +
mov eax [edi+10h] +
add eax ecx +
lea ecx [ebp+var_114] +
mov [ebp+var_118] eax +
lea eax [ebp+var_70] +
push eax  +
call sub_42A130  +
lea eax [ebp+var_D4] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea ecx [ebp+var_11C] +
call sub_429F90  +
mov byte ptr [ebp+var_4] 5 +
mov edi edi +
lea eax [ebp+var_17C] +
push eax  +
lea ecx [ebp+var_11C] +
call sub_42A060  +
mov edx [ebp+var_180] +
mov ecx eax +
mov bl [ebp+var_90] +
or edx 1 +
mov [ebp+var_180] edx +
mov bh [ecx+44h] +
test bh bh +
jz loc_428F5A  +
test bl bl +
jz loc_428F5A  +
mov eax [ecx+3Ch] +
cmp eax [ebp+var_98] +
jnz loc_428F69  +
mov eax [ecx+40h] +
cmp eax [ebp+var_94] +
jnz loc_428F69  +
xor bl bl +
test dl 1 +
jz loc_428F19  +
and edx 0FFFFFFFEh +
cmp [ebp+var_120] 10h +
mov [ebp+var_180] edx +
jb loc_428EB5  +
push [ebp+var_134]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_150] 10h +
mov [ebp+var_120] 0Fh +
mov [ebp+var_124] 0 +
mov byte ptr [ebp+var_134] 0 +
jb loc_428EE7  +
push [ebp+var_164]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_168] 10h +
mov [ebp+var_150] 0Fh +
mov [ebp+var_154] 0 +
mov byte ptr [ebp+var_164] 0 +
jb loc_428F19  +
push [ebp+var_17C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_428FD8  +
cmp [ebp+var_24] esi +
jbe loc_428FCE  +
cmp [ebp+var_20] 10h +
lea eax [ebp+var_34] +
cmovnb eax [ebp+var_34] +
mov al [eax+esi] +
cmp al 64h +
jz loc_428F8F  +
cmp al 6Dh +
jz loc_428F79  +
cmp al 79h +
jnz loc_428FA3  +
lea ecx [ebp+var_8C] +
call sub_42AED0  +
movzx eax ax +
mov [ebp+var_18C] eax +
jmp loc_428FA3  +
xor eax eax +
cmp bh bl +
setz al  +
test al al +
jnz loc_428E8A  +
cmp esi [ebp+var_24] +
jnb loc_428E8A  +
mov bl 1 +
jmp loc_428E8C  +
lea ecx [ebp+var_8C] +
call sub_42A2D0  +
movzx eax ax +
mov [ebp+var_188] eax +
jmp loc_428FA3  +
lea ecx [ebp+var_8C] +
call sub_42AED0  +
movzx eax ax +
mov [ebp+var_184] eax +
lea eax [ebp+var_8C] +
push eax  +
push [ebp+var_94]  +
lea eax [ebp+var_98] +
push eax  +
lea ecx [ebp+var_D4] +
call sub_42AA40  +
mov [ebp+var_90] al +
inc esi  +
jmp loc_428E30  +
push offset aInvalidStringP  +
call sub_43A666  +
mov byte ptr [ebp+var_4] 4 +
cmp [ebp+var_78] 10h +
jb loc_428FF0  +
push [ebp+var_8C]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_A8] 10h +
mov [ebp+var_78] 0Fh +
mov [ebp+var_7C] 0 +
mov byte ptr [ebp+var_8C] 0 +
jb loc_42901C  +
push [ebp+var_BC]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_C0] 10h +
mov [ebp+var_A8] 0Fh +
mov [ebp+var_AC] 0 +
mov byte ptr [ebp+var_BC] 0 +
jb loc_42904E  +
push [ebp+var_D4]  +
call sub_43FFF6  +
add esp 4 +
mov edx [ebp+var_184] +
mov esi 1 +
push ecx  +
mov ecx esp +
movzx eax dx +
inc eax  +
mov [ebp+var_C0] 0Fh +
mov [ebp+var_C4] 0 +
mov byte ptr [ebp+var_D4] 0 +
mov [ecx] si +
push ecx  +
cmp eax 2 +
jge loc_429089  +
call loc_414DE0  +
cmp dx 1Fh +
jbe loc_429094  +
call loc_414DE0  +
mov [ecx] dx +
mov ecx esp +
mov edx [ebp+var_188] +
movzx eax dx +
inc eax  +
mov [ecx] si +
cmp eax 2 +
jge loc_4290B5  +
push 0  +
push edx  +
push 1  +
call loc_414EA0  +
cmp dx 0Ch +
jbe loc_4290C5  +
push 1  +
push edx  +
push 1  +
call loc_414EA0  +
mov [ecx] dx +
mov eax 578h +
mov edx [ebp+var_18C] +
push ecx  +
mov ecx esp +
mov [ecx] ax +
movzx eax dx +
inc eax  +
cmp eax 579h +
jge loc_4290EA  +
push ecx  +
call loc_414E30  +
mov eax 2710h +
cmp dx ax +
jbe loc_4290FA  +
push ecx  +
call loc_414E30  +
mov esi [ebp+var_190] +
mov [ecx] dx +
mov ecx esi +
call sub_4130E0  +
cmp [ebp+var_E8] 10h +
jb loc_429121  +
push [ebp+var_FC]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_100] 10h +
mov [ebp+var_E8] 0Fh +
mov [ebp+var_EC] 0 +
mov byte ptr [ebp+var_FC] 0 +
jb loc_429153  +
push [ebp+var_114]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_44] 10h +
mov [ebp+var_100] 0Fh +
mov [ebp+var_104] 0 +
mov byte ptr [ebp+var_114] 0 +
jb loc_42917F  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_5C] 10h +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
jb loc_4291A2  +
push [ebp+var_70]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_20] 10h +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] 0 +
mov byte ptr [ebp+var_70] 0 +
jb loc_4291C5  +
push [ebp+var_34]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DBE8  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+64h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
xor bl bl +
mov ecx [esi+78h] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+64h+var_50] eax +
mov eax [ebp+arg_8] +
mov [esp+64h+var_4C] eax +
mov [esp+64h+var_48] 0 +
test ecx ecx +
jz loc_42929B  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_42929B  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429292  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429279  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_42929B  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_42929B  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_42929B  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4292B1  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_429376  +
push 0  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_4292DC  +
mov eax [edi] +
lea ecx [esp+64h+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx 1 +
cmp dword ptr [eax+10h] 0 +
jz loc_4292E0  +
xor bl bl +
jmp loc_4292E2  +
mov ecx [esp+64h+var_48] +
mov bl 1 +
test cl 1 +
jz loc_4292FA  +
cmp [esp+64h+var_18] 10h +
jb loc_4292FA  +
push [esp+64h+var_2C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_42931A  +
mov eax [esp+64h+var_50] +
mov ecx [esp+64h+var_4C] +
cmp eax ecx +
jz loc_429316  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx eax +
call loc_4105F0  +
mov bl 1 +
jmp loc_429376  +
mov eax [edi] +
lea ecx [esp+64h+var_44] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx eax +
mov eax [esp+68h+var_54] +
mov [esp+68h+var_8] 0 +
cmp eax ecx +
jz loc_429344  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx eax +
call loc_4105F0  +
mov [esp+74h+var_14] 0FFFFFFFFh +
mov bl 1 +
cmp [esp+74h+var_40] 10h +
jb loc_429361  +
push [esp+74h+var_54]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+74h+var_40] 0Fh +
mov [esp+74h+var_44] 0 +
mov byte ptr [esp+74h+var_54] 0 +
test bh bh +
jz loc_429388  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429388  +
mov edx [ecx] +
push 0  +
call dword ptr [edx+4]  +
mov al bl +
mov ecx [esp+78h+var_20] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+68h+var_28] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CA18  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax esp +
mov [esp+34h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+44h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+44h+var_30] eax +
test ecx ecx +
jz loc_42944C  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_42944C  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429443  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_42942A  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_42944C  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_42944C  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_42944C  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429462  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_429500  +
push 1  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_4294EC  +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
mov eax [esp+44h+var_30] +
lea ecx [esp+44h+var_2C] +
mov [esp+44h+var_4] 0 +
cmp ecx eax +
jz loc_4294A5  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4105F0  +
mov eax [edi] +
lea ecx [esp+50h+var_38] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ecx esi +
call sub_41B4A0  +
mov [esp+54h+var_14] 0FFFFFFFFh +
mov bl al +
cmp [esp+54h+var_28] 10h +
jb loc_4294D5  +
push [esp+54h+var_3C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+54h+var_28] 0Fh +
mov [esp+54h+var_2C] 0 +
mov byte ptr [esp+54h+var_3C] 0 +
jmp loc_4294EE  +
xor bl bl +
test bh bh +
jz loc_429500  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429500  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+48h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+38h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45DC29  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov edi [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
cmp byte ptr [edi] 0 +
jnz loc_42958B  +
xor ecx ecx +
jmp loc_429599  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_429590  +
sub ecx edx +
mov eax [ebp+arg_8] +
mov ebx [esi+10h] +
mov eax [eax+10h] +
add eax ecx +
cmp ebx eax +
ja loc_4295CE  +
cmp [esi+14h] eax +
jz loc_4295CE  +
push 1  +
push eax  +
mov ecx esi +
call loc_410AE0  +
test al al +
jz loc_4295CE  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ebx +
jb loc_4295C8  +
mov eax [esi] +
jmp loc_4295CA  +
mov eax esi +
mov byte ptr [eax+ebx] 0 +
cmp byte ptr [edi] 0 +
jnz loc_4295D7  +
xor ecx ecx +
jmp loc_4295E9  +
mov ecx edi +
lea edx [ecx+1] +
lea esp [esp+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4295E0  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx esi +
call loc_410500  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_8]  +
mov ecx esi +
call loc_410440  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx] +
mov edx [ebp+arg_4] +
test ecx ecx +
jz loc_429646  +
cmp ecx 0FFFFFFFFh +
jz loc_429646  +
cmp ecx 0FFFFFFFEh +
jz loc_429663  +
mov eax [edx] +
test eax eax +
jz loc_429646  +
cmp eax 0FFFFFFFFh +
jz loc_429646  +
cmp eax 0FFFFFFFEh +
jnz loc_429698  +
cmp ecx 0FFFFFFFEh +
jz loc_429663  +
mov eax [edx] +
cmp eax 0FFFFFFFEh +
jz loc_429663  +
cmp ecx 0FFFFFFFFh +
jnz loc_42965B  +
cmp eax ecx +
jz loc_429663  +
test ecx ecx +
jnz loc_429670  +
test eax eax +
jnz loc_42969A  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFEh +
pop ebp  +
retn 8  +
cmp ecx 0FFFFFFFFh +
jz loc_42969A  +
cmp eax 0FFFFFFFFh +
jnz loc_429687  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
pop ebp  +
retn 8  +
test eax eax +
jnz loc_429698  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0FFFFFFFFh +
pop ebp  +
retn 8  +
sub ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DBE8  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+64h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+64h+var_4C] eax +
mov [esp+64h+var_48] 0 +
test ecx ecx +
jz loc_429754  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429754  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_42974B  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429732  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_429754  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_429754  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_429754  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_42976A  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_42981B  +
push 0  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_429795  +
mov eax [edi] +
lea ecx [esp+64h+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx 1 +
cmp dword ptr [eax+10h] 0 +
jz loc_429799  +
xor bl bl +
jmp loc_42979B  +
mov ecx [esp+64h+var_48] +
mov bl 1 +
test cl 1 +
jz loc_4297B3  +
cmp [esp+64h+var_18] 10h +
jb loc_4297B3  +
push [esp+64h+var_2C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_4297C6  +
mov eax [ebp+arg_8] +
mov bl 1 +
mov ecx [esp+64h+var_4C] +
mov eax [eax] +
mov [ecx] eax +
jmp loc_42981B  +
mov eax [edi] +
lea ecx [esp+64h+var_44] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx [esp+68h+var_50] +
push ecx  +
push eax  +
lea ecx [esp+1Fh] +
mov [esp+70h+var_8] 0 +
call sub_42AF90  +
mov [esp+68h+var_8] 0FFFFFFFFh +
mov bl al +
cmp [esp+68h+var_34] 10h +
jb loc_429806  +
push [esp+68h+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+68h+var_34] 0Fh +
mov [esp+68h+var_38] 0 +
mov byte ptr [esp+68h+var_48] 0 +
test bh bh +
jz loc_42982D  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_42982D  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+6Ch+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+5Ch+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CA18  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax esp +
mov [esp+34h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+44h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+44h+var_30] eax +
test ecx ecx +
jz loc_4298EC  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_4298EC  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4298E3  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_4298CA  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_4298EC  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_4298EC  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_4298EC  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429902  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_4299A4  +
push 1  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_429990  +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
lea eax [esp+44h+var_2C] +
mov [esp+44h+var_4] 0 +
push eax  +
push [esp+48h+var_30]  +
lea ecx [esp+1Bh] +
call sub_42B0F0  +
test al al +
jz loc_42995C  +
mov eax [edi] +
lea ecx [esp+44h+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ecx esi +
call sub_41B4A0  +
mov bl al +
jmp loc_42995E  +
xor bl bl +
mov [esp+44h+var_4] 0FFFFFFFFh +
cmp [esp+44h+var_18] 10h +
jb loc_429979  +
push [esp+44h+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
jmp loc_429992  +
xor bl bl +
test bh bh +
jz loc_4299A4  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_4299A4  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+48h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+38h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45C9E8  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+5Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+5Ch+var_4C] eax +
mov [esp+5Ch+var_48] 0 +
test ecx ecx +
jz loc_429A74  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429A74  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429A6B  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429A52  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_429A74  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_429A74  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_429A74  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429A8A  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jz loc_429B37  +
push 0  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_429AB5  +
mov eax [edi] +
lea ecx [esp+5Ch+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx 1 +
cmp dword ptr [eax+10h] 0 +
jz loc_429AB9  +
xor bl bl +
jmp loc_429ABB  +
mov ecx [esp+5Ch+var_48] +
mov bl 1 +
test cl 1 +
jz loc_429AD3  +
cmp [esp+5Ch+var_18] 10h +
jb loc_429AD3  +
push [esp+5Ch+var_2C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_429AE6  +
mov eax [ebp+arg_8] +
mov bl 1 +
mov ecx [esp+5Ch+var_4C] +
mov eax [eax] +
mov [ecx] eax +
jmp loc_429B37  +
mov eax [edi] +
lea ecx [esp+5Ch+var_44] +
push ecx  +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov ecx [esp+60h+var_50] +
push ecx  +
push eax  +
mov [esp+68h+var_8] 0 +
call sub_42B250  +
mov [esp+60h+var_8] 0FFFFFFFFh +
mov bl al +
cmp [esp+60h+var_34] 10h +
jb loc_429B22  +
push [esp+60h+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+60h+var_34] 0Fh +
mov [esp+60h+var_38] 0 +
mov byte ptr [esp+60h+var_48] 0 +
test bh bh +
jz loc_429B49  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429B49  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+64h+var_14] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+54h+var_1C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45CA18  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_474390 +
xor eax esp +
mov [esp+34h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+44h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+78h] +
xor bl bl +
mov eax [ebp+arg_4] +
xor bh bh +
mov edi [ebp+arg_0] +
mov [esp+44h+var_30] eax +
test ecx ecx +
jz loc_429C0C  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429C0C  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429C03  +
mov eax [ecx] +
mov eax [eax+8] +
call eax  +
test al al +
jnz loc_429BEA  +
mov ecx [esi+78h] +
mov eax [ecx] +
mov eax [eax] +
call eax  +
mov bh al +
test bh bh +
jz loc_429C0C  +
mov ecx esi +
call sub_41B420  +
mov bh al +
test bh bh +
jnz loc_429C0C  +
mov ecx [esi+78h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_429C0C  +
mov ecx esi +
call sub_41B420  +
mov bh al +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429C22  +
mov edx [ecx] +
mov edx [edx+8] +
call edx  +
test al al +
jz loc_429CC0  +
push 1  +
push edi  +
mov ecx esi +
call sub_41B8D0  +
mov edi eax +
test edi edi +
jz loc_429CAC  +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
lea eax [esp+44h+var_2C] +
mov [esp+44h+var_4] 0 +
push eax  +
push [esp+48h+var_30]  +
call sub_42B3B0  +
test al al +
jz loc_429C78  +
mov eax [edi] +
lea ecx [esp+44h+var_2C] +
push ecx  +
mov ecx edi +
call dword ptr [eax+4]  +
mov ecx esi +
call sub_41B4A0  +
mov bl al +
jmp loc_429C7A  +
xor bl bl +
mov [esp+44h+var_4] 0FFFFFFFFh +
cmp [esp+44h+var_18] 10h +
jb loc_429C95  +
push [esp+44h+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov [esp+44h+var_18] 0Fh +
mov [esp+44h+var_1C] 0 +
mov byte ptr [esp+44h+var_2C] 0 +
jmp loc_429CAE  +
xor bl bl +
test bh bh +
jz loc_429CC0  +
mov ecx [esi+78h] +
test ecx ecx +
jz loc_429CC0  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+4]  +
mov al bl +
mov ecx [esp+48h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+38h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+34h] 10h +
jb loc_429D04  +
push dword ptr [esi+20h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+34h] 0Fh +
mov dword ptr [esi+30h] 0 +
mov byte ptr [esi+20h] 0 +
cmp dword ptr [esi+1Ch] 10h +
jb loc_429D27  +
push dword ptr [esi+8]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0Fh +
mov dword ptr [esi+18h] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
cmp dword ptr [esi+5Ch] 10h +
jb loc_429D54  +
push dword ptr [esi+48h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+5Ch] 0Fh +
mov dword ptr [esi+58h] 0 +
mov byte ptr [esi+48h] 0 +
cmp dword ptr [esi+2Ch] 10h +
jb loc_429D77  +
push dword ptr [esi+18h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+2Ch] 0Fh +
mov dword ptr [esi+28h] 0 +
mov byte ptr [esi+18h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_429D99  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+10h] +
cmp edi eax +
ja loc_429DE1  +
cmp [esi+14h] eax +
jz loc_429DE1  +
push 1  +
push eax  +
call loc_410AE0  +
test al al +
jz loc_429DE1  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_429DDD  +
mov esi [esi] +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DC68  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_429E3A  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_429E5E  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_429E5E  +
cmp ecx esi +
jz loc_429E5E  +
call sub_414290  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_429F24  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_419990  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_1C] +
mov ebx eax +
test ecx ecx +
jz loc_429EB2  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_429EB2  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [esi] +
push [ebp+arg_0]  +
mov ecx [eax+4] +
add ecx esi +
mov byte ptr [ebp+var_4] 3 +
mov al [ecx+40h] +
mov byte ptr [ebp+var_20] al +
lea eax [ebp+var_34] +
push [ebp+var_20]  +
mov byte ptr [ebp+var_34] 0 +
push ecx  +
push dword ptr [ecx+38h]  +
mov ecx ebx +
push [ebp+var_34]  +
push eax  +
call sub_42A2A0  +
mov ecx 4 +
mov al [eax] +
test al al +
cmovnz edi ecx +
jmp loc_429F1D  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_429F07  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_429F17 +
retn   +
mov esi [ebp-18h] +
mov edi [ebp-24h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_429F45  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_429F3D  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_429F5C  +
mov ecx esi +
call sub_414D50  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_429F6E  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DCA0  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push dword ptr [ecx+4]  +
mov edi [ebp+arg_0] +
lea eax [ecx+8] +
push dword ptr [ecx]  +
mov [ebp+var_80] edi +
sub esp 3Ch +
mov [ebp+var_78] 0 +
mov ecx esp +
push eax  +
call sub_42A130  +
lea ecx [ebp+var_74] +
call sub_42A1D0  +
mov esi eax +
push esi  +
mov ecx edi +
mov [ebp+var_4] 0 +
call sub_42A130  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [edi+48h] +
mov eax [esi+3Ch] +
lea edx [esi+48h] +
mov [edi+3Ch] eax +
mov eax [esi+40h] +
mov [edi+40h] eax +
mov al [esi+44h] +
push 0FFFFFFFFh  +
mov [edi+44h] al +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push edx  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
lea ecx [ebp+var_74] +
call sub_429D40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DCA0  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push dword ptr [ecx+4]  +
mov edi [ebp+arg_0] +
lea eax [ecx+8] +
push dword ptr [ecx+4]  +
mov [ebp+var_80] edi +
sub esp 3Ch +
mov [ebp+var_78] 0 +
mov ecx esp +
push eax  +
call sub_42A130  +
lea ecx [ebp+var_74] +
call sub_42A1D0  +
mov esi eax +
push esi  +
mov ecx edi +
mov [ebp+var_4] 0 +
call sub_42A130  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [edi+48h] +
mov eax [esi+3Ch] +
lea edx [esi+48h] +
mov [edi+3Ch] eax +
mov eax [esi+40h] +
mov [edi+40h] eax +
mov al [esi+44h] +
push 0FFFFFFFFh  +
mov [edi+44h] al +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push edx  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
lea ecx [ebp+var_74] +
call sub_429D40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_45DD1B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
push eax  +
call sub_42A130  +
mov eax [ebp+arg_3C] +
lea ecx [esi+3Ch] +
mov [ecx] eax +
lea edx [esi+48h] +
mov eax [ebp+arg_40] +
mov [esi+40h] eax +
mov byte ptr [esi+44h] 0 +
mov dword ptr [edx+14h] 0Fh +
mov dword ptr [edx+10h] 0 +
mov byte ptr [edx] 0 +
mov byte ptr [ebp+var_4] 2 +
cmp byte ptr [esi+44h] 0 +
jnz loc_42A253  +
mov eax [ecx] +
cmp eax [esi+40h] +
jz loc_42A24E  +
push edx  +
push dword ptr [esi+40h]  +
push ecx  +
mov ecx esi +
call sub_42AA40  +
jmp loc_42A250  +
xor al al +
mov [esi+44h] al +
cmp [ebp+arg_2C] 10h +
jb loc_42A264  +
push [ebp+arg_18]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+arg_14] 10h +
mov [ebp+arg_2C] 0Fh +
mov [ebp+arg_28] 0 +
mov byte ptr [ebp+arg_18] 0 +
jb loc_42A287  +
push [ebp+arg_0]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 44h  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_14]  +
mov eax [ecx] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+24h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_45DD50  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_42A30D  +
push offset aInvalidStringP  +
call sub_43A666  +
mov ecx [eax+14h] +
cmp ecx 10h +
jb loc_42A319  +
mov edx [eax] +
jmp loc_42A31B  +
mov edx eax +
cmp byte ptr [edx] 30h +
jl loc_42A33C  +
cmp ecx 10h +
jb loc_42A329  +
mov ecx [eax] +
jmp loc_42A32B  +
mov ecx eax +
cmp byte ptr [ecx] 39h +
jg loc_42A33C  +
mov ecx eax +
call sub_42AED0  +
jmp loc_42A427  +
sub esp 18h +
mov ecx esp +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4105F0  +
lea eax [ebp+var_28] +
push eax  +
call sub_4236D0  +
add esp 1Ch +
lea eax [ebp+var_34] +
mov [ebp+var_4] 0 +
push eax  +
call sub_43F250  +
add esp 4 +
mov ecx [ebp+var_34] +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call sub_41BF80  +
mov ecx [ebp+var_34] +
mov eax [ebp+var_2C] +
cmp eax [ecx] +
jz loc_42A3E0  +
movzx ebx word ptr [eax+28h] +
mov byte ptr [ebp+var_4] 0 +
mov esi [ebp+var_30] +
test esi esi +
jz loc_42A3CA  +
or edi 0FFFFFFFFh +
lea ecx [esi+4] +
mov eax edi +
xadd [ecx] eax +
jnz loc_42A3CA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
lea eax [esi+8] +
xadd [eax] edi +
dec edi  +
jnz loc_42A3CA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
cmp [ebp+var_14] 10h +
jb loc_42A3DB  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov ax bx +
jmp loc_42A427  +
mov byte ptr [ebp+var_4] 0 +
mov esi [ebp+var_30] +
test esi esi +
jz loc_42A411  +
or edi 0FFFFFFFFh +
lea ecx [esi+4] +
mov eax edi +
xadd [ecx] eax +
jnz loc_42A411  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
lea eax [esi+8] +
xadd [eax] edi +
dec edi  +
jnz loc_42A411  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
cmp [ebp+var_14] 10h +
jb loc_42A422  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax 0Dh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45DD91  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_41EBB0  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_42A4D7  +
mov eax [ebp+arg_4] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
mov eax [eax] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push eax  +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov dword ptr [esi+2Ch] 0Fh +
mov dword ptr [esi+28h] 0 +
mov byte ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45DDB0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_42A571  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ecx [ebx] +
mov eax [ebp+arg_4] +
cmp eax [ecx] +
jnz loc_42A5BB  +
add eax 10h +
lea ecx [ebp-11h] +
push eax  +
push [ebp+arg_8]  +
call sub_41CF50  +
test al al +
jz loc_42A715  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push [ebp+arg_4]  +
mov ecx ebx +
push 1  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp eax ecx +
jnz loc_42A605  +
mov eax [ecx+8] +
lea ecx [ebp-11h] +
push [ebp+arg_8]  +
add eax 10h +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42A715  +
push [ebp+arg_C]  +
mov eax [ebx] +
mov esi [ebp+arg_0] +
push ecx  +
mov ecx ebx +
push dword ptr [eax+8]  +
push 0  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebp+arg_8] +
lea ecx [ebp-11h] +
add eax 10h +
push eax  +
push edi  +
call sub_41CF50  +
test al al +
jz loc_42A690  +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_18] +
mov [ebp+var_18] eax +
call sub_41F3A0  +
mov esi [ebp+var_18] +
lea ecx [ebp-11h] +
push edi  +
lea eax [esi+10h] +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42A690  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jz loc_42A66C  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_4] +
lea ecx [ebp-11h] +
push edi  +
add eax 10h +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42A715  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call sub_41CFB0  +
mov edi [ebp+var_18] +
cmp edi [ebx] +
jz loc_42A6CF  +
lea eax [edi+10h] +
push eax  +
push [ebp+arg_8]  +
lea ecx [ebp-11h] +
call sub_41CF50  +
test al al +
jz loc_42A715  +
mov esi [ebp+arg_4] +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jnz loc_42A64A  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push esi  +
call loc_421E40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_41EB50  +
push 0  +
push 0  +
call sub_443DCE  +
push [ebp+arg_C]  +
lea eax [ebp+var_1C] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
push eax  +
mov ecx ebx +
call sub_41E8D0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_45DDE1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_42AE40  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_42A7C9  +
mov eax [ebp+arg_4] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
mov eax [eax] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push eax  +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov byte ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45DE00  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_42A861  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ecx [ebx] +
mov eax [ebp+arg_4] +
cmp eax [ecx] +
jnz loc_42A8AB  +
add eax 10h +
lea ecx [ebp-11h] +
push eax  +
push [ebp+arg_8]  +
call sub_41CF50  +
test al al +
jz loc_42AA05  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push [ebp+arg_4]  +
mov ecx ebx +
push 1  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp eax ecx +
jnz loc_42A8F5  +
mov eax [ecx+8] +
lea ecx [ebp-11h] +
push [ebp+arg_8]  +
add eax 10h +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42AA05  +
push [ebp+arg_C]  +
mov eax [ebx] +
mov esi [ebp+arg_0] +
push ecx  +
mov ecx ebx +
push dword ptr [eax+8]  +
push 0  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebp+arg_8] +
lea ecx [ebp-11h] +
add eax 10h +
push eax  +
push edi  +
call sub_41CF50  +
test al al +
jz loc_42A980  +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_18] +
mov [ebp+var_18] eax +
call sub_41F3A0  +
mov esi [ebp+var_18] +
lea ecx [ebp-11h] +
push edi  +
lea eax [esi+10h] +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42A980  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jz loc_42A95C  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_4] +
lea ecx [ebp-11h] +
push edi  +
add eax 10h +
push eax  +
call sub_41CF50  +
test al al +
jz loc_42AA05  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call sub_41CFB0  +
mov edi [ebp+var_18] +
cmp edi [ebx] +
jz loc_42A9BF  +
lea eax [edi+10h] +
push eax  +
push [ebp+arg_8]  +
lea ecx [ebp-11h] +
call sub_41CF50  +
test al al +
jz loc_42AA05  +
mov esi [ebp+arg_4] +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jnz loc_42A93A  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push esi  +
call loc_42B9F0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_42AE00  +
push 0  +
push 0  +
call sub_443DCE  +
push [ebp+arg_C]  +
lea eax [ebp+var_1C] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
push eax  +
mov ecx ebx +
call sub_42BC30  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+34h] 0 +
jnz loc_42AA9E  +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jz loc_42AA9E  +
cmp dword ptr [edi+28h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42AA7A  +
push 1  +
mov byte ptr [ebp+arg_0] al +
lea ecx [edi+18h] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AA8E  +
cmp byte ptr [edi+31h] 0 +
jz loc_42AA9E  +
movsx eax al +
push eax  +
call sub_44054C  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jz loc_42AA9E  +
inc dword ptr [ebx]  +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jnz loc_42AA58  +
cmp dword ptr [edi+34h] 0 +
mov esi [ebx] +
jnz loc_42AB97  +
cmp esi [ebp+arg_4] +
jnz loc_42AAB8  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edi+10h] 0 +
mov al [esi] +
jz loc_42AAD7  +
push 1  +
mov byte ptr [ebp+arg_0] al +
mov ecx edi +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AAEB  +
cmp byte ptr [edi+30h] 0 +
jz loc_42AAF9  +
movsx eax al +
push eax  +
call sub_440521  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jz loc_42AAF9  +
inc dword ptr [ebx]  +
jmp loc_42AD2F  +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jz loc_42AD2F  +
cmp dword ptr [edi+28h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42AB26  +
push 1  +
mov byte ptr [ebp+arg_0] al +
lea ecx [edi+18h] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AB3A  +
cmp byte ptr [edi+31h] 0 +
jz loc_42AB45  +
movsx eax al +
push eax  +
call sub_44054C  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jnz loc_42AD2F  +
cmp dword ptr [edi+10h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42AB66  +
push 1  +
mov byte ptr [ebp+arg_0] al +
mov ecx edi +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AB7A  +
cmp byte ptr [edi+30h] 0 +
jz loc_42AB85  +
movsx eax al +
push eax  +
call sub_440521  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jnz loc_42AD2F  +
inc dword ptr [ebx]  +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jnz loc_42AB04  +
jmp loc_42AD2F  +
cmp esi [ebp+arg_4] +
jnz loc_42ABEF  +
cmp byte ptr [edi+38h] 0 +
jnz loc_42AAAF  +
mov ecx [ebp+arg_8] +
mov byte ptr [edi+38h] 1 +
mov edi [ecx+14h] +
cmp edi 10h +
jb loc_42ABB9  +
mov edx [ecx] +
jmp loc_42ABBB  +
mov edx ecx +
mov eax [ecx+10h] +
add eax edx +
cmp edi 10h +
jb loc_42ABDA  +
push dword ptr [ebx]  +
mov edx [ecx] +
push esi  +
push eax  +
push edx  +
call sub_42BE60  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
push dword ptr [ebx]  +
mov edx ecx +
push esi  +
push eax  +
push edx  +
call sub_42BE60  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edi+10h] 0 +
mov al [esi] +
jz loc_42AC0E  +
push 1  +
mov byte ptr [ebp+arg_0] al +
mov ecx edi +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AC22  +
cmp byte ptr [edi+30h] 0 +
jz loc_42AC3E  +
movsx eax al +
push eax  +
call sub_440521  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jz loc_42AC3E  +
cmp byte ptr [edi+38h] 0 +
jz loc_42AD2B  +
inc dword ptr [ebx]  +
mov byte ptr [edi+38h] 0 +
jmp loc_42AD2F  +
cmp byte ptr [edi+38h] 0 +
jnz loc_42AC59  +
mov eax [ebx] +
mov ecx edi +
movzx eax byte ptr [eax] +
push eax  +
call sub_42AE80  +
test al al +
jnz loc_42AD2B  +
cmp dword ptr [edi+28h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42AC7B  +
push 1  +
mov byte ptr [ebp+arg_0] al +
lea ecx [edi+18h] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AC8F  +
cmp byte ptr [edi+31h] 0 +
jz loc_42AC9A  +
movsx eax al +
push eax  +
call sub_44054C  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jz loc_42AC9A  +
inc dword ptr [ebx]  +
mov esi [ebx] +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jz loc_42AD2B  +
cmp dword ptr [edi+28h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42ACC7  +
push 1  +
mov byte ptr [ebp+arg_0] al +
lea ecx [edi+18h] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42ACDB  +
cmp byte ptr [edi+31h] 0 +
jz loc_42ACE2  +
movsx eax al +
push eax  +
call sub_44054C  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jnz loc_42AD2B  +
cmp dword ptr [edi+10h] 0 +
mov eax [ebx] +
mov al [eax] +
jz loc_42AD03  +
push 1  +
mov byte ptr [ebp+arg_0] al +
mov ecx edi +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
call sub_4286A0  +
cmp eax 0FFFFFFFFh +
jmp loc_42AD17  +
cmp byte ptr [edi+30h] 0 +
jz loc_42AD1E  +
movsx eax al +
push eax  +
call sub_440521  +
add esp 4 +
test eax eax +
setnz al  +
test al al +
jnz loc_42AD2B  +
inc dword ptr [ebx]  +
mov eax [ebx] +
cmp eax [ebp+arg_4] +
jnz loc_42ACA5  +
mov byte ptr [edi+38h] 1 +
mov edi [ebp+arg_8] +
mov ecx [ebx] +
mov ebx [edi+14h] +
cmp ebx 10h +
jb loc_42AD40  +
mov edx [edi] +
jmp loc_42AD42  +
mov edx edi +
mov eax [edi+10h] +
add eax edx +
cmp ebx 10h +
jb loc_42AD50  +
mov edx [edi] +
jmp loc_42AD52  +
mov edx edi +
cmp esi ecx +
jnz loc_42AD91  +
cmp ebx 10h +
jb loc_42AD5F  +
mov ecx [edi] +
jmp loc_42AD61  +
mov ecx edi +
test eax eax +
jz loc_42AD67  +
sub eax edx +
test edx edx +
jnz loc_42AD7D  +
push eax  +
push edx  +
mov ecx edi +
call loc_410720  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
sub edx ecx +
mov ecx edi +
push eax  +
push edx  +
call loc_410720  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp ebx 10h +
jb loc_42AD9A  +
mov ebx [edi] +
jmp loc_42AD9C  +
mov ebx edi +
test eax eax +
jz loc_42ADA2  +
sub eax edx +
test edx edx +
jz loc_42ADA8  +
sub edx ebx +
sub ecx esi +
push ecx  +
push esi  +
push eax  +
push edx  +
mov ecx edi +
call loc_4115F0  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+24h] 10h +
jb loc_42AE18  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 2Ch  +
mov esi ecx +
call sub_440048  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_42AE71  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_42AE62  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_42AE6D  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_43A607  +
cmp dword ptr [ecx+28h] 0 +
push 0FFFFFFFFh  +
push offset loc_45DE28  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp dword ptr [ecx+14h] 10h +
jb loc_42AF00  +
mov edx [ecx] +
jmp loc_42AF02  +
mov edx ecx +
mov eax [ecx+10h] +
lea ecx [edx+eax] +
cmp edx ecx +
jz loc_42AF40  +
mov al [edx] +
xor bl bl +
cmp al 2Dh +
jnz loc_42AF18  +
mov bl 1 +
jmp loc_42AF1C  +
cmp al 2Bh +
jnz loc_42AF1D  +
inc edx  +
push ecx  +
lea ecx [ebp+var_10] +
call sub_42BEF0  +
add esp 4 +
mov dl al +
test bl bl +
jz loc_42AF39  +
mov ecx [ebp+var_10] +
neg ecx  +
movzx eax cx +
jmp loc_42AF3C  +
mov eax [ebp+var_10] +
test dl dl +
jnz loc_42AF71  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
mov [ebp+var_24] offset off_4699A4 +
mov [ebp+var_18] offset off_476028 +
mov [ebp+var_14] offset off_476B18 +
lea ecx [ebp+var_24] +
mov [ebp+var_4] 0 +
call loc_419AB0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DE90  +
mov eax large fs:0 +
push eax  +
sub esp 0C0h +
push ebx  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0D4h+var_C] +
mov large fs:0 eax +
mov [esp+0D4h+var_C4] 0 +
mov [esp+0D4h+var_C0] offset unk_46AD30 +
mov [esp+0D4h+var_B0] offset unk_469D54 +
mov [esp+0D4h+var_58] offset off_4627B8 +
push 0  +
lea eax [esp+0D8h+var_A8] +
mov [esp+0D8h+var_4] 0 +
push eax  +
lea ecx [esp+0DCh+var_C0] +
mov [esp+0DCh+var_C4] 1 +
call sub_41F400  +
mov [esp+0D4h+var_4] 1 +
mov eax [esp+0D4h+var_C0] +
mov eax [eax+4] +
mov [esp+eax+0D4h+var_C0] offset off_462948 +
mov eax [esp+0D4h+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [esp+ecx+0D4h+var_C4] eax +
lea ecx [esp+0D4h+var_A8] +
call sub_418510  +
mov [esp+0D4h+var_A8] offset off_462860 +
mov [esp+0D4h+var_70] 0 +
mov [esp+0D4h+var_6C] 0 +
push [ebp+arg_0]  +
lea eax [esp+0D8h+var_B0] +
mov [esp+0D8h+var_4] 3 +
push eax  +
call sub_422050  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B0A8  +
push [ebp+arg_4]  +
lea ecx [esp+0D8h+var_C0] +
call sub_42B510  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B0A8  +
lea eax [esp+0D4h+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_42B0A8  +
mov bl 1 +
jmp loc_42B0AA  +
xor bl bl +
lea ecx [esp+0D4h+var_58] +
mov [esp+0D4h+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [esp+0D4h+var_58] +
mov [esp+0D4h+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [esp+0D4h+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45DE90  +
mov eax large fs:0 +
push eax  +
sub esp 0C0h +
push ebx  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+0D4h+var_C] +
mov large fs:0 eax +
mov [esp+0D4h+var_C4] 0 +
mov [esp+0D4h+var_C0] offset unk_46AD30 +
mov [esp+0D4h+var_B0] offset unk_469D54 +
mov [esp+0D4h+var_58] offset off_4627B8 +
push 0  +
lea eax [esp+0D8h+var_A8] +
mov [esp+0D8h+var_4] 0 +
push eax  +
lea ecx [esp+0DCh+var_C0] +
mov [esp+0DCh+var_C4] 1 +
call sub_41F400  +
mov [esp+0D4h+var_4] 1 +
mov eax [esp+0D4h+var_C0] +
mov eax [eax+4] +
mov [esp+eax+0D4h+var_C0] offset off_462948 +
mov eax [esp+0D4h+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [esp+ecx+0D4h+var_C4] eax +
lea ecx [esp+0D4h+var_A8] +
call sub_418510  +
mov [esp+0D4h+var_A8] offset off_462860 +
mov [esp+0D4h+var_70] 0 +
mov [esp+0D4h+var_6C] 0 +
mov eax [ebp+arg_0] +
lea ecx [esp+0D4h+var_B0] +
mov [esp+0D4h+var_4] 3 +
push dword ptr [eax]  +
call sub_429DF0  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B20A  +
push [ebp+arg_4]  +
lea eax [esp+0D8h+var_C0] +
push eax  +
call sub_422A20  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B20A  +
lea eax [esp+0D4h+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_42B20A  +
mov bl 1 +
jmp loc_42B20C  +
xor bl bl +
lea ecx [esp+0D4h+var_58] +
mov [esp+0D4h+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [esp+0D4h+var_58] +
mov [esp+0D4h+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [esp+0D4h+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45CA9A  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_C0] offset unk_46AD30 +
mov [ebp+var_B0] offset unk_469D54 +
mov [ebp+var_58] offset off_4627B8 +
push 0  +
lea eax [ebp+var_A8] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_C0] +
mov [ebp+var_10] 1 +
call sub_41F400  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_462948 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
call sub_418510  +
mov [ebp+var_A8] offset off_462860 +
mov [ebp+var_70] 0 +
mov [ebp+var_6C] 0 +
push [ebp+arg_0]  +
lea eax [ebp+var_B0] +
mov [ebp+var_4] 3 +
push eax  +
call sub_422050  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B36C  +
push [ebp+arg_4]  +
lea ecx [ebp+var_C0] +
call sub_42B6B0  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B36C  +
lea eax [ebp+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_42B36C  +
mov bl 1 +
jmp loc_42B36E  +
xor bl bl +
lea ecx [ebp+var_58] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [ebp+var_58] +
mov [ebp+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45CA9A  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
push ebx  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov [ebp+var_C0] offset unk_46AD30 +
mov [ebp+var_B0] offset unk_469D54 +
mov [ebp+var_58] offset off_4627B8 +
push 0  +
lea eax [ebp+var_A8] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_C0] +
mov [ebp+var_10] 1 +
call sub_41F400  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_462948 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
call sub_418510  +
mov [ebp+var_A8] offset off_462860 +
mov [ebp+var_70] 0 +
mov [ebp+var_6C] 0 +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_B0] +
mov [ebp+var_4] 3 +
push dword ptr [eax]  +
call sub_42B820  +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B4CE  +
push [ebp+arg_4]  +
lea eax [ebp+var_C0] +
push eax  +
call sub_422A20  +
add esp 8 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_42B4CE  +
lea eax [ebp+var_C0] +
push eax  +
call sub_41A710  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 1 +
jz loc_42B4CE  +
mov bl 1 +
jmp loc_42B4D0  +
xor bl bl +
lea ecx [ebp+var_58] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F1E0  +
lea eax [ebp+var_58] +
mov [ebp+var_58] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45DED8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_1C] esi +
mov [ebp+var_18] 0 +
mov eax [esi] +
mov [ebp+var_2C] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B55C  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 0  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_42B650  +
lea eax [ebp+var_24] +
mov [ebp+var_20] 0 +
push eax  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_4222C0  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_24] +
mov edi eax +
test ecx ecx +
jz loc_42B5C0  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_42B5C0  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov byte ptr [ebp+var_4] 3 +
lea edx [ebp+var_20] +
mov eax [esi] +
push edx  +
lea edx [ebp+var_18] +
mov byte ptr [ebp+var_30] 1 +
push edx  +
mov eax [eax+4] +
add eax esi +
push eax  +
push [ebp+var_30]  +
mov ecx [eax+38h] +
test ecx ecx +
push 0  +
setz byte ptr [ebp+var_38]  +
lea eax [ebp+var_3C] +
push [ebp+var_38]  +
push ecx  +
push eax  +
mov ecx edi +
call sub_42B9C0  +
jmp loc_42B624  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_42B611  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_42B621 +
retn   +
mov esi [ebp-1Ch] +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_18] +
test cl 2 +
jnz loc_42B648  +
mov edx [ebp+var_20] +
lea eax [edx-80000000h] +
cmp eax 0FFFFFFFFh +
ja loc_42B648  +
mov eax [ebp+arg_0] +
mov [eax] edx +
jmp loc_42B653  +
or ecx 2 +
mov [ebp+var_18] ecx +
jmp loc_42B653  +
mov ecx [ebp+var_18] +
mov eax [esi] +
mov edx [eax+4] +
add edx esi +
test ecx ecx +
jz loc_42B676  +
mov eax [edx+0Ch] +
or eax ecx +
cmp dword ptr [edx+38h] 0 +
jnz loc_42B66C  +
or eax 4 +
push 0  +
push eax  +
mov ecx edx +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B68F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DF18  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov [ebp+var_1C] 0 +
mov eax [esi] +
mov [ebp+var_28] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B6FC  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 0  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_41C940  +
mov [ebp+var_24] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_42B7C3  +
lea eax [ebp+var_20] +
push eax  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_4222C0  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_20] +
mov edi eax +
test ecx ecx +
jz loc_42B759  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_42B759  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 3 +
lea ebx [ebp+var_1C] +
mov eax [esi] +
mov edx [edi] +
push ebx  +
mov byte ptr [ebp+var_2C] 1 +
mov eax [eax+4] +
add eax esi +
push eax  +
push [ebp+var_2C]  +
mov ecx [eax+38h] +
test ecx ecx +
push 0  +
setz byte ptr [ebp+var_34]  +
lea eax [ebp+var_38] +
push [ebp+var_34]  +
push ecx  +
push eax  +
mov ecx edi +
call dword ptr [edx+24h]  +
jmp loc_42B7BC  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_42B7A9  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_42B7B9 +
retn   +
mov esi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov edx [ebp+var_1C] +
mov ecx [eax+4] +
add ecx esi +
test edx edx +
jz loc_42B7E7  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_42B7DF  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B800  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45DF58  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B86A  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_42B88E  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_42B88E  +
cmp ecx esi +
jz loc_42B88E  +
call sub_414290  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_42B955  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4129C0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_419990  +
mov byte ptr [ebp+var_4] 1 +
add esp 4 +
mov ecx [ebp+var_1C] +
mov ebx eax +
test ecx ecx +
jz loc_42B8E2  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_42B8E2  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 3 +
mov eax [esi] +
mov ecx [eax+4] +
mov al [ecx+esi+40h] +
add ecx esi +
mov byte ptr [ebp+var_20] al +
lea eax [ebp+var_34] +
push [ebp+var_20]  +
mov byte ptr [ebp+var_34] 0 +
push ecx  +
push dword ptr [ecx+38h]  +
mov ecx ebx +
push [ebp+var_34]  +
push eax  +
call sub_417810  +
mov ecx 4 +
mov al [eax] +
test al al +
cmovnz edi ecx +
jmp loc_42B94E  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_42B938  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_412900  +
mov eax offset loc_42B948 +
retn   +
mov esi [ebp-18h] +
mov edi [ebp-24h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_42B976  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_42B96E  +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_43AC2A  +
test al al +
jnz loc_42B98D  +
mov ecx esi +
call sub_414D50  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_42B99F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_1C]  +
mov eax [ecx] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+28h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 5D1745Ch +
jb loc_42BA14  +
mov esi [ebp+18h] +
cmp dword ptr [esi+24h] 10h +
jb loc_42BBFD  +
jmp loc_42BBF2  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_42BA35  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_42BA54  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_42BA47  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_42BA54  +
mov [ecx] ebx +
jmp loc_42BA54  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_42BA54  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_42BBDD  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_42BB1E  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_42BB24  +
cmp eax [ecx+8] +
jnz loc_42BABF  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_42BA9A  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_42BAAC  +
mov [ecx+4] edx +
jmp loc_42BABA  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_42BAB7  +
mov [ecx] edx +
jmp loc_42BABA  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_42BAE9  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_42BB01  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_42BBCD  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_42BB14  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_42BBCD  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_42BBCD  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_42BB41  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_42BBD0  +
cmp eax [ecx] +
jnz loc_42BB81  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_42BB5A  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_42BB6C  +
mov [ecx+4] edx +
jmp loc_42BB7B  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_42BB79  +
mov [ecx+8] edx +
jmp loc_42BB7B  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_42BBAB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_42BBBD  +
mov [ecx+4] esi +
jmp loc_42BBCB  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_42BBC8  +
mov [ecx] esi +
jmp loc_42BBCB  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_42BA63  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45DF80  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_24] ebx +
mov [ebp+var_4] 0 +
mov al 1 +
mov edx [ebx] +
mov ecx edx +
mov [ebp+var_28] edx +
mov [ebp+var_18] ecx +
mov byte ptr [ebp+var_20] al +
mov edi [edx+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_42BD51  +
mov eax [ebp+arg_8] +
mov [ebp+var_14] eax +
mov ecx [eax+10h] +
mov [ebp+var_1C] ecx +
jmp loc_42BC94  +
mov eax [ebp+arg_8] +
cmp dword ptr [edi+24h] 10h +
lea ecx [edi+10h] +
mov ebx [ecx+10h] +
mov [ebp+var_18] edi +
jb loc_42BCA5  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
jb loc_42BCAF  +
mov esi [eax] +
jmp loc_42BCB1  +
mov esi eax +
cmp [ebp+var_1C] ebx +
mov edx ebx +
cmovb edx [ebp+var_1C] +
test edx edx +
jz loc_42BD13  +
sub edx 4 +
jb loc_42BCD4  +
mov eax [esi] +
cmp eax [ecx] +
jnz loc_42BCD9  +
add esi 4 +
add ecx 4 +
sub edx 4 +
jnb loc_42BCC3  +
cmp edx 0FFFFFFFCh +
jz loc_42BD0D  +
mov al [esi] +
cmp al [ecx] +
jnz loc_42BD06  +
cmp edx 0FFFFFFFDh +
jz loc_42BD0D  +
mov al [esi+1] +
cmp al [ecx+1] +
jnz loc_42BD06  +
cmp edx 0FFFFFFFEh +
jz loc_42BD0D  +
mov al [esi+2] +
cmp al [ecx+2] +
jnz loc_42BD06  +
cmp edx 0FFFFFFFFh +
jz loc_42BD0D  +
mov al [esi+3] +
cmp al [ecx+3] +
jz loc_42BD0D  +
sbb eax eax +
or eax 1 +
jmp loc_42BD0F  +
xor eax eax +
test eax eax +
jnz loc_42BD28  +
mov edx [ebp+var_1C] +
cmp edx ebx +
jnb loc_42BD1F  +
or eax 0FFFFFFFFh +
jmp loc_42BD26  +
xor eax eax +
cmp edx ebx +
setnz al  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_20] al +
test al al +
jz loc_42BD36  +
mov edi [edi] +
jmp loc_42BD39  +
mov edi [edi+8] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_42BC91  +
mov edi [ebp+arg_8] +
mov ecx [ebp+var_18] +
mov edx [ebp+var_28] +
mov ebx [ebp+var_24] +
jmp loc_42BD57  +
mov edi [ebp+arg_8] +
mov [ebp+var_14] edi +
mov esi ecx +
mov [ebp+arg_8] esi +
test al al +
jz loc_42BDA0  +
cmp ecx [edx] +
jnz loc_42BD95  +
push [ebp+arg_C]  +
push ecx  +
push ecx  +
push 1  +
mov ecx ebx +
lea eax [ebp+arg_8] +
push eax  +
call loc_42B9F0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call sub_41F3A0  +
mov esi [ebp+arg_8] +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
mov ebx [edi+10h] +
jb loc_42BDB1  +
mov edi [edi] +
mov [ebp+var_14] edi +
cmp dword ptr [ecx+14h] 10h +
mov edi [ecx+10h] +
jb loc_42BDBC  +
mov ecx [ecx] +
cmp edi ebx +
mov eax ebx +
cmovb eax edi +
push eax  +
push [ebp+var_14]  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_42BDE6  +
cmp edi ebx +
jnb loc_42BDDD  +
or eax 0FFFFFFFFh +
jmp loc_42BDE4  +
xor eax eax +
cmp edi ebx +
setnz al  +
test eax eax +
sets al  +
test al al +
jz loc_42BE10  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+var_18]  +
mov ecx [ebp+var_24] +
push [ebp+var_20]  +
jmp loc_42BD6D  +
push dword ptr [ebp+14h]  +
call sub_42AE00  +
push 0  +
push 0  +
call sub_443DCE  +
mov edi [ebp+arg_C] +
cmp dword ptr [edi+24h] 10h +
jb loc_42BE24  +
push dword ptr [edi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+24h] 0Fh +
mov dword ptr [edi+20h] 0 +
push edi  +
mov byte ptr [edi+10h] 0 +
call sub_43FFF6  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi ecx +
cmp esi edx +
jnz loc_42BEB5  +
cmp dword ptr [edi+14h] 10h +
jb loc_42BE7B  +
mov edx [edi] +
jmp loc_42BE7D  +
mov edx edi +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
test ecx ecx +
jnz loc_42BE8B  +
xor ecx ecx +
jmp loc_42BE8D  +
sub ecx eax +
test eax eax +
jnz loc_42BEA2  +
push ecx  +
push eax  +
mov ecx edi +
call loc_410720  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
push ecx  +
sub eax edx +
mov ecx edi +
push eax  +
call loc_410720  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
cmp dword ptr [edi+14h] 10h +
push ebx  +
jb loc_42BEC0  +
mov ebx [edi] +
jmp loc_42BEC2  +
mov ebx edi +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
test ecx ecx +
jnz loc_42BED0  +
xor ecx ecx +
jmp loc_42BED2  +
sub ecx eax +
test eax eax +
jz loc_42BED8  +
sub eax ebx +
sub edx esi +
push edx  +
push esi  +
push ecx  +
push eax  +
mov ecx edi +
call loc_4115F0  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_45DFB0  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax edx +
mov [ebp+var_3C] eax +
mov edi ecx +
mov [ebp+var_50] edi +
mov esi [ebp+arg_0] +
xor ecx ecx +
dec esi  +
mov [edi] cx +
cmp eax esi +
ja loc_42C229  +
mov al [esi] +
cmp al 30h +
jl loc_42C229  +
cmp al 3Ah +
jge loc_42C229  +
cbw   +
mov ebx 1 +
push ebx  +
sub ax 30h +
mov [ebp+var_38] ebx +
mov [edi] ax +
dec esi  +
mov byte ptr [ebp+var_34] cl +
call sub_43A89D  +
add esp 4 +
mov [ebp+var_4C] eax +
mov [ebp+var_4] 0 +
call sub_43AA26  +
push eax  +
lea ecx [ebp+var_4C] +
call sub_412270  +
test al al +
jnz loc_42C151  +
lea eax [ebp+var_4C] +
push eax  +
call sub_415480  +
add esp 4 +
mov [ebp+var_40] eax +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx eax +
call sub_414F10  +
mov byte ptr [ebp+var_4] bl +
mov eax [ebp+var_1C] +
mov edi [ebp+var_2C] +
mov [ebp+var_48] eax +
test eax eax +
jz loc_42C130  +
cmp [ebp+var_18] 10h +
lea eax [ebp+var_2C] +
cmovnb eax edi +
cmp byte ptr [eax] 0 +
jle loc_42C130  +
mov ecx [ebp+var_40] +
mov [ebp+var_2E] 0 +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov edx [ebp+var_18] +
lea ecx [ebp+var_2C] +
mov edi [ebp+var_2C] +
cmp edx 10h +
mov ah al +
cmovnb ecx edi +
mov [ebp+var_2F] ah +
mov al [ecx] +
mov ecx [ebp+var_3C] +
dec al  +
mov [ebp+var_2D] al +
cmp esi ecx +
jb loc_42C0FF  +
jmp loc_42C000  +
test al al +
jz loc_42C0BF  +
lea eax [ebx+ebx*4] +
add eax eax +
movzx edi ax +
mov [ebp+var_44] eax +
mov ecx edi +
mov eax 66666667h +
mov [ebp+var_40] ecx +
imul  ecx +
movzx eax bx +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_34] +
cmp ecx eax +
movzx edx dl +
mov cl [esi] +
mov eax 1 +
cmovnz edx eax +
movsx ax cl +
mov [ebp+var_34] edx +
sub ax 30h +
movzx ebx ax +
mov eax ebx +
imul eax edi +
movzx edx ax +
mov [ebp+var_38] edx +
cmp cl 30h +
jl loc_42C126  +
cmp cl 3Ah +
jge loc_42C126  +
test bx bx +
jz loc_42C081  +
movzx eax dx +
mov ecx ebx +
cdq   +
idiv  ecx +
cmp eax edi +
jnz loc_42C126  +
mov edx [ebp+var_38] +
mov edi [ebp+var_50] +
mov eax 0FFFFh +
sub eax edx +
movzx ecx word ptr [edi] +
cmp ax cx +
jb loc_42C126  +
cmp byte ptr [ebp+var_34] 0 +
jz loc_42C0A6  +
test bx bx +
jnz loc_42C126  +
lea eax [ecx+edx] +
mov [edi] ax +
mov eax [ebp+var_44] +
mov edi [ebp+var_2C] +
movzx ebx ax +
mov al [ebp+var_2D] +
mov [ebp+var_38] ebx +
add al 0FFh +
jmp loc_42C0EA  +
cmp [esi] ah +
jnz loc_42C130  +
cmp ecx esi +
jz loc_42C129  +
mov ecx [ebp+var_48] +
mov dl [ebp+var_2E] +
dec ecx  +
movzx eax dl +
cmp eax ecx +
jnb loc_42C0DA  +
inc dl  +
mov [ebp+var_2E] dl +
cmp [ebp+var_18] 10h +
lea ecx [ebp+var_2C] +
movzx eax dl +
cmovnb ecx edi +
mov al [eax+ecx] +
mov ecx [ebp+var_3C] +
dec esi  +
mov ah [ebp+var_2F] +
mov [ebp+var_2D] al +
cmp esi ecx +
jnb loc_42C000  +
mov edx [ebp+var_18] +
mov bl 1 +
cmp edx 10h +
jb loc_42C10F  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
jmp loc_42C202  +
mov edi [ebp+var_2C] +
mov edx [ebp+var_18] +
xor bl bl +
jmp loc_42C101  +
cmp [ebp+var_18] 10h +
jb loc_42C13F  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp [ebp+var_3C] esi +
ja loc_42C200  +
lea ebx [ebx+0] +
lea eax [ebx+ebx*4] +
add eax eax +
movzx ebx ax +
mov [ebp+var_44] eax +
mov ecx ebx +
mov eax 66666667h +
mov [ebp+var_48] ecx +
imul  ecx +
mov eax [ebp+var_38] +
mov ecx [ebp+var_34] +
sar edx 2 +
movzx eax ax +
mov edi edx +
shr edi 1Fh +
add edi edx +
movzx ecx cl +
cmp edi eax +
mov eax 1 +
cmovnz ecx eax +
mov byte ptr [ebp+var_34] cl +
mov cl [esi] +
movsx ax cl +
sub ax 30h +
movzx edi ax +
mov eax edi +
imul eax ebx +
movzx ebx ax +
cmp cl 30h +
jl loc_42C225  +
cmp cl 3Ah +
jge loc_42C225  +
test di di +
jz loc_42C1CA  +
mov eax ebx +
mov ecx edi +
cdq   +
idiv  ecx +
cmp eax [ebp+var_48] +
jnz loc_42C225  +
mov edx [ebp+var_50] +
mov eax 0FFFFh +
sub eax ebx +
movzx ecx word ptr [edx] +
cmp ax cx +
jb loc_42C225  +
cmp byte ptr [ebp+var_34] 0 +
jz loc_42C1E7  +
test di di +
jnz loc_42C225  +
lea eax [ecx+ebx] +
dec esi  +
mov [edx] ax +
mov eax [ebp+var_44] +
movzx ebx ax +
mov [ebp+var_38] ebx +
cmp [ebp+var_3C] esi +
jbe loc_42C160  +
mov bl 1 +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_42C221  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_42C221  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov al bl +
jmp loc_42C22B  +
xor bl bl +
jmp loc_42C202  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E008  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp+var_60] ecx +
mov esi [ebp+arg_0] +
xor edi edi +
cmp dword ptr [ecx+10h] 1 +
jnb loc_42C292  +
xor al al +
jmp loc_42C4B8  +
cmp dword ptr [ebx+14h] 10h +
jb loc_42C29C  +
mov eax [ebx] +
jmp loc_42C29E  +
mov eax ebx +
push dword ptr [ebx+10h]  +
push edi  +
push eax  +
call sub_42C520  +
cmp dword ptr [ebx+14h] 10h +
mov [ebp+var_64] eax +
jb loc_42C2B5  +
mov ecx [ebx] +
jmp loc_42C2B7  +
mov ecx ebx +
push dword ptr [ebx+10h]  +
push edi  +
push ecx  +
mov ecx [ebp+var_60] +
call sub_42C5A0  +
mov ecx [ebp+var_64] +
cmp ecx 0FFFFFFFFh +
jz loc_42C458  +
cmp eax 0FFFFFFFFh +
jz loc_42C34D  +
cmp eax ecx +
jnb loc_42C320  +
sub ecx edi +
lea eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_60] +
push edi  +
push eax  +
call sub_427040  +
mov [ebp+var_4] 0 +
push eax  +
mov ecx esi +
call sub_410360  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_30] 10h +
jb loc_42C44C  +
push [ebp+var_44]  +
call sub_43FFF6  +
mov edi [ebp+var_64] +
add esp 4 +
mov ecx [ebp+var_60] +
inc edi  +
jmp loc_42C292  +
push 0  +
push (offset asc_4696CC+2)  +
lea ecx [ebp+var_44] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
call loc_4109B0  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_44] +
jmp loc_42C2F0  +
push 0  +
push (offset asc_4696CC+2)  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_4109B0  +
mov [ebp+var_4] 2 +
lea eax [ebp+var_2C] +
mov edi [esi+4] +
cmp eax edi +
jnb loc_42C3C5  +
mov eax [esi] +
lea ecx [ebp+var_2C] +
cmp eax ecx +
ja loc_42C3C5  +
sub ecx eax +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp+var_68] eax +
cmp edi [esi+8] +
jnz loc_42C3AE  +
push ecx  +
mov ecx esi +
call loc_410910  +
mov eax [ebp+var_68] +
lea ecx [eax+eax*2] +
mov eax [esi] +
lea eax [eax+ecx*8] +
mov ecx [esi+4] +
test ecx ecx +
jz loc_42C430  +
push eax  +
call sub_410130  +
jmp loc_42C430  +
cmp edi [esi+8] +
jnz loc_42C3D2  +
push ecx  +
mov ecx esi +
call loc_410910  +
mov edi [esi+4] +
test edi edi +
jz loc_42C430  +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp [ebp+var_18] 10h +
jnb loc_42C406  +
mov eax [ebp+var_1C] +
inc eax  +
jz loc_42C412  +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_42C412  +
mov eax [ebp+var_2C] +
mov [edi] eax +
mov [ebp+var_2C] 0 +
mov eax [ebp+var_1C] +
mov [edi+10h] eax +
mov eax [ebp+var_18] +
mov [edi+14h] eax +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
add dword ptr [esi+4] 18h +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] 10h +
jb loc_42C44C  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov edi [ebp+var_64] +
mov ecx [ebp+var_60] +
inc edi  +
jmp loc_42C292  +
cmp eax 0FFFFFFFFh +
jz loc_42C486  +
mov ecx [ebp+var_60] +
lea eax [ebp+var_44] +
push 0FFFFFFFFh  +
push edi  +
push eax  +
call sub_427040  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 3 +
call sub_410360  +
cmp [ebp+var_30] 10h +
jb loc_42C4B6  +
push [ebp+var_44]  +
jmp loc_42C4AE  +
push (offset asc_4696CC+2)  +
lea ecx [ebp+var_5C] +
call sub_4100D0  +
lea eax [ebp+var_5C] +
mov [ebp+var_4] 4 +
push eax  +
mov ecx esi +
call sub_410360  +
cmp [ebp+var_48] 10h +
jb loc_42C4B6  +
push [ebp+var_5C]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
xor eax eax +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 7 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_410ED0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_42C580  +
mov eax [edi+10h] +
mov edx [ebp+arg_4] +
cmp edx eax +
jnb loc_42C580  +
mov ecx [edi+14h] +
cmp ecx 10h +
jb loc_42C545  +
mov esi [edi] +
jmp loc_42C547  +
mov esi edi +
add eax esi +
mov [ebp+arg_8] eax +
cmp ecx 10h +
jb loc_42C555  +
mov ecx [edi] +
jmp loc_42C557  +
mov ecx edi +
lea esi [ecx+edx] +
cmp esi eax +
jnb loc_42C580  +
mov edi edi +
test ebx ebx +
jz loc_42C57B  +
movsx eax byte ptr [esi] +
push ebx  +
push eax  +
push [ebp+arg_0]  +
call sub_440D80  +
add esp 0Ch +
test eax eax +
jnz loc_42C58A  +
mov eax [ebp+arg_8] +
inc esi  +
cmp esi eax +
jb loc_42C560  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edi+14h] 10h +
jb loc_42C592  +
mov edi [edi] +
sub esi edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov edx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
mov [ebp+var_4] eax +
cmp edx eax +
jnb loc_42C604  +
mov ecx [edi+14h] +
cmp ecx 10h +
jb loc_42C5C5  +
mov ebx [edi] +
mov [ebp+arg_4] ebx +
jmp loc_42C5CA  +
mov ebx edi +
mov [ebp+arg_4] edi +
add eax ebx +
cmp ecx 10h +
jb loc_42C5D5  +
mov ecx [edi] +
jmp loc_42C5D7  +
mov ecx edi +
lea esi [ecx+edx] +
cmp esi eax +
jnb loc_42C604  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jz loc_42C610  +
movsx eax byte ptr [esi] +
push ebx  +
push eax  +
push [ebp+arg_0]  +
call sub_440D80  +
add esp 0Ch +
test eax eax +
jz loc_42C610  +
mov eax [ebp+var_4] +
inc esi  +
add eax [ebp+arg_4] +
cmp esi eax +
jb loc_42C5E1  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edi+14h] 10h +
jb loc_42C618  +
mov edi [edi] +
sub esi edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx ecx +
mov eax [ebx+10h] +
test edx edx +
jnz loc_42C651  +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
pop ebx  +
cmova eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push esi  +
or ecx 0FFFFFFFFh +
push edi  +
cmp edx eax +
ja loc_42C6CB  +
sub eax edx +
cmp eax ecx +
cmova eax ecx +
cmp dword ptr [ebx+14h] 8 +
jb loc_42C66B  +
mov ecx [ebx] +
jmp loc_42C66D  +
mov ecx ebx +
lea edi [ecx+eax*2] +
cmp word ptr [edi] 2Eh +
jnz loc_42C6B5  +
cmp [ebp+arg_8] 0 +
mov esi edx +
mov edx offset a__2 +
mov eax edi +
jbe loc_42C696  +
mov cx [eax] +
cmp cx [edx] +
jnz loc_42C6AD  +
add eax 2 +
add edx 2 +
dec esi  +
jnz loc_42C685  +
cmp dword ptr [ebx+14h] 8 +
jb loc_42C69E  +
mov ebx [ebx] +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jz loc_42C696  +
mov ecx ebx +
call sub_4108C0  +
cmp edi eax +
jz loc_42C6C8  +
mov edx [ebp+arg_8] +
sub edi 2 +
jmp loc_42C670  +
or ecx 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45E04B  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+14h] 0 +
xor eax eax +
mov [ebp+var_4] 0 +
push eax  +
push offset unk_469720  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 7 +
mov [ebp+var_1C] 0 +
mov word ptr [ebp+var_2C] ax +
call loc_410BB0  +
lea edi [esi+18h] +
mov [ebp+var_14] edi +
xor eax eax +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 2 +
cmp edi eax +
jz loc_42C76C  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
call loc_410ED0  +
lea eax [edi+18h] +
push eax  +
call ds:InitializeCriticalSection  +
cmp [ebp+var_18] 8 +
jb loc_42C787  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [esi+10h] 0 +
mov eax esi +
mov dword ptr [esi+0Ch] 0FFFFh +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [esi+30h] +
push eax  +
call ds:DeleteCriticalSection  +
cmp dword ptr [esi+2Ch] 8 +
jb loc_42C7DE  +
push dword ptr [esi+18h]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+2Ch] 7 +
mov dword ptr [esi+28h] 0 +
mov [esi+18h] ax +
mov eax [esi+14h] +
test eax eax +
jz loc_42C80B  +
push eax  +
call ds:FreeLibrary  +
test eax eax +
jz loc_42C80B  +
mov dword ptr [esi+14h] 0 +
push esi  +
mov dword ptr [esi+14h] 0 +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
mov ecx [ebp-14h] +
sub esp 18h +
mov ecx esp +
push offset aAdobeupdate_15  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
mov eax offset loc_42C885 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E0B0  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
sub esp 18h +
mov ecx esp +
push 2Fh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdatergo  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
xor eax eax +
mov [ebp+var_14] 7 +
add esp 1Ch +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
lea edx [eax+11h] +
mov [ebp+var_4] eax +
lea ecx [ebp+var_28] +
call sub_436240  +
push 20h  +
xor eax eax +
mov [ebp+var_2C] 7 +
push offset aAdobegcclientA  +
lea ecx [ebp+var_40] +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
call loc_410BB0  +
push ecx  +
lea edx [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_28] +
call sub_436460  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_2C] 8 +
jb loc_42C9D8  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
call sub_42CA10  +
cmp [ebp+var_14] 8 +
jb loc_42C9F4  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E0F0  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+lpWideCharStr] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_42CA62  +
mov ecx [edi] +
jmp loc_42CA64  +
mov ecx edi +
push ecx  +
lea edx [ebp+var_2C] +
call sub_435C80  +
add esp 4 +
cmp dword ptr [esi+14h] 0 +
jnz loc_42CAFE  +
cmp dword ptr [edi+14h] 8 +
jb loc_42CA82  +
mov edi [edi] +
push edi  +
call ds:LoadLibraryW  +
mov [esi+14h] eax +
test eax eax +
jnz loc_42CAFE  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_40] esp +
push 0FFFFFFFFh  +
mov [ecx+10h] eax +
mov dword ptr [ecx+14h] 0Fh +
push eax  +
mov [ecx] al +
lea eax [ebp+var_2C] +
push eax  +
call loc_4105F0  +
sub esp 18h +
mov byte ptr [ebp+var_4] 1 +
mov ecx esp +
push 45h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_0  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
mov byte ptr [ebp+var_4] 0 +
call sub_4389F7  +
add esp 34h +
lea ecx [ebp+var_3C] +
call sub_440669  +
push offset unk_472330  +
lea eax [ebp+var_3C] +
push eax  +
call sub_443DCE  +
cmp dword ptr [esi] 0 +
mov edi ds:GetProcAddress +
jnz loc_42CB3F  +
mov ecx [esi+14h] +
xor eax eax +
test ecx ecx +
jz loc_42CB1A  +
push offset ProcName  +
push ecx  +
call edi  +
mov [esi] eax +
test eax eax +
jnz loc_42CB3F  +
sub esp 18h +
mov ecx esp +
push offset aAdobeupdater_1  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
jmp loc_42CAE8  +
cmp dword ptr [esi+4] 0 +
jnz loc_42CB7F  +
mov ecx [esi+14h] +
xor eax eax +
test ecx ecx +
jz loc_42CB56  +
push offset aAdobe_gc_invok  +
push ecx  +
call edi  +
mov [esi+4] eax +
test eax eax +
jnz loc_42CB7F  +
sub esp 18h +
mov ecx esp +
push offset aAdobeupdater_2  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
jmp loc_42CAE8  +
cmp dword ptr [esi+8] 0 +
jnz loc_42CBBF  +
mov ecx [esi+14h] +
xor eax eax +
test ecx ecx +
jz loc_42CB96  +
push offset aAdobe_gc_relea  +
push ecx  +
call edi  +
mov [esi+8] eax +
test eax eax +
jnz loc_42CBBF  +
sub esp 18h +
mov ecx esp +
push offset aAdobeupdater_3  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
jmp loc_42CAE8  +
cmp [ebp+var_18] 10h +
jb loc_42CBD0  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
push 3Bh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_4  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
lea eax [ebp-28h] +
mov dword ptr [ebp-28h] 4 +
push offset sub_42CCC0  +
push eax  +
mov eax [esi] +
mov dword ptr [ebp-24h] offset aCsupdater +
mov dword ptr [ebp-20h] offset a9_0_0_30 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
call eax  +
add esp 24h +
cmp eax 102h +
jnz loc_42CC6C  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
sub esp 18h +
mov ecx esp +
push 50h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_5  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438A98  +
add esp 20h +
lea ecx [ebp-10h] +
call sub_440669  +
push offset unk_472330  +
lea eax [ebp-10h] +
push eax  +
call sub_443DCE  +
push 0FFFFFFFFh  +
push offset loc_45E136  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi dword_478070 +
test edi edi +
jnz loc_42CD1D  +
push 48h  +
call sub_440048  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] edi +
test eax eax +
jz loc_42CD0E  +
mov ecx eax +
call sub_42C6E0  +
mov edi eax +
jmp loc_42CD10  +
xor edi edi +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_478070 edi +
lea esi [edi+30h] +
push esi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
push esi  +
mov [edi+0Ch] eax +
call ds:LeaveCriticalSection  +
mov edi dword_478070 +
test edi edi +
jnz loc_42CD69  +
push 48h  +
call sub_440048  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 1 +
test eax eax +
jz loc_42CD61  +
mov ecx eax +
call sub_42C6E0  +
mov edi eax +
jmp loc_42CD63  +
xor edi edi +
mov dword_478070 edi +
lea esi [edi+30h] +
push esi  +
call ds:EnterCriticalSection  +
push esi  +
mov byte ptr [edi+10h] 1 +
call ds:LeaveCriticalSection  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
sub esp 18h +
mov edi ecx +
mov ecx esp +
push 37h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_6  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
lea esi [edi+30h] +
push esi  +
call ds:EnterCriticalSection  +
mov bl [edi+10h] +
push esi  +
call ds:LeaveCriticalSection  +
test bl bl +
jnz loc_42CE03  +
push 3E8h  +
call ds:Sleep  +
push esi  +
call ds:EnterCriticalSection  +
mov bl [edi+10h] +
push esi  +
call ds:LeaveCriticalSection  +
test bl bl +
jz loc_42CDE3  +
sub esp 18h +
mov ecx esp +
push 3Dh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_7  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
push esi  +
call ds:EnterCriticalSection  +
mov edi [edi+0Ch] +
push esi  +
call ds:LeaveCriticalSection  +
test edi edi +
jnz loc_42CE4F  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
sub esp 18h +
mov ecx esp +
push 47h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_8  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438A98  +
add esp 20h +
lea ecx [ebp-10h] +
call sub_440669  +
push offset unk_472330  +
lea eax [ebp-10h] +
push eax  +
call sub_443DCE  +
sub esp 10h +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
push 38h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdater_9  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
lea eax [ebp+var_10] +
mov [ebp+var_10] 4 +
push eax  +
mov eax [esi+4] +
mov [ebp+var_C] offset aCsupdater +
mov [ebp+var_8] 0 +
call eax  +
add esp 20h +
test eax eax +
jz loc_42CF2C  +
push eax  +
sub esp 18h +
mov ecx esp +
push 4Bh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdate_10  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438A98  +
add esp 20h +
sub esp 18h +
mov ecx esp +
push 37h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdate_11  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
mov eax [esi+8] +
add esp 1Ch +
call eax  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
push 2Dh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdate_12  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
cmp dword ptr [esi+14h] 0 +
jz loc_42CFF6  +
mov eax [esi+14h] +
test eax eax +
jz loc_42CFC6  +
push eax  +
call ds:FreeLibrary  +
test eax eax +
jz loc_42CFC6  +
mov dword ptr [esi+14h] 0 +
sub esp 18h +
mov ecx esp +
push 34h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAdobeupdate_13  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 84h +
mov eax dword_474390 +
xor eax esp +
mov [esp+84h+var_4] eax +
push ebx  +
push esi  +
push edi  +
push offset unk_469720  +
call ds:SetDllDirectoryW  +
call sub_42D470  +
lea eax [esp+94h+pNumArgs] +
mov [esp+94h+pNumArgs] 0 +
push eax  +
xor bl bl +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
cmp [esp+94h+pNumArgs] 1 +
jle loc_42D240  +
mov edx [eax+4] +
xor eax eax +
mov [esp+94h+var_C] 7 +
mov [esp+94h+var_10] 0 +
mov word ptr [esp+94h+var_20] ax +
cmp [edx] ax +
jnz loc_42D07D  +
xor ecx ecx +
jmp loc_42D091  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42D082  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+9Ch+var_20] +
call loc_410BB0  +
lea eax [esp+9Ch+var_28] +
push eax  +
lea eax [esp+0A0h+var_40] +
push eax  +
call sub_437E33  +
add esp 8 +
cmp [esp+9Ch+var_14] 8 +
jb loc_42D0C4  +
push [esp+9Ch+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov eax [esp+9Ch+var_30] +
inc eax  +
push eax  +
call sub_43AC2F  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_42D103  +
mov ecx [esp+9Ch+var_30] +
lea eax [esp+9Ch+var_40] +
cmp [esp+9Ch+var_2C] 10h +
cmovnb eax [esp+9Ch+var_40] +
lea edx [ecx+1] +
test edx edx +
jz loc_42D103  +
cmp edx 7FFFFFFFh +
ja loc_42D103  +
push ecx  +
push eax  +
push ecx  +
mov ecx esi +
call sub_411D30  +
mov [esp+9Ch+var_74] 0Fh +
mov [esp+9Ch+var_78] 0 +
mov byte ptr [esp+9Ch+var_88] 0 +
cmp byte ptr [esi] 0 +
jnz loc_42D121  +
xor ecx ecx +
jmp loc_42D12F  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_42D126  +
sub ecx edx +
push ecx  +
push esi  +
lea ecx [esp+0A4h+var_88] +
call loc_4109B0  +
xor ecx ecx +
mov [esp+0A4h+var_64] 0Fh +
cmp ds:byte_469DBC cl +
mov eax 0Fh +
mov [esp+0A4h+var_68] 0 +
cmovz eax ecx +
mov byte ptr [esp+0A4h+var_78] 0 +
push eax  +
push offset byte_469DBC  +
lea ecx [esp+0ACh+var_78] +
call loc_4109B0  +
cmp [esp+0ACh+var_6C] 10h +
lea edx [esp+0ACh+var_80] +
mov edi [esp+0ACh+var_70] +
lea ecx [esp+0ACh+var_98] +
cmovnb edx [esp+0ACh+var_80] +
mov eax edi +
cmp [esp+0ACh+pNumArgs] 10h +
cmovnb ecx [esp+0ACh+var_98] +
cmp [esp+0ACh+var_88] edi +
cmovb eax [esp+0ACh+var_88] +
push eax  +
push edx  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_42D1B5  +
mov ecx [esp+0ACh+var_88] +
cmp ecx edi +
jb loc_42D1C2  +
cmp ecx edi +
setnz al  +
test eax eax +
movzx ebx bl +
mov ecx 1 +
cmovz ebx ecx +
push esi  +
call sub_440842  +
add esp 4 +
cmp [esp+0ACh+var_6C] 10h +
jb loc_42D1DE  +
push [esp+0ACh+var_80]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0ACh+pNumArgs] 10h +
mov [esp+0ACh+var_6C] 0Fh +
mov [esp+0ACh+var_70] 0 +
mov byte ptr [esp+0ACh+var_80] 0 +
jb loc_42D206  +
push [esp+0ACh+var_98]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0ACh+var_3C] 10h +
mov [esp+0ACh+pNumArgs] 0Fh +
mov [esp+0ACh+var_88] 0 +
mov byte ptr [esp+0ACh+var_98] 0 +
jb loc_42D22E  +
push [esp+0ACh+var_50]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_42D240  +
sub esp 18h +
mov ecx esp +
push 2Ah  +
push offset aStartuputility  +
jmp loc_42D24C  +
sub esp 18h +
mov ecx esp +
push 29h  +
push offset aStartuputili_0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
call sub_42DE80  +
test al al +
jnz loc_42D2A8  +
sub esp 18h +
mov ecx esp +
push 32h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aStartuputili_1  +
mov [ecx] al +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
lea ecx [esp+0A4h+var_60] +
mov [esp+0A4h+var_4C] 0Fh +
mov [esp+0A4h+var_50] 0 +
mov byte ptr [esp+0A4h+var_60] 0 +
call sub_4232C0  +
test al al +
jnz loc_42D303  +
sub esp 18h +
mov ecx esp +
push 4Ch  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aStartuputili_2  +
mov [ecx] al +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
mov esi 1 +
jmp loc_42D43D  +
test bl bl +
jnz loc_42D34A  +
call sub_42D930  +
sub esp 18h +
mov ecx esp +
test al al +
jnz loc_42D332  +
push offset aStartuputili_3  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
jmp loc_42D3D0  +
push offset aStartuputili_4  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
cmp [esp+0A4h+var_4C] 10h +
lea edx [esp+0A4h+var_60] +
cmovnb edx [esp+0A4h+var_60] +
sub esp 18h +
mov esi esp +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_42D377  +
xor ecx ecx +
jmp loc_42D389  +
mov ecx edx +
lea edi [ecx+1] +
lea esp [esp+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_42D380  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call loc_4109B0  +
sub esp 18h +
mov ecx esp +
push 31h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aStartuputili_5  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_4389F7  +
add esp 34h +
lea ecx [esp+0B4h+var_70] +
mov edx offset unk_47806C +
call sub_42DAC0  +
mov eax dword_478070 +
test eax eax +
jnz loc_42D3F7  +
push 48h  +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_42D3F0  +
mov ecx eax +
call sub_42C6E0  +
jmp loc_42D3F2  +
xor eax eax +
mov dword_478070 eax +
mov ecx eax +
call sub_42C830  +
mov eax dword_478070 +
test eax eax +
jnz loc_42D429  +
push 48h  +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_42D41E  +
mov ecx eax +
call sub_42C6E0  +
jmp loc_42D420  +
xor eax eax +
mov dword_478070 eax +
test eax eax +
jz loc_42D431  +
push ecx  +
mov ecx eax +
call sub_42C7C0  +
mov dword_478070 0 +
xor esi esi +
cmp [esp+0B4h+var_5C] 10h +
jb loc_42D450  +
push [esp+0B4h+var_70]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [esp+0B4h+var_28] +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_45E1F6  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_478314 +
test al 1 +
jnz loc_42D984  +
or eax 1 +
mov dword_478314 eax +
push ecx  +
mov [ebp+var_4] 0 +
call loc_4239C0  +
push offset loc_45F9E0  +
call sub_43FFBF  +
add esp 4 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
lea eax [ebp+var_28] +
mov [ebp+var_4] 1 +
push eax  +
mov eax dword_4785F0 +
mov ecx offset dword_4785F0 +
call dword ptr [eax+4]  +
cmp [ebp+var_14] 10h +
lea ecx [ebp+var_40] +
push 0  +
lea eax [ebp+var_28] +
mov [ebp+var_2C] 0Fh +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_42D9E6  +
cmp [ebp+var_18] eax +
setnz al  +
test eax eax +
setz al  +
test al al +
jz loc_42DA11  +
sub esp 18h +
mov ecx esp +
push 2Ah  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aUpdaterHasNeve  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
jmp loc_42DA3E  +
lea eax [ebp+var_44] +
mov [ebp+var_44] 0 +
push eax  +
mov eax dword_4785CC +
mov ecx offset dword_4785CC +
call dword ptr [eax+4]  +
cmp [ebp+var_44] 3 +
jnz loc_42DA50  +
sub esp 18h +
mov ecx esp +
push offset aScheduledCheck  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
xor bl bl +
jmp loc_42DA84  +
mov ecx offset dword_478320 +
call sub_426B20  +
mov bl al +
sub esp 18h +
mov ecx esp +
test bl bl +
jz loc_42DA6C  +
push offset aScheduledChe_0  +
jmp loc_42DA71  +
push offset aScheduledChe_1  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
cmp [ebp+var_14] 10h +
jb loc_42DA95  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E25B  +
mov eax large fs:0 +
push eax  +
sub esp 0D8h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax edx +
mov [ebp+var_84] eax +
mov esi ecx +
mov [ebp+var_80] esi +
mov [ebp+var_64] 0Fh +
mov [ebp+var_68] 0 +
mov byte ptr [ebp+var_78] 0 +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_42DBC7  +
xor edi edi +
cmp [eax] edi +
jz loc_42DBC7  +
mov esi eax +
jmp loc_42DB30  +
push 1  +
push offset unk_46984C  +
lea ecx [ebp+var_48] +
mov [ebp+var_34] 0Fh +
mov [ebp+var_38] 0 +
mov byte ptr [ebp+var_48] 0 +
call loc_4109B0  +
lea eax [ebp+var_48] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
push dword ptr [esi]  +
lea eax [ebp+var_28] +
push eax  +
call sub_4153E0  +
add esp 0Ch +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_78] +
mov byte ptr [ebp+var_4] 2 +
call loc_410440  +
cmp [ebp+var_14] 10h +
jb loc_42DB89  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_34] 10h +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
jb loc_42DBB0  +
push [ebp+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_84] +
inc edi  +
cmp dword ptr [eax+edi*4] 0 +
lea esi [eax+edi*4] +
jnz loc_42DB30  +
mov esi [ebp+var_80] +
push esi  +
lea eax [ebp+var_48] +
push offset asc_46A90C  +
push eax  +
call sub_429530  +
push offset asc_46A90C  +
push eax  +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call sub_42E110  +
mov edi eax +
add esp 18h +
cmp esi edi +
jz loc_42DC53  +
cmp dword ptr [esi+14h] 10h +
jb loc_42DC02  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp dword ptr [edi+14h] 10h +
jnb loc_42DC2C  +
mov eax [edi+10h] +
inc eax  +
jz loc_42DC36  +
push eax  +
push edi  +
push esi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_42DC36  +
mov eax [edi] +
mov [esi] eax +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp [ebp+var_14] 10h +
jb loc_42DC64  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_34] 10h +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
jb loc_42DC8B  +
push [ebp+var_48]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_68] 0 +
jbe loc_42DCE9  +
push 1  +
push offset unk_46984C  +
lea ecx [ebp+var_48] +
mov [ebp+var_34] 0Fh +
mov [ebp+var_38] 0 +
mov byte ptr [ebp+var_48] 0 +
call loc_4109B0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+var_48] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov ecx esi +
call loc_410440  +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_34] 10h +
jb loc_42DCDA  +
push [ebp+var_48]  +
call sub_43FFF6  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+var_78] +
mov ecx esi +
push eax  +
call loc_410440  +
cmp dword ptr [esi+14h] 10h +
jb loc_42DCF3  +
mov edi [esi] +
jmp loc_42DCF5  +
mov edi esi +
sub esp 18h +
mov edx esp +
mov [ebp+var_84] esp +
mov dword ptr [edx+14h] 0Fh +
mov dword ptr [edx+10h] 0 +
mov byte ptr [edx] 0 +
cmp byte ptr [edi] 0 +
jnz loc_42DD1A  +
xor ecx ecx +
jmp loc_42DD2C  +
mov ecx edi +
lea eax [ecx+1] +
mov [ebp+var_80] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_42DD22  +
sub ecx [ebp+var_80] +
push ecx  +
push edi  +
mov ecx edx +
call loc_4109B0  +
sub esp 18h +
mov byte ptr [ebp+var_4] 5 +
mov ecx esp +
push 18h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aAppLaunchedIsU  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
mov byte ptr [ebp+var_4] 0 +
call sub_4389F7  +
lea eax [ebp+lpCommandLine] +
push esi  +
push eax  +
call sub_437CC3  +
push 44h  +
lea eax [ebp+StartupInfo] +
mov byte ptr [ebp+var_4] 6 +
push 0  +
push eax  +
call sub_442C20  +
add esp 48h +
mov [ebp+StartupInfo.cb] 44h +
cmp [ebp+var_4C] 10h +
lea ecx [ebp+ProcessInformation] +
lea eax [ebp+lpCommandLine] +
xorps xmm0 xmm0 +
cmovnb eax [ebp+lpCommandLine] +
push ecx  +
lea ecx [ebp+StartupInfo] +
push ecx  +
push 0  +
push 0  +
push 400h  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
movdqu qword ptr [ebp+ProcessInformation.hProcess] xmm0 +
call ds:CreateProcessW  +
test eax eax +
jnz loc_42DE27  +
call ds:GetLastError  +
push eax  +
lea eax [ebp+var_30] +
push offset aD  +
push eax  +
call sub_440744  +
add esp 0Ch +
lea eax [ebp+var_30] +
push eax  +
sub esp 18h +
mov ecx esp +
push 26h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aCreateprocessF  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438B53  +
add esp 20h +
mov [ebp+var_79] 0 +
jmp loc_42DE2B  +
mov [ebp+var_79] 1 +
cmp [ebp+var_4C] 10h +
jb loc_42DE3C  +
push [ebp+lpCommandLine]  +
call sub_43FFF6  +
add esp 4 +
cmp [ebp+var_64] 10h +
mov [ebp+var_4C] 0Fh +
mov [ebp+var_50] 0 +
mov byte ptr [ebp+lpCommandLine] 0 +
jb loc_42DE5F  +
push [ebp+var_78]  +
call sub_43FFF6  +
add esp 4 +
mov al [ebp+var_79] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E2AE  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
sub esp 18h +
mov ecx esp +
push 47h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aUpdaterstartup  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629BC  +
call sub_438BF5  +
mov bl 1 +
mov [ebp+var_4] 0 +
mov eax dword_478310 +
add esp 1Ch +
test al bl +
jnz loc_42DF11  +
or eax 1 +
mov dword_478310 eax +
mov byte ptr [ebp+var_4] bl +
call loc_41BA30  +
push offset loc_45F790  +
call sub_43FFBF  +
add esp 4 +
mov byte ptr [ebp+var_4] 0 +
lea eax [ebp+var_2E+1] +
mov byte ptr [ebp+var_2E+1] 0 +
push eax  +
mov eax dword_4782E8 +
mov ecx offset dword_4782E8 +
mov eax [eax+4] +
call eax  +
sub esp 18h +
mov ecx esp +
test al al +
jnz loc_42DF83  +
push 58h  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aErrorCheckifup  +
mov [ecx] al +
call loc_4109B0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
mov [ebp+var_34] offset aFailedToGetAdm +
lea eax [ebp+var_34] +
lea ecx [ebp+var_40] +
push eax  +
call sub_440606  +
push offset unk_4720E8  +
lea eax [ebp+var_40] +
mov [ebp+var_40] offset off_4626A4 +
push eax  +
call sub_443DCE  +
cmp byte ptr [ebp+var_2E+1] 0 +
jz loc_42DFA8  +
push offset aCheckifupdater  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
xor bl bl +
jmp loc_42E078  +
push offset aUpdaterIsNotSu  +
call sub_4100D0  +
push ds:dword_4629BC  +
call sub_438BF5  +
add esp 1Ch +
lea eax [ebp+var_2E+2] +
push eax  +
call sub_436BCD  +
add esp 4 +
lea eax [ebp+var_2E+2] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea ecx [ebp+var_4C] +
call sub_437FB6  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_4C] +
cmp dword ptr [eax] 6 +
jl loc_42E057  +
call sub_40FD30  +
test eax eax +
jnz loc_42E057  +
sub esp 18h +
mov ecx esp +
push offset aNonAdminUserOn  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
call sub_40FF70  +
test al al +
jnz loc_42E057  +
sub esp 18h +
mov ecx esp +
push offset aUacIsDisbled_  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
mov byte ptr [ebp+var_2E+1] 1 +
sub esp 18h +
mov ecx esp +
push offset aCheckifupdater  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
xor bl bl +
lea ecx [ebp+var_4C] +
mov byte ptr [ebp+var_4] 2 +
call sub_438033  +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_18] 10h +
jb loc_42E078  +
push [ebp+var_2E+2]  +
call sub_43FFF6  +
add esp 4 +
cmp byte ptr [ebp+var_2E+1] 0 +
jnz loc_42E09B  +
sub esp 18h +
mov ecx esp +
push offset aUcisupdaterena  +
call sub_4100D0  +
push ds:dword_4629B8  +
call sub_438BF5  +
add esp 1Ch +
mov [ebp+var_4] 0FFFFFFFFh +
jmp loc_42E0B8  +
mov byte ptr [ebp-2Dh] 0 +
mov eax offset loc_42E0AE +
retn   +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov bl [ebp-2Dh] +
movzx eax bl +
push eax  +
sub esp 18h +
mov ecx esp +
push 5Eh  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push offset aUpdaterstart_0  +
mov byte ptr [ecx] 0 +
call loc_4109B0  +
push ds:dword_4629BC  +
call sub_438A98  +
add esp 20h +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
push esi  +
push edi  +
mov [ebp+var_4] 0 +
cmp byte ptr [edx] 0 +
jnz loc_42E129  +
xor ecx ecx +
jmp loc_42E139  +
mov ecx edx +
lea esi [ecx+1] +
mov edi edi +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_42E130  +
sub ecx esi +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
call loc_410500  +
mov edi [ebp+arg_0] +
mov esi eax +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_42E172  +
mov eax [esi+10h] +
inc eax  +
jz loc_42E17C  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_42E17C  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov ecx [esi+10h] +
mov eax edi +
mov [edi+10h] ecx +
mov ecx [esi+14h] +
mov [edi+14h] ecx +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 67452301h +
mov dword ptr [eax+0Ch] 0EFCDAB89h +
mov dword ptr [eax+10h] 98BADCFEh +
mov dword ptr [eax+14h] 10325476h +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
movzx ecx si +
mov edx [ebx] +
mov eax edx +
shr eax 3 +
and eax 3Fh +
lea ecx [edx+ecx*8] +
cmp ecx edx +
jnb loc_42E21F  +
inc dword ptr [ebx+4]  +
mov [ebx] ecx +
test si si +
jz loc_42E2AB  +
push edi  +
mov edi [ebp+arg_4] +
mov edi edi +
mov cl [edi] +
add esi 0FFFFh +
movsx edx ax +
inc edi  +
inc eax  +
mov [ebp+arg_8] esi +
mov [ebp+arg_4] edi +
mov [edx+ebx+18h] cl +
cmp ax 40h +
jnz loc_42E2A5  +
xor esi esi +
mov [ebp+var_48] 10h +
lea edi [ebp+var_44] +
lea esp [esp+0] +
movzx ecx si +
lea edi [edi+4] +
add ecx ebx +
add esi 4 +
movzx edx byte ptr [ecx+1Bh] +
movzx eax byte ptr [ecx+1Ah] +
shl edx 8 +
or edx eax +
movzx eax byte ptr [ecx+19h] +
shl edx 8 +
or edx eax +
movzx eax byte ptr [ecx+18h] +
shl edx 8 +
or edx eax +
dec [ebp+var_48]  +
mov [edi-4] edx +
jnz loc_42E260  +
lea ecx [ebx+8] +
lea edx [ebp+var_44] +
call sub_42E3A0  +
mov esi [ebp+arg_8] +
xor eax eax +
mov edi [ebp+arg_4] +
test si si +
jnz loc_42E230  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx [esi] +
mov eax [esi+4] +
mov [ebp+var_C] ecx +
shr ecx 3 +
and ecx 3Fh +
mov [ebp+var_8] eax +
mov eax 38h +
cmp cx 38h +
jl loc_42E2F7  +
mov eax 78h +
sub eax ecx +
movzx eax ax +
push eax  +
push offset unk_475758  +
push esi  +
call sub_42E1F0  +
add esp 0Ch +
mov [ebp+var_48] 0Eh +
xor edi edi +
lea ebx [ebp+var_44] +
movzx ecx di +
lea ebx [ebx+4] +
add ecx esi +
add edi 4 +
movzx edx byte ptr [ecx+1Bh] +
movzx eax byte ptr [ecx+1Ah] +
shl edx 8 +
or edx eax +
movzx eax byte ptr [ecx+19h] +
shl edx 8 +
or edx eax +
movzx eax byte ptr [ecx+18h] +
shl edx 8 +
or edx eax +
dec [ebp+var_48]  +
mov [ebx-4] edx +
jnz loc_42E317  +
lea ecx [esi+8] +
lea edx [ebp+var_44] +
call sub_42E3A0  +
xor edi edi +
lea edx [esi+9] +
lea ebx [edi+4] +
lea esp [esp+0] +
movzx eax byte ptr [edx-1] +
lea edx [edx+4] +
movzx ecx di +
add edi 4 +
add ecx esi +
mov [ecx+58h] al +
movzx eax byte ptr [edx-4] +
mov [ecx+59h] al +
movzx eax byte ptr [edx-3] +
mov [ecx+5Ah] al +
movzx eax byte ptr [edx-2] +
mov [ecx+5Bh] al +
dec ebx  +
jnz loc_42E360  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 54h +
push ebx  +
mov ebx edx +
mov edx ecx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
mov ecx [edx+4] +
not ecx  +
push esi  +
mov esi [edx] +
mov eax [eax+8] +
push edi  +
mov edi [edx+0Ch] +
and ecx edi +
mov edx [ebx] +
mov ebx [ebp+var_8] +
mov [ebp+var_38] edx +
and eax [ebx+4] +
or ecx eax +
add ecx edx +
lea edx [esi-28955B88h] +
add edx ecx +
mov ecx ebx +
mov ebx [ebp+var_4] +
rol edx 7 +
mov eax [ecx+4] +
add edx eax +
mov esi [ebx+4] +
and eax edx +
mov ebx [ebp+var_8] +
mov ecx edx +
not ecx  +
mov [ebp+var_40] esi +
and ecx [ebx+8] +
mov ebx [ebp+var_4] +
or ecx eax +
add ecx esi +
lea esi [edi-173848AAh] +
add esi ecx +
rol esi 0Ch +
mov edi [ebx+8] +
add esi edx +
mov ebx [ebp+var_8] +
mov ecx esi +
not ecx  +
mov [ebp+var_44] edi +
mov eax esi +
and eax edx +
and ecx [ebx+4] +
or ecx eax +
mov eax esi +
add ecx edi +
mov edi ebx +
mov ebx [ebp+var_4] +
mov edi [edi+8] +
mov ebx [ebx+0Ch] +
add edi 242070DBh +
add edi ecx +
mov [ebp+var_3C] ebx +
ror edi 0Fh +
add edi esi +
mov ecx edi +
and eax edi +
not ecx  +
and ecx edx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx ebx +
mov ebx [ebp+var_8] +
mov eax [eax+10h] +
mov ebx [ebx+4] +
add ebx 0C1BDCEEEh +
mov [ebp+var_28] eax +
add ebx ecx +
mov eax edi +
ror ebx 0Ah +
add ebx edi +
mov ecx ebx +
not ecx  +
and ecx esi +
and eax ebx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 0F57C0FAFh +
add ecx [ebp+var_28] +
add edx ecx +
mov eax [eax+14h] +
mov [ebp+var_14] eax +
mov eax ebx +
rol edx 7 +
add edx ebx +
and eax edx +
mov ecx edx +
not ecx  +
and ecx edi +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 4787C62Ah +
add ecx [ebp+var_14] +
add esi ecx +
mov eax [eax+18h] +
mov [ebp+var_20] eax +
rol esi 0Ch +
add esi edx +
mov ecx esi +
mov eax esi +
not ecx  +
and eax edx +
and ecx ebx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 0A8304613h +
add ecx [ebp+var_20] +
add edi ecx +
mov eax [eax+1Ch] +
mov [ebp+var_C] eax +
mov eax esi +
ror edi 0Fh +
add edi esi +
and eax edi +
mov ecx edi +
not ecx  +
and ecx edx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 0FD469501h +
add ecx [ebp+var_C] +
add ebx ecx +
mov eax [eax+20h] +
mov [ebp+var_1C] eax +
mov eax edi +
ror ebx 0Ah +
add ebx edi +
and eax ebx +
mov ecx ebx +
not ecx  +
and ecx esi +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 698098D8h +
add ecx [ebp+var_1C] +
add edx ecx +
mov eax [eax+24h] +
rol edx 7 +
add edx ebx +
mov [ebp+var_30] eax +
mov ecx edx +
mov eax ebx +
not ecx  +
and eax edx +
and ecx edi +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 8B44F7AFh +
add ecx [ebp+var_30] +
add esi ecx +
mov eax [eax+28h] +
rol esi 0Ch +
add esi edx +
mov [ebp+var_18] eax +
mov ecx esi +
not ecx  +
and ecx ebx +
mov eax esi +
and eax edx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 0FFFF5BB1h +
add ecx [ebp+var_18] +
add edi ecx +
mov eax [eax+2Ch] +
mov [ebp+var_2C] eax +
mov eax esi +
ror edi 0Fh +
add edi esi +
and eax edi +
mov [ebp+var_4C] edi +
mov ecx edi +
not ecx  +
and ecx edx +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 895CD7BEh +
add ecx [ebp+var_2C] +
add ebx ecx +
mov eax [eax+30h] +
mov [ebp+var_34] eax +
mov eax edi +
ror ebx 0Ah +
add ebx edi +
and eax ebx +
mov [ebp+var_50] ebx +
mov ecx ebx +
not ecx  +
and ecx esi +
or ecx eax +
mov eax [ebp+var_4] +
add ecx 6B901122h +
add ecx [ebp+var_34] +
add edx ecx +
mov eax [eax+34h] +
mov [ebp+var_24] eax +
mov eax ebx +
rol edx 7 +
add edx ebx +
and eax edx +
mov [ebp+var_48] edx +
mov ecx edx +
not ecx  +
and ecx edi +
lea edi [esi-2678E6Dh] +
or ecx eax +
mov eax [ebp+var_4] +
add ecx [ebp+var_24] +
add edi ecx +
rol edi 0Ch +
mov eax [eax+38h] +
add edi edx +
mov [ebp+var_10] eax +
mov esi edi +
not esi  +
mov [ebp+var_54] edi +
mov ecx esi +
mov eax edi +
and ecx ebx +
and eax edx +
mov ebx [ebp+var_4C] +
or ecx eax +
add ecx [ebp+var_10] +
add ebx 0A679438Eh +
mov eax [ebp+var_4] +
add ebx ecx +
ror ebx 0Fh +
add ebx edi +
mov edx ebx +
mov eax [eax+3Ch] +
not edx  +
mov [ebp+var_4] eax +
mov ecx edx +
and ecx [ebp+var_48] +
mov eax edi +
and eax ebx +
or ecx eax +
add ecx [ebp+var_4] +
and esi ebx +
mov edi [ebp+var_50] +
add edi 49B40821h +
add edi ecx +
mov ecx [ebp+var_54] +
mov eax ecx +
ror edi 0Ah +
add edi ebx +
add ecx 0C040B340h +
and eax edi +
and edx edi +
or esi eax +
mov eax [ebp+var_48] +
add esi [ebp+var_40] +
add eax 0F61E2562h +
add esi eax +
mov eax ebx +
rol esi 5 +
add esi edi +
and eax esi +
or edx eax +
add edx [ebp+var_20] +
add edx ecx +
mov ecx edi +
not ecx  +
rol edx 9 +
and ecx esi +
add edx esi +
mov eax edx +
and eax edi +
or ecx eax +
add ecx 265E5A51h +
add ecx [ebp+var_2C] +
add ebx ecx +
mov ecx esi +
not ecx  +
rol ebx 0Eh +
and ecx edx +
add ebx edx +
mov eax ebx +
and eax esi +
or ecx eax +
mov eax edx +
add ecx 0E9B6C7AAh +
add ecx [ebp+var_38] +
add edi ecx +
mov ecx edx +
not ecx  +
ror edi 0Ch +
and ecx ebx +
add edi ebx +
and eax edi +
or ecx eax +
mov eax ebx +
add ecx 0D62F105Dh +
add ecx [ebp+var_14] +
add esi ecx +
mov ecx ebx +
not ecx  +
rol esi 5 +
and ecx edi +
add esi edi +
and eax esi +
or ecx eax +
add ecx 2441453h +
add ecx [ebp+var_18] +
add edx ecx +
mov ecx edi +
rol edx 9 +
not ecx  +
add edx esi +
and ecx esi +
mov eax edx +
and eax edi +
or ecx eax +
add ecx 0D8A1E681h +
add ecx [ebp+var_4] +
add ebx ecx +
rol ebx 0Eh +
add ebx edx +
mov ecx esi +
mov eax ebx +
not ecx  +
and eax esi +
and ecx edx +
or ecx eax +
mov eax edx +
add ecx 0E7D3FBC8h +
add ecx [ebp+var_28] +
add edi ecx +
mov ecx edx +
not ecx  +
ror edi 0Ch +
and ecx ebx +
add edi ebx +
and eax edi +
or ecx eax +
mov eax ebx +
add ecx 21E1CDE6h +
add ecx [ebp+var_30] +
add esi ecx +
mov ecx ebx +
not ecx  +
rol esi 5 +
and ecx edi +
add esi edi +
and eax esi +
or ecx eax +
add ecx 0C33707D6h +
add ecx [ebp+var_10] +
add edx ecx +
mov ecx edi +
not ecx  +
rol edx 9 +
and ecx esi +
add edx esi +
mov eax edx +
mov [ebp+var_54] edx +
and eax edi +
or ecx eax +
add ecx 0F4D50D87h +
add ecx [ebp+var_3C] +
add ebx ecx +
mov ecx esi +
not ecx  +
rol ebx 0Eh +
and ecx edx +
add ebx edx +
mov eax ebx +
and eax esi +
or ecx eax +
mov eax edx +
add ecx 455A14EDh +
add ecx [ebp+var_1C] +
add edi ecx +
mov ecx edx +
not ecx  +
ror edi 0Ch +
and ecx ebx +
lea edx [esi-561C16FBh] +
mov esi [ebp+var_54] +
add edi ebx +
and eax edi +
mov [ebp+var_50] edi +
or ecx eax +
add esi 0FCEFA3F8h +
add ecx [ebp+var_24] +
mov eax ebx +
add edx ecx +
mov ecx ebx +
rol edx 5 +
not ecx  +
add edx edi +
and ecx edi +
and eax edx +
or ecx eax +
add ecx [ebp+var_44] +
add esi ecx +
mov ecx edi +
rol esi 9 +
add esi edx +
not ecx  +
mov eax esi +
and eax edi +
and ecx edx +
or ecx eax +
lea edi [ebx+676F02D9h] +
add ecx [ebp+var_C] +
mov ebx [ebp+var_50] +
add edi ecx +
rol edi 0Eh +
mov ecx edx +
add edi esi +
not ecx  +
and ecx esi +
mov eax edi +
and eax edx +
add ebx 8D2A4C8Ah +
or ecx eax +
mov eax esi +
add ecx [ebp+var_34] +
xor eax edi +
add ebx ecx +
ror ebx 0Ch +
add ebx edi +
xor eax ebx +
add eax 0FFFA3942h +
add eax [ebp+var_14] +
add edx eax +
mov eax edi +
xor eax ebx +
rol edx 4 +
add edx ebx +
xor eax edx +
add eax 8771F681h +
add eax [ebp+var_1C] +
add esi eax +
rol esi 0Bh +
add esi edx +
mov eax esi +
mov ecx esi +
xor eax ebx +
xor eax edx +
add eax 6D9D6122h +
add eax [ebp+var_2C] +
add edi eax +
rol edi 10h +
add edi esi +
xor ecx edi +
mov eax ecx +
xor eax edx +
add eax 0FDE5380Ch +
add eax [ebp+var_10] +
add ebx eax +
mov eax edi +
ror ebx 9 +
add ebx edi +
xor ecx ebx +
xor eax ebx +
add ecx 0A4BEEA44h +
add ecx [ebp+var_40] +
add edx ecx +
rol edx 4 +
add edx ebx +
xor eax edx +
add eax 4BDECFA9h +
add eax [ebp+var_28] +
add esi eax +
rol esi 0Bh +
add esi edx +
mov eax esi +
mov ecx esi +
xor eax ebx +
xor eax edx +
add eax 0F6BB4B60h +
add eax [ebp+var_C] +
add edi eax +
rol edi 10h +
add edi esi +
xor ecx edi +
mov eax ecx +
xor eax edx +
add eax 0BEBFBC70h +
add eax [ebp+var_18] +
add ebx eax +
mov eax edi +
ror ebx 9 +
add ebx edi +
xor eax ebx +
xor ecx ebx +
add ecx 289B7EC6h +
add ecx [ebp+var_24] +
add edx ecx +
rol edx 4 +
add edx ebx +
xor eax edx +
mov [ebp+var_54] edx +
add eax 0EAA127FAh +
add eax [ebp+var_38] +
add esi eax +
rol esi 0Bh +
add esi edx +
mov eax esi +
mov ecx esi +
xor eax ebx +
xor eax edx +
add eax 0D4EF3085h +
add eax [ebp+var_3C] +
add edi eax +
mov eax [ebp+var_54] +
add eax 0D9D4D039h +
rol edi 10h +
add edi esi +
xor ecx edi +
xor edx ecx +
add edx 4881D05h +
add edx [ebp+var_20] +
add edx ebx +
ror edx 9 +
add edx edi +
xor ecx edx +
add ecx [ebp+var_30] +
add ecx eax +
mov eax edi +
xor eax edx +
rol ecx 4 +
add ecx edx +
xor eax ecx +
add eax 0E6DB99E5h +
add eax [ebp+var_34] +
add esi eax +
rol esi 0Bh +
add esi ecx +
mov eax esi +
xor eax edx +
xor eax ecx +
add eax 1FA27CF8h +
add eax [ebp+var_4] +
add edi eax +
mov eax esi +
rol edi 10h +
add edi esi +
xor eax edi +
xor eax ecx +
add eax 0C4AC5665h +
add eax [ebp+var_44] +
add edx eax +
mov eax esi +
not eax  +
ror edx 9 +
add edx edi +
or eax edx +
xor eax edi +
add eax 0F4292244h +
add eax [ebp+var_38] +
add ecx eax +
mov eax edi +
rol ecx 6 +
not eax  +
add ecx edx +
or eax ecx +
xor eax edx +
add eax 432AFF97h +
add eax [ebp+var_C] +
add esi eax +
mov eax edx +
not eax  +
rol esi 0Ah +
add esi ecx +
or eax esi +
xor eax ecx +
add eax 0AB9423A7h +
add eax [ebp+var_10] +
add edi eax +
mov eax ecx +
not eax  +
rol edi 0Fh +
add edi esi +
or eax edi +
xor eax esi +
add eax 0FC93A039h +
add eax [ebp+var_14] +
add edx eax +
mov eax esi +
not eax  +
ror edx 0Bh +
add edx edi +
or eax edx +
xor eax edi +
add eax 655B59C3h +
add eax [ebp+var_34] +
add ecx eax +
mov eax edi +
not eax  +
rol ecx 6 +
add ecx edx +
or eax ecx +
xor eax edx +
add eax 8F0CCC92h +
add eax [ebp+var_3C] +
add esi eax +
mov eax edx +
not eax  +
rol esi 0Ah +
add esi ecx +
or eax esi +
xor eax ecx +
add eax 0FFEFF47Dh +
add eax [ebp+var_18] +
lea ebx [esi-1D31920h] +
add edi eax +
mov eax ecx +
not eax  +
rol edi 0Fh +
add edi esi +
or eax edi +
xor eax esi +
add eax 85845DD1h +
add eax [ebp+var_40] +
add edx eax +
mov eax esi +
not eax  +
ror edx 0Bh +
add edx edi +
or eax edx +
xor eax edi +
add eax 6FA87E4Fh +
add eax [ebp+var_1C] +
add ecx eax +
mov eax edi +
not eax  +
rol ecx 6 +
add ecx edx +
or eax ecx +
xor eax edx +
add eax [ebp+var_4] +
add ebx eax +
mov eax edx +
rol ebx 0Ah +
not eax  +
add ebx ecx +
or eax ebx +
xor eax ecx +
add eax 0A3014314h +
add eax [ebp+var_20] +
lea esi [ecx-8AC817Eh] +
add edi eax +
mov eax ecx +
not eax  +
rol edi 0Fh +
add edi ebx +
or eax edi +
xor eax ebx +
add eax 4E0811A1h +
add eax [ebp+var_24] +
lea ecx [edi+2AD7D2BBh] +
add edx eax +
mov eax ebx +
not eax  +
ror edx 0Bh +
add edx edi +
or eax edx +
mov [ebp+var_54] edx +
xor eax edi +
add eax [ebp+var_28] +
add esi eax +
mov eax edi +
mov edi [ebp+var_8] +
not eax  +
rol esi 6 +
add esi edx +
or eax esi +
add [edi] esi +
xor eax edx +
add eax [ebp+var_2C] +
lea edx [ebx-42C50DCBh] +
mov ebx [ebp+var_54] +
add edx eax +
rol edx 0Ah +
mov eax ebx +
add edx esi +
not eax  +
or eax edx +
xor eax esi +
not esi  +
add eax [ebp+var_44] +
add ecx eax +
lea eax [ebx-14792C6Fh] +
rol ecx 0Fh +
add ecx edx +
add [edi+8] ecx +
or esi ecx +
xor esi edx +
add esi [ebp+var_30] +
add eax esi +
ror eax 0Bh +
add eax [edi+4] +
add eax ecx +
add [edi+0Ch] edx +
mov [edi+4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_42EB20  +
test [ebp+arg_0] 1 +
jz loc_42EB0A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [esi+74h] +
push 3  +
push offset asc_46ABAC  +
lea ecx [esi+1Ch] +
call loc_410BB0  +
push 8  +
push offset aOobe_log  +
lea ecx [esi+34h] +
call loc_410BB0  +
push 0  +
push offset unk_469720  +
lea ecx [esi+4Ch] +
call loc_410BB0  +
push 1Eh  +
mov ecx esi +
mov byte ptr [esi+6Ch] 1 +
call sub_42EC40  +
lea eax [esi+74h] +
mov dword ptr [esi+70h] 0 +
push eax  +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+8Ch] 1 +
mov byte ptr [esi+6Dh] 0 +
call ds:InitializeCriticalSection  +
pop esi  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E322  +
mov eax large fs:0 +
push eax  +
sub esp 260h +
mov eax dword_474390 +
xor eax esp +
mov [esp+26Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+27Ch+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
xor eax eax +
mov [esi+64h] edi +
mov [esp+27Ch+var_254] 7 +
mov [esp+27Ch+var_258] 0 +
mov word ptr [esp+27Ch+var_268] ax +
mov [esp+27Ch+var_4] eax +
lea eax [esp+27Ch+Buffer] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_42EEF5  +
cmp [esp+27Ch+Buffer] 0 +
jnz loc_42ECCA  +
xor ecx ecx +
jmp loc_42ECE0  +
lea ecx [esp+27Ch+Buffer] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42ECD1  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [esp+280h+Buffer] +
push eax  +
lea ecx [esp+284h+var_268] +
call loc_410BB0  +
xor eax eax +
mov [esp+284h+var_22C] 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr [esp+28Ch+var_240] ax +
lea ecx [esp+28Ch+var_240] +
lea eax [esi+34h] +
mov [esp+28Ch+var_230] 0 +
push eax  +
call loc_410ED0  +
mov [esp+290h+var_18] 1 +
lea ecx [esp+290h+var_264] +
push 6  +
xor eax eax +
mov [esp+294h+var_250] 7 +
push offset a_trace  +
mov [esp+298h+var_254] 0 +
mov word ptr [esp+298h+var_264] ax +
call loc_410BB0  +
lea edx [esp+298h+var_26C] +
mov [esp+298h+var_20] 2 +
lea ecx [esp+298h+var_254] +
call sub_435600  +
mov [esp+298h+var_20] 1 +
mov bl al +
cmp [esp+298h+var_258] 8 +
jb loc_42ED77  +
push [esp+298h+var_26C]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_42EECB  +
lea edx [esp+298h+var_254] +
lea ecx [esp+298h+pszPath] +
call sub_435410  +
test al al +
jz loc_42EECB  +
cmp [esp+298h+var_270] 8 +
lea eax [esp+298h+pszPath] +
cmovnb eax [esp+298h+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_42EDBA  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_42EECB  +
push offset a_debug  +
lea ecx [esp+29Ch+var_26C] +
call sub_410210  +
lea edx [esp+298h+var_26C] +
mov [esp+298h+var_20] 3 +
lea ecx [esp+298h+pszPath] +
call sub_435600  +
lea ecx [esp+298h+var_26C] +
mov [esp+298h+var_20] 1 +
mov bl al +
call sub_4102E0  +
test bl bl +
jz loc_42EE12  +
cmp [esp+298h+var_270] 8 +
lea eax [esp+298h+pszPath] +
cmovnb eax [esp+298h+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_42EEBF  +
lea ecx [esp+298h+pszPath] +
call sub_4356B0  +
test al al +
jz loc_42EECB  +
push offset aAsu_trace  +
lea ecx [esp+29Ch+var_26C] +
call sub_410210  +
lea edx [esp+298h+var_26C] +
mov [esp+298h+var_20] 4 +
lea ecx [esp+298h+pszPath] +
call sub_435410  +
lea ecx [esp+298h+var_26C] +
mov [esp+298h+var_20] 1 +
mov bl al +
call sub_4102E0  +
test bl bl +
jz loc_42EECB  +
lea ecx [esp+298h+pszPath] +
call sub_4353F0  +
test al al +
jz loc_42EE73  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_42EECB  +
lea ecx [esp+298h+pszPath] +
call sub_4356B0  +
test al al +
jz loc_42EECB  +
push offset aAsu_debug  +
lea ecx [esp+29Ch+var_26C] +
call sub_410210  +
lea edx [esp+298h+var_26C] +
mov [esp+298h+var_20] 5 +
lea ecx [esp+298h+pszPath] +
call sub_435410  +
lea ecx [esp+298h+var_26C] +
mov bl al +
call sub_4102E0  +
test bl bl +
jz loc_42EECB  +
lea ecx [esp+298h+pszPath] +
call sub_4353F0  +
test al al +
jz loc_42EECB  +
cmp edi 14h +
jle loc_42EECB  +
mov dword ptr [esi+64h] 14h +
cmp [esp+298h+var_240] 8 +
jb loc_42EEDE  +
push [esp+298h+var_254]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+298h+var_240] 7 +
mov [esp+298h+var_244] 0 +
mov word ptr [esp+298h+var_254] ax +
cmp [esp+298h+var_270] 8 +
jb loc_42EF08  +
push [esp+298h+pszPath]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [esp+298h+var_28] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+288h+var_30] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E35B  +
mov eax large fs:0 +
push eax  +
sub esp 258h +
mov eax dword_474390 +
xor eax esp +
mov [esp+264h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+274h+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [esp+274h+var_258] 0 +
mov [esp+274h+var_25E] 0 +
test edi edi +
jz loc_42EF8F  +
cmp word ptr [edi] 0 +
jnz loc_42EF9F  +
cmp dword ptr [esi+48h] 8 +
lea edi [esi+34h] +
mov [esp+274h+var_25E] 1 +
jb loc_42EF9F  +
mov edi [edi] +
test edx edx +
jz loc_42EFD0  +
cmp word ptr [edx] 0 +
jz loc_42EFD0  +
mov ecx edx +
lea ebx [ecx+2] +
mov edi edi +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42EFB0  +
sub ecx ebx +
lea ebx [esi+4Ch] +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx ebx +
call loc_410BB0  +
jmp loc_42F0EC  +
lea eax [esp+274h+Buffer] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_42F014  +
cmp [esp+274h+Buffer] 0 +
jnz loc_42EFF0  +
xor ecx ecx +
jmp loc_42F006  +
lea ecx [esp+274h+Buffer] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42EFF7  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [esp+278h+Buffer] +
push eax  +
lea ecx [esi+4Ch] +
call loc_410BB0  +
cmp dword ptr [esi+60h] 8 +
lea ebx [esi+4Ch] +
jb loc_42F021  +
mov edx [ebx] +
jmp loc_42F023  +
mov edx ebx +
xor eax eax +
mov [esp+27Ch+var_244] 7 +
mov [esp+27Ch+var_248] 0 +
mov word ptr [esp+27Ch+var_258] ax +
cmp [edx] ax +
jnz loc_42F043  +
xor ecx ecx +
jmp loc_42F061  +
mov ecx edx +
lea eax [ecx+2] +
mov [esp+27Ch+var_25C] eax +
lea esp [esp+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42F050  +
sub ecx [esp+27Ch+var_25C] +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+284h+var_258] +
call loc_410BB0  +
cmp [esp+284h+var_24C] 8 +
lea eax [esp+24h] +
cmovnb eax [esp+24h] +
push eax  +
call ds:PathIsDirectoryW  +
test eax eax +
setnz al  +
test al al +
setz al  +
cmp [esp+284h+var_24C] 8 +
mov [esp+284h+var_26D] al +
jb loc_42F0A6  +
push dword ptr [esp+24h]  +
call sub_43FFF6  +
mov al [esp+288h+var_26D] +
add esp 4 +
test al al +
jz loc_42F0EC  +
cmp dword ptr [ebx+14h] 8 +
jb loc_42F0B4  +
mov eax [ebx] +
jmp loc_42F0B6  +
mov eax ebx +
push eax  +
lea ecx [esp+28h] +
call sub_410210  +
cmp [esp+284h+var_24C] 8 +
lea eax [esp+24h] +
push 0  +
cmovnb eax [esp+28h] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
cmp [esp+290h+var_258] 8 +
jb loc_42F0EC  +
push [esp+290h+var_26C]  +
call sub_43FFF6  +
add esp 4 +
cmp byte ptr [esp+290h+var_27C+2] 0 +
jnz loc_42F161  +
xor eax eax +
mov [esp+290h+var_258] 7 +
mov [esp+290h+var_25C] 0 +
mov word ptr [esp+290h+var_26C] ax +
cmp [edi] ax +
jnz loc_42F113  +
xor ecx ecx +
jmp loc_42F12F  +
mov ecx edi +
lea edx [ecx+2] +
jmp loc_42F120  +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42F120  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esp+298h+var_26C] +
call loc_410BB0  +
cmp dword ptr [esp+38h] 8 +
lea eax [esp+298h+pszPath] +
mov [esp+298h+var_27C] 1 +
cmovnb eax [esp+298h+pszPath] +
push eax  +
call ds:PathIsFileSpecW  +
mov [esp+298h+var_282] 1 +
cmp eax 1 +
jnz loc_42F166  +
mov [esp+298h+var_282] 0 +
test byte ptr [esp+298h+var_27C] 1 +
jz loc_42F180  +
cmp dword ptr [esp+38h] 8 +
jb loc_42F180  +
push [esp+298h+pszPath]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+298h+var_282] 0 +
jz loc_42F192  +
mov byte ptr [esi+6Ch] 0 +
xor al al +
jmp loc_42F28C  +
xor eax eax +
mov [esp+298h+var_248] 7 +
mov [esp+298h+var_24C] 0 +
mov word ptr [esp+298h+var_25C] ax +
cmp [edi] ax +
jnz loc_42F1B2  +
xor ecx ecx +
jmp loc_42F1C6  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42F1B7  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esp+2A0h+var_25C] +
call loc_410BB0  +
lea edx [esp+2A0h+var_264] +
mov [esp+2A0h+var_30] 0 +
mov ecx ebx +
call sub_435410  +
mov [esp+2A0h+var_30] 0FFFFFFFFh +
cmp [esp+2A0h+var_250] 8 +
mov [esp+2A0h+var_289] al +
jb loc_42F20D  +
push [esp+2A0h+var_264]  +
call sub_43FFF6  +
mov al [esp+2A4h+var_289] +
add esp 4 +
xor ecx ecx +
mov [esp+2A0h+var_250] 7 +
mov [esp+2A0h+var_254] 0 +
mov word ptr [esp+2A0h+var_264] cx +
test al al +
jnz loc_42F22D  +
mov [esi+6Ch] cl +
jmp loc_42F28C  +
mov eax [esi+68h] +
lea edi [esi+68h] +
test eax eax +
jz loc_42F244  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [edi] 0 +
lea edx [esi+34h] +
mov [esp+2A0h+var_288] 0 +
mov ecx ebx +
call sub_4357F0  +
cmp byte ptr [esi+6Dh] 0 +
mov eax [esi] +
mov eax [eax] +
jz loc_42F26A  +
push edi  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
jmp loc_42F289  +
lea ecx [esp+2A0h+var_288] +
push ecx  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
test al al +
jz loc_42F289  +
mov eax [esp+18h] +
test eax eax +
jz loc_42F289  +
push eax  +
call ds:CloseHandle  +
mov al [esi+6Ch] +
mov ecx [esp+2A4h+var_3C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+294h+var_44] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
mov ecx ebx +
push esi  +
push edi  +
mov [ebp+var_8] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_42F2D8  +
sub ecx edx +
xor esi esi +
lea eax [ecx+1] +
mov [ebp+var_10] eax +
mov edi eax +
test eax eax +
jz loc_42F313  +
nop   +
push [ebp+arg_8]  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
lea eax [ebp+var_4] +
push ebx  +
push eax  +
call sub_43BB31  +
add esp 14h +
test eax eax +
jle loc_42F310  +
add ebx eax +
inc esi  +
sub edi eax +
jnz loc_42F2F0  +
mov ebx [ebp+arg_0] +
inc esi  +
xor ecx ecx +
mov eax esi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_43AC2F  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_C] 0 +
mov edi eax +
test esi esi +
jz loc_42F363  +
nop   +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_10]  +
push ebx  +
push edi  +
call sub_43BB31  +
add esp 14h +
test eax eax +
jle loc_42F360  +
add ebx eax +
add edi 2 +
dec esi  +
jnz loc_42F340  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [edi] cx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
sub esp 44h +
push esi  +
mov esi ecx +
mov [esi+4] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [esi] offset off_4639CC +
call sub_43AC38  +
add esp 4 +
movdqu xmm0 qword ptr [eax] +
lea eax [ebp+var_40] +
push eax  +
movdqu qword ptr [esi+8] xmm0 +
call sub_43A694  +
add esp 4 +
movdqu xmm0 qword ptr [eax] +
movdqu qword ptr [esi+18h] xmm0 +
movdqu xmm0 qword ptr [eax+10h] +
movdqu qword ptr [esi+28h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [esi+38h] xmm0 +
mov eax [eax+28h] +
mov [esi+40h] eax +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45E39B  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test esi esi +
jz loc_42F473  +
cmp [esi] ebx +
jnz loc_42F473  +
push 44h  +
call sub_440048  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
test edi edi +
jz loc_42F462  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
test ecx ecx +
jnz loc_42F43E  +
mov eax (offset asc_4696CC+2) +
jmp loc_42F448  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_42F448  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_44] +
call sub_411E50  +
push 0  +
push eax  +
mov ecx edi +
mov ebx 1 +
call sub_42F370  +
jmp loc_42F464  +
xor eax eax +
mov [esi] eax +
test bl 1 +
jz loc_42F473  +
lea ecx [ebp+var_44] +
call sub_411F10  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_43BC88  +
add esp 8 +
test [ebp+arg_0] ax +
mov eax 0 +
setnz al  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push [ebp+lpCharType]  +
push [ebp+arg_4]  +
push [ebp+lpSrcStr]  +
call sub_43BCAC  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_42F50D  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jnz loc_42F50D  +
add esi 2 +
cmp esi edi +
jnz loc_42F4F2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_42F54D  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jz loc_42F54D  +
add esi 2 +
cmp esi edi +
jnz loc_42F532  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_43BA55  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_42F5C0  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_43BA55  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_42F5A5  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_43BAC1  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_42F630  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_43BAC1  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_42F615  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub esp 8 +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+arg_0] al +
lea eax [ecx+18h] +
push eax  +
lea eax [ebp+var_8] +
mov [ebp+var_8] 0 +
push eax  +
push 1  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_43BB31  +
movzx ecx word ptr [ebp+var_4] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
mov ax cx +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi [ebp+arg_0] +
xor edx edx +
push edi  +
mov edi [ebp+arg_4] +
sub edi esi +
mov [ebp+var_4] 0 +
cmp esi [ebp+arg_4] +
cmova edi edx +
test edi edi +
jz loc_42F708  +
add ecx 18h +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_8] ecx +
lea ecx [ecx+0] +
mov al [esi] +
mov byte ptr [ebp+arg_4] al +
lea eax [ebp+arg_8] +
push ecx  +
push eax  +
push 1  +
lea eax [ebp+arg_4] +
mov [ebp+arg_8] 0 +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_43BB31  +
movzx ecx word ptr [ebp+arg_0] +
lea ebx [ebx+2] +
add esp 14h +
test eax eax +
mov eax 0FFFFh +
cmovs ecx eax +
mov eax [ebp+var_4] +
inc eax  +
mov [ebx-2] cx +
mov ecx [ebp+var_8] +
inc esi  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_42F6C0  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 10h +
sub esp 18h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_C] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
sub edi esi +
mov [ebp+var_10] 0 +
inc edi  +
shr edi 1 +
cmp esi [ebp+arg_4] +
cmova edi edx +
test edi edi +
jz loc_42F7F1  +
add ecx 18h +
mov [ebp+var_18] ecx +
lea ebx [ebx+0] +
movzx eax word ptr [esi] +
push ecx  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] 0 +
push ecx  +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_43A6FD  +
movzx ecx [ebp+arg_8] +
lea ebx [ebx+1] +
movzx edx [ebp+MultiByteStr] +
add esp 10h +
cmp eax 1 +
mov eax [ebp+var_10] +
cmovnz edx ecx +
mov ecx [ebp+var_18] +
inc eax  +
mov [ebx-1] dl +
add esi 2 +
mov [ebp+var_10] eax +
cmp eax edi +
jnz loc_42F7B0  +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_4639CC +
jz loc_42F82D  +
push dword ptr [esi+0Ch]  +
call sub_4407E4  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_4407E4  +
add esp 4 +
mov dword ptr [esi] offset off_4626B0 +
test [ebp+arg_0] 1 +
jz loc_42F84D  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45E402  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_46AB94 +
xor eax eax +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
mov [esi+4] ax +
mov [ebp+var_4] eax +
mov dword ptr [esi+30h] 7 +
mov [esi+2Ch] eax +
mov [esi+1Ch] ax +
mov dword ptr [esi+48h] 7 +
mov [esi+44h] eax +
mov [esi+34h] ax +
mov dword ptr [esi+60h] 7 +
mov [esi+5Ch] eax +
mov [esi+4Ch] ax +
mov byte ptr [ebp+var_4] 3 +
call sub_42EBD0  +
mov [ebp+var_4] 4 +
xor eax eax +
mov dword ptr [esi] offset off_46ACC8 +
mov dword ptr [esi+0ACh] 7 +
mov dword ptr [esi+0A8h] 0 +
mov [esi+98h] ax +
mov edx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 5 +
mov [esi+90h] eax +
mov [esi+68h] eax +
test edx edx +
jz loc_42F93C  +
cmp [edx] ax +
jz loc_42F932  +
mov eax edx +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_42F923  +
sub eax edi +
sar eax 1 +
push eax  +
push edx  +
lea ecx [esi+4] +
call loc_410BB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_42F990  +
test [ebp+arg_0] 1 +
jz loc_42F97A  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi+68h] +
mov dword ptr [esi] offset off_46ACC8 +
test eax eax +
jz loc_42F9AE  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_42F9ED  +
mov eax [eax] +
test eax eax +
jz loc_42F9CA  +
cmp eax 0FFFFFFFFh +
jz loc_42F9CA  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_42F9E3  +
push eax  +
mov dword ptr [eax] 0 +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+90h] 0 +
cmp dword ptr [esi+0ACh] 8 +
jb loc_42FA04  +
push dword ptr [esi+98h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+0ACh] 7 +
xor eax eax +
mov dword ptr [esi+0A8h] 0 +
mov ecx esi +
mov [esi+98h] ax +
pop esi  +
jmp sub_42EB20  +
***
sub esp 8 +
add ecx 4Ch +
mov word ptr [ebp+var_4] 0 +
mov [ebp+var_8] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_42FA4E  +
mov ecx [ecx] +
push offset aRbCcsUtf8  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
call sub_443B49  +
mov eax [ebp+var_8] +
add esp 0Ch +
test eax eax +
jz loc_42FAA7  +
push eax  +
push 2  +
lea eax [ebp+var_4] +
push 1  +
push eax  +
call sub_44472E  +
push [ebp+var_8]  +
call sub_442FE0  +
mov cl byte ptr [ebp+var_4] +
add esp 14h +
mov al byte ptr [ebp+var_4+1] +
cmp cl 0FFh +
jnz loc_42FA8F  +
cmp al 0FEh +
jz loc_42FA98  +
cmp al 0FFh +
jnz loc_42FAA1  +
cmp cl 0FEh +
jnz loc_42FAA1  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+Buffer] +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+8Ch] 1 +
jnz loc_42FAE8  +
call sub_42FA30  +
test al al +
jnz loc_42FAE8  +
mov eax [ebx] +
test eax eax +
jz loc_42FAE1  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx] 0 +
mov ecx edi +
call sub_430990  +
cmp dword ptr [edi+60h] 8 +
lea esi [edi+4Ch] +
jb loc_42FAF5  +
mov eax [esi] +
jmp loc_42FAF7  +
mov eax esi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_42FB8F  +
cmp dword ptr [esi+14h] 8 +
jb loc_42FB1F  +
mov esi [esi] +
push 0  +
push 80h  +
push 1  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_42FB4A  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [edi+8Ch] 1 +
lea ecx [ebp+NumberOfBytesWritten] +
push 0  +
push ecx  +
jnz loc_42FB78  +
push 2  +
lea ecx [ebp+Buffer] +
mov [ebp+Buffer] 0FEFFh +
push ecx  +
push eax  +
call ds:WriteFile  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push 3  +
lea ecx [ebp+Buffer] +
mov word ptr [ebp+Buffer] 0BBEFh +
push ecx  +
push eax  +
mov byte ptr [ebp+Buffer+2] 0BFh +
call ds:WriteFile  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45E436  +
mov eax large fs:0 +
push eax  +
sub esp 240h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
lea eax [ebp+pszPath] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_42FC9E  +
mov [ebp+var_220] 7 +
mov [ebp+var_224] eax +
mov word ptr [ebp+var_234] ax +
cmp [ebp+pszPath] ax +
jnz loc_42FC1E  +
xor ecx ecx +
jmp loc_42FC36  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42FC27  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
push eax  +
lea ecx [ebp+var_234] +
call loc_410BB0  +
xor bl bl +
lea eax [ebp+var_234] +
cmp [ebp+var_220] 8 +
push 0  +
cmovnb eax [ebp+var_234] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
test eax eax +
jz loc_42FC7A  +
cmp eax 0B7h +
jz loc_42FC7A  +
cmp eax 50h +
jnz loc_42FC7C  +
mov bl 1 +
cmp [ebp+var_220] 8 +
jb loc_42FC93  +
push [ebp+var_234]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jnz loc_42FC9E  +
xor al al +
jmp loc_42FDA9  +
xor eax eax +
mov [ebp+var_238] 7 +
mov [ebp+var_23C] 0 +
mov word ptr [ebp+var_24C] ax +
cmp [ebp+pszPath] ax +
jnz loc_42FCC8  +
xor ecx ecx +
jmp loc_42FCE0  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42FCD1  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
push eax  +
lea ecx [ebp+var_24C] +
call loc_410BB0  +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_220] 7 +
mov [ebp+var_224] 0 +
mov word ptr [ebp+var_234] ax +
cmp [esi] ax +
jnz loc_42FD20  +
xor ecx ecx +
jmp loc_42FD34  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_42FD25  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp+var_234] +
call loc_410BB0  +
lea edx [ebp+var_234] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_24C] +
call sub_435410  +
mov byte ptr [ebp+var_4] 0 +
mov bl al +
cmp [ebp+var_220] 8 +
jb loc_42FD73  +
push [ebp+var_234]  +
call sub_43FFF6  +
add esp 4 +
test bl bl +
jz loc_42FD90  +
lea ecx [edi+4Ch] +
lea eax [ebp+var_24C] +
cmp ecx eax +
jz loc_42FD8E  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_410ED0  +
mov bl 1 +
cmp [ebp+var_238] 8 +
jb loc_42FDA7  +
push [ebp+var_24C]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E468  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_474390 +
xor eax esp +
mov [esp+48h+var_14] eax +
push ebx  +
push esi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+54h+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+6Ch] 0 +
jnz loc_42FE15  +
xor al al +
jmp loc_42FF3E  +
xor eax eax +
mov [esp+54h+var_2C] 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr [esp+5Ch+var_40] ax +
lea ecx [esp+5Ch+var_40] +
lea eax [esi+4Ch] +
mov [esp+5Ch+var_30] 0 +
push eax  +
call loc_410ED0  +
mov [esp+60h+var_10] 0 +
cmp [esp+60h+var_3C] 0 +
jnz loc_42FE62  +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_42FE56  +
mov eax [eax] +
push eax  +
mov ecx esi +
call sub_42FBA0  +
test al al +
jz loc_42FE78  +
cmp dword ptr [esi+68h] 0 +
lea ecx [esi+68h] +
jnz loc_42FE7F  +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov eax [eax] +
call eax  +
test al al +
jnz loc_42FE7F  +
xor bl bl +
jmp loc_42FF29  +
cmp dword ptr [esi+90h] 0 +
jnz loc_42FEA6  +
push 4  +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_42FE9E  +
mov dword ptr [eax] 0 +
jmp loc_42FEA0  +
xor eax eax +
mov [esi+90h] eax +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_42FEB1  +
mov eax [eax] +
sub esp 18h +
mov ecx esp +
push eax  +
call sub_410210  +
mov ecx [esi+90h] +
call sub_435AA0  +
lea eax [esp+60h+var_34] +
push eax  +
call sub_445754  +
mov eax [esp+64h+var_30] +
add esp 4 +
mov ecx [esp+60h+var_34] +
mov [esi+0B4h] eax +
mov [esi+0BCh] eax +
mov eax [esi+90h] +
mov [esi+0B0h] ecx +
mov [esi+0B8h] ecx +
mov eax [eax] +
test eax eax +
jz loc_42FF23  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_42FF23  +
push ecx  +
mov ecx esi +
call sub_435950  +
mov eax [esi+90h] +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
mov byte ptr [esi+6Dh] 1 +
mov bl 1 +
cmp [esp+60h+var_38] 8 +
jb loc_42FF3C  +
push [esp+60h+var_4C]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [esp+60h+var_18] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [esp+54h+var_20] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+68h] +
test eax eax +
jz loc_42FF7D  +
cmp eax 0FFFFFFFFh +
jz loc_42FF7D  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_42FFBC  +
mov eax [eax] +
test eax eax +
jz loc_42FF99  +
cmp eax 0FFFFFFFFh +
jz loc_42FF99  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_42FFB2  +
push eax  +
mov dword ptr [eax] 0 +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+90h] 0 +
mov byte ptr [esi+6Dh] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
mov ebx ecx +
lea ecx [esi+2] +
mov edi edi +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_42FFE0  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
sar esi 1 +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
add esi esi +
push esi  +
push [ebp+lpBuffer]  +
mov esi ds:WriteFile +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push 4  +
push offset Buffer  +
push dword ptr [ebx+68h]  +
call esi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
mov ebx ecx +
lea ecx [esi+1] +
mov edi edi +
mov al [esi] +
inc esi  +
test al al +
jnz loc_430050  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
mov esi ds:WriteFile +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
mov [ebp+NumberOfBytesWritten] 0 +
push eax  +
push 2  +
push offset asc_46AC34  +
push dword ptr [ebx+68h]  +
call esi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 250h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_8] eax +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
or eax edx +
push edi  +
mov edi ecx +
jnz loc_4300F4  +
lea eax [ebp+var_21C] +
push eax  +
call sub_445754  +
mov edx [ebp+var_218] +
add esp 4 +
mov eax [ebp+var_21C] +
jmp loc_43011D  +
push 0  +
push 3E8h  +
push edx  +
push esi  +
call sub_4473A0  +
imul ecx eax +
mov [ebp+var_21C] eax +
mov [ebp+var_218] edx +
sub esi ecx +
mov [ebp+var_214] si +
mov [ebp+var_24C] eax +
mov [edi+0B8h] eax +
lea eax [ebp+var_24C] +
push eax  +
lea eax [ebp+var_240] +
mov [ebp+var_248] edx +
push eax  +
mov [edi+0BCh] edx +
call sub_4408BB  +
lea eax [ebp+var_240] +
push eax  +
push offset aXX  +
lea eax [ebp+var_20C] +
push 100h  +
push eax  +
call sub_445354  +
movzx eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push offset aS_3d  +
push 100h  +
push ebx  +
call sub_44454D  +
mov ecx [ebp+var_8] +
add esp 2Ch +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45E49B  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
sub esp 8 +
mov [ebp+var_14] 0 +
lea ecx [ebp+var_C4] +
call sub_431420  +
mov [ebp+var_4] 0 +
call ds:GetCurrentThreadId  +
push eax  +
lea ecx [ebp+var_B4] +
call sub_4315D0  +
push [ebp+arg_0]  +
lea ecx [ebp+var_C4] +
call sub_431550  +
lea ecx [ebp+var_5C] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_4314D0  +
lea eax [ebp+var_5C] +
mov [ebp+var_5C] offset off_4627B0 +
push eax  +
call sub_43AAFE  +
mov eax [ebp+arg_0] +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx+68h] +
mov ecx esi +
call sub_4314D0  +
push esi  +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E55A  +
mov eax large fs:0 +
push eax  +
sub esp 2E8h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_C] +
mov esi [ebp+arg_8] +
mov ebx [ebp+arg_28] +
mov [ebp+var_2E4] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_2E8] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_2F0] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2D8] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_2E0] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_2DC] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_2EC] eax +
lea eax [ebp+var_214] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_4300B0  +
push esi  +
lea eax [ebp+var_22C] +
push eax  +
call sub_430BA0  +
mov esi eax +
add edi 1Ch +
mov [ebp+var_4] 0 +
push edi  +
lea edx [ebp+var_214] +
lea ecx [ebp+var_2A4] +
call sub_411320  +
add esp 4 +
push offset asc_46AC58  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_274] +
call sub_411410  +
add esp 4 +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_25C] +
call sub_433900  +
add esp 4 +
push offset asc_46AC54  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2BC] +
call sub_411410  +
add esp 4 +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_244] +
call sub_4114B0  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov byte ptr [ebp+var_4] 5 +
call loc_4117A0  +
cmp [ebp+var_230] 8 +
jb loc_430398  +
push [ebp+var_244]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_230] 7 +
cmp [ebp+var_2A8] 8 +
mov [ebp+var_234] 0 +
mov word ptr [ebp+var_244] ax +
jb loc_4303CC  +
push [ebp+var_2BC]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_2A8] 7 +
cmp [ebp+var_248] 8 +
mov [ebp+var_2AC] 0 +
mov word ptr [ebp+var_2BC] ax +
jb loc_430400  +
push [ebp+var_25C]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_248] 7 +
cmp [ebp+var_260] 8 +
mov [ebp+var_24C] 0 +
mov word ptr [ebp+var_25C] ax +
jb loc_430434  +
push [ebp+var_274]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_260] 7 +
cmp [ebp+var_290] 8 +
mov [ebp+var_264] 0 +
mov word ptr [ebp+var_274] ax +
jb loc_430468  +
push [ebp+var_2A4]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
mov [ebp+var_290] 7 +
mov [ebp+var_294] 0 +
mov word ptr [ebp+var_2A4] ax +
jb loc_4304A3  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2E4] +
lea ecx [ebp+var_22C] +
mov esi offset unk_469720 +
test eax eax +
mov edx esi +
push edi  +
cmovnz edx eax +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 6 +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_4304F5  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2E8] +
lea ecx [ebp+var_22C] +
test eax eax +
mov edx esi +
push edi  +
cmovnz edx eax +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 7 +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_430542  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2F0] +
lea ecx [ebp+var_22C] +
test eax eax +
mov edx esi +
push edi  +
cmovnz edx eax +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 8 +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_43058F  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2D8] +
lea ecx [ebp+var_22C] +
test eax eax +
mov edx esi +
push edi  +
cmovnz edx eax +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 9 +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_4305DC  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2E0] +
lea ecx [ebp+var_22C] +
test eax eax +
mov edx esi +
push edi  +
cmovnz edx eax +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 0Ah +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_430629  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
mov eax [ebp+var_2DC] +
lea ecx [ebp+var_22C] +
test eax eax +
push edi  +
cmovnz esi eax +
mov edx esi +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 0Bh +
call loc_4117A0  +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_218] 8 +
jb loc_430676  +
push [ebp+var_22C]  +
call sub_43FFF6  +
add esp 4 +
lea eax [ebp+var_28C] +
push eax  +
call sub_4301A0  +
push edi  +
mov edx eax +
mov [ebp+var_4] 0Ch +
lea ecx [ebp+var_2D4] +
call sub_4114B0  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx ebx +
mov byte ptr [ebp+var_4] 0Dh +
call loc_4117A0  +
cmp [ebp+var_2C0] 8 +
jb loc_4306C1  +
push [ebp+var_2D4]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_278] 8 +
mov [ebp+var_2C0] 7 +
mov [ebp+var_2C4] 0 +
mov word ptr [ebp+var_2D4] ax +
jb loc_4306FC  +
push [ebp+var_28C]  +
call sub_43FFF6  +
add esp 4 +
mov edx [ebp+var_2EC] +
xor eax eax +
mov [ebp+var_278] 7 +
mov [ebp+var_27C] 0 +
mov word ptr [ebp+var_28C] ax +
cmp [edx] ax +
jnz loc_430728  +
xor ecx ecx +
jmp loc_43073F  +
mov ecx edx +
lea esi [ecx+2] +
lea ecx [ecx+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_430730  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx ebx +
call loc_411870  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E5A6  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax 205Ch +
call sub_4442E0  +
mov eax dword_474390 +
xor eax esp +
mov [esp+10h+arg_2040] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+20h+arg_2048] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_1C] +
mov ebx [ebp+arg_20] +
mov [esp+20h+var_8] eax +
mov eax [ebp+arg_8] +
mov [esp+20h+var_C] eax +
mov eax dword ptr [ebp+WideCharStr] +
mov [esp+24h] eax +
mov eax [ebp+arg_10] +
mov [esp+20h+arg_0] eax +
mov eax [ebp+arg_14] +
mov [esp+20h+var_4] eax +
mov eax [ebp+arg_18] +
mov [esp+20h] eax +
mov eax [ebp+arg_0] +
cmp [esi+64h] eax +
jg loc_430961  +
mov eax [esi+90h] +
test eax eax +
jz loc_430961  +
mov eax [eax] +
test eax eax +
jz loc_430961  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_430961  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
mov [esp+20h+arg_8] eax +
js loc_430868  +
jg loc_430844  +
cmp ecx 0E10h +
jb loc_430868  +
push ecx  +
mov ecx esi +
call sub_435950  +
test al al +
jz loc_430868  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [esp+20h+arg_20] 7 +
mov [esp+20h+arg_1C] 0 +
mov [esp+20h+WideCharStr] ax +
mov [esp+20h+arg_2050] eax +
test ebx ebx +
jz loc_4308A4  +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
lea eax [esp+2Ch+arg_3C] +
push 0FFFh  +
push eax  +
call sub_4454C0  +
add esp 14h +
lea edi [esp+20h+arg_3C] +
lea eax [esp+20h+WideCharStr] +
mov ecx esi +
push eax  +
push edi  +
push dword ptr [esp+28h]  +
push [esp+2Ch+var_4]  +
push [esp+30h+arg_0]  +
push dword ptr [esp+38h]  +
push [esp+38h+var_C]  +
push [esp+3Ch+var_8]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+lpBuffer]  +
call sub_430260  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_430926  +
mov [esp+20h+arg_38] 0Fh +
mov [esp+20h+arg_34] 0 +
mov byte ptr [esp+20h+lpBuffer] 0 +
lea edx [esp+20h+lpBuffer] +
mov byte ptr [esp+20h+arg_2050] 1 +
lea ecx [esp+20h+WideCharStr] +
call sub_435190  +
cmp [esp+20h+arg_38] 10h +
lea eax [esp+20h+lpBuffer] +
mov ecx esi +
cmovnb eax [esp+20h+lpBuffer] +
push eax  +
call sub_430040  +
lea ecx [esp+20h+lpBuffer] +
call sub_4101E0  +
jmp loc_43093C  +
cmp [esp+20h+arg_20] 8 +
lea eax [esp+20h+WideCharStr] +
mov ecx esi +
cmovnb eax dword ptr [esp+20h+WideCharStr] +
push eax  +
call sub_42FFD0  +
mov eax [esi+90h] +
test eax eax +
jz loc_43094E  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
cmp [esp+20h+arg_20] 8 +
jb loc_430961  +
push dword ptr [esp+20h+WideCharStr]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
mov ecx [esp+20h+arg_2048] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+10h+arg_2040] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E600  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+84h+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor eax eax +
mov [esp+84h+var_60] 7 +
push 0FFFFFFFFh  +
push eax  +
lea esi [edi+4Ch] +
mov [esp+8Ch+var_64] 0 +
push esi  +
lea ecx [esp+90h+var_74] +
mov word ptr [esp+90h+var_74] ax +
call loc_410ED0  +
lea ecx [esp+90h+var_80] +
mov [esp+90h+var_10] 0 +
call sub_4354C0  +
xor eax eax +
mov [esp+90h+var_3C] 7 +
mov [esp+90h+var_40] 0 +
mov word ptr [esp+90h+var_50] ax +
lea ecx [esp+90h+var_50] +
mov byte ptr [esp+90h+var_10] 1 +
call sub_435300  +
lea eax [esp+90h+var_50] +
mov edx offset asc_46AC5C +
push eax  +
lea ecx [esp+94h+var_38] +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esp+9Ch+var_80] +
mov byte ptr [esp+9Ch+var_10] 2 +
call loc_4117A0  +
cmp [esp+9Ch+var_30] 8 +
jb loc_430A6B  +
push [esp+9Ch+var_44]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+9Ch+var_60] 7 +
mov [esp+9Ch+var_64] 0 +
mov word ptr [esp+9Ch+var_74] ax +
lea edx [esp+9Ch+var_74] +
mov [esp+9Ch+var_1C] 3 +
mov ecx esi +
call sub_435750  +
lea edx [esp+9Ch+var_74] +
lea ecx [esp+9Ch+lpNewFileName] +
call sub_435550  +
cmp [esp+9Ch+var_78] 8 +
lea eax [esp+9Ch+lpNewFileName] +
cmovnb eax [esp+9Ch+lpNewFileName] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_430B09  +
cmp dword ptr [esi+10h] 0 +
jz loc_430B09  +
cmp [esp+9Ch+var_7C] 0 +
jz loc_430B09  +
cmp [esp+9Ch+var_78] 8 +
lea eax [esp+9Ch+lpNewFileName] +
cmovnb eax [esp+9Ch+lpNewFileName] +
cmp dword ptr [esi+14h] 8 +
jb loc_430ADF  +
mov esi [esi] +
push eax  +
push esi  +
call sub_44548D  +
add esp 8 +
test eax eax +
jnz loc_430B09  +
lea ecx [edi+98h] +
lea eax [esp+9Ch+lpNewFileName] +
cmp ecx eax +
jz loc_430B05  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_410ED0  +
mov bl 1 +
jmp loc_430B0B  +
xor bl bl +
cmp [esp+9Ch+var_60] 8 +
jb loc_430B1E  +
push [esp+9Ch+var_74]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+9Ch+var_60] 7 +
cmp [esp+9Ch+var_48] 8 +
mov [esp+9Ch+var_64] 0 +
mov word ptr [esp+9Ch+var_74] ax +
jb loc_430B48  +
push [esp+9Ch+var_5C]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+9Ch+var_48] 7 +
cmp [esp+9Ch+var_78] 8 +
mov [esp+9Ch+var_4C] 0 +
mov word ptr [esp+9Ch+var_5C] ax +
jb loc_430B72  +
push [esp+9Ch+lpNewFileName]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [esp+9Ch+var_24] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+8Ch+var_2C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
add eax 0FFFFFFF6h +
mov [ebp+var_4] 0 +
push esi  +
cmp eax 3Ch +
ja loc_430C6A  +
movzx eax ds:byte_430CB8[eax] +
jmp ds:off_430C98[eax*4]  +
mov ecx [ebp+arg_0] +
push offset aFatal  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aError  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aWarn  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aInfo  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aDebug  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aTrace  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aNone  +
call sub_410210  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov esi [ebp+arg_0] +
xor eax eax +
push 3  +
push offset aAll  +
mov ecx esi +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_410BB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp dword ptr [esi+60h] 8 +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E688  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax 10A4h +
call sub_4442E0  +
mov eax dword_474390 +
xor eax esp +
mov [esp+10h+arg_1088] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+20h+arg_1090] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_18] +
mov edi [ebp+arg_1C] +
mov [esp+20h+arg_0] eax +
mov eax [ebp+arg_8] +
mov [esp+20h] eax +
mov eax dword ptr [ebp+MultiByteStr] +
mov [esp+20h+var_8] eax +
mov eax [ebp+arg_10] +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_14] +
mov [esp+24h] eax +
mov eax [ebp+arg_20] +
mov [esp+20h+var_4] eax +
mov eax [ebp+arg_0] +
cmp [esi+64h] eax +
jg loc_43110C  +
mov eax [esi+90h] +
test eax eax +
jz loc_43110C  +
mov eax [eax] +
test eax eax +
jz loc_43110C  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_43110C  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
mov [esp+20h+arg_8] eax +
js loc_430E38  +
jg loc_430E14  +
cmp ecx 0E10h +
jb loc_430E38  +
push ecx  +
mov ecx esi +
call sub_435950  +
test al al +
jz loc_430E38  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [esp+20h+arg_80] 7 +
mov [esp+20h+arg_7C] 0 +
mov word ptr [esp+20h+arg_6C] ax +
mov [esp+20h+arg_1098] eax +
mov [esp+20h+arg_38] 7 +
mov [esp+20h+arg_34] eax +
mov word ptr [esp+20h+arg_24] ax +
mov [esp+20h+arg_50] 7 +
mov [esp+20h+arg_4C] eax +
mov word ptr [esp+20h+lpBuffer] ax +
mov [esp+20h+arg_68] 7 +
mov [esp+20h+arg_64] eax +
mov word ptr [esp+20h+arg_54] ax +
mov eax [esp+24h] +
mov byte ptr [esp+20h+arg_1098] 3 +
test eax eax +
jz loc_430EDD  +
push eax  +
lea ecx [esp+24h+MultiByteStr] +
call sub_4100D0  +
lea edx [esp+20h+arg_6C] +
mov byte ptr [esp+20h+arg_1098] 4 +
lea ecx [esp+20h+MultiByteStr] +
call sub_435240  +
lea ecx [esp+20h+MultiByteStr] +
mov byte ptr [esp+20h+arg_1098] 3 +
call sub_4101E0  +
jmp loc_430EEE  +
push offset unk_469720  +
lea ecx [esp+24h+arg_6C] +
call sub_410310  +
test ebx ebx +
jz loc_430F24  +
push ebx  +
lea ecx [esp+24h+MultiByteStr] +
call sub_4100D0  +
lea edx [esp+20h+arg_24] +
mov byte ptr [esp+20h+arg_1098] 5 +
lea ecx [esp+20h+MultiByteStr] +
call sub_435240  +
lea ecx [esp+20h+MultiByteStr] +
mov byte ptr [esp+20h+arg_1098] 3 +
call sub_4101E0  +
jmp loc_430F32  +
push offset unk_469720  +
lea ecx [esp+24h+arg_24] +
call sub_410310  +
mov eax [esp+20h+var_4] +
test eax eax +
jz loc_430F5A  +
push eax  +
push edi  +
push 0FFFFFFFFh  +
lea eax [esp+2Ch+arg_84] +
push 0FFFh  +
push eax  +
call sub_44C8B4  +
add esp 14h +
lea edi [esp+20h+arg_84] +
push edi  +
lea ecx [esp+24h+MultiByteStr] +
call sub_4100D0  +
lea edx [esp+20h+arg_54] +
mov byte ptr [esp+20h+arg_1098] 6 +
lea ecx [esp+20h+MultiByteStr] +
call sub_435240  +
mov byte ptr [esp+20h+arg_1098] 3 +
cmp [esp+20h+arg_20] 10h +
jb loc_430F94  +
push dword ptr [esp+20h+MultiByteStr]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+20h+arg_68] 8 +
lea edx [esp+20h+arg_54] +
lea ecx [esp+20h+arg_24] +
cmovnb edx [esp+20h+arg_54] +
lea edi [esp+20h+lpBuffer] +
cmp [esp+20h+arg_38] 8 +
lea eax [esp+20h+arg_6C] +
push edi  +
cmovnb ecx [esp+24h+arg_24] +
cmp [esp+24h+arg_80] 8 +
push edx  +
cmovnb eax [esp+28h+arg_6C] +
push ecx  +
push eax  +
push [esp+30h+var_C]  +
mov ecx esi +
push [esp+34h+var_8]  +
push dword ptr [esp+38h]  +
push [esp+3Ch+arg_0]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call sub_430260  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_431044  +
mov [esp+20h+arg_20] 0Fh +
mov [esp+20h+arg_1C] 0 +
mov [esp+20h+MultiByteStr] 0 +
lea edx [esp+20h+MultiByteStr] +
mov byte ptr [esp+20h+arg_1098] 7 +
mov ecx edi +
call sub_435190  +
cmp [esp+20h+arg_20] 10h +
lea eax [esp+20h+MultiByteStr] +
mov ecx esi +
cmovnb eax dword ptr [esp+20h+MultiByteStr] +
push eax  +
call sub_430040  +
lea ecx [esp+20h+MultiByteStr] +
call sub_4101E0  +
jmp loc_43105A  +
cmp [esp+20h+arg_50] 8 +
lea eax [esp+20h+lpBuffer] +
mov ecx esi +
cmovnb eax [esp+20h+lpBuffer] +
push eax  +
call sub_42FFD0  +
mov eax [esi+90h] +
test eax eax +
jz loc_43106C  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
cmp [esp+20h+arg_68] 8 +
jb loc_431082  +
push [esp+20h+arg_54]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+20h+arg_68] 7 +
cmp [esp+20h+arg_50] 8 +
mov [esp+20h+arg_64] 0 +
mov word ptr [esp+20h+arg_54] ax +
jb loc_4310B2  +
push [esp+20h+lpBuffer]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+20h+arg_50] 7 +
cmp [esp+20h+arg_38] 8 +
mov [esp+20h+arg_4C] 0 +
mov word ptr [esp+20h+lpBuffer] ax +
jb loc_4310DC  +
push [esp+20h+arg_24]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [esp+20h+arg_38] 7 +
cmp [esp+20h+arg_80] 8 +
mov [esp+20h+arg_34] 0 +
mov word ptr [esp+20h+arg_24] ax +
jb loc_43110C  +
push [esp+20h+arg_6C]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
mov ecx [esp+20h+arg_1090] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+10h+arg_1088] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_46ACC0 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
retn   +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4311C6  +
mov eax ecx +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_4312E9  +
mov edi [ebp+arg_4] +
jg loc_431213  +
test edi edi +
jz loc_4312E9  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_414660  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_43128E  +
jg loc_43123C  +
test esi esi +
jz loc_43128E  +
cmp ebx eax +
jg loc_43124C  +
jl loc_431246  +
cmp edi esi +
jnb loc_43124C  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_431268  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_4425D0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+2Ch] +
sub [eax] esi +
mov eax [edx+1Ch] +
add [eax] ecx +
jmp loc_4312C4  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4312D6  +
mov edx [ebp+arg_0] +
mov [edx] ax +
add edx 2 +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] edx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov edx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_431223  +
jl loc_4312D6  +
test edi edi +
jnz loc_431223  +
mov ecx [esp+20h+var_14] +
mov edx ecx +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_431407  +
mov edi [ebp+arg_4] +
jg loc_431333  +
test edi edi +
jz loc_431407  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_414680  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_4313AE  +
jg loc_43135C  +
test esi esi +
jz loc_4313AE  +
cmp ebx eax +
jg loc_43136C  +
jl loc_431366  +
cmp edi esi +
jnb loc_43136C  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_431388  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_4425D0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+30h] +
sub [eax] esi +
mov eax [edx+20h] +
add [eax] ecx +
jmp loc_4313E2  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax word ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_4313F4  +
mov edx [esp+24h+var_10] +
add esi 2 +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_431343  +
jl loc_4313F4  +
test edi edi +
jnz loc_431343  +
mov ecx [esp+24h+var_18] +
mov edx ecx +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45E6EF  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_46AD30 +
mov dword ptr [edi+10h] offset unk_469D54 +
mov dword ptr [edi+68h] offset off_46AD2C +
push ecx  +
lea esi [edi+18h] +
mov [ebp+var_4] 0 +
push esi  +
mov [ebp+var_10] 1 +
call sub_4320C0  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_46AD84 +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_432BD0  +
mov dword ptr [esi] offset off_46AD44 +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi-68h] +
lea ecx [esi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_46AD84 +
mov eax [esi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+esi-6Ch] eax +
call sub_431760  +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_46AD3C +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-6Ch] eax +
mov eax [esi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-58h] offset off_46ACE4 +
mov eax [esi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi-5Ch] eax +
mov eax [esi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-68h] offset off_46ACC0 +
mov eax [esi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-6Ch] eax +
pop esi  +
retn   +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_432170  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_46AD3C +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_46ACE4 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_46ACC0 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
test byte ptr [esi+3Ch] 1 +
mov dword ptr [esi] offset off_46AD44 +
jz loc_43177C  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
call sub_43FFF6  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi] offset off_46ACEC +
mov esi [esi+34h] +
test esi esi +
jz loc_4317EA  +
mov ecx [esi] +
test ecx ecx +
jz loc_4317E1  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4317E1  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_43180C  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebx  +
mov bx [ebp+arg_0] +
mov ecx 0FFFFh +
cmp cx bx +
jnz loc_431825  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push edi  +
test al 8 +
jz loc_43184D  +
mov edi [esi+20h] +
mov ecx [edi] +
test ecx ecx +
jz loc_43184D  +
mov edx [esi+38h] +
cmp ecx edx +
jnb loc_43184D  +
mov eax [esi+30h] +
mov eax [eax] +
mov [edi] edx +
lea ecx [ecx+eax*2] +
mov eax [esi+30h] +
sub ecx edx +
sar ecx 1 +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_431884  +
mov edx [esi+30h] +
mov edi [edx] +
lea eax [ecx+edi*2] +
cmp ecx eax +
jnb loc_431880  +
lea ecx [edi-1] +
mov ax bx +
mov [edx] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
mov [esi] bx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
test ecx ecx +
jnz loc_431888  +
xor edi edi +
jmp loc_431898  +
mov eax [esi+30h] +
mov edi [eax] +
mov eax [esi+0Ch] +
add edi edi +
sub edi [eax] +
add edi ecx +
sar edi 1 +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_4318A8  +
mov ecx 20h +
jmp loc_4318B0  +
test ecx ecx +
jz loc_4318C3  +
lea esp [esp+0] +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_4318BF  +
shr ecx 1 +
jnz loc_4318B0  +
test ecx ecx +
jnz loc_4318D1  +
pop edi  +
pop ebx  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
lea eax [ecx+edi] +
push eax  +
lea ecx [esi+40h] +
mov [ebp+var_8] eax +
call sub_4112F0  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov edx [ecx] +
mov [ebp+var_4] edx +
test edi edi +
jz loc_431903  +
lea ecx [edi+edi] +
push ecx  +
push edx  +
push ebx  +
call loc_4425D0  +
mov edx [ebp+var_4] +
add esp 0Ch +
test edi edi +
jnz loc_43194F  +
mov eax [esi+10h] +
mov ecx [ebp+var_8] +
mov edi [ebp+var_4] +
add ecx ecx +
mov [esi+38h] ebx +
mov [eax] ebx +
mov eax [esi+20h] +
sar ecx 1 +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_43193F  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
sar ebx 1 +
mov [eax] ebx +
jmp loc_4319D2  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_4319D2  +
mov eax [esi+38h] +
mov ecx [esi+10h] +
sub eax edx +
sar eax 1 +
mov edi [ebp+var_4] +
lea eax [ebx+eax*2] +
mov [esi+38h] eax +
mov eax [esi+20h] +
mov eax [eax] +
sub eax edx +
sar eax 1 +
lea edx [ebx+eax*2] +
mov eax [ecx] +
sub eax edi +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [ecx] eax +
mov eax [esi+20h] +
mov ecx [ebp+var_8] +
add ecx ecx +
sub ecx edx +
mov [eax] edx +
add ecx ebx +
mov eax [esi+30h] +
sar ecx 1 +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_4319AB  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
sar ebx 1 +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_4319D2  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
sub eax edi +
sar eax 1 +
lea ecx [ebx+eax*2] +
mov eax [esi+0Ch] +
sub edx ecx +
add edx 2 +
sar edx 1 +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_4319E1  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+arg_0] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+1Ch] +
push esi  +
push edi  +
mov edi 0FFFFh +
mov esi [eax] +
test esi esi +
jz loc_431A68  +
mov eax [ecx+0Ch] +
cmp esi [eax] +
jbe loc_431A68  +
mov dx [ebp+arg_0] +
cmp di dx +
jz loc_431A3F  +
cmp dx [esi-2] +
jz loc_431A3F  +
test byte ptr [ecx+3Ch] 2 +
jnz loc_431A68  +
mov eax [ecx+2Ch] +
inc dword ptr [eax]  +
mov eax [ecx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di dx +
jz loc_431A60  +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
mov [eax] dx +
movzx eax dx +
pop ebp  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jnz loc_431A95  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
push ebx  +
mov ebx [edx+2Ch] +
mov ecx [ebx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_431AA9  +
mov ax [esi] +
pop ebx  +
pop edi  +
pop esi  +
retn   +
test byte ptr [edx+3Ch] 4 +
jnz loc_431ADE  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_431ADE  +
cmp eax esi +
ja loc_431AC1  +
cmp [edx+38h] esi +
jbe loc_431ADE  +
cmp [edx+38h] eax +
jnb loc_431AC9  +
mov [edx+38h] eax +
mov eax [edx+38h] +
sub eax [edi] +
sar eax 1 +
mov [ebx] eax +
mov eax [edx+1Ch] +
pop ebx  +
pop edi  +
pop esi  +
mov eax [eax] +
mov ax [eax] +
retn   +
pop ebx  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
push ecx  +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_C] +
add esi [ebp+arg_4] +
push edi  +
adc ebx [ebp+arg_8] +
mov edi ecx +
mov edx [edi+20h] +
mov eax [edx] +
test eax eax +
jz loc_431D09  +
cmp [edi+38h] eax +
jnb loc_431D09  +
mov [edi+38h] eax +
mov eax ds:dword_463884 +
cmp esi ds:dword_463880 +
jnz loc_431D1E  +
cmp ebx eax +
jz loc_431E0B  +
mov ecx [ebp+arg_1C] +
test cl 1 +
jz loc_431DB5  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+10h+var_4] eax +
test eax eax +
jz loc_431DB0  +
test ebx ebx +
jl loc_431DA8  +
jg loc_431D41  +
test esi esi +
jb loc_431DA8  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_431DA8  +
jl loc_431D58  +
cmp esi eax +
ja loc_431DA8  +
sub ecx [esp+10h+var_4] +
mov eax [edi+2Ch] +
sar ecx 1 +
add ecx esi +
mov [esp+10h+var_4] ecx +
sub [eax] ecx +
mov ecx [edi+1Ch] +
mov eax [esp+10h+var_4] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_1C] 2 +
jz loc_431E0B  +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_431E0B  +
mov eax [edi+1Ch] +
mov edx [eax] +
mov eax [edi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edi+20h] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_431E0B  +
mov ebx ds:dword_463884 +
jmp loc_431E05  +
mov eax ds:dword_463884 +
test cl 2 +
jz loc_431E03  +
mov ecx [edx] +
mov [esp+10h+var_4] ecx +
test ecx ecx +
jz loc_431E03  +
test ebx ebx +
jl loc_431DA8  +
jg loc_431DCE  +
test esi esi +
jb loc_431DA8  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_431DA8  +
jl loc_431DE5  +
cmp esi eax +
ja loc_431DA8  +
sub ecx [esp+10h+var_4] +
mov eax [edi+30h] +
sar ecx 1 +
add ecx esi +
mov [esp+10h+var_4] ecx +
sub [eax] ecx +
mov ecx [edi+20h] +
mov eax [esp+10h+var_4] +
add eax eax +
add [ecx] eax +
jmp loc_431E0B  +
mov ebx eax +
mov esi ds:dword_463880 +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] esi +
pop esi  +
mov [eax+4] ebx +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push esi  +
lea esi [ecx-18h] +
mov eax [esi] +
lea edx [esi+18h] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_46ACC0 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_431E82  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_46ACEC +
test edi edi +
jz loc_431EC4  +
mov ecx [edi] +
test ecx ecx +
jz loc_431EBB  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_431EBB  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push edi  +
call sub_43FFF6  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_431ED3  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
lea edi [ecx-68h] +
lea esi [edi+68h] +
mov ecx esi +
call sub_4314D0  +
push esi  +
mov dword ptr [esi] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_431F10  +
push edi  +
call sub_43FFF6  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_431FD0  +
test [ebp+arg_0] 1 +
jz loc_431F3D  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-8] +
mov eax [esi] +
lea edx [esi+8] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_46ACE4 +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_431F92  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_431760  +
test [ebp+arg_0] 1 +
jz loc_431FBA  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
lea edx [ecx+20h] +
push edx  +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_46AD3C +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edx-24h] eax +
mov eax [edx-10h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-10h] offset off_46ACE4 +
mov eax [edx-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-14h] eax +
mov eax [edx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_46ACC0 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-24h] eax +
mov dword ptr [edx] offset off_4627B0 +
call sub_43AAFE  +
pop ecx  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_4320B5  +
cmp dword ptr [esi+14h] 8 +
jb loc_43205E  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp dword ptr [edi+14h] 8 +
jnb loc_43208C  +
mov eax [edi+10h] +
inc eax  +
jz loc_432096  +
add eax eax +
push eax  +
push edi  +
push esi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_432096  +
mov eax [edi] +
mov [esi] eax +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
xor eax eax +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45E75B  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov eax [esi] +
push ecx  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_46ACC0 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_433630  +
mov eax [esi+10h] +
mov eax [eax+4] +
mov dword ptr [esi+eax+10h] offset off_46ACE4 +
mov eax [esi+10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+esi+0Ch] eax +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_46AD3C +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 28h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_8] eax +
mov edx ecx +
mov [ebp+var_24] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_4321CF  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_4321CF  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
mov eax [eax] +
xor edx edx +
sub ecx eax +
mov [ebp+var_C] 7 +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [ebp+var_20] +
mov [ebp+var_10] 0 +
mov word ptr [ebp+var_20] dx +
call loc_410BB0  +
jmp loc_4321FE  +
test cl 4 +
jnz loc_4321EA  +
mov eax [edx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_4321EA  +
mov eax [edx+2Ch] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edx+0Ch] +
jmp loc_4321A9  +
xor eax eax +
mov [ebp+var_C] 7 +
mov [ebp+var_10] 0 +
mov word ptr [ebp+var_20] ax +
lea eax [ebp+var_20] +
mov ecx esi +
push eax  +
call sub_410270  +
cmp [ebp+var_C] 8 +
jb loc_43221A  +
push [ebp+var_20]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+var_8] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
mov edx [ecx+10h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_43228E  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_432294  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_4322FE  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_432304  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_410BB0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E790  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+64h+var_C] +
mov large fs:0 eax +
mov [esp+64h+var_54] ecx +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_10] +
mov ebx [ebp+arg_0] +
movzx edi ax +
test dword ptr [esi+14h] 4000h +
mov [esp+64h+var_48] edi +
jnz loc_43239E  +
mov eax [ebp+arg_14] +
mov edx [ecx] +
movzx eax al +
push eax  +
push edi  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [edx+24h]  +
jmp loc_4324FB  +
lea eax [esp+64h+var_50] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+68h+var_4] 0 +
call sub_433960  +
mov [esp+68h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+64h+var_50] +
mov edi eax +
test ecx ecx +
jz loc_4323DE  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4323DE  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [esp+68h+var_34] 7 +
mov [esp+68h+var_38] 0 +
mov word ptr [esp+68h+var_48] ax +
cmp byte ptr [ebp+arg_14] 0 +
lea eax [esp+68h+var_30] +
mov [esp+68h+var_8] 1 +
mov ecx edi +
push eax  +
jz loc_432411  +
call sub_4148E0  +
jmp loc_432416  +
call sub_4148C0  +
push eax  +
lea ecx [esp+6Ch+var_48] +
call sub_432040  +
cmp [esp+68h+var_1C] 8 +
jb loc_432433  +
push [esp+68h+var_30]  +
call sub_43FFF6  +
add esp 4 +
cmp dword ptr [esi+24h] 0 +
mov ecx [esp+68h+var_38] +
jl loc_432450  +
jg loc_432445  +
cmp dword ptr [esi+20h] 0 +
jbe loc_432450  +
mov edi [esi+20h] +
cmp edi ecx +
jbe loc_432450  +
sub edi ecx +
jmp loc_432452  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_43248E  +
push edi  +
push [esp+6Ch+var_4C]  +
lea eax [esp+70h+var_54] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [esp+7Ch+var_58]  +
call sub_4335C0  +
mov ecx [esp+80h+var_38] +
add esp 18h +
xor edi edi +
mov edx [eax] +
mov [ebp+arg_4] edx +
mov eax [eax+4] +
mov [ebp+arg_8] eax +
jmp loc_432494  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
cmp [esp+68h+var_34] 8 +
mov [esp+68h+var_54] eax +
lea eax [esp+68h+var_48] +
cmovnb eax [esp+68h+var_48] +
push ecx  +
push eax  +
push [esp+70h+var_54]  +
lea eax [esp+74h+var_54] +
push edx  +
push eax  +
push [esp+7Ch+var_58]  +
call sub_433540  +
push edi  +
push [esp+84h+var_4C]  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push ebx  +
push [esp+94h+var_58]  +
mov [ebp+arg_8] eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call sub_4335C0  +
add esp 30h +
cmp [esp+68h+var_34] 8 +
jb loc_4324FB  +
push [esp+68h+var_48]  +
call sub_43FFF6  +
add esp 4 +
mov eax ebx +
mov ecx [esp+68h+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+58h+var_18] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4331A0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4331A0  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+78h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4331A0  +
mov ecx [esp+94h+var_4] +
add esp 34h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_474390 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_418C40  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+78h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4331A0  +
mov ecx [esp+94h+var_4] +
add esp 34h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+98h+var_4] eax +
mov eax [ebp+arg_0] +
mov [esp+98h+var_88] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [esp+0A0h+var_84] ecx +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov [esp+0A0h+var_8C] eax +
test edi edi +
jg loc_432779  +
jl loc_43275E  +
test esi esi +
jnz loc_43276E  +
test dword ptr [eax+14h] 2000h +
jnz loc_43276E  +
mov esi 6 +
xor edi edi +
test edi edi +
jl loc_432784  +
jg loc_432779  +
cmp esi 24h +
jbe loc_432784  +
mov eax 24h +
mov [esp+0A0h+var_90] eax +
jmp loc_43278A  +
mov eax esi +
mov [esp+0A0h+var_90] esi +
movsd xmm1 [ebp+arg_14] +
cdq   +
sub esi eax +
mov eax [esp+0A0h+var_8C] +
sbb edi edx +
xor edx edx +
xor ecx ecx +
mov [esp+0A0h+var_98] edx +
mov eax [eax+14h] +
and eax 3000h +
mov [esp+0A0h+var_94] ecx +
cmp eax 2000h +
jnz loc_432865  +
movapd xmm0 xmm1 +
mulsd xmm0 ds:qword_46AE88 +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jnp loc_432865  +
movsd xmm4 ds:qword_46AEA0 +
xorps xmm3 xmm3 +
comisd xmm3 xmm1 +
setnbe al  +
test al al +
jz loc_4327EB  +
xorpd xmm1 xmm4 +
movsd xmm0 ds:qword_46AE98 +
comisd xmm1 xmm0 +
movsd xmm2 ds:qword_46AE90 +
jb loc_43281A  +
cmp edx 1388h +
jnb loc_432816  +
divsd xmm1 xmm2 +
add edx 0Ah +
comisd xmm1 xmm0 +
jnb loc_432801  +
mov [esp+0A0h+var_98] edx +
comisd xmm1 xmm3 +
jbe loc_43285D  +
test edi edi +
jl loc_43285D  +
jg loc_43282B  +
cmp esi 0Ah +
jb loc_43285D  +
movsd xmm0 ds:qword_46AE80 +
comisd xmm0 xmm1 +
jb loc_432859  +
cmp ecx 1388h +
jnb loc_432859  +
add esi 0FFFFFFF6h +
mulsd xmm1 xmm2 +
adc edi 0FFFFFFFFh +
add ecx 0Ah +
test edi edi +
jg loc_432833  +
jl loc_432859  +
cmp esi 0Ah +
jnb loc_432833  +
mov [esp+0A0h+var_94] ecx +
test al al +
jz loc_432865  +
xorpd xmm1 xmm4 +
mov edi [esp+0A0h+var_8C] +
lea eax [esp+0A0h+var_80+1] +
mov byte ptr [esp+0A0h+var_80] 25h +
mov edx [edi+14h] +
test dl 20h +
jz loc_432883  +
mov byte ptr [esp+0A0h+var_80+1] 2Bh +
lea eax [esp+0A0h+var_80+2] +
test dl 10h +
jz loc_43288C  +
mov byte ptr [eax] 23h +
inc eax  +
mov ecx edx +
mov word ptr [eax] 2A2Eh +
and ecx 3000h +
test dl 4 +
jz loc_4328C4  +
cmp ecx 2000h +
jz loc_4328CC  +
cmp ecx 3000h +
jnz loc_4328B2  +
mov cl 41h +
jmp loc_4328EC  +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
jmp loc_4328EC  +
cmp ecx 2000h +
jnz loc_4328D0  +
mov cl 66h +
jmp loc_4328EC  +
cmp ecx 3000h +
jnz loc_4328DC  +
mov cl 61h +
jmp loc_4328EC  +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax+2] cl +
sub esp 8 +
add eax 3 +
movsd [esp+0A8h+var_A8] xmm1 +
mov byte ptr [eax] 0 +
lea eax [esp+0A8h+var_80] +
push [esp+0A8h+var_90]  +
push eax  +
lea eax [esp+0B0h+var_78] +
push 6Ch  +
push eax  +
call sub_4407C8  +
push eax  +
push esi  +
push [esp+0C0h+var_94]  +
mov esi [esp+0C4h+var_88] +
lea eax [esp+0C4h+var_78] +
push [esp+0C4h+var_98]  +
push eax  +
push [ebp+arg_10]  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [esp+0E0h+var_84]  +
call sub_432D30  +
mov ecx [esp+0E4h+var_4] +
add esp 44h +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 98h +
mov eax dword_474390 +
xor eax esp +
mov [esp+98h+var_4] eax +
mov eax [ebp+arg_0] +
mov [esp+98h+var_88] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [esp+0A0h+var_84] ecx +
mov edi [eax+1Ch] +
mov esi [eax+18h] +
mov [esp+0A0h+var_98] eax +
test edi edi +
jg loc_4329B9  +
jl loc_43299E  +
test esi esi +
jnz loc_4329AE  +
test dword ptr [eax+14h] 2000h +
jnz loc_4329AE  +
mov esi 6 +
xor edi edi +
test edi edi +
jl loc_4329C4  +
jg loc_4329B9  +
cmp esi 24h +
jbe loc_4329C4  +
mov eax 24h +
mov [esp+0A0h+var_94] eax +
jmp loc_4329CA  +
mov eax esi +
mov [esp+0A0h+var_94] esi +
movsd xmm0 [ebp+arg_14] +
cdq   +
sub esi eax +
mov eax [esp+0A0h+var_98] +
sbb edi edx +
xor edx edx +
xor ecx ecx +
mov [esp+0A0h+var_8C] edx +
mov eax [eax+14h] +
mov [esp+0A0h+var_80] eax +
and eax 3000h +
mov [esp+0A0h+var_90] ecx +
cmp eax 2000h +
jnz loc_432A94  +
movsd xmm4 ds:qword_46AEA0 +
xorps xmm3 xmm3 +
comisd xmm3 xmm0 +
setnbe al  +
test al al +
jz loc_432A15  +
xorpd xmm0 xmm4 +
movsd xmm1 ds:qword_46AE98 +
comisd xmm0 xmm1 +
movsd xmm2 ds:qword_46AE90 +
jb loc_432A49  +
jmp loc_432A30  +
cmp edx 1388h +
jnb loc_432A45  +
divsd xmm0 xmm2 +
add edx 0Ah +
comisd xmm0 xmm1 +
jnb loc_432A30  +
mov [esp+0A0h+var_8C] edx +
comisd xmm0 xmm3 +
jbe loc_432A8C  +
test edi edi +
jl loc_432A8C  +
jg loc_432A5A  +
cmp esi 0Ah +
jb loc_432A8C  +
movsd xmm1 ds:qword_46AE80 +
comisd xmm1 xmm0 +
jb loc_432A88  +
cmp ecx 1388h +
jnb loc_432A88  +
add esi 0FFFFFFF6h +
mulsd xmm0 xmm2 +
adc edi 0FFFFFFFFh +
add ecx 0Ah +
test edi edi +
jg loc_432A62  +
jl loc_432A88  +
cmp esi 0Ah +
jnb loc_432A62  +
mov [esp+0A0h+var_90] ecx +
test al al +
jz loc_432A94  +
xorpd xmm0 xmm4 +
mov edi [esp+0A0h+var_84] +
lea eax [esp+0A0h+var_80] +
sub esp 8 +
movsd [esp+0A8h+var_A8] xmm0 +
push [esp+0A8h+var_94]  +
push [esp+0ACh+var_80]  +
push 4Ch  +
push eax  +
push edi  +
call sub_418700  +
add esp 10h +
push eax  +
lea eax [esp+0B0h+var_78] +
push 6Ch  +
push eax  +
call sub_4407C8  +
push eax  +
push esi  +
push [esp+0C0h+var_90]  +
mov esi [esp+0C4h+var_88] +
lea eax [esp+0C4h+var_78] +
push [esp+0C4h+var_8C]  +
push eax  +
push [ebp+arg_10]  +
push [esp+0D0h+var_98]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_432D30  +
mov ecx [esp+0E4h+var_4] +
add esp 44h +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_474390 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_4407C8  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_4331A0  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_463A3C +
call sub_440842  +
push dword ptr [esi+10h]  +
call sub_440842  +
push dword ptr [esi+14h]  +
call sub_440842  +
add esp 0Ch +
mov dword ptr [esi] offset off_4626B0 +
test [ebp+arg_0] 1 +
jz loc_432BBC  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
push 4  +
mov dword ptr [esi] offset off_46ACEC +
call sub_440048  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_432BF8  +
push 1  +
call sub_43A89D  +
add esp 4 +
mov [edi] eax +
jmp loc_432BFA  +
xor edi edi +
lea eax [esi+4] +
mov [esi+34h] edi +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
pop edi  +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx ebx +
jb loc_432D0E  +
mov edi [ebp+0Ch] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax edi +
jbe loc_432D18  +
test edi edi +
jz loc_432D05  +
lea eax [ecx+edi] +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+8] eax +
call loc_410FF0  +
test al al +
jz loc_432D05  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_432CAA  +
mov edx [esi] +
jmp loc_432CAC  +
mov edx esi +
cmp eax 8 +
jb loc_432CB5  +
mov ecx [esi] +
jmp loc_432CB7  +
mov ecx esi +
mov eax [esi+10h] +
sub eax ebx +
jz loc_432CD4  +
add eax eax +
push eax  +
lea eax [edx+ebx*2] +
push eax  +
lea eax [ebx+edi] +
lea eax [ecx+eax*2] +
push eax  +
call loc_43F850  +
add esp 0Ch +
push dword ptr [ebp+10h]  +
mov ecx esi +
push edi  +
push ebx  +
call sub_433780  +
cmp dword ptr [esi+14h] 8 +
mov ecx [ebp+8] +
mov [esi+10h] ecx +
jb loc_432CFD  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor edx edx +
mov [eax+ecx*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_43A666  +
push offset aStringTooLong  +
call sub_43A638  +
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E7E0  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_474390 +
xor eax esp +
mov [esp+74h+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+84h+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_28] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov edi [ebp+arg_18] +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_58] esi +
mov [esp+84h+var_60] ecx +
test ecx ecx +
jz loc_432D94  +
mov al [edi] +
cmp al 2Bh +
jz loc_432D8D  +
cmp al 2Dh +
jnz loc_432D94  +
mov ebx 1 +
jmp loc_432D96  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 3000h +
cmp eax 3000h +
jz loc_432DAC  +
mov edx offset aEe +
jmp loc_432DCE  +
lea eax [ebx+2] +
mov edx offset aPp +
cmp eax ecx +
ja loc_432DCE  +
cmp byte ptr [edi+ebx] 30h +
jnz loc_432DCE  +
mov cl [edi+ebx+1] +
cmp cl 78h +
jz loc_432DCC  +
cmp cl 58h +
jnz loc_432DCE  +
mov ebx eax +
push edx  +
push edi  +
call sub_440850  +
mov [esp+8Ch+var_4C] eax +
mov eax 2Eh +
mov word ptr [esp+8Ch+var_6C] ax +
call sub_44081C  +
mov eax [eax] +
mov al [eax] +
mov byte ptr [esp+8Ch+var_6C] al +
lea eax [esp+8Ch+var_6C] +
push eax  +
push edi  +
call sub_440850  +
add esp 10h +
mov [esp+84h+var_70] eax +
lea eax [esp+84h+var_5C] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+88h+var_4] 0 +
call sub_4337E0  +
mov [esp+88h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+84h+var_5C] +
mov [esp+84h+var_68] eax +
test ecx ecx +
jz loc_432E4A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_432E4A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [esp+88h+var_6C] +
push 30h  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
movzx eax ax +
lea ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_6C] eax +
xor eax eax +
push eax  +
push [esp+90h+var_68]  +
mov [esp+94h+var_38] 7 +
mov [esp+94h+var_3C] 0 +
mov word ptr [esp+94h+var_4C] ax +
call loc_4336E0  +
mov ecx [esp+94h+var_78] +
lea eax [esp+94h+var_54] +
mov [esp+94h+var_14] 1 +
cmp [esp+94h+var_40] 8 +
cmovnb eax [esp+94h+var_54] +
mov edx [ecx] +
push eax  +
mov eax [esp+98h+var_70] +
add eax edi +
push eax  +
push edi  +
call dword ptr [edx+2Ch]  +
lea eax [esp+0A0h+var_78] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+0A4h+var_20] 2 +
call sub_433960  +
mov [esp+0A4h+var_20] 1 +
add esp 4 +
mov ecx [esp+0A0h+var_78] +
mov esi eax +
mov [esp+0A0h+var_84] esi +
test ecx ecx +
jz loc_432EF0  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_432EF0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [esp+0A4h+var_4C] +
mov ecx esi +
push eax  +
call sub_414F10  +
mov [esp+0A4h+var_24] 3 +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+10h]  +
mov ecx [esp+0A4h+var_6C] +
push [esp+0A4h+var_84]  +
movzx eax ax +
mov [esp+0A8h+var_70] eax +
mov eax [esp+0A8h+var_90] +
cmp eax [esp+0A8h+var_80] +
jnz loc_432F2E  +
mov eax [ebp+arg_1C] +
push eax  +
push ecx  +
lea edi [ecx+eax] +
jmp loc_432F7F  +
push [ebp+arg_24]  +
mov esi [ebp+arg_1C] +
push ecx  +
lea ecx [esp+0B0h+var_64] +
lea edi [eax+esi] +
call loc_432C60  +
push [esp+0B0h+var_90]  +
mov eax [esp+0B4h+var_9C] +
lea ecx [esp+0B4h+var_70] +
push [ebp+arg_20]  +
inc eax  +
push eax  +
call loc_432C60  +
mov ecx [esp+0BCh+var_A0] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [esp+0BCh+var_68] 8 +
mov edx [esp+0BCh+var_A8] +
push [esp+0BCh+var_9C]  +
movzx ecx ax +
lea eax [esp+0C0h+var_7C] +
cmovnb eax [esp+0C0h+var_7C] +
push esi  +
push edx  +
mov [eax+edx*2] cx +
lea ecx [esp+0C8h+var_7C] +
call loc_432C60  +
cmp [esp+0C8h+var_5C] 10h +
lea esi [esp+0C8h+var_70] +
cmovnb esi [esp+0C8h+var_70] +
mov al [esi] +
cmp al 7Fh +
jz loc_432FD1  +
lea esp [esp+0] +
test al al +
jle loc_432FD1  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_432FD1  +
push [esp+0C8h+var_94]  +
sub edi ecx +
lea ecx [esp+0CCh+var_88] +
push 1  +
push edi  +
call loc_432C60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_432FA0  +
mov edi [esp+0D4h+var_A8] +
mov eax [esp+0D4h+var_84] +
mov [esp+0D4h+var_A0] eax +
cmp dword ptr [edi+24h] 0 +
jl loc_432FF6  +
jg loc_432FEB  +
cmp dword ptr [edi+20h] 0 +
jbe loc_432FF6  +
mov esi [edi+20h] +
cmp esi eax +
jbe loc_432FF6  +
sub esi eax +
jmp loc_432FF8  +
xor esi esi +
mov eax [edi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_4330AA  +
cmp eax 100h +
jz loc_43305D  +
push esi  +
push [ebp+arg_14]  +
lea eax [esp+0DCh+var_A8] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4335C0  +
mov ecx eax +
xor esi esi +
cmp [esp+0ECh+var_80] 8 +
push ebx  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0F0h+var_94] +
cmovnb eax [esp+0F0h+var_94] +
push eax  +
push dword ptr [ecx+4]  +
lea eax [esp+0F8h+var_A8] +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
add esp 30h +
jmp loc_4330D0  +
cmp [esp+0D4h+var_80] 8 +
lea eax [esp+0D4h+var_94] +
push ebx  +
cmovnb eax [esp+0D8h+var_94] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0E0h+var_A8] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
mov ecx eax +
push esi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0F4h+var_A8] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4335C0  +
add esp 30h +
xor esi esi +
jmp loc_4330D0  +
cmp [esp+0D4h+var_80] 8 +
lea eax [esp+0D4h+var_94] +
push ebx  +
cmovnb eax [esp+0D8h+var_94] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0E0h+var_A8] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
add esp 18h +
mov edx [eax] +
cmp [esp+0D4h+var_80] 8 +
mov ecx [esp+0D4h+var_A0] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [esp+0D4h+var_C0] eax +
mov [ebp+arg_C] eax +
lea eax [esp+0D4h+var_94] +
cmovnb eax [esp+0D4h+var_94] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [esp+0DCh+var_C0]  +
lea eax [esp+0E0h+var_A8] +
push edx  +
push eax  +
push ebx  +
call sub_433540  +
push esi  +
push [ebp+arg_14]  +
mov esi [esp+0F4h+var_98] +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
call sub_4335C0  +
add esp 30h +
cmp [esp+0D4h+var_68] 10h +
jb loc_43314B  +
push [esp+0D4h+var_7C]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+0D4h+var_80] 8 +
mov [esp+0D4h+var_68] 0Fh +
mov [esp+0D4h+var_6C] 0 +
mov byte ptr [esp+0D4h+var_7C] 0 +
jb loc_433173  +
push [esp+0D4h+var_94]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [esp+0D4h+var_5C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+0C4h+var_64] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push 0FFFFFFFFh  +
push offset loc_45E830  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_474390 +
xor eax esp +
mov [esp+5Ch+var_14] eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+6Ch+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov ecx [ebp+arg_18] +
mov [esp+6Ch+var_48] eax +
mov [esp+6Ch+var_54] esi +
mov [esp+6Ch+var_5C] ecx +
test edi edi +
jz loc_433204  +
mov al [ecx] +
cmp al 2Bh +
jz loc_4331FD  +
cmp al 2Dh +
jnz loc_433204  +
mov ebx 1 +
jmp loc_433206  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 0E00h +
cmp eax 800h +
jnz loc_433232  +
lea eax [ebx+2] +
cmp eax edi +
ja loc_433232  +
cmp byte ptr [ecx+ebx] 30h +
jnz loc_433232  +
mov cl [ecx+ebx+1] +
cmp cl 78h +
jz loc_433230  +
cmp cl 58h +
jnz loc_433232  +
mov ebx eax +
lea eax [esp+6Ch+var_4C] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+70h+var_4] 0 +
call sub_4337E0  +
mov [esp+70h+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_58] eax +
test ecx ecx +
jz loc_433274  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_433274  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [esp+70h+var_34] 7 +
push eax  +
push edi  +
lea ecx [esp+78h+var_48] +
mov [esp+78h+var_38] 0 +
mov word ptr [esp+78h+var_48] ax +
call loc_4336E0  +
mov [esp+78h+var_10] 1 +
lea eax [esp+78h+var_50] +
cmp [esp+78h+var_3C] 8 +
mov ecx [esp+78h+var_68] +
cmovnb eax [esp+78h+var_50] +
mov edx [esp+78h+var_64] +
push eax  +
lea eax [edi+ecx] +
push eax  +
mov edx [edx] +
push ecx  +
mov ecx [esp+84h+var_64] +
call dword ptr [edx+2Ch]  +
lea eax [esp+84h+var_74] +
mov ecx esi +
push eax  +
call sub_4129C0  +
push eax  +
mov [esp+88h+var_1C] 2 +
call sub_433960  +
mov [esp+88h+var_1C] 1 +
add esp 4 +
mov ecx [esp+84h+var_74] +
mov esi eax +
mov [esp+84h+var_64] esi +
test ecx ecx +
jz loc_433301  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_433301  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [esp+88h+var_48] +
mov ecx esi +
push eax  +
call sub_414F10  +
mov [esp+88h+var_20] 3 +
lea esi [esp+88h+var_48] +
cmp [esp+88h+var_34] 10h +
cmovnb esi [esp+88h+var_48] +
mov al [esi] +
cmp al 7Fh +
jz loc_433372  +
test al al +
jle loc_433372  +
mov ecx [esp+88h+var_68] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
movzx edx ax +
mov al [esi] +
mov [esp+88h+var_78] edx +
cmp al 7Fh +
jz loc_433372  +
test al al +
jle loc_433372  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_433372  +
push edx  +
sub edi ecx +
lea ecx [esp+8Ch+var_60] +
push 1  +
push edi  +
call loc_432C60  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov edx [esp+94h+var_84] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_433340  +
mov esi [esp+94h+var_7C] +
mov eax [esp+94h+var_5C] +
mov [esp+94h+var_84] eax +
cmp dword ptr [esi+24h] 0 +
jl loc_433397  +
jg loc_43338C  +
cmp dword ptr [esi+20h] 0 +
jbe loc_433397  +
mov edi [esi+20h] +
cmp edi eax +
jbe loc_433397  +
sub edi eax +
jmp loc_433399  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_43344B  +
cmp eax 100h +
jz loc_4333FE  +
push edi  +
push [ebp+arg_14]  +
lea eax [esp+9Ch+var_7C] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4335C0  +
mov edx eax +
lea ecx [esp+0ACh+var_6C] +
xor edi edi +
cmp [esp+0ACh+var_58] 8 +
push ebx  +
cmovnb ecx [esp+0B0h+var_6C] +
mov eax [edx] +
mov [ebp+arg_8] eax +
mov eax [edx+4] +
push ecx  +
mov [ebp+arg_C] eax +
lea eax [esp+0B4h+var_7C] +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
add esp 30h +
jmp loc_433471  +
cmp [esp+94h+var_58] 8 +
lea eax [esp+94h+var_6C] +
push ebx  +
cmovnb eax [esp+98h+var_6C] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0A0h+var_7C] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
mov ecx eax +
push edi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [esp+0B4h+var_7C] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4335C0  +
add esp 30h +
xor edi edi +
jmp loc_433471  +
cmp [esp+94h+var_58] 8 +
lea eax [esp+94h+var_6C] +
push ebx  +
cmovnb eax [esp+98h+var_6C] +
push eax  +
push [ebp+arg_C]  +
lea eax [esp+0A0h+var_7C] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_433540  +
add esp 18h +
mov edx [eax] +
cmp [esp+94h+var_58] 8 +
mov ecx [esp+94h+var_84] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [esp+94h+var_80] eax +
mov [ebp+arg_C] eax +
lea eax [esp+94h+var_6C] +
cmovnb eax [esp+94h+var_6C] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [esp+9Ch+var_80]  +
lea eax [esp+0A0h+var_7C] +
push edx  +
push eax  +
push ebx  +
call sub_433540  +
push edi  +
push [ebp+arg_14]  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov esi [esp+0BCh+var_70] +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
call sub_4335C0  +
add esp 30h +
cmp [esp+94h+var_40] 10h +
jb loc_4334EC  +
push [esp+94h+var_54]  +
call sub_43FFF6  +
add esp 4 +
cmp [esp+94h+var_58] 8 +
mov [esp+94h+var_40] 0Fh +
mov [esp+94h+var_44] 0 +
mov byte ptr [esp+94h+var_54] 0 +
jb loc_433514  +
push [esp+94h+var_6C]  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
mov ecx [esp+94h+var_34] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+84h+var_3C] +
xor ecx esp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
test esi esi +
jz loc_4335A3  +
push ebx  +
push edi  +
mov edi [ebp+arg_10] +
test edx edx +
jz loc_433597  +
mov eax [edx+20h] +
movzx ebx word ptr [edi] +
cmp dword ptr [eax] 0 +
jz loc_43357F  +
mov ecx [edx+30h] +
mov eax [ecx] +
test eax eax +
jle loc_43357F  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov eax ebx +
mov [edx] bx +
jmp loc_43358A  +
mov eax [edx] +
mov ecx edx +
push ebx  +
call dword ptr [eax+0Ch]  +
movzx eax ax +
mov edx [ebp+arg_C] +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_43359B  +
mov byte ptr [ebp+arg_8] 1 +
add edi 2 +
dec esi  +
jnz loc_433553  +
pop edi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop esi  +
mov [eax] ecx +
mov [eax+4] edx +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
test esi esi +
jz loc_43361E  +
push ebx  +
push edi  +
mov edi [ebp+arg_10] +
mov ebx 0FFFFh +
test edx edx +
jz loc_433615  +
mov eax [edx+20h] +
cmp dword ptr [eax] 0 +
jz loc_433602  +
mov ecx [edx+30h] +
mov eax [ecx] +
test eax eax +
jle loc_433602  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov [edx] di +
movzx eax di +
jmp loc_43360D  +
mov eax [edx] +
mov ecx edx +
push edi  +
call dword ptr [eax+0Ch]  +
movzx eax ax +
mov edx [ebp+arg_C] +
cmp bx ax +
jnz loc_433619  +
mov byte ptr [ebp+arg_8] 1 +
dec esi  +
jnz loc_4335D8  +
pop edi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop esi  +
mov [eax] ecx +
mov [eax+4] edx +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BB18  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_412AA0  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+arg_0] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_4129C0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4337E0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esp 4 +
mov ecx [ebp+arg_0] +
mov edi eax +
test ecx ecx +
jz loc_4336A4  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4336A4  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax [edi] +
mov ecx edi +
push 20h  +
call dword ptr [eax+30h]  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] ax +
jnz loc_4336C7  +
mov eax [esi+0Ch] +
mov ecx esi +
or eax 4 +
push 0  +
push eax  +
call loc_412900  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jz loc_433769  +
cmp edi 7FFFFFFEh +
ja loc_433773  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_433731  +
push dword ptr [esi+10h]  +
push edi  +
call sub_411190  +
test edi edi +
jz loc_433761  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push edi  +
push 0  +
call sub_433780  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_433759  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_43370B  +
mov [esi+10h] edi +
cmp eax 8 +
jb loc_43374C  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_43A638  +
push offset aStringTooLong  +
call sub_43A638  +
mov edx ecx +
mov ecx [ebp+arg_4] +
cmp ecx 1 +
jnz loc_4337A4  +
cmp dword ptr [edx+14h] 8 +
jb loc_433795  +
mov edx [edx] +
mov ecx [ebp+arg_0] +
mov ax [ebp+arg_8] +
mov [edx+ecx*2] ax +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edx+14h] 8 +
jb loc_4337AC  +
mov edx [edx] +
mov eax [ebp+arg_0] +
push edi  +
lea edi [edx+eax*2] +
test ecx ecx +
jz loc_4337CD  +
mov eax dword ptr [ebp+arg_8] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_476EC0 +
mov ebx dword_478234 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_43385B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_476EC0 edi +
jnz loc_43384D  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_476EC0 eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_476EC0 +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_433871  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4338DD  +
jmp loc_433873  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_433889  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_43388D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4338DD  +
test ebx ebx +
jz loc_433895  +
mov esi ebx +
jmp loc_4338DD  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_42F3E0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4338C4  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_478234 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [edx+14h] +
sub eax [edx+10h] +
push esi  +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_0] +
cmp [ecx+10h] eax +
jbe loc_433940  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax [edx+10h] +
jb loc_433940  +
sub esp 8 +
push edx  +
push ecx  +
call loc_433D10  +
push eax  +
mov ecx esi +
call sub_410270  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_4117A0  +
push eax  +
mov ecx esi +
call sub_410270  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_478250 +
mov ebx dword_47823C +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_4339DB  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_478250 edi +
jnz loc_4339CD  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_478250 eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_478250 +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_4339F1  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_433A5D  +
jmp loc_4339F3  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_433A09  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_433A0D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_433A5D  +
test ebx ebx +
jz loc_433A15  +
mov esi ebx +
jmp loc_433A5D  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_433BA0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_433A44  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_47823C esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45BC28  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_43ABAB  +
mov [ebp+var_4] 0 +
mov edi dword_478240 +
mov ebx dword_478238 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_433AFB  +
push edi  +
lea ecx [ebp+var_14] +
call sub_43ABAB  +
cmp dword_478240 edi +
jnz loc_433AED  +
mov eax dword_476EA4 +
inc eax  +
mov dword_476EA4 eax +
mov dword_478240 eax +
lea ecx [ebp+var_14] +
call sub_43AC06  +
mov edi dword_478240 +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp edi [ecx+0Ch] +
jnb loc_433B11  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_433B7D  +
jmp loc_433B13  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_433B29  +
call sub_43A897  +
cmp edi [eax+0Ch] +
jnb loc_433B2D  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_433B7D  +
test ebx ebx +
jz loc_433B35  +
mov esi ebx +
jmp loc_433B7D  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_433C60  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_433B64  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_4405EA  +
push offset unk_472084  +
lea eax [ebp+var_24] +
push eax  +
call sub_443DCE  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_478238 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_43A86F  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_43AC06  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_45C20B  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test edi edi +
jz loc_433CF6  +
cmp [edi] ebx +
jnz loc_433CF6  +
push 8  +
call sub_440048  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_433CE5  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
test ecx ecx +
jnz loc_433CBE  +
mov eax (offset asc_4696CC+2) +
jmp loc_433CC8  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_433CC8  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp+var_44] +
call sub_411E50  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_463A0C +
jmp loc_433CE7  +
xor esi esi +
mov [edi] esi +
test bl 1 +
jz loc_433CF6  +
lea ecx [ebp+var_44] +
call sub_411F10  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
or edi 0FFFFFFFFh +
mov esi ecx +
cmp dword ptr [ebx+10h] 0FFFFFFFFh +
cmovb edi [ebx+10h] +
or eax 0FFFFFFFFh +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax edi +
jbe loc_433DED  +
test edi edi +
jz loc_433DE4  +
lea eax [ecx+edi] +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+0Ch] eax +
call loc_410FF0  +
test al al +
jz loc_433DE4  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_433D62  +
mov edx [esi] +
jmp loc_433D64  +
mov edx esi +
cmp eax 8 +
jb loc_433D6D  +
mov ecx [esi] +
jmp loc_433D6F  +
mov ecx esi +
mov eax [esi+10h] +
test eax eax +
jz loc_433D86  +
add eax eax +
push eax  +
push edx  +
lea eax [ecx+edi*2] +
push eax  +
call loc_43F850  +
add esp 0Ch +
cmp esi ebx +
jnz loc_433DB4  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_433D96  +
mov edx [esi] +
jmp loc_433D98  +
mov edx esi +
cmp eax 8 +
jb loc_433DA1  +
mov ecx [esi] +
jmp loc_433DA3  +
mov ecx esi +
test edi edi +
jz loc_433DDA  +
lea eax [edi+edi] +
push eax  +
push edx  +
push ecx  +
call loc_43F850  +
jmp loc_433DD7  +
cmp dword ptr [ebx+14h] 8 +
jb loc_433DBC  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_433DC6  +
mov ecx [esi] +
jmp loc_433DC8  +
mov ecx esi +
test edi edi +
jz loc_433DDA  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_4425D0  +
add esp 0Ch +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_410CB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aStringTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
mov ecx [ebp-48h] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_431F50  +
***
push 0FFFFFFFFh  +
push offset loc_45E89E  +
mov eax large fs:0 +
push eax  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_478B20 +
test al 1 +
jnz loc_434045  +
or eax 1 +
mov dword_478B20 eax +
mov [ebp+var_4] 0 +
mov dword_478B18 0 +
mov dword_478B1C 0 +
call sub_4349F0  +
push offset sub_45FAC0  +
mov dword_478B18 eax +
call sub_43FFBF  +
add esp 4 +
mov eax offset dword_478B18 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E8C8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_4340A7  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+8] +
call eax  +
mov [ebp+var_D] al +
test al al +
jz loc_43416D  +
lea ecx [edi+4] +
push ecx  +
lea eax [ebp+var_14] +
mov ecx ebx +
push eax  +
call sub_434380  +
mov eax [eax] +
cmp eax [ebx] +
jnz loc_434137  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_20] +
call sub_41BF10  +
lea eax [ebp+var_20] +
mov ecx ebx +
push eax  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_434310  +
mov ecx eax +
call sub_4343E0  +
mov eax [ebp+var_20] +
test eax eax +
jz loc_43416D  +
push eax  +
call sub_43FFF6  +
add esp 4 +
jmp loc_43416D  +
mov ecx [eax+2Ch] +
lea ebx [eax+28h] +
mov eax [ebx] +
cmp eax ecx +
jz loc_43414E  +
cmp edi [eax] +
jz loc_43416D  +
add eax 4 +
cmp eax ecx +
jnz loc_434143  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
lea eax [ebp+arg_0] +
mov ecx ebx +
push eax  +
call sub_41BF10  +
mov al [ebp+var_D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 3Ch +
and esp 0FFFFFFF8h +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_434302  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
push ecx  +
push [ebp+arg_20]  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_434190  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
call sub_4345F0  +
mov esi eax +
cmp esi [ebx] +
jz loc_434350  +
cmp dword ptr [esi+24h] 8 +
lea eax [esi+10h] +
mov ecx [eax+10h] +
jb loc_434335  +
mov eax [eax] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call sub_434A20  +
test eax eax +
js loc_434350  +
pop edi  +
lea eax [esi+28h] +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_434AA0  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_434B60  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
add eax 28h +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push ecx  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+14h] 8 +
mov ecx [eax+10h] +
jb loc_434501  +
mov eax [eax] +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
push dword ptr [ecx+10h]  +
push ecx  +
call sub_434A20  +
xor ecx ecx +
test eax eax +
sets al  +
pop ebp  +
retn 8  +
***
push ecx  +
mov edx dword_478B18 +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
cmp eax [edx] +
jnz loc_434578  +
cmp ecx edx +
jnz loc_434578  +
push dword ptr [edx+4]  +
mov ecx offset dword_478B18 +
call sub_434960  +
mov eax dword_478B18 +
mov [eax+4] eax +
mov eax dword_478B18 +
mov [eax] eax +
mov eax dword_478B18 +
mov [eax+8] eax +
mov eax dword_478B18 +
mov dword_478B1C 0 +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp eax ecx +
jz loc_4345DD  +
lea esp [esp+0] +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_4345CB  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_4345AC  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4345C8  +
lea esp [esp+0] +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4345A0  +
jmp loc_4345C8  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_4345C8  +
cmp eax [edx+8] +
jnz loc_4345C8  +
mov eax edx +
mov [ebp+arg_4] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_4345B5  +
mov [ebp+arg_4] edx +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_434690  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_8] +
jnz loc_434580  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
push ebx  +
mov ebx [ecx] +
push edi  +
mov [ebp+var_8] ebx +
mov edi [ebx+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_434679  +
mov edx [ebp+arg_0] +
push esi  +
mov ecx [edx+10h] +
mov [ebp+var_4] ecx +
cmp dword ptr [edx+14h] 8 +
lea eax [edi+10h] +
jb loc_43461B  +
mov edx [edx] +
cmp dword ptr [eax+14h] 8 +
mov ebx [eax+10h] +
jb loc_434626  +
mov eax [eax] +
cmp ebx ecx +
mov esi ecx +
cmovb esi ebx +
test esi esi +
jnz loc_434650  +
xor eax eax +
mov ecx [ebp+var_4] +
test eax eax +
jnz loc_434645  +
cmp ebx ecx +
jb loc_434669  +
cmp ebx ecx +
setnz al  +
test eax eax +
js loc_434669  +
mov ebx edi +
mov edi [edi] +
mov [ebp+var_8] ebx +
jmp loc_43466F  +
mov cx [eax] +
cmp cx [edx] +
jnz loc_434661  +
add eax 2 +
add edx 2 +
dec esi  +
jmp loc_43462F  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_434633  +
mov edi [edi+8] +
mov ebx [ebp+var_8] +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebp+arg_0] +
jz loc_434610  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
lea ecx [ebp+arg_4] +
push esi  +
push edi  +
call sub_41CFB0  +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_4346AE  +
mov edi [ebx+8] +
jmp loc_4346C9  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4346BB  +
mov edi ecx +
jmp loc_4346C9  +
mov edx [ebp+arg_4] +
mov edi [edx+8] +
cmp edx ebx +
jnz loc_434760  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [ebx+4] +
jnz loc_4346D5  +
mov [edi+4] esi +
mov eax dword_478B18 +
cmp [eax+4] ebx +
jnz loc_4346E4  +
mov [eax+4] edi +
jmp loc_4346EF  +
cmp [esi] ebx +
jnz loc_4346EC  +
mov [esi] edi +
jmp loc_4346EF  +
mov [esi+8] edi +
mov eax dword_478B18 +
cmp [eax] ebx +
jnz loc_434721  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_434702  +
mov ecx esi +
jmp loc_43471A  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43471A  +
lea esp [esp+0] +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_434710  +
mov eax dword_478B18 +
mov [eax] ecx +
mov edx dword_478B18 +
cmp [edx+8] ebx +
jnz loc_4347B9  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_43473D  +
mov ecx esi +
mov [edx+8] ecx +
jmp loc_4347B9  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43475B  +
jmp loc_434750  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_434750  +
mov [edx+8] ecx +
jmp loc_4347B9  +
mov [ecx+4] edx +
mov eax [ebx] +
mov [edx] eax +
cmp edx [ebx+8] +
jnz loc_434770  +
mov esi edx +
jmp loc_43478A  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [edx+4] +
jnz loc_43477C  +
mov [edi+4] esi +
mov [esi] edi +
mov eax [ebx+8] +
mov [edx+8] eax +
mov eax [ebx+8] +
mov [eax+4] edx +
mov eax dword_478B18 +
cmp [eax+4] ebx +
jnz loc_434799  +
mov [eax+4] edx +
jmp loc_4347A7  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_4347A4  +
mov [eax] edx +
jmp loc_4347A7  +
mov [eax+8] edx +
mov eax [ebx+4] +
mov [edx+4] eax +
mov al [ebx+0Ch] +
mov cl [edx+0Ch] +
mov [edx+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_4348E7  +
mov eax dword_478B18 +
cmp edi [eax+4] +
jz loc_4348E3  +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_4348E3  +
mov ecx [esi] +
cmp edi ecx +
jnz loc_43485D  +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_434800  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx offset dword_478B18 +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_41DED0  +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434893  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43481B  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_43488F  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43483C  +
mov eax [ecx] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx offset dword_478B18 +
call sub_41DF30  +
mov ecx [esi+8] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx+8] +
mov ecx offset dword_478B18 +
push esi  +
mov byte ptr [eax+0Ch] 1 +
call sub_41DED0  +
jmp loc_4348E3  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_434878  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx offset dword_478B18 +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_41DF30  +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434893  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4348A8  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4348A8  +
mov byte ptr [ecx+0Ch] 0 +
mov eax dword_478B18 +
mov edi esi +
mov esi [esi+4] +
cmp edi [eax+4] +
jnz loc_4347D1  +
jmp loc_4348E3  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4348C8  +
mov eax [ecx+8] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx offset dword_478B18 +
call sub_41DED0  +
mov ecx [esi] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx] +
mov ecx offset dword_478B18 +
push esi  +
mov byte ptr [eax+0Ch] 1 +
call sub_41DF30  +
mov byte ptr [edi+0Ch] 1 +
mov eax [ebx+28h] +
test eax eax +
jz loc_43490C  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
cmp dword ptr [ebx+24h] 8 +
jb loc_43491D  +
push dword ptr [ebx+10h]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [ebx+24h] 7 +
mov dword ptr [ebx+20h] 0 +
push ebx  +
mov [ebx+10h] ax +
call sub_43FFF6  +
mov eax dword_478B1C +
add esp 4 +
mov ecx [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_43494F  +
dec eax  +
mov dword_478B1C eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4349DA  +
push dword ptr [edi+8]  +
mov ecx ebx +
call sub_434960  +
mov eax [esi+28h] +
mov edi [edi] +
test eax eax +
jz loc_4349A4  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
cmp dword ptr [esi+24h] 8 +
jb loc_4349B5  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
push esi  +
mov [esi+10h] ax +
call sub_43FFF6  +
add esp 4 +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jz loc_434973  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
add esp 4 +
test eax eax +
jz sub_43A607  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_434A0D  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_434A16  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
cmp [ecx+10h] edi +
cmovb edi [ecx+10h] +
cmp dword ptr [ecx+14h] 8 +
jb loc_434A38  +
mov ecx [ecx] +
mov ebx [ebp+arg_C] +
cmp edi ebx +
mov esi ebx +
cmovb esi edi +
test esi esi +
jz loc_434A61  +
mov edx [ebp+arg_8] +
lea esp [esp+0] +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_434A75  +
add ecx 2 +
add edx 2 +
dec esi  +
jnz loc_434A50  +
xor eax eax +
test eax eax +
jnz loc_434A8A  +
cmp edi ebx +
jnb loc_434A83  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 10h  +
movzx eax word ptr [ecx] +
cmp ax [edx] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_434A63  +
xor eax eax +
cmp edi ebx +
setnz al  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_45E901  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_434DA0  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_434B2B  +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 0FFFFFFFFh  +
push ecx  +
mov eax [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call loc_410ED0  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_45E920  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_434BC3  +
push [ebp+arg_C]  +
push ecx  +
push dword ptr [ebx]  +
push 1  +
mov ecx ebx +
mov esi [ebp+arg_0] +
push esi  +
call loc_434DE0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ecx [ebx] +
mov eax [ebp+arg_4] +
cmp eax [ecx] +
jnz loc_434BFB  +
mov ecx [eax+20h] +
add eax 10h +
cmp dword ptr [eax+14h] 8 +
jb loc_434BDA  +
mov eax [eax] +
mov edi [ebp+arg_8] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call sub_434A20  +
test eax eax +
jns loc_434CEE  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_4]  +
jmp loc_434BA0  +
cmp eax ecx +
jnz loc_434C39  +
mov edi [ebp+arg_8] +
mov ecx [ecx+8] +
add ecx 10h +
cmp dword ptr [edi+14h] 8 +
jb loc_434C12  +
mov eax [edi] +
jmp loc_434C14  +
mov eax edi +
push dword ptr [edi+10h]  +
push eax  +
push dword ptr [ecx+10h]  +
push ecx  +
call sub_434A20  +
test eax eax +
jns loc_434CEE  +
push [ebp+arg_C]  +
mov eax [ebx] +
push ecx  +
push dword ptr [eax+8]  +
push 0  +
jmp loc_434BA2  +
mov ecx [eax+20h] +
add eax 10h +
cmp dword ptr [eax+14h] 8 +
jb loc_434C47  +
mov eax [eax] +
mov edi [ebp+arg_8] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call sub_434A20  +
test eax eax +
jns loc_434C9B  +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_14] eax +
call sub_41F3A0  +
mov esi [ebp+var_14] +
push edi  +
lea eax [esi+10h] +
push eax  +
call sub_4344F0  +
test al al +
jz loc_434C9B  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jz loc_434C91  +
push esi  +
push 0  +
jmp loc_434BA4  +
push [ebp+arg_4]  +
push 1  +
jmp loc_434BA4  +
mov eax [ebp+arg_4] +
push edi  +
add eax 10h +
push eax  +
call sub_4344F0  +
test al al +
jz loc_434CEE  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call sub_41CFB0  +
mov edi [ebp+var_14] +
cmp edi [ebx] +
jz loc_434CD4  +
lea eax [edi+10h] +
push eax  +
push [ebp+arg_8]  +
call sub_4344F0  +
test al al +
jz loc_434CEB  +
mov esi [ebp+arg_4] +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jnz loc_434C89  +
push edi  +
push 1  +
jmp loc_434BA4  +
mov edi [ebp+arg_8] +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push edi  +
push ecx  +
push eax  +
mov ecx ebx +
call sub_434FF0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+28h] +
test eax eax +
jz loc_434D6C  +
push eax  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
cmp dword ptr [esi+24h] 8 +
jb loc_434D7D  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
push esi  +
mov [esi+10h] ax +
call sub_43FFF6  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 34h  +
mov esi ecx +
call sub_440048  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_434DD1  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_434DC2  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_434DCD  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_43A607  +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 4EC4EC3h +
jnb loc_434FD4  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_434E16  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_434E35  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_434E28  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_434E35  +
mov [ecx] ebx +
jmp loc_434E35  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_434E35  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_434FC0  +
push esi  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_434F00  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_434F06  +
cmp eax [ecx+8] +
jnz loc_434EA1  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434E7C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_434E8E  +
mov [ecx+4] edx +
jmp loc_434E9C  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_434E99  +
mov [ecx] edx +
jmp loc_434E9C  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434ECB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_434EE3  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_434FAF  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_434EF6  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_434FAF  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_434FAF  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_434F23  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_434FB2  +
cmp eax [ecx] +
jnz loc_434F63  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434F3C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_434F4E  +
mov [ecx+4] edx +
jmp loc_434F5D  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_434F5B  +
mov [ecx+8] edx +
jmp loc_434F5D  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_434F8D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_434F9F  +
mov [ecx+4] esi +
jmp loc_434FAD  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_434FAA  +
mov [ecx] esi +
jmp loc_434FAD  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_434E45  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push dword ptr [ebp+18h]  +
call sub_434D40  +
push offset aMapSetTTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45E940  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx ecx +
mov [ebp+var_1C] edx +
mov [ebp+var_4] 0 +
mov al 1 +
mov ecx [edx] +
mov ebx ecx +
mov [ebp+var_24] ecx +
mov byte ptr [ebp+var_18] al +
mov edi [ecx+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4350D8  +
mov eax [ebp+arg_8] +
mov ecx [eax+10h] +
mov [ebp+var_14] ecx +
jmp loc_435053  +
jmp loc_435050  +
mov eax [ebp+arg_8] +
cmp dword ptr [edi+24h] 8 +
lea ecx [edi+10h] +
mov ebx [ecx+10h] +
mov [ebp+var_20] edi +
jb loc_435064  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 8 +
jb loc_43506E  +
mov edx [eax] +
jmp loc_435070  +
mov edx eax +
cmp [ebp+var_14] ebx +
mov esi ebx +
cmovb esi [ebp+var_14] +
test esi esi +
jnz loc_435090  +
xor eax eax +
test eax eax +
jnz loc_4350B8  +
mov edx [ebp+var_14] +
cmp edx ebx +
jnb loc_4350AF  +
or eax 0FFFFFFFFh +
jmp loc_4350B6  +
mov ax [edx] +
cmp ax [ecx] +
jnz loc_4350A1  +
add edx 2 +
add ecx 2 +
dec esi  +
jmp loc_43507B  +
movzx eax word ptr [edx] +
cmp ax [ecx] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_43507F  +
xor eax eax +
cmp edx ebx +
setnz al  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_18] al +
test al al +
jz loc_4350C6  +
mov edi [edi] +
jmp loc_4350C9  +
mov edi [edi+8] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_435050  +
mov ebx [ebp+var_20] +
mov ecx [ebp+var_24] +
mov edx [ebp+var_1C] +
mov edi [ebp+arg_8] +
mov esi ebx +
mov [ebp+arg_8] esi +
test al al +
jz loc_435124  +
cmp ebx [ecx] +
jnz loc_435119  +
push [ebp+arg_C]  +
lea eax [ebp+arg_8] +
push ecx  +
push ebx  +
push 1  +
mov ecx edx +
push eax  +
call loc_434DE0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call sub_41F3A0  +
mov esi [ebp+arg_8] +
cmp dword ptr [edi+14h] 8 +
lea ecx [esi+10h] +
mov eax [edi+10h] +
jb loc_435132  +
mov edi [edi] +
push eax  +
push edi  +
push dword ptr [ecx+10h]  +
push ecx  +
call sub_434A20  +
push [ebp+arg_C]  +
test eax eax +
jns loc_435151  +
push ecx  +
mov ecx [ebp+var_1C] +
lea eax [ebp+var_24] +
push ebx  +
push [ebp+var_18]  +
jmp loc_4350F4  +
call sub_434D40  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] edx +
push edi  +
cmp dword ptr [esi+14h] 8 +
jb loc_4351A7  +
mov eax [esi] +
jmp loc_4351A9  +
mov eax esi +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
inc eax  +
push eax  +
mov [ebp+cchMultiByte] eax +
call sub_43AC2F  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 8 +
jb loc_4351D8  +
mov esi [esi] +
push 0  +
push 0  +
push [ebp+cchMultiByte]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_435205  +
push edi  +
call sub_440842  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp byte ptr [edi] 0 +
jnz loc_43520E  +
xor ecx ecx +
jmp loc_43521C  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_435213  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_8] +
push edi  +
call loc_4109B0  +
push edi  +
call sub_440842  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] edx +
push edi  +
cmp dword ptr [esi+14h] 10h +
jb loc_435257  +
mov eax [esi] +
jmp loc_435259  +
mov eax esi +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov [ebp+cchWideChar] eax +
lea ecx ds:2[eax*2] +
push ecx  +
call sub_442CB0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4352AF  +
cmp dword ptr [esi+14h] 10h +
jb loc_43528E  +
mov esi [esi] +
push [ebp+cchWideChar]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_4352B7  +
push edi  +
call sub_4407E4  +
add esp 4 +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+cchWideChar] +
xor ecx ecx +
mov [edi+eax*2] cx +
cmp [edi] cx +
jz loc_4352DF  +
mov ecx edi +
lea edx [ecx+2] +
lea ebx [ebx+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4352D0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp+var_8] +
push edi  +
call loc_410BB0  +
push edi  +
call sub_4407E4  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 61Ch +
cmp dword ptr [ecx+14h] 8 +
jb loc_4353F8  +
mov ecx [ecx] +
push ecx  +
call ds:PathFileExistsW  +
cmp eax 1 +
setz al  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_435433  +
mov eax [edi] +
jmp loc_435435  +
mov eax edi +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_4444F1  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_435452  +
mov esi [esi] +
push esi  +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathAppendW  +
mov esi eax +
test esi esi +
jz loc_43549E  +
cmp [ebp+pszPath] 0 +
jnz loc_435474  +
xor ecx ecx +
jmp loc_43548F  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
lea ecx [ecx+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435480  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx edi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp esi 1 +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_4354E0  +
mov eax [esi] +
jmp loc_4354E2  +
mov eax esi +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_4444F1  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveExtensionW  +
cmp [ebp+pszPath] 0 +
jnz loc_435512  +
xor ecx ecx +
jmp loc_43552F  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
jmp loc_435520  +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435520  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
sub esp 20Ch +
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_4356D0  +
mov eax [esi] +
jmp loc_4356D2  +
mov eax esi +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_4444F1  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_435709  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+pszPath] 0 +
jnz loc_435717  +
xor ecx ecx +
jmp loc_43572F  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435720  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 1  +
sub esp 8 +
mov esi edx +
mov edi ecx +
call sub_42C630  +
cmp eax 0FFFFFFFFh +
jnz loc_435787  +
xor al al +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
push dword ptr [edi+10h]  +
mov ecx edi +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call sub_42C4E0  +
mov edi eax +
cmp esi edi +
jz loc_4357C7  +
cmp dword ptr [esi+14h] 8 +
jb loc_4357AC  +
push dword ptr [esi]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
push edi  +
mov [esi] ax +
call sub_410810  +
cmp [ebp+var_8] 8 +
jb loc_4357D8  +
push [ebp+var_1C]  +
call sub_43FFF6  +
add esp 4 +
mov ecx [ebp+var_4] +
mov al 1 +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov edi edx +
jb loc_4357FB  +
mov ecx [ecx] +
push ecx  +
call ds:PathFindFileNameW  +
mov edx eax +
cmp word ptr [edx] 0 +
jnz loc_435819  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx edi +
call loc_410BB0  +
mov al 1 +
pop edi  +
retn   +
mov ecx edx +
push esi  +
lea esi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435820  +
sub ecx esi +
sar ecx 1 +
pop esi  +
push ecx  +
push edx  +
mov ecx edi +
call loc_410BB0  +
mov al 1 +
pop edi  +
retn   +
***
mov eax 2010h +
call sub_4442E0  +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi edx +
xor edx edx +
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov [ebp+var_2008] edx +
jb loc_43586C  +
mov ecx [ecx] +
mov ebx ds:CreateFileW +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 0C0000000h  +
push ecx  +
call ebx  +
cmp dword ptr [esi+14h] 8 +
mov edi eax +
jb loc_435891  +
mov esi [esi] +
push 0  +
push 80h  +
push 4  +
push 0  +
push 0  +
push 40000000h  +
push esi  +
call ebx  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_4358C7  +
push edi  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
mov esi ds:GetLastError +
lea ecx [ecx+0] +
push 0  +
lea eax [ebp+nNumberOfBytesToWrite] +
push eax  +
push 1000h  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_43590F  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
call ds:WriteFile  +
jmp loc_435917  +
call esi  +
mov [ebp+var_2008] eax +
cmp [ebp+nNumberOfBytesToWrite] 1000h +
jz loc_4358D0  +
mov esi ds:CloseHandle +
push edi  +
call esi  +
push ebx  +
call esi  +
mov edx [ebp+var_2008] +
xor eax eax +
mov ecx [ebp+var_4] +
test edx edx +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45E968  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edi [esi+4Ch] +
xor bl bl +
cmp dword ptr [edi+14h] 8 +
jb loc_43598C  +
mov eax [edi] +
jmp loc_43598E  +
mov eax edi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4359B6  +
xor al al +
jmp loc_435A76  +
lea ecx [ebp+var_3C] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_4359D5  +
mov eax [ebp+var_3C] +
mov bl 1 +
mov [ebp+var_30] eax +
mov eax [ebp+var_38] +
mov [ebp+var_34] eax +
jmp loc_4359E1  +
mov eax [ebp+var_38] +
mov [ebp+var_34] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_30] eax +
push [ebp+hObject]  +
call ds:CloseHandle  +
test bl bl +
jz loc_435A74  +
cmp [ebp+var_34] 0 +
jl loc_435A74  +
jg loc_435A03  +
cmp [ebp+var_30] 0A00000h +
jb loc_435A74  +
mov eax [esi+68h] +
lea ebx [esi+68h] +
test eax eax +
jz loc_435A14  +
push eax  +
call ds:CloseHandle  +
xor eax eax +
mov [ebp+var_18] 7 +
push 0FFFFFFFFh  +
push eax  +
push edi  +
lea ecx [ebp+var_2C] +
mov [ebp+var_1C] 0 +
mov word ptr [ebp+var_2C] ax +
call loc_410ED0  +
lea ecx [ebp+var_2C] +
mov [ebp+var_4] 0 +
call sub_435B10  +
lea edx [ebp+var_2C] +
mov ecx edi +
call sub_435840  +
test al al +
jz loc_435A58  +
mov ecx esi +
call sub_430D00  +
mov eax [esi] +
mov ecx esi +
push ebx  +
mov eax [eax] +
call eax  +
cmp [ebp+var_18] 8 +
mov bl al +
jb loc_435A74  +
push [ebp+var_2C]  +
call sub_43FFF6  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_435AEE  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov [esi] eax +
test eax eax +
jnz loc_435AEB  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_435AEB  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:OpenMutexW  +
mov [esi] eax +
cmp dword ptr [esi] 0 +
setnz bl  +
cmp [ebp+arg_14] 8 +
jb loc_435B02  +
push [ebp+lpName]  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_45E9B0  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_410ED0  +
lea ecx [ebp+var_28] +
mov [ebp+var_4] 0 +
call sub_4354C0  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 1 +
call sub_435300  +
lea eax [ebp+var_58] +
mov edx offset asc_46AC5C +
push eax  +
lea ecx [ebp+var_70] +
call sub_411320  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 2 +
call loc_4117A0  +
cmp [ebp+var_5C] 8 +
jb loc_435BC0  +
push [ebp+var_70]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
lea edx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
mov ecx esi +
call sub_435750  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_28] +
call sub_435550  +
lea eax [ebp+var_28] +
cmp esi eax +
jz loc_435C00  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_410ED0  +
cmp [ebp+var_2C] 8 +
jb loc_435C11  +
push [ebp+var_40]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_2C] 7 +
cmp [ebp+var_44] 8 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
jb loc_435C36  +
push [ebp+var_58]  +
call sub_43FFF6  +
add esp 4 +
xor eax eax +
mov [ebp+var_44] 7 +
cmp [ebp+var_14] 8 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
jb loc_435C5B  +
push [ebp+var_28]  +
call sub_43FFF6  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov ebx ecx +
mov [ebp+var_4] edx +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
mov edi eax +
lea eax [edi+1] +
push eax  +
call sub_442CB0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_435CDE  +
push 0  +
push 0  +
lea eax [edi+1] +
push eax  +
push esi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_435CE7  +
push esi  +
call sub_4407E4  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov byte ptr [esi+edi] 0 +
cmp byte ptr [esi] 0 +
jnz loc_435CF4  +
xor ecx ecx +
jmp loc_435D09  +
mov ecx esi +
lea edx [ecx+1] +
lea esp [esp+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_435D00  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_4] +
push esi  +
call loc_4109B0  +
push esi  +
call sub_4407E4  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_435D4A  +
push eax  +
call ds:FreeLibrary  +
mov dword ptr [esi] 0 +
test eax eax +
jz loc_435D50  +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
sub esp 210h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pv] +
mov [ebp+pv] 0 +
push eax  +
push 0  +
push 0  +
mov edi ecx +
mov esi edx +
push edi  +
push 0  +
xor bl bl +
call ds:SHGetFolderLocation  +
test eax eax +
lea eax [ebp+pszPath] +
push eax  +
js loc_435DFE  +
push [ebp+pv]  +
call ds:SHGetPathFromIDListW  +
test eax eax +
jz loc_435DF0  +
cmp [ebp+pszPath] 0 +
jnz loc_435DC3  +
xor ecx ecx +
jmp loc_435DDF  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
lea esp [esp+0] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435DD0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov bl 1 +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
jmp loc_435E46  +
push 1  +
push 0  +
push edi  +
push 0  +
call ds:SHGetFolderPathW  +
test eax eax +
js loc_435E46  +
cmp [ebp+pszPath] 0 +
jnz loc_435E1D  +
xor ecx ecx +
jmp loc_435E35  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435E26  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov bl 1 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_435E99  +
mov edx [esi+14h] +
cmp edx 8 +
jb loc_435E59  +
mov eax [esi] +
jmp loc_435E5B  +
mov eax esi +
cmp word ptr [eax+ecx*2-2] 5Ch +
jnz loc_435E99  +
lea eax [ecx-1] +
cmp eax ecx +
ja loc_435E8D  +
mov [esi+10h] eax +
cmp edx 8 +
jb loc_435E74  +
mov esi [esi] +
xor ecx ecx +
pop edi  +
mov [esi+eax*2] cx +
mov al bl +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
sub eax ecx +
mov ecx esi +
push 0  +
push eax  +
call sub_436500  +
mov ecx [ebp+var_4] +
mov al bl +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push edi  +
push 0  +
push 0  +
mov [ebp+var_4] ecx +
call ds:GetTempPathW  +
mov edi eax +
test edi edi +
jnz loc_435ECF  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
lea eax ds:2[edi*2] +
push esi  +
push eax  +
call sub_442CB0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_435EFB  +
push esi  +
push edi  +
call ds:GetTempPathW  +
push esi  +
test eax eax +
jnz loc_435F03  +
call sub_4407E4  +
add esp 4 +
pop esi  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
call sub_410310  +
push esi  +
call sub_4407E4  +
add esp 4 +
mov al 1 +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 104h  +
lea eax [ebp+Filename] +
mov esi ecx +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_435F5F  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+Filename] 0 +
jnz loc_435F6D  +
xor ecx ecx +
jmp loc_435F85  +
lea ecx [ebp+Filename] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_435F76  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Filename] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 104h  +
lea eax [ebp+pszPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_435FEF  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jz loc_435FDE  +
cmp [ebp+pszPath] 0 +
jnz loc_43600E  +
xor ecx ecx +
jmp loc_436026  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_436017  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+szPath] +
push esi  +
mov esi ecx +
push 0  +
test dl dl +
jz loc_436092  +
push 2Ch  +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jnz loc_436096  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
push 2Bh  +
jmp loc_436074  +
push offset aAdobe_0  +
lea eax [ebp+szPath] +
push 104h  +
push eax  +
call sub_4458BF  +
add esp 0Ch +
cmp [ebp+szPath] 0 +
jnz loc_4360BD  +
xor ecx ecx +
jmp loc_4360D5  +
lea ecx [ebp+szPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4360C6  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+szPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
push 1Ch  +
lea eax [ebp+szPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jnz loc_43613E  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
push offset aAdobe_0  +
lea eax [ebp+szPath] +
push 104h  +
push eax  +
call sub_4458BF  +
add esp 0Ch +
cmp [ebp+szPath] 0 +
jnz loc_436165  +
xor ecx ecx +
jmp loc_43617F  +
lea ecx [ebp+szPath] +
lea edx [ecx+2] +
mov edi edi +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_436170  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+szPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
push 26h  +
lea eax [ebp+szPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jnz loc_4361DE  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+szPath] 0 +
jnz loc_4361EC  +
xor ecx ecx +
jmp loc_436204  +
lea ecx [ebp+szPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4361F5  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+szPath] +
mov ecx esi +
push eax  +
call loc_410BB0  +
push 1Bh  +
push offset aAdobeAdobeCrea  +
mov ecx esi +
call loc_411870  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp ds:off_4363F4[edx*4]  +
push ecx  +
mov edx esi +
mov ecx 26h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 2Ah +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 2Bh +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 2Ch +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 25h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 29h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 14h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 17h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 28h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 5 +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 1Ah +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 1Ch +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 23h +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
push ecx  +
mov edx esi +
mov ecx 2Eh +
call sub_435D60  +
add esp 4 +
pop esi  +
retn   +
pop esi  +
jmp sub_435EB0  +
pop esi  +
jmp sub_435F20  +
pop esi  +
jmp sub_435FB0  +
xor dl dl +
pop esi  +
jmp sub_436050  +
pop esi  +
jmp sub_436100  +
xor dl dl +
call sub_436050  +
test al al +
jz loc_4363EF  +
push offset aOobe_0  +
mov ecx esi +
call sub_4115A0  +
mov al 1 +
pop esi  +
retn   +
call sub_436100  +
test al al +
jz loc_4363EF  +
push offset aOobe_0  +
mov ecx esi +
call sub_4115A0  +
mov al 1 +
pop esi  +
retn   +
mov dl 1 +
call sub_436050  +
test al al +
jz loc_4363EF  +
push offset aOobePdapp  +
mov ecx esi +
call sub_4115A0  +
mov al 1 +
pop esi  +
retn   +
call sub_436100  +
test al al +
jz loc_4363EF  +
push offset aOobePdapp  +
mov ecx esi +
call sub_4115A0  +
mov al 1 +
pop esi  +
retn   +
xor dl dl +
call sub_436050  +
test al al +
jz loc_4363EF  +
push offset aAdobeapplicati  +
mov ecx esi +
call sub_4115A0  +
mov al 1 +
pop esi  +
retn   +
pop esi  +
jmp sub_4361A0  +
xor al al +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_4364F7  +
mov eax [esi+10h] +
test eax eax +
jz loc_4364F7  +
add eax 0Ah +
add eax ecx +
mov [ebp+var_4] eax +
push ebx  +
lea eax ds:2[eax*2] +
push eax  +
call sub_442CB0  +
mov ebx eax +
add esp 4 +
mov [ebp+var_8] ebx +
test ebx ebx +
jnz loc_4364A9  +
pop ebx  +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword ptr [edi+14h] 8 +
jb loc_4364B3  +
mov eax [edi] +
jmp loc_4364B5  +
mov eax edi +
push eax  +
mov eax [ebp+var_4] +
inc eax  +
push eax  +
push ebx  +
call sub_4444F1  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_4364CC  +
mov esi [esi] +
push esi  +
push ebx  +
call ds:PathAppendW  +
mov esi [ebp+var_8] +
cmp eax 1 +
push esi  +
mov ecx edi +
setz bl  +
call sub_410310  +
push esi  +
call sub_4407E4  +
add esp 4 +
mov al bl +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
call sub_443E54  +
call sub_443E54  +
push [ebp+arg_4]  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
call sub_443EBD  +
mov ecx [ebp-14h] +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_462914 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_4626D0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_4626C0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_4626B0 +
call sub_443E31  +
retn   +
***
sub ecx [ecx-4] +
sub ecx [ecx-4] +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_443E54  +
call sub_443E87  +
push esi  +
call sub_443E87  +
call sub_443E54  +
cmp [ebp+arg_4] 1 +
push esi  +
cmp dword ptr [ecx+50h] 0 +
lea eax [ecx+44h] +
mov edx ecx +
cmp dword ptr [ecx+50h] 0 +
mov esi ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov ecx [ebp+arg_C] +
push esi  +
call sub_443E87  +
push ebx  +
push ebx  +
push ebx  +
push ecx  +
push esi  +
mov edi ecx +
call sub_443E87  +
mov eax [esi+1Ch] +
call sub_443E54  +
call sub_443E54  +
call sub_443E87  +
call sub_443E87  +
pop ebp  +
call sub_443E87  +
call sub_443E87  +
call sub_443E87  +
call sub_443E87  +
call sub_443E54  +
call sub_443E87  +
cmp [ebp+arg_8] 0 +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push esi  +
call sub_443E54  +
mov esi ecx +
mov [ebp-14h] esi +
lea eax [ebp-10h] +
xor ebx ebx +
push eax  +
push 4  +
mov [ebp-10h] ebx +
mov [esi] ebx +
mov [esi+4] ebx +
mov [esi+8] ebx +
call sub_4381DA  +
mov [ebp-4] ebx +
mov ecx esi +
push esi  +
push dword ptr [ebp+8]  +
call sub_438051  +
test al al +
jnz loc_438020  +
lea eax [ebp+8] +
mov dword ptr [ebp+8] offset aUnableToParseV +
push eax  +
lea ecx [ebp-20h] +
call sub_440606  +
mov byte ptr [ebp-4] 1 +
mov dword ptr [ebp-20h] offset off_4626A4 +
mov [ebp-4] bl +
lea eax [ebp-20h] +
push offset unk_4720E8  +
push eax  +
call sub_443DCE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call sub_443E31  +
retn 4  +
***
call sub_443E54  +
call sub_443E87  +
push esi  +
call sub_443EBD  +
mov ecx [ebp-14h] +
mov edx [ecx+8] +
call sub_443EBD  +
cmp dword ptr [esi] 0 +
push esi  +
call sub_443E54  +
call sub_443E87  +
mov eax [ebp+arg_0] +
call sub_443E87  +
call sub_443E87  +
call sub_443E87  +
call sub_443E87  +
call sub_443E54  +
call sub_443E87  +
call sub_443E54  +
push esi  +
call sub_443E87  +
call sub_443E54  +
call sub_443EBD  +
mov edi ecx +
mov [ebp-14h] edi +
xor esi esi +
mov [ebp-18h] esi +
push edi  +
lea ecx [ebp-20h] +
call sub_414800  +
mov [ebp-4] esi +
cmp byte ptr [ebp-1Ch] 0 +
jnz loc_43911D  +
push 4  +
pop ebx  +
mov ecx ebx +
jmp loc_439182  +
mov byte ptr [ebp-4] 1 +
mov eax [edi] +
mov eax [eax+4] +
push dword ptr [ebp+8]  +
mov ecx [eax+edi+38h] +
call sub_4191F0  +
mov ecx esi +
push 4  +
pop ebx  +
cmp eax 0FFFFFFFFh +
cmovz ecx ebx +
mov [ebp-18h] ecx +
mov [ebp-4] esi +
jmp loc_439182  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
add edx ecx +
mov ecx [edx+0Ch] +
push 4  +
pop ebx  +
or ecx ebx +
mov eax ecx +
or eax ebx +
xor esi esi +
cmp [edx+38h] esi +
cmovz ecx eax +
and ecx 17h +
mov [edx+0Ch] ecx +
test [edx+10h] ecx +
jnz loc_4391BF  +
mov eax offset loc_439174 +
retn   +
xor esi esi +
mov [ebp-4] esi +
push 4  +
pop ebx  +
mov edi [ebp-14h] +
mov ecx [ebp-18h] +
mov eax [edi] +
mov eax [eax+4] +
add eax edi +
mov [ebp+8] eax +
test ecx ecx +
jz loc_4391A9  +
mov edx [eax+0Ch] +
or edx ecx +
push esi  +
mov eax edx +
or eax ebx +
mov ecx [ebp+8] +
cmp [ecx+38h] esi +
cmovz edx eax +
push edx  +
call loc_412900  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_414890  +
mov eax edi +
call sub_443E31  +
retn 4  +
***
call sub_443E54  +
call sub_443E87  +
mov edi ecx +
mov eax [ebp+8] +
lea ebx [edi+4] +
mov dword ptr [edi] offset off_462A68 +
xor ecx ecx +
mov dword ptr [ebx+14h] 0Fh +
mov [ebx+10h] ecx +
mov [ebp-30h] edi +
mov [ebx] cl +
mov [ebp-4] ecx +
lea esi [edi+1Ch] +
push eax  +
mov ecx esi +
call sub_413DA0  +
mov byte ptr [ebp-4] 1 +
sub esp 18h +
mov eax [ebp+0Ch] +
mov ecx esp +
mov [edi+34h] eax +
xor eax eax +
mov [ebp-2Ch] esp +
push esi  +
mov [edi+38h] eax +
mov [edi+3Ch] eax +
mov [edi+40h] eax +
call sub_413DA0  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-28h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_439D9A  +
add esp 1Ch +
mov byte ptr [ebp-4] 3 +
mov ecx ebx +
push eax  +
call sub_4101A0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
push 0  +
push 1  +
call sub_4107C0  +
cmp dword ptr [ebx+14h] 10h +
jb loc_4392AA  +
mov ebx [ebx] +
mov esi ds:CreateMutexA +
push ebx  +
xor ebx ebx +
push ebx  +
push ebx  +
call esi  +
push ebx  +
push ebx  +
push ebx  +
mov [edi+3Ch] eax +
call esi  +
mov [edi+40h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax edi +
call sub_443E45  +
retn 8  +
***
call sub_443E54  +
call sub_443E54  +
push esi  +
push esi  +
mov ecx [ecx+4] +
mov esi ecx +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
mov esi ecx +
call sub_443E54  +
call sub_443E54  +
call sub_443E87  +
call sub_443E87  +
mov dword ptr [ecx] offset off_462A70 +
mov dword ptr [ecx] offset off_462A78 +
push esi  +
push esi  +
cmp dword ptr [esi+4] 0 +
call sub_443E87  +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
or esi 0FFFFFFFFh +
cmp ecx 0Eh +
ja loc_43996A  +
jmp ds:off_439992[ecx*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_4399CE  +
pop ecx  +
jmp loc_439969  +
mov esi eax +
jmp loc_43996A  +
push 5  +
pop esi  +
jmp loc_43996A  +
push 20h  +
jmp loc_43993E  +
push 1Ch  +
jmp loc_43993E  +
push 23h  +
jmp loc_43993E  +
push 2Eh  +
jmp loc_43993E  +
push 14h  +
jmp loc_43993E  +
push 25h  +
jmp loc_43993E  +
push 24h  +
jmp loc_43993E  +
push 2Bh  +
jmp loc_43993E  +
push [ebp+arg_4]  +
call sub_4398A5  +
pop ecx  +
cmp byte ptr [ebp+arg_8] 0 +
jz loc_43997B  +
cmp esi 0FFFFFFFFh +
jz loc_43998F  +
or esi 8000h +
cmp esi 0FFFFFFFFh +
jz loc_43998F  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_43A1BE  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn   +
***
call sub_443E87  +
push esi  +
push ecx  +
call sub_443E87  +
push ecx  +
mov eax [ebp+arg_0] +
call sub_443EBD  +
xor esi esi +
push esi  +
call sub_443E87  +
mov edx [ecx+8] +
call sub_443EBD  +
pop ecx  +
call sub_443EBD  +
pop ecx  +
push esi  +
push esi  +
call sub_443E54  +
call sub_443E54  +
call sub_443E54  +
call sub_443E87  +
push ecx  +
mov eax [ebp+arg_0] +
push ecx  +
push ebx  +
cmp ds:off_462D2C 0 +
cmp ds:off_462AD4 0 +
push esi  +
push esi  +
mov dword ptr [ecx] offset off_46382C +
push esi  +
push esi  +
sub esp 10h +
sub esp 0Ch +
sub esp 0Ch +
push ebx  +
push ecx  +
mov al [ebp+arg_0] +
mov ecx [ecx+4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz locret_43A7AC  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
retn   +
***
push esi  +
push ebx  +
push esi  +
push 8  +
call sub_443E54  +
call sub_443E54  +
push 0  +
mov eax [ebp+arg_0] +
push 20h  +
cmp byte_476ED0 0 +
pop ecx  +
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push ecx  +
push esi  +
push 0  +
mov edi ecx +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_43ABC3  +
push 0Ch  +
call sub_446013  +
jmp loc_43ABD6  +
cmp eax 4 +
jge loc_43ABD7  +
imul eax eax +
add eax offset CriticalSection +
push eax  +
call sub_43BD47  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
pop ebp  +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
push ebx  +
sub esp 5Ch +
push ebx  +
mov eax [ebp+arg_C] +
sub esp 0A0h +
mov eax [ebp+arg_C] +
sub esp 0A0h +
push ecx  +
push ecx  +
sub esp 68h +
push ecx  +
push [ebp+lpCharType]  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+lpSrcStr] +
sar ecx 1 +
push ecx  +
push [ebp+lpSrcStr]  +
push 1  +
call ds:GetStringTypeW  +
mov eax [ebp+arg_4] +
pop ebp  +
retn   +
***
mov eax dword_474180 +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
push ebx  +
sub esp 58h +
sub esp 4Ch +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
sub esp 10h +
push esi  +
push ecx  +
mov eax [ebp+arg_4] +
sub esp 24h +
push esi  +
push ecx  +
push ecx  +
sub esp 3Ch +
pop ebp  +
pop ebp  +
sub esp 18h +
push esi  +
mov ecx [ebp+arg_4] +
sub esp 34h +
push esi  +
push ecx  +
push ecx  +
sub esp 70h +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
sub esp 14h +
sub esp 18h +
push esi  +
mov eax [ebp+arg_4] +
sub esp 34h +
push esi  +
push ecx  +
push ecx  +
sub esp 70h +
push ecx  +
test [ebp+arg_0] 5 +
push esi  +
push esi  +
pop ebp  +
pop ebp  +
sub esp 0Ch +
push esi  +
push esi  +
mov esi [ebp+arg_4] +
mov edx 7FFh +
mov ax [esi+6] +
shr ax 4 +
and ax dx +
movzx ecx ax +
cmp cx dx +
jnz loc_43E689  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] cx +
test byte ptr [esi+6] 0Fh +
jnz loc_43E684  +
xor eax eax +
cmp [esi+4] ax +
jnz loc_43E684  +
cmp [esi+2] ax +
jnz loc_43E684  +
cmp [esi] ax +
jnz loc_43E684  +
inc eax  +
jmp loc_43E6D2  +
push 2  +
pop eax  +
jmp loc_43E6D2  +
xor eax eax +
cmp ax cx +
jl loc_43E6AB  +
push esi  +
call sub_43E3D4  +
pop ecx  +
movzx ecx ax +
test cx cx +
jle loc_43E6AB  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
jmp loc_43E6D2  +
mov ax [esi+6] +
mov edx 0BFEFh +
and ax dx +
add ecx 0FFFFFC02h +
mov edx 3FE0h +
or ax dx +
mov [esi+6] ax +
mov eax [ebp+arg_0] +
mov [eax] cx +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_43E712  +
mov eax [esi+10h] +
inc eax  +
jz loc_43E71C  +
push eax  +
push esi  +
push edi  +
call loc_43F850  +
add esp 0Ch +
jmp loc_43E71C  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov ax [esi+18h] +
mov [edi+18h] ax +
mov eax edi +
pop edi  +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45F670  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
push 10h  +
mov dword ptr [esi] 0 +
mov [ebp+var_4] 0 +
call sub_440048  +
add esp 4 +
test eax eax +
jz loc_43E7B2  +
mov ecx [ebp+arg_0] +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] offset off_46405C +
mov [eax+0Ch] ecx +
jmp loc_43E7B4  +
xor eax eax +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45F6A1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_42AE40  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
mov [ebp+var_18] ecx +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_43E84B  +
push [ebp+arg_0]  +
call sub_43E6E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 5D1745Ch +
jb loc_43E8A1  +
mov esi [esp+1Ch] +
cmp dword ptr [esi+24h] 10h +
jb loc_43EA8E  +
jmp loc_43EA83  +
push ebx  +
mov ebx [esp+20h] +
inc eax  +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_43E8C5  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_43E8E5  +
cmp byte ptr [esp+14h] 0 +
jz loc_43E8D8  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_43E8E5  +
mov [ecx] ebx +
jmp loc_43E8E5  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_43E8E5  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_43EA6E  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_43E9AF  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_43E9B5  +
cmp eax [ecx+8] +
jnz loc_43E950  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43E92B  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_43E93D  +
mov [ecx+4] edx +
jmp loc_43E94B  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_43E948  +
mov [ecx] edx +
jmp loc_43E94B  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43E97A  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_43E992  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_43EA5E  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_43E9A5  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_43EA5E  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_43EA5E  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_43E9D2  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_43EA61  +
cmp eax [ecx] +
jnz loc_43EA12  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43E9EB  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_43E9FD  +
mov [ecx+4] edx +
jmp loc_43EA0C  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_43EA0A  +
mov [ecx+8] edx +
jmp loc_43EA0C  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43EA3C  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_43EA4E  +
mov [ecx+4] esi +
jmp loc_43EA5C  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_43EA59  +
mov [ecx] esi +
jmp loc_43EA5C  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_43E8F4  +
mov eax [edi] +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [esp+10h] +
mov [eax] ebx +
pop ebx  +
pop edi  +
pop esi  +
retn 14h  +
***
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_43A638  +
push 0FFFFFFFFh  +
push offset loc_45F6C0  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_18] ecx +
mov ecx [ecx] +
mov al 1 +
mov edi [ebp+arg_8] +
mov [ebp+var_4] 0 +
mov [ebp+var_24] ecx +
mov esi [ecx+4] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_14] al +
jmp loc_43EB10  +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_43EBE2  +
cmp byte ptr [ebp+arg_4] 0 +
lea ecx [esi+10h] +
mov [ebp+var_1C] esi +
jz loc_43EB7B  +
cmp dword ptr [edi+14h] 10h +
mov edx [edi+10h] +
jb loc_43EB36  +
mov eax [edi] +
mov [ebp+arg_8] eax +
jmp loc_43EB39  +
mov [ebp+arg_8] edi +
cmp dword ptr [ecx+14h] 10h +
mov ebx [ecx+10h] +
jb loc_43EB44  +
mov ecx [ecx] +
cmp ebx edx +
mov eax edx +
cmovb eax ebx +
push eax  +
push [ebp+arg_8]  +
push ecx  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_43EB76  +
mov ecx [edi+10h] +
cmp ebx ecx +
jnb loc_43EB6D  +
or eax 0FFFFFFFFh +
test eax eax +
setns al  +
jmp loc_43EBCC  +
xor eax eax +
cmp ebx ecx +
setnz al  +
test eax eax +
setns al  +
jmp loc_43EBCC  +
cmp dword ptr [ecx+14h] 10h +
mov edx [ecx+10h] +
mov [ebp+var_20] edx +
jb loc_43EB89  +
mov ecx [ecx] +
cmp dword ptr [edi+14h] 10h +
mov ebx [edi+10h] +
jb loc_43EB99  +
mov eax [edi] +
mov [ebp+arg_8] eax +
jmp loc_43EB9C  +
mov [ebp+arg_8] edi +
cmp ebx edx +
mov eax edx +
cmovb eax ebx +
push eax  +
push ecx  +
push [ebp+arg_8]  +
call sub_411D80  +
add esp 0Ch +
test eax eax +
jnz loc_43EBC9  +
mov ecx [ebp+var_20] +
cmp ebx ecx +
jnb loc_43EBC0  +
or eax 0FFFFFFFFh +
jmp loc_43EBC7  +
xor eax eax +
cmp ebx ecx +
setnz al  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_43EBDA  +
mov esi [esi] +
jmp loc_43EB10  +
mov esi [esi+8] +
jmp loc_43EB10  +
mov ebx [ebp+var_1C] +
mov esi ebx +
mov [ebp+arg_4] esi +
test al al +
jz loc_43EC32  +
mov eax [ebp+var_24] +
cmp ebx [eax] +
jnz loc_43EC27  +
push [ebp+arg_C]  +
push edi  +
push ebx  +
push 1  +
mov ecx [ebp+var_18] +
lea eax [ebp+arg_4] +
push eax  +
call loc_43E880  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_4] +
call sub_41F3A0  +
mov esi [ebp+arg_4] +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
jb loc_43EC3F  +
mov eax [edi] +
jmp loc_43EC41  +
mov eax edi +
push dword ptr [edi+10h]  +
push eax  +
push dword ptr [ecx+10h]  +
push 0  +
call loc_414530  +
test eax eax +
jns loc_43EC5D  +
push [ebp+arg_C]  +
push edi  +
push ebx  +
push [ebp+var_14]  +
jmp loc_43EBFC  +
mov edi [ebp+arg_C] +
cmp dword ptr [edi+24h] 10h +
jb loc_43EC71  +
push dword ptr [edi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [edi+24h] 0Fh +
mov dword ptr [edi+20h] 0 +
push edi  +
mov byte ptr [edi+10h] 0 +
call sub_43FFF6  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov esi [esp+8+arg_0] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
push [esp+10h+arg_4]  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [esp+14h+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4105F0  +
mov ecx [esp+14h] +
mov eax esi +
mov cx [ecx] +
mov [esi+18h] cx +
pop esi  +
pop ecx  +
retn   +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_464000 +
jz loc_43ED49  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
retn 4  +
***
add esp 4 +
test eax eax +
jz sub_43A607  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_43ED6D  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_43ED76  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push esi  +
mov esi [esp+8] +
cmp dword ptr [esi+24h] 10h +
jb loc_43ED96  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
pop esi  +
retn 4  +
***
mov esi [esp+arg_0] +
mov ebx ecx +
push edi  +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_43EE11  +
push dword ptr [edi+8]  +
mov ecx ebx +
call sub_43EDC0  +
cmp dword ptr [esi+24h] 10h +
mov edi [edi] +
jb loc_43EDEE  +
push dword ptr [esi+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [esi+24h] 0Fh +
mov dword ptr [esi+20h] 0 +
push esi  +
mov byte ptr [esi+10h] 0 +
call sub_43FFF6  +
add esp 4 +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jz loc_43EDD1  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
mov edx [esp+arg_0] +
push esi  +
mov esi [edx+8] +
mov eax [esi] +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43EE38  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_43EE51  +
mov [eax+4] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_43EE63  +
mov [eax] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
mov [eax+8] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
***
mov edx [esp+arg_0] +
push esi  +
mov esi [edx] +
mov eax [esi+8] +
mov [edx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43EE88  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_43EEA2  +
mov [eax+4] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_43EEB7  +
mov [eax+8] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
mov [eax] esi +
mov [esi+8] edx +
mov [edx+4] esi +
pop esi  +
retn 4  +
***
test ecx ecx +
jz locret_43EEDA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
mov esi [ecx+0Ch] +
test esi esi +
jz loc_43EF0A  +
mov eax [esi] +
mov ecx esi +
push eax  +
push dword ptr [eax]  +
lea eax [esp+10h+var_4] +
push eax  +
call sub_43EF10  +
push dword ptr [esi]  +
call sub_43FFF6  +
push esi  +
call sub_43FFF6  +
add esp 8 +
pop esi  +
pop ecx  +
retn   +
***
mov edx [esp+4+arg_8] +
push esi  +
mov esi ecx +
mov ecx [esi] +
cmp eax [ecx] +
jnz loc_43EF54  +
cmp edx ecx +
jnz loc_43EF54  +
push dword ptr [ecx+4]  +
mov ecx esi +
call sub_43EDC0  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
mov [eax] eax +
mov eax [esi] +
mov [eax+8] eax +
mov eax [esi] +
mov dword ptr [esi+4] 0 +
pop esi  +
mov ecx [eax] +
mov eax [esp+4+arg_0] +
mov [eax] ecx +
pop ecx  +
retn 0Ch  +
cmp eax edx +
jz loc_43EFB5  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_43EF9E  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_43EF7D  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43EF9A  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_43EF71  +
jmp loc_43EF9A  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_43EF9A  +
cmp eax [edx+8] +
jnz loc_43EF9A  +
mov eax edx +
mov [esp+8+arg_4] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_43EF86  +
mov [esp+8+arg_4] edx +
push ecx  +
lea eax [esp+0Ch+var_4] +
mov ecx esi +
push eax  +
call sub_43EFD0  +
mov eax [esp+8+arg_4] +
cmp eax [esp+8+arg_8] +
jnz loc_43EF58  +
mov ecx [esp+8+arg_0] +
pop esi  +
mov [ecx] eax +
mov eax ecx +
pop ecx  +
retn 0Ch  +
***
push ebp  +
push esi  +
mov ebp ecx +
lea ecx [esp+8+arg_4] +
push edi  +
call sub_41CFB0  +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_43EFF0  +
mov edi [ebx+8] +
jmp loc_43F008  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_43EFFD  +
mov edi ecx +
jmp loc_43F008  +
mov edx [esp+0Ch+arg_4] +
mov edi [edx+8] +
cmp edx ebx +
jnz loc_43F083  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [ebx+4] +
jnz loc_43F014  +
mov [edi+4] esi +
mov eax [ebp+0] +
cmp [eax+4] ebx +
jnz loc_43F021  +
mov [eax+4] edi +
jmp loc_43F02C  +
cmp [esi] ebx +
jnz loc_43F029  +
mov [esi] edi +
jmp loc_43F02C  +
mov [esi+8] edi +
mov edx [ebp+0] +
cmp [edx] ebx +
jnz loc_43F053  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_43F03D  +
mov ecx esi +
jmp loc_43F051  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43F051  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_43F047  +
mov [edx] ecx +
mov edx [ebp+0] +
cmp [edx+8] ebx +
jnz loc_43F0DA  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_43F068  +
mov ecx esi +
mov [edx+8] ecx +
jmp loc_43F0DA  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_43F07E  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_43F073  +
mov [edx+8] ecx +
jmp loc_43F0DA  +
mov [ecx+4] edx +
mov eax [ebx] +
mov [edx] eax +
cmp edx [ebx+8] +
jnz loc_43F093  +
mov esi edx +
jmp loc_43F0AD  +
cmp byte ptr [edi+0Dh] 0 +
mov esi [edx+4] +
jnz loc_43F09F  +
mov [edi+4] esi +
mov [esi] edi +
mov eax [ebx+8] +
mov [edx+8] eax +
mov eax [ebx+8] +
mov [eax+4] edx +
mov eax [ebp+0] +
cmp [eax+4] ebx +
jnz loc_43F0BA  +
mov [eax+4] edx +
jmp loc_43F0C8  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_43F0C5  +
mov [eax] edx +
jmp loc_43F0C8  +
mov [eax+8] edx +
mov eax [ebx+4] +
mov [edx+4] eax +
mov al [ebx+0Ch] +
mov cl [edx+0Ch] +
mov [edx+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_43F1EB  +
mov eax [ebp+0] +
cmp edi [eax+4] +
jz loc_43F1E7  +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_43F1E7  +
mov ecx [esi] +
cmp edi ecx +
jnz loc_43F16C  +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_43F11C  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx ebp +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_43EE20  +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43F19F  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43F133  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_43F19B  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43F151  +
mov eax [ecx] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx ebp +
call sub_43EE70  +
mov ecx [esi+8] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx+8] +
mov ecx ebp +
push esi  +
mov byte ptr [eax+0Ch] 1 +
call sub_43EE20  +
jmp loc_43F1E7  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_43F184  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx ebp +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_43EE70  +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_43F19F  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43F1B2  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43F1B2  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [ebp+0] +
mov edi esi +
mov esi [esi+4] +
cmp edi [eax+4] +
jnz loc_43F0F0  +
jmp loc_43F1E7  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_43F1CF  +
mov eax [ecx+8] +
push ecx  +
mov byte ptr [eax+0Ch] 1 +
mov byte ptr [ecx+0Ch] 0 +
mov ecx ebp +
call sub_43EE20  +
mov ecx [esi] +
mov al [esi+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx] +
mov ecx ebp +
push esi  +
mov byte ptr [eax+0Ch] 1 +
call sub_43EE70  +
mov byte ptr [edi+0Ch] 1 +
cmp dword ptr [ebx+24h] 10h +
jb loc_43F1FC  +
push dword ptr [ebx+10h]  +
call sub_43FFF6  +
add esp 4 +
mov dword ptr [ebx+24h] 0Fh +
mov dword ptr [ebx+20h] 0 +
push ebx  +
mov byte ptr [ebx+10h] 0 +
call sub_43FFF6  +
mov eax [ebp+4] +
add esp 4 +
mov ecx [esp+0Ch+arg_4] +
test eax eax +
jz loc_43F226  +
dec eax  +
mov [ebp+4] eax +
mov eax [esp+0Ch+arg_0] +
pop edi  +
pop esi  +
pop ebp  +
mov [eax] ecx +
pop ebx  +
retn 8  +
***
retn 4  +
***
mov eax large fs:0 +
cmp dword_477B70 1 +
call sub_449030  +
cmp ecx dword_474390 +
jnz loc_43F84B  +
retn   +
jmp sub_4493F1  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_43F870  +
cmp edi eax +
jb loc_43FBD8  +
bt dword_477E9C 1 +
jnb loc_43F881  +
movs   +
jmp near ptr dword_43FB98  +
cmp ecx 80h +
jb loc_43FA5B  +
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_43F8A6  +
bt dword_474940 1 +
jb loc_43FD80  +
bt dword_477E9C 0 +
jnb loc_43FA5B  +
test edi 3 +
jnz loc_43FA78  +
test esi 3 +
jnz loc_43FA63  +
bt edi 2 +
jnb loc_43F8DF  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_43F8F6  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_43F961  +
bt esi 3 +
jnb loc_43F9BA  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_43FA10  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_43FA28  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_43FA10  +
***
bt ecx 2 +
jnb loc_43FA3B  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_43FA52  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_43FB88[ecx*4] +
jmp eax  +
***
test edi 3 +
jnz loc_43FA78  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_43FA98  +
movs   +
jmp ds:off_43FB88[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_43FA90  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_43FA98+4)[eax*4]  +
***
jmp ds:dword_43FB98[ecx*4]  +
***
jmp ds:off_43FB1C[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_43FA98  +
movs   +
jmp ds:off_43FB88[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_43FA98  +
movs   +
jmp ds:off_43FB88[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_43FA98  +
movs   +
jmp ds:off_43FB88[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_43FB88[edx*4]  +
***
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_43FC0C  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_43FC00  +
std   +
movs   +
cld   +
jmp ds:off_43FD24[edx*4]  +
neg ecx  +
jmp ds:off_43FCD4[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_43FC24  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_43FC24+4)[eax*4]  +
***
jmp ds:off_43FD24[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_43FC00  +
std   +
movs   +
cld   +
jmp ds:off_43FD24[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_43FC00  +
std   +
movs   +
cld   +
jmp ds:off_43FD24[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_43FC00  +
std   +
movs   +
cld   +
jmp ds:off_43FD24[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_43FD24[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_43FDFD  +
lea esp [esp+0] +
nop   +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_43FDA0  +
test ecx ecx +
jz loc_43FE50  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_43FE21  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_43FE10  +
and ecx 0Fh +
jz loc_43FE50  +
mov eax ecx +
shr ecx 2 +
jz loc_43FE3A  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_43FE2D  +
mov ecx eax +
and ecx 3 +
jz loc_43FE50  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_43FE41  +
lea ebx [ebx+0] +
pop eax  +
pop esi  +
pop edi  +
retn   +
***
push 20h  +
call sub_4491C0  +
push ecx  +
push [ebp+arg_0]  +
test eax eax +
call sub_44A2ED  +
lea eax [ecx+9] +
push esi  +
sub esp 10h +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov byte ptr [esi+0Ch] 0 +
test ecx ecx +
jnz loc_440110  +
push edi  +
call sub_448313  +
mov edi eax +
mov [esi+8] edi +
mov edx [edi+6Ch] +
mov [esi] edx +
mov ecx [edi+68h] +
mov [esi+4] ecx +
cmp edx off_475104 +
jz loc_4400D9  +
mov eax dword_4751C8 +
test [edi+70h] eax +
jnz loc_4400D9  +
call sub_44A7B8  +
mov [esi] eax +
mov eax [esi+4] +
pop edi  +
cmp eax off_474EA4 +
jz loc_4400FA  +
mov ecx [esi+8] +
mov eax dword_4751C8 +
test [ecx+70h] eax +
jnz loc_4400FA  +
call sub_44AB3A  +
mov [esi+4] eax +
mov ecx [esi+8] +
mov eax [ecx+70h] +
test al 2 +
jnz loc_44011A  +
or eax 2 +
mov [ecx+70h] eax +
mov byte ptr [esi+0Ch] 1 +
jmp loc_44011A  +
mov eax [ecx] +
mov [esi] eax +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp loc_440183  +
and ebx 3 +
jz loc_440196  +
mov al [esi] +
add esi 1 +
mov [edi] al +
add edi 1 +
test al al +
jz loc_4401C8  +
sub ebx 1 +
jnz loc_440183  +
mov eax [esp+10h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [edi] al +
add edi 1 +
sub ebx 1 +
jnz loc_4401C3  +
pop ebx  +
pop esi  +
mov eax [esp+8] +
pop edi  +
retn   +
***
sub esp 10h +
sub esp 10h +
sub esp 10h +
sub esp 10h +
sub esp 10h +
sub esp 10h +
sub esp 10h +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
cmp dword_477ED0 0 +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
and dword ptr [ecx+4] 0 +
mov dword ptr [ecx] offset off_46407C +
push esi  +
push esi  +
cmp [ebp+arg_0] 0 +
cmp byte ptr [esi+8] 0 +
mov eax [ecx+4] +
sub esp 20h +
lea eax [ebp+arg_C] +
cmp [ebp+lpMem] 0 +
call sub_448313  +
push esi  +
push esi  +
sub esp 14h +
push ecx  +
sub esp 0Ch +
push esi  +
push edi  +
mov edi 0FFFFh +
push edi  +
push 133Fh  +
call sub_44A25A  +
fld  [ebp+arg_0] +
mov esi eax +
pop ecx  +
pop ecx  +
mov ecx dword ptr [ebp+arg_0+6] +
mov eax 7FF0h +
movzx ecx cx +
and ecx eax +
cmp cx ax +
jnz loc_440C34  +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_449A59  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_440C08  +
cmp eax 2 +
jle loc_440BF7  +
cmp eax 3 +
jnz loc_440C08  +
fild  [ebp+arg_8] +
push esi  +
sub esp 10h +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
fld  [ebp+arg_0] +
fstp  [esp+28h+var_28] +
push 19h  +
call sub_449DA0  +
add esp 18h +
jmp loc_440D6C  +
push edi  +
push esi  +
call sub_44A25A  +
pop ecx  +
pop ecx  +
fld  [ebp+arg_0] +
jmp loc_440D6C  +
fld  [ebp+arg_0] +
fld  ds:dbl_463970 +
fadd st st(1) +
push esi  +
sub esp 18h +
fstp  qword ptr [esp+10h] +
fild  [ebp+arg_8] +
fstp  [ebp+arg_0] +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_28] +
fstp  [esp+30h+var_30] +
push 19h  +
push 8  +
jmp loc_440D64  +
fldz   +
fucomp  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_440C43  +
fstp  st +
jmp loc_440BF7  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_449958  +
mov ecx [ebp+arg_8] +
add esp 0Ch +
mov edx [ebp+var_4] +
test ecx ecx +
jns loc_440C6B  +
mov eax 80000000h +
sub eax ecx +
cmp edx eax +
jl loc_440CC3  +
jmp loc_440C7A  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp edx eax +
jg loc_440D32  +
lea eax [edx+ecx] +
cmp eax 0A00h +
jg loc_440D32  +
cmp eax 400h +
jle loc_440CBC  +
add eax 0FFFFFA00h +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_449A2A  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  qword ptr [esp+10h] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  [esp+30h+var_28] +
jmp loc_440D5A  +
cmp eax 0FFFFF603h +
jge loc_440CE8  +
fldz   +
fmulp st(1) st +
push esi  +
sub esp 18h +
fstp  qword ptr [esp+10h] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  [esp+30h+var_28] +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 12h  +
jmp loc_440D64  +
cmp eax 0FFFFFC03h +
jge loc_440D15  +
add eax 600h +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_449A2A  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  qword ptr [esp+10h] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
jmp loc_440CD8  +
push eax  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_449A2A  +
push edi  +
push esi  +
fstp  [ebp+arg_0] +
call sub_44A25A  +
add esp 14h +
jmp loc_440C00  +
push esi  +
sub esp 10h +
fstp  qword ptr [esp+8] +
fld  dbl_474948 +
fstp  [esp+28h+var_28] +
call sub_44E2A2  +
fstp  qword ptr [esp+8] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  [esp+28h+var_28] +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 11h  +
call sub_449AE6  +
add esp 24h +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esp+arg_8] +
pop ebp  +
push 0Ah  +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_44253A  +
dec eax  +
jz loc_442529  +
dec eax  +
jz loc_4424FA  +
dec eax  +
jz loc_4424B0  +
mov edx [ebp+arg_4] +
dec eax  +
jz loc_442428  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_44132A  +
mov eax [esi] +
cmp eax [edx] +
jz loc_440F13  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_440EB3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_440ED5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_440EF7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_440F15  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_440F15  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_440FA4  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_440F44  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_440F66  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_440F88  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_440FA6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_440FA6  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_441035  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_440FD5  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_440FF7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_441019  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_441037  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441037  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_4410C6  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_441066  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_441088  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_4410AA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_4410C8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4410C8  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_44115C  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_4410FC  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_44111E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_441140  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_44115E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44115E  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_4411ED  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_44118D  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_4411AF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_4411D1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_4411EF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4411EF  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_44127E  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_44121E  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_441240  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_441262  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_441280  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441280  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_44130F  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_4412AF  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_4412D1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_4412F3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_441311  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441311  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_440E89  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_44174C  +
jmp ds:off_442542[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_4413CB  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_44136B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_44138D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_4413AF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_4413CD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4413CD  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_441462  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_441402  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_441424  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_441446  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_441464  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441464  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_4414F9  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_441499  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_4414BB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_4414DD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_4414FB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4414FB  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_441590  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_441530  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_441552  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_441574  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_441592  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441592  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_441628  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_4415C8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_4415EA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_44160C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_44162A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44162A  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_4416BF  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_44165F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_441681  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_4416A3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_4416C1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4416C1  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_441746  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_4416EE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_44170C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_44172A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_441748  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441748  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_44253C  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_4417D3  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_44177B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_441799  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_4417B7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_4417D5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4417D5  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_44186A  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_44180A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_44182C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_44184E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_44186C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44186C  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_441901  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_4418A1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_4418C3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_4418E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_441903  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441903  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_441998  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_441938  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_44195A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_44197C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_44199A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44199A  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_441A2F  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_4419CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_4419F1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_441A13  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_441A31  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441A31  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_441AC7  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_441A67  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_441A89  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_441AAB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_441AC9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441AC9  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_441B5E  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_441AFE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_441B20  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_441B42  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_441B60  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441B60  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_44174E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44174E  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_441C18  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_441BB8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_441BDA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_441BFC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_441C1A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441C1A  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_441CAF  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_441C4F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_441C71  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_441C93  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_441CB1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441CB1  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_441D46  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_441CE6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_441D08  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_441D2A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_441D48  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441D48  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_441DDD  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_441D7D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_441D9F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_441DC1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_441DDF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441DDF  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_441E74  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_441E14  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_441E36  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_441E58  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_441E76  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441E76  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_441F0C  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_441EAC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_441ECE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_441EF0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_441F0E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441F0E  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_441FA3  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_441F43  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_441F65  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_441F87  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_441FA5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_441FA5  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_44174C  +
jmp loc_442405  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_44204E  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_441FEE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_442010  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_442032  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_442050  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_442050  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_4420E5  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_442085  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_4420A7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_4420C9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_4420E7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4420E7  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_44217C  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_44211C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_44213E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_442160  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_44217E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_44217E  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_442213  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_4421B3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_4421D5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_4421F7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_442215  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_442215  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_4422AB  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_44224B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_44226D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_44228F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_4422AD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4422AD  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_442342  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_4422E2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_442304  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_442326  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_442344  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_442344  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_4423D9  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_442379  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_44239B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_4423BD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_4423DB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4423DB  +
xor ecx ecx +
test ecx ecx +
jnz loc_44174E  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_442405  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_44174E  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_441B68  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_441B60  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_44244B  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_44246D  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_44248F  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_4424A9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_44253C  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_4424D2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_4424F0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_442497  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_44251C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_44253C  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_442497  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_442497  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4425F0  +
cmp edi eax +
jb loc_442958  +
bt dword_477E9C 1 +
jnb loc_442601  +
movs   +
jmp near ptr dword_442918  +
cmp ecx 80h +
jb loc_4427DB  +
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_442626  +
bt dword_474940 1 +
jb loc_442B00  +
bt dword_477E9C 0 +
jnb loc_4427DB  +
test edi 3 +
jnz loc_4427F8  +
test esi 3 +
jnz loc_4427E3  +
bt edi 2 +
jnb loc_44265F  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_442676  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_4426E1  +
bt esi 3 +
jnb loc_44273A  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_442790  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_4427A8  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_442790  +
***
bt ecx 2 +
jnb loc_4427BB  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_4427D2  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_442908[ecx*4] +
jmp eax  +
***
test edi 3 +
jnz loc_4427F8  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_442818  +
movs   +
jmp ds:off_442908[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_442810  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_442818+4)[eax*4]  +
***
jmp ds:dword_442918[ecx*4]  +
***
jmp ds:off_44289C[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_442818  +
movs   +
jmp ds:off_442908[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_442818  +
movs   +
jmp ds:off_442908[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_442818  +
movs   +
jmp ds:off_442908[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_442908[edx*4]  +
***
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_44298C  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_442980  +
std   +
movs   +
cld   +
jmp ds:off_442AA4[edx*4]  +
neg ecx  +
jmp ds:off_442A54[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_4429A4  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_4429A4+4)[eax*4]  +
***
jmp ds:off_442AA4[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_442980  +
std   +
movs   +
cld   +
jmp ds:off_442AA4[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_442980  +
std   +
movs   +
cld   +
jmp ds:off_442AA4[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_442980  +
std   +
movs   +
cld   +
jmp ds:off_442AA4[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_442AA4[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_442BE0  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_442B7D  +
lea esp [esp+0] +
nop   +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_442B20  +
test ecx ecx +
jz loc_442BD0  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_442BA1  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_442B90  +
and ecx 0Fh +
jz loc_442BD0  +
mov eax ecx +
shr ecx 2 +
jz loc_442BBA  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_442BAD  +
mov ecx eax +
and ecx 3 +
jz loc_442BD0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_442BC1  +
lea ebx [ebx+0] +
pop eax  +
pop esi  +
pop edi  +
retn   +
***
lea esp [esp+0] +
jmp loc_442BE0  +
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_442BFC  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_442BF3  +
shr eax 2 +
jz loc_442C0E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_442C01  +
pop ecx  +
jmp loc_442B0E  +
***
mov edx [esp+arg_8] +
push esi  +
cmp [ebp+lpMem] 0 +
push esi  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_442E87  +
mov edx [ebp+arg_4] +
test edx edx +
jz loc_442E87  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_442E9B  +
mov [esi] cl +
call sub_445D6B  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_44A4EE  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
push edi  +
mov edi esi +
sub edi ecx +
mov al [ecx] +
mov [edi+ecx] al +
inc ecx  +
test al al +
jz loc_442EAD  +
dec edx  +
jnz loc_442EA0  +
pop edi  +
test edx edx +
jnz loc_442EBD  +
mov [esi] dl +
call sub_445D6B  +
push 22h  +
jmp loc_442E8E  +
xor eax eax +
jmp loc_442E98  +
***
mov ecx [esp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
call sub_4491C0  +
pop ecx  +
push esi  +
push ebx  +
pop ecx  +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
mov ebx [ebp+8] +
mov eax lpMem +
push dword ptr [eax+esi*4]  +
push esi  +
call sub_443DA1  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_4491C0  +
pop ecx  +
cmp [ebp+arg_0] 0 +
call sub_4491C0  +
pop ecx  +
cmp [ebp+arg_0] 0 +
push esi  +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
pop ecx  +
push esi  +
push ecx  +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
pop ecx  +
push ebx  +
call sub_4491C0  +
pop ecx  +
push esi  +
call sub_4491C0  +
pop ecx  +
mov eax dword_479BE4 +
call sub_443101  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
sub esp 20h +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
push esi  +
push ecx  +
sub esp 18h +
pop eax  +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_448313  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp+var_4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_446E24  +
add esp 20h +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
sub ecx eax +
call sub_444322  +
mov eax offset sub_4504CC +
sub esp 18h +
cmp dword_477ED0 0 +
push esi  +
lea eax [ebp+arg_C] +
sub esp 10h +
push [ebp+arg_C]  +
call sub_4491C0  +
pop ecx  +
mov eax [ebp+arg_4] +
push esi  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
sub esp 30h +
sub esp 1Ch +
mov eax [ebp+arg_0] +
push 0  +
cmp [ebp+arg_C] 0Ah +
mov ecx [ebp+arg_4] +
push 2  +
push [ebp+arg_10]  +
push ecx  +
sub esp 20h +
cmp [ebp+arg_8] 0 +
sub esp 0C4h +
push esi  +
call sub_448313  +
call sub_448313  +
call sub_448313  +
sub esp 44h +
call sub_44832B  +
push esi  +
call sub_44832B  +
mov ecx [ebp+arg_0] +
sub esp 10h +
push 4  +
call sub_4491C0  +
pop ecx  +
push esi  +
mov esi [ebp+arg_0] +
cmp lpCriticalSection[esi*8] 0 +
jnz loc_446037  +
push esi  +
call sub_44609B  +
pop ecx  +
test eax eax +
jnz loc_446037  +
push 11h  +
call sub_44852A  +
pop ecx  +
push lpCriticalSection[esi*8]  +
call ds:EnterCriticalSection  +
pop esi  +
pop ebp  +
retn   +
***
call sub_4491C0  +
pop ecx  +
mov esi offset lpCriticalSection +
mov eax [ebp+arg_0] +
call sub_4491C0  +
push esi  +
mov dword ptr [ecx] offset off_4640E4 +
push esi  +
call sub_4491C0  +
mov eax [ebp-28h] +
call sub_443EBD  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 3Ch +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
call sub_4491C0  +
mov esp [ebp-18h] +
call sub_4491C0  +
mov eax [ebp+arg_0] +
call sub_4491C0  +
call sub_448313  +
push ebx  +
push esi  +
call sub_448313  +
cmp [ebp+arg_0] 0 +
push ecx  +
sub esp 10h +
push esi  +
push ebx  +
push esi  +
push esi  +
push edi  +
xor esi esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+lpMem]  +
call sub_452F8E  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_447353  +
cmp [ebp+arg_8] eax +
jz loc_447353  +
cmp dword_4771EC eax +
jbe loc_447353  +
push esi  +
call sub_4478D4  +
add esi 3E8h +
pop ecx  +
cmp esi dword_4771EC +
jbe loc_44734E  +
or esi 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
jnz loc_447312  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_447379  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
mov eax [ebp+arg_C] +
mov edx [ebp+arg_4] +
mov eax dword_4748D0 +
not edx  +
mov ecx [ebp+arg_0] +
and edx eax +
and ecx [ebp+arg_4] +
or edx ecx +
mov dword_4748D0 edx +
pop ebp  +
retn   +
***
call sub_453090  +
test eax eax +
jz loc_447467  +
push 16h  +
call sub_4530B9  +
pop ecx  +
test byte ptr dword_4748D0 2 +
jz loc_447491  +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_447480  +
push 7  +
pop ecx  +
int 29h  +
push 1  +
push 40000015h  +
push 3  +
call sub_44A391  +
add esp 0Ch +
push 3  +
call sub_4485E8  +
mov edx [esp+arg_0] +
mov eax dword_478B40 +
mov eax dword_478B44 +
mov eax dword_478B48 +
mov eax dword_478B4C +
sub esp 44h +
mov eax dword_478B50 +
push ecx  +
push esi  +
mov esi dword_4748E0 +
test esi esi +
jns loc_44762F  +
mov eax dword_478BB4 +
xor esi esi +
xor eax dword_474390 +
mov [ebp+var_4] esi +
jz loc_447629  +
push esi  +
lea ecx [ebp+var_4] +
push ecx  +
call eax  +
cmp eax 7Ah +
jnz loc_447629  +
inc esi  +
mov dword_4748E0 esi +
xor eax eax +
test esi esi +
pop esi  +
setnle al  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+lpTopLevelExceptionFilter]  +
push [ebp+dwMilliseconds]  +
push [ebp+uExitCode]  +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push [ebp+ExceptionInfo]  +
call ds:UnhandledExceptionFilter  +
pop ebp  +
retn   +
***
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_453568  +
call sub_44792D  +
add esp 0Ch +
retn   +
***
mov eax [esp+2+arg_4] +
sub esp 2Ch +
mov eax [ebp+arg_4] +
sub esp 10h +
push esi  +
push ebx  +
mov eax dword_478B94 +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push 0  +
mov eax dword_478B98 +
mov eax dword_478B9C +
push [ebp+cchData]  +
push [ebp+cchTime]  +
mov eax dword_478BA8 +
mov eax dword_478BAC +
mov eax dword_478BB0 +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
call sub_44832B  +
mov esi eax +
test esi esi +
jz loc_4481DB  +
mov edx [esi+5Ch] +
mov ecx edx +
push edi  +
mov edi [ebp+arg_0] +
cmp [ecx] edi +
jz loc_4480B0  +
add ecx 0Ch +
lea eax [edx+90h] +
cmp ecx eax +
jb loc_44809F  +
lea eax [edx+90h] +
cmp ecx eax +
jnb loc_4480BE  +
cmp [ecx] edi +
jz loc_4480C0  +
xor ecx ecx +
test ecx ecx +
jz loc_4481D8  +
mov edx [ecx+8] +
test edx edx +
jz loc_4481D8  +
cmp edx 5 +
jnz loc_4480E4  +
and dword ptr [ecx+8] 0 +
xor eax eax +
inc eax  +
jmp loc_4481DA  +
cmp edx 1 +
jnz loc_4480F1  +
or eax 0FFFFFFFFh +
jmp loc_4481DA  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [esi+60h] +
mov [esi+60h] eax +
cmp dword ptr [ecx+4] 8 +
jnz loc_4481C5  +
push 24h  +
pop edi  +
mov eax [esi+5Ch] +
and dword ptr [edi+eax+8] 0 +
add edi 0Ch +
cmp edi 90h +
jl loc_448108  +
cmp dword ptr [ecx] 0C000008Eh +
mov edi [esi+64h] +
jnz loc_448132  +
mov dword ptr [esi+64h] 83h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C0000090h +
jnz loc_448143  +
mov dword ptr [esi+64h] 81h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C0000091h +
jnz loc_448154  +
mov dword ptr [esi+64h] 84h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C0000093h +
jnz loc_448165  +
mov dword ptr [esi+64h] 85h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C000008Dh +
jnz loc_448176  +
mov dword ptr [esi+64h] 82h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C000008Fh +
jnz loc_448187  +
mov dword ptr [esi+64h] 86h +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C0000092h +
jnz loc_448198  +
mov dword ptr [esi+64h] 8Ah +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C00002B5h +
jnz loc_4481A9  +
mov dword ptr [esi+64h] 8Dh +
jmp loc_4481B8  +
cmp dword ptr [ecx] 0C00002B4h +
jnz loc_4481B8  +
mov dword ptr [esi+64h] 8Eh +
push dword ptr [esi+64h]  +
push 8  +
call edx  +
pop ecx  +
mov [esi+64h] edi +
jmp loc_4481CE  +
push dword ptr [ecx+4]  +
and dword ptr [ecx+8] 0 +
call edx  +
pop ecx  +
mov [esi+60h] ebx +
or eax 0FFFFFFFFh +
pop ebx  +
jmp loc_4481DA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
pop ecx  +
pop ecx  +
mov esi eax +
call ds:GetLastError  +
call sub_4491C0  +
pop ecx  +
pop ecx  +
call sub_4485FC  +
mov eax dword_4748F8 +
push ecx  +
push [ebp+uExitCode]  +
call sub_448DC9  +
push 0  +
cmp ds:off_4640C4 0 +
push 0  +
call ds:EncodePointer  +
mov eax [ebp+arg_4] +
push esi  +
pop ecx  +
pop ecx  +
call sub_4491C0  +
cmp dword ptr [ebp+10h] 0 +
jz locret_4487C6  +
push 8  +
call sub_44617D  +
pop ecx  +
retn   +
***
push 0  +
call ds:GetProcessHeap  +
call sub_4491C0  +
pop ecx  +
push ecx  +
push ecx  +
mov esi dword_47707C +
pop ecx  +
mov ecx [ebp+arg_0] +
sub esp 1FCh +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
sub esp 14h +
mov esi offset unk_46D218 +
mov esi offset unk_46D220 +
push ecx  +
mov ecx dword_479BE8 +
xor edx edx +
test ecx ecx +
jnz loc_44917A  +
mov ecx offset unk_469720 +
push esi  +
push 20h  +
pop esi  +
movzx eax word ptr [ecx] +
cmp ax si +
ja loc_44918F  +
test ax ax +
jz loc_4491B2  +
test edx edx +
jz loc_4491AA  +
cmp eax 22h +
jnz loc_44919D  +
xor eax eax +
test edx edx +
setz al  +
mov edx eax +
add ecx 2 +
jmp loc_44917E  +
cmp ax si +
ja loc_4491B2  +
add ecx 2 +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_4491A2  +
mov eax ecx +
pop esi  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
sub esp 18h +
call ds:IsDebuggerPresent  +
sub esp 324h +
push 8  +
sub esp 31Ch +
and dword_477E98 0 +
cmp [ebp+lpMem] 0 +
sub esp 94h +
mov eax [ebp+arg_0] +
fld  [ebp+arg_0] +
push ecx  +
cmp [ebp+arg_4] 7FF00000h +
mov eax [ebp+arg_0] +
push ecx  +
sub esp 0Ch +
cmp dword_4753C0 0 +
push 0  +
mov eax [ebp+Arguments] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
call sub_4491C0  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
call sub_4491C0  +
pop ecx  +
push dword_477EAC  +
mov eax [ebp+arg_0] +
sub esp 328h +
mov eax [ebp+arg_0] +
push dword_477EB0  +
xor eax eax +
test eax eax +
mov edx [ebp+arg_0] +
push ebx  +
mov edx [ebp+arg_0] +
call sub_4491C0  +
pop ecx  +
push edi  +
cmp dword_478B38 0 +
mov eax [ebp+arg_0] +
sub esp 10h +
push ebx  +
sub esp 520h +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
pop ecx  +
retn   +
***
jmp loc_44AD80  +
***
sub esp 20h +
call sub_4491C0  +
pop ecx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
push esi  +
sub esp 1F0h +
push ebx  +
call sub_4491C0  +
pop ecx  +
pop ecx  +
retn   +
***
jmp loc_44B683  +
***
sub esp 0Ch +
sub esp 1CCh +
sub esp 2E8h +
sub esp 18h +
sub esp 80h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_80] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_68] eax +
xor eax eax +
push ebx  +
xor ebx ebx +
inc eax  +
push esi  +
mov [ebp+var_6C] eax +
mov esi ebx +
mov eax ebx +
mov [ebp+var_70] ebx +
push edi  +
lea edi [ebp+var_20] +
mov [ebp+var_4C] ebx +
mov [ebp+var_60] ebx +
mov [ebp+var_5C] ebx +
mov [ebp+var_64] ebx +
mov [ebp+var_54] ebx +
cmp [ebp+arg_1C] eax +
jnz loc_44BF52  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
xor eax eax +
jmp loc_44C65A  +
mov edx [ebp+arg_8] +
mov ecx edx +
mov [ebp+var_50] ecx +
mov cl [edx] +
cmp cl 20h +
jz loc_44BF70  +
cmp cl 9 +
jz loc_44BF70  +
cmp cl 0Ah +
jz loc_44BF70  +
cmp cl 0Dh +
jnz loc_44BF73  +
inc edx  +
jmp loc_44BF5A  +
mov cl [edx] +
inc edx  +
mov [ebp+var_55] cl +
cmp eax 0Bh +
ja loc_44C1FD  +
jmp ds:off_44C66B[eax*4]  +
lea eax [ecx-31h] +
cmp al 8 +
ja loc_44BF96  +
push 3  +
pop eax  +
dec edx  +
jmp loc_44BF73  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jnz loc_44BFAC  +
push 5  +
pop eax  +
jmp loc_44BF73  +
movsx eax cl +
sub eax 2Bh +
jz loc_44BFD3  +
dec eax  +
dec eax  +
jz loc_44BFC6  +
sub eax 3 +
jnz loc_44C24F  +
xor eax eax +
inc eax  +
jmp loc_44BF73  +
push 2  +
mov ecx 8000h +
pop eax  +
mov [ebp+var_70] ecx +
jmp loc_44BF73  +
push 2  +
pop eax  +
mov [ebp+var_70] ebx +
jmp loc_44BF73  +
xor eax eax +
inc eax  +
mov [ebp+var_60] eax +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_44BF90  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jnz loc_44BFFD  +
push 4  +
jmp loc_44BFA9  +
cmp cl 2Bh +
jz loc_44C02D  +
cmp cl 2Dh +
jz loc_44C02D  +
cmp cl 30h +
jz loc_44BFC1  +
cmp cl 43h +
jle loc_44C24F  +
cmp cl 45h +
jle loc_44C026  +
sub cl 64h +
cmp cl 1 +
ja loc_44C24F  +
push 6  +
jmp loc_44BFA9  +
dec edx  +
push 0Bh  +
jmp loc_44BFA9  +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_44BF90  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jz loc_44BFA7  +
cmp cl 30h +
jz loc_44BFC1  +
mov edx [ebp+var_50] +
jmp loc_44C250  +
xor eax eax +
inc eax  +
mov [ebp+var_60] eax +
cmp cl 30h +
jl loc_44C09B  +
mov eax [ebp+var_4C] +
mov esi [ebp+var_54] +
cmp cl 39h +
jg loc_44C093  +
cmp eax 19h +
jnb loc_44C08A  +
sub cl 30h +
inc eax  +
mov [edi] cl +
inc edi  +
jmp loc_44C08B  +
inc esi  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_44C077  +
mov [ebp+var_54] esi +
mov esi ebx +
mov [ebp+var_4C] eax +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jz loc_44BFF9  +
cmp cl 2Bh +
jz loc_44C02D  +
cmp cl 2Dh +
jz loc_44C02D  +
jmp loc_44C00C  +
xor eax eax +
inc eax  +
mov [ebp+var_60] eax +
mov [ebp+var_5C] eax +
mov eax [ebp+var_4C] +
test eax eax +
jnz loc_44C0EE  +
cmp cl 30h +
jnz loc_44C0F1  +
mov eax [ebp+var_54] +
mov cl [edx] +
dec eax  +
inc edx  +
cmp cl 30h +
jz loc_44C0DF  +
mov [ebp+var_54] eax +
mov eax [ebp+var_4C] +
cmp cl 30h +
jl loc_44C118  +
mov esi [ebp+var_54] +
cmp cl 39h +
jg loc_44C110  +
cmp eax 19h +
jnb loc_44C108  +
sub cl 30h +
inc eax  +
mov [edi] cl +
inc edi  +
dec esi  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_44C0F6  +
mov [ebp+var_54] esi +
mov esi ebx +
mov [ebp+var_4C] eax +
cmp cl 2Bh +
jz loc_44C02D  +
cmp cl 2Dh +
jz loc_44C02D  +
cmp cl 43h +
jle loc_44C144  +
cmp cl 45h +
jle loc_44C026  +
sub cl 64h +
cmp cl 1 +
jbe loc_44C026  +
dec edx  +
jmp loc_44C253  +
xor eax eax +
sub cl 30h +
inc eax  +
mov [ebp+var_5C] eax +
cmp cl 9 +
ja loc_44C05E  +
push 4  +
jmp loc_44BF92  +
lea eax [edx-2] +
mov [ebp+var_50] eax +
lea eax [ecx-31h] +
cmp al 8 +
ja loc_44C177  +
push 9  +
jmp loc_44BF92  +
movsx eax cl +
sub eax 2Bh +
jz loc_44C1A1  +
dec eax  +
dec eax  +
jz loc_44C193  +
sub eax 3 +
jnz loc_44C05E  +
push 8  +
jmp loc_44BFA9  +
push 7  +
or ecx 0FFFFFFFFh +
pop eax  +
mov [ebp+var_6C] ecx +
jmp loc_44BF73  +
push 7  +
jmp loc_44BFA9  +
xor eax eax +
inc eax  +
mov [ebp+var_64] eax +
jmp loc_44C1B3  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jz loc_44C1B0  +
sub cl 31h +
cmp cl 8 +
ja loc_44C24F  +
jmp loc_44C170  +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_44C170  +
cmp cl 30h +
jmp loc_44C186  +
cmp [ebp+arg_18] ebx +
jz loc_44C1F9  +
lea eax [edx-1] +
mov [ebp+var_50] eax +
movsx eax cl +
sub eax 2Bh +
jz loc_44C1A1  +
dec eax  +
dec eax  +
jnz loc_44C05E  +
or [ebp+var_6C] 0FFFFFFFFh +
push 7  +
pop eax  +
jmp loc_44BF73  +
push 0Ah  +
pop eax  +
dec edx  +
cmp eax 0Ah +
jnz loc_44BF73  +
jmp loc_44C250  +
xor eax eax +
mov esi ebx +
inc eax  +
mov [ebp+var_64] eax +
jmp loc_44C231  +
cmp cl 39h +
jg loc_44C24A  +
imul ecx esi +
movsx esi [ebp+var_55] +
add esi 0FFFFFFD0h +
add esi ecx +
cmp esi 1450h +
jg loc_44C238  +
mov cl [edx] +
inc edx  +
mov [ebp+var_55] cl +
cmp cl 30h +
jge loc_44C212  +
jmp loc_44C24A  +
mov cl [ebp+var_55] +
mov esi 1451h +
jmp loc_44C24A  +
cmp cl 39h +
jg loc_44C24F  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_44C242  +
dec edx  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_68] +
mov [ecx] edx +
mov ecx [ebp+var_60] +
test ecx ecx +
jz loc_44C63A  +
cmp eax 18h +
jbe loc_44C281  +
mov al [ebp+var_9] +
cmp al 5 +
jl loc_44C274  +
inc al  +
mov [ebp+var_9] al +
mov ecx [ebp+var_54] +
dec edi  +
push 18h  +
inc ecx  +
pop eax  +
mov [ebp+var_54] ecx +
jmp loc_44C284  +
mov ecx [ebp+var_54] +
test eax eax +
jz loc_44C630  +
dec edi  +
cmp [edi] bl +
jnz loc_44C29B  +
dec eax  +
inc ecx  +
dec edi  +
cmp [edi] bl +
jz loc_44C291  +
mov [ebp+var_54] ecx +
lea ecx [ebp+var_3C] +
push ecx  +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_456A97  +
mov ecx [ebp+var_6C] +
add esp 0Ch +
test ecx ecx +
jns loc_44C2B5  +
neg esi  +
add esi [ebp+var_54] +
mov eax [ebp+var_64] +
test eax eax +
jnz loc_44C2C2  +
add esi [ebp+arg_10] +
mov eax [ebp+var_5C] +
test eax eax +
jnz loc_44C2CC  +
sub esi [ebp+arg_14] +
cmp esi 1450h +
jg loc_44C622  +
cmp esi 0FFFFEBB0h +
jl loc_44C613  +
mov edx offset unk_4753F8 +
sub edx 60h +
test esi esi +
jz loc_44C601  +
jns loc_44C300  +
mov edx offset unk_475558 +
neg esi  +
sub edx 60h +
cmp [ebp+arg_C] ebx +
jnz loc_44C5F9  +
xor eax eax +
mov word ptr [ebp+var_3C] ax +
jmp loc_44C5F9  +
mov eax esi +
add edx 54h +
sar esi 3 +
mov [ebp+var_54] edx +
mov [ebp+var_4C] esi +
and eax 7 +
jz loc_44C5F9  +
imul ecx eax +
mov eax 8000h +
add ecx edx +
mov [ebp+var_50] ecx +
cmp [ecx] ax +
jb loc_44C34E  +
mov esi ecx +
lea edi [ebp+var_48] +
lea ecx [ebp+var_48] +
mov [ebp+var_50] ecx +
movs   +
movs   +
movs   +
dec [ebp+var_48+2]  +
movzx edi word ptr [ecx+0Ah] +
mov edx [ebp+var_32] +
mov eax edi +
xor eax edx +
mov [ebp+var_7C] ebx +
and eax 8000h +
mov [ebp+var_2C] ebx +
mov [ebp+var_60] eax +
mov eax 7FFFh +
and edx eax +
mov [ebp+var_28] ebx +
and edi eax +
mov [ebp+var_24] ebx +
lea eax [edi+edx] +
movzx esi ax +
mov eax 7FFFh +
mov [ebp+var_6C] esi +
cmp dx ax +
jnb loc_44C5D6  +
cmp di ax +
jnb loc_44C5D6  +
mov eax 0BFFDh +
cmp si ax +
ja loc_44C5D6  +
mov eax 3FBFh +
cmp si ax +
ja loc_44C3B6  +
mov [ebp-34h] ebx +
jmp loc_44C5ED  +
test dx dx +
jnz loc_44C3DF  +
inc esi  +
test dword ptr [ebp-34h] 7FFFFFFFh +
mov [ebp+var_6C] esi +
jnz loc_44C3DF  +
cmp [ebp+var_38] 0 +
jnz loc_44C3DF  +
cmp [ebp+var_3C] 0 +
jnz loc_44C3DF  +
xor eax eax +
mov word ptr [ebp+var_32] ax +
jmp loc_44C5F3  +
test di di +
jnz loc_44C3FA  +
inc esi  +
test dword ptr [ecx+8] 7FFFFFFFh +
mov [ebp+var_6C] esi +
jnz loc_44C3FA  +
cmp [ecx+4] ebx +
jnz loc_44C3FA  +
cmp [ecx] ebx +
jz loc_44C3AE  +
push 5  +
mov eax ebx +
lea edx [ebp+var_28] +
pop edi  +
mov [ebp+var_74] eax +
mov [ebp+var_68] edi +
mov [ebp+var_5C] edi +
test edi edi +
jle loc_44C467  +
lea esi [ebp+var_3C] +
lea esi [esi+eax*2] +
lea eax [ecx+8] +
mov [ebp+var_64] eax +
movzx eax word ptr [esi] +
mov [ebp+var_5C] eax +
mov eax [ebp+var_64] +
mov ecx [ebp+var_5C] +
mov [ebp+var_78] ebx +
movzx eax word ptr [eax] +
imul ecx eax +
mov [ebp+var_5C] ecx +
add ecx [edx-4] +
cmp ecx [edx-4] +
jb loc_44C440  +
cmp ecx [ebp+var_5C] +
jnb loc_44C445  +
xor eax eax +
inc eax  +
jmp loc_44C448  +
mov eax [ebp+var_78] +
mov [edx-4] ecx +
test eax eax +
jz loc_44C452  +
inc word ptr [edx]  +
sub [ebp+var_64] 2 +
add esi 2 +
dec edi  +
test edi edi +
jg loc_44C41B  +
mov ecx [ebp+var_50] +
mov edi [ebp+var_68] +
mov eax [ebp+var_74] +
add edx 2 +
inc eax  +
dec edi  +
mov [ebp+var_74] eax +
mov [ebp+var_68] edi +
test edi edi +
jg loc_44C408  +
mov esi [ebp+var_6C] +
mov edx [ebp+var_24] +
add esi 0C002h +
mov edi [ebp+var_2C] +
mov [ebp+var_50] edx +
test si si +
jle loc_44C4C8  +
test edx edx +
js loc_44C4C3  +
mov eax [ebp+var_28] +
mov edx edi +
shr edx 1Fh +
mov ecx eax +
add eax eax +
shr ecx 1Fh +
or eax edx +
add edi edi +
mov edx [ebp+var_50] +
mov [ebp+var_28] eax +
add edx edx +
mov eax 0FFFFh +
mov [ebp+var_2C] edi +
or edx ecx +
add esi eax +
mov [ebp+var_50] edx +
mov [ebp+var_24] edx +
test si si +
jg loc_44C48D  +
test si si +
jg loc_44C531  +
mov eax 0FFFFh +
add esi eax +
test si si +
jns loc_44C531  +
mov ebx [ebp+var_7C] +
mov eax esi +
neg eax  +
movzx eax ax +
mov [ebp+var_68] eax +
add esi eax +
test byte ptr [ebp+var_2C] 1 +
jz loc_44C4EA  +
inc ebx  +
mov ecx [ebp+var_28] +
mov eax edx +
shl eax 1Fh +
mov [ebp+var_50] ecx +
shr [ebp+var_50] 1 +
or [ebp+var_50] eax +
mov eax [ebp+var_50] +
shl ecx 1Fh +
shr edi 1 +
shr edx 1 +
or edi ecx +
dec [ebp+var_68]  +
mov [ebp+var_24] edx +
mov [ebp+var_28] eax +
mov [ebp+var_2C] edi +
jnz loc_44C4E3  +
push 0  +
test ebx ebx +
mov [ebp+var_50] edx +
pop ebx  +
jz loc_44C531  +
mov ax di +
xor edi edi +
inc edi  +
or ax di +
mov word ptr [ebp+var_2C] ax +
mov edi [ebp+var_2C] +
jmp loc_44C535  +
mov ax word ptr [ebp+var_2C] +
mov edx 8000h +
cmp ax dx +
ja loc_44C54D  +
and edi 1FFFFh +
cmp edi 18000h +
jnz loc_44C58D  +
mov eax [ebp+var_2C+2] +
cmp eax 0FFFFFFFFh +
jnz loc_44C589  +
mov eax [ebp+var_28+2] +
mov [ebp+var_2C+2] ebx +
cmp eax 0FFFFFFFFh +
jnz loc_44C580  +
mov ax word ptr [ebp+var_24+2] +
mov ecx 0FFFFh +
mov [ebp+var_28+2] ebx +
cmp ax cx +
jnz loc_44C578  +
mov word ptr [ebp+var_24+2] dx +
inc esi  +
jmp loc_44C584  +
inc ax  +
mov word ptr [ebp+var_24+2] ax +
jmp loc_44C584  +
inc eax  +
mov [ebp+var_28+2] eax +
mov ecx [ebp+var_24] +
jmp loc_44C590  +
inc eax  +
mov [ebp+var_2C+2] eax +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov eax 7FFFh +
cmp si ax +
jb loc_44C5BC  +
xor eax eax +
mov [ebp+var_38] ebx +
cmp word ptr [ebp+var_60] ax +
mov [ebp+var_3C] ebx +
setz al  +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
mov [ebp-34h] eax +
jmp loc_44C5F6  +
mov ax word ptr [ebp+var_2C+2] +
or esi [ebp+var_60] +
mov word ptr [ebp+var_3C] ax +
mov eax [ebp+var_28] +
mov [ebp+var_3C+2] eax +
mov [ebp+var_38+2] ecx +
mov word ptr [ebp+var_32] si +
jmp loc_44C5F6  +
xor eax eax +
cmp word ptr [ebp+var_60] ax +
setz al  +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
mov [ebp-34h] eax +
mov [ebp+var_38] ebx +
mov [ebp+var_3C] ebx +
mov edx [ebp+var_54] +
mov esi [ebp+var_4C] +
test esi esi +
jnz loc_44C314  +
mov eax [ebp-34h] +
movzx ecx word ptr [ebp+var_3C] +
mov edx [ebp+var_3C+2] +
mov esi [ebp+var_38+2] +
shr eax 10h +
jmp loc_44C645  +
xor edi edi +
mov ecx ebx +
mov eax ebx +
mov esi ebx +
mov edx ebx +
lea ebx [edi+1] +
jmp loc_44C645  +
mov eax 7FFFh +
mov esi 80000000h +
push 2  +
jmp loc_44C640  +
mov ecx ebx +
mov eax ebx +
mov esi ebx +
mov edx ebx +
jmp loc_44C645  +
mov eax ebx +
mov esi ebx +
push 4  +
mov ecx ebx +
mov edx ebx +
pop ebx  +
mov edi [ebp+var_80] +
or eax [ebp+var_70] +
mov [edi+0Ah] ax +
mov eax ebx +
mov [edi] cx +
mov [edi+2] edx +
mov [edi+6] esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
sub esp 20h +
push [ebp+arg_10]  +
push ecx  +
cmp [ebp+arg_8] 0 +
sub esp 280h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_270] +
push ebx  +
push esi  +
mov [ebp+var_230] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_210] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_21C] edi +
mov [ebp+var_254] eax +
mov esi eax +
mov [ebp+var_218] ebx +
mov [ebp+var_240] eax +
mov [ebp+var_228] eax +
mov [ebp+var_234] eax +
mov [ebp+var_25C] eax +
mov [ebp+var_24C] eax +
mov [ebp+var_238] eax +
call sub_440099  +
call sub_445D6B  +
mov [ebp+var_258] eax +
mov eax [ebp+var_230] +
test eax eax +
jz loc_44D592  +
test byte ptr [eax+0Ch] 40h +
jnz loc_44CB3E  +
push eax  +
call sub_44E5E2  +
pop ecx  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_44CB02  +
cmp ecx 0FFFFFFFEh +
jz loc_44CB02  +
mov edx ecx +
sar eax 5 +
and edx 1Fh +
shl edx 6 +
add edx dword_477230[eax*4] +
jmp loc_44CB07  +
mov edx offset unk_474900 +
test byte ptr [edx+24h] 7Fh +
jnz loc_44D592  +
cmp ecx 0FFFFFFFFh +
jz loc_44CB2F  +
cmp ecx 0FFFFFFFEh +
jz loc_44CB2F  +
mov eax ecx +
and ecx 1Fh +
sar eax 5 +
shl ecx 6 +
add ecx dword_477230[eax*4] +
jmp loc_44CB34  +
mov ecx offset unk_474900 +
test byte ptr [ecx+24h] 80h +
jnz loc_44D592  +
mov edx [ebp+var_210] +
test edx edx +
jz loc_44D592  +
mov dl [edx] +
xor eax eax +
mov [ebp+var_224] eax +
mov ecx eax +
mov [ebp+var_220] ecx +
mov [ebp+var_244] eax +
mov [ebp+lpMem] eax +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_248] dl +
test dl dl +
jz loc_44D56C  +
mov eax [ebp+var_210] +
inc eax  +
mov [ebp+var_210] eax +
test ecx ecx +
js loc_44D56C  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_44CBA9  +
movsx eax dl +
movsx eax byte ptr ds:(a__+4)[eax] +
and eax 0Fh +
jmp loc_44CBAB  +
xor eax eax +
mov edi [ebp+var_244] +
movsx edi ds:byte_467AB0[edi+eax*8] +
mov eax edi +
mov [ebp+var_244] edi +
mov edi [ebp+var_21C] +
sar eax 4 +
mov [ebp+var_244] eax +
cmp eax 7 +
ja loc_44D550  +
jmp ds:off_44D5A7[eax*4]  +
xor eax eax +
or [ebp+var_228] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_25C] eax +
mov [ebp+var_24C] eax +
mov [ebp+var_240] eax +
mov [ebp+var_234] eax +
mov [ebp+var_218] ebx +
mov [ebp+var_238] eax +
jmp loc_44D550  +
movsx eax dl +
sub eax 20h +
jz loc_44CC62  +
sub eax 3 +
jz loc_44CC5A  +
sub eax 8 +
jz loc_44CC55  +
dec eax  +
dec eax  +
jz loc_44CC47  +
sub eax 3 +
mov eax [ebp+var_210] +
jnz loc_44D556  +
or ebx 8 +
mov [ebp+var_218] ebx +
jmp loc_44D556  +
or ebx 4 +
mov [ebp+var_218] ebx +
jmp loc_44D550  +
or ebx 1 +
jmp loc_44CC4A  +
or ebx 80h +
jmp loc_44CC4A  +
or ebx 2 +
jmp loc_44CC4A  +
cmp dl 2Ah +
jnz loc_44CC9B  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
mov [ebp+var_240] eax +
test eax eax +
jns loc_44D550  +
or ebx 4 +
neg eax  +
mov [ebp+var_218] ebx +
mov [ebp+var_240] eax +
jmp loc_44D550  +
imul ecx [ebp+var_240] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_240] eax +
jmp loc_44D54A  +
xor eax eax +
mov [ebp+var_228] eax +
jmp loc_44D550  +
cmp dl 2Ah +
jnz loc_44CCF2  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_228] eax +
test eax eax +
mov eax [ebp+var_210] +
mov [ebp+var_21C] edi +
jns loc_44D556  +
or [ebp+var_228] 0FFFFFFFFh +
jmp loc_44D556  +
imul ecx [ebp+var_228] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_228] eax +
jmp loc_44D54A  +
cmp dl 49h +
jz loc_44CD56  +
cmp dl 68h +
jz loc_44CD4E  +
mov eax [ebp+var_210] +
cmp dl 6Ch +
jz loc_44CD35  +
cmp dl 77h +
jnz loc_44D556  +
or ebx 800h +
jmp loc_44CC3C  +
cmp byte ptr [eax] 6Ch +
jnz loc_44CD46  +
inc eax  +
or ebx 1000h +
jmp loc_44CC3C  +
or ebx 10h +
jmp loc_44CC3C  +
or ebx 20h +
jmp loc_44CC4A  +
mov eax [ebp+var_210] +
mov al [eax] +
cmp al 36h +
jnz loc_44CD7E  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 34h +
jnz loc_44CD7E  +
mov eax edi +
add eax 2 +
or ebx 8000h +
jmp loc_44CC3C  +
cmp al 33h +
jnz loc_44CD9E  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 32h +
jnz loc_44CD9E  +
mov eax edi +
add eax 2 +
and ebx 0FFFF7FFFh +
jmp loc_44CC3C  +
cmp al 64h +
jz loc_44D550  +
cmp al 69h +
jz loc_44D550  +
cmp al 6Fh +
jz loc_44D550  +
cmp al 75h +
jz loc_44D550  +
cmp al 78h +
jz loc_44D550  +
cmp al 58h +
jz loc_44D550  +
xor eax eax +
mov [ebp+var_244] eax +
jmp loc_44CDDA  +
xor eax eax +
mov [ebp+var_238] eax +
lea eax [ebp+var_270] +
push eax  +
movzx eax dl +
push eax  +
call sub_450FB0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_44CE2E  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_248]  +
call sub_44D5C7  +
mov ecx [ebp+var_210] +
add esp 0Ch +
mov al [ecx] +
inc ecx  +
mov byte ptr [ebp+var_248] al +
mov [ebp+var_210] ecx +
test al al +
jz loc_44D592  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_248]  +
call sub_44D5C7  +
add esp 0Ch +
jmp loc_44D54A  +
movsx eax dl +
cmp eax 64h +
jg loc_44D027  +
jz loc_44D0B1  +
cmp eax 53h +
jg loc_44CF56  +
jz loc_44CEE7  +
sub eax 41h +
jz loc_44CE80  +
dec eax  +
dec eax  +
jz loc_44CECA  +
dec eax  +
dec eax  +
jz loc_44CE80  +
dec eax  +
dec eax  +
jnz loc_44D398  +
add dl 20h +
mov [ebp+var_25C] 1 +
mov [ebp+var_211] dl +
mov eax [ebp+var_228] +
lea esi [ebp+UsedDefaultChar] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_218] ebx +
mov [ebp+var_23C] ecx +
test eax eax +
jns loc_44D0ED  +
mov [ebp+var_228] 6 +
jmp loc_44D14A  +
test ebx 830h +
jnz loc_44CF74  +
or ebx 800h +
mov [ebp+var_218] ebx +
jmp loc_44CF74  +
test ebx 830h +
jnz loc_44CEFB  +
or ebx 800h +
mov [ebp+var_218] ebx +
mov edx [ebp+var_228] +
mov ecx 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_44CF0D  +
mov ecx edx +
mov esi [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_44D377  +
test esi esi +
jnz loc_44CF2E  +
mov esi off_4751D4 +
mov [ebp+var_238] 1 +
mov eax esi +
test ecx ecx +
jz loc_44CF4D  +
xor edx edx +
dec ecx  +
cmp [eax] dx +
jz loc_44CF4D  +
add eax 2 +
test ecx ecx +
jnz loc_44CF40  +
sub eax esi +
sar eax 1 +
jmp loc_44D392  +
sub eax 58h +
jz loc_44D20F  +
dec eax  +
dec eax  +
jz loc_44CFD3  +
sub eax 7 +
jz loc_44CE93  +
dec eax  +
dec eax  +
jnz loc_44D398  +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_44CFB5  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+UsedDefaultChar] +
push eax  +
lea eax [ebp+var_224] +
push eax  +
call sub_4579A0  +
add esp 10h +
test eax eax +
jz loc_44CFC8  +
mov [ebp+var_24C] 1 +
jmp loc_44CFC8  +
mov al [edi-4] +
mov byte ptr [ebp+UsedDefaultChar] al +
mov [ebp+var_224] 1 +
lea esi [ebp+UsedDefaultChar] +
jmp loc_44D398  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test eax eax +
jz loc_44D015  +
mov esi [eax+4] +
test esi esi +
jz loc_44D015  +
movsx eax word ptr [eax] +
test ebx 800h +
jz loc_44D008  +
cdq   +
sub eax edx +
mov [ebp+var_238] 1 +
sar eax 1 +
jmp loc_44D392  +
xor ecx ecx +
mov [ebp+var_238] ecx +
jmp loc_44D392  +
mov esi off_4751D0 +
push esi  +
call sub_442ED0  +
pop ecx  +
jmp loc_44D392  +
cmp eax 70h +
jg loc_44D213  +
jz loc_44D205  +
cmp eax 65h +
jl loc_44D398  +
cmp eax 67h +
jle loc_44CE93  +
cmp eax 69h +
jz loc_44D0B1  +
cmp eax 6Eh +
jz loc_44D077  +
cmp eax 6Fh +
jnz loc_44D398  +
mov [ebp+var_224] 8 +
test bl bl +
jns loc_44D0C4  +
or ebx 200h +
mov [ebp+var_218] ebx +
jmp loc_44D0C4  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
call sub_457867  +
test eax eax +
jz loc_44D592  +
mov eax [ebp+var_220] +
test bl 20h +
jz loc_44D0A0  +
mov [edi] ax +
jmp loc_44D0A2  +
mov [edi] eax +
mov [ebp+var_24C] 1 +
jmp loc_44D52B  +
or ebx 40h +
mov [ebp+var_218] ebx +
mov [ebp+var_224] 0Ah +
test ebx 8000h +
jnz loc_44D0D8  +
test ebx 1000h +
jz loc_44D266  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_21C] edi +
xor esi esi +
mov edi [edi-4] +
jmp loc_44D29B  +
jnz loc_44D100  +
cmp dl 67h +
jnz loc_44D14A  +
mov [ebp+var_228] 1 +
jmp loc_44D14A  +
cmp eax ecx +
jle loc_44D10C  +
mov eax ecx +
mov [ebp+var_228] eax +
cmp eax 0A3h +
jle loc_44D14A  +
lea edi [eax+15Dh] +
push edi  +
call sub_44727A  +
mov dl [ebp+var_211] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_44D13A  +
mov esi eax +
mov [ebp+var_23C] edi +
jmp loc_44D144  +
mov [ebp+var_228] 0A3h +
mov edi [ebp+var_21C] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_278] eax +
mov [ebp+var_21C] edi +
mov eax [edi-4] +
mov [ebp+var_274] eax +
lea eax [ebp+var_270] +
push eax  +
push [ebp+var_25C]  +
movsx eax dl +
push [ebp+var_228]  +
push eax  +
push [ebp+var_23C]  +
lea eax [ebp+var_278] +
push esi  +
push eax  +
push off_4752A8  +
call ds:DecodePointer  +
call eax  +
mov edi ebx +
add esp 1Ch +
and edi 80h +
jz loc_44D1C5  +
cmp [ebp+var_228] 0 +
jnz loc_44D1C5  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_4752B4  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_44D1EA  +
test edi edi +
jnz loc_44D1EA  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_4752B0  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_44D01B  +
or ebx 100h +
inc esi  +
mov [ebp+var_218] ebx +
jmp loc_44D01B  +
mov [ebp+var_228] 8 +
push 7  +
jmp loc_44D22F  +
sub eax 73h +
jz loc_44CEFB  +
dec eax  +
dec eax  +
jz loc_44D0BA  +
sub eax 3 +
jnz loc_44D398  +
push 27h  +
mov [ebp+var_224] 10h +
pop eax  +
mov [ebp+var_254] eax +
test bl bl +
jns loc_44D0C4  +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_234] 2 +
jmp loc_44D0C4  +
add edi 4 +
xor esi esi +
mov [ebp+var_21C] edi +
test bl 20h +
jz loc_44D287  +
test bl 40h +
jz loc_44D281  +
movsx eax word ptr [edi-4] +
jmp loc_44D28F  +
movzx eax word ptr [edi-4] +
jmp loc_44D28F  +
test bl 40h +
jz loc_44D296  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
jmp loc_44D29B  +
mov ecx [edi-4] +
mov edi esi +
test bl 40h +
jz loc_44D2BC  +
cmp edi esi +
jg loc_44D2BC  +
jl loc_44D2AA  +
cmp ecx esi +
jnb loc_44D2BC  +
neg ecx  +
adc edi esi +
neg edi  +
or ebx 100h +
mov [ebp+var_218] ebx +
test ebx 9000h +
jnz loc_44D2C6  +
mov edi esi +
mov edx [ebp+var_228] +
test edx edx +
jns loc_44D2D5  +
xor edx edx +
inc edx  +
jmp loc_44D2E9  +
and ebx 0FFFFFFF7h +
mov eax 200h +
mov [ebp+var_218] ebx +
cmp edx eax +
jle loc_44D2E9  +
mov edx eax +
mov eax ecx +
or eax edi +
jnz loc_44D2F5  +
mov [ebp+var_234] esi +
lea esi [ebp+var_D] +
mov eax edx +
dec edx  +
mov [ebp+var_228] edx +
test eax eax +
jg loc_44D30B  +
mov eax ecx +
or eax edi +
jz loc_44D348  +
mov eax [ebp+var_224] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_451000  +
add ecx 30h +
mov [ebp+var_27C] ebx +
mov [ebp+var_23C] eax +
mov edi edx +
cmp ecx 39h +
jle loc_44D337  +
add ecx [ebp+var_254] +
mov edx [ebp+var_228] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_23C] +
jmp loc_44D2F8  +
mov ebx [ebp+var_218] +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
mov [ebp+var_224] eax +
test ebx 200h +
jz loc_44D398  +
test eax eax +
jz loc_44D36B  +
cmp byte ptr [esi] 30h +
jz loc_44D398  +
dec esi  +
inc [ebp+var_224]  +
mov byte ptr [esi] 30h +
jmp loc_44D398  +
test esi esi +
jnz loc_44D381  +
mov esi off_4751D0 +
mov eax esi +
jmp loc_44D38C  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_44D390  +
inc eax  +
test ecx ecx +
jnz loc_44D385  +
sub eax esi +
mov [ebp+var_224] eax +
cmp [ebp+var_24C] 0 +
jnz loc_44D52B  +
test bl 40h +
jz loc_44D3DF  +
test ebx 100h +
jz loc_44D3BB  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_44D3D5  +
test bl 1 +
jz loc_44D3C9  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_44D3D5  +
test bl 2 +
jz loc_44D3DF  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_234] 1 +
mov edi [ebp+var_240] +
sub edi [ebp+var_224] +
mov eax [ebp+var_234] +
sub edi eax +
test bl 0Ch +
jnz loc_44D416  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_44D60F  +
mov eax [ebp+var_234] +
add esp 10h +
push [ebp+var_258]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
lea eax [ebp+var_22C] +
push eax  +
call sub_44D63B  +
add esp 14h +
test bl 8 +
jz loc_44D45B  +
test bl 4 +
jnz loc_44D45B  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 30h  +
call sub_44D60F  +
add esp 10h +
cmp [ebp+var_238] 0 +
mov eax [ebp+var_224] +
jz loc_44D4E7  +
test eax eax +
jle loc_44D4E7  +
mov ecx esi +
dec eax  +
mov [ebp+var_23C] eax +
movzx eax word ptr [ecx] +
add ecx 2 +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
mov [ebp+var_27C] ecx +
push eax  +
lea eax [ebp+var_260] +
push eax  +
call sub_4579A0  +
add esp 10h +
test eax eax +
jnz loc_44D4DC  +
cmp [ebp+var_260] eax +
jz loc_44D4DC  +
push [ebp+var_258]  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
lea eax [ebp+var_D+1] +
push [ebp+var_260]  +
push eax  +
call sub_44D63B  +
mov eax [ebp+var_23C] +
add esp 14h +
mov ecx [ebp+var_27C] +
test eax eax +
jnz loc_44D470  +
jmp loc_44D504  +
or ecx 0FFFFFFFFh +
mov [ebp+var_220] ecx +
jmp loc_44D50A  +
push [ebp+var_258]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
push esi  +
call sub_44D63B  +
add esp 14h +
mov ecx [ebp+var_220] +
test ecx ecx +
js loc_44D531  +
test bl 4 +
jz loc_44D531  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_44D60F  +
add esp 10h +
mov ecx [ebp+var_220] +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_44D550  +
push eax  +
call sub_4407E4  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_220] +
mov eax [ebp+var_210] +
mov dl [eax] +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_248] dl +
test dl dl +
jnz loc_44CB84  +
mov eax ecx +
cmp [ebp+var_264] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_44D584  +
mov ecx [ebp+var_268] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
or eax 0FFFFFFFFh +
jmp loc_44D56E  +
***
mov edx [ebp+arg_4] +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
sub esp 18h +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
pop ecx  +
push ecx  +
call sub_4491C0  +
xor ebx ebx +
pop ecx  +
retn   +
***
sub esp 0Ch +
mov esi eax +
test esi esi +
jnz loc_44E123  +
call sub_445D6B  +
pop esi  +
mov dword ptr [eax] 0Ch +
xor eax eax +
retn   +
cmp dword ptr [esi+44h] 0 +
jnz loc_44E138  +
push 24h  +
call sub_44727A  +
mov [esi+44h] eax +
pop ecx  +
test eax eax +
jz loc_44E114  +
mov eax [esi+44h] +
pop esi  +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_44E161  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_44E17D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_44E199  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_44E1DA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_44E1A7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_44E1D5  +
cmp edx [esp+arg_4] +
ja loc_44E1D5  +
jb loc_44E1D6  +
cmp eax [esp+arg_0] +
jbe loc_44E1D6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_44E1E4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
push ecx  +
sub esp 24h +
cmp dword_477ED0 0 +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
jnz loc_44E50E  +
push offset off_4751C0  +
jmp loc_44E510  +
push 0  +
call sub_44E2CA  +
add esp 14h +
pop ebp  +
retn   +
***
test eax eax +
jnz loc_44E524  +
pxor xmm0 xmm0 +
jmp loc_44E535  +
movd xmm0 eax +
punpcklbw xmm0 xmm0 +
punpcklwd xmm0 xmm0 +
pshufd xmm0 xmm0 +
push ebx  +
push ecx  +
mov ebx ecx +
and ebx 0Fh +
test ebx ebx +
jnz loc_44E5B8  +
mov ebx edx +
and edx 7Fh +
shr ebx 7 +
jz loc_44E57A  +
movdqa oword ptr [ecx] xmm0 +
movdqa oword ptr [ecx+10h] xmm0 +
movdqa oword ptr [ecx+20h] xmm0 +
movdqa oword ptr [ecx+30h] xmm0 +
movdqa oword ptr [ecx+40h] xmm0 +
movdqa oword ptr [ecx+50h] xmm0 +
movdqa oword ptr [ecx+60h] xmm0 +
movdqa oword ptr [ecx+70h] xmm0 +
lea ecx [ecx+80h] +
dec ebx  +
jnz loc_44E54A  +
test edx edx +
jz loc_44E5B5  +
mov ebx edx +
shr ebx 4 +
jz loc_44E594  +
jmp loc_44E58A  +
***
lea ecx [ecx+0] +
***
mov eax [ebp+arg_0] +
call sub_4491C0  +
pop ecx  +
retn   +
***
push esi  +
push esi  +
call sub_4491C0  +
pop ecx  +
retn   +
***
call sub_4491C0  +
pop ecx  +
retn   +
***
mov eax 1AF0h +
push edi  +
call sub_4491C0  +
mov esi [ebp+8] +
pop ecx  +
mov eax 1024h +
mov eax 1028h +
call sub_4491C0  +
pop ecx  +
retn   +
***
sub esp 10h +
call sub_4491C0  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
push ecx  +
inc dword_477088  +
call sub_4491C0  +
pop ecx  +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ecx ecx +
push edi  +
mov edi dword_478010 +
mov edx ecx +
push 20h  +
mov [ebp+var_4] ecx +
mov [ebp+var_8] ecx +
pop eax  +
jmp loc_44FF76  +
add esi 2 +
cmp [esi] ax +
jz loc_44FF73  +
movzx eax word ptr [esi] +
cmp eax 61h +
jz loc_44FFB2  +
cmp eax 72h +
jz loc_44FFAB  +
cmp eax 77h +
jz loc_44FFA4  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
xor eax eax +
jmp loc_4501EA  +
mov ebx 301h +
jmp loc_44FFB7  +
mov ebx ecx +
or edi 1 +
jmp loc_44FFBA  +
mov ebx 109h +
or edi 2 +
add esi 2 +
xor ecx ecx +
inc ecx  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_450193  +
mov [ebp+arg_4] 1000h +
test ecx ecx +
jz loc_4500E2  +
movzx eax ax +
cmp eax 53h +
jg loc_450071  +
jz loc_45005F  +
sub eax 20h +
jz loc_4500D3  +
sub eax 0Bh +
jz loc_450049  +
dec eax  +
jz loc_45003D  +
sub eax 18h +
jz loc_45002C  +
sub eax 0Ah +
jz loc_450021  +
sub eax 4 +
jnz loc_44FF8D  +
cmp [ebp+var_4] eax +
jnz loc_4500CD  +
mov [ebp+var_4] 1 +
or ebx 10h +
jmp loc_4500D3  +
or ebx 80h +
jmp loc_4500D3  +
test bl 40h +
jnz loc_4500CD  +
or ebx 40h +
jmp loc_4500D3  +
mov [ebp+var_8] 1 +
jmp loc_4500CD  +
test bl 2 +
jnz loc_4500CD  +
and ebx 0FFFFFFFEh +
and edi 0FFFFFFFCh +
or ebx 2 +
or edi 80h +
jmp loc_4500D3  +
cmp [ebp+var_4] 0 +
jnz loc_4500CD  +
mov [ebp+var_4] 1 +
or ebx 20h +
jmp loc_4500D3  +
sub eax 54h +
jz loc_4500C6  +
sub eax 0Eh +
jz loc_4500B6  +
dec eax  +
jz loc_4500A9  +
sub eax 0Bh +
jz loc_45009C  +
sub eax 6 +
jnz loc_44FF8D  +
test ebx 0C000h +
jnz loc_4500CD  +
or ebx 4000h +
jmp loc_4500D3  +
test edx edx +
jnz loc_4500CD  +
inc edx  +
and edi 0FFFFBFFFh +
jmp loc_4500D3  +
test edx edx +
jnz loc_4500CD  +
inc edx  +
or edi 4000h +
jmp loc_4500D3  +
test ebx 0C000h +
jnz loc_4500CD  +
or ebx 8000h +
jmp loc_4500D3  +
mov eax [ebp+arg_4] +
test ebx eax +
jz loc_4500D1  +
xor ecx ecx +
jmp loc_4500D3  +
or ebx eax +
add esi 2 +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_44FFD3  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_450193  +
push 20h  +
pop eax  +
jmp loc_4500F5  +
add esi 2 +
cmp [esi] ax +
jz loc_4500F2  +
push 3  +
push esi  +
push offset aCcs  +
call sub_454FAE  +
add esp 0Ch +
test eax eax +
jnz loc_44FF8D  +
push 20h  +
add esi 6 +
pop eax  +
jmp loc_45011D  +
add esi 2 +
cmp [esi] ax +
jz loc_45011A  +
cmp word ptr [esi] 3Dh +
jnz loc_44FF8D  +
add esi 2 +
cmp [esi] ax +
jz loc_45012C  +
push 5  +
push offset aUtf8_0  +
push esi  +
call sub_458967  +
add esp 0Ch +
test eax eax +
jnz loc_450153  +
add esi 0Ah +
or ebx 40000h +
jmp loc_450193  +
push 8  +
push offset aUtf16le  +
push esi  +
call sub_458967  +
add esp 0Ch +
test eax eax +
jnz loc_450172  +
add esi 10h +
or ebx 20000h +
jmp loc_450193  +
push 7  +
push offset aUnicode  +
push esi  +
call sub_458967  +
add esp 0Ch +
test eax eax +
jnz loc_44FF8D  +
add esi 0Eh +
or ebx 10000h +
push 20h  +
pop eax  +
jmp loc_45019B  +
add esi 2 +
cmp [esi] ax +
jz loc_450198  +
xor eax eax +
cmp [esi] ax +
jnz loc_44FF8D  +
push 180h  +
push [ebp+arg_8]  +
lea eax [ebp+arg_4] +
push ebx  +
push [ebp+arg_0]  +
push eax  +
call sub_458949  +
add esp 14h +
test eax eax +
jnz loc_44FF9D  +
mov eax [ebp+arg_C] +
inc dword_477088  +
xor ecx ecx +
mov [eax+4] ecx +
mov [eax] ecx +
mov [eax+8] ecx +
mov [eax+1Ch] ecx +
mov ecx [ebp+arg_4] +
mov [eax+0Ch] edi +
mov [eax+10h] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_4502D5  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_43F841  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_450200  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
call sub_4491C0  +
pop ecx  +
retn   +
***
sub esp 4 +
call sub_4491C0  +
call sub_4491C0  +
call sub_448313  +
mov dword_477F98 eax +
push 0  +
mov eax [ebp+arg_C] +
sub esp 2Ch +
push 0  +
sub esp 10h +
sub esp 2Ch +
sub esp 14h +
sub esp 2Ch +
sub esp 30h +
push 0  +
sub esp 10h +
push 0  +
push ecx  +
push 0  +
sub esp 10h +
mov eax [ebp+arg_0] +
push edi  +
push 10000h  +
push off_475290[esi]  +
sub esp 10h +
push 0  +
push [ebp+arg_0]  +
call sub_450FB0  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
or eax eax +
call sub_4491C0  +
pop ecx  +
retn   +
***
sub esp 28h +
cmp dword_477ED0 0 +
sub esp 10h +
mov eax [ebp+cchWideChar] +
sub esp 10h +
push 0  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_451C09  +
add esp 18h +
pop ebp  +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_4442E0  +
***
sub esp 488h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_44C] +
push ebx  +
push esi  +
mov [ebp+var_428] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_408] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_410] edi +
mov [ebp+var_454] eax +
mov esi eax +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
mov [ebp+var_418] eax +
mov [ebp+var_424] eax +
mov [ebp+var_458] eax +
mov [ebp+var_450] eax +
mov [ebp+var_42C] eax +
call sub_440099  +
call sub_445D6B  +
mov [ebp+var_460] eax +
cmp [ebp+var_428] ebx +
jnz loc_451DEE  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
cmp [ebp+var_440] bl +
jz loc_451DE6  +
mov eax [ebp+var_444] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_4528FE  +
mov edx [ebp+var_408] +
test edx edx +
jz loc_451DC4  +
movzx edx word ptr [edx] +
xor ecx ecx +
mov [ebp+var_40C] ecx +
mov eax ecx +
mov [ebp+var_420] eax +
mov [ebp+var_434] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_41C] edx +
test dx dx +
jz loc_4528EB  +
mov [ebp+var_470] 58h +
mov [ebp+var_474] 64h +
mov [ebp+var_478] 69h +
mov [ebp+var_468] 6Fh +
add [ebp+var_408] 2 +
test eax eax +
js loc_4528DC  +
push 58h  +
lea eax [edx-20h] +
pop edi  +
cmp ax di +
ja loc_451E77  +
movzx eax dx +
movzx eax ds:byte_469148[eax] +
and eax 0Fh +
jmp loc_451E79  +
xor eax eax +
mov edi [ebp+var_434] +
imul eax eax +
movzx edi ds:byte_469168[eax+edi] +
mov eax edi +
mov [ebp+var_434] edi +
mov edi [ebp+var_410] +
shr eax 4 +
mov [ebp+var_434] eax +
cmp eax 8 +
jz loc_45293B  +
cmp eax 7 +
ja loc_4528BE  +
jmp ds:off_452958[eax*4]  +
xor eax eax +
or [ebp+var_418] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_458] eax +
mov [ebp+var_450] eax +
mov [ebp+var_430] eax +
mov [ebp+var_424] eax +
mov [ebp+var_414] ebx +
mov [ebp+var_42C] eax +
jmp loc_4528BE  +
movzx eax dx +
push 20h  +
pop edx  +
sub eax edx +
jz loc_451F3E  +
sub eax 3 +
jz loc_451F36  +
sub eax 8 +
jz loc_451F31  +
dec eax  +
dec eax  +
jz loc_451F23  +
sub eax 3 +
mov eax [ebp+var_408] +
jnz loc_4528C4  +
or ebx 8 +
mov [ebp+var_414] ebx +
jmp loc_4528C4  +
or ebx 4 +
mov [ebp+var_414] ebx +
jmp loc_4528BE  +
or ebx 1 +
jmp loc_451F26  +
or ebx 80h +
jmp loc_451F26  +
or ebx 2 +
jmp loc_451F26  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_451F7A  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
mov [ebp+var_430] eax +
test eax eax +
jns loc_4528BE  +
or ebx 4 +
neg eax  +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
jmp loc_4528BE  +
imul ecx [ebp+var_430] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_430] eax +
jmp loc_4528B8  +
xor eax eax +
mov [ebp+var_418] eax +
jmp loc_4528BE  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_451FD4  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_418] eax +
test eax eax +
mov eax [ebp+var_408] +
mov [ebp+var_410] edi +
jns loc_4528C4  +
or [ebp+var_418] 0FFFFFFFFh +
jmp loc_4528C4  +
imul ecx [ebp+var_418] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_418] eax +
jmp loc_4528B8  +
movzx eax dx +
cmp eax 49h +
jz loc_45204D  +
cmp eax 68h +
jz loc_452043  +
push 6Ch  +
pop edx  +
cmp eax edx +
jz loc_45201C  +
cmp eax 77h +
mov eax [ebp+var_408] +
jnz loc_4528C4  +
or ebx 800h +
jmp loc_451F18  +
mov eax [ebp+var_408] +
cmp [eax] dx +
jnz loc_45203B  +
add eax 2 +
or ebx 1000h +
mov [ebp+var_408] eax +
jmp loc_451F18  +
or ebx 10h +
jmp loc_451F18  +
push 20h  +
pop eax  +
or ebx eax +
jmp loc_451F26  +
mov eax [ebp+var_408] +
movzx eax word ptr [eax] +
cmp eax 36h +
jnz loc_45207E  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 34h +
jnz loc_45207E  +
mov eax edi +
add eax 4 +
or ebx 8000h +
mov [ebp+var_408] eax +
jmp loc_451F18  +
cmp eax 33h +
jnz loc_4520A6  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 32h +
jnz loc_4520A6  +
mov eax edi +
add eax 4 +
and ebx 0FFFF7FFFh +
mov [ebp+var_408] eax +
jmp loc_451F18  +
cmp ax word ptr [ebp+var_474] +
jz loc_4528BE  +
cmp ax word ptr [ebp+var_478] +
jz loc_4528BE  +
cmp ax word ptr [ebp+var_468] +
jz loc_4528BE  +
cmp eax 75h +
jz loc_4528BE  +
cmp eax 78h +
jz loc_4528BE  +
cmp ax word ptr [ebp+var_470] +
jz loc_4528BE  +
xor eax eax +
mov [ebp+var_434] eax +
lea eax [ebp+var_420] +
mov [ebp+var_42C] 1 +
push eax  +
push [ebp+var_428]  +
push edx  +
call sub_452978  +
add esp 0Ch +
jmp loc_4528B8  +
movzx eax dx +
cmp eax 64h +
jg loc_45234E  +
jz loc_4523DC  +
cmp eax 53h +
jg loc_452259  +
jz loc_4521B3  +
sub eax 41h +
jz loc_45214B  +
dec eax  +
dec eax  +
jz loc_452197  +
dec eax  +
dec eax  +
jz loc_45214B  +
dec eax  +
dec eax  +
jnz loc_4526E5  +
push 20h  +
pop eax  +
add edx eax +
mov [ebp+var_458] 1 +
mov [ebp+var_41C] edx +
mov eax [ebp+var_418] +
lea esi [ebp+WideCharStr] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_414] ebx +
mov [ebp+var_40C] ecx +
test eax eax +
jns loc_452416  +
mov [ebp+var_418] 6 +
jmp loc_452476  +
test ebx 830h +
jnz loc_45227B  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
jmp loc_45227B  +
test ebx 830h +
jnz loc_4521C6  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
mov edx [ebp+var_418] +
mov edi 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_4521D8  +
mov edi edx +
mov esi [ebp+var_410] +
add esi 4 +
mov [ebp+var_410] esi +
mov esi [esi-4] +
test bl 20h +
jz loc_4526B2  +
test esi esi +
jnz loc_4521FD  +
mov esi off_4751D0 +
xor ecx ecx +
mov eax esi +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
test edi edi +
jle loc_4526E5  +
mov al [eax] +
test al al +
jz loc_4526E5  +
lea ecx [ebp+var_44C] +
movzx eax al +
push ecx  +
push eax  +
call sub_450FB0  +
pop ecx  +
test eax eax +
mov eax [ebp+var_41C] +
pop ecx  +
jz loc_45223C  +
inc eax  +
mov ecx [ebp+var_40C] +
inc eax  +
inc ecx  +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
cmp ecx edi +
jl loc_452215  +
jmp loc_4526E5  +
sub eax 58h +
jz loc_45253E  +
dec eax  +
dec eax  +
jz loc_4522F5  +
sub eax 7 +
jz loc_452160  +
dec eax  +
dec eax  +
jnz loc_4526E5  +
movzx eax word ptr [edi] +
add edi 4 +
mov [ebp+var_42C] 1 +
mov [ebp+var_410] edi +
mov [ebp+var_464] eax +
test bl 20h +
jz loc_4522E0  +
mov byte ptr [ebp+var_43C] al +
xor eax eax +
mov byte ptr [ebp+var_43C+1] al +
lea eax [ebp+var_44C] +
push eax  +
mov eax [ebp+var_44C] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_457F55  +
add esp 10h +
test eax eax +
jns loc_4522E7  +
mov [ebp+var_450] 1 +
jmp loc_4522E7  +
mov [ebp+WideCharStr] ax +
xor ecx ecx +
lea esi [ebp+WideCharStr] +
inc ecx  +
jmp loc_4526DF  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
test eax eax +
jz loc_45233A  +
mov esi [eax+4] +
test esi esi +
jz loc_45233A  +
test ebx 800h +
jz loc_45232A  +
movsx eax word ptr [eax] +
cdq   +
sub eax edx +
mov [ebp+var_42C] 1 +
mov ecx eax +
jmp loc_4526DD  +
xor ecx ecx +
mov [ebp+var_42C] ecx +
movsx ecx word ptr [eax] +
jmp loc_4526DF  +
mov esi off_4751D0 +
push esi  +
call sub_442ED0  +
pop ecx  +
mov ecx eax +
jmp loc_4526DF  +
cmp eax 70h +
jg loc_452542  +
jz loc_452534  +
cmp eax 65h +
jl loc_4526E5  +
cmp eax 67h +
jle loc_452160  +
push 69h  +
pop edx  +
cmp eax edx +
jz loc_4523DC  +
cmp eax 6Eh +
jz loc_4523A2  +
push 6Fh  +
pop edx  +
cmp eax edx +
jnz loc_4526E5  +
mov [ebp+var_41C] 8 +
test bl bl +
jns loc_4523EF  +
or ebx 200h +
mov [ebp+var_414] ebx +
jmp loc_4523EF  +
add edi 4 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
call sub_457867  +
test eax eax +
jz loc_45290F  +
mov eax [ebp+var_420] +
test bl 20h +
jz loc_4523CB  +
mov [edi] ax +
jmp loc_4523CD  +
mov [edi] eax +
mov [ebp+var_450] 1 +
jmp loc_45289F  +
or ebx 40h +
mov [ebp+var_414] ebx +
mov [ebp+var_41C] 0Ah +
test ebx 8000h +
jnz loc_452403  +
test ebx 1000h +
jz loc_45259A  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
jmp loc_4525C6  +
jnz loc_45242C  +
push 67h  +
pop eax  +
cmp dx ax +
jnz loc_452476  +
mov [ebp+var_418] 1 +
jmp loc_452476  +
cmp eax ecx +
jle loc_452438  +
mov eax ecx +
mov [ebp+var_418] eax +
cmp eax 0A3h +
jle loc_452476  +
lea edi [eax+15Dh] +
push edi  +
call sub_44727A  +
mov edx [ebp+var_41C] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_452466  +
mov esi eax +
mov [ebp+var_40C] edi +
jmp loc_452470  +
mov [ebp+var_418] 0A3h +
mov edi [ebp+var_410] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_488] eax +
mov [ebp+var_410] edi +
mov eax [edi-4] +
mov [ebp+var_484] eax +
lea eax [ebp+var_44C] +
push eax  +
push [ebp+var_458]  +
movsx eax dl +
push [ebp+var_418]  +
push eax  +
push [ebp+var_40C]  +
lea eax [ebp+var_488] +
push esi  +
push eax  +
push off_4752A8  +
call ds:DecodePointer  +
call eax  +
mov edi ebx +
add esp 1Ch +
and edi 80h +
jz loc_4524F1  +
cmp [ebp+var_418] 0 +
jnz loc_4524F1  +
lea eax [ebp+var_44C] +
push eax  +
push esi  +
push off_4752B4  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
push 67h  +
pop eax  +
cmp word ptr [ebp+var_41C] ax +
jnz loc_452519  +
test edi edi +
jnz loc_452519  +
lea eax [ebp+var_44C] +
push eax  +
push esi  +
push off_4752B0  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_452340  +
or ebx 100h +
inc esi  +
mov [ebp+var_414] ebx +
jmp loc_452340  +
mov [ebp+var_418] 8 +
push 7  +
jmp loc_45255E  +
sub eax 73h +
jz loc_4521C6  +
dec eax  +
dec eax  +
jz loc_4523E5  +
sub eax 3 +
jnz loc_4526E5  +
push 27h  +
mov [ebp+var_41C] 10h +
pop eax  +
mov [ebp+var_454] eax +
test bl bl +
jns loc_4523EF  +
push 30h  +
pop ecx  +
add eax 51h +
mov word ptr [ebp+var_438] cx +
mov word ptr [ebp+var_438+2] ax +
mov [ebp+var_424] 2 +
jmp loc_4523EF  +
add edi 4 +
mov [ebp+var_410] edi +
test bl 20h +
jz loc_4525B9  +
test bl 40h +
jz loc_4525B3  +
movsx eax word ptr [edi-4] +
jmp loc_4525C1  +
movzx eax word ptr [edi-4] +
jmp loc_4525C1  +
test bl 40h +
jz loc_4525CA  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
xor eax eax +
jmp loc_4525D1  +
mov ecx [edi-4] +
xor eax eax +
mov edi eax +
test bl 40h +
jz loc_4525F2  +
cmp edi eax +
jg loc_4525F2  +
jl loc_4525E0  +
cmp ecx eax +
jnb loc_4525F2  +
neg ecx  +
adc edi eax +
neg edi  +
or ebx 100h +
mov [ebp+var_414] ebx +
test ebx 9000h +
jnz loc_4525FC  +
mov edi eax +
mov edx [ebp+var_418] +
test edx edx +
jns loc_45260B  +
xor edx edx +
inc edx  +
jmp loc_452621  +
and ebx 0FFFFFFF7h +
mov [ebp+var_414] ebx +
cmp edx 200h +
jle loc_452621  +
mov edx 200h +
mov eax ecx +
or eax edi +
jnz loc_45262D  +
mov [ebp+var_424] eax +
lea esi [ebp+var_205] +
mov eax edx +
dec edx  +
mov [ebp+var_418] edx +
test eax eax +
jg loc_452646  +
mov eax ecx +
or eax edi +
jz loc_452683  +
mov eax [ebp+var_41C] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_451000  +
add ecx 30h +
mov [ebp+var_47C] ebx +
mov [ebp+var_40C] eax +
mov edi edx +
cmp ecx 39h +
jle loc_452672  +
add ecx [ebp+var_454] +
mov edx [ebp+var_418] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_40C] +
jmp loc_452633  +
mov ebx [ebp+var_414] +
lea ecx [ebp+var_205] +
sub ecx esi +
inc esi  +
mov [ebp+var_40C] ecx +
test ebx 200h +
jz loc_4526E5  +
test ecx ecx +
jz loc_4526A9  +
cmp byte ptr [esi] 30h +
jz loc_4526E5  +
dec esi  +
inc ecx  +
push 30h  +
pop eax  +
mov [esi] al +
jmp loc_4526DF  +
test esi esi +
jnz loc_4526BC  +
mov esi off_4751D4 +
mov [ebp+var_42C] 1 +
mov ecx esi +
test edi edi +
jz loc_4526DB  +
xor eax eax +
dec edi  +
cmp [ecx] ax +
jz loc_4526DB  +
add ecx 2 +
test edi edi +
jnz loc_4526CE  +
sub ecx esi +
sar ecx 1 +
mov [ebp+var_40C] ecx +
cmp [ebp+var_450] 0 +
jnz loc_45289F  +
test bl 40h +
jz loc_452717  +
test ebx 100h +
jz loc_452820  +
push 2Dh  +
pop eax  +
mov word ptr [ebp+var_438] ax +
mov [ebp+var_424] 1 +
push 20h  +
pop edx  +
mov edi [ebp+var_430] +
mov eax [ebp+var_424] +
sub edi ecx +
sub edi eax +
test bl 0Ch +
jnz loc_45274C  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push edx  +
call sub_4529AE  +
mov eax [ebp+var_424] +
add esp 10h +
push [ebp+var_460]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
lea eax [ebp+var_438] +
push eax  +
call sub_4529DA  +
add esp 14h +
test bl 8 +
jz loc_452793  +
test bl 4 +
jnz loc_452793  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 30h  +
pop eax  +
push eax  +
call sub_4529AE  +
add esp 10h +
cmp [ebp+var_42C] 0 +
mov eax [ebp+var_40C] +
jnz loc_452859  +
test eax eax +
jle loc_452859  +
mov ecx esi +
mov [ebp+var_41C] esi +
dec eax  +
mov [ebp+var_47C] eax +
lea eax [ebp+var_44C] +
push eax  +
mov eax [ebp+var_44C] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_464] +
push ecx  +
push eax  +
call sub_457F55  +
add esp 10h +
mov [ebp+var_46C] eax +
test eax eax +
jle loc_45284E  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push [ebp+var_464]  +
call sub_452978  +
mov ecx [ebp+var_41C] +
add esp 0Ch +
add ecx [ebp+var_46C] +
mov eax [ebp+var_47C] +
mov [ebp+var_41C] ecx +
test eax eax +
jg loc_4527B6  +
jmp loc_452876  +
test bl 1 +
jz loc_45282C  +
push 2Bh  +
jmp loc_452705  +
test bl 2 +
jz loc_452717  +
push 20h  +
pop edx  +
mov word ptr [ebp+var_438] dx +
mov [ebp+var_424] 1 +
jmp loc_45271A  +
or eax 0FFFFFFFFh +
mov [ebp+var_420] eax +
jmp loc_45287C  +
push [ebp+var_460]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
push esi  +
call sub_4529DA  +
add esp 14h +
mov eax [ebp+var_420] +
test eax eax +
js loc_45289F  +
test bl 4 +
jz loc_45289F  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 20h  +
pop eax  +
push eax  +
call sub_4529AE  +
add esp 10h +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_4528B8  +
push eax  +
call sub_4407E4  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_40C] +
mov eax [ebp+var_408] +
movzx edx word ptr [eax] +
mov eax [ebp+var_420] +
mov [ebp+var_41C] edx +
test dx dx +
jnz loc_451E4E  +
mov ecx [ebp+var_434] +
test ecx ecx +
jz loc_4528EB  +
cmp ecx 7 +
jnz loc_45293B  +
cmp [ebp+var_440] 0 +
jz loc_4528FE  +
mov ecx [ebp+var_444] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
cmp [ebp+var_440] 0 +
jz loc_451DE6  +
mov ecx [ebp+var_444] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_451DE6  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
cmp [ebp+var_440] 0 +
jmp loc_451DDA  +
***
mov eax [ebp+arg_4] +
push esi  +
push esi  +
mov esi [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_8] +
mov eax [esi] +
mov [ebp+arg_10] eax +
test byte ptr [edi+0Ch] 40h +
jz loc_452A00  +
cmp dword ptr [edi+8] 0 +
jnz loc_452A00  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
add [ecx] eax +
jmp loc_452A4F  +
and dword ptr [esi] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jle loc_452A4C  +
mov eax [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_0] +
dec ebx  +
push edi  +
movzx eax word ptr [eax] +
push eax  +
call sub_452978  +
mov eax [ebp+arg_C] +
add esp 0Ch +
add [ebp+arg_0] 2 +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_452A40  +
cmp dword ptr [esi] 2Ah +
jnz loc_452A44  +
push eax  +
push edi  +
push 3Fh  +
call sub_452978  +
mov eax [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jg loc_452A0E  +
cmp dword ptr [esi] 0 +
jnz loc_452A4E  +
mov eax [ebp+arg_10] +
mov [esi] eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
or eax eax +
push ecx  +
sub esp 10h +
sub esp 2Ch +
push ecx  +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
push esi  +
xor edx edx +
retn   +
***
mov eax [ebp+arg_0] +
call sub_4491C0  +
mov esi [ebp+8] +
test ebx ebx +
jz locret_453246  +
push 0  +
call sub_44617D  +
pop ecx  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx ds:dword_466D28 +
push esi  +
mov esi [ebp+arg_0] +
cmp [edx+4] esi +
jz loc_453296  +
imul eax ecx +
add edx 0Ch +
add eax [ebp+arg_4] +
cmp edx eax +
jb loc_453284  +
imul ecx ecx +
add ecx [ebp+arg_4] +
cmp edx ecx +
jnb loc_4532A9  +
cmp [edx+4] esi +
jnz loc_4532A9  +
mov eax edx +
jmp loc_4532AB  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4532C7  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4532CB  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_467BAC +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_45332E  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_453332  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_467BAC +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_453469  +
fxch  st(1) +
fstp  st +
retn   +
***
call sub_453469  +
jmp loc_4533AA  +
***
fstp  st +
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4533DF  +
mov byte ptr [ebp-90h] 7 +
retn   +
***
mov byte ptr [ebp-90h] 1 +
fadd  ds:dbl_467BA4 +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_45340D  +
mov byte ptr [ebp-90h] 7 +
jmp loc_453414  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_45344C  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_45344C  +
mov byte ptr [ebp-90h] 7 +
jmp loc_453453  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
or cl cl +
jz locret_453479  +
fchs   +
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_45958B  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_4534D1  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_453579  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_453589  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_4535B3  +
and ax 20h +
jz loc_4535B0  +
fstsw  ax +
and ax 20h +
jz loc_4535B0  +
mov eax 8 +
call sub_453497  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_4535DD  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_45361A  +
cmp eax 7FF00000h +
jz loc_453643  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_453618  +
and ax 20h +
jnz loc_453615  +
fstsw  ax +
and ax 20h +
jz loc_453615  +
mov eax 8 +
cmp edx 1Dh +
jz loc_45360E  +
call sub_453497  +
pop edx  +
retn   +
***
call sub_453480  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  ds:dbl_467BEC +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_467BDC +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_453602  +
fmul  ds:dbl_467BFC +
jmp loc_453602  +
***
fld  ds:dbl_467BE4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_467BD4 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_453602  +
fmul  ds:dbl_467BF4 +
jmp loc_453602  +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_4536AC  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_4536A4  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_4536AE  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_453694  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_471E48  +
push offset sub_449220  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_474390 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_453780  +
add esp 4 +
test eax eax +
jz loc_45375F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_453670  +
add esp 8 +
test eax eax +
jz loc_45375F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
sub esp 24h +
and dword_478B24 0 +
mov edx [ebp+arg_C] +
push ecx  +
sub esp 10h +
push esi  +
sub esp 14h +
push esi  +
sub esp 14h +
push esi  +
push ebx  +
push ecx  +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
sub esp 0B0h +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
sub esp 88h +
sub esp 0F4h +
push esi  +
sub esp 18h +
push ecx  +
sub esp 0F4h +
push esi  +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
sub esp 0F4h +
sub esp 0F4h +
mov edx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
push ecx  +
push esi  +
sub esp 18h +
sub esp 44h +
sub esp 44h +
sub esp 1Ch +
mov ecx [ebp+arg_0] +
sub esp 280h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_270] +
push ebx  +
push esi  +
mov [ebp+var_230] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_210] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_21C] edi +
mov [ebp+var_254] eax +
mov esi eax +
mov [ebp+var_218] ebx +
mov [ebp+var_240] eax +
mov [ebp+var_224] eax +
mov [ebp+var_234] eax +
mov [ebp+var_250] eax +
mov [ebp+var_248] eax +
mov [ebp+var_244] eax +
call sub_440099  +
call sub_445D6B  +
mov [ebp+var_25C] eax +
mov eax [ebp+var_230] +
test eax eax +
jz loc_45780B  +
test byte ptr [eax+0Ch] 40h +
jnz loc_456DC2  +
push eax  +
call sub_44E5E2  +
pop ecx  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_456D86  +
cmp ecx 0FFFFFFFEh +
jz loc_456D86  +
mov edx ecx +
sar eax 5 +
and edx 1Fh +
shl edx 6 +
add edx dword_477230[eax*4] +
jmp loc_456D8B  +
mov edx offset unk_474900 +
test byte ptr [edx+24h] 7Fh +
jnz loc_45780B  +
cmp ecx 0FFFFFFFFh +
jz loc_456DB3  +
cmp ecx 0FFFFFFFEh +
jz loc_456DB3  +
mov eax ecx +
and ecx 1Fh +
sar eax 5 +
shl ecx 6 +
add ecx dword_477230[eax*4] +
jmp loc_456DB8  +
mov ecx offset unk_474900 +
test byte ptr [ecx+24h] 80h +
jnz loc_45780B  +
mov edx [ebp+var_210] +
test edx edx +
jz loc_45780B  +
mov dl [edx] +
xor eax eax +
mov [ebp+var_228] eax +
mov ecx eax +
mov [ebp+var_220] ecx +
mov [ebp+var_238] eax +
mov [ebp+lpMem] eax +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_24C] dl +
test dl dl +
jz loc_457820  +
mov eax [ebp+var_210] +
inc eax  +
mov [ebp+var_210] eax +
test ecx ecx +
js loc_4577FC  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_456E2D  +
movsx eax dl +
movzx eax ds:byte_469148[eax] +
and eax 0Fh +
jmp loc_456E2F  +
xor eax eax +
mov edi [ebp+var_238] +
imul eax eax +
movzx edi ds:byte_469168[eax+edi] +
mov eax edi +
mov [ebp+var_238] edi +
mov edi [ebp+var_21C] +
shr eax 4 +
mov [ebp+var_238] eax +
cmp eax 8 +
jz loc_45780B  +
cmp eax 7 +
ja loc_4577E0  +
jmp ds:off_457847[eax*4]  +
xor eax eax +
or [ebp+var_224] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_250] eax +
mov [ebp+var_248] eax +
mov [ebp+var_240] eax +
mov [ebp+var_234] eax +
mov [ebp+var_218] ebx +
mov [ebp+var_244] eax +
jmp loc_4577E0  +
movsx eax dl +
sub eax 20h +
jz loc_456EF2  +
sub eax 3 +
jz loc_456EEA  +
sub eax 8 +
jz loc_456EE5  +
dec eax  +
dec eax  +
jz loc_456ED7  +
sub eax 3 +
mov eax [ebp+var_210] +
jnz loc_4577E6  +
or ebx 8 +
mov [ebp+var_218] ebx +
jmp loc_4577E6  +
or ebx 4 +
mov [ebp+var_218] ebx +
jmp loc_4577E0  +
or ebx 1 +
jmp loc_456EDA  +
or ebx 80h +
jmp loc_456EDA  +
or ebx 2 +
jmp loc_456EDA  +
cmp dl 2Ah +
jnz loc_456F2B  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
mov [ebp+var_240] eax +
test eax eax +
jns loc_4577E0  +
or ebx 4 +
neg eax  +
mov [ebp+var_218] ebx +
mov [ebp+var_240] eax +
jmp loc_4577E0  +
imul ecx [ebp+var_240] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_240] eax +
jmp loc_4577DA  +
xor eax eax +
mov [ebp+var_224] eax +
jmp loc_4577E0  +
cmp dl 2Ah +
jnz loc_456F82  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_224] eax +
test eax eax +
mov eax [ebp+var_210] +
mov [ebp+var_21C] edi +
jns loc_4577E6  +
or [ebp+var_224] 0FFFFFFFFh +
jmp loc_4577E6  +
imul ecx [ebp+var_224] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_224] eax +
jmp loc_4577DA  +
cmp dl 49h +
jz loc_456FE6  +
cmp dl 68h +
jz loc_456FDE  +
mov eax [ebp+var_210] +
cmp dl 6Ch +
jz loc_456FC5  +
cmp dl 77h +
jnz loc_4577E6  +
or ebx 800h +
jmp loc_456ECC  +
cmp byte ptr [eax] 6Ch +
jnz loc_456FD6  +
inc eax  +
or ebx 1000h +
jmp loc_456ECC  +
or ebx 10h +
jmp loc_456ECC  +
or ebx 20h +
jmp loc_456EDA  +
mov eax [ebp+var_210] +
mov al [eax] +
cmp al 36h +
jnz loc_45700E  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 34h +
jnz loc_45700E  +
mov eax edi +
add eax 2 +
or ebx 8000h +
jmp loc_456ECC  +
cmp al 33h +
jnz loc_45702E  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 32h +
jnz loc_45702E  +
mov eax edi +
add eax 2 +
and ebx 0FFFF7FFFh +
jmp loc_456ECC  +
cmp al 64h +
jz loc_4577E0  +
cmp al 69h +
jz loc_4577E0  +
cmp al 6Fh +
jz loc_4577E0  +
cmp al 75h +
jz loc_4577E0  +
cmp al 78h +
jz loc_4577E0  +
cmp al 58h +
jz loc_4577E0  +
xor eax eax +
mov [ebp+var_238] eax +
jmp loc_45706A  +
xor eax eax +
mov [ebp+var_244] eax +
lea eax [ebp+var_270] +
push eax  +
movzx eax dl +
push eax  +
call sub_450FB0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4570BE  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_24C]  +
call sub_44D5C7  +
mov ecx [ebp+var_210] +
add esp 0Ch +
mov al [ecx] +
inc ecx  +
mov byte ptr [ebp+var_24C] al +
mov [ebp+var_210] ecx +
test al al +
jz loc_45780B  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_24C]  +
call sub_44D5C7  +
add esp 0Ch +
jmp loc_4577DA  +
movsx eax dl +
cmp eax 64h +
jg loc_4572B7  +
jz loc_457341  +
cmp eax 53h +
jg loc_4571E6  +
jz loc_457177  +
sub eax 41h +
jz loc_457110  +
dec eax  +
dec eax  +
jz loc_45715A  +
dec eax  +
dec eax  +
jz loc_457110  +
dec eax  +
dec eax  +
jnz loc_457628  +
add dl 20h +
mov [ebp+var_250] 1 +
mov [ebp+var_211] dl +
mov eax [ebp+var_224] +
lea esi [ebp+UsedDefaultChar] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_218] ebx +
mov [ebp+var_23C] ecx +
test eax eax +
jns loc_45737D  +
mov [ebp+var_224] 6 +
jmp loc_4573DA  +
test ebx 830h +
jnz loc_457204  +
or ebx 800h +
mov [ebp+var_218] ebx +
jmp loc_457204  +
test ebx 830h +
jnz loc_45718B  +
or ebx 800h +
mov [ebp+var_218] ebx +
mov edx [ebp+var_224] +
mov ecx 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_45719D  +
mov ecx edx +
mov esi [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_457607  +
test esi esi +
jnz loc_4571BE  +
mov esi off_4751D4 +
mov [ebp+var_244] 1 +
mov eax esi +
test ecx ecx +
jz loc_4571DD  +
xor edx edx +
dec ecx  +
cmp [eax] dx +
jz loc_4571DD  +
add eax 2 +
test ecx ecx +
jnz loc_4571D0  +
sub eax esi +
sar eax 1 +
jmp loc_457622  +
sub eax 58h +
jz loc_45749F  +
dec eax  +
dec eax  +
jz loc_457263  +
sub eax 7 +
jz loc_457123  +
dec eax  +
dec eax  +
jnz loc_457628  +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_457245  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+UsedDefaultChar] +
push eax  +
lea eax [ebp+var_228] +
push eax  +
call sub_4579A0  +
add esp 10h +
test eax eax +
jz loc_457258  +
mov [ebp+var_248] 1 +
jmp loc_457258  +
mov al [edi-4] +
mov byte ptr [ebp+UsedDefaultChar] al +
mov [ebp+var_228] 1 +
lea esi [ebp+UsedDefaultChar] +
jmp loc_457628  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test eax eax +
jz loc_4572A5  +
mov esi [eax+4] +
test esi esi +
jz loc_4572A5  +
movsx eax word ptr [eax] +
test ebx 800h +
jz loc_457298  +
cdq   +
sub eax edx +
mov [ebp+var_244] 1 +
sar eax 1 +
jmp loc_457622  +
xor ecx ecx +
mov [ebp+var_244] ecx +
jmp loc_457622  +
mov esi off_4751D0 +
push esi  +
call sub_442ED0  +
pop ecx  +
jmp loc_457622  +
cmp eax 70h +
jg loc_4574A3  +
jz loc_457495  +
cmp eax 65h +
jl loc_457628  +
cmp eax 67h +
jle loc_457123  +
cmp eax 69h +
jz loc_457341  +
cmp eax 6Eh +
jz loc_457307  +
cmp eax 6Fh +
jnz loc_457628  +
mov [ebp+var_228] 8 +
test bl bl +
jns loc_457354  +
or ebx 200h +
mov [ebp+var_218] ebx +
jmp loc_457354  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
call sub_457867  +
test eax eax +
jz loc_45780B  +
mov eax [ebp+var_220] +
test bl 20h +
jz loc_457330  +
mov [edi] ax +
jmp loc_457332  +
mov [edi] eax +
mov [ebp+var_248] 1 +
jmp loc_4577BB  +
or ebx 40h +
mov [ebp+var_218] ebx +
mov [ebp+var_228] 0Ah +
test ebx 8000h +
jnz loc_457368  +
test ebx 1000h +
jz loc_4574F6  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_21C] edi +
xor esi esi +
mov edi [edi-4] +
jmp loc_45752B  +
jnz loc_457390  +
cmp dl 67h +
jnz loc_4573DA  +
mov [ebp+var_224] 1 +
jmp loc_4573DA  +
cmp eax ecx +
jle loc_45739C  +
mov eax ecx +
mov [ebp+var_224] eax +
cmp eax 0A3h +
jle loc_4573DA  +
lea edi [eax+15Dh] +
push edi  +
call sub_44727A  +
mov dl [ebp+var_211] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_4573CA  +
mov esi eax +
mov [ebp+var_23C] edi +
jmp loc_4573D4  +
mov [ebp+var_224] 0A3h +
mov edi [ebp+var_21C] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_280] eax +
mov [ebp+var_21C] edi +
mov eax [edi-4] +
mov [ebp+var_27C] eax +
lea eax [ebp+var_270] +
push eax  +
push [ebp+var_250]  +
movsx eax dl +
push [ebp+var_224]  +
push eax  +
push [ebp+var_23C]  +
lea eax [ebp+var_280] +
push esi  +
push eax  +
push off_4752A8  +
call ds:DecodePointer  +
call eax  +
mov edi ebx +
add esp 1Ch +
and edi 80h +
jz loc_457455  +
cmp [ebp+var_224] 0 +
jnz loc_457455  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_4752B4  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_45747A  +
test edi edi +
jnz loc_45747A  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_4752B0  +
call ds:DecodePointer  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_4572AB  +
or ebx 100h +
inc esi  +
mov [ebp+var_218] ebx +
jmp loc_4572AB  +
mov [ebp+var_224] 8 +
push 7  +
jmp loc_4574BF  +
sub eax 73h +
jz loc_45718B  +
dec eax  +
dec eax  +
jz loc_45734A  +
sub eax 3 +
jnz loc_457628  +
push 27h  +
mov [ebp+var_228] 10h +
pop eax  +
mov [ebp+var_254] eax +
test bl bl +
jns loc_457354  +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_234] 2 +
jmp loc_457354  +
add edi 4 +
xor esi esi +
mov [ebp+var_21C] edi +
test bl 20h +
jz loc_457517  +
test bl 40h +
jz loc_457511  +
movsx eax word ptr [edi-4] +
jmp loc_45751F  +
movzx eax word ptr [edi-4] +
jmp loc_45751F  +
test bl 40h +
jz loc_457526  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
jmp loc_45752B  +
mov ecx [edi-4] +
mov edi esi +
test bl 40h +
jz loc_45754C  +
cmp edi esi +
jg loc_45754C  +
jl loc_45753A  +
cmp ecx esi +
jnb loc_45754C  +
neg ecx  +
adc edi esi +
neg edi  +
or ebx 100h +
mov [ebp+var_218] ebx +
test ebx 9000h +
jnz loc_457556  +
mov edi esi +
mov edx [ebp+var_224] +
test edx edx +
jns loc_457565  +
xor edx edx +
inc edx  +
jmp loc_457579  +
and ebx 0FFFFFFF7h +
mov eax 200h +
mov [ebp+var_218] ebx +
cmp edx eax +
jle loc_457579  +
mov edx eax +
mov eax ecx +
or eax edi +
jnz loc_457585  +
mov [ebp+var_234] esi +
lea esi [ebp+var_D] +
mov eax edx +
dec edx  +
mov [ebp+var_224] edx +
test eax eax +
jg loc_45759B  +
mov eax ecx +
or eax edi +
jz loc_4575D8  +
mov eax [ebp+var_228] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_451000  +
add ecx 30h +
mov [ebp+var_274] ebx +
mov [ebp+var_23C] eax +
mov edi edx +
cmp ecx 39h +
jle loc_4575C7  +
add ecx [ebp+var_254] +
mov edx [ebp+var_224] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_23C] +
jmp loc_457588  +
mov ebx [ebp+var_218] +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
mov [ebp+var_228] eax +
test ebx 200h +
jz loc_457628  +
test eax eax +
jz loc_4575FB  +
cmp byte ptr [esi] 30h +
jz loc_457628  +
dec esi  +
inc [ebp+var_228]  +
mov byte ptr [esi] 30h +
jmp loc_457628  +
test esi esi +
jnz loc_457611  +
mov esi off_4751D0 +
mov eax esi +
jmp loc_45761C  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_457620  +
inc eax  +
test ecx ecx +
jnz loc_457615  +
sub eax esi +
mov [ebp+var_228] eax +
cmp [ebp+var_248] 0 +
jnz loc_4577BB  +
test bl 40h +
jz loc_45766F  +
test ebx 100h +
jz loc_45764B  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_457665  +
test bl 1 +
jz loc_457659  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_457665  +
test bl 2 +
jz loc_45766F  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_234] 1 +
mov edi [ebp+var_240] +
sub edi [ebp+var_228] +
mov eax [ebp+var_234] +
sub edi eax +
test bl 0Ch +
jnz loc_4576A6  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_44D60F  +
mov eax [ebp+var_234] +
add esp 10h +
push [ebp+var_25C]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
lea eax [ebp+var_22C] +
push eax  +
call sub_44D63B  +
add esp 14h +
test bl 8 +
jz loc_4576EB  +
test bl 4 +
jnz loc_4576EB  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 30h  +
call sub_44D60F  +
add esp 10h +
cmp [ebp+var_244] 0 +
mov eax [ebp+var_228] +
jz loc_457777  +
test eax eax +
jle loc_457777  +
mov ecx esi +
dec eax  +
mov [ebp+var_23C] eax +
movzx eax word ptr [ecx] +
add ecx 2 +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
mov [ebp+var_274] ecx +
push eax  +
lea eax [ebp+var_260] +
push eax  +
call sub_4579A0  +
add esp 10h +
test eax eax +
jnz loc_45776C  +
cmp [ebp+var_260] eax +
jz loc_45776C  +
push [ebp+var_25C]  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
lea eax [ebp+var_D+1] +
push [ebp+var_260]  +
push eax  +
call sub_44D63B  +
mov eax [ebp+var_23C] +
add esp 14h +
mov ecx [ebp+var_274] +
test eax eax +
jnz loc_457700  +
jmp loc_457794  +
or ecx 0FFFFFFFFh +
mov [ebp+var_220] ecx +
jmp loc_45779A  +
push [ebp+var_25C]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
push esi  +
call sub_44D63B  +
add esp 14h +
mov ecx [ebp+var_220] +
test ecx ecx +
js loc_4577C1  +
test bl 4 +
jz loc_4577C1  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_44D60F  +
add esp 10h +
mov ecx [ebp+var_220] +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_4577E0  +
push eax  +
call sub_4407E4  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_220] +
mov eax [ebp+var_210] +
mov dl [eax] +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_24C] dl +
test dl dl +
jnz loc_456E08  +
mov eax [ebp+var_238] +
test eax eax +
jz loc_457820  +
cmp eax 7 +
jz loc_457820  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
or eax 0FFFFFFFFh +
jmp loc_457822  +
mov eax ecx +
cmp [ebp+var_264] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_457838  +
mov ecx [ebp+var_268] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx dword_474390 +
sub esp 10h +
push 0  +
cmp dword_478B3C 0 +
sub esp 2Ch +
sub esp 28h +
push 0  +
call sub_4491C0  +
pop ecx  +
call sub_4491C0  +
mov esi [ebp-1Ch] +
pop ecx  +
retn   +
***
pop ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
sub esp 10h +
push 0  +
push ecx  +
sub esp 18h +
call sub_4491C0  +
cmp dword ptr [ebp-20h] 0 +
sub esp 38h +
push 1  +
push ecx  +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_8] esi +
jz loc_458B0D  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_458A52  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
mov eax 7FFFFFFFh +
jmp loc_458B0F  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_458A38  +
push [ebp+arg_C]  +
lea ecx [ebp+var_14] +
call sub_440099  +
mov eax [ebp+var_14] +
cmp [eax+0A8h] esi +
jnz loc_458AC0  +
mov ecx [ebp+arg_8] +
sub ebx edi +
push 41h  +
pop edx  +
push 5Ah  +
pop esi  +
mov [ebp+var_4] esi +
jmp loc_458A82  +
push 5Ah  +
pop esi  +
movzx eax word ptr [ebx+edi] +
cmp ax dx +
jb loc_458A98  +
cmp ax si +
ja loc_458A98  +
add eax 20h +
movzx esi ax +
jmp loc_458A9A  +
mov esi eax +
movzx eax word ptr [edi] +
cmp ax dx +
jb loc_458AAE  +
cmp ax word ptr [ebp+var_4] +
ja loc_458AAE  +
add eax 20h +
movzx eax ax +
add edi 2 +
dec ecx  +
jz loc_458AF8  +
test si si +
jz loc_458AF8  +
cmp si ax +
jz loc_458A7F  +
jmp loc_458AF8  +
lea eax [ebp+var_14] +
push eax  +
movzx eax word ptr [ebx] +
push eax  +
call sub_4592E1  +
movzx esi ax +
lea eax [ebp+var_14] +
push eax  +
movzx eax word ptr [edi] +
push eax  +
call sub_4592E1  +
add esp 10h +
movzx eax ax +
dec [ebp+arg_8]  +
lea ebx [ebx+2] +
lea edi [edi+2] +
jz loc_458AF8  +
test si si +
jz loc_458AF8  +
cmp si ax +
jz loc_458AC0  +
movzx eax ax +
movzx esi si +
sub esi eax +
cmp [ebp+var_8] 0 +
jz loc_458B0D  +
mov ecx [ebp+var_C] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_458B38  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_458B40  +
push large dword ptr fs:0  +
mov eax dword_474390 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_458BF7  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_458BCA  +
cmp esi [esp+18h+arg_4] +
jbe loc_458BF7  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_458BF5  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_458C35  +
mov eax [ebx+esi*4+8] +
call sub_458C54  +
jmp loc_458BAE  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_475720 +
mov ebx offset unk_475720 +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_477E98 1 +
jb loc_458D6E  +
mov edi [ebp+8] +
ja loc_458CED  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_458CCD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_458C9D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_458D2E  +
xor eax eax +
test edi 0Fh +
jz loc_458D14  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_458D2B  +
inc edi  +
test edi 0Fh +
jnz loc_458CFF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_458D67  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_458D53  +
bsf edx edi +
add eax edx +
jmp loc_458D2B  +
***
mov edx [ebp+arg_C] +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
movzx edi word ptr [eax+6] +
mov ebx 80000000h +
mov edx [eax+4] +
mov ecx edi +
mov eax [eax] +
and edi 8000h +
shr ecx 4 +
and edx 0FFFFFh +
and ecx 7FFh +
mov [ebp+var_8] edi +
mov esi ecx +
mov [ebp+var_4] eax +
test esi esi +
jz loc_458E9A  +
cmp esi 7FFh +
jz loc_458E93  +
lea eax [ecx+3C00h] +
jmp loc_458EB8  +
mov eax 7FFFh +
jmp loc_458EBB  +
test edx edx +
jnz loc_458EB0  +
test eax eax +
jnz loc_458EB0  +
mov eax [ebp+arg_0] +
and [eax+4] edx +
and [eax] edx +
mov [eax+8] di +
jmp loc_458F08  +
lea eax [ecx+3C01h] +
xor ebx ebx +
movzx eax ax +
mov ecx [ebp+var_4] +
mov esi ecx +
shr esi 15h +
shl edx 0Bh +
or esi edx +
shl ecx 0Bh +
or esi ebx +
mov [ebp+arg_4] eax +
mov ebx [ebp+arg_0] +
mov [ebx+4] esi +
mov [ebx] ecx +
test esi esi +
js loc_458F02  +
mov edi eax +
mov edx [ebx] +
add esi esi +
mov ecx edx +
add edi 0FFFFh +
shr ecx 1Fh +
or esi ecx +
lea eax [edx+edx] +
mov [ebx] eax +
jns loc_458EDE  +
mov [ebp+arg_4] edi +
mov edi [ebp+var_8] +
mov eax [ebp+arg_4] +
mov [ebx+4] esi +
or edi eax +
mov [ebx+8] di +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_474390 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+14h] +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov [ebp-24h] eax +
lea eax [ebp+8] +
push edi  +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_458E47  +
pop ecx  +
pop ecx  +
lea eax [ebp-20h] +
push eax  +
push 0  +
push 11h  +
sub esp 0Ch +
lea esi [ebp-30h] +
mov edi esp +
movs   +
movs   +
movs   +
call sub_459BA3  +
mov esi [ebp-24h] +
mov [ebx+8] eax +
movsx eax byte ptr [ebp-1Eh] +
mov [ebx] eax +
movsx eax word ptr [ebp-20h] +
mov [ebx+4] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_442E6C  +
add esp 24h +
test eax eax +
jnz loc_458F90  +
mov ecx [ebp-4] +
mov eax ebx +
pop edi  +
mov [ebx+0Ch] esi +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_43F841  +
mov esp ebp +
pop ebp  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_44A4FE  +
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_458FC4  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_458FE0  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_45900C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_459053  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_45901A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_459048  +
cmp edx [esp+arg_4] +
ja loc_459048  +
jb loc_459051  +
cmp eax [esp+arg_0] +
jbe loc_459051  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_459065  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_459079  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
mov ecx [ebp+arg_8] +
pop ecx  +
push ecx  +
sub esp 10h +
mov eax 0FFFFh +
mov eax [ebp+arg_4] +
push 0  +
push ecx  +
push 0Ah  +
push ecx  +
push ecx  +
push 0  +
sub esp 10h +
lea ecx [ebp+var_10] +
push esi  +
push edi  +
push [ebp+arg_C]  +
call sub_440099  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_45981E  +
xor esi esi +
jmp loc_45989E  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_45982C  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_459843  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
mov esi 7FFFFFFFh +
jmp loc_45989E  +
mov esi 7FFFFFFFh +
cmp eax esi +
jbe loc_45985E  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
jmp loc_45989E  +
mov edi [ebp+var_C] +
cmp dword ptr [edi+8] 0 +
jnz loc_459879  +
push [ebp+arg_C]  +
push eax  +
push edx  +
push ecx  +
call sub_45AFBD  +
add esp 10h +
mov esi eax +
jmp loc_45989E  +
push dword ptr [edi+4]  +
push eax  +
push edx  +
push eax  +
push ecx  +
push 1001h  +
push dword ptr [edi+21Ch]  +
lea eax [ebp+var_10] +
push eax  +
call sub_447C6E  +
add esp 20h +
test eax eax +
jz loc_45989E  +
lea esi [eax-2] +
cmp [ebp+var_4] 0 +
jz loc_4598AB  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax hObject +
xor eax eax +
sub esp 18h +
mov ecx [ebp+arg_0] +
push ebx  +
sub esp 88h +
mov ecx [ebp+arg_0] +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
push ecx  +
mov ax [ebp+arg_0] +
sub esp 0Ch +
push esi  +
mov ecx dword_477204 +
sub esp 10h +
cmp [ebp+arg_0] 0 +
push 0  +
sub esp 10h +
sub esp 10h +
cmp [ebp+arg_8] 0 +
jz loc_45B22F  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
lea ecx [ebp+var_10] +
call sub_440099  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
test edi edi +
jz loc_45B1BC  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_45B1BC  +
mov ecx [ebp+arg_8] +
cmp ecx esi +
jbe loc_45B1CE  +
call sub_445D6B  +
mov dword ptr [eax] 16h +
call sub_44A4EE  +
jmp loc_45B21B  +
mov eax [ebp+var_10] +
cmp dword ptr [eax+0A8h] 0 +
jnz loc_45B1E9  +
push ecx  +
push ebx  +
push edi  +
call sub_45B370  +
add esp 0Ch +
mov esi eax +
jmp loc_45B21B  +
sub edi ebx +
movzx eax byte ptr [edi+ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_444382  +
lea ecx [ebp+var_10] +
mov esi eax +
movzx eax byte ptr [ebx] +
push ecx  +
push eax  +
call sub_444382  +
add esp 10h +
inc ebx  +
dec [ebp+arg_8]  +
jz loc_45B219  +
test esi esi +
jz loc_45B219  +
cmp esi eax +
jz loc_45B1EB  +
sub esi eax +
cmp [ebp+var_4] 0 +
jz loc_45B228  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
jmp loc_45B231  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_477E98 1 +
jb loc_45B2A8  +
movzx eax [esp+arg_4] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+arg_0] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_45B297  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_45B273  +
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
xor eax eax +
mov al [esp+arg_4] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+4+arg_0] +
test edx 3 +
jz loc_45B2D5  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_45B322  +
test cl cl +
jz loc_45B31E  +
test edx 3 +
jnz loc_45B2C0  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_45B327  +
and eax 81010100h +
jz loc_45B2E0  +
and eax 1010100h +
jnz loc_45B31C  +
and esi 80000000h +
jnz loc_45B2E0  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
lea eax [edx-1] +
pop ebx  +
retn   +
mov eax [edx-4] +
cmp al bl +
jz loc_45B364  +
test al al +
jz loc_45B31C  +
cmp ah bl +
jz loc_45B35D  +
test ah ah +
jz loc_45B31C  +
shr eax 10h +
cmp al bl +
jz loc_45B356  +
test al al +
jz loc_45B31C  +
cmp ah bl +
jz loc_45B34F  +
test ah ah +
jz loc_45B31C  +
jmp loc_45B2E0  +
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push edi  +
call sub_45B424  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_442C20  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push 0  +
push [ebp+arg_0]  +
call off_475750  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_469294 +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [edx+8] +
mov ecx eax +
mov [esi+8] eax +
mov dword ptr [esi+0Ch] 0 +
test ecx ecx +
jz loc_45B4DE  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [esi+8] +
mov dword ptr [esi] offset off_469294 +
test ecx ecx +
jz loc_45B506  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [esi+0Ch] +
pop esi  +
test eax eax +
jz locret_45B515  +
push eax  +
call ds:LocalFree  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
mov dword ptr [esi] offset off_469294 +
test ecx ecx +
jz loc_45B539  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_45B547  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_45B556  +
push esi  +
call sub_43FFF6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
mov [ebp-0Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push offset unk_471ECC  +
push eax  +
mov dword ptr [ebp-10h] offset off_469294 +
mov dword ptr [ebp-4] 0 +
call sub_443DCE  +
lea ecx [ebp-1030h] +
lea ecx [ebp-104Ch] +
jmp sub_438033  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1054h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D228 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D25C +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D2E8 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45B628  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_4102E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D374 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 2Ch +
jmp loc_413E80  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D3A0 +
jmp sub_4442A9  +
***
mov eax [ebp-48h] +
and eax 1 +
jz locret_45B6D8  +
and dword ptr [ebp-48h] 0FFFFFFFEh +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx-4Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D3FC +
jmp sub_4442A9  +
***
mov eax [ebp-64h] +
mov eax [ebp-64h] +
and eax 2 +
jz locret_45B741  +
and dword ptr [ebp-64h] 0FFFFFFFDh +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D428 +
jmp sub_4442A9  +
***
mov eax [ebp+8] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D45C +
jmp sub_4442A9  +
***
lea ecx [ebp+14h] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D488 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45B858  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_412080  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D514 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D540 +
jmp sub_4442A9  +
***
lea ecx [ebp-10h] +
lea ecx [ebp+0Ch] +
jmp loc_414360  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D56C +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D5A0 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-40h] +
jmp sub_411E20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D5CC +
jmp sub_4442A9  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-3Ch] +
jmp loc_416430  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D600 +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-88h] +
lea ecx [ebp-28h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-17Ch] +
lea ecx [ebp-160h] +
lea ecx [ebp-0D0h] +
lea ecx [ebp-0E8h] +
lea ecx [ebp-88h] +
lea ecx [ebp-70h] +
lea ecx [ebp-28h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-184h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D638 +
jmp sub_4442A9  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-60h] +
lea ecx [ebp-70h] +
lea ecx [ebp-80h] +
lea ecx [ebp-94h] +
lea ecx [ebp-80h] +
jmp loc_412D50  +
***
mov edx [esp+8] +
lea eax [edx-0A4h] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D710 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45BABB  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 8 +
jmp sub_412A90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D764 +
jmp sub_4442A9  +
***
lea ecx [ebp-18h] +
jmp sub_414890  +
***
mov edx [esp+8] +
lea eax [edx-14h] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D790 +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D7BC +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D7E8 +
jmp sub_4442A9  +
***
lea ecx [ebp-10h] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D814 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D840 +
jmp sub_4442A9  +
***
lea ecx [ebp-1Ch] +
jmp sub_411E20  +
***
mov edx [esp+8] +
lea eax [edx-14h] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D898 +
jmp sub_4442A9  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-5Ch] +
jmp loc_416E50  +
***
mov edx [esp+8] +
lea eax [edx-5Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D8C4 +
jmp sub_4442A9  +
***
lea ecx [ebp-18h] +
jmp sub_43AC06  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D8F8 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp loc_4162D0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D924 +
jmp sub_4442A9  +
***
lea ecx [ebp-30h] +
jmp loc_416FB0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D950 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
jmp sub_411E20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D97C +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D9B0 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46D9DC +
jmp sub_4442A9  +
***
mov eax [ebp+8] +
mov eax [ebp-10h] +
mov ecx [ebp+8] +
jmp loc_411FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DA4C +
jmp sub_4442A9  +
***
mov eax [ebp-14h] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DA90 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
lea ecx [ebp+0Ch] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_413EA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DABC +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp loc_4162D0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DB08 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp loc_416430  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DB44 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp loc_416E50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DB80 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp loc_416FB0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DBBC +
jmp sub_4442A9  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-54h] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DBF8 +
jmp sub_4442A9  +
***
lea ecx [ebp-0B0h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DC2C +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45C018  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_412080  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DC68 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DC94 +
jmp sub_4442A9  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-74h] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DCEC +
jmp sub_4442A9  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-5Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DD30 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DD74 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DDDC +
jmp sub_4442A9  +
***
lea ecx [ebp-34h] +
jmp loc_41A240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DE44 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_412E90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DE70 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DEA4 +
jmp sub_4442A9  +
***
mov eax [ebp+8] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DED0 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp loc_41A240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DEFC +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DF38 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 30h +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DFA8 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 48h +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46DFEC +
jmp sub_4442A9  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
jmp sub_41B0E0  +
***
mov edx [esp+8] +
lea eax [edx-64h] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E038 +
jmp sub_4442A9  +
***
mov eax [ebp-48h] +
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
jmp sub_41B0E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E06C +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E0A8 +
jmp sub_4442A9  +
***
lea ecx [ebp+0Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 60h +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E0D4 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 60h +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E118 +
jmp sub_4442A9  +
***
lea ecx [ebp-1Ch] +
jmp sub_43981C  +
***
mov edx [esp+8] +
lea eax [edx-1Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E154 +
jmp sub_4442A9  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-2Ch] +
mov eax [ebp+8] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E180 +
jmp sub_4442A9  +
***
mov eax [ebp-1Ch] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E1BC +
jmp sub_4442A9  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-34h] +
lea ecx [ebp-24h] +
mov eax [ebp+0Ch] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E21C +
jmp sub_4442A9  +
***
lea ecx [ebp-5Ch] +
mov ecx [ebp-70h] +
lea ecx [ebp-44h] +
mov ecx [ebp-70h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
mov eax [ebp-60h] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E298 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 88h +
jmp loc_41C6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E338 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E36C +
jmp sub_4442A9  +
***
mov eax [ebp-7Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E3A0 +
jmp sub_4442A9  +
***
lea ecx [ebp-24h] +
jmp sub_439811  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E420 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp sub_41BEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E44C +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E478 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E4D8 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E540 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx-14h] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E574 +
jmp sub_4442A9  +
***
mov eax [ebp-7Ch] +
mov eax [ebp-78h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-84h] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E5A8 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-74h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-74h] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_43F841  +
add eax 8 +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E620 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E664 +
jmp sub_4442A9  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-44h] +
mov ecx [ebp-64h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E690 +
jmp sub_4442A9  +
***
lea ecx [ebp+0Ch] +
mov eax [ebp-58h] +
lea ecx [ebp-48h] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E6D4 +
jmp sub_4442A9  +
***
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-34h] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E778 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E7A4 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
lea ecx [ebp-0A0h] +
mov ecx [ebp-0C4h] +
lea ecx [ebp-0C0h] +
jmp loc_41EEB0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E7FC +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E840 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E8B0 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
lea ecx [ebp+0Ch] +
mov ecx [ebp-14h] +
add ecx 18h +
jmp loc_41BDF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E920 +
jmp sub_4442A9  +
***
lea ecx [ebp-7Ch] +
lea ecx [ebp-64h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-68h] +
jmp sub_412080  +
***
lea ecx [ebp-44h] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46E9B8 +
jmp sub_4442A9  +
***
lea ecx [ebp-38h] +
jmp sub_412080  +
***
lea ecx [ebp-44h] +
jmp sub_412080  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45CC8B  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 18h +
jmp sub_412A90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EA3C +
jmp sub_4442A9  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-60h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-74h] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EA68 +
jmp sub_4442A9  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-50h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-38h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EA9C +
jmp sub_4442A9  +
***
lea ecx [ebp-84h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EAE0 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EB24 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-44h] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EB8C +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EBB8 +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EC28 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EC6C +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46EC98 +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46ECD4 +
jmp sub_4442A9  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-14h] +
jmp sub_412080  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46ED20 +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46ED54 +
jmp sub_4442A9  +
***
lea ecx [ebp-60h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-60h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-60h] +
lea ecx [ebp-48h] +
mov ecx [ebp-170h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
lea ecx [ebp-90h] +
mov ecx [ebp-170h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-60h] +
lea ecx [ebp-78h] +
mov ecx [ebp-170h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-30h] +
mov ecx [ebp-170h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-60h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
lea ecx [ebp-90h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-90h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-90h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-30h] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-90h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-48h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-30h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-60h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-108h] +
lea ecx [ebp-78h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-120h] +
lea ecx [ebp-90h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-168h] +
lea ecx [ebp-108h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-150h] +
lea ecx [ebp-120h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-0F0h] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-0C0h] +
mov ecx [ebp-17Ch] +
mov ecx [ebp-17Ch] +
lea ecx [ebp-0A8h] +
lea ecx [ebp-78h] +
mov eax [ebp-170h] +
lea ecx [ebp-0D8h] +
lea ecx [ebp-78h] +
lea ecx [ebp-138h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-54h] +
lea ecx [ebp-0C0h] +
mov eax [ebp-170h] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-198h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46ED80 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 7DCh +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F3C0 +
jmp sub_4442A9  +
***
mov eax [ebp-44h] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F548 +
jmp sub_4442A9  +
***
mov eax [ebp-2Ch] +
and eax 1 +
jz locret_45D868  +
and dword ptr [ebp-2Ch] 0FFFFFFFEh +
mov ecx [ebp-30h] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F57C +
jmp sub_4442A9  +
***
lea ecx [ebp-8Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-74h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-0A0h] +
jmp loc_413910  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F5A8 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
add ecx 8 +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F648 +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F674 +
jmp sub_4442A9  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
mov eax [ebp-6Ch] +
and eax 1 +
jz locret_45D9A8  +
and dword ptr [ebp-6Ch] 0FFFFFFFEh +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx-7Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F6A0 +
jmp sub_4442A9  +
***
mov eax [ebp-94h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-2Ch] +
mov eax [ebp-90h] +
mov eax [ebp-94h] +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-0A4h] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F6F0 +
jmp sub_4442A9  +
***
lea ecx [ebp-80h] +
lea ecx [ebp-44h] +
lea ecx [ebp-74h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
mov eax [ebp-84h] +
and eax 1 +
jz locret_45DAB6  +
and dword ptr [ebp-84h] 0FFFFFFFEh +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx-94h] +
mov ecx [edx-98h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F758 +
jmp sub_4442A9  +
***
mov eax [ebp-98h] +
lea ecx [ebp-74h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-2Ch] +
mov eax [ebp-90h] +
mov eax [ebp-98h] +
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-0A4h] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F7B0 +
jmp sub_4442A9  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-70h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-11Ch] +
lea ecx [ebp-0D4h] +
jmp sub_429D40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-198h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F818 +
jmp sub_4442A9  +
***
lea ecx [ebp-44h] +
jmp sub_4101E0  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45DC28  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F898 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F8C4 +
jmp sub_4442A9  +
***
lea ecx [ebp-74h] +
mov ecx [ebp-80h] +
jmp sub_41B0E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F934 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F968 +
jmp sub_4442A9  +
***
lea ecx [ebp+8] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 48h +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F994 +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46F9D0 +
jmp sub_4442A9  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FA04 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FA64 +
jmp sub_4442A9  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FABC +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FB1C +
jmp sub_4442A9  +
***
lea ecx [ebp-24h] +
jmp loc_412E90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FB74 +
jmp sub_4442A9  +
***
mov eax [ebp-0C4h] +
lea ecx [ebp-0A0h] +
mov ecx [ebp-0C8h] +
lea ecx [ebp-0C0h] +
jmp loc_41EEB0  +
***
mov edx [esp+8] +
lea eax [edx-0C4h] +
mov ecx [edx-0C8h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FBA0 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FBE4 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FC54 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FCC4 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FD34 +
jmp sub_4442A9  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FD8C +
jmp sub_4442A9  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FDC0 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
lea ecx [ebp-2Ch] +
mov ecx [ebp-14h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FE0C +
jmp sub_4442A9  +
***
mov ecx [ebp-18h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FE48 +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FEB8 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
mov ecx [ebp-40h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FEEC +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov eax [ebp+8] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FF20 +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
mov eax dword_478314 +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-74h] +
mov ecx [ebp-78h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_46FF58 +
jmp sub_4442A9  +
***
mov eax dword_478314 +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470000 +
jmp sub_4442A9  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-48h] +
lea ecx [ebp-28h] +
lea ecx [ebp-48h] +
lea ecx [ebp-48h] +
mov ecx [ebp-84h] +
lea ecx [ebp-60h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E4h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470034 +
jmp sub_4442A9  +
***
mov eax dword_478310 +
lea ecx [ebp-2Ch] +
lea ecx [ebp-4Ch] +
jmp sub_438033  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470090 +
jmp sub_4442A9  +
***
lea ecx [ebp-268h] +
lea ecx [ebp-238h] +
lea ecx [ebp-250h] +
lea ecx [ebp-250h] +
lea ecx [ebp-250h] +
lea ecx [ebp-250h] +
jmp sub_4102E0  +
***
lea ecx [ebp-238h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx-264h] +
mov ecx [edx-268h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470154 +
jmp sub_4442A9  +
***
mov eax [ebp+8] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470180 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 98h +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4701AC +
jmp sub_4442A9  +
***
lea ecx [ebp-24Ch] +
lea ecx [ebp-234h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-250h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470200 +
jmp sub_4442A9  +
***
lea ecx [ebp-40h] +
jmp sub_4102E0  +
***
lea ecx [ebp-0C4h] +
jmp loc_430240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C0h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470260 +
jmp sub_4442A9  +
***
lea ecx [ebp-22Ch] +
lea ecx [ebp-2A4h] +
lea ecx [ebp-274h] +
lea ecx [ebp-25Ch] +
lea ecx [ebp-2BCh] +
lea ecx [ebp-244h] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-28Ch] +
lea ecx [ebp-2D4h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2F8h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470290 +
jmp sub_4442A9  +
***
lea ecx [ebp-2048h] +
lea ecx [ebp-2030h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-206Ch] +
mov ecx [edx-2070h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470328 +
jmp sub_4442A9  +
***
lea ecx [ebp-74h] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx-74h] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_47035C +
jmp sub_4442A9  +
***
lea ecx [ebp-1030h] +
lea ecx [ebp-1078h] +
lea ecx [ebp-1060h] +
lea ecx [ebp-1048h] +
lea ecx [ebp-1090h] +
lea ecx [ebp-1090h] +
lea ecx [ebp-1090h] +
lea ecx [ebp-1090h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-10B4h] +
mov ecx [edx-10B8h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4703A0 +
jmp sub_4442A9  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp loc_431160  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470408 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470444 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_431140  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4704B4 +
jmp sub_4442A9  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-44h] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx-54h] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4704F8 +
jmp sub_4442A9  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-74h] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_47052C +
jmp sub_4442A9  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx-5Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_43F841  +
add eax 0Ch +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470570 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4705B4 +
jmp sub_4442A9  +
***
mov eax dword_478B20 +
and eax 0FFFFFFFEh +
mov dword_478B20 eax +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_47060C +
jmp sub_4442A9  +
***
lea ecx [ebp-20h] +
jmp sub_41BEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470638 +
jmp sub_4442A9  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470664 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4706C4 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_47071C +
jmp sub_4442A9  +
***
lea ecx [ebp-2Ch] +
jmp sub_4102E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-8] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470774 +
jmp sub_4442A9  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
jmp sub_4102E0  +
***
lea ecx [ebp-14h] +
jmp sub_43AC06  +
***
mov ecx [ebp+0Ch] +
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_43697D  +
***
mov ecx [ebp+0Ch] +
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_43697D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470874 +
jmp sub_4442A9  +
***
mov ecx [ebp-10h] +
jmp sub_413EA0  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
sub ecx 60h +
jmp sub_43697D  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
sub ecx 5Ch +
jmp sub_43697D  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
jmp loc_411FD0  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
mov eax [ebp-140h] +
lea ecx [ebp-1DCh] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
pop ecx  +
mov eax [ebp-10h] +
mov ecx [ebp+8] +
jmp loc_436AB4  +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov eax [ebp-44h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_4101E0  +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov eax [ebp-264h] +
lea ecx [ebp-248h] +
lea ecx [ebp-230h] +
lea ecx [ebp-260h] +
lea ecx [ebp-230h] +
lea ecx [ebp-230h] +
jmp sub_4101E0  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_45EDE6  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4101E0  +
retn   +
***
mov eax [ebp-10h] +
lea ecx [ebp-1Ch] +
jmp loc_43802E  +
***
mov eax [ebp-10h] +
lea ecx [ebp-1Ch] +
jmp loc_43802E  +
***
mov ecx [ebp-14h] +
lea ecx [ebp-20h] +
jmp sub_44067A  +
***
mov ecx [ebp-10h] +
jmp loc_43802E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470CD0 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_470D28 +
jmp sub_4442A9  +
***
lea ecx [ebp+10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-24h] +
mov ecx [ebp-1Ch] +
mov ecx [ebp-2Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-18h] +
mov ecx [ebp-20h] +
mov ecx [ebp-28h] +
mov ecx [ebp-30h] +
jmp sub_4101E0  +
***
lea ecx [ebp+0D4h] +
lea ecx [ebp+0BCh] +
lea ecx [ebp+0A4h] +
lea ecx [ebp+8Ch] +
lea ecx [ebp+74h] +
lea ecx [ebp+5Ch] +
lea ecx [ebp+44h] +
lea ecx [ebp+2Ch] +
lea ecx [ebp+10h] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
lea ecx [ebp+8] +
pop ecx  +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
mov ecx [ebp-78h] +
jmp sub_4101E0  +
***
lea ecx [ebp+24h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
mov ecx [ebp-44h] +
jmp sub_4101E0  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
mov ecx [ebp-44h] +
mov ecx [ebp-44h] +
jmp sub_4101E0  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-28h] +
mov ecx [ebp-2Ch] +
lea ecx [ebp-28h] +
mov ecx [ebp-2Ch] +
jmp sub_4101E0  +
***
lea ecx [ebp+0Ch] +
mov ecx [ebp-10h] +
jmp sub_4101E0  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-28h] +
jmp sub_4102E0  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-34h] +
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
lea ecx [ebp-20h] +
jmp sub_414890  +
***
pop ecx  +
mov ecx [ebp-10h] +
add ecx 4 +
jmp loc_4392D0  +
***
mov ecx [ebp-30h] +
mov ecx [ebp-30h] +
mov ecx [ebp-2Ch] +
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp loc_4392D0  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp sub_4101E0  +
***
mov ecx [ebp+8] +
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_43697D  +
***
mov ecx [ebp+8] +
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_43697D  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-28h] +
jmp sub_4101E0  +
***
lea ecx [ebp-438h] +
lea ecx [ebp-450h] +
lea ecx [ebp-438h] +
jmp sub_4102E0  +
***
lea ecx [ebp-30h] +
jmp sub_4101E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4713F4 +
jmp sub_4442A9  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-28h] +
lea ecx [ebp-0A0h] +
mov eax [ebp-0B0h] +
and eax 1 +
jz locret_45F522  +
and dword ptr [ebp-0B0h] 0FFFFFFFEh +
mov ecx [ebp-0B4h] +
jmp sub_4101E0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0B8h] +
xor ecx eax +
call sub_43F841  +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_471348 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4714AC +
jmp sub_4442A9  +
***
call nullsub_1  +
call nullsub_1  +
pop ecx  +
pop ecx  +
retn   +
***
call nullsub_1  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-450h] +
lea ecx [ebp-438h] +
lea ecx [ebp-468h] +
lea ecx [ebp-438h] +
lea ecx [ebp-468h] +
jmp sub_4101E0  +
***
lea ecx [ebp-10h] +
jmp sub_43AC06  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_471610 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_471774 +
jmp sub_4442A9  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_4716C4 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_47171C +
jmp sub_4442A9  +
***
mov eax dword_47706C +
mov eax [ebp-60h] +
push eax  +
call sub_43FFF6  +
pop ecx  +
retn   +
***
aas   +
cld   +
dec dword ptr [ebp-2A1643B3h]  +
or bh bl +
dec dword ptr [ebp-32162BB3h]  +
or bh bl +
dec dword ptr [ebp-3A162BB3h]  +
or bh bl +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
pushf   +
mov ecx [edx-68h] +
xor ecx eax +
call sub_43F841  +
add eax 10h +
mov ecx [edx-4] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_471634 +
jmp sub_4442A9  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_43F841  +
mov eax offset unk_471A60 +
jmp sub_4442A9  +
***
mov off_475860 offset off_46271C +
retn   +
***
mov off_475868 offset off_46271C +
retn   +
***
mov off_475864 offset off_46271C +
retn   +
***
mov ecx offset dword_478260 +
jmp sub_41BD40  +
***
push ecx  +
cmp dword_475830 10h +
jb loc_45F7DB  +
push esi  +
mov esi dword_47581C +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_47581C  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_475830 0Fh +
mov dword_47582C 0 +
mov byte ptr dword_47581C 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_4757B8 10h +
jb loc_45F83B  +
push esi  +
mov esi dword_4757A4 +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_4757A4  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_4757B8 0Fh +
mov dword_4757B4 0 +
mov byte ptr dword_4757A4 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_475800 10h +
jb loc_45F89B  +
push esi  +
mov esi dword_4757EC +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_4757EC  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_475800 0Fh +
mov dword_4757FC 0 +
mov byte ptr dword_4757EC 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_475818 10h +
jb loc_45F8FB  +
push esi  +
mov esi dword_475804 +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_475804  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_475818 0Fh +
mov dword_475814 0 +
mov byte ptr dword_475804 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_4757D0 10h +
jb loc_45F95B  +
push esi  +
mov esi dword_4757BC +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_4757BC  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_4757D0 0Fh +
mov dword_4757CC 0 +
mov byte ptr dword_4757BC 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_4757E8 10h +
jb loc_45F9BB  +
push esi  +
mov esi dword_4757D4 +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_4757D4  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_4757E8 0Fh +
mov dword_4757E4 0 +
mov byte ptr dword_4757D4 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx offset dword_478320 +
jmp sub_425330  +
***
mov eax dword_478174 +
sub esp 8 +
mov ecx offset dword_478174 +
push esi  +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_8] +
push eax  +
call sub_41D740  +
mov esi dword_478174 +
lea ecx [ebp-1] +
call sub_410BA0  +
push ecx  +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push ecx  +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push ecx  +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp dword_475850 10h +
jb loc_45FA9B  +
push esi  +
mov esi dword_47583C +
lea ecx [ebp-1] +
call sub_410BA0  +
push offset dword_47583C  +
lea ecx [ebp-1] +
call nullsub_2  +
lea ecx [ebp-1] +
call sub_410BA0  +
push esi  +
call sub_43FFF6  +
add esp 4 +
pop esi  +
mov dword_475850 0Fh +
mov dword_47584C 0 +
mov byte ptr dword_47583C 0 +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax dword_478B18 +
mov ecx offset dword_474160 +
mov ecx offset dword_474130 +
mov ecx offset dword_474118 +
mov ecx offset dword_474148 +
mov ecx offset unk_476EBE +
mov ecx offset dword_476EC8 +
mov ecx offset unk_476F10 +
mov ecx offset unk_476FC3 +
mov ecx offset unk_476FC0 +
jmp loc_43ABDE  +
***
pop edi  +
pop esi  +
retn   +
***
mov ecx offset unk_47801C +
jmp loc_45B447  +
***
push offset unk_475740  +
call ds:VariantClear  +
retn   +
***
